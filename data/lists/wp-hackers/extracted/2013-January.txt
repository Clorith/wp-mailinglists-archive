From ian at iandunn.name  Tue Jan  1 22:42:09 2013
From: ian at iandunn.name (Ian Dunn)
Date: Tue, 01 Jan 2013 14:42:09 -0800
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
Message-ID: <50E36641.3070405@iandunn.name>

I just spent a couple hours tracking down a problem that was reported 
with one of my plugins, and it turns out that the latest version of 
Jetpack is causing problems with a lot of different plugins. I've seen 
reports of at least half a dozen different ones, so I thought I'd pass 
these links along in case it might save anyone else some time:

http://wordpress.org/support/topic/jetpack-204-breaks-nextgen-galleries
http://wordpress.org/support/topic/jetpack-204-upgrade-breaks-several-plugins

From ipstenu at ipstenu.org  Tue Jan  1 23:02:54 2013
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Tue, 01 Jan 2013 15:02:54 -0800
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <50E36641.3070405@iandunn.name>
References: <50E36641.3070405@iandunn.name>
Message-ID: <50E36B1E.7030206@ipstenu.org>

Just in case someone doesn't know, when you find plugin bugs, remember 
to tell the plugin devs directly. In the case of Jetpack it's this:

http://en.support.wordpress.com/contact/?jetpack=needs-service

(I know Ian knows that, but just as a reminder in general ;) )

Ian Dunn wrote:
>
> I just spent a couple hours tracking down a problem that was reported
> with one of my plugins, and it turns out that the latest version of
> Jetpack is causing problems with a lot of different plugins. I've seen
> reports of at least half a dozen different ones, so I thought I'd pass
> these links along in case it might save anyone else some time:
>
> http://wordpress.org/support/topic/jetpack-204-breaks-nextgen-galleries
> http://wordpress.org/support/topic/jetpack-204-upgrade-breaks-several-plugins 
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From otto at ottodestruct.com  Tue Jan  1 23:44:41 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 1 Jan 2013 17:44:41 -0600
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <50E36B1E.7030206@ipstenu.org>
References: <50E36641.3070405@iandunn.name> <50E36B1E.7030206@ipstenu.org>
Message-ID: <CAD-FghwLQvs3mp1c5bPfovXHYJrzBiFXq48DA7ALS4RH+VjfoQ@mail.gmail.com>

The bug is the same one that's plagued me for years with SFC and SGC.

Basically, NextGen is just totally terrible and is doing-it-wrong. Not
a bug in Jetpack.

-Otto


On Tue, Jan 1, 2013 at 5:02 PM, Mika A Epstein <ipstenu at ipstenu.org> wrote:
> Just in case someone doesn't know, when you find plugin bugs, remember to
> tell the plugin devs directly. In the case of Jetpack it's this:
>
> http://en.support.wordpress.com/contact/?jetpack=needs-service
>
> (I know Ian knows that, but just as a reminder in general ;) )
>
>
> Ian Dunn wrote:
>>
>>
>> I just spent a couple hours tracking down a problem that was reported
>> with one of my plugins, and it turns out that the latest version of
>> Jetpack is causing problems with a lot of different plugins. I've seen
>> reports of at least half a dozen different ones, so I thought I'd pass
>> these links along in case it might save anyone else some time:
>>
>> http://wordpress.org/support/topic/jetpack-204-breaks-nextgen-galleries
>>
>> http://wordpress.org/support/topic/jetpack-204-upgrade-breaks-several-plugins
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From otto at ottodestruct.com  Tue Jan  1 23:59:27 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 1 Jan 2013 17:59:27 -0600
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <50E36641.3070405@iandunn.name>
References: <50E36641.3070405@iandunn.name>
Message-ID: <CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>

Ian, the bug is actually in your plugin, and how you're using shortcodes.

In http://plugins.svn.wordpress.org/basic-google-maps-placemarks/trunk/core.php
you have a function called mapShortcodeCalled() which says it is
supposed to "Checks the current posts to see if they contain the map
shortcode."

However, what it's actually doing is to set up the post data and then
call get_the_content(). This would be fine if you wanted to get the
resulting HTML output, because what you're actually doing with that
call is to have it process the shortcodes.

Instead, you should examine the post->post_content directly to
determine if the shortcode is contained in it. Although honestly, I'm
not sure why you'd go to all that trouble. You can enqueue things like
scripts and such in shortcode functions directly now, they'll get
included in the footer instead of the header, so you don't need to
pre-process the content to determine that sort of thing.

But basically, shortcodes and filters need to have a specific
behaviorism that you're not really adhering to very well, and that is
this: No side effects. A filter should filter some input in a certain
way, and do it every time, because it can be called more than once. A
shortcode is really just a special case of filter, it should take the
shortcode as input and return the resulting HTML to be put into the
post. By making filters or shortcodes have dependencies outside of
their inputs, then you introduce strange cases like this.

Jetpack is doing it right here. They want to get the_content, so they
run it through the the_content filter. This is not unusual or
unexpected. What is unexpected is the way your plugin behaves oddly
when some other piece of code is filtering something with the_content
filter. Your plugin is making assumptions about the ordering of
filters and when the_content runs that are not always true, basically.
Moreso since any theme can call the_content any number of times, and
in any place.

-Otto


On Tue, Jan 1, 2013 at 4:42 PM, Ian Dunn <ian at iandunn.name> wrote:
> I just spent a couple hours tracking down a problem that was reported with
> one of my plugins, and it turns out that the latest version of Jetpack is
> causing problems with a lot of different plugins. I've seen reports of at
> least half a dozen different ones, so I thought I'd pass these links along
> in case it might save anyone else some time:
>
> http://wordpress.org/support/topic/jetpack-204-breaks-nextgen-galleries
> http://wordpress.org/support/topic/jetpack-204-upgrade-breaks-several-plugins
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From joelfisher at gmail.com  Wed Jan  2 00:17:56 2013
From: joelfisher at gmail.com (Joel Fisher)
Date: Tue, 1 Jan 2013 19:17:56 -0500
Subject: [wp-hackers] WordPress and JPanelMenu
Message-ID: <CAEitD+rehHzjOSkoMgGQNP5av7z+1VBmfrFqhi191mWsf=yMoA@mail.gmail.com>

Anyone get JPanelMenu ( http://jpanelmenu.com/ ) working with WordPress,
specifically WordPress menus?





joel.fisher
www.flushinc.com

Linkedin: http://www.linkedin.com/in/jfisher
Follow: www.twitter.com/joelmoney

From ian at iandunn.name  Wed Jan  2 00:44:07 2013
From: ian at iandunn.name (Ian Dunn)
Date: Tue, 01 Jan 2013 16:44:07 -0800
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
Message-ID: <50E382D7.5020400@iandunn.name>

Er, my bad. I'll change it to check $post directly. Thanks for the 
detailed explanation.

The reason I'm checking if the shortcode is called is to avoid loading 
CSS and JavaScript files on pages where the shortcode isn't used 
<http://wordpress.stackexchange.com/questions/20854/conditionally-loading-javascript-css-for-shortcodes>. 
I didn't realize that we can use wp_enqueue_script() directly within the 
shortcode callback 
<http://scribu.net/wordpress/conditional-script-loading-revisited.html> 
now, but I originally wrote that method about 6 months before 3.3 came 
out. I could start doing that now for the JavaScript, but the CSS still 
needs to be enqueued inside the head tag, so it wouldn't really save me 
anything.


On 01/01/2013 03:59 PM, Otto wrote:
> Ian, the bug is actually in your plugin, and how you're using shortcodes.
>
> In http://plugins.svn.wordpress.org/basic-google-maps-placemarks/trunk/core.php
> you have a function called mapShortcodeCalled() which says it is
> supposed to "Checks the current posts to see if they contain the map
> shortcode."
>
> However, what it's actually doing is to set up the post data and then
> call get_the_content(). This would be fine if you wanted to get the
> resulting HTML output, because what you're actually doing with that
> call is to have it process the shortcodes.
>
> Instead, you should examine the post->post_content directly to
> determine if the shortcode is contained in it. Although honestly, I'm
> not sure why you'd go to all that trouble. You can enqueue things like
> scripts and such in shortcode functions directly now, they'll get
> included in the footer instead of the header, so you don't need to
> pre-process the content to determine that sort of thing.
>
> But basically, shortcodes and filters need to have a specific
> behaviorism that you're not really adhering to very well, and that is
> this: No side effects. A filter should filter some input in a certain
> way, and do it every time, because it can be called more than once. A
> shortcode is really just a special case of filter, it should take the
> shortcode as input and return the resulting HTML to be put into the
> post. By making filters or shortcodes have dependencies outside of
> their inputs, then you introduce strange cases like this.
>
> Jetpack is doing it right here. They want to get the_content, so they
> run it through the the_content filter. This is not unusual or
> unexpected. What is unexpected is the way your plugin behaves oddly
> when some other piece of code is filtering something with the_content
> filter. Your plugin is making assumptions about the ordering of
> filters and when the_content runs that are not always true, basically.
> Moreso since any theme can call the_content any number of times, and
> in any place.
>
> -Otto
>
>
> On Tue, Jan 1, 2013 at 4:42 PM, Ian Dunn <ian at iandunn.name> wrote:
>> I just spent a couple hours tracking down a problem that was reported with
>> one of my plugins, and it turns out that the latest version of Jetpack is
>> causing problems with a lot of different plugins. I've seen reports of at
>> least half a dozen different ones, so I thought I'd pass these links along
>> in case it might save anyone else some time:
>>
>> http://wordpress.org/support/topic/jetpack-204-breaks-nextgen-galleries
>> http://wordpress.org/support/topic/jetpack-204-upgrade-breaks-several-plugins
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Wed Jan  2 05:03:03 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 1 Jan 2013 23:03:03 -0600
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <50E382D7.5020400@iandunn.name>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
Message-ID: <CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>

On Tue, Jan 1, 2013 at 6:44 PM, Ian Dunn <ian at iandunn.name> wrote:
> could start doing that now for the JavaScript, but the CSS still needs to be
> enqueued inside the head tag, so it wouldn't really save me anything.

For CSS, I'd just include it all the time. Shouldn't make any speed
difference, the browser loads it once, then it's browser-side cached.

-Otto

From mike at newclarity.net  Wed Jan  2 07:06:07 2013
From: mike at newclarity.net (Mike Schinkel)
Date: Wed, 2 Jan 2013 02:06:07 -0500
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
	<CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
Message-ID: <1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>

On Jan 2, 2013, at 12:03 AM, Otto <otto at ottodestruct.com> wrote:
> For CSS, I'd just include it all the time. Shouldn't make any speed
> difference, the browser loads it once, then it's browser-side cached.

If I'm not mistaken the browser still requests the file and the server returns a 304 telling the browser to use the cached version, at least that's what HTTPScoop[1] tells me. Having to check and getting a 304 response isn't the same as never having to issue an HTTP GET request and wait, especially if a site has many CSS and/or JS files to check from many different plugins.

On Jan 1, 2013, at 7:44 PM, Ian Dunn <ian at iandunn.name> wrote:
> The reason I'm checking if the shortcode is called is to avoid loading CSS and JavaScript files on pages where the shortcode isn't used <http://wordpress.stackexchange.com/questions/20854/conditionally-loading-javascript-css-for-shortcodes>. I didn't realize that we can use wp_enqueue_script() directly within the shortcode callback <http://scribu.net/wordpress/conditional-script-loading-revisited.html> now, but I originally wrote that method about 6 months before 3.3 came out. I could start doing that now for the JavaScript, but the CSS still needs to be enqueued inside the head tag, so it wouldn't really save me anything.


I've been meaning to tackle this same problem for a while and have been planning to use a technique that I described as an answer to your WordPress Answers question. Your question gave me the motivation to tackle it today:

http://wordpress.stackexchange.com/a/77946/89

Basically the approach I implemented checks for shortcode use on the first page load and then saves the status to a post meta key which it uses to check from them on.  Hope this helps and I'd be interested to know your thoughts on this approach.

-Mike
[1] http://www.tuffcode.com

From otto at ottodestruct.com  Wed Jan  2 11:04:14 2013
From: otto at ottodestruct.com (Otto)
Date: Wed, 2 Jan 2013 05:04:14 -0600
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
	<CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
	<1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>
Message-ID: <CAD-Fghw8Nq1s_oeXCZ4tb9YGs_zZ5K6gnqoQw=a_q8mVUVJXxA@mail.gmail.com>

On Wed, Jan 2, 2013 at 1:06 AM, Mike Schinkel <mike at newclarity.net> wrote:
> If I'm not mistaken the browser still requests the file and the server returns a 304 telling the browser to use the cached version, at least that's what HTTPScoop[1] tells me. Having to check and getting a 304 response isn't the same as never having to issue an HTTP GET request and wait, especially if a site has many CSS and/or JS files to check from many different plugins.

This happens because you either:

a) don't have a proper "Expires:" header being sent with the static content,
b) the expiration has, well... expired, or
c) you manually refreshed or hit F5 or something to that effect when
you were testing your theory. Browsers treat a refresh differently
than normal browsing.

Content that is browser-cached and has an expiration date will not be
re-retrieved, or even checked for last-modified, in a normal browsing
situation... until the content has expired. Refreshing is not a normal
browsing situation, it's an explicit request by the user to get new
data.

Check that you are correctly setting Expires headers for your static
content, and see what happens when you're browsing among pages
normally instead of reloading a page for testing purposes.

-Otto

From david at wordshell.net  Wed Jan  2 14:32:17 2013
From: david at wordshell.net (David Anderson)
Date: Wed, 02 Jan 2013 14:32:17 +0000
Subject: [wp-hackers] "Right" way to provide a single, customised page
Message-ID: <50E444F1.80904@wordshell.net>

Hi,

I'm coding a plugin for a client, and they have a need for the plugin to 
provide page to be accessed through special links.

I want the plugin to not need much setup; I don't want to include "set 
up a blank page, put in a shortcode, enter the page details into the 
plugin settings" in the instructions. And I'd rather not automate that 
either, surprising them with new pages.

So, what's the 'optimal' way to achieve this? After lots of Googling and 
Codexing, the method I've ended up using is for my 'special page' to be 
accessed via a GET parameter, and a function something like so:

     function my_filter_content($content) {
         if( is_singular() && is_main_query() && isset($_GET['magic']) ) {
             return '<p>This is the magic content!</p>';
         }
         return $content;
     }
     add_filter('the_content', 'my_filter_content');

But perhaps someone knows a better way, or a reason why the above is 
non-optimal?

Thanks,
David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From mike at newclarity.net  Wed Jan  2 17:45:41 2013
From: mike at newclarity.net (Mike Schinkel)
Date: Wed, 2 Jan 2013 12:45:41 -0500
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <CAD-Fghw8Nq1s_oeXCZ4tb9YGs_zZ5K6gnqoQw=a_q8mVUVJXxA@mail.gmail.com>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
	<CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
	<1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>
	<CAD-Fghw8Nq1s_oeXCZ4tb9YGs_zZ5K6gnqoQw=a_q8mVUVJXxA@mail.gmail.com>
Message-ID: <3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>

On Jan 2, 2013, at 6:04 AM, Otto <otto at ottodestruct.com> wrote:
> This happens because you either:
> 
> a) don't have a proper "Expires:" header being sent with the static content,
> b) the expiration has, well... expired, or
> c) you manually refreshed or hit F5 or something to that effect when
> you were testing your theory. Browsers treat a refresh differently
> than normal browsing.
> 
> Content that is browser-cached and has an expiration date will not be
> re-retrieved, or even checked for last-modified, in a normal browsing
> situation... until the content has expired. Refreshing is not a normal
> browsing situation, it's an explicit request by the user to get new
> data.
> 
> Check that you are correctly setting Expires headers for your static
> content, and see what happens when you're browsing among pages
> normally instead of reloading a page for testing purposes.

I've been studying HTTP since 2006, but I'll be honest I'm often confused by what I see in practice so I could well learn something here.

Let's take this CSS file as an example since I know the setup of that server and it's a newly installed WordPress 3.5:

http://hardcorewp.com/wp-content/themes/the-bootstrap/style.css

If I do an HTTP request using a free Mac tool called HTTP Client I get these headers:

Content-Length: 9216
Date: Wed, 02 Jan 2013 17:02:37 GMT
Server: Apache
Last-Modified: Sat, 22 Dec 2012 09:21:13 GMT
Accept-Ranges: bytes
Connection: close
Content-Type: text/css

That is on a bog-standard CPanel install without a caching plugin.  As you can see, no Expires header.  Given the setup which is pretty similar to a lot of shared hosting wouldn't you expect similar for most WordPress installs?  My understanding is the server needs to be configured explicitly to serve Expires headers for static content which is something that most WordPress users are unlikely to have done.  Or am I missing something or misunderstanding?

On the other hand would you not agree that an Expires header does not help with the first page load and we know from Google's campaign to focus site owners on site speed that a first page load is critical for serendipitous surfing and discovery via search engines?  If you have a page that loads 10+ plugin's CSS and JS files it's going to be slower on 1st load than if it only serves what it needs. Of course if all the CSS files are bundled into one or just a few CSS files then that changes the equation but that too is not something I understand most WordPress users to have configured.

Educate me.

-Mike



From bryan at ibaku.net  Wed Jan  2 18:17:32 2013
From: bryan at ibaku.net (Bryan Petty)
Date: Wed, 2 Jan 2013 11:17:32 -0700
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
	<CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
	<1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>
	<CAD-Fghw8Nq1s_oeXCZ4tb9YGs_zZ5K6gnqoQw=a_q8mVUVJXxA@mail.gmail.com>
	<3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>
Message-ID: <CAKB8V+rD1yPQsNEQg_N6SLqrSSXjzXoASWQ+Biy7_4u3ULsCqg@mail.gmail.com>

On Wed, Jan 2, 2013 at 10:45 AM, Mike Schinkel <mike at newclarity.net> wrote:
> Given the setup which is pretty similar to a lot of shared hosting wouldn't you expect similar for most WordPress installs?  My understanding is the server needs to be configured explicitly to serve Expires headers for static content which is something that most WordPress users are unlikely to have done.  Or am I missing something or misunderstanding?

Bluehost uses servers configured to use ETags, and as such, this is
the behavior seen there (at no point are Expires headers even used):

On subsequent page load (no refresh): Static assets served from
browser cache, no server request made (just as Otto describes).
On soft refresh (F5, or clicking Reload): Server request made, but if
still cached, this will still result in 304.
On hard refresh (Ctrl-Reload): Full CSS file returned from server and
re-cached by browser.

At least, this is Chrome's behavior, other browsers may be different.
GoDaddy also uses ETags with the same behavior.

Regards,
Bryan Petty

From wp-hackers at zipsbazaar.co.uk  Wed Jan  2 18:20:32 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Wed, 02 Jan 2013 18:20:32 +0000
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
	<CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
	<1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>
	<CAD-Fghw8Nq1s_oeXCZ4tb9YGs_zZ5K6gnqoQw=a_q8mVUVJXxA@mail.gmail.com>
	<3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>
Message-ID: <50E47A70.1060101@zipsbazaar.co.uk>

Mike: no disrespect, but there's a whiff of BS about that G claim. 
First-page load equates to every time you F5/refresh. Nobody can get 
around that, so what is G on about?.
If you want to discuss the tarpit issue with WordPress plugins, lets 
talk about the fact that so many of them load everything including the 
kitchen sink into the server process despite most of it being 
irrelevant/redundant.

This guy has his eye on the ball:

http://www.dev4press.com/2012/blog/benchmark/plugins-performance-testing-2012-january/

And if WordPress itself can send HTTP headers, it stands to reason that 
so can any coder.

From mike at newclarity.net  Wed Jan  2 18:33:54 2013
From: mike at newclarity.net (Mike Schinkel)
Date: Wed, 2 Jan 2013 13:33:54 -0500
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <50E47A70.1060101@zipsbazaar.co.uk>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
	<CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
	<1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>
	<CAD-Fghw8Nq1s_oeXCZ4tb9YGs_zZ5K6gnqoQw=a_q8mVUVJXxA@mail.gmail.com>
	<3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>
	<50E47A70.1060101@zipsbazaar.co.uk>
Message-ID: <0501DDD8-E3E4-4D93-8416-46CE77C4830D@newclarity.net>

On Jan 2, 2013, at 1:17 PM, Bryan Petty <bryan at ibaku.net> wrote:
> Bluehost uses servers configured to use ETags, and as such, this is
> the behavior seen there (at no point are Expires headers even used):
> 
> On subsequent page load (no refresh): Static assets served from
> browser cache, no server request made (just as Otto describes).
> On soft refresh (F5, or clicking Reload): Server request made, but if
> still cached, this will still result in 304.
> On hard refresh (Ctrl-Reload): Full CSS file returned from server and
> re-cached by browser.
> 
> At least, this is Chrome's behavior, other browsers may be different.
> GoDaddy also uses ETags with the same behavior.

Thanks for the follow up.  My understanding with ETags is you have to submit a request with the ETag to have the server decide if it needs to serve or not.  If not can you elaborate on how ETags keep static assets from being re-requested?  

On Jan 2, 2013, at 1:20 PM, Jeff Morris <wp-hackers at zipsbazaar.co.uk> wrote:
> Mike: no disrespect, but there's a whiff of BS about that G claim.

http://googlewebmastercentral.blogspot.com/2010/04/using-site-speed-in-web-search-ranking.html

> First-page load equates to every time you F5/refresh. Nobody can get around that, so what is G on about?.

Forgive me but I'm at a loss for what you are trying to say here.  Are you saying first page load performance is not important?

> If you want to discuss the tarpit issue with WordPress plugins, lets talk about the fact that so many of them load everything including the kitchen sink into the server process despite most of it being irrelevant/redundant.

Also here, what exactly do you mean by "load everything including the kitchen sink into the server process?"  Can you give some specifics? I'm again at a loss for your point.

> And if WordPress itself can send HTTP headers, it stands to reason that so can any coder.

Yes, sending headers from a .php file is easy.  How does the WordPress plugin developer do that for static files?  Are you advocating serving .js and .css files using .php, i.e. styles.js.php and styles.css.php? That is an option, but doesn't address first page load performance.

-Mike



From wp-hackers at zipsbazaar.co.uk  Wed Jan  2 18:35:53 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Wed, 02 Jan 2013 18:35:53 +0000
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <CAKB8V+rD1yPQsNEQg_N6SLqrSSXjzXoASWQ+Biy7_4u3ULsCqg@mail.gmail.com>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
	<CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
	<1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>
	<CAD-Fghw8Nq1s_oeXCZ4tb9YGs_zZ5K6gnqoQw=a_q8mVUVJXxA@mail.gmail.com>
	<3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>
	<CAKB8V+rD1yPQsNEQg_N6SLqrSSXjzXoASWQ+Biy7_4u3ULsCqg@mail.gmail.com>
Message-ID: <50E47E09.700@zipsbazaar.co.uk>

Bryan:

In my experience, Etags are globally pretty useless except for one 
thing, which is to workaround incorrect 304s returned by caching proxies 
acting above their pay grade.

From wp-hackers at zipsbazaar.co.uk  Wed Jan  2 18:44:09 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Wed, 02 Jan 2013 18:44:09 +0000
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <0501DDD8-E3E4-4D93-8416-46CE77C4830D@newclarity.net>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
	<CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
	<1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>
	<CAD-Fghw8Nq1s_oeXCZ4tb9YGs_zZ5K6gnqoQw=a_q8mVUVJXxA@mail.gmail.com>
	<3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>
	<50E47A70.1060101@zipsbazaar.co.uk>
	<0501DDD8-E3E4-4D93-8416-46CE77C4830D@newclarity.net>
Message-ID: <50E47FF9.2060709@zipsbazaar.co.uk>

Mike:

Real-net experience:

Just about any eCommerce site I click on from the top of a G SERPS takes 
an age to load because it's so bloated, but that didn't stop them 
getting up there.

Kitchen Sink Syndrome:

Take a look at the source of just about any popular WP plugin. See how 
well it's segmented. Not.

From mike at newclarity.net  Wed Jan  2 19:04:43 2013
From: mike at newclarity.net (Mike Schinkel)
Date: Wed, 2 Jan 2013 14:04:43 -0500
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <50E47FF9.2060709@zipsbazaar.co.uk>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
	<CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
	<1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>
	<CAD-Fghw8Nq1s_oeXCZ4tb9YGs_zZ5K6gnqoQw=a_q8mVUVJXxA@mail.gmail.com>
	<3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>
	<50E47A70.1060101@zipsbazaar.co.uk>
	<0501DDD8-E3E4-4D93-8416-46CE77C4830D@newclarity.net>
	<50E47FF9.2060709@zipsbazaar.co.uk>
Message-ID: <BF84E989-C285-4973-8162-3464AEEF76E3@newclarity.net>

On Jan 2, 2013, at 1:44 PM, Jeff Morris <wp-hackers at zipsbazaar.co.uk> wrote:
> Real-net experience:
> 
> Just about any eCommerce site I click on from the top of a G SERPS takes an age to load because it's so bloated, but that didn't stop them getting up there.

Quoting from the Google link I provided:

Speeding up websites is important ? not just to site owners, but to all Internet users. Faster sites create happy users and we've seen in our 
internal studies that when a site responds slowly, visitors spend less time there. 

So while eCommerce sites may be slow I assume you are not saying that's an ideal to strive for. And that brings us back to the question of best practices for loading externals in a plugin.

> Kitchen Sink Syndrome:
> 
> Take a look at the source of just about any popular WP plugin. See how well it's segmented. Not.

With almost 23k plugins in the repo, it's hard to know which you refer to and which techniques you take issue with.  Specifics would be more helpful.

-Mike


From wp-hackers at zipsbazaar.co.uk  Wed Jan  2 19:14:35 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Wed, 02 Jan 2013 19:14:35 +0000
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <BF84E989-C285-4973-8162-3464AEEF76E3@newclarity.net>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
	<CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
	<1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>
	<CAD-Fghw8Nq1s_oeXCZ4tb9YGs_zZ5K6gnqoQw=a_q8mVUVJXxA@mail.gmail.com>
	<3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>
	<50E47A70.1060101@zipsbazaar.co.uk>
	<0501DDD8-E3E4-4D93-8416-46CE77C4830D@newclarity.net>
	<50E47FF9.2060709@zipsbazaar.co.uk>
	<BF84E989-C285-4973-8162-3464AEEF76E3@newclarity.net>
Message-ID: <50E4871B.3070409@zipsbazaar.co.uk>

Mike:

#1: Secede from the Church of G

#2: Ease the pain: search on 'WordPress top ten plugins' or similar 
(what,  I need to suggest this?)

#3: Smell the coffee.

From otto at ottodestruct.com  Wed Jan  2 23:36:30 2013
From: otto at ottodestruct.com (Otto)
Date: Wed, 2 Jan 2013 17:36:30 -0600
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
	<CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
	<1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>
	<CAD-Fghw8Nq1s_oeXCZ4tb9YGs_zZ5K6gnqoQw=a_q8mVUVJXxA@mail.gmail.com>
	<3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>
Message-ID: <CAD-FghxRrAMW_Bkc8KeFDN4kwPqcNFJUdVSwCEdVA4a3pzYu1g@mail.gmail.com>

On Wed, Jan 2, 2013 at 11:45 AM, Mike Schinkel <mike at newclarity.net> wrote:
> If I do an HTTP request using a free Mac tool called HTTP Client I get these headers:
>
> Content-Length: 9216
> Date: Wed, 02 Jan 2013 17:02:37 GMT
> Server: Apache
> Last-Modified: Sat, 22 Dec 2012 09:21:13 GMT
> Accept-Ranges: bytes
> Connection: close
> Content-Type: text/css
>
> That is on a bog-standard CPanel install without a caching plugin.  As you can see, no Expires header.  Given the setup which is pretty similar to a lot of shared hosting wouldn't you expect similar for most WordPress installs?

If you're telling me that you think most servers are not configured
appropriately for serving real-world content, then you'll get no
argument from me.

The "default" setup is never the optimal one. You need to be
configuring your webserver correctly first, before you ever try to
optimize your code or your content. If you're not serving
appropriately from the ground up, then you're not doing it correctly
from the starting line.

A server should be configured to send correct caching headers for
static content (which, note, is served *outside* of WordPress).
Cache-Control. Expires. Maybe Etags if you're having issues (but
generally ETags isn't worth the trouble). These are basics which all
sites should configure appropriately before serving a single byte. And
you can do this via .htaccess or nginx config files, no problems.

I agree that most sites do not have this configured appropriately. But
I don't agree that you should make your plugin slower and more complex
by assuming this to be the case. The principle of KISS applies here:
Keep the plugin simple and doing things appropriately.

Yes, it is not particularly optimal to output a CSS link on every page
(or even a JS link, for that matter). However, it is far simpler, and
the workarounds to make the system smarter about it are complex and
can cause incompatibilities if done incorrectly. And in a case where
the system has been properly optimized, the workarounds cause no
significant real-world gain.


> On the other hand would you not agree that an Expires header does not help with the first page load

Speed is important, but it is not the end-all be-all of the world of
the World Wide Web. Simplicity matters too. Ease of development. Ease
of use. Compatibility. If you have a non-optimal site, then optimizing
it is a good thing, certainly. If you're writing a plugin, then making
it more complex and more difficult to maintain and more incompatible
with other things, in order to shave a millisecond or two off
somebody's non-optimized site load time... probably not worth it.

-Otto

From mike at newclarity.net  Wed Jan  2 23:46:56 2013
From: mike at newclarity.net (Mike Schinkel)
Date: Wed, 2 Jan 2013 18:46:56 -0500
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <CAD-FghxRrAMW_Bkc8KeFDN4kwPqcNFJUdVSwCEdVA4a3pzYu1g@mail.gmail.com>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
	<CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
	<1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>
	<CAD-Fghw8Nq1s_oeXCZ4tb9YGs_zZ5K6gnqoQw=a_q8mVUVJXxA@mail.gmail.com>
	<3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>
	<CAD-FghxRrAMW_Bkc8KeFDN4kwPqcNFJUdVSwCEdVA4a3pzYu1g@mail.gmail.com>
Message-ID: <105E4C5B-2B74-4B2B-AED0-58A27F9310A8@newclarity.net>

Hi Otto,

Thanks for clarifying.  I've learned from this thread and with clarification I think we mostly agree in principle but disagree a bit in the best way to optimize. But then that's okay as we each get to choose what works before for ourselves, right? :)

-Mike

On Jan 2, 2013, at 6:36 PM, Otto <otto at ottodestruct.com> wrote:
> On Wed, Jan 2, 2013 at 11:45 AM, Mike Schinkel <mike at newclarity.net> wrote:
>> If I do an HTTP request using a free Mac tool called HTTP Client I get these headers:
>> 
>> Content-Length: 9216
>> Date: Wed, 02 Jan 2013 17:02:37 GMT
>> Server: Apache
>> Last-Modified: Sat, 22 Dec 2012 09:21:13 GMT
>> Accept-Ranges: bytes
>> Connection: close
>> Content-Type: text/css
>> 
>> That is on a bog-standard CPanel install without a caching plugin.  As you can see, no Expires header.  Given the setup which is pretty similar to a lot of shared hosting wouldn't you expect similar for most WordPress installs?
> 
> If you're telling me that you think most servers are not configured
> appropriately for serving real-world content, then you'll get no
> argument from me.
> 
> The "default" setup is never the optimal one. You need to be
> configuring your webserver correctly first, before you ever try to
> optimize your code or your content. If you're not serving
> appropriately from the ground up, then you're not doing it correctly
> from the starting line.
> 
> A server should be configured to send correct caching headers for
> static content (which, note, is served *outside* of WordPress).
> Cache-Control. Expires. Maybe Etags if you're having issues (but
> generally ETags isn't worth the trouble). These are basics which all
> sites should configure appropriately before serving a single byte. And
> you can do this via .htaccess or nginx config files, no problems.
> 
> I agree that most sites do not have this configured appropriately. But
> I don't agree that you should make your plugin slower and more complex
> by assuming this to be the case. The principle of KISS applies here:
> Keep the plugin simple and doing things appropriately.
> 
> Yes, it is not particularly optimal to output a CSS link on every page
> (or even a JS link, for that matter). However, it is far simpler, and
> the workarounds to make the system smarter about it are complex and
> can cause incompatibilities if done incorrectly. And in a case where
> the system has been properly optimized, the workarounds cause no
> significant real-world gain.
> 
>> On the other hand would you not agree that an Expires header does not help with the first page load
> 
> Speed is important, but it is not the end-all be-all of the world of
> the World Wide Web. Simplicity matters too. Ease of development. Ease
> of use. Compatibility. If you have a non-optimal site, then optimizing
> it is a good thing, certainly. If you're writing a plugin, then making
> it more complex and more difficult to maintain and more incompatible
> with other things, in order to shave a millisecond or two off
> somebody's non-optimized site load time... probably not worth it.


From lists at lobaugh.net  Thu Jan  3 00:20:08 2013
From: lists at lobaugh.net (Ben Lobaugh)
Date: Wed, 02 Jan 2013 16:20:08 -0800
Subject: [wp-hackers] Plugin conflicts with latest version of Jetpack
In-Reply-To: <105E4C5B-2B74-4B2B-AED0-58A27F9310A8@newclarity.net>
References: <50E36641.3070405@iandunn.name>
	<CAD-Fghy-ktuV-8t5jf6GLso5mVMEFE99R+Fq7ZhVcE+YC52Azw@mail.gmail.com>
	<50E382D7.5020400@iandunn.name>
	<CAD-FghxkWyMaUWJ=sgqeG2eYAk0R6+8+_c-N1Y=q0kA4rCUtOQ@mail.gmail.com>
	<1109D072-9545-4E3D-8327-867DC6A87114@newclarity.net>
	<CAD-Fghw8Nq1s_oeXCZ4tb9YGs_zZ5K6gnqoQw=a_q8mVUVJXxA@mail.gmail.com>
	<3932BD3A-A98F-45BB-9FA6-6D0C5AD14126@newclarity.net>
	<CAD-FghxRrAMW_Bkc8KeFDN4kwPqcNFJUdVSwCEdVA4a3pzYu1g@mail.gmail.com>
	<105E4C5B-2B74-4B2B-AED0-58A27F9310A8@newclarity.net>
Message-ID: <50E4CEB8.3010308@lobaugh.net>

I agree to disagree!

*snicker*


On 1/2/13 3:46 PM, Mike Schinkel wrote:
> Hi Otto,
>
> Thanks for clarifying.  I've learned from this thread and with clarification I think we mostly agree in principle but disagree a bit in the best way to optimize. But then that's okay as we each get to choose what works before for ourselves, right? :)
>
> -Mike
>
> On Jan 2, 2013, at 6:36 PM, Otto <otto at ottodestruct.com> wrote:
>> On Wed, Jan 2, 2013 at 11:45 AM, Mike Schinkel <mike at newclarity.net> wrote:
>>> If I do an HTTP request using a free Mac tool called HTTP Client I get these headers:
>>>
>>> Content-Length: 9216
>>> Date: Wed, 02 Jan 2013 17:02:37 GMT
>>> Server: Apache
>>> Last-Modified: Sat, 22 Dec 2012 09:21:13 GMT
>>> Accept-Ranges: bytes
>>> Connection: close
>>> Content-Type: text/css
>>>
>>> That is on a bog-standard CPanel install without a caching plugin.  As you can see, no Expires header.  Given the setup which is pretty similar to a lot of shared hosting wouldn't you expect similar for most WordPress installs?
>> If you're telling me that you think most servers are not configured
>> appropriately for serving real-world content, then you'll get no
>> argument from me.
>>
>> The "default" setup is never the optimal one. You need to be
>> configuring your webserver correctly first, before you ever try to
>> optimize your code or your content. If you're not serving
>> appropriately from the ground up, then you're not doing it correctly
>> from the starting line.
>>
>> A server should be configured to send correct caching headers for
>> static content (which, note, is served *outside* of WordPress).
>> Cache-Control. Expires. Maybe Etags if you're having issues (but
>> generally ETags isn't worth the trouble). These are basics which all
>> sites should configure appropriately before serving a single byte. And
>> you can do this via .htaccess or nginx config files, no problems.
>>
>> I agree that most sites do not have this configured appropriately. But
>> I don't agree that you should make your plugin slower and more complex
>> by assuming this to be the case. The principle of KISS applies here:
>> Keep the plugin simple and doing things appropriately.
>>
>> Yes, it is not particularly optimal to output a CSS link on every page
>> (or even a JS link, for that matter). However, it is far simpler, and
>> the workarounds to make the system smarter about it are complex and
>> can cause incompatibilities if done incorrectly. And in a case where
>> the system has been properly optimized, the workarounds cause no
>> significant real-world gain.
>>
>>> On the other hand would you not agree that an Expires header does not help with the first page load
>> Speed is important, but it is not the end-all be-all of the world of
>> the World Wide Web. Simplicity matters too. Ease of development. Ease
>> of use. Compatibility. If you have a non-optimal site, then optimizing
>> it is a good thing, certainly. If you're writing a plugin, then making
>> it more complex and more difficult to maintain and more incompatible
>> with other things, in order to shave a millisecond or two off
>> somebody's non-optimized site load time... probably not worth it.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From contato at jimmymacedo.com  Fri Jan  4 00:13:23 2013
From: contato at jimmymacedo.com (JimmyMacedo)
Date: Thu, 3 Jan 2013 21:13:23 -0300
Subject: [wp-hackers] a term into multiple taxonomies.
Message-ID: <CAMSdA6uDoBJTeRk7Yu8kP9NwWohovetczi0-aW6Cc-QF4nDdFQ@mail.gmail.com>

Has anyone here ever had to register a single term of two (or more)
different taxonomies?
How can I do?


Jimmy Lopes de Macedo
contato at jimmymacedo.com
www.jimmymacedo.com

<http://www.facebook.com/jimmymacedo> <http://twitter.com/jimmymacedo>
<http://br.linkedin.com/pub/jimmy-macedo/27/7b4/242>
<http://lattes.cnpq.br/4509397096603463>

From mailing at markoheijnen.nl  Fri Jan  4 09:28:45 2013
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Fri, 4 Jan 2013 10:28:45 +0100
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
Message-ID: <3B0DA2A3-2818-4B00-95BA-E1454C3036A2@markoheijnen.nl>

I was looking in the difference and performance aspect of is_a() and instance of. Believing this test it should be 2-3 times faster depending on the PHP version you have. Even tho it's micro optimization I'm curious if WordPress should change to this.

There are already two tickets closed as "won't fix" but the first one did mentioned that we can look into it when moving to PHP5.

- http://core.trac.wordpress.org/ticket/10264
- http://core.trac.wordpress.org/ticket/19381

Marko

From kerim.zlizi at gmail.com  Fri Jan  4 14:42:33 2013
From: kerim.zlizi at gmail.com (zlizi kerim)
Date: Fri, 4 Jan 2013 15:42:33 +0100
Subject: [wp-hackers] enquiry
Message-ID: <CAPPdDxNvjMRcHu+gihr1EuixQK7dUEaHZ618rkfoJagHt-6Hsg@mail.gmail.com>

I would like to buy CCW with UHash !!!

From a.sumaran at gmail.com  Fri Jan  4 15:10:37 2013
From: a.sumaran at gmail.com (Alfredo Sumaran)
Date: Fri, 4 Jan 2013 10:10:37 -0500
Subject: [wp-hackers] Bind events and get the current model in new Media
	manager
Message-ID: <CAPp8j+2rGAOgU+Pu28khSDUO8SYhafeqm6adX8pjAEVqRvt9VQ@mail.gmail.com>

Hello there.

I'm trying to see which is the best way to add a link in the sidebar
of the new media manager using javascript.
I tried to add the link using the jQuery plugin livequery with
something like that

$('.attachment-details').livequery(function(){
 $('.attachment-details').append('<label>&nbsp;</label><a href="#"
class="set_tag">Set tags for this photo</a>');
});

but the problem is that I can't determine which thumb is selected
because there's no ID as identifier, so I can't build the correct link
that I need. a sort of fancybox window that requires the selected
thumbnail/attachment ID
so, how I can get the event that fires when de the sidebar is opened
and the Backbone model of the current thumbnail?

Thanks in advance

From dyordan1 at ramapo.edu  Fri Jan  4 15:32:02 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Fri, 4 Jan 2013 10:32:02 -0500
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <3B0DA2A3-2818-4B00-95BA-E1454C3036A2@markoheijnen.nl>
References: <3B0DA2A3-2818-4B00-95BA-E1454C3036A2@markoheijnen.nl>
Message-ID: <C3594DE4-DB7C-4259-AA03-5CB9148A858B@ramapo.edu>

What's your source? Did you read this somewhere? If so, do you have a link, it'd be an interesting read? In either case though, my guts say execution time of both is almost negligible, so twice as negligible isn't really doing much, given how much effort it would take to replace it throughout the code (even with regexp or whatnot, which would be quick but prone to introducing bugs). Still, if you have an article that says otherwise, please do link to it. Cheers!

On Fri, 4 Jan 2013, at 4:28 AM, Marko Heijnen wrote:

> I was looking in the difference and performance aspect of is_a() and instance of. Believing this test it should be 2-3 times faster depending on the PHP version you have. Even tho it's micro optimization I'm curious if WordPress should change to this.
> 
> There are already two tickets closed as "won't fix" but the first one did mentioned that we can look into it when moving to PHP5.
> 
> - http://core.trac.wordpress.org/ticket/10264
> - http://core.trac.wordpress.org/ticket/19381
> 
> Marko
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

~Dobri


From otto at ottodestruct.com  Fri Jan  4 17:32:22 2013
From: otto at ottodestruct.com (Otto)
Date: Fri, 4 Jan 2013 11:32:22 -0600
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <C3594DE4-DB7C-4259-AA03-5CB9148A858B@ramapo.edu>
References: <3B0DA2A3-2818-4B00-95BA-E1454C3036A2@markoheijnen.nl>
	<C3594DE4-DB7C-4259-AA03-5CB9148A858B@ramapo.edu>
Message-ID: <CAD-FghzVU2NX9RYqFCWTG5g7Af0m3-RUYRBZEt9C+RWbfr=5Nw@mail.gmail.com>

On Fri, Jan 4, 2013 at 9:32 AM, Dobri <dyordan1 at ramapo.edu> wrote:
> What's your source? Did you read this somewhere? If so, do you have a link, it'd be an interesting read? In either case though, my guts say execution time of both is almost negligible, so twice as negligible isn't really doing much, given how much effort it would take to replace it throughout the code (even with regexp or whatnot, which would be quick but prone to introducing bugs). Still, if you have an article that says otherwise, please do link to it. Cheers!

I don't remember where I read this, but instanceof is definitely going
to be faster because it's a language construct, while is_a() is a
function call which involves the overhead of function setup and tear
down.

The difference is probably negliable, but it adds up over time. It
would make sense to switch to instanceof anywhere that it is possible
to do so, however I don't think it is a pressing concern. One of those
fix-it-if-you-spot-it things.

-Otto

From wp-hackers at zipsbazaar.co.uk  Fri Jan  4 18:33:13 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Fri, 04 Jan 2013 18:33:13 +0000
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <CAD-FghzVU2NX9RYqFCWTG5g7Af0m3-RUYRBZEt9C+RWbfr=5Nw@mail.gmail.com>
References: <3B0DA2A3-2818-4B00-95BA-E1454C3036A2@markoheijnen.nl>
	<C3594DE4-DB7C-4259-AA03-5CB9148A858B@ramapo.edu>
	<CAD-FghzVU2NX9RYqFCWTG5g7Af0m3-RUYRBZEt9C+RWbfr=5Nw@mail.gmail.com>
Message-ID: <50E72069.8040609@zipsbazaar.co.uk>

On 04/01/2013 17:32, Otto wrote:
> The difference is probably negliable, but it adds up over time. It
> would make sense to switch to instanceof anywhere that it is possible
> to do so, however I don't think it is a pressing concern. One of those
> fix-it-if-you-spot-it things.

IDE search on WP 3.5, "is_a(":

/wp-includes/ : 53 matches
/wp-admin/includes/ : 4 matches

About an hour's work to refactor, and that's being meticulous.


For bbpress 2.2.3 I also got:
/wp-content/plugins/bbpress/includes/ : 7 matches

A dime to a dollar says they'll fix it before WP core does.

From mailing at markoheijnen.nl  Fri Jan  4 18:37:07 2013
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Fri, 4 Jan 2013 19:37:07 +0100
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <50E72069.8040609@zipsbazaar.co.uk>
References: <3B0DA2A3-2818-4B00-95BA-E1454C3036A2@markoheijnen.nl>
	<C3594DE4-DB7C-4259-AA03-5CB9148A858B@ramapo.edu>
	<CAD-FghzVU2NX9RYqFCWTG5g7Af0m3-RUYRBZEt9C+RWbfr=5Nw@mail.gmail.com>
	<50E72069.8040609@zipsbazaar.co.uk>
Message-ID: <7E62080F-907C-4496-8B2E-2BD402C004B6@markoheijnen.nl>

I saw it on: http://micro-optimization.com/is_a-vs-instanceof

Marko

Op 4 jan. 2013, om 19:33 heeft Jeff Morris <wp-hackers at zipsbazaar.co.uk> het volgende geschreven:

> On 04/01/2013 17:32, Otto wrote:
>> The difference is probably negliable, but it adds up over time. It
>> would make sense to switch to instanceof anywhere that it is possible
>> to do so, however I don't think it is a pressing concern. One of those
>> fix-it-if-you-spot-it things.
> 
> IDE search on WP 3.5, "is_a(":
> 
> /wp-includes/ : 53 matches
> /wp-admin/includes/ : 4 matches
> 
> About an hour's work to refactor, and that's being meticulous.
> 
> 
> For bbpress 2.2.3 I also got:
> /wp-content/plugins/bbpress/includes/ : 7 matches
> 
> A dime to a dollar says they'll fix it before WP core does.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From jbutkus at time.ly  Fri Jan  4 18:39:41 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Fri, 4 Jan 2013 18:39:41 +0000
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <50E72069.8040609@zipsbazaar.co.uk>
References: <3B0DA2A3-2818-4B00-95BA-E1454C3036A2@markoheijnen.nl>
	<C3594DE4-DB7C-4259-AA03-5CB9148A858B@ramapo.edu>
	<CAD-FghzVU2NX9RYqFCWTG5g7Af0m3-RUYRBZEt9C+RWbfr=5Nw@mail.gmail.com>
	<50E72069.8040609@zipsbazaar.co.uk>
Message-ID: <0000013c06dc87e6-084b1216-a017-41eb-8ae1-0a3cec59cc61-000000@email.amazonses.com>

$ spatch -e 's/is_a( X, Y )/ ( X instanceof Y ) /' /path/to/wordpress/core

That is bullet-proof 1 minute replacement, given that Facebook Pfff 
(https://github.com/facebook/pfff/wiki/Spatch) is installed.

Bullet-proof, because spatch operates on a abstract syntax tree level, 
so no quote will be missed, etc., etc.

Just a hint, how this may be achieved quickly, in error-prone way.


-- 
Regards,
Justas B.

On 2013.01.04 20:33, Jeff Morris wrote:
> On 04/01/2013 17:32, Otto wrote:
>> The difference is probably negliable, but it adds up over time. It
>> would make sense to switch to instanceof anywhere that it is possible
>> to do so, however I don't think it is a pressing concern. One of those
>> fix-it-if-you-spot-it things.
>
> IDE search on WP 3.5, "is_a(":
>
> /wp-includes/ : 53 matches
> /wp-admin/includes/ : 4 matches
>
> About an hour's work to refactor, and that's being meticulous.
>
>
> For bbpress 2.2.3 I also got:
> /wp-content/plugins/bbpress/includes/ : 7 matches
>
> A dime to a dollar says they'll fix it before WP core does.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp-hackers at zipsbazaar.co.uk  Fri Jan  4 18:55:50 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Fri, 04 Jan 2013 18:55:50 +0000
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <0000013c06dc87e6-084b1216-a017-41eb-8ae1-0a3cec59cc61-000000@email.amazonses.com>
References: <3B0DA2A3-2818-4B00-95BA-E1454C3036A2@markoheijnen.nl>
	<C3594DE4-DB7C-4259-AA03-5CB9148A858B@ramapo.edu>
	<CAD-FghzVU2NX9RYqFCWTG5g7Af0m3-RUYRBZEt9C+RWbfr=5Nw@mail.gmail.com>
	<50E72069.8040609@zipsbazaar.co.uk>
	<0000013c06dc87e6-084b1216-a017-41eb-8ae1-0a3cec59cc61-000000@email.amazonses.com>
Message-ID: <50E725B6.1060401@zipsbazaar.co.uk>

On 04/01/2013 18:39, Justas Butkus wrote:
> Just a hint, how this may be achieved quickly, in error-prone way. 
Er.. I did it manually. Over lunch. To avoid the 'error-prone way'.


From jbutkus at time.ly  Fri Jan  4 18:59:52 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Fri, 4 Jan 2013 18:59:52 +0000
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <50E725B6.1060401@zipsbazaar.co.uk>
References: <3B0DA2A3-2818-4B00-95BA-E1454C3036A2@markoheijnen.nl>
	<C3594DE4-DB7C-4259-AA03-5CB9148A858B@ramapo.edu>
	<CAD-FghzVU2NX9RYqFCWTG5g7Af0m3-RUYRBZEt9C+RWbfr=5Nw@mail.gmail.com>
	<50E72069.8040609@zipsbazaar.co.uk>
	<0000013c06dc87e6-084b1216-a017-41eb-8ae1-0a3cec59cc61-000000@email.amazonses.com>
	<50E725B6.1060401@zipsbazaar.co.uk>
Message-ID: <0000013c06ef0099-0f108ce3-4a1a-44c2-8749-c070482aef06-000000@email.amazonses.com>

On 2013.01.04 20:55, Jeff Morris wrote:
> Er.. I did it manually. Over lunch. To avoid the 'error-prone way'. 

Searched for it, or replaced all the occurrences? I thought you just 
found out the number of occurrences, not done the whole conversion 
(is_a() to instanceof).

Anyway - that was more of a sharing, about solution to many "it would 
take ages to replace, let's leave it, until it sorts itself out".

And that might be due to the case, that I am into multiple separate 
tools, than one single IDE, that might do everything for me, BUT I AM 
NOT STARTING an editor-of-choice flame here. :-)


-- 
Regards,
Justas B.

From dyordan1 at ramapo.edu  Fri Jan  4 19:17:10 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Fri, 4 Jan 2013 14:17:10 -0500
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <50E72069.8040609@zipsbazaar.co.uk>
References: <3B0DA2A3-2818-4B00-95BA-E1454C3036A2@markoheijnen.nl>
	<C3594DE4-DB7C-4259-AA03-5CB9148A858B@ramapo.edu>
	<CAD-FghzVU2NX9RYqFCWTG5g7Af0m3-RUYRBZEt9C+RWbfr=5Nw@mail.gmail.com>
	<50E72069.8040609@zipsbazaar.co.uk>
Message-ID: <14773EE7-DE85-4863-B80F-1550B808FC5B@ramapo.edu>

Well that's a whole different story. I expected a lot more than 57 matches. We should really get this thing done then. As Otto said, fix-it-if-you-spot-it seems like a good approach but didn't Jeff Morris already do the whole thing? Seems reasonable to just get a patch and get it over with if that's fine with the big guys.

On Fri, 4 Jan 2013, at 1:33 PM, Jeff Morris wrote:

> On 04/01/2013 17:32, Otto wrote:
>> The difference is probably negliable, but it adds up over time. It
>> would make sense to switch to instanceof anywhere that it is possible
>> to do so, however I don't think it is a pressing concern. One of those
>> fix-it-if-you-spot-it things.
> 
> IDE search on WP 3.5, "is_a(":
> 
> /wp-includes/ : 53 matches
> /wp-admin/includes/ : 4 matches
> 
> About an hour's work to refactor, and that's being meticulous.
> 
> 
> For bbpress 2.2.3 I also got:
> /wp-content/plugins/bbpress/includes/ : 7 matches
> 
> A dime to a dollar says they'll fix it before WP core does.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

~Dobri


From wp-hackers at zipsbazaar.co.uk  Fri Jan  4 19:18:24 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Fri, 04 Jan 2013 19:18:24 +0000
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <0000013c06ef0099-0f108ce3-4a1a-44c2-8749-c070482aef06-000000@email.amazonses.com>
References: <3B0DA2A3-2818-4B00-95BA-E1454C3036A2@markoheijnen.nl>
	<C3594DE4-DB7C-4259-AA03-5CB9148A858B@ramapo.edu>
	<CAD-FghzVU2NX9RYqFCWTG5g7Af0m3-RUYRBZEt9C+RWbfr=5Nw@mail.gmail.com>
	<50E72069.8040609@zipsbazaar.co.uk>
	<0000013c06dc87e6-084b1216-a017-41eb-8ae1-0a3cec59cc61-000000@email.amazonses.com>
	<50E725B6.1060401@zipsbazaar.co.uk>
	<0000013c06ef0099-0f108ce3-4a1a-44c2-8749-c070482aef06-000000@email.amazonses.com>
Message-ID: <50E72B00.8030909@zipsbazaar.co.uk>

On 04/01/2013 18:59, Justas Butkus wrote:
> Searched for it, or replaced all the occurrences? 

I was just pointing out how little work is involved.

Search and replace is 'error-prone' as in 'what will be grazed by this 
nuke'; and it would have curtailed my lunch, (a leisurely affair with 
Italian salad, saute veg, blue stilton and a 20-year-old port as I recall).

No offence taken, dude. I hope you find a quicker way than mine, and 
most importantly, share it.

From jbutkus at time.ly  Fri Jan  4 19:47:17 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Fri, 4 Jan 2013 19:47:17 +0000
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <50E73140.5010703@time.ly>
References: <50E73140.5010703@time.ly>
Message-ID: <0000013c071a6cab-6bb99c75-aa3e-458f-845f-780fe7fc40ba-000000@email.amazonses.com>

What a pity would be to curtail such a lunch, or at least a sensual 
impact of it, by doing a code replacement over it.

There was no offence intended, and please find my patch attached, that 
would dismantle the cause of this issue, if applied, to alleviate my 
good intentions.


The rationale behind my comment was just as good - to break the 
discussion about time consumption, while the change itself takes less 
time than thinking about it.


-- 
Regards,
Justas B.

On 2013.01.04 21:18, Jeff Morris wrote:
> I was just pointing out how little work is involved.
>
> Search and replace is 'error-prone' as in 'what will be grazed by this 
> nuke'; and it would have curtailed my lunch, (a leisurely affair with 
> Italian salad, saute veg, blue stilton and a 20-year-old port as I 
> recall).
>
> No offence taken, dude. I hope you find a quicker way than mine, and 
> most importantly, share it.
-------------- next part --------------
--- ./wp-admin/includes/class-wp-users-list-table.php	2012-11-19 23:43:47.000000000 +0200
+++ /tmp/trans-21323-f63ea0.php	2013-01-04 21:35:31.658811324 +0200
@@ -227,7 +227,7 @@
 	function single_row( $user_object, $style = '', $role = '', $numposts = 0 ) {
 		global $wp_roles;
 
-		if ( !( is_object( $user_object ) && is_a( $user_object, 'WP_User' ) ) )
+		if ( !( is_object( $user_object ) && ( $user_object instanceof 'WP_User' ) ) )
 			$user_object = get_userdata( (int) $user_object );
 		$user_object->filter = 'display';
 		$email = $user_object->user_email;
--- ./wp-admin/includes/screen.php	2012-09-26 22:44:43.000000000 +0300
+++ /tmp/trans-21323-67cbd3.php	2013-01-04 21:35:33.246819200 +0200
@@ -388,7 +388,7 @@
  	 */
 	public static function get( $hook_name = '' ) {
 
-		if ( is_a( $hook_name, 'WP_Screen' ) )
+		if ( ( $hook_name instanceof 'WP_Screen' ) )
 			return $hook_name;
 
 		$post_type = $taxonomy = null;
--- ./wp-admin/includes/template.php	2012-11-30 15:40:59.000000000 +0200
+++ /tmp/trans-21323-801fc5.php	2013-01-04 21:35:33.454820237 +0200
@@ -100,7 +100,7 @@
 
 	extract( wp_parse_args($args, $defaults), EXTR_SKIP );
 
-	if ( empty($walker) || !is_a($walker, 'Walker') )
+	if ( empty($walker) || !( $walker instanceof 'Walker' ) )
 		$walker = new Walker_Category_Checklist;
 
 	$descendants_and_self = (int) $descendants_and_self;
--- ./wp-admin/includes/theme.php	2012-09-05 01:35:12.000000000 +0300
+++ /tmp/trans-21323-c036ad.php	2013-01-04 21:35:33.506820490 +0200
@@ -117,7 +117,7 @@
 	if ( !isset($themes_update) )
 		$themes_update = get_site_transient('update_themes');
 
-	if ( ! is_a( $theme, 'WP_Theme' ) )
+	if ( ! ( $theme instanceof 'WP_Theme' ) )
 		return;
 
 	$stylesheet = $theme->get_stylesheet();
--- ./wp-includes/Text/Diff.php	2010-02-19 03:25:26.000000000 +0200
+++ /tmp/trans-21323-4208fa.php	2013-01-04 21:35:45.986882375 +0200
@@ -74,8 +74,8 @@
     {
         $count = 0;
         foreach ($this->_edits as $edit) {
-            if (is_a($edit, 'Text_Diff_Op_add') ||
-                is_a($edit, 'Text_Diff_Op_change')) {
+            if (( $edit instanceof 'Text_Diff_Op_add' ) ||
+                ( $edit instanceof 'Text_Diff_Op_change' ) ) {
                 $count += $edit->nfinal();
             }
         }
@@ -93,8 +93,8 @@
     {
         $count = 0;
         foreach ($this->_edits as $edit) {
-            if (is_a($edit, 'Text_Diff_Op_delete') ||
-                is_a($edit, 'Text_Diff_Op_change')) {
+            if (( $edit instanceof 'Text_Diff_Op_delete' ) ||
+                ( $edit instanceof 'Text_Diff_Op_change' ) ) {
                 $count += $edit->norig();
             }
         }
@@ -137,7 +137,7 @@
     function isEmpty()
     {
         foreach ($this->_edits as $edit) {
-            if (!is_a($edit, 'Text_Diff_Op_copy')) {
+            if (!( $edit instanceof 'Text_Diff_Op_copy' ) ) {
                 return false;
             }
         }
@@ -155,7 +155,7 @@
     {
         $lcs = 0;
         foreach ($this->_edits as $edit) {
-            if (is_a($edit, 'Text_Diff_Op_copy')) {
+            if (( $edit instanceof 'Text_Diff_Op_copy' ) ) {
                 $lcs += count($edit->orig);
             }
         }
--- ./wp-includes/Text/Diff/Renderer.php	2010-02-19 03:25:26.000000000 +0200
+++ /tmp/trans-21323-b99249.php	2013-01-04 21:35:46.118883028 +0200
@@ -83,7 +83,7 @@
             /* If these are unchanged (copied) lines, and we want to keep
              * leading or trailing context lines, extract them from the copy
              * block. */
-            if (is_a($edit, 'Text_Diff_Op_copy')) {
+            if (( $edit instanceof 'Text_Diff_Op_copy' ) ) {
                 /* Do we have any diff blocks yet? */
                 if (is_array($block)) {
                     /* How many lines to keep as context from the copy
--- ./wp-includes/capabilities.php	2012-12-07 11:53:27.000000000 +0200
+++ /tmp/trans-21323-7e911e.php	2013-01-04 21:35:46.626885554 +0200
@@ -483,7 +483,7 @@
 			);
 		}
 
-		if ( is_a( $id, 'WP_User' ) ) {
+		if ( ( $id instanceof 'WP_User' ) ) {
 			$this->init( $id->data, $blog_id );
 			return;
 		} elseif ( is_object( $id ) ) {
--- ./wp-includes/category-template.php	2012-11-20 20:31:06.000000000 +0200
+++ /tmp/trans-21323-a6b79a.php	2013-01-04 21:35:46.762886223 +0200
@@ -730,7 +730,7 @@
 function walk_category_tree() {
 	$args = func_get_args();
 	// the user's options are the third parameter
-	if ( empty($args[2]['walker']) || !is_a($args[2]['walker'], 'Walker') )
+	if ( empty($args[2]['walker']) || !( $args[2]['walker'] instanceof 'Walker' ) )
 		$walker = new Walker_Category;
 	else
 		$walker = $args[2]['walker'];
@@ -748,7 +748,7 @@
 function walk_category_dropdown_tree() {
 	$args = func_get_args();
 	// the user's options are the third parameter
-	if ( empty($args[2]['walker']) || !is_a($args[2]['walker'], 'Walker') )
+	if ( empty($args[2]['walker']) || !( $args[2]['walker'] instanceof 'Walker' ) )
 		$walker = new Walker_CategoryDropdown;
 	else
 		$walker = $args[2]['walker'];
--- ./wp-includes/class-IXR.php	2012-08-15 23:12:00.000000000 +0300
+++ /tmp/trans-21323-f4c033.php	2013-01-04 21:35:46.926887037 +0200
@@ -82,10 +82,10 @@
         }
 
         // Deal with IXR object types base64 and date
-        if (is_object($this->data) && is_a($this->data, 'IXR_Date')) {
+        if (is_object($this->data) && ( $this->data instanceof 'IXR_Date' ) ) {
             return 'date';
         }
-        if (is_object($this->data) && is_a($this->data, 'IXR_Base64')) {
+        if (is_object($this->data) && ( $this->data instanceof 'IXR_Base64' ) ) {
             return 'base64';
         }
 
@@ -391,7 +391,7 @@
         $result = $this->call($this->message->methodName, $this->message->params);
 
         // Is the result an error?
-        if (is_a($result, 'IXR_Error')) {
+        if (( $result instanceof 'IXR_Error' ) ) {
             $this->error($result);
         }
 
@@ -538,7 +538,7 @@
             } else {
                 $result = $this->call($method, $params);
             }
-            if (is_a($result, 'IXR_Error')) {
+            if (( $result instanceof 'IXR_Error' ) ) {
                 $return[] = array(
                     'faultCode' => $result->code,
                     'faultString' => $result->message
@@ -976,7 +976,7 @@
                     break;
                 case 'date':
                 case 'dateTime.iso8601':
-                    if (!is_a($arg, 'IXR_Date')) {
+                    if (!( $arg instanceof 'IXR_Date' ) ) {
                         $ok = false;
                     }
                     break;
--- ./wp-includes/class-feed.php	2012-11-22 09:23:43.000000000 +0200
+++ /tmp/trans-21323-05207c.php	2013-01-04 21:35:46.950887156 +0200
@@ -27,7 +27,7 @@
 	}
 
 	function save($data) {
-		if ( is_a($data, 'SimplePie') )
+		if ( ( $data instanceof 'SimplePie' ) )
 			$data = $data->data;
 
 		set_transient($this->name, $data, $this->lifetime);
--- ./wp-includes/class-wp-customize-manager.php	2012-11-22 00:31:55.000000000 +0200
+++ /tmp/trans-21323-726d54.php	2013-01-04 21:35:48.194893321 +0200
@@ -525,7 +525,7 @@
 	 * @param array $args Setting arguments.
 	 */
 	public function add_setting( $id, $args = array() ) {
-		if ( is_a( $id, 'WP_Customize_Setting' ) )
+		if ( ( $id instanceof 'WP_Customize_Setting' ) )
 			$setting = $id;
 		else
 			$setting = new WP_Customize_Setting( $this, $id, $args );
@@ -566,7 +566,7 @@
 	 * @param array $args Section arguments.
 	 */
 	public function add_section( $id, $args = array() ) {
-		if ( is_a( $id, 'WP_Customize_Section' ) )
+		if ( ( $id instanceof 'WP_Customize_Section' ) )
 			$section = $id;
 		else
 			$section = new WP_Customize_Section( $this, $id, $args );
@@ -607,7 +607,7 @@
 	 * @param array $args Setting arguments.
 	 */
 	public function add_control( $id, $args = array() ) {
-		if ( is_a( $id, 'WP_Customize_Control' ) )
+		if ( ( $id instanceof 'WP_Customize_Control' ) )
 			$control = $id;
 		else
 			$control = new WP_Customize_Control( $this, $id, $args );
--- ./wp-includes/class-wp-error.php	2012-01-08 19:01:11.000000000 +0200
+++ /tmp/trans-21323-9da508.php	2013-01-04 21:35:48.346894075 +0200
@@ -204,7 +204,7 @@
  * @return bool True, if WP_Error. False, if not WP_Error.
  */
 function is_wp_error($thing) {
-	if ( is_object($thing) && is_a($thing, 'WP_Error') )
+	if ( is_object($thing) && ( $thing instanceof 'WP_Error' ) )
 		return true;
 	return false;
 }
--- ./wp-includes/class-wp-theme.php	2012-12-07 11:53:27.000000000 +0200
+++ /tmp/trans-21323-130475.php	2013-01-04 21:35:48.558895134 +0200
@@ -262,7 +262,7 @@
 		// Set the parent, if we're a child theme.
 		if ( $this->template != $this->stylesheet ) {
 			// If we are a parent, then there is a problem. Only two generations allowed! Cancel things out.
-			if ( is_a( $_child, 'WP_Theme' ) && $_child->template == $this->stylesheet ) {
+			if ( ( $_child instanceof 'WP_Theme' ) && $_child->template == $this->stylesheet ) {
 				$_child->parent = null;
 				$_child->errors = new WP_Error( 'theme_parent_invalid', sprintf( __( 'The "%s" theme is not a valid parent theme.' ), $_child->template ) );
 				$_child->cache_add( 'theme', array( 'headers' => $_child->headers, 'errors' => $_child->errors, 'stylesheet' => $_child->stylesheet, 'template' => $_child->template ) );
--- ./wp-includes/compat.php	2011-07-07 02:33:05.000000000 +0300
+++ /tmp/trans-21323-851977.php	2013-01-04 21:35:49.606900326 +0200
@@ -65,7 +65,7 @@
 	function json_encode( $string ) {
 		global $wp_json;
 
-		if ( !is_a($wp_json, 'Services_JSON') ) {
+		if ( !( $wp_json instanceof 'Services_JSON' ) ) {
 			require_once( ABSPATH . WPINC . '/class-json.php' );
 			$wp_json = new Services_JSON();
 		}
@@ -78,7 +78,7 @@
 	function json_decode( $string, $assoc_array = false ) {
 		global $wp_json;
 
-		if ( !is_a($wp_json, 'Services_JSON') ) {
+		if ( !( $wp_json instanceof 'Services_JSON' ) ) {
 			require_once( ABSPATH . WPINC . '/class-json.php' );
 			$wp_json = new Services_JSON();
 		}
--- ./wp-includes/deprecated.php	2012-11-22 11:52:16.000000000 +0200
+++ /tmp/trans-21323-394852.php	2013-01-04 21:35:50.078902665 +0200
@@ -2684,7 +2684,7 @@
 	if ( is_object($user) ) {
 		if ( !isset($user->ID) )
 			$user->ID = 0;
-		if ( !is_a( $user, 'WP_User' ) ) {
+		if ( !( $user instanceof 'WP_User' ) ) {
 			$vars = get_object_vars($user);
 			foreach ( array_keys($vars) as $field ) {
 				if ( is_string($user->$field) || is_numeric($user->$field) )
--- ./wp-includes/functions.wp-scripts.php	2012-08-30 21:57:57.000000000 +0300
+++ /tmp/trans-21323-5684d3.php	2013-01-04 21:35:50.758906036 +0200
@@ -24,7 +24,7 @@
 		$handles = false;
 
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof 'WP_Scripts' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -51,7 +51,7 @@
  */
 function wp_register_script( $handle, $src, $deps = array(), $ver = false, $in_footer = false ) {
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof 'WP_Scripts' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -85,7 +85,7 @@
  */
 function wp_localize_script( $handle, $object_name, $l10n ) {
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof 'WP_Scripts' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -104,7 +104,7 @@
  */
 function wp_deregister_script( $handle ) {
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof 'WP_Scripts' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -124,7 +124,7 @@
  */
 function wp_enqueue_script( $handle, $src = false, $deps = array(), $ver = false, $in_footer = false ) {
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof 'WP_Scripts' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -148,7 +148,7 @@
  */
 function wp_dequeue_script( $handle ) {
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof 'WP_Scripts' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -174,7 +174,7 @@
  */
 function wp_script_is( $handle, $list = 'enqueued' ) {
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof 'WP_Scripts' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
--- ./wp-includes/functions.wp-styles.php	2012-08-30 21:57:57.000000000 +0300
+++ /tmp/trans-21323-98859b.php	2013-01-04 21:35:50.782906155 +0200
@@ -25,7 +25,7 @@
 		do_action( 'wp_print_styles' );
 
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof 'WP_Styles' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -52,7 +52,7 @@
  */
 function wp_add_inline_style( $handle, $data ) {
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof 'WP_Styles' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -80,7 +80,7 @@
  */
 function wp_register_style( $handle, $src, $deps = array(), $ver = false, $media = 'all' ) {
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof 'WP_Styles' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -101,7 +101,7 @@
  */
 function wp_deregister_style( $handle ) {
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof 'WP_Styles' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -132,7 +132,7 @@
  */
 function wp_enqueue_style( $handle, $src = false, $deps = array(), $ver = false, $media = 'all' ) {
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof 'WP_Styles' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -154,7 +154,7 @@
  */
 function wp_dequeue_style( $handle ) {
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof 'WP_Styles' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -181,7 +181,7 @@
  */
 function wp_style_is( $handle, $list = 'enqueued' ) {
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof 'WP_Styles' ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
--- ./wp-includes/general-template.php	2012-11-17 17:11:29.000000000 +0200
+++ /tmp/trans-21323-d12a0a.php	2013-01-04 21:35:51.030907393 +0200
@@ -2085,7 +2085,7 @@
  */
 function wp_admin_css( $file = 'wp-admin', $force_echo = false ) {
 	global $wp_styles;
-	if ( !is_a($wp_styles, 'WP_Styles') )
+	if ( !( $wp_styles instanceof 'WP_Styles' ) )
 		$wp_styles = new WP_Styles();
 
 	// For backward compatibility
--- ./wp-includes/pluggable.php	2012-11-14 07:29:56.000000000 +0200
+++ /tmp/trans-21323-c173dc.php	2013-01-04 21:35:52.666915505 +0200
@@ -221,7 +221,7 @@
 	global $phpmailer;
 
 	// (Re)create it, if it's gone missing
-	if ( !is_object( $phpmailer ) || !is_a( $phpmailer, 'PHPMailer' ) ) {
+	if ( !is_object( $phpmailer ) || !( $phpmailer instanceof 'PHPMailer' ) ) {
 		require_once ABSPATH . WPINC . '/class-phpmailer.php';
 		require_once ABSPATH . WPINC . '/class-smtp.php';
 		$phpmailer = new PHPMailer( true );
--- ./wp-includes/post.php	2012-12-03 08:28:28.000000000 +0200
+++ /tmp/trans-21323-d4428b.php	2013-01-04 21:35:53.470919484 +0200
@@ -387,7 +387,7 @@
 	if ( empty( $post ) && isset( $GLOBALS['post'] ) )
 		$post = $GLOBALS['post'];
 
-	if ( is_a( $post, 'WP_Post' ) ) {
+	if ( ( $post instanceof 'WP_Post' ) ) {
 		$_post = $post;
 	} elseif ( is_object( $post ) ) {
 		if ( empty( $post->filter ) ) {
--- ./wp-includes/script-loader.php	2012-12-05 20:57:56.000000000 +0200
+++ /tmp/trans-21323-d5ce25.php	2013-01-04 21:35:54.178922996 +0200
@@ -643,7 +643,7 @@
 	if ( ! did_action('wp_print_scripts') )
 		do_action('wp_print_scripts');
 
-	if ( !is_a($wp_scripts, 'WP_Scripts') )
+	if ( !( $wp_scripts instanceof 'WP_Scripts' ) )
 		$wp_scripts = new WP_Scripts();
 
 	script_concat_settings();
@@ -665,7 +665,7 @@
 function print_footer_scripts() {
 	global $wp_scripts, $concatenate_scripts;
 
-	if ( !is_a($wp_scripts, 'WP_Scripts') )
+	if ( !( $wp_scripts instanceof 'WP_Scripts' ) )
 		return array(); // No need to run if not instantiated.
 
 	script_concat_settings();
@@ -724,7 +724,7 @@
 
 	global $wp_scripts;
 
-	if ( !is_a($wp_scripts, 'WP_Scripts') )
+	if ( !( $wp_scripts instanceof 'WP_Scripts' ) )
 		return array(); // no need to run if nothing is queued
 
 	return print_head_scripts();
@@ -769,7 +769,7 @@
 function print_admin_styles() {
 	global $wp_styles, $concatenate_scripts, $compress_css;
 
-	if ( !is_a($wp_styles, 'WP_Styles') )
+	if ( !( $wp_styles instanceof 'WP_Styles' ) )
 		$wp_styles = new WP_Styles();
 
 	script_concat_settings();
@@ -795,7 +795,7 @@
 function print_late_styles() {
 	global $wp_styles, $concatenate_scripts;
 
-	if ( !is_a($wp_styles, 'WP_Styles') )
+	if ( !( $wp_styles instanceof 'WP_Styles' ) )
 		return;
 
 	$wp_styles->do_concat = $concatenate_scripts;
--- ./wp-includes/user.php	2012-11-06 01:11:25.000000000 +0200
+++ /tmp/trans-21323-f82e72.php	2013-01-04 21:35:54.842926292 +0200
@@ -70,7 +70,7 @@
  */
 add_filter('authenticate', 'wp_authenticate_username_password', 20, 3);
 function wp_authenticate_username_password($user, $username, $password) {
-	if ( is_a($user, 'WP_User') ) { return $user; }
+	if ( ( $user instanceof 'WP_User' ) ) { return $user; }
 
 	if ( empty($username) || empty($password) ) {
 		$error = new WP_Error();
@@ -117,7 +117,7 @@
  * Authenticate the user using the WordPress auth cookie.
  */
 function wp_authenticate_cookie($user, $username, $password) {
-	if ( is_a($user, 'WP_User') ) { return $user; }
+	if ( ( $user instanceof 'WP_User' ) ) { return $user; }
 
 	if ( empty($username) && empty($password) ) {
 		$user_id = wp_validate_auth_cookie();
@@ -1282,9 +1282,9 @@
 function wp_insert_user( $userdata ) {
 	global $wpdb;
 
-	if ( is_a( $userdata, 'stdClass' ) )
+	if ( ( $userdata instanceof 'stdClass' ) )
 		$userdata = get_object_vars( $userdata );
-	elseif ( is_a( $userdata, 'WP_User' ) )
+	elseif ( ( $userdata instanceof 'WP_User' ) )
 		$userdata = $userdata->to_array();
 
 	extract( $userdata, EXTR_SKIP );
@@ -1443,9 +1443,9 @@
  * @return int|WP_Error The updated user's ID or a WP_Error object if the user could not be updated.
  */
 function wp_update_user($userdata) {
-	if ( is_a( $userdata, 'stdClass' ) )
+	if ( ( $userdata instanceof 'stdClass' ) )
 		$userdata = get_object_vars( $userdata );
-	elseif ( is_a( $userdata, 'WP_User' ) )
+	elseif ( ( $userdata instanceof 'WP_User' ) )
 		$userdata = $userdata->to_array();
 
 	$ID = (int) $userdata['ID'];
--- ./wp-includes/widgets.php	2012-10-04 23:00:16.000000000 +0300
+++ /tmp/trans-21323-2b2267.php	2013-01-04 21:35:54.966926905 +0200
@@ -1122,7 +1122,7 @@
 	global $wp_widget_factory;
 
 	$widget_obj = $wp_widget_factory->widgets[$widget];
-	if ( !is_a($widget_obj, 'WP_Widget') )
+	if ( !( $widget_obj instanceof 'WP_Widget' ) )
 		return;
 
 	$before_widget = sprintf('<div class="widget %s">', $widget_obj->widget_options['classname'] );

From wp at andrewnacin.com  Fri Jan  4 19:49:39 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 4 Jan 2013 14:49:39 -0500
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <0000013c071a6cab-6bb99c75-aa3e-458f-845f-780fe7fc40ba-000000@email.amazonses.com>
References: <50E73140.5010703@time.ly>
	<0000013c071a6cab-6bb99c75-aa3e-458f-845f-780fe7fc40ba-000000@email.amazonses.com>
Message-ID: <CAP29Pvh+Sb7LXyfYqoBdnPCtFfpXZPst+bQJd11SioEpVhXPFg@mail.gmail.com>

On Fri, Jan 4, 2013 at 2:47 PM, Justas Butkus <jbutkus at time.ly> wrote:

> What a pity would be to curtail such a lunch, or at least a sensual impact
> of it, by doing a code replacement over it.
>
> There was no offence intended, and please find my patch attached, that
> would dismantle the cause of this issue, if applied, to alleviate my good
> intentions.
>
>
> The rationale behind my comment was just as good - to break the discussion
> about time consumption, while the change itself takes less time than
> thinking about it.
>

You should take a lunch to test your patch :-)

$a instanceof Some_Object
not
$a instanceof 'Some_Object'

From dyordan1 at ramapo.edu  Fri Jan  4 19:57:49 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Fri, 4 Jan 2013 14:57:49 -0500
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <CAP29Pvh+Sb7LXyfYqoBdnPCtFfpXZPst+bQJd11SioEpVhXPFg@mail.gmail.com>
References: <50E73140.5010703@time.ly>
	<0000013c071a6cab-6bb99c75-aa3e-458f-845f-780fe7fc40ba-000000@email.amazonses.com>
	<CAP29Pvh+Sb7LXyfYqoBdnPCtFfpXZPst+bQJd11SioEpVhXPFg@mail.gmail.com>
Message-ID: <A13303C4-C628-4412-965C-4665A742C020@ramapo.edu>

I haven't tested this myself, but according to the tests in http://stackoverflow.com/a/3017722, the two statements are equivalent. I'd only assume that to be so since it's the logical thing to do and PHP tends to be logical. In fact, if you had two objects $a and $b with the same class or parent class $a instanceof $b would still return true, which is rather peculiar. Regardless, the patch should still work. Cheers!

On Fri, 4 Jan 2013, at 2:49 PM, Andrew Nacin wrote:

> On Fri, Jan 4, 2013 at 2:47 PM, Justas Butkus <jbutkus at time.ly> wrote:
> 
>> What a pity would be to curtail such a lunch, or at least a sensual impact
>> of it, by doing a code replacement over it.
>> 
>> There was no offence intended, and please find my patch attached, that
>> would dismantle the cause of this issue, if applied, to alleviate my good
>> intentions.
>> 
>> 
>> The rationale behind my comment was just as good - to break the discussion
>> about time consumption, while the change itself takes less time than
>> thinking about it.
>> 
> 
> You should take a lunch to test your patch :-)
> 
> $a instanceof Some_Object
> not
> $a instanceof 'Some_Object'
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

~Dobri


From wp-hackers at zipsbazaar.co.uk  Fri Jan  4 21:05:53 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Fri, 04 Jan 2013 21:05:53 +0000
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <CAP29Pvh+Sb7LXyfYqoBdnPCtFfpXZPst+bQJd11SioEpVhXPFg@mail.gmail.com>
References: <50E73140.5010703@time.ly>
	<0000013c071a6cab-6bb99c75-aa3e-458f-845f-780fe7fc40ba-000000@email.amazonses.com>
	<CAP29Pvh+Sb7LXyfYqoBdnPCtFfpXZPst+bQJd11SioEpVhXPFg@mail.gmail.com>
Message-ID: <50E74431.5080607@zipsbazaar.co.uk>

On 04/01/2013 19:49, Andrew Nacin wrote:
> You should take a lunch to test your patch:-)
I have nothing but respect for you nacin, but why don't you channel your 
energy and influence into fixing this?

From lukebryan at sharefaith.com  Sat Jan  5 03:20:47 2013
From: lukebryan at sharefaith.com (Luke Bryan)
Date: Fri, 4 Jan 2013 19:20:47 -0800
Subject: [wp-hackers] Wordpress uploader bug, and question
Message-ID: <CAFnKAk0jFvZ2m2BfC_3XM=JeA-1gcLXxFo1K1uzsWsnn+xkKpA@mail.gmail.com>

Greetings,

I recently found an exception in Wordpress 3.5's new uploader javascript:
Edit a gallery in a post, and after clicking update, it gives an
exception: TypeError: router is null

I saw a bug on trac about "Router is null" exception, though it is
marked fixed. Is this the same bug, or should this be reported as a
new problem?
https://core.trac.wordpress.org/ticket/22710
I think this might have been part of a problem I was having earlier
with catching some events and modifying parts of an upload-form.

I was also curious whether or not there are any plans for adding a
filter/hook for function wp_ajax_query_attachments() in
ajax-actions.php, for adding images/items to the ajax response used by
the uploader? Or is there a javascript/backbone hook for this type of
functionality?

Best regards, and happy new year,
Luke

From wp at andrewnacin.com  Sat Jan  5 04:12:51 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 4 Jan 2013 23:12:51 -0500
Subject: [wp-hackers] Wordpress uploader bug, and question
In-Reply-To: <CAFnKAk0jFvZ2m2BfC_3XM=JeA-1gcLXxFo1K1uzsWsnn+xkKpA@mail.gmail.com>
References: <CAFnKAk0jFvZ2m2BfC_3XM=JeA-1gcLXxFo1K1uzsWsnn+xkKpA@mail.gmail.com>
Message-ID: <CAP29PvhcGKJufeOd7Ru9M+_0cvkkw0TTmM0C+3v9hwa+RckNdg@mail.gmail.com>

On Fri, Jan 4, 2013 at 10:20 PM, Luke Bryan <lukebryan at sharefaith.com>wrote:
>
> I saw a bug on trac about "Router is null" exception, though it is
> marked fixed. Is this the same bug, or should this be reported as a
> new problem?
> https://core.trac.wordpress.org/ticket/22710


This will be fixed in 3.5.1. https://core.trac.wordpress.org/ticket/22930


> I was also curious whether or not there are any plans for adding a
> filter/hook for function wp_ajax_query_attachments() in
> ajax-actions.php, for adding images/items to the ajax response used by
> the uploader? Or is there a javascript/backbone hook for this type of
> functionality?


You can add things to attachments using the wp_prepare_attachment_for_js
filter. Actually adding items could happen through filtering the query
itself.

Nacin

From wpmidia at gmail.com  Sun Jan  6 14:50:20 2013
From: wpmidia at gmail.com (wpmidia lab)
Date: Sun, 6 Jan 2013 12:50:20 -0200
Subject: [wp-hackers] Custom image sizes to editor... Not working?
Message-ID: <CADqS_ax+2RVfk5Dbt6F9tFApCpq3DXJsBPHqwyHga2j45JVDrw@mail.gmail.com>

I used the hook *attachment_fields_to_edit *to include custom image sizes
to media upload, but with the new version of WP stopped working! What do I
do now? Which hook should I use??


thanks!
-- 
*M?riam de Paula *
*Twitter:* @miriamdepaula

*desenvolvimento web*
http://wpmidia.com.br
twitter: @wpmidia

*WordPress Brasil no Facebook:*
http://www.facebook.com/groups/wordpress.brasil

*OpenCart Brasil no Facebook:*
http://www.facebook.com/groups/opencart.brasil/




*Hospedagem de Qualidade ? na HostGator<http://www.hostgator.com.br/6133-4.html>
*

From chris at lod.com  Sun Jan  6 14:55:53 2013
From: chris at lod.com (chris mccoy)
Date: Sun, 6 Jan 2013 09:55:53 -0500
Subject: [wp-hackers] Custom image sizes to editor... Not working?
In-Reply-To: <CADqS_ax+2RVfk5Dbt6F9tFApCpq3DXJsBPHqwyHga2j45JVDrw@mail.gmail.com>
References: <CADqS_ax+2RVfk5Dbt6F9tFApCpq3DXJsBPHqwyHga2j45JVDrw@mail.gmail.com>
Message-ID: <000001cdec1d$ed151140$c73f33c0$@lod.com>

Do you want your custom sizes to show up?

You need to use image_size_names_choose

http://kucrut.org/insert-image-with-custom-size-into-post/

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of wpmidia lab
Sent: January 6, 2013 9:50 AM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] Custom image sizes to editor... Not working?

I used the hook *attachment_fields_to_edit *to include custom image sizes to
media upload, but with the new version of WP stopped working! What do I do
now? Which hook should I use??


thanks!
--
*M?riam de Paula *
*Twitter:* @miriamdepaula

*desenvolvimento web*
http://wpmidia.com.br
twitter: @wpmidia

*WordPress Brasil no Facebook:*
http://www.facebook.com/groups/wordpress.brasil

*OpenCart Brasil no Facebook:*
http://www.facebook.com/groups/opencart.brasil/




*Hospedagem de Qualidade ? na
HostGator<http://www.hostgator.com.br/6133-4.html>
*
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From ljunior2005 at gmail.com  Sun Jan  6 15:02:22 2013
From: ljunior2005 at gmail.com (Leo Baiano)
Date: Sun, 6 Jan 2013 12:02:22 -0300
Subject: [wp-hackers] Custom image sizes to editor... Not working?
In-Reply-To: <000001cdec1d$ed151140$c73f33c0$@lod.com>
References: <CADqS_ax+2RVfk5Dbt6F9tFApCpq3DXJsBPHqwyHga2j45JVDrw@mail.gmail.com>
	<000001cdec1d$ed151140$c73f33c0$@lod.com>
Message-ID: <CAL1O-KWecMP4X0dQ5dCXw15GSuXWux3gVL0DiyM_VKGrDJjE8g@mail.gmail.com>

http://core.trac.wordpress.org/changeset/22783


2013/1/6 chris mccoy <chris at lod.com>

> Do you want your custom sizes to show up?
>
> You need to use image_size_names_choose
>
> http://kucrut.org/insert-image-with-custom-size-into-post/
>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of wpmidia lab
> Sent: January 6, 2013 9:50 AM
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] Custom image sizes to editor... Not working?
>
> I used the hook *attachment_fields_to_edit *to include custom image sizes
> to
> media upload, but with the new version of WP stopped working! What do I do
> now? Which hook should I use??
>
>
> thanks!
> --
> *M?riam de Paula *
> *Twitter:* @miriamdepaula
>
> *desenvolvimento web*
> http://wpmidia.com.br
> twitter: @wpmidia
>
> *WordPress Brasil no Facebook:*
> http://www.facebook.com/groups/wordpress.brasil
>
> *OpenCart Brasil no Facebook:*
> http://www.facebook.com/groups/opencart.brasil/
>
>
>
>
> *Hospedagem de Qualidade ? na
> HostGator<http://www.hostgator.com.br/6133-4.html>
> *
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Amplexos,

Leo Baiano
http://www.leobaiano.com
http://www.blog.ljunior.com
http://www.mcelebridades.com
http://www.twitter.com/leobaiano

From wpmidia at gmail.com  Sun Jan  6 17:17:28 2013
From: wpmidia at gmail.com (wpmidia lab)
Date: Sun, 6 Jan 2013 15:17:28 -0200
Subject: [wp-hackers] Custom image sizes to editor... Not working?
In-Reply-To: <000001cdec1d$ed151140$c73f33c0$@lod.com>
References: <CADqS_ax+2RVfk5Dbt6F9tFApCpq3DXJsBPHqwyHga2j45JVDrw@mail.gmail.com>
	<000001cdec1d$ed151140$c73f33c0$@lod.com>
Message-ID: <CADqS_awGvZvKGnNs1TUNdvMtFqnwZX9sf6x=iybBNR3YKpEwpg@mail.gmail.com>

Very Very Thanks, Chris!!!!!!!!


:-)


2013/1/6 chris mccoy <chris at lod.com>

> Do you want your custom sizes to show up?
>
> You need to use image_size_names_choose
>
> http://kucrut.org/insert-image-with-custom-size-into-post/
>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of wpmidia lab
> Sent: January 6, 2013 9:50 AM
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] Custom image sizes to editor... Not working?
>
> I used the hook *attachment_fields_to_edit *to include custom image sizes
> to
> media upload, but with the new version of WP stopped working! What do I do
> now? Which hook should I use??
>
>
> thanks!
> --
> *M?riam de Paula *
> *Twitter:* @miriamdepaula
>
> *desenvolvimento web*
> http://wpmidia.com.br
> twitter: @wpmidia
>
> *WordPress Brasil no Facebook:*
> http://www.facebook.com/groups/wordpress.brasil
>
> *OpenCart Brasil no Facebook:*
> http://www.facebook.com/groups/opencart.brasil/
>
>
>
>
> *Hospedagem de Qualidade ? na
> HostGator<http://www.hostgator.com.br/6133-4.html>
> *
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
*M?riam de Paula *
*Twitter:* @miriamdepaula

*desenvolvimento web*
http://wpmidia.com.br
twitter: @wpmidia

*WordPress Brasil no Facebook:*
http://www.facebook.com/groups/wordpress.brasil

*OpenCart Brasil no Facebook:*
http://www.facebook.com/groups/opencart.brasil/




*Hospedagem de Qualidade ? na HostGator<http://www.hostgator.com.br/6133-4.html>
*

From jbutkus at time.ly  Sun Jan  6 20:18:44 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Sun, 6 Jan 2013 20:18:44 +0000
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <CAP29Pvh+Sb7LXyfYqoBdnPCtFfpXZPst+bQJd11SioEpVhXPFg@mail.gmail.com>
References: <50E73140.5010703@time.ly>
	<0000013c071a6cab-6bb99c75-aa3e-458f-845f-780fe7fc40ba-000000@email.amazonses.com>
	<CAP29Pvh+Sb7LXyfYqoBdnPCtFfpXZPst+bQJd11SioEpVhXPFg@mail.gmail.com>
Message-ID: <0000013c1183ef55-c828d944-540c-4a60-bc8d-5ede248f34fc-000000@email.amazonses.com>

On 2013.01.04 21:49, Andrew Nacin wrote:
> You should take a lunch to test your patch:-)
>
> $a instanceof Some_Object
> not
> $a instanceof 'Some_Object'
Actually I would say, that especially, if targeting PHP prior to 5.1, it 
is a good approach, to keep class names as scalar references (strings), 
and not as references handled by PHP.

That's according to http://us.php.net/instanceof Example #7. :-)

And as others pointed out - any case would work.
But that's more of an example - it still needs more of a decision, than 
patch, as I understand.


-- 
Kind regards,
Justas B.

From lukebryan at sharefaith.com  Mon Jan  7 07:02:30 2013
From: lukebryan at sharefaith.com (Luke Bryan)
Date: Sun, 6 Jan 2013 23:02:30 -0800
Subject: [wp-hackers] Wordpress uploader bug, and question (Andrew Nacin)
Message-ID: <CAFnKAk2We5CxxcBUJ_VDrZQW6VLx2oN-gi5J8tS0-4qHog+YZg@mail.gmail.com>

Thanks for the helpful response!

I had one other question regarding the events of the uploader... I
found that I could catch and show events of the uploader dialog with:
wp.media.editor.add('content').on('all',function(name) {alert(name);});

but I haven't found a way to do the same for the popup for editing
wordpress galleries from the tinymce-post-editor.
wp.media.bind and wp.media.editor.bind don't catch the events. Am I
missing a step?

Best regards,
Luke

On Sat, Jan 5, 2013 at 4:00 AM,
<wp-hackers-request at lists.automattic.com> wrote:
> Re: Wordpress uploader bug, and question (Andrew Nacin)

From jbutkus at time.ly  Mon Jan  7 08:25:42 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Mon, 7 Jan 2013 08:25:42 +0000
Subject: [wp-hackers] Micro optimization - is_a() vs instanceof
In-Reply-To: <0000013c1183ef55-c828d944-540c-4a60-bc8d-5ede248f34fc-000000@email.amazonses.com>
References: <50E73140.5010703@time.ly>
	<0000013c071a6cab-6bb99c75-aa3e-458f-845f-780fe7fc40ba-000000@email.amazonses.com>
	<CAP29Pvh+Sb7LXyfYqoBdnPCtFfpXZPst+bQJd11SioEpVhXPFg@mail.gmail.com>
	<0000013c1183ef55-c828d944-540c-4a60-bc8d-5ede248f34fc-000000@email.amazonses.com>
Message-ID: <0000013c141d7bec-b612ddfa-0e14-4f69-acd4-2fdb5263ce48-000000@email.amazonses.com>

Beg your pardon - that holds true for scalar _references_, not scalar 
_constants_.

Modified command, to generate patch (patch, itself, attached):
$ spatch -e 's/is_a( X, '\''Y'\'' )/ ( X instanceof Y ) /' 
/path/to/wordpress/

I should have over-looked something, and neither missed lunch, nor 
late-night readings helped to see to it. :-)


-- 
Best regards,
Justas B.
-------------- next part --------------
--- ./wp-admin/includes/class-wp-users-list-table.php	2012-11-19 23:43:47.000000000 +0200
+++ /tmp/trans-5100-5622e2.php	2013-01-07 10:12:30.065171051 +0200
@@ -227,7 +227,7 @@
 	function single_row( $user_object, $style = '', $role = '', $numposts = 0 ) {
 		global $wp_roles;
 
-		if ( !( is_object( $user_object ) && is_a( $user_object, 'WP_User' ) ) )
+		if ( !( is_object( $user_object ) && ( $user_object instanceof WP_User ) ) )
 			$user_object = get_userdata( (int) $user_object );
 		$user_object->filter = 'display';
 		$email = $user_object->user_email;
--- ./wp-admin/includes/screen.php	2012-09-26 22:44:43.000000000 +0300
+++ /tmp/trans-5100-d60119.php	2013-01-07 10:12:31.653178910 +0200
@@ -388,7 +388,7 @@
  	 */
 	public static function get( $hook_name = '' ) {
 
-		if ( is_a( $hook_name, 'WP_Screen' ) )
+		if ( ( $hook_name instanceof WP_Screen ) )
 			return $hook_name;
 
 		$post_type = $taxonomy = null;
--- ./wp-admin/includes/template.php	2012-11-30 15:40:59.000000000 +0200
+++ /tmp/trans-5100-6c83e3.php	2013-01-07 10:12:31.853179909 +0200
@@ -100,7 +100,7 @@
 
 	extract( wp_parse_args($args, $defaults), EXTR_SKIP );
 
-	if ( empty($walker) || !is_a($walker, 'Walker') )
+	if ( empty($walker) || !( $walker instanceof Walker ) )
 		$walker = new Walker_Category_Checklist;
 
 	$descendants_and_self = (int) $descendants_and_self;
--- ./wp-admin/includes/theme.php	2012-09-05 01:35:12.000000000 +0300
+++ /tmp/trans-5100-54765f.php	2013-01-07 10:12:31.905180175 +0200
@@ -117,7 +117,7 @@
 	if ( !isset($themes_update) )
 		$themes_update = get_site_transient('update_themes');
 
-	if ( ! is_a( $theme, 'WP_Theme' ) )
+	if ( ! ( $theme instanceof WP_Theme ) )
 		return;
 
 	$stylesheet = $theme->get_stylesheet();
--- ./wp-includes/Text/Diff.php	2010-02-19 03:25:26.000000000 +0200
+++ /tmp/trans-5100-fe5a91.php	2013-01-07 10:12:44.093240605 +0200
@@ -74,8 +74,8 @@
     {
         $count = 0;
         foreach ($this->_edits as $edit) {
-            if (is_a($edit, 'Text_Diff_Op_add') ||
-                is_a($edit, 'Text_Diff_Op_change')) {
+            if (( $edit instanceof Text_Diff_Op_add ) ||
+                ( $edit instanceof Text_Diff_Op_change ) ) {
                 $count += $edit->nfinal();
             }
         }
@@ -93,8 +93,8 @@
     {
         $count = 0;
         foreach ($this->_edits as $edit) {
-            if (is_a($edit, 'Text_Diff_Op_delete') ||
-                is_a($edit, 'Text_Diff_Op_change')) {
+            if (( $edit instanceof Text_Diff_Op_delete ) ||
+                ( $edit instanceof Text_Diff_Op_change ) ) {
                 $count += $edit->norig();
             }
         }
@@ -137,7 +137,7 @@
     function isEmpty()
     {
         foreach ($this->_edits as $edit) {
-            if (!is_a($edit, 'Text_Diff_Op_copy')) {
+            if (!( $edit instanceof Text_Diff_Op_copy ) ) {
                 return false;
             }
         }
@@ -155,7 +155,7 @@
     {
         $lcs = 0;
         foreach ($this->_edits as $edit) {
-            if (is_a($edit, 'Text_Diff_Op_copy')) {
+            if (( $edit instanceof Text_Diff_Op_copy ) ) {
                 $lcs += count($edit->orig);
             }
         }
--- ./wp-includes/Text/Diff/Renderer.php	2010-02-19 03:25:26.000000000 +0200
+++ /tmp/trans-5100-5b6755.php	2013-01-07 10:12:44.225241266 +0200
@@ -83,7 +83,7 @@
             /* If these are unchanged (copied) lines, and we want to keep
              * leading or trailing context lines, extract them from the copy
              * block. */
-            if (is_a($edit, 'Text_Diff_Op_copy')) {
+            if (( $edit instanceof Text_Diff_Op_copy ) ) {
                 /* Do we have any diff blocks yet? */
                 if (is_array($block)) {
                     /* How many lines to keep as context from the copy
--- ./wp-includes/capabilities.php	2012-12-07 11:53:27.000000000 +0200
+++ /tmp/trans-5100-948866.php	2013-01-07 10:12:44.685243528 +0200
@@ -483,7 +483,7 @@
 			);
 		}
 
-		if ( is_a( $id, 'WP_User' ) ) {
+		if ( ( $id instanceof WP_User ) ) {
 			$this->init( $id->data, $blog_id );
 			return;
 		} elseif ( is_object( $id ) ) {
--- ./wp-includes/category-template.php	2012-11-20 20:31:06.000000000 +0200
+++ /tmp/trans-5100-7ef176.php	2013-01-07 10:12:44.805244126 +0200
@@ -730,7 +730,7 @@
 function walk_category_tree() {
 	$args = func_get_args();
 	// the user's options are the third parameter
-	if ( empty($args[2]['walker']) || !is_a($args[2]['walker'], 'Walker') )
+	if ( empty($args[2]['walker']) || !( $args[2]['walker'] instanceof Walker ) )
 		$walker = new Walker_Category;
 	else
 		$walker = $args[2]['walker'];
@@ -748,7 +748,7 @@
 function walk_category_dropdown_tree() {
 	$args = func_get_args();
 	// the user's options are the third parameter
-	if ( empty($args[2]['walker']) || !is_a($args[2]['walker'], 'Walker') )
+	if ( empty($args[2]['walker']) || !( $args[2]['walker'] instanceof Walker ) )
 		$walker = new Walker_CategoryDropdown;
 	else
 		$walker = $args[2]['walker'];
--- ./wp-includes/class-IXR.php	2012-08-15 23:12:00.000000000 +0300
+++ /tmp/trans-5100-30199c.php	2013-01-07 10:12:44.945244836 +0200
@@ -82,10 +82,10 @@
         }
 
         // Deal with IXR object types base64 and date
-        if (is_object($this->data) && is_a($this->data, 'IXR_Date')) {
+        if (is_object($this->data) && ( $this->data instanceof IXR_Date ) ) {
             return 'date';
         }
-        if (is_object($this->data) && is_a($this->data, 'IXR_Base64')) {
+        if (is_object($this->data) && ( $this->data instanceof IXR_Base64 ) ) {
             return 'base64';
         }
 
@@ -391,7 +391,7 @@
         $result = $this->call($this->message->methodName, $this->message->params);
 
         // Is the result an error?
-        if (is_a($result, 'IXR_Error')) {
+        if (( $result instanceof IXR_Error ) ) {
             $this->error($result);
         }
 
@@ -538,7 +538,7 @@
             } else {
                 $result = $this->call($method, $params);
             }
-            if (is_a($result, 'IXR_Error')) {
+            if (( $result instanceof IXR_Error ) ) {
                 $return[] = array(
                     'faultCode' => $result->code,
                     'faultString' => $result->message
@@ -976,7 +976,7 @@
                     break;
                 case 'date':
                 case 'dateTime.iso8601':
-                    if (!is_a($arg, 'IXR_Date')) {
+                    if (!( $arg instanceof IXR_Date ) ) {
                         $ok = false;
                     }
                     break;
--- ./wp-includes/class-feed.php	2012-11-22 09:23:43.000000000 +0200
+++ /tmp/trans-5100-14a729.php	2013-01-07 10:12:44.965244929 +0200
@@ -27,7 +27,7 @@
 	}
 
 	function save($data) {
-		if ( is_a($data, 'SimplePie') )
+		if ( ( $data instanceof SimplePie ) )
 			$data = $data->data;
 
 		set_transient($this->name, $data, $this->lifetime);
--- ./wp-includes/class-wp-customize-manager.php	2012-11-22 00:31:55.000000000 +0200
+++ /tmp/trans-5100-b4faac.php	2013-01-07 10:12:46.173250920 +0200
@@ -525,7 +525,7 @@
 	 * @param array $args Setting arguments.
 	 */
 	public function add_setting( $id, $args = array() ) {
-		if ( is_a( $id, 'WP_Customize_Setting' ) )
+		if ( ( $id instanceof WP_Customize_Setting ) )
 			$setting = $id;
 		else
 			$setting = new WP_Customize_Setting( $this, $id, $args );
@@ -566,7 +566,7 @@
 	 * @param array $args Section arguments.
 	 */
 	public function add_section( $id, $args = array() ) {
-		if ( is_a( $id, 'WP_Customize_Section' ) )
+		if ( ( $id instanceof WP_Customize_Section ) )
 			$section = $id;
 		else
 			$section = new WP_Customize_Section( $this, $id, $args );
@@ -607,7 +607,7 @@
 	 * @param array $args Setting arguments.
 	 */
 	public function add_control( $id, $args = array() ) {
-		if ( is_a( $id, 'WP_Customize_Control' ) )
+		if ( ( $id instanceof WP_Customize_Control ) )
 			$control = $id;
 		else
 			$control = new WP_Customize_Control( $this, $id, $args );
--- ./wp-includes/class-wp-error.php	2012-01-08 19:01:11.000000000 +0200
+++ /tmp/trans-5100-c1eb74.php	2013-01-07 10:12:46.361251838 +0200
@@ -204,7 +204,7 @@
  * @return bool True, if WP_Error. False, if not WP_Error.
  */
 function is_wp_error($thing) {
-	if ( is_object($thing) && is_a($thing, 'WP_Error') )
+	if ( is_object($thing) && ( $thing instanceof WP_Error ) )
 		return true;
 	return false;
 }
--- ./wp-includes/class-wp-theme.php	2012-12-07 11:53:27.000000000 +0200
+++ /tmp/trans-5100-14e704.php	2013-01-07 10:12:46.613253109 +0200
@@ -262,7 +262,7 @@
 		// Set the parent, if we're a child theme.
 		if ( $this->template != $this->stylesheet ) {
 			// If we are a parent, then there is a problem. Only two generations allowed! Cancel things out.
-			if ( is_a( $_child, 'WP_Theme' ) && $_child->template == $this->stylesheet ) {
+			if ( ( $_child instanceof WP_Theme ) && $_child->template == $this->stylesheet ) {
 				$_child->parent = null;
 				$_child->errors = new WP_Error( 'theme_parent_invalid', sprintf( __( 'The "%s" theme is not a valid parent theme.' ), $_child->template ) );
 				$_child->cache_add( 'theme', array( 'headers' => $_child->headers, 'errors' => $_child->errors, 'stylesheet' => $_child->stylesheet, 'template' => $_child->template ) );
--- ./wp-includes/compat.php	2011-07-07 02:33:05.000000000 +0300
+++ /tmp/trans-5100-c94878.php	2013-01-07 10:12:47.629258126 +0200
@@ -65,7 +65,7 @@
 	function json_encode( $string ) {
 		global $wp_json;
 
-		if ( !is_a($wp_json, 'Services_JSON') ) {
+		if ( !( $wp_json instanceof Services_JSON ) ) {
 			require_once( ABSPATH . WPINC . '/class-json.php' );
 			$wp_json = new Services_JSON();
 		}
@@ -78,7 +78,7 @@
 	function json_decode( $string, $assoc_array = false ) {
 		global $wp_json;
 
-		if ( !is_a($wp_json, 'Services_JSON') ) {
+		if ( !( $wp_json instanceof Services_JSON ) ) {
 			require_once( ABSPATH . WPINC . '/class-json.php' );
 			$wp_json = new Services_JSON();
 		}
--- ./wp-includes/deprecated.php	2012-11-22 11:52:16.000000000 +0200
+++ /tmp/trans-5100-d4c28d.php	2013-01-07 10:12:48.173260835 +0200
@@ -2684,7 +2684,7 @@
 	if ( is_object($user) ) {
 		if ( !isset($user->ID) )
 			$user->ID = 0;
-		if ( !is_a( $user, 'WP_User' ) ) {
+		if ( !( $user instanceof WP_User ) ) {
 			$vars = get_object_vars($user);
 			foreach ( array_keys($vars) as $field ) {
 				if ( is_string($user->$field) || is_numeric($user->$field) )
--- ./wp-includes/functions.wp-scripts.php	2012-08-30 21:57:57.000000000 +0300
+++ /tmp/trans-5100-fe0395.php	2013-01-07 10:12:48.917264528 +0200
@@ -24,7 +24,7 @@
 		$handles = false;
 
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof WP_Scripts ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -51,7 +51,7 @@
  */
 function wp_register_script( $handle, $src, $deps = array(), $ver = false, $in_footer = false ) {
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof WP_Scripts ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -85,7 +85,7 @@
  */
 function wp_localize_script( $handle, $object_name, $l10n ) {
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof WP_Scripts ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -104,7 +104,7 @@
  */
 function wp_deregister_script( $handle ) {
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof WP_Scripts ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -124,7 +124,7 @@
  */
 function wp_enqueue_script( $handle, $src = false, $deps = array(), $ver = false, $in_footer = false ) {
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof WP_Scripts ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -148,7 +148,7 @@
  */
 function wp_dequeue_script( $handle ) {
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof WP_Scripts ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -174,7 +174,7 @@
  */
 function wp_script_is( $handle, $list = 'enqueued' ) {
 	global $wp_scripts;
-	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
+	if ( ! ( $wp_scripts instanceof WP_Scripts ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
--- ./wp-includes/functions.wp-styles.php	2012-08-30 21:57:57.000000000 +0300
+++ /tmp/trans-5100-a65fa9.php	2013-01-07 10:12:48.957264717 +0200
@@ -25,7 +25,7 @@
 		do_action( 'wp_print_styles' );
 
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof WP_Styles ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -52,7 +52,7 @@
  */
 function wp_add_inline_style( $handle, $data ) {
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof WP_Styles ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -80,7 +80,7 @@
  */
 function wp_register_style( $handle, $src, $deps = array(), $ver = false, $media = 'all' ) {
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof WP_Styles ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -101,7 +101,7 @@
  */
 function wp_deregister_style( $handle ) {
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof WP_Styles ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -132,7 +132,7 @@
  */
 function wp_enqueue_style( $handle, $src = false, $deps = array(), $ver = false, $media = 'all' ) {
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof WP_Styles ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -154,7 +154,7 @@
  */
 function wp_dequeue_style( $handle ) {
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof WP_Styles ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
@@ -181,7 +181,7 @@
  */
 function wp_style_is( $handle, $list = 'enqueued' ) {
 	global $wp_styles;
-	if ( ! is_a( $wp_styles, 'WP_Styles' ) ) {
+	if ( ! ( $wp_styles instanceof WP_Styles ) ) {
 		if ( ! did_action( 'init' ) )
 			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
 				'<code>wp_enqueue_scripts</code>', '<code>admin_enqueue_scripts</code>', '<code>init</code>' ), '3.3' );
--- ./wp-includes/general-template.php	2012-11-17 17:11:29.000000000 +0200
+++ /tmp/trans-5100-e3b00e.php	2013-01-07 10:12:49.201265935 +0200
@@ -2085,7 +2085,7 @@
  */
 function wp_admin_css( $file = 'wp-admin', $force_echo = false ) {
 	global $wp_styles;
-	if ( !is_a($wp_styles, 'WP_Styles') )
+	if ( !( $wp_styles instanceof WP_Styles ) )
 		$wp_styles = new WP_Styles();
 
 	// For backward compatibility
--- ./wp-includes/pluggable.php	2012-11-14 07:29:56.000000000 +0200
+++ /tmp/trans-5100-f20c59.php	2013-01-07 10:12:51.049275090 +0200
@@ -221,7 +221,7 @@
 	global $phpmailer;
 
 	// (Re)create it, if it's gone missing
-	if ( !is_object( $phpmailer ) || !is_a( $phpmailer, 'PHPMailer' ) ) {
+	if ( !is_object( $phpmailer ) || !( $phpmailer instanceof PHPMailer ) ) {
 		require_once ABSPATH . WPINC . '/class-phpmailer.php';
 		require_once ABSPATH . WPINC . '/class-smtp.php';
 		$phpmailer = new PHPMailer( true );
--- ./wp-includes/post.php	2012-12-03 08:28:28.000000000 +0200
+++ /tmp/trans-5100-cc6708.php	2013-01-07 10:12:51.873279170 +0200
@@ -387,7 +387,7 @@
 	if ( empty( $post ) && isset( $GLOBALS['post'] ) )
 		$post = $GLOBALS['post'];
 
-	if ( is_a( $post, 'WP_Post' ) ) {
+	if ( ( $post instanceof WP_Post ) ) {
 		$_post = $post;
 	} elseif ( is_object( $post ) ) {
 		if ( empty( $post->filter ) ) {
--- ./wp-includes/script-loader.php	2012-12-05 20:57:56.000000000 +0200
+++ /tmp/trans-5100-e12717.php	2013-01-07 10:12:52.569282635 +0200
@@ -643,7 +643,7 @@
 	if ( ! did_action('wp_print_scripts') )
 		do_action('wp_print_scripts');
 
-	if ( !is_a($wp_scripts, 'WP_Scripts') )
+	if ( !( $wp_scripts instanceof WP_Scripts ) )
 		$wp_scripts = new WP_Scripts();
 
 	script_concat_settings();
@@ -665,7 +665,7 @@
 function print_footer_scripts() {
 	global $wp_scripts, $concatenate_scripts;
 
-	if ( !is_a($wp_scripts, 'WP_Scripts') )
+	if ( !( $wp_scripts instanceof WP_Scripts ) )
 		return array(); // No need to run if not instantiated.
 
 	script_concat_settings();
@@ -724,7 +724,7 @@
 
 	global $wp_scripts;
 
-	if ( !is_a($wp_scripts, 'WP_Scripts') )
+	if ( !( $wp_scripts instanceof WP_Scripts ) )
 		return array(); // no need to run if nothing is queued
 
 	return print_head_scripts();
@@ -769,7 +769,7 @@
 function print_admin_styles() {
 	global $wp_styles, $concatenate_scripts, $compress_css;
 
-	if ( !is_a($wp_styles, 'WP_Styles') )
+	if ( !( $wp_styles instanceof WP_Styles ) )
 		$wp_styles = new WP_Styles();
 
 	script_concat_settings();
@@ -795,7 +795,7 @@
 function print_late_styles() {
 	global $wp_styles, $concatenate_scripts;
 
-	if ( !is_a($wp_styles, 'WP_Styles') )
+	if ( !( $wp_styles instanceof WP_Styles ) )
 		return;
 
 	$wp_styles->do_concat = $concatenate_scripts;
--- ./wp-includes/user.php	2012-11-06 01:11:25.000000000 +0200
+++ /tmp/trans-5100-7c4f43.php	2013-01-07 10:12:53.397286731 +0200
@@ -70,7 +70,7 @@
  */
 add_filter('authenticate', 'wp_authenticate_username_password', 20, 3);
 function wp_authenticate_username_password($user, $username, $password) {
-	if ( is_a($user, 'WP_User') ) { return $user; }
+	if ( ( $user instanceof WP_User ) ) { return $user; }
 
 	if ( empty($username) || empty($password) ) {
 		$error = new WP_Error();
@@ -117,7 +117,7 @@
  * Authenticate the user using the WordPress auth cookie.
  */
 function wp_authenticate_cookie($user, $username, $password) {
-	if ( is_a($user, 'WP_User') ) { return $user; }
+	if ( ( $user instanceof WP_User ) ) { return $user; }
 
 	if ( empty($username) && empty($password) ) {
 		$user_id = wp_validate_auth_cookie();
@@ -1282,9 +1282,9 @@
 function wp_insert_user( $userdata ) {
 	global $wpdb;
 
-	if ( is_a( $userdata, 'stdClass' ) )
+	if ( ( $userdata instanceof stdClass ) )
 		$userdata = get_object_vars( $userdata );
-	elseif ( is_a( $userdata, 'WP_User' ) )
+	elseif ( ( $userdata instanceof WP_User ) )
 		$userdata = $userdata->to_array();
 
 	extract( $userdata, EXTR_SKIP );
@@ -1443,9 +1443,9 @@
  * @return int|WP_Error The updated user's ID or a WP_Error object if the user could not be updated.
  */
 function wp_update_user($userdata) {
-	if ( is_a( $userdata, 'stdClass' ) )
+	if ( ( $userdata instanceof stdClass ) )
 		$userdata = get_object_vars( $userdata );
-	elseif ( is_a( $userdata, 'WP_User' ) )
+	elseif ( ( $userdata instanceof WP_User ) )
 		$userdata = $userdata->to_array();
 
 	$ID = (int) $userdata['ID'];
--- ./wp-includes/widgets.php	2012-10-04 23:00:16.000000000 +0300
+++ /tmp/trans-5100-637085.php	2013-01-07 10:12:53.553287505 +0200
@@ -1122,7 +1122,7 @@
 	global $wp_widget_factory;
 
 	$widget_obj = $wp_widget_factory->widgets[$widget];
-	if ( !is_a($widget_obj, 'WP_Widget') )
+	if ( !( $widget_obj instanceof WP_Widget ) )
 		return;
 
 	$before_widget = sprintf('<div class="widget %s">', $widget_obj->widget_options['classname'] );

From a.hoereth at gmail.com  Tue Jan  8 17:31:30 2013
From: a.hoereth at gmail.com (=?ISO-8859-1?Q?Alexander_H=F6reth?=)
Date: Tue, 8 Jan 2013 18:31:30 +0100
Subject: [wp-hackers] 3.5 Media Manager
Message-ID: <CAFtaa=S1YisV52CLZw0w0N-CjyuM4Q_go6cmKwi2fgMT+yfNrg@mail.gmail.com>

Hey there,
where can I find documentation about the new Media Manager? I didnt find
anything.

Already tried looking into the code, but reverse engineering really is
difficult for this one..
Thanks

From chris at lod.com  Tue Jan  8 19:55:38 2013
From: chris at lod.com (chris mccoy)
Date: Tue, 8 Jan 2013 14:55:38 -0500
Subject: [wp-hackers] 3.5 Media Manager
In-Reply-To: <CAFtaa=S1YisV52CLZw0w0N-CjyuM4Q_go6cmKwi2fgMT+yfNrg@mail.gmail.com>
References: <CAFtaa=S1YisV52CLZw0w0N-CjyuM4Q_go6cmKwi2fgMT+yfNrg@mail.gmail.com>
Message-ID: <001201cdedda$21d7d9e0$65878da0$@lod.com>

Here are a few links that might interest you.

http://mikejolley.com/2012/12/using-the-new-wordpress-3-5-media-uploader-in-
plugins/

http://www.blazersix.com/blog/wordpress-image-widget/

plugin uses the media manager

http://wordpress.org/extend/plugins/attachments/



-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Alexander
H?reth
Sent: January 8, 2013 12:32 PM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] 3.5 Media Manager

Hey there,
where can I find documentation about the new Media Manager? I didnt find
anything.

Already tried looking into the code, but reverse engineering really is
difficult for this one..
Thanks
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From david at wordshell.net  Fri Jan 11 11:36:15 2013
From: david at wordshell.net (David Anderson)
Date: Fri, 11 Jan 2013 11:36:15 +0000
Subject: [wp-hackers] POSTing a file via wp_remote_post
Message-ID: <50EFF92F.9080206@wordshell.net>

I'm creating a WordPress consumer for the PHP DropBox API 
(https://github.com/benthedesigner/dropbox). This will allow using that 
API toolkit inside a WordPress plugin, and being able to use 
wp_remote_post function for widest compatibility. (The API toolkit 
presently only has a Curl consumer).

This is working for basic POST requests. That was easy; when passed an 
array of things to POST, I send them along to wp_remote_post.

However, when it comes to uploading files, the DropBox API kit is 
passing me arrays like this. Notice the array entry for file:

Array
(
     [filename] => myfolder/myfile.zip
     [file] => @/path/to/myfile.zip;filename=myfolder/myfile.zip
     [filename] => myfolder/myfile.zip
     [oauth_consumer_key] => (snip)
     [oauth_signature_method] => PLAINTEXT
     [oauth_token] => (snip)
     [oauth_version] => 1.0
     [overwrite] => 1
     [oauth_signature] => (snip)&1d6uqpi59mux2hn
)

That array entry is keyed for Curl, which can takes entries pre-pended 
with @, and uses the file data from the indicated file (see 
http://php.net/manual/en/function.curl-setopt.php).

My consumer needs to detect that case, and convert it into the proper 
arguments for a call to wp_remote_post.

Unfortunately the parameters for wp_remote_post are not well documented. 
Reading the source code, it looks like the argument 'stream' could be 
something to do with what I want. That appears to stream a file. But 
then what about the other parameters that needing posting too? How can I 
achieve what Curl is achieving, but using wp_remote_post? (Reading the 
whole file into memory is not an option - it could potentially be more 
than available memory).

Can anybody give me a hand?

Thank you,
David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From lists at rotorised.com  Fri Jan 11 11:59:31 2013
From: lists at rotorised.com (Ryan McCue)
Date: Fri, 11 Jan 2013 21:59:31 +1000
Subject: [wp-hackers] POSTing a file via wp_remote_post
In-Reply-To: <50EFF92F.9080206@wordshell.net>
References: <50EFF92F.9080206@wordshell.net>
Message-ID: <50EFFEA3.2090604@rotorised.com>

David Anderson wrote:
> Unfortunately the parameters for wp_remote_post are not well documented.
> Reading the source code, it looks like the argument 'stream' could be
> something to do with what I want. That appears to stream a file. But
> then what about the other parameters that needing posting too? How can I
> achieve what Curl is achieving, but using wp_remote_post? (Reading the
> whole file into memory is not an option - it could potentially be more
> than available memory).

The various parts there need to be converted into their HTTP
representations. The OAuth parts should be parsed by an OAuth library
into an Authorization header.

`filename` is probably passed as a Content-Disposition header, but I'm
not sure. `overwrite` should be passed in the URL as you're posting.

Your best bet is to work from the Dropbox API documentation:
https://www.dropbox.com/developers/reference/api#files-POST

Something like this would probably work:

	$auth_header = ''; // use OAuth library here to generate this
	$response =
wp_remote_post('https://api-content.dropbox.com/1/files/.../...?overwrite=1',
array(
		'stream' => '/path/to/myfile.zip',
		'headers' => array(
			'Authorization' => $auth_header,
			'Content-Disposition' => 'attachment; filename=myfolder/myfile.zip'
		),
	);

-- 
Ryan McCue
<http://ryanmccue.info/>

From david at wordshell.net  Fri Jan 11 12:10:56 2013
From: david at wordshell.net (David Anderson)
Date: Fri, 11 Jan 2013 12:10:56 +0000
Subject: [wp-hackers] POSTing a file via wp_remote_post
In-Reply-To: <mailman.11.1357905602.17988.wp-hackers@lists.automattic.com>
References: <mailman.11.1357905602.17988.wp-hackers@lists.automattic.com>
Message-ID: <50F00150.2070300@wordshell.net>

> The various parts there need to be converted into their HTTP
> representations. The OAuth parts should be parsed by an OAuth library
> into an Authorization header.
The DropBox PHP toolkit (https://github.com/benthedesigner/dropbox) is 
already doing that bit for me.

I'm just writing the HTTP consumer. The toolkit calls into my function 
with a URL and a number of POST fields. All I need to do in my function 
is perform the HTTP POST operation.

> Something like this would probably work:
>
> 	$auth_header = ''; // use OAuth library here to generate this
> 	$response =
> wp_remote_post('https://api-content.dropbox.com/1/files/.../...?overwrite=1',
> array(
> 		'stream' => '/path/to/myfile.zip',
> 		'headers' => array(
> 			'Authorization' => $auth_header,
> 			'Content-Disposition' => 'attachment; filename=myfolder/myfile.zip'
> 		),
> 	);
The toolkit is expecting my consumer to POST all the values it sends, as 
the body. So I can't use the above method, because I'm not just POST-ing 
the file; I'm POST-ing a number of parameters, and the file is one. Curl 
handles this by a special parameter. But I need to be able to stream the 
file as *part* (but not the whole) of a stream, using wp_remote_post... 
I suppose one thing I could do is create a new file, but that'll bring 
me other problems (I'm dealing with potentially huge files in a plugin 
that may be used by people in all kinds of situations).

David

From wordpress at dd32.id.au  Fri Jan 11 12:19:13 2013
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Fri, 11 Jan 2013 23:19:13 +1100
Subject: [wp-hackers] POSTing a file via wp_remote_post
In-Reply-To: <50F00150.2070300@wordshell.net>
References: <mailman.11.1357905602.17988.wp-hackers@lists.automattic.com>
	<50F00150.2070300@wordshell.net>
Message-ID: <CAL4EHfnovm+Hm9QJQkQQsNq77dfP18b8J7+QqKTJzru0H+r3UA@mail.gmail.com>

Short story: WP_HTTP Doesn't handle posting of files.

You may be able to do it by building the HTTP Payload yourself and
passing it as a string to the 'body' param:
wp_remote_post( $url, array(
   'body' => $payload
) );

You'd need to somehow manage to get the multipart/form-data
Content-Type working, I'm not sure how easy that would be to achieve
using only the body parameter though.

I'd pull up Wireshark and grab a HTTP payload to see if it can be
done, but I don't have access to it right now..

On 11 January 2013 23:10, David Anderson <david at wordshell.net> wrote:
>> The various parts there need to be converted into their HTTP
>> representations. The OAuth parts should be parsed by an OAuth library
>> into an Authorization header.
>
> The DropBox PHP toolkit (https://github.com/benthedesigner/dropbox) is
> already doing that bit for me.
>
> I'm just writing the HTTP consumer. The toolkit calls into my function with
> a URL and a number of POST fields. All I need to do in my function is
> perform the HTTP POST operation.
>
>
>> Something like this would probably work:
>>
>>         $auth_header = ''; // use OAuth library here to generate this
>>         $response =
>>
>> wp_remote_post('https://api-content.dropbox.com/1/files/.../...?overwrite=1',
>> array(
>>                 'stream' => '/path/to/myfile.zip',
>>                 'headers' => array(
>>                         'Authorization' => $auth_header,
>>                         'Content-Disposition' => 'attachment;
>> filename=myfolder/myfile.zip'
>>                 ),
>>         );
>
> The toolkit is expecting my consumer to POST all the values it sends, as the
> body. So I can't use the above method, because I'm not just POST-ing the
> file; I'm POST-ing a number of parameters, and the file is one. Curl handles
> this by a special parameter. But I need to be able to stream the file as
> *part* (but not the whole) of a stream, using wp_remote_post... I suppose
> one thing I could do is create a new file, but that'll bring me other
> problems (I'm dealing with potentially huge files in a plugin that may be
> used by people in all kinds of situations).
>
> David
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From bryangentry at gmail.com  Fri Jan 11 12:30:00 2013
From: bryangentry at gmail.com (Bryan Gentry)
Date: Fri, 11 Jan 2013 07:30:00 -0500
Subject: [wp-hackers] Editing or extending a child theme
Message-ID: <CALabX+ONLEj2GwTFX620u-sxRZre9JLSGABfSxOUvuf+kvc22g@mail.gmail.com>

A client hired me to make some modifications to his website, which is using
two themes he bought (a parent theme and its child theme). Neither the
parent nor the child theme are very extensible for the changes they want
made, which leaves me making my changes directly in the child theme files,
ready to be wiped out at the next update.

I considered the possibility of trying to make a child theme of the child
theme, but I've read before (in this list) that it is not advisable to
create child themes of child themes. Is this because it is usually
overboard to create a child theme of a child theme, or is it because doing
such will not work?

Bryan

From rocio at mecus.es  Fri Jan 11 12:39:15 2013
From: rocio at mecus.es (Rocio Valdivia)
Date: Fri, 11 Jan 2013 13:39:15 +0100
Subject: [wp-hackers] Editing or extending a child theme
In-Reply-To: <CALabX+ONLEj2GwTFX620u-sxRZre9JLSGABfSxOUvuf+kvc22g@mail.gmail.com>
References: <CALabX+ONLEj2GwTFX620u-sxRZre9JLSGABfSxOUvuf+kvc22g@mail.gmail.com>
Message-ID: <CAG+QiemQiw_XY=zqZ20zexU1YBpSn2SXkbkd=Mr=qry_UR655Q@mail.gmail.com>

Hi Bryan,

maybe this can help you :)

http://www.wp-code.com/wordpress-snippets/wordpress-grandchildren-themes/
http://docs.appthemes.com/tutorials/creating-grandchild-themes/

Roc?o Valdivia


2013/1/11 Bryan Gentry <bryangentry at gmail.com>

> A client hired me to make some modifications to his website, which is using
> two themes he bought (a parent theme and its child theme). Neither the
> parent nor the child theme are very extensible for the changes they want
> made, which leaves me making my changes directly in the child theme files,
> ready to be wiped out at the next update.
>
> I considered the possibility of trying to make a child theme of the child
> theme, but I've read before (in this list) that it is not advisable to
> create child themes of child themes. Is this because it is usually
> overboard to create a child theme of a child theme, or is it because doing
> such will not work?
>
> Bryan
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
-- 
---
Roc?o Valdivia --- Mecus Consultores: http://mecus.es --- Web:
http://dorsvenabili.com --- Twitter: @rociovaldi

From wordpress at dd32.id.au  Fri Jan 11 13:06:11 2013
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sat, 12 Jan 2013 00:06:11 +1100
Subject: [wp-hackers] POSTing a file via wp_remote_post
In-Reply-To: <CAL4EHfnovm+Hm9QJQkQQsNq77dfP18b8J7+QqKTJzru0H+r3UA@mail.gmail.com>
References: <mailman.11.1357905602.17988.wp-hackers@lists.automattic.com>
	<50F00150.2070300@wordshell.net>
	<CAL4EHfnovm+Hm9QJQkQQsNq77dfP18b8J7+QqKTJzru0H+r3UA@mail.gmail.com>
Message-ID: <CAL4EHf=4jJR0D54HL72gcAuEo-253rO6t4cEwgWxn0ge1ifzPg@mail.gmail.com>

Got bored enough to try it without a Tcpdump.. The following code will
work, but you'll have to modify it to suit your purposes
(specifically, moving the if ( $local_file) into the parent block or
something) as it's an example only, it won't do exactly what you want:


$local_file = dirname(__FILE__) .'/myfile.png';

$post_fields = array(
        'one' => 'the number one',
        'submit' => 'Upload a file'
);

$boundary = wp_generate_password(24); // Just a random string, use
something better than wp_generate_password() though.
$headers = array(
        'content-type' => 'multipart/form-data; boundary=' . $boundary
);

$payload = '';

// First, add the standard POST fields:
foreach ( $post_fields as $name => $value ) {
        $payload .= '--' . $boundary;
        $payload .= "\r\n";
        $payload .= 'Content-Disposition: form-data; name="' . $name .
'"' . "\r\n\r\n";
        $payload .= $value;
        $payload .= "\r\n";
}
// Upload the file
if ( $local_file ) {
        $payload .= '--' . $boundary;
        $payload .= "\r\n";
        $payload .= 'Content-Disposition: form-data; name="' . $name .
'"; filename="' . basename( $local_file ) . '"' . "\r\n";
//        $payload .= 'Content-Type: image/jpeg' . "\r\n"; // If you
know the mime-type
        $payload .= "\r\n";
        $payload .= file_get_contents( $local_file );
        $payload .= "\r\n";
}

$payload .= '--' . $boundary . '--';

$res = wp_remote_post( 'http://test.server/upload.php', array(
        'headers' => $headers,
        'body' => $payload,
) );

A certain someone will pipe up saying this isn't efficient for large
files, and it isn't, but it'll certainly work if you want to stay
within the current constraints of WP_HTTP / wp_remote_post().

On 11 January 2013 23:19, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:
> Short story: WP_HTTP Doesn't handle posting of files.
>
> You may be able to do it by building the HTTP Payload yourself and
> passing it as a string to the 'body' param:
> wp_remote_post( $url, array(
>    'body' => $payload
> ) );
>
> You'd need to somehow manage to get the multipart/form-data
> Content-Type working, I'm not sure how easy that would be to achieve
> using only the body parameter though.
>
> I'd pull up Wireshark and grab a HTTP payload to see if it can be
> done, but I don't have access to it right now..
>
> On 11 January 2013 23:10, David Anderson <david at wordshell.net> wrote:
>>> The various parts there need to be converted into their HTTP
>>> representations. The OAuth parts should be parsed by an OAuth library
>>> into an Authorization header.
>>
>> The DropBox PHP toolkit (https://github.com/benthedesigner/dropbox) is
>> already doing that bit for me.
>>
>> I'm just writing the HTTP consumer. The toolkit calls into my function with
>> a URL and a number of POST fields. All I need to do in my function is
>> perform the HTTP POST operation.
>>
>>
>>> Something like this would probably work:
>>>
>>>         $auth_header = ''; // use OAuth library here to generate this
>>>         $response =
>>>
>>> wp_remote_post('https://api-content.dropbox.com/1/files/.../...?overwrite=1',
>>> array(
>>>                 'stream' => '/path/to/myfile.zip',
>>>                 'headers' => array(
>>>                         'Authorization' => $auth_header,
>>>                         'Content-Disposition' => 'attachment;
>>> filename=myfolder/myfile.zip'
>>>                 ),
>>>         );
>>
>> The toolkit is expecting my consumer to POST all the values it sends, as the
>> body. So I can't use the above method, because I'm not just POST-ing the
>> file; I'm POST-ing a number of parameters, and the file is one. Curl handles
>> this by a special parameter. But I need to be able to stream the file as
>> *part* (but not the whole) of a stream, using wp_remote_post... I suppose
>> one thing I could do is create a new file, but that'll bring me other
>> problems (I'm dealing with potentially huge files in a plugin that may be
>> used by people in all kinds of situations).
>>
>> David
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers

From david at wordshell.net  Fri Jan 11 15:56:52 2013
From: david at wordshell.net (David Anderson)
Date: Fri, 11 Jan 2013 15:56:52 +0000
Subject: [wp-hackers] POSTing a file via wp_remote_post
Message-ID: <50F03644.4050700@wordshell.net>


> A certain someone will pipe up saying this isn't efficient for large
> files, and it isn't, but it'll certainly work if you want to stay
> within the current constraints of WP_HTTP / wp_remote_post().

Hi,

Thanks for your response... there's some helpful stuff for me in there...

Unfortunately my need is for very large files (it's a backup plugin, 
http://wordpress.org/extend/plugins/updraftplus). Unlimited size; can't 
be read into memory.

Having spent more time looking at the WP_HTTP code, its seems clear that 
it can't be done. For now I'll either have to stick with with Curl only, 
or consider rewriting the WP_HTTP classes.

David


-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From zamoose at gmail.com  Fri Jan 11 17:03:28 2013
From: zamoose at gmail.com (Doug Stewart)
Date: Fri, 11 Jan 2013 12:03:28 -0500
Subject: [wp-hackers] Editing or extending a child theme
In-Reply-To: <CAG+QiemQiw_XY=zqZ20zexU1YBpSn2SXkbkd=Mr=qry_UR655Q@mail.gmail.com>
References: <CALabX+ONLEj2GwTFX620u-sxRZre9JLSGABfSxOUvuf+kvc22g@mail.gmail.com>
	<CAG+QiemQiw_XY=zqZ20zexU1YBpSn2SXkbkd=Mr=qry_UR655Q@mail.gmail.com>
Message-ID: <CANFh3d5e_+af7H96-X+z1G0CZYwe7x6rkWSMOh5q0m9RNZtMpQ@mail.gmail.com>

> Is this because it is usually overboard to create a child theme of a
child theme, or is it because doing such will not work?

More of the second.

Copy the child theme, whole cloth, and rename it to something else, then do
all work on your new child theme. It's the only safe way.


On Fri, Jan 11, 2013 at 7:39 AM, Rocio Valdivia <rocio at mecus.es> wrote:

> Hi Bryan,
>
> maybe this can help you :)
>
> http://www.wp-code.com/wordpress-snippets/wordpress-grandchildren-themes/
> http://docs.appthemes.com/tutorials/creating-grandchild-themes/
>
> Roc?o Valdivia
>
>
> 2013/1/11 Bryan Gentry <bryangentry at gmail.com>
>
> > A client hired me to make some modifications to his website, which is
> using
> > two themes he bought (a parent theme and its child theme). Neither the
> > parent nor the child theme are very extensible for the changes they want
> > made, which leaves me making my changes directly in the child theme
> files,
> > ready to be wiped out at the next update.
> >
> > I considered the possibility of trying to make a child theme of the child
> > theme, but I've read before (in this list) that it is not advisable to
> > create child themes of child themes. Is this because it is usually
> > overboard to create a child theme of a child theme, or is it because
> doing
> > such will not work?
> >
> > Bryan
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> --
> ---
> Roc?o Valdivia --- Mecus Consultores: http://mecus.es --- Web:
> http://dorsvenabili.com --- Twitter: @rociovaldi
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
-Doug

From shastaw at gmail.com  Fri Jan 11 17:52:52 2013
From: shastaw at gmail.com (Shasta Willson)
Date: Fri, 11 Jan 2013 09:52:52 -0800
Subject: [wp-hackers] Editing or extending a child theme
In-Reply-To: <CALabX+ONLEj2GwTFX620u-sxRZre9JLSGABfSxOUvuf+kvc22g@mail.gmail.com>
References: <CALabX+ONLEj2GwTFX620u-sxRZre9JLSGABfSxOUvuf+kvc22g@mail.gmail.com>
Message-ID: <CAGguigf-TVvPKxV1TC_pGLP7+ZME7hTNyEhBo_m0t7Qg8a6yJg@mail.gmail.com>

On Fri, Jan 11, 2013 at 4:30 AM, Bryan Gentry <bryangentry at gmail.com> wrote:
>
> I considered the possibility of trying to make a child theme of the child
> theme, but I've read before (in this list) that it is not advisable to
> create child themes of child themes. Is this because it is usually
> overboard to create a child theme of a child theme, or is it because doing
> such will not work?

It's not technically possible. I've had it explained at length why one
should never want to do it, but having been in your position a number
of times, I have a differing opinion.

My approach to explain to the customer the pros and cons.  "I can do X
for you, but you will not be able to safely upgrade your child theme.
Or I could do similar thing Y within the framework and you can upgrade
your theme."  Then if they want to go the custom route, do as Doug
suggested and rename your version of the child theme.

In reality it seems that many vendors don't upgrade child themes much,
perhaps for exactly this reason?  It's worth asking on those forums
whether it's likely to be an issue for that theme.

- Shasta

From dianakac at gmail.com  Sun Jan 13 16:58:38 2013
From: dianakac at gmail.com (Diana K. C)
Date: Sun, 13 Jan 2013 14:58:38 -0200
Subject: [wp-hackers] Block posts with blacklisted words
Message-ID: <004c01cdf1af$3e015d20$227b0c46@TITA>


 Hello!

Is there a plugin to prevent posts with blacklisted words? e.g. a classified ads site where users can submit their ads. I search for something alike and there is plugins for comment posting not content itself.

Thanks!

From chris at lod.com  Sun Jan 13 17:10:53 2013
From: chris at lod.com (chris mccoy)
Date: Sun, 13 Jan 2013 12:10:53 -0500
Subject: [wp-hackers] Block posts with blacklisted words
In-Reply-To: <004c01cdf1af$3e015d20$227b0c46@TITA>
References: <004c01cdf1af$3e015d20$227b0c46@TITA>
Message-ID: <000301cdf1b0$f1db6d80$d5924880$@lod.com>

How bout a bad words plugin?

You can block the words you want and replace them.

http://wordpress.org/extend/plugins/wp-content-filter/



-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Diana K. C
Sent: January 13, 2013 11:59 AM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] Block posts with blacklisted words


 Hello!

Is there a plugin to prevent posts with blacklisted words? e.g. a classified
ads site where users can submit their ads. I search for something alike and
there is plugins for comment posting not content itself.

Thanks!
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From dianakac at gmail.com  Sun Jan 13 18:13:46 2013
From: dianakac at gmail.com (Diana K. C)
Date: Sun, 13 Jan 2013 16:13:46 -0200
Subject: [wp-hackers] Block posts with blacklisted words
References: <004c01cdf1af$3e015d20$227b0c46@TITA>
	<000301cdf1b0$f1db6d80$d5924880$@lod.com>
Message-ID: <006201cdf1b9$bc760f70$227b0c46@TITA>

That seems great, thanks.

Though is not able to prevent posting :( maybe this is something to do

----- Original Message ----- 
From: "chris mccoy" <chris at lod.com>
To: <wp-hackers at lists.automattic.com>
Sent: Sunday, January 13, 2013 3:10 PM
Subject: Re: [wp-hackers] Block posts with blacklisted words


> How bout a bad words plugin?
>
> You can block the words you want and replace them.
>
> http://wordpress.org/extend/plugins/wp-content-filter/
>
>
>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Diana K. C
> Sent: January 13, 2013 11:59 AM
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] Block posts with blacklisted words
>
>
> Hello!
>
> Is there a plugin to prevent posts with blacklisted words? e.g. a 
> classified
> ads site where users can submit their ads. I search for something alike 
> and
> there is plugins for comment posting not content itself.
>
> Thanks!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 


From martin at lazarov.bg  Sun Jan 13 19:08:37 2013
From: martin at lazarov.bg (Martin Lazarov)
Date: Sun, 13 Jan 2013 21:08:37 +0200
Subject: [wp-hackers] Block posts with blacklisted words
In-Reply-To: <004c01cdf1af$3e015d20$227b0c46@TITA>
References: <004c01cdf1af$3e015d20$227b0c46@TITA>
Message-ID: <CAFJ6JWE1kRrCDWXWM6CkeGqRLq77um-9KmNR2EYQgbaC-iCwbw@mail.gmail.com>

You can use one of this:

http://wordpress.org/extend/plugins/post-filter/ - to prevent posts

http://wordpress.org/extend/plugins/wp-delete-posts/ - to cleanup
already created posts


On Sun, Jan 13, 2013 at 6:58 PM, Diana K. C <dianakac at gmail.com> wrote:
>
>  Hello!
>
> Is there a plugin to prevent posts with blacklisted words? e.g. a classified ads site where users can submit their ads. I search for something alike and there is plugins for comment posting not content itself.
>
> Thanks!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From dianakac at gmail.com  Sun Jan 13 19:38:48 2013
From: dianakac at gmail.com (Diana K. C)
Date: Sun, 13 Jan 2013 17:38:48 -0200
Subject: [wp-hackers] Block posts with blacklisted words
References: <004c01cdf1af$3e015d20$227b0c46@TITA>
	<CAFJ6JWE1kRrCDWXWM6CkeGqRLq77um-9KmNR2EYQgbaC-iCwbw@mail.gmail.com>
Message-ID: <008f01cdf1c5$9dd0f1a0$227b0c46@TITA>

Thanks Martin! I think that will do!



----- Original Message ----- 
From: "Martin Lazarov" <martin at lazarov.bg>
To: <wp-hackers at lists.automattic.com>
Sent: Sunday, January 13, 2013 5:08 PM
Subject: Re: [wp-hackers] Block posts with blacklisted words


> You can use one of this:
>
> http://wordpress.org/extend/plugins/post-filter/ - to prevent posts
>
> http://wordpress.org/extend/plugins/wp-delete-posts/ - to cleanup
> already created posts
>
>
> On Sun, Jan 13, 2013 at 6:58 PM, Diana K. C <dianakac at gmail.com> wrote:
>>
>>  Hello!
>>
>> Is there a plugin to prevent posts with blacklisted words? e.g. a 
>> classified ads site where users can submit their ads. I search for 
>> something alike and there is plugins for comment posting not content 
>> itself.
>>
>> Thanks!
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 


From latz at elektroelch.de  Mon Jan 14 16:12:01 2013
From: latz at elektroelch.de (=?UTF-8?Q?Lutz_Schr=C3=B6er?=)
Date: Mon, 14 Jan 2013 17:12:01 +0100
Subject: [wp-hackers] Verifying permalink structure
Message-ID: <1eb7b3bc5a3f709ce6233cb714c0e7c4@elektroelch.de>

Before creating a ticket and starting to work on a patch I would like 
to know if there would be support for it:

If I update the permalink structure with a "Custom Structure" the input 
is not verified in any way. If the user has a typo in a tag the 
permalink structure is accepted but does not work afterwards.

Additionally the permalink tags are case sensitive, e.g. %pagE% does 
not work.

Wouldn't it be better if the tags would be verified and converted to 
lower case?

From info at toscho.de  Mon Jan 14 20:27:04 2013
From: info at toscho.de (Thomas Scholz)
Date: Mon, 14 Jan 2013 21:27:04 +0100
Subject: [wp-hackers] Verifying permalink structure
In-Reply-To: <1eb7b3bc5a3f709ce6233cb714c0e7c4@elektroelch.de>
References: <1eb7b3bc5a3f709ce6233cb714c0e7c4@elektroelch.de>
Message-ID: <op.wqw4feh5r6yny2@fqdn.toscho.de>

Lutz Schr?er:

> If I update the permalink structure with a "Custom Structure" the input  
> is not verified in any way. If the user has a typo in a tag the  
> permalink structure is accepted but does not work afterwards.
>
> Additionally the permalink tags are case sensitive, e.g. %pagE% does not  
> work.
>
> Wouldn't it be better if the tags would be verified and converted to  
> lower case?

You could do that for the built-in tags, but you can register custom tags  
too, and verifying those would be difficult.

In <https://github.com/toscho/t5-rewrite> I provide a placeholder  
%_custom_%(fieldname)", eg. "/%_custom_%(gender)". I will solve the  
problem you described in one of the following versions with a live preview.

Has to wait until I?m ready to convert the current, rather noisy template  
list into a <datalist>.

It has the advantage to provide feedback immediately, and I don?t risk  
side effects as a result of overly greedy validation. When a user wants to  
break the permalinks ? be it so. :)

Thomas

From roberto at digitalbrands.com  Mon Jan 14 20:41:22 2013
From: roberto at digitalbrands.com (Roberto Sanchez)
Date: Mon, 14 Jan 2013 15:41:22 -0500
Subject: [wp-hackers] sortable taxonomy columns for taxonomy metadata
Message-ID: <CAKHCZSVro6=spE+niQrRKqUVOEX9u39+Jy5nnszYt9Ovuwm6+g@mail.gmail.com>

Hi,

I posted this question here:
http://wordpress.stackexchange.com/questions/80095/sortable-taxonomy-columns-for-taxonomy-metadata

Hoping for some assistance from wp-hackers.

I have a column displayed in a custom taxonomy page, which is displayed
under a custom post type. Now I already registered the column and get it to
display like this:

    add_action( 'manage_merchant_custom_column',
'display_pageviews_column', 10, 3 );
    function display_pageviews_column( $column, $column2, $term_id ) {
        if ( $column2 == 'pageviews' ) {
            $merchant_term = get_term_by( 'id', $term_id, 'merchant' );
            $pageviews = get_metadata( 'taxonomy', $merchant_term->term_id,
'pageviews', true );
            echo $pageviews;
        }
    }

I have a pageviews column in the merchant taxonomy page.

Now I also made the column sortable, so when I click on the column header,
the query vars in the url look like this:


edit-tags.php?taxonomy=merchant&post_type=coupon&orderby=pageviews&order=asc

However, the problem I'm having is that the query vars just don't get to
the backend. Additionally, even when I don't check for the query vars, the
list is not being sorted.

Here is what I'm trying to do for sorting logic:

    add_action( 'pre_get_posts', 'testing_pre_get_posts' );
        function testing_pre_get_posts( &$query ) {
        $orderby = $query->get( 'orderby' );
        if ( 'pageviews' == $orderby ) {
            $query->set( 'meta_key', 'pageviews' );
            $query->set( 'orderby', 'meta_value_num' );
        }
    }

I added some error_logs and $query->get( 'orderby' ) returns nothing.
However, even if I remove that condition, $query->set() is not doing
anything either. There is no sorting when I click on the column header to
sort.

How am I supposed to order by taxonomy metadata? I appreciate any
assistance with this.

Thanks,

Roberto

From rafaehlers at gmail.com  Mon Jan 14 20:45:35 2013
From: rafaehlers at gmail.com (Rafael Ehlers)
Date: Mon, 14 Jan 2013 18:45:35 -0200
Subject: [wp-hackers] sortable taxonomy columns for taxonomy metadata
In-Reply-To: <CAKHCZSVro6=spE+niQrRKqUVOEX9u39+Jy5nnszYt9Ovuwm6+g@mail.gmail.com>
References: <CAKHCZSVro6=spE+niQrRKqUVOEX9u39+Jy5nnszYt9Ovuwm6+g@mail.gmail.com>
Message-ID: <CAF_6N0O+juv5XBGg6vpK0QdPYZ+nz+2QKyNG-GuLz+_LH59=Pw@mail.gmail.com>

Read this yet? http://scribu.net/wordpress/custom-sortable-columns.html

2013/1/14 Roberto Sanchez <roberto at digitalbrands.com>

> Hi,
>
> I posted this question here:
>
> http://wordpress.stackexchange.com/questions/80095/sortable-taxonomy-columns-for-taxonomy-metadata
>
> Hoping for some assistance from wp-hackers.
>
> I have a column displayed in a custom taxonomy page, which is displayed
> under a custom post type. Now I already registered the column and get it to
> display like this:
>
>     add_action( 'manage_merchant_custom_column',
> 'display_pageviews_column', 10, 3 );
>     function display_pageviews_column( $column, $column2, $term_id ) {
>         if ( $column2 == 'pageviews' ) {
>             $merchant_term = get_term_by( 'id', $term_id, 'merchant' );
>             $pageviews = get_metadata( 'taxonomy', $merchant_term->term_id,
> 'pageviews', true );
>             echo $pageviews;
>         }
>     }
>
> I have a pageviews column in the merchant taxonomy page.
>
> Now I also made the column sortable, so when I click on the column header,
> the query vars in the url look like this:
>
>
>
> edit-tags.php?taxonomy=merchant&post_type=coupon&orderby=pageviews&order=asc
>
> However, the problem I'm having is that the query vars just don't get to
> the backend. Additionally, even when I don't check for the query vars, the
> list is not being sorted.
>
> Here is what I'm trying to do for sorting logic:
>
>     add_action( 'pre_get_posts', 'testing_pre_get_posts' );
>         function testing_pre_get_posts( &$query ) {
>         $orderby = $query->get( 'orderby' );
>         if ( 'pageviews' == $orderby ) {
>             $query->set( 'meta_key', 'pageviews' );
>             $query->set( 'orderby', 'meta_value_num' );
>         }
>     }
>
> I added some error_logs and $query->get( 'orderby' ) returns nothing.
> However, even if I remove that condition, $query->set() is not doing
> anything either. There is no sorting when I click on the column header to
> sort.
>
> How am I supposed to order by taxonomy metadata? I appreciate any
> assistance with this.
>
> Thanks,
>
> Roberto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From david at wordshell.net  Tue Jan 15 16:49:45 2013
From: david at wordshell.net (David Anderson)
Date: Tue, 15 Jan 2013 16:49:45 +0000
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
Message-ID: <50F588A9.2010500@wordshell.net>

Is anyone else getting endless amounts of this kind of thing if they try 
to update a plugin today?

svn: PROPFIND of '/!svn/vcc/default': Could not read status line: 
connection was closed by server (http://plugins.svn.wordpress.org)

I've tried it from multiple locations/machines.

David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From martin at lazarov.bg  Tue Jan 15 17:01:14 2013
From: martin at lazarov.bg (Martin Lazarov)
Date: Tue, 15 Jan 2013 19:01:14 +0200
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <50F588A9.2010500@wordshell.net>
References: <50F588A9.2010500@wordshell.net>
Message-ID: <CAFJ6JWGWJ5bnkVNGL8LApUTisBHOGiqiJpG5i5834EaAhEzezw@mail.gmail.com>

I hope some day wordpress will migrate to git!

They are already svn <--> git bridges working great.

On Tue, Jan 15, 2013 at 6:49 PM, David Anderson <david at wordshell.net> wrote:
> Is anyone else getting endless amounts of this kind of thing if they try to
> update a plugin today?
>
> svn: PROPFIND of '/!svn/vcc/default': Could not read status line: connection
> was closed by server (http://plugins.svn.wordpress.org)
>
> I've tried it from multiple locations/machines.
>
> David
>
> --
> WordShell - WordPress fast from the CLI - www.wordshell.net
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From chris at lod.com  Tue Jan 15 17:12:00 2013
From: chris at lod.com (chris mccoy)
Date: Tue, 15 Jan 2013 12:12:00 -0500
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <50F588A9.2010500@wordshell.net>
References: <50F588A9.2010500@wordshell.net>
Message-ID: <000401cdf343$6e8cebe0$4ba6c3a0$@lod.com>

Ya noticed this too.

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of David Anderson
Sent: January 15, 2013 11:50 AM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?

Is anyone else getting endless amounts of this kind of thing if they try to
update a plugin today?

svn: PROPFIND of '/!svn/vcc/default': Could not read status line: 
connection was closed by server (http://plugins.svn.wordpress.org)

I've tried it from multiple locations/machines.

David

--
WordShell - WordPress fast from the CLI - www.wordshell.net

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From ian at iandunn.name  Tue Jan 15 17:23:39 2013
From: ian at iandunn.name (Ian Dunn)
Date: Tue, 15 Jan 2013 09:23:39 -0800
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <CAFJ6JWGWJ5bnkVNGL8LApUTisBHOGiqiJpG5i5834EaAhEzezw@mail.gmail.com>
References: <50F588A9.2010500@wordshell.net>
	<CAFJ6JWGWJ5bnkVNGL8LApUTisBHOGiqiJpG5i5834EaAhEzezw@mail.gmail.com>
Message-ID: <50F5909B.3000408@iandunn.name>

There's a discussion about the pros/cons of this at 
http://wordpress.org/extend/ideas/topic/create-git-repositories-for-plugins-and-themes


On 01/15/2013 09:01 AM, Martin Lazarov wrote:
> I hope some day wordpress will migrate to git!
>
> They are already svn <--> git bridges working great.
>
> On Tue, Jan 15, 2013 at 6:49 PM, David Anderson <david at wordshell.net> wrote:
>> Is anyone else getting endless amounts of this kind of thing if they try to
>> update a plugin today?
>>
>> svn: PROPFIND of '/!svn/vcc/default': Could not read status line: connection
>> was closed by server (http://plugins.svn.wordpress.org)
>>
>> I've tried it from multiple locations/machines.
>>
>> David
>>
>> --
>> WordShell - WordPress fast from the CLI - www.wordshell.net
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From bryan at ibaku.net  Tue Jan 15 17:38:34 2013
From: bryan at ibaku.net (Bryan Petty)
Date: Tue, 15 Jan 2013 10:38:34 -0700
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <50F588A9.2010500@wordshell.net>
References: <50F588A9.2010500@wordshell.net>
Message-ID: <CAKB8V+qPZneOPjBB-rccw9r3p2xh2WSOZfDpgJDjOY+RTB9=Ew@mail.gmail.com>

On Tue, Jan 15, 2013 at 9:49 AM, David Anderson <david at wordshell.net> wrote:
> Is anyone else getting endless amounts of this kind of thing if they try to
> update a plugin today?
>
> svn: PROPFIND of '/!svn/vcc/default': Could not read status line: connection
> was closed by server (http://plugins.svn.wordpress.org)

The plugins SVN repo is periodically dropping connections on me
(restarting the same call often works fine).

Regards,
Bryan Petty

From wp at andrewnacin.com  Tue Jan 15 17:38:57 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 15 Jan 2013 12:38:57 -0500
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <50F588A9.2010500@wordshell.net>
References: <50F588A9.2010500@wordshell.net>
Message-ID: <CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>

On Tue, Jan 15, 2013 at 11:49 AM, David Anderson <david at wordshell.net>wrote:

> Is anyone else getting endless amounts of this kind of thing if they try
> to update a plugin today?
>
> svn: PROPFIND of '/!svn/vcc/default': Could not read status line:
> connection was closed by server (http://plugins.svn.wordpress.**org<http://plugins.svn.wordpress.org>
> )
>
> I've tried it from multiple locations/machines.


The Trac and SVN servers were undergoing a denial of service attack, which
has since been mitigated.

From ipstenu at ipstenu.org  Tue Jan 15 17:47:14 2013
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Tue, 15 Jan 2013 09:47:14 -0800
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
Message-ID: <50F59622.3020203@ipstenu.org>

So what you're saying is "Git, SVN. Whatever. When they hit you with a 
hammer, you're going down." ;)

Andrew Nacin wrote:
>
> On Tue, Jan 15, 2013 at 11:49 AM, David 
> Anderson<david at wordshell.net>wrote:
>
>>
>> Is anyone else getting endless amounts of this kind of thing if they try
>> to update a plugin today?
>>
>> svn: PROPFIND of '/!svn/vcc/default': Could not read status line:
>> connection was closed by server 
>> (http://plugins.svn.wordpress.**org<http://plugins.svn.wordpress.org>
>> )
>>
>> I've tried it from multiple locations/machines.
>
>
>
> The Trac and SVN servers were undergoing a denial of service attack, which
> has since been mitigated.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From bryan at ibaku.net  Tue Jan 15 17:57:38 2013
From: bryan at ibaku.net (Bryan Petty)
Date: Tue, 15 Jan 2013 10:57:38 -0700
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <50F59622.3020203@ipstenu.org>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
	<50F59622.3020203@ipstenu.org>
Message-ID: <CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>

At least when that hammer hits git, it doesn't cripple everyone from
getting work done. ;)

On Tue, Jan 15, 2013 at 10:47 AM, Mika A Epstein <ipstenu at ipstenu.org> wrote:
> So what you're saying is "Git, SVN. Whatever. When they hit you with a
> hammer, you're going down." ;)
>
> Andrew Nacin wrote:
>> The Trac and SVN servers were undergoing a denial of service attack, which
>> has since been mitigated.

From otto at ottodestruct.com  Tue Jan 15 18:40:56 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 15 Jan 2013 12:40:56 -0600
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
	<50F59622.3020203@ipstenu.org>
	<CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>
Message-ID: <CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>

On Tue, Jan 15, 2013 at 11:57 AM, Bryan Petty <bryan at ibaku.net> wrote:
> At least when that hammer hits git, it doesn't cripple everyone from
> getting work done. ;)

I'll remember that you said that next time GitHub goes down (as it
seems to do once a month) and everybody complains about it on Twitter.

You don't need version control to "get work done".

-Otto

From jbutkus at time.ly  Tue Jan 15 19:15:07 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Tue, 15 Jan 2013 19:15:07 +0000
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
	<50F59622.3020203@ipstenu.org>
	<CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>
	<CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>
Message-ID: <0000013c3fa2ebea-34d4edaf-4698-499c-ae6d-49c5fb27b789-000000@email.amazonses.com>

On 2013.01.15 20:40, Otto wrote:
> You don't need version control to "get work done".
I am in no way interfering with the discussion on whereas some switch 
from SVN to Git (or vice-versa) shall be made, or not.

It is just, that I hope, that Otto (and other developers of this 
magnitude), shall not throw phrases "you don't need version control to 
"get work done".

You don't really mean that, do you, Otto?
I see this as a dangerous slope - once you start down it, you may get as 
far as, that there is no need for coding standards, unit testing, 
documentation, and whatever else, that makes programming environment a 
decent place, not a zoo gone wild.

No offence meant, it is just that I am in favour of culture and 
structure. :-)


-- 
Regards,
Justas B.

From roberto at digitalbrands.com  Tue Jan 15 19:32:24 2013
From: roberto at digitalbrands.com (Roberto Sanchez)
Date: Tue, 15 Jan 2013 14:32:24 -0500
Subject: [wp-hackers] sortable taxonomy columns for taxonomy metadata
Message-ID: <CAKHCZSWyBm9WxdbXxR8OwvKivfH_CNdPZ1+DGVzvC2LFc54vfg@mail.gmail.com>

Yep, tried that, and tried this other one too:

http://scribu.net/wordpress/sortable-taxonomy-columns.html

Unfortunately haven't been able to find a solution to my specific situation
starting with these pages as reference.

From otto at ottodestruct.com  Tue Jan 15 19:32:15 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 15 Jan 2013 13:32:15 -0600
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <0000013c3fa2ebea-34d4edaf-4698-499c-ae6d-49c5fb27b789-000000@email.amazonses.com>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
	<50F59622.3020203@ipstenu.org>
	<CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>
	<CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>
	<0000013c3fa2ebea-34d4edaf-4698-499c-ae6d-49c5fb27b789-000000@email.amazonses.com>
Message-ID: <CAD-FghxhHFtxTCVjj+XpD9kD88cKabnFCrKA8y87c-SOFC60Gw@mail.gmail.com>

On Tue, Jan 15, 2013 at 1:15 PM, Justas Butkus <jbutkus at time.ly> wrote:
> It is just, that I hope, that Otto (and other developers of this magnitude),
> shall not throw phrases "you don't need version control to "get work done".
>
> You don't really mean that, do you, Otto?

Yes, I do.

> I see this as a dangerous slope - once you start down it, you may get as far
> as, that there is no need for coding standards, unit testing, documentation,
> and whatever else, that makes programming environment a decent place, not a
> zoo gone wild.
>
> No offence meant, it is just that I am in favour of culture and structure.
> :-)

I'm not so much in favor of those things in all cases. :)

Call me "ad-hoc" if you like, but when you say "structure", what I see
is "bureaucracy". I've been in enough programming shops to see this
sort of thing, and frankly I prefer the wild and sometimes messy world
of Open-Source.

- Standards are fine, if they're flexible and not rigidly enforced
beyond reasonable limitations.
- Unit Testing is fine, when you have a large and well-defined scope,
which you rarely have.
- Documentation is fine, but the best documentation for a programmer
should be the source itself.

I'm not discounting all-the-things, I'm saying that all things have
their place, and you don't need to rigidly adhere to them at all
times.

If you want to do local version control in your development, good for
you. I don't. I've never needed it before. If I wasn't sharing my code
with others or collaborating on a project with others, then I'd have
absolutely no need for version control in my life and probably would
not use it.

-Otto

From bryan at ibaku.net  Tue Jan 15 19:50:55 2013
From: bryan at ibaku.net (Bryan Petty)
Date: Tue, 15 Jan 2013 12:50:55 -0700
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
	<50F59622.3020203@ipstenu.org>
	<CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>
	<CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>
Message-ID: <CAKB8V+pUQNf=ube2TO0-qv79QYLa6_N8foxFmTffdV80ek73Ag@mail.gmail.com>

I was being mostly sarcastic (hence emoticon)... but ok...

On Tue, Jan 15, 2013 at 11:40 AM, Otto <otto at ottodestruct.com> wrote:
> On Tue, Jan 15, 2013 at 11:57 AM, Bryan Petty <bryan at ibaku.net> wrote:
>> At least when that hammer hits git, it doesn't cripple everyone from
>> getting work done. ;)
>
> I'll remember that you said that next time GitHub goes down (as it
> seems to do once a month) and everybody complains about it on Twitter.

Did I say "GitHub"? Honestly though, I'd take a day of downtime every
month anytime over a month of my issues with the plugins SVN repo not
getting any attention (#23107).

It's not like I pay for either though. I don't complain every time
GitHub goes down, and I also haven't complained about my issue on the
plugins SVN repo (until now anyway).

> You don't need version control to "get work done".

I did say "cripple", not "block", but I only feel sorry for you if
you're saying your entire workflow still doesn't involve taking
advantage of any version control tools to speed up various tasks.
Programmers were certainly writing code well before version control
systems existed, but WordPress isn't using SVN just for the hell of
it, and there aren't 574 forks of the GitHub WP mirror (even though
it's only a mirror) just because people think git and forks look cool.

Regards,
Bryan Petty

From bryan at ibaku.net  Tue Jan 15 19:53:23 2013
From: bryan at ibaku.net (Bryan Petty)
Date: Tue, 15 Jan 2013 12:53:23 -0700
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <CAD-FghxhHFtxTCVjj+XpD9kD88cKabnFCrKA8y87c-SOFC60Gw@mail.gmail.com>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
	<50F59622.3020203@ipstenu.org>
	<CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>
	<CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>
	<0000013c3fa2ebea-34d4edaf-4698-499c-ae6d-49c5fb27b789-000000@email.amazonses.com>
	<CAD-FghxhHFtxTCVjj+XpD9kD88cKabnFCrKA8y87c-SOFC60Gw@mail.gmail.com>
Message-ID: <CAKB8V+rO8C5xDRpkgELF2De9Dc68q5wgdOrVanujz79jt3Gryw@mail.gmail.com>

On Tue, Jan 15, 2013 at 12:32 PM, Otto <otto at ottodestruct.com> wrote:
> If you want to do local version control in your development, good for
> you. I don't. I've never needed it before. If I wasn't sharing my code
> with others or collaborating on a project with others, then I'd have
> absolutely no need for version control in my life and probably would
> not use it.

Too bad the WP.org plugin repo requires it. :P

Regards,
Bryan Petty

From otto at ottodestruct.com  Tue Jan 15 19:54:35 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 15 Jan 2013 13:54:35 -0600
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <CAKB8V+pUQNf=ube2TO0-qv79QYLa6_N8foxFmTffdV80ek73Ag@mail.gmail.com>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
	<50F59622.3020203@ipstenu.org>
	<CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>
	<CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>
	<CAKB8V+pUQNf=ube2TO0-qv79QYLa6_N8foxFmTffdV80ek73Ag@mail.gmail.com>
Message-ID: <CAD-FghzjHxMzFh23ef_Cie5iO_kNkf+gEZ4zR1v1w+r5222Tpg@mail.gmail.com>

On Tue, Jan 15, 2013 at 1:50 PM, Bryan Petty <bryan at ibaku.net> wrote:
> I did say "cripple", not "block", but I only feel sorry for you if
> you're saying your entire workflow still doesn't involve taking
> advantage of any version control tools to speed up various tasks.

I don't have any tasks that I need to perform which would involve
version control in any way.

I mean, I want to write code, so I sit down and write the code. How
hard is that supposed to be, exactly? What are you doing that needs
branching paths and versioning and such?


> Too bad the WP.org plugin repo requires it. :P

The plugin repo is a release-repo. You commit your changes to there in
order to release them to other people. If I wasn't doing that, I
wouldn't be committing code to a version control system.


-Otto

From jbutkus at time.ly  Tue Jan 15 20:02:00 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Tue, 15 Jan 2013 20:02:00 +0000
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <CAD-FghxhHFtxTCVjj+XpD9kD88cKabnFCrKA8y87c-SOFC60Gw@mail.gmail.com>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
	<50F59622.3020203@ipstenu.org>
	<CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>
	<CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>
	<0000013c3fa2ebea-34d4edaf-4698-499c-ae6d-49c5fb27b789-000000@email.amazonses.com>
	<CAD-FghxhHFtxTCVjj+XpD9kD88cKabnFCrKA8y87c-SOFC60Gw@mail.gmail.com>
Message-ID: <0000013c3fcdd6df-923fd7f6-82d5-4563-b307-be344521c229-000000@email.amazonses.com>

Actually you got me. :-)

On 2013.01.15 21:32, Otto wrote:
> I'm not so much in favor of those things in all cases.:)
>
> Call me "ad-hoc" if you like, but when you say "structure", what I see
> is "bureaucracy". I've been in enough programming shops to see this
> sort of thing, and frankly I prefer the wild and sometimes messy world
> of Open-Source.
> - Standards are fine, if they're flexible and not rigidly enforced
> beyond reasonable limitations.
> - Unit Testing is fine, when you have a large and well-defined scope,
> which you rarely have.
> - Documentation is fine, but the best documentation for a programmer
> should be the source itself.
>
> I'm not discounting all-the-things, I'm saying that all things have
> their place, and you don't need to rigidly adhere to them at all
> times.
>
> If you want to do local version control in your development, good for
> you. I don't. I've never needed it before. If I wasn't sharing my code
> with others or collaborating on a project with others, then I'd have
> absolutely no need for version control in my life and probably would
> not use it.

That may be due to the fact, that I have been a bit too deep into 
scientific environment.

Not the kind, where you are expected to put down your signature under 
any variable used (hereby signed, I, Justas, confirm, that I will use 
"integer" type variable "$count_of_plugins" in the context of "plugins 
directory", since version "alfa-beta-and-until-omega"), but still - the 
one, with an accountability for what you do. And where you may make a 
change, run all the tests (some may be procedural), and after a full 
year and a half understand, that you actually needed to use 
pre-pre-previous build, since when thousands of coefficients have been 
changed...

That's off-topic, really.
But that's the reason, why I use SVN to keep '/etc' of my own PC. That's 
a habit, and a damn good one. Like the one, to wash hands on a regular 
basis, or see where you are putting your feet.
And so I have learned, that it helps.

So sure I understand, that at times, on some projects, you may very well 
keep yourself perfectly organized, without any kind of version control. 
IF you are that organized, IF you know and differentiate perfectly well, 
when there is a need to commit, and when not, IF you can foresee future 
and know, you won't feel sorry for your choice.

But to apply this on a general basis - that's a drastic approach.
As in most cases - the environment changes.
I am by no chance in favour of bureaucracy, but sure I am in for a 
chance to take a different path, from where you have left long time ago.

As long as I recognize, that (once again - for a developer like you) it 
may be possible to get out without any version control, or some other 
things, it does not sound like a good practice to recommend such 
adoptions widely.
I have seen far more and worse solutions made by people, who started 
without any version control, because "they know how", and far less from 
those, who were taught to use version control and other whistles-and-bells.
Of course, one may say, that that's just statistics, and some people may 
be taught anything and still write poor code.

I just wanted to put an accent on my point...


-- 
Regards,
Justas B.

From otto at ottodestruct.com  Tue Jan 15 20:09:04 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 15 Jan 2013 14:09:04 -0600
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <0000013c3fcdd6df-923fd7f6-82d5-4563-b307-be344521c229-000000@email.amazonses.com>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
	<50F59622.3020203@ipstenu.org>
	<CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>
	<CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>
	<0000013c3fa2ebea-34d4edaf-4698-499c-ae6d-49c5fb27b789-000000@email.amazonses.com>
	<CAD-FghxhHFtxTCVjj+XpD9kD88cKabnFCrKA8y87c-SOFC60Gw@mail.gmail.com>
	<0000013c3fcdd6df-923fd7f6-82d5-4563-b307-be344521c229-000000@email.amazonses.com>
Message-ID: <CAD-FghwEDc2N3Z=pTrm2G63Zr9eGrShC5XnzGorK9nkGoAUXPA@mail.gmail.com>

On Tue, Jan 15, 2013 at 2:02 PM, Justas Butkus <jbutkus at time.ly> wrote:
> But to apply this on a general basis - that's a drastic approach.

Look, use whatever works for you. No problem. I use various
environments for various projects, and I change between them
frequently.

But at the same time, don't say that other people are doing-it-wrong
when they use whatever works for them. All I said was that you don't
need version control to "get work done". Emphasis was intended to be
placed on "need" in that sentence. I personally don't need version
control to write code. Maybe you do.

Hell, sometimes I write code in a Putty shell window using vim on a
remote server without even the benefit of syntax highlighting. Why?
Because I don't always need all those bells and whistles all the time.
Works fine for me.

-Otto

From david at wordshell.net  Tue Jan 15 20:13:19 2013
From: david at wordshell.net (David Anderson)
Date: Tue, 15 Jan 2013 20:13:19 +0000
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <mailman.14213.1358277310.1480.wp-hackers@lists.automattic.com>
References: <mailman.14213.1358277310.1480.wp-hackers@lists.automattic.com>
Message-ID: <50F5B85F.8000201@wordshell.net>

 > The Trac and SVN servers were undergoing a denial of service attack, 
which
has since been mitigated.

Is it a known problem that new releases still aren't going through the 
system as they should?

http://plugins.svn.wordpress.org/updraftplus/trunk/readme.txt has: 
Stable tag: 1.2.30

And that tag exists: 
http://plugins.svn.wordpress.org/updraftplus/tags/1.2.30/

But my plugin page still shows 1.2.27: 
http://wordpress.org/extend/plugins/updraftplus/

David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From mike at newclarity.net  Tue Jan 15 20:17:00 2013
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 15 Jan 2013 15:17:00 -0500
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <CAD-FghwEDc2N3Z=pTrm2G63Zr9eGrShC5XnzGorK9nkGoAUXPA@mail.gmail.com>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
	<50F59622.3020203@ipstenu.org>
	<CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>
	<CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>
	<0000013c3fa2ebea-34d4edaf-4698-499c-ae6d-49c5fb27b789-000000@email.amazonses.com>
	<CAD-FghxhHFtxTCVjj+XpD9kD88cKabnFCrKA8y87c-SOFC60Gw@mail.gmail.com>
	<0000013c3fcdd6df-923fd7f6-82d5-4563-b307-be344521c229-000000@email.amazonses.com>
	<CAD-FghwEDc2N3Z=pTrm2G63Zr9eGrShC5XnzGorK9nkGoAUXPA@mail.gmail.com>
Message-ID: <FE1208B8-5D50-48E6-84DA-A0CF98B6EA28@newclarity.net>

On Jan 15, 2013, at 3:09 PM, Otto <otto at ottodestruct.com> wrote:
> But at the same time, don't say that other people are doing-it-wrong
> when they use whatever works for them.

Pot, meet kettle.

Just saying.

-Mike


From jbutkus at time.ly  Tue Jan 15 20:20:53 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Tue, 15 Jan 2013 20:20:53 +0000
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <CAD-FghwEDc2N3Z=pTrm2G63Zr9eGrShC5XnzGorK9nkGoAUXPA@mail.gmail.com>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
	<50F59622.3020203@ipstenu.org>
	<CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>
	<CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>
	<0000013c3fa2ebea-34d4edaf-4698-499c-ae6d-49c5fb27b789-000000@email.amazonses.com>
	<CAD-FghxhHFtxTCVjj+XpD9kD88cKabnFCrKA8y87c-SOFC60Gw@mail.gmail.com>
	<0000013c3fcdd6df-923fd7f6-82d5-4563-b307-be344521c229-000000@email.amazonses.com>
	<CAD-FghwEDc2N3Z=pTrm2G63Zr9eGrShC5XnzGorK9nkGoAUXPA@mail.gmail.com>
Message-ID: <0000013c3fdf2346-df936e35-32c4-4179-b1a9-4ad585104f65-000000@email.amazonses.com>

On 2013.01.15 22:09, Otto wrote:
> Look, use whatever works for you. No problem. I use various
> environments for various projects, and I change between them
> frequently.
>
> But at the same time, don't say that other people are doing-it-wrong
> when they use whatever works for them. All I said was that you don't
> need version control to "get work done". Emphasis was intended to be
> placed on "need" in that sentence. I personally don't need version
> control to write code. Maybe you do.
>
> Hell, sometimes I write code in a Putty shell window using vim on a
> remote server without even the benefit of syntax highlighting. Why?
> Because I don't always need all those bells and whistles all the time.
> Works fine for me.
I must say sorry.
Because it seems, like this one goes a toad too far.

My intention was not to criticize *your* approach.
I was merely suggesting to not put a high accent on not needing a 
version control.
For whatever that matters - I use plain vim (through a shell window on 
my phone) at times, without no much trouble.
Just that I would not go and suggest that as a solution.

But as I said - pardon me.
I had no harmful intentions - I prefer to avoid going around, and 
telling others what to do/use and whatnot. Just one of the reasons for 
that is that I use an editor I heard often criticized as "not-an-IDE", 
and was being "advised" to change to "the-IDE".


-- 
Regards,
Justas B.

From otto at ottodestruct.com  Tue Jan 15 20:21:17 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 15 Jan 2013 14:21:17 -0600
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <50F5B85F.8000201@wordshell.net>
References: <mailman.14213.1358277310.1480.wp-hackers@lists.automattic.com>
	<50F5B85F.8000201@wordshell.net>
Message-ID: <CAD-Fghxs-y-_P6wr=mwxkFi0S7y69uzYPN3h1w__gP4djSXWEA@mail.gmail.com>

On Tue, Jan 15, 2013 at 2:13 PM, David Anderson <david at wordshell.net> wrote:
> Is it a known problem that new releases still aren't going through the
> system as they should?
>
> http://plugins.svn.wordpress.org/updraftplus/trunk/readme.txt has: Stable
> tag: 1.2.30
>
> And that tag exists:
> http://plugins.svn.wordpress.org/updraftplus/tags/1.2.30/
>
> But my plugin page still shows 1.2.27:
> http://wordpress.org/extend/plugins/updraftplus/

I ran a manual update for your plugin.

Updates that occurred during the time of the problem may have not been
read correctly by the system. Doing a trivial update to them will
trigger it to check again.

-Otto

From ian at iandunn.name  Tue Jan 15 20:22:49 2013
From: ian at iandunn.name (Ian Dunn)
Date: Tue, 15 Jan 2013 12:22:49 -0800
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <CAD-FghzjHxMzFh23ef_Cie5iO_kNkf+gEZ4zR1v1w+r5222Tpg@mail.gmail.com>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
	<50F59622.3020203@ipstenu.org>
	<CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>
	<CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>
	<CAKB8V+pUQNf=ube2TO0-qv79QYLa6_N8foxFmTffdV80ek73Ag@mail.gmail.com>
	<CAD-FghzjHxMzFh23ef_Cie5iO_kNkf+gEZ4zR1v1w+r5222Tpg@mail.gmail.com>
Message-ID: <50F5BA99.3000204@iandunn.name>

/"//I mean, I want to write code, so I sit down and write the code. How 
hard is that supposed to be, exactly? What are you doing that needs 
branching paths and versioning and such?"/

There are times when I find local branches helpful, even if I'm not 
collaborating with other developers. The classic example is having a 
branch for version X (latest stable) so that you can push bugfixes and 
other minor releases, then have another branch for version Y (upcoming 
release) so you can work on new features. Git's cheap branching makes it 
much more convenient and less error-prone to work on both simultaneously.

Or, if I'm working on several large and distinct features for a project 
simultaneously, I can have a branch for each, and then merge them into 
master as they're completed. Someone may object to that by saying that 
you could just work on them in succession, but I've found that there are 
times when you have to stop working on one feature and switch to 
another. One example would be if you have to wait for a decision from a 
client; another would be if priorities shift and they want feature X 
done before feature Y.


On 01/15/2013 11:54 AM, Otto wrote:
> On Tue, Jan 15, 2013 at 1:50 PM, Bryan Petty <bryan at ibaku.net> wrote:
>> I did say "cripple", not "block", but I only feel sorry for you if
>> you're saying your entire workflow still doesn't involve taking
>> advantage of any version control tools to speed up various tasks.
> I don't have any tasks that I need to perform which would involve
> version control in any way.
>
> I mean, I want to write code, so I sit down and write the code. How
> hard is that supposed to be, exactly? What are you doing that needs
> branching paths and versioning and such?
>
>
>> Too bad the WP.org plugin repo requires it. :P
> The plugin repo is a release-repo. You commit your changes to there in
> order to release them to other people. If I wasn't doing that, I
> wouldn't be committing code to a version control system.
>
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From chris at lod.com  Tue Jan 15 20:33:46 2013
From: chris at lod.com (chris mccoy)
Date: Tue, 15 Jan 2013 15:33:46 -0500
Subject: [wp-hackers] WordPress plugins SVN server malfunctioning?
In-Reply-To: <0000013c3fa2ebea-34d4edaf-4698-499c-ae6d-49c5fb27b789-000000@email.amazonses.com>
References: <50F588A9.2010500@wordshell.net>
	<CAP29Pvj5HkHekkti08RNaXbcK2pz8utzJ38ZHRCM3JBaee4vgQ@mail.gmail.com>
	<50F59622.3020203@ipstenu.org>
	<CAKB8V+oK9-tCmZnDOMt2C2roek_vnbEU_ZWgBjJgjaHy5SQ9Dg@mail.gmail.com>
	<CAD-FghwJKPuLVvWNW=zk-=nHkhp2_Xc9heQ4QsOUDbGHXUFoew@mail.gmail.com>
	<0000013c3fa2ebea-34d4edaf-4698-499c-ae6d-49c5fb27b789-000000@email.amazonses.com>
Message-ID: <001201cdf35f$9e2d8b40$da88a1c0$@lod.com>

Setting up a local git or svn server is a good idea as well.

That way you can still commit the code locally.

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Justas Butkus
Sent: January 15, 2013 2:15 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] WordPress plugins SVN server malfunctioning?

On 2013.01.15 20:40, Otto wrote:
> You don't need version control to "get work done".
I am in no way interfering with the discussion on whereas some switch from
SVN to Git (or vice-versa) shall be made, or not.

It is just, that I hope, that Otto (and other developers of this magnitude),
shall not throw phrases "you don't need version control to "get work done".

You don't really mean that, do you, Otto?
I see this as a dangerous slope - once you start down it, you may get as far
as, that there is no need for coding standards, unit testing, documentation,
and whatever else, that makes programming environment a decent place, not a
zoo gone wild.

No offence meant, it is just that I am in favour of culture and structure.
:-)


-- 
Regards,
Justas B.
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From roberto at digitalbrands.com  Tue Jan 15 20:38:33 2013
From: roberto at digitalbrands.com (Roberto Sanchez)
Date: Tue, 15 Jan 2013 15:38:33 -0500
Subject: [wp-hackers] sortable taxonomy columns for taxonomy metadata
Message-ID: <CAKHCZSXgLWB+AZGbD_47cy=8EsyGTpUhSzkeNeLsgWN6hPjW2A@mail.gmail.com>

A few more details I didn't add in my last reply:

The first Scribu post dealing with sorting columns helped with sorting
pages on a custom post type I had. However, I am now trying to sort on a
custom taxonomy for that custom post type. One other difference is that the
custom post type uses /wp-admin/edit.php, while the custom taxonomy uses
/wp-admin/edit-tags.php. As such, the filters in the first Scribu post
don't work for the custom taxonomy. The page edit.php uses
WP_Posts_List_Table, while edit-tags.php uses WP_Terms_List_Table. I've
been trying to dig in there to find which filters are used differently
between the two list tables but haven't had much luck with that.

Starting from the second post I found on Scribu, I came up with this:

    add_filter( 'posts_clauses', 'sort_by_pageviews', 10, 2 );

   function sort_by_pageviews( $clauses, $wp_query ) {
       global $wpdb;

        if ( isset( $_GET['orderby'] ) && 'pageviews' == $_GET['orderby'] )
{
            $clauses['join'] .= "LEFT JOIN (
                SELECT object_id, GROUP_CONCAT(meta_value ORDER BY
meta_value ASC) AS pageviews
                FROM $wpdb->term_relationships
                INNER JOIN $wpdb->term_taxonomy USING (term_taxonomy_id)
                INNER JOIN $wpdb->taxonomymeta ON
($wpdb->taxonomymeta.taxonomy_id =
$wpdb->term_relationships.term_taxonomy_id)
                WHERE taxonomy = 'merchant'
                AND $wpdb->taxonomymeta.meta_key = 'pageviews'
                GROUP BY object_id
            ) AS pageviews_terms ON ( $wpdb->posts.ID =
pageviews_terms.object_id)";
            $clauses['orderby'] = "pageviews_terms.pageviews ";
            $clauses['orderby'] .= ( isset( $_GET['order'] ) && 'ASC' ==
strtoupper( $_GET['order'] ) ) ? 'ASC' : 'DESC';
        }

        return $clauses;
    }

A couple of things here:

I'm not sure if I'm even using the correct filter here, since
$wp_query->query['orderby'] is not being set. This is why I needed to check
the $_GET variables instead. I don't understand why the query doesn't use
the variables passed by $_GET.

Additionally, I'm using the Taxonomy Metadata plugin:

http://wordpress.org/extend/plugins/taxonomy-metadata/

I'm pretty sure this plugin adds the wp_taxonomymeta table to the DB, but
the table name is still accessible via $wpdb->taxonomymeta.

This method and the previous method don't work for sorting the taxonomy by
the pageviews metadata.

From almog.baku at gmail.com  Wed Jan 16 07:41:50 2013
From: almog.baku at gmail.com (Almog Baku)
Date: Wed, 16 Jan 2013 09:41:50 +0200
Subject: [wp-hackers] Removing edit theme files features
Message-ID: <CALncZpQ1Sc-KBRBhqzD+8X3rv-HiG=+t9hr+3HWjj+MSKq0AJQ@mail.gmail.com>

Hey guys!
Isn't it the time to remove this amateur feature of editing themes files
online.

This feature doesn't behave as excepted and designed very old fashion so it
pretty remind me 99' features(phpnuke style!)...

What do you think?

From wp at andrewnacin.com  Wed Jan 16 07:44:07 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 16 Jan 2013 02:44:07 -0500
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CALncZpQ1Sc-KBRBhqzD+8X3rv-HiG=+t9hr+3HWjj+MSKq0AJQ@mail.gmail.com>
References: <CALncZpQ1Sc-KBRBhqzD+8X3rv-HiG=+t9hr+3HWjj+MSKq0AJQ@mail.gmail.com>
Message-ID: <CAP29PviLp8SoOHkuFL5EnQ8U7RyzXwHhSzAeOveTh4aZ1OVSTQ@mail.gmail.com>

On Wed, Jan 16, 2013 at 2:41 AM, Almog Baku <almog.baku at gmail.com> wrote:

> Hey guys!
> Isn't it the time to remove this amateur feature of editing themes files
> online.
>
> This feature doesn't behave as excepted and designed very old fashion so it
> pretty remind me 99' features(phpnuke style!)...
>
> What do you think?


Quite a few people tinker with their themes this way. Many WordPress and
PHP developers
started this way. Many users ? who don't pretend to know a lick of PHP ?
are able to hack
around their templates (not just their CSS) to make changes to their sites.

We shouldn't remove it. We should make it _better_.

Nacin

From frank at bueltge.de  Wed Jan 16 07:46:07 2013
From: frank at bueltge.de (Frank Bueltge)
Date: Wed, 16 Jan 2013 08:46:07 +0100
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CALncZpQ1Sc-KBRBhqzD+8X3rv-HiG=+t9hr+3HWjj+MSKq0AJQ@mail.gmail.com>
References: <CALncZpQ1Sc-KBRBhqzD+8X3rv-HiG=+t9hr+3HWjj+MSKq0AJQ@mail.gmail.com>
Message-ID: <CAH9UVvH9X9V+4Tww3imgPYVt=a10usaT-RnFbXWB0z40hhbF2w@mail.gmail.com>

You can use the follow constant in the wp-config.php and the editor is
deactivate:

// for enabling/disabling theme/plugin editor
define( 'DISALLOW_FILE_EDIT', TRUE );


For more restrictions:

// Disallow anything that creates, deletes, or edits core, plugin, or
theme files.
// Files in uploads are excepted.
define( 'DISALLOW_FILE_MODS', TRUE );


More possibilities with contants:
http://wpengineer.com/2382/wordpress-constants-overview/

Best regards

On Wed, Jan 16, 2013 at 8:41 AM, Almog Baku <almog.baku at gmail.com> wrote:

> Hey guys!
> Isn't it the time to remove this amateur feature of editing themes files
> online.
>
> This feature doesn't behave as excepted and designed very old fashion so it
> pretty remind me 99' features(phpnuke style!)...
>
> What do you think?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From almog.baku at gmail.com  Wed Jan 16 07:50:44 2013
From: almog.baku at gmail.com (Almog Baku)
Date: Wed, 16 Jan 2013 09:50:44 +0200
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAH9UVvH9X9V+4Tww3imgPYVt=a10usaT-RnFbXWB0z40hhbF2w@mail.gmail.com>
References: <CALncZpQ1Sc-KBRBhqzD+8X3rv-HiG=+t9hr+3HWjj+MSKq0AJQ@mail.gmail.com>
	<CAH9UVvH9X9V+4Tww3imgPYVt=a10usaT-RnFbXWB0z40hhbF2w@mail.gmail.com>
Message-ID: <CALncZpRABPdXi2NtwHX2MWYdZfK7-LB1Ecfk1DWAgX+Dhw5H2Q@mail.gmail.com>

hey @Frank,
I wishing from removing it from core.

There is ofcourse the option of upgrading this feature.. but i think it
very unnecessary..


@Nachin, you right. but this act will fore them to use a little bit
professional tool(even like notepad++), so we'll can push wordpress to
place less amateur.

On Wed, Jan 16, 2013 at 9:46 AM, Frank Bueltge <frank at bueltge.de> wrote:

> You can use the follow constant in the wp-config.php and the editor is
> deactivate:
>
> // for enabling/disabling theme/plugin editor
> define( 'DISALLOW_FILE_EDIT', TRUE );
>
>
> For more restrictions:
>
> // Disallow anything that creates, deletes, or edits core, plugin, or
> theme files.
> // Files in uploads are excepted.
> define( 'DISALLOW_FILE_MODS', TRUE );
>
>
> More possibilities with contants:
> http://wpengineer.com/2382/wordpress-constants-overview/
>
> Best regards
>
> On Wed, Jan 16, 2013 at 8:41 AM, Almog Baku <almog.baku at gmail.com> wrote:
>
> > Hey guys!
> > Isn't it the time to remove this amateur feature of editing themes files
> > online.
> >
> > This feature doesn't behave as excepted and designed very old fashion so
> it
> > pretty remind me 99' features(phpnuke style!)...
> >
> > What do you think?
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp at andrewnacin.com  Wed Jan 16 08:01:43 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 16 Jan 2013 03:01:43 -0500
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CALncZpRABPdXi2NtwHX2MWYdZfK7-LB1Ecfk1DWAgX+Dhw5H2Q@mail.gmail.com>
References: <CALncZpQ1Sc-KBRBhqzD+8X3rv-HiG=+t9hr+3HWjj+MSKq0AJQ@mail.gmail.com>
	<CAH9UVvH9X9V+4Tww3imgPYVt=a10usaT-RnFbXWB0z40hhbF2w@mail.gmail.com>
	<CALncZpRABPdXi2NtwHX2MWYdZfK7-LB1Ecfk1DWAgX+Dhw5H2Q@mail.gmail.com>
Message-ID: <CAP29PvhSVQVrRnYzq60GrR0L-tFbQHakHR3cVrK-psMWdRBp4Q@mail.gmail.com>

On Wed, Jan 16, 2013 at 2:50 AM, Almog Baku <almog.baku at gmail.com> wrote:

> @Nachin, you right. but this act will fore them to use a little bit
> professional tool(even like notepad++), so we'll can push wordpress to
> place less amateur.


Most users don't know about text editors, or FTP. And nor should they,
unless they want to. Those that know enough to edit wp-config.php when
asked probably have no idea how to make such changes as part of an
effective workflow. Rather, they download the file, edit it, re-upload the
file ? if they didn't use the editor built into their web host's crummy
file browser.

It should be okay for users to hack around and hit save. I don't see why
the tool can't be a more "professional tool," as you say. We're not going
to remove a feature in order to to make WordPress less appealing to our
broad user base. WordPress is for amateurs. It's for photographers. It's
for bloggers. It's for writers, poets, journalists. It's for cat pictures,
diary entries, and musings. Yes, it's also for Fortune 500 companies and
world-class developers. But those aren't the people we target with the
theme editor. For the people we do, it's not going anywhere.

Nacin

From andycharrington at gmail.com  Wed Jan 16 08:24:24 2013
From: andycharrington at gmail.com (Andy Charrington-Wilden)
Date: Wed, 16 Jan 2013 08:24:24 +0000
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAP29PvhSVQVrRnYzq60GrR0L-tFbQHakHR3cVrK-psMWdRBp4Q@mail.gmail.com>
References: <CALncZpQ1Sc-KBRBhqzD+8X3rv-HiG=+t9hr+3HWjj+MSKq0AJQ@mail.gmail.com>
	<CAH9UVvH9X9V+4Tww3imgPYVt=a10usaT-RnFbXWB0z40hhbF2w@mail.gmail.com>
	<CALncZpRABPdXi2NtwHX2MWYdZfK7-LB1Ecfk1DWAgX+Dhw5H2Q@mail.gmail.com>
	<CAP29PvhSVQVrRnYzq60GrR0L-tFbQHakHR3cVrK-psMWdRBp4Q@mail.gmail.com>
Message-ID: <F4A7C648-D5B2-40A9-8D9E-93F381C47E2F@gmail.com>

> Most users don't know about text editors, or FTP

So what do they so when they cause a 500 by messing with the themes function file?

Not trying to be pedantic but I've had to fix many sites where the inexperienced user has caused a 500 from messing with the files in the editor. 

I don't think it should be taken out but perhaps a layer of protection from that sort of thing could be introduced?

Sent from my iPhone

On 16 Jan,2013, at 8:01 AM, Andrew Nacin <wp at andrewnacin.com> wrote:

> On Wed, Jan 16, 2013 at 2:50 AM, Almog Baku <almog.baku at gmail.com> wrote:
> 
>> @Nachin, you right. but this act will fore them to use a little bit
>> professional tool(even like notepad++), so we'll can push wordpress to
>> place less amateur.
> 
> 
> Most users don't know about text editors, or FTP. And nor should they,
> unless they want to. Those that know enough to edit wp-config.php when
> asked probably have no idea how to make such changes as part of an
> effective workflow. Rather, they download the file, edit it, re-upload the
> file ? if they didn't use the editor built into their web host's crummy
> file browser.
> 
> It should be okay for users to hack around and hit save. I don't see why
> the tool can't be a more "professional tool," as you say. We're not going
> to remove a feature in order to to make WordPress less appealing to our
> broad user base. WordPress is for amateurs. It's for photographers. It's
> for bloggers. It's for writers, poets, journalists. It's for cat pictures,
> diary entries, and musings. Yes, it's also for Fortune 500 companies and
> world-class developers. But those aren't the people we target with the
> theme editor. For the people we do, it's not going anywhere.
> 
> Nacin
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From leo.lj.ji at gmail.com  Wed Jan 16 08:29:31 2013
From: leo.lj.ji at gmail.com (Leo Ji)
Date: Wed, 16 Jan 2013 16:29:31 +0800
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <F4A7C648-D5B2-40A9-8D9E-93F381C47E2F@gmail.com>
References: <CALncZpQ1Sc-KBRBhqzD+8X3rv-HiG=+t9hr+3HWjj+MSKq0AJQ@mail.gmail.com>
	<CAH9UVvH9X9V+4Tww3imgPYVt=a10usaT-RnFbXWB0z40hhbF2w@mail.gmail.com>
	<CALncZpRABPdXi2NtwHX2MWYdZfK7-LB1Ecfk1DWAgX+Dhw5H2Q@mail.gmail.com>
	<CAP29PvhSVQVrRnYzq60GrR0L-tFbQHakHR3cVrK-psMWdRBp4Q@mail.gmail.com>
	<F4A7C648-D5B2-40A9-8D9E-93F381C47E2F@gmail.com>
Message-ID: <CAKpjs3-bqKY0kbVMRz60VH48J7E+Lfwp=dXNF5hsa6Z1uA9v7g@mail.gmail.com>

> I don't think it should be taken out but perhaps a layer of protection
from that sort of thing could be introduced?

How about disabling it by default and then enabling through a constant set
in wp-config.php? Then most users won't have access to the editor, but
people who need it can enable it through FTP + text editor.

On Wednesday, January 16, 2013, Andy Charrington-Wilden wrote:

> > Most users don't know about text editors, or FTP
>
> So what do they so when they cause a 500 by messing with the themes
> function file?
>
> Not trying to be pedantic but I've had to fix many sites where the
> inexperienced user has caused a 500 from messing with the files in the
> editor.
>
> I don't think it should be taken out but perhaps a layer of protection
> from that sort of thing could be introduced?
>
> Sent from my iPhone
>
> On 16 Jan,2013, at 8:01 AM, Andrew Nacin <wp at andrewnacin.com<javascript:;>>
> wrote:
>
> > On Wed, Jan 16, 2013 at 2:50 AM, Almog Baku <almog.baku at gmail.com<javascript:;>>
> wrote:
> >
> >> @Nachin, you right. but this act will fore them to use a little bit
> >> professional tool(even like notepad++), so we'll can push wordpress to
> >> place less amateur.
> >
> >
> > Most users don't know about text editors, or FTP. And nor should they,
> > unless they want to. Those that know enough to edit wp-config.php when
> > asked probably have no idea how to make such changes as part of an
> > effective workflow. Rather, they download the file, edit it, re-upload
> the
> > file ? if they didn't use the editor built into their web host's crummy
> > file browser.
> >
> > It should be okay for users to hack around and hit save. I don't see why
> > the tool can't be a more "professional tool," as you say. We're not going
> > to remove a feature in order to to make WordPress less appealing to our
> > broad user base. WordPress is for amateurs. It's for photographers. It's
> > for bloggers. It's for writers, poets, journalists. It's for cat
> pictures,
> > diary entries, and musings. Yes, it's also for Fortune 500 companies and
> > world-class developers. But those aren't the people we target with the
> > theme editor. For the people we do, it's not going anywhere.
> >
> > Nacin
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
-- Leo Ji

From mrwiblog at gmail.com  Wed Jan 16 10:38:19 2013
From: mrwiblog at gmail.com (Chris Taylor)
Date: Wed, 16 Jan 2013 10:38:19 +0000
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAKpjs3-bqKY0kbVMRz60VH48J7E+Lfwp=dXNF5hsa6Z1uA9v7g@mail.gmail.com>
References: <CALncZpQ1Sc-KBRBhqzD+8X3rv-HiG=+t9hr+3HWjj+MSKq0AJQ@mail.gmail.com>
	<CAH9UVvH9X9V+4Tww3imgPYVt=a10usaT-RnFbXWB0z40hhbF2w@mail.gmail.com>
	<CALncZpRABPdXi2NtwHX2MWYdZfK7-LB1Ecfk1DWAgX+Dhw5H2Q@mail.gmail.com>
	<CAP29PvhSVQVrRnYzq60GrR0L-tFbQHakHR3cVrK-psMWdRBp4Q@mail.gmail.com>
	<F4A7C648-D5B2-40A9-8D9E-93F381C47E2F@gmail.com>
	<CAKpjs3-bqKY0kbVMRz60VH48J7E+Lfwp=dXNF5hsa6Z1uA9v7g@mail.gmail.com>
Message-ID: <CAOb_bYb381URaBxLNG5F3FUvmOLVjayhB=q+As26fG5e94GJPg@mail.gmail.com>

I agree it's useful to be able to hack theme files(and plugin files) direct
in WordPress. To stop 500 errors maybe some kind of sandboxing system, as
is used for plugin, could be developed?

In terms of making the actual theme editing experience better there are
plenty Open Source JavaScript code editors, but perhaps this is more suited
to a plugin (even a loaded-by-default one) than core code.

Chris

On Wednesday, January 16, 2013, Leo Ji <leo.lj.ji at gmail.com> wrote:
>> I don't think it should be taken out but perhaps a layer of protection
> from that sort of thing could be introduced?
>
> How about disabling it by default and then enabling through a constant set
> in wp-config.php? Then most users won't have access to the editor, but
> people who need it can enable it through FTP + text editor.
>
> On Wednesday, January 16, 2013, Andy Charrington-Wilden wrote:
>
>> > Most users don't know about text editors, or FTP
>>
>> So what do they so when they cause a 500 by messing with the themes
>> function file?
>>
>> Not trying to be pedantic but I've had to fix many sites where the
>> inexperienced user has caused a 500 from messing with the files in the
>> editor.
>>
>> I don't think it should be taken out but perhaps a layer of protection
>> from that sort of thing could be introduced?
>>
>> Sent from my iPhone
>>
>> On 16 Jan,2013, at 8:01 AM, Andrew Nacin <wp at andrewnacin.com
<javascript:;>>
>> wrote:
>>
>> > On Wed, Jan 16, 2013 at 2:50 AM, Almog Baku <almog.baku at gmail.com
<javascript:;>>
>> wrote:
>> >
>> >> @Nachin, you right. but this act will fore them to use a little bit
>> >> professional tool(even like notepad++), so we'll can push wordpress to
>> >> place less amateur.
>> >
>> >
>> > Most users don't know about text editors, or FTP. And nor should they,
>> > unless they want to. Those that know enough to edit wp-config.php when
>> > asked probably have no idea how to make such changes as part of an
>> > effective workflow. Rather, they download the file, edit it, re-upload
>> the
>> > file ? if they didn't use the editor built into their web host's crummy
>> > file browser.
>> >
>> > It should be okay for users to hack around and hit save. I don't see
why
>> > the tool can't be a more "professional tool," as you say. We're not
going
>> > to remove a feature in order to to make WordPress less appealing to our
>> > broad user base. WordPress is for amateurs. It's for photographers.
It's
>> > for bloggers. It's for writers, poets, journalists. It's for cat
>> pictures,
>> > diary entries, and musings. Yes, it's also for Fortune 500 companies
and
>> > world-class developers. But those aren't the people we target with the
>> > theme editor. For the people we do, it's not going anywhere.
>> >
>> > Nacin
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com <javascript:;>
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com <javascript:;>
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
> --
> -- Leo Ji
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From steve at sltaylor.co.uk  Wed Jan 16 12:54:34 2013
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Wed, 16 Jan 2013 12:54:34 +0000
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAKpjs3-bqKY0kbVMRz60VH48J7E+Lfwp=dXNF5hsa6Z1uA9v7g@mail.gmail.com>
References: <CALncZpQ1Sc-KBRBhqzD+8X3rv-HiG=+t9hr+3HWjj+MSKq0AJQ@mail.gmail.com>
	<CAH9UVvH9X9V+4Tww3imgPYVt=a10usaT-RnFbXWB0z40hhbF2w@mail.gmail.com>
	<CALncZpRABPdXi2NtwHX2MWYdZfK7-LB1Ecfk1DWAgX+Dhw5H2Q@mail.gmail.com>
	<CAP29PvhSVQVrRnYzq60GrR0L-tFbQHakHR3cVrK-psMWdRBp4Q@mail.gmail.com>
	<F4A7C648-D5B2-40A9-8D9E-93F381C47E2F@gmail.com>
	<CAKpjs3-bqKY0kbVMRz60VH48J7E+Lfwp=dXNF5hsa6Z1uA9v7g@mail.gmail.com>
Message-ID: <CAGEuVU3HB_JZ_dn4Ukad-G539KPjbxevmsieYtFvqnqH_C-S5w@mail.gmail.com>

> How about disabling it by default and then enabling through a constant set
> in wp-config.php? Then most users won't have access to the editor, but
> people who need it can enable it through FTP + text editor.

This wouldn't really work. If the editor is aimed at people who don't
know or care how to FTP, it doesn't make sense to require an FTP
operation to enable it! :-/

That said, I agree that there's an issue with the risk of 500 errors.
I've disabled it by default in all my installations since I
accidentally took a client site down one weekend. I didn't have FTP
access to their production server, and there was one tiny tweak I
wanted to make while their tech support wasn't around to get the files
transferred from staging :-D

Plugins seem to refuse to activate when they throw an error. Not sure
if this happens with the plugin editor - but some kind of sandboxing
would be the #1 improvement to make on WP file editing.

From andycharrington at gmail.com  Wed Jan 16 12:57:58 2013
From: andycharrington at gmail.com (Andy Charrington-Wilden)
Date: Wed, 16 Jan 2013 12:57:58 +0000
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAGEuVU3HB_JZ_dn4Ukad-G539KPjbxevmsieYtFvqnqH_C-S5w@mail.gmail.com>
References: <CALncZpQ1Sc-KBRBhqzD+8X3rv-HiG=+t9hr+3HWjj+MSKq0AJQ@mail.gmail.com>
	<CAH9UVvH9X9V+4Tww3imgPYVt=a10usaT-RnFbXWB0z40hhbF2w@mail.gmail.com>
	<CALncZpRABPdXi2NtwHX2MWYdZfK7-LB1Ecfk1DWAgX+Dhw5H2Q@mail.gmail.com>
	<CAP29PvhSVQVrRnYzq60GrR0L-tFbQHakHR3cVrK-psMWdRBp4Q@mail.gmail.com>
	<F4A7C648-D5B2-40A9-8D9E-93F381C47E2F@gmail.com>
	<CAKpjs3-bqKY0kbVMRz60VH48J7E+Lfwp=dXNF5hsa6Z1uA9v7g@mail.gmail.com>
	<CAGEuVU3HB_JZ_dn4Ukad-G539KPjbxevmsieYtFvqnqH_C-S5w@mail.gmail.com>
Message-ID: <F51830E0-F418-47EB-BADD-20CCFB366824@gmail.com>

I agree. The whole point is to make it accessible to users who dont know or want to use ftp.

How about introducing a system whereby the edited file is temporarily copied (with the changes) then run through php_check_syntax(), then providing a positive result, the changes are duplicated to the live copy and the temp file deleted?

I would happily write a plugin to do this if anyone is interested? I might do it anyway, as a POC.

:-)


Andy Charrington-Wilden
Fish Can't Whistle Limited


This email and any attachments to it may be confidential and are intended solely for the use of the individual to whom it is addressed. Any views or opinions expressed are solely those of the author and do not necessarily represent those of Fish Can't Whistle.
If you are not the intended recipient of this email, you must neither take any action based upon its contents, nor copy or show it to anyone.
Please contact the sender if you believe you have received this email in error

Fish Can't Whistle Ltd is a company registered in England and Wales. Registered number: 7781289. Registered Office: Studio 30, Fazeley Studios, 191 Fazeley Street, Digbeth, Birmingham B5 5SE








On 16 Jan 2013, at 12:54, Steve Taylor <steve at sltaylor.co.uk> wrote:

>> How about disabling it by default and then enabling through a constant set
>> in wp-config.php? Then most users won't have access to the editor, but
>> people who need it can enable it through FTP + text editor.
> 
> This wouldn't really work. If the editor is aimed at people who don't
> know or care how to FTP, it doesn't make sense to require an FTP
> operation to enable it! :-/
> 
> That said, I agree that there's an issue with the risk of 500 errors.
> I've disabled it by default in all my installations since I
> accidentally took a client site down one weekend. I didn't have FTP
> access to their production server, and there was one tiny tweak I
> wanted to make while their tech support wasn't around to get the files
> transferred from staging :-D
> 
> Plugins seem to refuse to activate when they throw an error. Not sure
> if this happens with the plugin editor - but some kind of sandboxing
> would be the #1 improvement to make on WP file editing.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From simon at wpsites.co.uk  Wed Jan 16 14:48:03 2013
From: simon at wpsites.co.uk (Simon Dunton - WP Sites)
Date: Wed, 16 Jan 2013 14:48:03 +0000
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <mailman.9.1358337602.21085.wp-hackers@lists.automattic.com>
References: <mailman.9.1358337602.21085.wp-hackers@lists.automattic.com>
Message-ID: <AC6AAA23-1816-4322-BA71-919BA865EF52@wpsites.co.uk>

Syntax checking has been something I've been meaning to add to WPide (http://wordpress.org/extend/plugins/wpide/)

I've looked for a good way to implement this in the past but couldn't find a solution. Today I think I've found one. I have implemented this PHP parser https://github.com/nikic/PHP-Parser into WPide this morning.

So now when you edit a PHP file in WPide it gets run through that parser and if errors are found then the file isn't saved to the server.

Check it out, I welcome your feedback.

Simon

On 16 Jan 2013, at 12:00, wp-hackers-request at lists.automattic.com wrote:

> Not trying to be pedantic but I've had to fix many sites where the inexperienced user has caused a 500 from messing with the files in the editor. 

From kevinjohngallagher at hotmail.com  Wed Jan 16 15:49:35 2013
From: kevinjohngallagher at hotmail.com (Kevinjohn Gallagher)
Date: Wed, 16 Jan 2013 15:49:35 +0000
Subject: [wp-hackers] SQL: pulling WP data by multiple meta_key/value pairs
Message-ID: <BLU401-EAS451C221C0A3EA7CF93CCA34CC2C0@phx.gbl>

I have a small issue that I think is probably easy to solve and just shows my poor Dev skills (and googling skills).


1. I need to have an SQL query that returns posts based on 2 (or more different) meta_key/value pairs.

I also need to order this by a 3rd meta_key/value pair.

(This needs to be a SQL query  as it's done outside of WP)


Thank you!


===================
Kevinjohn Gallagher

Sent from a mobile device, 
apologies for brevity & tone
==================



From piemanek at gmail.com  Wed Jan 16 16:33:18 2013
From: piemanek at gmail.com (Simon Blackbourn)
Date: Wed, 16 Jan 2013 16:33:18 +0000
Subject: [wp-hackers] SQL: pulling WP data by multiple meta_key/value
	pairs
In-Reply-To: <BLU401-EAS451C221C0A3EA7CF93CCA34CC2C0@phx.gbl>
References: <BLU401-EAS451C221C0A3EA7CF93CCA34CC2C0@phx.gbl>
Message-ID: <CAJxFMSCpHFxw0shNuEL2hfKwemecLpFnboeqT21wD-KiF30J-w@mail.gmail.com>

You can certainly query based on multiple key/values using the meta_query
parameter. [1] & [2]

You may then be able to sort on a third one by passing that in as the
meta_key parameter and setting the orderby parameter to 'meta_value' [3],
although i'm not 100% sure that will work in combination with the
meta_query parameter.

Then you can use the debug bar plugin [4] or any other method of logging
the queries to grab the SQL.

Simon

[1]
http://codex.wordpress.org/Class_Reference/WP_Query#Custom_Field_Parameters
[2] http://scribu.net/wordpress/advanced-metadata-queries.html
[3]
http://codex.wordpress.org/Class_Reference/WP_Query#Order_.26_Orderby_Parameters
[4] http://wordpress.org/extend/plugins/debug-bar/

From simon at wpsites.co.uk  Wed Jan 16 16:46:13 2013
From: simon at wpsites.co.uk (Simon Dunton - WP Sites)
Date: Wed, 16 Jan 2013 16:46:13 +0000
Subject: [wp-hackers] SQL: pulling WP data by multiple meta_key/value
	pairs
In-Reply-To: <CAJxFMSCpHFxw0shNuEL2hfKwemecLpFnboeqT21wD-KiF30J-w@mail.gmail.com>
References: <BLU401-EAS451C221C0A3EA7CF93CCA34CC2C0@phx.gbl>
	<CAJxFMSCpHFxw0shNuEL2hfKwemecLpFnboeqT21wD-KiF30J-w@mail.gmail.com>
Message-ID: <499BFDA5-12E2-4594-9DC7-1C3D1BE662D1@wpsites.co.uk>

That's pretty much what I'd do.

Build the query in WordPress using WP_query() and some meta_query parameters and then just print_r() or var_dump() what you get back from WP_query() which will contain the full SQL query amongst a load of other query bumf.

Simon


On 16 Jan 2013, at 16:33, Simon Blackbourn wrote:

> You can certainly query based on multiple key/values using the meta_query
> parameter. [1] & [2]
> 
> You may then be able to sort on a third one by passing that in as the
> meta_key parameter and setting the orderby parameter to 'meta_value' [3],
> although i'm not 100% sure that will work in combination with the
> meta_query parameter.
> 
> Then you can use the debug bar plugin [4] or any other method of logging
> the queries to grab the SQL.
> 
> Simon
> 
> [1]
> http://codex.wordpress.org/Class_Reference/WP_Query#Custom_Field_Parameters
> [2] http://scribu.net/wordpress/advanced-metadata-queries.html
> [3]
> http://codex.wordpress.org/Class_Reference/WP_Query#Order_.26_Orderby_Parameters
> [4] http://wordpress.org/extend/plugins/debug-bar/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Wed Jan 16 22:35:28 2013
From: otto at ottodestruct.com (Otto)
Date: Wed, 16 Jan 2013 16:35:28 -0600
Subject: [wp-hackers] SQL: pulling WP data by multiple meta_key/value
	pairs
In-Reply-To: <BLU401-EAS451C221C0A3EA7CF93CCA34CC2C0@phx.gbl>
References: <BLU401-EAS451C221C0A3EA7CF93CCA34CC2C0@phx.gbl>
Message-ID: <CAD-FghzVyvJLvcLes5PfeYpn=i8SYGNJJ88oSGhNZY_OdGB6sA@mail.gmail.com>

On Wed, Jan 16, 2013 at 9:49 AM, Kevinjohn Gallagher
<kevinjohngallagher at hotmail.com> wrote:
> I have a small issue that I think is probably easy to solve and just shows my poor Dev skills (and googling skills).
>
> 1. I need to have an SQL query that returns posts based on 2 (or more different) meta_key/value pairs.
>
> I also need to order this by a 3rd meta_key/value pair.
>
> (This needs to be a SQL query  as it's done outside of WP)

Hard to be efficient in writing a query without more info than this,
but a generic way that will work is to use multiple JOINs.

SELECT whatever FROM wp_posts
JOIN wp_postmeta a ON ( a.post_id = wp_posts.ID AND a.meta_key='whatever-a' )
JOIN wp_postmeta b ON ( b.post_id = wp_posts.ID AND b.meta_key='whatever-b' )
JOIN wp_postmeta c ON ( c.post_id = wp_posts.ID AND c.meta_key='whatever-c' )
WHERE
a.meta_value = 'value-a' AND
b.meta_value = 'value-b'
ORDERBY c.meta_value

This may be slow sometimes, and could be optimized if the question was
more specific.

-Otto

From bryangentry at gmail.com  Thu Jan 17 02:30:24 2013
From: bryangentry at gmail.com (Bryan Gentry)
Date: Wed, 16 Jan 2013 21:30:24 -0500
Subject: [wp-hackers] Removing edit theme files features (Bryan Gentry)
Message-ID: <CALabX+MiE4JCqfXywF9KOAvP1OFiPmxY7WG6J4j-1P=dC=7S_g@mail.gmail.com>

I believe it is important to keep the theme editor available for a couple
of reasons.

1) As a developer, I use the built-in editor occasionally. Sometimes a
change must be made when I don't have my own computer available to me.
Sometimes I need to make just a minor tweak and don't want to drag out
another program just to make the small change. There are numerous other
examples of situations in which it is convenient to have this available.

2) Not every client breaks things, not every time they make an edit
themselves.

If a developer wants to disable the editor for a particular site, it is
good that he or she has that option. But I think it's important that the
option to have it turned on remains. (In fact, I would rather see this
feature improved than removed.)

Bryan

From kevinjohngallagher at hotmail.com  Thu Jan 17 12:31:48 2013
From: kevinjohngallagher at hotmail.com (Kevinjohn Gallagher)
Date: Thu, 17 Jan 2013 12:31:48 +0000
Subject: [wp-hackers] SQL: pulling WP data by multiple meta_key/value
 pairs
In-Reply-To: <CAD-FghzVyvJLvcLes5PfeYpn=i8SYGNJJ88oSGhNZY_OdGB6sA@mail.gmail.com>
References: <BLU401-EAS451C221C0A3EA7CF93CCA34CC2C0@phx.gbl>,
	<CAD-FghzVyvJLvcLes5PfeYpn=i8SYGNJJ88oSGhNZY_OdGB6sA@mail.gmail.com>
Message-ID: <BLU150-W445C88219BB74130389A96CC130@phx.gbl>




Thank you for the replies Sam, Simon and Simon.
While efficiency is obviously important, the number of users and caching right now is at a level where I can live with it for another month.
We're facing a situation where Wordpress is a great tool for the editors to use to select the data needed from 5 - 10 CPTs, and then our front of house staff use a single CPT that effectively is just a selection of the data needed from the other CPTs (via a drop downs). It basically means though that all of the data is in meta_data, given that the 1:1 nature of posts isn't scale-able (things like having a Title as mandatory? that's not really needed in a CMS built to share data in a modular way where multiple data parts make up the whole).
I was hoping to avoid the multiple join route, but it does appear to be the way to go right now.
When I have some stats and the specifics around the before and after I'll come back. You folks can probably spot quite a few improvements.
Thanks again,Kev



> From: otto at ottodestruct.com
> Date: Wed, 16 Jan 2013 16:35:28 -0600
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] SQL: pulling WP data by multiple meta_key/value	pairs
> 
> On Wed, Jan 16, 2013 at 9:49 AM, Kevinjohn Gallagher
> <kevinjohngallagher at hotmail.com> wrote:
> > I have a small issue that I think is probably easy to solve and just shows my poor Dev skills (and googling skills).
> >
> > 1. I need to have an SQL query that returns posts based on 2 (or more different) meta_key/value pairs.
> >
> > I also need to order this by a 3rd meta_key/value pair.
> >
> > (This needs to be a SQL query  as it's done outside of WP)
> 
> Hard to be efficient in writing a query without more info than this,
> but a generic way that will work is to use multiple JOINs.
> 
> SELECT whatever FROM wp_posts
> JOIN wp_postmeta a ON ( a.post_id = wp_posts.ID AND a.meta_key='whatever-a' )
> JOIN wp_postmeta b ON ( b.post_id = wp_posts.ID AND b.meta_key='whatever-b' )
> JOIN wp_postmeta c ON ( c.post_id = wp_posts.ID AND c.meta_key='whatever-c' )
> WHERE
> a.meta_value = 'value-a' AND
> b.meta_value = 'value-b'
> ORDERBY c.meta_value
> 
> This may be slow sometimes, and could be optimized if the question was
> more specific.
> 
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
 		 	   		  

From almog.baku at gmail.com  Thu Jan 17 16:59:47 2013
From: almog.baku at gmail.com (Almog Baku)
Date: Thu, 17 Jan 2013 18:59:47 +0200
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <AC6AAA23-1816-4322-BA71-919BA865EF52@wpsites.co.uk>
References: <mailman.9.1358337602.21085.wp-hackers@lists.automattic.com>
	<AC6AAA23-1816-4322-BA71-919BA865EF52@wpsites.co.uk>
Message-ID: <CALncZpRYVhTPU5oVWXdTTHRS8K84QgcffWC_EpXMy=XCnnSwDA@mail.gmail.com>

By my opinion-
Developing should be done by developers.

If he know how to handle with css its the time to know how to handle with
some other stuff such as ftp.
I think we should aim the end-user to a way better professional way.

This feature is risky, old, and not professional. If we would like to see
the development over wordpress better and way professional we should write
some patterns that the developers should follow.
And writing code not at wordpress is the minimum!!

~ Almog

On Wed, Jan 16, 2013 at 4:48 PM, Simon Dunton - WP Sites <
simon at wpsites.co.uk> wrote:

> Syntax checking has been something I've been meaning to add to WPide (
> http://wordpress.org/extend/plugins/wpide/)
>
> I've looked for a good way to implement this in the past but couldn't find
> a solution. Today I think I've found one. I have implemented this PHP
> parser https://github.com/nikic/PHP-Parser into WPide this morning.
>
> So now when you edit a PHP file in WPide it gets run through that parser
> and if errors are found then the file isn't saved to the server.
>
> Check it out, I welcome your feedback.
>
> Simon
>
> On 16 Jan 2013, at 12:00, wp-hackers-request at lists.automattic.com wrote:
>
> > Not trying to be pedantic but I've had to fix many sites where the
> inexperienced user has caused a 500 from messing with the files in the
> editor.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From chris at clwill.com  Thu Jan 17 18:19:25 2013
From: chris at clwill.com (Chris Williams)
Date: Thu, 17 Jan 2013 13:19:25 -0500
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CALncZpRYVhTPU5oVWXdTTHRS8K84QgcffWC_EpXMy=XCnnSwDA@mail.gmail.com>
Message-ID: <CD1D7FD6.1FF0C%chris@clwill.com>

I have to agree.  Like leaving a loaded gun lying on the coffee table.
Maybe I could use it on an intruder, but more often than not something
awful is going to happen.

At the very least this feature should be limited to only those with the
highest of login capabilities.  And even then I'm not sure.

On 1/17/13 8:59 AM, "Almog Baku" <almog.baku at gmail.com> wrote:

>By my opinion-
>Developing should be done by developers.
>
>If he know how to handle with css its the time to know how to handle with
>some other stuff such as ftp.
>I think we should aim the end-user to a way better professional way.
>
>This feature is risky, old, and not professional. If we would like to see
>the development over wordpress better and way professional we should write
>some patterns that the developers should follow.
>And writing code not at wordpress is the minimum!!
>
>~ Almog
>
>On Wed, Jan 16, 2013 at 4:48 PM, Simon Dunton - WP Sites <
>simon at wpsites.co.uk> wrote:
>
>> Syntax checking has been something I've been meaning to add to WPide (
>> http://wordpress.org/extend/plugins/wpide/)
>>
>> I've looked for a good way to implement this in the past but couldn't
>>find
>> a solution. Today I think I've found one. I have implemented this PHP
>> parser https://github.com/nikic/PHP-Parser into WPide this morning.
>>
>> So now when you edit a PHP file in WPide it gets run through that parser
>> and if errors are found then the file isn't saved to the server.
>>
>> Check it out, I welcome your feedback.
>>
>> Simon
>>
>> On 16 Jan 2013, at 12:00, wp-hackers-request at lists.automattic.com wrote:
>>
>> > Not trying to be pedantic but I've had to fix many sites where the
>> inexperienced user has caused a 500 from messing with the files in the
>> editor.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Thu Jan 17 18:41:57 2013
From: otto at ottodestruct.com (Otto)
Date: Thu, 17 Jan 2013 12:41:57 -0600
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CD1D7FD6.1FF0C%chris@clwill.com>
References: <CALncZpRYVhTPU5oVWXdTTHRS8K84QgcffWC_EpXMy=XCnnSwDA@mail.gmail.com>
	<CD1D7FD6.1FF0C%chris@clwill.com>
Message-ID: <CAD-Fghw5c96NEGz4k712WFhMTnwZTBWcL-n6WVv-UCK4Vbq0sA@mail.gmail.com>

On Thu, Jan 17, 2013 at 12:19 PM, Chris Williams <chris at clwill.com> wrote:
> At the very least this feature should be limited to only those with the
> highest of login capabilities.

It already is. The edit_themes and edit_plugins capabilities are set
to be Administrator only, by default. In multisite, they're
specifically restricted to the Super-Admin access level.

-Otto

From andycharrington at gmail.com  Thu Jan 17 18:46:07 2013
From: andycharrington at gmail.com (Andy Charrington-Wilden)
Date: Thu, 17 Jan 2013 18:46:07 +0000
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAD-Fghw5c96NEGz4k712WFhMTnwZTBWcL-n6WVv-UCK4Vbq0sA@mail.gmail.com>
References: <CALncZpRYVhTPU5oVWXdTTHRS8K84QgcffWC_EpXMy=XCnnSwDA@mail.gmail.com>
	<CD1D7FD6.1FF0C%chris@clwill.com>
	<CAD-Fghw5c96NEGz4k712WFhMTnwZTBWcL-n6WVv-UCK4Vbq0sA@mail.gmail.com>
Message-ID: <FF0149B6-5D19-484F-9225-ABB112094225@gmail.com>

Yes but most site owners (who may not know about ftp etc) will more than likely be admins wont they? 


On 17 Jan 2013, at 18:41, Otto wrote:

> On Thu, Jan 17, 2013 at 12:19 PM, Chris Williams <chris at clwill.com> wrote:
>> At the very least this feature should be limited to only those with the
>> highest of login capabilities.
> 
> It already is. The edit_themes and edit_plugins capabilities are set
> to be Administrator only, by default. In multisite, they're
> specifically restricted to the Super-Admin access level.
> 
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Thu Jan 17 18:50:04 2013
From: otto at ottodestruct.com (Otto)
Date: Thu, 17 Jan 2013 12:50:04 -0600
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <FF0149B6-5D19-484F-9225-ABB112094225@gmail.com>
References: <CALncZpRYVhTPU5oVWXdTTHRS8K84QgcffWC_EpXMy=XCnnSwDA@mail.gmail.com>
	<CD1D7FD6.1FF0C%chris@clwill.com>
	<CAD-Fghw5c96NEGz4k712WFhMTnwZTBWcL-n6WVv-UCK4Vbq0sA@mail.gmail.com>
	<FF0149B6-5D19-484F-9225-ABB112094225@gmail.com>
Message-ID: <CAD-FghygiDCiUgR=35HTSnw-Nxr+tQjcc3QBNNw-LLe3dhmiZw@mail.gmail.com>

On Thu, Jan 17, 2013 at 12:46 PM, Andy Charrington-Wilden
<andycharrington at gmail.com> wrote:
> Yes but most site owners (who may not know about ftp etc) will more than likely be admins wont they?

Yes... And they should have the ability to edit their sites too.


On Thu, Jan 17, 2013 at 10:59 AM, Almog Baku <almog.baku at gmail.com> wrote:
> By my opinion-
> Developing should be done by developers.

A developer is a person who does development.

Like it or not, what you are saying are "users" are indeed people who
edit their sites, modify CSS, use PHP code snippets, etc. You can
criticize the plugin and theme editors all you like, but the bottom
line is that WordPress is a tool for building websites, and sometimes
building websites involves getting your hands dirty and editing code
as well.

Removing a feature that many people use doesn't make any sense, no
matter how "professional" you think it is. Instead of removing it, it
should have syntax highlighting, code checking on save, possibly error
detection. It should make it easier for people to tinker, play with,
and learn from.

You and I can edit our site code via an SSH connection, but a lot of
people don't have that sort of connection. And a lot of people who use
WordPress have never heard of FTP and don't know how to use it.

If somebody installs WordPress for their personal blog, and tinkers
with their editor, and breaks their site in the process, well, that
isn't a real big loss if they can continue on to fix it. Failing is
the primary method human beings use for learning.

On the other end of the spectrum, if you're using WordPress in a major
way, doing e-commerce, maybe running a blog with a million hits a day
or something major like that, then you can easily define
DISALLOW_FILE_MODS to turn the editors off completely... or just don't
give Administrator rights to people who don't need them.

-Otto

From scott at dor.ky  Thu Jan 17 18:58:38 2013
From: scott at dor.ky (Scott Wilcox)
Date: Thu, 17 Jan 2013 18:58:38 +0000
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAD-FghygiDCiUgR=35HTSnw-Nxr+tQjcc3QBNNw-LLe3dhmiZw@mail.gmail.com>
References: <CALncZpRYVhTPU5oVWXdTTHRS8K84QgcffWC_EpXMy=XCnnSwDA@mail.gmail.com>
	<CD1D7FD6.1FF0C%chris@clwill.com>
	<CAD-Fghw5c96NEGz4k712WFhMTnwZTBWcL-n6WVv-UCK4Vbq0sA@mail.gmail.com>
	<FF0149B6-5D19-484F-9225-ABB112094225@gmail.com>
	<CAD-FghygiDCiUgR=35HTSnw-Nxr+tQjcc3QBNNw-LLe3dhmiZw@mail.gmail.com>
Message-ID: <6450196871388804719@unknownmsgid>

Surely this thread should be locked ;)

Sent from my iPhone 6

On 17 Jan 2013, at 18:50, Otto <otto at ottodestruct.com> wrote:

> On Thu, Jan 17, 2013 at 12:46 PM, Andy Charrington-Wilden
> <andycharrington at gmail.com> wrote:
>> Yes but most site owners (who may not know about ftp etc) will more than likely be admins wont they?
>
> Yes... And they should have the ability to edit their sites too.
>
>
> On Thu, Jan 17, 2013 at 10:59 AM, Almog Baku <almog.baku at gmail.com> wrote:
>> By my opinion-
>> Developing should be done by developers.
>
> A developer is a person who does development.
>
> Like it or not, what you are saying are "users" are indeed people who
> edit their sites, modify CSS, use PHP code snippets, etc. You can
> criticize the plugin and theme editors all you like, but the bottom
> line is that WordPress is a tool for building websites, and sometimes
> building websites involves getting your hands dirty and editing code
> as well.
>
> Removing a feature that many people use doesn't make any sense, no
> matter how "professional" you think it is. Instead of removing it, it
> should have syntax highlighting, code checking on save, possibly error
> detection. It should make it easier for people to tinker, play with,
> and learn from.
>
> You and I can edit our site code via an SSH connection, but a lot of
> people don't have that sort of connection. And a lot of people who use
> WordPress have never heard of FTP and don't know how to use it.
>
> If somebody installs WordPress for their personal blog, and tinkers
> with their editor, and breaks their site in the process, well, that
> isn't a real big loss if they can continue on to fix it. Failing is
> the primary method human beings use for learning.
>
> On the other end of the spectrum, if you're using WordPress in a major
> way, doing e-commerce, maybe running a blog with a million hits a day
> or something major like that, then you can easily define
> DISALLOW_FILE_MODS to turn the editors off completely... or just don't
> give Administrator rights to people who don't need them.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From chris at clwill.com  Thu Jan 17 19:48:18 2013
From: chris at clwill.com (Chris Williams)
Date: Thu, 17 Jan 2013 14:48:18 -0500
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAD-FghygiDCiUgR=35HTSnw-Nxr+tQjcc3QBNNw-LLe3dhmiZw@mail.gmail.com>
Message-ID: <CD1D9321.1FF2F%chris@clwill.com>

The codex (and common sense) say you need to thoroughly backup your site
before you dive into this deep end of the pool.  Yet there is no built-in
functionality to do that, certainly none that does the files I'll be
messing up with this tool.

Seems you're sending mixed messages.  A five minute install but one,
according to the Codex, requires shell or FTP, a text editor, an FTP
client, and so on to install it (see:
http://codex.wordpress.org/Installing_WordPress).  But you're saying they
don't know how to do that?  How did they get it installed?

I was unaware of the DISALLOW_FILE_MODS option until this thread, and you
can be betting it will be standard on my installs.  But I still wonder the
point and the safety of this tool.

On 1/17/13 10:50 AM, "Otto" <otto at ottodestruct.com> wrote:

>A developer is a person who does development.
>
>Like it or not, what you are saying are "users" are indeed people who
>edit their sites, modify CSS, use PHP code snippets, etc. You can
>criticize the plugin and theme editors all you like, but the bottom
>line is that WordPress is a tool for building websites, and sometimes
>building websites involves getting your hands dirty and editing code
>as well.
>
>Removing a feature that many people use doesn't make any sense, no
>matter how "professional" you think it is. Instead of removing it, it
>should have syntax highlighting, code checking on save, possibly error
>detection. It should make it easier for people to tinker, play with,
>and learn from.
>
>You and I can edit our site code via an SSH connection, but a lot of
>people don't have that sort of connection. And a lot of people who use
>WordPress have never heard of FTP and don't know how to use it.
>
>If somebody installs WordPress for their personal blog, and tinkers
>with their editor, and breaks their site in the process, well, that
>isn't a real big loss if they can continue on to fix it. Failing is
>the primary method human beings use for learning.
>
>On the other end of the spectrum, if you're using WordPress in a major
>way, doing e-commerce, maybe running a blog with a million hits a day
>or something major like that, then you can easily define
>DISALLOW_FILE_MODS to turn the editors off completely... or just don't
>give Administrator rights to people who don't need them.
>
>-Otto


From wp at andrewnacin.com  Thu Jan 17 19:53:43 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Thu, 17 Jan 2013 14:53:43 -0500
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CD1D9321.1FF2F%chris@clwill.com>
References: <CAD-FghygiDCiUgR=35HTSnw-Nxr+tQjcc3QBNNw-LLe3dhmiZw@mail.gmail.com>
	<CD1D9321.1FF2F%chris@clwill.com>
Message-ID: <CAP29PvjD21geJ0+od92V+FO3+kjKwT7iwGdKUhzvwmq4vbp17Q@mail.gmail.com>

On Jan 17, 2013 2:48 PM, "Chris Williams" <chris at clwill.com> wrote:
> Seems you're sending mixed messages.  A five minute install but one,
> according to the Codex, requires shell or FTP, a text editor, an FTP
> client, and so on to install it (see:
> http://codex.wordpress.org/Installing_WordPress).  But you're saying they
> don't know how to do that?  How did they get it installed?

Yes, I am saying that. The vast majority ? vast ? of sites are now
installed one-click through hosts. The number of sites that come online
each day dwarf the clicks of the Download button on wordpress.org.

I would recommend DISALLOW_FILE_EDIT, which blocks only the editors.
DISALLOW_FILE_MODS also blocks installation and updates of core, plugins,
and themes, which unless you have a locked down environment handled by
version control, you likely don't want.

Nacin

From chris at clwill.com  Thu Jan 17 19:57:55 2013
From: chris at clwill.com (Chris Williams)
Date: Thu, 17 Jan 2013 14:57:55 -0500
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAP29PvjD21geJ0+od92V+FO3+kjKwT7iwGdKUhzvwmq4vbp17Q@mail.gmail.com>
Message-ID: <CD1D9739.1FF47%chris@clwill.com>

Thank you for the clarification on the options.  I have some of each, and
will use them as appropriate from now on.

Perhaps we should try to convince those hosts to enable
DISALLOW_FILE_EDITS by default :)

On 1/17/13 11:53 AM, "Andrew Nacin" <wp at andrewnacin.com> wrote:

>On Jan 17, 2013 2:48 PM, "Chris Williams" <chris at clwill.com> wrote:
>Yes, I am saying that. The vast majority ? vast ? of sites are now
>installed one-click through hosts. The number of sites that come online
>each day dwarf the clicks of the Download button on wordpress.org.
>
>I would recommend DISALLOW_FILE_EDIT, which blocks only the editors.
>DISALLOW_FILE_MODS also blocks installation and updates of core, plugins,
>and themes, which unless you have a locked down environment handled by
>version control, you likely don't want.
>
>Nacin
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Thu Jan 17 20:04:32 2013
From: otto at ottodestruct.com (Otto)
Date: Thu, 17 Jan 2013 14:04:32 -0600
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CD1D9321.1FF2F%chris@clwill.com>
References: <CAD-FghygiDCiUgR=35HTSnw-Nxr+tQjcc3QBNNw-LLe3dhmiZw@mail.gmail.com>
	<CD1D9321.1FF2F%chris@clwill.com>
Message-ID: <CAD-FghwUHLVP+v2tQy0PBFVWXhDJ4d0rY75TV3ge0YUZAULxJw@mail.gmail.com>

On Thu, Jan 17, 2013 at 1:48 PM, Chris Williams <chris at clwill.com> wrote:
> The codex (and common sense) say you need to thoroughly backup your site
> before you dive into this deep end of the pool.  Yet there is no built-in
> functionality to do that, certainly none that does the files I'll be
> messing up with this tool.

Good point. Maybe it should save revisions of the files when you use
the editor too.

See? Enhancements! :)

-Otto

From simon at wpsites.co.uk  Thu Jan 17 20:09:44 2013
From: simon at wpsites.co.uk (Simon Dunton - WP Sites)
Date: Thu, 17 Jan 2013 20:09:44 +0000
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAD-FghwUHLVP+v2tQy0PBFVWXhDJ4d0rY75TV3ge0YUZAULxJw@mail.gmail.com>
References: <CAD-FghygiDCiUgR=35HTSnw-Nxr+tQjcc3QBNNw-LLe3dhmiZw@mail.gmail.com>
	<CD1D9321.1FF2F%chris@clwill.com>
	<CAD-FghwUHLVP+v2tQy0PBFVWXhDJ4d0rY75TV3ge0YUZAULxJw@mail.gmail.com>
Message-ID: <052CB79F-8B02-4A37-9E9A-88F53C5432CE@wpsites.co.uk>

A revision is no good if the user enters invalid PHP syntax. It's white screen of death and into FTP/SSH you go to put things right.

Syntax checking is what you need. Like I said, I've added this to WPide using this parser https://github.com/nikic/PHP-Parser. Maybe a similar parser could be used in core.. probably better suited to a plugin though I reckon.


On 17 Jan 2013, at 20:04, Otto wrote:

> On Thu, Jan 17, 2013 at 1:48 PM, Chris Williams <chris at clwill.com> wrote:
>> The codex (and common sense) say you need to thoroughly backup your site
>> before you dive into this deep end of the pool.  Yet there is no built-in
>> functionality to do that, certainly none that does the files I'll be
>> messing up with this tool.
> 
> Good point. Maybe it should save revisions of the files when you use
> the editor too.
> 
> See? Enhancements! :)
> 
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From shastaw at gmail.com  Thu Jan 17 20:29:06 2013
From: shastaw at gmail.com (Shasta Willson)
Date: Thu, 17 Jan 2013 12:29:06 -0800
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <052CB79F-8B02-4A37-9E9A-88F53C5432CE@wpsites.co.uk>
References: <CAD-FghygiDCiUgR=35HTSnw-Nxr+tQjcc3QBNNw-LLe3dhmiZw@mail.gmail.com>
	<CD1D9321.1FF2F%chris@clwill.com>
	<CAD-FghwUHLVP+v2tQy0PBFVWXhDJ4d0rY75TV3ge0YUZAULxJw@mail.gmail.com>
	<052CB79F-8B02-4A37-9E9A-88F53C5432CE@wpsites.co.uk>
Message-ID: <CAGguigfQ+uN_DLbUX+Ld6FAuEODGQ1EGkTUD=sRPpsCLv5HKog@mail.gmail.com>

I use the built-in editor for small tweaks on sites fairly often. I'd
see it as significant backwards progress to lose this, and I'm a
"Serious" developer with several years of Wordpress work and a decade
of Java before that.

It's a useful tool.

But I absolutely will not use it unless/until I have FTP access to the
files, for the reasons cited.  I've refused to take jobs where the
client demanded I do so with no reversion option. The suggestion to
have a toggle in the wp-config to turn ON the editor would help insure
that this access existed prior to potentially destroying one's site.

But better yet would be a "preview" mode, not unlike the one you get
when you change a monitor's settings.  If you don't click on the "Keep
this" option it reverts after a set amount of time. This could address
a broader swath of potential errors than a PHP syntax check (though
that would be a HUGE improvement) and at the same time be painful
enough to encourage folks who want to learn PHP hacking to also take
the five minutes to download something like FileZilla and learn to use
it.

Because really, if you're going to take up a new hobby, say
motorcycling, you should be encouraged to learn about and use safety
gear.

- Shasta

From helen.y.hou at gmail.com  Thu Jan 17 21:31:18 2013
From: helen.y.hou at gmail.com (Helen Hou-Sandi)
Date: Thu, 17 Jan 2013 16:31:18 -0500
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CD1D9739.1FF47%chris@clwill.com>
References: <CAP29PvjD21geJ0+od92V+FO3+kjKwT7iwGdKUhzvwmq4vbp17Q@mail.gmail.com>
	<CD1D9739.1FF47%chris@clwill.com>
Message-ID: <CAA0DF=8iir1rUUY=CfFQg-AzF=S5Si3TO=KP44riO=knYFs73g@mail.gmail.com>

On Thu, Jan 17, 2013 at 2:57 PM, Chris Williams <chris at clwill.com> wrote:

>
> Perhaps we should try to convince those hosts to enable
> DISALLOW_FILE_EDITS by default :)
>
>
I think it'd be a bit of a disservice not to recognize that different
people have different routes to learning. I personally learned about
tweaking themes/plugins, and then lightly developing, on WordPress through
a one-click install and then editing files in the admin. If you had told me
that the *only* way I could edit something was to use FTP (oh, and not FTP
because it's not secure, and Vim is better, and you should be doing a child
theme anyway, etc., which we have to admit happens) or hire a developer, I
would have dropped it immediately and gone somewhere else. And then the
things I would have missed!

Somebody who isn't adventurous probably won't randomly go editing things
until specifically told to do so. People who are adventurous are used to
things going wrong sometimes and having to figure out how to fix it, and
usually come out all the better on the other end. If you're talking about a
site for a client, then yes, you probably want to DISALLOW_FILE_EDITS or
not make them an admin in the first place. But, I also agree that we need
to put aside developer-level discussion about the existence of file editing
in the admin and make it a non-developer-user-level thing. A user with
their own installation does not typically have a developer on retainer. So,
how can we make it a better and safer experience for that user who might
get directed to or go wandering into that area? Syntax highlighting is
nice, although we should probably remember that a non-developer probably
has no idea what the colors mean, so we're still talking about a
developer-level enhancement for something we're saying we shouldn't be
using. Revisions and user-friendly linting, however, definitely sound super
cool.

From andycharrington at gmail.com  Thu Jan 17 22:27:01 2013
From: andycharrington at gmail.com (Andy Charrington-Wilden)
Date: Thu, 17 Jan 2013 22:27:01 +0000
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAD-FghygiDCiUgR=35HTSnw-Nxr+tQjcc3QBNNw-LLe3dhmiZw@mail.gmail.com>
References: <CALncZpRYVhTPU5oVWXdTTHRS8K84QgcffWC_EpXMy=XCnnSwDA@mail.gmail.com>
	<CD1D7FD6.1FF0C%chris@clwill.com>
	<CAD-Fghw5c96NEGz4k712WFhMTnwZTBWcL-n6WVv-UCK4Vbq0sA@mail.gmail.com>
	<FF0149B6-5D19-484F-9225-ABB112094225@gmail.com>
	<CAD-FghygiDCiUgR=35HTSnw-Nxr+tQjcc3QBNNw-LLe3dhmiZw@mail.gmail.com>
Message-ID: <57A6DB8A-3843-43C8-B7F8-BD1C4D810113@gmail.com>

> Yes... And they should have the ability to edit their sites too.


And what if they 500 it? Then they have a totally unusable site. 

I'm saying it should be kept but improved as per my previous suggestion. 

:-)

Sent from my iPhone

On 17 Jan,2013, at 6:50 PM, Otto <otto at ottodestruct.com> wrote:

> Yes... And they should have the ability to edit their sites too.

From bryan at ibaku.net  Thu Jan 17 22:49:11 2013
From: bryan at ibaku.net (Bryan Petty)
Date: Thu, 17 Jan 2013 15:49:11 -0700
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAD-FghwUHLVP+v2tQy0PBFVWXhDJ4d0rY75TV3ge0YUZAULxJw@mail.gmail.com>
References: <CAD-FghygiDCiUgR=35HTSnw-Nxr+tQjcc3QBNNw-LLe3dhmiZw@mail.gmail.com>
	<CD1D9321.1FF2F%chris@clwill.com>
	<CAD-FghwUHLVP+v2tQy0PBFVWXhDJ4d0rY75TV3ge0YUZAULxJw@mail.gmail.com>
Message-ID: <CAKB8V+ryVJ-PVQ4Kyi4dthwVm4-wDC5b9Hiyj2gFYjr_wVF6+w@mail.gmail.com>

On Thu, Jan 17, 2013 at 1:04 PM, Otto <otto at ottodestruct.com> wrote:
> Good point. Maybe it should save revisions of the files when you use
> the editor too.

I'll remember you said that the next time you say programmers don't
need version control.

Regards,
Bryan Petty

From otto at ottodestruct.com  Fri Jan 18 00:15:48 2013
From: otto at ottodestruct.com (Otto)
Date: Thu, 17 Jan 2013 18:15:48 -0600
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAKB8V+ryVJ-PVQ4Kyi4dthwVm4-wDC5b9Hiyj2gFYjr_wVF6+w@mail.gmail.com>
References: <CAD-FghygiDCiUgR=35HTSnw-Nxr+tQjcc3QBNNw-LLe3dhmiZw@mail.gmail.com>
	<CD1D9321.1FF2F%chris@clwill.com>
	<CAD-FghwUHLVP+v2tQy0PBFVWXhDJ4d0rY75TV3ge0YUZAULxJw@mail.gmail.com>
	<CAKB8V+ryVJ-PVQ4Kyi4dthwVm4-wDC5b9Hiyj2gFYjr_wVF6+w@mail.gmail.com>
Message-ID: <CAD-Fghzz8kWyLo0h2L+dD5cjRjqqSdLkZh_ObCxZr5-S5=LqCQ@mail.gmail.com>

On Thu, Jan 17, 2013 at 4:49 PM, Bryan Petty <bryan at ibaku.net> wrote:
> On Thu, Jan 17, 2013 at 1:04 PM, Otto <otto at ottodestruct.com> wrote:
>> Good point. Maybe it should save revisions of the files when you use
>> the editor too.
>
> I'll remember you said that the next time you say programmers don't
> need version control.

I've never said programmers don't need version control, but thanks for
playing regardless.

-Otto

From simon.weil at naturalint.com  Fri Jan 18 07:48:33 2013
From: simon.weil at naturalint.com (Simon Weil)
Date: Fri, 18 Jan 2013 09:48:33 +0200
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAD-Fghzz8kWyLo0h2L+dD5cjRjqqSdLkZh_ObCxZr5-S5=LqCQ@mail.gmail.com>
References: <CAD-FghygiDCiUgR=35HTSnw-Nxr+tQjcc3QBNNw-LLe3dhmiZw@mail.gmail.com>
	<CD1D9321.1FF2F%chris@clwill.com>
	<CAD-FghwUHLVP+v2tQy0PBFVWXhDJ4d0rY75TV3ge0YUZAULxJw@mail.gmail.com>
	<CAKB8V+ryVJ-PVQ4Kyi4dthwVm4-wDC5b9Hiyj2gFYjr_wVF6+w@mail.gmail.com>
	<CAD-Fghzz8kWyLo0h2L+dD5cjRjqqSdLkZh_ObCxZr5-S5=LqCQ@mail.gmail.com>
Message-ID: <CADxdhefv7hrr05vHvsarxuMFdCb57c_WzP4PrsyrzV-KmfEfug@mail.gmail.com>

I enjoying the conversation, many good points have come up.

The editing on the back end is both useful and dangerus therefore I must
agree with Otto about enhancing the editor rather than disabling it.

For locking the edit option I personally use for all my sites Better WP
Security that adds/removes the constant from the config.php.

I think the following summarizes the discussed enhancments:
1. Code high lighting
2. Syntax checker
3. Sandbox of some kind
4. Basic revision control

Manybe Wpide and 'advanced code editor' by bainternet can be some starting
point for a better built-in editor.

Simon
On Thu, Jan 17, 2013 at 4:49 PM, Bryan Petty <bryan at ibaku.net> wrote:
> On Thu, Jan 17, 2013 at 1:04 PM, Otto <otto at ottodestruct.com> wrote:
>> Good point. Maybe it should save revisions of the files when you use
>> the editor too.
>
> I'll remember you said that the next time you say programmers don't
> need version control.

I've never said programmers don't need version control, but thanks for
playing regardless.

-Otto
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From hosting at earthbound.com  Fri Jan 18 13:53:04 2013
From: hosting at earthbound.com (Adam Silverstein)
Date: Fri, 18 Jan 2013 06:53:04 -0700
Subject: [wp-hackers] Removing edit theme files features
Message-ID: <CAHWgyKHPLoHTDSuGon+qd1OBkVN63osmMqiasB8SnPV5Um+NdQ@mail.gmail.com>

i like the idea of a preview of changes that doesn't take effect without
user confirmation. keep that on the list!


On Fri, Jan 18, 2013 at 5:00 AM, <wp-hackers-request at lists.automattic.com>wrote:

> Send wp-hackers mailing list submissions to
>         wp-hackers at lists.automattic.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>         http://lists.automattic.com/mailman/listinfo/wp-hackers
> or, via email, send a message with subject or body 'help' to
>         wp-hackers-request at lists.automattic.com
>
> You can reach the person managing the list at
>         wp-hackers-owner at lists.automattic.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wp-hackers digest..."
>
>
> Today's Topics:
>
>    1. Re: Removing edit theme files features (Simon Weil)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Fri, 18 Jan 2013 09:48:33 +0200
> From: Simon Weil <simon.weil at naturalint.com>
> Subject: Re: [wp-hackers] Removing edit theme files features
> To: wp-hackers at lists.automattic.com
> Message-ID:
>         <
> CADxdhefv7hrr05vHvsarxuMFdCb57c_WzP4PrsyrzV-KmfEfug at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> I enjoying the conversation, many good points have come up.
>
> The editing on the back end is both useful and dangerus therefore I must
> agree with Otto about enhancing the editor rather than disabling it.
>
> For locking the edit option I personally use for all my sites Better WP
> Security that adds/removes the constant from the config.php.
>
> I think the following summarizes the discussed enhancments:
> 1. Code high lighting
> 2. Syntax checker
> 3. Sandbox of some kind
> 4. Basic revision control
>
> Manybe Wpide and 'advanced code editor' by bainternet can be some starting
> point for a better built-in editor.
>
> Simon
> On Thu, Jan 17, 2013 at 4:49 PM, Bryan Petty <bryan at ibaku.net> wrote:
> > On Thu, Jan 17, 2013 at 1:04 PM, Otto <otto at ottodestruct.com> wrote:
> >> Good point. Maybe it should save revisions of the files when you use
> >> the editor too.
> >
> > I'll remember you said that the next time you say programmers don't
> > need version control.
>
> I've never said programmers don't need version control, but thanks for
> playing regardless.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> ------------------------------
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> End of wp-hackers Digest, Vol 96, Issue 23
> ******************************************
>



-- 
Adam Silverstein
Website Development & Hosting
Earthbound.com * 970.872.4421 * 800.399.4085

From chip at chipbennett.net  Fri Jan 18 14:14:06 2013
From: chip at chipbennett.net (Chip Bennett)
Date: Fri, 18 Jan 2013 09:14:06 -0500
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAHWgyKHPLoHTDSuGon+qd1OBkVN63osmMqiasB8SnPV5Um+NdQ@mail.gmail.com>
References: <CAHWgyKHPLoHTDSuGon+qd1OBkVN63osmMqiasB8SnPV5Um+NdQ@mail.gmail.com>
Message-ID: <CAPdLKqeNchXocYfxXs1W9ks-rVvRUnviigciDudHfrpaeBsWEg@mail.gmail.com>

Count me in the camp that believes the admin file editor is Plugin
Territory, but I accept that the decision has been made.

IMHO, if it is to be retained, and intended to be used by people
uncomfortable with using an FTP client, then it darn well had better be
made a lot more fail-safe (and useful, for that matter). Otherwise, we're
giving people a firehose without ever teaching them how to use a household
fire extinguisher.

Preventing 500 errors should be the #1 priority. Whether that means
sandboxing, saving file revisions, or whatever; the biggest risk is that
someone will copy/paste or fat-finger a syntax error, and hose their site
completely.

After that, the rest of the features are nice-to-have. The top of my list
would be line numbers and tab-spacing, followed by syntax highlighting.


On Fri, Jan 18, 2013 at 8:53 AM, Adam Silverstein <hosting at earthbound.com>wrote:

> i like the idea of a preview of changes that doesn't take effect without
> user confirmation. keep that on the list!
>
>
> On Fri, Jan 18, 2013 at 5:00 AM, <wp-hackers-request at lists.automattic.com
> >wrote:
>
> > Send wp-hackers mailing list submissions to
> >         wp-hackers at lists.automattic.com
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >         http://lists.automattic.com/mailman/listinfo/wp-hackers
> > or, via email, send a message with subject or body 'help' to
> >         wp-hackers-request at lists.automattic.com
> >
> > You can reach the person managing the list at
> >         wp-hackers-owner at lists.automattic.com
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of wp-hackers digest..."
> >
> >
> > Today's Topics:
> >
> >    1. Re: Removing edit theme files features (Simon Weil)
> >
> >
> > ----------------------------------------------------------------------
> >
> > Message: 1
> > Date: Fri, 18 Jan 2013 09:48:33 +0200
> > From: Simon Weil <simon.weil at naturalint.com>
> > Subject: Re: [wp-hackers] Removing edit theme files features
> > To: wp-hackers at lists.automattic.com
> > Message-ID:
> >         <
> > CADxdhefv7hrr05vHvsarxuMFdCb57c_WzP4PrsyrzV-KmfEfug at mail.gmail.com>
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > I enjoying the conversation, many good points have come up.
> >
> > The editing on the back end is both useful and dangerus therefore I must
> > agree with Otto about enhancing the editor rather than disabling it.
> >
> > For locking the edit option I personally use for all my sites Better WP
> > Security that adds/removes the constant from the config.php.
> >
> > I think the following summarizes the discussed enhancments:
> > 1. Code high lighting
> > 2. Syntax checker
> > 3. Sandbox of some kind
> > 4. Basic revision control
> >
> > Manybe Wpide and 'advanced code editor' by bainternet can be some
> starting
> > point for a better built-in editor.
> >
> > Simon
> > On Thu, Jan 17, 2013 at 4:49 PM, Bryan Petty <bryan at ibaku.net> wrote:
> > > On Thu, Jan 17, 2013 at 1:04 PM, Otto <otto at ottodestruct.com> wrote:
> > >> Good point. Maybe it should save revisions of the files when you use
> > >> the editor too.
> > >
> > > I'll remember you said that the next time you say programmers don't
> > > need version control.
> >
> > I've never said programmers don't need version control, but thanks for
> > playing regardless.
> >
> > -Otto
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> >
> > ------------------------------
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> >
> > End of wp-hackers Digest, Vol 96, Issue 23
> > ******************************************
> >
>
>
>
> --
> Adam Silverstein
> Website Development & Hosting
> Earthbound.com * 970.872.4421 * 800.399.4085
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From simon at wpsites.co.uk  Fri Jan 18 16:27:37 2013
From: simon at wpsites.co.uk (Simon Dunton - WP Sites)
Date: Fri, 18 Jan 2013 16:27:37 +0000
Subject: [wp-hackers] Plugin code quality and best practice robot
Message-ID: <D9160EFC-1FD3-41C8-8AAB-82D0B529DDC5@wpsites.co.uk>

Hi,

This is just an idea I had this morning that I thought I would put out there.

I've recently been running WordPress with the codebase symlinked and the wp-content folder in the directory above the WordPress core files. This is causing problems with a number of plugins because they assume the plugin folder will be site.com/wp-content/plugins. As most of you will probably know, it's perfectly valid to have your wp-content, plugins, themes or uploads directory where ever you want providing you set the correct constants.

I'm guessing this is a common issue that a sizeable percentage of .org plugins suffer from. So I thought how about creating a robot to go through all of the wp.org plugins and check for dodgy code like this. It could also check the plugin doesn't generate any notices/errors by running it on a site with error reporting on.

The robot could then post a quick support question to the plugin author to tell them paths need to be created this way and point them to the correct page in the codex and the same with any other coding issues.

What would WordPress.org think about a robot downloading plugins and posting to the support forum section for that plugin? maybe one every couple of seconds.

Is there anything else quality or best practice wise that this robot could detect and inform plugin authors of?


Simon 

WP Sites Ltd

From ipstenu at ipstenu.org  Fri Jan 18 16:56:25 2013
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Fri, 18 Jan 2013 08:56:25 -0800
Subject: [wp-hackers] Plugin code quality and best practice robot
In-Reply-To: <D9160EFC-1FD3-41C8-8AAB-82D0B529DDC5@wpsites.co.uk>
References: <D9160EFC-1FD3-41C8-8AAB-82D0B529DDC5@wpsites.co.uk>
Message-ID: <50F97EB9.8010101@ipstenu.org>

You don't need a robot.

https://github.com/markjaquith/WordPress-Plugin-Directory-Slurper

Download it, grep :)

And ... we do that every now and then (in our free time, hah) to look 
for dodgy code, but I admit that's low on the list.

Simon Dunton - WP Sites wrote:
>
> Hi,
>
> This is just an idea I had this morning that I thought I would put out 
> there.
>
> I've recently been running WordPress with the codebase symlinked and 
> the wp-content folder in the directory above the WordPress core files. 
> This is causing problems with a number of plugins because they assume 
> the plugin folder will be site.com/wp-content/plugins. As most of you 
> will probably know, it's perfectly valid to have your wp-content, 
> plugins, themes or uploads directory where ever you want providing you 
> set the correct constants.
>
> I'm guessing this is a common issue that a sizeable percentage of .org 
> plugins suffer from. So I thought how about creating a robot to go 
> through all of the wp.org plugins and check for dodgy code like this. 
> It could also check the plugin doesn't generate any notices/errors by 
> running it on a site with error reporting on.
>
> The robot could then post a quick support question to the plugin 
> author to tell them paths need to be created this way and point them 
> to the correct page in the codex and the same with any other coding 
> issues.
>
> What would WordPress.org think about a robot downloading plugins and 
> posting to the support forum section for that plugin? maybe one every 
> couple of seconds.
>
> Is there anything else quality or best practice wise that this robot 
> could detect and inform plugin authors of?
>
>
> Simon
>
> WP Sites Ltd
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From viniciusmassuchetto at gmail.com  Fri Jan 18 18:16:26 2013
From: viniciusmassuchetto at gmail.com (Vinicius Massuchetto)
Date: Fri, 18 Jan 2013 16:16:26 -0200
Subject: [wp-hackers] Plugin code quality and best practice robot
In-Reply-To: <50F97EB9.8010101@ipstenu.org>
References: <D9160EFC-1FD3-41C8-8AAB-82D0B529DDC5@wpsites.co.uk>
	<50F97EB9.8010101@ipstenu.org>
Message-ID: <CAJ1a923O5mMDEcmdeg-SW623UYk_5hD5A_9PJqYJD1AfSSUkcA@mail.gmail.com>

Maybe useless for people here, but as the thing is about getting lots
of stuff, I just coded a small scraper to export all the PO files from
GlotPress:
https://github.com/vmassuchetto/glotpress-scraper

In the beginning, I just wanted to get the 'pt_BR' stuff, but the
effort to do it for everything was quite the same.

Cheers.
--
Vinicius Massuchetto
http://vinicius.soylocoporti.org.br


2013/1/18 Mika A Epstein <ipstenu at ipstenu.org>:
> You don't need a robot.
>
> https://github.com/markjaquith/WordPress-Plugin-Directory-Slurper
>
> Download it, grep :)
>
> And ... we do that every now and then (in our free time, hah) to look for
> dodgy code, but I admit that's low on the list.
>
>
> Simon Dunton - WP Sites wrote:
>>
>>
>> Hi,
>>
>> This is just an idea I had this morning that I thought I would put out
>> there.
>>
>> I've recently been running WordPress with the codebase symlinked and the
>> wp-content folder in the directory above the WordPress core files. This is
>> causing problems with a number of plugins because they assume the plugin
>> folder will be site.com/wp-content/plugins. As most of you will probably
>> know, it's perfectly valid to have your wp-content, plugins, themes or
>> uploads directory where ever you want providing you set the correct
>> constants.
>>
>> I'm guessing this is a common issue that a sizeable percentage of .org
>> plugins suffer from. So I thought how about creating a robot to go through
>> all of the wp.org plugins and check for dodgy code like this. It could also
>> check the plugin doesn't generate any notices/errors by running it on a site
>> with error reporting on.
>>
>> The robot could then post a quick support question to the plugin author to
>> tell them paths need to be created this way and point them to the correct
>> page in the codex and the same with any other coding issues.
>>
>> What would WordPress.org think about a robot downloading plugins and
>> posting to the support forum section for that plugin? maybe one every couple
>> of seconds.
>>
>> Is there anything else quality or best practice wise that this robot could
>> detect and inform plugin authors of?
>>
>>
>> Simon
>>
>> WP Sites Ltd
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From halukkaramete at gmail.com  Fri Jan 18 20:25:58 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Fri, 18 Jan 2013 12:25:58 -0800
Subject: [wp-hackers] What's the best way of knowing which wordpress event
	to hook into?
Message-ID: <CAHERW=3nDMjzx6oBT++FR7VACWZhjgZ8cA5v3n7rsGNFrcTvsQ@mail.gmail.com>

Good morning!

Say, you wanted to carry out some action when you click on the publish
post button when creating a new post. For the sake of an example,
let's say you wanted an email to be automatically sent to somebody
everytime you create a post.

The question is what's the best way to know which core functions are
available to hook into - to carry out the emailing.

Or is it that, you kind of guess it - relying strictly on your
WordPress API memory? For example, you could think that since this
action has to do with creating a post, you should search for function
names in the plugin/actions codex page containing the word post in
them and then scan them thru to perhaps pick up items such as
wp_insert_post, wp_update_post, save_post, post_X, X_post etc etc? Is
this the norm?

For this particular case, you will probably ending up with either
wp_insert_post or save_post. But my question is general. Is this the
right way to approach to the problem?

Or.. is there another or more efficient way ( perhaps a plug in ) to
let me know which ( hookable) core functions have run in the current
or in the previous request? This way, I could get a definitive list of
all the related functions for me to choose from or read about which
are directly dealing with the current request that I'm interested in.
No more guess work...

note that because of the header redirects, current request may not cut
it, you would need to be able to get a list of all hookable functions
in the previous request. ( the one that just has run before the
redirect code was encountered ).

http://stackoverflow.com/questions/14405636/whats-the-best-way-of-knowing-which-wordpress-event-to-hook-into

From dyordan1 at ramapo.edu  Fri Jan 18 20:44:06 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Fri, 18 Jan 2013 15:44:06 -0500
Subject: [wp-hackers] What's the best way of knowing which wordpress
	event to hook into?
In-Reply-To: <CAHERW=3nDMjzx6oBT++FR7VACWZhjgZ8cA5v3n7rsGNFrcTvsQ@mail.gmail.com>
References: <CAHERW=3nDMjzx6oBT++FR7VACWZhjgZ8cA5v3n7rsGNFrcTvsQ@mail.gmail.com>
Message-ID: <0500AD86-5856-47C6-BBD6-35C63194CF29@ramapo.edu>

Hey there!

Out of curiosity I checked and, if you look at the definition of the do_action function, you can see the following line:

* @global array $wp_actions Increments the amount of times action was triggered.

That's actually fairly obvious once you look at the code of the function itself, but whatever. Just a wild guess, you can probably hook to the shutdown hook and just save the value of this global array to database/flat file/whatever and then look at it later. Treat it like a hook log, no?

On Fri, 18 Jan 2013, at 3:25 PM, Haluk Karamete wrote:

> Good morning!
> 
> Say, you wanted to carry out some action when you click on the publish
> post button when creating a new post. For the sake of an example,
> let's say you wanted an email to be automatically sent to somebody
> everytime you create a post.
> 
> The question is what's the best way to know which core functions are
> available to hook into - to carry out the emailing.
> 
> Or is it that, you kind of guess it - relying strictly on your
> WordPress API memory? For example, you could think that since this
> action has to do with creating a post, you should search for function
> names in the plugin/actions codex page containing the word post in
> them and then scan them thru to perhaps pick up items such as
> wp_insert_post, wp_update_post, save_post, post_X, X_post etc etc? Is
> this the norm?
> 
> For this particular case, you will probably ending up with either
> wp_insert_post or save_post. But my question is general. Is this the
> right way to approach to the problem?
> 
> Or.. is there another or more efficient way ( perhaps a plug in ) to
> let me know which ( hookable) core functions have run in the current
> or in the previous request? This way, I could get a definitive list of
> all the related functions for me to choose from or read about which
> are directly dealing with the current request that I'm interested in.
> No more guess work...
> 
> note that because of the header redirects, current request may not cut
> it, you would need to be able to get a list of all hookable functions
> in the previous request. ( the one that just has run before the
> redirect code was encountered ).
> 
> http://stackoverflow.com/questions/14405636/whats-the-best-way-of-knowing-which-wordpress-event-to-hook-into
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

~Dobri


From mike at newclarity.net  Fri Jan 18 20:58:28 2013
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 18 Jan 2013 15:58:28 -0500
Subject: [wp-hackers] What's the best way of knowing which wordpress
	event to hook into?
In-Reply-To: <CAHERW=3nDMjzx6oBT++FR7VACWZhjgZ8cA5v3n7rsGNFrcTvsQ@mail.gmail.com>
References: <CAHERW=3nDMjzx6oBT++FR7VACWZhjgZ8cA5v3n7rsGNFrcTvsQ@mail.gmail.com>
Message-ID: <0D359C25-7DC2-4E91-AD98-4684FDEE0706@newclarity.net>

On Jan 18, 2013, at 3:25 PM, Haluk Karamete <halukkaramete at gmail.com> wrote:
> Or.. is there another or more efficient way ( perhaps a plug in ) to
> let me know which ( hookable) core functions have run in the current
> or in the previous request? 


Use an IDE with a debugger like PhpStorm or PHPEd and trace through the code to see what hooks fire.

-Mike


From halukkaramete at gmail.com  Fri Jan 18 21:08:55 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Fri, 18 Jan 2013 13:08:55 -0800
Subject: [wp-hackers] What's the best way of knowing which wordpress
 event to hook into?
In-Reply-To: <0500AD86-5856-47C6-BBD6-35C63194CF29@ramapo.edu>
References: <CAHERW=3nDMjzx6oBT++FR7VACWZhjgZ8cA5v3n7rsGNFrcTvsQ@mail.gmail.com>
	<0500AD86-5856-47C6-BBD6-35C63194CF29@ramapo.edu>
Message-ID: <CAHERW=3QQPuwv0-0abAaXJWd99_F_h0pPJQnv1oiJiSQXhktUw@mail.gmail.com>

You are right. I should have thought about the do_actions.

I also found this which is pretty useful. Sharing for those who need it.

http://www.wprecipes.com/list-all-hooked-wordpress-functions

thanks for the pointer...

On Fri, Jan 18, 2013 at 12:44 PM, Dobri <dyordan1 at ramapo.edu> wrote:
> Hey there!
>
> Out of curiosity I checked and, if you look at the definition of the do_action function, you can see the following line:
>
> * @global array $wp_actions Increments the amount of times action was triggered.
>
> That's actually fairly obvious once you look at the code of the function itself, but whatever. Just a wild guess, you can probably hook to the shutdown hook and just save the value of this global array to database/flat file/whatever and then look at it later. Treat it like a hook log, no?
>
> On Fri, 18 Jan 2013, at 3:25 PM, Haluk Karamete wrote:
>
>> Good morning!
>>
>> Say, you wanted to carry out some action when you click on the publish
>> post button when creating a new post. For the sake of an example,
>> let's say you wanted an email to be automatically sent to somebody
>> everytime you create a post.
>>
>> The question is what's the best way to know which core functions are
>> available to hook into - to carry out the emailing.
>>
>> Or is it that, you kind of guess it - relying strictly on your
>> WordPress API memory? For example, you could think that since this
>> action has to do with creating a post, you should search for function
>> names in the plugin/actions codex page containing the word post in
>> them and then scan them thru to perhaps pick up items such as
>> wp_insert_post, wp_update_post, save_post, post_X, X_post etc etc? Is
>> this the norm?
>>
>> For this particular case, you will probably ending up with either
>> wp_insert_post or save_post. But my question is general. Is this the
>> right way to approach to the problem?
>>
>> Or.. is there another or more efficient way ( perhaps a plug in ) to
>> let me know which ( hookable) core functions have run in the current
>> or in the previous request? This way, I could get a definitive list of
>> all the related functions for me to choose from or read about which
>> are directly dealing with the current request that I'm interested in.
>> No more guess work...
>>
>> note that because of the header redirects, current request may not cut
>> it, you would need to be able to get a list of all hookable functions
>> in the previous request. ( the one that just has run before the
>> redirect code was encountered ).
>>
>> http://stackoverflow.com/questions/14405636/whats-the-best-way-of-knowing-which-wordpress-event-to-hook-into
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> ~Dobri
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From frank at bueltge.de  Fri Jan 18 22:03:39 2013
From: frank at bueltge.de (Frank Bueltge)
Date: Fri, 18 Jan 2013 23:03:39 +0100
Subject: [wp-hackers] What's the best way of knowing which wordpress
 event to hook into?
In-Reply-To: <CAHERW=3QQPuwv0-0abAaXJWd99_F_h0pPJQnv1oiJiSQXhktUw@mail.gmail.com>
References: <CAHERW=3nDMjzx6oBT++FR7VACWZhjgZ8cA5v3n7rsGNFrcTvsQ@mail.gmail.com>
	<0500AD86-5856-47C6-BBD6-35C63194CF29@ramapo.edu>
	<CAHERW=3QQPuwv0-0abAaXJWd99_F_h0pPJQnv1oiJiSQXhktUw@mail.gmail.com>
Message-ID: <CAH9UVvEnx7HOx1-eh2Fj5ffyHej3Brb1Wnyo44V+4nrAPQ5V5Q@mail.gmail.com>

You can also use the plugin Debug Objects, list all hooks and functions,
class to the hook. more comfortable as read the var.

Best
Frank
Am 18.01.2013 22:09 schrieb "Haluk Karamete" <halukkaramete at gmail.com>:

> You are right. I should have thought about the do_actions.
>
> I also found this which is pretty useful. Sharing for those who need it.
>
> http://www.wprecipes.com/list-all-hooked-wordpress-functions
>
> thanks for the pointer...
>
> On Fri, Jan 18, 2013 at 12:44 PM, Dobri <dyordan1 at ramapo.edu> wrote:
> > Hey there!
> >
> > Out of curiosity I checked and, if you look at the definition of the
> do_action function, you can see the following line:
> >
> > * @global array $wp_actions Increments the amount of times action was
> triggered.
> >
> > That's actually fairly obvious once you look at the code of the function
> itself, but whatever. Just a wild guess, you can probably hook to the
> shutdown hook and just save the value of this global array to database/flat
> file/whatever and then look at it later. Treat it like a hook log, no?
> >
> > On Fri, 18 Jan 2013, at 3:25 PM, Haluk Karamete wrote:
> >
> >> Good morning!
> >>
> >> Say, you wanted to carry out some action when you click on the publish
> >> post button when creating a new post. For the sake of an example,
> >> let's say you wanted an email to be automatically sent to somebody
> >> everytime you create a post.
> >>
> >> The question is what's the best way to know which core functions are
> >> available to hook into - to carry out the emailing.
> >>
> >> Or is it that, you kind of guess it - relying strictly on your
> >> WordPress API memory? For example, you could think that since this
> >> action has to do with creating a post, you should search for function
> >> names in the plugin/actions codex page containing the word post in
> >> them and then scan them thru to perhaps pick up items such as
> >> wp_insert_post, wp_update_post, save_post, post_X, X_post etc etc? Is
> >> this the norm?
> >>
> >> For this particular case, you will probably ending up with either
> >> wp_insert_post or save_post. But my question is general. Is this the
> >> right way to approach to the problem?
> >>
> >> Or.. is there another or more efficient way ( perhaps a plug in ) to
> >> let me know which ( hookable) core functions have run in the current
> >> or in the previous request? This way, I could get a definitive list of
> >> all the related functions for me to choose from or read about which
> >> are directly dealing with the current request that I'm interested in.
> >> No more guess work...
> >>
> >> note that because of the header redirects, current request may not cut
> >> it, you would need to be able to get a list of all hookable functions
> >> in the previous request. ( the one that just has run before the
> >> redirect code was encountered ).
> >>
> >>
> http://stackoverflow.com/questions/14405636/whats-the-best-way-of-knowing-which-wordpress-event-to-hook-into
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > ~Dobri
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From danielx386 at gmail.com  Sat Jan 19 02:50:08 2013
From: danielx386 at gmail.com (Daniel Fenn)
Date: Sat, 19 Jan 2013 13:50:08 +1100
Subject: [wp-hackers] Quick install type system for wordpress?
Message-ID: <CAJ5Hi2gsWv-kXYgqw6HkO8f_Fe3RTMQeEbuVWF_dAnFJjz3neA@mail.gmail.com>

Hello all,

Just a question, with phpbb we got a system called quickinstall[1] and I
find it handy to have since I can use it to setup a phpbb board that has x
amount of users etc for people who wirte mods and such.

Does anyone know if there anything like this for wordpress? I would love to
be able to generate say 20 posts with say 30 - 50 comments in each one for
testing code that I'm working on

Thankyou :)

[1] https://www.phpbb.com/mods/quickinstall/

From chris at lod.com  Sat Jan 19 04:29:33 2013
From: chris at lod.com (chris mccoy)
Date: Fri, 18 Jan 2013 23:29:33 -0500
Subject: [wp-hackers] Quick install type system for wordpress?
In-Reply-To: <CAJ5Hi2gsWv-kXYgqw6HkO8f_Fe3RTMQeEbuVWF_dAnFJjz3neA@mail.gmail.com>
References: <CAJ5Hi2gsWv-kXYgqw6HkO8f_Fe3RTMQeEbuVWF_dAnFJjz3neA@mail.gmail.com>
Message-ID: <000301cdf5fd$9519a7f0$bf4cf7d0$@lod.com>

This might help you do that.

http://wordpress.org/extend/plugins/duplicator/


-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Daniel Fenn
Sent: January 18, 2013 9:50 PM
To: wp-hackers
Subject: [wp-hackers] Quick install type system for wordpress?

Hello all,

Just a question, with phpbb we got a system called quickinstall[1] and I
find it handy to have since I can use it to setup a phpbb board that has x
amount of users etc for people who wirte mods and such.

Does anyone know if there anything like this for wordpress? I would love to
be able to generate say 20 posts with say 30 - 50 comments in each one for
testing code that I'm working on

Thankyou :)

[1] https://www.phpbb.com/mods/quickinstall/
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From ian at iandunn.name  Sun Jan 20 06:09:13 2013
From: ian at iandunn.name (Ian Dunn)
Date: Sat, 19 Jan 2013 22:09:13 -0800
Subject: [wp-hackers] Quick install type system for wordpress?
In-Reply-To: <000301cdf5fd$9519a7f0$bf4cf7d0$@lod.com>
References: <CAJ5Hi2gsWv-kXYgqw6HkO8f_Fe3RTMQeEbuVWF_dAnFJjz3neA@mail.gmail.com>
	<000301cdf5fd$9519a7f0$bf4cf7d0$@lod.com>
Message-ID: <50FB8A09.5020303@iandunn.name>

There's some sample data you can import at 
http://codex.wordpress.org/Theme_Unit_Test


On 1/18/2013 8:29 PM, chris mccoy wrote:
> This might help you do that.
>
> http://wordpress.org/extend/plugins/duplicator/
>
>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Daniel Fenn
> Sent: January 18, 2013 9:50 PM
> To: wp-hackers
> Subject: [wp-hackers] Quick install type system for wordpress?
>
> Hello all,
>
> Just a question, with phpbb we got a system called quickinstall[1] and I
> find it handy to have since I can use it to setup a phpbb board that has x
> amount of users etc for people who wirte mods and such.
>
> Does anyone know if there anything like this for wordpress? I would love to
> be able to generate say 20 posts with say 30 - 50 comments in each one for
> testing code that I'm working on
>
> Thankyou :)
>
> [1] https://www.phpbb.com/mods/quickinstall/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From andycharrington at gmail.com  Thu Jan 17 18:46:07 2013
From: andycharrington at gmail.com (Andy Charrington-Wilden)
Date: Thu, 17 Jan 2013 18:46:07 +0000
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAD-Fghw5c96NEGz4k712WFhMTnwZTBWcL-n6WVv-UCK4Vbq0sA@mail.gmail.com>
References: <CALncZpRYVhTPU5oVWXdTTHRS8K84QgcffWC_EpXMy=XCnnSwDA@mail.gmail.com>
	<CD1D7FD6.1FF0C%chris@clwill.com>
	<CAD-Fghw5c96NEGz4k712WFhMTnwZTBWcL-n6WVv-UCK4Vbq0sA@mail.gmail.com>
Message-ID: <FF0149B6-5D19-484F-9225-ABB112094225@gmail.com>

Yes but most site owners (who may not know about ftp etc) will more than likely be admins wont they? 


On 17 Jan 2013, at 18:41, Otto wrote:

> On Thu, Jan 17, 2013 at 12:19 PM, Chris Williams <chris at clwill.com> wrote:
>> At the very least this feature should be limited to only those with the
>> highest of login capabilities.
> 
> It already is. The edit_themes and edit_plugins capabilities are set
> to be Administrator only, by default. In multisite, they're
> specifically restricted to the Super-Admin access level.
> 
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From david at wordshell.net  Sat Jan 19 10:37:35 2013
From: david at wordshell.net (David Anderson)
Date: Sat, 19 Jan 2013 10:37:35 +0000
Subject: [wp-hackers] Searching for plugins on wordpress.org ...
Message-ID: <50FA776F.1010605@wordshell.net>

Hi,

I'm not looking to "game the system", but I am a bit curious if anyone 
"in the know" can explain how the search for plugins on wordpress.org works.

Obviously, any exact match comes top. So the clever guy who took the 
name "backup" gets his plugin top every time when you search for "backup".

But the plugin that comes second... "6Scan Backup". Look at the stats:
Downloads: 7,262
Average rating: 3.1 out of 5 stars (8 5 star, 7 1 star)
0 "it works" ratings on the current version of WP
0 support requests either opened or closed in recent months

Now, how does that come second? Compare, to pick a not-at-all-random 
example, my own backup plugin, "UpdraftPlus backup":

Downloads: 25,014
Average rating: 12 ratings, all 5 star
1 "it works" rating on current version of WP
44 out of 47 support requests closed in the last 2 months

I'm not saying "mine should come second". There are various other backup 
plugins that would rate as well as mine. But I am very curious as to how 
"6scan backup" is managing to come second, and how it manages to rate 
higher than plugins that appear to score better on every metric.

Anyone have any inside knowledge?

David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From info at a5d.org  Sat Jan 19 10:59:31 2013
From: info at a5d.org (Lee Rickler)
Date: Sat, 19 Jan 2013 10:59:31 +0000
Subject: [wp-hackers] Searching for plugins on wordpress.org ...
In-Reply-To: <50FA776F.1010605@wordshell.net>
References: <50FA776F.1010605@wordshell.net>
Message-ID: <F8570543-ECF1-4B23-9D98-7EABE9F93E0C@a5d.org>

Obviously this is not a ranking element but what's to say that the plug in with 0 support threads is not working perfectly, therefore people don't need to ask for support, compared to a plugin with serious issues having a ton of threads?

Also, the stars used to be a simple click and done. Now you have to also write something.
Most people wouldn't be bothered.
I know I've stopped 'starring' plugins because of this.

Lee

On 19 Jan 2013, at 10:37, David Anderson <david at wordshell.net> wrote:

> Hi,
> 
> I'm not looking to "game the system", but I am a bit curious if anyone "in the know" can explain how the search for plugins on wordpress.org works.
> 
> Obviously, any exact match comes top. So the clever guy who took the name "backup" gets his plugin top every time when you search for "backup".
> 
> But the plugin that comes second... "6Scan Backup". Look at the stats:
> Downloads: 7,262
> Average rating: 3.1 out of 5 stars (8 5 star, 7 1 star)
> 0 "it works" ratings on the current version of WP
> 0 support requests either opened or closed in recent months
> 
> Now, how does that come second? Compare, to pick a not-at-all-random example, my own backup plugin, "UpdraftPlus backup":
> 
> Downloads: 25,014
> Average rating: 12 ratings, all 5 star
> 1 "it works" rating on current version of WP
> 44 out of 47 support requests closed in the last 2 months
> 
> I'm not saying "mine should come second". There are various other backup plugins that would rate as well as mine. But I am very curious as to how "6scan backup" is managing to come second, and how it manages to rate higher than plugins that appear to score better on every metric.
> 
> Anyone have any inside knowledge?
> 
> David
> 
> -- 
> WordShell - WordPress fast from the CLI - www.wordshell.net
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mickey at infamia.com  Sat Jan 19 16:17:06 2013
From: mickey at infamia.com (Mickey Panayiotakis)
Date: Sat, 19 Jan 2013 11:17:06 -0500
Subject: [wp-hackers] Searching for plugins on wordpress.org
In-Reply-To: <CAPZNwe161tZ+VrHAr8Bf6CSXJOJ_4Tj7y_mP6QixTBTjZoCZ=Q@mail.gmail.com>
References: <CAPZNwe1gKgV5kcGT5ps48PWJffLrARf0spKF=-Q2cWiyZxFQDw@mail.gmail.com>
	<CAPZNwe0G0u8e6_5FgVMRWueKzOR9a8f_dAozdbQQ6_Rn+9-NEg@mail.gmail.com>
	<CAPZNwe3bqc=Jujgaehtorw6d41tGohmp49wMMGqsJ+Kn-Yxf6w@mail.gmail.com>
	<CAPZNwe2fsSyWnhJBA4WUSvP=0jZoCBdRk-8xU=8Kmf9zniJtUQ@mail.gmail.com>
	<CAPZNwe161tZ+VrHAr8Bf6CSXJOJ_4Tj7y_mP6QixTBTjZoCZ=Q@mail.gmail.com>
Message-ID: <CAPZNwe2BjqNdc-rs1T5SAiDhrbhJDTOhtC7RU236dkKX4JUi9g@mail.gmail.com>

Maybe keyword stuffing fools the search engine: results 2-5 mention
"backup" more than 15 times in the description. Of course most of them have
many. Ore downloads than you, except 6scan which stuffs "backup" in the
description 25 times.

On the other hand "ezbackup" 's description is terrible and they rank just
above you...but also have 2x the downloads.

I also get frustrated when researching backups ; I'd love a way to sort
results based on other criteria (eg downloads, rating etc)

Mickey

On Jan 19, 2013 7:00 AM, <wp-hackers-
> On 19 Jan 2013, at 10:37, David Anderson <david at wordshell.net> wrote:
>
> > Hi,
> >
> > I'm not looking to "game the system", but I am a bit curious if anyone
"in the know" can explain how the search for plugins on wordpress.org works.
> >
> > Obviously, any exact match comes top. So the clever guy who took the
name "backup" gets his plugin top every time when you search for "backup".
> >
> > But the plugin that comes second... "6Scan Backup". Look at the stats:
> > Downloads: 7,262
> > Average rating: 3.1 out of 5 stars (8 5 star, 7 1 star)
> > 0 "it works" ratings on the current version of WP
> > 0 support requests either opened or closed in recent months
> >
> > Now, how does that come second? Compare, to pick a not-at-all-random
example, my own backup plugin, "UpdraftPlus backup":
> >
> > Downloads: 25,014
> > Average rating: 12 ratings, all 5 star
> > 1 "it works" rating on current version of WP
> > 44 out of 47 support requests closed in the last 2 months
> >
> > I'm not saying "mine should come second". There are various other
backup plugins that would rate as well as mine. But I am very curious as to
how "6scan backup" is managing to come second, and how it manages to rate
higher than plugins that appear to score better on every metric.
> >
> > Anyone have any inside knowledge?
> >
> > David
> >
> > --
> > WordShell - WordPress fast from the CLI - www.wordshell.net
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> ------------------------------
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> End of wp-hackers Digest, Vol 96, Issue 26
> ******************************************

From whsatterwhite at gmail.com  Mon Jan 21 16:47:15 2013
From: whsatterwhite at gmail.com (William Satterwhite)
Date: Mon, 21 Jan 2013 11:47:15 -0500
Subject: [wp-hackers] get_the_terms() using term id as index key
Message-ID: <CAGbA+ab6P+=Xx-+AZEDvKVC83wzPOGLD1pLYFprGDXnzrNJtnQ@mail.gmail.com>

I've never noticed this until now, but get_the_terms() uses the found
term's id as the index key in the returned array. Is this intended? I was
expecting the array keys to start at 0 and increment as associated terms
for a post were found. Not a big deal since you can use array_values(); to
reset the index starting at 0.

V/r,
-- 
Hunter Satterwhite
http://linkedin.com/in/hsatterwhite
(252) 762-5177

From xoodrew at gmail.com  Mon Jan 21 16:50:36 2013
From: xoodrew at gmail.com (Drew)
Date: Mon, 21 Jan 2013 09:50:36 -0700
Subject: [wp-hackers] get_the_terms() using term id as index key
In-Reply-To: <CAGbA+ab6P+=Xx-+AZEDvKVC83wzPOGLD1pLYFprGDXnzrNJtnQ@mail.gmail.com>
References: <CAGbA+ab6P+=Xx-+AZEDvKVC83wzPOGLD1pLYFprGDXnzrNJtnQ@mail.gmail.com>
Message-ID: <CAEJabWjtOZkP49HUskU30Zy4Nk3dxtLRwyuL+2VKv3Vg8i=n4Q@mail.gmail.com>

I always viewed it as saving on a foreach by returning the ids as indexes,
plus there's less chance of running into undefined offsets.

Drew
On Jan 21, 2013 9:47 AM, "William Satterwhite" <whsatterwhite at gmail.com>
wrote:

> I've never noticed this until now, but get_the_terms() uses the found
> term's id as the index key in the returned array. Is this intended? I was
> expecting the array keys to start at 0 and increment as associated terms
> for a post were found. Not a big deal since you can use array_values(); to
> reset the index starting at 0.
>
> V/r,
> --
> Hunter Satterwhite
> http://linkedin.com/in/hsatterwhite
> (252) 762-5177
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From whsatterwhite at gmail.com  Mon Jan 21 17:12:41 2013
From: whsatterwhite at gmail.com (William Satterwhite)
Date: Mon, 21 Jan 2013 12:12:41 -0500
Subject: [wp-hackers] get_the_terms() using term id as index key
In-Reply-To: <CAEJabWjtOZkP49HUskU30Zy4Nk3dxtLRwyuL+2VKv3Vg8i=n4Q@mail.gmail.com>
References: <CAGbA+ab6P+=Xx-+AZEDvKVC83wzPOGLD1pLYFprGDXnzrNJtnQ@mail.gmail.com>
	<CAEJabWjtOZkP49HUskU30Zy4Nk3dxtLRwyuL+2VKv3Vg8i=n4Q@mail.gmail.com>
Message-ID: <CAGbA+abwz_M+Jiy1bv1JpweoyJJn5uHtDTDRai4-Lc=xzVy0dg@mail.gmail.com>

Ah, I see. Thanks for the feedback!

On Mon, Jan 21, 2013 at 11:50 AM, Drew <xoodrew at gmail.com> wrote:

> I always viewed it as saving on a foreach by returning the ids as indexes,
> plus there's less chance of running into undefined offsets.
>
> Drew
> On Jan 21, 2013 9:47 AM, "William Satterwhite" <whsatterwhite at gmail.com>
> wrote:
>
> > I've never noticed this until now, but get_the_terms() uses the found
> > term's id as the index key in the returned array. Is this intended? I was
> > expecting the array keys to start at 0 and increment as associated terms
> > for a post were found. Not a big deal since you can use array_values();
> to
> > reset the index starting at 0.
> >
> > V/r,
> > --
> > Hunter Satterwhite
> > http://linkedin.com/in/hsatterwhite
> > (252) 762-5177
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Hunter Satterwhite
http://linkedin.com/in/hsatterwhite
(252) 762-5177

From almog.baku at gmail.com  Tue Jan 22 01:24:46 2013
From: almog.baku at gmail.com (Almog Baku)
Date: Tue, 22 Jan 2013 03:24:46 +0200
Subject: [wp-hackers] Removing edit theme files features
In-Reply-To: <CAPdLKqeNchXocYfxXs1W9ks-rVvRUnviigciDudHfrpaeBsWEg@mail.gmail.com>
References: <CAHWgyKHPLoHTDSuGon+qd1OBkVN63osmMqiasB8SnPV5Um+NdQ@mail.gmail.com>
	<CAPdLKqeNchXocYfxXs1W9ks-rVvRUnviigciDudHfrpaeBsWEg@mail.gmail.com>
Message-ID: <CALncZpS=D8DvofS8E79ndzXHM=8mRB=owDGk=Cpep1tW=Q0cMw@mail.gmail.com>

I think its not our job to do version control for code.

There is two options by my point of view:
1. Improve the editor and making him much professional: code highlighting,
password required, demanding ftp(?) access and much more..(not building SVN
implementing over PHP! its ridiculous!)
2. Disabling by default with option to enable it within the configuration +
installation- so people who enable it will know the quintessences of this
feature.

BUT- both of this version ignoring the "unprofessional" aspects.. which I
see you doesn't count them, and improve the claim that wordpress is cms for
poor(btw, I saw that in israel the common wordpress client doesn't want to
pay as my expectations..not as drupal clients who actually realize that
quality is require money. actually all the drupal developers rate double or
triple than wordpress jobs)

~ Almog


On Fri, Jan 18, 2013 at 4:14 PM, Chip Bennett <chip at chipbennett.net> wrote:

> Count me in the camp that believes the admin file editor is Plugin
> Territory, but I accept that the decision has been made.
>
> IMHO, if it is to be retained, and intended to be used by people
> uncomfortable with using an FTP client, then it darn well had better be
> made a lot more fail-safe (and useful, for that matter). Otherwise, we're
> giving people a firehose without ever teaching them how to use a household
> fire extinguisher.
>
> Preventing 500 errors should be the #1 priority. Whether that means
> sandboxing, saving file revisions, or whatever; the biggest risk is that
> someone will copy/paste or fat-finger a syntax error, and hose their site
> completely.
>
> After that, the rest of the features are nice-to-have. The top of my list
> would be line numbers and tab-spacing, followed by syntax highlighting.
>
>
> On Fri, Jan 18, 2013 at 8:53 AM, Adam Silverstein <hosting at earthbound.com
> >wrote:
>
> > i like the idea of a preview of changes that doesn't take effect without
> > user confirmation. keep that on the list!
> >
> >
> > On Fri, Jan 18, 2013 at 5:00 AM, <
> wp-hackers-request at lists.automattic.com
> > >wrote:
> >
> > > Send wp-hackers mailing list submissions to
> > >         wp-hackers at lists.automattic.com
> > >
> > > To subscribe or unsubscribe via the World Wide Web, visit
> > >         http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > or, via email, send a message with subject or body 'help' to
> > >         wp-hackers-request at lists.automattic.com
> > >
> > > You can reach the person managing the list at
> > >         wp-hackers-owner at lists.automattic.com
> > >
> > > When replying, please edit your Subject line so it is more specific
> > > than "Re: Contents of wp-hackers digest..."
> > >
> > >
> > > Today's Topics:
> > >
> > >    1. Re: Removing edit theme files features (Simon Weil)
> > >
> > >
> > > ----------------------------------------------------------------------
> > >
> > > Message: 1
> > > Date: Fri, 18 Jan 2013 09:48:33 +0200
> > > From: Simon Weil <simon.weil at naturalint.com>
> > > Subject: Re: [wp-hackers] Removing edit theme files features
> > > To: wp-hackers at lists.automattic.com
> > > Message-ID:
> > >         <
> > > CADxdhefv7hrr05vHvsarxuMFdCb57c_WzP4PrsyrzV-KmfEfug at mail.gmail.com>
> > > Content-Type: text/plain; charset=ISO-8859-1
> > >
> > > I enjoying the conversation, many good points have come up.
> > >
> > > The editing on the back end is both useful and dangerus therefore I
> must
> > > agree with Otto about enhancing the editor rather than disabling it.
> > >
> > > For locking the edit option I personally use for all my sites Better WP
> > > Security that adds/removes the constant from the config.php.
> > >
> > > I think the following summarizes the discussed enhancments:
> > > 1. Code high lighting
> > > 2. Syntax checker
> > > 3. Sandbox of some kind
> > > 4. Basic revision control
> > >
> > > Manybe Wpide and 'advanced code editor' by bainternet can be some
> > starting
> > > point for a better built-in editor.
> > >
> > > Simon
> > > On Thu, Jan 17, 2013 at 4:49 PM, Bryan Petty <bryan at ibaku.net> wrote:
> > > > On Thu, Jan 17, 2013 at 1:04 PM, Otto <otto at ottodestruct.com> wrote:
> > > >> Good point. Maybe it should save revisions of the files when you use
> > > >> the editor too.
> > > >
> > > > I'll remember you said that the next time you say programmers don't
> > > > need version control.
> > >
> > > I've never said programmers don't need version control, but thanks for
> > > playing regardless.
> > >
> > > -Otto
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > >
> > > ------------------------------
> > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > >
> > > End of wp-hackers Digest, Vol 96, Issue 23
> > > ******************************************
> > >
> >
> >
> >
> > --
> > Adam Silverstein
> > Website Development & Hosting
> > Earthbound.com * 970.872.4421 * 800.399.4085
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From danielx386 at gmail.com  Tue Jan 22 03:12:30 2013
From: danielx386 at gmail.com (Daniel Fenn)
Date: Tue, 22 Jan 2013 14:12:30 +1100
Subject: [wp-hackers] Enhancement for paginate_links();
	to include in wordpress core
Message-ID: <CAJ5Hi2hQ43q9A4-63=q_GQn_pags+2yHnop-1oMyEVaVdTwbOQ@mail.gmail.com>

Hello all,

I asked a question over at theme-reviewers [1] and one of the answers
(and a helpful one) was that any improvement/s that I find could be
push back into the core.

The first thing that I would like to see is a "Page x of x" and make
it a link to that people can click on it and enter the page munber
that they want to go to then they can go stright to that page.

Now I did find some code to do it but for some reasons I don't feel
that it the right way of doing it[2].

The next thing that I'm looking at is if we can have it so that we can
set our own style class or even replace tags altogether. Right now the
only way that I can do this (as far as I know) is by editing core code
or copy and paste code from care into my function.php file and rename
things.

I see that with the sidebar callback, I can set before and after tags
for title and other things and that to the theme author gives us alot
of control over layout and how we can style things.

The reasons why the above improvements should be included in core:

A: No need to create custom functions
B: Don't need to install extra plugin just to get the "Page x of x"
function or to create a hacked paginate_links function.
C: It gives theme developers more control over style without alot of
extra coding and if they don't want something they can disable it
(example "Page x of x")
D: It means that if wordpress devs change the paginate_links function
theme authors don't need to update their custom functions [see A]

Regards,
Daniel Fenn

[1] http://lists.wordpress.org/pipermail/theme-reviewers/2013-January/011488.html
[2] http://design.sparklette.net/teaches/how-to-add-wordpress-pagination-without-a-plugin/

From danielx386 at gmail.com  Tue Jan 22 03:28:23 2013
From: danielx386 at gmail.com (Daniel Fenn)
Date: Tue, 22 Jan 2013 14:28:23 +1100
Subject: [wp-hackers] Quick install type system for wordpress?
In-Reply-To: <50FB8A09.5020303@iandunn.name>
References: <CAJ5Hi2gsWv-kXYgqw6HkO8f_Fe3RTMQeEbuVWF_dAnFJjz3neA@mail.gmail.com>
	<000301cdf5fd$9519a7f0$bf4cf7d0$@lod.com>
	<50FB8A09.5020303@iandunn.name>
Message-ID: <CAJ5Hi2hyJhBZv605KO19RY_57E3Dc=_K9kX+=epFOvVaiFOf-A@mail.gmail.com>

Hi guys,

Thankyou for the links, and yes I forgotten about that theme unit test
data, that would work well :)

Regards,
Daniel Fenn






On Sun, Jan 20, 2013 at 5:09 PM, Ian Dunn <ian at iandunn.name> wrote:
> There's some sample data you can import at
> http://codex.wordpress.org/Theme_Unit_Test
>
>
>
> On 1/18/2013 8:29 PM, chris mccoy wrote:
>>
>> This might help you do that.
>>
>> http://wordpress.org/extend/plugins/duplicator/
>>
>>
>> -----Original Message-----
>> From: wp-hackers-bounces at lists.automattic.com
>> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Daniel Fenn
>> Sent: January 18, 2013 9:50 PM
>> To: wp-hackers
>> Subject: [wp-hackers] Quick install type system for wordpress?
>>
>> Hello all,
>>
>> Just a question, with phpbb we got a system called quickinstall[1] and I
>> find it handy to have since I can use it to setup a phpbb board that has x
>> amount of users etc for people who wirte mods and such.
>>
>> Does anyone know if there anything like this for wordpress? I would love
>> to
>> be able to generate say 20 posts with say 30 - 50 comments in each one for
>> testing code that I'm working on
>>
>> Thankyou :)
>>
>> [1] https://www.phpbb.com/mods/quickinstall/
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From dino at duechiacchiere.it  Tue Jan 22 13:17:26 2013
From: dino at duechiacchiere.it (Dino Termini)
Date: Tue, 22 Jan 2013 08:17:26 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
Message-ID: <50FE9166.6030002@duechiacchiere.it>

Good morning, all,

for a plugin I'm working on, I need to user some WordPress functions in 
an external file. I'm loading it with the usual wp-load.php include, but 
apparently some plugins don't like that, and throw a fatal error, 
breaking my code. Thanks to St. Google, I found out that there's a 
constant that can be used to tell Wordpress to not load any plugins:

define('WP_INSTALLING', true);

Now my question to core developers is if this approach is correct and if 
I can rely on it for the foreseeable future. Otherwise, my question 
becomes: what is the best way to load just the CORE without all the 
stuff added by plugins and themes?

Thank you,
Dino

From dyordan1 at ramapo.edu  Tue Jan 22 14:07:43 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Tue, 22 Jan 2013 09:07:43 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <50FE9166.6030002@duechiacchiere.it>
References: <50FE9166.6030002@duechiacchiere.it>
Message-ID: <34B39B1C-993B-478F-9E69-561056D4E01F@ramapo.edu>

Hey Dino,

I'm pretty sure that the solution you came up with (assuming it works now) will be pretty stable for the "foreseeable future". However, I'll be the first one to say, you're probably doing it wrong if you need to run just core. Or, for that matter, one of the other plugins installed is doing it wrong. Wordpress plugins (and themes) are meant to work together in unison, not shut down each other. I'd first try to disable (through /wp-admin/) some of the plugins that you suspect might be breaking your code and if it's just one - you've got your culprit, take it from there. If it's more than one, chances are your code is acting weird. Download some plugins that have functionality similar to the one you're aiming for and see how they coded it in, maybe you're missing something? No harsh feelings, just trying to go for the cleanest approach, right? Cheers!

On Tue, 22 Jan 2013, at 8:17 AM, Dino Termini wrote:

> Good morning, all,
> 
> for a plugin I'm working on, I need to user some WordPress functions in an external file. I'm loading it with the usual wp-load.php include, but apparently some plugins don't like that, and throw a fatal error, breaking my code. Thanks to St. Google, I found out that there's a constant that can be used to tell Wordpress to not load any plugins:
> 
> define('WP_INSTALLING', true);
> 
> Now my question to core developers is if this approach is correct and if I can rely on it for the foreseeable future. Otherwise, my question becomes: what is the best way to load just the CORE without all the stuff added by plugins and themes?
> 
> Thank you,
> Dino
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

~Dobri


From dino at duechiacchiere.it  Tue Jan 22 14:15:10 2013
From: dino at duechiacchiere.it (Dino Termini)
Date: Tue, 22 Jan 2013 09:15:10 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <34B39B1C-993B-478F-9E69-561056D4E01F@ramapo.edu>
References: <50FE9166.6030002@duechiacchiere.it>
	<34B39B1C-993B-478F-9E69-561056D4E01F@ramapo.edu>
Message-ID: <50FE9EEE.5050202@duechiacchiere.it>

Dobri,

just to clarify, I agree with you 100%. Unfortunately once I loaded 
WordPress that way, I started getting a bunch of fatal errors from 
plugins assuming who knows what. FeedWordpress was one of them, but the 
list could go on. Since I can't expect that every plugin or theme out 
there does things the right way, and given that I only need to access 
core functionality, my temporary workaround is to simply disable 
everything and take care of my "business".

But I'm always open to hear from the community if a cleaner approach is 
possible, so feel free to chime in.

Thanks,
Dino.

On 1/22/2013 9:07 AM, Dobri wrote:
> Hey Dino,
>
> I'm pretty sure that the solution you came up with (assuming it works now) will be pretty stable for the "foreseeable future". However, I'll be the first one to say, you're probably doing it wrong if you need to run just core. Or, for that matter, one of the other plugins installed is doing it wrong. Wordpress plugins (and themes) are meant to work together in unison, not shut down each other. I'd first try to disable (through /wp-admin/) some of the plugins that you suspect might be breaking your code and if it's just one - you've got your culprit, take it from there. If it's more than one, chances are your code is acting weird. Download some plugins that have functionality similar to the one you're aiming for and see how they coded it in, maybe you're missing something? No harsh feelings, just trying to go for the cleanest approach, right? Cheers!
>
> On Tue, 22 Jan 2013, at 8:17 AM, Dino Termini wrote:
>
>> Good morning, all,
>>
>> for a plugin I'm working on, I need to user some WordPress functions in an external file. I'm loading it with the usual wp-load.php include, but apparently some plugins don't like that, and throw a fatal error, breaking my code. Thanks to St. Google, I found out that there's a constant that can be used to tell Wordpress to not load any plugins:
>>
>> define('WP_INSTALLING', true);
>>
>> Now my question to core developers is if this approach is correct and if I can rely on it for the foreseeable future. Otherwise, my question becomes: what is the best way to load just the CORE without all the stuff added by plugins and themes?
>>
>> Thank you,
>> Dino
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> ~Dobri
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From dyordan1 at ramapo.edu  Tue Jan 22 14:26:02 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Tue, 22 Jan 2013 09:26:02 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <50FE9EEE.5050202@duechiacchiere.it>
References: <50FE9166.6030002@duechiacchiere.it>
	<34B39B1C-993B-478F-9E69-561056D4E01F@ramapo.edu>
	<50FE9EEE.5050202@duechiacchiere.it>
Message-ID: <3F29D717-4B16-4A1F-B3C4-913BEEA8323C@ramapo.edu>

Dino,

All I'm saying is, at least make sure you are doing it right. If you're absolutely sure there is no way you could make your code work without disabling plugins, then by all means, go right ahead. But if there's even the slightest possibility you are doing something wrong, if I was you, I'd download some similar plugins and take a look at the code. What if more than one plugin attempts to do that shut down trick and say, just one of the two succeeds? Can you imagine how confusing something like this would be to debug for anyone but the developer(s) of those exact plugins? At least I'm glad you see my point and are not taking offense in this. Cheers!

On Tue, 22 Jan 2013, at 9:15 AM, Dino Termini wrote:

> Dobri,
> 
> just to clarify, I agree with you 100%. Unfortunately once I loaded WordPress that way, I started getting a bunch of fatal errors from plugins assuming who knows what. FeedWordpress was one of them, but the list could go on. Since I can't expect that every plugin or theme out there does things the right way, and given that I only need to access core functionality, my temporary workaround is to simply disable everything and take care of my "business".
> 
> But I'm always open to hear from the community if a cleaner approach is possible, so feel free to chime in.
> 
> Thanks,
> Dino.
> 
> On 1/22/2013 9:07 AM, Dobri wrote:
>> Hey Dino,
>> 
>> I'm pretty sure that the solution you came up with (assuming it works now) will be pretty stable for the "foreseeable future". However, I'll be the first one to say, you're probably doing it wrong if you need to run just core. Or, for that matter, one of the other plugins installed is doing it wrong. Wordpress plugins (and themes) are meant to work together in unison, not shut down each other. I'd first try to disable (through /wp-admin/) some of the plugins that you suspect might be breaking your code and if it's just one - you've got your culprit, take it from there. If it's more than one, chances are your code is acting weird. Download some plugins that have functionality similar to the one you're aiming for and see how they coded it in, maybe you're missing something? No harsh feelings, just trying to go for the cleanest approach, right? Cheers!
>> 
>> On Tue, 22 Jan 2013, at 8:17 AM, Dino Termini wrote:
>> 
>>> Good morning, all,
>>> 
>>> for a plugin I'm working on, I need to user some WordPress functions in an external file. I'm loading it with the usual wp-load.php include, but apparently some plugins don't like that, and throw a fatal error, breaking my code. Thanks to St. Google, I found out that there's a constant that can be used to tell Wordpress to not load any plugins:
>>> 
>>> define('WP_INSTALLING', true);
>>> 
>>> Now my question to core developers is if this approach is correct and if I can rely on it for the foreseeable future. Otherwise, my question becomes: what is the best way to load just the CORE without all the stuff added by plugins and themes?
>>> 
>>> Thank you,
>>> Dino
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> ~Dobri
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

~Dobri


From dino at duechiacchiere.it  Tue Jan 22 14:38:59 2013
From: dino at duechiacchiere.it (Dino Termini)
Date: Tue, 22 Jan 2013 09:38:59 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <3F29D717-4B16-4A1F-B3C4-913BEEA8323C@ramapo.edu>
References: <50FE9166.6030002@duechiacchiere.it>
	<34B39B1C-993B-478F-9E69-561056D4E01F@ramapo.edu>
	<50FE9EEE.5050202@duechiacchiere.it>
	<3F29D717-4B16-4A1F-B3C4-913BEEA8323C@ramapo.edu>
Message-ID: <50FEA483.4030206@duechiacchiere.it>

Thank you, Dobri,

it looks like I was doing something wrong, after all. I was doing the 
whole wp-load business inside a function, thus jacking up the scope of 
most WP objects, which are assumed to be global (who knew!). Like 
explained here

http://stackoverflow.com/questions/751976/php-global-include

I'm rewriting my code to move the include somewhere else, we'll see how 
it goes! So no offense at all in making your point. Actually thank you 
for pointing me in the right direction!

Cheers,
Dino.

On 1/22/2013 9:26 AM, Dobri wrote:
> Dino,
>
> All I'm saying is, at least make sure you are doing it right. If you're absolutely sure there is no way you could make your code work without disabling plugins, then by all means, go right ahead. But if there's even the slightest possibility you are doing something wrong, if I was you, I'd download some similar plugins and take a look at the code. What if more than one plugin attempts to do that shut down trick and say, just one of the two succeeds? Can you imagine how confusing something like this would be to debug for anyone but the developer(s) of those exact plugins? At least I'm glad you see my point and are not taking offense in this. Cheers!
>
> On Tue, 22 Jan 2013, at 9:15 AM, Dino Termini wrote:
>
>> Dobri,
>>
>> just to clarify, I agree with you 100%. Unfortunately once I loaded WordPress that way, I started getting a bunch of fatal errors from plugins assuming who knows what. FeedWordpress was one of them, but the list could go on. Since I can't expect that every plugin or theme out there does things the right way, and given that I only need to access core functionality, my temporary workaround is to simply disable everything and take care of my "business".
>>
>> But I'm always open to hear from the community if a cleaner approach is possible, so feel free to chime in.
>>
>> Thanks,
>> Dino.
>>
>> On 1/22/2013 9:07 AM, Dobri wrote:
>>> Hey Dino,
>>>
>>> I'm pretty sure that the solution you came up with (assuming it works now) will be pretty stable for the "foreseeable future". However, I'll be the first one to say, you're probably doing it wrong if you need to run just core. Or, for that matter, one of the other plugins installed is doing it wrong. Wordpress plugins (and themes) are meant to work together in unison, not shut down each other. I'd first try to disable (through /wp-admin/) some of the plugins that you suspect might be breaking your code and if it's just one - you've got your culprit, take it from there. If it's more than one, chances are your code is acting weird. Download some plugins that have functionality similar to the one you're aiming for and see how they coded it in, maybe you're missing something? No harsh feelings, just trying to go for the cleanest approach, right? Cheers!
>>>
>>> On Tue, 22 Jan 2013, at 8:17 AM, Dino Termini wrote:
>>>
>>>> Good morning, all,
>>>>
>>>> for a plugin I'm working on, I need to user some WordPress functions in an external file. I'm loading it with the usual wp-load.php include, but apparently some plugins don't like that, and throw a fatal error, breaking my code. Thanks to St. Google, I found out that there's a constant that can be used to tell Wordpress to not load any plugins:
>>>>
>>>> define('WP_INSTALLING', true);
>>>>
>>>> Now my question to core developers is if this approach is correct and if I can rely on it for the foreseeable future. Otherwise, my question becomes: what is the best way to load just the CORE without all the stuff added by plugins and themes?
>>>>
>>>> Thank you,
>>>> Dino
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> ~Dobri
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> ~Dobri
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From johnbillion+wp at gmail.com  Tue Jan 22 14:47:29 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Tue, 22 Jan 2013 14:47:29 +0000
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <50FE9166.6030002@duechiacchiere.it>
References: <50FE9166.6030002@duechiacchiere.it>
Message-ID: <CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>

On 22 January 2013 13:17, Dino Termini <dino at duechiacchiere.it> wrote:
> Good morning, all,
>
> for a plugin I'm working on, I need to user some WordPress functions in an
> external file. I'm loading it with the usual wp-load.php include, but
> apparently some plugins don't like that, and throw a fatal error, breaking
> my code. Thanks to St. Google, I found out that there's a constant that can
> be used to tell Wordpress to not load any plugins:
>
> define('WP_INSTALLING', true);
>
> Now my question to core developers is if this approach is correct and if I
> can rely on it for the foreseeable future. Otherwise, my question becomes:
> what is the best way to load just the CORE without all the stuff added by
> plugins and themes?

Rather than trying to solve your problem by preventing other plugins
from loading, you should instead solve it by finding the correct
method to do what it is you want to do. In other words, you should
treat the cause of your problem, not the symptoms.

Your main issue is that you're manually including wp-load.php, which
you should avoid. There are better methods. Otto has a good blog post
on the subject [1]. One thing that Otto didn't touch on is using
admin-ajax.php too, for loading resources or fulfilling requests. This
is worth looking in to.

Secondly, your post is a prime example of the XY problem [2]. You're
concentrating on your attempted solution rather than asking advice
about your actual problem. It might be worth starting another thread
detailing your actual problem, then hopefully someone can help out!

John

[1] http://ottopress.com/2010/dont-include-wp-load-please
[2] http://meta.stackoverflow.com/questions/66377/what-is-the-xy-problem

From dyordan1 at ramapo.edu  Tue Jan 22 14:47:55 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Tue, 22 Jan 2013 09:47:55 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <50FEA483.4030206@duechiacchiere.it>
References: <50FE9166.6030002@duechiacchiere.it>
	<34B39B1C-993B-478F-9E69-561056D4E01F@ramapo.edu>
	<50FE9EEE.5050202@duechiacchiere.it>
	<3F29D717-4B16-4A1F-B3C4-913BEEA8323C@ramapo.edu>
	<50FEA483.4030206@duechiacchiere.it>
Message-ID: <BAC17A31-153D-4A5D-B3B2-F0B5F6AEBB49@ramapo.edu>

Dino,

You're very welcome, I'm glad I helped! For future reference, whenever everything starts crashing down and you have to go out of your way to fix it, that's probably the time for that bulb over your head to light up and tell you something's wrong in your method and it's time for a fresh approach. Not just Wordpress, programming in general. Good luck with your plugin!

On Tue, 22 Jan 2013, at 9:38 AM, Dino Termini wrote:

> Thank you, Dobri,
> 
> it looks like I was doing something wrong, after all. I was doing the whole wp-load business inside a function, thus jacking up the scope of most WP objects, which are assumed to be global (who knew!). Like explained here
> 
> http://stackoverflow.com/questions/751976/php-global-include
> 
> I'm rewriting my code to move the include somewhere else, we'll see how it goes! So no offense at all in making your point. Actually thank you for pointing me in the right direction!
> 
> Cheers,
> Dino.
> 
> On 1/22/2013 9:26 AM, Dobri wrote:
>> Dino,
>> 
>> All I'm saying is, at least make sure you are doing it right. If you're absolutely sure there is no way you could make your code work without disabling plugins, then by all means, go right ahead. But if there's even the slightest possibility you are doing something wrong, if I was you, I'd download some similar plugins and take a look at the code. What if more than one plugin attempts to do that shut down trick and say, just one of the two succeeds? Can you imagine how confusing something like this would be to debug for anyone but the developer(s) of those exact plugins? At least I'm glad you see my point and are not taking offense in this. Cheers!
>> 
>> On Tue, 22 Jan 2013, at 9:15 AM, Dino Termini wrote:
>> 
>>> Dobri,
>>> 
>>> just to clarify, I agree with you 100%. Unfortunately once I loaded WordPress that way, I started getting a bunch of fatal errors from plugins assuming who knows what. FeedWordpress was one of them, but the list could go on. Since I can't expect that every plugin or theme out there does things the right way, and given that I only need to access core functionality, my temporary workaround is to simply disable everything and take care of my "business".
>>> 
>>> But I'm always open to hear from the community if a cleaner approach is possible, so feel free to chime in.
>>> 
>>> Thanks,
>>> Dino.
>>> 
>>> On 1/22/2013 9:07 AM, Dobri wrote:
>>>> Hey Dino,
>>>> 
>>>> I'm pretty sure that the solution you came up with (assuming it works now) will be pretty stable for the "foreseeable future". However, I'll be the first one to say, you're probably doing it wrong if you need to run just core. Or, for that matter, one of the other plugins installed is doing it wrong. Wordpress plugins (and themes) are meant to work together in unison, not shut down each other. I'd first try to disable (through /wp-admin/) some of the plugins that you suspect might be breaking your code and if it's just one - you've got your culprit, take it from there. If it's more than one, chances are your code is acting weird. Download some plugins that have functionality similar to the one you're aiming for and see how they coded it in, maybe you're missing something? No harsh feelings, just trying to go for the cleanest approach, right? Cheers!
>>>> 
>>>> On Tue, 22 Jan 2013, at 8:17 AM, Dino Termini wrote:
>>>> 
>>>>> Good morning, all,
>>>>> 
>>>>> for a plugin I'm working on, I need to user some WordPress functions in an external file. I'm loading it with the usual wp-load.php include, but apparently some plugins don't like that, and throw a fatal error, breaking my code. Thanks to St. Google, I found out that there's a constant that can be used to tell Wordpress to not load any plugins:
>>>>> 
>>>>> define('WP_INSTALLING', true);
>>>>> 
>>>>> Now my question to core developers is if this approach is correct and if I can rely on it for the foreseeable future. Otherwise, my question becomes: what is the best way to load just the CORE without all the stuff added by plugins and themes?
>>>>> 
>>>>> Thank you,
>>>>> Dino
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> ~Dobri
>>>> 
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> ~Dobri
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

~Dobri


From dino at duechiacchiere.it  Tue Jan 22 15:00:37 2013
From: dino at duechiacchiere.it (Dino Termini)
Date: Tue, 22 Jan 2013 10:00:37 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
Message-ID: <50FEA995.5040808@duechiacchiere.it>

John,

you make a very good point, indeed. Unfortunately Otto's advice doesn't 
apply to my plugin, I'm trying to do something completely different than 
what's described in that article. But it's always good to keep that in mind.

Best,
Dino.

On 1/22/2013 9:47 AM, John Blackbourn wrote:
> On 22 January 2013 13:17, Dino Termini <dino at duechiacchiere.it> wrote:
>> Good morning, all,
>>
>> for a plugin I'm working on, I need to user some WordPress functions in an
>> external file. I'm loading it with the usual wp-load.php include, but
>> apparently some plugins don't like that, and throw a fatal error, breaking
>> my code. Thanks to St. Google, I found out that there's a constant that can
>> be used to tell Wordpress to not load any plugins:
>>
>> define('WP_INSTALLING', true);
>>
>> Now my question to core developers is if this approach is correct and if I
>> can rely on it for the foreseeable future. Otherwise, my question becomes:
>> what is the best way to load just the CORE without all the stuff added by
>> plugins and themes?
> Rather than trying to solve your problem by preventing other plugins
> from loading, you should instead solve it by finding the correct
> method to do what it is you want to do. In other words, you should
> treat the cause of your problem, not the symptoms.
>
> Your main issue is that you're manually including wp-load.php, which
> you should avoid. There are better methods. Otto has a good blog post
> on the subject [1]. One thing that Otto didn't touch on is using
> admin-ajax.php too, for loading resources or fulfilling requests. This
> is worth looking in to.
>
> Secondly, your post is a prime example of the XY problem [2]. You're
> concentrating on your attempted solution rather than asking advice
> about your actual problem. It might be worth starting another thread
> detailing your actual problem, then hopefully someone can help out!
>
> John
>
> [1] http://ottopress.com/2010/dont-include-wp-load-please
> [2] http://meta.stackoverflow.com/questions/66377/what-is-the-xy-problem
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mail at carsten-bach.de  Tue Jan 22 15:57:48 2013
From: mail at carsten-bach.de (Carsten Bach)
Date: Tue, 22 Jan 2013 16:57:48 +0100
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <50FE9166.6030002@duechiacchiere.it>
References: <50FE9166.6030002@duechiacchiere.it>
Message-ID: <50FEB6FC.9000208@carsten-bach.de>

Hello Dino,

I'm not sure if WP_INSTALLING is the right way to go, but I'd have a 
look into the SHORTINIT constant for your reason.

By defining SHORTINIT you'll force a short-init with only core WP, not 
the entire framework stack.

Have a look at http://wpengineer.com/2449/load-minimum-of-wordpress/ for 
some short explanation or 
http://wordpress.org/support/topic/load-wp-core-in-another-framework-shortinit-wp_query 
for an example of an external App using the WP core.

Good luck
Carsten

Am 22.01.2013 14:17, schrieb Dino Termini:
> Good morning, all,
>
> for a plugin I'm working on, I need to user some WordPress functions in
> an external file. I'm loading it with the usual wp-load.php include, but
> apparently some plugins don't like that, and throw a fatal error,
> breaking my code. Thanks to St. Google, I found out that there's a
> constant that can be used to tell Wordpress to not load any plugins:
>
> define('WP_INSTALLING', true);
>
> Now my question to core developers is if this approach is correct and if
> I can rely on it for the foreseeable future. Otherwise, my question
> becomes: what is the best way to load just the CORE without all the
> stuff added by plugins and themes?
>
> Thank you,
> Dino
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

-- 
Carsten Bach
Mediengestaltung

Amstetter Stra?e 24
70329 Stuttgart

Telefon       0711 / 933 24 912
Mobil         0173 / 83 66 858
Fax           0711 / 933 24 651

mail at carsten-bach.de

From otto at ottodestruct.com  Tue Jan 22 16:25:34 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 22 Jan 2013 10:25:34 -0600
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <50FEA995.5040808@duechiacchiere.it>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
	<50FEA995.5040808@duechiacchiere.it>
Message-ID: <CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>

On Tue, Jan 22, 2013 at 9:00 AM, Dino Termini <dino at duechiacchiere.it> wrote:
> John,
>
> you make a very good point, indeed. Unfortunately Otto's advice doesn't
> apply to my plugin, I'm trying to do something completely different than
> what's described in that article. But it's always good to keep that in mind.
>
> Best,
> Dino.

Hi!

My advice in that article applies across the board, to all plugins.

If you are a WordPress plugin, and you ever try to include the
wp-load.php file directly, then you have messed up somewhere, somehow.
There is no valid case for ever having to do this.

If you are a piece of code that is not running as a WordPress plugin,
or something that is entirely separate and simply accessing the WP
database, then there is a valid case to include wp-load.php.

-Otto

From dino at duechiacchiere.it  Tue Jan 22 17:07:04 2013
From: dino at duechiacchiere.it (Dino Termini)
Date: Tue, 22 Jan 2013 12:07:04 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
	<50FEA995.5040808@duechiacchiere.it>
	<CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>
Message-ID: <50FEC738.2000608@duechiacchiere.it>

Hi Otto,

you are correct, I didn't elaborate enough on what I'm trying to do, and 
I understand the confusion. My plugin includes a file that is called via 
Ajax, and performs some basic tasks depending on the data it receives. 
For most tasks I don't need to load WP, as I can take care of that 
directly, thus avoiding to increase the load on people's servers (like 
your post says). In some specific cases, I need WP, and that's when I 
load it. My 'mistake' was to do the include inside the method, this 
messing up the scope of WP's variables. It's fixed now.

Thank you,
Dino.

On 1/22/2013 11:25 AM, Otto wrote:
> On Tue, Jan 22, 2013 at 9:00 AM, Dino Termini <dino at duechiacchiere.it> wrote:
>> John,
>>
>> you make a very good point, indeed. Unfortunately Otto's advice doesn't
>> apply to my plugin, I'm trying to do something completely different than
>> what's described in that article. But it's always good to keep that in mind.
>>
>> Best,
>> Dino.
> Hi!
>
> My advice in that article applies across the board, to all plugins.
>
> If you are a WordPress plugin, and you ever try to include the
> wp-load.php file directly, then you have messed up somewhere, somehow.
> There is no valid case for ever having to do this.
>
> If you are a piece of code that is not running as a WordPress plugin,
> or something that is entirely separate and simply accessing the WP
> database, then there is a valid case to include wp-load.php.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp at andrewnacin.com  Tue Jan 22 17:29:18 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 22 Jan 2013 12:29:18 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <50FEC738.2000608@duechiacchiere.it>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
	<50FEA995.5040808@duechiacchiere.it>
	<CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>
	<50FEC738.2000608@duechiacchiere.it>
Message-ID: <CAP29PvhFuECDHvJDfVFOMFWdVP15AAmV2Aem+Qw6mp7_Gyw9kQ@mail.gmail.com>

On Tue, Jan 22, 2013 at 12:07 PM, Dino Termini <dino at duechiacchiere.it>wrote:

> you are correct, I didn't elaborate enough on what I'm trying to do, and I
> understand the confusion. My plugin includes a file that is called via
> Ajax, and performs some basic tasks depending on the data it receives. For
> most tasks I don't need to load WP, as I can take care of that directly,
> thus avoiding to increase the load on people's servers (like your post
> says). In some specific cases, I need WP, and that's when I load it. My
> 'mistake' was to do the include inside the method, this messing up the
> scope of WP's variables. It's fixed now.
>

I would avoid this. Here's but five reasons why:

1) I doubt it will be very clean to structure this file in such a way that
you are able to globally including wp-load.php, and still benefit from
having all of your Ajax handlers (those that need WP and those that do not)
in one place. Wouldn't separating the two make more sense?

2) If you don't need to load WP, do you even need PHP? Is JavaScript
sufficient for processing your data? Just curious.

3) I would generally discourage directly accessing a plugin's PHP files via
HTTP. One security measure sometimes deployed is to blacklist such files
from external access. A plugin following core WP's architecture for Ajax
requests will be unaffected.

4) WordPress core's Ajax handler prevents aggressive browser caching,
blocks UTF-7 and content type sniffing vulnerabilities, side-steps robot
crawling, allows cross-domain usage, lets other plugins interface with your
plugin, and enables you to properly identify both authorization (access
bypass vulnerabilities) and intention (cross-site request forgeries) using
core API. Is your self-built Ajax handler equipped for any of these?

5) If for some reason you do this, how are you actually locating
wp-load.php? That's one of the most fundamental problems here. If you start
to blindly traverse directories, you are ignoring that wp-content/plugins
can be moved to pretty much anywhere else on the filesystem without issue.
If you start doing things like ../wp-load.php, ../../wp-load.php,
../wordpress/wp-load.php, *you are doing it wrong*.

Nacin

From chris at lod.com  Tue Jan 22 18:01:35 2013
From: chris at lod.com (chris)
Date: Tue, 22 Jan 2013 13:01:35 -0500
Subject: [wp-hackers] after_theme_setup and add_shortcode
Message-ID: <000001cdf8ca$84ae9a90$8e0bcfb0$@lod.com>

Can we add_shortcode inside a function hooked to after_theme_setup and it
will remain active? Or does it have to be outside.




From otto at ottodestruct.com  Tue Jan 22 18:20:09 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 22 Jan 2013 12:20:09 -0600
Subject: [wp-hackers] after_theme_setup and add_shortcode
In-Reply-To: <000001cdf8ca$84ae9a90$8e0bcfb0$@lod.com>
References: <000001cdf8ca$84ae9a90$8e0bcfb0$@lod.com>
Message-ID: <CAD-FghwneHyb4KcLcZEKrTEE53Fii-R2psk48v6Hz=CfNCV92g@mail.gmail.com>

On Tue, Jan 22, 2013 at 12:01 PM, chris <chris at lod.com> wrote:
> Can we add_shortcode inside a function hooked to after_theme_setup and it
> will remain active? Or does it have to be outside.

You can, but there's no real reason to do so. Like add_action and
add_filter, add_shortcode works fine from the main body of the
plugin/theme code.

-Otto

From dino at duechiacchiere.it  Tue Jan 22 18:43:24 2013
From: dino at duechiacchiere.it (Dino Termini)
Date: Tue, 22 Jan 2013 13:43:24 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <CAP29PvhFuECDHvJDfVFOMFWdVP15AAmV2Aem+Qw6mp7_Gyw9kQ@mail.gmail.com>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
	<50FEA995.5040808@duechiacchiere.it>
	<CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>
	<50FEC738.2000608@duechiacchiere.it>
	<CAP29PvhFuECDHvJDfVFOMFWdVP15AAmV2Aem+Qw6mp7_Gyw9kQ@mail.gmail.com>
Message-ID: <50FEDDCC.7090608@duechiacchiere.it>

Thank you, Andrew.
> I would avoid this. Here's but five reasons why:
>
> 1) I doubt it will be very clean to structure this file in such a way that
> you are able to globally including wp-load.php, and still benefit from
> having all of your Ajax handlers (those that need WP and those that do not)
> in one place. Wouldn't separating the two make more sense?

Perhaps it would, I will look into this.

> 2) If you don't need to load WP, do you even need PHP? Is JavaScript
> sufficient for processing your data? Just curious.

That's quite a strong statement: "PHP without Wordpress is nothing!" :) 
 From my point of view, there are still a few things that PHP can do 
directly...

> 3) I would generally discourage directly accessing a plugin's PHP files via
> HTTP. One security measure sometimes deployed is to blacklist such files
> from external access. A plugin following core WP's architecture for Ajax
> requests will be unaffected.

True, but again I think that loading the whole core would be overkill 
for what I need to do in most cases (just store the data I get from Ajax 
into a table)

> 4) WordPress core's Ajax handler prevents aggressive browser caching,
> blocks UTF-7 and content type sniffing vulnerabilities, side-steps robot
> crawling, allows cross-domain usage, lets other plugins interface with your
> plugin, and enables you to properly identify both authorization (access
> bypass vulnerabilities) and intention (cross-site request forgeries) using
> core API. Is your self-built Ajax handler equipped for any of these?

Probably not all of them...

> 5) If for some reason you do this, how are you actually locating
> wp-load.php? That's one of the most fundamental problems here. If you start
> to blindly traverse directories, you are ignoring that wp-content/plugins
> can be moved to pretty much anywhere else on the filesystem without issue.
> If you start doing things like ../wp-load.php, ../../wp-load.php,
> ../wordpress/wp-load.php, *you are doing it wrong*.

Users with weird configurations will create a 'config file' in 
wp-content which points to the right location. For what I understand, 
the relative position of /plugins/ and /wp-content/ never changes (the 
former always being inside the latter, that is). Looking for my 'config 
file' (and then searching in the usual places, if I can't find it) is 
quite straightforward.

I'm glad I sent my initial message, I'm getting a lot of good feedback.

Thank you.
Dino

From otto at ottodestruct.com  Tue Jan 22 18:53:42 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 22 Jan 2013 12:53:42 -0600
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <50FEDDCC.7090608@duechiacchiere.it>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
	<50FEA995.5040808@duechiacchiere.it>
	<CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>
	<50FEC738.2000608@duechiacchiere.it>
	<CAP29PvhFuECDHvJDfVFOMFWdVP15AAmV2Aem+Qw6mp7_Gyw9kQ@mail.gmail.com>
	<50FEDDCC.7090608@duechiacchiere.it>
Message-ID: <CAD-FghwHCocmq6dNLJQgRoDRddjiK4dXiBnO58CFf04iZ+OScg@mail.gmail.com>

On Tue, Jan 22, 2013 at 12:43 PM, Dino Termini <dino at duechiacchiere.it> wrote:
> Users with weird configurations will create a 'config file' in wp-content
> which points to the right location. For what I understand, the relative
> position of /plugins/ and /wp-content/ never changes (the former always
> being inside the latter, that is). Looking for my 'config file' (and then
> searching in the usual places, if I can't find it) is quite straightforward.

That's asking a heck of a lot. Usually systems that have the main
content directory elsewhere will also have a problem with modifying
anything inside the original wp-content.

For example, I have a site where the main content directory is in
/public_html/special-content/. The WordPress install itself is in
/public_html/wp/, and it's a straight SVN checkout, with no
alterations whatsoever. Nothing in that directory is different from
the main WordPress SVN, and I am not willing to change files in that
directory. The whole point of doing it this way was to allow that /wp/
directory to be unalterable.

Note that there is no "wp-content" directory that the site accesses in
this case. The content directory has been renamed to
"special-content". You cannot assume naming or directory structure,
realistically. I would not consider this to be a "weird" configuration
at all, WordPress specifically allows for it.

-Otto

From wp at andrewnacin.com  Tue Jan 22 18:58:04 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 22 Jan 2013 13:58:04 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <50FEDDCC.7090608@duechiacchiere.it>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
	<50FEA995.5040808@duechiacchiere.it>
	<CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>
	<50FEC738.2000608@duechiacchiere.it>
	<CAP29PvhFuECDHvJDfVFOMFWdVP15AAmV2Aem+Qw6mp7_Gyw9kQ@mail.gmail.com>
	<50FEDDCC.7090608@duechiacchiere.it>
Message-ID: <CAP29Pvj9+L5RR97SA6sNmHMzbsDPnZAp5h_sb9f9bC2xvUqdeg@mail.gmail.com>

On Tue, Jan 22, 2013 at 1:43 PM, Dino Termini <dino at duechiacchiere.it>wrote:

>  2) If you don't need to load WP, do you even need PHP? Is JavaScript
>> sufficient for processing your data? Just curious.
>>
>
> That's quite a strong statement: "PHP without Wordpress is nothing!" :)
> From my point of view, there are still a few things that PHP can do
> directly...


That wasn't my statement.

Other than a database (which you are surely using WordPress for), what
would you be doing directly that you could not do in JavaScript?

True, but again I think that loading the whole core would be overkill for
> what I need to do in most cases (just store the data I get from Ajax into a
> table)


Wait, so you're making a database connection on your own too?

Users with weird configurations will create a 'config file' in wp-content
> which points to the right location. For what I understand, the relative
> position of /plugins/ and /wp-content/ never changes (the former always
> being inside the latter, that is). Looking for my 'config file' (and then
> searching in the usual places, if I can't find it) is quite straightforward.
>

First, WordPress already has a configuration file that includes the ability
to specify custom directory structures, and you get all of that for free
when you load WordPress. This is a wheel reinvention.

Second, none of this is a "weird" configuration. The following
configuration is fairly common. It has been included in draft
recommendations for shared hosts, and is the best setup for any serious
deployment:

wordpress/
  - wp-load.php
wp-content/
  - plugins/

Additionally, there is no requirement that "plugins" sits inside
"wp-content", or that (as illustrated above) "wp-load.php" sits two levels
up from "plugins".

What's truly straightforward is not playing guessing games.

I am not sure if you intend to distribute this plugin. But, because it is
bad practice, we're pretty much at the point where plugins are and/or
should be rejected from the wordpress.org directory for referencing
wp-load.php or wp-config.php directly.

Nacin

From dino at duechiacchiere.it  Tue Jan 22 19:01:15 2013
From: dino at duechiacchiere.it (Dino Termini)
Date: Tue, 22 Jan 2013 14:01:15 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <CAD-FghwHCocmq6dNLJQgRoDRddjiK4dXiBnO58CFf04iZ+OScg@mail.gmail.com>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
	<50FEA995.5040808@duechiacchiere.it>
	<CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>
	<50FEC738.2000608@duechiacchiere.it>
	<CAP29PvhFuECDHvJDfVFOMFWdVP15AAmV2Aem+Qw6mp7_Gyw9kQ@mail.gmail.com>
	<50FEDDCC.7090608@duechiacchiere.it>
	<CAD-FghwHCocmq6dNLJQgRoDRddjiK4dXiBnO58CFf04iZ+OScg@mail.gmail.com>
Message-ID: <50FEE1FB.8020906@duechiacchiere.it>

On 1/22/2013 1:53 PM, Otto wrote:
> Note that there is no "wp-content" directory that the site accesses in 
> this case. The content directory has been renamed to 
> "special-content". You cannot assume naming or directory structure, 
> realistically. I would not consider this to be a "weird" configuration 
> at all, WordPress specifically allows for it

I'm not assuming it, I'm using dirname(dirname(__FILE__)) to get to the 
parent folder :) And since my 'config file' is in the 'content' folder 
(I had called it wp-content in my previous message for the sake of 
simplicity), no files need to change in your main WP folder structure. 
Pretty much like 'drop ins', or whatever they are called, work.

Dino.

From dino at duechiacchiere.it  Tue Jan 22 19:26:48 2013
From: dino at duechiacchiere.it (Dino Termini)
Date: Tue, 22 Jan 2013 14:26:48 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <CAP29Pvj9+L5RR97SA6sNmHMzbsDPnZAp5h_sb9f9bC2xvUqdeg@mail.gmail.com>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
	<50FEA995.5040808@duechiacchiere.it>
	<CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>
	<50FEC738.2000608@duechiacchiere.it>
	<CAP29PvhFuECDHvJDfVFOMFWdVP15AAmV2Aem+Qw6mp7_Gyw9kQ@mail.gmail.com>
	<50FEDDCC.7090608@duechiacchiere.it>
	<CAP29Pvj9+L5RR97SA6sNmHMzbsDPnZAp5h_sb9f9bC2xvUqdeg@mail.gmail.com>
Message-ID: <50FEE7F8.7060104@duechiacchiere.it>


> What's truly straightforward is not playing guessing games. I am not 
> sure if you intend to distribute this plugin. But, because it is bad 
> practice, we're pretty much at the point where plugins are and/or 
> should be rejected from the wordpress.org directory for referencing 
> wp-load.php or wp-config.php directly. Nacin

Nacin,

I totally understand what you and Otto are saying, but then please 
answer my question: is it better to load 30Mb+ of stuff or just 
'reinvent the wheel' (i.e. build a small library that replicates some of 
the basic wpdb functionality, like prepare and query) and use just 50Kb 
of memory on the user's server? That's the only reason why I am doing 
this. If you guys think that overloading servers for the sake of 
'straightforwardness' is what a good plugin developed should do, then 
I'm more than happy to go ahead and rewrite that piece ;)

Cheers,
Dino.

From otto at ottodestruct.com  Tue Jan 22 19:38:03 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 22 Jan 2013 13:38:03 -0600
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <50FEE7F8.7060104@duechiacchiere.it>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
	<50FEA995.5040808@duechiacchiere.it>
	<CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>
	<50FEC738.2000608@duechiacchiere.it>
	<CAP29PvhFuECDHvJDfVFOMFWdVP15AAmV2Aem+Qw6mp7_Gyw9kQ@mail.gmail.com>
	<50FEDDCC.7090608@duechiacchiere.it>
	<CAP29Pvj9+L5RR97SA6sNmHMzbsDPnZAp5h_sb9f9bC2xvUqdeg@mail.gmail.com>
	<50FEE7F8.7060104@duechiacchiere.it>
Message-ID: <CAD-Fghz8NDB6stjKRQkB0=veLFJ5gCUXXoS1eJ_JTmYxGVvTTA@mail.gmail.com>

On Tue, Jan 22, 2013 at 1:26 PM, Dino Termini <dino at duechiacchiere.it> wrote:
> is it better to load 30Mb+ of stuff or just 'reinvent the wheel'
> (i.e. build a small library that replicates some of the basic wpdb
> functionality, like prepare and query) and use just 50Kb of memory on the
> user's server?


If this is a custom-one-off thing for a specific site and setup, do
what you like.

But if not, then don't assume that you know the user's server,
configuration, site layout, etc.

If this is a generic plugin meant to be used by anybody, then you have
no idea how the server is configured. One of my setups wouldn't be
pulling any extra 30M of memory, or indeed even reading WordPress's
files again from the disk. APC Opcode Caching is pretty cool.

There's nothing wrong with optimizing away performance issues, but
when you start doing so before you know what the performance issues
actually are, and letting that affect your initial design, then you're
taking the wrong approach. Premature optimization is the root of all
evil.

-Otto

From sinan at sinanisler.com  Tue Jan 22 19:51:22 2013
From: sinan at sinanisler.com (Sinan)
Date: Tue, 22 Jan 2013 21:51:22 +0200
Subject: [wp-hackers] Custom DB Table Settings
Message-ID: <CABmkrsGOgVN9CJPnxgLXQxJ=mzug=RWoO68_Ya7CX7VrL-DYoA@mail.gmail.com>

I'm writing a theme its need special settings.
one them is post per page count. As you know it is 10 but I have set this
at the beggining to 12 I write this for to do that setting


add_action( 'after_setup_theme', 'function_name' );
$wpdb->query(
"
UPDATE  `wp`.`*wpsinshop*_options`
 SET  `option_value` =  '*12*'
WHERE  `*wpsinshop*_options`.`option_id` =22;
 "
);

*wpsinshop *custom db prefix. How can I can make this setting better or
easy way? Or if this way is better how can I get db prefix for update it.
As you know some times prefix changing and if I make default wp_ prefix
this setting some times not gonna work.


Thanks.

-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From jartes at gmail.com  Tue Jan 22 19:57:55 2013
From: jartes at gmail.com (=?ISO-8859-1?Q?Joan_Art=E9s?=)
Date: Tue, 22 Jan 2013 20:57:55 +0100
Subject: [wp-hackers] Custom DB Table Settings
In-Reply-To: <CABmkrsGOgVN9CJPnxgLXQxJ=mzug=RWoO68_Ya7CX7VrL-DYoA@mail.gmail.com>
References: <CABmkrsGOgVN9CJPnxgLXQxJ=mzug=RWoO68_Ya7CX7VrL-DYoA@mail.gmail.com>
Message-ID: <CA+3xCGBQrsGfSxQEcD7zCa-_PTYDBs3z2Lbc4JncgmH-FBYe8A@mail.gmail.com>

Hi,

To change the post count I used this code:

function modify_post_per_page( $query ) {
    $query->query_vars['posts_per_page'] = 12;
    return $query;
}

add_filter( 'pre_get_posts', modify_post_per_page' );

Cheers

Joan Art?s
http://joanartes.com


2013/1/22 Sinan <sinan at sinanisler.com>

> I'm writing a theme its need special settings.
> one them is post per page count. As you know it is 10 but I have set this
> at the beggining to 12 I write this for to do that setting
>
>
> add_action( 'after_setup_theme', 'function_name' );
> $wpdb->query(
> "
> UPDATE  `wp`.`*wpsinshop*_options`
>  SET  `option_value` =  '*12*'
> WHERE  `*wpsinshop*_options`.`option_id` =22;
>  "
> );
>
> *wpsinshop *custom db prefix. How can I can make this setting better or
> easy way? Or if this way is better how can I get db prefix for update it.
> As you know some times prefix changing and if I make default wp_ prefix
> this setting some times not gonna work.
>
>
> Thanks.
>
> --
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com>
> fb.com/sinanisler
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From sinan at sinanisler.com  Tue Jan 22 20:02:21 2013
From: sinan at sinanisler.com (Sinan)
Date: Tue, 22 Jan 2013 22:02:21 +0200
Subject: [wp-hackers] Custom DB Table Settings
In-Reply-To: <CA+3xCGBQrsGfSxQEcD7zCa-_PTYDBs3z2Lbc4JncgmH-FBYe8A@mail.gmail.com>
References: <CABmkrsGOgVN9CJPnxgLXQxJ=mzug=RWoO68_Ya7CX7VrL-DYoA@mail.gmail.com>
	<CA+3xCGBQrsGfSxQEcD7zCa-_PTYDBs3z2Lbc4JncgmH-FBYe8A@mail.gmail.com>
Message-ID: <CABmkrsH2TYw-ZW6Ah4JBwCKh4eb_O2ZDMsB87wQwcxm+F7v+Ew@mail.gmail.com>

Thank you Joan Art?s


2013/1/22 Joan Art?s <jartes at gmail.com>

> Hi,
>
> To change the post count I used this code:
>
> function modify_post_per_page( $query ) {
>     $query->query_vars['posts_per_page'] = 12;
>     return $query;
> }
>
> add_filter( 'pre_get_posts', modify_post_per_page' );
>
> Cheers
>
> Joan Art?s
> http://joanartes.com
>
>
> 2013/1/22 Sinan <sinan at sinanisler.com>
>
> > I'm writing a theme its need special settings.
> > one them is post per page count. As you know it is 10 but I have set this
> > at the beggining to 12 I write this for to do that setting
> >
> >
> > add_action( 'after_setup_theme', 'function_name' );
> > $wpdb->query(
> > "
> > UPDATE  `wp`.`*wpsinshop*_options`
> >  SET  `option_value` =  '*12*'
> > WHERE  `*wpsinshop*_options`.`option_id` =22;
> >  "
> > );
> >
> > *wpsinshop *custom db prefix. How can I can make this setting better or
> > easy way? Or if this way is better how can I get db prefix for update it.
> > As you know some times prefix changing and if I make default wp_ prefix
> > this setting some times not gonna work.
> >
> >
> > Thanks.
> >
> > --
> > Sinan ??LER
> > sinanisler.com <http://www.sinanisler.com>
> > fb.com/sinanisler
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From sinan at sinanisler.com  Tue Jan 22 20:06:23 2013
From: sinan at sinanisler.com (Sinan)
Date: Tue, 22 Jan 2013 22:06:23 +0200
Subject: [wp-hackers] Custom DB Table Settings
In-Reply-To: <CABmkrsH2TYw-ZW6Ah4JBwCKh4eb_O2ZDMsB87wQwcxm+F7v+Ew@mail.gmail.com>
References: <CABmkrsGOgVN9CJPnxgLXQxJ=mzug=RWoO68_Ya7CX7VrL-DYoA@mail.gmail.com>
	<CA+3xCGBQrsGfSxQEcD7zCa-_PTYDBs3z2Lbc4JncgmH-FBYe8A@mail.gmail.com>
	<CABmkrsH2TYw-ZW6Ah4JBwCKh4eb_O2ZDMsB87wQwcxm+F7v+Ew@mail.gmail.com>
Message-ID: <CABmkrsF4rn-3odDz2auoSHD+k4RAr2h1n7e8EtbOknEF7V932A@mail.gmail.com>

Joan Art?s I realise this is not changing setting.

This is local and temporary solution for posts per page - query_posts()

But thank you for help :)


2013/1/22 Sinan <sinan at sinanisler.com>

> Thank you Joan Art?s
>
>
> 2013/1/22 Joan Art?s <jartes at gmail.com>
>
>> Hi,
>>
>> To change the post count I used this code:
>>
>> function modify_post_per_page( $query ) {
>>     $query->query_vars['posts_per_page'] = 12;
>>     return $query;
>> }
>>
>> add_filter( 'pre_get_posts', modify_post_per_page' );
>>
>> Cheers
>>
>> Joan Art?s
>> http://joanartes.com
>>
>>
>> 2013/1/22 Sinan <sinan at sinanisler.com>
>>
>> > I'm writing a theme its need special settings.
>> > one them is post per page count. As you know it is 10 but I have set
>> this
>> > at the beggining to 12 I write this for to do that setting
>> >
>> >
>> > add_action( 'after_setup_theme', 'function_name' );
>> > $wpdb->query(
>> > "
>> > UPDATE  `wp`.`*wpsinshop*_options`
>> >  SET  `option_value` =  '*12*'
>> > WHERE  `*wpsinshop*_options`.`option_id` =22;
>> >  "
>> > );
>> >
>> > *wpsinshop *custom db prefix. How can I can make this setting better or
>> > easy way? Or if this way is better how can I get db prefix for update
>> it.
>> > As you know some times prefix changing and if I make default wp_ prefix
>> > this setting some times not gonna work.
>> >
>> >
>> > Thanks.
>> >
>> > --
>> > Sinan ??LER
>> > sinanisler.com <http://www.sinanisler.com>
>> > fb.com/sinanisler
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com>
> fb.com/sinanisler
>



-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From chris at lod.com  Tue Jan 22 21:15:48 2013
From: chris at lod.com (chris)
Date: Tue, 22 Jan 2013 16:15:48 -0500
Subject: [wp-hackers] Custom DB Table Settings
In-Reply-To: <CABmkrsF4rn-3odDz2auoSHD+k4RAr2h1n7e8EtbOknEF7V932A@mail.gmail.com>
References: <CABmkrsGOgVN9CJPnxgLXQxJ=mzug=RWoO68_Ya7CX7VrL-DYoA@mail.gmail.com>
	<CA+3xCGBQrsGfSxQEcD7zCa-_PTYDBs3z2Lbc4JncgmH-FBYe8A@mail.gmail.com>
	<CABmkrsH2TYw-ZW6Ah4JBwCKh4eb_O2ZDMsB87wQwcxm+F7v+Ew@mail.gmail.com>
	<CABmkrsF4rn-3odDz2auoSHD+k4RAr2h1n7e8EtbOknEF7V932A@mail.gmail.com>
Message-ID: <000901cdf8e5$a67ecee0$f37c6ca0$@lod.com>

Why not just

update_option( 'posts_per_page', 12 );

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Sinan
Sent: January 22, 2013 3:06 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Custom DB Table Settings

Joan Art?s I realise this is not changing setting.

This is local and temporary solution for posts per page - query_posts()

But thank you for help :)


2013/1/22 Sinan <sinan at sinanisler.com>

> Thank you Joan Art?s
>
>
> 2013/1/22 Joan Art?s <jartes at gmail.com>
>
>> Hi,
>>
>> To change the post count I used this code:
>>
>> function modify_post_per_page( $query ) {
>>     $query->query_vars['posts_per_page'] = 12;
>>     return $query;
>> }
>>
>> add_filter( 'pre_get_posts', modify_post_per_page' );
>>
>> Cheers
>>
>> Joan Art?s
>> http://joanartes.com
>>
>>
>> 2013/1/22 Sinan <sinan at sinanisler.com>
>>
>> > I'm writing a theme its need special settings.
>> > one them is post per page count. As you know it is 10 but I have 
>> > set
>> this
>> > at the beggining to 12 I write this for to do that setting
>> >
>> >
>> > add_action( 'after_setup_theme', 'function_name' ); $wpdb->query( "
>> > UPDATE  `wp`.`*wpsinshop*_options`
>> >  SET  `option_value` =  '*12*'
>> > WHERE  `*wpsinshop*_options`.`option_id` =22;  "
>> > );
>> >
>> > *wpsinshop *custom db prefix. How can I can make this setting 
>> > better or easy way? Or if this way is better how can I get db 
>> > prefix for update
>> it.
>> > As you know some times prefix changing and if I make default wp_ 
>> > prefix this setting some times not gonna work.
>> >
>> >
>> > Thanks.
>> >
>> > --
>> > Sinan ??LER
>> > sinanisler.com <http://www.sinanisler.com> fb.com/sinanisler 
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com> fb.com/sinanisler
>



--
Sinan ??LER
sinanisler.com <http://www.sinanisler.com> fb.com/sinanisler _______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From sinan at sinanisler.com  Tue Jan 22 21:27:25 2013
From: sinan at sinanisler.com (Sinan)
Date: Tue, 22 Jan 2013 23:27:25 +0200
Subject: [wp-hackers] Custom DB Table Settings
In-Reply-To: <000901cdf8e5$a67ecee0$f37c6ca0$@lod.com>
References: <CABmkrsGOgVN9CJPnxgLXQxJ=mzug=RWoO68_Ya7CX7VrL-DYoA@mail.gmail.com>
	<CA+3xCGBQrsGfSxQEcD7zCa-_PTYDBs3z2Lbc4JncgmH-FBYe8A@mail.gmail.com>
	<CABmkrsH2TYw-ZW6Ah4JBwCKh4eb_O2ZDMsB87wQwcxm+F7v+Ew@mail.gmail.com>
	<CABmkrsF4rn-3odDz2auoSHD+k4RAr2h1n7e8EtbOknEF7V932A@mail.gmail.com>
	<000901cdf8e5$a67ecee0$f37c6ca0$@lod.com>
Message-ID: <CABmkrsFWEOG7qzRaohuqNAzta4N6EW2+NS32ZU3y0aTToAchBw@mail.gmail.com>

Because I was not know that. :)

Thanks.


2013/1/22 chris <chris at lod.com>

> Why not just
>
> update_option( 'posts_per_page', 12 );
>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com [mailto:
> wp-hackers-bounces at lists.automattic.com] On Behalf Of Sinan
> Sent: January 22, 2013 3:06 PM
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Custom DB Table Settings
>
> Joan Art?s I realise this is not changing setting.
>
> This is local and temporary solution for posts per page - query_posts()
>
> But thank you for help :)
>
>
> 2013/1/22 Sinan <sinan at sinanisler.com>
>
> > Thank you Joan Art?s
> >
> >
> > 2013/1/22 Joan Art?s <jartes at gmail.com>
> >
> >> Hi,
> >>
> >> To change the post count I used this code:
> >>
> >> function modify_post_per_page( $query ) {
> >>     $query->query_vars['posts_per_page'] = 12;
> >>     return $query;
> >> }
> >>
> >> add_filter( 'pre_get_posts', modify_post_per_page' );
> >>
> >> Cheers
> >>
> >> Joan Art?s
> >> http://joanartes.com
> >>
> >>
> >> 2013/1/22 Sinan <sinan at sinanisler.com>
> >>
> >> > I'm writing a theme its need special settings.
> >> > one them is post per page count. As you know it is 10 but I have
> >> > set
> >> this
> >> > at the beggining to 12 I write this for to do that setting
> >> >
> >> >
> >> > add_action( 'after_setup_theme', 'function_name' ); $wpdb->query( "
> >> > UPDATE  `wp`.`*wpsinshop*_options`
> >> >  SET  `option_value` =  '*12*'
> >> > WHERE  `*wpsinshop*_options`.`option_id` =22;  "
> >> > );
> >> >
> >> > *wpsinshop *custom db prefix. How can I can make this setting
> >> > better or easy way? Or if this way is better how can I get db
> >> > prefix for update
> >> it.
> >> > As you know some times prefix changing and if I make default wp_
> >> > prefix this setting some times not gonna work.
> >> >
> >> >
> >> > Thanks.
> >> >
> >> > --
> >> > Sinan ??LER
> >> > sinanisler.com <http://www.sinanisler.com> fb.com/sinanisler
> >> > _______________________________________________
> >> > wp-hackers mailing list
> >> > wp-hackers at lists.automattic.com
> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> >
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >
> >
> >
> > --
> > Sinan ??LER
> > sinanisler.com <http://www.sinanisler.com> fb.com/sinanisler
> >
>
>
>
> --
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com> fb.com/sinanisler_______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From mike at newclarity.net  Wed Jan 23 01:20:46 2013
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 22 Jan 2013 20:20:46 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <CAP29PvhFuECDHvJDfVFOMFWdVP15AAmV2Aem+Qw6mp7_Gyw9kQ@mail.gmail.com>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
	<50FEA995.5040808@duechiacchiere.it>
	<CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>
	<50FEC738.2000608@duechiacchiere.it>
	<CAP29PvhFuECDHvJDfVFOMFWdVP15AAmV2Aem+Qw6mp7_Gyw9kQ@mail.gmail.com>
Message-ID: <DC5F3BB7-2975-467D-8B39-F6AE800F5D5E@newclarity.net>

On Jan 22, 2013, at 12:29 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
> I would avoid this. Here's but five reasons why:...


In general, 99.9% of the time I agree with you. However there's one use-case we ran into where we had to do otherwise and I'm wondering is there is a way to do it the "right" way and still meet the UX requirement? 

We were building a Facebook-like predictive search drop-down and we ran into latency issues that the person developing it said he could only resolve the latency issues by directly loading a PHP file via AJAX and setting the SHORTINIT constant to true before including wp-load.php.  I won't name the person who wrote it but he has an extremely high reputation on WordPress Answers.

So how would you in a plugin set SHORTINIT which bypasses loading plugins and still use WordPress' core AJAX handler given that SHORTINIT is crucial to achieving reasonable latency?  I really hope there is a way to do this but looking at his code I can't currently envision what that would be.

-Mike



From dino at duechiacchiere.it  Wed Jan 23 03:22:55 2013
From: dino at duechiacchiere.it (Dino Termini)
Date: Wed, 23 Jan 2013 03:22:55 +0000
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
Message-ID: <-5167644052290062856@unknownmsgid>

Thank you, Mike,

that?s exactly the reason why I was trying to do the same thing with my
plugin.

 *From:* Mike Schinkel <mike at newclarity.net>
*Sent:* January 22, 2013 8:20 PM
*To:* wp-hackers at lists.automattic.com
*Subject:* Re: [wp-hackers] Is WP_INSTALLING constant here to stay?

On Jan 22, 2013, at 12:29 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
> I would avoid this. Here's but five reasons why:...


In general, 99.9% of the time I agree with you. However there's one
use-case we ran into where we had to do otherwise and I'm wondering is
there is a way to do it the "right" way and still meet the UX requirement?

We were building a Facebook-like predictive search drop-down and we ran
into latency issues that the person developing it said he could only
resolve the latency issues by directly loading a PHP file via AJAX and
setting the SHORTINIT constant to true before including wp-load.php.  I
won't name the person who wrote it but he has an extremely high reputation
on WordPress Answers.

So how would you in a plugin set SHORTINIT which bypasses loading plugins
and still use WordPress' core AJAX handler given that SHORTINIT is crucial
to achieving reasonable latency?  I really hope there is a way to do this
but looking at his code I can't currently envision what that would be.

-Mike


_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From otto at ottodestruct.com  Wed Jan 23 03:41:31 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 22 Jan 2013 21:41:31 -0600
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <DC5F3BB7-2975-467D-8B39-F6AE800F5D5E@newclarity.net>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
	<50FEA995.5040808@duechiacchiere.it>
	<CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>
	<50FEC738.2000608@duechiacchiere.it>
	<CAP29PvhFuECDHvJDfVFOMFWdVP15AAmV2Aem+Qw6mp7_Gyw9kQ@mail.gmail.com>
	<DC5F3BB7-2975-467D-8B39-F6AE800F5D5E@newclarity.net>
Message-ID: <CAD-FghyM26TEEOYOPfoOCoG+O3-f0hizF1Td89XBt6PdV+6YCg@mail.gmail.com>

On Tue, Jan 22, 2013 at 7:20 PM, Mike Schinkel <mike at newclarity.net> wrote:
> So how would you in a plugin set SHORTINIT

Obviously, you can't. SHORTINIT doesn't load plugins at all.

> we ran into latency issues that the person developing it said he could only resolve the latency issues by directly loading a PHP file via AJAX and setting the SHORTINIT constant to true before including wp-load.php.

Well, like I said earlier, there is a difference between custom
one-off's and things that you intend to release to the public. Without
more specific details about the situation, it's hard to state what an
alternative method might be. A "predictive search drop-down" can be
done in a lot of different ways, but presumably you're talking about a
slowness involved between the time that the text is entered and the
time that the HTTP hit returns your data from the AJAX request. That
is indeed a problem, but other ways might exist to solve that as well,
depending on circumstances. Pre-loading possible search results, for
example, to give a limited dropdown with additional ones loading in
the background, maybe. Hard to say without specifics, but generally
there are ways of rethinking the problem.

But again, if it's a custom job for a specific case, then sure,
loading wp-load directly can be fine. In a custom case, where you
control everything, you don't have to code generically.

-Otto

From mike at newclarity.net  Wed Jan 23 03:59:47 2013
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 22 Jan 2013 22:59:47 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <CAD-FghyM26TEEOYOPfoOCoG+O3-f0hizF1Td89XBt6PdV+6YCg@mail.gmail.com>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
	<50FEA995.5040808@duechiacchiere.it>
	<CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>
	<50FEC738.2000608@duechiacchiere.it>
	<CAP29PvhFuECDHvJDfVFOMFWdVP15AAmV2Aem+Qw6mp7_Gyw9kQ@mail.gmail.com>
	<DC5F3BB7-2975-467D-8B39-F6AE800F5D5E@newclarity.net>
	<CAD-FghyM26TEEOYOPfoOCoG+O3-f0hizF1Td89XBt6PdV+6YCg@mail.gmail.com>
Message-ID: <D843F811-CB7F-47AA-BFCA-7CF29666D8C2@newclarity.net>

> Well, like I said earlier, there is a difference between custom
> one-off's and things that you intend to release to the public.

What we built was custom, but it would be useful as a general purpose plugin and I would love to eventually make it one.

> presumably you're talking about a slowness involved between the time that
> the text is entered and the time that the HTTP hit returns your data from
> the AJAX request.

That's exactly the problem.  Without SHORTINIT we couldn't get it fast enough for the user to find the latency acceptable. And we agreed it was otherwise too slow.

> but other ways might exist to solve that as well,
> depending on circumstances.

I'd love to see them. I'm the last one who would say I know there are not better ways to do something but we (5 people) could not come up with a viable alternate solution. 

> Pre-loading possible search results, for example, to give a limited dropdown with
> additional ones loading in the background, maybe.

We looked at that; it didn't fit expected behavior and any other type of caching was impractical because we have no idea what the user might type.  If we had a much large development budget we might have been able to hire a search specialist to build client side code with an advance prediction algorithm but that was just beyond any reasonable scope.

> Hard to say without specifics, but generally
> there are ways of rethinking the problem.

This was a hard problem, I don't think easy solutions exist. If they do I'd love to hear them.  

-Mike



On Jan 22, 2013, at 10:41 PM, Otto <otto at ottodestruct.com> wrote:

> On Tue, Jan 22, 2013 at 7:20 PM, Mike Schinkel <mike at newclarity.net> wrote:
>> So how would you in a plugin set SHORTINIT
> 
> Obviously, you can't. SHORTINIT doesn't load plugins at all.
> 
>> we ran into latency issues that the person developing it said he could only resolve the latency issues by directly loading a PHP file via AJAX and setting the SHORTINIT constant to true before including wp-load.php.
> 
> Well, like I said earlier, there is a difference between custom
> one-off's and things that you intend to release to the public. Without
> more specific details about the situation, it's hard to state what an
> alternative method might be. A "predictive search drop-down" can be
> done in a lot of different ways, but presumably you're talking about a
> slowness involved between the time that the text is entered and the
> time that the HTTP hit returns your data from the AJAX request. That
> is indeed a problem, but other ways might exist to solve that as well,
> depending on circumstances. Pre-loading possible search results, for
> example, to give a limited dropdown with additional ones loading in
> the background, maybe. Hard to say without specifics, but generally
> there are ways of rethinking the problem.
> 
> But again, if it's a custom job for a specific case, then sure,
> loading wp-load directly can be fine. In a custom case, where you
> control everything, you don't have to code generically.
> 
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From rafaehlers at gmail.com  Thu Jan 24 02:49:46 2013
From: rafaehlers at gmail.com (Rafael Ehlers)
Date: Thu, 24 Jan 2013 00:49:46 -0200
Subject: [wp-hackers] Sanitize password input
Message-ID: <CAF_6N0PeUG7pycLqu6doDvjBUO95xeax15kTB+LoRsFYy6FUWg@mail.gmail.com>

Hi ppl,

what?s the best wp native function to sanitize a user input password for
frontend login/registration that allows alphanumeric characters with
Uppercase and Lowercase chars?

Thanks in advance!

From ian at iandunn.name  Thu Jan 24 03:43:36 2013
From: ian at iandunn.name (Ian Dunn)
Date: Wed, 23 Jan 2013 19:43:36 -0800
Subject: [wp-hackers] Sanitize password input
In-Reply-To: <CAF_6N0PeUG7pycLqu6doDvjBUO95xeax15kTB+LoRsFYy6FUWg@mail.gmail.com>
References: <CAF_6N0PeUG7pycLqu6doDvjBUO95xeax15kTB+LoRsFYy6FUWg@mail.gmail.com>
Message-ID: <5100ADE8.2020507@iandunn.name>

Are you just trying to protect against SQL injection and the like? If 
you're using wp_signon() and wp_create_user() then you shouldn't have to 
worry about it, since WP will handle it for you.


On 01/23/2013 06:49 PM, Rafael Ehlers wrote:
> Hi ppl,
>
> what?s the best wp native function to sanitize a user input password for
> frontend login/registration that allows alphanumeric characters with
> Uppercase and Lowercase chars?
>
> Thanks in advance!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Thu Jan 24 03:46:04 2013
From: otto at ottodestruct.com (Otto)
Date: Wed, 23 Jan 2013 21:46:04 -0600
Subject: [wp-hackers] Sanitize password input
In-Reply-To: <CAF_6N0PeUG7pycLqu6doDvjBUO95xeax15kTB+LoRsFYy6FUWg@mail.gmail.com>
References: <CAF_6N0PeUG7pycLqu6doDvjBUO95xeax15kTB+LoRsFYy6FUWg@mail.gmail.com>
Message-ID: <CAD-Fghz_Nz=qOv8wXcKnqPUmFhHoNz+zDKEk-Ly80paCCfZEug@mail.gmail.com>

On Wed, Jan 23, 2013 at 8:49 PM, Rafael Ehlers <rafaehlers at gmail.com> wrote:
> what?s the best wp native function to sanitize a user input password for
> frontend login/registration that allows alphanumeric characters with
> Uppercase and Lowercase chars?

I would say sanitize_user(), but that is meant for usernames.
Sanitizing passwords is not the purpose of it, nor a great idea.

-Otto

From rafaehlers at gmail.com  Thu Jan 24 03:54:00 2013
From: rafaehlers at gmail.com (Rafael Ehlers)
Date: Thu, 24 Jan 2013 01:54:00 -0200
Subject: [wp-hackers] Sanitize password input
In-Reply-To: <CAD-Fghz_Nz=qOv8wXcKnqPUmFhHoNz+zDKEk-Ly80paCCfZEug@mail.gmail.com>
References: <CAF_6N0PeUG7pycLqu6doDvjBUO95xeax15kTB+LoRsFYy6FUWg@mail.gmail.com>
	<CAD-Fghz_Nz=qOv8wXcKnqPUmFhHoNz+zDKEk-Ly80paCCfZEug@mail.gmail.com>
Message-ID: <CAF_6N0O79TnWs9v1HsXm342ZVSTyVyQ_NsUN==R1N9BNefEVmg@mail.gmail.com>

Well thanks for the answers, I will sanitize on the frontend with some
regexp then!

2013/1/24 Otto <otto at ottodestruct.com>

> On Wed, Jan 23, 2013 at 8:49 PM, Rafael Ehlers <rafaehlers at gmail.com>
> wrote:
> > what?s the best wp native function to sanitize a user input password for
> > frontend login/registration that allows alphanumeric characters with
> > Uppercase and Lowercase chars?
>
> I would say sanitize_user(), but that is meant for usernames.
> Sanitizing passwords is not the purpose of it, nor a great idea.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp at andrewnacin.com  Thu Jan 24 03:58:57 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Wed, 23 Jan 2013 22:58:57 -0500
Subject: [wp-hackers] Sanitize password input
In-Reply-To: <CAF_6N0O79TnWs9v1HsXm342ZVSTyVyQ_NsUN==R1N9BNefEVmg@mail.gmail.com>
References: <CAF_6N0PeUG7pycLqu6doDvjBUO95xeax15kTB+LoRsFYy6FUWg@mail.gmail.com>
	<CAD-Fghz_Nz=qOv8wXcKnqPUmFhHoNz+zDKEk-Ly80paCCfZEug@mail.gmail.com>
	<CAF_6N0O79TnWs9v1HsXm342ZVSTyVyQ_NsUN==R1N9BNefEVmg@mail.gmail.com>
Message-ID: <CAP29Pvite9CbeWyMQ7Tgd5g_Y17hgPqme0QdwApRKXdoPC-z5w@mail.gmail.com>

On Wed, Jan 23, 2013 at 10:54 PM, Rafael Ehlers <rafaehlers at gmail.com>wrote:

> Well thanks for the answers, I will sanitize on the frontend with some
> regexp then!
>

Why aim to limit the acceptable characters in a password? That's usually
not very nice or good.

From rafaehlers at gmail.com  Thu Jan 24 04:31:32 2013
From: rafaehlers at gmail.com (Rafael Ehlers)
Date: Thu, 24 Jan 2013 02:31:32 -0200
Subject: [wp-hackers] Sanitize password input
In-Reply-To: <CAP29Pvite9CbeWyMQ7Tgd5g_Y17hgPqme0QdwApRKXdoPC-z5w@mail.gmail.com>
References: <CAF_6N0PeUG7pycLqu6doDvjBUO95xeax15kTB+LoRsFYy6FUWg@mail.gmail.com>
	<CAD-Fghz_Nz=qOv8wXcKnqPUmFhHoNz+zDKEk-Ly80paCCfZEug@mail.gmail.com>
	<CAF_6N0O79TnWs9v1HsXm342ZVSTyVyQ_NsUN==R1N9BNefEVmg@mail.gmail.com>
	<CAP29Pvite9CbeWyMQ7Tgd5g_Y17hgPqme0QdwApRKXdoPC-z5w@mail.gmail.com>
Message-ID: <CAF_6N0Mf5Sz+V8oW4sZ1HJnWHv5oJz5hS45B5rJzasqDiB2_kQ@mail.gmail.com>

For trying to prevent errors on wp_create_user!

2013/1/24 Andrew Nacin <wp at andrewnacin.com>

> On Wed, Jan 23, 2013 at 10:54 PM, Rafael Ehlers <rafaehlers at gmail.com
> >wrote:
>
> > Well thanks for the answers, I will sanitize on the frontend with some
> > regexp then!
> >
>
> Why aim to limit the acceptable characters in a password? That's usually
> not very nice or good.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From filippo.pisano at gmail.com  Fri Jan 25 10:25:30 2013
From: filippo.pisano at gmail.com (Filippo Pisano)
Date: Fri, 25 Jan 2013 11:25:30 +0100
Subject: [wp-hackers] Extending new media uploader modal
Message-ID: <CABCyq-=meN=SrNqS4cuU5ARR1bRNoEph_5M4JJ+xs+0iPpjmWQ@mail.gmail.com>

Hi all,

where can I find some documentation about the new modal window structure?
I would like to extend the default modal window by adding a new section to
manage an image slider (its structure should be very similar to the gallery
frame).

I've seen it is built on top of backbone.js and because I have never used
it before it would be great to have a good tutorial on how WP implemented
it.

Thank you



Filippo Pisano

From frank at bueltge.de  Fri Jan 25 10:38:43 2013
From: frank at bueltge.de (Frank Bueltge)
Date: Fri, 25 Jan 2013 11:38:43 +0100
Subject: [wp-hackers] Extending new media uploader modal
In-Reply-To: <CABCyq-=meN=SrNqS4cuU5ARR1bRNoEph_5M4JJ+xs+0iPpjmWQ@mail.gmail.com>
References: <CABCyq-=meN=SrNqS4cuU5ARR1bRNoEph_5M4JJ+xs+0iPpjmWQ@mail.gmail.com>
Message-ID: <CAH9UVvG2UEFRNB59Xbkde9QJ4NXA7BtqB+6LYk9Z5iG5N9AK6Q@mail.gmail.com>

Not the best documentation, but helpful
-
http://wordpress.stackexchange.com/questions/76980/add-a-menu-item-to-wordpress-3-5-media-manager
-
http://wordpress.stackexchange.com/questions/78547/display-media-uploader-in-own-plugin-on-wordpress-3-5/

best wishes
Frank


On Fri, Jan 25, 2013 at 11:25 AM, Filippo Pisano
<filippo.pisano at gmail.com>wrote:

> Hi all,
>
> where can I find some documentation about the new modal window structure?
> I would like to extend the default modal window by adding a new section to
> manage an image slider (its structure should be very similar to the gallery
> frame).
>
> I've seen it is built on top of backbone.js and because I have never used
> it before it would be great to have a good tutorial on how WP implemented
> it.
>
> Thank you
>
>
>
> Filippo Pisano
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From simon at wpsites.co.uk  Fri Jan 25 10:49:46 2013
From: simon at wpsites.co.uk (Simon Dunton - WP Sites)
Date: Fri, 25 Jan 2013 10:49:46 +0000
Subject: [wp-hackers] Extending new media uploader modal
In-Reply-To: <CABCyq-=meN=SrNqS4cuU5ARR1bRNoEph_5M4JJ+xs+0iPpjmWQ@mail.gmail.com>
References: <CABCyq-=meN=SrNqS4cuU5ARR1bRNoEph_5M4JJ+xs+0iPpjmWQ@mail.gmail.com>
Message-ID: <C0E6DB0F-1990-4B3C-BE55-81D6E1D3E650@wpsites.co.uk>

+1 for this

I've got a plugin that I maintain that resizes images before they are uploaded to the server by hooking into Plupload and turning on the resize functionality. It doesn't really work since the new media upload system has been added to the post/page screen.

I even emailed Koop who seems responsible for most of the implementation but no reply. Maybe not the right thing to do anyway but I'm running out of options!

Actually, thinking about it the modal window part of the implementation doesn't really concern me. It's the Plupload/uploader I could do with a little more info on.

There is a pretty good blog post somewhere about interacting/extending the modal part of the media uploader but I can't remember where.

Simon


On 25 Jan 2013, at 10:25, Filippo Pisano wrote:

> Hi all,
> 
> where can I find some documentation about the new modal window structure?
> I would like to extend the default modal window by adding a new section to
> manage an image slider (its structure should be very similar to the gallery
> frame).
> 
> I've seen it is built on top of backbone.js and because I have never used
> it before it would be great to have a good tutorial on how WP implemented
> it.
> 
> Thank you
> 
> 
> 
> Filippo Pisano
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From simon at wpsites.co.uk  Fri Jan 25 10:53:16 2013
From: simon at wpsites.co.uk (Simon Dunton - WP Sites)
Date: Fri, 25 Jan 2013 10:53:16 +0000
Subject: [wp-hackers] Extending new media uploader modal
In-Reply-To: <CAH9UVvG2UEFRNB59Xbkde9QJ4NXA7BtqB+6LYk9Z5iG5N9AK6Q@mail.gmail.com>
References: <CABCyq-=meN=SrNqS4cuU5ARR1bRNoEph_5M4JJ+xs+0iPpjmWQ@mail.gmail.com>
	<CAH9UVvG2UEFRNB59Xbkde9QJ4NXA7BtqB+6LYk9Z5iG5N9AK6Q@mail.gmail.com>
Message-ID: <EA775EE3-3C9A-4CC2-AA80-59259ED4EC8A@wpsites.co.uk>

Here it is: http://mikejolley.com/2012/12/using-the-new-wordpress-3-5-media-uploader-in-plugins/

Might be useful to you.


On 25 Jan 2013, at 10:38, Frank Bueltge wrote:

> Not the best documentation, but helpful
> -
> http://wordpress.stackexchange.com/questions/76980/add-a-menu-item-to-wordpress-3-5-media-manager
> -
> http://wordpress.stackexchange.com/questions/78547/display-media-uploader-in-own-plugin-on-wordpress-3-5/
> 
> best wishes
> Frank
> 
> 
> On Fri, Jan 25, 2013 at 11:25 AM, Filippo Pisano
> <filippo.pisano at gmail.com>wrote:
> 
>> Hi all,
>> 
>> where can I find some documentation about the new modal window structure?
>> I would like to extend the default modal window by adding a new section to
>> manage an image slider (its structure should be very similar to the gallery
>> frame).
>> 
>> I've seen it is built on top of backbone.js and because I have never used
>> it before it would be great to have a good tutorial on how WP implemented
>> it.
>> 
>> Thank you
>> 
>> 
>> 
>> Filippo Pisano
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From filippo.pisano at gmail.com  Fri Jan 25 10:59:21 2013
From: filippo.pisano at gmail.com (Filippo Pisano)
Date: Fri, 25 Jan 2013 11:59:21 +0100
Subject: [wp-hackers] Extending new media uploader modal
In-Reply-To: <EA775EE3-3C9A-4CC2-AA80-59259ED4EC8A@wpsites.co.uk>
References: <CABCyq-=meN=SrNqS4cuU5ARR1bRNoEph_5M4JJ+xs+0iPpjmWQ@mail.gmail.com>
	<CAH9UVvG2UEFRNB59Xbkde9QJ4NXA7BtqB+6LYk9Z5iG5N9AK6Q@mail.gmail.com>
	<EA775EE3-3C9A-4CC2-AA80-59259ED4EC8A@wpsites.co.uk>
Message-ID: <CABCyq-=-g=+dv88mj3hHQs=wKH020QiCC7qP5Hmb071ZfoaeUA@mail.gmail.com>

Thank you!

Filippo Pisano
cel: 3291821355 / skype: filippopisano


On Fri, Jan 25, 2013 at 11:53 AM, Simon Dunton - WP Sites <
simon at wpsites.co.uk> wrote:

> Here it is:
> http://mikejolley.com/2012/12/using-the-new-wordpress-3-5-media-uploader-in-plugins/
>
> Might be useful to you.
>
>
> On 25 Jan 2013, at 10:38, Frank Bueltge wrote:
>
> > Not the best documentation, but helpful
> > -
> >
> http://wordpress.stackexchange.com/questions/76980/add-a-menu-item-to-wordpress-3-5-media-manager
> > -
> >
> http://wordpress.stackexchange.com/questions/78547/display-media-uploader-in-own-plugin-on-wordpress-3-5/
> >
> > best wishes
> > Frank
> >
> >
> > On Fri, Jan 25, 2013 at 11:25 AM, Filippo Pisano
> > <filippo.pisano at gmail.com>wrote:
> >
> >> Hi all,
> >>
> >> where can I find some documentation about the new modal window
> structure?
> >> I would like to extend the default modal window by adding a new section
> to
> >> manage an image slider (its structure should be very similar to the
> gallery
> >> frame).
> >>
> >> I've seen it is built on top of backbone.js and because I have never
> used
> >> it before it would be great to have a good tutorial on how WP
> implemented
> >> it.
> >>
> >> Thank you
> >>
> >>
> >>
> >> Filippo Pisano
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From chris at lod.com  Fri Jan 25 12:27:30 2013
From: chris at lod.com (chris)
Date: Fri, 25 Jan 2013 07:27:30 -0500
Subject: [wp-hackers] best way to implement two search templates
Message-ID: <000001cdfaf7$58159d10$0840d730$@lod.com>

I have two methods of searching on a site.

1. live search without reload

Because of this get_header(), get_sidebar() and get_footer() isn't called.

2. A modal popup with a search

So when visiting domain.com/?s=keyword it shows the results without
header,sidebar, and footer.

What would be the best way to get both of these working?




From david at wordshell.net  Fri Jan 25 16:01:24 2013
From: david at wordshell.net (David Anderson)
Date: Fri, 25 Jan 2013 16:01:24 +0000
Subject: [wp-hackers] Hooking into updates-checking functionality
Message-ID: <5102AC54.8090709@wordshell.net>

Hi,

Does anyone have any pointers for documentation about hooking into 
WordPress's checking-for-updates and performing-updates functionality? 
I've seen that various 3rd party plugins (i.e. not ones on 
wordpress.org/extend/plugins) manage to hook into this, but last time I 
looked I couldn't find any information on how to do it properly.

Thank you,
David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From dino at duechiacchiere.it  Fri Jan 25 16:03:04 2013
From: dino at duechiacchiere.it (Dino Termini)
Date: Fri, 25 Jan 2013 11:03:04 -0500
Subject: [wp-hackers] Is WP_INSTALLING constant here to stay?
In-Reply-To: <DC5F3BB7-2975-467D-8B39-F6AE800F5D5E@newclarity.net>
References: <50FE9166.6030002@duechiacchiere.it>
	<CAOqAKWAtppnJBWKOqJWyfALUsurEBVd39Zwi9j+iLrAQd58PWQ@mail.gmail.com>
	<50FEA995.5040808@duechiacchiere.it>
	<CAD-Fghyf6bs2YRhAu3c+8LisB5EQEtoEJcrvwvCadSxKTOMV1A@mail.gmail.com>
	<50FEC738.2000608@duechiacchiere.it>
	<CAP29PvhFuECDHvJDfVFOMFWdVP15AAmV2Aem+Qw6mp7_Gyw9kQ@mail.gmail.com>
	<DC5F3BB7-2975-467D-8B39-F6AE800F5D5E@newclarity.net>
Message-ID: <5102ACB8.4060104@duechiacchiere.it>

Hello, folks,

just a quick note to let you know that I ended up following your advice 
and I updated my plugin to use WP's built-in Ajax functionality. At 
least you won't kick my plugin out of the repository, especially now 
that it has been downloaded more than 300k times :) I'll release the new 
version, which includes this new 'engine', as soon as I get some 
feedback from the group of people who is testing it.

Thank you,
Dino.

On 1/22/2013 8:20 PM, Mike Schinkel wrote:
> On Jan 22, 2013, at 12:29 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
>> I would avoid this. Here's but five reasons why:...
>
> In general, 99.9% of the time I agree with you. However there's one use-case we ran into where we had to do otherwise and I'm wondering is there is a way to do it the "right" way and still meet the UX requirement?
>
> We were building a Facebook-like predictive search drop-down and we ran into latency issues that the person developing it said he could only resolve the latency issues by directly loading a PHP file via AJAX and setting the SHORTINIT constant to true before including wp-load.php.  I won't name the person who wrote it but he has an extremely high reputation on WordPress Answers.
>
> So how would you in a plugin set SHORTINIT which bypasses loading plugins and still use WordPress' core AJAX handler given that SHORTINIT is crucial to achieving reasonable latency?  I really hope there is a way to do this but looking at his code I can't currently envision what that would be.
>
> -Mike
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Fri Jan 25 16:22:28 2013
From: otto at ottodestruct.com (Otto)
Date: Fri, 25 Jan 2013 10:22:28 -0600
Subject: [wp-hackers] Hooking into updates-checking functionality
In-Reply-To: <5102AC54.8090709@wordshell.net>
References: <5102AC54.8090709@wordshell.net>
Message-ID: <CAD-Fghybqb3UJfQ2caBDJvdkmN0Af58mtY5NFyFfGOw5LcZq6g@mail.gmail.com>

https://github.com/thomasgriffin/TGM-Updater

-Otto


On Fri, Jan 25, 2013 at 10:01 AM, David Anderson <david at wordshell.net> wrote:
> Hi,
>
> Does anyone have any pointers for documentation about hooking into
> WordPress's checking-for-updates and performing-updates functionality? I've
> seen that various 3rd party plugins (i.e. not ones on
> wordpress.org/extend/plugins) manage to hook into this, but last time I
> looked I couldn't find any information on how to do it properly.
>
> Thank you,
> David
>
> --
> WordShell - WordPress fast from the CLI - www.wordshell.net
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From dailyrants at gmail.com  Fri Jan 25 16:33:17 2013
From: dailyrants at gmail.com (John)
Date: Fri, 25 Jan 2013 11:33:17 -0500
Subject: [wp-hackers] Hooking into updates-checking functionality
In-Reply-To: <5102AC54.8090709@wordshell.net>
References: <5102AC54.8090709@wordshell.net>
Message-ID: <CAPYXUfXTG_pVda8jFa2p5z_JA4ryH7_yfF=aWb6FpqPXew4g3w@mail.gmail.com>

This might be helpful for plugin updates. Note he also has a theme update
library on his website.

https://github.com/YahnisElsts/plugin-update-checker


On Fri, Jan 25, 2013 at 11:01 AM, David Anderson <david at wordshell.net>wrote:

> Hi,
>
> Does anyone have any pointers for documentation about hooking into
> WordPress's checking-for-updates and performing-updates functionality? I've
> seen that various 3rd party plugins (i.e. not ones on
> wordpress.org/extend/plugins) manage to hook into this, but last time I
> looked I couldn't find any information on how to do it properly.
>
> Thank you,
> David
>
> --
> WordShell - WordPress fast from the CLI - www.wordshell.net
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From whsatterwhite at gmail.com  Fri Jan 25 19:27:56 2013
From: whsatterwhite at gmail.com (William Satterwhite)
Date: Fri, 25 Jan 2013 14:27:56 -0500
Subject: [wp-hackers] Custom Re-write Rules
Message-ID: <CAGbA+aYQyYzwQMwwnuX0bwkXseBzC5Hqcr9Gg1LnGTwEEo6rig@mail.gmail.com>

I've been working on getting custom re-write rules working in WordPress and
I've been through the Codex as well as countless tutorials that show the
various ways that rewrite rules can be implemented. Now, I'd like to think
that I'm doing it right, but every time I visit a URL for the custom
re-write it 404's on me. I know the re-write is registered within
WordPress, because I can check rewrite_rules in wp_options and see it
specified.

The rule itself is to allow me to point to a page using an ISO formatted
date as the query_var e.g. http://site.com/by-date/YYYY-mm-dd or
http://site.com/by-date/2013-02-01. by-date being the static page that I
want to included in the custom re-rewrite. If anyone could provide some
insight on what I may be doing wrong or missing then please let me know.

Here's the pastebin of what I've written. <http://pastebin.com/NCESJF0P>

Best,
-- 
Hunter Satterwhite
http://linkedin.com/in/hsatterwhite
(252) 762-5177

From otto at ottodestruct.com  Fri Jan 25 20:31:44 2013
From: otto at ottodestruct.com (Otto)
Date: Fri, 25 Jan 2013 14:31:44 -0600
Subject: [wp-hackers] Custom Re-write Rules
In-Reply-To: <CAGbA+aYQyYzwQMwwnuX0bwkXseBzC5Hqcr9Gg1LnGTwEEo6rig@mail.gmail.com>
References: <CAGbA+aYQyYzwQMwwnuX0bwkXseBzC5Hqcr9Gg1LnGTwEEo6rig@mail.gmail.com>
Message-ID: <CAD-FghyOcnSt-WiWbW4N9re57Liszp9mM6pf746OweNsBmO6uw@mail.gmail.com>

Nothing wrong with that code.

Do you actually have a Page with a slug of "by-date"?

-Otto


On Fri, Jan 25, 2013 at 1:27 PM, William Satterwhite
<whsatterwhite at gmail.com> wrote:
> I've been working on getting custom re-write rules working in WordPress and
> I've been through the Codex as well as countless tutorials that show the
> various ways that rewrite rules can be implemented. Now, I'd like to think
> that I'm doing it right, but every time I visit a URL for the custom
> re-write it 404's on me. I know the re-write is registered within
> WordPress, because I can check rewrite_rules in wp_options and see it
> specified.
>
> The rule itself is to allow me to point to a page using an ISO formatted
> date as the query_var e.g. http://site.com/by-date/YYYY-mm-dd or
> http://site.com/by-date/2013-02-01. by-date being the static page that I
> want to included in the custom re-rewrite. If anyone could provide some
> insight on what I may be doing wrong or missing then please let me know.
>
> Here's the pastebin of what I've written. <http://pastebin.com/NCESJF0P>
>
> Best,
> --
> Hunter Satterwhite
> http://linkedin.com/in/hsatterwhite
> (252) 762-5177
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From whsatterwhite at gmail.com  Fri Jan 25 20:33:53 2013
From: whsatterwhite at gmail.com (William Satterwhite)
Date: Fri, 25 Jan 2013 15:33:53 -0500
Subject: [wp-hackers] Custom Re-write Rules
In-Reply-To: <CAD-FghyOcnSt-WiWbW4N9re57Liszp9mM6pf746OweNsBmO6uw@mail.gmail.com>
References: <CAGbA+aYQyYzwQMwwnuX0bwkXseBzC5Hqcr9Gg1LnGTwEEo6rig@mail.gmail.com>
	<CAD-FghyOcnSt-WiWbW4N9re57Liszp9mM6pf746OweNsBmO6uw@mail.gmail.com>
Message-ID: <CAGbA+aY_tBXjj7gkuscCNt7=kFNA0=QrXmQVrfpKrVo1wwmE9g@mail.gmail.com>

Thanks for taking a look at it Otto. I do in fact have a page named by-date
and I also have WP_DEBUG set to true.

On Fri, Jan 25, 2013 at 3:31 PM, Otto <otto at ottodestruct.com> wrote:

> Nothing wrong with that code.
>
> Do you actually have a Page with a slug of "by-date"?
>
> -Otto
>
>
> On Fri, Jan 25, 2013 at 1:27 PM, William Satterwhite
> <whsatterwhite at gmail.com> wrote:
> > I've been working on getting custom re-write rules working in WordPress
> and
> > I've been through the Codex as well as countless tutorials that show the
> > various ways that rewrite rules can be implemented. Now, I'd like to
> think
> > that I'm doing it right, but every time I visit a URL for the custom
> > re-write it 404's on me. I know the re-write is registered within
> > WordPress, because I can check rewrite_rules in wp_options and see it
> > specified.
> >
> > The rule itself is to allow me to point to a page using an ISO formatted
> > date as the query_var e.g. http://site.com/by-date/YYYY-mm-dd or
> > http://site.com/by-date/2013-02-01. by-date being the static page that I
> > want to included in the custom re-rewrite. If anyone could provide some
> > insight on what I may be doing wrong or missing then please let me know.
> >
> > Here's the pastebin of what I've written. <http://pastebin.com/NCESJF0P>
> >
> > Best,
> > --
> > Hunter Satterwhite
> > http://linkedin.com/in/hsatterwhite
> > (252) 762-5177
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Hunter Satterwhite
http://linkedin.com/in/hsatterwhite
(252) 762-5177

From whsatterwhite at gmail.com  Fri Jan 25 20:54:40 2013
From: whsatterwhite at gmail.com (William Satterwhite)
Date: Fri, 25 Jan 2013 15:54:40 -0500
Subject: [wp-hackers] Custom Re-write Rules
In-Reply-To: <CAGbA+aY_tBXjj7gkuscCNt7=kFNA0=QrXmQVrfpKrVo1wwmE9g@mail.gmail.com>
References: <CAGbA+aYQyYzwQMwwnuX0bwkXseBzC5Hqcr9Gg1LnGTwEEo6rig@mail.gmail.com>
	<CAD-FghyOcnSt-WiWbW4N9re57Liszp9mM6pf746OweNsBmO6uw@mail.gmail.com>
	<CAGbA+aY_tBXjj7gkuscCNt7=kFNA0=QrXmQVrfpKrVo1wwmE9g@mail.gmail.com>
Message-ID: <CAGbA+aZnA3coeXSCYeBwkbdxV6AVX9=DN90-z+wthgRpFwm_tQ@mail.gmail.com>

Something I just noticed is when run print_r( $wp_query); on what should be
the custom rewrite page I don't even see wpem_event_date set in the
query_vars array. It is actually set as the attachment query_var:

object(WP_Query)#781 (44) { ["query"]=> array(1) { ["attachment"]=>
string(10) "2013-01-25" } ["query_vars"]=> array(56) { ["attachment"]=>
string(10) "2013-01-25"

On Fri, Jan 25, 2013 at 3:33 PM, William Satterwhite <
whsatterwhite at gmail.com> wrote:

> Thanks for taking a look at it Otto. I do in fact have a page named
> by-date and I also have WP_DEBUG set to true.
>
>
> On Fri, Jan 25, 2013 at 3:31 PM, Otto <otto at ottodestruct.com> wrote:
>
>> Nothing wrong with that code.
>>
>> Do you actually have a Page with a slug of "by-date"?
>>
>> -Otto
>>
>>
>> On Fri, Jan 25, 2013 at 1:27 PM, William Satterwhite
>> <whsatterwhite at gmail.com> wrote:
>> > I've been working on getting custom re-write rules working in WordPress
>> and
>> > I've been through the Codex as well as countless tutorials that show the
>> > various ways that rewrite rules can be implemented. Now, I'd like to
>> think
>> > that I'm doing it right, but every time I visit a URL for the custom
>> > re-write it 404's on me. I know the re-write is registered within
>> > WordPress, because I can check rewrite_rules in wp_options and see it
>> > specified.
>> >
>> > The rule itself is to allow me to point to a page using an ISO formatted
>> > date as the query_var e.g. http://site.com/by-date/YYYY-mm-dd or
>> > http://site.com/by-date/2013-02-01. by-date being the static page that
>> I
>> > want to included in the custom re-rewrite. If anyone could provide some
>> > insight on what I may be doing wrong or missing then please let me know.
>> >
>> > Here's the pastebin of what I've written. <http://pastebin.com/NCESJF0P
>> >
>> >
>> > Best,
>> > --
>> > Hunter Satterwhite
>> > http://linkedin.com/in/hsatterwhite
>> > (252) 762-5177
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Hunter Satterwhite
> http://linkedin.com/in/hsatterwhite
> (252) 762-5177
>



-- 
Hunter Satterwhite
http://linkedin.com/in/hsatterwhite
(252) 762-5177

From xoodrew at gmail.com  Fri Jan 25 21:43:35 2013
From: xoodrew at gmail.com (Drew)
Date: Fri, 25 Jan 2013 14:43:35 -0700
Subject: [wp-hackers] Custom Re-write Rules
In-Reply-To: <CAGbA+aZnA3coeXSCYeBwkbdxV6AVX9=DN90-z+wthgRpFwm_tQ@mail.gmail.com>
References: <CAGbA+aYQyYzwQMwwnuX0bwkXseBzC5Hqcr9Gg1LnGTwEEo6rig@mail.gmail.com>
	<CAD-FghyOcnSt-WiWbW4N9re57Liszp9mM6pf746OweNsBmO6uw@mail.gmail.com>
	<CAGbA+aY_tBXjj7gkuscCNt7=kFNA0=QrXmQVrfpKrVo1wwmE9g@mail.gmail.com>
	<CAGbA+aZnA3coeXSCYeBwkbdxV6AVX9=DN90-z+wthgRpFwm_tQ@mail.gmail.com>
Message-ID: <CAEJabWiSqG0E+Em=+i70mwUNDVx_BXxjsGjL6rCejYK3dhwZ8w@mail.gmail.com>

>
> Something I just noticed is when run print_r( $wp_query); on what should be
> the custom rewrite page I don't even see wpem_event_date set in the
> query_vars array. It is actually set as the attachment query_var:


I seem to recall you need to register new query_vars with
add_rewrite_tag().

Would explain why it's not showing up on the other end. See:
http://codex.wordpress.org/Rewrite_API/add_rewrite_tag



On Fri, Jan 25, 2013 at 1:54 PM, William Satterwhite <
whsatterwhite at gmail.com> wrote:

> Something I just noticed is when run print_r( $wp_query); on what should be
> the custom rewrite page I don't even see wpem_event_date set in the
> query_vars array. It is actually set as the attachment query_var:
>
> object(WP_Query)#781 (44) { ["query"]=> array(1) { ["attachment"]=>
> string(10) "2013-01-25" } ["query_vars"]=> array(56) { ["attachment"]=>
> string(10) "2013-01-25"
>
> On Fri, Jan 25, 2013 at 3:33 PM, William Satterwhite <
> whsatterwhite at gmail.com> wrote:
>
> > Thanks for taking a look at it Otto. I do in fact have a page named
> > by-date and I also have WP_DEBUG set to true.
> >
> >
> > On Fri, Jan 25, 2013 at 3:31 PM, Otto <otto at ottodestruct.com> wrote:
> >
> >> Nothing wrong with that code.
> >>
> >> Do you actually have a Page with a slug of "by-date"?
> >>
> >> -Otto
> >>
> >>
> >> On Fri, Jan 25, 2013 at 1:27 PM, William Satterwhite
> >> <whsatterwhite at gmail.com> wrote:
> >> > I've been working on getting custom re-write rules working in
> WordPress
> >> and
> >> > I've been through the Codex as well as countless tutorials that show
> the
> >> > various ways that rewrite rules can be implemented. Now, I'd like to
> >> think
> >> > that I'm doing it right, but every time I visit a URL for the custom
> >> > re-write it 404's on me. I know the re-write is registered within
> >> > WordPress, because I can check rewrite_rules in wp_options and see it
> >> > specified.
> >> >
> >> > The rule itself is to allow me to point to a page using an ISO
> formatted
> >> > date as the query_var e.g. http://site.com/by-date/YYYY-mm-dd or
> >> > http://site.com/by-date/2013-02-01. by-date being the static page
> that
> >> I
> >> > want to included in the custom re-rewrite. If anyone could provide
> some
> >> > insight on what I may be doing wrong or missing then please let me
> know.
> >> >
> >> > Here's the pastebin of what I've written. <
> http://pastebin.com/NCESJF0P
> >> >
> >> >
> >> > Best,
> >> > --
> >> > Hunter Satterwhite
> >> > http://linkedin.com/in/hsatterwhite
> >> > (252) 762-5177
> >> > _______________________________________________
> >> > wp-hackers mailing list
> >> > wp-hackers at lists.automattic.com
> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >
> >
> >
> > --
> > Hunter Satterwhite
> > http://linkedin.com/in/hsatterwhite
> > (252) 762-5177
> >
>
>
>
> --
> Hunter Satterwhite
> http://linkedin.com/in/hsatterwhite
> (252) 762-5177
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
-- I've kinda got a thing for WordPress > http://www.drewapicture.com

From whsatterwhite at gmail.com  Fri Jan 25 22:31:03 2013
From: whsatterwhite at gmail.com (William Satterwhite)
Date: Fri, 25 Jan 2013 17:31:03 -0500
Subject: [wp-hackers] Custom Re-write Rules
In-Reply-To: <CAEJabWiSqG0E+Em=+i70mwUNDVx_BXxjsGjL6rCejYK3dhwZ8w@mail.gmail.com>
References: <CAGbA+aYQyYzwQMwwnuX0bwkXseBzC5Hqcr9Gg1LnGTwEEo6rig@mail.gmail.com>
	<CAD-FghyOcnSt-WiWbW4N9re57Liszp9mM6pf746OweNsBmO6uw@mail.gmail.com>
	<CAGbA+aY_tBXjj7gkuscCNt7=kFNA0=QrXmQVrfpKrVo1wwmE9g@mail.gmail.com>
	<CAGbA+aZnA3coeXSCYeBwkbdxV6AVX9=DN90-z+wthgRpFwm_tQ@mail.gmail.com>
	<CAEJabWiSqG0E+Em=+i70mwUNDVx_BXxjsGjL6rCejYK3dhwZ8w@mail.gmail.com>
Message-ID: <CAGbA+abFfRf_4_6FJs2xONUx2JFu=T3cw6ApLYQX6R9Me-1FsA@mail.gmail.com>

Thanks Drew! I did just that and am still not seeing the query_var
registered when I run print_r( $wp_query);

This is the revised bit of code that I'm using for the custom rewrite:
http://pastebin.com/sg5Xz82R

On Fri, Jan 25, 2013 at 4:43 PM, Drew <xoodrew at gmail.com> wrote:

> >
> > Something I just noticed is when run print_r( $wp_query); on what should
> be
> > the custom rewrite page I don't even see wpem_event_date set in the
> > query_vars array. It is actually set as the attachment query_var:
>
>
> I seem to recall you need to register new query_vars with
> add_rewrite_tag().
>
> Would explain why it's not showing up on the other end. See:
> http://codex.wordpress.org/Rewrite_API/add_rewrite_tag
>
>
>
> On Fri, Jan 25, 2013 at 1:54 PM, William Satterwhite <
> whsatterwhite at gmail.com> wrote:
>
> > Something I just noticed is when run print_r( $wp_query); on what should
> be
> > the custom rewrite page I don't even see wpem_event_date set in the
> > query_vars array. It is actually set as the attachment query_var:
> >
> > object(WP_Query)#781 (44) { ["query"]=> array(1) { ["attachment"]=>
> > string(10) "2013-01-25" } ["query_vars"]=> array(56) { ["attachment"]=>
> > string(10) "2013-01-25"
> >
> > On Fri, Jan 25, 2013 at 3:33 PM, William Satterwhite <
> > whsatterwhite at gmail.com> wrote:
> >
> > > Thanks for taking a look at it Otto. I do in fact have a page named
> > > by-date and I also have WP_DEBUG set to true.
> > >
> > >
> > > On Fri, Jan 25, 2013 at 3:31 PM, Otto <otto at ottodestruct.com> wrote:
> > >
> > >> Nothing wrong with that code.
> > >>
> > >> Do you actually have a Page with a slug of "by-date"?
> > >>
> > >> -Otto
> > >>
> > >>
> > >> On Fri, Jan 25, 2013 at 1:27 PM, William Satterwhite
> > >> <whsatterwhite at gmail.com> wrote:
> > >> > I've been working on getting custom re-write rules working in
> > WordPress
> > >> and
> > >> > I've been through the Codex as well as countless tutorials that show
> > the
> > >> > various ways that rewrite rules can be implemented. Now, I'd like to
> > >> think
> > >> > that I'm doing it right, but every time I visit a URL for the custom
> > >> > re-write it 404's on me. I know the re-write is registered within
> > >> > WordPress, because I can check rewrite_rules in wp_options and see
> it
> > >> > specified.
> > >> >
> > >> > The rule itself is to allow me to point to a page using an ISO
> > formatted
> > >> > date as the query_var e.g. http://site.com/by-date/YYYY-mm-dd or
> > >> > http://site.com/by-date/2013-02-01. by-date being the static page
> > that
> > >> I
> > >> > want to included in the custom re-rewrite. If anyone could provide
> > some
> > >> > insight on what I may be doing wrong or missing then please let me
> > know.
> > >> >
> > >> > Here's the pastebin of what I've written. <
> > http://pastebin.com/NCESJF0P
> > >> >
> > >> >
> > >> > Best,
> > >> > --
> > >> > Hunter Satterwhite
> > >> > http://linkedin.com/in/hsatterwhite
> > >> > (252) 762-5177
> > >> > _______________________________________________
> > >> > wp-hackers mailing list
> > >> > wp-hackers at lists.automattic.com
> > >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >> _______________________________________________
> > >> wp-hackers mailing list
> > >> wp-hackers at lists.automattic.com
> > >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >>
> > >
> > >
> > >
> > > --
> > > Hunter Satterwhite
> > > http://linkedin.com/in/hsatterwhite
> > > (252) 762-5177
> > >
> >
> >
> >
> > --
> > Hunter Satterwhite
> > http://linkedin.com/in/hsatterwhite
> > (252) 762-5177
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> -- I've kinda got a thing for WordPress > http://www.drewapicture.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Hunter Satterwhite
http://linkedin.com/in/hsatterwhite
(252) 762-5177

From whsatterwhite at gmail.com  Fri Jan 25 22:42:06 2013
From: whsatterwhite at gmail.com (William Satterwhite)
Date: Fri, 25 Jan 2013 17:42:06 -0500
Subject: [wp-hackers] Custom Re-write Rules
In-Reply-To: <CAGbA+abFfRf_4_6FJs2xONUx2JFu=T3cw6ApLYQX6R9Me-1FsA@mail.gmail.com>
References: <CAGbA+aYQyYzwQMwwnuX0bwkXseBzC5Hqcr9Gg1LnGTwEEo6rig@mail.gmail.com>
	<CAD-FghyOcnSt-WiWbW4N9re57Liszp9mM6pf746OweNsBmO6uw@mail.gmail.com>
	<CAGbA+aY_tBXjj7gkuscCNt7=kFNA0=QrXmQVrfpKrVo1wwmE9g@mail.gmail.com>
	<CAGbA+aZnA3coeXSCYeBwkbdxV6AVX9=DN90-z+wthgRpFwm_tQ@mail.gmail.com>
	<CAEJabWiSqG0E+Em=+i70mwUNDVx_BXxjsGjL6rCejYK3dhwZ8w@mail.gmail.com>
	<CAGbA+abFfRf_4_6FJs2xONUx2JFu=T3cw6ApLYQX6R9Me-1FsA@mail.gmail.com>
Message-ID: <CAGbA+aZXbw=tfiTzqbLcunKjqVSnZE=3G06PTK+ZwX12DJB++g@mail.gmail.com>

Ok, I narrowed it down and fixed it. Otto and Drew thank you for the help
and also Drew thanks for directing me to use add_rewrite_tag versus
appending the custom variable to the query_var array. I'm sure both will
give you the desired results, but I'm in favor of add_rewrite_tag for best
practices.

The issue was a type in the regular expression, which I realized after
installing and using Monkeyman Rewrite Analyzer by Jan Fabry. Kudos to Jan
for a great plugin!

Best,
Hunter

On Fri, Jan 25, 2013 at 5:31 PM, William Satterwhite <
whsatterwhite at gmail.com> wrote:

> Thanks Drew! I did just that and am still not seeing the query_var
> registered when I run print_r( $wp_query);
>
> This is the revised bit of code that I'm using for the custom rewrite:
> http://pastebin.com/sg5Xz82R
>
>
> On Fri, Jan 25, 2013 at 4:43 PM, Drew <xoodrew at gmail.com> wrote:
>
>> >
>> > Something I just noticed is when run print_r( $wp_query); on what
>> should be
>> > the custom rewrite page I don't even see wpem_event_date set in the
>> > query_vars array. It is actually set as the attachment query_var:
>>
>>
>> I seem to recall you need to register new query_vars with
>> add_rewrite_tag().
>>
>> Would explain why it's not showing up on the other end. See:
>> http://codex.wordpress.org/Rewrite_API/add_rewrite_tag
>>
>>
>>
>> On Fri, Jan 25, 2013 at 1:54 PM, William Satterwhite <
>> whsatterwhite at gmail.com> wrote:
>>
>> > Something I just noticed is when run print_r( $wp_query); on what
>> should be
>> > the custom rewrite page I don't even see wpem_event_date set in the
>> > query_vars array. It is actually set as the attachment query_var:
>> >
>> > object(WP_Query)#781 (44) { ["query"]=> array(1) { ["attachment"]=>
>> > string(10) "2013-01-25" } ["query_vars"]=> array(56) { ["attachment"]=>
>> > string(10) "2013-01-25"
>> >
>> > On Fri, Jan 25, 2013 at 3:33 PM, William Satterwhite <
>> > whsatterwhite at gmail.com> wrote:
>> >
>> > > Thanks for taking a look at it Otto. I do in fact have a page named
>> > > by-date and I also have WP_DEBUG set to true.
>> > >
>> > >
>> > > On Fri, Jan 25, 2013 at 3:31 PM, Otto <otto at ottodestruct.com> wrote:
>> > >
>> > >> Nothing wrong with that code.
>> > >>
>> > >> Do you actually have a Page with a slug of "by-date"?
>> > >>
>> > >> -Otto
>> > >>
>> > >>
>> > >> On Fri, Jan 25, 2013 at 1:27 PM, William Satterwhite
>> > >> <whsatterwhite at gmail.com> wrote:
>> > >> > I've been working on getting custom re-write rules working in
>> > WordPress
>> > >> and
>> > >> > I've been through the Codex as well as countless tutorials that
>> show
>> > the
>> > >> > various ways that rewrite rules can be implemented. Now, I'd like
>> to
>> > >> think
>> > >> > that I'm doing it right, but every time I visit a URL for the
>> custom
>> > >> > re-write it 404's on me. I know the re-write is registered within
>> > >> > WordPress, because I can check rewrite_rules in wp_options and see
>> it
>> > >> > specified.
>> > >> >
>> > >> > The rule itself is to allow me to point to a page using an ISO
>> > formatted
>> > >> > date as the query_var e.g. http://site.com/by-date/YYYY-mm-dd or
>> > >> > http://site.com/by-date/2013-02-01. by-date being the static page
>> > that
>> > >> I
>> > >> > want to included in the custom re-rewrite. If anyone could provide
>> > some
>> > >> > insight on what I may be doing wrong or missing then please let me
>> > know.
>> > >> >
>> > >> > Here's the pastebin of what I've written. <
>> > http://pastebin.com/NCESJF0P
>> > >> >
>> > >> >
>> > >> > Best,
>> > >> > --
>> > >> > Hunter Satterwhite
>> > >> > http://linkedin.com/in/hsatterwhite
>> > >> > (252) 762-5177
>> > >> > _______________________________________________
>> > >> > wp-hackers mailing list
>> > >> > wp-hackers at lists.automattic.com
>> > >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> > >> _______________________________________________
>> > >> wp-hackers mailing list
>> > >> wp-hackers at lists.automattic.com
>> > >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> > >>
>> > >
>> > >
>> > >
>> > > --
>> > > Hunter Satterwhite
>> > > http://linkedin.com/in/hsatterwhite
>> > > (252) 762-5177
>> > >
>> >
>> >
>> >
>> > --
>> > Hunter Satterwhite
>> > http://linkedin.com/in/hsatterwhite
>> > (252) 762-5177
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>>
>>
>>
>> --
>> -- I've kinda got a thing for WordPress > http://www.drewapicture.com
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Hunter Satterwhite
> http://linkedin.com/in/hsatterwhite
> (252) 762-5177
>



-- 
Hunter Satterwhite
http://linkedin.com/in/hsatterwhite
(252) 762-5177

From simon at wpsites.co.uk  Sat Jan 26 08:32:23 2013
From: simon at wpsites.co.uk (Simon Dunton - WP Sites)
Date: Sat, 26 Jan 2013 08:32:23 +0000
Subject: [wp-hackers] Custom Re-write Rules
In-Reply-To: <CAGbA+aYQyYzwQMwwnuX0bwkXseBzC5Hqcr9Gg1LnGTwEEo6rig@mail.gmail.com>
References: <CAGbA+aYQyYzwQMwwnuX0bwkXseBzC5Hqcr9Gg1LnGTwEEo6rig@mail.gmail.com>
Message-ID: <FC16F5F3-1C7C-4811-91A6-C83E7B118A76@wpsites.co.uk>

Human made have a handy little class that might have been very useful to you  http://hmn.md/wordpress-rewrite-rules-hm-core-style/

Maybe not now you've fixed the issue but it might make someone else's life a little easier.

Simon

On 25 Jan 2013, at 19:27, William Satterwhite wrote:

> I've been working on getting custom re-write rules working in WordPress and
> I've been through the Codex as well as countless tutorials that show the
> various ways that rewrite rules can be implemented. Now, I'd like to think
> that I'm doing it right, but every time I visit a URL for the custom
> re-write it 404's on me. I know the re-write is registered within
> WordPress, because I can check rewrite_rules in wp_options and see it
> specified.
> 
> The rule itself is to allow me to point to a page using an ISO formatted
> date as the query_var e.g. http://site.com/by-date/YYYY-mm-dd or
> http://site.com/by-date/2013-02-01. by-date being the static page that I
> want to included in the custom re-rewrite. If anyone could provide some
> insight on what I may be doing wrong or missing then please let me know.
> 
> Here's the pastebin of what I've written. <http://pastebin.com/NCESJF0P>
> 
> Best,
> -- 
> Hunter Satterwhite
> http://linkedin.com/in/hsatterwhite
> (252) 762-5177
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From whsatterwhite at gmail.com  Sat Jan 26 14:22:43 2013
From: whsatterwhite at gmail.com (William Satterwhite)
Date: Sat, 26 Jan 2013 09:22:43 -0500
Subject: [wp-hackers] Custom Re-write Rules
In-Reply-To: <FC16F5F3-1C7C-4811-91A6-C83E7B118A76@wpsites.co.uk>
References: <CAGbA+aYQyYzwQMwwnuX0bwkXseBzC5Hqcr9Gg1LnGTwEEo6rig@mail.gmail.com>
	<FC16F5F3-1C7C-4811-91A6-C83E7B118A76@wpsites.co.uk>
Message-ID: <CAGbA+aaYxBHyc034P+rNmtBO-EJE5qhqjdB1AFuQKv2MM5_uKQ@mail.gmail.com>

Much appreciated. This is a great resource!

On Saturday, January 26, 2013, Simon Dunton - WP Sites wrote:

> Human made have a handy little class that might have been very useful to
> you  http://hmn.md/wordpress-rewrite-rules-hm-core-style/
>
> Maybe not now you've fixed the issue but it might make someone else's life
> a little easier.
>
> Simon
>
> On 25 Jan 2013, at 19:27, William Satterwhite wrote:
>
> > I've been working on getting custom re-write rules working in WordPress
> and
> > I've been through the Codex as well as countless tutorials that show the
> > various ways that rewrite rules can be implemented. Now, I'd like to
> think
> > that I'm doing it right, but every time I visit a URL for the custom
> > re-write it 404's on me. I know the re-write is registered within
> > WordPress, because I can check rewrite_rules in wp_options and see it
> > specified.
> >
> > The rule itself is to allow me to point to a page using an ISO formatted
> > date as the query_var e.g. http://site.com/by-date/YYYY-mm-dd or
> > http://site.com/by-date/2013-02-01. by-date being the static page that I
> > want to included in the custom re-rewrite. If anyone could provide some
> > insight on what I may be doing wrong or missing then please let me know.
> >
> > Here's the pastebin of what I've written. <http://pastebin.com/NCESJF0P>
> >
> > Best,
> > --
> > Hunter Satterwhite
> > http://linkedin.com/in/hsatterwhite
> > (252) 762-5177
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Hunter Satterwhite
http://linkedin.com/in/hsatterwhite
(252) 762-5177

From chris at lod.com  Sat Jan 26 19:48:33 2013
From: chris at lod.com (chris)
Date: Sat, 26 Jan 2013 14:48:33 -0500
Subject: [wp-hackers] best way for custom rewrites in a theme
Message-ID: <000001cdfbfe$1f752bd0$5e5f8370$@lod.com>

Usally I use register_activation_hook for flush, what hook is the best to
use for a theme?




From justin at justintadlock.com  Sat Jan 26 21:31:18 2013
From: justin at justintadlock.com (Justin Tadlock)
Date: Sat, 26 Jan 2013 15:31:18 -0600
Subject: [wp-hackers] best way for custom rewrites in a theme
In-Reply-To: <000001cdfbfe$1f752bd0$5e5f8370$@lod.com>
References: <000001cdfbfe$1f752bd0$5e5f8370$@lod.com>
Message-ID: <51044B26.4080809@justintadlock.com>

Why would a theme be touching rewrite rules?  Whatever it is, I'm 
guessing it's best to put that functionality in a plugin.

On 1/26/2013 1:48 PM, chris wrote:
> Usally I use register_activation_hook for flush, what hook is the best to
> use for a theme?
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


From whsatterwhite at gmail.com  Sat Jan 26 21:35:18 2013
From: whsatterwhite at gmail.com (William Satterwhite)
Date: Sat, 26 Jan 2013 16:35:18 -0500
Subject: [wp-hackers] best way for custom rewrites in a theme
In-Reply-To: <51044B26.4080809@justintadlock.com>
References: <000001cdfbfe$1f752bd0$5e5f8370$@lod.com>
	<51044B26.4080809@justintadlock.com>
Message-ID: <CAGbA+aa-fwDciOR29G1zPWEzwurF6bVAA1hwr0UP+_gopRy=gg@mail.gmail.com>

Agreed with Justin 100%. Whatever code you add to a functions.php file in a
theme for custom rewrites should exist as a plugin. It's as simple as
creating a new file, dropping in your code, and making sure the header in
your file follows the WordPress plugin standard. Then you can take
advantage of the registration_activation_hook with out trying to use some
alternate hook.

Not only that, but if you're adding custom rewrites/routing to your
website, wouldn't you want it to be theme independent? Maybe you want to
run a seasonal theme or create a new theme all together, so why create more
work/restrictions by building that part in to the theme's functions.php
file?

On Sat, Jan 26, 2013 at 4:31 PM, Justin Tadlock <justin at justintadlock.com>wrote:

> Why would a theme be touching rewrite rules?  Whatever it is, I'm guessing
> it's best to put that functionality in a plugin.
>
>
> On 1/26/2013 1:48 PM, chris wrote:
>
>> Usally I use register_activation_hook for flush, what hook is the best to
>> use for a theme?
>>
>>
>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>



-- 
Hunter Satterwhite
http://linkedin.com/in/hsatterwhite
(252) 762-5177

From whsatterwhite at gmail.com  Sat Jan 26 21:36:00 2013
From: whsatterwhite at gmail.com (William Satterwhite)
Date: Sat, 26 Jan 2013 16:36:00 -0500
Subject: [wp-hackers] best way for custom rewrites in a theme
In-Reply-To: <CAGbA+aa-fwDciOR29G1zPWEzwurF6bVAA1hwr0UP+_gopRy=gg@mail.gmail.com>
References: <000001cdfbfe$1f752bd0$5e5f8370$@lod.com>
	<51044B26.4080809@justintadlock.com>
	<CAGbA+aa-fwDciOR29G1zPWEzwurF6bVAA1hwr0UP+_gopRy=gg@mail.gmail.com>
Message-ID: <CAGbA+aZ_y02964UibmWKDq-aonN0crNU0x5Rs5gnvjX072np4g@mail.gmail.com>

s/registration_activation_hook/register_activation_hook/g

On Sat, Jan 26, 2013 at 4:35 PM, William Satterwhite <
whsatterwhite at gmail.com> wrote:

> Agreed with Justin 100%. Whatever code you add to a functions.php file in
> a theme for custom rewrites should exist as a plugin. It's as simple as
> creating a new file, dropping in your code, and making sure the header in
> your file follows the WordPress plugin standard. Then you can take
> advantage of the registration_activation_hook with out trying to use some
> alternate hook.
>
> Not only that, but if you're adding custom rewrites/routing to your
> website, wouldn't you want it to be theme independent? Maybe you want to
> run a seasonal theme or create a new theme all together, so why create more
> work/restrictions by building that part in to the theme's functions.php
> file?
>
>
> On Sat, Jan 26, 2013 at 4:31 PM, Justin Tadlock <justin at justintadlock.com>wrote:
>
>> Why would a theme be touching rewrite rules?  Whatever it is, I'm
>> guessing it's best to put that functionality in a plugin.
>>
>>
>> On 1/26/2013 1:48 PM, chris wrote:
>>
>>> Usally I use register_activation_hook for flush, what hook is the best to
>>> use for a theme?
>>>
>>>
>>>
>>> ______________________________**_________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>
>>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>
>
>
> --
> Hunter Satterwhite
> http://linkedin.com/in/hsatterwhite
> (252) 762-5177
>



-- 
Hunter Satterwhite
http://linkedin.com/in/hsatterwhite
(252) 762-5177

From erick at ethitter.com  Sat Jan 26 21:48:47 2013
From: erick at ethitter.com (Erick Hitter)
Date: Sat, 26 Jan 2013 14:48:47 -0700
Subject: [wp-hackers] best way for custom rewrites in a theme
In-Reply-To: <CAGbA+aZ_y02964UibmWKDq-aonN0crNU0x5Rs5gnvjX072np4g@mail.gmail.com>
References: <000001cdfbfe$1f752bd0$5e5f8370$@lod.com>
	<51044B26.4080809@justintadlock.com>
	<CAGbA+aa-fwDciOR29G1zPWEzwurF6bVAA1hwr0UP+_gopRy=gg@mail.gmail.com>
	<CAGbA+aZ_y02964UibmWKDq-aonN0crNU0x5Rs5gnvjX072np4g@mail.gmail.com>
Message-ID: <CADnbRqF04LZ1h4WR_N59JKG0mCsu6_6-KozHEu5xAAawE9u4Tg@mail.gmail.com>

Are the rewrite rules specific to functionality or templating essential,
and specific, to the theme? In that case, the rules truly belong within the
theme. In that case, the init action is appropriate for adding the rules,
query variables, and such. It's silly to force a user to install a theme,
and then a plugin, for the theme to function as advertised.

If, on the other hand, the rules are useful without the theme being active,
they should exist in a plugin.


Erick
--
Erick Hitter
erick at ethitter.com
(617) 454-4153


On Sat, Jan 26, 2013 at 2:36 PM, William Satterwhite <
whsatterwhite at gmail.com> wrote:

> s/registration_activation_hook/register_activation_hook/g
>
> On Sat, Jan 26, 2013 at 4:35 PM, William Satterwhite <
> whsatterwhite at gmail.com> wrote:
>
> > Agreed with Justin 100%. Whatever code you add to a functions.php file in
> > a theme for custom rewrites should exist as a plugin. It's as simple as
> > creating a new file, dropping in your code, and making sure the header in
> > your file follows the WordPress plugin standard. Then you can take
> > advantage of the registration_activation_hook with out trying to use some
> > alternate hook.
> >
> > Not only that, but if you're adding custom rewrites/routing to your
> > website, wouldn't you want it to be theme independent? Maybe you want to
> > run a seasonal theme or create a new theme all together, so why create
> more
> > work/restrictions by building that part in to the theme's functions.php
> > file?
> >
> >
> > On Sat, Jan 26, 2013 at 4:31 PM, Justin Tadlock <
> justin at justintadlock.com>wrote:
> >
> >> Why would a theme be touching rewrite rules?  Whatever it is, I'm
> >> guessing it's best to put that functionality in a plugin.
> >>
> >>
> >> On 1/26/2013 1:48 PM, chris wrote:
> >>
> >>> Usally I use register_activation_hook for flush, what hook is the best
> to
> >>> use for a theme?
> >>>
> >>>
> >>>
> >>> ______________________________**_________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> >>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> >>>
> >>>
> >> ______________________________**_________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> >> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> >>
> >
> >
> >
> > --
> > Hunter Satterwhite
> > http://linkedin.com/in/hsatterwhite
> > (252) 762-5177
> >
>
>
>
> --
> Hunter Satterwhite
> http://linkedin.com/in/hsatterwhite
> (252) 762-5177
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From chris at lod.com  Sat Jan 26 22:27:07 2013
From: chris at lod.com (chris)
Date: Sat, 26 Jan 2013 17:27:07 -0500
Subject: [wp-hackers] best way for custom rewrites in a theme
In-Reply-To: <CADnbRqF04LZ1h4WR_N59JKG0mCsu6_6-KozHEu5xAAawE9u4Tg@mail.gmail.com>
References: <000001cdfbfe$1f752bd0$5e5f8370$@lod.com>
	<51044B26.4080809@justintadlock.com>
	<CAGbA+aa-fwDciOR29G1zPWEzwurF6bVAA1hwr0UP+_gopRy=gg@mail.gmail.com>
	<CAGbA+aZ_y02964UibmWKDq-aonN0crNU0x5Rs5gnvjX072np4g@mail.gmail.com>
	<CADnbRqF04LZ1h4WR_N59JKG0mCsu6_6-KozHEu5xAAawE9u4Tg@mail.gmail.com>
Message-ID: <000301cdfc14$468577f0$d39067d0$@lod.com>

Reason I was doing this, is its only for the theme being created, I have no
problem creating the small plugin to do it.  Client wanted it all in the
theme, I can create the plugin to be installed.


-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Erick Hitter
Sent: January 26, 2013 4:49 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] best way for custom rewrites in a theme

Are the rewrite rules specific to functionality or templating essential, and
specific, to the theme? In that case, the rules truly belong within the
theme. In that case, the init action is appropriate for adding the rules,
query variables, and such. It's silly to force a user to install a theme,
and then a plugin, for the theme to function as advertised.

If, on the other hand, the rules are useful without the theme being active,
they should exist in a plugin.


Erick
--
Erick Hitter
erick at ethitter.com
(617) 454-4153


On Sat, Jan 26, 2013 at 2:36 PM, William Satterwhite <
whsatterwhite at gmail.com> wrote:

> s/registration_activation_hook/register_activation_hook/g
>
> On Sat, Jan 26, 2013 at 4:35 PM, William Satterwhite < 
> whsatterwhite at gmail.com> wrote:
>
> > Agreed with Justin 100%. Whatever code you add to a functions.php 
> > file in a theme for custom rewrites should exist as a plugin. It's 
> > as simple as creating a new file, dropping in your code, and making 
> > sure the header in your file follows the WordPress plugin standard. 
> > Then you can take advantage of the registration_activation_hook with 
> > out trying to use some alternate hook.
> >
> > Not only that, but if you're adding custom rewrites/routing to your 
> > website, wouldn't you want it to be theme independent? Maybe you 
> > want to run a seasonal theme or create a new theme all together, so 
> > why create
> more
> > work/restrictions by building that part in to the theme's 
> > functions.php file?
> >
> >
> > On Sat, Jan 26, 2013 at 4:31 PM, Justin Tadlock <
> justin at justintadlock.com>wrote:
> >
> >> Why would a theme be touching rewrite rules?  Whatever it is, I'm 
> >> guessing it's best to put that functionality in a plugin.
> >>
> >>
> >> On 1/26/2013 1:48 PM, chris wrote:
> >>
> >>> Usally I use register_activation_hook for flush, what hook is the 
> >>> best
> to
> >>> use for a theme?
> >>>
> >>>
> >>>
> >>> ______________________________**_________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.**com 
> >>> <wp-hackers at lists.automattic.com> 
> >>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> >>>
> >>>
> >> ______________________________**_________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com> 
> >> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> >>
> >
> >
> >
> > --
> > Hunter Satterwhite
> > http://linkedin.com/in/hsatterwhite
> > (252) 762-5177
> >
>
>
>
> --
> Hunter Satterwhite
> http://linkedin.com/in/hsatterwhite
> (252) 762-5177
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From dmitry at getmoxied.net  Sun Jan 27 22:57:22 2013
From: dmitry at getmoxied.net (Dmitry Tokmakov)
Date: Sun, 27 Jan 2013 17:57:22 -0500
Subject: [wp-hackers] Include custom post type to search results
Message-ID: <18F3B902-5F75-48B9-BA8B-9D1685F3EC68@getmoxied.net>

Hi all,

I'm experiencing the issue:
I created custom post type "recipes", then I transferred some regular posts to new custom post type (just switched post type by looping through posts using wp_update_post()  ):

-----------------------------
$recipes = get_posts('post_type=post&cat=3&posts_per_page=-1');
  foreach ($recipes as $recipe) {
        $post_array = array(
          'ID' => $recipe->ID,
          'post_type' => 'recipes'
        );
        wp_update_post( $post_array );
  }
-----------------------------


Then I added code below to functions.php to include custom post type in the search results, but it didn't make any difference - still no custom posts in the search results.
-----------------------------
function SearchFilter($query) {
  if ($query->is_search) {
    $query->set('post_type',array('recipes','post'));    
  }
  return $query;
}
add_filter('pre_get_posts','SearchFilter');  
-----------------------------


Any ideas ?

Thank you in advance! 

Dmitry

From frank at bueltge.de  Mon Jan 28 08:16:30 2013
From: frank at bueltge.de (Frank Bueltge)
Date: Mon, 28 Jan 2013 09:16:30 +0100
Subject: [wp-hackers] Include custom post type to search results
In-Reply-To: <18F3B902-5F75-48B9-BA8B-9D1685F3EC68@getmoxied.net>
References: <18F3B902-5F75-48B9-BA8B-9D1685F3EC68@getmoxied.net>
Message-ID: <CAH9UVvF_KgaMppKaLOQYGMe28uze4EJe0rh4KoiF0YKgo9YbyQ@mail.gmail.com>

Hi Dmitry,
I think there is a good question for a open forum, like
http://wordpress.stackexchange.com/.
Is better to search about this topic for other users and maybe you get
earlier a answer.

But to your question.
I think the code to add the CPT to the search is right; only the hint,
exclude other conditionals, like preview or admin.
When init the function?Do you have the function and the add_filter() inside
a other function or method?

My example, works fine:
add_filter( 'pre_get_posts', 'fb_add_to_query' );
// ads to query function
fb_add_to_query( $query ) {

    if ( is_admin() || is_preview() )
       return;

    if ( ! isset( $query->query_vars['suppress_filters'] ) )
        $query->query_vars['suppress_filters'] = FALSE;

    // conditional tags for restrictions
    if ( $query->is_search && ( FALSE ==
$query->query_vars['suppress_filters'] ) )
        $query->set( 'post_type', array( 'post', 'recipes' ) );

    return $query;
}

Best


On Sun, Jan 27, 2013 at 11:57 PM, Dmitry Tokmakov <dmitry at getmoxied.net>wrote:

> Hi all,
>
> I'm experiencing the issue:
> I created custom post type "recipes", then I transferred some regular
> posts to new custom post type (just switched post type by looping through
> posts using wp_update_post()  ):
>
> -----------------------------
> $recipes = get_posts('post_type=post&cat=3&posts_per_page=-1');
>   foreach ($recipes as $recipe) {
>         $post_array = array(
>           'ID' => $recipe->ID,
>           'post_type' => 'recipes'
>         );
>         wp_update_post( $post_array );
>   }
> -----------------------------
>
>
> Then I added code below to functions.php to include custom post type in
> the search results, but it didn't make any difference - still no custom
> posts in the search results.
> -----------------------------
> function SearchFilter($query) {
>   if ($query->is_search) {
>     $query->set('post_type',array('recipes','post'));
>   }
>   return $query;
> }
> add_filter('pre_get_posts','SearchFilter');
> -----------------------------
>
>
> Any ideas ?
>
> Thank you in advance!
>
> Dmitry
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From info at a5d.org  Mon Jan 28 20:18:17 2013
From: info at a5d.org (Lee Rickler)
Date: Mon, 28 Jan 2013 20:18:17 +0000
Subject: [wp-hackers] allow line breaks on front end (bio/ descriptions)
Message-ID: <B6650B1E-9F8C-421E-8AD1-CA37E975E1CD@a5d.org>

Guys,

This one has my brain aching.

Problems:
1: Client project is requiring users profiles - including biography field) etc on the back-end which require non removal of line breaks.

2: Client is requiring non admins to only update their profiles via front end.

Solutions:
1, Added code to functions.php* which enables WYSIWYG editing on the bio text area on the back-end.

2, To build front end profiles I have added in Profile builder (Pro) - http://wordpress.org/extend/plugins/profile-builder/ - This works fine BUT strips all line breaks from the bio as is the normal route for WP (so I am lead to believe).

So, my question is - How can I stop line breaks from being removed when editing front end profiles?

*This is added to give WYSIWYG in the back-end: http://pastebin.com/GNnqn339

Doing my frikking head in as no matter what I try I cannot get both to work together.

Much appreciated.

Lee


From ian at iandunn.name  Tue Jan 29 05:22:16 2013
From: ian at iandunn.name (Ian Dunn)
Date: Mon, 28 Jan 2013 21:22:16 -0800
Subject: [wp-hackers] Process for submitting new unit tests
Message-ID: <51075C88.6020802@iandunn.name>

The intro section of the Automated Testing page on the Codex says,

"The process to add your test suite and test cases to existing suites is 
to add them to the WordPress Core Trac ticket that has the bug that the 
test case or suite tests. After you've done this, add "unit-tested" to 
the keywords of the ticket to inform the lead developers that it has 
been added." -- 
http://codex.wordpress.org/Automated_Testing#Automated_testing

...but the Submitting the Test Cases section at the end says,

" New test cases should be submitted to the main WordPress trac, setting 
the component to 'Unit Tests.' These will then get reviewed and added to 
the Subversion repository." -- 
http://codex.wordpress.org/Automated_Testing#Submitting_the_Test_Cases

So, the first paragraph says to attach new tests to the ticket the tests 
were written for, while the other paragraph says to open a second ticket 
whose only purpose would be submitting the new tests for inclusion in 
the suite.

Can someone tell me which one is correct? I can fix the article once I 
find out.


Also, the article doesn't offer much in the way of guidance on what 
kinds of new tests are desired, or how extensive they should be. I'm 
working on some small modifications to wp_mail() in #23291, and they're 
relatively straight forward, but I still want to be cautious about any 
unintended consequences. The current suite only has 6 tests for 
wp_mail(), so there's a lot that could go wrong without being detected.

I'm probably going to write at least half a dozen tests just for my own 
sanity, but I can submit them to the tests repo if that's desired. I 
know some people consider excessive unit testing a waste of time, or 
might not want to see the suite grow to the tens of thousands, or prefer 
system testing and don't want to bother updating unit tests when 
internals change. Is there a consensus on what should be in the suite, 
or any official guidelines?

From bryan at ibaku.net  Tue Jan 29 08:10:41 2013
From: bryan at ibaku.net (Bryan Petty)
Date: Tue, 29 Jan 2013 01:10:41 -0700
Subject: [wp-hackers] Process for submitting new unit tests
In-Reply-To: <51075C88.6020802@iandunn.name>
References: <51075C88.6020802@iandunn.name>
Message-ID: <CAKB8V+pMoLvx7NR4CL3gaEcaAJeBx+nHV3SQbD756=j1Z9M-+A@mail.gmail.com>

On Mon, Jan 28, 2013 at 10:22 PM, Ian Dunn <ian at iandunn.name> wrote:
> The intro section of the Automated Testing page on the Codex says,
>
> "The process to add your test suite and test cases to existing suites is to
> add them to the WordPress Core Trac ticket that has the bug that the test
> case or suite tests. After you've done this, add "unit-tested" to the
> keywords of the ticket to inform the lead developers that it has been
> added." -- http://codex.wordpress.org/Automated_Testing#Automated_testing
>
> ...but the Submitting the Test Cases section at the end says,
>
> " New test cases should be submitted to the main WordPress trac, setting the
> component to 'Unit Tests.' These will then get reviewed and added to the
> Subversion repository." --
> http://codex.wordpress.org/Automated_Testing#Submitting_the_Test_Cases
>
> So, the first paragraph says to attach new tests to the ticket the tests
> were written for, while the other paragraph says to open a second ticket
> whose only purpose would be submitting the new tests for inclusion in the
> suite.
>
> Can someone tell me which one is correct? I can fix the article once I find
> out.

Actually, they are both correct. New unit tests that have nothing to
do with any existing tickets are more than welcome if the component in
question is lacking decent tests, and those should be on their own new
ticket. At the same time, it is still appropriate to attach unit tests
for a specific bug to it's existing ticket.

Although, I think the appropriate keyword is actually
"has-unit-tests", and not "unit-tested". There's already at least one
ticket using that, it follows convention with "has-patch", and I've
never actually seen "unit-tested" used before.

It might be helpful to actually figure out if the Core Contributor
Handbook is adequate enough to remove (and redirect) that Codex page,
preferring the CCH page here:
http://make.wordpress.org/core/handbook/automated-testing/

> Also, the article doesn't offer much in the way of guidance on what kinds of
> new tests are desired, or how extensive they should be. I'm working on some
> small modifications to wp_mail() in #23291, and they're relatively straight
> forward, but I still want to be cautious about any unintended consequences.
> The current suite only has 6 tests for wp_mail(), so there's a lot that
> could go wrong without being detected.
>
> I'm probably going to write at least half a dozen tests just for my own
> sanity, but I can submit them to the tests repo if that's desired. I know
> some people consider excessive unit testing a waste of time, or might not
> want to see the suite grow to the tens of thousands, or prefer system
> testing and don't want to bother updating unit tests when internals change.
> Is there a consensus on what should be in the suite, or any official
> guidelines?

This can certainly be very subjective, and there really isn't any
official guidelines on this. The unit tests are still not anywhere
close to extensive or have good code coverage. They are still very
young and sparse. Really any help is appreciated with getting the
tests filled out with at least the most common usage and
configurations on most components (and mail is certainly a very
heavily used one) as long as the tests do what they claim. Use your
best judgement, but do keep a few of the following tips in mind.

Right now the unit tests take over 2 minutes to run on decent
hardware. Not as long as they used to take at one point, but still
pretty long by most developers' standards. Testing the most important
aspects of every component comes first in priority of course, but try
not to push the tests on time. The tests are configured in a way that
is very wasteful on resources (spawning new processes with every test
suite for example - reloading all of WordPress), and hopefully that
can be changed in the future so current tests drop under a minute, but
many of the existing tests won't work that way for now.

Given the time constraints, you might be tempted to stuff more
assertions into single test methods (it will run faster). Many of the
unit tests do this, some even including assertions inside of frequent
loops. However, this is generally considered a bad practice as it
makes it hard to tell why the test failed when it does. So try not to
do that unless you know it will be easy to tell what's wrong assuming
you are only given the assertion value passed in, the expected value,
and the name of the test method.

Specifically since you're talking about the mail component, I just
want to point out that PHPMailer has it's own set of unit tests that
are supposed to cover all aspects of PHPMailer itself. Don't add unit
tests that mostly only test it's functionality. For example, if a WP
mail method accepts a parameter that really is just passed directly
into PHPMailer without being touched, you probably don't need any test
variations based on that parameter.

I'm sure some others here have some good advice to add to this too.

--
Regards,
Bryan Petty

From ian at iandunn.name  Tue Jan 29 16:50:44 2013
From: ian at iandunn.name (Ian Dunn)
Date: Tue, 29 Jan 2013 08:50:44 -0800
Subject: [wp-hackers] Process for submitting new unit tests
In-Reply-To: <CAKB8V+pMoLvx7NR4CL3gaEcaAJeBx+nHV3SQbD756=j1Z9M-+A@mail.gmail.com>
References: <51075C88.6020802@iandunn.name>
	<CAKB8V+pMoLvx7NR4CL3gaEcaAJeBx+nHV3SQbD756=j1Z9M-+A@mail.gmail.com>
Message-ID: <5107FDE4.7030805@iandunn.name>

Thanks Bryan, that was really helpup. I'll update the Codex with some of 
that.


On 01/29/2013 12:10 AM, Bryan Petty wrote:
> On Mon, Jan 28, 2013 at 10:22 PM, Ian Dunn <ian at iandunn.name> wrote:
>> The intro section of the Automated Testing page on the Codex says,
>>
>> "The process to add your test suite and test cases to existing suites is to
>> add them to the WordPress Core Trac ticket that has the bug that the test
>> case or suite tests. After you've done this, add "unit-tested" to the
>> keywords of the ticket to inform the lead developers that it has been
>> added." -- http://codex.wordpress.org/Automated_Testing#Automated_testing
>>
>> ...but the Submitting the Test Cases section at the end says,
>>
>> " New test cases should be submitted to the main WordPress trac, setting the
>> component to 'Unit Tests.' These will then get reviewed and added to the
>> Subversion repository." --
>> http://codex.wordpress.org/Automated_Testing#Submitting_the_Test_Cases
>>
>> So, the first paragraph says to attach new tests to the ticket the tests
>> were written for, while the other paragraph says to open a second ticket
>> whose only purpose would be submitting the new tests for inclusion in the
>> suite.
>>
>> Can someone tell me which one is correct? I can fix the article once I find
>> out.
> Actually, they are both correct. New unit tests that have nothing to
> do with any existing tickets are more than welcome if the component in
> question is lacking decent tests, and those should be on their own new
> ticket. At the same time, it is still appropriate to attach unit tests
> for a specific bug to it's existing ticket.
>
> Although, I think the appropriate keyword is actually
> "has-unit-tests", and not "unit-tested". There's already at least one
> ticket using that, it follows convention with "has-patch", and I've
> never actually seen "unit-tested" used before.
>
> It might be helpful to actually figure out if the Core Contributor
> Handbook is adequate enough to remove (and redirect) that Codex page,
> preferring the CCH page here:
> http://make.wordpress.org/core/handbook/automated-testing/
>
>> Also, the article doesn't offer much in the way of guidance on what kinds of
>> new tests are desired, or how extensive they should be. I'm working on some
>> small modifications to wp_mail() in #23291, and they're relatively straight
>> forward, but I still want to be cautious about any unintended consequences.
>> The current suite only has 6 tests for wp_mail(), so there's a lot that
>> could go wrong without being detected.
>>
>> I'm probably going to write at least half a dozen tests just for my own
>> sanity, but I can submit them to the tests repo if that's desired. I know
>> some people consider excessive unit testing a waste of time, or might not
>> want to see the suite grow to the tens of thousands, or prefer system
>> testing and don't want to bother updating unit tests when internals change.
>> Is there a consensus on what should be in the suite, or any official
>> guidelines?
> This can certainly be very subjective, and there really isn't any
> official guidelines on this. The unit tests are still not anywhere
> close to extensive or have good code coverage. They are still very
> young and sparse. Really any help is appreciated with getting the
> tests filled out with at least the most common usage and
> configurations on most components (and mail is certainly a very
> heavily used one) as long as the tests do what they claim. Use your
> best judgement, but do keep a few of the following tips in mind.
>
> Right now the unit tests take over 2 minutes to run on decent
> hardware. Not as long as they used to take at one point, but still
> pretty long by most developers' standards. Testing the most important
> aspects of every component comes first in priority of course, but try
> not to push the tests on time. The tests are configured in a way that
> is very wasteful on resources (spawning new processes with every test
> suite for example - reloading all of WordPress), and hopefully that
> can be changed in the future so current tests drop under a minute, but
> many of the existing tests won't work that way for now.
>
> Given the time constraints, you might be tempted to stuff more
> assertions into single test methods (it will run faster). Many of the
> unit tests do this, some even including assertions inside of frequent
> loops. However, this is generally considered a bad practice as it
> makes it hard to tell why the test failed when it does. So try not to
> do that unless you know it will be easy to tell what's wrong assuming
> you are only given the assertion value passed in, the expected value,
> and the name of the test method.
>
> Specifically since you're talking about the mail component, I just
> want to point out that PHPMailer has it's own set of unit tests that
> are supposed to cover all aspects of PHPMailer itself. Don't add unit
> tests that mostly only test it's functionality. For example, if a WP
> mail method accepts a parameter that really is just passed directly
> into PHPMailer without being touched, you probably don't need any test
> variations based on that parameter.
>
> I'm sure some others here have some good advice to add to this too.
>
> --
> Regards,
> Bryan Petty
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mail at scribu.net  Wed Jan 30 00:49:40 2013
From: mail at scribu.net (scribu)
Date: Wed, 30 Jan 2013 02:49:40 +0200
Subject: [wp-hackers] Process for submitting new unit tests
In-Reply-To: <CAKB8V+pMoLvx7NR4CL3gaEcaAJeBx+nHV3SQbD756=j1Z9M-+A@mail.gmail.com>
References: <51075C88.6020802@iandunn.name>
	<CAKB8V+pMoLvx7NR4CL3gaEcaAJeBx+nHV3SQbD756=j1Z9M-+A@mail.gmail.com>
Message-ID: <CABzSYNPZhcc+jKqjdYvi9nK5MBCDdt=1r7vbhWof9PA5yHqWPA@mail.gmail.com>

On Tue, Jan 29, 2013 at 10:10 AM, Bryan Petty <bryan at ibaku.net> wrote:

> It might be helpful to actually figure out if the Core Contributor
> Handbook is adequate enough to remove (and redirect) that Codex page,
> preferring the CCH page here:
> http://make.wordpress.org/core/handbook/automated-testing/
>

This seems like a good topic to bring up on
http://make.wordpress.org/docs/- what should happen to a codex page
that covers something that the
handbook covers?

-- 
http://scribu.net

From lists at rotorised.com  Wed Jan 30 00:55:51 2013
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 30 Jan 2013 10:55:51 +1000
Subject: [wp-hackers] Process for submitting new unit tests
In-Reply-To: <CABzSYNPZhcc+jKqjdYvi9nK5MBCDdt=1r7vbhWof9PA5yHqWPA@mail.gmail.com>
References: <51075C88.6020802@iandunn.name>
	<CAKB8V+pMoLvx7NR4CL3gaEcaAJeBx+nHV3SQbD756=j1Z9M-+A@mail.gmail.com>
	<CABzSYNPZhcc+jKqjdYvi9nK5MBCDdt=1r7vbhWof9PA5yHqWPA@mail.gmail.com>
Message-ID: <51086F97.4020508@rotorised.com>

scribu wrote:
> This seems like a good topic to bring up on
> http://make.wordpress.org/docs/- what should happen to a codex page
> that covers something that the
> handbook covers?

Even better, we're having an IRC meeting about the CCH tomorrow:
http://make.wordpress.org/docs/2013/01/29/core-contributor-handbook-chat-30th-january/

-- 
Ryan McCue
<http://ryanmccue.info/>

From tcbarrett at gmail.com  Wed Jan 30 11:50:37 2013
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 30 Jan 2013 11:50:37 +0000
Subject: [wp-hackers] Attachment meta data fixed in 3.5.1 ?
Message-ID: <CAEgmxaa=9zgmO4j5RbbgVN3E_ZCVb2mrLVOghMrr1APjYX8WxQ@mail.gmail.com>

http://core.trac.wordpress.org/ticket/22985

Is this meta data issue fixed in the 3.5.1 release?

Thanks,
Tom

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From mailing at markoheijnen.nl  Wed Jan 30 11:51:47 2013
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Wed, 30 Jan 2013 12:51:47 +0100
Subject: [wp-hackers] Attachment meta data fixed in 3.5.1 ?
In-Reply-To: <CAEgmxaa=9zgmO4j5RbbgVN3E_ZCVb2mrLVOghMrr1APjYX8WxQ@mail.gmail.com>
References: <CAEgmxaa=9zgmO4j5RbbgVN3E_ZCVb2mrLVOghMrr1APjYX8WxQ@mail.gmail.com>
Message-ID: <AE2AAAAB-33BB-4B00-B06F-D69E71C8685B@markoheijnen.nl>

Hey Tom,

Yes, it it fixed in that release. Any reason that you asked that?

Marko

Op 30 jan. 2013, om 12:50 heeft Tom Barrett <tcbarrett at gmail.com> het volgende geschreven:

> http://core.trac.wordpress.org/ticket/22985
> 
> Is this meta data issue fixed in the 3.5.1 release?
> 
> Thanks,
> Tom
> 
> -- 
> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> http://twitter.com/tcbarrett
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From tcbarrett at gmail.com  Wed Jan 30 11:57:50 2013
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 30 Jan 2013 11:57:50 +0000
Subject: [wp-hackers] Attachment meta data fixed in 3.5.1 ?
In-Reply-To: <AE2AAAAB-33BB-4B00-B06F-D69E71C8685B@markoheijnen.nl>
References: <CAEgmxaa=9zgmO4j5RbbgVN3E_ZCVb2mrLVOghMrr1APjYX8WxQ@mail.gmail.com>
	<AE2AAAAB-33BB-4B00-B06F-D69E71C8685B@markoheijnen.nl>
Message-ID: <CAEgmxaaXKrq8DzzG_f=J5+uP47RCzbq1Ef6WVFoKWRPJYGkFRg@mail.gmail.com>

Only that I couldn't see it explicitly noted anywhere. I guess I just don't
understand trac properly.

http://core.trac.wordpress.org/query?group=status&milestone=3.5.1
It assigned, not closed like all the others.

http://wordpress.org/news/2013/01/wordpress-3-5-1/
Don't see it mentioned.

I have no evidence that it hasn't been fixed. Can no longer replicate the
problem after updating to 3.5.1.

So I thought I would ask.


On 30 January 2013 11:51, Marko Heijnen <mailing at markoheijnen.nl> wrote:

> Hey Tom,
>
> Yes, it it fixed in that release. Any reason that you asked that?
>
> Marko
>
> Op 30 jan. 2013, om 12:50 heeft Tom Barrett <tcbarrett at gmail.com> het
> volgende geschreven:
>
> > http://core.trac.wordpress.org/ticket/22985
> >
> > Is this meta data issue fixed in the 3.5.1 release?
> >
> > Thanks,
> > Tom
> >
> > --
> > http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> > http://twitter.com/tcbarrett
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From mailing at markoheijnen.nl  Wed Jan 30 12:16:09 2013
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Wed, 30 Jan 2013 13:16:09 +0100
Subject: [wp-hackers] Attachment meta data fixed in 3.5.1 ?
In-Reply-To: <CAEgmxaaXKrq8DzzG_f=J5+uP47RCzbq1Ef6WVFoKWRPJYGkFRg@mail.gmail.com>
References: <CAEgmxaa=9zgmO4j5RbbgVN3E_ZCVb2mrLVOghMrr1APjYX8WxQ@mail.gmail.com>
	<AE2AAAAB-33BB-4B00-B06F-D69E71C8685B@markoheijnen.nl>
	<CAEgmxaaXKrq8DzzG_f=J5+uP47RCzbq1Ef6WVFoKWRPJYGkFRg@mail.gmail.com>
Message-ID: <BC4B435B-507A-4026-BD0B-15A439D20B3E@markoheijnen.nl>

I got the feeling why it isn't fixed. The issue is fixed but there still can be issues with images edited in 3.5.
Will going to ask if we call this good enough to be fixed.

Marko


Op 30 jan. 2013, om 12:57 heeft Tom Barrett <tcbarrett at gmail.com> het volgende geschreven:

> Only that I couldn't see it explicitly noted anywhere. I guess I just don't
> understand trac properly.
> 
> http://core.trac.wordpress.org/query?group=status&milestone=3.5.1
> It assigned, not closed like all the others.
> 
> http://wordpress.org/news/2013/01/wordpress-3-5-1/
> Don't see it mentioned.
> 
> I have no evidence that it hasn't been fixed. Can no longer replicate the
> problem after updating to 3.5.1.
> 
> So I thought I would ask.
> 
> 
> On 30 January 2013 11:51, Marko Heijnen <mailing at markoheijnen.nl> wrote:
> 
>> Hey Tom,
>> 
>> Yes, it it fixed in that release. Any reason that you asked that?
>> 
>> Marko
>> 
>> Op 30 jan. 2013, om 12:50 heeft Tom Barrett <tcbarrett at gmail.com> het
>> volgende geschreven:
>> 
>>> http://core.trac.wordpress.org/ticket/22985
>>> 
>>> Is this meta data issue fixed in the 3.5.1 release?
>>> 
>>> Thanks,
>>> Tom
>>> 
>>> --
>>> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
>>> http://twitter.com/tcbarrett
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> 
> 
> -- 
> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> http://twitter.com/tcbarrett
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From roberto at digitalbrands.com  Wed Jan 30 21:29:40 2013
From: roberto at digitalbrands.com (Roberto Sanchez)
Date: Wed, 30 Jan 2013 16:29:40 -0500
Subject: [wp-hackers] Possible Wordpress or MySQL bug on different Ubuntu
	versions?
Message-ID: <CAKHCZSXAz5dhaYZBEOej+TEqUnMBsKRAzrR_bpknYqGwfO0zaw@mail.gmail.com>

Please excuse the long email, I wanted to include all relevant details.

I've run across a really weird bug with WP_Query that seems to depend on
the version of Ubuntu I'm using.

I'm running Wordpress on a VPS that runs Ubuntu. The weird bug has to do
with sorting. For reference, here are the arguments I'm passing to WP_Query:

$query_args = array(
    'post_type' => 'coupon',
    'posts_per_page' => 10,
    'paged' => $current_page,
    'orderby' => 'meta_value_num',
    'order' => 'DESC',
    'meta_key' => 'score',
    'post_status' => 'publish',
    'tax_query' => array(
        array(
            'taxonomy' => 'merchant',
            'field' => 'slug',
            'terms' => $slug
        )
    ),
    'meta_query' => array(
        array(
            'key' => 'startdate',
            'value' => date( 'c' ),
            'compare' => '<=',
            'type' => 'DATETIME'
        ),
    )
);

I'm getting posts of post_type 'coupon', associated with a 'merchant'
taxonomy, filtered to show only posts with a 'startdate' post meta that is
before the current time, and ordering them by post meta 'score'.

The query could return many posts with the same 'score', and here is where
the problem starts. The query returns posts correctly ordered by 'score',
but if I have for example 20 posts in a row with the same 'score', there's
no guarantee it would return all those posts in the same order. Those 20
posts with the same 'score', while correctly coming after posts with a
higher 'score' but before posts with a 'lower' score, will come in complete
random order among posts with the same 'score'. This is a problem because I
am getting 10 posts per page, so with those 20 posts being randomized, I
could load a duplicate post on a later page.

The weird part about this bug is that it seems to depend on Ubuntu
versions. My development site was running on 11.04, while my live site was
running on 12.04. I was only having the sorting problem on the live site,
and after ensuring every other setting was identical between the live site
and the development site, I upgraded my development site to 12.04 from
11.04, and now I have the sorting problem on both sites. So it seems that
this is not a problem on 11.04, but it is a problem on 12.04.

I tried taking the MySQL query that wpdb runs, and running it directly from
phpmyadmin, and the posts were returned in random order there, so it makes
me think it's less a wordpress problem, more a MySQL problem. PHP, Apache,
and MySQL were all upgraded when I upgraded my development VPS from Ubuntu
11.04 to 12.04.

There is a workaround, however. I first thought to try ordering the posts
by post ID as well, to see if that would ensure the posts get returned in
the same order every time. I changed the WP_Query argument 'orderby' to
this:

'orderby' => 'meta_value_num ID'

This should order by 'score' first, then by post ID. However, trying this,
it returned the posts in reverse 'score' order, and changing 'order' from
'DESC' to 'ASC' had no effect.

I checked what query wpdb is using after adding ID to 'orderby', and the
orderby clause looks like this:

ORDER BY wp_postmeta.meta_value+0 ,wp_posts.ID DESC

So I tried using a 'posts_orderby' filter to append wp_posts.ID DESC to the
orderby clause, to have it looks like this:

ORDERBY wp_postmeta.meta_value+0 DESC, wp_posts.ID DESC

With this, it finally returns the post in correct 'score' order, and
returns all posts in the same order each time the query is run.

I'm looking for any insight as to why I should need to do this workaround
when I'm running my Wordpress website on Ubuntu 12.04, and why I don't need
it on 11.04.  Does anyone know any possible changes to MySQL that could
have caused this? Maybe any changes to Wordpress from 3.5 to 3.5.1 could
have caused this? I found a workaround, but it feels like a hack and I
would rather know why I need it, to see if there's a more elegant solution
possible.

Thanks.

From jbutkus at time.ly  Wed Jan 30 21:40:49 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Wed, 30 Jan 2013 21:40:49 +0000
Subject: [wp-hackers] Possible Wordpress or MySQL bug on different
 Ubuntu versions?
In-Reply-To: <CAKHCZSXAz5dhaYZBEOej+TEqUnMBsKRAzrR_bpknYqGwfO0zaw@mail.gmail.com>
References: <CAKHCZSXAz5dhaYZBEOej+TEqUnMBsKRAzrR_bpknYqGwfO0zaw@mail.gmail.com>
Message-ID: <0000013c8d67b520-60f04f84-80dc-4704-adbe-90f3b94a9f96-000000@email.amazonses.com>

It is clearly a MySQL related issue. But not necessarily related to some 
particular version - you might, just, have not experienced it up until now.

The issue is as following: if you provide a query to MySQL, where MySQL 
may not decide particular order for records returned, the result, where 
order is not specified, will be returned in *random* order.

Here I highlight *random*, because it is not fully random, and is 
decided by the way, rows are stored. And here "rows are stored" does not 
mean "in ascending order by primary key". It means - how records are 
stored in physical media, that is - disk drive, where MySQL writes data to.

Although your solution may be a bit hack'ish (as specification is 
ambiguous) - it is the correct solution. You must always clearly specify 
the order, in which you would like your rows to be returned.

Between consequent runs the rows shall be returned in the same (likely 
*random*) order, although that may not be true, as when MySQL reads rows 
from the disk, it may store that data in RAM. Since that point ordering 
may change the second time.

Why you have experienced it just after upgrading to some different OS 
version? It may be, that new versions ships different MySQL 
configuration file, which tells MySQL to store more data on RAM, and 
previously your records were always re-read from disk, and are now 
fetched from RAM.

Despite that, it is still an interesting issue, and may be worth a 
second look, as MySQL shall live to the promise, to return the same 
data, until it is changed. And by "same data" one may mean records order 
as well.


-- 
Regards,
Justas

On 2013.01.30 23:29, Roberto Sanchez wrote:
> Please excuse the long email, I wanted to include all relevant details.
>
> I've run across a really weird bug with WP_Query that seems to depend on
> the version of Ubuntu I'm using.
>
> I'm running Wordpress on a VPS that runs Ubuntu. The weird bug has to do
> with sorting. For reference, here are the arguments I'm passing to WP_Query:
>
> $query_args = array(
>      'post_type' => 'coupon',
>      'posts_per_page' => 10,
>      'paged' => $current_page,
>      'orderby' => 'meta_value_num',
>      'order' => 'DESC',
>      'meta_key' => 'score',
>      'post_status' => 'publish',
>      'tax_query' => array(
>          array(
>              'taxonomy' => 'merchant',
>              'field' => 'slug',
>              'terms' => $slug
>          )
>      ),
>      'meta_query' => array(
>          array(
>              'key' => 'startdate',
>              'value' => date( 'c' ),
>              'compare' => '<=',
>              'type' => 'DATETIME'
>          ),
>      )
> );
>
> I'm getting posts of post_type 'coupon', associated with a 'merchant'
> taxonomy, filtered to show only posts with a 'startdate' post meta that is
> before the current time, and ordering them by post meta 'score'.
>
> The query could return many posts with the same 'score', and here is where
> the problem starts. The query returns posts correctly ordered by 'score',
> but if I have for example 20 posts in a row with the same 'score', there's
> no guarantee it would return all those posts in the same order. Those 20
> posts with the same 'score', while correctly coming after posts with a
> higher 'score' but before posts with a 'lower' score, will come in complete
> random order among posts with the same 'score'. This is a problem because I
> am getting 10 posts per page, so with those 20 posts being randomized, I
> could load a duplicate post on a later page.
>
> The weird part about this bug is that it seems to depend on Ubuntu
> versions. My development site was running on 11.04, while my live site was
> running on 12.04. I was only having the sorting problem on the live site,
> and after ensuring every other setting was identical between the live site
> and the development site, I upgraded my development site to 12.04 from
> 11.04, and now I have the sorting problem on both sites. So it seems that
> this is not a problem on 11.04, but it is a problem on 12.04.
>
> I tried taking the MySQL query that wpdb runs, and running it directly from
> phpmyadmin, and the posts were returned in random order there, so it makes
> me think it's less a wordpress problem, more a MySQL problem. PHP, Apache,
> and MySQL were all upgraded when I upgraded my development VPS from Ubuntu
> 11.04 to 12.04.
>
> There is a workaround, however. I first thought to try ordering the posts
> by post ID as well, to see if that would ensure the posts get returned in
> the same order every time. I changed the WP_Query argument 'orderby' to
> this:
>
> 'orderby' => 'meta_value_num ID'
>
> This should order by 'score' first, then by post ID. However, trying this,
> it returned the posts in reverse 'score' order, and changing 'order' from
> 'DESC' to 'ASC' had no effect.
>
> I checked what query wpdb is using after adding ID to 'orderby', and the
> orderby clause looks like this:
>
> ORDER BY wp_postmeta.meta_value+0 ,wp_posts.ID DESC
>
> So I tried using a 'posts_orderby' filter to append wp_posts.ID DESC to the
> orderby clause, to have it looks like this:
>
> ORDERBY wp_postmeta.meta_value+0 DESC, wp_posts.ID DESC
>
> With this, it finally returns the post in correct 'score' order, and
> returns all posts in the same order each time the query is run.
>
> I'm looking for any insight as to why I should need to do this workaround
> when I'm running my Wordpress website on Ubuntu 12.04, and why I don't need
> it on 11.04.  Does anyone know any possible changes to MySQL that could
> have caused this? Maybe any changes to Wordpress from 3.5 to 3.5.1 could
> have caused this? I found a workaround, but it feels like a hack and I
> would rather know why I need it, to see if there's a more elegant solution
> possible.
>
> Thanks.


From otto at ottodestruct.com  Wed Jan 30 22:02:51 2013
From: otto at ottodestruct.com (Otto)
Date: Wed, 30 Jan 2013 16:02:51 -0600
Subject: [wp-hackers] Possible Wordpress or MySQL bug on different
	Ubuntu versions?
In-Reply-To: <CAKHCZSXAz5dhaYZBEOej+TEqUnMBsKRAzrR_bpknYqGwfO0zaw@mail.gmail.com>
References: <CAKHCZSXAz5dhaYZBEOej+TEqUnMBsKRAzrR_bpknYqGwfO0zaw@mail.gmail.com>
Message-ID: <CAD-FghzA2FO5SHYHKf6njmRxJ8cgwELuJYezsFGEYFDaZK1sLw@mail.gmail.com>

On Wed, Jan 30, 2013 at 3:29 PM, Roberto Sanchez
<roberto at digitalbrands.com> wrote:
> I tried taking the MySQL query that wpdb runs, and running it directly from
> phpmyadmin, and the posts were returned in random order there, so it makes
> me think it's less a wordpress problem, more a MySQL problem. PHP, Apache,
> and MySQL were all upgraded when I upgraded my development VPS from Ubuntu
> 11.04 to 12.04.

What version is MySQL, before and after?

Because this sort of thing is not new:
http://wordpress.org/support/topic/solution-for-posts-suddenly-appearing-in-reverse-order?replies=15

-Otto

From otto at ottodestruct.com  Wed Jan 30 22:07:18 2013
From: otto at ottodestruct.com (Otto)
Date: Wed, 30 Jan 2013 16:07:18 -0600
Subject: [wp-hackers] Possible Wordpress or MySQL bug on different
	Ubuntu versions?
In-Reply-To: <CAKHCZSXAz5dhaYZBEOej+TEqUnMBsKRAzrR_bpknYqGwfO0zaw@mail.gmail.com>
References: <CAKHCZSXAz5dhaYZBEOej+TEqUnMBsKRAzrR_bpknYqGwfO0zaw@mail.gmail.com>
Message-ID: <CAD-Fghwpdr2psmp3T9AuT9a8oKv8iQpQ=CqemCgGEffnSyuYGQ@mail.gmail.com>

On Wed, Jan 30, 2013 at 3:29 PM, Roberto Sanchez
<roberto at digitalbrands.com> wrote:
> The query could return many posts with the same 'score', and here is where
> the problem starts. The query returns posts correctly ordered by 'score',
> but if I have for example 20 posts in a row with the same 'score', there's
> no guarantee it would return all those posts in the same order.

Oh, sorry, I missed this bit before.

No, this is not a MySQL bug, nor is it a WordPress bug. If you specify
an order in SQL, and two rows have the same value, then their order is
undefined and not guaranteed. The fact that MySQL returns them in any
particular order is not a constant nor absolute, and may change
between versions, phases of the moon, that sort of thing.

Your solution isn't really "hacky" so much as it is necessary, because
you want a well-defined order but are using an ordering system (score,
in your case) that is not well-defined. Adding the ID onto it makes it
unique and well-defined.

The fact that it changed in some version probably had something to do
with the way MySQL reads or stores data, or whatever. Point being it's
not a bug because it is undefined behavior to order by a field with
more than one of the same value in it.

-Otto

From roberto at digitalbrands.com  Wed Jan 30 22:54:46 2013
From: roberto at digitalbrands.com (Roberto Sanchez)
Date: Wed, 30 Jan 2013 17:54:46 -0500
Subject: [wp-hackers] Possible Wordpress or MySQL bug on different
	Ubuntu versions?
Message-ID: <CAKHCZSWDzQqwhqpM90bnDrJeDn-qvx5zTJ7jbdXUN8MPJwZzGA@mail.gmail.com>

Thanks for the feedback. It must be a change in the configuration that
tells MySQL how to read data then.

However, there is one more thing. The reason why I had to implement my
'hack-ish' solution is because I tried the equivalent from WP_Query and it
returned the posts in reverse 'score' order. In my first email I had
mentioned that changing the order from 'DESC' to 'ASC' had no effect on the
order, so I had to add the posts_orderby filter to change the orderby
clause from this:

ORDER BY wp_postmeta.value+0, wp_posts.ID DESC

to this

ORDER BY wp_postmeta.value+0 DESC, wp_posts.ID DESC

As far as I could tell, there's no way to specify individual ordering for
each orderby parameter. Is there a way to do this, or is the filter the
only way?

Thanks very much for the assistance!

From goldenapplesdesign at gmail.com  Wed Jan 30 23:40:07 2013
From: goldenapplesdesign at gmail.com (Nathaniel Taintor)
Date: Wed, 30 Jan 2013 15:40:07 -0800
Subject: [wp-hackers] Possible Wordpress or MySQL bug on different
	Ubuntu versions?
In-Reply-To: <CAD-Fghwpdr2psmp3T9AuT9a8oKv8iQpQ=CqemCgGEffnSyuYGQ@mail.gmail.com>
References: <CAKHCZSXAz5dhaYZBEOej+TEqUnMBsKRAzrR_bpknYqGwfO0zaw@mail.gmail.com>
	<CAD-Fghwpdr2psmp3T9AuT9a8oKv8iQpQ=CqemCgGEffnSyuYGQ@mail.gmail.com>
Message-ID: <CAH+NfoDOW_n68RX-YpjFfJOwaHuUcUrivRmcfo19PXLAOm7OqQ@mail.gmail.com>

An interesting issue posed by this question, though, is how the "orderby"
array in WP_Query is parsed.

It strikes me that issues like this would be more easily managed if a query
that includes

    'orderby' => 'meta_value_num ID'
    'order' => 'DESC'

was parsed to the SQL one would expect, ie

    'ORDERBY wp_postmeta.meta_value+0 DESC, wp_posts.ID DESC',

rather than

    'ORDERBY wp_postmeta.meta_value+0, wp_posts.ID DESC'

Maybe even better would be if the orderby query variable could be extended
to take an array of parameters and orders, ie

    'orderby' => array(
        array(
            'param' => 'meta_value_num',
            'order' => 'DESC'
        ),
        array(
            'param' => 'ID',
            'order' => 'ASC'
        ),
    ),

I don't see any tickets related to that on trac right now. Has it been
discussed as a possible enhancement?

From wordpress at dd32.id.au  Wed Jan 30 23:51:23 2013
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Thu, 31 Jan 2013 10:51:23 +1100
Subject: [wp-hackers] Possible Wordpress or MySQL bug on different
	Ubuntu versions?
In-Reply-To: <CAKHCZSWDzQqwhqpM90bnDrJeDn-qvx5zTJ7jbdXUN8MPJwZzGA@mail.gmail.com>
References: <CAKHCZSWDzQqwhqpM90bnDrJeDn-qvx5zTJ7jbdXUN8MPJwZzGA@mail.gmail.com>
Message-ID: <CAL4EHf=eeM+zsjpyN+OpUYh4nZ5miOqd4eXqvUS21kwmSB0d_A@mail.gmail.com>

On 31 January 2013 09:54, Roberto Sanchez <roberto at digitalbrands.com> wrote:
> ORDER BY wp_postmeta.value+0 DESC, wp_posts.ID DESC
>
> As far as I could tell, there's no way to specify individual ordering for
> each orderby parameter. Is there a way to do this, or is the filter the
> only way?

The filter is the only way at present.
There's an old ticket somewhere with a very outdated patch from me
that needs to be rewritten..

From goldenapplesdesign at gmail.com  Thu Jan 31 00:03:30 2013
From: goldenapplesdesign at gmail.com (Nathaniel Taintor)
Date: Wed, 30 Jan 2013 16:03:30 -0800
Subject: [wp-hackers] Possible Wordpress or MySQL bug on different
	Ubuntu versions?
In-Reply-To: <CAL4EHf=eeM+zsjpyN+OpUYh4nZ5miOqd4eXqvUS21kwmSB0d_A@mail.gmail.com>
References: <CAKHCZSWDzQqwhqpM90bnDrJeDn-qvx5zTJ7jbdXUN8MPJwZzGA@mail.gmail.com>
	<CAL4EHf=eeM+zsjpyN+OpUYh4nZ5miOqd4eXqvUS21kwmSB0d_A@mail.gmail.com>
Message-ID: <CAH+NfoDFpq05khgwFHgQrwUt8s=GhmKUHwauGz1hPXf31k1g6w@mail.gmail.com>

Ah, here it is:

https://core.trac.wordpress.org/ticket/17065

Nathaniel Taintor, Designer/Developer
*Golden Apples Design*
http://goldenapplesdesign.com

@GoldenApples | 717.434.3226
goldenapplesdesign at gmail.com


On Wed, Jan 30, 2013 at 3:51 PM, Dion Hulse (dd32) <wordpress at dd32.id.au>wrote:

> On 31 January 2013 09:54, Roberto Sanchez <roberto at digitalbrands.com>
> wrote:
> > ORDER BY wp_postmeta.value+0 DESC, wp_posts.ID DESC
> >
> > As far as I could tell, there's no way to specify individual ordering for
> > each orderby parameter. Is there a way to do this, or is the filter the
> > only way?
>
> The filter is the only way at present.
> There's an old ticket somewhere with a very outdated patch from me
> that needs to be rewritten..
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

