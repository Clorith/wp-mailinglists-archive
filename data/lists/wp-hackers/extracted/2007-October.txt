From usleepless at gmail.com  Mon Oct  1 00:39:07 2007
From: usleepless at gmail.com (usleepless@gmail.com)
Date: Mon Oct  1 00:43:36 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>
	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
Message-ID: <c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>

Matt,

On 10/1/07, Matt <speedboxer@gmail.com> wrote:
> Since MySQL is the required database for WordPress, I think we might as well
> take advantage of MySQL-specific features, and not try to make it all
> "generic". If we're going to only support 1 database, we should take
> advantage of that.
>
> I'm not saying this just to make using other databases harder, either. I'm
> saying it because WordPress has already decided to use just MySQL, and
> that's what you should be running it on...

first of all, i have no idea which post/comment you are replying,
since there is no quoted text ( context ) in your message.

but assuming you are referring to my latest post: i am not sure what
you mean about mysql-specific "features". i don't consider accepting
"`" in a query statement a feature. i don't consider writing LIMIT x,y
instead of LIMIT y OFFSET x a feature. i don't consider adding
"IGNORE" to an insert-statement a feature. that is just a hack.

if you are talking about the FOUND/CALC-ROWS "feature", you might have
a point. but since a statement with this feature takes longer to
execute than a statement without this feature, i suspect it is just a
dialect issue as well. i might be wrong about this.

but my post was certainly not about features. creating indices in the
create-table statement is more vendor-specific than
  CREATE INDEX indexname ON tablename(fieldname[,fieldname]*);

which works on any RDMBS.

it is about complying to standards instead of complying to vendors.

there is no specific advantage WP is currently taking advantage of
MySQL, apart from it's availability.

different RDMBS systems have different strengths: MySQL may be fast
and free, PGSQL is robust and free ( and just as fast ), MSSQL is
readily available in the windows world, Oracle .... yadayadayada.

regards,

usleep
From speedboxer at gmail.com  Mon Oct  1 00:50:45 2007
From: speedboxer at gmail.com (Matt)
Date: Mon Oct  1 00:54:48 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>
	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
Message-ID: <b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>

No particular post in particular, just saying.

I see your point, but it doesn't seem like (in my opinion) it should be
WordPress' job to make it so that other databases can be used. Forking
WordPress is the best option, if you want to use a different database than
WordPress was made for, in my opinion...


On 9/30/07, usleepless@gmail.com <usleepless@gmail.com> wrote:
>
> Matt,
>
> On 10/1/07, Matt <speedboxer@gmail.com> wrote:
> > Since MySQL is the required database for WordPress, I think we might as
> well
> > take advantage of MySQL-specific features, and not try to make it all
> > "generic". If we're going to only support 1 database, we should take
> > advantage of that.
> >
> > I'm not saying this just to make using other databases harder, either.
> I'm
> > saying it because WordPress has already decided to use just MySQL, and
> > that's what you should be running it on...
>
> first of all, i have no idea which post/comment you are replying,
> since there is no quoted text ( context ) in your message.
>
> but assuming you are referring to my latest post: i am not sure what
> you mean about mysql-specific "features". i don't consider accepting
> "`" in a query statement a feature. i don't consider writing LIMIT x,y
> instead of LIMIT y OFFSET x a feature. i don't consider adding
> "IGNORE" to an insert-statement a feature. that is just a hack.
>
> if you are talking about the FOUND/CALC-ROWS "feature", you might have
> a point. but since a statement with this feature takes longer to
> execute than a statement without this feature, i suspect it is just a
> dialect issue as well. i might be wrong about this.
>
> but my post was certainly not about features. creating indices in the
> create-table statement is more vendor-specific than
> CREATE INDEX indexname ON tablename(fieldname[,fieldname]*);
>
> which works on any RDMBS.
>
> it is about complying to standards instead of complying to vendors.
>
> there is no specific advantage WP is currently taking advantage of
> MySQL, apart from it's availability.
>
> different RDMBS systems have different strengths: MySQL may be fast
> and free, PGSQL is robust and free ( and just as fast ), MSSQL is
> readily available in the windows world, Oracle .... yadayadayada.
>
> regards,
>
> usleep
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From robin.adr at gmail.com  Mon Oct  1 01:02:29 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Mon Oct  1 01:02:35 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>
	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
Message-ID: <d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>

More specifically, WordPress isn't aiming whatsoever to be compatible with
database engines other than MySQL -- if you want to run it on something
else, then it's up to you to figure out what to do about the MySQL-specific
SQL.

On 9/30/07, Matt <speedboxer@gmail.com> wrote:
>
> No particular post in particular, just saying.
>
> I see your point, but it doesn't seem like (in my opinion) it should be
> WordPress' job to make it so that other databases can be used. Forking
> WordPress is the best option, if you want to use a different database than
> WordPress was made for, in my opinion...
>
>
> On 9/30/07, usleepless@gmail.com <usleepless@gmail.com> wrote:
> >
> > Matt,
> >
> > On 10/1/07, Matt <speedboxer@gmail.com> wrote:
> > > Since MySQL is the required database for WordPress, I think we might
> as
> > well
> > > take advantage of MySQL-specific features, and not try to make it all
> > > "generic". If we're going to only support 1 database, we should take
> > > advantage of that.
> > >
> > > I'm not saying this just to make using other databases harder, either.
> > I'm
> > > saying it because WordPress has already decided to use just MySQL, and
> > > that's what you should be running it on...
> >
> > first of all, i have no idea which post/comment you are replying,
> > since there is no quoted text ( context ) in your message.
> >
> > but assuming you are referring to my latest post: i am not sure what
> > you mean about mysql-specific "features". i don't consider accepting
> > "`" in a query statement a feature. i don't consider writing LIMIT x,y
> > instead of LIMIT y OFFSET x a feature. i don't consider adding
> > "IGNORE" to an insert-statement a feature. that is just a hack.
> >
> > if you are talking about the FOUND/CALC-ROWS "feature", you might have
> > a point. but since a statement with this feature takes longer to
> > execute than a statement without this feature, i suspect it is just a
> > dialect issue as well. i might be wrong about this.
> >
> > but my post was certainly not about features. creating indices in the
> > create-table statement is more vendor-specific than
> > CREATE INDEX indexname ON tablename(fieldname[,fieldname]*);
> >
> > which works on any RDMBS.
> >
> > it is about complying to standards instead of complying to vendors.
> >
> > there is no specific advantage WP is currently taking advantage of
> > MySQL, apart from it's availability.
> >
> > different RDMBS systems have different strengths: MySQL may be fast
> > and free, PGSQL is robust and free ( and just as fast ), MSSQL is
> > readily available in the windows world, Oracle .... yadayadayada.
> >
> > regards,
> >
> > usleep
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Matt (speedboxer@gmail.com)
> http://mattsblog.ca/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wordpress at santosj.name  Mon Oct  1 01:22:48 2007
From: wordpress at santosj.name (Jacob)
Date: Mon Oct  1 01:24:10 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
Message-ID: <47004BE8.2040306@santosj.name>

Yeah, I've been thinking about this for some time, while I was doing the 
PHP5 port (which I've pretty much abandoned for the same reason as the 
PostgreSQL port it seems).

My thoughts was having all of the queries as filters specific to the 
function and query. You would end up with about several hundred filters, 
but it would allow for the easiest transition. It wouldn't be as hard or 
difficult as porting and can be just a plugin. It would also allow for 
removing upgrading conflicts.

Cheers

Jacob Santos
From speedboxer at gmail.com  Mon Oct  1 01:27:21 2007
From: speedboxer at gmail.com (Matt)
Date: Mon Oct  1 01:27:31 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <47004BE8.2040306@santosj.name>
References: <46FC6EC9.9010004@comcast.net>
	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name>
Message-ID: <b88434820709301827k5b8c6897odf39b1438a7bf7ed@mail.gmail.com>

On 9/30/07, Jacob <wordpress@santosj.name> wrote:
>
> My thoughts was having all of the queries as filters specific to the
> function and query. You would end up with about several hundred filters,
> but it would allow for the easiest transition. It wouldn't be as hard or
> difficult as porting and can be just a plugin. It would also allow for
> removing upgrading conflicts.
>
Wouldn't that slow WordPress down, like a lot?


-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From wordpress at dd32.id.au  Mon Oct  1 01:47:18 2007
From: wordpress at dd32.id.au (DD32)
Date: Mon Oct  1 01:46:05 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <47004BE8.2040306@santosj.name>
References: <46FC6EC9.9010004@comcast.net>
	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name>
Message-ID: <op.tzhwk4vqk6w4mc@dd32.no-ip.com>

On Mon, 01 Oct 2007 11:22:48 +1000, Jacob <wordpress@santosj.name> wrote:
> My thoughts was having all of the queries as filters specific to the
> function and query. You would end up with about several hundred filters,
> but it would allow for the easiest transition. It wouldn't be as hard or
> difficult as porting and can be just a plugin. It would also allow for
> removing upgrading conflicts.

That'd be rather pointless IMO, If your wanting to replace the database, then you use your own db class file anyway, All queries will be passed directly to the class, Your code would handle the query before its made.

It would probably be easier if all of WP used the prepare() functionality that 2.3 has introduced, AFAIK that means it'll be using something like "SELECT `id` FROM `table` WHERE `name` = '%s' ORDER BY %s" with parameters passed in, It would make it a lot easier for the database class to replace 'dodgy' queries with something more friendly for that database.

D
From wordpress at santosj.name  Mon Oct  1 01:58:39 2007
From: wordpress at santosj.name (Jacob)
Date: Mon Oct  1 02:00:02 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <b88434820709301827k5b8c6897odf39b1438a7bf7ed@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<47004BE8.2040306@santosj.name>
	<b88434820709301827k5b8c6897odf39b1438a7bf7ed@mail.gmail.com>
Message-ID: <4700544F.8070407@santosj.name>

Yes, yes it would most likely slow WordPress down a lot.

I was thinking more of a custom filter solution. For example:

instead of add_filter('sql_fetch_category_xyz', 'SELECT * FROM whatever');

more like:

wp_sql_filter($tag, $sql)
{
global $database_type;

$results = '';

$function = $tag.'_'.$database_type;

if( function_exists($function) )
{
    $results = $function($sql); // Err, would this work? Might just have 
to use call_user_func() instead.
    return $results;
}

return false;
}

In this way, you would only need to check to see whether the function 
existed. This would "solved" (crossed your fingers) the incompatibility 
of $wpdb, as it would be bypassed completely. The pseudo-code would be 
quick as hell as it would remove the overhead of _wp_filter_unique_id() 
and the rest of the Filter/Action API.

It could be used in the code, like so:

// ... snip

$sql = 'SELECT * FROM wp_tags';
$results = wp_sql_filter('wp_get_tags', $sql);

if($results  !== false)
{
    $results = $wpdb->fetch_query($sql);
}

return $results;


Matt wrote:
> On 9/30/07, Jacob <wordpress@santosj.name> wrote:
>   
>> My thoughts was having all of the queries as filters specific to the
>> function and query. You would end up with about several hundred filters,
>> but it would allow for the easiest transition. It wouldn't be as hard or
>> difficult as porting and can be just a plugin. It would also allow for
>> removing upgrading conflicts.
>>
>>     
> Wouldn't that slow WordPress down, like a lot?
>
>
>   

From speedboxer at gmail.com  Mon Oct  1 02:03:09 2007
From: speedboxer at gmail.com (Matt)
Date: Mon Oct  1 02:03:15 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <4700544F.8070407@santosj.name>
References: <46FC6EC9.9010004@comcast.net>
	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name>
	<b88434820709301827k5b8c6897odf39b1438a7bf7ed@mail.gmail.com>
	<4700544F.8070407@santosj.name>
Message-ID: <b88434820709301903i6689ef74k7ee948a9781c8b9c@mail.gmail.com>

Still, WP only supports MySQL, and making it easier for people to drop-in
support for other DBs seems unnecessary (when you only support 1 db)...

On 9/30/07, Jacob <wordpress@santosj.name> wrote:
>
> Yes, yes it would most likely slow WordPress down a lot.
>
> I was thinking more of a custom filter solution. For example:
>
> instead of add_filter('sql_fetch_category_xyz', 'SELECT * FROM whatever');
>
> more like:
>
> wp_sql_filter($tag, $sql)
> {
> global $database_type;
>
> $results = '';
>
> $function = $tag.'_'.$database_type;
>
> if( function_exists($function) )
> {
>    $results = $function($sql); // Err, would this work? Might just have
> to use call_user_func() instead.
>    return $results;
> }
>
> return false;
> }
>
> In this way, you would only need to check to see whether the function
> existed. This would "solved" (crossed your fingers) the incompatibility
> of $wpdb, as it would be bypassed completely. The pseudo-code would be
> quick as hell as it would remove the overhead of _wp_filter_unique_id()
> and the rest of the Filter/Action API.
>
> It could be used in the code, like so:
>
> // ... snip
>
> $sql = 'SELECT * FROM wp_tags';
> $results = wp_sql_filter('wp_get_tags', $sql);
>
> if($results  !== false)
> {
>    $results = $wpdb->fetch_query($sql);
> }
>
> return $results;
>
>
> Matt wrote:
> > On 9/30/07, Jacob <wordpress@santosj.name> wrote:
> >
> >> My thoughts was having all of the queries as filters specific to the
> >> function and query. You would end up with about several hundred
> filters,
> >> but it would allow for the easiest transition. It wouldn't be as hard
> or
> >> difficult as porting and can be just a plugin. It would also allow for
> >> removing upgrading conflicts.
> >>
> >>
> > Wouldn't that slow WordPress down, like a lot?
> >
> >
> >
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From wordpress at santosj.name  Mon Oct  1 02:01:54 2007
From: wordpress at santosj.name (Jacob)
Date: Mon Oct  1 02:03:19 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<47004BE8.2040306@santosj.name>
	<op.tzhwk4vqk6w4mc@dd32.no-ip.com>
Message-ID: <47005512.1030003@santosj.name>

Ah, not bad, if you replace the global $wpdb with your class and provide 
the same methods and properties, that would work.

However, my previous post is an possible implementation that wouldn't 
require this step.

Jacob Santos

DD32 wrote:
> On Mon, 01 Oct 2007 11:22:48 +1000, Jacob <wordpress@santosj.name> wrote:
>   
>> My thoughts was having all of the queries as filters specific to the
>> function and query. You would end up with about several hundred filters,
>> but it would allow for the easiest transition. It wouldn't be as hard or
>> difficult as porting and can be just a plugin. It would also allow for
>> removing upgrading conflicts.
>>     
>
> That'd be rather pointless IMO, If your wanting to replace the database, then you use your own db class file anyway, All queries will be passed directly to the class, Your code would handle the query before its made.
>
> It would probably be easier if all of WP used the prepare() functionality that 2.3 has introduced, AFAIK that means it'll be using something like "SELECT `id` FROM `table` WHERE `name` = '%s' ORDER BY %s" with parameters passed in, It would make it a lot easier for the database class to replace 'dodgy' queries with something more friendly for that database.
>
> D
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From computerguru at neosmart.net  Mon Oct  1 02:06:31 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Mon Oct  1 02:06:43 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
Message-ID: <000001c803cf$b1b434f0$151c9ed0$@net>

> More specifically, WordPress isn't aiming whatsoever to be compatible
> with
> database engines other than MySQL -- if you want to run it on something
> else, then it's up to you to figure out what to do about the MySQL-
> specific
> SQL.

Don't you mean: WordPress isn't aiming whatsoever /at the moment/  to be compatible with....?

Think of it like adding another hook - you're not /losing/ anything, but you are providing WordPress users with huge possibilities. If someone is willing to undergo writing code that will /not harm/ WP *and* add the needed GENERIC (as in not PGSQL-specific) code needed to make multi-database support happen - what's your argument?

It sounds like you're against the idea of anything other than MySQL, even though all of the concerns outlined in the Codex *and* here in the ML would be addressed...

I could be wrong, of course.

Computer Guru
NeoSmart Technologies
http://neosmart.net/

From computerguru at neosmart.net  Mon Oct  1 02:21:29 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Mon Oct  1 02:21:39 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <4700544F.8070407@santosj.name>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<47004BE8.2040306@santosj.name>	<b88434820709301827k5b8c6897odf39b1438a7bf7ed@mail.gmail.com>
	<4700544F.8070407@santosj.name>
Message-ID: <000101c803d1$c8a083b0$59e18b10$@net>

I don't understand why you have to do all that in the first place - shouldn't overloading/replacing wp-db with a wp-db2 do the trick?

In the code you have stuff like

(taken from the code at random)

$arc_result = $wpdb->get_results( $arc_query );


So the changes you'd need:

Check if wp-db2.php exists.
If it does, load $wp-db2 instead of $wp-db.

wp-db2.php can contain all the MySQL to PGSQL voodoo...

At that point, if you have rewritten the base WP queries to support multiple databases you should be good to go. If you haven't - that's what the MySQL to PGSQL rewriter functions are for. No need to actually *manually* modify any queries assuming they're originally written correctly and that your regex/str functions do their conversion properly.

It'd require minimal modification of WP-core and wouldn't add any load at all for non-PGSQL users (and for PGSQL users it'd only add 50 or so regex calls, not that big of a deal).


Computer Guru
NeoSmart Technologies
http://neosmart.net/


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of Jacob
> Sent: Monday, October 01, 2007 4:59 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] PostgreSQL port status?
> 
> Yes, yes it would most likely slow WordPress down a lot.
> 
> I was thinking more of a custom filter solution. For example:
> 
> instead of add_filter('sql_fetch_category_xyz', 'SELECT * FROM
> whatever');
> 
> more like:
> 
> wp_sql_filter($tag, $sql)
> {
> global $database_type;
> 
> $results = '';
> 
> $function = $tag.'_'.$database_type;
> 
> if( function_exists($function) )
> {
>     $results = $function($sql); // Err, would this work? Might just
> have
> to use call_user_func() instead.
>     return $results;
> }
> 
> return false;
> }
> 
> In this way, you would only need to check to see whether the function
> existed. This would "solved" (crossed your fingers) the incompatibility
> of $wpdb, as it would be bypassed completely. The pseudo-code would be
> quick as hell as it would remove the overhead of _wp_filter_unique_id()
> and the rest of the Filter/Action API.
> 
> It could be used in the code, like so:
> 
> // ... snip
> 
> $sql = 'SELECT * FROM wp_tags';
> $results = wp_sql_filter('wp_get_tags', $sql);
> 
> if($results  !== false)
> {
>     $results = $wpdb->fetch_query($sql);
> }
> 
> return $results;
> 
> 
> Matt wrote:
> > On 9/30/07, Jacob <wordpress@santosj.name> wrote:
> >
> >> My thoughts was having all of the queries as filters specific to the
> >> function and query. You would end up with about several hundred
> filters,
> >> but it would allow for the easiest transition. It wouldn't be as
> hard or
> >> difficult as porting and can be just a plugin. It would also allow
> for
> >> removing upgrading conflicts.
> >>
> >>
> > Wouldn't that slow WordPress down, like a lot?
> >
> >
> >
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From speedboxer at gmail.com  Mon Oct  1 02:26:33 2007
From: speedboxer at gmail.com (Matt)
Date: Mon Oct  1 02:26:39 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <000001c803cf$b1b434f0$151c9ed0$@net>
References: <46FC6EC9.9010004@comcast.net>
	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<000001c803cf$b1b434f0$151c9ed0$@net>
Message-ID: <b88434820709301926o104c88dej4277416a570d04e3@mail.gmail.com>

There's nothing wrong with WP supporting multiple DBs, but doing so in a way
that doesn't interfere with anything is the problem...

On 9/30/07, Computer Guru <computerguru@neosmart.net> wrote:
>
> > More specifically, WordPress isn't aiming whatsoever to be compatible
> > with
> > database engines other than MySQL -- if you want to run it on something
> > else, then it's up to you to figure out what to do about the MySQL-
> > specific
> > SQL.
>
> Don't you mean: WordPress isn't aiming whatsoever /at the moment/  to be
> compatible with....?
>
> Think of it like adding another hook - you're not /losing/ anything, but
> you are providing WordPress users with huge possibilities. If someone is
> willing to undergo writing code that will /not harm/ WP *and* add the needed
> GENERIC (as in not PGSQL-specific) code needed to make multi-database
> support happen - what's your argument?
>
> It sounds like you're against the idea of anything other than MySQL, even
> though all of the concerns outlined in the Codex *and* here in the ML would
> be addressed...
>
> I could be wrong, of course.
>
> Computer Guru
> NeoSmart Technologies
> http://neosmart.net/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From jared at pacific22.com  Mon Oct  1 02:46:57 2007
From: jared at pacific22.com (Jared Bangs)
Date: Mon Oct  1 02:47:02 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <b88434820709301926o104c88dej4277416a570d04e3@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>
	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<000001c803cf$b1b434f0$151c9ed0$@net>
	<b88434820709301926o104c88dej4277416a570d04e3@mail.gmail.com>
Message-ID: <7b4922320709301946h5caa2b4bseee014f28d4860d8@mail.gmail.com>

On 9/30/07, Matt <speedboxer@gmail.com> wrote:
> There's nothing wrong with WP supporting multiple DBs, but doing so in a way
> that doesn't interfere with anything is the problem...
>

Yeah, I would think that if a drop in replacement for the wp-db file
could do the trick (although it would probably not be optimal), it
might be useful to add a hook at the point of $wpdb assignment, to
facilitate overrides by plugins rather than having to replace and/or
modify the core files.

I also imagine that there would have to be some performance trade-offs
with doing it that way; specifically involving potentially rewriting
every query (with regex, etc.) before it's executed.

Support on an "equal" level would probably be more complicated, as it
should involve replacing (or at least adding specific replacement
hooks for) any vendor specific SQL throughout the app.

The latter might be quite the undertaking, but I could see the value
in it. It would be especially useful to already have in place if the
situation ever came up where PGSQL (or any other DB) releases a new
version that breaks all speed records and becomes the clear choice for
performance, etc.

Whether that (and portability in general) is enough to justify all the
work required to get there is a matter that lots of people would
probably have strong opinions on, on both sides of the issue.

For me, it comes down to two things: (1) cost / benefit analysis (are
the potential gains worth the extra effort), and (2) would these types
of changes (to the core code to better facilitate portability) be in
line with the vision of the core devs.

The second will greatly impact the first. I'd be interested in helping
out with the changes just for the fun of it, but if the consensus is
that we don't want to go there (in core), it probably wouldn't be
worthwhile to prepare all the patches, etc.

- Jared
From robin.adr at gmail.com  Mon Oct  1 02:48:03 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Mon Oct  1 02:48:09 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <000001c803cf$b1b434f0$151c9ed0$@net>
References: <46FC6EC9.9010004@comcast.net>
	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<000001c803cf$b1b434f0$151c9ed0$@net>
Message-ID: <d135ca9c0709301948y31056893web5de61a54b855e2@mail.gmail.com>

I don't think (though Matt would be the one to confirm this) that WordPress
is aiming to be compatible with anything but MySQL for the indefinite
future. Efforts to add another database engine have been attempted, but I
have yet to see a complete and fully functional one, without much
detrimental effect on speed.

I believe the rationale for supporting only MySQL is that we can use
MySQL-specific features such as FULLTEXT indices (which really should be
used for searches), and to keep support as easy as possible. Not to mention
MySQL is one of the best DBMS' out there, and is likely the widest deployed.

There are concerns on the ML and the Codex that will likely never get
addressed. That is life. WordPress can't possibly do everything people want
it to do and in every way possible. That would be bloat.

On 9/30/07, Computer Guru <computerguru@neosmart.net> wrote:
>
> > More specifically, WordPress isn't aiming whatsoever to be compatible
> > with
> > database engines other than MySQL -- if you want to run it on something
> > else, then it's up to you to figure out what to do about the MySQL-
> > specific
> > SQL.
>
> Don't you mean: WordPress isn't aiming whatsoever /at the moment/  to be
> compatible with....?
>
> Think of it like adding another hook - you're not /losing/ anything, but
> you are providing WordPress users with huge possibilities. If someone is
> willing to undergo writing code that will /not harm/ WP *and* add the needed
> GENERIC (as in not PGSQL-specific) code needed to make multi-database
> support happen - what's your argument?
>
> It sounds like you're against the idea of anything other than MySQL, even
> though all of the concerns outlined in the Codex *and* here in the ML would
> be addressed...
>
> I could be wrong, of course.
>
> Computer Guru
> NeoSmart Technologies
> http://neosmart.net/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From computerguru at neosmart.net  Mon Oct  1 03:07:48 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Mon Oct  1 03:08:02 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <47005512.1030003@santosj.name>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<47004BE8.2040306@santosj.name>	<op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<47005512.1030003@santosj.name>
Message-ID: <000301c803d8$40fd9900$c2f8cb00$@net>

I'm trying to do just that right now, but I'm getting the weirdest PHP error I've ever seen :S


	function wp_select_db($dbname, $connection_id)
	{
		global $server;
		$conn =  @pg_connect("host={$server->host} user={$server->user} password={$server->pass} dbname=$dbname"); 
		$server->user = '';
		$server->pass = '';
		$server->host = '';
		return $conn;
	}

	// ==================================================================
	//	Select a DB (if another one needs to be selected)

	function select($db, &$dbh) {
		if ( !wp_select_db($dbh, $db) ) {
		$this->bail("error message");
		}
	}


It *INSISTS* that wp_select_db does not exist....
Fatal error: Call to undefined function wp_select_db() in c:\Inetpub\wwwroot\blog\wp-content\db.php on line 140

I've tried renaming the function and moving the definition, but it is adamantly refusing to see the function I defined /just/ above it.. 

Any ideas?

Computer Guru
NeoSmart Technologies
http://neosmart.net/


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of Jacob
> Sent: Monday, October 01, 2007 5:02 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] PostgreSQL port status?
> 
> Ah, not bad, if you replace the global $wpdb with your class and
> provide
> the same methods and properties, that would work.
> 
> However, my previous post is an possible implementation that wouldn't
> require this step.
> 
> Jacob Santos
> 
> DD32 wrote:
> > On Mon, 01 Oct 2007 11:22:48 +1000, Jacob <wordpress@santosj.name>
> wrote:
> >
> >> My thoughts was having all of the queries as filters specific to the
> >> function and query. You would end up with about several hundred
> filters,
> >> but it would allow for the easiest transition. It wouldn't be as
> hard or
> >> difficult as porting and can be just a plugin. It would also allow
> for
> >> removing upgrading conflicts.
> >>
> >
> > That'd be rather pointless IMO, If your wanting to replace the
> database, then you use your own db class file anyway, All queries will
> be passed directly to the class, Your code would handle the query
> before its made.
> >
> > It would probably be easier if all of WP used the prepare()
> functionality that 2.3 has introduced, AFAIK that means it'll be using
> something like "SELECT `id` FROM `table` WHERE `name` = '%s' ORDER BY
> %s" with parameters passed in, It would make it a lot easier for the
> database class to replace 'dodgy' queries with something more friendly
> for that database.
> >
> > D
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at santosj.name  Mon Oct  1 03:15:32 2007
From: wordpress at santosj.name (Jacob)
Date: Mon Oct  1 03:16:57 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <000301c803d8$40fd9900$c2f8cb00$@net>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<47004BE8.2040306@santosj.name>	<op.tzhwk4vqk6w4mc@dd32.no-ip.com>	<47005512.1030003@santosj.name>
	<000301c803d8$40fd9900$c2f8cb00$@net>
Message-ID: <47006654.7050507@santosj.name>

Is this function in the class? I'm not sure from the missing other 140 
lines before it. If I had the other 140 lines or answer my first question.

Jacob Santos

Computer Guru wrote:
> I'm trying to do just that right now, but I'm getting the weirdest PHP error I've ever seen :S
>
>
> 	function wp_select_db($dbname, $connection_id)
> 	{
> 		global $server;
> 		$conn =  @pg_connect("host={$server->host} user={$server->user} password={$server->pass} dbname=$dbname"); 
> 		$server->user = '';
> 		$server->pass = '';
> 		$server->host = '';
> 		return $conn;
> 	}
>
> 	// ==================================================================
> 	//	Select a DB (if another one needs to be selected)
>
> 	function select($db, &$dbh) {
> 		if ( !wp_select_db($dbh, $db) ) {
> 		$this->bail("error message");
> 		}
> 	}
>
>
> It *INSISTS* that wp_select_db does not exist....
> Fatal error: Call to undefined function wp_select_db() in c:\Inetpub\wwwroot\blog\wp-content\db.php on line 140
>
> I've tried renaming the function and moving the definition, but it is adamantly refusing to see the function I defined /just/ above it.. 
>
> Any ideas?
>
> Computer Guru
> NeoSmart Technologies
> http://neosmart.net/
>
>
>   
>> -----Original Message-----
>> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
>> bounces@lists.automattic.com] On Behalf Of Jacob
>> Sent: Monday, October 01, 2007 5:02 AM
>> To: wp-hackers@lists.automattic.com
>> Subject: Re: [wp-hackers] PostgreSQL port status?
>>
>> Ah, not bad, if you replace the global $wpdb with your class and
>> provide
>> the same methods and properties, that would work.
>>
>> However, my previous post is an possible implementation that wouldn't
>> require this step.
>>
>> Jacob Santos
>>
>> DD32 wrote:
>>     
>>> On Mon, 01 Oct 2007 11:22:48 +1000, Jacob <wordpress@santosj.name>
>>>       
>> wrote:
>>     
>>>> My thoughts was having all of the queries as filters specific to the
>>>> function and query. You would end up with about several hundred
>>>>         
>> filters,
>>     
>>>> but it would allow for the easiest transition. It wouldn't be as
>>>>         
>> hard or
>>     
>>>> difficult as porting and can be just a plugin. It would also allow
>>>>         
>> for
>>     
>>>> removing upgrading conflicts.
>>>>
>>>>         
>>> That'd be rather pointless IMO, If your wanting to replace the
>>>       
>> database, then you use your own db class file anyway, All queries will
>> be passed directly to the class, Your code would handle the query
>> before its made.
>>     
>>> It would probably be easier if all of WP used the prepare()
>>>       
>> functionality that 2.3 has introduced, AFAIK that means it'll be using
>> something like "SELECT `id` FROM `table` WHERE `name` = '%s' ORDER BY
>> %s" with parameters passed in, It would make it a lot easier for the
>> database class to replace 'dodgy' queries with something more friendly
>> for that database.
>>     
>>> D
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>     
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From wordpress at santosj.name  Mon Oct  1 03:28:42 2007
From: wordpress at santosj.name (Jacob)
Date: Mon Oct  1 03:30:06 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <7b4922320709301946h5caa2b4bseee014f28d4860d8@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<000001c803cf$b1b434f0$151c9ed0$@net>	<b88434820709301926o104c88dej4277416a570d04e3@mail.gmail.com>
	<7b4922320709301946h5caa2b4bseee014f28d4860d8@mail.gmail.com>
Message-ID: <4700696A.2060401@santosj.name>

Perhaps, you are right. However, we wouldn't know, unless the the core 
devs join this discussion, which seems unlikely since it would appear 
like the dozen others before it.

In my opinion, I would have liked to have used SQLite and had an easy 
way to do it. However, the thought of having to do find and replace 
lowers my motivation to even attempt it.

Which ever method might work, I however won't even attempt it if it is 
required that I do the find and replace method. I would with my method. 
The devs wouldn't have to support any other DB other than MySQL, so 
they'll be allowed to use any MySQL SQL and table scheme they want. This 
solution would allow for those who want to support other Databases to do 
so without forking and give an easy but time consuming way to do so.

Both methods would require a lot of work for the plugin or fork author. 
Mine would require some up front core changes, which would be a lot of 
work in itself. I think the only issue I would have, is if the core team 
would accept such a patch that would do so many changes? I think with 
the prepare stuff, right now isn't the best time, unless there already 
existed a patch. Any patch at this moment would be worthless since it 
wouldn't be able to be applied without conflicts.

This isn't an issue that I'm concerned with, so I'll bow out from voting 
on the issue. I'm just offering a possible solution.

Jacob Santos

Jared Bangs wrote:
> On 9/30/07, Matt <speedboxer@gmail.com> wrote:
>   
>> There's nothing wrong with WP supporting multiple DBs, but doing so in a way
>> that doesn't interfere with anything is the problem...
>>
>>     
>
> Yeah, I would think that if a drop in replacement for the wp-db file
> could do the trick (although it would probably not be optimal), it
> might be useful to add a hook at the point of $wpdb assignment, to
> facilitate overrides by plugins rather than having to replace and/or
> modify the core files.
>
> I also imagine that there would have to be some performance trade-offs
> with doing it that way; specifically involving potentially rewriting
> every query (with regex, etc.) before it's executed.
>
> Support on an "equal" level would probably be more complicated, as it
> should involve replacing (or at least adding specific replacement
> hooks for) any vendor specific SQL throughout the app.
>
> The latter might be quite the undertaking, but I could see the value
> in it. It would be especially useful to already have in place if the
> situation ever came up where PGSQL (or any other DB) releases a new
> version that breaks all speed records and becomes the clear choice for
> performance, etc.
>
> Whether that (and portability in general) is enough to justify all the
> work required to get there is a matter that lots of people would
> probably have strong opinions on, on both sides of the issue.
>
> For me, it comes down to two things: (1) cost / benefit analysis (are
> the potential gains worth the extra effort), and (2) would these types
> of changes (to the core code to better facilitate portability) be in
> line with the vision of the core devs.
>
> The second will greatly impact the first. I'd be interested in helping
> out with the changes just for the fun of it, but if the consensus is
> that we don't want to go there (in core), it probably wouldn't be
> worthwhile to prepare all the patches, etc.
>
> - Jared
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From wordpress at santosj.name  Mon Oct  1 03:29:30 2007
From: wordpress at santosj.name (Jacob)
Date: Mon Oct  1 03:30:54 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <000101c803d1$c8a083b0$59e18b10$@net>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<47004BE8.2040306@santosj.name>	<b88434820709301827k5b8c6897odf39b1438a7bf7ed@mail.gmail.com>	<4700544F.8070407@santosj.name>
	<000101c803d1$c8a083b0$59e18b10$@net>
Message-ID: <4700699A.6040804@santosj.name>

Well, like DD32 said, yes, it would most likely do that. However, the 
SQL rewriter seems extremely difficult. Good luck with that. If you were 
going to do that, then I think the PEAR MDB2 package would be a far 
better solution. The SOC student wrote code that does just this, so you 
could either rip the code that the guy had and build the new SQL from 
that persons tree, which might be better.

I think that even if it would be more work, it would be far easier than 
your method describe by both DD32 and you. Actually, I think both would 
require tremendous amount of work, just one would require more work to 
the core, while the other would require SQL find and replace.

Does my idea seem okay then? I'm thinking that DD32 had it right. The 
easiest way would be to use filters and replace the class in $wpdb with 
your own. However, the overhead with as many filters that would be 
required and I think with some SQL engines (SQLite perhaps), it might 
require more than one query.

Thinking about that possibility, I thought it might just be better to 
use a single function that calls another function if it exists. The 
solution would also be better since it would allow, like the above 
paragraph, a single drop in plugin solution, instead of having to port 
the functions and hack the core.

I'm willing to do some work on this if anyone (about two) think it is 
worth the time and willing to do profiling to see if it adds any 
unneeded overhead costs.

Jacob Santos

Computer Guru wrote:
> I don't understand why you have to do all that in the first place - shouldn't overloading/replacing wp-db with a wp-db2 do the trick?
>
> In the code you have stuff like
>
> (taken from the code at random)
>
> $arc_result = $wpdb->get_results( $arc_query );
>
>
> So the changes you'd need:
>
> Check if wp-db2.php exists.
> If it does, load $wp-db2 instead of $wp-db.
>
> wp-db2.php can contain all the MySQL to PGSQL voodoo...
>
> At that point, if you have rewritten the base WP queries to support multiple databases you should be good to go. If you haven't - that's what the MySQL to PGSQL rewriter functions are for. No need to actually *manually* modify any queries assuming they're originally written correctly and that your regex/str functions do their conversion properly.
>
> It'd require minimal modification of WP-core and wouldn't add any load at all for non-PGSQL users (and for PGSQL users it'd only add 50 or so regex calls, not that big of a deal).
>
>
> Computer Guru
> NeoSmart Technologies
> http://neosmart.net/
>
>
>   
>> -----Original Message-----
>> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
>> bounces@lists.automattic.com] On Behalf Of Jacob
>> Sent: Monday, October 01, 2007 4:59 AM
>> To: wp-hackers@lists.automattic.com
>> Subject: Re: [wp-hackers] PostgreSQL port status?
>>
>> Yes, yes it would most likely slow WordPress down a lot.
>>
>> I was thinking more of a custom filter solution. For example:
>>
>> instead of add_filter('sql_fetch_category_xyz', 'SELECT * FROM
>> whatever');
>>
>> more like:
>>
>> wp_sql_filter($tag, $sql)
>> {
>> global $database_type;
>>
>> $results = '';
>>
>> $function = $tag.'_'.$database_type;
>>
>> if( function_exists($function) )
>> {
>>     $results = $function($sql); // Err, would this work? Might just
>> have
>> to use call_user_func() instead.
>>     return $results;
>> }
>>
>> return false;
>> }
>>
>> In this way, you would only need to check to see whether the function
>> existed. This would "solved" (crossed your fingers) the incompatibility
>> of $wpdb, as it would be bypassed completely. The pseudo-code would be
>> quick as hell as it would remove the overhead of _wp_filter_unique_id()
>> and the rest of the Filter/Action API.
>>
>> It could be used in the code, like so:
>>
>> // ... snip
>>
>> $sql = 'SELECT * FROM wp_tags';
>> $results = wp_sql_filter('wp_get_tags', $sql);
>>
>> if($results  !== false)
>> {
>>     $results = $wpdb->fetch_query($sql);
>> }
>>
>> return $results;
>>
>>
>> Matt wrote:
>>     
>>> On 9/30/07, Jacob <wordpress@santosj.name> wrote:
>>>
>>>       
>>>> My thoughts was having all of the queries as filters specific to the
>>>> function and query. You would end up with about several hundred
>>>>         
>> filters,
>>     
>>>> but it would allow for the easiest transition. It wouldn't be as
>>>>         
>> hard or
>>     
>>>> difficult as porting and can be just a plugin. It would also allow
>>>>         
>> for
>>     
>>>> removing upgrading conflicts.
>>>>
>>>>
>>>>         
>>> Wouldn't that slow WordPress down, like a lot?
>>>
>>>
>>>
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>     
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From wordpress at santosj.name  Mon Oct  1 03:22:07 2007
From: wordpress at santosj.name (Jacob)
Date: Mon Oct  1 03:55:51 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <47006654.7050507@santosj.name>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<47004BE8.2040306@santosj.name>	<op.tzhwk4vqk6w4mc@dd32.no-ip.com>	<47005512.1030003@santosj.name>	<000301c803d8$40fd9900$c2f8cb00$@net>
	<47006654.7050507@santosj.name>
Message-ID: <470067DF.3070804@santosj.name>

Oops, the answer was already there. Change:

if ( !wp_select_db($dbh, $db) )

to:

if( !$this->wp_select_db($dbh, $db) )

Jacob Santos

Jacob wrote:
> Is this function in the class? I'm not sure from the missing other 140 
> lines before it. If I had the other 140 lines or answer my first 
> question.
>
> Jacob Santos
>
> Computer Guru wrote:
>> I'm trying to do just that right now, but I'm getting the weirdest 
>> PHP error I've ever seen :S
>>
>>
>>     function wp_select_db($dbname, $connection_id)
>>     {
>>         global $server;
>>         $conn =  @pg_connect("host={$server->host} 
>> user={$server->user} password={$server->pass} dbname=$dbname"); 
>>         $server->user = '';
>>         $server->pass = '';
>>         $server->host = '';
>>         return $conn;
>>     }
>>
>>     // 
>> ==================================================================
>>     //    Select a DB (if another one needs to be selected)
>>
>>     function select($db, &$dbh) {
>>         if ( !wp_select_db($dbh, $db) ) {
>>         $this->bail("error message");
>>         }
>>     }
>>
>>
>> It *INSISTS* that wp_select_db does not exist....
>> Fatal error: Call to undefined function wp_select_db() in 
>> c:\Inetpub\wwwroot\blog\wp-content\db.php on line 140
>>
>> I've tried renaming the function and moving the definition, but it is 
>> adamantly refusing to see the function I defined /just/ above it..
>> Any ideas?
>>
>> Computer Guru
>> NeoSmart Technologies
>> http://neosmart.net/
>>
>>
>>  
>>> -----Original Message-----
>>> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
>>> bounces@lists.automattic.com] On Behalf Of Jacob
>>> Sent: Monday, October 01, 2007 5:02 AM
>>> To: wp-hackers@lists.automattic.com
>>> Subject: Re: [wp-hackers] PostgreSQL port status?
>>>
>>> Ah, not bad, if you replace the global $wpdb with your class and
>>> provide
>>> the same methods and properties, that would work.
>>>
>>> However, my previous post is an possible implementation that wouldn't
>>> require this step.
>>>
>>> Jacob Santos
>>>
>>> DD32 wrote:
>>>    
>>>> On Mon, 01 Oct 2007 11:22:48 +1000, Jacob <wordpress@santosj.name>
>>>>       
>>> wrote:
>>>    
>>>>> My thoughts was having all of the queries as filters specific to the
>>>>> function and query. You would end up with about several hundred
>>>>>         
>>> filters,
>>>    
>>>>> but it would allow for the easiest transition. It wouldn't be as
>>>>>         
>>> hard or
>>>    
>>>>> difficult as porting and can be just a plugin. It would also allow
>>>>>         
>>> for
>>>    
>>>>> removing upgrading conflicts.
>>>>>
>>>>>         
>>>> That'd be rather pointless IMO, If your wanting to replace the
>>>>       
>>> database, then you use your own db class file anyway, All queries will
>>> be passed directly to the class, Your code would handle the query
>>> before its made.
>>>    
>>>> It would probably be easier if all of WP used the prepare()
>>>>       
>>> functionality that 2.3 has introduced, AFAIK that means it'll be using
>>> something like "SELECT `id` FROM `table` WHERE `name` = '%s' ORDER BY
>>> %s" with parameters passed in, It would make it a lot easier for the
>>> database class to replace 'dodgy' queries with something more friendly
>>> for that database.
>>>    
>>>> D
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>       
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>     
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>   
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From computerguru at neosmart.net  Mon Oct  1 04:03:51 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Mon Oct  1 04:04:13 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <4700696A.2060401@santosj.name>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<000001c803cf$b1b434f0$151c9ed0$@net>	<b88434820709301926o104c88dej4277416a570d04e3@mail.gmail.com>	<7b4922320709301946h5caa2b4bseee014f28d4860d8@mail.gmail.com>
	<4700696A.2060401@santosj.name>
Message-ID: <000401c803e0$163615a0$42a240e0$@net>

OK, ATM WordPress is already *technically* is extendable by sticking db.php in \wp-content\

I've attached a db.php w/ the replaced MySQL functions, but unfortunately, WordPress doesn't honor its own system and has mysql_* functions hard-coded into other files.

Queries hard-coded into files I can understand, but there is absolutely no need to ever call mysql_* functions outside of wp-db.php.... everything else should use that class.

Right, so no guarantees or anything - I'm using the code from the file forwarded by usleepless for the conversion.... I have to go right now, but assuming you can get wp-setup to use $wpdb instead of its own hard-coded mysql functions (shouldn't be too hard) it should work to some minimal extent :)

Computer Guru
NeoSmart Technologies
http://neosmart.net/


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of Jacob
> Sent: Monday, October 01, 2007 6:29 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] PostgreSQL port status?
> 
> Perhaps, you are right. However, we wouldn't know, unless the the core
> devs join this discussion, which seems unlikely since it would appear
> like the dozen others before it.
> 
> In my opinion, I would have liked to have used SQLite and had an easy
> way to do it. However, the thought of having to do find and replace
> lowers my motivation to even attempt it.
> 
> Which ever method might work, I however won't even attempt it if it is
> required that I do the find and replace method. I would with my method.
> The devs wouldn't have to support any other DB other than MySQL, so
> they'll be allowed to use any MySQL SQL and table scheme they want.
> This
> solution would allow for those who want to support other Databases to
> do
> so without forking and give an easy but time consuming way to do so.
> 
> Both methods would require a lot of work for the plugin or fork author.
> Mine would require some up front core changes, which would be a lot of
> work in itself. I think the only issue I would have, is if the core
> team
> would accept such a patch that would do so many changes? I think with
> the prepare stuff, right now isn't the best time, unless there already
> existed a patch. Any patch at this moment would be worthless since it
> wouldn't be able to be applied without conflicts.
> 
> This isn't an issue that I'm concerned with, so I'll bow out from
> voting
> on the issue. I'm just offering a possible solution.
> 
> Jacob Santos
> 
> Jared Bangs wrote:
> > On 9/30/07, Matt <speedboxer@gmail.com> wrote:
> >
> >> There's nothing wrong with WP supporting multiple DBs, but doing so
> in a way
> >> that doesn't interfere with anything is the problem...
> >>
> >>
> >
> > Yeah, I would think that if a drop in replacement for the wp-db file
> > could do the trick (although it would probably not be optimal), it
> > might be useful to add a hook at the point of $wpdb assignment, to
> > facilitate overrides by plugins rather than having to replace and/or
> > modify the core files.
> >
> > I also imagine that there would have to be some performance trade-
> offs
> > with doing it that way; specifically involving potentially rewriting
> > every query (with regex, etc.) before it's executed.
> >
> > Support on an "equal" level would probably be more complicated, as it
> > should involve replacing (or at least adding specific replacement
> > hooks for) any vendor specific SQL throughout the app.
> >
> > The latter might be quite the undertaking, but I could see the value
> > in it. It would be especially useful to already have in place if the
> > situation ever came up where PGSQL (or any other DB) releases a new
> > version that breaks all speed records and becomes the clear choice
> for
> > performance, etc.
> >
> > Whether that (and portability in general) is enough to justify all
> the
> > work required to get there is a matter that lots of people would
> > probably have strong opinions on, on both sides of the issue.
> >
> > For me, it comes down to two things: (1) cost / benefit analysis (are
> > the potential gains worth the extra effort), and (2) would these
> types
> > of changes (to the core code to better facilitate portability) be in
> > line with the vision of the core devs.
> >
> > The second will greatly impact the first. I'd be interested in
> helping
> > out with the changes just for the fun of it, but if the consensus is
> > that we don't want to go there (in core), it probably wouldn't be
> > worthwhile to prepare all the patches, etc.
> >
> > - Jared
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From christine at neato.co.nz  Mon Oct  1 04:03:43 2007
From: christine at neato.co.nz (Christine Davis)
Date: Mon Oct  1 04:29:10 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <4700696A.2060401@santosj.name>
References: <46FC6EC9.9010004@comcast.net>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<000001c803cf$b1b434f0$151c9ed0$@net>
	<b88434820709301926o104c88dej4277416a570d04e3@mail.gmail.com>
	<7b4922320709301946h5caa2b4bseee014f28d4860d8@mail.gmail.com>
	<4700696A.2060401@santosj.name>
Message-ID: <6e966a280709302103v43a0e5deya2eabdedff1911e0@mail.gmail.com>

One of the other times the topic came up (Hah.  October last year,
actually);  Matt said, among other things...

It's theoretically possible, and even attractive if you imagine *how
much larger* our userbase could be if we simply supported every
conceivable server configuration, but at some point the costs add up:

1) Infinitely more complex testing (we have enough trouble with W/LAMP)
2) Same for debugging
3) Non-trivial overhead in code
4) Much slower development (WP Vista in 2008!)
5) No visible benefits to regular users

I will be the first to admit that it is entirely luck that WP happens to
be attached to the most popular and fastest growing database in history,
and written in the most successful server-side scripting language, but
let's not throw away so lightly the benefits to development the
luckiness in our platform choices provided.

This is one of those things which keeps coming up over and over again on
this mailing list; which is probably why you aren't seeing a lot of core
devs....

On 10/1/07, Jacob <wordpress@santosj.name> wrote:
>
> Perhaps, you are right. However, we wouldn't know, unless the the core
> devs join this discussion, which seems unlikely since it would appear
> like the dozen others before it.
>
> In my opinion, I would have liked to have used SQLite and had an easy
> way to do it. However, the thought of having to do find and replace
> lowers my motivation to even attempt it.
>
> Which ever method might work, I however won't even attempt it if it is
> required that I do the find and replace method. I would with my method.
> The devs wouldn't have to support any other DB other than MySQL, so
> they'll be allowed to use any MySQL SQL and table scheme they want. This
> solution would allow for those who want to support other Databases to do
> so without forking and give an easy but time consuming way to do so.
>
> Both methods would require a lot of work for the plugin or fork author.
> Mine would require some up front core changes, which would be a lot of
> work in itself. I think the only issue I would have, is if the core team
> would accept such a patch that would do so many changes? I think with
> the prepare stuff, right now isn't the best time, unless there already
> existed a patch. Any patch at this moment would be worthless since it
> wouldn't be able to be applied without conflicts.
>
> This isn't an issue that I'm concerned with, so I'll bow out from voting
> on the issue. I'm just offering a possible solution.
>
> Jacob Santos
>
> Jared Bangs wrote:
> > On 9/30/07, Matt <speedboxer@gmail.com> wrote:
> >
> >> There's nothing wrong with WP supporting multiple DBs, but doing so in
> a way
> >> that doesn't interfere with anything is the problem...
> >>
> >>
> >
> > Yeah, I would think that if a drop in replacement for the wp-db file
> > could do the trick (although it would probably not be optimal), it
> > might be useful to add a hook at the point of $wpdb assignment, to
> > facilitate overrides by plugins rather than having to replace and/or
> > modify the core files.
> >
> > I also imagine that there would have to be some performance trade-offs
> > with doing it that way; specifically involving potentially rewriting
> > every query (with regex, etc.) before it's executed.
> >
> > Support on an "equal" level would probably be more complicated, as it
> > should involve replacing (or at least adding specific replacement
> > hooks for) any vendor specific SQL throughout the app.
> >
> > The latter might be quite the undertaking, but I could see the value
> > in it. It would be especially useful to already have in place if the
> > situation ever came up where PGSQL (or any other DB) releases a new
> > version that breaks all speed records and becomes the clear choice for
> > performance, etc.
> >
> > Whether that (and portability in general) is enough to justify all the
> > work required to get there is a matter that lots of people would
> > probably have strong opinions on, on both sides of the issue.
> >
> > For me, it comes down to two things: (1) cost / benefit analysis (are
> > the potential gains worth the extra effort), and (2) would these types
> > of changes (to the core code to better facilitate portability) be in
> > line with the vision of the core devs.
> >
> > The second will greatly impact the first. I'd be interested in helping
> > out with the changes just for the fun of it, but if the consensus is
> > that we don't want to go there (in core), it probably wouldn't be
> > worthwhile to prepare all the patches, etc.
> >
> > - Jared
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wordpress at santosj.name  Mon Oct  1 04:36:59 2007
From: wordpress at santosj.name (Jacob)
Date: Mon Oct  1 04:38:25 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <000401c803e0$163615a0$42a240e0$@net>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<000001c803cf$b1b434f0$151c9ed0$@net>	<b88434820709301926o104c88dej4277416a570d04e3@mail.gmail.com>	<7b4922320709301946h5caa2b4bseee014f28d4860d8@mail.gmail.com>	<4700696A.2060401@santosj.name>
	<000401c803e0$163615a0$42a240e0$@net>
Message-ID: <4700796B.5040404@santosj.name>

Thanks.

Probably should find the files that has mysql_* in them and change them 
over to use the $wpdb instead. I'm dealing with something else at this 
moment. As I have no need for this, I'm going to leave it to you and the 
others.

Looking forward to the conclusion.

Jacob Santos

Computer Guru wrote:
> OK, ATM WordPress is already *technically* is extendable by sticking db.php in \wp-content\
>
> I've attached a db.php w/ the replaced MySQL functions, but unfortunately, WordPress doesn't honor its own system and has mysql_* functions hard-coded into other files.
>
> Queries hard-coded into files I can understand, but there is absolutely no need to ever call mysql_* functions outside of wp-db.php.... everything else should use that class.
>
> Right, so no guarantees or anything - I'm using the code from the file forwarded by usleepless for the conversion.... I have to go right now, but assuming you can get wp-setup to use $wpdb instead of its own hard-coded mysql functions (shouldn't be too hard) it should work to some minimal extent :)
>
> Computer Guru
> NeoSmart Technologies
> http://neosmart.net/
>
>
>   
>> -----Original Message-----
>> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
>> bounces@lists.automattic.com] On Behalf Of Jacob
>> Sent: Monday, October 01, 2007 6:29 AM
>> To: wp-hackers@lists.automattic.com
>> Subject: Re: [wp-hackers] PostgreSQL port status?
>>
>> Perhaps, you are right. However, we wouldn't know, unless the the core
>> devs join this discussion, which seems unlikely since it would appear
>> like the dozen others before it.
>>
>> In my opinion, I would have liked to have used SQLite and had an easy
>> way to do it. However, the thought of having to do find and replace
>> lowers my motivation to even attempt it.
>>
>> Which ever method might work, I however won't even attempt it if it is
>> required that I do the find and replace method. I would with my method.
>> The devs wouldn't have to support any other DB other than MySQL, so
>> they'll be allowed to use any MySQL SQL and table scheme they want.
>> This
>> solution would allow for those who want to support other Databases to
>> do
>> so without forking and give an easy but time consuming way to do so.
>>
>> Both methods would require a lot of work for the plugin or fork author.
>> Mine would require some up front core changes, which would be a lot of
>> work in itself. I think the only issue I would have, is if the core
>> team
>> would accept such a patch that would do so many changes? I think with
>> the prepare stuff, right now isn't the best time, unless there already
>> existed a patch. Any patch at this moment would be worthless since it
>> wouldn't be able to be applied without conflicts.
>>
>> This isn't an issue that I'm concerned with, so I'll bow out from
>> voting
>> on the issue. I'm just offering a possible solution.
>>
>> Jacob Santos
>>
>> Jared Bangs wrote:
>>     
>>> On 9/30/07, Matt <speedboxer@gmail.com> wrote:
>>>
>>>       
>>>> There's nothing wrong with WP supporting multiple DBs, but doing so
>>>>         
>> in a way
>>     
>>>> that doesn't interfere with anything is the problem...
>>>>
>>>>
>>>>         
>>> Yeah, I would think that if a drop in replacement for the wp-db file
>>> could do the trick (although it would probably not be optimal), it
>>> might be useful to add a hook at the point of $wpdb assignment, to
>>> facilitate overrides by plugins rather than having to replace and/or
>>> modify the core files.
>>>
>>> I also imagine that there would have to be some performance trade-
>>>       
>> offs
>>     
>>> with doing it that way; specifically involving potentially rewriting
>>> every query (with regex, etc.) before it's executed.
>>>
>>> Support on an "equal" level would probably be more complicated, as it
>>> should involve replacing (or at least adding specific replacement
>>> hooks for) any vendor specific SQL throughout the app.
>>>
>>> The latter might be quite the undertaking, but I could see the value
>>> in it. It would be especially useful to already have in place if the
>>> situation ever came up where PGSQL (or any other DB) releases a new
>>> version that breaks all speed records and becomes the clear choice
>>>       
>> for
>>     
>>> performance, etc.
>>>
>>> Whether that (and portability in general) is enough to justify all
>>>       
>> the
>>     
>>> work required to get there is a matter that lots of people would
>>> probably have strong opinions on, on both sides of the issue.
>>>
>>> For me, it comes down to two things: (1) cost / benefit analysis (are
>>> the potential gains worth the extra effort), and (2) would these
>>>       
>> types
>>     
>>> of changes (to the core code to better facilitate portability) be in
>>> line with the vision of the core devs.
>>>
>>> The second will greatly impact the first. I'd be interested in
>>>       
>> helping
>>     
>>> out with the changes just for the fun of it, but if the consensus is
>>> that we don't want to go there (in core), it probably wouldn't be
>>> worthwhile to prepare all the patches, etc.
>>>
>>> - Jared
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>     
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>     

From otto at ottodestruct.com  Mon Oct  1 05:12:12 2007
From: otto at ottodestruct.com (Otto)
Date: Mon Oct  1 05:12:18 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <000401c803e0$163615a0$42a240e0$@net>
References: <46FC6EC9.9010004@comcast.net>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<000001c803cf$b1b434f0$151c9ed0$@net>
	<b88434820709301926o104c88dej4277416a570d04e3@mail.gmail.com>
	<7b4922320709301946h5caa2b4bseee014f28d4860d8@mail.gmail.com>
	<4700696A.2060401@santosj.name> <000401c803e0$163615a0$42a240e0$@net>
Message-ID: <161617690709302212rf7bed34g5476e23135618cef@mail.gmail.com>

Well, as has been stated before (somewhere...), patches that moved any
sort of database stuff into wp-db.php would likely be very welcome.


On 9/30/07, Computer Guru <computerguru@neosmart.net> wrote:
> OK, ATM WordPress is already *technically* is extendable by sticking db.php in \wp-content\
>
> I've attached a db.php w/ the replaced MySQL functions, but unfortunately, WordPress doesn't honor its own system and has mysql_* functions hard-coded into other files.
>
> Queries hard-coded into files I can understand, but there is absolutely no need to ever call mysql_* functions outside of wp-db.php.... everything else should use that class.
>
> Right, so no guarantees or anything - I'm using the code from the file forwarded by usleepless for the conversion.... I have to go right now, but assuming you can get wp-setup to use $wpdb instead of its own hard-coded mysql functions (shouldn't be too hard) it should work to some minimal extent :)
>
> Computer Guru
> NeoSmart Technologies
> http://neosmart.net/
>
>
> > -----Original Message-----
> > From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> > bounces@lists.automattic.com] On Behalf Of Jacob
> > Sent: Monday, October 01, 2007 6:29 AM
> > To: wp-hackers@lists.automattic.com
> > Subject: Re: [wp-hackers] PostgreSQL port status?
> >
> > Perhaps, you are right. However, we wouldn't know, unless the the core
> > devs join this discussion, which seems unlikely since it would appear
> > like the dozen others before it.
> >
> > In my opinion, I would have liked to have used SQLite and had an easy
> > way to do it. However, the thought of having to do find and replace
> > lowers my motivation to even attempt it.
> >
> > Which ever method might work, I however won't even attempt it if it is
> > required that I do the find and replace method. I would with my method.
> > The devs wouldn't have to support any other DB other than MySQL, so
> > they'll be allowed to use any MySQL SQL and table scheme they want.
> > This
> > solution would allow for those who want to support other Databases to
> > do
> > so without forking and give an easy but time consuming way to do so.
> >
> > Both methods would require a lot of work for the plugin or fork author.
> > Mine would require some up front core changes, which would be a lot of
> > work in itself. I think the only issue I would have, is if the core
> > team
> > would accept such a patch that would do so many changes? I think with
> > the prepare stuff, right now isn't the best time, unless there already
> > existed a patch. Any patch at this moment would be worthless since it
> > wouldn't be able to be applied without conflicts.
> >
> > This isn't an issue that I'm concerned with, so I'll bow out from
> > voting
> > on the issue. I'm just offering a possible solution.
> >
> > Jacob Santos
> >
> > Jared Bangs wrote:
> > > On 9/30/07, Matt <speedboxer@gmail.com> wrote:
> > >
> > >> There's nothing wrong with WP supporting multiple DBs, but doing so
> > in a way
> > >> that doesn't interfere with anything is the problem...
> > >>
> > >>
> > >
> > > Yeah, I would think that if a drop in replacement for the wp-db file
> > > could do the trick (although it would probably not be optimal), it
> > > might be useful to add a hook at the point of $wpdb assignment, to
> > > facilitate overrides by plugins rather than having to replace and/or
> > > modify the core files.
> > >
> > > I also imagine that there would have to be some performance trade-
> > offs
> > > with doing it that way; specifically involving potentially rewriting
> > > every query (with regex, etc.) before it's executed.
> > >
> > > Support on an "equal" level would probably be more complicated, as it
> > > should involve replacing (or at least adding specific replacement
> > > hooks for) any vendor specific SQL throughout the app.
> > >
> > > The latter might be quite the undertaking, but I could see the value
> > > in it. It would be especially useful to already have in place if the
> > > situation ever came up where PGSQL (or any other DB) releases a new
> > > version that breaks all speed records and becomes the clear choice
> > for
> > > performance, etc.
> > >
> > > Whether that (and portability in general) is enough to justify all
> > the
> > > work required to get there is a matter that lots of people would
> > > probably have strong opinions on, on both sides of the issue.
> > >
> > > For me, it comes down to two things: (1) cost / benefit analysis (are
> > > the potential gains worth the extra effort), and (2) would these
> > types
> > > of changes (to the core code to better facilitate portability) be in
> > > line with the vision of the core devs.
> > >
> > > The second will greatly impact the first. I'd be interested in
> > helping
> > > out with the changes just for the fun of it, but if the consensus is
> > > that we don't want to go there (in core), it probably wouldn't be
> > > worthwhile to prepare all the patches, etc.
> > >
> > > - Jared
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
From peter.westwood at ftwr.co.uk  Mon Oct  1 08:06:25 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon Oct  1 08:06:32 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <161617690709302212rf7bed34g5476e23135618cef@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<000001c803cf$b1b434f0$151c9ed0$@net>
	<b88434820709301926o104c88dej4277416a570d04e3@mail.gmail.com>
	<7b4922320709301946h5caa2b4bseee014f28d4860d8@mail.gmail.com>
	<4700696A.2060401@santosj.name> <000401c803e0$163615a0$42a240e0$@net>
	<161617690709302212rf7bed34g5476e23135618cef@mail.gmail.com>
Message-ID: <61122.199.64.72.252.1191225985.squirrel@epia.ftwr.co.uk>


On Mon, October 1, 2007 6:12 am, Otto wrote:
> Well, as has been stated before (somewhere...), patches that moved any
> sort of database stuff into wp-db.php would likely be very welcome.
>

Indeed they would.

wp-db.php is the only place in which WordPress should be calling mysql
functions.

>
> On 9/30/07, Computer Guru <computerguru@neosmart.net> wrote:
>> OK, ATM WordPress is already *technically* is extendable by sticking
>> db.php in \wp-content\
>>
>> I've attached a db.php w/ the replaced MySQL functions, but
>> unfortunately, WordPress doesn't honor its own system and has mysql_*
>> functions hard-coded into other files.
>>
>> Queries hard-coded into files I can understand, but there is absolutely
>> no need to ever call mysql_* functions outside of wp-db.php....
>> everything else should use that class.
>>
>> Right, so no guarantees or anything - I'm using the code from the file
>> forwarded by usleepless for the conversion.... I have to go right now,
>> but assuming you can get wp-setup to use $wpdb instead of its own
>> hard-coded mysql functions (shouldn't be too hard) it should work to
>> some minimal extent :)
>>

Please raise a ticket on trac highlighting the places where we call mysql_
functions and if possible a suggested fix - moving the functionality into
wp-db.php so that it can be overridden for other databases.

You can assign it to me if you want and I will endeavour to get it checked
in to trunk soon.

westi
-- 
Peter Westwood <peter.westwood@ftwr.co.uk>
http://blog.ftwr.co.uk
From Gerhard.Brauckmann at mi-verlag.de  Mon Oct  1 09:19:39 2007
From: Gerhard.Brauckmann at mi-verlag.de (Gerhard Brauckmann)
Date: Mon Oct  1 09:20:00 2007
Subject: [wp-hackers] Adding rewrite rules to wp
In-Reply-To: <61122.199.64.72.252.1191225985.squirrel@epia.ftwr.co.uk>
Message-ID: <OFC8AA0044.1F9A8818-ONC1257367.002D21EF-C1257367.00333D3E@sueddeutscherverlag.de>

Dear friends of WP, I would like to add a rule to WP.
I took the example from the WP Codex and did also some digging within 
Jeromes TAGs plugin.

I cant get it running. So I got some specific questions:

- when using the Codex example, do I have to add the query_var also into 
wp_rewrite?

see my example here:
/* add PARTS List to specific POST  */
/* example: http://mydomain/2007/09/31/xmas-tools-44/part/334  */
/* this should pass to post /2007/09/31/xmas-tools-44 */
/* whithin single.php axtract query_var (part) with token 334  - do 
somenting with the value */
/* finish */

class MI_Parts {

function MI_Parts() {
        add_action('init', array(&$this, 'mi_initRewrite'));           // 
can't use WP rewrite flags until "init" hook 
        } // end of initialization

/* function from Jeromes Keywords */
        function mi_initRewrite() {
        global $wp_rewrite;
        /* detect permalink type & construct base URL for local links */
        $base_url = get_settings('home') . '/';
        if (isset($wp_rewrite) && $wp_rewrite->using_permalinks()) {
            $rewriteon = true;                    // using rewrite rules
            $base_url .= $wp_rewrite->root;             // set to 
"index.php/" if using that style
            $base_url .= 'part/';
                } else {
                $base_url .= '?part=';
                }
 
        /* generate rewrite rules for tag queries */
        if ($rewriteon)
            add_filter('post_rewrite_rules', array(&$this, 
'mi_createRewriteRules'));
 
        /* flush rules if requested */
        $initdone = true;
        if ($flushrules) 
            $wp_rewrite->flush_rules();
    }

/* function from Jeromes Keywords */
        function mi_createRewriteRules($rewrite) {
        global $wp_rewrite;
        /* add rewrite tokens */
        $qvar ="part";
        $token = '%' . $qvar . '%';
        $wp_rewrite->add_rewrite_tag($token, '(.+)', $qvar . '=');
        $keywords_structure = $wp_rewrite->root . $qvar . "/$token";
        $keywords_rewrite = 
$wp_rewrite->generate_rewrite_rules($keywords_structure);
        return ( $rewrite + $keywords_rewrite );
    }

} // of CLASS


with this code I'm expecting someting like [..../part/ ..] in the 
wp_rewrite_rules list (array) but there ist still nothing 
What is worng here? (Im using WP 2.3)


Regards
Gerhard Brauckmann
From computerguru at neosmart.net  Mon Oct  1 12:42:51 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Mon Oct  1 12:43:12 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <61122.199.64.72.252.1191225985.squirrel@epia.ftwr.co.uk>
References: <46FC6EC9.9010004@comcast.net>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<000001c803cf$b1b434f0$151c9ed0$@net>	<b88434820709301926o104c88dej4277416a570d04e3@mail.gmail.com>	<7b4922320709301946h5caa2b4bseee014f28d4860d8@mail.gmail.com>	<4700696A.2060401@santosj.name>
	<000401c803e0$163615a0$42a240e0$@net>	<161617690709302212rf7bed34g5476e23135618cef@mail.gmail.com>
	<61122.199.64.72.252.1191225985.squirrel@epia.ftwr.co.uk>
Message-ID: <000e01c80428$9664a3c0$c32deb40$@net>

Here's the ticket + patch. Tested with new install then upgrade to SVN, works fine here.
http://trac.wordpress.org/ticket/5127


Gonna need another patch to *always* check for db.php instead of wp-db.php:
http://trac.wordpress.org/ticket/5128

With these two in the bag you should be good to go with any query rewriters and database drivers stuck in wp-content/db.php.

Computer Guru
NeoSmart Technologies
http://neosmart.net/


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of Peter Westwood
> Sent: Monday, October 01, 2007 11:06 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] PostgreSQL port status?
> 
> 
> On Mon, October 1, 2007 6:12 am, Otto wrote:
> > Well, as has been stated before (somewhere...), patches that moved
> any
> > sort of database stuff into wp-db.php would likely be very welcome.
> >
> 
> Indeed they would.
> 
> wp-db.php is the only place in which WordPress should be calling mysql
> functions.
> 
> >
> > On 9/30/07, Computer Guru <computerguru@neosmart.net> wrote:
> >> OK, ATM WordPress is already *technically* is extendable by sticking
> >> db.php in \wp-content\
> >>
> >> I've attached a db.php w/ the replaced MySQL functions, but
> >> unfortunately, WordPress doesn't honor its own system and has
> mysql_*
> >> functions hard-coded into other files.
> >>
> >> Queries hard-coded into files I can understand, but there is
> absolutely
> >> no need to ever call mysql_* functions outside of wp-db.php....
> >> everything else should use that class.
> >>
> >> Right, so no guarantees or anything - I'm using the code from the
> file
> >> forwarded by usleepless for the conversion.... I have to go right
> now,
> >> but assuming you can get wp-setup to use $wpdb instead of its own
> >> hard-coded mysql functions (shouldn't be too hard) it should work to
> >> some minimal extent :)
> >>
> 
> Please raise a ticket on trac highlighting the places where we call
> mysql_
> functions and if possible a suggested fix - moving the functionality
> into
> wp-db.php so that it can be overridden for other databases.
> 
> You can assign it to me if you want and I will endeavour to get it
> checked
> in to trunk soon.
> 
> westi
> --
> Peter Westwood <peter.westwood@ftwr.co.uk>
> http://blog.ftwr.co.uk
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From peter.westwood at ftwr.co.uk  Mon Oct  1 12:52:19 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon Oct  1 12:52:27 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <000e01c80428$9664a3c0$c32deb40$@net>
References: <46FC6EC9.9010004@comcast.net>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<000001c803cf$b1b434f0$151c9ed0$@net>
	<b88434820709301926o104c88dej4277416a570d04e3@mail.gmail.com>
	<7b4922320709301946h5caa2b4bseee014f28d4860d8@mail.gmail.com>
	<4700696A.2060401@santosj.name> <000401c803e0$163615a0$42a240e0$@net>
	<161617690709302212rf7bed34g5476e23135618cef@mail.gmail.com>
	<61122.199.64.72.252.1191225985.squirrel@epia.ftwr.co.uk>
	<000e01c80428$9664a3c0$c32deb40$@net>
Message-ID: <44485.199.64.72.252.1191243139.squirrel@epia.ftwr.co.uk>


On Mon, October 1, 2007 1:42 pm, Computer Guru wrote:
> Here's the ticket + patch. Tested with new install then upgrade to SVN,
> works fine here.
> http://trac.wordpress.org/ticket/5127
>
>
> Gonna need another patch to *always* check for db.php instead of
> wp-db.php:
> http://trac.wordpress.org/ticket/5128
>
> With these two in the bag you should be good to go with any query
> rewriters and database drivers stuck in wp-content/db.php.
>

Thank You!

I'll have a look at these soon - not sure if they are 2.3.1 territory or
solely 2.4

westi
-- 
Peter Westwood <peter.westwood@ftwr.co.uk>
http://blog.ftwr.co.uk
From if.website at gmail.com  Mon Oct  1 12:53:56 2007
From: if.website at gmail.com (Austin Matzko)
Date: Mon Oct  1 12:54:03 2007
Subject: [wp-hackers] Adding rewrite rules to wp
In-Reply-To: <OFC8AA0044.1F9A8818-ONC1257367.002D21EF-C1257367.00333D3E@sueddeutscherverlag.de>
References: <61122.199.64.72.252.1191225985.squirrel@epia.ftwr.co.uk>
	<OFC8AA0044.1F9A8818-ONC1257367.002D21EF-C1257367.00333D3E@sueddeutscherverlag.de>
Message-ID: <674b4a3b0710010553x1ab0cbc1od8af4272829ac412@mail.gmail.com>

On 10/1/07, Gerhard Brauckmann <Gerhard.Brauckmann@mi-verlag.de> wrote:
> /* add PARTS List to specific POST  */
> /* example: http://mydomain/2007/09/31/xmas-tools-44/part/334  */
> /* this should pass to post /2007/09/31/xmas-tools-44 */
> /* whithin single.php axtract query_var (part) with token 334  - do
> somenting with the value */

I think the following is what you want, as it will set a query var of
"part" to "334" for something like
"http://mydomain/2007/09/31/xmas-tools-44/part/334":

function MI_Parts() {
       add_action('init', array(&$this, 'mi_initRewrite'));
       add_filter('post_rewrite_rules', array(&$this, 'mi_createRewriteRules'));
} // end of initialization

function mi_initRewrite() {
        add_rewrite_tag('%part%', 'part/(.+)');
}

function mi_createRewriteRules($rewrite) {
        global $wp_rewrite;
        $keywords_structure = $wp_rewrite->permalink_structure . "%part%/";
        $keywords_rewrite =
$wp_rewrite->generate_rewrite_rules($keywords_structure,
EP_PERMALINK);
        return ( $rewrite + $keywords_rewrite );
}
} // of CLASS
From usleepless at gmail.com  Mon Oct  1 13:04:06 2007
From: usleepless at gmail.com (usleepless@gmail.com)
Date: Mon Oct  1 13:04:11 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
References: <46FC6EC9.9010004@comcast.net>
	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name> <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
Message-ID: <c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>

On 10/1/07, DD32 <wordpress@dd32.id.au> wrote:
> On Mon, 01 Oct 2007 11:22:48 +1000, Jacob <wordpress@santosj.name> wrote:
> > My thoughts was having all of the queries as filters specific to the
> > function and query. You would end up with about several hundred filters,
> > but it would allow for the easiest transition. It wouldn't be as hard or
> > difficult as porting and can be just a plugin. It would also allow for
> > removing upgrading conflicts.
>
> That'd be rather pointless IMO, If your wanting to replace the database,
> then you use your own db class file anyway, All queries will be passed
> directly to the class, Your code would handle the query before its made.
>
> It would probably be easier if all of WP used the prepare() functionality
> that 2.3 has introduced, AFAIK that means it'll be using something like
> "SELECT `id` FROM `table` WHERE `name` = '%s' ORDER BY %s" with parameters
> passed in, It would make it a lot easier for the database class to replace
> 'dodgy' queries with something more friendly for that database.

`dodgy` is presume?

why are there `'s in that query?

what are they good for?

regards,

usleep
From Gerhard.Brauckmann at mi-verlag.de  Mon Oct  1 14:20:52 2007
From: Gerhard.Brauckmann at mi-verlag.de (Gerhard Brauckmann)
Date: Mon Oct  1 14:21:01 2007
Subject: Antwort: Re: [wp-hackers] Adding rewrite rules to wp
In-Reply-To: <674b4a3b0710010553x1ab0cbc1od8af4272829ac412@mail.gmail.com>
Message-ID: <OFCEB03868.10BBD2CF-ONC1257367.004D7356-C1257367.004ED0EF@sueddeutscherverlag.de>

Austin, many thx for your feedback,

mmmhhhhh  doesnt work, maybe it's an 2.3 version issue? 

my query_var PART ist still not an item in the rules array, nor can I get 
it by using get_query_var ('part')

its only working $wp_rewrite->permalink_structure/?part=334


Gerhard Brauckmann




"Austin Matzko" <if.website@gmail.com> 
Gesendet von: wp-hackers-bounces@lists.automattic.com
01.10.2007 14:53
Bitte antworten an
wp-hackers@lists.automattic.com


An
wp-hackers@lists.automattic.com
Kopie

Thema
Re: [wp-hackers] Adding rewrite rules to wp






On 10/1/07, Gerhard Brauckmann <Gerhard.Brauckmann@mi-verlag.de> wrote:
> /* add PARTS List to specific POST  */
> /* example: http://mydomain/2007/09/31/xmas-tools-44/part/334  */
> /* this should pass to post /2007/09/31/xmas-tools-44 */
> /* whithin single.php axtract query_var (part) with token 334  - do
> somenting with the value */

I think the following is what you want, as it will set a query var of
"part" to "334" for something like
"http://mydomain/2007/09/31/xmas-tools-44/part/334":

function MI_Parts() {
       add_action('init', array(&$this, 'mi_initRewrite'));
       add_filter('post_rewrite_rules', array(&$this, 
'mi_createRewriteRules'));
} // end of initialization

function mi_initRewrite() {
        add_rewrite_tag('%part%', 'part/(.+)');
}

function mi_createRewriteRules($rewrite) {
        global $wp_rewrite;
        $keywords_structure = $wp_rewrite->permalink_structure . 
"%part%/";
        $keywords_rewrite =
$wp_rewrite->generate_rewrite_rules($keywords_structure,
EP_PERMALINK);
        return ( $rewrite + $keywords_rewrite );
}
} // of CLASS
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From if.website at gmail.com  Mon Oct  1 14:31:02 2007
From: if.website at gmail.com (Austin Matzko)
Date: Mon Oct  1 14:31:09 2007
Subject: [wp-hackers] Adding rewrite rules to wp
In-Reply-To: <OFCEB03868.10BBD2CF-ONC1257367.004D7356-C1257367.004ED0EF@sueddeutscherverlag.de>
References: <674b4a3b0710010553x1ab0cbc1od8af4272829ac412@mail.gmail.com>
	<OFCEB03868.10BBD2CF-ONC1257367.004D7356-C1257367.004ED0EF@sueddeutscherverlag.de>
Message-ID: <674b4a3b0710010731l19e449fbj6e6abd53e9bbed44@mail.gmail.com>

On 10/1/07, Gerhard Brauckmann <Gerhard.Brauckmann@mi-verlag.de> wrote:
> mmmhhhhh  doesnt work, maybe it's an 2.3 version issue?

- Do you actually instantiate the class somewhere? (Your sample code
didn't include the instantiation, but I assumed that you do it
somewhere else)
- Have you flushed the old rewrite rules, for example by re-saving the
rewrite rules?
From Gerhard.Brauckmann at mi-verlag.de  Mon Oct  1 14:39:57 2007
From: Gerhard.Brauckmann at mi-verlag.de (Gerhard Brauckmann)
Date: Mon Oct  1 14:40:05 2007
Subject: Antwort: Re: Re: [wp-hackers] Adding rewrite rules to wp
In-Reply-To: <674b4a3b0710010731l19e449fbj6e6abd53e9bbed44@mail.gmail.com>
Message-ID: <OFDF4B64DC.35132977-ONC1257367.00507A14-C1257367.0050901D@sueddeutscherverlag.de>

Bingo solved - FLUSH it

Thx Austin

:-)





"Austin Matzko" <if.website@gmail.com> 
Gesendet von: wp-hackers-bounces@lists.automattic.com
01.10.2007 16:31
Bitte antworten an
wp-hackers@lists.automattic.com


An
wp-hackers@lists.automattic.com
Kopie

Thema
Re: Re: [wp-hackers] Adding rewrite rules to wp






On 10/1/07, Gerhard Brauckmann <Gerhard.Brauckmann@mi-verlag.de> wrote:
> mmmhhhhh  doesnt work, maybe it's an 2.3 version issue?

- Do you actually instantiate the class somewhere? (Your sample code
didn't include the instantiation, but I assumed that you do it
somewhere else)
- Have you flushed the old rewrite rules, for example by re-saving the
rewrite rules?
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From computerguru at neosmart.net  Mon Oct  1 15:04:09 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Mon Oct  1 15:04:17 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<47004BE8.2040306@santosj.name>
	<op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
Message-ID: <000f01c8043c$53d18cd0$fb74a670$@net>

I'm sure it's just a bad mysql habit and doesn't mean anything ;-)

Computer Guru
NeoSmart Technologies
http://neosmart.net/


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of usleepless@gmail.com
> Sent: Monday, October 01, 2007 4:04 PM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] PostgreSQL port status?
> 
> On 10/1/07, DD32 <wordpress@dd32.id.au> wrote:
> > On Mon, 01 Oct 2007 11:22:48 +1000, Jacob <wordpress@santosj.name>
> wrote:
> > > My thoughts was having all of the queries as filters specific to
> the
> > > function and query. You would end up with about several hundred
> filters,
> > > but it would allow for the easiest transition. It wouldn't be as
> hard or
> > > difficult as porting and can be just a plugin. It would also allow
> for
> > > removing upgrading conflicts.
> >
> > That'd be rather pointless IMO, If your wanting to replace the
> database,
> > then you use your own db class file anyway, All queries will be
> passed
> > directly to the class, Your code would handle the query before its
> made.
> >
> > It would probably be easier if all of WP used the prepare()
> functionality
> > that 2.3 has introduced, AFAIK that means it'll be using something
> like
> > "SELECT `id` FROM `table` WHERE `name` = '%s' ORDER BY %s" with
> parameters
> > passed in, It would make it a lot easier for the database class to
> replace
> > 'dodgy' queries with something more friendly for that database.
> 
> `dodgy` is presume?
> 
> why are there `'s in that query?
> 
> what are they good for?
> 
> regards,
> 
> usleep
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp-hackers at striderweb.com  Mon Oct  1 15:37:30 2007
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon Oct  1 15:37:47 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <161617690709291925q5b1dfca6g574389591d7bb40e@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<0c1401c800fa$a632a4e0$6402a8c0@DELL8600>
	<2522E2C7-4D9B-46BD-B602-62F62622B87B@gmail.com>
	<7cf9ae490709271009g73c9d040r7be5079b78490466@mail.gmail.com>
	<c8f37c930709282233o4b6654d7v8622575867be1bc8@mail.gmail.com>
	<BF0AA882-5E2C-4F33-879B-046DB96DE75D@gmail.com>
	<31C40DB8-FA33-406D-B254-6CF5547D6F46@striderweb.com>
	<161617690709291504r694a5cbg7c39382e3371139e@mail.gmail.com>
	<46FEDF61.8050906@ntlworld.com>
	<161617690709291925q5b1dfca6g574389591d7bb40e@mail.gmail.com>
Message-ID: <A9B5CA6E-9B31-4D03-8FA5-BC18E0824B2C@striderweb.com>

> The problem is how do you display the results?

It's a good question.  I think a good answer is... show the page except.

As Pete Westwood points out, Pages can have excerpts just like Posts  
do.  Expose this ability in the UI, and on the Search Results, if a  
Page has an excerpt, show it, otherwise just show the Page Title.

As much as Matt abhors additional user options in Core, I agree with  
some others here that Searching Pages should be an option.  Although  
I suppose it could also be done with an altered Search function in  
the PHP....

Stephen

On Sep 29, 2007, at 9:25 PM, Otto wrote:

> The problem is how do you display the results? If somebody has, say,
> an email form on a Page, and a search happens to find it, then it's
> going to be returned in the Loop and now your form displays on the
> search results page.
>
> If you're going to allow searching of Pages, then there is going to be
> stuff displayed on the search results page that you may not want
> displayed on that page.
From ryan at boren.nu  Mon Oct  1 21:06:40 2007
From: ryan at boren.nu (Ryan Boren)
Date: Mon Oct  1 21:08:48 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>
	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
Message-ID: <c8f37c930710011406o5e2c7ac7qe5c34d3674e3f46d@mail.gmail.com>

On 9/30/07, usleepless@gmail.com <usleepless@gmail.com> wrote:
> Ryan,
>
> On 9/29/07, Ryan Boren <ryan@boren.nu> wrote:
> > Making our SQL more portable and making bits of the schema pluggable
> > is cool.
>
> thank you for chiming in on this. but:
>
> what exactly does this mean? you indicate that you are fine with
> abstracting the schema ( up to the point it runs on pgsql as well ? )
>
> is this correct?

Someone suggested assigning types to variables so that different DBs
can set them as desired.  That's cool.  We could also make the entire
schema definition replaceable.  The whole thing is defined in one
variable that can be easily overridden.  Doing so would mean
maintainers of other DBs would have to stay up-to-date on schema
changes, however.

> > We have some tickets in trac about eliminating enums,
> > sanitizing ints, and such.  Patches welcome.  Tested patches that
> > upgrade cleanly from previous releases are even more welcome. :-)
>
> i am willing and able to reform the schema up to the point that it
> still runs on mysql ( without performance degration at all ) and works
> for postgresql as well.
>
> but, for me this will only have value if other patches are welcome too:
>   fix some queries which use "`" character
>   remove "IGNORE" keyword from certain INSERT-stmts
>   fix some GROUP BY-stmts
>   fix limit stmts from LIMIT x,y to LIMIT y OFFSET x
>   fix use of C-style operator "!=" to "<>"
>   fix writing '' to fields which you want to be filled with the
> default-value from the schema ( writing posts and pages )
>   abstract FOUND_ROWS
>
> mysql specific functions do not need to be touched at all: these can
> be defined in pgsql and there is a mysql-function-library for pgsql
> available.

Making our SQL more portable while not affecting MySQL performance is
fine by me.  WP will still target MySQL, but avoiding MySQLisms where
they are unnecessary seems a harmless way to be more portable and cut
down on the work of those trying to support other DBs.

Ryan
From wp-hackers at striderweb.com  Mon Oct  1 22:11:46 2007
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon Oct  1 22:11:54 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <46FF9DED.4020608@yadan.net>
References: <20070930050851.0426ca48@localhost>	<8f93a7390709300530w666ae708tca185751cb04b62e@mail.gmail.com>	<20070930054415.5658b144@localhost>
	<8f93a7390709300653i147250c9i54b88055c00dad33@mail.gmail.com>
	<46FF9DED.4020608@yadan.net>
Message-ID: <0C79A376-BAD3-4E8F-B8ED-1F86D1DEC840@striderweb.com>

+1 on this.  From a user standpoint this is messed up, as WordPress  
_seems_ to check all plugins for updates, but silently is _not_  
checking many of them.

We need to either allow plugins not directly hosted at Wordpress  
(including non-GPL) to play, or make it clear within the interface  
which plugins are being checked and which are not.  As configuration  
problems can prevent even WP hosted plugins from being checked, I  
would think _both_ suggestions should be pursued.

I understand the desire to champion open-source licensing, but  
putting that _before_ usability seems like some skewed priorities to me.

Stephen


On Sep 30, 2007, at 8:00 AM, Omry Yadan wrote:

> now, what about non-gpl [compatible] plugins?
>
> how can those plugins receive the same service?
>
> do we agree that for the sake of the users, it's better to enable  
> this functionality for all plugins, regardless of their license?
>
> (for the record, I don't have much to gain here personally, my own  
> plugin got it's o
From robin.adr at gmail.com  Mon Oct  1 21:41:01 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Mon Oct  1 22:15:55 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <000f01c8043c$53d18cd0$fb74a670$@net>
References: <46FC6EC9.9010004@comcast.net>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name> <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
	<000f01c8043c$53d18cd0$fb74a670$@net>
Message-ID: <d135ca9c0710011441j2cccf7afw7b693706eb389c80@mail.gmail.com>

They're quotation marks symbolizing MySQL fields/tables/databases, versus
straight quotes (') which symbolize strings.

On 10/1/07, Computer Guru <computerguru@neosmart.net> wrote:
>
> I'm sure it's just a bad mysql habit and doesn't mean anything ;-)
>
> Computer Guru
> NeoSmart Technologies
> http://neosmart.net/
>
>
> > -----Original Message-----
> > From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> > bounces@lists.automattic.com] On Behalf Of usleepless@gmail.com
> > Sent: Monday, October 01, 2007 4:04 PM
> > To: wp-hackers@lists.automattic.com
> > Subject: Re: [wp-hackers] PostgreSQL port status?
> >
> > On 10/1/07, DD32 <wordpress@dd32.id.au> wrote:
> > > On Mon, 01 Oct 2007 11:22:48 +1000, Jacob <wordpress@santosj.name>
> > wrote:
> > > > My thoughts was having all of the queries as filters specific to
> > the
> > > > function and query. You would end up with about several hundred
> > filters,
> > > > but it would allow for the easiest transition. It wouldn't be as
> > hard or
> > > > difficult as porting and can be just a plugin. It would also allow
> > for
> > > > removing upgrading conflicts.
> > >
> > > That'd be rather pointless IMO, If your wanting to replace the
> > database,
> > > then you use your own db class file anyway, All queries will be
> > passed
> > > directly to the class, Your code would handle the query before its
> > made.
> > >
> > > It would probably be easier if all of WP used the prepare()
> > functionality
> > > that 2.3 has introduced, AFAIK that means it'll be using something
> > like
> > > "SELECT `id` FROM `table` WHERE `name` = '%s' ORDER BY %s" with
> > parameters
> > > passed in, It would make it a lot easier for the database class to
> > replace
> > > 'dodgy' queries with something more friendly for that database.
> >
> > `dodgy` is presume?
> >
> > why are there `'s in that query?
> >
> > what are they good for?
> >
> > regards,
> >
> > usleep
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From computerguru at neosmart.net  Mon Oct  1 22:25:39 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Mon Oct  1 22:25:50 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <d135ca9c0710011441j2cccf7afw7b693706eb389c80@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<47004BE8.2040306@santosj.name>
	<op.tzhwk4vqk6w4mc@dd32.no-ip.com>	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>	<000f01c8043c$53d18cd0$fb74a670$@net>
	<d135ca9c0710011441j2cccf7afw7b693706eb389c80@mail.gmail.com>
Message-ID: <001601c8047a$02477da0$06d678e0$@net>

Yeah, I know..

I think he's referring to the fact that there is no real reason to use these MySQL-specific ` when a quotation mark will suffice :)

Computer Guru
NeoSmart Technologies
http://neosmart.net/


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of Robin Adrianse
> Sent: Tuesday, October 02, 2007 12:41 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] PostgreSQL port status?
> 
> They're quotation marks symbolizing MySQL fields/tables/databases,
> versus
> straight quotes (') which symbolize strings.
> 
> On 10/1/07, Computer Guru <computerguru@neosmart.net> wrote:
> >
> > I'm sure it's just a bad mysql habit and doesn't mean anything ;-)
> >
> > Computer Guru
> > NeoSmart Technologies
> > http://neosmart.net/
> >
> >
> > > -----Original Message-----
> > > From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> > > bounces@lists.automattic.com] On Behalf Of usleepless@gmail.com
> > > Sent: Monday, October 01, 2007 4:04 PM
> > > To: wp-hackers@lists.automattic.com
> > > Subject: Re: [wp-hackers] PostgreSQL port status?
> > >
> > > On 10/1/07, DD32 <wordpress@dd32.id.au> wrote:
> > > > On Mon, 01 Oct 2007 11:22:48 +1000, Jacob
> <wordpress@santosj.name>
> > > wrote:
> > > > > My thoughts was having all of the queries as filters specific
> to
> > > the
> > > > > function and query. You would end up with about several hundred
> > > filters,
> > > > > but it would allow for the easiest transition. It wouldn't be
> as
> > > hard or
> > > > > difficult as porting and can be just a plugin. It would also
> allow
> > > for
> > > > > removing upgrading conflicts.
> > > >
> > > > That'd be rather pointless IMO, If your wanting to replace the
> > > database,
> > > > then you use your own db class file anyway, All queries will be
> > > passed
> > > > directly to the class, Your code would handle the query before
> its
> > > made.
> > > >
> > > > It would probably be easier if all of WP used the prepare()
> > > functionality
> > > > that 2.3 has introduced, AFAIK that means it'll be using
> something
> > > like
> > > > "SELECT `id` FROM `table` WHERE `name` = '%s' ORDER BY %s" with
> > > parameters
> > > > passed in, It would make it a lot easier for the database class
> to
> > > replace
> > > > 'dodgy' queries with something more friendly for that database.
> > >
> > > `dodgy` is presume?
> > >
> > > why are there `'s in that query?
> > >
> > > what are they good for?
> > >
> > > regards,
> > >
> > > usleep
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at dd32.id.au  Mon Oct  1 23:15:21 2007
From: wordpress at dd32.id.au (DD32)
Date: Mon Oct  1 23:15:17 2007
Subject: [wp-hackers] PostgreSQL port status?
Message-ID: <op.tzjj7vn8k6w4mc@dd32.no-ip.com>


From wordpress at dd32.id.au  Mon Oct  1 23:21:26 2007
From: wordpress at dd32.id.au (DD32)
Date: Mon Oct  1 23:55:47 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <op.tzjj7vn8k6w4mc@dd32.no-ip.com>
References: <op.tzjj7vn8k6w4mc@dd32.no-ip.com>
Message-ID: <op.tzjkh0z1k6w4mc@dd32.no-ip.com>

Apologies.. Seems my mail client (Opera 9.5 Alpha) lost the message while sending :(

On Tue, 02 Oct 2007 09:15:21 +1000, DD32 <wordpress@dd32.id.au> wrote:

> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 



From ai2097 at users.sourceforge.net  Tue Oct  2 00:12:48 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Tue Oct  2 00:12:55 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <0C79A376-BAD3-4E8F-B8ED-1F86D1DEC840@striderweb.com>
References: <20070930050851.0426ca48@localhost>
	<8f93a7390709300530w666ae708tca185751cb04b62e@mail.gmail.com>
	<20070930054415.5658b144@localhost>
	<8f93a7390709300653i147250c9i54b88055c00dad33@mail.gmail.com>
	<46FF9DED.4020608@yadan.net>
	<0C79A376-BAD3-4E8F-B8ED-1F86D1DEC840@striderweb.com>
Message-ID: <20071001171248.44a8a3af@localhost>

On Mon, 1 Oct 2007 17:11:46 -0500, Stephen Rider
<wp-hackers@striderweb.com> wrote:

> +1 on this.  From a user standpoint this is messed up, as WordPress  
> _seems_ to check all plugins for updates, but silently is _not_  
> checking many of them.
> 
> We need to either allow plugins not directly hosted at Wordpress  
> (including non-GPL) to play, or make it clear within the interface  
> which plugins are being checked and which are not.  As configuration  
> problems can prevent even WP hosted plugins from being checked, I  
> would think _both_ suggestions should be pursued.
>
> I understand the desire to champion open-source licensing, but  
> putting that _before_ usability seems like some skewed priorities to
> me.
<snip>

It's comparativley easy to check for updates when they're all
in one central place. I doubt that there was any specific pre-meditated
attempt at prejudicing non-hosted plugins or non-GPL'd plugins. It's
most likely that all of this was an oversight in light of a seemingly
straightforward feature. Unfortunately, things are almost never as
straightforward as we'd like them to be. ;)

That said, non-hosted plugins and plugins that can never be hosted just
won't work with the system as it stands. A separate update registry
open to everyone is probably a Good Thing; WordPress hosted plugins
should just automatically integrate with it, and third parties would
need to keep it up to date manually. It'd probably wind up being
similar in function to <http://www.wp-plugins-db.org/>.

But, being such a server-side-dependent thing, it's probably not going
to be an easy thing for everybody to participate in development-wise. :/


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From m at mullenweg.com  Tue Oct  2 00:52:43 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Oct  2 00:52:50 2007
Subject: [wp-hackers] Page searching examples [was: 2.4
	planning	discussion]
In-Reply-To: <7cf9ae490709292051n6cdb6496y170d13b893dda886@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>	<0c1401c800fa$a632a4e0$6402a8c0@DELL8600>	<2522E2C7-4D9B-46BD-B602-62F62622B87B@gmail.com>	<7cf9ae490709271009g73c9d040r7be5079b78490466@mail.gmail.com>	<c8f37c930709282233o4b6654d7v8622575867be1bc8@mail.gmail.com>	<BF0AA882-5E2C-4F33-879B-046DB96DE75D@gmail.com>	<31C40DB8-FA33-406D-B254-6CF5547D6F46@striderweb.com>	<161617690709291504r694a5cbg7c39382e3371139e@mail.gmail.com>	<46FEDF61.8050906@ntlworld.com>	<161617690709291925q5b1dfca6g574389591d7bb40e@mail.gmail.com>
	<7cf9ae490709292051n6cdb6496y170d13b893dda886@mail.gmail.com>
Message-ID: <4701965B.7050703@mullenweg.com>

Daniel Cameron wrote:
> Like I mentioned before, if pages are going to be searched in a future
> release it should be an option. And while there is an option to
> enable/disable page searching there easily can be a field to exclude page or
> post ids.

If we decide page searching is the best for most users, there will 
likely not be a UI-exposed option to turn it off, you'll need a plugin.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From m at mullenweg.com  Tue Oct  2 01:00:19 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Oct  2 01:00:26 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>	<c8f37c930709282247q67d553d0j6ec301aa8c6b8754@mail.gmail.com>	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<47004BE8.2040306@santosj.name>
	<op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
Message-ID: <47019823.4030406@mullenweg.com>

usleepless@gmail.com wrote:
> why are there `'s in that query?
> 
> what are they good for?

Because if a field name or table name conflicts with a MySQL reserved 
keyword the query will fail with a cryptic error messages, so it's good 
practice to put the `` quotes around them all.


-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From r at schestowitz.com  Tue Oct  2 05:09:16 2007
From: r at schestowitz.com (Roy Schestowitz)
Date: Tue Oct  2 05:18:03 2007
Subject: [wp-hackers] WP-Hackers Stats for September 2007
Message-ID: <4701D27C.7060604@schestowitz.com>

  ?  Times are Greenwich Mean Time (GMT) +0:00

  ?  Statistics span a period of one month

  ?  Subject line formatted consistently "WP-Hackers Stats for <MONTH>
<YEAR>"

  ?  Killfile <subject contains "WP-Hackers Stats for "> if uninterested
____________________________________________________________

Stats for wp-hackers
~~~~~~~~~~~~~~~~~~~~
***** People who have written most messages:
+----+-----Author-----------------------------------+--Msg-+-Percent-+
|  1 | viper viper007bond.com                       |   79 |  7.11 % |
|  2 | computerguru neosmart.net                    |   71 |  6.39 % |
|  3 | omry yadan.net                               |   59 |  5.31 % |
|  4 | otto ottodestruct.com                        |   52 |  4.68 % |
|  5 | wordpress tekartist.org                      |   51 |  4.59 % |
|  6 | m mullenweg.com                              |   49 |  4.41 % |
|  7 | lists.automattic.com callum-macdonald.com    |   45 |  4.05 % |
|  8 | speedboxer gmail.com                         |   38 |  3.42 % |
|  9 | morty gmx.net                                |   37 |  3.33 % |
| 10 | zamoose gmail.com                            |   30 |  2.70 % |
| 11 | ag.ml2007 zirona.com                         |   28 |  2.52 % |
| 12 | mark.wordpress txfx.net                      |   26 |  2.34 % |
| 13 | wordpress dd32.id.au                         |   23 |  2.07 % |
| 14 | jeremy.visser gmail.com                      |   23 |  2.07 % |
| 15 | wp-hackers striderweb.com                    |   22 |  1.98 % |
| 16 | ai2097 users.sourceforge.net                 |   21 |  1.89 % |
| 17 | yahgrp poplarware.com                        |   20 |  1.80 % |
| 18 | lists07 wiltgen.net                          |   20 |  1.80 % |
| 19 | peter.westwood ftwr.co.uk                    |   19 |  1.71 % |
| 20 | johnbillion+wp gmail.com                     |   18 |  1.62 % |
| 21 | dragonwing dragonu.net                       |   17 |  1.53 % |
| 22 | ozh planetozh.com                            |   16 |  1.44 % |
| 23 | hovercrafter earthlink.net                   |   15 |  1.35 % |
| 24 | lloydomattic gmail.com                       |   12 |  1.08 % |
| 25 | dan scatter3d.com                            |   11 |  0.99 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |  309 | 27.81 % |
+----+----------------------------------------------+------+---------+

***** Best authors, by total size of their messages (w/o quoting):
+----+-----Author-------------------------------------------+-KBytes-+
|  1 | computerguru neosmart.net                            |   54.9 |
|  2 | otto ottodestruct.com                                |   46.6 |
|  3 | viper viper007bond.com                               |   41.2 |
|  4 | m mullenweg.com                                      |   38.6 |
|  5 | dragonwing dragonu.net                               |   38.5 |
|  6 | ag.ml2007 zirona.com                                 |   35.3 |
|  7 | morty gmx.net                                        |   33.6 |
|  8 | omry yadan.net                                       |   33.5 |
|  9 | wordpress tekartist.org                              |   27.2 |
| 10 | lists.automattic.com callum-macdonald.com            |   26.2 |
| 11 | wordpress dd32.id.au                                 |   23.4 |
| 12 | ai2097 users.sourceforge.net                         |   22.4 |
| 13 | peter.westwood ftwr.co.uk                            |   19.1 |
| 14 | zamoose gmail.com                                    |   17.5 |
| 15 | yahgrp poplarware.com                                |   17.3 |
| 16 | mark.wordpress txfx.net                              |   17.2 |
| 17 | speedboxer gmail.com                                 |   15.9 |
| 18 | hovercrafter earthlink.net                           |   15.5 |
| 19 | emmensetech gmail.com                                |   12.6 |
| 20 | wp-hackers striderweb.com                            |   12.5 |
| 21 | r schestowitz.com                                    |   11.8 |
| 22 | lists07 wiltgen.net                                  |   11.2 |
| 23 | info mindsharestudios.com                            |   11.1 |
| 24 | ozh planetozh.com                                    |   10.3 |
| 25 | jeremy.visser gmail.com                              |    9.5 |
+----+------------------------------------------------------+--------+

***** Best authors, by average size of their message (w/o quoting):
+----+-----Author--------------------------------------------+-bytes-+
|  1 | emmensetech gmail.com                                 |  6445 |
|  2 | alex mysoutham.com                                    |  3661 |
|  3 | leonid mamchenkov.net                                 |  2326 |
|  4 | dragonwing dragonu.net                                |  2317 |
|  5 | wyldwolf gmail.com                                    |  2024 |
|  6 | wordpress santosj.name                                |  1862 |
|  7 | msturm10 gmail.com                                    |  1804 |
|  8 | mike_walsh mindspring.com                             |  1791 |
|  9 | amystephen gmail.com                                  |  1631 |
| 10 | mylists polite.se                                     |  1439 |
| 11 | denis mesoconcepts.com                                |  1372 |
| 12 | CaptainN2003 yahoo.com                                |  1371 |
| 13 | reuben.pearse pslconnect.com                          |  1291 |
| 14 | ag.ml2007 zirona.com                                  |  1290 |
| 15 | info mindsharestudios.com                             |  1267 |
| 16 | admin laptoptips.ca                                   |  1267 |
| 17 | villiageidiot gmail.com                               |  1215 |
| 18 | r schestowitz.com                                     |  1211 |
| 19 | ekm seastorm.com                                      |  1201 |
| 20 | docwhat+list.wp.hackers gerf.org                      |  1190 |
| 21 | burobjorn gmail.com                                   |  1185 |
| 22 | jaredbangs gmail.com                                  |  1155 |
| 23 | email swaroophegde.com                                |  1150 |
| 24 | berpasan gmail.com                                    |  1119 |
| 25 | usleepless gmail.com                                  |  1117 |
+----+-------------------------------------------------------+-------+

***** Table showing the most successful subjects:
+----+----Subject-----------------------------------+--Msg-+-Percent-+
|  1 | [wp-hackers] Plugin update & security / priv |  108 |  9.72 % |
|  2 | [wp-hackers] Plugin Challenge: Post from an  |   43 |  3.87 % |
|  3 | [wp-hackers] Automatic feedback from users   |   35 |  3.15 % |
|  4 | [wp-hackers] Packing JavaScript              |   34 |  3.06 % |
|  5 | [wp-hackers] Pseudo-Cron                     |   34 |  3.06 % |
|  6 | [wp-hackers] Proposal: Add a Privacy Option: |   30 |  2.70 % |
|  7 | [wp-hackers] Future of wp-hackers            |   26 |  2.34 % |
|  8 | [wp-hackers] Shared Knowledge for Developers |   25 |  2.25 % |
|  9 | [wp-hackers] Re: Packing JavaScript          |   25 |  2.25 % |
| 10 | [wp-hackers] Plugin to post source code need |   24 |  2.16 % |
| 11 | [wp-hackers] Feed stats in WordPress or a pl |   24 |  2.16 % |
| 12 | [wp-hackers] PHPMailer was a mistake         |   22 |  1.98 % |
| 13 | [wp-hackers] PostgreSQL port status?         |   22 |  1.98 % |
| 14 | [wp-hackers] Plugin Challenge: Post from an  |   21 |  1.89 % |
| 15 | [wp-hackers] Ajaxian Page Ordering for Wordp |   19 |  1.71 % |
| 16 | [wp-hackers] New Codex page on WordPress Opt |   18 |  1.62 % |
| 17 | [wp-hackers] 2.4 planning discussion         |   17 |  1.53 % |
| 18 | [wp-hackers] WordPress plugin update bugs    |   16 |  1.44 % |
| 19 | [wp-hackers] XCache Variable Storage vs. WP  |   14 |  1.26 % |
| 20 | [wp-hackers] Re: PHP notice warnings         |   14 |  1.26 % |
| 21 | [wp-hackers] Structured Blogging?            |   13 |  1.17 % |
| 22 | [wp-hackers] Switching to Swift Mailer?      |   13 |  1.17 % |
| 23 | [wp-hackers] Clarification on Tagging Plugin |   13 |  1.17 % |
| 24 | [wp-hackers] Best uploader I've seen         |   13 |  1.17 % |
| 25 | [wp-hackers] WordPress.org Plugins Directory |   13 |  1.17 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |  475 | 42.75 % |
+----+----------------------------------------------+------+---------+

***** Most used email clients:
+----+----Mailer------------------------------------+--Msg-+-Percent-+
|  1 | Google Mail/Other                            |  445 | 40.05 % |
|  2 | Thunderbird 2.0.0.6 (Windows/20070728)       |  167 | 15.03 % |
|  3 | Apple Mail (2.752.3)                         |  125 | 11.25 % |
|  4 | Microsoft Office Outlook 12.0                |   71 |  6.39 % |
|  5 | Icedove 1.5.0.12 (X11/20070730)              |   32 |  2.88 % |
|  6 | Evolution 2.10.1                             |   28 |  2.52 % |
|  7 | Thunderbird 2.0.0.5 (X11/20070719)           |   27 |  2.43 % |
|  8 | Apple Mail (2.752.2)                         |   25 |  2.25 % |
|  9 | Opera Mail/9.50 (Win32)                      |   22 |  1.98 % |
| 10 | Claws Mail 3.0.0 (GTK+ 2.10.14; i686-pc-linu |   21 |  1.89 % |
| 11 | Thunderbird 1.5.0.10 (Windows/20070221)      |   20 |  1.80 % |
| 12 | Thunderbird 2.0.0.6 (X11/20070728)           |   18 |  1.62 % |
| 13 | Thunderbird 2.0.0.5 (X11/20070727)           |   18 |  1.62 % |
| 14 | Mozilla/5.x                                  |   15 |  1.35 % |
| 15 | Mutt                                         |    8 |  0.72 % |
| 16 | Thunderbird 2.0.0.6 (Macintosh/20070728)     |    7 |  0.63 % |
| 17 | Icedove 1.5.0.12 (X11/20070607)              |    6 |  0.54 % |
| 18 | Thunderbird 1.5.0.13 (Windows/20070809)      |    5 |  0.45 % |
| 19 | Microsoft-Entourage/11.3.6.070618            |    5 |  0.45 % |
| 20 | Microsoft Outlook Express 6.x                |    5 |  0.45 % |
| 21 | Thunderbird 2.0.0.6 (X11/20070924)           |    5 |  0.45 % |
| 22 | SquirrelMail/1.4.9a                          |    4 |  0.36 % |
| 23 | Apple Mail (2.901)                           |    3 |  0.27 % |
| 24 | Icedove 1.5.0.10 (X11/20070329)              |    3 |  0.27 % |
| 25 | Thunderbird 2.0.0.6 (X11/20070804)           |    3 |  0.27 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |   23 |  2.07 % |
+----+----------------------------------------------+------+---------+

***** Table of maximal quoting:
+----+-----Author------------------------------------------+-Percent-+
|  1 | wordpress uberdose.com                              | 83.22 % |
|  2 | MattPat mattpat.net                                 | 83.01 % |
|  3 | james dawning.ca                                    | 81.11 % |
|  4 | howachen gmail.com                                  | 79.77 % |
|  5 | john.piasetzki gmail.com                            | 79.34 % |
|  6 | lists.automattic.com callum-macdonald.com           | 74.77 % |
|  7 | awgandrews gmail.com                                | 74.30 % |
|  8 | computerguru neosmart.net                           | 73.01 % |
|  9 | chris.hearn01 ntlworld.com                          | 72.83 % |
| 10 | hovenko linpro.no                                   | 70.28 % |
| 11 | andy yellowswordfish.com                            | 68.37 % |
| 12 | m marcosmedia.com                                   | 68.14 % |
| 13 | viper viper007bond.com                              | 67.22 % |
| 14 | christine neato.co.nz                               | 66.76 % |
| 15 | laebshade gmail.com                                 | 65.84 % |
| 16 | dabbaking gmail.com                                 | 65.74 % |
| 17 | wordpress tekartist.org                             | 65.63 % |
| 18 | berpasan gmail.com                                  | 64.88 % |
| 19 | hovercrafter earthlink.net                          | 64.18 % |
| 20 | johnbillion+wp gmail.com                            | 63.14 % |
| 21 | omry yadan.net                                      | 63.05 % |
| 22 | les lcb.me.uk                                       | 60.42 % |
| 23 | robin.adr gmail.com                                 | 59.96 % |
| 24 | alex.cologne googlemail.com                         | 57.53 % |
| 25 | lists.permutype gmail.com                           | 56.15 % |
+----+-----------------------------------------------------+---------+
|    | average                                             | 51.42 % |
+----+-----------------------------------------------------+---------+

***** Graph showing number of messages written during hours of day:

100% -----------------------#------------------------- - 77
 90% -----------------------#-#-------#---------#----- msgs
 80% -------------------#-#-#-#-------#-#-------#-----
 70% -------------------#-#-#-#-#-#---#-#-#-----#-#---
 60% -------------------#-#-#-#-#-#-#-#-#-#-----#-#---
 50% -#-#---------------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
 40% -#-#-------------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
 30% -#-#-----------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
 20% -#-#-#---------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
 10% -#-#-#-----#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
      * * * * * * * * * * * * * * * * * * * * * * * *
hour  0         5           11          17          23


***** Graph showing number of messages written during days of month:

100% ---------------------------------------------------#----------- - 135
 90% ---------------------------------------------------#----------- msgs
 80% ---------------------------------------------------#-----------
 70% -------------------------------------------------#-#-----------
 60% -----------------------------------------------#-#-#-----------
 50% -----------------------------------------------#-#-#-----------
 40% ---------------------------------------------#-#-#-#-----------
 30% -----------------------#-----#-#---#-#-------#-#-#-#-----------
 20% -------#-#-------------#-----#-#-#-#-#-#-#-#-#-#-#-#-#---------
 10% -#---#-#-#-#-#-#-#---#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#---
      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 day  1         6           12          18          24            31


***** Graph showing number of messages written during days of week:

100% ---------#------------------- - 265
 90% ---------#------------------- msgs
 80% ---------#-------------------
 70% -----#---#-------------------
 60% -----#---#---------------#---
 50% -#---#---#-----------#---#---
 40% -#---#---#---#-------#---#---
 30% -#---#---#---#---#---#---#---
 20% -#---#---#---#---#---#---#---
 10% -#---#---#---#---#---#---#---
      *   *   *   *   *   *   *   
     Mon Tue Wed Thu Fri Sat Sun
!!!!! Warning: 1 message(s) not counted.


***** Maximal quoting:
      Author     : computerguru neosmart.net
      Subject    : [wp-hackers] PHPMailer was a mistake
      Date       : Sat, 15 Sep 2007 22:01:43 +0300
      Quote ratio: 97.78% / 14988 bytes

***** Longest message:
      Author     : computerguru neosmart.net
      Subject    : [wp-hackers] PHPMailer was a mistake
      Date       : Sun, 16 Sep 2007 01:04:23 +0300
      Size       : 23603 bytes

***** Most successful subject:
      Subject    : [wp-hackers] Plugin update & security / privacy
      No. of msgs: 108
      Total size : 206838 bytes

***** Final summary:
      Total number of messages:             1111
      Total number of different authors:    117
      Total number of different subjects:   147
      Total size of messages (w/o headers): 1782190 bytes
      Average size of a message:            1604 bytes


***** Generated by MailListStat v1.3, (C) 2001-2003 <marki (at) nexin.sk>
***** See http://freshmeat.net/projects/mls for details...

DISCLAIMER: Stats automatically produced. Remember that stats are often
meaningless and deceiving.
From viper at viper007bond.com  Tue Oct  2 05:20:32 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Tue Oct  2 05:20:42 2007
Subject: [wp-hackers] WP-Hackers Stats for September 2007
In-Reply-To: <4701D27C.7060604@schestowitz.com>
References: <4701D27C.7060604@schestowitz.com>
Message-ID: <8f93a7390710012220q16d8c69em460d3869fbaf43ea@mail.gmail.com>

Wow, I was a busy boy last month! :O

On 10/1/07, Roy Schestowitz <r@schestowitz.com> wrote:
>
>   ?  Times are Greenwich Mean Time (GMT) +0:00
>
>   ?  Statistics span a period of one month
>
>   ?  Subject line formatted consistently "WP-Hackers Stats for <MONTH>
> <YEAR>"
>
>   ?  Killfile <subject contains "WP-Hackers Stats for "> if uninterested
> ____________________________________________________________
>
> Stats for wp-hackers
> ~~~~~~~~~~~~~~~~~~~~
> ***** People who have written most messages:
> +----+-----Author-----------------------------------+--Msg-+-Percent-+
> |  1 | viper viper007bond.com                       |   79 |  7.11 % |
> |  2 | computerguru neosmart.net                    |   71 |  6.39 % |
> |  3 | omry yadan.net                               |   59 |  5.31 % |
> |  4 | otto ottodestruct.com                        |   52 |  4.68 % |
> |  5 | wordpress tekartist.org                      |   51 |  4.59 % |
> |  6 | m mullenweg.com                              |   49 |  4.41 % |
> |  7 | lists.automattic.com callum-macdonald.com    |   45 |  4.05 % |
> |  8 | speedboxer gmail.com                         |   38 |  3.42 % |
> |  9 | morty gmx.net                                |   37 |  3.33 % |
> | 10 | zamoose gmail.com                            |   30 |  2.70 % |
> | 11 | ag.ml2007 zirona.com                         |   28 |  2.52 % |
> | 12 | mark.wordpress txfx.net                      |   26 |  2.34 % |
> | 13 | wordpress dd32.id.au                         |   23 |  2.07 % |
> | 14 | jeremy.visser gmail.com                      |   23 |  2.07 % |
> | 15 | wp-hackers striderweb.com                    |   22 |  1.98 % |
> | 16 | ai2097 users.sourceforge.net                 |   21 |  1.89 % |
> | 17 | yahgrp poplarware.com                        |   20 |  1.80 % |
> | 18 | lists07 wiltgen.net                          |   20 |  1.80 % |
> | 19 | peter.westwood ftwr.co.uk                    |   19 |  1.71 % |
> | 20 | johnbillion+wp gmail.com                     |   18 |  1.62 % |
> | 21 | dragonwing dragonu.net                       |   17 |  1.53 % |
> | 22 | ozh planetozh.com                            |   16 |  1.44 % |
> | 23 | hovercrafter earthlink.net                   |   15 |  1.35 % |
> | 24 | lloydomattic gmail.com                       |   12 |  1.08 % |
> | 25 | dan scatter3d.com                            |   11 |  0.99 % |
> +----+----------------------------------------------+------+---------+
> |    | other                                        |  309 | 27.81 % |
> +----+----------------------------------------------+------+---------+
>
> ***** Best authors, by total size of their messages (w/o quoting):
> +----+-----Author-------------------------------------------+-KBytes-+
> |  1 | computerguru neosmart.net                            |   54.9 |
> |  2 | otto ottodestruct.com                                |   46.6 |
> |  3 | viper viper007bond.com                               |   41.2 |
> |  4 | m mullenweg.com                                      |   38.6 |
> |  5 | dragonwing dragonu.net                               |   38.5 |
> |  6 | ag.ml2007 zirona.com                                 |   35.3 |
> |  7 | morty gmx.net                                        |   33.6 |
> |  8 | omry yadan.net                                       |   33.5 |
> |  9 | wordpress tekartist.org                              |   27.2 |
> | 10 | lists.automattic.com callum-macdonald.com            |   26.2 |
> | 11 | wordpress dd32.id.au                                 |   23.4 |
> | 12 | ai2097 users.sourceforge.net                         |   22.4 |
> | 13 | peter.westwood ftwr.co.uk                            |   19.1 |
> | 14 | zamoose gmail.com                                    |   17.5 |
> | 15 | yahgrp poplarware.com                                |   17.3 |
> | 16 | mark.wordpress txfx.net                              |   17.2 |
> | 17 | speedboxer gmail.com                                 |   15.9 |
> | 18 | hovercrafter earthlink.net                           |   15.5 |
> | 19 | emmensetech gmail.com                                |   12.6 |
> | 20 | wp-hackers striderweb.com                            |   12.5 |
> | 21 | r schestowitz.com                                    |   11.8 |
> | 22 | lists07 wiltgen.net                                  |   11.2 |
> | 23 | info mindsharestudios.com                            |   11.1 |
> | 24 | ozh planetozh.com                                    |   10.3 |
> | 25 | jeremy.visser gmail.com                              |    9.5 |
> +----+------------------------------------------------------+--------+
>
> ***** Best authors, by average size of their message (w/o quoting):
> +----+-----Author--------------------------------------------+-bytes-+
> |  1 | emmensetech gmail.com                                 |  6445 |
> |  2 | alex mysoutham.com                                    |  3661 |
> |  3 | leonid mamchenkov.net                                 |  2326 |
> |  4 | dragonwing dragonu.net                                |  2317 |
> |  5 | wyldwolf gmail.com                                    |  2024 |
> |  6 | wordpress santosj.name                                |  1862 |
> |  7 | msturm10 gmail.com                                    |  1804 |
> |  8 | mike_walsh mindspring.com                             |  1791 |
> |  9 | amystephen gmail.com                                  |  1631 |
> | 10 | mylists polite.se                                     |  1439 |
> | 11 | denis mesoconcepts.com                                |  1372 |
> | 12 | CaptainN2003 yahoo.com                                |  1371 |
> | 13 | reuben.pearse pslconnect.com                          |  1291 |
> | 14 | ag.ml2007 zirona.com                                  |  1290 |
> | 15 | info mindsharestudios.com                             |  1267 |
> | 16 | admin laptoptips.ca                                   |  1267 |
> | 17 | villiageidiot gmail.com                               |  1215 |
> | 18 | r schestowitz.com                                     |  1211 |
> | 19 | ekm seastorm.com                                      |  1201 |
> | 20 | docwhat+list.wp.hackers gerf.org                      |  1190 |
> | 21 | burobjorn gmail.com                                   |  1185 |
> | 22 | jaredbangs gmail.com                                  |  1155 |
> | 23 | email swaroophegde.com                                |  1150 |
> | 24 | berpasan gmail.com                                    |  1119 |
> | 25 | usleepless gmail.com                                  |  1117 |
> +----+-------------------------------------------------------+-------+
>
> ***** Table showing the most successful subjects:
> +----+----Subject-----------------------------------+--Msg-+-Percent-+
> |  1 | [wp-hackers] Plugin update & security / priv |  108 |  9.72 % |
> |  2 | [wp-hackers] Plugin Challenge: Post from an  |   43 |  3.87 % |
> |  3 | [wp-hackers] Automatic feedback from users   |   35 |  3.15 % |
> |  4 | [wp-hackers] Packing JavaScript              |   34 |  3.06 % |
> |  5 | [wp-hackers] Pseudo-Cron                     |   34 |  3.06 % |
> |  6 | [wp-hackers] Proposal: Add a Privacy Option: |   30 |  2.70 % |
> |  7 | [wp-hackers] Future of wp-hackers            |   26 |  2.34 % |
> |  8 | [wp-hackers] Shared Knowledge for Developers |   25 |  2.25 % |
> |  9 | [wp-hackers] Re: Packing JavaScript          |   25 |  2.25 % |
> | 10 | [wp-hackers] Plugin to post source code need |   24 |  2.16 % |
> | 11 | [wp-hackers] Feed stats in WordPress or a pl |   24 |  2.16 % |
> | 12 | [wp-hackers] PHPMailer was a mistake         |   22 |  1.98 % |
> | 13 | [wp-hackers] PostgreSQL port status?         |   22 |  1.98 % |
> | 14 | [wp-hackers] Plugin Challenge: Post from an  |   21 |  1.89 % |
> | 15 | [wp-hackers] Ajaxian Page Ordering for Wordp |   19 |  1.71 % |
> | 16 | [wp-hackers] New Codex page on WordPress Opt |   18 |  1.62 % |
> | 17 | [wp-hackers] 2.4 planning discussion         |   17 |  1.53 % |
> | 18 | [wp-hackers] WordPress plugin update bugs    |   16 |  1.44 % |
> | 19 | [wp-hackers] XCache Variable Storage vs. WP  |   14 |  1.26 % |
> | 20 | [wp-hackers] Re: PHP notice warnings         |   14 |  1.26 % |
> | 21 | [wp-hackers] Structured Blogging?            |   13 |  1.17 % |
> | 22 | [wp-hackers] Switching to Swift Mailer?      |   13 |  1.17 % |
> | 23 | [wp-hackers] Clarification on Tagging Plugin |   13 |  1.17 % |
> | 24 | [wp-hackers] Best uploader I've seen         |   13 |  1.17 % |
> | 25 | [wp-hackers] WordPress.org Plugins Directory |   13 |  1.17 % |
> +----+----------------------------------------------+------+---------+
> |    | other                                        |  475 | 42.75 % |
> +----+----------------------------------------------+------+---------+
>
> ***** Most used email clients:
> +----+----Mailer------------------------------------+--Msg-+-Percent-+
> |  1 | Google Mail/Other                            |  445 | 40.05 % |
> |  2 | Thunderbird 2.0.0.6 (Windows/20070728)       |  167 | 15.03 % |
> |  3 | Apple Mail (2.752.3)                         |  125 | 11.25 % |
> |  4 | Microsoft Office Outlook 12.0                |   71 |  6.39 % |
> |  5 | Icedove 1.5.0.12 (X11/20070730)              |   32 |  2.88 % |
> |  6 | Evolution 2.10.1                             |   28 |  2.52 % |
> |  7 | Thunderbird 2.0.0.5 (X11/20070719)           |   27 |  2.43 % |
> |  8 | Apple Mail (2.752.2)                         |   25 |  2.25 % |
> |  9 | Opera Mail/9.50 (Win32)                      |   22 |  1.98 % |
> | 10 | Claws Mail 3.0.0 (GTK+ 2.10.14; i686-pc-linu |   21 |  1.89 % |
> | 11 | Thunderbird 1.5.0.10 (Windows/20070221)      |   20 |  1.80 % |
> | 12 | Thunderbird 2.0.0.6 (X11/20070728)           |   18 |  1.62 % |
> | 13 | Thunderbird 2.0.0.5 (X11/20070727)           |   18 |  1.62 % |
> | 14 | Mozilla/5.x                                  |   15 |  1.35 % |
> | 15 | Mutt                                         |    8 |  0.72 % |
> | 16 | Thunderbird 2.0.0.6 (Macintosh/20070728)     |    7 |  0.63 % |
> | 17 | Icedove 1.5.0.12 (X11/20070607)              |    6 |  0.54 % |
> | 18 | Thunderbird 1.5.0.13 (Windows/20070809)      |    5 |  0.45 % |
> | 19 | Microsoft-Entourage/11.3.6.070618            |    5 |  0.45 % |
> | 20 | Microsoft Outlook Express 6.x                |    5 |  0.45 % |
> | 21 | Thunderbird 2.0.0.6 (X11/20070924)           |    5 |  0.45 % |
> | 22 | SquirrelMail/1.4.9a                          |    4 |  0.36 % |
> | 23 | Apple Mail (2.901)                           |    3 |  0.27 % |
> | 24 | Icedove 1.5.0.10 (X11/20070329)              |    3 |  0.27 % |
> | 25 | Thunderbird 2.0.0.6 (X11/20070804)           |    3 |  0.27 % |
> +----+----------------------------------------------+------+---------+
> |    | other                                        |   23 |  2.07 % |
> +----+----------------------------------------------+------+---------+
>
> ***** Table of maximal quoting:
> +----+-----Author------------------------------------------+-Percent-+
> |  1 | wordpress uberdose.com                              | 83.22 % |
> |  2 | MattPat mattpat.net                                 | 83.01 % |
> |  3 | james dawning.ca                                    | 81.11 % |
> |  4 | howachen gmail.com                                  | 79.77 % |
> |  5 | john.piasetzki gmail.com                            | 79.34 % |
> |  6 | lists.automattic.com callum-macdonald.com           | 74.77 % |
> |  7 | awgandrews gmail.com                                | 74.30 % |
> |  8 | computerguru neosmart.net                           | 73.01 % |
> |  9 | chris.hearn01 ntlworld.com                          | 72.83 % |
> | 10 | hovenko linpro.no                                   | 70.28 % |
> | 11 | andy yellowswordfish.com                            | 68.37 % |
> | 12 | m marcosmedia.com                                   | 68.14 % |
> | 13 | viper viper007bond.com                              | 67.22 % |
> | 14 | christine neato.co.nz                               | 66.76 % |
> | 15 | laebshade gmail.com                                 | 65.84 % |
> | 16 | dabbaking gmail.com                                 | 65.74 % |
> | 17 | wordpress tekartist.org                             | 65.63 % |
> | 18 | berpasan gmail.com                                  | 64.88 % |
> | 19 | hovercrafter earthlink.net                          | 64.18 % |
> | 20 | johnbillion+wp gmail.com                            | 63.14 % |
> | 21 | omry yadan.net                                      | 63.05 % |
> | 22 | les lcb.me.uk                                       | 60.42 % |
> | 23 | robin.adr gmail.com                                 | 59.96 % |
> | 24 | alex.cologne googlemail.com                         | 57.53 % |
> | 25 | lists.permutype gmail.com                           | 56.15 % |
> +----+-----------------------------------------------------+---------+
> |    | average                                             | 51.42 % |
> +----+-----------------------------------------------------+---------+
>
> ***** Graph showing number of messages written during hours of day:
>
> 100% -----------------------#------------------------- - 77
> 90% -----------------------#-#-------#---------#----- msgs
> 80% -------------------#-#-#-#-------#-#-------#-----
> 70% -------------------#-#-#-#-#-#---#-#-#-----#-#---
> 60% -------------------#-#-#-#-#-#-#-#-#-#-----#-#---
> 50% -#-#---------------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
> 40% -#-#-------------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
> 30% -#-#-----------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
> 20% -#-#-#---------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
> 10% -#-#-#-----#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
>       * * * * * * * * * * * * * * * * * * * * * * * *
> hour  0         5           11          17          23
>
>
> ***** Graph showing number of messages written during days of month:
>
> 100% ---------------------------------------------------#----------- - 135
> 90% ---------------------------------------------------#----------- msgs
> 80% ---------------------------------------------------#-----------
> 70% -------------------------------------------------#-#-----------
> 60% -----------------------------------------------#-#-#-----------
> 50% -----------------------------------------------#-#-#-----------
> 40% ---------------------------------------------#-#-#-#-----------
> 30% -----------------------#-----#-#---#-#-------#-#-#-#-----------
> 20% -------#-#-------------#-----#-#-#-#-#-#-#-#-#-#-#-#-#---------
> 10% -#---#-#-#-#-#-#-#---#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#---
>       * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
> day  1         6           12          18          24            31
>
>
> ***** Graph showing number of messages written during days of week:
>
> 100% ---------#------------------- - 265
> 90% ---------#------------------- msgs
> 80% ---------#-------------------
> 70% -----#---#-------------------
> 60% -----#---#---------------#---
> 50% -#---#---#-----------#---#---
> 40% -#---#---#---#-------#---#---
> 30% -#---#---#---#---#---#---#---
> 20% -#---#---#---#---#---#---#---
> 10% -#---#---#---#---#---#---#---
>       *   *   *   *   *   *   *
>      Mon Tue Wed Thu Fri Sat Sun
> !!!!! Warning: 1 message(s) not counted.
>
>
> ***** Maximal quoting:
>       Author     : computerguru neosmart.net
>       Subject    : [wp-hackers] PHPMailer was a mistake
>       Date       : Sat, 15 Sep 2007 22:01:43 +0300
>       Quote ratio: 97.78% / 14988 bytes
>
> ***** Longest message:
>       Author     : computerguru neosmart.net
>       Subject    : [wp-hackers] PHPMailer was a mistake
>       Date       : Sun, 16 Sep 2007 01:04:23 +0300
>       Size       : 23603 bytes
>
> ***** Most successful subject:
>       Subject    : [wp-hackers] Plugin update & security / privacy
>       No. of msgs: 108
>       Total size : 206838 bytes
>
> ***** Final summary:
>       Total number of messages:             1111
>       Total number of different authors:    117
>       Total number of different subjects:   147
>       Total size of messages (w/o headers): 1782190 bytes
>       Average size of a message:            1604 bytes
>
>
> ***** Generated by MailListStat v1.3, (C) 2001-2003 <marki (at) nexin.sk>
> ***** See http://freshmeat.net/projects/mls for details...
>
> DISCLAIMER: Stats automatically produced. Remember that stats are often
> meaningless and deceiving.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From will at willnorris.com  Tue Oct  2 06:09:55 2007
From: will at willnorris.com (Will Norris)
Date: Tue Oct  2 06:11:07 2007
Subject: [wp-hackers] wp2.3 and dbDelta()
Message-ID: <EFDBAF3B-BB79-4F4B-94C0-D2A55F0DD589@willnorris.com>

How is a developer supposed to use dbDelta in Wordpress 2.3?  The  
problem is that the function has been moved into upgrade.php (from  
upgrade-functions.php), and if I include that file then it tries to  
upgrade the entire system.  Suggestions?

thanks,
will
From viper at viper007bond.com  Tue Oct  2 06:31:34 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Tue Oct  2 06:31:40 2007
Subject: [wp-hackers] wp2.3 and dbDelta()
In-Reply-To: <EFDBAF3B-BB79-4F4B-94C0-D2A55F0DD589@willnorris.com>
References: <EFDBAF3B-BB79-4F4B-94C0-D2A55F0DD589@willnorris.com>
Message-ID: <8f93a7390710012331s37a0930bs6884e658d306f80e@mail.gmail.com>

You're confusing /wp-admin/upgrade.php with /wp-admin/includes/upgrade.php
;)

On 10/1/07, Will Norris <will@willnorris.com> wrote:
>
> How is a developer supposed to use dbDelta in Wordpress 2.3?  The
> problem is that the function has been moved into upgrade.php (from
> upgrade-functions.php), and if I include that file then it tries to
> upgrade the entire system.  Suggestions?
>
> thanks,
> will
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From viper at viper007bond.com  Tue Oct  2 06:32:55 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Tue Oct  2 06:33:02 2007
Subject: [wp-hackers] wp2.3 and dbDelta()
In-Reply-To: <8f93a7390710012331s37a0930bs6884e658d306f80e@mail.gmail.com>
References: <EFDBAF3B-BB79-4F4B-94C0-D2A55F0DD589@willnorris.com>
	<8f93a7390710012331s37a0930bs6884e658d306f80e@mail.gmail.com>
Message-ID: <8f93a7390710012332y53c5bcfbg68433b8761aa4dce@mail.gmail.com>

I take that back. The top of the file require_once()'s in outputting and
auto-running files. My bad.

On 10/1/07, Viper007Bond <viper@viper007bond.com> wrote:
>
> You're confusing /wp-admin/upgrade.php with
> /wp-admin/includes/upgrade.php  ;)
>
> On 10/1/07, Will Norris <will@willnorris.com > wrote:
> >
> > How is a developer supposed to use dbDelta in Wordpress 2.3?  The
> > problem is that the function has been moved into upgrade.php (from
> > upgrade-functions.php), and if I include that file then it tries to
> > upgrade the entire system.  Suggestions?
> >
> > thanks,
> > will
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Viper007Bond | http://www.viper007bond.com/




-- 
Viper007Bond | http://www.viper007bond.com/
From omry at yadan.net  Tue Oct  2 06:36:23 2007
From: omry at yadan.net (Omry Yadan)
Date: Tue Oct  2 06:36:37 2007
Subject: [wp-hackers] WP-Hackers Stats for September 2007
In-Reply-To: <4701E621.7010700@gmail.com>
References: <4701D27C.7060604@schestowitz.com> <4701E621.7010700@gmail.com>
Message-ID: <4701E6E7.7010805@yadan.net>


>> ***** Table showing the most successful subjects:
>> +----+----Subject-----------------------------------+--Msg-+-Percent-+
>> |  1 | [wp-hackers] Plugin update & security / priv |  108 |  9.72 % |
>> +----+----------------------------------------------+------+---------+
>
> Boy, I love bikeshed discussions. :-D
This was a discussion on matters of principle, not a bikeshed discussion.

From ozh at planetozh.com  Tue Oct  2 08:05:54 2007
From: ozh at planetozh.com (Ozh)
Date: Tue Oct  2 08:06:03 2007
Subject: [wp-hackers] WordPress plugin update bugs
Message-ID: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>

>We need to either allow plugins not directly hosted at Wordpress 
>(including non-GPL) to play, or make it clear within the interface 
>which plugins are being checked and which are not.  As configuration 
>problems can prevent even WP hosted plugins from being checked, I 
>would think _both_ suggestions should be pursued.

I +1 making clear what is checked and what is not.

I'd like the plugin page to tell, for each plugin:
- checked, and up to date
- checked, and needs updating
- could not check (probably not hosted on wp.org, or something wrong)

I'm not too excited about the extra line under each plugin, which IMO 
quite clutters the screen.
I think an extra column for the plugin status, why not with just a neat 
icon to keep it tiny.

Also, I think that would be an extra motivation for plugin devs to get 
their plugin hosted on wp.org if it's clearly shown that their plugin is 
not pinged, rather than this "could be up to date" lack of notice.

Ozh
--
http://planetozh.com/
From viper at viper007bond.com  Tue Oct  2 08:35:43 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Tue Oct  2 08:35:49 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
Message-ID: <8f93a7390710020135j1930311dw14281600f4f640dd@mail.gmail.com>

Sounds like a plan to me!

And yeah, -1 to non-WP.org checking. It's just not worth including something
like that in the core. Tons of work (for both the author and the core), too
many variables (server configs, etc.), having to deal with down sites, etc.
If people really want something like that, that's what plugins are for.

On 10/2/07, Ozh <ozh@planetozh.com> wrote:
>
> >We need to either allow plugins not directly hosted at Wordpress
> >(including non-GPL) to play, or make it clear within the interface
> >which plugins are being checked and which are not.  As configuration
> >problems can prevent even WP hosted plugins from being checked, I
> >would think _both_ suggestions should be pursued.
>
> I +1 making clear what is checked and what is not.
>
> I'd like the plugin page to tell, for each plugin:
> - checked, and up to date
> - checked, and needs updating
> - could not check (probably not hosted on wp.org, or something wrong)
>
> I'm not too excited about the extra line under each plugin, which IMO
> quite clutters the screen.
> I think an extra column for the plugin status, why not with just a neat
> icon to keep it tiny.
>
> Also, I think that would be an extra motivation for plugin devs to get
> their plugin hosted on wp.org if it's clearly shown that their plugin is
> not pinged, rather than this "could be up to date" lack of notice.
>
> Ozh
> --
> http://planetozh.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From omry at yadan.net  Tue Oct  2 07:57:42 2007
From: omry at yadan.net (Omry Yadan)
Date: Tue Oct  2 08:58:30 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
Message-ID: <4701F9F6.70509@yadan.net>

Ozh wrote:

> Also, I think that would be an extra motivation for plugin devs to get 
> their plugin hosted on wp.org if it's clearly shown that their plugin is 
> not pinged, rather than this "could be up to date" lack of notice.
>   
So you think it's okay to discriminate plugins that are not hosted in 
wp.org to "motivate authors".

Here are a few reasons why I wont host FireStats on wp.org:
1. Current license is CC-NC, and I though long before I chose it over 
GPL. if I chose to switch to a GPL compatibly license, it will certainly 
NOT be because someone forced my hand to do it.
2. FireStats supports a wide range of other systems, and it does not 
make any sense to host it in wp.org.
3. I already have my own infrastructure that I am happy with (SVN, Trac, 
Wiki, Demo etc). I am not going to throw all this.

and finally - I already have my own version check mechanism, so I am not 
too worried about users not being aware of new versions.

I can make just the WordPress plugin file be GPL; host it on wp,org, and 
require that users will install FireStats separately (and in fact I 
already support this installation mode - it's called Satellite 
installation), but this makes installation harder for users, so it's not 
a real option.


I think it's appropriate to allow creating Plugin pages without hosting 
the plugins.
Ideally it will also be possibly to update the information via some 
protocol (XMLRPC?), to allow easy integration with other repositories.

    Omry.
From omry at yadan.net  Tue Oct  2 08:00:02 2007
From: omry at yadan.net (Omry Yadan)
Date: Tue Oct  2 09:01:03 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
Message-ID: <4701FA82.50704@yadan.net>

Ozh wrote:

> Also, I think that would be an extra motivation for plugin devs to get 
> their plugin hosted on wp.org if it's clearly shown that their plugin is 
> not pinged, rather than this "could be up to date" lack of notice.
>   
So you think it's okay to discriminate plugins that are not hosted in 
wp.org to "motivate authors".

Here are a few reasons why I wont host FireStats on wp.org:
1. Current license is CC-NC, and I though long before I chose it over 
GPL. if I chose to switch to a GPL compatibly license, it will certainly 
NOT be because someone forced my hand to do it.
2. FireStats supports a wide range of other systems, and it does not 
make any sense to host it in wp.org.
3. I already have my own infrastructure that I am happy with (SVN, Trac, 
Wiki, Demo etc). I am not going to throw all this.

and finally - I already have my own version check mechanism, so I am not 
too worried about users not being aware of new versions.

I can make just the WordPress plugin file be GPL; host it on wp,org, and 
require that users will install FireStats separately (and in fact I 
already support this installation mode - it's called Satellite 
installation), but this makes installation harder for users, so it's not 
a real option.

I think it's appropriate to allow creating stub plugin without hosting 
the plugins.
Ideally it will also be possibly to update the information via some 
protocol (XMLRPC?, SVN?), to allow easy integration with other repositories.

    Omry.
From ozh at planetozh.com  Tue Oct  2 09:48:56 2007
From: ozh at planetozh.com (Ozh)
Date: Tue Oct  2 09:50:33 2007
Subject: [wp-hackers] WordPress plugin update bugs
Message-ID: <OF6ADD7543.5FD1944A-ONC1257368.00347B84-C1257368.0035EC1B@notes.edfgdf.fr>

>> Also, I think that would be an extra motivation for plugin devs to get 
>> their plugin hosted on wp.org if it's clearly shown that their plugin 
is 
>> not pinged, rather than this "could be up to date" lack of notice.
>> 
>So you think it's okay to discriminate plugins that are not hosted in 
>wp.org to "motivate authors".

O? ...
If you think motivating people equals discriminating others, well, sure.
Like, motivate 100, it discriminates 1000 ? How... interesting :)

> Here are a few reasons why I wont host FireStats on wp.org:
Cool.

>I think it's appropriate to allow creating Plugin pages without hosting 
>the plugins.
>Ideally it will also be possibly to update the information via some 
>protocol (XMLRPC?), to allow easy integration with other repositories.

I think it's appropriate, too : my 10+ plugins are hosted on my own site. 
I just don't see why hosting one's plugin should be mutually exclusive 
with putting them on wp.org to use the update system. I do both.
From viper at viper007bond.com  Tue Oct  2 10:30:35 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Tue Oct  2 10:30:41 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <4701F9F6.70509@yadan.net>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
	<4701F9F6.70509@yadan.net>
Message-ID: <8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>

No one's stopping you from providing update notifications for your plugin,
as you've already done (and as have I for one of my plugins from back in the
day). Infact, there's even a hook (after_plugin_row) you can use to display
an identical message to the existing update notification.

However, I don't think something like this (checking for updates for
non-WP.org plugins) should be in the core.  Promoting the usage of one, big
database is best for the users in my opinion (we already did it previously
via the Codex). It doesn't rely on some random guy's site being online. It
doesn't require them to setup and host a script that has to be updated when
a new version is out. It doesn't... well, you get the point.

Plus, no one is stopping anyone from coding an API plugin that adds this
support in. It'd be _very_ easy to do.

But as I said, I think this is plugin territory and not core.

On 10/2/07, Omry Yadan <omry@yadan.net> wrote:
>
> Ozh wrote:
>
> > Also, I think that would be an extra motivation for plugin devs to get
> > their plugin hosted on wp.org if it's clearly shown that their plugin is
> > not pinged, rather than this "could be up to date" lack of notice.
> >
> So you think it's okay to discriminate plugins that are not hosted in
> wp.org to "motivate authors".
>
> Here are a few reasons why I wont host FireStats on wp.org:
> 1. Current license is CC-NC, and I though long before I chose it over
> GPL. if I chose to switch to a GPL compatibly license, it will certainly
> NOT be because someone forced my hand to do it.
> 2. FireStats supports a wide range of other systems, and it does not
> make any sense to host it in wp.org.
> 3. I already have my own infrastructure that I am happy with (SVN, Trac,
> Wiki, Demo etc). I am not going to throw all this.
>
> and finally - I already have my own version check mechanism, so I am not
> too worried about users not being aware of new versions.
>
> I can make just the WordPress plugin file be GPL; host it on wp,org, and
> require that users will install FireStats separately (and in fact I
> already support this installation mode - it's called Satellite
> installation), but this makes installation harder for users, so it's not
> a real option.
>
>
> I think it's appropriate to allow creating Plugin pages without hosting
> the plugins.
> Ideally it will also be possibly to update the information via some
> protocol (XMLRPC?), to allow easy integration with other repositories.
>
>     Omry.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From jeremy.visser at gmail.com  Tue Oct  2 10:41:06 2007
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Tue Oct  2 10:41:21 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <4701F9F6.70509@yadan.net>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
	<4701F9F6.70509@yadan.net>
Message-ID: <47022042.5010908@gmail.com>

Omry Yadan wrote:
> 3. I already have my own infrastructure that I am happy with (SVN, Trac, 
> Wiki, Demo etc). I am not going to throw all this.

I sympathise with this point, and I also do the same thing. I am 
perfectly happy hosting my own Subversion or Bazaar repository, and I am 
depressed by the fact that I would have to throw away the setup that I 
work quite a few hours each week to maintain (SVN, bzr, Trac, ViewVC) 
just to get my plugins listed in the WP.org repository.

My two plugins so far are minor, but I believe both of them are useful. 
However, I only get a couple of downloads a month, and if they were 
listed in the directory, with the luxury of my own hosting, then more 
people would be made happy. :)
From omry at yadan.net  Tue Oct  2 10:13:41 2007
From: omry at yadan.net (Omry Yadan)
Date: Tue Oct  2 11:14:36 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>	<4701F9F6.70509@yadan.net>
	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
Message-ID: <470219D5.509@yadan.net>


> No one's stopping you from providing update notifications for your plugin,
> as you've already done (and as have I for one of my plugins from back in the
> day). Infact, there's even a hook (after_plugin_row) you can use to display
> an identical message to the existing update notification.
>   
That's nice, I might utilize this hook.
> However, I don't think something like this (checking for updates for
> non-WP.org plugins) should be in the core.  Promoting the usage of one, big
> database is best for the users in my opinion (we already did it previously
> via the Codex). It doesn't rely on some random guy's site being online. It
> doesn't require them to setup and host a script that has to be updated when
> a new version is out. It doesn't... well, you get the point.
>   
Although I am not sure I agree with the central approach, it's not what 
I meant in my previous post.
what I meant was to allow plugin authors to create a stub project that 
will not contain the actual plugin but only the information needed for 
the version check mechanism (specifically, probably that readme.txt file).

> Plus, no one is stopping anyone from coding an API plugin that adds this
> support in. It'd be _very_ easy to do.
>
> But as I said, I think this is plugin territory and not core.
>   
In this case, I think having a core service that does 
almost-but-not-quite-the-thing is a very strong de-motivator for people 
that want to come up with their own solution, because they don't know if 
all their work will go down the tubes one morning when the core service 
guys improve it and make their own redundant.

As to what you oppose: a core API that allow plugins to easily check 
version at their own home site:
I actually think is is a good idea.
let me outline a sketch:
1. plugins have an optional version-check-url
2. core consult this url when performing the version check. if the url 
exists it checks against it. else it checks against api.wordpress.org.
3. the url contain a service with the same interface as the service at 
api.wordpress.org.

I know this solution conflicts with the current implementation (sending 
information of all plugins to the service), but the point is a solution 
like this can be made to work, and it solves the problem presented by 
only checking version for hosted plugins.
as to your objections:
1. relying on "some random guy website": this can be made to fail 
gracefully and show the user an error message like "Can't check version 
for plugin X: error connecting to www.host.com".
2. having everyone having to update their script with every new version:
this is only true if the interface will have to change between versions. 
I think we have enough brain power here to get it right in the first 
attempt.
 
    Omry.

From omry at yadan.net  Tue Oct  2 10:18:16 2007
From: omry at yadan.net (Omry Yadan)
Date: Tue Oct  2 11:19:06 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <OF6ADD7543.5FD1944A-ONC1257368.00347B84-C1257368.0035EC1B@notes.edfgdf.fr>
References: <OF6ADD7543.5FD1944A-ONC1257368.00347B84-C1257368.0035EC1B@notes.edfgdf.fr>
Message-ID: <47021AE8.4050503@yadan.net>


>> So you think it's okay to discriminate plugins that are not hosted in 
>> wp.org to "motivate authors".
>>     
>
> O? ...
> If you think motivating people equals discriminating others, well, sure.
> Like, motivate 100, it discriminates 1000 ? How... interesting :)
>   

Here is a similar example:
White people get free bus tickets.
What, you think motivating white people to use public transportation 
means discriminating black people?


>> I think it's appropriate to allow creating Plugin pages without hosting 
>> the plugins.
>> Ideally it will also be possibly to update the information via some 
>> protocol (XMLRPC?), to allow easy integration with other repositories.
>>     
>
> I think it's appropriate, too : my 10+ plugins are hosted on my own site. 
> I just don't see why hosting one's plugin should be mutually exclusive 
> with putting them on wp.org to use the update system. I do both.
>   
It's just more work and administrative overhead.
think how example, how you will know how many downloads you have if you 
plugin is hosted in many repositories.
it also makes the release process painful.


    Omry.
From hovenko at linpro.no  Tue Oct  2 11:31:03 2007
From: hovenko at linpro.no (Knut-Olav Hoven)
Date: Tue Oct  2 11:31:10 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
	<4701F9F6.70509@yadan.net>
	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
Message-ID: <200710021331.03350.hovenko@linpro.no>

On Tuesday 02 October 2007 12:30:35 Viper007Bond wrote:
> No one's stopping you from providing update notifications for your plugin,
> as you've already done (and as have I for one of my plugins from back in
> the day). Infact, there's even a hook (after_plugin_row) you can use to
> display an identical message to the existing update notification.

Reinventing the wheel?

>
> However, I don't think something like this (checking for updates for
> non-WP.org plugins) should be in the core.  Promoting the usage of one, big
> database is best for the users in my opinion (we already did it previously
> via the Codex). It doesn't rely on some random guy's site being online. It
> doesn't require them to setup and host a script that has to be updated when
> a new version is out. It doesn't... well, you get the point.

I don't agree with you, not at all. I think a distributed solution would be 
better. I believe many developers who work on their own (small) projects 
(like a WordPress plugin is) likes to have their plugins in their own 
repository and on their own website. I know I do (and then probably others do 
too).

Update notifications should be available from the core because this is a 
feature that multiple plugins can use. Why should all the plugins (non wp.org 
plugins) have to have their own implementation, which WILL at some point fail 
(and when you fix it, you still have other plugins that have the same 
failure)...


What I would like is an API (being hooks and/or functions) to make it easy to 
extend plugins to check for new versions.


An example that could be placed in the core API, for both wp.org plugins and 
other plugins:

$check_plugins = apply_filters('plugin_version_check', array());


Then plugins could hook on it with a function like this:

function filter_version_check($plugins) {
	$my_plugin = array(
		'id => "some-id-or-name-of-the-plugin",
		'http' => 'http://wp.example.com/my_plugin/newest_version.txt',
	);
	$plugins[] = $my_plugin;
	return $plugins;
}


The value of the "http" key could be a script that looks up a subversion 
repository or something like that. The "id" could probably be __FILE__ or 
something that combines the plugin with one from the list on the webpage.

No parameters needs to be sent, completely anonymous (except regular HTTP 
headers and "stuff").

>
> Plus, no one is stopping anyone from coding an API plugin that adds this
> support in. It'd be _very_ easy to do.
>
> But as I said, I think this is plugin territory and not core.
>
> On 10/2/07, Omry Yadan <omry@yadan.net> wrote:
> > Ozh wrote:
> > > Also, I think that would be an extra motivation for plugin devs to get
> > > their plugin hosted on wp.org if it's clearly shown that their plugin
> > > is not pinged, rather than this "could be up to date" lack of notice.
> >
> > So you think it's okay to discriminate plugins that are not hosted in
> > wp.org to "motivate authors".
> >
> > Here are a few reasons why I wont host FireStats on wp.org:
> > 1. Current license is CC-NC, and I though long before I chose it over
> > GPL. if I chose to switch to a GPL compatibly license, it will certainly
> > NOT be because someone forced my hand to do it.
> > 2. FireStats supports a wide range of other systems, and it does not
> > make any sense to host it in wp.org.
> > 3. I already have my own infrastructure that I am happy with (SVN, Trac,
> > Wiki, Demo etc). I am not going to throw all this.
> >
> > and finally - I already have my own version check mechanism, so I am not
> > too worried about users not being aware of new versions.
> >
> > I can make just the WordPress plugin file be GPL; host it on wp,org, and
> > require that users will install FireStats separately (and in fact I
> > already support this installation mode - it's called Satellite
> > installation), but this makes installation harder for users, so it's not
> > a real option.
> >
> >
> > I think it's appropriate to allow creating Plugin pages without hosting
> > the plugins.
> > Ideally it will also be possibly to update the information via some
> > protocol (XMLRPC?), to allow easy integration with other repositories.
> >
> >     Omry.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers



-- 
Knut-Olav Hoven
Systemutvikler               mob: +47 986 71 700
Linpro AS                    http://www.linpro.no/
From viper at viper007bond.com  Tue Oct  2 12:27:03 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Tue Oct  2 12:27:11 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <470219D5.509@yadan.net>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
	<4701F9F6.70509@yadan.net>
	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
	<470219D5.509@yadan.net>
Message-ID: <8f93a7390710020527v21a63423n9d50289943a558b9@mail.gmail.com>

On 10/2/07, Omry Yadan <omry@yadan.net> wrote:
> 2. having everyone having to update their script with every new version:
> this is only true if the interface will have to change between versions.
> I think we have enough brain power here to get it right in the first
> attempt.

I meant when they release a new version, they have to go into their
script and set the new version number and all that. Nothing huge I
guess though, but right now, that's all automatic -- one click
release.

-- 
Viper007Bond | http://www.viper007bond.com/
From omry at yadan.net  Tue Oct  2 11:29:19 2007
From: omry at yadan.net (Omry Yadan)
Date: Tue Oct  2 12:30:02 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <8f93a7390710020527v21a63423n9d50289943a558b9@mail.gmail.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>	<4701F9F6.70509@yadan.net>	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>	<470219D5.509@yadan.net>
	<8f93a7390710020527v21a63423n9d50289943a558b9@mail.gmail.com>
Message-ID: <47022B8F.4020702@yadan.net>

There are two aspects that needs to be updated:

1. server side, the latest version number.

2. each release: current version.


both need to be updated in any case, regardless of how you implement this.


Viper007Bond wrote:

> On 10/2/07, Omry Yadan <omry@yadan.net> wrote:
>   
>> 2. having everyone having to update their script with every new version:
>> this is only true if the interface will have to change between versions.
>> I think we have enough brain power here to get it right in the first
>> attempt.
>>     
>
> I meant when they release a new version, they have to go into their
> script and set the new version number and all that. Nothing huge I
> guess though, but right now, that's all automatic -- one click
> release.
>
>   

From viper at viper007bond.com  Tue Oct  2 12:38:05 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Tue Oct  2 12:38:17 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <200710021331.03350.hovenko@linpro.no>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
	<4701F9F6.70509@yadan.net>
	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
	<200710021331.03350.hovenko@linpro.no>
Message-ID: <8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>

Still playing devil's advocate here.

I don't get why hosting your own website, SVN, etc. excludes you from using
WP.org. I develop all my plugins locally and only commit to WP.org when I
have a final version (i.e. I don't use WP.org's SVN). I host my own website
that has pages for all my plugins.

However, I host all my downloads though at WP.org. This greatly boosts their
exposure, provides great statistics and ratings, and provides an update
service. Honestly, why wouldn't you host you your plugin on WP.org (besides
those fringe "omgz GPL!" / other odd situation cases) ?

It just seems like such a hassle coding in core support that relies on
external websites and having to provide support for all those plugin authors
(and debugging why their update check doesn't work) when it'd just be easier
to say "upload here and be done".

On 10/2/07, Knut-Olav Hoven <hovenko@linpro.no> wrote:
>
> On Tuesday 02 October 2007 12:30:35 Viper007Bond wrote:
> > No one's stopping you from providing update notifications for your
> plugin,
> > as you've already done (and as have I for one of my plugins from back in
> > the day). Infact, there's even a hook (after_plugin_row) you can use to
> > display an identical message to the existing update notification.
>
> Reinventing the wheel?
>
> >
> > However, I don't think something like this (checking for updates for
> > non-WP.org plugins) should be in the core.  Promoting the usage of one,
> big
> > database is best for the users in my opinion (we already did it
> previously
> > via the Codex). It doesn't rely on some random guy's site being online.
> It
> > doesn't require them to setup and host a script that has to be updated
> when
> > a new version is out. It doesn't... well, you get the point.
>
> I don't agree with you, not at all. I think a distributed solution would
> be
> better. I believe many developers who work on their own (small) projects
> (like a WordPress plugin is) likes to have their plugins in their own
> repository and on their own website. I know I do (and then probably others
> do
> too).
>
> Update notifications should be available from the core because this is a
> feature that multiple plugins can use. Why should all the plugins (non
> wp.org
> plugins) have to have their own implementation, which WILL at some point
> fail
> (and when you fix it, you still have other plugins that have the same
> failure)...
>
>
> What I would like is an API (being hooks and/or functions) to make it easy
> to
> extend plugins to check for new versions.
>
>
> An example that could be placed in the core API, for both wp.org plugins
> and
> other plugins:
>
> $check_plugins = apply_filters('plugin_version_check', array());
>
>
> Then plugins could hook on it with a function like this:
>
> function filter_version_check($plugins) {
>         $my_plugin = array(
>                 'id => "some-id-or-name-of-the-plugin",
>                 'http' => '
> http://wp.example.com/my_plugin/newest_version.txt',
>         );
>         $plugins[] = $my_plugin;
>         return $plugins;
> }
>
>
> The value of the "http" key could be a script that looks up a subversion
> repository or something like that. The "id" could probably be __FILE__ or
> something that combines the plugin with one from the list on the webpage.
>
> No parameters needs to be sent, completely anonymous (except regular HTTP
> headers and "stuff").
>
> >
> > Plus, no one is stopping anyone from coding an API plugin that adds this
> > support in. It'd be _very_ easy to do.
> >
> > But as I said, I think this is plugin territory and not core.
> >
> > On 10/2/07, Omry Yadan <omry@yadan.net> wrote:
> > > Ozh wrote:
> > > > Also, I think that would be an extra motivation for plugin devs to
> get
> > > > their plugin hosted on wp.org if it's clearly shown that their
> plugin
> > > > is not pinged, rather than this "could be up to date" lack of
> notice.
> > >
> > > So you think it's okay to discriminate plugins that are not hosted in
> > > wp.org to "motivate authors".
> > >
> > > Here are a few reasons why I wont host FireStats on wp.org:
> > > 1. Current license is CC-NC, and I though long before I chose it over
> > > GPL. if I chose to switch to a GPL compatibly license, it will
> certainly
> > > NOT be because someone forced my hand to do it.
> > > 2. FireStats supports a wide range of other systems, and it does not
> > > make any sense to host it in wp.org.
> > > 3. I already have my own infrastructure that I am happy with (SVN,
> Trac,
> > > Wiki, Demo etc). I am not going to throw all this.
> > >
> > > and finally - I already have my own version check mechanism, so I am
> not
> > > too worried about users not being aware of new versions.
> > >
> > > I can make just the WordPress plugin file be GPL; host it on wp,org,
> and
> > > require that users will install FireStats separately (and in fact I
> > > already support this installation mode - it's called Satellite
> > > installation), but this makes installation harder for users, so it's
> not
> > > a real option.
> > >
> > >
> > > I think it's appropriate to allow creating Plugin pages without
> hosting
> > > the plugins.
> > > Ideally it will also be possibly to update the information via some
> > > protocol (XMLRPC?), to allow easy integration with other repositories.
> > >
> > >     Omry.
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> --
> Knut-Olav Hoven
> Systemutvikler               mob: +47 986 71 700
> Linpro AS                    http://www.linpro.no/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From tbarta at gmail.com  Tue Oct  2 12:44:13 2007
From: tbarta at gmail.com (Tom Barta)
Date: Tue Oct  2 12:44:20 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <47019823.4030406@mullenweg.com>
References: <46FC6EC9.9010004@comcast.net>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name> <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
	<47019823.4030406@mullenweg.com>
Message-ID: <7d6d8bd0710020544sab83767r203aa6fd686f3c9f@mail.gmail.com>

On 10/1/07, Matt Mullenweg <m@mullenweg.com> wrote:
> usleepless@gmail.com wrote:
> > why are there `'s in that query?
> >
> > what are they good for?
>
> Because if a field name or table name conflicts with a MySQL reserved
> keyword the query will fail with a cryptic error messages, so it's good
> practice to put the `` quotes around them all.

An alternative is to avoid using reserved keywords as table/field
names.  It depends on which you think is uglier:

SELECT `timestamp` FROM `group`;
or
SELECT timestamp_, stamp, (etc.) from group_;
or any other number of one-off tweaks

IMO it's better to avoid using reserved keywords; it's not difficult
to do, even for cross-DB-platform development.  It eliminates the
possibility of forgetting backticks, and it's less dependent on the
database engine (PG uses double-quotes to escape literals, for
example) than common keywords.

If you ever want to see backtick-hell in MySQL, execute SHOW CREATE
VIEW for any nontrivial view.
-- 
Tom
From morty at gmx.net  Tue Oct  2 12:48:09 2007
From: morty at gmx.net (Moritz 'morty' Struebe)
Date: Tue Oct  2 12:48:18 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <8f93a7390710020527v21a63423n9d50289943a558b9@mail.gmail.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>	<4701F9F6.70509@yadan.net>	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>	<470219D5.509@yadan.net>
	<8f93a7390710020527v21a63423n9d50289943a558b9@mail.gmail.com>
Message-ID: <47023E09.9030307@gmx.net>

Viper007Bond wrote:
> On 10/2/07, Omry Yadan <omry@yadan.net> wrote:
>   
>> 2. having everyone having to update their script with every new version:
>> this is only true if the interface will have to change between versions.
>> I think we have enough brain power here to get it right in the first
>> attempt.
>>     
>
> I meant when they release a new version, they have to go into their
> script and set the new version number and all that. Nothing huge I
> guess though, but right now, that's all automatic -- one click
> release.
>
>   
LOL! You still have to edit the readme.txt to point to the right tag. 
Also the packing script still isn't published - at least I'm not aware 
of it. Therefore it's quite a bit of random hacking until everything 
works _almost_ the may you want it. (E.g. Images must be .jpg. .JPG does 
not work and all that stuff - I know of a few more small annoyances.) 
Images are still packed into the zip and the way subdirectories are 
handled give me a headache, too. There really isn't much time saved. If 
there would be a reasonable way to host the stuff your self I probably 
would consider that.

Cheers
Morty
From m at mullenweg.com  Tue Oct  2 12:55:14 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Oct  2 12:55:22 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>	<4701F9F6.70509@yadan.net>	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>	<200710021331.03350.hovenko@linpro.no>
	<8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>
Message-ID: <47023FB2.7010307@mullenweg.com>

Viper007Bond wrote:
> However, I host all my downloads though at WP.org. This greatly boosts their
> exposure, provides great statistics and ratings, and provides an update
> service. Honestly, why wouldn't you host you your plugin on WP.org (besides
> those fringe "omgz GPL!" / other odd situation cases) ?

The GPL and plugins is a whole topic unto itself:

http://www.fsf.org/licensing/licenses/gpl-faq.html#GPLAndPlugins

I'm not going to get into that here, but agree Omry's situation is an 
edge case, and not worth adding a lot of complexity for.

I would estimate that 99% or more of widely used WordPress plugins are 
in the repository. From the front page:

http://wordpress.org/extend/plugins/

"1,053 plugins, 1,672,326 downloads, and counting"

Once we start doing one-click upgrades and installs of plugins I think a 
central repository becomes even more important, as you have 
accountability for every line of code in the system.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From omry at yadan.net  Tue Oct  2 12:20:46 2007
From: omry at yadan.net (Omry Yadan)
Date: Tue Oct  2 13:21:43 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <47023FB2.7010307@mullenweg.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>	<4701F9F6.70509@yadan.net>	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>	<200710021331.03350.hovenko@linpro.no>	<8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>
	<47023FB2.7010307@mullenweg.com>
Message-ID: <4702379E.1070103@yadan.net>


>
> I'm not going to get into that here, but agree Omry's situation is an 
> edge case, and not worth adding a lot of complexity for.
>
> I would estimate that 99% or more of widely used WordPress plugins are 
> in the repository. From the front page:
>
> http://wordpress.org/extend/plugins/
>
> "1,053 plugins, 1,672,326 downloads, and counting"
>
> Once we start doing one-click upgrades and installs of plugins I think 
> a central repository becomes even more important, as you have 
> accountability for every line of code in the system.


Now that the plugins list is sent to api.wordpress.org, you are in a 
position to get a real approximation rather than a guess:
simply get the percentage of "Unknown" plugins that could not be matched 
against any plugin in the plugins database.
will it be possible to get this information?
if indeed 99% of the plugins are hosted in the database, I would agree 
that my case is an edge case.


From viper at viper007bond.com  Tue Oct  2 13:25:50 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Tue Oct  2 13:25:57 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <4702379E.1070103@yadan.net>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
	<4701F9F6.70509@yadan.net>
	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
	<200710021331.03350.hovenko@linpro.no>
	<8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>
	<47023FB2.7010307@mullenweg.com> <4702379E.1070103@yadan.net>
Message-ID: <8f93a7390710020625n7348ccfpa5ffb3d0c153765c@mail.gmail.com>

99% of plugins != 99% of widely used plugins. I have many, many custom
plugins running on all my WP sites that are only used on that site. Them and
others like them skew that statistic, so be warned. ;)

On 10/2/07, Omry Yadan <omry@yadan.net> wrote:
>
>
> >
> > I'm not going to get into that here, but agree Omry's situation is an
> > edge case, and not worth adding a lot of complexity for.
> >
> > I would estimate that 99% or more of widely used WordPress plugins are
> > in the repository. From the front page:
> >
> > http://wordpress.org/extend/plugins/
> >
> > "1,053 plugins, 1,672,326 downloads, and counting"
> >
> > Once we start doing one-click upgrades and installs of plugins I think
> > a central repository becomes even more important, as you have
> > accountability for every line of code in the system.
>
>
> Now that the plugins list is sent to api.wordpress.org, you are in a
> position to get a real approximation rather than a guess:
> simply get the percentage of "Unknown" plugins that could not be matched
> against any plugin in the plugins database.
> will it be possible to get this information?
> if indeed 99% of the plugins are hosted in the database, I would agree
> that my case is an edge case.
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From omry at yadan.net  Tue Oct  2 12:29:10 2007
From: omry at yadan.net (Omry Yadan)
Date: Tue Oct  2 14:05:51 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <8f93a7390710020625n7348ccfpa5ffb3d0c153765c@mail.gmail.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>	<4701F9F6.70509@yadan.net>	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>	<200710021331.03350.hovenko@linpro.no>	<8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>	<47023FB2.7010307@mullenweg.com>
	<4702379E.1070103@yadan.net>
	<8f93a7390710020625n7348ccfpa5ffb3d0c153765c@mail.gmail.com>
Message-ID: <47023996.1030401@yadan.net>

I am well aware of it, and I just wanted to keep it simple.

having the plugins list sent to api.wordpress.org all you to also find 
if 99% of the wildly used plugins are hosted in the plugins db.

you can simply draw a line like 1%, or 2%, and ignore all plugins that 
are installed for less than this percentage of blogs.


Viper007Bond wrote:

> 99% of plugins != 99% of widely used plugins. I have many, many custom
> plugins running on all my WP sites that are only used on that site. Them and
> others like them skew that statistic, so be warned. ;)
>   

From joseph at randomnetworks.com  Tue Oct  2 16:14:15 2007
From: joseph at randomnetworks.com (Joseph Scott)
Date: Tue Oct  2 16:16:00 2007
Subject: [wp-hackers] xmlrpc.php hooks
In-Reply-To: <46FAB466.5050802@kuykendall.org>
References: <46F0DC3E.5050507@kuykendall.org>
	<9947C61E-CA2E-4E18-8ECA-6F89E539A4D7@randomnetworks.com>
	<46FAB466.5050802@kuykendall.org>
Message-ID: <4A2E5F61-D5BF-4D4A-9687-0515DDACC8B7@randomnetworks.com>


On Sep 26, 2007, at 1:35 PM, Dan Kuykendall wrote:

> Sorry for the long delay.
> This ticket covers WP handling it, but since add_post_meta doesnt have
> any hooks/filters it doesnt allow a plugin to step in and do anything
> about it.


Perhaps the better place for a hook then would be when adding the  
meta data, instead of something specific to XML-RPC.


> Also that diff only covers mw_newPost() and fails to cover  
> mw_editPost()
>
> I think that the diff in the ticket, and adding that to mw_editPost(),
> plus my do_actions would all be good things. They can go together  
> just fine



--
Joseph Scott
http://joseph.randomnetworks.com/


From m at mullenweg.com  Tue Oct  2 17:29:13 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Oct  2 17:29:19 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <4702379E.1070103@yadan.net>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>	<4701F9F6.70509@yadan.net>	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>	<200710021331.03350.hovenko@linpro.no>	<8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>	<47023FB2.7010307@mullenweg.com>
	<4702379E.1070103@yadan.net>
Message-ID: <47027FE9.1040700@mullenweg.com>

Omry Yadan wrote:
> Now that the plugins list is sent to api.wordpress.org, you are in a 
> position to get a real approximation rather than a guess:
> simply get the percentage of "Unknown" plugins that could not be matched 
> against any plugin in the plugins database.
> will it be possible to get this information?

Yes but realistically it'll be a week or two before we add any stats. 
Right now Michael is working on ironing the bugs out where we're missing 
plugins. Fix bugs before add features. :)

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From otto at ottodestruct.com  Tue Oct  2 18:06:35 2007
From: otto at ottodestruct.com (Otto)
Date: Tue Oct  2 18:06:48 2007
Subject: [wp-hackers] wp2.3 and dbDelta()
In-Reply-To: <EFDBAF3B-BB79-4F4B-94C0-D2A55F0DD589@willnorris.com>
References: <EFDBAF3B-BB79-4F4B-94C0-D2A55F0DD589@willnorris.com>
Message-ID: <161617690710021106q10863acbt4ac67793a8d86831@mail.gmail.com>

I fail to see the problem. Just include wp-admin/includes/upgrade.php.
That file is all functions, it does nothing by itself.


On 10/2/07, Will Norris <will@willnorris.com> wrote:
> How is a developer supposed to use dbDelta in Wordpress 2.3?  The
> problem is that the function has been moved into upgrade.php (from
> upgrade-functions.php), and if I include that file then it tries to
> upgrade the entire system.  Suggestions?
>
> thanks,
> will
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ai2097 at users.sourceforge.net  Tue Oct  2 18:12:46 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Tue Oct  2 18:12:52 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <47023FB2.7010307@mullenweg.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
	<4701F9F6.70509@yadan.net>
	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
	<200710021331.03350.hovenko@linpro.no>
	<8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>
	<47023FB2.7010307@mullenweg.com>
Message-ID: <20071002111246.276bd3ae@localhost>

On Tue, 02 Oct 2007 05:55:14 -0700, Matt Mullenweg <m@mullenweg.com>
wrote:

<snip>
> I'm not going to get into that here, but agree Omry's situation is an 
> edge case, and not worth adding a lot of complexity for.

This is where QA starts whining ;). Just because it's an edge case
doesn't mean it can be ignored[1]. Additionally, I don't think that "a
lot of complexity" is required to get the job done in a way that can
work for all plugins.

* We need to point out which plugins aren't getting updated -anyway-.
3rd party non-update notification comes for free with that.

* I find it hard to believe that allowing non-hosted 3rd parties to
register the name and latest version would be anything but a relatively
minor extension to the current system. The work is non-zero, but the
-vast- majority of code for scanning the repo would just be re-used,
either on a second repo, or some section of the current repo that
wordpress.org won't "advertise" at /extend/plugins/. The biggest hurdle
would be providing a web-to-SVN interface and infrastructure for
keeping the stub info up-to-date.


The biggest problem is that so much of the system is closed up in a
black-box on the server that effectively nobody can make patches to the
thing on their own. If you (or whomever else has access to such things)
don't want to do it, it doesn't matter how much anyone else wants it
done -- it won't get done. And yes, I'd be willing to put my code where
my fingers are and write a proof-of-concept. I'm convinced it would be a
piece of cake, and even more convinced that it's important to all users.
Just show me the code before Oct. 12 or so. ;)


And before I hear mutterings of "make a plugin," that's simply
unreasonable. Somebody *did* make a plugin[2] + infrastructure, and
update issues aside, core has effectively obsoleted it within *months*.
What happens if core decides to integrate 3rd party down the road? All
the work _I_ did on infrastructure and back-end would be obsolete in the
blink of an eye. Would _you_ have built the WordPress plugin repository
if someone else could come along and blow it away at will?

As for "build it into the plugin" -- why should every non-hosted
maintainer have to write the same code again and again and again, when
the problem can be solved in one place, once, forever? Update is in
core, and logically that means everyone should try and re-use that
common functionality, instead of reinventing the wheel.

> I would estimate that 99% or more of widely used WordPress plugins
> are in the repository. From the front page:

Having 1k hosted plugins is a pretty useless datapoint without context
-- you have to know the total number of plugins, as well as popularity
statistics for both hosted and non-hosted plugins, to make any kind of
numerically-sound analysis. You'd need to start doing stats on hosted
plugin hit/miss numbers on update requests to convince me of that
number[3], and even then it'd be a hard sell to leave the remainder in
the cold.

> Once we start doing one-click upgrades and installs of plugins I
> think a central repository becomes even more important, as you have 
> accountability for every line of code in the system.

You check every line of code in the repository? j/k ;)

I assume you mean that, if some wildfire starts to spread via one-click
updates, you have a convenient killswitch to stop it. With a 3rd party
registration database, you can maintain that killswitch while still
letting everybody play.

I'm not arguing against a centralized strategy at all, but rather,
I'm trying to say that the centralized strategy now has to expand to be
more inclusive because a critical system feature now depends on it.


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>

[1] A cost-benefit analysis indicating that individual failures have
extremely low costs is conducive to making the argument to ignore much
more convincing. However, not indicating when a plugin isn't updating
could potentially have some pretty nasty costs associated with it.

[2] http://www.wp-plugins-db.org/wp-plugins-tracker

[3] Understandably, those stats aren't being collected yet.
From jared at pacific22.com  Tue Oct  2 19:16:48 2007
From: jared at pacific22.com (Jared Bangs)
Date: Tue Oct  2 19:16:53 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <47023FB2.7010307@mullenweg.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
	<4701F9F6.70509@yadan.net>
	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
	<200710021331.03350.hovenko@linpro.no>
	<8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>
	<47023FB2.7010307@mullenweg.com>
Message-ID: <7b4922320710021216l4b03d3f7ha19c63d956f06f88@mail.gmail.com>

+1 for indicating (in the plugin list) which plugins will be checked
and which will not. I think this is pretty important.

+1 for limiting the scope of automatic plugin updates to those hosted
in the extend repo, at least for now. Maybe opening it up a little
more later, when/if the requirement can become more well defined and
addressed in a reliable, standard manner.

+1 for adding a hook for plugin_update_check (if something like that
isn't already there) for plugin devs who don't want to host their
plugin on WP.org but still want to provide for update checking somehow
(either just an alert or rolling their own auto-update routine.

As for using other tools, (specifically Trac), I'm taking the approach
of maintaining an external repo (which Trac associates with) and
syncing changes from that to the WP.org one for publishing. It's a
manual process right now, but I plan to explore automating it using
commit hooks, etc.

[Side note: curious if anyone has any thoughts or experience with that last bit]

- Jared
From usleepless at gmail.com  Tue Oct  2 20:11:33 2007
From: usleepless at gmail.com (usleepless@gmail.com)
Date: Tue Oct  2 20:11:39 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <47019823.4030406@mullenweg.com>
References: <46FC6EC9.9010004@comcast.net>
	<c39ec84c0709301550n26d0c84btb87be3ee369c3c2f@mail.gmail.com>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name> <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
	<47019823.4030406@mullenweg.com>
Message-ID: <c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>

On 10/2/07, Matt Mullenweg <m@mullenweg.com> wrote:
> usleepless@gmail.com wrote:
> > why are there `'s in that query?
> >
> > what are they good for?

I appreciate your respone, but actually it was a rethoric question. I
know where it is good for: absolutely nothing!

> Because if a field name or table name conflicts with a MySQL reserved
> keyword the query will fail with a cryptic error messages, so it's good
> practice to put the `` quotes around them all.

Sure, most DBMS's tend to have an escape character to allow for
cornercases ( for example, schemas you don't have control over ).

But as Tom pointed out, (reserverd) keywords are ... well ... kind of
reserved. Don't use them as identifiers. In fact, the WP schema is
"clean": to run in on PostgreSQL, i just replace the backticks with
nothing/empty strings.

And: the backticks only appear in upgrade.php.

Ryan suggested patches to abstract the schema are welcome. Is a patch
to remove the unnecessary use of backticks welcome as well? Will
patches to write "LIMIT x OFFSET y" instead of "LIMT y,x" be welcome?

I would like to to get this straight because I am willing to put my
energy and skills into abstracting WP's DBMS access. But if patches
will be rejected on these kind of grounds, I see no point in starting
on it at all.

To be clear
  - The changes i have in mind are not as big as you guys think:
Schema abstraction, change a handfull of queries.
  - There will be no performance hits.
  - You can reap the perceived benefits of MySQL all you want.
  - Having 2 DBMS's to choose from might provide interesting debug
opportunities ( it might have better error messages for example ).

Responses, corrections and comments are highly appreciated,

regards,

usleep
From viper at viper007bond.com  Wed Oct  3 00:01:24 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Wed Oct  3 00:01:31 2007
Subject: [wp-hackers] wp2.3 and dbDelta()
In-Reply-To: <161617690710021106q10863acbt4ac67793a8d86831@mail.gmail.com>
References: <EFDBAF3B-BB79-4F4B-94C0-D2A55F0DD589@willnorris.com>
	<161617690710021106q10863acbt4ac67793a8d86831@mail.gmail.com>
Message-ID: <8f93a7390710021701n51b2a6f5j9537f8f6273e373c@mail.gmail.com>

Yes it does. Look at the top of the file.

if ( file_exists(ABSPATH . 'wp-content/install.php') )
    require (ABSPATH . 'wp-content/install.php');
require_once(ABSPATH . 'wp-admin/includes/admin.php');
require_once(ABSPATH . 'wp-admin/includes/schema.php');

install.php will output stuff, as may others.

On 10/2/07, Otto <otto@ottodestruct.com> wrote:
>
> I fail to see the problem. Just include wp-admin/includes/upgrade.php.
> That file is all functions, it does nothing by itself.
>
>
> On 10/2/07, Will Norris <will@willnorris.com> wrote:
> > How is a developer supposed to use dbDelta in Wordpress 2.3?  The
> > problem is that the function has been moved into upgrade.php (from
> > upgrade-functions.php), and if I include that file then it tries to
> > upgrade the entire system.  Suggestions?
> >
> > thanks,
> > will
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From denis at mesoconcepts.com  Wed Oct  3 00:40:34 2007
From: denis at mesoconcepts.com (Denis de Bernardy)
Date: Wed Oct  3 00:40:52 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <20071002201142.181A5640D@comox.textdrive.com>
Message-ID: <000901c80556$078ebb20$6701a8c0@kergan>

I've just put this online:

http://www.semiologic.com/software/wp-fixes/version-checker/

It allows to hook into the WP update notification mechanism without needing
to host a plugin on wordpress.org. Just add two lines to your plugin file:

Update Service: [update service]
Update Tag: [update tag]

Yada, yada, yada.

Similar plugins arguably exist already; This one merely plays around with
the update_plugins option.

A quick and dirty version service is also for grabs. It would be very sweet
if someone could toss in some code to synchronize the versions file with
plugins in an svn repository. I'll be quite happy to put it alongside.

D.

From leonid at mamchenkov.net  Wed Oct  3 03:15:54 2007
From: leonid at mamchenkov.net (Leonid Mamchenkov)
Date: Wed Oct  3 03:16:02 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name> <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
	<47019823.4030406@mullenweg.com>
	<c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>
Message-ID: <b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>

Hi,

On 10/2/07, usleepless@gmail.com <usleepless@gmail.com> wrote:
> But as Tom pointed out, (reserverd) keywords are ... well ... kind of
> reserved. Don't use them as identifiers.

I guess there is an added benefit of forward compatibility in escaping
fields and table names.  Words which are not reserved now can become
so in the future.

Just my 2 cents.

-- 
Leonid Mamchenkov
From otto at ottodestruct.com  Wed Oct  3 04:37:22 2007
From: otto at ottodestruct.com (Otto)
Date: Wed Oct  3 04:37:27 2007
Subject: [wp-hackers] wp2.3 and dbDelta()
In-Reply-To: <8f93a7390710021701n51b2a6f5j9537f8f6273e373c@mail.gmail.com>
References: <EFDBAF3B-BB79-4F4B-94C0-D2A55F0DD589@willnorris.com>
	<161617690710021106q10863acbt4ac67793a8d86831@mail.gmail.com>
	<8f93a7390710021701n51b2a6f5j9537f8f6273e373c@mail.gmail.com>
Message-ID: <161617690710022137x2b8e4c2bk60957d9d4092a839@mail.gmail.com>

There is no wp-content/install.php file, by default. Okay, it might do
something if it's there, but it shouldn't be there.

wp-admin/includes/schema.php just defines the schema. Also no output.

wp-admin/includes/admin.php includes pretty much all the other
wp-admin/includes/ files. However, I don't think any of them makes any
output either, they all seem to define functions and variables and
such.


On 10/2/07, Viper007Bond <viper@viper007bond.com> wrote:
> Yes it does. Look at the top of the file.
>
> if ( file_exists(ABSPATH . 'wp-content/install.php') )
>     require (ABSPATH . 'wp-content/install.php');
> require_once(ABSPATH . 'wp-admin/includes/admin.php');
> require_once(ABSPATH . 'wp-admin/includes/schema.php');
>
> install.php will output stuff, as may others.
>
> On 10/2/07, Otto <otto@ottodestruct.com> wrote:
> >
> > I fail to see the problem. Just include wp-admin/includes/upgrade.php.
> > That file is all functions, it does nothing by itself.
> >
> >
> > On 10/2/07, Will Norris <will@willnorris.com> wrote:
> > > How is a developer supposed to use dbDelta in Wordpress 2.3?  The
> > > problem is that the function has been moved into upgrade.php (from
> > > upgrade-functions.php), and if I include that file then it tries to
> > > upgrade the entire system.  Suggestions?
> > >
> > > thanks,
> > > will
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Viper007Bond | http://www.viper007bond.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From viper at viper007bond.com  Wed Oct  3 04:41:20 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Wed Oct  3 04:41:26 2007
Subject: [wp-hackers] wp2.3 and dbDelta()
In-Reply-To: <161617690710022137x2b8e4c2bk60957d9d4092a839@mail.gmail.com>
References: <EFDBAF3B-BB79-4F4B-94C0-D2A55F0DD589@willnorris.com>
	<161617690710021106q10863acbt4ac67793a8d86831@mail.gmail.com>
	<8f93a7390710021701n51b2a6f5j9537f8f6273e373c@mail.gmail.com>
	<161617690710022137x2b8e4c2bk60957d9d4092a839@mail.gmail.com>
Message-ID: <8f93a7390710022141l82a7fc8g4070208ee516020f@mail.gmail.com>

Oooooh, wp-content! I totally misread that as wp-admin, heh.

Yes, then it's good to go. include() away.

On 10/2/07, Otto <otto@ottodestruct.com> wrote:
>
> There is no wp-content/install.php file, by default. Okay, it might do
> something if it's there, but it shouldn't be there.
>
> wp-admin/includes/schema.php just defines the schema. Also no output.
>
> wp-admin/includes/admin.php includes pretty much all the other
> wp-admin/includes/ files. However, I don't think any of them makes any
> output either, they all seem to define functions and variables and
> such.
>
>
> On 10/2/07, Viper007Bond <viper@viper007bond.com> wrote:
> > Yes it does. Look at the top of the file.
> >
> > if ( file_exists(ABSPATH . 'wp-content/install.php') )
> >     require (ABSPATH . 'wp-content/install.php');
> > require_once(ABSPATH . 'wp-admin/includes/admin.php');
> > require_once(ABSPATH . 'wp-admin/includes/schema.php');
> >
> > install.php will output stuff, as may others.
> >
> > On 10/2/07, Otto <otto@ottodestruct.com> wrote:
> > >
> > > I fail to see the problem. Just include wp-admin/includes/upgrade.php.
> > > That file is all functions, it does nothing by itself.
> > >
> > >
> > > On 10/2/07, Will Norris <will@willnorris.com> wrote:
> > > > How is a developer supposed to use dbDelta in Wordpress 2.3?  The
> > > > problem is that the function has been moved into upgrade.php (from
> > > > upgrade-functions.php), and if I include that file then it tries to
> > > > upgrade the entire system.  Suggestions?
> > > >
> > > > thanks,
> > > > will
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers@lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> >
> > --
> > Viper007Bond | http://www.viper007bond.com/
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From wordpress at tekartist.org  Wed Oct  3 05:44:30 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Wed Oct  3 05:44:37 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>
	<b88434820709301623n365bdbbbv963e5aa68cdc86a6@mail.gmail.com>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name> <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
	<47019823.4030406@mullenweg.com>
	<c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>
	<b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>
Message-ID: <BB8D50B3-EAC3-4467-AAA2-5198E7BEE771@tekartist.org>

On Oct 02, 2007, at 23:15, Leonid Mamchenkov wrote:

> Hi,
>
> On 10/2/07, usleepless@gmail.com <usleepless@gmail.com> wrote:
>> But as Tom pointed out, (reserverd) keywords are ... well ... kind of
>> reserved. Don't use them as identifiers.
>
> I guess there is an added benefit of forward compatibility in escaping
> fields and table names.  Words which are not reserved now can become
> so in the future.

Having had to deal with the consequences of using a keyword that  
became reserved in an RDBMS later on once before (~10 years ago), I  
could not agree more with Leonid comment.

Stephane

From james at freecharity.org.uk  Wed Oct  3 07:56:26 2007
From: james at freecharity.org.uk (James Davis)
Date: Wed Oct  3 07:58:20 2007
Subject: [wp-hackers] WordPress versions <-> functions map
In-Reply-To: <8f93a7390709290501n459c41b1w42cdb73063112a28@mail.gmail.com>
References: <ae81acd10709290344u2c35e275mb6192dca57076c5d@mail.gmail.com>
	<8f93a7390709290501n459c41b1w42cdb73063112a28@mail.gmail.com>
Message-ID: <47034B2A.1050902@freecharity.org.uk>

Viper007Bond wrote:

> Although what'd be _really_ cool is if you could paste the contents of your
> plugin into a form and it'd parse the PHP, find all the functions, and
> figure out the lowest compatible version. That'd be crazy awesome.

That a function exists in two versions is a good start but isn't the
whole story. Small changes to a function, perhaps a simple bugfix or
changes in the behavior of WordPress, can have larger unintended effects.

Still, it'd be a useful tool to spot the bigger gaps :-)

James

-- 
http://www.freecharity.org.uk/ - Free IT services for charities
http://www.freecharity.org.uk/wiki/ - The VCSWiki
From sam at viveka.net.au  Wed Oct  3 10:58:43 2007
From: sam at viveka.net.au (Sam Bauers)
Date: Wed Oct  3 10:58:55 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <A9B5CA6E-9B31-4D03-8FA5-BC18E0824B2C@striderweb.com>
References: <46F8522A.1060702@mullenweg.com>
	<0c1401c800fa$a632a4e0$6402a8c0@DELL8600>
	<2522E2C7-4D9B-46BD-B602-62F62622B87B@gmail.com>
	<7cf9ae490709271009g73c9d040r7be5079b78490466@mail.gmail.com>
	<c8f37c930709282233o4b6654d7v8622575867be1bc8@mail.gmail.com>
	<BF0AA882-5E2C-4F33-879B-046DB96DE75D@gmail.com>
	<31C40DB8-FA33-406D-B254-6CF5547D6F46@striderweb.com>
	<161617690709291504r694a5cbg7c39382e3371139e@mail.gmail.com>
	<46FEDF61.8050906@ntlworld.com>
	<161617690709291925q5b1dfca6g574389591d7bb40e@mail.gmail.com>
	<A9B5CA6E-9B31-4D03-8FA5-BC18E0824B2C@striderweb.com>
Message-ID: <6BA2F758-0060-43A7-8DF2-523EA044CC6E@viveka.net.au>

Perhaps search should just honour robots.txt like every other search  
engine. Then you could exclude certain pages using a standard format  
file in the root directory. I haven't checked, but there is probably  
a plugin that is designed to cleverly manipulate robots.txt out there.

robots.txt can even be made to work differently for different search  
engines, so rules could be setup for external search engines that are  
more restrictive than those for the internal one if that is a concern.

Search results should probably also strip tags, this would avoid the  
problem of forms and other formatting turning up in search results.

I would prefer it if the results returned the actual context of the  
searched terms on the page, rather than a summary. Using the title is  
fine, but if I can't tell *why* my search terms matched that page or  
post I am less inclined to go to the result. So it should either  
highlight the search terms in a fragment of the content, or show that  
it is returned as one of the tags on that page/post.

This is all standard practice for search engines, why not WP's own  
search as well?

--------------------------------------------------------------
  Sam Bauers

  sam@viveka.net.au
--------------------------------------------------------------



From jeremy.visser at gmail.com  Wed Oct  3 11:07:48 2007
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Wed Oct  3 11:07:57 2007
Subject: [wp-hackers] Page searching examples [was: 2.4
	planning	discussion]
In-Reply-To: <6BA2F758-0060-43A7-8DF2-523EA044CC6E@viveka.net.au>
References: <46F8522A.1060702@mullenweg.com>	<0c1401c800fa$a632a4e0$6402a8c0@DELL8600>	<2522E2C7-4D9B-46BD-B602-62F62622B87B@gmail.com>	<7cf9ae490709271009g73c9d040r7be5079b78490466@mail.gmail.com>	<c8f37c930709282233o4b6654d7v8622575867be1bc8@mail.gmail.com>	<BF0AA882-5E2C-4F33-879B-046DB96DE75D@gmail.com>	<31C40DB8-FA33-406D-B254-6CF5547D6F46@striderweb.com>	<161617690709291504r694a5cbg7c39382e3371139e@mail.gmail.com>	<46FEDF61.8050906@ntlworld.com>	<161617690709291925q5b1dfca6g574389591d7bb40e@mail.gmail.com>	<A9B5CA6E-9B31-4D03-8FA5-BC18E0824B2C@striderweb.com>
	<6BA2F758-0060-43A7-8DF2-523EA044CC6E@viveka.net.au>
Message-ID: <47037804.3000709@gmail.com>

Sam Bauers wrote:
> This is all standard practice for search engines, why not WP's own 
> search as well?

Because WordPress isn't a spider.

It doesn't crawl your site, generating a search index as it goes ? 
blocking pages from WP search via robots.txt just doesn't make sense.
From zamoose at gmail.com  Wed Oct  3 11:12:57 2007
From: zamoose at gmail.com (Doug Stewart)
Date: Wed Oct  3 11:13:02 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <47037804.3000709@gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<c8f37c930709282233o4b6654d7v8622575867be1bc8@mail.gmail.com>
	<BF0AA882-5E2C-4F33-879B-046DB96DE75D@gmail.com>
	<31C40DB8-FA33-406D-B254-6CF5547D6F46@striderweb.com>
	<161617690709291504r694a5cbg7c39382e3371139e@mail.gmail.com>
	<46FEDF61.8050906@ntlworld.com>
	<161617690709291925q5b1dfca6g574389591d7bb40e@mail.gmail.com>
	<A9B5CA6E-9B31-4D03-8FA5-BC18E0824B2C@striderweb.com>
	<6BA2F758-0060-43A7-8DF2-523EA044CC6E@viveka.net.au>
	<47037804.3000709@gmail.com>
Message-ID: <71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>

On 10/3/07, Jeremy Visser <jeremy.visser@gmail.com> wrote:
> Sam Bauers wrote:
> > This is all standard practice for search engines, why not WP's own
> > search as well?
>
> Because WordPress isn't a spider.
>
> It doesn't crawl your site, generating a search index as it goes ?
> blocking pages from WP search via robots.txt just doesn't make sense.
>

Not a spider, granted, nor is it a dump truck. *grin*

The fundamental point that Sam is making is sound, however -- content
accessible from a 3rd party search engine ought to be accessible in a
similar, if not easier, fashion from inside WordPress itself.   If one
must go to Google or Ask (What Happened To Jeeves!) in order to get
better search results than WP can provide, I think something is
probably wrong.

(As a side note, the work on canonical links in all likelihood really
improved matters in terms of using such 3rd party search engines...)


-- 
-Doug

http://literalbarrage.org/blog/
From neryver at infomed.sld.cu  Wed Oct  3 11:34:49 2007
From: neryver at infomed.sld.cu (Blast o_O)
Date: Wed Oct  3 11:35:52 2007
Subject: [wp-hackers] @ Need docu about writing a plugin for wp
Message-ID: <1191411289.20393.32.camel@xxxub>

Hello everybody,

I need your help finding some docu about writing a plugin for wordpress.

I want to add a feature to wp who lets me write articles in the
mediawiki way, using brackets. I have a wordpress & a mediawiki
installed in my server, and I want to reference mediawiki pages from my
wordpress by the brackets way ;)

Thanks for your help pals!!!
Good Luck!!!
B.

From viper at viper007bond.com  Wed Oct  3 11:55:04 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Wed Oct  3 11:55:10 2007
Subject: [wp-hackers] WordPress versions <-> functions map
In-Reply-To: <47034B2A.1050902@freecharity.org.uk>
References: <ae81acd10709290344u2c35e275mb6192dca57076c5d@mail.gmail.com>
	<8f93a7390709290501n459c41b1w42cdb73063112a28@mail.gmail.com>
	<47034B2A.1050902@freecharity.org.uk>
Message-ID: <8f93a7390710030455g315fa9c1rcd19f0dd91f74afe@mail.gmail.com>

That'd probably be pretty hard to code -- trying to figure out what a plugin
expected to get back from a function. There's no perfect alternative to
simply downloading old versions and testing.

On 10/3/07, James Davis <james@freecharity.org.uk> wrote:
>
> Viper007Bond wrote:
>
> > Although what'd be _really_ cool is if you could paste the contents of
> your
> > plugin into a form and it'd parse the PHP, find all the functions, and
> > figure out the lowest compatible version. That'd be crazy awesome.
>
> That a function exists in two versions is a good start but isn't the
> whole story. Small changes to a function, perhaps a simple bugfix or
> changes in the behavior of WordPress, can have larger unintended effects.
>
> Still, it'd be a useful tool to spot the bigger gaps :-)
>
> James
>
> --
> http://www.freecharity.org.uk/ - Free IT services for charities
> http://www.freecharity.org.uk/wiki/ - The VCSWiki
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From viper at viper007bond.com  Wed Oct  3 11:57:04 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Wed Oct  3 11:57:12 2007
Subject: [wp-hackers] @ Need docu about writing a plugin for wp
In-Reply-To: <1191411289.20393.32.camel@xxxub>
References: <1191411289.20393.32.camel@xxxub>
Message-ID: <8f93a7390710030457v198301e3scdb6ee9bacce9995@mail.gmail.com>

http://codex.wordpress.org/Writing_a_Plugin

You'll want to use the "the_content" filter to filter the content of a post
/ page, regex find all [[blah]] calls, and replace them with links. Pretty
simple and about 5-10 minutes of work.

On 10/3/07, Blast o_O <neryver@infomed.sld.cu> wrote:
>
> Hello everybody,
>
> I need your help finding some docu about writing a plugin for wordpress.
>
> I want to add a feature to wp who lets me write articles in the
> mediawiki way, using brackets. I have a wordpress & a mediawiki
> installed in my server, and I want to reference mediawiki pages from my
> wordpress by the brackets way ;)
>
> Thanks for your help pals!!!
> Good Luck!!!
> B.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From supporto at pixline.net  Wed Oct  3 14:45:47 2007
From: supporto at pixline.net (Pixline)
Date: Wed Oct  3 15:22:29 2007
Subject: [wp-hackers] @ Need docu about writing a plugin for wp
In-Reply-To: <1191411289.20393.32.camel@xxxub>
References: <1191411289.20393.32.camel@xxxub>
Message-ID: <C87036AD-77F7-4A96-9052-67BD5C435CAC@pixline.net>

> I want to add a feature to wp who lets me write articles in the
> mediawiki way, using brackets. I have a wordpress & a mediawiki
> installed in my server, and I want to reference mediawiki pages  
> from my
> wordpress by the brackets way ;)

I think there's something already done for you:

http://zechs.dyndns.org/wordpress/?page_id=126

Hope it helps.


Paolo Tresso
Pixline.net coder
--------------------------------------------
http://linkedin.com/in/paolotresso
http://pixline.net

From shacker at birdhouse.org  Wed Oct  3 15:26:46 2007
From: shacker at birdhouse.org (Hacker Scot)
Date: Wed Oct  3 15:26:55 2007
Subject: [wp-hackers] Page searching examples 
In-Reply-To: <20071003120048.8554B6D2E@comox.textdrive.com>
References: <20071003120048.8554B6D2E@comox.textdrive.com>
Message-ID: <127FB995-9988-48D2-9245-984CF80EE62F@birdhouse.org>

> Date: Wed, 3 Oct 2007 07:12:57 -0400
> From: "Doug Stewart" <zamoose@gmail.com>
>
> The fundamental point that Sam is making is sound, however -- content
> accessible from a 3rd party search engine ought to be accessible in a
> similar, if not easier, fashion from inside WordPress itself.   If one
> must go to Google or Ask (What Happened To Jeeves!) in order to get
> better search results than WP can provide, I think something is
> probably wrong.

  On one of the massively multi-author WP installations I run, a user  
told me just yesterday that search wasn't working. When I checked, it  
seemed to be working fine. Turned out what she meant was that she was  
searching on an author's name and (quiet naturally) assuming that  
search would search everything. Yes, we have author pages with lists  
of stories by those authors, but people default to search, and expect  
Goog-like results.

Whether it makes sense to include authors in search results is a  
different question, since most installations don't have more than a  
few authors. Just saying that users expect it.

- s

From skeltoac at gmail.com  Wed Oct  3 15:41:48 2007
From: skeltoac at gmail.com (Andy Skelton)
Date: Wed Oct  3 15:41:57 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<BF0AA882-5E2C-4F33-879B-046DB96DE75D@gmail.com>
	<31C40DB8-FA33-406D-B254-6CF5547D6F46@striderweb.com>
	<161617690709291504r694a5cbg7c39382e3371139e@mail.gmail.com>
	<46FEDF61.8050906@ntlworld.com>
	<161617690709291925q5b1dfca6g574389591d7bb40e@mail.gmail.com>
	<A9B5CA6E-9B31-4D03-8FA5-BC18E0824B2C@striderweb.com>
	<6BA2F758-0060-43A7-8DF2-523EA044CC6E@viveka.net.au>
	<47037804.3000709@gmail.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
Message-ID: <e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>

On 10/3/07, Doug Stewart <zamoose@gmail.com> wrote:
> The fundamental point that Sam is making is sound, however -- content
> accessible from a 3rd party search engine ought to be accessible in a
> similar, if not easier, fashion from inside WordPress itself.   If one
> must go to Google or Ask (What Happened To Jeeves!) in order to get
> better search results than WP can provide, I think something is
> probably wrong.

WordPress, open source software that typically runs on shared hosting,
should be able to produce search results on par with the secret
algorithms of the world leader in search, a company with market
capitalization of 182 billion dollars?

It has been agreed that if WordPress had a relevence-based search
engine built in, we wouldn't have any trouble integrating pages into
the search results. That would be a nice thing to have but it's really
not a realistic goal at this point.

There are fine ways to integrate Google searches into a blog's
template. I think that's more our speed. Competing with Google Search
just isn't.

Andy
From hovenko at linpro.no  Wed Oct  3 15:54:12 2007
From: hovenko at linpro.no (Knut-Olav Hoven)
Date: Wed Oct  3 15:54:22 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
Message-ID: <200710031754.13509.hovenko@linpro.no>

On Wednesday 03 October 2007 17:41:48 Andy Skelton wrote:
> On 10/3/07, Doug Stewart <zamoose@gmail.com> wrote:
> > The fundamental point that Sam is making is sound, however -- content
> > accessible from a 3rd party search engine ought to be accessible in a
> > similar, if not easier, fashion from inside WordPress itself.   If one
> > must go to Google or Ask (What Happened To Jeeves!) in order to get
> > better search results than WP can provide, I think something is
> > probably wrong.
>
> WordPress, open source software that typically runs on shared hosting,
> should be able to produce search results on par with the secret
> algorithms of the world leader in search, a company with market
> capitalization of 182 billion dollars?

Yeah, but WordPress don't have to search 182 billion websites either... just 
one. And we do get access to the raw data from the database, Google does not 
(hopefully). ;)

>
> It has been agreed that if WordPress had a relevence-based search
> engine built in, we wouldn't have any trouble integrating pages into
> the search results. That would be a nice thing to have but it's really
> not a realistic goal at this point.

That's probably because the basic WordPress philosophy has been to reject 
patches larger than 2 lines, telling the contributers to make plugins 
instead. (I'm pushing it to the edge, but it's still true)

Search-Everything and Search-Hilite are great plugins that gets the job done. 
Why shouldn't that be corestuff? (they might need some code cleanup, but 
still...)

>
> There are fine ways to integrate Google searches into a blog's
> template. I think that's more our speed. Competing with Google Search
> just isn't.

Not a good idea. Core functionality should consist of framework-stuff, not 
tight integration with other systems that may (not likely, but may) change 
their API's.

>
> Andy
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



-- 
Knut-Olav Hoven
Systemutvikler               mob: +47 986 71 700
Linpro AS                    http://www.linpro.no/
From dougal at gunters.org  Wed Oct  3 16:24:34 2007
From: dougal at gunters.org (Dougal Campbell)
Date: Wed Oct  3 16:24:43 2007
Subject: [wp-hackers] Page searching examples
In-Reply-To: <127FB995-9988-48D2-9245-984CF80EE62F@birdhouse.org>
References: <20071003120048.8554B6D2E@comox.textdrive.com>
	<127FB995-9988-48D2-9245-984CF80EE62F@birdhouse.org>
Message-ID: <4703C242.5060509@gunters.org>

Hacker Scot wrote:
> [...] people default to search, and expect Goog-like results.

I concur: the natural assumption for a search box on a web site is that
it will search _the entire site_, not just post text. That's why I
installed the Search Everything plugin on my site a while back.
Personally, I think it makes more sense to search everything by default,
and provide hooks for plugins to filter and  limit searching when desired.

In most cases, who cares if the search term was found in a post or on a
page? So there's not any built-in "relevance" -- what's wrong with
leaving it up to the user doing the search to decide how relevant the
result was for them?

-- 
Dougal Campbell <dougal@gunters.org <mailto:dougal@gunters.org>>
http://dougal.gunters.org/ <http://dougal.gunters.org>
From wp-hackers at striderweb.com  Wed Oct  3 16:25:41 2007
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed Oct  3 16:25:49 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <200710031754.13509.hovenko@linpro.no>
References: <46F8522A.1060702@mullenweg.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<200710031754.13509.hovenko@linpro.no>
Message-ID: <4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>

This discussion illustrates Allen Cooper's concept of "The Inmates  
are Running the Asylum"(1).  That is, we're designing interface from  
a standpoint of what's programmatically most logical (or easier)  
instead of what makes the most sense from the standpoint of Joe Average.

if Joe Average goes to a website and sees a "Search" box, he most  
likely expects it to search that site -- the *entire* site.  It  
should pull blog posts, pages, authors, tags... pretty much any  
information that actually appears on the site.  It is not intuitive  
to go to "blah.com", punch in a search, and only get results from a  
subsection of the site.

This is clearly a "growing pain" of WordPress's (most excellent)  
growth from a purely blog-oriented platform to a more full-featured  
CMS.  The search function has some catching up to do.  As a  
programmer it's probably beyond my skill (I'm sorry to say), or I  
would already be halfway to a patch by now.  As an interface  
designer, this seems almost self-evident.

At any rate, I think users expect "search" to search the site, not  
just a section of it -- ESPECIALLY when that Search Box appears on  
every page!  Does it make sense for the search box to appear on a  
page that would not be found by that very search box?  I myself did  
not realize until relatively recently that Search did NOT find  
anything on Pages.

I don't mean any disrespect, but it surprises me the number of people  
actually arguing that search should _not_ search pages.  Is this just  
a case of nobody wanting to "bell on the cat"?  I'm not the strongest  
programmer (largely from lack of practice), but I'm happy to help out  
in any way that I can.

Respectfully,
Stephen

1) http://www.amazon.com/Inmates-Are-Running-Asylum-Products/dp/ 
0672326140/

Hacker Scott said:

> [A] user told me just yesterday that search wasn't working. When I  
> checked, it seemed to be working fine. Turned out what she meant  
> was that she was searching on an author's name and (quiet  
> naturally) assuming that search would search everything. Yes, we  
> have author pages with lists of stories by those authors, but  
> people default to search, and expect Goog-like results.
>
> Whether it makes sense to include authors in search results is a  
> different question, since most installations don't have more than a  
> few authors. Just saying that users expect it.


From otto at ottodestruct.com  Wed Oct  3 16:54:52 2007
From: otto at ottodestruct.com (Otto)
Date: Wed Oct  3 16:54:57 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>
References: <46F8522A.1060702@mullenweg.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<200710031754.13509.hovenko@linpro.no>
	<4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>
Message-ID: <161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>

On 10/3/07, Stephen Rider <wp-hackers@striderweb.com> wrote:
> if Joe Average goes to a website and sees a "Search" box, he most
> likely expects it to search that site -- the *entire* site.  It
> should pull blog posts, pages, authors, tags... pretty much any
> information that actually appears on the site.  It is not intuitive
> to go to "blah.com", punch in a search, and only get results from a
> subsection of the site.

Stuff and nonsense. Joe Average doesn't expect it to search the whole
site, he expects to get results that are relevant to what he's
searching for. What subsection of the site it searches or not is
irrelevant.

A non-technical user does not know what "whole site" actually consists
of nor how "searches" work. This is not part of the operation he's
performing. What results we allow him to get back is entirely up to
us, not to him thinking he's "searching the whole site".

> As an interface designer, this seems almost self-evident.

So self-evident that it bites you in the arse, perhaps. ;-)

A good interface designer would note that the end result of performing
a search is getting relevant results, *and that is all*. Nothing else
matters. How you get those results is beside the point. Whether you
search pages or posts or tags or look through the couch for the keys,
it does not matter to the end user, as long as the information he's
wanting is returned.

> I don't mean any disrespect, but it surprises me the number of people
> actually arguing that search should _not_ search pages.

I'll say it very clearly: I think that the search function should not
search Pages *indiscriminately*. Why? Because Pages, in the context of
most uses of WordPress I've seen, are rarely data. They most often
consist of special setups, special Page Templates, forms, PHP, other
stuff that is *not normal paragraph-like text*. That's why I don't
want search looking at those, because it's not something that has
anything that should be returned to the user in a search.

The default behavior, given the usage patterns that I've seen for
Pages, should be to *not* search Pages. Now, I agree with allowing
them to be searched, but that should be on a per-Page basis, and
disabled by default.

-Otto
From supporto at pixline.net  Wed Oct  3 16:55:27 2007
From: supporto at pixline.net (Pixline)
Date: Wed Oct  3 16:55:44 2007
Subject: [wp-hackers] @ Need docu about writing a plugin for wp
In-Reply-To: <1191411289.20393.32.camel@xxxub>
References: <1191411289.20393.32.camel@xxxub>
Message-ID: <89E62BB7-1FCE-4C84-B46D-B866EBE83891@pixline.net>

> I want to add a feature to wp who lets me write articles in the
> mediawiki way, using brackets. I have a wordpress & a mediawiki
> installed in my server, and I want to reference mediawiki pages  
> from my
> wordpress by the brackets way ;)

I think there's something already done for you:

http://zechs.dyndns.org/wordpress/?page_id=126

Hope it helps.



Paolo Tresso
Pixline.net coder
--------------------------------------------
http://linkedin.com/in/paolotresso
http://pixline.net

From dan at scatter3d.com  Wed Oct  3 17:23:49 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Wed Oct  3 17:23:56 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<31C40DB8-FA33-406D-B254-6CF5547D6F46@striderweb.com>
	<161617690709291504r694a5cbg7c39382e3371139e@mail.gmail.com>
	<46FEDF61.8050906@ntlworld.com>
	<161617690709291925q5b1dfca6g574389591d7bb40e@mail.gmail.com>
	<A9B5CA6E-9B31-4D03-8FA5-BC18E0824B2C@striderweb.com>
	<6BA2F758-0060-43A7-8DF2-523EA044CC6E@viveka.net.au>
	<47037804.3000709@gmail.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
Message-ID: <7cf9ae490710031023i30d60281jc7876a45dea51d91@mail.gmail.com>

On 10/3/07, Andy Skelton <skeltoac@gmail.com> wrote:
> On 10/3/07, Doug Stewart <zamoose@gmail.com> wrote:
> > The fundamental point that Sam is making is sound, however -- content
> > accessible from a 3rd party search engine ought to be accessible in a
> > similar, if not easier, fashion from inside WordPress itself.   If one
> > must go to Google or Ask (What Happened To Jeeves!) in order to get
> > better search results than WP can provide, I think something is
> > probably wrong.
>
> WordPress, open source software that typically runs on shared hosting,
> should be able to produce search results on par with the secret
> algorithms of the world leader in search, a company with market
> capitalization of 182 billion dollars?

 The comparison to Google is valid in regards to expectations on
usability and results, not actual logistics; since we don't need to
apply algorithms for ranking. We just need to extend what's already
being searched from posts to other fields including pages.

Do you have any metrics on what wordpress.com users expect/want in
their search results? I'd be willing to bet as an author each would
expect every single word they type into a post and page and excerpt
and tag to be show up in search results.

> On 10/3/07, Knut-Olav Hoven <hovenko@linpro.no> wrote:On Wednesday 03 October 2007 17:41:48
> Andy Skelton wrote:
> >
> > It has been agreed that if WordPress had a relevence-based search
> > engine built in, we wouldn't have any trouble integrating pages into
> > the search results. That would be a nice thing to have but it's really
> > not a realistic goal at this point.

Why isn't it a realistic goal? What's holding us back specifically?

> That's probably because the basic WordPress philosophy has been to reject
> patches larger than 2 lines, telling the contributers to make plugins
> instead. (I'm pushing it to the edge, but it's still true)

An answer would alleviate comments like this, since Hoven's assumption
isn't being proven wrong [to some].

> Search-Everything and Search-Hilite are great plugins that gets the job done.
> Why shouldn't that be corestuff? (they might need some code cleanup, but
> still...)

This isn't going to happen in regards to adding options...

On 10/1/07, Matt Mullenweg <m@mullenweg.com> wrote:Daniel Cameron wrote:
> If we decide page searching is the best for most users, there will
> likely not be a UI-exposed option to turn it off, you'll need a plugin.

...and I have to agree. Bloating the core with bunch of options will
not be good even though in comparison to some already existing options
it should be acceptable.

Hoven: I'm always looking for help :) [1]


> > There are fine ways to integrate Google searches into a blog's
> > template. I think that's more our speed. Competing with Google Search
> > just isn't.

> Not a good idea. Core functionality should consist of framework-stuff, not
> tight integration with other systems that may (not likely, but may) change
> their API's.

Agreed, Google search is not an acceptable search replacement,
specifically looking for an author's content since comments and
intermingled.  And even if you use another plugin of mine [1] ads that
Google inserts isn't a reasonable trade-off.

{ Why can't we meet somewhere in between? }

Here's what I propose, knowing it's most likely not going to happen
but it will alleviate: user expectation, not bloat the core with
"unnecessary" options and more importantly the patch [I assume] will
only be a few lines of code:

Let's have Wordpress' default search include:
* Posts
* Pages
* Tags
* Meta fields
* Attachment Fields (title and description)
...this is what I strongly believe the author expects search results
are pulled from.

THEN,
Have the community (maybe me) create a plugin that will provide
options for the user to exclude, limit or include more from the core
search.

All this without requiring the any new options panel.

Pretty much the exact opposite of what's being done now, except it
will help the average non-plugin wordpress user and the wordpress user
that doesn't know how the default search works. Whom are the people
I'm thinking about when I make these suggestions or comments, not the
wp-hackers who can write a plugin or the above average .org user
swamped with plugins.

Then again, what about the wordpress.com user?

[These are only suggestions and should not be taken as a directive nor
was any of it meant to be condescending or rude to anyone on this
list. Thanks]

--
Dan Cameron
http://dancameron.org

[1] http://wordpress.org/extend/plugins/search-everything/
[2] http://wordpress.org/extend/plugins/google-ajax-search/
From mhancock at us.net  Wed Oct  3 17:28:09 2007
From: mhancock at us.net (Michael E. Hancock)
Date: Wed Oct  3 17:28:15 2007
Subject: [wp-hackers] IRC Meetup on 2.4 plans
Message-ID: <25c801c805e2$c4b23420$6402a8c0@DELL8600>

Reminder that another IRC Meetup to discuss 2.4 happens today, 3PM EDT.
That's noon in San Francisco, 9PM in Paris, 3PM in New York,  and 5AM
Thurdsay in Sydney.

See http://codex.wordpress.org/IRC_Meetups for approriate links.

Michael E. Hancock



From wp-hackers at striderweb.com  Wed Oct  3 17:31:42 2007
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed Oct  3 17:31:50 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<200710031754.13509.hovenko@linpro.no>
	<4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>
	<161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
Message-ID: <00AA9683-6665-44C8-AB31-730B3B45B027@striderweb.com>

On Oct 3, 2007, at 11:54 AM, Otto wrote:

> A good interface designer would note that the end result of performing
> a search is getting relevant results, *and that is all*. Nothing else
> matters. How you get those results is beside the point. Whether you
> search pages or posts or tags or look through the couch for the keys,
> it does not matter to the end user, as long as the information he's
> wanting is returned.
>
>> I don't mean any disrespect, but it surprises me the number of people
>> actually arguing that search should _not_ search pages.
>
> I'll say it very clearly: I think that the search function should not
> search Pages *indiscriminately*. Why? Because Pages, in the context of
> most uses of WordPress I've seen, are rarely data.

All good points.

> I agree with allowing
> them to be searched, but that should be on a per-Page basis, and
> disabled by default.

Somehow this should be customizable.  Perhaps by changing the  
function call in the template, or whatever.  I would hate to have to  
hit a checkbox for every stinkin page I make.  Maybe add an optional  
parameter to the search function?

Stephen
From zamoose at gmail.com  Wed Oct  3 17:34:08 2007
From: zamoose at gmail.com (Doug Stewart)
Date: Wed Oct  3 17:34:14 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <7cf9ae490710031023i30d60281jc7876a45dea51d91@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<161617690709291504r694a5cbg7c39382e3371139e@mail.gmail.com>
	<46FEDF61.8050906@ntlworld.com>
	<161617690709291925q5b1dfca6g574389591d7bb40e@mail.gmail.com>
	<A9B5CA6E-9B31-4D03-8FA5-BC18E0824B2C@striderweb.com>
	<6BA2F758-0060-43A7-8DF2-523EA044CC6E@viveka.net.au>
	<47037804.3000709@gmail.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<7cf9ae490710031023i30d60281jc7876a45dea51d91@mail.gmail.com>
Message-ID: <71ddd7490710031034q6e86e0ceg966c0bb6c43bdc52@mail.gmail.com>

Instead of simply creating a unitary search function, why not create
separate template functions like

post_search_results()
page_search_results()
tag_search_results()
category_search_results()
attachment_search_results()

...etc.?

Or is there a desire to have all the search results returned in a
single results object for some reason?

I'd be down with the more granular approach -- theme devs could then
have index.php?s=blahblahblah return results similar to what Apple's
Spotlight does, breaking the results down by relative content type
(or, in our case, it'd be relative context type).


-- 
-Doug

http://literalbarrage.org/blog/
From dan at scatter3d.com  Wed Oct  3 17:38:06 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Wed Oct  3 17:38:14 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<200710031754.13509.hovenko@linpro.no>
	<4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>
	<161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
Message-ID: <7cf9ae490710031038v3615f20fvc42635f3b65ab34f@mail.gmail.com>

On 10/3/07, Otto <otto@ottodestruct.com> wrote:
> I'll say it very clearly: I think that the search function should not
> search Pages *indiscriminately*. Why? Because Pages, in the context of
> most uses of WordPress I've seen, are rarely data. They most often
> consist of special setups, special Page Templates, forms, PHP, other
> stuff that is *not normal paragraph-like text*. That's why I don't
> want search looking at those, because it's not something that has
> anything that should be returned to the user in a search.
>
> The default behavior, given the usage patterns that I've seen for
> Pages, should be to *not* search Pages. Now, I agree with allowing
> them to be searched, but that should be on a per-Page basis, and
> disabled by default.
>
You should then use a plugin to exclude your pages after [I hope] the
inclusion of pages because EVERY user by default has an about page
created for them and to exclude this "data" from a search is out of
the ordinary to say the least.

I would also suggest that the majority of people on this list create
pages for their plugins, that's all textual data that should be in
results.

-- 
Dan Cameron
From ai2097 at users.sourceforge.net  Wed Oct  3 17:52:45 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Wed Oct  3 17:53:06 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <71ddd7490710031034q6e86e0ceg966c0bb6c43bdc52@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<161617690709291504r694a5cbg7c39382e3371139e@mail.gmail.com>
	<46FEDF61.8050906@ntlworld.com>
	<161617690709291925q5b1dfca6g574389591d7bb40e@mail.gmail.com>
	<A9B5CA6E-9B31-4D03-8FA5-BC18E0824B2C@striderweb.com>
	<6BA2F758-0060-43A7-8DF2-523EA044CC6E@viveka.net.au>
	<47037804.3000709@gmail.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<7cf9ae490710031023i30d60281jc7876a45dea51d91@mail.gmail.com>
	<71ddd7490710031034q6e86e0ceg966c0bb6c43bdc52@mail.gmail.com>
Message-ID: <20071003105245.14cd202e@localhost>

On Wed, 3 Oct 2007 13:34:08 -0400, "Doug Stewart" <zamoose@gmail.com>
wrote:

> Instead of simply creating a unitary search function, why not create
> separate template functions like
> 
> post_search_results()
> page_search_results()
> tag_search_results()
> category_search_results()
> attachment_search_results()
> 
> ...etc.?
> 
> Or is there a desire to have all the search results returned in a
> single results object for some reason?

Because a user knows -what- he's looking for, and it's search's job to
tell him -where-, not the other way around? ;)

Also, this would prime templates to get hosed if/when any unified
relevance-based search came into play.

> I'd be down with the more granular approach -- theme devs could then
> have index.php?s=blahblahblah return results similar to what Apple's
> Spotlight does, breaking the results down by relative content type
> (or, in our case, it'd be relative context type).

Content type (video, messages, pictures, etc.) is somewhat important;
you generally know if you're looking for a picture or a report. The
splitting of each WordPress content type is more akin to searching Word
documents vs. RTF vs. plain text vs. PDF vs. HTML. It might be useful
in a subset of cases for the user to be specific about which type he
wants to search (like, when you -know- the file you're looking for is a
PDF), but the general case of "find me some documents that might be
relevant" should search -all- of those sources without you having to
individually specify each one.


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From zamoose at gmail.com  Wed Oct  3 18:17:35 2007
From: zamoose at gmail.com (Doug Stewart)
Date: Wed Oct  3 18:42:42 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <20071003105245.14cd202e@localhost>
References: <46F8522A.1060702@mullenweg.com>
	<161617690709291925q5b1dfca6g574389591d7bb40e@mail.gmail.com>
	<A9B5CA6E-9B31-4D03-8FA5-BC18E0824B2C@striderweb.com>
	<6BA2F758-0060-43A7-8DF2-523EA044CC6E@viveka.net.au>
	<47037804.3000709@gmail.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<7cf9ae490710031023i30d60281jc7876a45dea51d91@mail.gmail.com>
	<71ddd7490710031034q6e86e0ceg966c0bb6c43bdc52@mail.gmail.com>
	<20071003105245.14cd202e@localhost>
Message-ID: <71ddd7490710031117t6e43d973v927766867c1fe0af@mail.gmail.com>

On 10/3/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:

> Because a user knows -what- he's looking for, and it's search's job to
> tell him -where-, not the other way around? ;)
>

This isn't the user's call, it's the theme devs' call.  Placing a
page_search_results() and a post_search_results() template tag in a
search results page would return (theoretically) the results of
searching on a string in both the posts and pages.

> Also, this would prime templates to get hosed if/when any unified
> relevance-based search came into play.
>
> > I'd be down with the more granular approach -- theme devs could then
> > have index.php?s=blahblahblah return results similar to what Apple's
> > Spotlight does, breaking the results down by relative content type
> > (or, in our case, it'd be relative context type).
>
> Content type (video, messages, pictures, etc.) is somewhat important;
> you generally know if you're looking for a picture or a report. The
> splitting of each WordPress content type is more akin to searching Word
> documents vs. RTF vs. plain text vs. PDF vs. HTML. It might be useful
> in a subset of cases for the user to be specific about which type he
> wants to search (like, when you -know- the file you're looking for is a
> PDF), but the general case of "find me some documents that might be
> relevant" should search -all- of those sources without you having to
> individually specify each one.
>

That's why I clarified with "context type" instead of content.  I
meant content in the "blog vs. pages" sense, not the ".txt vs. .rtf
vs. .mp3" sense.

-- 
-Doug

http://literalbarrage.org/blog/
From wantmoore at gmail.com  Wed Oct  3 19:04:23 2007
From: wantmoore at gmail.com (Justin Moore)
Date: Wed Oct  3 19:04:29 2007
Subject: [wp-hackers] Page searching examples
In-Reply-To: <4703C242.5060509@gunters.org>
References: <20071003120048.8554B6D2E@comox.textdrive.com>
	<127FB995-9988-48D2-9245-984CF80EE62F@birdhouse.org>
	<4703C242.5060509@gunters.org>
Message-ID: <75835fe10710031204x643baf13vb94455b69dffd489@mail.gmail.com>

On 10/3/07, Dougal Campbell <dougal@gunters.org> wrote:
> I concur: the natural assumption for a search box on a web site is that
> it will search _the entire site_, not just post text. That's why I
> installed the Search Everything plugin on my site a while back.

This is the most succinct, logical, and sensible comment I've read on
this whole subject. Dead on the money, IMHO.

-- 
Justin Moore
aka wantmoore
---------------------------------------
www.wantmoore.com
From peter.westwood at ftwr.co.uk  Wed Oct  3 19:04:19 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Oct  3 19:06:52 2007
Subject: [wp-hackers] Searching in general
Message-ID: <CD0B62A7-08FB-452D-A599-1451BD1E1602@ftwr.co.uk>

I've just been reading through the latest bits of the (page)  
searching discussion.

How about the following solution:

Add a new file to the files you can put in your theme - search.php.

Add new template tags and loop for the search results.

Search *everything* - Posts, Pages, Comments, Author names etc (or at  
least make it easy for plugins to populate the search results.

Backward compatibility would be provided by if no search.php then we  
use index.php and post only searching.

Cheers

westi
-- 
Peter Westwood <peter.westwood@ftwr.co.uk>
Blog: http://blog.ftwr.co.uk/
WordPress Plugins: http://blog.ftwr.co.uk/wordpress/



From ai2097 at users.sourceforge.net  Wed Oct  3 19:10:07 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Wed Oct  3 19:10:14 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <71ddd7490710031117t6e43d973v927766867c1fe0af@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<161617690709291925q5b1dfca6g574389591d7bb40e@mail.gmail.com>
	<A9B5CA6E-9B31-4D03-8FA5-BC18E0824B2C@striderweb.com>
	<6BA2F758-0060-43A7-8DF2-523EA044CC6E@viveka.net.au>
	<47037804.3000709@gmail.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<7cf9ae490710031023i30d60281jc7876a45dea51d91@mail.gmail.com>
	<71ddd7490710031034q6e86e0ceg966c0bb6c43bdc52@mail.gmail.com>
	<20071003105245.14cd202e@localhost>
	<71ddd7490710031117t6e43d973v927766867c1fe0af@mail.gmail.com>
Message-ID: <20071003121007.7d89372b@localhost>

On Wed, 3 Oct 2007 14:17:35 -0400, "Doug Stewart" <zamoose@gmail.com>
wrote:

> On 10/3/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
> 
> > Because a user knows -what- he's looking for, and it's search's job
> > to tell him -where-, not the other way around? ;)
> >
> 
> This isn't the user's call, it's the theme devs' call.

... I'm utterly flabbergasted. Momentarily speechless. Shocked and
confused. Allow me a brief bit of whitespace to recompose myself.



It absolutely is the user's call. The theme should not dictate to the
user "this is what we'll search; if you want anything else, you have to
hack me." Quite the contrary, the user should be able to say "I want
these things to show up in seach by default," centrally controlled by
WordPress and consistent across -all- themes.

I should not have to pick a theme based on where it decides
"relevant" content might be hiding. I simply cannot fathom why anyone
would want something different (aside from wanting to fit into the
existing technical constraints inside the system).

> Placing a page_search_results() and a post_search_results()
> template tag in a search results page would return (theoretically)
> the results of searching on a string in both the posts and pages.

But they wouldn't be unified, and there wouldn't be
forwards-compatibility with a unified, relevance-rated search if/when
one ever crops up.

> That's why I clarified with "context type" instead of content.  I
> meant content in the "blog vs. pages" sense, not the ".txt vs. .rtf
> vs. .mp3" sense.

Who cares? Text is text is text. Content is content is content. I'll use
a self-centered example: if I search for "In Series" on my site, the
*project page* does not show up. That page should be at the top of the
list. That's how search is supposed to work. Right now, the page doesn't
show up at all; people trying to find that information will just get a
string of release posts that probably aren't what they're really
looking for. The fact that the most relevant content is in a page is
completely irrelevant (ironically enough ;).

Splitting things up into "posts" vs "pages" does not help the user as
far as I can see. If you can give a scenario where that's not the
case, please -- enlighten me. 

-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From zamoose at gmail.com  Wed Oct  3 19:32:13 2007
From: zamoose at gmail.com (Doug Stewart)
Date: Wed Oct  3 19:32:24 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <20071003121007.7d89372b@localhost>
References: <46F8522A.1060702@mullenweg.com>
	<6BA2F758-0060-43A7-8DF2-523EA044CC6E@viveka.net.au>
	<47037804.3000709@gmail.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<7cf9ae490710031023i30d60281jc7876a45dea51d91@mail.gmail.com>
	<71ddd7490710031034q6e86e0ceg966c0bb6c43bdc52@mail.gmail.com>
	<20071003105245.14cd202e@localhost>
	<71ddd7490710031117t6e43d973v927766867c1fe0af@mail.gmail.com>
	<20071003121007.7d89372b@localhost>
Message-ID: <71ddd7490710031232h22c36946v78e8d182315b33a5@mail.gmail.com>

On 10/3/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
> >
> > This isn't the user's call, it's the theme devs' call.
>
> ... I'm utterly flabbergasted. Momentarily speechless. Shocked and
> confused. Allow me a brief bit of whitespace to recompose myself.
>

Perhaps you missed my point, perhaps I wasn't clear:

I sense a great deal of resistance to a unified approach to searching
by those with commit access.  I would love to have an intelligent
search function that enjoyed some measure of intelligence/heuristics
in its results, however I don't know how to get that included in the
core.

I view my proposals as a bit of a half-measure, intended to get into
the core yet soothe the objections that seemingly arise whenever the
concept of searching pages is broached.

We can agree to disagree whether a half measure is better than no
measure at all, I suppose...

 --
-Doug

http://literalbarrage.org/blog/
From skeltoac at gmail.com  Wed Oct  3 19:52:20 2007
From: skeltoac at gmail.com (Andy Skelton)
Date: Wed Oct  3 19:52:27 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <200710031754.13509.hovenko@linpro.no>
References: <46F8522A.1060702@mullenweg.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<200710031754.13509.hovenko@linpro.no>
Message-ID: <e6ec604d0710031252k6b776de8w9378198e34fa553@mail.gmail.com>

On 10/3/07, Knut-Olav Hoven <hovenko@linpro.no> wrote:
> > WordPress, open source software that typically runs on shared hosting,
> > should be able to produce search results on par with the secret
> > algorithms of the world leader in search, a company with market
> > capitalization of 182 billion dollars?
>
> Yeah, but WordPress don't have to search 182 billion websites either... just
> one. And we do get access to the raw data from the database, Google does not
> (hopefully). ;)

Google's index of billions of sites is part of what makes Google's
results so strong, even when the results are limited by "site:
example.com". Also, Google indexes the entire page, whereas WordPress
only knows about the contents of the post. The output of plugins and
widgets, such as UTW or Related Posts, can help Google determine
relevance. WordPress has no facility for searching pages by their
final output.

> > It has been agreed that if WordPress had a relevence-based search
> > engine built in, we wouldn't have any trouble integrating pages into
> > the search results. That would be a nice thing to have but it's really
> > not a realistic goal at this point.
>
> That's probably because the basic WordPress philosophy has been to reject
> patches larger than 2 lines, telling the contributers to make plugins
> instead. (I'm pushing it to the edge, but it's still true)

No, you're blaming something that is not at fault. None of the
solutions to date have fit the bill.

> > There are fine ways to integrate Google searches into a blog's
> > template. I think that's more our speed. Competing with Google Search
> > just isn't.
>
> Not a good idea. Core functionality should consist of framework-stuff, not
> tight integration with other systems that may (not likely, but may) change
> their API's.

It may not be for core but it's something that themes can do. I've
done it. It works very nicely with Adsense, too.

I still stand behind my assertion that we lack a good
relevance-ordered search system.

Andy
From otto at ottodestruct.com  Wed Oct  3 19:55:54 2007
From: otto at ottodestruct.com (Otto)
Date: Wed Oct  3 19:56:00 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <00AA9683-6665-44C8-AB31-730B3B45B027@striderweb.com>
References: <46F8522A.1060702@mullenweg.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<200710031754.13509.hovenko@linpro.no>
	<4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>
	<161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
	<00AA9683-6665-44C8-AB31-730B3B45B027@striderweb.com>
Message-ID: <161617690710031255t5261ed0ci3e83e715a483bca@mail.gmail.com>

On 10/3/07, Stephen Rider <wp-hackers@striderweb.com> wrote:
> Somehow this should be customizable.  Perhaps by changing the
> function call in the template, or whatever.  I would hate to have to
> hit a checkbox for every stinkin page I make.  Maybe add an optional
> parameter to the search function?

Something in the page template to disallow searches on pages using
that template might work, although that seems like a bad place to put
it. The template is the presentation layer, of sorts. Whether a page
is searchable or not should really be in the data itself, or possibly
implied by the application. A really nasty way to do it would be a
special tag in the Page content, like <!--searchable--> or some such
thing. I still like the checkbox idea, although whether you have it
default on or off is really a matter of personal preference.

Regardless, I like to Google's Custom Search functionality anyway to
get google results onto my own Page, but that's me and not anybody
else. :)
From dougal at gunters.org  Wed Oct  3 19:59:36 2007
From: dougal at gunters.org (Dougal Campbell)
Date: Wed Oct  3 19:59:54 2007
Subject: [wp-hackers] Page searching examples [was: 2.4
	planning	discussion]
In-Reply-To: <161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>	<200710031754.13509.hovenko@linpro.no>	<4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>
	<161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
Message-ID: <4703F4A8.3020301@gunters.org>

Otto wrote:
> I'll say it very clearly: I think that the search function should not
> search Pages *indiscriminately*. Why? Because Pages, in the context of
> most uses of WordPress I've seen, are rarely data. They most often
> consist of special setups, special Page Templates, forms, PHP, other
> stuff that is *not normal paragraph-like text*. That's why I don't
> want search looking at those, because it's not something that has
> anything that should be returned to the user in a search.
>   

I'll grant you the 'indiscriminately' clause, inasmuch as I think that
the search behavior should be pluggable.

However, my observations of sites in the wild disagree with yours,
probably just because we pay attention to different sorts of sites.
Using my own site as an example, I have six pages. Two of those are the
"special setup" types of pages that you mention (Archives and Contact).
The other four are pages of textual content.

But even in the case of "special pages", including them in the search
isn't going to hurt anything, because it's extremely unlikely that they
would match any normal searches. The Archives page is just a placeholder
to map to the template, and has no content at all. The only way a search
would match it would be when matching against the page title. And a
search for "archives" matching against the Archives page seems pretty
natural to me.

In my case, the Contact page also contains some text, along with the
form from a plugin. But for the sake of example, let's say that the only
text in the page was the "[CONTACT-FORM]" placeholder needed by the
plugin. Again, a search for "contact" or "contact form" would match this
page (against either the title or the content) in a manner that seems
pretty normal and useful.

So, even for an edge case where a site has many pages driven by page
templates (and thus have no "normal" content in the database), including
pages in searches is most often going to be a Good Thing.

Perhaps you were conceiving something more complex, where the search
would be including the *results* of an Archive template, and not just
the raw database content for the page? I don't think anybody was
suggesting that, though.

-- 
Dougal Campbell <dougal@gunters.org <mailto:dougal@gunters.org>>
http://dougal.gunters.org/ <http://dougal.gunters.org>
From skeltoac at gmail.com  Wed Oct  3 20:03:25 2007
From: skeltoac at gmail.com (Andy Skelton)
Date: Wed Oct  3 20:03:31 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <4703F4A8.3020301@gunters.org>
References: <46F8522A.1060702@mullenweg.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<200710031754.13509.hovenko@linpro.no>
	<4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>
	<161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
	<4703F4A8.3020301@gunters.org>
Message-ID: <e6ec604d0710031303v6800ac0fsd15f2c64a9212014@mail.gmail.com>

Respecting the subject of this thread, can anyone provide URLs
demonstrating good search on a WP site?

Andy
From otto at ottodestruct.com  Wed Oct  3 20:29:29 2007
From: otto at ottodestruct.com (Otto)
Date: Wed Oct  3 20:29:38 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <4703F4A8.3020301@gunters.org>
References: <46F8522A.1060702@mullenweg.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<200710031754.13509.hovenko@linpro.no>
	<4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>
	<161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
	<4703F4A8.3020301@gunters.org>
Message-ID: <161617690710031329r50896544t580bca2ec85c8d97@mail.gmail.com>

Well, maybe I'm thinking this through too hard or something, but I was
considering how the search functionality works. It's through the
normal WP_Query and Loop mechanism, so if it's returning Page content,
then a normal search loop is going to display Page content on the
search results. While not all search results pages display
the_content, quite a few do, and so the results could be rather
interesting, to say the least. Even your contact form placeholder is
going to cause it to spit out the placeholder, and if your plugin is
hooked to the_content, well, you get a form on the search results
page. Probably not expected behavior.

Now, I also agree with Andy on this one, that we need a relevance
ordered search system. I'd suggest that perhaps it might be worth
pulling search away from the normal query mechanism entirely, and
creating special search functionality. Right now it's using a rather
annoying LIKE mechanism to look for matches, which is strange to me
since mySQL has a rather nice MATCH() functionality to do natural
language searching built right in that we could use instead. It could
give back relevance values for better ordering of results, and we
could then even play with it to eliminate "special" Pages, if there
was some way to detect them as being such.

Maybe I'll work up a demo, see what I can figure out there.
From otto at ottodestruct.com  Wed Oct  3 20:39:28 2007
From: otto at ottodestruct.com (Otto)
Date: Wed Oct  3 20:39:34 2007
Subject: [wp-hackers] Searching in general
In-Reply-To: <CD0B62A7-08FB-452D-A599-1451BD1E1602@ftwr.co.uk>
References: <CD0B62A7-08FB-452D-A599-1451BD1E1602@ftwr.co.uk>
Message-ID: <161617690710031339heca0a30g40cd3e981be84a1c@mail.gmail.com>

Search.php is already in the template hierarchy. It's the search
results page. :)

http://codex.wordpress.org/Template_Hierarchy#Search_Result_page

-Otto

On 10/3/07, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
> I've just been reading through the latest bits of the (page)
> searching discussion.
>
> How about the following solution:
>
> Add a new file to the files you can put in your theme - search.php.
>
> Add new template tags and loop for the search results.
>
> Search *everything* - Posts, Pages, Comments, Author names etc (or at
> least make it easy for plugins to populate the search results.
>
> Backward compatibility would be provided by if no search.php then we
> use index.php and post only searching.
>
> Cheers
>
> westi
> --
> Peter Westwood <peter.westwood@ftwr.co.uk>
> Blog: http://blog.ftwr.co.uk/
> WordPress Plugins: http://blog.ftwr.co.uk/wordpress/
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From otto at ottodestruct.com  Wed Oct  3 20:41:44 2007
From: otto at ottodestruct.com (Otto)
Date: Wed Oct  3 20:41:57 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <e6ec604d0710031303v6800ac0fsd15f2c64a9212014@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<200710031754.13509.hovenko@linpro.no>
	<4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>
	<161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
	<4703F4A8.3020301@gunters.org>
	<e6ec604d0710031303v6800ac0fsd15f2c64a9212014@mail.gmail.com>
Message-ID: <161617690710031341o49b94b8bw69f68b504f3fc464@mail.gmail.com>

On 10/3/07, Andy Skelton <skeltoac@gmail.com> wrote:
> Respecting the subject of this thread, can anyone provide URLs
> demonstrating good search on a WP site?

You can check out my rather boring blog for an example of an
integrated Google Custom Search: http://ottodestruct.com/blog/ . It'll
show Google Ads also, if you're not blocking them.

Search box is in the upper left. Try "php widget".

-Otto
From dan at scatter3d.com  Wed Oct  3 21:09:37 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Wed Oct  3 21:09:43 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <161617690710031341o49b94b8bw69f68b504f3fc464@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<200710031754.13509.hovenko@linpro.no>
	<4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>
	<161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
	<4703F4A8.3020301@gunters.org>
	<e6ec604d0710031303v6800ac0fsd15f2c64a9212014@mail.gmail.com>
	<161617690710031341o49b94b8bw69f68b504f3fc464@mail.gmail.com>
Message-ID: <7cf9ae490710031409u3d9495c6h14d58cb72389e3b1@mail.gmail.com>

On 10/3/07, Andy Skelton <skeltoac@gmail.com> wrote:
Also, Google indexes the entire page, whereas WordPress
> only knows about the contents of the post. The output of plugins and
> widgets, such as UTW or Related Posts, can help Google determine
> relevance. WordPress has no facility for searching pages by their
> final output.

I can't imagine the links I have dynamically created in my sidebar
increasing the relevancy of a Google search centered around content
that's published on a page or post, especially since their completely
off topic. This also ties into my comment about Google searches not
respecting the site authors content since it intermixes comments (and
as you mentioned sidebar content).

On 10/3/07, Otto <otto@ottodestruct.com> wrote:
> On 10/3/07, Andy Skelton <skeltoac@gmail.com> wrote:
> > Respecting the subject of this thread, can anyone provide URLs
> > demonstrating good search on a WP site?
>
> You can check out my rather boring blog for an example of an
> integrated Google Custom Search: http://ottodestruct.com/blog/ . It'll
> show Google Ads also, if you're not blocking them.

What do you constitute as "good" search?
* If we're aiming to increase relevancy then the mechanisms Otto
proposes are great but we should also ask "relavancy relative to what
standard?". I don't think Google is a very good benchmark for
constituting "good" search as it doesn't respect authors content and
can be diluted by unrelated content.
* If the thread exists because there is a need to improve the default
search of Wordpress (as it is today) then modifying the query to
include all authored content (posts, pages, tags, meta, attach. etc.)
should suffice for everyone while letting the hackers produce plugins
for how the results are displayed, optimized or even provide personal
relevancy through basic options.

-- 
Dan Cameron
From dan at scatter3d.com  Wed Oct  3 21:21:57 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Wed Oct  3 21:22:04 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <7cf9ae490710031409u3d9495c6h14d58cb72389e3b1@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<71ddd7490710030412v745b4e8q4d3dd82dae143b96@mail.gmail.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<200710031754.13509.hovenko@linpro.no>
	<4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>
	<161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
	<4703F4A8.3020301@gunters.org>
	<e6ec604d0710031303v6800ac0fsd15f2c64a9212014@mail.gmail.com>
	<161617690710031341o49b94b8bw69f68b504f3fc464@mail.gmail.com>
	<7cf9ae490710031409u3d9495c6h14d58cb72389e3b1@mail.gmail.com>
Message-ID: <7cf9ae490710031421l132ff450g9aa4f6517b2b02e5@mail.gmail.com>

On 10/3/07, Daniel Cameron <dan@scatter3d.com> wrote:
> I can't imagine the links I have dynamically created in my sidebar
> increasing the relevancy of a Google search centered around content
> that's published on a page or post, especially since their completely
> off topic. This also ties into my comment about Google searches not
> respecting the site authors content since it intermixes comments (and
> as you mentioned sidebar content).
> ...
> I don't think Google is a very good benchmark for
> constituting "good" search as it doesn't respect authors content and
> can be diluted by unrelated content.

So I'm understood when I talk about "Google not respecting authors content".

http://ottodestruct.com/blog/search-results/?cx=004401713637877867885%3Ah9tjeskdp1a&cof=FORID%3A11&q=hackery&sa=Search#885

I can't image this search result being relevant to a visitor searching
for "Hackery" since s/he's most likely not looking for the "Hackery"
link on every single page.

This might be a bad example but it should get my point across that
real relavancy comes from what the author provides in content, tags,
excerpts and meta information; all but one can't be indexed by Google
(unless exposed of course).


-- 
Dan Cameron
From otto at ottodestruct.com  Wed Oct  3 23:42:39 2007
From: otto at ottodestruct.com (Otto)
Date: Wed Oct  3 23:42:45 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <7cf9ae490710031421l132ff450g9aa4f6517b2b02e5@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<e6ec604d0710030841p7f3c0853x6e427fc9d7394510@mail.gmail.com>
	<200710031754.13509.hovenko@linpro.no>
	<4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>
	<161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
	<4703F4A8.3020301@gunters.org>
	<e6ec604d0710031303v6800ac0fsd15f2c64a9212014@mail.gmail.com>
	<161617690710031341o49b94b8bw69f68b504f3fc464@mail.gmail.com>
	<7cf9ae490710031409u3d9495c6h14d58cb72389e3b1@mail.gmail.com>
	<7cf9ae490710031421l132ff450g9aa4f6517b2b02e5@mail.gmail.com>
Message-ID: <161617690710031642s376f4fi978e7ff0261c86d5@mail.gmail.com>

Oh no, I'm not saying Google is the best way to go, by any means. But
it's still better than what we got now. It's what I use because, for
the particular searches that I've found people use on my own site, it
works quite well.

So, don't get me wrong. I'm a proponent of the match() functionality
in mysql. That would work quite well, I think. Maybe. Haven't tried it
yet.

As far as searching pages and such go, I think that maybe breaking out
of the Loop paradigm might be the best way. But I dunno for sure. Just
ideas. :)



On 10/3/07, Daniel Cameron <dan@scatter3d.com> wrote:
> On 10/3/07, Daniel Cameron <dan@scatter3d.com> wrote:
> > I can't imagine the links I have dynamically created in my sidebar
> > increasing the relevancy of a Google search centered around content
> > that's published on a page or post, especially since their completely
> > off topic. This also ties into my comment about Google searches not
> > respecting the site authors content since it intermixes comments (and
> > as you mentioned sidebar content).
> > ...
> > I don't think Google is a very good benchmark for
> > constituting "good" search as it doesn't respect authors content and
> > can be diluted by unrelated content.
>
> So I'm understood when I talk about "Google not respecting authors content".
>
> http://ottodestruct.com/blog/search-results/?cx=004401713637877867885%3Ah9tjeskdp1a&cof=FORID%3A11&q=hackery&sa=Search#885
>
> I can't image this search result being relevant to a visitor searching
> for "Hackery" since s/he's most likely not looking for the "Hackery"
> link on every single page.
>
> This might be a bad example but it should get my point across that
> real relavancy comes from what the author provides in content, tags,
> excerpts and meta information; all but one can't be indexed by Google
> (unless exposed of course).
>
>
> --
> Dan Cameron
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From dan at scatter3d.com  Thu Oct  4 00:06:00 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Thu Oct  4 00:06:07 2007
Subject: [wp-hackers] Page searching examples [was: 2.4 planning
	discussion]
In-Reply-To: <161617690710031642s376f4fi978e7ff0261c86d5@mail.gmail.com>
References: <46F8522A.1060702@mullenweg.com>
	<200710031754.13509.hovenko@linpro.no>
	<4E3BEFD5-F9BF-48DF-8975-12EA85C42B93@striderweb.com>
	<161617690710030954k790d3c9dy4d00e6f59cb0f1b@mail.gmail.com>
	<4703F4A8.3020301@gunters.org>
	<e6ec604d0710031303v6800ac0fsd15f2c64a9212014@mail.gmail.com>
	<161617690710031341o49b94b8bw69f68b504f3fc464@mail.gmail.com>
	<7cf9ae490710031409u3d9495c6h14d58cb72389e3b1@mail.gmail.com>
	<7cf9ae490710031421l132ff450g9aa4f6517b2b02e5@mail.gmail.com>
	<161617690710031642s376f4fi978e7ff0261c86d5@mail.gmail.com>
Message-ID: <7cf9ae490710031706w1ecbf511t2423defa9233b6b7@mail.gmail.com>

On 10/3/07, Otto <otto@ottodestruct.com> wrote:
> Oh no, I'm not saying Google is the best way to go, by any means. But
> it's still better than what we got now.

I understand. I just had to single you our as an example since we're
talking about what "good" search is. And I agree, Google is better
then what we have, even if *I* don't prefer it.

> So, don't get me wrong. I'm a proponent of the match() functionality
> in mysql. That would work quite well, I think. Maybe. Haven't tried it
> yet.

I'm not familiar with it but it sure sounds good.

> But I dunno for sure. Just
> ideas. :)

+1

-- 
Dan Cameron
From tbarta at gmail.com  Thu Oct  4 01:13:09 2007
From: tbarta at gmail.com (Tom Barta)
Date: Thu Oct  4 01:13:17 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>
	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name> <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
	<47019823.4030406@mullenweg.com>
	<c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>
	<b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>
Message-ID: <7d6d8bd0710031813g9a0edf8w539c4932ee14de98@mail.gmail.com>

On 10/2/07, Leonid Mamchenkov <leonid@mamchenkov.net> wrote:
> On 10/2/07, usleepless@gmail.com <usleepless@gmail.com> wrote:
> > But as Tom pointed out, (reserverd) keywords are ... well ... kind of
> > reserved. Don't use them as identifiers.
>
> I guess there is an added benefit of forward compatibility in escaping
> fields and table names.  Words which are not reserved now can become
> so in the future.

Ok, so there's at least two options:
 1) Use backticks to escape tables and fields.  This future-proofs
against MySQL reserved keyword changes (how frequently does that
happen?).  It also makes it harder to  use /any other database/ with
Wordpress.
 2) Use non-reserved tables and fields.  If a new version of MySQL
comes out that adds an inconvenient reserved word, then the first
version of WP needs to add backticks or provide a DB upgrade path with
a field rename.

How frequently is a new version of MySQL expected to add keywords that
collide with the WP schema?  It seems to me like this is something
that deliberately hurts any future for cross-platform WP support
(which is an issue that comes up frequently, so it is a real issue for
some people) to avoid a slim chance that some future version of MySQL
will change things.  Just because WP is only targetted towards MySQL
doesn't mean that it should go out of its way to entrench itself in
MySQL for (what I view as) a questionable benefit.

-- 
Tom
From computerguru at neosmart.net  Thu Oct  4 03:54:51 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Thu Oct  4 03:54:57 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <7d6d8bd0710031813g9a0edf8w539c4932ee14de98@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>
	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name> <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
	<47019823.4030406@mullenweg.com>
	<c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>
	<b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>
	<7d6d8bd0710031813g9a0edf8w539c4932ee14de98@mail.gmail.com>
Message-ID: <4681c7d40710032054r17a599b1jc61971fa3957b659@mail.gmail.com>

IMO it's highly unlikely MySQL would ever add a keyword that's in use as a
table name in the more popular open source platforms.... After all, we're
all on the same team here :)

On 10/4/07, Tom Barta <tbarta@gmail.com> wrote:
>
> On 10/2/07, Leonid Mamchenkov <leonid@mamchenkov.net> wrote:
> > On 10/2/07, usleepless@gmail.com <usleepless@gmail.com> wrote:
> > > But as Tom pointed out, (reserverd) keywords are ... well ... kind of
> > > reserved. Don't use them as identifiers.
> >
> > I guess there is an added benefit of forward compatibility in escaping
> > fields and table names.  Words which are not reserved now can become
> > so in the future.
>
> Ok, so there's at least two options:
> 1) Use backticks to escape tables and fields.  This future-proofs
> against MySQL reserved keyword changes (how frequently does that
> happen?).  It also makes it harder to  use /any other database/ with
> Wordpress.
> 2) Use non-reserved tables and fields.  If a new version of MySQL
> comes out that adds an inconvenient reserved word, then the first
> version of WP needs to add backticks or provide a DB upgrade path with
> a field rename.
>
> How frequently is a new version of MySQL expected to add keywords that
> collide with the WP schema?  It seems to me like this is something
> that deliberately hurts any future for cross-platform WP support
> (which is an issue that comes up frequently, so it is a real issue for
> some people) to avoid a slim chance that some future version of MySQL
> will change things.  Just because WP is only targetted towards MySQL
> doesn't mean that it should go out of its way to entrench itself in
> MySQL for (what I view as) a questionable benefit.
>
> --
> Tom
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From robin.adr at gmail.com  Thu Oct  4 03:59:02 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Thu Oct  4 03:59:10 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <4681c7d40710032054r17a599b1jc61971fa3957b659@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name> <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
	<47019823.4030406@mullenweg.com>
	<c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>
	<b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>
	<7d6d8bd0710031813g9a0edf8w539c4932ee14de98@mail.gmail.com>
	<4681c7d40710032054r17a599b1jc61971fa3957b659@mail.gmail.com>
Message-ID: <d135ca9c0710032059n1bc04121x599d0797250db346@mail.gmail.com>

True, but it's always better to be safe than sorry (as much as I agree with
you). Also, at least in my opinion, it makes the SQL more readable --
keywords are in caps, strings surrounded by straight single quotes, and
DB/table/field names wrapped in backticks.

On 10/3/07, Computer Guru <computerguru@neosmart.net> wrote:
>
> IMO it's highly unlikely MySQL would ever add a keyword that's in use as a
> table name in the more popular open source platforms.... After all, we're
> all on the same team here :)
>
> On 10/4/07, Tom Barta <tbarta@gmail.com> wrote:
> >
> > On 10/2/07, Leonid Mamchenkov <leonid@mamchenkov.net> wrote:
> > > On 10/2/07, usleepless@gmail.com <usleepless@gmail.com> wrote:
> > > > But as Tom pointed out, (reserverd) keywords are ... well ... kind
> of
> > > > reserved. Don't use them as identifiers.
> > >
> > > I guess there is an added benefit of forward compatibility in escaping
> > > fields and table names.  Words which are not reserved now can become
> > > so in the future.
> >
> > Ok, so there's at least two options:
> > 1) Use backticks to escape tables and fields.  This future-proofs
> > against MySQL reserved keyword changes (how frequently does that
> > happen?).  It also makes it harder to  use /any other database/ with
> > Wordpress.
> > 2) Use non-reserved tables and fields.  If a new version of MySQL
> > comes out that adds an inconvenient reserved word, then the first
> > version of WP needs to add backticks or provide a DB upgrade path with
> > a field rename.
> >
> > How frequently is a new version of MySQL expected to add keywords that
> > collide with the WP schema?  It seems to me like this is something
> > that deliberately hurts any future for cross-platform WP support
> > (which is an issue that comes up frequently, so it is a real issue for
> > some people) to avoid a slim chance that some future version of MySQL
> > will change things.  Just because WP is only targetted towards MySQL
> > doesn't mean that it should go out of its way to entrench itself in
> > MySQL for (what I view as) a questionable benefit.
> >
> > --
> > Tom
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Computer Guru
> Director,
> NeoSmart Technologies
> http://neosmart.net/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From christine at neato.co.nz  Thu Oct  4 04:07:21 2007
From: christine at neato.co.nz (Christine Davis)
Date: Thu Oct  4 04:07:28 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <4681c7d40710032054r17a599b1jc61971fa3957b659@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name> <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
	<47019823.4030406@mullenweg.com>
	<c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>
	<b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>
	<7d6d8bd0710031813g9a0edf8w539c4932ee14de98@mail.gmail.com>
	<4681c7d40710032054r17a599b1jc61971fa3957b659@mail.gmail.com>
Message-ID: <6e966a280710032107l6aa12f52yafc4ef7a5d1ffb94@mail.gmail.com>

Not to mention that tables are generally prefixed by wp_ ... which would
make for a very curious reserved word indeed.

On 10/4/07, Computer Guru <computerguru@neosmart.net> wrote:
>
> IMO it's highly unlikely MySQL would ever add a keyword that's in use as a
> table name in the more popular open source platforms.... After all, we're
> all on the same team here :)
>
>
From peter.westwood at ftwr.co.uk  Thu Oct  4 07:08:03 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Thu Oct  4 07:08:54 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <7d6d8bd0710031813g9a0edf8w539c4932ee14de98@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>	<c39ec84c0709301739y1d2523e0p2da785ec76eca05e@mail.gmail.com>	<b88434820709301750p39b976edqcfd67377dc79da93@mail.gmail.com>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<47004BE8.2040306@santosj.name>
	<op.tzhwk4vqk6w4mc@dd32.no-ip.com>	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>	<47019823.4030406@mullenweg.com>	<c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>	<b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>
	<7d6d8bd0710031813g9a0edf8w539c4932ee14de98@mail.gmail.com>
Message-ID: <47049153.8090707@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Tom Barta wrote:
> On 10/2/07, Leonid Mamchenkov <leonid@mamchenkov.net> wrote:
>> On 10/2/07, usleepless@gmail.com <usleepless@gmail.com> wrote:
>>> But as Tom pointed out, (reserverd) keywords are ... well ... kind of
>>> reserved. Don't use them as identifiers.
>> I guess there is an added benefit of forward compatibility in escaping
>> fields and table names.  Words which are not reserved now can become
>> so in the future.
> 
> Ok, so there's at least two options:
>  1) Use backticks to escape tables and fields.  This future-proofs
> against MySQL reserved keyword changes (how frequently does that
> happen?).  It also makes it harder to  use /any other database/ with
> Wordpress.

Why does it make it harder.

Replacing all the backticks in a mysql statement passed to
$wpdb->prepare is surely just a simple search and replace.

>  2) Use non-reserved tables and fields.  If a new version of MySQL
> comes out that adds an inconvenient reserved word, then the first
> version of WP needs to add backticks or provide a DB upgrade path with
> a field rename.

Thats all well and good but we state that we work with at leat MySQL
vx.x and so we should still work when MySQL y.y comes out and adds the
"autoload" keyword (for example) we still work.

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHBJFTVPRdzag0AcURAr9VAJ9BShJsCbPtmTpUhG1RTYvv+BtfGACfSr67
Ma0eWT6eBDa/I4Qo58v+eLc=
=wKci
-----END PGP SIGNATURE-----
From james at freecharity.org.uk  Thu Oct  4 07:25:52 2007
From: james at freecharity.org.uk (James Davis)
Date: Thu Oct  4 07:26:14 2007
Subject: [wp-hackers] Testing plugin translations
Message-ID: <47049580.2020004@freecharity.org.uk>

A kind volunteer has translated my plugin into Italian. We've produced
.po and .mo files for the plugin.

plugins/petition/petition.php
plugins/petition/petition-it_IT.po
plugins/petition/petition-it_IT.mo

In my wp-config.php I've set

define ('WPLANG', 'it_IT');

and in petition.php I've called

load_plugin_textdomain("fcpetition", dirname(__FILE__));

and strings in the plugin are printed with functions such as

 _e("Please enter the petition title","fcpetition")

Yet I don't see my plugin's output being displayed in Italian. Am I
missing some vital step?

James

-- 
http://www.freecharity.org.uk/ - Free IT services for charities
http://www.freecharity.org.uk/wiki/ - The VCSWiki
From leonid at mamchenkov.net  Thu Oct  4 07:42:59 2007
From: leonid at mamchenkov.net (Leonid Mamchenkov)
Date: Thu Oct  4 07:43:06 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <6e966a280710032107l6aa12f52yafc4ef7a5d1ffb94@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net> <47004BE8.2040306@santosj.name>
	<op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
	<47019823.4030406@mullenweg.com>
	<c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>
	<b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>
	<7d6d8bd0710031813g9a0edf8w539c4932ee14de98@mail.gmail.com>
	<4681c7d40710032054r17a599b1jc61971fa3957b659@mail.gmail.com>
	<6e966a280710032107l6aa12f52yafc4ef7a5d1ffb94@mail.gmail.com>
Message-ID: <b76f24970710040042q2313a90bu1a98e8ca360c2d7a@mail.gmail.com>

Hi,

On 10/4/07, Christine Davis <christine@neato.co.nz> wrote:
> Not to mention that tables are generally prefixed by wp_ ... which would
> make for a very curious reserved word indeed.

Not that I am advocating one way or the other, but:

1. 'wp_' prefix is configurable.
2. fields aren't prefixed.

-- 
Leonid Mamchenkov
From usleepless at gmail.com  Thu Oct  4 07:51:56 2007
From: usleepless at gmail.com (usleepless@gmail.com)
Date: Thu Oct  4 07:52:01 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <47049153.8090707@ftwr.co.uk>
References: <46FC6EC9.9010004@comcast.net>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name> <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
	<47019823.4030406@mullenweg.com>
	<c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>
	<b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>
	<7d6d8bd0710031813g9a0edf8w539c4932ee14de98@mail.gmail.com>
	<47049153.8090707@ftwr.co.uk>
Message-ID: <c39ec84c0710040051h685291b2s510ee40b2aa7a392@mail.gmail.com>

On 10/4/07, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Tom Barta wrote:
> > On 10/2/07, Leonid Mamchenkov <leonid@mamchenkov.net> wrote:
> >> On 10/2/07, usleepless@gmail.com <usleepless@gmail.com> wrote:
> >>> But as Tom pointed out, (reserverd) keywords are ... well ... kind of
> >>> reserved. Don't use them as identifiers.
> >> I guess there is an added benefit of forward compatibility in escaping
> >> fields and table names.  Words which are not reserved now can become
> >> so in the future.
> >
> > Ok, so there's at least two options:
> >  1) Use backticks to escape tables and fields.  This future-proofs
> > against MySQL reserved keyword changes (how frequently does that
> > happen?).  It also makes it harder to  use /any other database/ with
> > Wordpress.
>
> Why does it make it harder.
>
> Replacing all the backticks in a mysql statement passed to
> $wpdb->prepare is surely just a simple search and replace.

except for the fact you can't use backticks in posts anymore. they
will be replaced into oblivion.

> >  2) Use non-reserved tables and fields.  If a new version of MySQL
> > comes out that adds an inconvenient reserved word, then the first
> > version of WP needs to add backticks or provide a DB upgrade path with
> > a field rename.
>
> Thats all well and good but we state that we work with at leat MySQL
> vx.x and so we should still work when MySQL y.y comes out and adds the
> "autoload" keyword (for example) we still work.

don't worry. new major versions of MySQL tend to be so unstable, they
have very slow adoption.

furthermore, this whole backtick argument is just smoke & mirrors:
 - all SQL in WP is backtick-free except for update.php
 - will a patch to add backticks to all other SQL be accepted?
 - if indeed it was good practice, the "good practice" would be ...
well practiced. it's strange i haven't seen it practiced in other
projects.

you might as well write
  (x + (2*y)) instead of x+2*y

because... well... you know... perhaps the precedence of * over +
might change. better be safe than sorry! you never know!

regards,

usleep
From ozh at planetozh.com  Thu Oct  4 07:58:38 2007
From: ozh at planetozh.com (Ozh)
Date: Thu Oct  4 07:58:43 2007
Subject: [wp-hackers] Testing plugin translations
Message-ID: <OF27B3EFD3.7AC00272-ONC125736A.002B8EB2-C125736A.002BD2BB@notes.edfgdf.fr>

>and in petition.php I've called
>
>load_plugin_textdomain("fcpetition", dirname(__FILE__));

load_plugin_textdomain() needs a path relative to WP's root.
>From the source:
$mofile = ABSPATH . "$path/$domain-$locale.mo";

so I think you need something like:
load_plugin_textdomain('fcpetition', 
'wp-content/plugins/'.plugin_basename(dirname(__FILE__)));


Ozh
From wordpress at dd32.id.au  Thu Oct  4 08:01:07 2007
From: wordpress at dd32.id.au (DD32)
Date: Thu Oct  4 08:00:37 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <c39ec84c0710040051h685291b2s510ee40b2aa7a392@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>
	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>
	<47004BE8.2040306@santosj.name> <op.tzhwk4vqk6w4mc@dd32.no-ip.com>
	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>
	<47019823.4030406@mullenweg.com>
	<c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>
	<b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>
	<7d6d8bd0710031813g9a0edf8w539c4932ee14de98@mail.gmail.com>
	<47049153.8090707@ftwr.co.uk>
	<c39ec84c0710040051h685291b2s510ee40b2aa7a392@mail.gmail.com>
Message-ID: <op.tznxv51ok6w4mc@dd32.no-ip.com>

On Thu, 04 Oct 2007 17:51:56 +1000, <usleepless@gmail.com> wrote:

> On 10/4/07, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
>> Tom Barta wrote:
>> Replacing all the backticks in a mysql statement passed to
>> $wpdb->prepare is surely just a simple search and replace.
>
> except for the fact you can't use backticks in posts anymore. they
> will be replaced into oblivion.

$wpdb->prepare() takes a sprintf style SQL statement, 
eg: http://trac.wordpress.org/ticket/4553
$wpdb->query($wpdb->prepare("UPDATE $wpdb->options SET option_value = %s WHERE option_name = %s", $newvalue, $option_name));

So the SQL statement passed in can be mangled however you alternate db lovers want without ever having to touch the raw data being queried.
the prepare() was introduced in 2.3 code, Most of the WP code is being altered to make use of it AFAIK for 2.4.
From peter.westwood at ftwr.co.uk  Thu Oct  4 07:59:42 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Thu Oct  4 08:00:48 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <c39ec84c0710040051h685291b2s510ee40b2aa7a392@mail.gmail.com>
References: <46FC6EC9.9010004@comcast.net>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<47004BE8.2040306@santosj.name>
	<op.tzhwk4vqk6w4mc@dd32.no-ip.com>	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>	<47019823.4030406@mullenweg.com>	<c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>	<b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>	<7d6d8bd0710031813g9a0edf8w539c4932ee14de98@mail.gmail.com>	<47049153.8090707@ftwr.co.uk>
	<c39ec84c0710040051h685291b2s510ee40b2aa7a392@mail.gmail.com>
Message-ID: <47049D6E.20702@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

usleepless@gmail.com wrote:
> On 10/4/07, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>> Tom Barta wrote:
>>> On 10/2/07, Leonid Mamchenkov <leonid@mamchenkov.net> wrote:
>>>> On 10/2/07, usleepless@gmail.com <usleepless@gmail.com> wrote:
>>>>> But as Tom pointed out, (reserverd) keywords are ... well ... kind of
>>>>> reserved. Don't use them as identifiers.
>>>> I guess there is an added benefit of forward compatibility in escaping
>>>> fields and table names.  Words which are not reserved now can become
>>>> so in the future.
>>> Ok, so there's at least two options:
>>>  1) Use backticks to escape tables and fields.  This future-proofs
>>> against MySQL reserved keyword changes (how frequently does that
>>> happen?).  It also makes it harder to  use /any other database/ with
>>> Wordpress.
>> Why does it make it harder.
>>
>> Replacing all the backticks in a mysql statement passed to
>> $wpdb->prepare is surely just a simple search and replace.
> 
> except for the fact you can't use backticks in posts anymore. they
> will be replaced into oblivion.

Yes you can, you can replace the backticks in the SQL statement passed
to wpdb->prepare _before_ you sprintf in the post content.

As we are switching to wpdb->prepare for as many as possible, if not
all, the queries for v2.4 this will be simple for a drop in wp-db.php to
do to enable support for other db's


> you might as well write
>   (x + (2*y)) instead of x+2*y
> 
> because... well... you know... perhaps the precedence of * over +
> might change. better be safe than sorry! you never know!

Actually, it is good programming practice to include the parenthesis -
It makes it easier to read and understand the true outcome of the equation.

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHBJ1uVPRdzag0AcURAnevAJ0exN9p3Bur1zkq9njmE6GNzyW8wQCgmA1i
R6SoBoctQNgHQBiM8GqGvfw=
=gT9p
-----END PGP SIGNATURE-----
From m at mullenweg.com  Thu Oct  4 08:09:13 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Thu Oct  4 08:09:25 2007
Subject: [wp-hackers] PostgreSQL port status?
In-Reply-To: <47049D6E.20702@ftwr.co.uk>
References: <46FC6EC9.9010004@comcast.net>	<d135ca9c0709301802j6331d064v6589fb1c1a07991a@mail.gmail.com>	<47004BE8.2040306@santosj.name>	<op.tzhwk4vqk6w4mc@dd32.no-ip.com>	<c39ec84c0710010604n5ada04a4y6b0f8f0157b7ac97@mail.gmail.com>	<47019823.4030406@mullenweg.com>	<c39ec84c0710021311q11ca16d9r81d261f67cac3549@mail.gmail.com>	<b76f24970710022015w5c1baa17u7b8fdf52c74a4dfb@mail.gmail.com>	<7d6d8bd0710031813g9a0edf8w539c4932ee14de98@mail.gmail.com>	<47049153.8090707@ftwr.co.uk>	<c39ec84c0710040051h685291b2s510ee40b2aa7a392@mail.gmail.com>
	<47049D6E.20702@ftwr.co.uk>
Message-ID: <47049FA9.3000301@mullenweg.com>

Peter Westwood wrote:
> Yes you can, you can replace the backticks in the SQL statement passed
> to wpdb->prepare _before_ you sprintf in the post content.
> 
> As we are switching to wpdb->prepare for as many as possible, if not
> all, the queries for v2.4 this will be simple for a drop in wp-db.php to
> do to enable support for other db's

And on that note, think we should close this discussion. When people 
have written working code it can be opened back up.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From james at freecharity.org.uk  Thu Oct  4 08:09:59 2007
From: james at freecharity.org.uk (James Davis)
Date: Thu Oct  4 08:10:26 2007
Subject: [wp-hackers] Testing plugin translations
In-Reply-To: <OF27B3EFD3.7AC00272-ONC125736A.002B8EB2-C125736A.002BD2BB@notes.edfgdf.fr>
References: <OF27B3EFD3.7AC00272-ONC125736A.002B8EB2-C125736A.002BD2BB@notes.edfgdf.fr>
Message-ID: <47049FD7.9030103@freecharity.org.uk>

Ozh wrote:

>>From the source:
> $mofile = ABSPATH . "$path/$domain-$locale.mo";
> 
> so I think you need something like:
> load_plugin_textdomain('fcpetition', 
> 'wp-content/plugins/'.plugin_basename(dirname(__FILE__)));

Thanks. It was that and making sure that the file was named according to
the domain I was using, not the filename of the plugin itself.

James

-- 
http://www.freecharity.org.uk/ - Free IT services for charities
http://www.freecharity.org.uk/wiki/ - The VCSWiki
From kdmurray at gmail.com  Thu Oct  4 15:27:54 2007
From: kdmurray at gmail.com (Keith Murray)
Date: Thu Oct  4 15:28:39 2007
Subject: [wp-hackers] WP's Physical Path
In-Reply-To: <47049FD7.9030103@freecharity.org.uk>
References: <OF27B3EFD3.7AC00272-ONC125736A.002B8EB2-C125736A.002BD2BB@notes.edfgdf.fr>
	<47049FD7.9030103@freecharity.org.uk>
Message-ID: <4705067A.2070105@gmail.com>


Hi,

I apologize if this is a question with a well-documented answer, but 
I've been looking for a while and haven't come up with one.  I have a 
plugin that needs to reference a physical path on the host.  Is there a 
WP variable that stores the physical path?  Or is there a method of 
retrieving the physical path of your WP root in some other fashion?

What I need to get is a path like:
/home/users/my_account/somedomain.com/wordpress

Ideally this could be done with little or no knowledge of this 
information by the blogger using the WP plugin.

Thanks,

Keith.
From if.website at gmail.com  Thu Oct  4 15:32:57 2007
From: if.website at gmail.com (Austin Matzko)
Date: Thu Oct  4 15:33:04 2007
Subject: [wp-hackers] WP's Physical Path
In-Reply-To: <4705067A.2070105@gmail.com>
References: <OF27B3EFD3.7AC00272-ONC125736A.002B8EB2-C125736A.002BD2BB@notes.edfgdf.fr>
	<47049FD7.9030103@freecharity.org.uk> <4705067A.2070105@gmail.com>
Message-ID: <674b4a3b0710040832n5daf1beyf2a843c044436cca@mail.gmail.com>

On 10/4/07, Keith Murray <kdmurray@gmail.com> wrote:
> Is there a
> WP variable that stores the physical path?

I think you're looking for the constant ABSPATH
From ionfish at gmail.com  Thu Oct  4 15:33:06 2007
From: ionfish at gmail.com (Benedict Eastaugh)
Date: Thu Oct  4 15:33:15 2007
Subject: [wp-hackers] WP's Physical Path
In-Reply-To: <4705067A.2070105@gmail.com>
References: <OF27B3EFD3.7AC00272-ONC125736A.002B8EB2-C125736A.002BD2BB@notes.edfgdf.fr>
	<47049FD7.9030103@freecharity.org.uk> <4705067A.2070105@gmail.com>
Message-ID: <fd3b80510710040833ue51e155t68b9d802a3ce43f2@mail.gmail.com>

You want the ABSPATH constant.
From peter.westwood at ftwr.co.uk  Thu Oct  4 15:34:32 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Thu Oct  4 15:36:22 2007
Subject: [wp-hackers] WP's Physical Path
In-Reply-To: <4705067A.2070105@gmail.com>
References: <OF27B3EFD3.7AC00272-ONC125736A.002B8EB2-C125736A.002BD2BB@notes.edfgdf.fr>	<47049FD7.9030103@freecharity.org.uk>
	<4705067A.2070105@gmail.com>
Message-ID: <47050808.4080802@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Keith Murray wrote:
> 
> Hi,
> 
> I apologize if this is a question with a well-documented answer, but
> I've been looking for a while and haven't come up with one.  I have a
> plugin that needs to reference a physical path on the host.  Is there a
> WP variable that stores the physical path?  Or is there a method of
> retrieving the physical path of your WP root in some other fashion?
> 
> What I need to get is a path like:
> /home/users/my_account/somedomain.com/wordpress
> 
> Ideally this could be done with little or no knowledge of this
> information by the blogger using the WP plugin.
> 

ABSPATH is your friend I think

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHBQgIVPRdzag0AcURAnyKAJ4pwxFYrWjASKqBIwQ6wPSceHW2EgCfbDRY
Ol4ytZXX6hMnXdjgXwEvy+s=
=sTtf
-----END PGP SIGNATURE-----
From ag.ml2007 at zirona.com  Thu Oct  4 15:36:26 2007
From: ag.ml2007 at zirona.com (Alex =?ISO-8859-1?Q?G=FCnsche?=)
Date: Thu Oct  4 15:36:34 2007
Subject: [wp-hackers] WP's Physical Path
In-Reply-To: <4705067A.2070105@gmail.com>
References: <OF27B3EFD3.7AC00272-ONC125736A.002B8EB2-C125736A.002BD2BB@notes.edfgdf.fr>
	<47049FD7.9030103@freecharity.org.uk>  <4705067A.2070105@gmail.com>
Message-ID: <1191512187.23605.128.camel@localhost>

On Thu, 2007-10-04 at 08:27 -0700, Keith Murray wrote:
> What I need to get is a path like:
> /home/users/my_account/somedomain.com/wordpress

The constant ABSPATH serves this purpose.

Regards,
Alex

-- 
Alex G?nsche, Zirona OpenSource-Consulting
Blogs: http://www.zirona.com/ | http://www.regularimpressions.net
PubKey for this address: http://www.zirona.com/misc/ag.ml2007.asc

From kdmurray at gmail.com  Thu Oct  4 15:37:41 2007
From: kdmurray at gmail.com (Keith Murray)
Date: Thu Oct  4 15:38:26 2007
Subject: [wp-hackers] WP's Physical Path
In-Reply-To: <47050808.4080802@ftwr.co.uk>
References: <OF27B3EFD3.7AC00272-ONC125736A.002B8EB2-C125736A.002BD2BB@notes.edfgdf.fr>	<47049FD7.9030103@freecharity.org.uk>	<4705067A.2070105@gmail.com>
	<47050808.4080802@ftwr.co.uk>
Message-ID: <470508C5.4050306@gmail.com>

Thanks Peter, Austin & Benedict for the speedy responses.  Apparently I 
just needed to look a little harder...

K


Peter Westwood wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Keith Murray wrote:
>   
>> Hi,
>>
>> I apologize if this is a question with a well-documented answer, but
>> I've been looking for a while and haven't come up with one.  I have a
>> plugin that needs to reference a physical path on the host.  Is there a
>> WP variable that stores the physical path?  Or is there a method of
>> retrieving the physical path of your WP root in some other fashion?
>>
>> What I need to get is a path like:
>> /home/users/my_account/somedomain.com/wordpress
>>
>> Ideally this could be done with little or no knowledge of this
>> information by the blogger using the WP plugin.
>>
>>     
>
> ABSPATH is your friend I think
>
> westi
> - --
> Peter Westwood
> http://blog.ftwr.co.uk
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.2 (MingW32)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
>
> iD8DBQFHBQgIVPRdzag0AcURAnyKAJ4pwxFYrWjASKqBIwQ6wPSceHW2EgCfbDRY
> Ol4ytZXX6hMnXdjgXwEvy+s=
> =sTtf
> -----END PGP SIGNATURE-----
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   

From ionfish at gmail.com  Thu Oct  4 15:42:47 2007
From: ionfish at gmail.com (Benedict Eastaugh)
Date: Thu Oct  4 15:42:52 2007
Subject: [wp-hackers] WP's Physical Path
In-Reply-To: <470508C5.4050306@gmail.com>
References: <OF27B3EFD3.7AC00272-ONC125736A.002B8EB2-C125736A.002BD2BB@notes.edfgdf.fr>
	<47049FD7.9030103@freecharity.org.uk> <4705067A.2070105@gmail.com>
	<47050808.4080802@ftwr.co.uk> <470508C5.4050306@gmail.com>
Message-ID: <fd3b80510710040842s21dfbf84k6231069e832af6d9@mail.gmail.com>

The Redalt xref has a full list of the constants in WP trunk:

http://xref.redalt.com/wptrunk/nav.htm?_constants/index.htm
From if.website at gmail.com  Thu Oct  4 15:43:51 2007
From: if.website at gmail.com (Austin Matzko)
Date: Thu Oct  4 15:43:57 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
Message-ID: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>

For WordPress 2.4, I propose that we add a general meta-data table.
It would be similar in structure to the current postmeta and usermeta
tables, except with an additional field specifying the domain of the
meta-data.

There are at least a couple of benefits to such a table:

- We could have meta-data for comments and categories.
Others have proposed meta tables for the comments [1]; rather than
adding meta tables seriatim, a general meta-data table would meet that
need and offer the possibility of actually reducing the total number
of tables.

- It would provide a better place for plugins to store data.
Currently, most plugins---when they don't have enough data to justify
creating their own table---store data in the options table.  I think
there are disadvantages to bloating the options table, one of which is
that WP loads almost all options into the object cache.

Thoughts?

[1] http://trac.wordpress.org/ticket/2659
From skeltoac at gmail.com  Thu Oct  4 18:14:30 2007
From: skeltoac at gmail.com (Andy Skelton)
Date: Thu Oct  4 18:14:38 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
Message-ID: <e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>

I like it. A good starting point would be a CREATE TABLE statement.
Would you post it here when you've got it designed?

Andy
From neryver at infomed.sld.cu  Thu Oct  4 11:01:03 2007
From: neryver at infomed.sld.cu (Blast o_O)
Date: Thu Oct  4 18:25:46 2007
Subject: [wp-hackers] @ Need docu about writing a plugin for wp
In-Reply-To: <8f93a7390710030457v198301e3scdb6ee9bacce9995@mail.gmail.com>
References: <1191411289.20393.32.camel@xxxub>
	<8f93a7390710030457v198301e3scdb6ee9bacce9995@mail.gmail.com>
Message-ID: <4704C7EF.50203@infomed.sld.cu>

thanks ;)

Your help was very useful :)
B.

Viper007Bond wrote:
> http://codex.wordpress.org/Writing_a_Plugin
> 
> You'll want to use the "the_content" filter to filter the content of a post
> / page, regex find all [[blah]] calls, and replace them with links. Pretty
> simple and about 5-10 minutes of work.
> 
> On 10/3/07, Blast o_O <neryver@infomed.sld.cu> wrote:
>> Hello everybody,
>>
>> I need your help finding some docu about writing a plugin for wordpress.
>>
>> I want to add a feature to wp who lets me write articles in the
>> mediawiki way, using brackets. I have a wordpress & a mediawiki
>> installed in my server, and I want to reference mediawiki pages from my
>> wordpress by the brackets way ;)
>>
>> Thanks for your help pals!!!
>> Good Luck!!!
>> B.
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> 
> 
> 

From neryver at infomed.sld.cu  Thu Oct  4 11:01:31 2007
From: neryver at infomed.sld.cu (Blast o_O)
Date: Thu Oct  4 18:25:53 2007
Subject: [wp-hackers] @ Need docu about writing a plugin for wp
In-Reply-To: <C87036AD-77F7-4A96-9052-67BD5C435CAC@pixline.net>
References: <1191411289.20393.32.camel@xxxub>
	<C87036AD-77F7-4A96-9052-67BD5C435CAC@pixline.net>
Message-ID: <4704C80B.8030409@infomed.sld.cu>

Waooooooo, that plugin rocks!!!!! :)

Thanks ;)
B.

Pixline wrote:
>> I want to add a feature to wp who lets me write articles in the
>> mediawiki way, using brackets. I have a wordpress & a mediawiki
>> installed in my server, and I want to reference mediawiki pages from my
>> wordpress by the brackets way ;)
> 
> I think there's something already done for you:
> 
> http://zechs.dyndns.org/wordpress/?page_id=126
> 
> Hope it helps.
> 
> 
> Paolo Tresso
> Pixline.net coder
> --------------------------------------------
> http://linkedin.com/in/paolotresso
> http://pixline.net
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From otto at ottodestruct.com  Thu Oct  4 18:40:56 2007
From: otto at ottodestruct.com (Otto)
Date: Thu Oct  4 18:41:00 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
Message-ID: <161617690710041140y1aef4671o7a2b73f64685bcf7@mail.gmail.com>

Well, here's a first stab at it:

CREATE TABLE $wpdb->meta (
  meta_id bigint(20) NOT NULL auto_increment,
  object_id bigint(20) NOT NULL default 0,
  meta_type varchar(32) NOT NULL default '',
  meta_key varchar(255) default NULL,
  meta_value longtext,
  PRIMARY KEY  (meta_id),
  KEY meta_key (meta_key)
  KEY meta_type (meta_type)
) $charset_collate;

meta_id is a unique identifer for each meta entry.
object_id is the id of whatever it links to (post, comment, whatever)
meta_type defines what type of thing it's for (post, comment, whatever).
key and value should be obvious.



On 10/4/07, Andy Skelton <skeltoac@gmail.com> wrote:
> I like it. A good starting point would be a CREATE TABLE statement.
> Would you post it here when you've got it designed?
>
> Andy
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From otto at ottodestruct.com  Thu Oct  4 18:43:34 2007
From: otto at ottodestruct.com (Otto)
Date: Thu Oct  4 18:43:38 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <161617690710041140y1aef4671o7a2b73f64685bcf7@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
	<161617690710041140y1aef4671o7a2b73f64685bcf7@mail.gmail.com>
Message-ID: <161617690710041143u4e0bc76do47fb5e77aa9a82cf@mail.gmail.com>

Also note that this one table could replace both the postmeta and the
options tables. If you consider the "blog" as a possible object with
an object_id (instead of a blog_id), that is. Might need an autoload
column to be fully compatible, I suppose.


On 10/4/07, Otto <otto@ottodestruct.com> wrote:
> Well, here's a first stab at it:
>
> CREATE TABLE $wpdb->meta (
>   meta_id bigint(20) NOT NULL auto_increment,
>   object_id bigint(20) NOT NULL default 0,
>   meta_type varchar(32) NOT NULL default '',
>   meta_key varchar(255) default NULL,
>   meta_value longtext,
>   PRIMARY KEY  (meta_id),
>   KEY meta_key (meta_key)
>   KEY meta_type (meta_type)
> ) $charset_collate;
>
> meta_id is a unique identifer for each meta entry.
> object_id is the id of whatever it links to (post, comment, whatever)
> meta_type defines what type of thing it's for (post, comment, whatever).
> key and value should be obvious.
>
>
>
> On 10/4/07, Andy Skelton <skeltoac@gmail.com> wrote:
> > I like it. A good starting point would be a CREATE TABLE statement.
> > Would you post it here when you've got it designed?
> >
> > Andy
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
From mikea at turbonet.com  Thu Oct  4 20:30:22 2007
From: mikea at turbonet.com (Michael D Adams)
Date: Thu Oct  4 20:31:14 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <47027FE9.1040700@mullenweg.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>	<4701F9F6.70509@yadan.net>	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>	<200710021331.03350.hovenko@linpro.no>	<8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>	<47023FB2.7010307@mullenweg.com>
	<4702379E.1070103@yadan.net> <47027FE9.1040700@mullenweg.com>
Message-ID: <184DC48B-8EB0-4A64-BC5D-A8CD891C2B44@turbonet.com>

On Oct 2, 2007, at 10:29 AM, Matt Mullenweg wrote:
> Right now Michael is working on ironing the bugs out where we're  
> missing plugins.

We should be catching many more plugins now (though, as Matt  
mentioned, since we're not logging any stats at the moment, it's hard  
to tell from our end :) ).

As many have guessed, we were mistakenly conflating the title of  
plugin as specified by the readme.txt file and that given by the WP  
plugin header in the plugin file itself.  We're now comparing the  
correct (normalized) strings, so things should work much better.

There are still a few issues, but we're working on making it more  
robust.

If you're having update problems with a specific plugin, please let  
me know.

Michael
From omry at yadan.net  Thu Oct  4 20:50:41 2007
From: omry at yadan.net (Omry Yadan)
Date: Thu Oct  4 20:50:52 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <161617690710041143u4e0bc76do47fb5e77aa9a82cf@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>	<161617690710041140y1aef4671o7a2b73f64685bcf7@mail.gmail.com>
	<161617690710041143u4e0bc76do47fb5e77aa9a82cf@mail.gmail.com>
Message-ID: <47055221.3000508@yadan.net>

I don't think putting the options there would be a good idea.

many users understand the options table and know how to change values
there manually.

putting it into a generic metadata table will make wordpress much more
opaque to users.


Otto wrote:

> Also note that this one table could replace both the postmeta and the
> options tables. If you consider the "blog" as a possible object with
> an object_id (instead of a blog_id), that is. Might need an autoload
> column to be fully compatible, I suppose.
>   

From blogger at steffensenfamily.com  Thu Oct  4 21:13:34 2007
From: blogger at steffensenfamily.com (Kirk Steffensen)
Date: Thu Oct  4 21:13:40 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <184DC48B-8EB0-4A64-BC5D-A8CD891C2B44@turbonet.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
	<4701F9F6.70509@yadan.net>
	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
	<200710021331.03350.hovenko@linpro.no>
	<8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>
	<47023FB2.7010307@mullenweg.com> <4702379E.1070103@yadan.net>
	<47027FE9.1040700@mullenweg.com>
	<184DC48B-8EB0-4A64-BC5D-A8CD891C2B44@turbonet.com>
Message-ID: <afee0d6f0710041413v66ae4179s55016c6fbbffb00e@mail.gmail.com>

Michael,

Thanks for your work on this.  It has been great to get notification on
updated plugins.

I have two recommendations from a plugin developer's point of view.

1)  Please make an emphatic statement in
http://wordpress.org/extend/plugins/about/readme.txt that the "Plugin Name"
in the top line MUST match the plugin name in the metadata.

We (WPG2) didn't understand this.  We thought that since the svn name (wpg2)
and the metadata name (WPG2) matched, we were covered.

2) Add a check to the readme.txt validator to check the first line against
the metadata in svn.

Thanks,
Kirk


On 10/4/07, Michael D Adams <mikea@turbonet.com> wrote:
>
> On Oct 2, 2007, at 10:29 AM, Matt Mullenweg wrote:
> > Right now Michael is working on ironing the bugs out where we're
> > missing plugins.
>
> We should be catching many more plugins now (though, as Matt
> mentioned, since we're not logging any stats at the moment, it's hard
> to tell from our end :) ).
>
> As many have guessed, we were mistakenly conflating the title of
> plugin as specified by the readme.txt file and that given by the WP
> plugin header in the plugin file itself.  We're now comparing the
> correct (normalized) strings, so things should work much better.
>
> There are still a few issues, but we're working on making it more
> robust.
>
> If you're having update problems with a specific plugin, please let
> me know.
>
> Michael
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From computerguru at neosmart.net  Thu Oct  4 21:13:33 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Thu Oct  4 21:13:52 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
Message-ID: <000001c806cb$71416ce0$53c446a0$@net>

I'm having this really weird issue with WP SVN, wondering if anyone can point me in the right direction...

On my blog (http://neosmart.net/blog/) I'm experiencing really (really!) high PHP page creation times, on "stock" configuration:

I tried to disable all plugins and turning off object caching, but it makes *zero* difference. No other script on my site suffers from the same problem (vBulletin, Gallery2, and more).

I've tried both Apache 2.2.6 and IIS (6 on Windows 2003) w/ FastCGI and *SAPI to no avail. Even with an awesome opcode cacher (XCache), I'm only getting anywhere from 3-50 second page generation times. I installed the MySQL inspection plugin - MySQL queries take .0x seconds *maximum* and the rest is all PHP. I tried PHP 5.2.3 and PHP 5.2.4, no difference. Tried threadsafe and non-threadsafe binaries, no difference.

It doesn't seem to be a server configuration issue since it works brilliantly for everything else and occurs on both IIS and Apache on two different versions of PHP.

Does anyone have any idea if any changes in the WP SVN code recently (last 2 - 3 weeks) could result in this bizarre behavior?

Microtime stats are displayed in the footer, you can compare them to those on vBulletin @ http://neosmart.net/vBulletin/ in the footer as well.

How do I go about seeing what's causing these exorbitant page creation times?

Computer Guru
NeoSmart Technologies
http://neosmart.net/



From mikea at turbonet.com  Thu Oct  4 21:19:37 2007
From: mikea at turbonet.com (Michael D Adams)
Date: Thu Oct  4 21:20:33 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <afee0d6f0710041413v66ae4179s55016c6fbbffb00e@mail.gmail.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
	<4701F9F6.70509@yadan.net>
	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
	<200710021331.03350.hovenko@linpro.no>
	<8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>
	<47023FB2.7010307@mullenweg.com> <4702379E.1070103@yadan.net>
	<47027FE9.1040700@mullenweg.com>
	<184DC48B-8EB0-4A64-BC5D-A8CD891C2B44@turbonet.com>
	<afee0d6f0710041413v66ae4179s55016c6fbbffb00e@mail.gmail.com>
Message-ID: <3C6FBA0B-06AA-4090-9738-5FA967E3835C@turbonet.com>

On Oct 4, 2007, at 2:13 PM, Kirk Steffensen wrote:

> Michael,
>
> Thanks for your work on this.  It has been great to get  
> notification on
> updated plugins.
>
> I have two recommendations from a plugin developer's point of view.
>
> 1)  Please make an emphatic statement in
> http://wordpress.org/extend/plugins/about/readme.txt that the  
> "Plugin Name"
> in the top line MUST match the plugin name in the metadata.

It should no longer be the case that that is required.  That was a  
workaround for the bug I believe I have fixed.

Right now the title of the plugin as defined by that plugin's meta  
data is the only thing that matters.  The readme file is used for  
display only on wordpress.org/extend/plugins/

I believe the only current limitation is that the title of the plugin  
as defined in the meta data should not be changed between versions.   
I'm working to see what is feasible to make things even more robust.

Michael
From jared at pacific22.com  Thu Oct  4 21:36:29 2007
From: jared at pacific22.com (Jared Bangs)
Date: Thu Oct  4 21:36:35 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <3C6FBA0B-06AA-4090-9738-5FA967E3835C@turbonet.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
	<200710021331.03350.hovenko@linpro.no>
	<8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>
	<47023FB2.7010307@mullenweg.com> <4702379E.1070103@yadan.net>
	<47027FE9.1040700@mullenweg.com>
	<184DC48B-8EB0-4A64-BC5D-A8CD891C2B44@turbonet.com>
	<afee0d6f0710041413v66ae4179s55016c6fbbffb00e@mail.gmail.com>
	<3C6FBA0B-06AA-4090-9738-5FA967E3835C@turbonet.com>
Message-ID: <7b4922320710041436n308856c8k54af388b72ef704@mail.gmail.com>

On 10/4/07, Michael D Adams <mikea@turbonet.com> wrote:
> On Oct 4, 2007, at 2:13 PM, Kirk Steffensen wrote:
>
> > 1)  Please make an emphatic statement in
> > http://wordpress.org/extend/plugins/about/readme.txt that the
> > "Plugin Name"
> > in the top line MUST match the plugin name in the metadata.
>
> It should no longer be the case that that is required.  That was a
> workaround for the bug I believe I have fixed.
>
> Right now the title of the plugin as defined by that plugin's meta
> data is the only thing that matters.  The readme file is used for
> display only on wordpress.org/extend/plugins/
>

Excellent. So, just to be clear, the update check only depends on the
plugin name from the plugin file itself, and there is no requirement
for the readme file as it relates to automatic updates?

Thanks,
Jared
From ai2097 at users.sourceforge.net  Thu Oct  4 21:36:47 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Thu Oct  4 21:36:54 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <3C6FBA0B-06AA-4090-9738-5FA967E3835C@turbonet.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
	<4701F9F6.70509@yadan.net>
	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
	<200710021331.03350.hovenko@linpro.no>
	<8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>
	<47023FB2.7010307@mullenweg.com> <4702379E.1070103@yadan.net>
	<47027FE9.1040700@mullenweg.com>
	<184DC48B-8EB0-4A64-BC5D-A8CD891C2B44@turbonet.com>
	<afee0d6f0710041413v66ae4179s55016c6fbbffb00e@mail.gmail.com>
	<3C6FBA0B-06AA-4090-9738-5FA967E3835C@turbonet.com>
Message-ID: <20071004143647.1ce482f1@remstate.com>

On Thu, 4 Oct 2007 14:19:37 -0700, Michael D Adams <mikea@turbonet.com>
wrote:

<snip>
> It should no longer be the case that that is required.  That was a  
> workaround for the bug I believe I have fixed.
> 
> Right now the title of the plugin as defined by that plugin's meta  
> data is the only thing that matters.  The readme file is used for  
> display only on wordpress.org/extend/plugins/

Well, hooray; that means I should be in the clear at least. ;)

> I believe the only current limitation is that the title of the
> plugin as defined in the meta data should not be changed between
> versions. I'm working to see what is feasible to make things even
> more robust.

See http://trac.wordpress.org/ticket/5116 for a good suggestion going
forward. Heuristics going backward are pretty much going to be a
crap-shoot, but if we point "unknown" plugins to their plugin home
page, users at least stand a chance of getting back on track.
Eventually, all the active plugins will get their rear in gear to the
point where either the heuristics or the SVN match is working for them.


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From usleepless at gmail.com  Thu Oct  4 21:52:44 2007
From: usleepless at gmail.com (usleepless@gmail.com)
Date: Thu Oct  4 21:52:50 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <161617690710041140y1aef4671o7a2b73f64685bcf7@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
	<161617690710041140y1aef4671o7a2b73f64685bcf7@mail.gmail.com>
Message-ID: <c39ec84c0710041452w720140f2k27e6edee93ce36d@mail.gmail.com>


On 10/4/07, Otto <otto@ottodestruct.com> wrote:
> Well, here's a first stab at it:
> 
> CREATE TABLE $wpdb->meta (
>   meta_id bigint(20) NOT NULL auto_increment,
>   object_id bigint(20) NOT NULL default 0,
>   meta_type varchar(32) NOT NULL default '',
>   meta_key varchar(255) default NULL,
>   meta_value longtext,
>   PRIMARY KEY  (meta_id),
>   KEY meta_key (meta_key)
>   KEY meta_type (meta_type)
> ) $charset_collate;

"good practice" would make:

CREATE TABLE `$wpdb->meta` (
   `meta_id` bigint(20) NOT NULL auto_increment,
   `object_id` bigint(20) NOT NULL default 0,
   `meta_type` varchar(32) NOT NULL default '',
   `meta_key` varchar(255) default NULL,
   `meta_value` longtext,
   PRIMARY KEY  (`meta_id`),
   KEY meta_key (`meta_key`)
   KEY meta_type (`meta_type`)
) $charset_collate;

or it might:

CREATE TABLE $wpdb->meta (
   meta_id $auto_increment_type NOT NULL $auto_increment,
   object_id $bigint NOT NULL default 0,
   meta_type varchar(32) NOT NULL default '',
   meta_key varchar(255) default NULL,
   meta_value $longtext,
   PRIMARY KEY  (meta_id)
) $charset_collate;
CREATE INDEX idx_meta_meta_key ON $wpdb->meta(meta_key);
CREATE INDEX idx_meta_meta_type ON $wpdb->meta(meta_type);

regards,

usleep
From skeltoac at gmail.com  Thu Oct  4 22:15:39 2007
From: skeltoac at gmail.com (Andy Skelton)
Date: Thu Oct  4 22:15:45 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <161617690710041143u4e0bc76do47fb5e77aa9a82cf@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
	<161617690710041140y1aef4671o7a2b73f64685bcf7@mail.gmail.com>
	<161617690710041143u4e0bc76do47fb5e77aa9a82cf@mail.gmail.com>
Message-ID: <e6ec604d0710041515r5e730be0o31fe36257cff2706@mail.gmail.com>

On 10/4/07, Otto <otto@ottodestruct.com> wrote:
> Also note that this one table could replace both the postmeta and the
> options tables. If you consider the "blog" as a possible object with
> an object_id (instead of a blog_id), that is. Might need an autoload
> column to be fully compatible, I suppose.

At first glance, this does not look like a good move. It would seem to
confuse things.

However, if you consider the blog as an object with the implicit ID of
1, it makes perfect sense. Taking it further, into the context of
WPMU, there is a blogs table where each blog has an ID and a sites
table where each site has an ID.

Here are the items that would be rolled into a unified meta table:

sitemeta
blogmeta (aka options)
usermeta
postmeta
commentmeta

Have I missed any?

I'd love to have mediameta and get attachments out of the posts table,
but that's neither here nor there...

Andy
From mikea at turbonet.com  Thu Oct  4 22:36:33 2007
From: mikea at turbonet.com (Michael D Adams)
Date: Thu Oct  4 22:37:24 2007
Subject: [wp-hackers] WordPress plugin update bugs
In-Reply-To: <7b4922320710041436n308856c8k54af388b72ef704@mail.gmail.com>
References: <OF4B187E46.5F02249C-ONC1257368.002A69F1-C1257368.002C7D5A@notes.edfgdf.fr>
	<8f93a7390710020330k379559eey8b7f2b359db005cc@mail.gmail.com>
	<200710021331.03350.hovenko@linpro.no>
	<8f93a7390710020538m73007028x9714724b390820fa@mail.gmail.com>
	<47023FB2.7010307@mullenweg.com> <4702379E.1070103@yadan.net>
	<47027FE9.1040700@mullenweg.com>
	<184DC48B-8EB0-4A64-BC5D-A8CD891C2B44@turbonet.com>
	<afee0d6f0710041413v66ae4179s55016c6fbbffb00e@mail.gmail.com>
	<3C6FBA0B-06AA-4090-9738-5FA967E3835C@turbonet.com>
	<7b4922320710041436n308856c8k54af388b72ef704@mail.gmail.com>
Message-ID: <4BF02D16-E908-4713-A31E-09B45252EE98@turbonet.com>

On Oct 4, 2007, at 2:36 PM, Jared Bangs wrote:
> Excellent. So, just to be clear, the update check only depends on the
> plugin name from the plugin file itself, and there is no requirement
> for the readme file as it relates to automatic updates?

Correct with the exception that you can use the trunk/readme.txt file  
to define the stable version of your plugin as mentioned in the FAQ:  
http://wordpress.org/extend/plugins/about/faq/

Michael
From wordpress at dd32.id.au  Thu Oct  4 23:05:13 2007
From: wordpress at dd32.id.au (DD32)
Date: Thu Oct  4 23:05:06 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
Message-ID: <op.tzo3q0aqk6w4mc@dd32.no-ip.com>


From wordpress at dd32.id.au  Thu Oct  4 23:14:37 2007
From: wordpress at dd32.id.au (DD32)
Date: Thu Oct  4 23:14:36 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
In-Reply-To: <000001c806cb$71416ce0$53c446a0$@net>
References: <000001c806cb$71416ce0$53c446a0$@net>
Message-ID: <op.tzo36nopk6w4mc@dd32.no-ip.com>

Check for any plugins which make HTTP requests.
Try installing a profiler (Such as XDebug) and check the results of that.
(I use XDebug 2.0.0 + WinCacheGrind to view the output on Win32 + Apache + PHP5.2.4)

Apologies for the last blank email.. i've seen them coming from other people too, maybe the software should reject blank emails??

On Fri, 05 Oct 2007 07:13:33 +1000, Computer Guru <computerguru@neosmart.net> wrote:

> I'm having this really weird issue with WP SVN, wondering if anyone can point me in the right direction...
>
> On my blog (http://neosmart.net/blog/) I'm experiencing really (really!) high PHP page creation times, on "stock" configuration:
>
> I tried to disable all plugins and turning off object caching, but it makes *zero* difference. No other script on my site suffers from the same problem (vBulletin, Gallery2, and more).
>
> I've tried both Apache 2.2.6 and IIS (6 on Windows 2003) w/ FastCGI and *SAPI to no avail. Even with an awesome opcode cacher (XCache), I'm only getting anywhere from 3-50 second page generation times. I installed the MySQL inspection plugin - MySQL queries take .0x seconds *maximum* and the rest is all PHP. I tried PHP 5.2.3 and PHP 5.2.4, no difference. Tried threadsafe and non-threadsafe binaries, no difference.
>
> It doesn't seem to be a server configuration issue since it works brilliantly for everything else and occurs on both IIS and Apache on two different versions of PHP.
>
> Does anyone have any idea if any changes in the WP SVN code recently (last 2 - 3 weeks) could result in this bizarre behavior?
>
> Microtime stats are displayed in the footer, you can compare them to those on vBulletin @ http://neosmart.net/vBulletin/ in the footer as well.
>
> How do I go about seeing what's causing these exorbitant page creation times?
>
> Computer Guru
> NeoSmart Technologies
> http://neosmart.net/
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 



From computerguru at neosmart.net  Thu Oct  4 23:25:08 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Thu Oct  4 23:25:35 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
In-Reply-To: <op.tzo36nopk6w4mc@dd32.no-ip.com>
References: <000001c806cb$71416ce0$53c446a0$@net>
	<op.tzo36nopk6w4mc@dd32.no-ip.com>
Message-ID: <000101c806dd$d8b48f30$8a1dad90$@net>

Like I said, it's the same with plugins disabled...
I'll check out those profilers you mentioned and see what turns up.

Thanks.

Computer Guru
NeoSmart Technologies
http://neosmart.net/


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of DD32
> Sent: Friday, October 05, 2007 2:15 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
> 
> Check for any plugins which make HTTP requests.
> Try installing a profiler (Such as XDebug) and check the results of
> that.
> (I use XDebug 2.0.0 + WinCacheGrind to view the output on Win32 +
> Apache + PHP5.2.4)
> 
> Apologies for the last blank email.. i've seen them coming from other
> people too, maybe the software should reject blank emails??
> 
> On Fri, 05 Oct 2007 07:13:33 +1000, Computer Guru
> <computerguru@neosmart.net> wrote:
> 
> > I'm having this really weird issue with WP SVN, wondering if anyone
> can point me in the right direction...
> >
> > On my blog (http://neosmart.net/blog/) I'm experiencing really
> (really!) high PHP page creation times, on "stock" configuration:
> >
> > I tried to disable all plugins and turning off object caching, but it
> makes *zero* difference. No other script on my site suffers from the
> same problem (vBulletin, Gallery2, and more).
> >
> > I've tried both Apache 2.2.6 and IIS (6 on Windows 2003) w/ FastCGI
> and *SAPI to no avail. Even with an awesome opcode cacher (XCache), I'm
> only getting anywhere from 3-50 second page generation times. I
> installed the MySQL inspection plugin - MySQL queries take .0x seconds
> *maximum* and the rest is all PHP. I tried PHP 5.2.3 and PHP 5.2.4, no
> difference. Tried threadsafe and non-threadsafe binaries, no
> difference.
> >
> > It doesn't seem to be a server configuration issue since it works
> brilliantly for everything else and occurs on both IIS and Apache on
> two different versions of PHP.
> >
> > Does anyone have any idea if any changes in the WP SVN code recently
> (last 2 - 3 weeks) could result in this bizarre behavior?
> >
> > Microtime stats are displayed in the footer, you can compare them to
> those on vBulletin @ http://neosmart.net/vBulletin/ in the footer as
> well.
> >
> > How do I go about seeing what's causing these exorbitant page
> creation times?
> >
> > Computer Guru
> > NeoSmart Technologies
> > http://neosmart.net/
> >
> >
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> 
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From otto at ottodestruct.com  Thu Oct  4 23:41:46 2007
From: otto at ottodestruct.com (Otto)
Date: Thu Oct  4 23:41:53 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <47055221.3000508@yadan.net>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
	<161617690710041140y1aef4671o7a2b73f64685bcf7@mail.gmail.com>
	<161617690710041143u4e0bc76do47fb5e77aa9a82cf@mail.gmail.com>
	<47055221.3000508@yadan.net>
Message-ID: <161617690710041641p63fb56besc084e0d40ed1248b@mail.gmail.com>

On 10/4/07, Omry Yadan <omry@yadan.net> wrote:
> I don't think putting the options there would be a good idea.
>
> many users understand the options table and know how to change values
> there manually.
>
> putting it into a generic metadata table will make wordpress much more
> opaque to users.

Bah. Good database design waits not for users manually editing things!
Plugins will no doubt adapt (or not notice, if they're using the add
and remove options functions).

On 10/4/07, Andy Skelton <skeltoac@gmail.com> wrote:
> At first glance, this does not look like a good move. It would seem to
> confuse things.
>
> However, if you consider the blog as an object with the implicit ID of
> 1, it makes perfect sense. Taking it further, into the context of
> WPMU, there is a blogs table where each blog has an ID and a sites
> table where each site has an ID.

That was my basic line of thought, yeah. The options table is nothing
more than key/value pairs tied to a blog_id. For MU, this also means
that options can be fully separated without wacky option naming
conventions.

Pretty much any table you care to create is going to have some kind of
unique ID field. If it then contains key/value pairs, it can fit into
this meta table design, as long as it also has a unique meta_type. The
meta_type could even be as simple as the name of the other table that
the meta_id is referring to.
From m at marcosmedia.com  Thu Oct  4 23:49:20 2007
From: m at marcosmedia.com (Marcos Sader | marcosmedia)
Date: Thu Oct  4 23:49:25 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <161617690710041140y1aef4671o7a2b73f64685bcf7@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
	<161617690710041140y1aef4671o7a2b73f64685bcf7@mail.gmail.com>
Message-ID: <8ff7155b0710041649t6266a8c9sf29b7542ee31475c@mail.gmail.com>

On 10/4/07, Otto <otto@ottodestruct.com> wrote:
>
> Well, here's a first stab at it:
>
> CREATE TABLE $wpdb->meta (
>   meta_id bigint(20) NOT NULL auto_increment,
>   object_id bigint(20) NOT NULL default 0,
>   meta_type varchar(32) NOT NULL default '',
>   meta_key varchar(255) default NULL,
>   meta_value longtext,
>   PRIMARY KEY  (meta_id),
>   KEY meta_key (meta_key)
>   KEY meta_type (meta_type)
> ) $charset_collate;


Besides the missing auto_increment, I would use object_type instead of
meta_type.


On 10/4/07, Andy Skelton <skeltoac@gmail.com> wrote:
>
> I'd love to have mediameta and get attachments out of the posts table,
> but that's neither here nor there...


I was about to propose the same, but I would make it a files domain (or
attachments) not just media, so that you can get access to any kind of file
related to a post (or any object), but not tied to them. I think that would
make WP even more flexible to be used as a CMS.


-- 
Marcos Sader
m@marcosmedia.com
http://defmay.com | http://marcosmedia.com
From computerguru at neosmart.net  Fri Oct  5 00:14:20 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Fri Oct  5 00:14:34 2007
Subject: [wp-hackers] Particular Post Won't Go Through on SVN, Works on 2.3
Message-ID: <000201c806e4$b03f2ea0$10bd8be0$@net>

I wrote a post in Windows Live Writer and attempted to send it to my WP-trunk server, it came back with "unknown error" so I attempted to manually publish it.

Attempting to publish the contents of this post resulted in a wordpress database error ["query was empty"]

I couldn't get it to publish under wp-trunk no matter what. Fully valid XHTML, no wysiwyg client in the browser. Creating a blank post then updating it with what I wanted got the title, categories, and tags to update; but the actual post content still gave me the same error.

Switching back to 2.3 fixed the problem. I could replicate this issue 100% on my local server as well.
Remote server: Apache/PHP 5.2.4/Windows 2003/MySQL 5.1
Local Server: IIS/PHP 5.2.1/Windows 2003/MySQL 5.0

HTML code in question: 
http://wordpress.pastebin.com/m7eb2b2e2

Post as published on WP 2.3 (which used to run WP-trunk):
http://neosmart.net/blog/2007/internet-explorer-7-updated-but-not-really/


I'm not sure if this is a known issue, couldn't find any references to it if that's the case.

To replicate: create a new post on the latest wp trunk code with any title, tags, and/or category.
Copy the post html as-is into the code view and hit publish. You'll get an ugly DB error message.


Computer Guru
NeoSmart Technologies
http://neosmart.net/

From speedboxer at gmail.com  Fri Oct  5 00:17:19 2007
From: speedboxer at gmail.com (Matt)
Date: Fri Oct  5 00:17:25 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
In-Reply-To: <000101c806dd$d8b48f30$8a1dad90$@net>
References: <000001c806cb$71416ce0$53c446a0$@net>
	<op.tzo36nopk6w4mc@dd32.no-ip.com>
	<000101c806dd$d8b48f30$8a1dad90$@net>
Message-ID: <b88434820710041717k5eaff061p58d18d14adf0838b@mail.gmail.com>

Is GZIP still on? Maybe you accidently turned it off... Although, those are
some pretty high times even if it was off... Strange.


-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From wordpress at dd32.id.au  Fri Oct  5 00:21:58 2007
From: wordpress at dd32.id.au (DD32)
Date: Fri Oct  5 00:21:48 2007
Subject: [wp-hackers] Particular Post Won't Go Through on SVN, Works on 2.3
Message-ID: <op.tzo7awynk6w4mc@dd32.no-ip.com>


From computerguru at neosmart.net  Fri Oct  5 00:24:59 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Fri Oct  5 00:25:16 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
In-Reply-To: <b88434820710041717k5eaff061p58d18d14adf0838b@mail.gmail.com>
References: <000001c806cb$71416ce0$53c446a0$@net>	<op.tzo36nopk6w4mc@dd32.no-ip.com>	<000101c806dd$d8b48f30$8a1dad90$@net>
	<b88434820710041717k5eaff061p58d18d14adf0838b@mail.gmail.com>
Message-ID: <000301c806e6$2d190bc0$874b2340$@net>

No, I turned it off /because/ of this. GZip improves download times, but increases load levels on the server due to compression. The reported time at the bottom of the page is how long it took the server to create the page, and is independent of how fast/slow you download it or how big it is. Yet even with GZip off, it's still ginormous.

Computer Guru
NeoSmart Technologies
http://neosmart.net/


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of Matt
> Sent: Friday, October 05, 2007 3:17 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
> 
> Is GZIP still on? Maybe you accidently turned it off... Although, those
> are
> some pretty high times even if it was off... Strange.
> 
> 
> --
> Matt (speedboxer@gmail.com)
> http://mattsblog.ca/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at dd32.id.au  Fri Oct  5 00:33:32 2007
From: wordpress at dd32.id.au (DD32)
Date: Fri Oct  5 00:33:36 2007
Subject: [wp-hackers] Particular Post Won't Go Through on SVN, Works on 2.3
In-Reply-To: <000201c806e4$b03f2ea0$10bd8be0$@net>
References: <000201c806e4$b03f2ea0$10bd8be0$@net>
Message-ID: <op.tzo7t6m7k6w4mc@dd32.no-ip.com>

That would be related to http://trac.wordpress.org/ticket/5145
The % sign in posts causes that with the current implementation.

Once again, Apologies for the blank message, Should've fixed that now (downgraded to a more stable mail version)

On Fri, 05 Oct 2007 10:14:20 +1000, Computer Guru <computerguru@neosmart.net> wrote:

> I wrote a post in Windows Live Writer and attempted to send it to my WP-trunk server, it came back with "unknown error" so I attempted to manually publish it.
>
> Attempting to publish the contents of this post resulted in a wordpress database error ["query was empty"]
>
> I couldn't get it to publish under wp-trunk no matter what. Fully valid XHTML, no wysiwyg client in the browser. Creating a blank post then updating it with what I wanted got the title, categories, and tags to update; but the actual post content still gave me the same error.
>
> Switching back to 2.3 fixed the problem. I could replicate this issue 100% on my local server as well.
> Remote server: Apache/PHP 5.2.4/Windows 2003/MySQL 5.1
> Local Server: IIS/PHP 5.2.1/Windows 2003/MySQL 5.0
>
> HTML code in question:
> http://wordpress.pastebin.com/m7eb2b2e2
>
> Post as published on WP 2.3 (which used to run WP-trunk):
> http://neosmart.net/blog/2007/internet-explorer-7-updated-but-not-really/
>
>
> I'm not sure if this is a known issue, couldn't find any references to it if that's the case.
>
> To replicate: create a new post on the latest wp trunk code with any title, tags, and/or category.
> Copy the post html as-is into the code view and hit publish. You'll get an ugly DB error message.
>
>
> Computer Guru
> NeoSmart Technologies
> http://neosmart.net/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 



From computerguru at neosmart.net  Fri Oct  5 01:18:45 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Fri Oct  5 01:19:00 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
In-Reply-To: <op.tzo36nopk6w4mc@dd32.no-ip.com>
References: <000001c806cb$71416ce0$53c446a0$@net>
	<op.tzo36nopk6w4mc@dd32.no-ip.com>
Message-ID: <000401c806ed$aeb4cf00$0c1e6d00$@net>

I'll be damned!

"This gzipped page was brought to you in 115.8840 seconds over 26 queries."
(it was that long - and it's not gzipped.)

Yet XDebug/WinGrindCache claims that the total for that request was "only" 28,258ms... which is a lot, but not exactly 115 seconds worth of info. But nevermind that.

It seems that 17k ms went to the flock() function in the wp object cache!!!  - and that's just to get a file lock.
Another 500ms went to an external link identification plugin I have installed.

Wp object cache murdered my site every time it attempted to use flock() and stabbed it in the back every time it went to retrieve what turns out to be megabytes of data in the form of cached comments and other data.

Guess I was wrong about wp-cache. Reason I didn't get it - here's my wp-config.php:

define('ENABLE_CACHE', false); //WP in-built object cache

Apparently setting it to false or setting it to true makes no difference. Turns out you have to remove that line altogether!

Looks like we're using is_defined instead of evaluating enable_cache with true/false.

Thanks for the help. 

Computer Guru
NeoSmart Technologies
http://neosmart.net/


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of DD32
> Sent: Friday, October 05, 2007 2:15 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
> 
> Check for any plugins which make HTTP requests.
> Try installing a profiler (Such as XDebug) and check the results of
> that.
> (I use XDebug 2.0.0 + WinCacheGrind to view the output on Win32 +
> Apache + PHP5.2.4)
> 
> Apologies for the last blank email.. i've seen them coming from other
> people too, maybe the software should reject blank emails??
> 
> On Fri, 05 Oct 2007 07:13:33 +1000, Computer Guru
> <computerguru@neosmart.net> wrote:
> 
> > I'm having this really weird issue with WP SVN, wondering if anyone
> can point me in the right direction...
> >
> > On my blog (http://neosmart.net/blog/) I'm experiencing really
> (really!) high PHP page creation times, on "stock" configuration:
> >
> > I tried to disable all plugins and turning off object caching, but it
> makes *zero* difference. No other script on my site suffers from the
> same problem (vBulletin, Gallery2, and more).
> >
> > I've tried both Apache 2.2.6 and IIS (6 on Windows 2003) w/ FastCGI
> and *SAPI to no avail. Even with an awesome opcode cacher (XCache), I'm
> only getting anywhere from 3-50 second page generation times. I
> installed the MySQL inspection plugin - MySQL queries take .0x seconds
> *maximum* and the rest is all PHP. I tried PHP 5.2.3 and PHP 5.2.4, no
> difference. Tried threadsafe and non-threadsafe binaries, no
> difference.
> >
> > It doesn't seem to be a server configuration issue since it works
> brilliantly for everything else and occurs on both IIS and Apache on
> two different versions of PHP.
> >
> > Does anyone have any idea if any changes in the WP SVN code recently
> (last 2 - 3 weeks) could result in this bizarre behavior?
> >
> > Microtime stats are displayed in the footer, you can compare them to
> those on vBulletin @ http://neosmart.net/vBulletin/ in the footer as
> well.
> >
> > How do I go about seeing what's causing these exorbitant page
> creation times?
> >
> > Computer Guru
> > NeoSmart Technologies
> > http://neosmart.net/
> >
> >
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> 
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From robin.adr at gmail.com  Fri Oct  5 01:28:43 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Fri Oct  5 01:28:49 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
In-Reply-To: <000401c806ed$aeb4cf00$0c1e6d00$@net>
References: <000001c806cb$71416ce0$53c446a0$@net>
	<op.tzo36nopk6w4mc@dd32.no-ip.com>
	<000401c806ed$aeb4cf00$0c1e6d00$@net>
Message-ID: <d135ca9c0710041828v6aff4ee6gdc985d975d1723d1@mail.gmail.com>

Maybe WP checks if it's defined *and* it's true? Might make a bit more sense
to people finding themselves in situations like Guru was here.

On 10/4/07, Computer Guru <computerguru@neosmart.net> wrote:

> Guess I was wrong about wp-cache. Reason I didn't get it - here's my
> wp-config.php:
>
> define('ENABLE_CACHE', false); //WP in-built object cache
>
> Apparently setting it to false or setting it to true makes no difference.
> Turns out you have to remove that line altogether!
>
> Looks like we're using is_defined instead of evaluating enable_cache with
> true/false.
>
From leonid at mamchenkov.net  Fri Oct  5 01:48:44 2007
From: leonid at mamchenkov.net (Leonid Mamchenkov)
Date: Fri Oct  5 01:48:49 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
In-Reply-To: <000401c806ed$aeb4cf00$0c1e6d00$@net>
References: <000001c806cb$71416ce0$53c446a0$@net>
	<op.tzo36nopk6w4mc@dd32.no-ip.com>
	<000401c806ed$aeb4cf00$0c1e6d00$@net>
Message-ID: <b76f24970710041848oe9fea94kee4715f5383f4f7f@mail.gmail.com>

Hi,

On 10/5/07, Computer Guru <computerguru@neosmart.net> wrote:
> Guess I was wrong about wp-cache. Reason I didn't get it - here's my wp-config.php:
>
> define('ENABLE_CACHE', false); //WP in-built object cache
>
> Apparently setting it to false or setting it to true makes no difference. Turns out you have to remove that line altogether!
>
> Looks like we're using is_defined instead of evaluating enable_cache with true/false.


Indeed so.  Here are the _CACHE matches for 2.3, excluding rss.php,
which has its own MAGPIE_CACHE_* :


wp-includes/cache.php:          if (defined('DISABLE_CACHE'))
wp-includes/cache.php:          if ( ! defined('ENABLE_CACHE') )
wp-includes/cache.php:          if ( ini_get('safe_mode') && !
defined('ENABLE_CACHE') )
wp-settings.php:if ( defined('WP_CACHE') )
wp-settings.php:if ( defined('WP_CACHE') &&
function_exists('wp_cache_postload') )

Looks like a bug.  If not a bug, than at least Codex needs an update:

http://codex.wordpress.org/Function_Reference/WP_Cache

-- 
Leonid Mamchenkov
From wordpress at dd32.id.au  Fri Oct  5 02:04:39 2007
From: wordpress at dd32.id.au (DD32)
Date: Fri Oct  5 02:09:18 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
In-Reply-To: <000401c806ed$aeb4cf00$0c1e6d00$@net>
References: <000001c806cb$71416ce0$53c446a0$@net>
	<op.tzo36nopk6w4mc@dd32.no-ip.com>
	<000401c806ed$aeb4cf00$0c1e6d00$@net>
Message-ID: <op.tzpb11vsk6w4mc@dd32.no-ip.com>

On Fri, 05 Oct 2007 11:18:45 +1000, Computer Guru <computerguru@neosmart.net> wrote:

> I'll be damned!
>
> "This gzipped page was brought to you in 115.8840 seconds over 26 queries."
> (it was that long - and it's not gzipped.)
>
> Yet XDebug/WinGrindCache claims that the total for that request was "only" 28,258ms... which is a lot, but not exactly 115 seconds worth of info. But nevermind that.
>
> It seems that 17k ms went to the flock() function in the wp object cache!!!  - and that's just to get a file lock.
> Another 500ms went to an external link identification plugin I have installed.

Hm, Sounds like you've got some bad IO speeds there to me, It shouldnt be taking that long at all :)

> Wp object cache murdered my site every time it attempted to use flock() and stabbed it in the back every time it went to retrieve what turns out to be megabytes of data in the form of cached comments and other data.
>
> Guess I was wrong about wp-cache. Reason I didn't get it - here's my wp-config.php:
>
> define('ENABLE_CACHE', false); //WP in-built object cache
>
> Apparently setting it to false or setting it to true makes no difference. Turns out you have to remove that line altogether!
>
> Looks like we're using is_defined instead of evaluating enable_cache with true/false.

I saw that awhile ago, but never did anything about it, Maybe we should remove the DISABLE_CACHE constant and check to see if ENABLE_CACHE is true.

see: http://trac.wordpress.org/ticket/5147

>
> Thanks for the help.
>
> Computer Guru
> NeoSmart Technologies
> http://neosmart.net/
>
>
>> -----Original Message-----
>> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
>> bounces@lists.automattic.com] On Behalf Of DD32
>> Sent: Friday, October 05, 2007 2:15 AM
>> To: wp-hackers@lists.automattic.com
>> Subject: Re: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
>>
>> Check for any plugins which make HTTP requests.
>> Try installing a profiler (Such as XDebug) and check the results of
>> that.
>> (I use XDebug 2.0.0 + WinCacheGrind to view the output on Win32 +
>> Apache + PHP5.2.4)
>>
>> Apologies for the last blank email.. i've seen them coming from other
>> people too, maybe the software should reject blank emails??
>>
>> On Fri, 05 Oct 2007 07:13:33 +1000, Computer Guru
>> <computerguru@neosmart.net> wrote:
>>
>> > I'm having this really weird issue with WP SVN, wondering if anyone
>> can point me in the right direction...
>> >
>> > On my blog (http://neosmart.net/blog/) I'm experiencing really
>> (really!) high PHP page creation times, on "stock" configuration:
>> >
>> > I tried to disable all plugins and turning off object caching, but it
>> makes *zero* difference. No other script on my site suffers from the
>> same problem (vBulletin, Gallery2, and more).
>> >
>> > I've tried both Apache 2.2.6 and IIS (6 on Windows 2003) w/ FastCGI
>> and *SAPI to no avail. Even with an awesome opcode cacher (XCache), I'm
>> only getting anywhere from 3-50 second page generation times. I
>> installed the MySQL inspection plugin - MySQL queries take .0x seconds
>> *maximum* and the rest is all PHP. I tried PHP 5.2.3 and PHP 5.2.4, no
>> difference. Tried threadsafe and non-threadsafe binaries, no
>> difference.
>> >
>> > It doesn't seem to be a server configuration issue since it works
>> brilliantly for everything else and occurs on both IIS and Apache on
>> two different versions of PHP.
>> >
>> > Does anyone have any idea if any changes in the WP SVN code recently
>> (last 2 - 3 weeks) could result in this bizarre behavior?
>> >
>> > Microtime stats are displayed in the footer, you can compare them to
>> those on vBulletin @ http://neosmart.net/vBulletin/ in the footer as
>> well.
>> >
>> > How do I go about seeing what's causing these exorbitant page
>> creation times?
>> >
>> > Computer Guru
>> > NeoSmart Technologies
>> > http://neosmart.net/
>> >
>> >
>> >
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers@lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>>
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 



From speedboxer at gmail.com  Fri Oct  5 02:17:26 2007
From: speedboxer at gmail.com (Matt)
Date: Fri Oct  5 02:17:31 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
In-Reply-To: <op.tzpb11vsk6w4mc@dd32.no-ip.com>
References: <000001c806cb$71416ce0$53c446a0$@net>
	<op.tzo36nopk6w4mc@dd32.no-ip.com>
	<000401c806ed$aeb4cf00$0c1e6d00$@net>
	<op.tzpb11vsk6w4mc@dd32.no-ip.com>
Message-ID: <b88434820710041917o26bac13er3ccba4b93b467e25@mail.gmail.com>

On 10/4/07, DD32 <wordpress@dd32.id.au> wrote:
>
> I saw that awhile ago, but never did anything about it, Maybe we should
> remove the DISABLE_CACHE constant and check to see if ENABLE_CACHE is true.
>
Maybe we should get rid of the ENABLE_ parts of them... Then it makes more
sense when it's set to false. :P


-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From speedboxer at gmail.com  Fri Oct  5 02:37:11 2007
From: speedboxer at gmail.com (Matt)
Date: Fri Oct  5 02:37:17 2007
Subject: [wp-hackers] Exclude Categories From The Loop
Message-ID: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>

Is it possible to exclude certain catgories from displaying in the loop,
with a plugin?

Thanks,
-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From jared at pacific22.com  Fri Oct  5 04:25:13 2007
From: jared at pacific22.com (Jared Bangs)
Date: Fri Oct  5 04:25:19 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <e6ec604d0710041515r5e730be0o31fe36257cff2706@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
	<161617690710041140y1aef4671o7a2b73f64685bcf7@mail.gmail.com>
	<161617690710041143u4e0bc76do47fb5e77aa9a82cf@mail.gmail.com>
	<e6ec604d0710041515r5e730be0o31fe36257cff2706@mail.gmail.com>
Message-ID: <7b4922320710042125i62ebb7f8g7fbeba5e7d922878@mail.gmail.com>

On 10/4/07, Andy Skelton <skeltoac@gmail.com> wrote:
> However, if you consider the blog as an object with the implicit ID of
> 1, it makes perfect sense. Taking it further, into the context of
> WPMU, there is a blogs table where each blog has an ID and a sites
> table where each site has an ID.
>
> Here are the items that would be rolled into a unified meta table:
>
> sitemeta
> blogmeta (aka options)
> usermeta
> postmeta
> commentmeta
>
> Have I missed any?
>
> I'd love to have mediameta and get attachments out of the posts table,
> but that's neither here nor there...
>
> Andy

The other consideration (if a goal is to have a single, consistent
table schema between MU and regular WP - not always the case now but
certainly welcome going forward), is that then most of the 'meta' info
mentioned above (post-related, comment-related, etc.) would need to be
made unique by site, blog and object (post, comment, etc.) id.

Don't know if this is getting too deep into MU territory for this
list, but it might also be nice (especially for "mediameta") to be
able to share some items across multiple sites and/or blogs, so as to
avoid duplication while promoting reuse. In that case, then maybe two
tables would be in order; one for the meta data (id, key, value) and
one to associate the data in that table to one-to-many other objects
without duplicating the meta data itself.

As I typed that, I realize that it might be over engineering things,
but might as well throw it out there for discussion.

+1 on getting the attachments out of the post table one way or another, though.

- Jared
From dan at scatter3d.com  Fri Oct  5 05:30:35 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Fri Oct  5 05:30:41 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
Message-ID: <7cf9ae490710042230i1b0b0db3w1bc9ef6d1cf2482a@mail.gmail.com>

On 10/4/07, Matt <speedboxer@gmail.com> wrote:
> Is it possible to exclude certain catgories from displaying in the loop,
> with a plugin?
>

I currently use this plugin,
http://wordpress.org/extend/plugins/sideblog/

-- 
Dan Cameron
From speedboxer at gmail.com  Fri Oct  5 05:35:06 2007
From: speedboxer at gmail.com (Matt)
Date: Fri Oct  5 05:35:12 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <7cf9ae490710042230i1b0b0db3w1bc9ef6d1cf2482a@mail.gmail.com>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
	<7cf9ae490710042230i1b0b0db3w1bc9ef6d1cf2482a@mail.gmail.com>
Message-ID: <b88434820710042235h66f8aff7vdaead000a6a90af@mail.gmail.com>

On 10/4/07, Daniel Cameron <dan@scatter3d.com> wrote:
>
> I currently use this plugin,
> http://wordpress.org/extend/plugins/sideblog/
>
Thanks, but I meant inside of my own plugin... I want to have a category
that doesn't show up in the loop,  without the user having to change their
loop in their theme files. So, is there like a filter or something to do
this?


-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From wordpress at tekartist.org  Fri Oct  5 05:04:46 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Fri Oct  5 05:42:36 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
Message-ID: <7D67D1AC-7A4E-4D71-B375-F4B0273E6A5C@tekartist.org>


I since the_category() doesn't support exclusion, you could get  
creative with get_categories(), which does.
Get an array from get_categories() with the desired categories  
excluded, then compare the result of get_the_category() to it.

Not the most efficient I'm sure, but it should work. and you can make  
a function in your plugin out of it.

Stephane



On Oct 04, 2007, at 22:37, Matt wrote:

> Is it possible to exclude certain catgories from displaying in the  
> loop,
> with a plugin?
>
> Thanks,
> -- 
> Matt (speedboxer@gmail.com)
> http://mattsblog.ca/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From jared at pacific22.com  Fri Oct  5 05:46:29 2007
From: jared at pacific22.com (Jared Bangs)
Date: Fri Oct  5 05:46:34 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <b88434820710042235h66f8aff7vdaead000a6a90af@mail.gmail.com>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
	<7cf9ae490710042230i1b0b0db3w1bc9ef6d1cf2482a@mail.gmail.com>
	<b88434820710042235h66f8aff7vdaead000a6a90af@mail.gmail.com>
Message-ID: <7b4922320710042246g3f5acd71sbe5b03742f42a298@mail.gmail.com>

On 10/4/07, Matt <speedboxer@gmail.com> wrote:
> On 10/4/07, Daniel Cameron <dan@scatter3d.com> wrote:
> >
> > I currently use this plugin,
> > http://wordpress.org/extend/plugins/sideblog/
> >
> Thanks, but I meant inside of my own plugin... I want to have a category
> that doesn't show up in the loop,  without the user having to change their
> loop in their theme files. So, is there like a filter or something to do
> this?

Untested pseudo-code partially extracted from the sideblog plugin
mentioned above:

function my_post_filter($query) {
	global $wp_query;

  if(!is_category() && !is_single() && !is_tag()){
  		$wp_query->set('category__not_in',$arrayOfCategoriesToIgnore);
  }

add_action('pre_get_posts','my_post_filter');

- Jared
From speedboxer at gmail.com  Fri Oct  5 05:49:26 2007
From: speedboxer at gmail.com (Matt)
Date: Fri Oct  5 05:49:32 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <7D67D1AC-7A4E-4D71-B375-F4B0273E6A5C@tekartist.org>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
	<7D67D1AC-7A4E-4D71-B375-F4B0273E6A5C@tekartist.org>
Message-ID: <b88434820710042249w49962ffeofdbcd50f79af08f0@mail.gmail.com>

There's a filter "list_cats_exclusions" which will exclude cats from
get_category, will this effect the loop?

On 10/4/07, Stephane Daury <wordpress@tekartist.org> wrote:
>
>
> I since the_category() doesn't support exclusion, you could get
> creative with get_categories(), which does.
> Get an array from get_categories() with the desired categories
> excluded, then compare the result of get_the_category() to it.
>
> Not the most efficient I'm sure, but it should work. and you can make
> a function in your plugin out of it.
>
> Stephane
>
>
>
> On Oct 04, 2007, at 22:37, Matt wrote:
>
> > Is it possible to exclude certain catgories from displaying in the
> > loop,
> > with a plugin?
> >
> > Thanks,
> > --
> > Matt (speedboxer@gmail.com)
> > http://mattsblog.ca/
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From omry at yadan.net  Fri Oct  5 06:47:03 2007
From: omry at yadan.net (Omry Yadan)
Date: Fri Oct  5 06:47:13 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
In-Reply-To: <000401c806ed$aeb4cf00$0c1e6d00$@net>
References: <000001c806cb$71416ce0$53c446a0$@net>	<op.tzo36nopk6w4mc@dd32.no-ip.com>
	<000401c806ed$aeb4cf00$0c1e6d00$@net>
Message-ID: <4705DDE7.4060703@yadan.net>

Computer Guru wrote:

> I'll be damned!
>
> "This gzipped page was brought to you in 115.8840 seconds over 26 queries."
> (it was that long - and it's not gzipped.)
>
> Yet XDebug/WinGrindCache claims that the total for that request was "only" 28,258ms... which is a lot, but not exactly 115 seconds worth of info. But nevermind that.
>
> It seems that 17k ms went to the flock() function in the wp object cache!!!  - and that's just to get a file lock.
>   

Getting a file lock can potentially take a very long time, if other
processes are holding the lock for a long time.
this may be a symptom caused by another problem.
From mikea at turbonet.com  Fri Oct  5 06:54:58 2007
From: mikea at turbonet.com (Michael D Adams)
Date: Fri Oct  5 06:55:46 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
Message-ID: <4DE6DF9E-6688-4A31-858B-51312B46145D@turbonet.com>

On Oct 4, 2007, at 7:37 PM, Matt wrote:
> Is it possible to exclude certain catgories from displaying in the  
> loop,
> with a plugin?

Do you mean exclude posts from the loop that belong to a specific  
category?  I don't know if there's a better way to do this now, but  
there's an old plugin by Ryan that can do this.

http://wordpress.org/extend/plugins/front-page-cats/

There's no UI.  Change $cats_to_show to '-28' (or whatever category  
you want to exclude), and remove the is_home reference to get it to  
work everywhere (... or maybe change it to !is_admin...).

Michael
From wordpress at dd32.id.au  Fri Oct  5 06:58:27 2007
From: wordpress at dd32.id.au (DD32)
Date: Fri Oct  5 06:58:20 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
In-Reply-To: <4705DDE7.4060703@yadan.net>
References: <000001c806cb$71416ce0$53c446a0$@net>
	<op.tzo36nopk6w4mc@dd32.no-ip.com>
	<000401c806ed$aeb4cf00$0c1e6d00$@net> <4705DDE7.4060703@yadan.net>
Message-ID: <op.tzppnpjqk6w4mc@dd32.no-ip.com>

On Fri, 05 Oct 2007 16:47:03 +1000, Omry Yadan <omry@yadan.net> wrote:
> Getting a file lock can potentially take a very long time, if other
> processes are holding the lock for a long time.
> this may be a symptom caused by another problem.
> _______________________________________________

It can potentially take a long time if someone else has it locked.. But I didnt think you could open a file(for writing) if its locked?

The Object cache locking function:
	function acquire_lock() {
		// Acquire a write lock.
		$this->mutex = @fopen($this->cache_dir.$this->flock_filename, 'w');
		if ( false == $this->mutex)
			return false;
		flock($this->mutex, LOCK_EX);
		return true;
	}

The object cache can slow your site down significantly if your using a non-local(eg Network or SAN) filesystem, Or if you've got high IO load on the server, Thats why it isnt enabled by default. However it can be a great speed boost if your MySQL server has speed issues.

From omry at yadan.net  Fri Oct  5 07:07:39 2007
From: omry at yadan.net (Omry Yadan)
Date: Fri Oct  5 07:07:50 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
In-Reply-To: <op.tzppnpjqk6w4mc@dd32.no-ip.com>
References: <000001c806cb$71416ce0$53c446a0$@net>	<op.tzo36nopk6w4mc@dd32.no-ip.com>	<000401c806ed$aeb4cf00$0c1e6d00$@net>
	<4705DDE7.4060703@yadan.net> <op.tzppnpjqk6w4mc@dd32.no-ip.com>
Message-ID: <4705E2BB.2080404@yadan.net>

obviously you can.

flock take a file handler as argument, and will block if the file is locked.

I don't think fopen or even fwrite cares if a file is locked, it's up to
the developer to protect access to the file using flock.

in this case, you can see that flock is trying to lock the file
exclusively after it's open.



DD32 wrote:

> On Fri, 05 Oct 2007 16:47:03 +1000, Omry Yadan <omry@yadan.net> wrote:
>   
>> Getting a file lock can potentially take a very long time, if other
>> processes are holding the lock for a long time.
>> this may be a symptom caused by another problem.
>> _______________________________________________
>>     
>
> It can potentially take a long time if someone else has it locked.. But I didnt think you could open a file(for writing) if its locked?
>
> The Object cache locking function:
> 	function acquire_lock() {
> 		// Acquire a write lock.
> 		$this->mutex = @fopen($this->cache_dir.$this->flock_filename, 'w');
> 		if ( false == $this->mutex)
> 			return false;
> 		flock($this->mutex, LOCK_EX);
> 		return true;
> 	}
>
> The object cache can slow your site down significantly if your using a non-local(eg Network or SAN) filesystem, Or if you've got high IO load on the server, Thats why it isnt enabled by default. However it can be a great speed boost if your MySQL server has speed issues.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From computerguru at neosmart.net  Fri Oct  5 08:11:49 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Fri Oct  5 08:12:04 2007
Subject: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
In-Reply-To: <op.tzppnpjqk6w4mc@dd32.no-ip.com>
References: <000001c806cb$71416ce0$53c446a0$@net>	<op.tzo36nopk6w4mc@dd32.no-ip.com>	<000401c806ed$aeb4cf00$0c1e6d00$@net>
	<4705DDE7.4060703@yadan.net> <op.tzppnpjqk6w4mc@dd32.no-ip.com>
Message-ID: <000901c80727$64bf8090$2e3e81b0$@net>

Yeah, I think there's something wrong with my machine... It's barely under any load, but IO times are horrid.
I had taken my XCache-plugin for WordPress down two weeks ago for maintenance and was too lazy to put it back, but now I'm using memory-based object caching and it's a lot faster. 100 times faster. Literally. ;-)

However, even with memory-based caching many things that require accessing the HD are still taking too long. Page loads are at 1second now, which is still too long - relatively speaking. I just don't get why other disk-intensive scripts aren't as affected - especially stuff like Gallery2 which are considered to be both db- and disk-heavy...

Thank god I don't have any MySQL server performance issues to add to the mix! 

I'm not sure what's giving me these IO problems (fully defragged, write caching enabled, drivers installed, local drive, etc), but I've already requested a new server from my host (long live Lunarpages :P) so that's that.

Computer Guru
NeoSmart Technologies
http://neosmart.net/


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of DD32
> Sent: Friday, October 05, 2007 9:58 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Incredibly High PHP Creation Times on WP SVN?
> 
> On Fri, 05 Oct 2007 16:47:03 +1000, Omry Yadan <omry@yadan.net> wrote:
> > Getting a file lock can potentially take a very long time, if other
> > processes are holding the lock for a long time.
> > this may be a symptom caused by another problem.
> > _______________________________________________
> 
> It can potentially take a long time if someone else has it locked.. But
> I didnt think you could open a file(for writing) if its locked?
> 
> The Object cache locking function:
> 	function acquire_lock() {
> 		// Acquire a write lock.
> 		$this->mutex = @fopen($this->cache_dir.$this-
> >flock_filename, 'w');
> 		if ( false == $this->mutex)
> 			return false;
> 		flock($this->mutex, LOCK_EX);
> 		return true;
> 	}
> 
> The object cache can slow your site down significantly if your using a
> non-local(eg Network or SAN) filesystem, Or if you've got high IO load
> on the server, Thats why it isnt enabled by default. However it can be
> a great speed boost if your MySQL server has speed issues.
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From giovannipira at yahoo.com.br  Fri Oct  5 12:13:46 2007
From: giovannipira at yahoo.com.br (giovanni cardoso de oliveira)
Date: Fri Oct  5 12:13:50 2007
Subject: [wp-hackers] shell remote terminal
Message-ID: <730953.92193.qm@web63812.mail.re1.yahoo.com>

 How find the best shell remote terminal ? Send me please a answer.
   
    Thank you!



       Abra sua conta no Yahoo! Mail, o ?nico sem limite de espa?o para armazenamento! 
From johnbillion+wp at gmail.com  Fri Oct  5 12:20:51 2007
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri Oct  5 12:20:57 2007
Subject: [wp-hackers] shell remote terminal
In-Reply-To: <730953.92193.qm@web63812.mail.re1.yahoo.com>
References: <730953.92193.qm@web63812.mail.re1.yahoo.com>
Message-ID: <1fa535a70710050520r668ef168hb9e32f53ca3c459a@mail.gmail.com>

Sorry Giovanni, this is not the correct topic for this list. We are
trying to cut back on off-topic posts so please try to find your
answer somewhere else, eg. google.com.

Regards.

On 10/5/07, giovanni cardoso de oliveira <giovannipira@yahoo.com.br> wrote:
>  How find the best shell remote terminal ? Send me please a answer.
>
>     Thank you!
>
>
>
>        Abra sua conta no Yahoo! Mail, o ?nico sem limite de espa?o para armazenamento!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From paul at codehooligans.com  Fri Oct  5 13:16:31 2007
From: paul at codehooligans.com (Paul Menard)
Date: Fri Oct  5 13:13:47 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <4DE6DF9E-6688-4A31-858B-51312B46145D@turbonet.com>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
	<4DE6DF9E-6688-4A31-858B-51312B46145D@turbonet.com>
Message-ID: <DBCA19CC-D81A-451C-BBB0-F747EE3FA259@codehooligans.com>

I generally exclude/include categories using a simple function I keep  
in the functions.php file. The following example was setup because  
the client only wanted content from the category '1' displayed on the  
home page.

function myHomePostsFilter($query)
{
	if ($query->is_home)
	{
		$query->set('cat','1');
	}
	return $query;
}
add_filter('pre_get_posts','myHomePostsFilter');

The is_home has other sibling functions like is_search, is_list, etc.  
Via the query set() you can also pass the second argument as '-1, -2,  
-3'. I turned this into a simple plugin. It has two admin panels, one  
for categories and one for pages. The pages section is used to simply  
exclude pages from search. But there are other 'actions' where pages  
may need to be excluded. But it's not all that clean. If anyone wants  
to see this let me know. Also this code works well for WP2.2 and  
below. HAve not looked into using this similar for tags.

There was a plugin I found for pre-WP2.1 called Category Visibility.  
It was doing some very complicated MySQL queries and would not work  
with 2.2. This seemed like overkill.



P-




On Oct 5, 2007, at 1:54 AM, Michael D Adams wrote:

> On Oct 4, 2007, at 7:37 PM, Matt wrote:
>> Is it possible to exclude certain catgories from displaying in the  
>> loop,
>> with a plugin?
>
> Do you mean exclude posts from the loop that belong to a specific  
> category?  I don't know if there's a better way to do this now, but  
> there's an old plugin by Ryan that can do this.
>
> http://wordpress.org/extend/plugins/front-page-cats/
>
> There's no UI.  Change $cats_to_show to '-28' (or whatever category  
> you want to exclude), and remove the is_home reference to get it to  
> work everywhere (... or maybe change it to !is_admin...).
>
> Michael
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wyldwolf at gmail.com  Fri Oct  5 13:35:33 2007
From: wyldwolf at gmail.com (Kevin)
Date: Fri Oct  5 14:02:30 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <DBCA19CC-D81A-451C-BBB0-F747EE3FA259@codehooligans.com>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
	<4DE6DF9E-6688-4A31-858B-51312B46145D@turbonet.com>
	<DBCA19CC-D81A-451C-BBB0-F747EE3FA259@codehooligans.com>
Message-ID: <77895c1d0710050635m6f51dde0x45f3ffc3667ccff8@mail.gmail.com>

Unless something has changed shouldn't the code referenced in the
codex loop page work?
http://codex.wordpress.org/The_Loop

Specificly:
<?php if (in_category('3')) continue; ?>

Obviously this isn't optimized from a SQL perspective (you're still
pull all posts from the DB, just not displaying some of them), but it
does what was asked for.

Kevin

On 10/5/07, Paul Menard <paul@codehooligans.com> wrote:
> I generally exclude/include categories using a simple function I keep
> in the functions.php file. The following example was setup because
> the client only wanted content from the category '1' displayed on the
> home page.
>
> function myHomePostsFilter($query)
> {
>         if ($query->is_home)
>         {
>                 $query->set('cat','1');
>         }
>         return $query;
> }
> add_filter('pre_get_posts','myHomePostsFilter');
>
> The is_home has other sibling functions like is_search, is_list, etc.
> Via the query set() you can also pass the second argument as '-1, -2,
> -3'. I turned this into a simple plugin. It has two admin panels, one
> for categories and one for pages. The pages section is used to simply
> exclude pages from search. But there are other 'actions' where pages
> may need to be excluded. But it's not all that clean. If anyone wants
> to see this let me know. Also this code works well for WP2.2 and
> below. HAve not looked into using this similar for tags.
>
> There was a plugin I found for pre-WP2.1 called Category Visibility.
> It was doing some very complicated MySQL queries and would not work
> with 2.2. This seemed like overkill.
>
>
>
> P-
>
>
>
>
> On Oct 5, 2007, at 1:54 AM, Michael D Adams wrote:
>
> > On Oct 4, 2007, at 7:37 PM, Matt wrote:
> >> Is it possible to exclude certain catgories from displaying in the
> >> loop,
> >> with a plugin?
> >
> > Do you mean exclude posts from the loop that belong to a specific
> > category?  I don't know if there's a better way to do this now, but
> > there's an old plugin by Ryan that can do this.
> >
> > http://wordpress.org/extend/plugins/front-page-cats/
> >
> > There's no UI.  Change $cats_to_show to '-28' (or whatever category
> > you want to exclude), and remove the is_home reference to get it to
> > work everywhere (... or maybe change it to !is_admin...).
> >
> > Michael
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Kevin Kelley
http://technogeek.org/
From peter.westwood at ftwr.co.uk  Fri Oct  5 14:10:34 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri Oct  5 14:11:30 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <77895c1d0710050635m6f51dde0x45f3ffc3667ccff8@mail.gmail.com>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>	<4DE6DF9E-6688-4A31-858B-51312B46145D@turbonet.com>	<DBCA19CC-D81A-451C-BBB0-F747EE3FA259@codehooligans.com>
	<77895c1d0710050635m6f51dde0x45f3ffc3667ccff8@mail.gmail.com>
Message-ID: <470645DA.6030203@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Kevin wrote:
> Unless something has changed shouldn't the code referenced in the
> codex loop page work?
> http://codex.wordpress.org/The_Loop
> 
> Specificly:
> <?php if (in_category('3')) continue; ?>
> 
> Obviously this isn't optimized from a SQL perspective (you're still
> pull all posts from the DB, just not displaying some of them), but it
> does what was asked for.
> 

The biggest issue with this AFAIK is that it means that you may end up
with less posts on the page than expected.

And if the last "n" posts are all in the category you get no posts

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHBkXZVPRdzag0AcURAg9dAJ0d1TZrYztzCZAxRxX7RYEh3E+P4gCfXt5v
ky0GD1Wpn553XwL1UpYcLXs=
=pYOv
-----END PGP SIGNATURE-----
From paul at codehooligans.com  Fri Oct  5 14:24:00 2007
From: paul at codehooligans.com (Paul Menard)
Date: Fri Oct  5 14:21:23 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <77895c1d0710050635m6f51dde0x45f3ffc3667ccff8@mail.gmail.com>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
	<4DE6DF9E-6688-4A31-858B-51312B46145D@turbonet.com>
	<DBCA19CC-D81A-451C-BBB0-F747EE3FA259@codehooligans.com>
	<77895c1d0710050635m6f51dde0x45f3ffc3667ccff8@mail.gmail.com>
Message-ID: <FD71B812-ED42-4A0E-AC18-01E7ECD637A0@codehooligans.com>

This was not my original post but I do want to offer my opinion on  
your reply.

You are correct this will 'filter' the post loop items and allow you  
to display just the ones you want.
However, there are a couple issues with this off the top of my head.

1. As you also pointed out this is not very efficient because at this  
point WP have pre-selected all posts. If you only want a single  
category and that category only contain 10 items of the lager 3000  
post item of your blog then the If (in_category()) will be executed  
for 3000 to check.

2. If I set my display items per page count to 5 and considering the  
above information I may have to add even more code to ensure the user  
sees 5 items per page and the paging works correctly.

3. You could do what I've done many times in the past and ignore the  
post/loop provided by WordPress and build your own query in the  
template. But again this is grossly inefficient in my opinion since  
for WP performs the query (+1 database hit) then you hit the database  
again to run your custom query.

P-



On Oct 5, 2007, at 8:35 AM, Kevin wrote:

> Unless something has changed shouldn't the code referenced in the
> codex loop page work?
> http://codex.wordpress.org/The_Loop
>
> Specificly:
> <?php if (in_category('3')) continue; ?>
>
> Obviously this isn't optimized from a SQL perspective (you're still
> pull all posts from the DB, just not displaying some of them), but it
> does what was asked for.
>
> Kevin
>
> On 10/5/07, Paul Menard <paul@codehooligans.com> wrote:
>> I generally exclude/include categories using a simple function I keep
>> in the functions.php file. The following example was setup because
>> the client only wanted content from the category '1' displayed on the
>> home page.
>>
>> function myHomePostsFilter($query)
>> {
>>         if ($query->is_home)
>>         {
>>                 $query->set('cat','1');
>>         }
>>         return $query;
>> }
>> add_filter('pre_get_posts','myHomePostsFilter');
>>
>> The is_home has other sibling functions like is_search, is_list, etc.
>> Via the query set() you can also pass the second argument as '-1, -2,
>> -3'. I turned this into a simple plugin. It has two admin panels, one
>> for categories and one for pages. The pages section is used to simply
>> exclude pages from search. But there are other 'actions' where pages
>> may need to be excluded. But it's not all that clean. If anyone wants
>> to see this let me know. Also this code works well for WP2.2 and
>> below. HAve not looked into using this similar for tags.
>>
>> There was a plugin I found for pre-WP2.1 called Category Visibility.
>> It was doing some very complicated MySQL queries and would not work
>> with 2.2. This seemed like overkill.
>>
>>
>>
>> P-
>>
>>
>>
>>
>> On Oct 5, 2007, at 1:54 AM, Michael D Adams wrote:
>>
>>> On Oct 4, 2007, at 7:37 PM, Matt wrote:
>>>> Is it possible to exclude certain catgories from displaying in the
>>>> loop,
>>>> with a plugin?
>>>
>>> Do you mean exclude posts from the loop that belong to a specific
>>> category?  I don't know if there's a better way to do this now, but
>>> there's an old plugin by Ryan that can do this.
>>>
>>> http://wordpress.org/extend/plugins/front-page-cats/
>>>
>>> There's no UI.  Change $cats_to_show to '-28' (or whatever category
>>> you want to exclude), and remove the is_home reference to get it to
>>> work everywhere (... or maybe change it to !is_admin...).
>>>
>>> Michael
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> -- 
> Kevin Kelley
> http://technogeek.org/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From yahgrp at poplarware.com  Fri Oct  5 15:02:26 2007
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Fri Oct  5 15:01:00 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
Message-ID: <47065202.4080206@poplarware.com>

Matt wrote:
> Is it possible to exclude certain catgories from displaying in the loop,
> with a plugin?

This page has an example of a category exclusion query:

    http://codex.wordpress.org/Custom_Queries

     --Jennifer

-- 
Jennifer Hodgdon

Poplar ProductivityWare * www.poplarware.com
Web Databases/Scripts * Modeling/Analysis/Palm OS Software

From otto at ottodestruct.com  Fri Oct  5 15:18:58 2007
From: otto at ottodestruct.com (Otto)
Date: Fri Oct  5 15:19:08 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <DBCA19CC-D81A-451C-BBB0-F747EE3FA259@codehooligans.com>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
	<4DE6DF9E-6688-4A31-858B-51312B46145D@turbonet.com>
	<DBCA19CC-D81A-451C-BBB0-F747EE3FA259@codehooligans.com>
Message-ID: <161617690710050818y13f0b33ep8038c915981dd4c1@mail.gmail.com>

On 10/5/07, Paul Menard <paul@codehooligans.com> wrote:
> function myHomePostsFilter($query)
> {
>         if ($query->is_home)
>         {
>                 $query->set('cat','1');
>         }
>         return $query;
> }
> add_filter('pre_get_posts','myHomePostsFilter');

Paul has the correct answer here, this is the cleanest way to do it.
It will filter the categories in exactly the way you like. I would set
the 'category__in' and 'category__not_in' query variables. They're new
to 2.3, but they're very easy to use.
$query->set('category__not_in','1,2,3,4') and such.
From wyldwolf at gmail.com  Fri Oct  5 15:24:29 2007
From: wyldwolf at gmail.com (Kevin)
Date: Fri Oct  5 15:24:35 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <FD71B812-ED42-4A0E-AC18-01E7ECD637A0@codehooligans.com>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
	<4DE6DF9E-6688-4A31-858B-51312B46145D@turbonet.com>
	<DBCA19CC-D81A-451C-BBB0-F747EE3FA259@codehooligans.com>
	<77895c1d0710050635m6f51dde0x45f3ffc3667ccff8@mail.gmail.com>
	<FD71B812-ED42-4A0E-AC18-01E7ECD637A0@codehooligans.com>
Message-ID: <77895c1d0710050824v790498fck356ec7beb6ac3dcf@mail.gmail.com>

Here is some actual SQL, which for the record will not work in WP 2.3,
and in addition to wp_posts.ID you probably want to pull out other
info (thus avoiding additional queries). Without digging in real deep
into the WP scheme this is as optimized query as I can come up with.

SELECT wpp.id
FROM wp_posts AS wpp, wp_post2cat AS wpc
WHERE wpp.id = wpc.post_id
AND wpc.category_id !=2

Kevin

On 10/5/07, Paul Menard <paul@codehooligans.com> wrote:
> This was not my original post but I do want to offer my opinion on
> your reply.
>
> You are correct this will 'filter' the post loop items and allow you
> to display just the ones you want.
> However, there are a couple issues with this off the top of my head.
>
> 1. As you also pointed out this is not very efficient because at this
> point WP have pre-selected all posts. If you only want a single
> category and that category only contain 10 items of the lager 3000
> post item of your blog then the If (in_category()) will be executed
> for 3000 to check.
>
> 2. If I set my display items per page count to 5 and considering the
> above information I may have to add even more code to ensure the user
> sees 5 items per page and the paging works correctly.
>
> 3. You could do what I've done many times in the past and ignore the
> post/loop provided by WordPress and build your own query in the
> template. But again this is grossly inefficient in my opinion since
> for WP performs the query (+1 database hit) then you hit the database
> again to run your custom query.
>
> P-
>
>
>
> On Oct 5, 2007, at 8:35 AM, Kevin wrote:
>
> > Unless something has changed shouldn't the code referenced in the
> > codex loop page work?
> > http://codex.wordpress.org/The_Loop
> >
> > Specificly:
> > <?php if (in_category('3')) continue; ?>
> >
> > Obviously this isn't optimized from a SQL perspective (you're still
> > pull all posts from the DB, just not displaying some of them), but it
> > does what was asked for.
> >
> > Kevin
> >
> > On 10/5/07, Paul Menard <paul@codehooligans.com> wrote:
> >> I generally exclude/include categories using a simple function I keep
> >> in the functions.php file. The following example was setup because
> >> the client only wanted content from the category '1' displayed on the
> >> home page.
> >>
> >> function myHomePostsFilter($query)
> >> {
> >>         if ($query->is_home)
> >>         {
> >>                 $query->set('cat','1');
> >>         }
> >>         return $query;
> >> }
> >> add_filter('pre_get_posts','myHomePostsFilter');
> >>
> >> The is_home has other sibling functions like is_search, is_list, etc.
> >> Via the query set() you can also pass the second argument as '-1, -2,
> >> -3'. I turned this into a simple plugin. It has two admin panels, one
> >> for categories and one for pages. The pages section is used to simply
> >> exclude pages from search. But there are other 'actions' where pages
> >> may need to be excluded. But it's not all that clean. If anyone wants
> >> to see this let me know. Also this code works well for WP2.2 and
> >> below. HAve not looked into using this similar for tags.
> >>
> >> There was a plugin I found for pre-WP2.1 called Category Visibility.
> >> It was doing some very complicated MySQL queries and would not work
> >> with 2.2. This seemed like overkill.
> >>
> >>
> >>
> >> P-
> >>
> >>
> >>
> >>
> >> On Oct 5, 2007, at 1:54 AM, Michael D Adams wrote:
> >>
> >>> On Oct 4, 2007, at 7:37 PM, Matt wrote:
> >>>> Is it possible to exclude certain catgories from displaying in the
> >>>> loop,
> >>>> with a plugin?
> >>>
> >>> Do you mean exclude posts from the loop that belong to a specific
> >>> category?  I don't know if there's a better way to do this now, but
> >>> there's an old plugin by Ryan that can do this.
> >>>
> >>> http://wordpress.org/extend/plugins/front-page-cats/
> >>>
> >>> There's no UI.  Change $cats_to_show to '-28' (or whatever category
> >>> you want to exclude), and remove the is_home reference to get it to
> >>> work everywhere (... or maybe change it to !is_admin...).
> >>>
> >>> Michael
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers@lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >
> >
> >
> > --
> > Kevin Kelley
> > http://technogeek.org/
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Kevin Kelley
http://technogeek.org/
From wp-hackers at striderweb.com  Fri Oct  5 14:55:24 2007
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Oct  5 15:25:48 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
Message-ID: <B905EF12-11CE-4F95-91C9-DCA7B5BECFFD@striderweb.com>

If this will eliminate goofy things such as the table_prefix being  
embedded in various  fieldnames, I'm all for it!  :)

Kidding aside, I think this is a good idea.  I also kind of like  
Jared's idea of a table for the meta data itself, and a separate  
table linking it to the various objects.  It's worth consideration,  
at the least.  I think it might lead to some interesting and  
unanticipated flexibility.

At first blush I was hesitant at the concept of this also including  
the Options, but... (as Otto points out) so long as this is  
abstracted behind the add and update options functions, it shouldn't  
be a big problem for plugin designers.

Stephen

On Oct 4, 2007, at 10:43 AM, Austin Matzko wrote:

> For WordPress 2.4, I propose that we add a general meta-data table.
> It would be similar in structure to the current postmeta and usermeta
> tables, except with an additional field specifying the domain of the
> meta-data.
>
> There are at least a couple of benefits to such a table:
>
> - We could have meta-data for comments and categories.
> Others have proposed meta tables for the comments [1]; rather than
> adding meta tables seriatim, a general meta-data table would meet that
> need and offer the possibility of actually reducing the total number
> of tables.
>
> - It would provide a better place for plugins to store data.
> Currently, most plugins---when they don't have enough data to justify
> creating their own table---store data in the options table.  I think
> there are disadvantages to bloating the options table, one of which is
> that WP loads almost all options into the object cache.
>
> Thoughts?
>
> [1] http://trac.wordpress.org/ticket/2659
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From jared at pacific22.com  Fri Oct  5 21:29:27 2007
From: jared at pacific22.com (Jared Bangs)
Date: Fri Oct  5 21:29:35 2007
Subject: [wp-hackers] iPhone / MobileAdmin plugin - Request for feedback
Message-ID: <7b4922320710051429qd69ef48he625a868839bb16@mail.gmail.com>

We just released a version 2 of our admin UI plugin for mobile devices
(specifically the iPhone). [1]

But I'm not (just) promoting my plugin here, I'm just seeing if anyone
here has any ideas / critiques on it, whether the design/architecture
or style.

The basic concept is that it give a really trimmed down version of the
admin UI for all mobile devices (at least all that are covered by Alex
King's mobilewp plugin), and then adds extra stuff (styles and
features) for specific devices using plugins (similar to the Spam
Karma plugin).

It comes with a plugin for the iPhone (or course), as well as Windows
Mobile, with more to come. I still need to get around to writing up a
guide for how the plugins work, but for now you "hackers" can probably
figure it out by looking at the existing ones that are distributed
with the plugin.

In case Matt M. is reading this, I'm also curious about the contest he
mentioned a while ago regarding building an iPhone admin UI. Matt, if
you're reading this, I'm just curious about the status of this. (I
tried e-mailing, but I fear my messages may have been lost in the
shuffle).

[1] http://wordpress.org/extend/plugins/mobileadmin/
From ryan at boren.nu  Fri Oct  5 21:48:19 2007
From: ryan at boren.nu (Ryan Boren)
Date: Fri Oct  5 21:48:24 2007
Subject: [wp-hackers] Page searching examples
In-Reply-To: <75835fe10710031204x643baf13vb94455b69dffd489@mail.gmail.com>
References: <20071003120048.8554B6D2E@comox.textdrive.com>
	<127FB995-9988-48D2-9245-984CF80EE62F@birdhouse.org>
	<4703C242.5060509@gunters.org>
	<75835fe10710031204x643baf13vb94455b69dffd489@mail.gmail.com>
Message-ID: <c8f37c930710051448y28b25d95ha40089c23caebc3c@mail.gmail.com>

On 10/3/07, Justin Moore <wantmoore@gmail.com> wrote:
> On 10/3/07, Dougal Campbell <dougal@gunters.org> wrote:
> > I concur: the natural assumption for a search box on a web site is that
> > it will search _the entire site_, not just post text. That's why I
> > installed the Search Everything plugin on my site a while back.
>
> This is the most succinct, logical, and sensible comment I've read on
> this whole subject. Dead on the money, IMHO.

This is the direction I'm inclined to take.  We should search on as
much as possible within the performance constraints of your typical
shared hosting setup.

I opened a ticket pitching this approach.

http://trac.wordpress.org/ticket/5149
From cpoteet at siolon.com  Fri Oct  5 23:32:00 2007
From: cpoteet at siolon.com (Chris Poteet)
Date: Fri Oct  5 23:31:51 2007
Subject: [wp-hackers] Added Parameter on wp_title
Message-ID: <003301c807a7$f0deb840$d29c28c0$@com>

I added a patch for #4407 that has a change on wp_title.   There is a
description in the ticket.

http://trac.wordpress.org/ticket/4407

Thoughts?
chris

From speedboxer at gmail.com  Sat Oct  6 05:21:20 2007
From: speedboxer at gmail.com (Matt)
Date: Sat Oct  6 05:21:26 2007
Subject: [wp-hackers] Exclude Categories From The Loop
In-Reply-To: <161617690710050818y13f0b33ep8038c915981dd4c1@mail.gmail.com>
References: <b88434820710041937p2472d6cay68d347593789b342@mail.gmail.com>
	<4DE6DF9E-6688-4A31-858B-51312B46145D@turbonet.com>
	<DBCA19CC-D81A-451C-BBB0-F747EE3FA259@codehooligans.com>
	<161617690710050818y13f0b33ep8038c915981dd4c1@mail.gmail.com>
Message-ID: <b88434820710052221t725a68deqc7cdc01419d2406c@mail.gmail.com>

Thanks everyone for your replies!

On 10/5/07, Otto <otto@ottodestruct.com> wrote:
>
> Paul has the correct answer here, this is the cleanest way to do it.
> It will filter the categories in exactly the way you like. I would set
> the 'category__in' and 'category__not_in' query variables. They're new
> to 2.3, but they're very easy to use.
> $query->set('category__not_in','1,2,3,4') and such.
>
So category__not_in would be the excluded ones?


-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From zamoose at gmail.com  Sat Oct  6 12:22:52 2007
From: zamoose at gmail.com (Doug Stewart)
Date: Sat Oct  6 12:22:58 2007
Subject: [wp-hackers] PROPOSAL: Use sunmanagers etiquette to help reduce
	list S/N ratio
Message-ID: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>

I don't know how many of you have experience in the Sun/Solaris admin
community, but the Sun Managers list is usually a great place to go to
get information and solutions to your problems
(http://www.sunmanagers.org/).

It is a bit more specialized in its intent than wp-hackers, for
certain, but I believe several of the rules they uphold might be
relevant.

To wit:

======================

1:  This list is NOT moderated!  Every message that is sent to the list
    will be passed on to every member of the list.

2:  Requests to have addresses added or removed from the list should NOT
    be sent to the entire list.  Instead, addresses should be added
    or removed via the web page at http://www.sunmanagers.org
    Similarly, test messages of any sort should not be sent to the list.

[snip]

4:  All responses are to be mailed back to the questioner and are NOT to be
    sent to the entire list.  Any response to a list message sent to the
    list, rather than to the person asking the question, will be deleted
    without notice.  The person who originally asked the question has the
    responsibility of summarizing the answers and sending the entire
    summary back to the list.  When a summary is sent back to the list,
    the word "SUMMARY" should be the first word of the "Subject" line.

5:  Discussions on ANY topic are not allowed and will not be tolerated.
    If you want to discuss something, take it to the appropriate Sun
    newsgroup.

6:  If it is not specifically related to Sun system management, then it
    does NOT belong on this list.  Requests for vendor recommendations
    are tolerated, provided that the hardware in question is something that
    system managers normally purchase.

[snip]

9:  Requests for software (free or otherwise) should be limited to
    software that is directly related to Sun SYSTEM MANAGEMENT ONLY.

10: Read the appropriate manuals BEFORE posting, including the "Read
    This First" documents.  Oftentimes the manuals contain answers for
    common problems.

[snip]

12: A posting to sunmanagers is not a general invitation to email the
    poster -- if you wish to send email to a sunmanagers poster, the email
    you send should be related to the posting, else it will be unsolicited
    email and may be treated like any other unsolicited email (e.g. spam).
    Sunmanagers is not to be used to collect email addresses of people who
    manage Sun systems.  Those who do this not only violate the list's
    policy, but risk seriously offending the very people they are
    attempting to reach.

13: PLEASE PLEASE PLEASE...Think before you send a message!  Ask yourself
    "is this really appropriate?"  There are enough other newsgroups
    and mailing lists around to cover the marginal topics.  Perhaps there
    is another forum that is more appropriate?  Check the list of Sun
    specific newsgroups included in the FAQ.  Perhaps your message would
    be more appropriate there?"

======================

I know that's a lot to read through, but the rules are presented in
plain language and might make a very good jumping-off point for a
similar revision of wp-hackers, particularly rules #4 and 13.

What do you all think?  Draw up something similar and post it
prominently on the list page, reference it when folks get out of line,
etc.?

-- 
-Doug

http://literalbarrage.org/blog/
From viper at viper007bond.com  Sat Oct  6 12:37:49 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Sat Oct  6 12:37:56 2007
Subject: [wp-hackers] PROPOSAL: Use sunmanagers etiquette to help reduce
	list S/N ratio
In-Reply-To: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>
References: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>
Message-ID: <8f93a7390710060537h619bcf83w9f85b7e8a6e17bb3@mail.gmail.com>

I personally don't like #4. Sure, it'd cut down a lot on the traffic, but
then I'd have to rely on the original poster to make sure my thoughts /
points got to the rest of the list. That could take a lot of time, leave out
some ideas, etc. Plus the "SUMMARY" thing might screw those of us over using
clients like GMail which auto-thread e-mails (I believe it puts heavy weight
on the subject line, but I could be wrong).

If I didn't want tons of e-mails, I wouldn't have joined a high-traffic
mailing list. ;)

On 10/6/07, Doug Stewart <zamoose@gmail.com> wrote:
>
> I don't know how many of you have experience in the Sun/Solaris admin
> community, but the Sun Managers list is usually a great place to go to
> get information and solutions to your problems
> (http://www.sunmanagers.org/).
>
> It is a bit more specialized in its intent than wp-hackers, for
> certain, but I believe several of the rules they uphold might be
> relevant.
>
> To wit:
>
> ======================
>
> 1:  This list is NOT moderated!  Every message that is sent to the list
>     will be passed on to every member of the list.
>
> 2:  Requests to have addresses added or removed from the list should NOT
>     be sent to the entire list.  Instead, addresses should be added
>     or removed via the web page at http://www.sunmanagers.org
>     Similarly, test messages of any sort should not be sent to the list.
>
> [snip]
>
> 4:  All responses are to be mailed back to the questioner and are NOT to
> be
>     sent to the entire list.  Any response to a list message sent to the
>     list, rather than to the person asking the question, will be deleted
>     without notice.  The person who originally asked the question has the
>     responsibility of summarizing the answers and sending the entire
>     summary back to the list.  When a summary is sent back to the list,
>     the word "SUMMARY" should be the first word of the "Subject" line.
>
> 5:  Discussions on ANY topic are not allowed and will not be tolerated.
>     If you want to discuss something, take it to the appropriate Sun
>     newsgroup.
>
> 6:  If it is not specifically related to Sun system management, then it
>     does NOT belong on this list.  Requests for vendor recommendations
>     are tolerated, provided that the hardware in question is something
> that
>     system managers normally purchase.
>
> [snip]
>
> 9:  Requests for software (free or otherwise) should be limited to
>     software that is directly related to Sun SYSTEM MANAGEMENT ONLY.
>
> 10: Read the appropriate manuals BEFORE posting, including the "Read
>     This First" documents.  Oftentimes the manuals contain answers for
>     common problems.
>
> [snip]
>
> 12: A posting to sunmanagers is not a general invitation to email the
>     poster -- if you wish to send email to a sunmanagers poster, the email
>     you send should be related to the posting, else it will be unsolicited
>     email and may be treated like any other unsolicited email (e.g. spam).
>     Sunmanagers is not to be used to collect email addresses of people who
>     manage Sun systems.  Those who do this not only violate the list's
>     policy, but risk seriously offending the very people they are
>     attempting to reach.
>
> 13: PLEASE PLEASE PLEASE...Think before you send a message!  Ask yourself
>     "is this really appropriate?"  There are enough other newsgroups
>     and mailing lists around to cover the marginal topics.  Perhaps there
>     is another forum that is more appropriate?  Check the list of Sun
>     specific newsgroups included in the FAQ.  Perhaps your message would
>     be more appropriate there?"
>
> ======================
>
> I know that's a lot to read through, but the rules are presented in
> plain language and might make a very good jumping-off point for a
> similar revision of wp-hackers, particularly rules #4 and 13.
>
> What do you all think?  Draw up something similar and post it
> prominently on the list page, reference it when folks get out of line,
> etc.?
>
> --
> -Doug
>
> http://literalbarrage.org/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From wordpress at dd32.id.au  Sat Oct  6 12:46:54 2007
From: wordpress at dd32.id.au (DD32)
Date: Sat Oct  6 12:46:23 2007
Subject: [wp-hackers] PROPOSAL: Use sunmanagers etiquette to help reduce
	list S/N ratio
In-Reply-To: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>
References: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>
Message-ID: <op.tzr0ggbpk6w4mc@dd32.no-ip.com>

The only ones i see relevant (And should allready be followed) are #1, #2, #6, #10, #13

Discussion needs to take place on the list relating to the question, Everyone needs to see the full responses to allow them to add their own opinion as the discussion goes on, wp-hackers isnt a "Ask a question, get a single reponse, next question please" type of list; But people need to understand when they should break off the discussion, or when its going too far off-topic.

The only way i personally see the S/N staying low is by everyone realising its getting out of control, and that they may be part of the problem, There needs to be a clear guidelines for what IS and what ISNT wp-hackers, And when the discussion moves into the latter, it needs to be strongly suggested that the discussion be moved somewhere more relevant (But face it, Its unlikely it can be moved elsewhere due to the contributers only common subscribed service being wp-hackers, Which is a problem they can deal with).
Those people who continuously ignore the set lines of discussion should perhaps be punished(a week of moderation perhaps -- with them knowing there'll be not much time from moderators to do the moderation)

I'm thinking that maybe we should have another list that more 'senior members' post 'status updates' of whats currently happening in development(Ie. describing new features which are going into trunk, major changes made to functions, The position of them on a topic being discussed on wp-hackers(eg. "Yes, the bike shed is going to stay red, There are no plans to change that anytime soon unless there is a outstandingly good reason to, It might look better Blue, But its serving its purpose at present, and the added functionality of blue is nill"
Yes those could be posted to wp-hackers, But as we've seen, If something similar gets posted into a thread, discussion will continue on completely ignoring the message; Sometimes i wish i had Gmails mute function in my mail client.


On Sat, 06 Oct 2007 22:22:52 +1000, Doug Stewart <zamoose@gmail.com> wrote:

> [snip]

From wordpress at dd32.id.au  Sat Oct  6 12:47:29 2007
From: wordpress at dd32.id.au (DD32)
Date: Sat Oct  6 12:47:03 2007
Subject: [wp-hackers] PROPOSAL: Use sunmanagers etiquette to help reduce
	list S/N ratio
In-Reply-To: <8f93a7390710060537h619bcf83w9f85b7e8a6e17bb3@mail.gmail.com>
References: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>
	<8f93a7390710060537h619bcf83w9f85b7e8a6e17bb3@mail.gmail.com>
Message-ID: <op.tzr0hfjfk6w4mc@dd32.no-ip.com>

And now some noise from me:

On Sat, 06 Oct 2007 22:37:49 +1000, Viper007Bond <viper@viper007bond.com> wrote:
> Plus the "SUMMARY" thing might screw those of us over using
> clients like GMail which auto-thread e-mails (I believe it puts heavy weight
> on the subject line, but I could be wrong).

Emails contain a "In reply to" header, thats how most mail clients thread emails, Not sure if gmail follows it. Sometimes mail clients dont set the header which causes it to break the thread in some mail clients(ie. opera). I have a feeling Gmail uses a combination of the header and the subject if its not available.
From wp-hackers at striderweb.com  Sat Oct  6 13:23:26 2007
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sat Oct  6 13:23:41 2007
Subject: [wp-hackers] PROPOSAL: Use sunmanagers etiquette to help reduce
	list S/N ratio
In-Reply-To: <op.tzr0ggbpk6w4mc@dd32.no-ip.com>
References: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>
	<op.tzr0ggbpk6w4mc@dd32.no-ip.com>
Message-ID: <01FEECC8-0FEC-4A2E-9365-D4F6E9DD48AD@striderweb.com>


On Oct 6, 2007, at 7:46 AM, DD32 wrote:

> The only ones i see relevant (And should allready be followed) are  
> #1, #2, #6, #10, #13

I agree.  Forbidding discussion on this list (for example) would  
defeat the purpose!

> Its unlikely [that off-topic discussions) can be moved elsewhere  
> due to the contributers only common subscribed service being wp- 
> hackers, Which is a problem they can deal with).

Two suggestions for that last point:

1) Once a few people are emailing each other off-list, "reply all"  
works well :)

2) Somebody might set up a sort of "sidebar" forum -- a place for  
bikeshed, semi-off-topic, or completely off-topic discussions to  
continue, off-list, for those specifically interested in further  
discussion.

The beauty of #2 is that anybody can set up that forum and announce  
it. ;)


From zamoose at gmail.com  Sat Oct  6 13:24:16 2007
From: zamoose at gmail.com (Doug Stewart)
Date: Sat Oct  6 13:24:23 2007
Subject: [wp-hackers] PROPOSAL: Use sunmanagers etiquette to help reduce
	list S/N ratio
In-Reply-To: <8f93a7390710060537h619bcf83w9f85b7e8a6e17bb3@mail.gmail.com>
References: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>
	<8f93a7390710060537h619bcf83w9f85b7e8a6e17bb3@mail.gmail.com>
Message-ID: <71ddd7490710060624q7b332f56r18a24191f5bb334c@mail.gmail.com>

On 10/6/07, Viper007Bond <viper@viper007bond.com> wrote:
> I personally don't like #4. Sure, it'd cut down a lot on the traffic, but
> then I'd have to rely on the original poster to make sure my thoughts /
> points got to the rest of the list. That could take a lot of time, leave out
> some ideas, etc. Plus the "SUMMARY" thing might screw those of us over using
> clients like GMail which auto-thread e-mails (I believe it puts heavy weight
> on the subject line, but I could be wrong).
>
> If I didn't want tons of e-mails, I wouldn't have joined a high-traffic
> mailing list. ;)
>

I was thinking of #4 applying in terms of the support-ish requests
that come in.  I'm not suggesting squelching architecture/vision
discussions, but ones in which a "try this!" "nope, didn't work." kind
of thread develops.

-- 
-Doug

http://literalbarrage.org/blog/
From m at mullenweg.com  Sat Oct  6 15:59:24 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Sat Oct  6 22:23:13 2007
Subject: [wp-hackers] Re: [wp-svn] [6192] trunk/wp-includes: WLW manifest
	from josephscott.
In-Reply-To: <20071005172934.BAD9A710E55@basie.automattic.com>
References: <20071005172934.BAD9A710E55@basie.automattic.com>
Message-ID: <4707B0DC.9060504@mullenweg.com>

m@wordpress.org wrote:
>     * trunk/wp-includes/images/wlw/
>     * trunk/wp-includes/images/wlw/WpComments.png
>       <#trunkwpincludesimageswlwWpCommentspng>
>     * trunk/wp-includes/images/wlw/WpIcon.png
>       <#trunkwpincludesimageswlwWpIconpng>
>     * trunk/wp-includes/images/wlw/WpWatermark.png
>       <#trunkwpincludesimageswlwWpWatermarkpng>
>     * trunk/wp-includes/wlwmanifest.xml <#trunkwpincludeswlwmanifestxml>

Since these don't have to be anything in particular, could we have the 
image names be in wp-style?

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com

From speedboxer at gmail.com  Sun Oct  7 01:58:14 2007
From: speedboxer at gmail.com (Matt)
Date: Sun Oct  7 01:58:22 2007
Subject: [wp-hackers] PROPOSAL: Use sunmanagers etiquette to help reduce
	list S/N ratio
In-Reply-To: <71ddd7490710060624q7b332f56r18a24191f5bb334c@mail.gmail.com>
References: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>
	<8f93a7390710060537h619bcf83w9f85b7e8a6e17bb3@mail.gmail.com>
	<71ddd7490710060624q7b332f56r18a24191f5bb334c@mail.gmail.com>
Message-ID: <b88434820710061858t32ffcef2ob56d3bdc1031e717@mail.gmail.com>

If this was strictly a "support mailing list", then yes, those rules would
be good, but that's not really all wp-hackers is. Limiting discussion would
be a bad thing for WordPress... Also, what if the answer the answerer sends
to the poster is wrong, how's someone going to correct them with just a
loose summery to work off of.


-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From zamoose at gmail.com  Sun Oct  7 02:15:24 2007
From: zamoose at gmail.com (Doug Stewart)
Date: Sun Oct  7 02:15:32 2007
Subject: [wp-hackers] PROPOSAL: Use sunmanagers etiquette to help reduce
	list S/N ratio
In-Reply-To: <b88434820710061858t32ffcef2ob56d3bdc1031e717@mail.gmail.com>
References: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>
	<8f93a7390710060537h619bcf83w9f85b7e8a6e17bb3@mail.gmail.com>
	<71ddd7490710060624q7b332f56r18a24191f5bb334c@mail.gmail.com>
	<b88434820710061858t32ffcef2ob56d3bdc1031e717@mail.gmail.com>
Message-ID: <71ddd7490710061915i2c4d2e92l6e6f0aa465483504@mail.gmail.com>

On 10/6/07, Matt <speedboxer@gmail.com> wrote:
> If this was strictly a "support mailing list", then yes, those rules would
> be good, but that's not really all wp-hackers is. Limiting discussion would
> be a bad thing for WordPress... Also, what if the answer the answerer sends
> to the poster is wrong, how's someone going to correct them with just a
> loose summery to work off of.
>

I'm suggesting this approach for messages that trend towards "support"
or "bugs" instead of "architecture" or "planning".

Perhaps it bespeaks a need for for a wp-support list where such
traffic could be shunted?  Would that not significantly cut down on
list traffic numbers?

Basically repurpose wp-hackers...

-- 
-Doug

http://literalbarrage.org/blog/
From robin.adr at gmail.com  Sun Oct  7 04:21:29 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Sun Oct  7 04:21:36 2007
Subject: [wp-hackers] PROPOSAL: Use sunmanagers etiquette to help reduce
	list S/N ratio
In-Reply-To: <71ddd7490710061915i2c4d2e92l6e6f0aa465483504@mail.gmail.com>
References: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>
	<8f93a7390710060537h619bcf83w9f85b7e8a6e17bb3@mail.gmail.com>
	<71ddd7490710060624q7b332f56r18a24191f5bb334c@mail.gmail.com>
	<b88434820710061858t32ffcef2ob56d3bdc1031e717@mail.gmail.com>
	<71ddd7490710061915i2c4d2e92l6e6f0aa465483504@mail.gmail.com>
Message-ID: <d135ca9c0710062121y4c16831cje62ba34046290dd4@mail.gmail.com>

I don't think general support was the point of -hackers at all. More plugin
development and core discussion. Sadly, that distinction has generally
drifted away recently, and increased the noise level.

On 10/6/07, Doug Stewart <zamoose@gmail.com> wrote:
>
> On 10/6/07, Matt <speedboxer@gmail.com> wrote:
> > If this was strictly a "support mailing list", then yes, those rules
> would
> > be good, but that's not really all wp-hackers is. Limiting discussion
> would
> > be a bad thing for WordPress... Also, what if the answer the answerer
> sends
> > to the poster is wrong, how's someone going to correct them with just a
> > loose summery to work off of.
> >
>
> I'm suggesting this approach for messages that trend towards "support"
> or "bugs" instead of "architecture" or "planning".
>
> Perhaps it bespeaks a need for for a wp-support list where such
> traffic could be shunted?  Would that not significantly cut down on
> list traffic numbers?
>
> Basically repurpose wp-hackers...
>
> --
> -Doug
>
> http://literalbarrage.org/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From speedboxer at gmail.com  Sun Oct  7 05:08:34 2007
From: speedboxer at gmail.com (Matt)
Date: Sun Oct  7 05:08:38 2007
Subject: [wp-hackers] Change Table Collation
Message-ID: <b88434820710062208t357af0ccsd77e704bb9103189@mail.gmail.com>

I want to change the collation on my WP tables from latin1_swedish_ci to
utf8_unicode_ci, what's the best way to do this? I'm upgrading to 2.3,
should I do it before I do the upgrade?

Thanks,
-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From robin.adr at gmail.com  Sun Oct  7 05:23:31 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Sun Oct  7 05:23:38 2007
Subject: [wp-hackers] Change Table Collation
In-Reply-To: <b88434820710062208t357af0ccsd77e704bb9103189@mail.gmail.com>
References: <b88434820710062208t357af0ccsd77e704bb9103189@mail.gmail.com>
Message-ID: <d135ca9c0710062223u58cf75d9v555dc4c20689e1b0@mail.gmail.com>

phpMyAdmin.

On 10/6/07, Matt <speedboxer@gmail.com> wrote:
>
> I want to change the collation on my WP tables from latin1_swedish_ci to
> utf8_unicode_ci, what's the best way to do this? I'm upgrading to 2.3,
> should I do it before I do the upgrade?
>
> Thanks,
> --
> Matt (speedboxer@gmail.com)
> http://mattsblog.ca/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From speedboxer at gmail.com  Sun Oct  7 05:38:05 2007
From: speedboxer at gmail.com (Matt)
Date: Sun Oct  7 05:38:09 2007
Subject: [wp-hackers] Change Table Collation
In-Reply-To: <d135ca9c0710062223u58cf75d9v555dc4c20689e1b0@mail.gmail.com>
References: <b88434820710062208t357af0ccsd77e704bb9103189@mail.gmail.com>
	<d135ca9c0710062223u58cf75d9v555dc4c20689e1b0@mail.gmail.com>
Message-ID: <b88434820710062238m128df458xe87827c571770a02@mail.gmail.com>

On 10/6/07, Robin Adrianse <robin.adr@gmail.com> wrote:

> phpMyAdmin.
>
Anything I need to look out for when I do it?


-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From joseph at randomnetworks.com  Sun Oct  7 06:08:11 2007
From: joseph at randomnetworks.com (Joseph Scott)
Date: Sun Oct  7 06:08:21 2007
Subject: [wp-hackers] Re: [wp-svn] [6192] trunk/wp-includes: WLW manifest
	from josephscott.
In-Reply-To: <4707B0DC.9060504@mullenweg.com>
References: <20071005172934.BAD9A710E55@basie.automattic.com>
	<4707B0DC.9060504@mullenweg.com>
Message-ID: <51A1987A-C0A4-4123-93F2-5AA0BE0D37B5@randomnetworks.com>


On Oct 6, 2007, at 9:59 AM, Matt Mullenweg wrote:

> m@wordpress.org wrote:
>>     * trunk/wp-includes/images/wlw/
>>     * trunk/wp-includes/images/wlw/WpComments.png
>>       <#trunkwpincludesimageswlwWpCommentspng>
>>     * trunk/wp-includes/images/wlw/WpIcon.png
>>       <#trunkwpincludesimageswlwWpIconpng>
>>     * trunk/wp-includes/images/wlw/WpWatermark.png
>>       <#trunkwpincludesimageswlwWpWatermarkpng>
>>     * trunk/wp-includes/wlwmanifest.xml  
>> <#trunkwpincludeswlwmanifestxml>
>
> Since these don't have to be anything in particular, could we have  
> the image names be in wp-style?

Sure, I'll follow up and have the file names changed.

--
Joseph Scott
http://joseph.randomnetworks.com/


From tamba2 at gmail.com  Sun Oct  7 12:27:37 2007
From: tamba2 at gmail.com (Mark R)
Date: Sun Oct  7 12:27:42 2007
Subject: [wp-hackers] PROPOSAL: Use sunmanagers etiquette to help reduce
	list S/N ratio
In-Reply-To: <71ddd7490710061915i2c4d2e92l6e6f0aa465483504@mail.gmail.com>
References: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>
	<8f93a7390710060537h619bcf83w9f85b7e8a6e17bb3@mail.gmail.com>
	<71ddd7490710060624q7b332f56r18a24191f5bb334c@mail.gmail.com>
	<b88434820710061858t32ffcef2ob56d3bdc1031e717@mail.gmail.com>
	<71ddd7490710061915i2c4d2e92l6e6f0aa465483504@mail.gmail.com>
Message-ID: <740462640710070527l1918900as5ff2070b0a475738@mail.gmail.com>

On 10/7/07, Doug Stewart <zamoose@gmail.com> wrote:
>
>
> I'm suggesting this approach for messages that trend towards "support"
> or "bugs" instead of "architecture" or "planning".
>
> Perhaps it bespeaks a need for for a wp-support list where such
> traffic could be shunted?  Would that not significantly cut down on
> list traffic numbers?
>
> Basically repurpose wp-hackers...


I would suggest a  two line response to all such posts along the lines of:
"This list is not intended for support for the issue you have, please use
the forums at http://wordpress.org/support"
and then just leave it at that. Support exists in the forums so it's better
placed there.

My only contribution to this is that regardless of the outcome the practise
of snipping should be promoted. Trying to follow some threads with top
posts, bottom posts, in between posts is made all the harder with no
snipping going on.

M.
From denis at mesoconcepts.com  Sun Oct  7 12:53:39 2007
From: denis at mesoconcepts.com (Denis de Bernardy)
Date: Sun Oct  7 12:53:54 2007
Subject: [wp-hackers] RE: wp-hackers Digest, Vol 33, Issue 30
In-Reply-To: <20071007120103.4A33898A5@comox.textdrive.com>
Message-ID: <000e01c808e1$1672b860$6401a8c0@kergan>

There's normally nothing to worry about unless you're using non utf-7
characters in your posts.

If you have utf-8 characters in latin1 collated table columns, however, I'd
advise to use alter table statements to turn these fields (text, varchar...)
into blobs. that way, it won't get reencoded. then switch the collation, and
then revert the text fields to their original column types. don't forget to
backup before starting.

D.



> Message: 5
> Date: Sat, 6 Oct 2007 22:38:05 -0700
> From: Matt <speedboxer@gmail.com>
> Subject: Re: [wp-hackers] Change Table Collation
> To: wp-hackers@lists.automattic.com
> Message-ID:
> 	<b88434820710062238m128df458xe87827c571770a02@mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
> 
> On 10/6/07, Robin Adrianse <robin.adr@gmail.com> wrote:
> 
> > phpMyAdmin.
> >
> Anything I need to look out for when I do it?
> 
> 
> -- 
> Matt (speedboxer@gmail.com)
> http://mattsblog.ca/

From mhancock at us.net  Sun Oct  7 14:12:00 2007
From: mhancock at us.net (Michael E. Hancock)
Date: Sun Oct  7 14:12:05 2007
Subject: [wp-hackers] Change Table Collation
References: <b88434820710062208t357af0ccsd77e704bb9103189@mail.gmail.com>
Message-ID: <0e8001c808ec$07771d50$6402a8c0@DELL8600>

From: "Matt" <speedboxer@gmail.com>
> I want to change the collation on my WP tables from latin1_swedish_ci to
> utf8_unicode_ci, what's the best way to do this? I'm upgrading to 2.3,
> should I do it before I do the upgrade?

While I'd generally direct you to the WordPress Support Forums for this type
of question, I will point you to
http://codex.wordpress.org/Editing_wp-config.php and
http://wordpress.org/support/topic/117955?replies=17 for discussions on the
subject.

MichaelH


From lists.automattic.com at callum-macdonald.com  Sun Oct  7 17:13:42 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Sun Oct  7 17:14:08 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
Message-ID: <470913C6.2090502@callum-macdonald.com>

G'day,

I just updated WP Mail SMTP to version 0.4. However, when you download 
the ZIP file from wordpress.org the files are inside a nested directory:
http://downloads.wordpress.org/plugin/wp-mail-smtp.0.4.zip

The zip contains the following directory structure:
/wp-mail-smtp/
/wp-mail-smtp/readme.txt
/wp-mail-smtp/screenshot.png
/wp-mail-smtp/wp-mail-smtp/
/wp-mail-smtp/wp-mail-smtp/wp_mail_smtp.php

The correct structure is just:
/wp-mail-smtp/
/wp-mail-smtp/wp_mail_smtp.php

My readme in trunk points to the stable tag as 0.4, the dir structure 
there is
tags/0.4/readme.txt
tags/0.4/screenshot.png
tags/0.4/wp-mail-smtp/
tags/0.4/wp-mail-smtp/wp_mail_smtp.php

Anyone got any clues? Is this a bug? I notice that plugins that haven't 
been updated for a while (Akismet for example) are fine. Could it be a 
recent change?

Cheers - Callum.

From jared at pacific22.com  Sun Oct  7 18:16:31 2007
From: jared at pacific22.com (Jared Bangs)
Date: Sun Oct  7 18:16:36 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <470913C6.2090502@callum-macdonald.com>
References: <470913C6.2090502@callum-macdonald.com>
Message-ID: <7b4922320710071116u417e6629u78552687ed3f17f3@mail.gmail.com>

On 10/7/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
wrote:
>
> ...
> Anyone got any clues? Is this a bug? I notice that plugins that haven't
> been updated for a while (Akismet for example) are fine. Could it be a
> recent change?


I'm not seeing it on mine, but perhaps this may help narrow it down:

We updated one of our plugins last week (I believe it was Friday, Oct. 5th).
When I download the zip file, it has the correct structure, the times for
all the files inside are set to 2007/10/06 8:10am.

All that to say that if your issue was caused by a recent change in the
packaging routine (and if it would affect all plugins), it must have been a
very recent change, since it didn't seem to affect mine.
From viper at viper007bond.com  Sun Oct  7 19:08:14 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Sun Oct  7 19:08:32 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <470913C6.2090502@callum-macdonald.com>
References: <470913C6.2090502@callum-macdonald.com>
Message-ID: <8f93a7390710071208n44f49ea9y462ea9dd76b5ff33@mail.gmail.com>

You have a "wp-mail-smtp" folder in your "0.4" folder, so therefore it's
making a folder in the ZIP.

The ZIP script automatically puts all of your plugin's files in a folder, so
there's no need to make a folder of your own. Just put everything in the
root.

On 10/7/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
wrote:
>
> G'day,
>
> I just updated WP Mail SMTP to version 0.4. However, when you download
> the ZIP file from wordpress.org the files are inside a nested directory:
> http://downloads.wordpress.org/plugin/wp-mail-smtp.0.4.zip
>
> The zip contains the following directory structure:
> /wp-mail-smtp/
> /wp-mail-smtp/readme.txt
> /wp-mail-smtp/screenshot.png
> /wp-mail-smtp/wp-mail-smtp/
> /wp-mail-smtp/wp-mail-smtp/wp_mail_smtp.php
>
> The correct structure is just:
> /wp-mail-smtp/
> /wp-mail-smtp/wp_mail_smtp.php
>
> My readme in trunk points to the stable tag as 0.4, the dir structure
> there is
> tags/0.4/readme.txt
> tags/0.4/screenshot.png
> tags/0.4/wp-mail-smtp/
> tags/0.4/wp-mail-smtp/wp_mail_smtp.php
>
> Anyone got any clues? Is this a bug? I notice that plugins that haven't
> been updated for a while (Akismet for example) are fine. Could it be a
> recent change?
>
> Cheers - Callum.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From jeremy.visser at gmail.com  Sun Oct  7 23:00:59 2007
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Sun Oct  7 23:01:13 2007
Subject: [wp-hackers] PROPOSAL: Use sunmanagers etiquette to help reduce
	list S/N ratio
In-Reply-To: <op.tzr0hfjfk6w4mc@dd32.no-ip.com>
References: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>	<8f93a7390710060537h619bcf83w9f85b7e8a6e17bb3@mail.gmail.com>
	<op.tzr0hfjfk6w4mc@dd32.no-ip.com>
Message-ID: <4709652B.4010703@gmail.com>

DD32 wrote:
> Emails contain a "In reply to" header, thats how most mail clients
> thread emails, Not sure if gmail follows it. Sometimes mail clients
> dont set the header which causes it to break the thread in some mail
> clients(ie. opera). I have a feeling Gmail uses a combination of the
> header and the subject if its not available.

Gmail only threads based on the subject line. If the subject line is 
changed, it breaks the thread. Google Groups does not do this, and I 
wish Gmail worked like this: when the subject line is changed, the 
message is displayed in the same thread, but a yellow is noticed with a 
message like "Jeremy changed the subject line to 'Foo Bar'".

Thunderbird and Evolution thread correctly regardless of the subject line.
From lists.automattic.com at callum-macdonald.com  Sun Oct  7 23:08:04 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Sun Oct  7 23:08:10 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <8f93a7390710071208n44f49ea9y462ea9dd76b5ff33@mail.gmail.com>
References: <470913C6.2090502@callum-macdonald.com>
	<8f93a7390710071208n44f49ea9y462ea9dd76b5ff33@mail.gmail.com>
Message-ID: <470966D4.3000005@callum-macdonald.com>

Is that a new thing? I thought previously it worked in that format. I'll 
change it on svn anyway.

Cheers - Callum.

Viper007Bond wrote:
> You have a "wp-mail-smtp" folder in your "0.4" folder, so therefore it's
> making a folder in the ZIP.
>
> The ZIP script automatically puts all of your plugin's files in a folder, so
> there's no need to make a folder of your own. Just put everything in the
> root.
>
> On 10/7/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
> wrote:
>   
>> G'day,
>>
>> I just updated WP Mail SMTP to version 0.4. However, when you download
>> the ZIP file from wordpress.org the files are inside a nested directory:
>> http://downloads.wordpress.org/plugin/wp-mail-smtp.0.4.zip
>>
>> The zip contains the following directory structure:
>> /wp-mail-smtp/
>> /wp-mail-smtp/readme.txt
>> /wp-mail-smtp/screenshot.png
>> /wp-mail-smtp/wp-mail-smtp/
>> /wp-mail-smtp/wp-mail-smtp/wp_mail_smtp.php
>>
>> The correct structure is just:
>> /wp-mail-smtp/
>> /wp-mail-smtp/wp_mail_smtp.php
>>
>> My readme in trunk points to the stable tag as 0.4, the dir structure
>> there is
>> tags/0.4/readme.txt
>> tags/0.4/screenshot.png
>> tags/0.4/wp-mail-smtp/
>> tags/0.4/wp-mail-smtp/wp_mail_smtp.php
>>
>> Anyone got any clues? Is this a bug? I notice that plugins that haven't
>> been updated for a while (Akismet for example) are fine. Could it be a
>> recent change?
>>
>> Cheers - Callum.
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
>
>
>
>   

From speedboxer at gmail.com  Sun Oct  7 23:10:19 2007
From: speedboxer at gmail.com (Matt)
Date: Sun Oct  7 23:10:27 2007
Subject: [wp-hackers] PROPOSAL: Use sunmanagers etiquette to help reduce
	list S/N ratio
In-Reply-To: <47096617.2070504@gmail.com>
References: <71ddd7490710060522p33440b96if73709e0edc29d54@mail.gmail.com>
	<47096617.2070504@gmail.com>
Message-ID: <b88434820710071610j5daf5cdbh737caa6b21fc3e2c@mail.gmail.com>

On 10/7/07, Jeremy Visser <jeremy.visser@gmail.com> wrote:
>
> If the message displayed at the footer of EVERY SINGLE message posted to
> the list isn't obvious enough, then I don't see how a rule is going to
> help.


Maybe something like "Unsubscribe:
http://lists.automattic.com/mailman/listinfo/wp-hackers" instead?

-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From viper at viper007bond.com  Mon Oct  8 03:28:06 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Mon Oct  8 03:28:13 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <470966D4.3000005@callum-macdonald.com>
References: <470913C6.2090502@callum-macdonald.com>
	<8f93a7390710071208n44f49ea9y462ea9dd76b5ff33@mail.gmail.com>
	<470966D4.3000005@callum-macdonald.com>
Message-ID: <8f93a7390710072028g4c87da2bubb3d694437c35bf5@mail.gmail.com>

Nope, been like this since the beginning.

On 10/7/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
wrote:
>
> Is that a new thing? I thought previously it worked in that format. I'll
> change it on svn anyway.
>
> Cheers - Callum.
>
> Viper007Bond wrote:
> > You have a "wp-mail-smtp" folder in your "0.4" folder, so therefore it's
> > making a folder in the ZIP.
> >
> > The ZIP script automatically puts all of your plugin's files in a
> folder, so
> > there's no need to make a folder of your own. Just put everything in the
> > root.
> >
> > On 10/7/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
> > wrote:
> >
> >> G'day,
> >>
> >> I just updated WP Mail SMTP to version 0.4. However, when you download
> >> the ZIP file from wordpress.org the files are inside a nested
> directory:
> >> http://downloads.wordpress.org/plugin/wp-mail-smtp.0.4.zip
> >>
> >> The zip contains the following directory structure:
> >> /wp-mail-smtp/
> >> /wp-mail-smtp/readme.txt
> >> /wp-mail-smtp/screenshot.png
> >> /wp-mail-smtp/wp-mail-smtp/
> >> /wp-mail-smtp/wp-mail-smtp/wp_mail_smtp.php
> >>
> >> The correct structure is just:
> >> /wp-mail-smtp/
> >> /wp-mail-smtp/wp_mail_smtp.php
> >>
> >> My readme in trunk points to the stable tag as 0.4, the dir structure
> >> there is
> >> tags/0.4/readme.txt
> >> tags/0.4/screenshot.png
> >> tags/0.4/wp-mail-smtp/
> >> tags/0.4/wp-mail-smtp/wp_mail_smtp.php
> >>
> >> Anyone got any clues? Is this a bug? I notice that plugins that haven't
> >> been updated for a while (Akismet for example) are fine. Could it be a
> >> recent change?
> >>
> >> Cheers - Callum.
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >>
> >
> >
> >
> >
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From m at mullenweg.com  Mon Oct  8 15:38:43 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon Oct  8 15:40:07 2007
Subject: [wp-hackers] iPhone plugin contest close
Message-ID: <470A4F03.7070303@mullenweg.com>

Per the iPhone challenge:

http://comox.textdrive.com/pipermail/wp-hackers/2007-September/014432.html

I'll be judging the plugins and picking a winner on October 22.

I would suggest getting things in the official plugin repo at least a 
week before that. I'll judge the plugins on:

* Functionality
* Speed
* Use of internal APIs
* Aesthetics

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From dan at scatter3d.com  Mon Oct  8 23:26:35 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Mon Oct  8 23:26:42 2007
Subject: [wp-hackers] Plugin Help - Tag schema support in Search Everything
Message-ID: <7cf9ae490710081626l391bdffx881fdd52b4cbed18@mail.gmail.com>

I'm in desperate need for some fresh eyes to look at my code to see
what I'm doing wrong. It's most likely a simple fix but I could be
headed in a completely wrong direction. Hopefully you hackers can help
either way.

This portion is for category exclusion,


    //exclude categories/tags from search
    function SE4_exclude_categories($where) {
        global $wp_query;
        if (!empty($wp_query->query_vars['s'])) {
            $excl_list = implode(',', explode(',',
trim($this->options['SE4_exclude_categories_list'])));
            $where = str_replace('"', '\'', $where);
            $where = 'AND ('.substr($where, strpos($where, 'AND')+3).' )';
            //$where .= ' AND (c.category_id NOT IN ( '.$excl_list.' ))';
            $where .= "AND $wpdb->term_taxonomy.term_id NOT IN ($excl_list)";
        }

        $this->SE4_log("ex tags where: ".$where);
        return $where;
    }

    //join for excluding categories/tags
    function SE4_exclude_categories_join($join) {
        global $wp_query, $wpdb;

        if (!empty($wp_query->query_vars['s'])) {


            $where .= "LEFT JOIN $wpdb->term_relationships ON
($wpdb->posts.ID = $wpdb->term_relationships.object_id) LEFT JOIN
$wpdb->term_taxonomy ON ($wpdb->term_relationships.term_taxonomy_id =
$wpdb->term_taxonomy.term_taxonomy_id)";
        }
        $this->SE4_log("category join: ".$join);
        return $join;
    }


---------------------
Here is the code for including the tag name in the search that I can't
get to work as well,
---------------------

    //search tags
    function SE4_search_tags($where) {
        global $wp_query, $wpdb;
        if (!empty($wp_query->query_vars['s'])) {
            $where .= " OR terms_name LIKE '%" .
$wpdb->escape($wp_query->query_vars['s']) . "%' ";
        }

        $this->SE4_log("tags where: ".$where);

        return $where;
    }

    //join for searching tags
    function SE4_search_tags_join($join) {
        global $wp_query, $wpdb;

        if (!empty($wp_query->query_vars['s'])) {

            $join .= "LEFT JOIN $wpdb->term_relationships ON
($wpdb->posts.ID = $wpdb->term_relationships.object_id)";
        }
        $this->SE4_log("tag join: ".$join);
        return $join;
    }



Tag search just doesn't work, no errors. The exclusion does produce an error.
 			

WordPress database error: [You have an error in your SQL syntax; check
the manual that corresponds to your MySQL server version for the right
syntax to use near 'NOT IN (1) ORDER BY post_date DESC LIMIT 0, 10' at
line 1]
 			 SELECT DISTINCT SQL_CALC_FOUND_ROWS 23_posts.* FROM 23_posts
WHERE 1=1 AND ( (((post_title LIKE '%test-asdf%') OR (post_content
LIKE '%test%'))) AND post_type = 'post' AND (post_status = 'publish'
OR post_status = 'private') )AND .term_id NOT IN (1) ORDER BY
post_date DESC LIMIT 0, 10


Here's the plugin repo and browser,
http://svn.scatter3d.com/search-everything/
http://searcheverything.scatter3d.com:3000/browser/trunk
However this code is not checked in (since it clearly doesn't work).


Thanks.





-- 
Dan Cameron
From alex at mysoutham.com  Tue Oct  9 00:03:23 2007
From: alex at mysoutham.com (Alex Cragg)
Date: Tue Oct  9 00:00:54 2007
Subject: [wp-hackers] Problem Passing option to 'From:' in wp_mail $header
In-Reply-To: <7cf9ae490710081626l391bdffx881fdd52b4cbed18@mail.gmail.com>
References: <7cf9ae490710081626l391bdffx881fdd52b4cbed18@mail.gmail.com>
Message-ID: <470AC54B.8060700@mysoutham.com>

hi,

this was previously working on 2.2.X, but since upgrade to 2.3, i can no 
longer get the From: part of the wp_mail header to be anything other 
than what is defined in pluggable.php.

I have tried removing the call for an option, and putting an email in 
hard, but still, the email is still sent from the address defined in 
pluggable.php

the plugin i am working on is at 
http://webdev.mysoutham.com/new-user-email-set-up/

the particular code problem is this:

$headers = "MIME-Version: 1.0\n" .
        "From: ". $user_email . "\n" .
        "Content-Type: text/html; charset=\"" . 
get_option('blog_charset') . "\"\n";

I am using wp_mail like this:

    @wp_mail(get_option('newuseremailfromaddress'), $subject, $message, 
$headers);

the from address is not set as per the From: section

Only emailing the list as it seems like a bug, having worked fine in 
2.2.X, but then 2.3 breaks. Also wondering if the changes to wp_mail in 
pluggable.php have anything to do with it, and if so if something needs 
changing either here, or in the core code. Sure its something simple.

Thanks

Alex
From doug at smithsrus.com  Tue Oct  9 13:17:59 2007
From: doug at smithsrus.com (Doug Smith)
Date: Tue Oct  9 13:18:11 2007
Subject: [wp-hackers] Re: iPhone plugin contest close
In-Reply-To: <20071009120100.165717E81@comox.textdrive.com>
References: <20071009120100.165717E81@comox.textdrive.com>
Message-ID: <2FA0421D-11BE-42B2-91C5-AE1B4EB166BF@smithsrus.com>

On 08 Oct 2007 08:38:43, Matt Mullenweg <m@mullenweg.com> wrote:

> I would suggest getting things in the official plugin repo at least a
> week before that.

Any ETA for getting approved for the plugin repository? I've been  
waiting a couple weeks on a (non-iPhone related) plugin I've been  
trying to submit. It still says pending.

I'm interested in trying my hand at an iPhone plugin but approval for  
the repository may make it impossible to submit by the deadline. Is  
approval per plugin or per submitter so once I get one in others will  
be easy?

--
Doug Smith <doug@smithsrus.com>
<http://www.smithsrus.com>

From mylists at polite.se  Tue Oct  9 13:52:56 2007
From: mylists at polite.se (Alex Polite)
Date: Tue Oct  9 13:53:09 2007
Subject: [wp-hackers] Lightweight forum integration.
Message-ID: <65955b6b0710090652y11cbc194p9917eb658dc216a2@mail.gmail.com>

I'm putting up a blog/forum. Since I already know Wordpress and like
it I figure I might as well use it for this project to.

The blog will have 10 or so editors. The forum will have 100-1000
users (hopefully). The blog and the forum are pretty much two separate
entities. They do not need to share the same tables for usernames. But
I do want to replace the comment function on the blog with a thread on
the forum. So instead of having "write a comment to this post" I'd
like to have "discuss this post on our forum".

What would be the simplest way of doing that?

I'm willing to do a little hacking php-hacking, but if there's already
a plugin that solves this problem I might as well use it.

alex

-- 
http://polite.se
From otto at ottodestruct.com  Tue Oct  9 15:31:46 2007
From: otto at ottodestruct.com (Otto)
Date: Tue Oct  9 15:31:51 2007
Subject: [wp-hackers] Lightweight forum integration.
In-Reply-To: <65955b6b0710090652y11cbc194p9917eb658dc216a2@mail.gmail.com>
References: <65955b6b0710090652y11cbc194p9917eb658dc216a2@mail.gmail.com>
Message-ID: <161617690710090831w3a1b0a90v66c4acec8bac0586@mail.gmail.com>

bbPress has some plugins that allow for this sort of thing.

bbSync says it creates a new thread for each post made in WordPress
and then lets comments on it be the replies in that thread.

WordPress Integration integrates the users tables to be the same.

bbSync: http://bbpress.org/plugins/topic/56
Wordpress Integration: http://bbpress.org/plugins/topic/4

bbPress has some other WordPress integration plugins:
http://bbpress.org/plugins/tags/integration


On 10/9/07, Alex Polite <mylists@polite.se> wrote:
> I'm putting up a blog/forum. Since I already know Wordpress and like
> it I figure I might as well use it for this project to.
>
> The blog will have 10 or so editors. The forum will have 100-1000
> users (hopefully). The blog and the forum are pretty much two separate
> entities. They do not need to share the same tables for usernames. But
> I do want to replace the comment function on the blog with a thread on
> the forum. So instead of having "write a comment to this post" I'd
> like to have "discuss this post on our forum".
>
> What would be the simplest way of doing that?
>
> I'm willing to do a little hacking php-hacking, but if there's already
> a plugin that solves this problem I might as well use it.
>
> alex
>
> --
> http://polite.se
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From otto at ottodestruct.com  Tue Oct  9 15:37:54 2007
From: otto at ottodestruct.com (Otto)
Date: Tue Oct  9 15:38:06 2007
Subject: [wp-hackers] Plugin Help - Tag schema support in Search Everything
In-Reply-To: <7cf9ae490710081626l391bdffx881fdd52b4cbed18@mail.gmail.com>
References: <7cf9ae490710081626l391bdffx881fdd52b4cbed18@mail.gmail.com>
Message-ID: <161617690710090837t2dcdeeectfa767d43683f9157@mail.gmail.com>

Is there any particular reason that you don't want to use the
category__not_in and tag__not_in query_vars?

Just wondering, it seems like that would be a simpler way to do it.


On 10/8/07, Daniel Cameron <dan@scatter3d.com> wrote:
> I'm in desperate need for some fresh eyes to look at my code to see
> what I'm doing wrong. It's most likely a simple fix but I could be
> headed in a completely wrong direction. Hopefully you hackers can help
> either way.
>
> This portion is for category exclusion,
>
>
>     //exclude categories/tags from search
>     function SE4_exclude_categories($where) {
>         global $wp_query;
>         if (!empty($wp_query->query_vars['s'])) {
>             $excl_list = implode(',', explode(',',
> trim($this->options['SE4_exclude_categories_list'])));
>             $where = str_replace('"', '\'', $where);
>             $where = 'AND ('.substr($where, strpos($where, 'AND')+3).' )';
>             //$where .= ' AND (c.category_id NOT IN ( '.$excl_list.' ))';
>             $where .= "AND $wpdb->term_taxonomy.term_id NOT IN ($excl_list)";
>         }
>
>         $this->SE4_log("ex tags where: ".$where);
>         return $where;
>     }
>
>     //join for excluding categories/tags
>     function SE4_exclude_categories_join($join) {
>         global $wp_query, $wpdb;
>
>         if (!empty($wp_query->query_vars['s'])) {
>
>
>             $where .= "LEFT JOIN $wpdb->term_relationships ON
> ($wpdb->posts.ID = $wpdb->term_relationships.object_id) LEFT JOIN
> $wpdb->term_taxonomy ON ($wpdb->term_relationships.term_taxonomy_id =
> $wpdb->term_taxonomy.term_taxonomy_id)";
>         }
>         $this->SE4_log("category join: ".$join);
>         return $join;
>     }
>
>
> ---------------------
> Here is the code for including the tag name in the search that I can't
> get to work as well,
> ---------------------
>
>     //search tags
>     function SE4_search_tags($where) {
>         global $wp_query, $wpdb;
>         if (!empty($wp_query->query_vars['s'])) {
>             $where .= " OR terms_name LIKE '%" .
> $wpdb->escape($wp_query->query_vars['s']) . "%' ";
>         }
>
>         $this->SE4_log("tags where: ".$where);
>
>         return $where;
>     }
>
>     //join for searching tags
>     function SE4_search_tags_join($join) {
>         global $wp_query, $wpdb;
>
>         if (!empty($wp_query->query_vars['s'])) {
>
>             $join .= "LEFT JOIN $wpdb->term_relationships ON
> ($wpdb->posts.ID = $wpdb->term_relationships.object_id)";
>         }
>         $this->SE4_log("tag join: ".$join);
>         return $join;
>     }
>
>
>
> Tag search just doesn't work, no errors. The exclusion does produce an error.
>
>
> WordPress database error: [You have an error in your SQL syntax; check
> the manual that corresponds to your MySQL server version for the right
> syntax to use near 'NOT IN (1) ORDER BY post_date DESC LIMIT 0, 10' at
> line 1]
>                          SELECT DISTINCT SQL_CALC_FOUND_ROWS 23_posts.* FROM 23_posts
> WHERE 1=1 AND ( (((post_title LIKE '%test-asdf%') OR (post_content
> LIKE '%test%'))) AND post_type = 'post' AND (post_status = 'publish'
> OR post_status = 'private') )AND .term_id NOT IN (1) ORDER BY
> post_date DESC LIMIT 0, 10
>
>
> Here's the plugin repo and browser,
> http://svn.scatter3d.com/search-everything/
> http://searcheverything.scatter3d.com:3000/browser/trunk
> However this code is not checked in (since it clearly doesn't work).
>
>
> Thanks.
>
>
>
>
>
> --
> Dan Cameron
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From dan at scatter3d.com  Tue Oct  9 16:28:30 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Tue Oct  9 16:28:36 2007
Subject: [wp-hackers] Plugin Help - Tag schema support in Search Everything
In-Reply-To: <161617690710090837t2dcdeeectfa767d43683f9157@mail.gmail.com>
References: <7cf9ae490710081626l391bdffx881fdd52b4cbed18@mail.gmail.com>
	<161617690710090837t2dcdeeectfa767d43683f9157@mail.gmail.com>
Message-ID: <7cf9ae490710090928o1311c1b7je3a92174777b22a4@mail.gmail.com>

On 10/9/07, Otto <otto@ottodestruct.com> wrote:
> Is there any particular reason that you don't want to use the
> category__not_in and tag__not_in query_vars?

I wasn't familiar with those variables until now. Somehow I missed this post,
http://boren.nu/archives/2007/10/01/taxonomy-intersections-and-unions/

> Just wondering, it seems like that would be a simpler way to do it.

It definitely seems easier, let's see if it's as simple as it looks
and I can figure it out.

Either way, if someone has knows the correct code just send it my way.

Thanks to all.



-- 
Dan Cameron
From lloydomattic at gmail.com  Tue Oct  9 18:58:04 2007
From: lloydomattic at gmail.com (Lloyd Budd)
Date: Tue Oct  9 19:25:57 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <470913C6.2090502@callum-macdonald.com>
References: <470913C6.2090502@callum-macdonald.com>
Message-ID: <70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>

On 10/7/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com> wrote:
> G'day,
>
> I just updated WP Mail SMTP to version 0.4. However, when you download
> the ZIP file from wordpress.org the files are inside a nested directory:
> http://downloads.wordpress.org/plugin/wp-mail-smtp.0.4.zip
>
> The zip contains the following directory structure:
> /wp-mail-smtp/
> /wp-mail-smtp/readme.txt
> /wp-mail-smtp/screenshot.png
> /wp-mail-smtp/wp-mail-smtp/
> /wp-mail-smtp/wp-mail-smtp/wp_mail_smtp.php
>
> The correct structure is just:
> /wp-mail-smtp/
> /wp-mail-smtp/wp_mail_smtp.php
>
> My readme in trunk points to the stable tag as 0.4, the dir structure
> there is
> tags/0.4/readme.txt
> tags/0.4/screenshot.png
> tags/0.4/wp-mail-smtp/
> tags/0.4/wp-mail-smtp/wp_mail_smtp.php
>
> Anyone got any clues? Is this a bug? I notice that plugins that haven't
> been updated for a while (Akismet for example) are fine. Could it be a
> recent change?

On 10/9/07, Michael D Adams <mda@blogwaffe.com> wrote:

This is the intended behavior.  All download zips get wrapped in a
directory (in your case wp-mail-smtp) for consistency.  There is no
need to put your files in subdirectory.  See
http://wordpress.org/extend/plugins/about/faq/

Akismet's zip file is simpler, because it puts its files directly in trunk:
http://svn.wp-plugins.org/akismet/trunk/

Michael

PS:  Sorry - I never got these emails from the wp-hackers list
(something must have been wrong with my mail server or theirs), so I
couldn't reply on list.
From ai2097 at users.sourceforge.net  Tue Oct  9 19:42:53 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Tue Oct  9 19:43:01 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>
References: <470913C6.2090502@callum-macdonald.com>
	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>
Message-ID: <20071009124253.741212cc@remstate.com>

On Tue, 9 Oct 2007 11:58:04 -0700, "Lloyd Budd"
<lloydomattic@gmail.com> wrote:

<snip>
> This is the intended behavior.  All download zips get wrapped in a
> directory (in your case wp-mail-smtp) for consistency.  There is no
> need to put your files in subdirectory.  See
> http://wordpress.org/extend/plugins/about/faq/

It's a great big PITA if you have files you don't want to distribute,
though. It would make a lot more sense for only files in the
appropriately-named subdirectory to get packaged. Case in point, I have
a whole series of tests that belong in the repository, and are tied to
the release version, but shouldn't be distributed in the tarball. I've
had to resort to tagging two "releases", one real one, and one
exclusively for the benefit of the packager.

Similarly, the screenshots don't need to be in the release zip
(especially since the images can't have reasonable names), but the
current packaging scheme *forces* the image files to be included if you
want the screenshots to show up on the site.

I really think that the current packaging logic is at best a misfeature,
if not a bug. :/


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From mikea at turbonet.com  Tue Oct  9 20:07:43 2007
From: mikea at turbonet.com (Michael D Adams)
Date: Tue Oct  9 20:08:56 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <20071009124253.741212cc@remstate.com>
References: <470913C6.2090502@callum-macdonald.com>
	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>
	<20071009124253.741212cc@remstate.com>
Message-ID: <4F3ECB91-31D2-42FA-BFD1-F6ED14258412@turbonet.com>

On Oct 9, 2007, at 12:42 PM, Travis Snoozy wrote:
> It's a great big PITA if you have files you don't want to distribute,
> though.

What if the "Stable Tag" field in the readme could specify a  
directory instead of just a tag name?

Stable Tag: 2.1/sub-directory

would result in tags/2.1/sub-directory/ being packaged as the  
download zip.  For the "Other Versions" section of the plugin  
directory, we'd probably still package the whole "root" directory  
(tags/2.1/) because we can't know if all tags have the same directory  
structure.

Would that help with these issues?  Thoughts?

Michael
From kccricket at gmail.com  Tue Oct  9 21:45:40 2007
From: kccricket at gmail.com (Keith Constable)
Date: Tue Oct  9 21:46:00 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <20071009124253.741212cc@remstate.com>
References: <470913C6.2090502@callum-macdonald.com>	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>
	<20071009124253.741212cc@remstate.com>
Message-ID: <470BF684.5040803@gmail.com>

Travis Snoozy wrote:
> It's a great big PITA if you have files you don't want to distribute,
> though. It would make a lot more sense for only files in the
> appropriately-named subdirectory to get packaged. Case in point, I have
> a whole series of tests that belong in the repository, and are tied to
> the release version, but shouldn't be distributed in the tarball. I've
> had to resort to tagging two "releases", one real one, and one
> exclusively for the benefit of the packager.

Could you provide examples of other automated packaging systems that
behave that way?  It was my impression that tagging different versions
for different audiences is a common practice.

> Similarly, the screenshots don't need to be in the release zip
> (especially since the images can't have reasonable names), but the
> current packaging scheme *forces* the image files to be included if you
> want the screenshots to show up on the site.

Just to clarify, what's your logical reasoning for not including
screenshots in the release zip?

-Keith Constable
http://kccricket.net
From dan at scatter3d.com  Tue Oct  9 22:22:19 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Tue Oct  9 22:22:25 2007
Subject: [wp-hackers] Plugin Help - Tag schema support in Search Everything
In-Reply-To: <161617690710090837t2dcdeeectfa767d43683f9157@mail.gmail.com>
References: <7cf9ae490710081626l391bdffx881fdd52b4cbed18@mail.gmail.com>
	<161617690710090837t2dcdeeectfa767d43683f9157@mail.gmail.com>
Message-ID: <7cf9ae490710091522sefc801di73761b5cf378cbb2@mail.gmail.com>

On 10/9/07, Otto <otto@ottodestruct.com> wrote:
>
> Just wondering, it seems like that would be a simpler way to do it.
>
No luck, it's actually causing me to give up since I'm already over my
budgeted hour of of SE fixes. But at least I learned a few things in
the unproductive process.

Hopefully one of the many contributers will send in an update or
Christine will "come to the rescue".

Thanks
-- 
Dan Cameron
From morty at gmx.net  Tue Oct  9 22:42:55 2007
From: morty at gmx.net (=?UTF-8?B?TW9yaXR6ICdNb3J0eScgU3Ryw7xiZQ==?=)
Date: Tue Oct  9 22:43:11 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <4F3ECB91-31D2-42FA-BFD1-F6ED14258412@turbonet.com>
References: <470913C6.2090502@callum-macdonald.com>	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>	<20071009124253.741212cc@remstate.com>
	<4F3ECB91-31D2-42FA-BFD1-F6ED14258412@turbonet.com>
Message-ID: <470C03EF.80707@gmx.net>

Michael D Adams schrieb:
> On Oct 9, 2007, at 12:42 PM, Travis Snoozy wrote:
>> It's a great big PITA if you have files you don't want to distribute,
>> though.
>
> What if the "Stable Tag" field in the readme could specify a directory
> instead of just a tag name?
>
> Stable Tag: 2.1/sub-directory
>
> would result in tags/2.1/sub-directory/ being packaged as the download
> zip.  For the "Other Versions" section of the plugin directory, we'd
> probably still package the whole "root" directory (tags/2.1/) because
> we can't know if all tags have the same directory structure.
>
> Would that help with these issues?  Thoughts?
>
Besides the FAQ saying:
>
>
>       Can't I put my files in a subdirectory of |trunk/|?
>
> You can, but it's silly
and I don't agree that it's silly, it would at least help me. Especially
as the dir assigned to me is post-notification, and the plugin works in
post_notification (underline!), ever since. I requested
post_notification and got post-notification, but didn't bother as by
that time everything was working fine and after that, I didn't get any
replies to my mail any more.

Morty

From ai2097 at users.sourceforge.net  Tue Oct  9 22:45:11 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Tue Oct  9 22:45:17 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <470BF684.5040803@gmail.com>
References: <470913C6.2090502@callum-macdonald.com>
	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>
	<20071009124253.741212cc@remstate.com> <470BF684.5040803@gmail.com>
Message-ID: <20071009154511.35028e97@remstate.com>

On Tue, 09 Oct 2007 17:45:40 -0400, Keith Constable
<kccricket@gmail.com> wrote:

> Travis Snoozy wrote:
> > It's a great big PITA if you have files you don't want to
> > distribute, though. It would make a lot more sense for only files
> > in the appropriately-named subdirectory to get packaged. Case in
> > point, I have a whole series of tests that belong in the
> > repository, and are tied to the release version, but shouldn't be
> > distributed in the tarball. I've had to resort to tagging two
> > "releases", one real one, and one exclusively for the benefit of
> > the packager.
> 
> Could you provide examples of other automated packaging systems that
> behave that way?  It was my impression that tagging different versions
> for different audiences is a common practice.

Define "automated packaging system". The closest thing I can think of
is GNU autotools (info automake), which makes generally-correct
guesses, but also lets you tune exactly what does and does not
go in the release tarball. In any case, what is in SVN should *always*
be construed as the developer version -- the user-version that gets
released is almost always a subset of the dev version (generated from
the dev version, e.g., with make dist). One should never have to
tag the same thing twice in the repo to do a single release.

> > Similarly, the screenshots don't need to be in the release zip
> > (especially since the images can't have reasonable names), but the
> > current packaging scheme *forces* the image files to be included if
> > you want the screenshots to show up on the site.
> 
> Just to clarify, what's your logical reasoning for not including
> screenshots in the release zip?

For In Series 3.0.7 procured from WordPress.com...

Size of the zipfile:                  272KiB
Size of just the unzipped PNG files:  264KiB
Size of just the PNG files zipped:    249KiB
Size of just the unzipped source:     104KiB
Size of just the source files zipped:  24KiB

Now, when the zipped screenshots are twice the size of the
uncompressed code, and *ten* times the size of the compressed code, I
have to wonder: are people downloading my plugin, or the screenshots?
If people wanted to see the screenshots, they can go to the
screenshots page either off WordPress.com, or off the plugin's home
page. In any case, those screenshots aren't used in the final
installation (which is supposed to just be "unzip this in your plugins
directory"), so the most likely thing that will happen is (1) they'll
be immediately deleted, or (2) they'll sit around and be useless until
an upgrade comes along. It's an utter waste of bandwidth and space.

I might want a dozen screenshots in the future. Or two dozen. But that
will bloat my release, so I'm effectively limited on what I can show
off (20 screenshots would be ~1MiB). Forcing people (especially people
who might be on dialup!) to download screenshots that they may
not even care about is just plain rude. Not only is it rude, it's
redundant, and pretty useless because the screenshots aren't allowed to
have useful names (if you want them to show up on WordPress.org).


Now, let me turn the question around: what *is* the "logical reasoning
for including screenshots in the release zip"? ;)


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From morty at gmx.net  Tue Oct  9 22:51:43 2007
From: morty at gmx.net (=?UTF-8?B?TW9yaXR6ICdNb3J0eScgU3Ryw7xiZQ==?=)
Date: Tue Oct  9 22:51:59 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <470BF684.5040803@gmail.com>
References: <470913C6.2090502@callum-macdonald.com>	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>	<20071009124253.741212cc@remstate.com>
	<470BF684.5040803@gmail.com>
Message-ID: <470C05FF.60305@gmx.net>


>
> Just to clarify, what's your logical reasoning for not including
> screenshots in the release zip?
>
>   
The triple the traffic - and download time - and have 0,0% advantage.

Morty
From dan at scatter3d.com  Tue Oct  9 23:07:36 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Tue Oct  9 23:08:48 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <20071009124253.741212cc@remstate.com>
References: <470913C6.2090502@callum-macdonald.com>
	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>
	<20071009124253.741212cc@remstate.com>
Message-ID: <7cf9ae490710091607m690a4c37u900315fced8cd714@mail.gmail.com>

On 10/9/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
> On Tue, 9 Oct 2007 11:58:04 -0700, "Lloyd Budd"
>
> Similarly, the screenshots don't need to be in the release zip
> (especially since the images can't have reasonable names), but the
> current packaging scheme *forces* the image files to be included if you
> want the screenshots to show up on the site.
>

I was going to request that extend only pull in the screenshots from
the trunk, that way we could tag releases without screenshots for the
packager to create the downloads but the major problem would be the
need for different screenshots for different tags. So the only
solution I could think of would actually complicate things.

-- 
Dan Cameron
From viper at viper007bond.com  Tue Oct  9 23:12:33 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Tue Oct  9 23:12:44 2007
Subject: [wp-hackers] iPhone Plugin Competition: Presenting WPhone
Message-ID: <8f93a7390710091612x685e96fx8a52caf218958f5d@mail.gmail.com>

( No clue what this is about? Then see
http://groups.google.com/group/wp-hackers/msg/8f0d65954e9dacc3
)

Stephane Daury (stephdau), Doug Stewart (zamoose), and I (Viper007Bond) are
proud to announce our entry into the iPhone interface compeition: WPhone!

http://wordpress.org/extend/plugins/wphone/
http://wordpress.org/extend/plugins/wphone/screenshots/


First, a note: while it _should_ work perfectly fine on an iPhone (we all
coded and tested using Safari), none of us own or have access to an actual
iPhone, so forgive us if something doesn't work as expected on it. ;)

Anyway, on to the features list:

* Support for ALL mobile devices. When a rich device (i.e. iPhone or iPod
Touch) is detected, extra CSS and Javascript is loaded transforming the
"lite" XHTML valid interface into an version that resembles the existing
iPod/iPhone interface (see screenshots). Your mobile phone doesn't have to
be a "known device" in order to use the lite interface due to the new
checkbox on the login form.

* All HTML, Javascript, and CSS is sent GZip'ed to cut down on bandwidth
required. CSS is loaded inline on the "lite" version to avoid the dreaded
pause-and-reload issue on low memory phones (it'll load the page, pause,
then apply the CSS).

* Existing URLs work and load the expected screen (for example, if you click
an "edit" link on your main blog, it will take you to the edit form for that
post/comment/whatever).

* Support for posts, pages, comments, categories, tags, users, etc.

* AJAX post and comment listing ("get more")

* Fully hookable / filterable -- you can add pages to the interface via a
plugin (see the included example plugin)

* Plus other stuff I'm probably forgetting!  (Doug, Stephane -- help me out
here, hehe)


Hope you all enjoy the plugin and we look forward to your feedback (it'd be
appreciated). We still have some more features and stuff planned, but we
decided it was time to get an initial version out the door. ;)

And here's hoping we win! :P

-- 
Viper007Bond | http://www.viper007bond.com/
From ai2097 at users.sourceforge.net  Tue Oct  9 23:24:26 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Tue Oct  9 23:24:31 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <7cf9ae490710091607m690a4c37u900315fced8cd714@mail.gmail.com>
References: <470913C6.2090502@callum-macdonald.com>
	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>
	<20071009124253.741212cc@remstate.com>
	<7cf9ae490710091607m690a4c37u900315fced8cd714@mail.gmail.com>
Message-ID: <20071009162426.5094027f@remstate.com>

On Tue, 9 Oct 2007 16:07:36 -0700, "Daniel Cameron" <dan@scatter3d.com>
wrote:

> On 10/9/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
> > On Tue, 9 Oct 2007 11:58:04 -0700, "Lloyd Budd"
> >
> > Similarly, the screenshots don't need to be in the release zip
> > (especially since the images can't have reasonable names), but the
> > current packaging scheme *forces* the image files to be included if
> > you want the screenshots to show up on the site.
> >
> 
> I was going to request that extend only pull in the screenshots from
> the trunk, that way we could tag releases without screenshots for the
> packager to create the downloads but the major problem would be the
> need for different screenshots for different tags. So the only
> solution I could think of would actually complicate things.
> 

It makes sense to tag screenshots with the version, because they are in
fact tied to that version. Everything resembling release X.Y.Z should
be kept together -- that's the point of tagging. Michael had a good
solution that I think hits pretty much everything:

On Tue, 9 Oct 2007 13:07:43 -0700, Michael D Adams <mikea@turbonet.com>
wrote:
> What if the "Stable Tag" field in the readme could specify a  
> directory instead of just a tag name?
> 
> Stable Tag: 2.1/sub-directory

This is an excellent idea. The screenshots would be able to stay with
the tag, it's backwards-compatible with existing plugins, and it lets
us control-freaks cleanly specify what we want zipped up and
distributed. So long as the readme is pulled in from 2.1/, not
2.1/sub-directory, it should remain fully compatible with
WordPress.org/extend.



-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From viper at viper007bond.com  Tue Oct  9 23:24:56 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Tue Oct  9 23:25:07 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <7cf9ae490710091607m690a4c37u900315fced8cd714@mail.gmail.com>
References: <470913C6.2090502@callum-macdonald.com>
	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>
	<20071009124253.741212cc@remstate.com>
	<7cf9ae490710091607m690a4c37u900315fced8cd714@mail.gmail.com>
Message-ID: <8f93a7390710091624i7572b64fm2eb669e5e5d80a40@mail.gmail.com>

Except that many of us, including me, use trunk for the release copy.

Personally, I think it's fine how it is.

On 10/9/07, Daniel Cameron <dan@scatter3d.com> wrote:
>
> On 10/9/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
> > On Tue, 9 Oct 2007 11:58:04 -0700, "Lloyd Budd"
> >
> > Similarly, the screenshots don't need to be in the release zip
> > (especially since the images can't have reasonable names), but the
> > current packaging scheme *forces* the image files to be included if you
> > want the screenshots to show up on the site.
> >
>
> I was going to request that extend only pull in the screenshots from
> the trunk, that way we could tag releases without screenshots for the
> packager to create the downloads but the major problem would be the
> need for different screenshots for different tags. So the only
> solution I could think of would actually complicate things.
>
> --
> Dan Cameron
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From dan at scatter3d.com  Wed Oct 10 00:27:46 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Wed Oct 10 00:27:52 2007
Subject: [wp-hackers] iPhone Plugin Competition: Presenting WPhone
In-Reply-To: <8f93a7390710091612x685e96fx8a52caf218958f5d@mail.gmail.com>
References: <8f93a7390710091612x685e96fx8a52caf218958f5d@mail.gmail.com>
Message-ID: <7cf9ae490710091727h2e953081q79ab9104a908b47e@mail.gmail.com>

On 10/9/07, Viper007Bond <viper@viper007bond.com> wrote:
> Stephane Daury (stephdau), Doug Stewart (zamoose), and I (Viper007Bond) are
> proud to announce our entry into the iPhone interface compeition: WPhone!
>
> http://wordpress.org/extend/plugins/wphone/
> http://wordpress.org/extend/plugins/wphone/screenshots/

Wow, great design guys. The design is very similar to the concept I
originally had since it closely resembles the iPhone interface design
for it's applications. I'll have to look into how you managed some of
the things that I had already planned for our next release, which will
be before the compition deadline.

I would suggest that your team or whoever is managing the interface
head in to an Apple store or ATT store and test it on an actual
iPhone, there's some spacing issues and I haven't looked at the code
you're using but some of the sliding effects are breaking the loading
or transition.

Overall, I like it and Jared and I have some work ahead of us to order
to gain the upper hand...muahhahah. Good luck.

Jared: I told you we needed some AJAX goodness, ;)


-- 
Dan Cameron
From wordpress at tekartist.org  Wed Oct 10 00:55:22 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Wed Oct 10 00:55:30 2007
Subject: [wp-hackers] iPhone Plugin Competition: Presenting WPhone
In-Reply-To: <8f93a7390710091612x685e96fx8a52caf218958f5d@mail.gmail.com>
References: <8f93a7390710091612x685e96fx8a52caf218958f5d@mail.gmail.com>
Message-ID: <46E6D07E-7FAC-44D6-8E6A-74F23B7C80B5@tekartist.org>


Ah, done playing alpha dad for the night (lest one wakes up). :)

I just wanted to publicly state how great of an experience this has  
all been.
 From 3 *strangers* randomly teaming up and immediately getting  
along, to the knowledge we've sponged up, and all while going through  
some pretty big personal events with all parties in the last 3 weeks.

Fun stuff people. Fun stuff.

WPhone was actually designed and written with any lightweight/ 
embedded and accessibility (braille readers, etc) devices/software in  
mind.

If it works as great as it does on my feature-deficient Motorola v551  
(same browser as the popular RAZR, less RAM), you probably have good  
chances it'll work with your phone/PDA/etc as well. Please provide us  
with feedback on the widest array of devices, and we'll strive to  
support as many as we can.

Of particular interest at this time are:
- iPhone/iPod Touch (of course),
- Blackberries,
- Nokia N60WebKit,
- Mobile Opera,
- Open Moko,
- and accessibility devices

... but all feedback will be welcomed.

On this, I'll let anyone interested play with the app, and let us  
know how we did.

Cheers, and thanks D & V.

Stephane






On Oct 09, 2007, at 19:12, Viper007Bond wrote:

> ( No clue what this is about? Then see
> http://groups.google.com/group/wp-hackers/msg/8f0d65954e9dacc3
> )
>
> Stephane Daury (stephdau), Doug Stewart (zamoose), and I  
> (Viper007Bond) are
> proud to announce our entry into the iPhone interface compeition:  
> WPhone!
>
> http://wordpress.org/extend/plugins/wphone/
> http://wordpress.org/extend/plugins/wphone/screenshots/
>
>
> First, a note: while it _should_ work perfectly fine on an iPhone  
> (we all
> coded and tested using Safari), none of us own or have access to an  
> actual
> iPhone, so forgive us if something doesn't work as expected on it. ;)
>
> Anyway, on to the features list:
>
> * Support for ALL mobile devices. When a rich device (i.e. iPhone  
> or iPod
> Touch) is detected, extra CSS and Javascript is loaded transforming  
> the
> "lite" XHTML valid interface into an version that resembles the  
> existing
> iPod/iPhone interface (see screenshots). Your mobile phone doesn't  
> have to
> be a "known device" in order to use the lite interface due to the new
> checkbox on the login form.
>
> * All HTML, Javascript, and CSS is sent GZip'ed to cut down on  
> bandwidth
> required. CSS is loaded inline on the "lite" version to avoid the  
> dreaded
> pause-and-reload issue on low memory phones (it'll load the page,  
> pause,
> then apply the CSS).
>
> * Existing URLs work and load the expected screen (for example, if  
> you click
> an "edit" link on your main blog, it will take you to the edit form  
> for that
> post/comment/whatever).
>
> * Support for posts, pages, comments, categories, tags, users, etc.
>
> * AJAX post and comment listing ("get more")
>
> * Fully hookable / filterable -- you can add pages to the interface  
> via a
> plugin (see the included example plugin)
>
> * Plus other stuff I'm probably forgetting!  (Doug, Stephane --  
> help me out
> here, hehe)
>
>
> Hope you all enjoy the plugin and we look forward to your feedback  
> (it'd be
> appreciated). We still have some more features and stuff planned,  
> but we
> decided it was time to get an initial version out the door. ;)
>
> And here's hoping we win! :P
>
> -- 
> Viper007Bond | http://www.viper007bond.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From m at mullenweg.com  Wed Oct 10 01:32:17 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Oct 10 01:32:20 2007
Subject: [wp-hackers] Re: iPhone plugin contest close
In-Reply-To: <2FA0421D-11BE-42B2-91C5-AE1B4EB166BF@smithsrus.com>
References: <20071009120100.165717E81@comox.textdrive.com>
	<2FA0421D-11BE-42B2-91C5-AE1B4EB166BF@smithsrus.com>
Message-ID: <470C2BA1.9070105@mullenweg.com>

Doug Smith wrote:
> Any ETA for getting approved for the plugin repository? I've been 
> waiting a couple weeks on a (non-iPhone related) plugin I've been trying 
> to submit. It still says pending.

It's usually 1-2 days, but there's a backlog from when I was in Europe. 
I approve about 30 a day.

> I'm interested in trying my hand at an iPhone plugin but approval for 
> the repository may make it impossible to submit by the deadline. Is 
> approval per plugin or per submitter so once I get one in others will be 
> easy?

You can always email me directly with your plugin name and username if 
you're worried about that.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From wordpress at tekartist.org  Wed Oct 10 01:32:42 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Wed Oct 10 01:32:54 2007
Subject: [wp-hackers] iPhone Plugin Competition: Presenting WPhone
In-Reply-To: <7cf9ae490710091727h2e953081q79ab9104a908b47e@mail.gmail.com>
References: <8f93a7390710091612x685e96fx8a52caf218958f5d@mail.gmail.com>
	<7cf9ae490710091727h2e953081q79ab9104a908b47e@mail.gmail.com>
Message-ID: <22D45004-8A8B-4CC3-A0D8-0122F0627B73@tekartist.org>


On Oct 09, 2007, at 20:27, Daniel Cameron wrote:

> On 10/9/07, Viper007Bond <viper@viper007bond.com> wrote:
>> Stephane Daury (stephdau), Doug Stewart (zamoose), and I  
>> (Viper007Bond) are
>> proud to announce our entry into the iPhone interface compeition:  
>> WPhone!
>>
>> http://wordpress.org/extend/plugins/wphone/
>> http://wordpress.org/extend/plugins/wphone/screenshots/
>
> Wow, great design guys. The design is very similar to the concept I
> originally had since it closely resembles the iPhone interface design
> for it's applications. I'll have to look into how you managed some of
> the things that I had already planned for our next release, which will
> be before the compition deadline.

I really like your interface too. :)
We went with and extended iUI, for consistency and to focus on the  
back-end.


> I would suggest that your team or whoever is managing the interface
> head in to an Apple store or ATT store and test it on an actual
> iPhone, there's some spacing issues and I haven't looked at the code
> you're using but some of the sliding effects are breaking the loading
> or transition.

Big challenge outside of the US. :p
But I did locate a few locations to get access to a Touch shortly  
(and a bunch of other devices).


> Overall, I like it and Jared and I have some work ahead of us to order
> to gain the upper hand...muahhahah. Good luck.

Ditto on all counts. :)


> Jared: I told you we needed some AJAX goodness, ;)

 From the screenshots, you've got one beautiful date selector though.

Stephane
From zamoose at gmail.com  Wed Oct 10 02:05:54 2007
From: zamoose at gmail.com (Doug Stewart)
Date: Wed Oct 10 02:06:03 2007
Subject: [wp-hackers] iPhone Plugin Competition: Presenting WPhone
In-Reply-To: <46E6D07E-7FAC-44D6-8E6A-74F23B7C80B5@tekartist.org>
References: <8f93a7390710091612x685e96fx8a52caf218958f5d@mail.gmail.com>
	<46E6D07E-7FAC-44D6-8E6A-74F23B7C80B5@tekartist.org>
Message-ID: <71ddd7490710091905ga06d196r76377851a0d89850@mail.gmail.com>

I'd like to reiterate what Stephane and Viper have said: it's been a
pleasure to work with two complete  strangers on a project of this
magnitude.  They both did yeoman's work on this project.

Also, a little plug for our site, http://wphoneplugin.org and a plug
for the support forums at http://forum.wphoneplugin.org.

*grin*

-- 
-Doug

http://literalbarrage.org/blog/
From dan at scatter3d.com  Wed Oct 10 02:52:07 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Wed Oct 10 02:52:14 2007
Subject: [wp-hackers] iPhone Plugin Competition: Presenting WPhone
In-Reply-To: <22D45004-8A8B-4CC3-A0D8-0122F0627B73@tekartist.org>
References: <8f93a7390710091612x685e96fx8a52caf218958f5d@mail.gmail.com>
	<7cf9ae490710091727h2e953081q79ab9104a908b47e@mail.gmail.com>
	<22D45004-8A8B-4CC3-A0D8-0122F0627B73@tekartist.org>
Message-ID: <7cf9ae490710091952g3e22574bn3fab409ef1094c62@mail.gmail.com>

On 10/9/07, Stephane Daury <wordpress@tekartist.org> wrote:
>  From the screenshots, you've got one beautiful date selector though.
>

:)

That's the default picklist selector the iPhone gives. You'd have it
too for any picklist.



-- 
Dan Cameron
From jared at pacific22.com  Wed Oct 10 03:01:33 2007
From: jared at pacific22.com (Jared Bangs)
Date: Wed Oct 10 03:01:40 2007
Subject: [wp-hackers] iPhone Plugin Competition: Presenting WPhone
In-Reply-To: <7cf9ae490710091727h2e953081q79ab9104a908b47e@mail.gmail.com>
References: <8f93a7390710091612x685e96fx8a52caf218958f5d@mail.gmail.com>
	<7cf9ae490710091727h2e953081q79ab9104a908b47e@mail.gmail.com>
Message-ID: <7b4922320710092001n52c454cay3cd361028a6ae464@mail.gmail.com>

On 10/9/07, Daniel Cameron <dan@scatter3d.com> wrote:
>
>
> Overall, I like it and Jared and I have some work ahead of us to order
> to gain the upper hand...muahhahah. Good luck.


Dan, you forgot to plug the URL for our entry in the contest... [1] ...
since we're plugging. :-)

For those who may be interested, I just finished writing up the preliminary
documentation for how to create a plugin within our MobileAdmin plugin [2].

Jared: I told you we needed some AJAX goodness, ;)


We can always add more if necessary, but I can't think of any places in the
UI that really need it at the moment. Like I said before, AJAX just for the
sake of AJAX is just silly and often a waste of connections to / from the
server. It's useful for some things (like auto-save), but I think
(especially on mobile devices) there are a lot of places where it just adds
complexity without really adding value.

[1] http://wordpress.org/extend/plugins/mobileadmin/
[2] http://freepressblog.org/extending-the-wp-mobileadmin-plugin/

OK, enough shameless self-promotion here (at least from me).

- Jared
From speedboxer at gmail.com  Wed Oct 10 03:31:38 2007
From: speedboxer at gmail.com (Matt)
Date: Wed Oct 10 03:31:49 2007
Subject: [wp-hackers] Re: iPhone plugin contest close
In-Reply-To: <470C2BA1.9070105@mullenweg.com>
References: <20071009120100.165717E81@comox.textdrive.com>
	<2FA0421D-11BE-42B2-91C5-AE1B4EB166BF@smithsrus.com>
	<470C2BA1.9070105@mullenweg.com>
Message-ID: <b88434820710092031y6bb3cb95q860537403b0acb81@mail.gmail.com>

On 10/9/07, Matt Mullenweg <m@mullenweg.com> wrote:
>
> It's usually 1-2 days, but there's a backlog from when I was in Europe.
> I approve about 30 a day.
>

Maybe you should get some help with that? :P I'd gladly help out (I've even
installed/configured Trac/SVN on a server before), if you want help. :P

-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From lists.automattic.com at callum-macdonald.com  Wed Oct 10 17:47:20 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 10 17:47:44 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <20071009162426.5094027f@remstate.com>
References: <470913C6.2090502@callum-macdonald.com>	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>	<20071009124253.741212cc@remstate.com>	<7cf9ae490710091607m690a4c37u900315fced8cd714@mail.gmail.com>
	<20071009162426.5094027f@remstate.com>
Message-ID: <470D1028.10904@callum-macdonald.com>

+1 for 2.1/sub-directory

Travis Snoozy wrote:
> On Tue, 9 Oct 2007 16:07:36 -0700, "Daniel Cameron" <dan@scatter3d.com>
> wrote:
>
>   
>> On 10/9/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
>>     
>>> On Tue, 9 Oct 2007 11:58:04 -0700, "Lloyd Budd"
>>>
>>> Similarly, the screenshots don't need to be in the release zip
>>> (especially since the images can't have reasonable names), but the
>>> current packaging scheme *forces* the image files to be included if
>>> you want the screenshots to show up on the site.
>>>
>>>       
>> I was going to request that extend only pull in the screenshots from
>> the trunk, that way we could tag releases without screenshots for the
>> packager to create the downloads but the major problem would be the
>> need for different screenshots for different tags. So the only
>> solution I could think of would actually complicate things.
>>
>>     
>
> It makes sense to tag screenshots with the version, because they are in
> fact tied to that version. Everything resembling release X.Y.Z should
> be kept together -- that's the point of tagging. Michael had a good
> solution that I think hits pretty much everything:
>
> On Tue, 9 Oct 2007 13:07:43 -0700, Michael D Adams <mikea@turbonet.com>
> wrote:
>   
>> What if the "Stable Tag" field in the readme could specify a  
>> directory instead of just a tag name?
>>
>> Stable Tag: 2.1/sub-directory
>>     
>
> This is an excellent idea. The screenshots would be able to stay with
> the tag, it's backwards-compatible with existing plugins, and it lets
> us control-freaks cleanly specify what we want zipped up and
> distributed. So long as the readme is pulled in from 2.1/, not
> 2.1/sub-directory, it should remain fully compatible with
> WordPress.org/extend.
>
>
>
>   

From gilmanhunt at comcast.net  Thu Oct 11 00:57:13 2007
From: gilmanhunt at comcast.net (Russ Gilman-Hunt)
Date: Thu Oct 11 00:57:20 2007
Subject: [wp-hackers] wp_insert_link() --> rss output
Message-ID: <1192064233.5103.9.camel@badger>

Good evening.

First, I'm happy to write a patch for this, I just want to know where I
should patch it and keep most consistent with wp development.

I'm working with feedwordpress, and I'm getting bad urls imported. It
calls wp_insert_link() for 2.0+ versions of wordpress.  The urls have
unescaped ampersands (foo.php?bar=blah&baz=blah ). 

Looking up the function wp_insert_link, it doesn't do any "fixoring" of
the url it accepts.  wp_insert_link is called by some import scripts and
by the bookmark.php script.

I'm pretty sure that "urls are supposed to have the ampersand escaped,"
but that almost all browsers will accept them unescaped (by escaped, I
mean replaced with &amp;, not really escaped ).  However, it's leading
to breakage with RSS readers; feedburner won't take one of my feeds
because of the ampersands (actually because &baz does not end with a
semicolon, but that's the problem). 

So I have three choices;

1) I can send the author of feedwordpress a patch to escape ampersands. 

2) I can submit a patch to wp-admin/includes/bookmark.php (where this
function is defined).

3) I can submit a patch to the feed scripts ( wp-includes/feed.php )

Which one would be the best to do this?

From docwhat+list.wp.hackers at gerf.org  Thu Oct 11 14:57:39 2007
From: docwhat+list.wp.hackers at gerf.org (Christian =?iso-8859-1?Q?H=F6ltje?=)
Date: Thu Oct 11 15:00:04 2007
Subject: [wp-hackers] Re: wp_insert_link() --> rss output
In-Reply-To: <1192064233.5103.9.camel@badger>
References: <1192064233.5103.9.camel@badger>
Message-ID: <20071011145738.GA11328@gerf.org>

* Russ Gilman-Hunt (gilmanhunt@comcast.net) [071010 20:58]:
> Good evening.
> 
> First, I'm happy to write a patch for this, I just want to know where I
> should patch it and keep most consistent with wp development.
> 
> I'm working with feedwordpress, and I'm getting bad urls
> imported. It calls wp_insert_link() for 2.0+ versions of wordpress.
> The urls have unescaped ampersands (foo.php?bar=blah&baz=blah ).
> 
> Looking up the function wp_insert_link, it doesn't do any "fixoring"
> of the url it accepts.  wp_insert_link is called by some import
> scripts and by the bookmark.php script.
> 
> I'm pretty sure that "urls are supposed to have the ampersand
> escaped," but that almost all browsers will accept them unescaped
> (by escaped, I mean replaced with &amp;, not really escaped ).
> However, it's leading to breakage with RSS readers; feedburner won't
> take one of my feeds because of the ampersands (actually because
> &baz does not end with a semicolon, but that's the problem).

In HTML and especially XML/XHTML/RSS the characters &, < , " must be
be replaced with entities (escaping).  However, the canonical form of
a URL is without any entities.  You would type in a browser
foo.php?a=b&c=d not foo.php?a=b&amp;c=d.  The second would produce two
arguments a=b and amp;c=d

I would guess that wp_insert_links is expected non-entity URLs, since
that I would expect that the web-page should escape the output of
get_link() as appropriate for the output medium.

I don't know enough about feedwordpress to know which one is at fault.

Ciao!

-- 
Isn't it strange that the same people that laugh at gypsy fortune tellers
take economists seriously?

The Doctor What: Not that 'who' guy.             http://docwhat.gerf.org/
docwhat *at* gerf *dot* org                                        KF6VNC
From if.website at gmail.com  Thu Oct 11 19:56:28 2007
From: if.website at gmail.com (Austin Matzko)
Date: Thu Oct 11 19:56:36 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
Message-ID: <674b4a3b0710111256k14304a3dp1d30883c8a7ce780@mail.gmail.com>

On 10/4/07, Andy Skelton <skeltoac@gmail.com> wrote:
> I like it. A good starting point would be a CREATE TABLE statement.
> Would you post it here when you've got it designed?

I've written up a patch to get it going[1].  I've tested it
successfully, but I'd appreciate it if others would as well.

[1] http://trac.wordpress.org/ticket/5183
From wordpress at dd32.id.au  Thu Oct 11 23:12:54 2007
From: wordpress at dd32.id.au (DD32)
Date: Thu Oct 11 23:11:51 2007
Subject: [wp-hackers] Re: wp_insert_link() --> rss output
In-Reply-To: <20071011145738.GA11328@gerf.org>
References: <1192064233.5103.9.camel@badger> <20071011145738.GA11328@gerf.org>
Message-ID: <op.tz12rtgak6w4mc@dd32.no-ip.com>

On Fri, 12 Oct 2007 00:57:39 +1000, Christian H?ltje <docwhat+list.wp.hackers@gerf.org> wrote:
> In HTML and especially XML/XHTML/RSS the characters &, < , " must be
> be replaced with entities (escaping).  However, the canonical form of
> a URL is without any entities.  You would type in a browser
> foo.php?a=b&c=d not foo.php?a=b&amp;c=d.  The second would produce two
> arguments a=b and amp;c=d

In an XHTML document all Amperstands have to be url encoded in the get query var.
foo.php?a=b&c=d is not valid XHTML, foo.php?a=b&amp;c=d is valid XHTML.

You would not type the address into the url bar as b&amp;c it expects it to come as b&c


From wordpress at santosj.name  Thu Oct 11 23:27:08 2007
From: wordpress at santosj.name (wordpress@santosj.name)
Date: Thu Oct 11 23:27:12 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <674b4a3b0710111256k14304a3dp1d30883c8a7ce780@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
	<674b4a3b0710111256k14304a3dp1d30883c8a7ce780@mail.gmail.com>
Message-ID: <4208.198.209.163.199.1192145228.squirrel@webmail.santosj.name>

> On 10/4/07, Andy Skelton <skeltoac@gmail.com> wrote:
>> I like it. A good starting point would be a CREATE TABLE statement.
>> Would you post it here when you've got it designed?
>
> I've written up a patch to get it going[1].  I've tested it
> successfully, but I'd appreciate it if others would as well.
>
> [1] http://trac.wordpress.org/ticket/5183
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

Looks sweet.

If it would help, I'll write some unit tests up when I get home. I think
the true testament would be to convert existing meta code over. It would
give better indication of whether the new code would in fact replace the
current tables.

Would it be neat to have a sort constant to register meta type?

{{{
define('WORDPRESS_POSTMETA', 'post');

update_general_meta(WORDPRESS_POSTMETA, 0, 'whatever', 'whatever');
}}}

Also, there seems to be a missing insert_general_meta(); the code in
update_general_meta() will return false if there is no $object_id.

From otto at ottodestruct.com  Fri Oct 12 00:29:41 2007
From: otto at ottodestruct.com (Otto)
Date: Fri Oct 12 00:29:48 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <4208.198.209.163.199.1192145228.squirrel@webmail.santosj.name>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
	<674b4a3b0710111256k14304a3dp1d30883c8a7ce780@mail.gmail.com>
	<4208.198.209.163.199.1192145228.squirrel@webmail.santosj.name>
Message-ID: <161617690710111729oc98b562p32da954db5f700d6@mail.gmail.com>

On 10/11/07, wordpress@santosj.name <wordpress@santosj.name> wrote:
> Also, there seems to be a missing insert_general_meta(); the code in
> update_general_meta() will return false if there is no $object_id.

Shouldn't need an insert, as having no $object_id is not an option.
Every entry must have an object_id. For the cases where it replaces
wp_options (let's call that object_type = 'blogmeta'), the $object_id
= some unique identifier to the blog (consider the MU version here
too, each blog can have a different object_id).

-Otto
From otto at ottodestruct.com  Fri Oct 12 00:34:39 2007
From: otto at ottodestruct.com (Otto)
Date: Fri Oct 12 00:34:46 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <161617690710111729oc98b562p32da954db5f700d6@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
	<674b4a3b0710111256k14304a3dp1d30883c8a7ce780@mail.gmail.com>
	<4208.198.209.163.199.1192145228.squirrel@webmail.santosj.name>
	<161617690710111729oc98b562p32da954db5f700d6@mail.gmail.com>
Message-ID: <161617690710111734la933220v4a2a179035e24862@mail.gmail.com>

Oh, well, yeah, okay we do need something that does an insert. It
would be nice if the update and insert were the same function call
though.


On 10/11/07, Otto <otto@ottodestruct.com> wrote:
> On 10/11/07, wordpress@santosj.name <wordpress@santosj.name> wrote:
> > Also, there seems to be a missing insert_general_meta(); the code in
> > update_general_meta() will return false if there is no $object_id.
>
> Shouldn't need an insert, as having no $object_id is not an option.
> Every entry must have an object_id. For the cases where it replaces
> wp_options (let's call that object_type = 'blogmeta'), the $object_id
> = some unique identifier to the blog (consider the MU version here
> too, each blog can have a different object_id).
>
> -Otto
>
From otto at ottodestruct.com  Fri Oct 12 00:48:10 2007
From: otto at ottodestruct.com (Otto)
Date: Fri Oct 12 00:48:15 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <161617690710111734la933220v4a2a179035e24862@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
	<674b4a3b0710111256k14304a3dp1d30883c8a7ce780@mail.gmail.com>
	<4208.198.209.163.199.1192145228.squirrel@webmail.santosj.name>
	<161617690710111729oc98b562p32da954db5f700d6@mail.gmail.com>
	<161617690710111734la933220v4a2a179035e24862@mail.gmail.com>
Message-ID: <161617690710111748o463ed1d6j95cd518e301c8508@mail.gmail.com>

I'm really not paying attention today. It does do an insert via
db_insert. So I was right the first time, the update alone should be
enough.

On 10/11/07, Otto <otto@ottodestruct.com> wrote:
> Oh, well, yeah, okay we do need something that does an insert. It
> would be nice if the update and insert were the same function call
> though.
>
>
> On 10/11/07, Otto <otto@ottodestruct.com> wrote:
> > On 10/11/07, wordpress@santosj.name <wordpress@santosj.name> wrote:
> > > Also, there seems to be a missing insert_general_meta(); the code in
> > > update_general_meta() will return false if there is no $object_id.
> >
> > Shouldn't need an insert, as having no $object_id is not an option.
> > Every entry must have an object_id. For the cases where it replaces
> > wp_options (let's call that object_type = 'blogmeta'), the $object_id
> > = some unique identifier to the blog (consider the MU version here
> > too, each blog can have a different object_id).
> >
> > -Otto
> >
>
From wordpress at santosj.name  Fri Oct 12 00:54:24 2007
From: wordpress at santosj.name (wordpress@santosj.name)
Date: Fri Oct 12 00:54:27 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <161617690710111734la933220v4a2a179035e24862@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<e6ec604d0710041114l7f23495ax6035bfa12e19dc51@mail.gmail.com>
	<674b4a3b0710111256k14304a3dp1d30883c8a7ce780@mail.gmail.com>
	<4208.198.209.163.199.1192145228.squirrel@webmail.santosj.name>
	<161617690710111729oc98b562p32da954db5f700d6@mail.gmail.com>
	<161617690710111734la933220v4a2a179035e24862@mail.gmail.com>
Message-ID: <4782.198.209.163.199.1192150464.squirrel@webmail.santosj.name>

What about just having save_general_meta(), which would insert if it
doesn't exist or update if it does. From your wording (and my lack of
reading the entire function), I would assume that the one function does
both now. Would need documentation, which should be written, in any case
that the function name is not changed. Meaning if I was confused, I would
assume others would also.

I didn't know what $object_id was, but it makes sense now. At least I'll
be able to write better tests. Me two and a half hours from now: "WTF is
this object_id and where can I get its value? Ah hell, I'll just make
stuff up."

Jacob Santos

http://www.santosj.name - Blog
http://wordpress.svn.dragonu.net/unittest - Unofficial Unit Test Repository

> Oh, well, yeah, okay we do need something that does an insert. It
> would be nice if the update and insert were the same function call
> though.
>
>
> On 10/11/07, Otto <otto@ottodestruct.com> wrote:
>> On 10/11/07, wordpress@santosj.name <wordpress@santosj.name> wrote:
>> > Also, there seems to be a missing insert_general_meta(); the code in
>> > update_general_meta() will return false if there is no $object_id.
>>
>> Shouldn't need an insert, as having no $object_id is not an option.
>> Every entry must have an object_id. For the cases where it replaces
>> wp_options (let's call that object_type = 'blogmeta'), the $object_id
>> = some unique identifier to the blog (consider the MU version here
>> too, each blog can have a different object_id).
>>
>> -Otto
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


From mike at uwmike.com  Fri Oct 12 02:14:13 2007
From: mike at uwmike.com (Mike Purvis)
Date: Fri Oct 12 02:14:29 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
Message-ID: <d9b01a0710111914ua26bc3ao61568835a5875064@mail.gmail.com>

On 10/5/07, Austin Matzko <if.website@gmail.com> wrote:
> For WordPress 2.4, I propose that we add a general meta-data table.
>
> Thoughts?

Sounds like a crufty mess waiting to happen. If a plugin has data
beyond configuration options, it should be creating a new table for
it, no matter how small the amount of data is. I'd rather clean up my
DB by pruning tables than by sorting through a gross metatable full of
random snippets of junk.

The problem here is a matter of educating plugin authors about best
practices, and adding a generic "dump stuff here" table is not the
answer.

But that's just my opinion.

Mike


-- 
http://uwmike.com // http://googlemapsbook.com
From wordpress at santosj.name  Fri Oct 12 02:47:34 2007
From: wordpress at santosj.name (Jacob)
Date: Fri Oct 12 02:47:47 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <d9b01a0710111914ua26bc3ao61568835a5875064@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<d9b01a0710111914ua26bc3ao61568835a5875064@mail.gmail.com>
Message-ID: <470EE046.1020403@santosj.name>

As assumed of using the wp_options table for the dump stuff here? Just 
run a SQL Delete statement deleting everything that isn't post, etc.Came 
to think of it, it would be useful to always create a new table, but my 
plugin uninstalls its data when deactivated. Not hard to implement.

Jacob Santos
http://www.santosj.name
http://wordpress.svn.dragonu.net/unittest

Mike Purvis wrote:
> On 10/5/07, Austin Matzko <if.website@gmail.com> wrote:
>   
>> For WordPress 2.4, I propose that we add a general meta-data table.
>>
>> Thoughts?
>>     
>
> Sounds like a crufty mess waiting to happen. If a plugin has data
> beyond configuration options, it should be creating a new table for
> it, no matter how small the amount of data is. I'd rather clean up my
> DB by pruning tables than by sorting through a gross metatable full of
> random snippets of junk.
>
> The problem here is a matter of educating plugin authors about best
> practices, and adding a generic "dump stuff here" table is not the
> answer.
>
> But that's just my opinion.
>
> Mike
>
>
>   

From mike at uwmike.com  Fri Oct 12 02:30:34 2007
From: mike at uwmike.com (Mike Purvis)
Date: Fri Oct 12 02:59:22 2007
Subject: [wp-hackers] 
	Wordpress minor versions changing things for no reason, why?
Message-ID: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>

Hi again,

I'm not a frequent participant on this mailing list, but I'm
frustrated once again that the WP 2.3 release has broken my plugin:

http://uwmike.com/wordpress/wp-cats/

This is not a popular plugin, I'd guess it has only maybe a few
hundred active users. Yet out comes WP 2.3, and I've got an inbox of
emails from users annoyed that it's broken again, and by another
Wordpress release that doesn't seem to justify itself with any
significant new features or improvements.

I realise that ajax enhancements depend on things like markup
structure which is impossible to set in stone, but I wish the devs
could at least make an *effort* to not make trivial changes that might
break this kind of functionality.

Here's my email on this topic from the last time, which didn't attract
much attention:

http://groups.google.com/group/wp-hackers/browse_thread/thread/837588396d794b9d

Sorry for being confrontational; but perhaps a core dev or someone
could link me to a page explaining any processes or policies regarding
these things?

Mike




-- 
http://uwmike.com // http://googlemapsbook.com
From johnbillion+wp at gmail.com  Fri Oct 12 03:32:10 2007
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri Oct 12 03:32:25 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
Message-ID: <1fa535a70710112032w3c3e1de3na34a793b993a22ff@mail.gmail.com>

On 10/12/07, Mike Purvis <mike@uwmike.com> wrote:
> another
> Wordpress release that doesn't seem to justify itself with any
> significant new features or improvements.
>
Are you kidding? I'm not even going to humour you with a list of the
new features, improvements and bug fixes here as it will mean this
thread going straight off-topic.

> I wish the devs
> could at least make an *effort* to not make trivial changes that might
> break this kind of functionality.

Back to the subject at hand, Mike, have you identified the particular
changes in 2.3 that have caused these breakages? I'd like to know what
they are. Are you sure they're trivial?

Unfortunately backwards compatibility with every plugin out there
cannot be guaranteed. Indeed in some cases, plugin and/or theme
compatibility is knowingly (but not intentionally) broken in order to
advance and improve WordPress. If the WP devs were to hold back on
changes in case they "might break this kind of functionality", then
WordPress would not advance very much at all.

Regards, John.
From jared at pacific22.com  Fri Oct 12 03:40:51 2007
From: jared at pacific22.com (Jared Bangs)
Date: Fri Oct 12 03:40:56 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
Message-ID: <7b4922320710112040if716148v8bea593729ba2967@mail.gmail.com>

On 10/11/07, Mike Purvis <mike@uwmike.com> wrote:
>
>
> I'm not a frequent participant on this mailing list, but I'm
> frustrated once again that the WP 2.3 release has broken my plugin:
>
> http://uwmike.com/wordpress/wp-cats/
>
> This is not a popular plugin, I'd guess it has only maybe a few
> hundred active users. Yet out comes WP 2.3, and I've got an inbox of
> emails from users annoyed that it's broken again, and by another
> Wordpress release that doesn't seem to justify itself with any
> significant new features or improvements.
>
> I realise that ajax enhancements depend on things like markup
> structure which is impossible to set in stone, but I wish the devs
> could at least make an *effort* to not make trivial changes that might
> break this kind of functionality.
> ...

Sorry for being confrontational; but perhaps a core dev or someone
> could link me to a page explaining any processes or policies regarding
> these things?
>
> Mike


Well, there's this page on the codex [1]. It's more of a general warning
directed towards users that some plugins may not be compatible after an
upgrade, and, while I realize that's not really what you were looking for,
you (as a plugin author) could take it to mean that the "official" policy is
that plugin authors need to keep up with the WP development if they don't
want their plugins to break.

My best advice would be to follow WP development as closely as you can, and
(if time permits) either fix the plugins prior to the WP release or at least
put a notice up that advises users of the upcoming incompatibility.

Subscribing to this list is a big help in keeping up to speed with changes.
I'd also recommend running a test instance out of the SVN trunk that you
could to a quick update on as often as you like, so that you have a heads up
as soon as a breaking change gets into the code base. In most cases this
will be at least a month prior to that code being released, so it gives you
some time to fix it.

I don't mean for that to sound insensitive and/or not helpful, but I'm not
really sure what other options there are that would allow the project to
make progress at a healthy pace.

[1]
http://codex.wordpress.org/Managing_Plugins#Upgrading_WordPress_May_Break_Plugins
From docwhat+list.wp.hackers at gerf.org  Fri Oct 12 04:01:47 2007
From: docwhat+list.wp.hackers at gerf.org (Christian =?iso-8859-1?Q?H=F6ltje?=)
Date: Fri Oct 12 04:01:52 2007
Subject: [wp-hackers] Re: wp_insert_link() --> rss output
In-Reply-To: <op.tz12rtgak6w4mc@dd32.no-ip.com>
References: <1192064233.5103.9.camel@badger> <20071011145738.GA11328@gerf.org>
	<op.tz12rtgak6w4mc@dd32.no-ip.com>
Message-ID: <20071012040146.GA15350@gerf.org>

* DD32 (wordpress@dd32.id.au) [071011 19:12]:
> On Fri, 12 Oct 2007 00:57:39 +1000, Christian H?ltje <docwhat+list.wp.hackers@gerf.org> wrote:
> > In HTML and especially XML/XHTML/RSS the characters &, < , " must be
> > be replaced with entities (escaping).  However, the canonical form of
> > a URL is without any entities.  You would type in a browser
> > foo.php?a=b&c=d not foo.php?a=b&amp;c=d.  The second would produce two
> > arguments a=b and amp;c=d
> 
> In an XHTML document all Amperstands have to be url encoded in the
> get query var.  foo.php?a=b&c=d is not valid XHTML,
> foo.php?a=b&amp;c=d is valid XHTML.
> 
> You would not type the address into the url bar as b&amp;c it
> expects it to come as b&c

We are in violent agreement, sir.  Would you care to step outside and
agree with me?

^_^

Ciao!

-- 
When I was a kid I used to pray every night for a new bicycle. Then I realized that the Lord doesn't work that way. So I stole one and asked Him to forgive me
       -- Emo Phillips

The Doctor What: Second Baseman                  http://docwhat.gerf.org/
docwhat *at* gerf *dot* org                                        KF6VNC
From wordpress at santosj.name  Fri Oct 12 04:13:36 2007
From: wordpress at santosj.name (Jacob)
Date: Fri Oct 12 04:13:53 2007
Subject: [wp-hackers] 	Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
Message-ID: <470EF470.3020600@santosj.name>

I remember a trac report with discussing some class changes.

A quick code review brings up nothing supposedly wrong besides the above.

My problem I did have was with this:

add_action('plugins_loaded', create_function('$a', 'global $wp_cats; 
$wp_cats = new wp_cats;'));

Kudos. It has been a long time since I've seen a plugin use this 
construct. Is there a reason you choose this method over one of the two 
below?

function wp_cats_load()
{
  $wp_cats = new wp_cats;
   
    add_action('admin_head', array(&$wp_cats, 'header_inserts'));
    add_action('init', array(&$wp_cats, 'hijack'));
    add_filter('manage_posts_columns', array(&$wp_cats, 
'manage_posts_columns_filter'));
}

wp_cats_load();

Done;

$wp_cats = new wp_cats;

add_action('admin_head', array(&$wp_cats, 'header_inserts'));
add_action('init', array(&$wp_cats, 'hijack'));
add_filter('manage_posts_columns', array(&$wp_cats, 
'manage_posts_columns_filter'));

Jacob Santos

http://www.santosj.name
http://wordpress.svn.dragonu.net/unittest/


Mike Purvis wrote:
> Hi again,
>
> I'm not a frequent participant on this mailing list, but I'm
> frustrated once again that the WP 2.3 release has broken my plugin:
>
> http://uwmike.com/wordpress/wp-cats/
>
> This is not a popular plugin, I'd guess it has only maybe a few
> hundred active users. Yet out comes WP 2.3, and I've got an inbox of
> emails from users annoyed that it's broken again, and by another
> Wordpress release that doesn't seem to justify itself with any
> significant new features or improvements.
>
> I realise that ajax enhancements depend on things like markup
> structure which is impossible to set in stone, but I wish the devs
> could at least make an *effort* to not make trivial changes that might
> break this kind of functionality.
>
> Here's my email on this topic from the last time, which didn't attract
> much attention:
>
> http://groups.google.com/group/wp-hackers/browse_thread/thread/837588396d794b9d
>
> Sorry for being confrontational; but perhaps a core dev or someone
> could link me to a page explaining any processes or policies regarding
> these things?
>
> Mike
>
>
>
>
>   

From wordpress at dd32.id.au  Fri Oct 12 04:34:30 2007
From: wordpress at dd32.id.au (DD32)
Date: Fri Oct 12 04:35:28 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <7b4922320710112040if716148v8bea593729ba2967@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
	<7b4922320710112040if716148v8bea593729ba2967@mail.gmail.com>
Message-ID: <op.tz2hnsshk6w4mc@dd32.no-ip.com>

On Fri, 12 Oct 2007 13:40:51 +1000, Jared Bangs <jared@pacific22.com> wrote:
> My best advice would be to follow WP development as closely as you can, and
> (if time permits) either fix the plugins prior to the WP release or at least
> put a notice up that advises users of the upcoming incompatibility.

I'd suggest testing with the beta versions at least (And keeping in mind that even then, it may change in the final beta releases) if you dont have enough time to follow Core Dev.

Unless you're only using WordPress API functions, you cannot be sure that the plugin will be forward compatible, Theres simply too many things which can change during development to maintain backwards compatibility with non-API functionality. WP Devs do their best to maintain that all API functionality stays backwards compatible with older releases, I dont think you can hope for more than that in any Product.
From wordpress at dd32.id.au  Fri Oct 12 04:37:15 2007
From: wordpress at dd32.id.au (DD32)
Date: Fri Oct 12 04:36:55 2007
Subject: [wp-hackers] Re: wp_insert_link() --> rss output
In-Reply-To: <20071012040146.GA15350@gerf.org>
References: <1192064233.5103.9.camel@badger> <20071011145738.GA11328@gerf.org>
	<op.tz12rtgak6w4mc@dd32.no-ip.com>
	<20071012040146.GA15350@gerf.org>
Message-ID: <op.tz2hsdpbk6w4mc@dd32.no-ip.com>

On Fri, 12 Oct 2007 14:01:47 +1000, Christian H?ltje <docwhat+list.wp.hackers@gerf.org> wrote:
> We are in violent agreement, sir.  Would you care to step outside and
> agree with me?

..Well Shoot! 
Better read it more closely next time!


From mike at uwmike.com  Fri Oct 12 04:46:54 2007
From: mike at uwmike.com (Mike Purvis)
Date: Fri Oct 12 04:47:00 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <1fa535a70710112032w3c3e1de3na34a793b993a22ff@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
	<1fa535a70710112032w3c3e1de3na34a793b993a22ff@mail.gmail.com>
Message-ID: <d9b01a0710112146q7728dfedt575ab22b4ea4406b@mail.gmail.com>

On 10/12/07, John Blackbourn <johnbillion+wp@gmail.com> wrote:
> Back to the subject at hand, Mike, have you identified the particular
> changes in 2.3 that have caused these breakages? I'd like to know what
> they are. Are you sure they're trivial?

No, I'm not sure at all that they're trivial. But one thing that broke
between 2.1 and 2.2 had to do with a css class name going from
"the-list-x" to "the-list", an obviously wanton change. (And indeed,
the next version after that change eliminated the dependency on it, by
instead inserting a piece of markup via filter that I could rely on
and hook into.)

There was another breakage between 2.1 and 2.2 that had to do with
slight changes in the behaviour of wp_set_post_cats.

Jacob: I appreciate your willingness to help, but I haven't really got
the time or inclination at the moment to debug this. Nonetheless, your
post highlights the fact that it would be awfully nice to have a
best-practices resource for plugin authors, which lists functions from
most- to least-stable, and indicates the best way to do things like
initialization.

Jared: I don't have time to religiously follow the WP trunk. My point
is that for such a mature project, the Wordpress code seems to
experience an awful lot of churn, and it makes the overall experience
for casual plugin authors extremely intimidating and frustrating. Is
there a release-cycle policy? What about restricting new versions with
significant code change to a 6- or 8-month cycle, and only dropping
bugfixes and security patches in the intervening time? Maybe even a
special low-volume mailing list to announce new beta releases?

DD32: Where would I find a list of stable API functions? All I've ever
been able to locate are off-site lists for hooks and filters and this
page of zero-level beginner introduction
<http://codex.wordpress.org/Plugin_API>. Is there a canonical list
somewhere of "safe" functions that can be used by plugins and are
guaranteed to still exist in the next point release?

-- 
http://uwmike.com // http://googlemapsbook.com
From ai2097 at users.sourceforge.net  Fri Oct 12 05:03:30 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Fri Oct 12 05:03:45 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <op.tz2hnsshk6w4mc@dd32.no-ip.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
	<7b4922320710112040if716148v8bea593729ba2967@mail.gmail.com>
	<op.tz2hnsshk6w4mc@dd32.no-ip.com>
Message-ID: <20071011220330.74e939a6@remstate.com>

On Fri, 12 Oct 2007 14:34:30 +1000, DD32 <wordpress@dd32.id.au> wrote:

> On Fri, 12 Oct 2007 13:40:51 +1000, Jared Bangs <jared@pacific22.com>
> wrote:
> > My best advice would be to follow WP development as closely as you
> > can, and (if time permits) either fix the plugins prior to the WP
> > release or at least put a notice up that advises users of the
> > upcoming incompatibility.
> 
> I'd suggest testing with the beta versions at least (And keeping in
> mind that even then, it may change in the final beta releases) if you
> dont have enough time to follow Core Dev.

... not even then. 2.3 RC1 broke stuff that seemed to work fine up
until that point (IIRC, this is when the post2cat et. al. tables were
actually dropped). Unless you were following dev, you wouldn't have
expected that. And the fixes plugin-side were certainly non-trivial.
Following the betas gained you pretty much nothing in this case.

> Unless you're only using WordPress API functions, you cannot be sure
> that the plugin will be forward compatible,

... not even then. I've had several API functions change behavior on me
across WordPress major versions, and have the compatibility logic in my
plugin code to prove it.

> Theres simply too many things which can change during development to
> maintain backwards compatibility with non-API functionality. WP Devs
> do their best to maintain that all API functionality stays backwards
> compatible with older releases, I dont think you can hope for more
> than that in any Product.

An API without test-grade documentation is no API at all. In some
cases, it's impossible to tell a bug fix from a breaking change -- and
in practice, the difference is almost nil. Some very interesting and
subtle differences exist between the major versions of WordPress with
regards to how some functions work.

So, what's left? Pretty much the only way to be compatible is to test,
test, and test some more. It's a huge time commitment, a PITA, and
otherwise an unpleasant mess. The alternative is to screw the users on
the new version, OR screw the users who don't run the latest version
(with the ultimate gravitation being towards the latter).


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From mike at uwmike.com  Fri Oct 12 05:20:38 2007
From: mike at uwmike.com (Mike Purvis)
Date: Fri Oct 12 05:20:45 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <1fa535a70710112032w3c3e1de3na34a793b993a22ff@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
	<1fa535a70710112032w3c3e1de3na34a793b993a22ff@mail.gmail.com>
Message-ID: <d9b01a0710112220n64e1993fv33e0889957180bc5@mail.gmail.com>

> I'd like to know what they are. Are you sure they're trivial?

Okay, ready for it?

Something changed between 2.2 and 2.3 that made this code stop working:

$cat_id = get_cat_id($_POST['cat_name']);
$post_cats = wp_get_post_cats('', $post_id);
$post_cats[] = $cat_id;
wp_set_post_cats('', $post_id, $post_cats);

Looks pretty vanilla, right? Well, the change had to do with the fact
that get_cat_id returns and integer, whereas wp_get_post_cats returns
an array of strings. And wp_set_post_cats now (as of some recent
change) expects an array of string-formatted numbers rather than
arbitrary numerics, so that the corrected code looks like this:

$cat_id = (string)get_cat_id($_POST['cat_name']);
$post_cats = wp_get_post_cats('', $post_id);
$post_cats[] = $cat_id;
wp_set_post_cats('', $post_id, $post_cats);

Draw your own conclusions.
From lawrence at krubner.com  Fri Oct 12 05:26:08 2007
From: lawrence at krubner.com (lawrence@krubner.com)
Date: Fri Oct 12 05:28:18 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <d9b01a0710112146q7728dfedt575ab22b4ea4406b@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
	<1fa535a70710112032w3c3e1de3na34a793b993a22ff@mail.gmail.com>
	<d9b01a0710112146q7728dfedt575ab22b4ea4406b@mail.gmail.com>
Message-ID: <20071012002608.zukmorl02s8ow8oo@webmail.krubner.com>

> Jared: I don't have time to religiously follow the WP trunk. My point
> is that for such a mature project, the Wordpress code seems to
> experience an awful lot of churn, and it makes the overall experience
> for casual plugin authors extremely intimidating and frustrating.

If I recall correctly, Shelley Powers said something similar on her  
blog, and a bunch of people jumped into the comment thread to agree  
with her. Don't open source projects typically commit to a road map,  
long before they reach the widespread use of WordPress?


-- lawrence krubner




> Quoting Mike Purvis <mike@uwmike.com>:
>
> On 10/12/07, John Blackbourn <johnbillion+wp@gmail.com> wrote:
>> Back to the subject at hand, Mike, have you identified the particular
>> changes in 2.3 that have caused these breakages? I'd like to know what
>> they are. Are you sure they're trivial?
>
> No, I'm not sure at all that they're trivial. But one thing that broke
> between 2.1 and 2.2 had to do with a css class name going from
> "the-list-x" to "the-list", an obviously wanton change. (And indeed,
> the next version after that change eliminated the dependency on it, by
> instead inserting a piece of markup via filter that I could rely on
> and hook into.)
>
> There was another breakage between 2.1 and 2.2 that had to do with
> slight changes in the behaviour of wp_set_post_cats.
>
> Jacob: I appreciate your willingness to help, but I haven't really got
> the time or inclination at the moment to debug this. Nonetheless, your
> post highlights the fact that it would be awfully nice to have a
> best-practices resource for plugin authors, which lists functions from
> most- to least-stable, and indicates the best way to do things like
> initialization.
>
> Jared: I don't have time to religiously follow the WP trunk. My point
> is that for such a mature project, the Wordpress code seems to
> experience an awful lot of churn, and it makes the overall experience
> for casual plugin authors extremely intimidating and frustrating. Is
> there a release-cycle policy? What about restricting new versions with
> significant code change to a 6- or 8-month cycle, and only dropping
> bugfixes and security patches in the intervening time? Maybe even a
> special low-volume mailing list to announce new beta releases?
>
> DD32: Where would I find a list of stable API functions? All I've ever
> been able to locate are off-site lists for hooks and filters and this
> page of zero-level beginner introduction
> <http://codex.wordpress.org/Plugin_API>. Is there a canonical list
> somewhere of "safe" functions that can be used by plugins and are
> guaranteed to still exist in the next point release?
>
> --
> http://uwmike.com // http://googlemapsbook.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



From speedboxer at gmail.com  Fri Oct 12 05:54:11 2007
From: speedboxer at gmail.com (Matt)
Date: Fri Oct 12 05:54:16 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <d9b01a0710112146q7728dfedt575ab22b4ea4406b@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
	<1fa535a70710112032w3c3e1de3na34a793b993a22ff@mail.gmail.com>
	<d9b01a0710112146q7728dfedt575ab22b4ea4406b@mail.gmail.com>
Message-ID: <b88434820710112254u564fe3afu24a4dae0a22f02ef@mail.gmail.com>

On 10/11/07, Mike Purvis <mike@uwmike.com> wrote:
>
> [...]Is there a release-cycle policy? What about restricting new versions
> with
> significant code change to a 6- or 8-month cycle, and only dropping
> bugfixes and security patches in the intervening time? Maybe even a
> special low-volume mailing list to announce new beta releases?
>

There is a release schedule, and it can be found here:

http://wordpress.org/about/roadmap/

Also, I believe only bug and security fixes go into minor point releases.

-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From otto at ottodestruct.com  Fri Oct 12 06:37:44 2007
From: otto at ottodestruct.com (Otto)
Date: Fri Oct 12 06:37:58 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <d9b01a0710111914ua26bc3ao61568835a5875064@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<d9b01a0710111914ua26bc3ao61568835a5875064@mail.gmail.com>
Message-ID: <161617690710112337n3fd83d7dge4925813c1ee476e@mail.gmail.com>

There's pluses and minuses to both approaches.

Separate tables:
+ Cleaner
+ Easier to simply drop old tables when they're not used anymore
- Extra tables means extra joins and/or extra queries
- Wordpress won't know about these tables internally and can't handle
them itself with things like caching
- Every table is going to be of a different layout and such, more confusion
- Poor plugins will never do things properly, bad indexes and such = slowdown

Combined table:
+ Standardized layout makes it simpler for plugins to manipulate correctly
+ Most plugins just need to store things in the form of key/value pairs anyway
+ Half a dozen things in WordPress itself would be able to use this table
+ Wordpress can handle it with caching and such
+ Less joins, less queries
+ Proper indexing and good design means it'll be quick and fast
- Potential big table full of potential junk
- Manual cleanup is harder (although separating things by the
object_type makes this simpler)


Probably some I left out. On the whole, I'm in favor of a combined
table simply for the reason that the internal bits of WordPress need
it. Why have a postmeta, options, commentsmeta, etc? One table can
handle these better. We're doing weird stuff in WP too, like
attachments as posts and other things that would be better served by
good metadata. A refactoring of these is in order, and if a combined
meta helps push that along, I'm all for it.
From peter.westwood at ftwr.co.uk  Fri Oct 12 06:42:55 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri Oct 12 06:45:39 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <161617690710112337n3fd83d7dge4925813c1ee476e@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<d9b01a0710111914ua26bc3ao61568835a5875064@mail.gmail.com>
	<161617690710112337n3fd83d7dge4925813c1ee476e@mail.gmail.com>
Message-ID: <76BFF1F0-7178-4DB8-9AB4-1AEB8F0806E4@ftwr.co.uk>


On 12 Oct 2007, at 07:37, Otto wrote:

> Probably some I left out. On the whole, I'm in favor of a combined
> table simply for the reason that the internal bits of WordPress need
> it. Why have a postmeta, options, commentsmeta, etc? One table can
> handle these better. We're doing weird stuff in WP too, like
> attachments as posts and other things that would be better served by
> good metadata. A refactoring of these is in order, and if a combined
> meta helps push that along, I'm all for it.

A single meta table makes much more sense than adding a new  
comment_meta table if we want to have meta information for comments  
(which some people do)
Moving options to a meta table is IMHO a bad idea - if you are going  
to do that you might as well just do away with the post table and  
comments tables as well and store all the data in one big table as  
key=>value pairs.
A meta table should just be for meta - i.e. key<>vlaue pairs which  
are related to a particular object type be it a comment/post/...

Plugins should be using these tables where they want to store that  
type of information - unfortunately a lot of plugin authors do not  
understand the flexibility that already exists in the WP db schema  
and so for example every new event plugin creates a new table - the  
fact that the posts table has the ability there to store other types  
of post (and to be fair an event is very similar it what it wants to  
store) and the posts table could support events as-is.

As for attachments -> making them post meta sounds like a really good  
idea - doing away with the dodgy linked page for an attachment which  
can have very hard to moderate comments would be a good idea!

westi
-- 
Peter Westwood <peter.westwood@ftwr.co.uk>
Blog: http://blog.ftwr.co.uk/
WordPress Plugins: http://blog.ftwr.co.uk/wordpress/



From peter.westwood at ftwr.co.uk  Fri Oct 12 06:46:33 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri Oct 12 06:49:10 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
Message-ID: <80B75B63-1C21-4596-9C22-61160F61C79F@ftwr.co.uk>


On 12 Oct 2007, at 03:30, Mike Purvis wrote:

> I'm not a frequent participant on this mailing list, but I'm
> frustrated once again that the WP 2.3 release has broken my plugin:
> ...
> Sorry for being confrontational; but perhaps a core dev or someone
> could link me to a page explaining any processes or policies regarding
> these things?

Keeping up with the changes between versions can be difficult - but  
the core devs cannot test every single plugin while making changes -  
nothing would ever get done.

In general we try and preserve the api for plugins.

If you want an easy way to keep track of WordPress development  
without having to spend a lot of time reading through every change  
you may be interested in my new weekly digest posts on http:// 
westi.wordpress.com/

westi
-- 
Peter Westwood <peter.westwood@ftwr.co.uk>
Blog: http://blog.ftwr.co.uk/
WordPress Plugins: http://blog.ftwr.co.uk/wordpress/



From otto at ottodestruct.com  Fri Oct 12 06:53:57 2007
From: otto at ottodestruct.com (Otto)
Date: Fri Oct 12 06:54:03 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <d9b01a0710112220n64e1993fv33e0889957180bc5@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
	<1fa535a70710112032w3c3e1de3na34a793b993a22ff@mail.gmail.com>
	<d9b01a0710112220n64e1993fv33e0889957180bc5@mail.gmail.com>
Message-ID: <161617690710112353w37836932hb677e6169dbea54@mail.gmail.com>

wp_set_post_cats was deprecated in June of 2006, as of version 2.1 (I
think, bit uncertain on the version).

What likely broke your code here in 2.3 was the change to the terms
system, where cats and tags got combined. Unfortunate side effect, but
few people check deprecated code because the core code no longer
actually uses it.

The problem is how do you know if you're using deprecated code? I
mean, your plugin is clearly still using it, even though it's been
deprecated for more than a year. This sort of problem might be avoided
sooner if changes like this one were put into place:
http://trac.wordpress.org/ticket/4361

If the user was notified of plugins using deprecated code, then it
would encourage authors to change sooner rather than later. I realize
that stability is important for plugin authors, but I don't think it
should come at the price of discouraging innovation in the core code
either.

There may not be a perfect answer to this one.


On 10/12/07, Mike Purvis <mike@uwmike.com> wrote:
> > I'd like to know what they are. Are you sure they're trivial?
>
> Okay, ready for it?
>
> Something changed between 2.2 and 2.3 that made this code stop working:
>
> $cat_id = get_cat_id($_POST['cat_name']);
> $post_cats = wp_get_post_cats('', $post_id);
> $post_cats[] = $cat_id;
> wp_set_post_cats('', $post_id, $post_cats);
>
> Looks pretty vanilla, right? Well, the change had to do with the fact
> that get_cat_id returns and integer, whereas wp_get_post_cats returns
> an array of strings. And wp_set_post_cats now (as of some recent
> change) expects an array of string-formatted numbers rather than
> arbitrary numerics, so that the corrected code looks like this:
>
> $cat_id = (string)get_cat_id($_POST['cat_name']);
> $post_cats = wp_get_post_cats('', $post_id);
> $post_cats[] = $cat_id;
> wp_set_post_cats('', $post_id, $post_cats);
>
> Draw your own conclusions.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From otto at ottodestruct.com  Fri Oct 12 06:58:53 2007
From: otto at ottodestruct.com (Otto)
Date: Fri Oct 12 06:58:57 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <76BFF1F0-7178-4DB8-9AB4-1AEB8F0806E4@ftwr.co.uk>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>
	<d9b01a0710111914ua26bc3ao61568835a5875064@mail.gmail.com>
	<161617690710112337n3fd83d7dge4925813c1ee476e@mail.gmail.com>
	<76BFF1F0-7178-4DB8-9AB4-1AEB8F0806E4@ftwr.co.uk>
Message-ID: <161617690710112358i1c9c1309kd279598ea569c422@mail.gmail.com>

On 10/12/07, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
> Moving options to a meta table is IMHO a bad idea - if you are going
> to do that you might as well just do away with the post table and
> comments tables as well and store all the data in one big table as
> key=>value pairs.
> A meta table should just be for meta - i.e. key<>vlaue pairs which
> are related to a particular object type be it a comment/post/...

Oh, I disagree there, for two main reasons:
1. The options table basically is a key/value table already. Look closely.
2. The "blog" is itself a valid "object" which can have associated
metadata. To pick an example, what is the blog name other than
metadata about the blog? How about what theme the blog is using? The
options *are* metadata.
From mike at uwmike.com  Fri Oct 12 07:24:35 2007
From: mike at uwmike.com (Mike Purvis)
Date: Fri Oct 12 07:24:42 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <161617690710112353w37836932hb677e6169dbea54@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
	<1fa535a70710112032w3c3e1de3na34a793b993a22ff@mail.gmail.com>
	<d9b01a0710112220n64e1993fv33e0889957180bc5@mail.gmail.com>
	<161617690710112353w37836932hb677e6169dbea54@mail.gmail.com>
Message-ID: <d9b01a0710120024p25bb32f0y2ac07489f22c50de@mail.gmail.com>

Hmm, yes. Well, the initial release of this was August 2006, meaning I
probably developed the proof of concept a few months before, which
would have been prior to the moving of that function to
deprecated.php. (There's something fundamentally broken when I'm
discovering the functions to call by using someone's phpXref
installation...)

How about just having a option for "Dev Mode", which would pop up
warnings for deprecated function calls, type mismatches, and any other
weirdness of that kind? If there was a centralized resource for plugin
authors (rather than a firehose mailing list and a wild-west
wikipage), it would be possible to advertise such a feature.

> If the user was notified of plugins using deprecated code, then it
> I realize that stability is important for plugin authors, but I don't think it
> should come at the price of discouraging innovation in the core code
> either.

Absolutely not. You guys need to be able to refactor and clean up the
codebase and so-on. My point is just that the project as a whole
suffers from the lack of resources available to help people extending
WP. A good start might be a published set of the top fifty most
"stable" functions, an explanation of what they do and any caveats,
and links to similar functions, with explanations of why the stable
function is the superior one to use.

Mike


On 10/12/07, Otto <otto@ottodestruct.com> wrote:
> wp_set_post_cats was deprecated in June of 2006, as of version 2.1 (I
> think, bit uncertain on the version).
>
> What likely broke your code here in 2.3 was the change to the terms
> system, where cats and tags got combined. Unfortunate side effect, but
> few people check deprecated code because the core code no longer
> actually uses it.
>
> The problem is how do you know if you're using deprecated code? I
> mean, your plugin is clearly still using it, even though it's been
> deprecated for more than a year. This sort of problem might be avoided
> sooner if changes like this one were put into place:
> http://trac.wordpress.org/ticket/4361
>

>
> There may not be a perfect answer to this one.
>
>
> On 10/12/07, Mike Purvis <mike@uwmike.com> wrote:
> > > I'd like to know what they are. Are you sure they're trivial?
> >
> > Okay, ready for it?
> >
> > Something changed between 2.2 and 2.3 that made this code stop working:
> >
> > $cat_id = get_cat_id($_POST['cat_name']);
> > $post_cats = wp_get_post_cats('', $post_id);
> > $post_cats[] = $cat_id;
> > wp_set_post_cats('', $post_id, $post_cats);
> >
> > Looks pretty vanilla, right? Well, the change had to do with the fact
> > that get_cat_id returns and integer, whereas wp_get_post_cats returns
> > an array of strings. And wp_set_post_cats now (as of some recent
> > change) expects an array of string-formatted numbers rather than
> > arbitrary numerics, so that the corrected code looks like this:
> >
> > $cat_id = (string)get_cat_id($_POST['cat_name']);
> > $post_cats = wp_get_post_cats('', $post_id);
> > $post_cats[] = $cat_id;
> > wp_set_post_cats('', $post_id, $post_cats);
> >
> > Draw your own conclusions.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://uwmike.com // http://googlemapsbook.com
From jeremy.visser at gmail.com  Fri Oct 12 12:42:38 2007
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Fri Oct 12 12:42:52 2007
Subject: [wp-hackers]  Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
Message-ID: <1192192958.6331.6.camel@rillian>

On Fri, 2007-10-12 at 12:30 +1000, Mike Purvis wrote:
> I realise that ajax enhancements depend on things like markup
> structure which is impossible to set in stone, but I wish the devs
> could at least make an *effort* to not make trivial changes that might
> break this kind of functionality.

I am greatly shocked by the attitude you have, but I do not want to
pollute with flamewars, so I will politely point you to these links,
which appeared on the planet feeds aggregated on every single WordPress
dashboard during September:

http://boren.nu/archives/2007/09/05/wordpress-23-database-schema-changes/
http://boren.nu/archives/2007/09/16/wordpress-23-plugin-compatibility/

From wordpress at santosj.name  Fri Oct 12 13:29:26 2007
From: wordpress at santosj.name (Jacob)
Date: Fri Oct 12 13:29:45 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <d9b01a0710120024p25bb32f0y2ac07489f22c50de@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>	<1fa535a70710112032w3c3e1de3na34a793b993a22ff@mail.gmail.com>	<d9b01a0710112220n64e1993fv33e0889957180bc5@mail.gmail.com>	<161617690710112353w37836932hb677e6169dbea54@mail.gmail.com>
	<d9b01a0710120024p25bb32f0y2ac07489f22c50de@mail.gmail.com>
Message-ID: <470F76B6.7040809@santosj.name>

A lot of the documentation was written by the community and devs. I 
think WordPress offers a great experience from its lack of 
"professionalism." It is great learning experience and work experience 
to write phpDoc comments/unit tests/DocBook type documentation. I have 
not tried too many web applications, but it can be fun at times to take 
advantage of the situation and jump in and write the parts that are missing.

Actually, I was contemplating lately the same thing that the codex, 
while it offers good information, doesn't have a clear table of contents 
and difficult to wade through. Recent enhancements to DocBook rendering, 
might make it worth while to take up the long, tedious, I'll rather you 
stab me multiple times type of work process of taking parts from the 
codex and compiling such a book. It would be nice to have both an end 
user docbook and a developers docbook for such things as writing 
plugins/themes and hacking the core.

For the function list, if all of the functions were phpDoc-umented, then 
you would get such a list. That is also a boring and slightly difficult 
process. Adding phpDoc comments to the taxonomy really taxed my mind. 
Some of the functions were easy, but the big long one with many 
different branches is going to need a long and concise phpDoc. Even 
then, I forgot to include the "@since 2.3" might help, because people 
who join the community in the future would know that that code was added 
in WordPress 2.3. phpDoc would also allow for telling which functions 
were deprecated and what version.

Good stuff, if your focus is learning more about writing proper 
documentation/comments and unit tests. I'm having a blast (when I'm not 
clawing my eyes out). Pain can be a good thing to inflict upon yourself 
when others will benefit. You know the process can be tortuous but the 
end result is to die for.

Jacob Santos

Mike Purvis wrote:
> Hmm, yes. Well, the initial release of this was August 2006, meaning I
> probably developed the proof of concept a few months before, which
> would have been prior to the moving of that function to
> deprecated.php. (There's something fundamentally broken when I'm
> discovering the functions to call by using someone's phpXref
> installation...)
>
> How about just having a option for "Dev Mode", which would pop up
> warnings for deprecated function calls, type mismatches, and any other
> weirdness of that kind? If there was a centralized resource for plugin
> authors (rather than a firehose mailing list and a wild-west
> wikipage), it would be possible to advertise such a feature.
>
>   
>> If the user was notified of plugins using deprecated code, then it
>> I realize that stability is important for plugin authors, but I don't think it
>> should come at the price of discouraging innovation in the core code
>> either.
>>     
>
> Absolutely not. You guys need to be able to refactor and clean up the
> codebase and so-on. My point is just that the project as a whole
> suffers from the lack of resources available to help people extending
> WP. A good start might be a published set of the top fifty most
> "stable" functions, an explanation of what they do and any caveats,
> and links to similar functions, with explanations of why the stable
> function is the superior one to use.
>
> Mike
>
>
> On 10/12/07, Otto <otto@ottodestruct.com> wrote:
>   
>> wp_set_post_cats was deprecated in June of 2006, as of version 2.1 (I
>> think, bit uncertain on the version).
>>
>> What likely broke your code here in 2.3 was the change to the terms
>> system, where cats and tags got combined. Unfortunate side effect, but
>> few people check deprecated code because the core code no longer
>> actually uses it.
>>
>> The problem is how do you know if you're using deprecated code? I
>> mean, your plugin is clearly still using it, even though it's been
>> deprecated for more than a year. This sort of problem might be avoided
>> sooner if changes like this one were put into place:
>> http://trac.wordpress.org/ticket/4361
>>
>>     
>
>   
>> There may not be a perfect answer to this one.
>>
>>
>> On 10/12/07, Mike Purvis <mike@uwmike.com> wrote:
>>     
>>>> I'd like to know what they are. Are you sure they're trivial?
>>>>         
>>> Okay, ready for it?
>>>
>>> Something changed between 2.2 and 2.3 that made this code stop working:
>>>
>>> $cat_id = get_cat_id($_POST['cat_name']);
>>> $post_cats = wp_get_post_cats('', $post_id);
>>> $post_cats[] = $cat_id;
>>> wp_set_post_cats('', $post_id, $post_cats);
>>>
>>> Looks pretty vanilla, right? Well, the change had to do with the fact
>>> that get_cat_id returns and integer, whereas wp_get_post_cats returns
>>> an array of strings. And wp_set_post_cats now (as of some recent
>>> change) expects an array of string-formatted numbers rather than
>>> arbitrary numerics, so that the corrected code looks like this:
>>>
>>> $cat_id = (string)get_cat_id($_POST['cat_name']);
>>> $post_cats = wp_get_post_cats('', $post_id);
>>> $post_cats[] = $cat_id;
>>> wp_set_post_cats('', $post_id, $post_cats);
>>>
>>> Draw your own conclusions.
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
>
>
>   

From mike at uwmike.com  Fri Oct 12 14:22:10 2007
From: mike at uwmike.com (Mike Purvis)
Date: Fri Oct 12 14:22:16 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <470F76B6.7040809@santosj.name>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
	<1fa535a70710112032w3c3e1de3na34a793b993a22ff@mail.gmail.com>
	<d9b01a0710112220n64e1993fv33e0889957180bc5@mail.gmail.com>
	<161617690710112353w37836932hb677e6169dbea54@mail.gmail.com>
	<d9b01a0710120024p25bb32f0y2ac07489f22c50de@mail.gmail.com>
	<470F76B6.7040809@santosj.name>
Message-ID: <d9b01a0710120722g431fdae9y1733ab7af6b1e7f1@mail.gmail.com>

> ... take advantage of the situation and jump in and write the parts that are missing.

See, I thought about this. But there's still the fundamental problem
that I have no idea what bits of the code will still be here in six
months. I'm not going to invest 50+ hours careful crafting
documentation to help novice plugin authors, when the next version is
probably going to break it all again. That's half the problem with the
codex... even what *is* there is mostly outdated! The fact that the
core devs don't take documentation, consistency, and unit-testing
seriously is a significant point in the argument about whether
Wordpress is a business-ready platform or just a toy.

Anyhow, I'm not really interesting in debating a lot of stuff or
flaming back and forth; I just wanted to share my impressions as a
developer interacting with the Wordpress codebase and community.
Thanks for your time.

Mike


-- 
http://uwmike.com // http://googlemapsbook.com
From docwhat+list.wp.hackers at gerf.org  Fri Oct 12 14:47:48 2007
From: docwhat+list.wp.hackers at gerf.org (Christian =?iso-8859-1?Q?H=F6ltje?=)
Date: Fri Oct 12 14:47:53 2007
Subject: [wp-hackers] Re: Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <161617690710112353w37836932hb677e6169dbea54@mail.gmail.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
	<1fa535a70710112032w3c3e1de3na34a793b993a22ff@mail.gmail.com>
	<d9b01a0710112220n64e1993fv33e0889957180bc5@mail.gmail.com>
	<161617690710112353w37836932hb677e6169dbea54@mail.gmail.com>
Message-ID: <20071012144748.GB24008@gerf.org>

* Otto (otto@ottodestruct.com) [071012 02:54]:
> http://trac.wordpress.org/ticket/4361

I submitted a patch to raise user_errors() when someone uses a
depreciated value.  If we make it a standard habit when coding plugins
to set the debug mode on, then you'll know if your plugin is using
depreciated code.

See http://trac.wordpress.org/ticket/5033 for information about the
debug mode.

Ciao!

-- 
Fact #43
  Maintenance is a solution, not a problem.
		-- "Facts and Fallacies of Software Engineering"
			(Robert L. Glass, 2002)

The Doctor What: Not that 'who' guy.             http://docwhat.gerf.org/
docwhat *at* gerf *dot* org                                        KF6VNC
From m at mullenweg.com  Fri Oct 12 16:02:17 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Fri Oct 12 16:04:08 2007
Subject: [wp-hackers] 2.4 Feature Proposal: New general meta-data table
In-Reply-To: <161617690710112337n3fd83d7dge4925813c1ee476e@mail.gmail.com>
References: <674b4a3b0710040843v11932791vb19c9cc349ba86ef@mail.gmail.com>	<d9b01a0710111914ua26bc3ao61568835a5875064@mail.gmail.com>
	<161617690710112337n3fd83d7dge4925813c1ee476e@mail.gmail.com>
Message-ID: <470F9A89.8050202@mullenweg.com>

Otto wrote:
> We're doing weird stuff in WP too, like
> attachments as posts and other things that would be better served by
> good metadata. A refactoring of these is in order, and if a combined
> meta helps push that along, I'm all for it.

I would be strongly against moving attachments or other types of 
sub-posts out of the posts table. If nothing else, these items need the 
ability to have their own comments.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From m at mullenweg.com  Fri Oct 12 16:10:08 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Fri Oct 12 16:11:54 2007
Subject: [wp-hackers]  Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <1192192958.6331.6.camel@rillian>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
	<1192192958.6331.6.camel@rillian>
Message-ID: <470F9C60.3080604@mullenweg.com>

Jeremy Visser wrote:
> I am greatly shocked by the attitude you have, but I do not want to
> pollute with flamewars, so I will politely point you to these links,
> which appeared on the planet feeds aggregated on every single WordPress
> dashboard during September:

It's also worth mentioning that the low-volume WordPress main blog had 5 
posts about 2.3 prior to its release:

http://wordpress.org/development/2007/08/23-beta-1/
http://wordpress.org/development/2007/09/wordpress-23-beta-2/
http://wordpress.org/development/2007/09/wordpress-23-beta-3/
http://wordpress.org/development/2007/09/wordpress-23-release-candidate-1/
http://wordpress.org/development/2007/09/preparing-for-23/

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From m at mullenweg.com  Fri Oct 12 16:12:43 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Fri Oct 12 16:14:25 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <20071011220330.74e939a6@remstate.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>	<7b4922320710112040if716148v8bea593729ba2967@mail.gmail.com>	<op.tz2hnsshk6w4mc@dd32.no-ip.com>
	<20071011220330.74e939a6@remstate.com>
Message-ID: <470F9CFB.4050506@mullenweg.com>

Travis Snoozy wrote:
> ... not even then. 2.3 RC1 broke stuff that seemed to work fine up
> until that point (IIRC, this is when the post2cat et. al. tables were
> actually dropped). Unless you were following dev, you wouldn't have
> expected that. And the fixes plugin-side were certainly non-trivial.
> Following the betas gained you pretty much nothing in this case.

This is false. Anything that relied on direct SQL to the category tables 
would have been broken since the first beta, as those tables were no 
longer updated or used by the core code. The only thing that RC1 would 
have changed is you'd get a "table not found" error.

However the tables had not been updated or used for several versions 
before that, and if you didn't notice then you must not have been using 
them that closely.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From ai2097 at users.sourceforge.net  Fri Oct 12 17:55:51 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Fri Oct 12 17:55:57 2007
Subject: [wp-hackers] Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <470F9CFB.4050506@mullenweg.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>
	<7b4922320710112040if716148v8bea593729ba2967@mail.gmail.com>
	<op.tz2hnsshk6w4mc@dd32.no-ip.com>
	<20071011220330.74e939a6@remstate.com>
	<470F9CFB.4050506@mullenweg.com>
Message-ID: <20071012105551.7ce20d12@remstate.com>

On Fri, 12 Oct 2007 09:12:43 -0700, Matt Mullenweg <m@mullenweg.com>
wrote:

> Travis Snoozy wrote:
> > ... not even then. 2.3 RC1 broke stuff that seemed to work fine up
> > until that point (IIRC, this is when the post2cat et. al. tables
> > were actually dropped). Unless you were following dev, you wouldn't
> > have expected that. And the fixes plugin-side were certainly
> > non-trivial. Following the betas gained you pretty much nothing in
> > this case.
> 
> This is false. Anything that relied on direct SQL to the category
> tables would have been broken since the first beta, as those tables
> were no longer updated or used by the core code. The only thing that
> RC1 would have changed is you'd get a "table not found" error.
> 
> However the tables had not been updated or used for several versions 
> before that, and if you didn't notice then you must not have been
> using them that closely.

It's a half-truth, hinging on the definition of "seemed to work fine"
and the level of investigation done. The litmus test is generally "does
my plugin activate." The bizarro behavior is there, but it generally
takes a little more to notice it. Going down in flaming "OMG where's the
database" errors is a much clearer indication that something's broken,
and that didn't happen until RC1.

The only reason I mention it in these terms is because this topic
(something not "breaking" until RC1) happened on the wp-testers list
already[1].


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>

[1]
http://comox.textdrive.com/pipermail/wp-testers/2007-September/005344.html
From automattic.elm at gishpuppy.com  Fri Oct 12 23:45:06 2007
From: automattic.elm at gishpuppy.com (automattic.elm@gishpuppy.com)
Date: Fri Oct 12 23:53:34 2007
Subject: [wp-hackers] $wp_db_version and post_type [GishPuppy]
Message-ID: <20071012234506.A3366A13@minuteman.ai.net>

Hello all,

Just joined this list. I am working on a plugin and trying to figure out which $wp_db_version started using post_type for posts/pages/attachments. Is there a reference somewhere online of the table structure history? If not, does anyone know the answer to this question?

Many thanks,
jessica

Gishpuppy | To reply to this email, click here: 
http://www.gishpuppy.com/cgi-bin/edit.py?email=automattic.elm@gishpuppy.com
From spencerp1 at gmail.com  Sat Oct 13 00:02:20 2007
From: spencerp1 at gmail.com (spencerp)
Date: Sat Oct 13 00:02:27 2007
Subject: [wp-hackers]  Wordpress minor versions changing things for no
	reason, why?
In-Reply-To: <470F9C60.3080604@mullenweg.com>
References: <d9b01a0710111930iccfb848ka1eaf247b34aa59e@mail.gmail.com>	<1192192958.6331.6.camel@rillian>
	<470F9C60.3080604@mullenweg.com>
Message-ID: <47100B0C.3050209@gmail.com>

Matt Mullenweg wrote:
> Jeremy Visser wrote:
>> I am greatly shocked by the attitude you have, but I do not want to
>> pollute with flamewars, so I will politely point you to these links,
>> which appeared on the planet feeds aggregated on every single WordPress
>> dashboard during September:
>
> It's also worth mentioning that the low-volume WordPress main blog had 
> 5 posts about 2.3 prior to its release:
>
> http://wordpress.org/development/2007/08/23-beta-1/
> http://wordpress.org/development/2007/09/wordpress-23-beta-2/
> http://wordpress.org/development/2007/09/wordpress-23-beta-3/
> http://wordpress.org/development/2007/09/wordpress-23-release-candidate-1/ 
>
> http://wordpress.org/development/2007/09/preparing-for-23/
Yeah, that and I helped push the fact that THIS needed brought BEFORE 
the release too. I guess it goes to show no matter how far in advance 
the warning(s) are, people just don't read them or care about "them"... 
The warnings were posted on the bulletin boards in advanced to wake up 
plugin authors and such about various changes, and the possibility of 
plugin breakage... It's not the "developer's fault" ...

From wordpress at tekartist.org  Sat Oct 13 14:10:58 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Sat Oct 13 14:11:09 2007
Subject: [wp-hackers] iPhone Plugin Competition: Presenting WPhone
In-Reply-To: <7b4922320710092001n52c454cay3cd361028a6ae464@mail.gmail.com>
References: <8f93a7390710091612x685e96fx8a52caf218958f5d@mail.gmail.com>
	<7cf9ae490710091727h2e953081q79ab9104a908b47e@mail.gmail.com>
	<7b4922320710092001n52c454cay3cd361028a6ae464@mail.gmail.com>
Message-ID: <1900000B-DA3A-4C50-AD3D-FEC4FDF0B648@tekartist.org>


For those interested, I finally got my hands on an iPod Touch (latest  
firmware, not jailbroken), for the weekend, to test with. :)
Aaaaaaah, feels good to not be *flying blind* anymore. :)

So most of the spacing issues Dan was kind enough to point out  
(thanks Dan) have been worked out at <http://svn.wp-plugins.org/ 
wphone/branches/dev/> (unstable branch).

On this note, one good side effect of this whole thing is that it's  
looking like iUI will benefit from our little competition, as I've  
started submitting upstream patches.
<http://code.google.com/p/iui/issues/detail?id=28>
Call it killing two birds with one stone thrown. Now 2 projects will  
benefit from our common efforts. :)

Cheers,

Stephane


From ryan at boren.nu  Sat Oct 13 17:05:50 2007
From: ryan at boren.nu (Ryan Boren)
Date: Sat Oct 13 17:06:05 2007
Subject: [wp-hackers] $wp_db_version and post_type [GishPuppy]
In-Reply-To: <20071012234506.A3366A13@minuteman.ai.net>
References: <20071012234506.A3366A13@minuteman.ai.net>
Message-ID: <c8f37c930710131005u2b8494fckacd816064e171da1@mail.gmail.com>

On 10/12/07, automattic.elm@gishpuppy.com <automattic.elm@gishpuppy.com> wrote:
> Hello all,
>
> Just joined this list. I am working on a plugin and trying to figure out which $wp_db_version started using post_type for posts/pages/attachments. Is there a reference somewhere online of the table structure history? If not, does anyone know the answer to this question?

3506

I don't think we have a reference, although that would be handy.
From joe at joemaller.com  Sat Oct 13 16:56:50 2007
From: joe at joemaller.com (Joe Maller)
Date: Sat Oct 13 17:19:29 2007
Subject: [wp-hackers] get_pages() include vs. hierarchical
Message-ID: <48DE07A0-7D41-48AA-BB68-35A4E0F72CA8@joemaller.com>

I noticed something with get_pages() that some people might consider  
a bug.

When using only an include argument, the function won't return  
anything if the requested page is nested. This is because the  
function defaults to hierarchical display and won't return a child  
page unless that page's parent is also included.

The code snippets below are based on the following page structure:

ID 4  (top level page)
-- ID 14   (child page of ID 4)

ID 5 (another top level page)
-- ID 15 (child page of ID 5)


// returns page 4
get_pages('include=4');

// returns nothing
get_pages('include=14');

// returns pages 4 and 14:
get_pages('include=4,14');

// returns only page 4
get_pages('include=4,15');

// returns nothing
get_pages('include=14,15');

In all cases,  appending the 'hierarchical=0' argument returns all  
requested pages.

In my opinion, the expected behavior of a specifically requested set  
of pages should be to return all those pages if they exist. The  
get_pages() function already resets several other arguments if it  
gets an include list, should the default get_pages() behavior be  
modified to also set $hierarchical=0 when the include argument is non- 
empty?

At any rate, this behavior should be documented.

joe





From ozh at planetozh.com  Sat Oct 13 17:47:49 2007
From: ozh at planetozh.com (Ozh)
Date: Sat Oct 13 17:47:54 2007
Subject: [wp-hackers] Proposal for a function commenting convention
Message-ID: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>

Hello there

Again on the subject of "when the f*** was this function introduced?",
I have a simple proposal for the future: why not simply add a comment
stating in what version a particular function was implemented ?

Something like, short version:
/* do_stuff() : Does stuff. Added in WP 2.4-bleeding */

Or for a PHPDoc version, we could use:
/**
 * Does stuff
 * @return boolean
 * @version WP 2.4-bleeding
 */

Or even a custom tag such as "@wordpress 2.4"

I think this would, in the long run, really help casual plugin devs
(as well as others probably, but I'm a casual plugin dev :)

Thoughts ? (particularly from committers ?)

Cheers,

Ozh
-- 
http://FrenchFragFactory.net ~ Daily Quake News
http://planetOzh.com ~ Blog and WordPress Stuff
From robin.adr at gmail.com  Sat Oct 13 18:01:12 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Sat Oct 13 18:01:26 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
Message-ID: <d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>

PHPDoc, at least to me, seems to be the best option as it's rather
standardized and is both machine and human readable (well, reasonably so).

PHPDoc has a @since variable, which was made specifically for this purpose.

On 10/13/07, Ozh <ozh@planetozh.com> wrote:
>
> Hello there
>
> Again on the subject of "when the f*** was this function introduced?",
> I have a simple proposal for the future: why not simply add a comment
> stating in what version a particular function was implemented ?
>
> Something like, short version:
> /* do_stuff() : Does stuff. Added in WP 2.4-bleeding */
>
> Or for a PHPDoc version, we could use:
> /**
> * Does stuff
> * @return boolean
> * @version WP 2.4-bleeding
> */
>
> Or even a custom tag such as "@wordpress 2.4"
>
> I think this would, in the long run, really help casual plugin devs
> (as well as others probably, but I'm a casual plugin dev :)
>
> Thoughts ? (particularly from committers ?)
>
> Cheers,
>
> Ozh
> --
> http://FrenchFragFactory.net ~ Daily Quake News
> http://planetOzh.com ~ Blog and WordPress Stuff
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ozh at planetozh.com  Sat Oct 13 18:47:55 2007
From: ozh at planetozh.com (Ozh)
Date: Sat Oct 13 18:47:59 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
Message-ID: <ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>

On 10/13/07, Robin Adrianse <robin.adr@gmail.com> wrote:
> PHPDoc has a @since variable, which was made specifically for this purpose.

ah, missed this one, that's fine

But I'd really like at least a simple "// added in WP 2.4" even for
basic non phpdoc'ed stuff :)


-- 
http://FrenchFragFactory.net ~ Daily Quake News
http://planetOzh.com ~ Blog and WordPress Stuff
From jared at pacific22.com  Sat Oct 13 20:25:44 2007
From: jared at pacific22.com (Jared Bangs)
Date: Sat Oct 13 20:25:49 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
Message-ID: <7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>

On 10/13/07, Ozh <ozh@planetozh.com> wrote:
>
> On 10/13/07, Robin Adrianse <robin.adr@gmail.com> wrote:
> > PHPDoc has a @since variable, which was made specifically for this
> purpose.
>
> But I'd really like at least a simple "// added in WP 2.4" even for
> basic non phpdoc'ed stuff :)


+1 for using PHPDoc as a standard way of doing this. If we're going to go
back through and add comments to the existing code, it should definitely be
in a consistent format.
From wordpress at tekartist.org  Sun Oct 14 04:35:10 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Sun Oct 14 04:35:19 2007
Subject: [wp-hackers] Heartwarming side effect of the iPhone admin challenge.
Message-ID: <F8A48B8C-2A97-485B-9AD8-F06094CCEF78@tekartist.org>


Regardless of the material outcome, this whole WP/iPhone admin  
challenge might very well have a very good side effect faster than  
one would have thought.

Plank Design, the company I'm about to start working for (Oct. 29th)  
has a *pet project* where they've setup a group of 3 hospitals in  
Tanzania with a WordPress install to communicate with their audience.

<http://www.highlandshope.com/>
"Highlands Hope of Tanzania is an association of nurses who work as  
HIV-AIDS counsellors and caregivers in the Southern Highlands of  
Tanzania. Currently, their members are part of the healthcare staff  
at Consolata Hospital in Ikonda, the TANWAT Company Hospital in  
Njombe, and the PIUMA HIV Testing Centre in Bulongwa."

If you think about it, their current audience is of course mostly  
"limited" to computer/internet users, which in this part of the world  
is far from the majority of the population.

Knowing how it is far easier to find a decent mobile phone/network in  
Africa (never fully developed the copper infrastructure) than a  
decent computer/connection (xo laptop isn't quite there yet), I'm  
going to try to actually increase the scope of what WordPress allows  
the staff/volunteers to do by enabling them to actually reach a much  
broader audience through the mobile admin plugin and another project  
of mine, a php-based mobile feed reader (<http://tekartist.org/labs/ 
parseme/>).

In their context, and with this simple setup, WP could go from a  
blogging tool to bring awareness to their cause, to a full fledged  
communication platform by enabling the medical staff to blog from the  
field (remote villages), and the patients and/or authorities in these  
same remote locations could access up-to-date news through the WP feeds.

Now, it's safe to assume they're not going to use the iPhone  
interface much, but both of the released contender projects so far  
have committed to try and support a wide array of devices, with the  
latter actually being the focus at the core of our own efforts.

So here we are: from one simple question sent by Doug to the list on  
September 12th (what would it take to make a mobile WP admin?) to  
potentially making life a little better in the third World, all in  
less than a month. :)

Aaaaaaw.

Cheers,

Stephane Daury



From wordpress at santosj.name  Sun Oct 14 05:03:43 2007
From: wordpress at santosj.name (Jacob)
Date: Sun Oct 14 05:04:04 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
Message-ID: <4711A32F.5050501@santosj.name>

Err, yeah. Have you any thoughts of how the version which functions were 
added are going to be found? I'm not even sure the devs would know about 
every function. You'll find that checking repository log is neat for 
files, but doesn't really tell you much about functions. Unless of 
course you check each repository commit.

(After some contemplation, one could perhaps, download or find an old 
1.5 version and just start from there. Use the 1.5 version and just say 
that any and all functions that existed in that version started with 
that version and ignore the previous versions.)

Good luck with that. I would advise against trying it, because I can see 
into the future and I can tell you straight up and right now that you're 
not going to get very far before you give up. I know I would and you 
would have to be completely diehard and god-like to do so. Meaning that 
if you were to complete such a task, I would build a shine in your honor.

I think that going forward, it would be a good idea. Going back and 
adding @since isn't going to do any good, since well, plugin authors 
already know that their plugins don't work.

Besides that. I think that if you were (and by you, I mean we) going to 
add phpDoc comments, it should also include information about the 
function. What the function does and what it is used for and how in the 
code is more useful than @since (not that I'm saying @since is useless, 
because it isn't, it is more useful for future documentation than past).

In which case, I agree that the convention should be

/**
 * function_name() - Short description
 *
 * Long Description
 *
 * @param Stuff here
 * @return Stuff here
 * @since Version here (if known. Taxonomy should be updated to include 
@since 2.3)
 */

The reason for this convention is that the first thing a person wants to 
know is what the function purpose is without the filler crap. The second 
thing a coder wants to know after they've decided upon that, is more 
about what it does and how to use it. If you are really hardcore, you'll 
add (@example Code) or (@tutorial Text ... Code).

Meaning, while the "function_name()" portion is redundant in the 
phpDocumentor context, it is still useful for the reader browsing the 
code. You don't have to keep scrolling down to see what the function is, 
it is just right there at the top!

I did some work on the Taxonomy documentation. I would like very much if 
someone else would work on that. In that case, would it be neat if we 
picked a file and assigned functions to whoever wants them to write 
documentation for it? I'll be more willing to take up the task, if I 
knew others were undergoing the same torture I was.

Cheers,

Jacob Santos

Jared Bangs wrote:
> On 10/13/07, Ozh <ozh@planetozh.com> wrote:
>   
>> On 10/13/07, Robin Adrianse <robin.adr@gmail.com> wrote:
>>     
>>> PHPDoc has a @since variable, which was made specifically for this
>>>       
>> purpose.
>>
>> But I'd really like at least a simple "// added in WP 2.4" even for
>> basic non phpdoc'ed stuff :)
>>     
>
>
> +1 for using PHPDoc as a standard way of doing this. If we're going to go
> back through and add comments to the existing code, it should definitely be
> in a consistent format.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From speedboxer at gmail.com  Sun Oct 14 05:20:15 2007
From: speedboxer at gmail.com (Matt)
Date: Sun Oct 14 05:20:29 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <4711A32F.5050501@santosj.name>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
	<4711A32F.5050501@santosj.name>
Message-ID: <b88434820710132220v30b5eeb8ma6cdfceeaac7a64e@mail.gmail.com>

Ya... but... would documenting all (or most) of the functions make a huge
impact on load times on the files since they'll be loaded with useless (in
the executing sense) comments?

On 10/13/07, Jacob <wordpress@santosj.name> wrote:
>
> Err, yeah. Have you any thoughts of how the version which functions were
> added are going to be found? I'm not even sure the devs would know about
> every function. You'll find that checking repository log is neat for
> files, but doesn't really tell you much about functions. Unless of
> course you check each repository commit.
>
> (After some contemplation, one could perhaps, download or find an old
> 1.5 version and just start from there. Use the 1.5 version and just say
> that any and all functions that existed in that version started with
> that version and ignore the previous versions.)
>
> Good luck with that. I would advise against trying it, because I can see
> into the future and I can tell you straight up and right now that you're
> not going to get very far before you give up. I know I would and you
> would have to be completely diehard and god-like to do so. Meaning that
> if you were to complete such a task, I would build a shine in your honor.
>
> I think that going forward, it would be a good idea. Going back and
> adding @since isn't going to do any good, since well, plugin authors
> already know that their plugins don't work.
>
> Besides that. I think that if you were (and by you, I mean we) going to
> add phpDoc comments, it should also include information about the
> function. What the function does and what it is used for and how in the
> code is more useful than @since (not that I'm saying @since is useless,
> because it isn't, it is more useful for future documentation than past).
>
> In which case, I agree that the convention should be
>
> /**
> * function_name() - Short description
> *
> * Long Description
> *
> * @param Stuff here
> * @return Stuff here
> * @since Version here (if known. Taxonomy should be updated to include
> @since 2.3)
> */
>
> The reason for this convention is that the first thing a person wants to
> know is what the function purpose is without the filler crap. The second
> thing a coder wants to know after they've decided upon that, is more
> about what it does and how to use it. If you are really hardcore, you'll
> add (@example Code) or (@tutorial Text ... Code).
>
> Meaning, while the "function_name()" portion is redundant in the
> phpDocumentor context, it is still useful for the reader browsing the
> code. You don't have to keep scrolling down to see what the function is,
> it is just right there at the top!
>
> I did some work on the Taxonomy documentation. I would like very much if
> someone else would work on that. In that case, would it be neat if we
> picked a file and assigned functions to whoever wants them to write
> documentation for it? I'll be more willing to take up the task, if I
> knew others were undergoing the same torture I was.
>
> Cheers,
>
> Jacob Santos
>
> Jared Bangs wrote:
> > On 10/13/07, Ozh <ozh@planetozh.com> wrote:
> >
> >> On 10/13/07, Robin Adrianse <robin.adr@gmail.com> wrote:
> >>
> >>> PHPDoc has a @since variable, which was made specifically for this
> >>>
> >> purpose.
> >>
> >> But I'd really like at least a simple "// added in WP 2.4" even for
> >> basic non phpdoc'ed stuff :)
> >>
> >
> >
> > +1 for using PHPDoc as a standard way of doing this. If we're going to
> go
> > back through and add comments to the existing code, it should definitely
> be
> > in a consistent format.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From robin.adr at gmail.com  Sun Oct 14 05:48:07 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Sun Oct 14 05:48:14 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <b88434820710132220v30b5eeb8ma6cdfceeaac7a64e@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
	<4711A32F.5050501@santosj.name>
	<b88434820710132220v30b5eeb8ma6cdfceeaac7a64e@mail.gmail.com>
Message-ID: <d135ca9c0710132248l1be95f8au607aad8bb308385a@mail.gmail.com>

I highly doubt it, but someone more knowledgeable about the PHP code would
know for sure.

On 10/13/07, Matt <speedboxer@gmail.com> wrote:
>
> Ya... but... would documenting all (or most) of the functions make a huge
> impact on load times on the files since they'll be loaded with useless (in
> the executing sense) comments?
>
> On 10/13/07, Jacob <wordpress@santosj.name> wrote:
> >
> > Err, yeah. Have you any thoughts of how the version which functions were
> > added are going to be found? I'm not even sure the devs would know about
> > every function. You'll find that checking repository log is neat for
> > files, but doesn't really tell you much about functions. Unless of
> > course you check each repository commit.
> >
> > (After some contemplation, one could perhaps, download or find an old
> > 1.5 version and just start from there. Use the 1.5 version and just say
> > that any and all functions that existed in that version started with
> > that version and ignore the previous versions.)
> >
> > Good luck with that. I would advise against trying it, because I can see
> > into the future and I can tell you straight up and right now that you're
> > not going to get very far before you give up. I know I would and you
> > would have to be completely diehard and god-like to do so. Meaning that
> > if you were to complete such a task, I would build a shine in your
> honor.
> >
> > I think that going forward, it would be a good idea. Going back and
> > adding @since isn't going to do any good, since well, plugin authors
> > already know that their plugins don't work.
> >
> > Besides that. I think that if you were (and by you, I mean we) going to
> > add phpDoc comments, it should also include information about the
> > function. What the function does and what it is used for and how in the
> > code is more useful than @since (not that I'm saying @since is useless,
> > because it isn't, it is more useful for future documentation than past).
> >
> > In which case, I agree that the convention should be
> >
> > /**
> > * function_name() - Short description
> > *
> > * Long Description
> > *
> > * @param Stuff here
> > * @return Stuff here
> > * @since Version here (if known. Taxonomy should be updated to include
> > @since 2.3)
> > */
> >
> > The reason for this convention is that the first thing a person wants to
> > know is what the function purpose is without the filler crap. The second
> > thing a coder wants to know after they've decided upon that, is more
> > about what it does and how to use it. If you are really hardcore, you'll
> > add (@example Code) or (@tutorial Text ... Code).
> >
> > Meaning, while the "function_name()" portion is redundant in the
> > phpDocumentor context, it is still useful for the reader browsing the
> > code. You don't have to keep scrolling down to see what the function is,
> > it is just right there at the top!
> >
> > I did some work on the Taxonomy documentation. I would like very much if
> > someone else would work on that. In that case, would it be neat if we
> > picked a file and assigned functions to whoever wants them to write
> > documentation for it? I'll be more willing to take up the task, if I
> > knew others were undergoing the same torture I was.
> >
> > Cheers,
> >
> > Jacob Santos
> >
> > Jared Bangs wrote:
> > > On 10/13/07, Ozh <ozh@planetozh.com> wrote:
> > >
> > >> On 10/13/07, Robin Adrianse <robin.adr@gmail.com> wrote:
> > >>
> > >>> PHPDoc has a @since variable, which was made specifically for this
> > >>>
> > >> purpose.
> > >>
> > >> But I'd really like at least a simple "// added in WP 2.4" even for
> > >> basic non phpdoc'ed stuff :)
> > >>
> > >
> > >
> > > +1 for using PHPDoc as a standard way of doing this. If we're going to
> > go
> > > back through and add comments to the existing code, it should
> definitely
> > be
> > > in a consistent format.
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Matt (speedboxer@gmail.com)
> http://mattsblog.ca/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wordpress at santosj.name  Sun Oct 14 06:11:00 2007
From: wordpress at santosj.name (Jacob)
Date: Sun Oct 14 06:11:22 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <b88434820710132220v30b5eeb8ma6cdfceeaac7a64e@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>	<4711A32F.5050501@santosj.name>
	<b88434820710132220v30b5eeb8ma6cdfceeaac7a64e@mail.gmail.com>
Message-ID: <4711B2F4.1070508@santosj.name>

In the technical sense, comments are whitespace and compilers are built 
to quickly move over whitespace. The only drastic impact would be the 
increased file size, which would have to be loaded. This is really the 
file system issue and not that of PHP, if your file system sucks, then 
yeah, you'll probably feel something, if your server CPU also sucks.

This isn't JavaScript we are talking about here. In any case, the gains 
by having comments far outweigh the illusion of speed decrease. You show 
me a user that would actually notice the difference and I'll show you a 
host that sucks.

With any sort of opcode caching this would be a mute point since the 
file would be interpreted and compiled, in most cases, only once.

To reiterate, the bottlenecks are from file system to memory (small) and 
database queries (much larger). Parsing PHP does not even come close in 
comparsion.

Jacob Santos

Matt wrote:
> Ya... but... would documenting all (or most) of the functions make a huge
> impact on load times on the files since they'll be loaded with useless (in
> the executing sense) comments?
>
> On 10/13/07, Jacob <wordpress@santosj.name> wrote:
>   
>> Err, yeah. Have you any thoughts of how the version which functions were
>> added are going to be found? I'm not even sure the devs would know about
>> every function. You'll find that checking repository log is neat for
>> files, but doesn't really tell you much about functions. Unless of
>> course you check each repository commit.
>>
>> (After some contemplation, one could perhaps, download or find an old
>> 1.5 version and just start from there. Use the 1.5 version and just say
>> that any and all functions that existed in that version started with
>> that version and ignore the previous versions.)
>>
>> Good luck with that. I would advise against trying it, because I can see
>> into the future and I can tell you straight up and right now that you're
>> not going to get very far before you give up. I know I would and you
>> would have to be completely diehard and god-like to do so. Meaning that
>> if you were to complete such a task, I would build a shine in your honor.
>>
>> I think that going forward, it would be a good idea. Going back and
>> adding @since isn't going to do any good, since well, plugin authors
>> already know that their plugins don't work.
>>
>> Besides that. I think that if you were (and by you, I mean we) going to
>> add phpDoc comments, it should also include information about the
>> function. What the function does and what it is used for and how in the
>> code is more useful than @since (not that I'm saying @since is useless,
>> because it isn't, it is more useful for future documentation than past).
>>
>> In which case, I agree that the convention should be
>>
>> /**
>> * function_name() - Short description
>> *
>> * Long Description
>> *
>> * @param Stuff here
>> * @return Stuff here
>> * @since Version here (if known. Taxonomy should be updated to include
>> @since 2.3)
>> */
>>
>> The reason for this convention is that the first thing a person wants to
>> know is what the function purpose is without the filler crap. The second
>> thing a coder wants to know after they've decided upon that, is more
>> about what it does and how to use it. If you are really hardcore, you'll
>> add (@example Code) or (@tutorial Text ... Code).
>>
>> Meaning, while the "function_name()" portion is redundant in the
>> phpDocumentor context, it is still useful for the reader browsing the
>> code. You don't have to keep scrolling down to see what the function is,
>> it is just right there at the top!
>>
>> I did some work on the Taxonomy documentation. I would like very much if
>> someone else would work on that. In that case, would it be neat if we
>> picked a file and assigned functions to whoever wants them to write
>> documentation for it? I'll be more willing to take up the task, if I
>> knew others were undergoing the same torture I was.
>>
>> Cheers,
>>
>> Jacob Santos
>>
>> Jared Bangs wrote:
>>     
>>> On 10/13/07, Ozh <ozh@planetozh.com> wrote:
>>>
>>>       
>>>> On 10/13/07, Robin Adrianse <robin.adr@gmail.com> wrote:
>>>>
>>>>         
>>>>> PHPDoc has a @since variable, which was made specifically for this
>>>>>
>>>>>           
>>>> purpose.
>>>>
>>>> But I'd really like at least a simple "// added in WP 2.4" even for
>>>> basic non phpdoc'ed stuff :)
>>>>
>>>>         
>>> +1 for using PHPDoc as a standard way of doing this. If we're going to
>>>       
>> go
>>     
>>> back through and add comments to the existing code, it should definitely
>>>       
>> be
>>     
>>> in a consistent format.
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
>
>
>
>   

From ai2097 at users.sourceforge.net  Sun Oct 14 07:17:44 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Sun Oct 14 07:17:50 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <d135ca9c0710132248l1be95f8au607aad8bb308385a@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
	<4711A32F.5050501@santosj.name>
	<b88434820710132220v30b5eeb8ma6cdfceeaac7a64e@mail.gmail.com>
	<d135ca9c0710132248l1be95f8au607aad8bb308385a@mail.gmail.com>
Message-ID: <20071014001744.0adb0e9a@remstate.com>

On Sat, 13 Oct 2007 22:48:07 -0700, "Robin Adrianse"
<robin.adr@gmail.com> wrote:

> I highly doubt it, but someone more knowledgeable about the PHP code
> would know for sure.
> 
> On 10/13/07, Matt <speedboxer@gmail.com> wrote:
> >
> > Ya... but... would documenting all (or most) of the functions make
> > a huge impact on load times on the files since they'll be loaded
> > with useless (in the executing sense) comments?

When in doubt, get some numbers. ;) I'm actually sort of surprised at
the results I got.

There does seem to be a distinct overhead involved with parsing
comments. Specifically, I observed a 7.5% increase in the test load's
average run time, and (assuming that the difference between the
commented/non-commented times on the test load can be added to the
non-commented average page generation time) a possible 12.2% increase
in page generation time.

My assumptions/setup are laid out as follows:

* In wordpress 2.3, the string "function " comes up 2,425 times. A
very conservative estimate would put every one of these instances as a
function declaration that's part of the API.

* Assuming each function takes an average of 1000 total comment
characters to document (almost certainly a low number), that's 2,425,000
characters of comments.

* Comments were split into 1000-character blocks (multi-line) -- one
giant multi-line comment took substantially longer to parse, but was
inconsistent with the actual comment pattern that would be used.

* All tests were performed on the same box, using
PHP 5.2.4_p20070914-pl2-gentoo, and WordPress 2.3/MySQL 5.0.44/Apache
2.2.6 (where applicable).


Here's the data I collected (using the "time" command):


Running a file containing only the comments:
real    0m0.153s	real    0m0.148s	real    0m0.143s
user    0m0.083s	user    0m0.083s	user    0m0.080s
sys     0m0.003s	sys     0m0.003s	sys     0m0.007s

Average real: 0.148s


Echoing zero to a million to /dev/null (with comments):
real    0m1.575s	real    0m1.586s	real    0m1.578s
user    0m1.373s	user    0m1.337s	user    0m1.340s
sys     0m0.137s	sys     0m0.180s	sys     0m0.183s

Average real: 1.580s


Echoing zero to a million to /dev/null with no comments:
real    0m1.467s	real    0m1.464s	real    0m1.465s
user    0m1.253s	user    0m1.327s	user    0m1.323s
sys     0m0.203s	sys     0m0.127s	sys     0m0.133s

Average real: 1.465s


Running an empty file (<?php?>):
real    0m0.021s	real    0m0.023s	real    0m0.023s
user    0m0.020s	user    0m0.020s	user    0m0.020s
sys     0m0.000s	sys     0m0.003s	sys     0m0.003s


Dumping the commented code file to /dev/null with cat:
real    0m0.003s	real    0m0.006s	real    0m0.004s
user    0m0.000s	user    0m0.000s	user    0m0.000s
sys     0m0.003s	sys     0m0.007s	sys     0m0.003s


For reference, these are the times it took to load the front page of my
test blog (on the same machine as these other tests were performed):
1.076 seconds
0.810 seconds
0.948 seconds

Average generation time: 0.945s


And just for the curious...
Running a file with one huge comment (~2.4 million chars):

real    0m0.726s	real    0m0.731s	real    0m0.714s
user    0m0.633s	user    0m0.653s	user    0m0.630s
sys     0m0.017s	sys     0m0.000s	sys     0m0.023s



7-12% is a pretty big performance hit -- even a 4-5% improvement in
script running time would still be worth considering optimization in
many circumstances. Thus, it may be beneficial, if substantial
commenting is added, to strip that commenting out in the distributed
zipfile that's intended for deployment. Of course, we'll only know the
actual impact once all those comments are there, but the ballpark
figures would seem to indicate that it's worth keeping an eye on.


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From kimmo at global-wire.fi  Sun Oct 14 07:31:25 2007
From: kimmo at global-wire.fi (Kimmo Suominen)
Date: Sun Oct 14 07:31:37 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <20071014001744.0adb0e9a@remstate.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
	<4711A32F.5050501@santosj.name>
	<b88434820710132220v30b5eeb8ma6cdfceeaac7a64e@mail.gmail.com>
	<d135ca9c0710132248l1be95f8au607aad8bb308385a@mail.gmail.com>
	<20071014001744.0adb0e9a@remstate.com>
Message-ID: <20071014073125.GP10927@kimmo.suominen.com>

Hi Travis,

Numbers are good, but I'm not sure you are using the right ones.  The
real time is wall clock time, and is affected by all jobs running on
the system.  I think the relevant number is the sum of user and sys
times.

Also, since you list e.g. the Apache version, it sounds like you are
possibly using something like wget to request an URL from the web
server (which causes the PHP script to execute).  This means that
the number of requests coming in to the web server at the same time
also affects the result, as well as other IP traffic on the box.

To get the impact on PHP execution time, you should run PHP directly
from the command line using the time command.  Maybe this is what
you did, but it is not clear to me from your message.

Even then you should probably run something like 1000 repeats of
each, and use the average (or median or something -- I'm by no means
well versed in statistics).

Best regards,
+ Kimmo
-- 
<A HREF="http://kimmo.suominen.com/">Kimmo Suominen</A>


On Sun, Oct 14, 2007 at 12:17:44AM -0700, Travis Snoozy wrote:
> 
> There does seem to be a distinct overhead involved with parsing
> comments. Specifically, I observed a 7.5% increase in the test load's
> average run time, and (assuming that the difference between the
> commented/non-commented times on the test load can be added to the
> non-commented average page generation time) a possible 12.2% increase
> in page generation time.
> 
> * All tests were performed on the same box, using
> PHP 5.2.4_p20070914-pl2-gentoo, and WordPress 2.3/MySQL 5.0.44/Apache
> 2.2.6 (where applicable).
> 
> 
> Here's the data I collected (using the "time" command):
> 
> Running a file containing only the comments:
> Echoing zero to a million to /dev/null (with comments):
> Echoing zero to a million to /dev/null with no comments:
> Running an empty file (<?php?>):
> Dumping the commented code file to /dev/null with cat:

From wordpress at santosj.name  Sun Oct 14 07:42:17 2007
From: wordpress at santosj.name (Jacob)
Date: Sun Oct 14 07:42:45 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <4711A32F.5050501@santosj.name>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
	<4711A32F.5050501@santosj.name>
Message-ID: <4711C859.5030100@santosj.name>

Question: Should the since be which one?

1. @since 1.5
2. @since WP 1.5
3. @since WordPress 1.5
4. @since Version 1.5

I'm using #1 since it is the easiest. #3 might be useful if WordPress Mu 
ever jumps on board and does the same for its functions. However, it 
could just use @package or @category to distinguish its version from 
WordPress version. Or you could just have @category WordPress. However, 
I believe versions of phpDocumentor do not use @category for rendering 
the documentation HTML pages.

In shutdown_action_hook(), which a little humorous because that function 
is a @since 1.5 function.

{
$arrFunctionList = 
<http://us3.php.net/manual/en/function.get-defined-functions.php>get_defined_functions();
foreach($arrFunctionList['user'] as $strFunctionName)
{
    echo "$strFunctionName<br />\n";
}
}

Really does wonders, but I'm setting it up for trunk and doing a massive 
find to get the declaration in trunk version. Some classes and functions 
don't exist in trunk. I'm not doing this for admin files, because I 
enjoy little is left of my sanity.

Using this sort of grep method, you should be able to get all of the 
functions that are used in the tagged versions in the repository. Grep 
might be useful, but since I'm a Windows user, I don't have that easily 
functionality. Windows Search just isn't that elegant with these types 
of searches.

Jacob Santos


Jacob wrote:
> Err, yeah. Have you any thoughts of how the version which functions 
> were added are going to be found? I'm not even sure the devs would 
> know about every function. You'll find that checking repository log is 
> neat for files, but doesn't really tell you much about functions. 
> Unless of course you check each repository commit.
>
> (After some contemplation, one could perhaps, download or find an old 
> 1.5 version and just start from there. Use the 1.5 version and just 
> say that any and all functions that existed in that version started 
> with that version and ignore the previous versions.)

From wordpress at santosj.name  Sun Oct 14 07:56:11 2007
From: wordpress at santosj.name (Jacob)
Date: Sun Oct 14 07:56:34 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <20071014001744.0adb0e9a@remstate.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>	<4711A32F.5050501@santosj.name>	<b88434820710132220v30b5eeb8ma6cdfceeaac7a64e@mail.gmail.com>	<d135ca9c0710132248l1be95f8au607aad8bb308385a@mail.gmail.com>
	<20071014001744.0adb0e9a@remstate.com>
Message-ID: <4711CB9B.1060206@santosj.name>

You have to post your code.

In theory, it does make sense that comments will have a minor impact on 
performance, however it shouldn't have that much impact. The characters 
would still have to be parsed up to the point where a clear guess could 
be figured. Up to the point where it can be gathered that the line is 
whitespace it would have to devote some time to figuring out what to do 
before it can skip it and move on.

Much to the same reason why shorter variable names would have better 
performance than longer ones. I very much prefer longer variable names 
and also very much prefer documentation over having none.

Jacob Santos

Travis Snoozy wrote:
> On Sat, 13 Oct 2007 22:48:07 -0700, "Robin Adrianse"
> <robin.adr@gmail.com> wrote:
>
>   
>> I highly doubt it, but someone more knowledgeable about the PHP code
>> would know for sure.
>>
>> On 10/13/07, Matt <speedboxer@gmail.com> wrote:
>>     
>>> Ya... but... would documenting all (or most) of the functions make
>>> a huge impact on load times on the files since they'll be loaded
>>> with useless (in the executing sense) comments?
>>>       
>
> When in doubt, get some numbers. ;) I'm actually sort of surprised at
> the results I got.
>
> There does seem to be a distinct overhead involved with parsing
> comments. Specifically, I observed a 7.5% increase in the test load's
> average run time, and (assuming that the difference between the
> commented/non-commented times on the test load can be added to the
> non-commented average page generation time) a possible 12.2% increase
> in page generation time.
>
> My assumptions/setup are laid out as follows:
>
> * In wordpress 2.3, the string "function " comes up 2,425 times. A
> very conservative estimate would put every one of these instances as a
> function declaration that's part of the API.
>
> * Assuming each function takes an average of 1000 total comment
> characters to document (almost certainly a low number), that's 2,425,000
> characters of comments.
>
> * Comments were split into 1000-character blocks (multi-line) -- one
> giant multi-line comment took substantially longer to parse, but was
> inconsistent with the actual comment pattern that would be used.
>
> * All tests were performed on the same box, using
> PHP 5.2.4_p20070914-pl2-gentoo, and WordPress 2.3/MySQL 5.0.44/Apache
> 2.2.6 (where applicable).
>
>
> Here's the data I collected (using the "time" command):
>
>
> Running a file containing only the comments:
> real    0m0.153s	real    0m0.148s	real    0m0.143s
> user    0m0.083s	user    0m0.083s	user    0m0.080s
> sys     0m0.003s	sys     0m0.003s	sys     0m0.007s
>
> Average real: 0.148s
>
>
> Echoing zero to a million to /dev/null (with comments):
> real    0m1.575s	real    0m1.586s	real    0m1.578s
> user    0m1.373s	user    0m1.337s	user    0m1.340s
> sys     0m0.137s	sys     0m0.180s	sys     0m0.183s
>
> Average real: 1.580s
>
>
> Echoing zero to a million to /dev/null with no comments:
> real    0m1.467s	real    0m1.464s	real    0m1.465s
> user    0m1.253s	user    0m1.327s	user    0m1.323s
> sys     0m0.203s	sys     0m0.127s	sys     0m0.133s
>
> Average real: 1.465s
>
>
> Running an empty file (<?php?>):
> real    0m0.021s	real    0m0.023s	real    0m0.023s
> user    0m0.020s	user    0m0.020s	user    0m0.020s
> sys     0m0.000s	sys     0m0.003s	sys     0m0.003s
>
>
> Dumping the commented code file to /dev/null with cat:
> real    0m0.003s	real    0m0.006s	real    0m0.004s
> user    0m0.000s	user    0m0.000s	user    0m0.000s
> sys     0m0.003s	sys     0m0.007s	sys     0m0.003s
>
>
> For reference, these are the times it took to load the front page of my
> test blog (on the same machine as these other tests were performed):
> 1.076 seconds
> 0.810 seconds
> 0.948 seconds
>
> Average generation time: 0.945s
>
>
> And just for the curious...
> Running a file with one huge comment (~2.4 million chars):
>
> real    0m0.726s	real    0m0.731s	real    0m0.714s
> user    0m0.633s	user    0m0.653s	user    0m0.630s
> sys     0m0.017s	sys     0m0.000s	sys     0m0.023s
>
>
>
> 7-12% is a pretty big performance hit -- even a 4-5% improvement in
> script running time would still be worth considering optimization in
> many circumstances. Thus, it may be beneficial, if substantial
> commenting is added, to strip that commenting out in the distributed
> zipfile that's intended for deployment. Of course, we'll only know the
> actual impact once all those comments are there, but the ballpark
> figures would seem to indicate that it's worth keeping an eye on.
>
>
>   

From speedboxer at gmail.com  Sun Oct 14 07:56:30 2007
From: speedboxer at gmail.com (Matt)
Date: Sun Oct 14 07:56:35 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <4711C859.5030100@santosj.name>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
	<4711A32F.5050501@santosj.name> <4711C859.5030100@santosj.name>
Message-ID: <b88434820710140056h27b89449r8124ea6d81b60e0e@mail.gmail.com>

On 10/14/07, Jacob <wordpress@santosj.name> wrote:
>
> Question: Should the since be which one?
>
> 1. @since 1.5
> 2. @since WP 1.5
> 3. @since WordPress 1.5
> 4. @since Version 1.5
>

I like the 1st one better. It's shorter, and it gets to the point quicker.

-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From ai2097 at users.sourceforge.net  Sun Oct 14 08:18:11 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Sun Oct 14 08:18:26 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <20071014073125.GP10927@kimmo.suominen.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
	<4711A32F.5050501@santosj.name>
	<b88434820710132220v30b5eeb8ma6cdfceeaac7a64e@mail.gmail.com>
	<d135ca9c0710132248l1be95f8au607aad8bb308385a@mail.gmail.com>
	<20071014001744.0adb0e9a@remstate.com>
	<20071014073125.GP10927@kimmo.suominen.com>
Message-ID: <20071014011811.178507dc@remstate.com>

On Sun, 14 Oct 2007 10:31:25 +0300, Kimmo Suominen
<kimmo@global-wire.fi> wrote:

> Hi Travis,
> 
> Numbers are good, but I'm not sure you are using the right ones.  The
> real time is wall clock time, and is affected by all jobs running on
> the system.  I think the relevant number is the sum of user and sys
> times.

The system was very lightly loaded. I locked the CPU to its maximum
frequency for the tests, and it idles at ~2-3% there. Wall clock time
was used because it was the only thing marginally comparable to the page
generation time I'd see in the embedded WordPress page generation stats.

<snip>
> To get the impact on PHP execution time, you should run PHP directly
> from the command line using the time command.  Maybe this is what
> you did, but it is not clear to me from your message.

I ran the test load from the command line. The WordPress home page for
my test installation was generated via Apache; the generation time was
taken from the embedded generation stats at the end of the page. These
values should not be affected by Apache (AFAIK).

> Even then you should probably run something like 1000 repeats of
> each, and use the average (or median or something -- I'm by no means
> well versed in statistics).

"Statistically significant" tends to start at 20, but I didn't care
*that* much ;). Standard deviation et. al. would be nice for getting a
higher confidence in the numbers, but even taking the margin of error
up to +/-50% would still leave 3.5% on the low end and 24% on the
high.


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From wordpress at santosj.name  Sun Oct 14 08:18:35 2007
From: wordpress at santosj.name (Jacob)
Date: Sun Oct 14 08:19:03 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <b88434820710140056h27b89449r8124ea6d81b60e0e@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>	<4711A32F.5050501@santosj.name>
	<4711C859.5030100@santosj.name>
	<b88434820710140056h27b89449r8124ea6d81b60e0e@mail.gmail.com>
Message-ID: <4711D0DB.6010705@santosj.name>

Matt wrote:
> On 10/14/07, Jacob <wordpress@santosj.name> wrote:
>   
>> Question: Should the since be which one?
>>
>> 1. @since 1.5
>> 2. @since WP 1.5
>> 3. @since WordPress 1.5
>> 4. @since Version 1.5
>>
>>     
>
> I like the 1st one better. It's shorter, and it gets to the point quicker.
>
>   
I was thinking about contexts such as "2.3-bleeding" or "2.4-bleeding" 
or "2.3-beta1" as the main concern is the completed working version the 
function is going to exist. For testing purposes, does it mean anything 
if you have the trunk version and the since is 2.4, but it hasn't been 
release yet. Can you just assume that it the since is the next version.

What I mean, is that a user is going to download the release version, 
which will be accurate to them, but not the plugin tester. Well, my 
logic is flawed, because most normal users are not going to break open 
the code and say, "Oh yeah, that is when that was added, I really needed 
to know that."

Henceforth, it would be a good idea to include the "-bleeding" to say 
the function was released prior to beta and maybe include the SVN 
revision number and for betas and release candidates, include "-beta#" 
for beta and "-RC#" for release candidates.

For the older releases, at least the patches I'm going to create, I'm 
going off the completed releases and not worrying with -bleeding or 
whatever. Tags are much much easier to go by for past releases.

Do we also want to document every function or focus on just the 
wp-includes? If we focus on just wp-includes, it would leave out 
xmlrpc.php functions and class and perhaps some others. Then again, the 
method I listed does not give you the file the function exists. It also 
does not help if you have plugins installed.

Jacob Santos
From ai2097 at users.sourceforge.net  Sun Oct 14 08:20:11 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Sun Oct 14 08:20:25 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <4711CB9B.1060206@santosj.name>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
	<4711A32F.5050501@santosj.name>
	<b88434820710132220v30b5eeb8ma6cdfceeaac7a64e@mail.gmail.com>
	<d135ca9c0710132248l1be95f8au607aad8bb308385a@mail.gmail.com>
	<20071014001744.0adb0e9a@remstate.com>
	<4711CB9B.1060206@santosj.name>
Message-ID: <20071014012011.2d2af2a5@remstate.com>

On Sun, 14 Oct 2007 02:56:11 -0500, Jacob <wordpress@santosj.name>
wrote:

> You have to post your code.

Attached (gzip'd file, test load + comments). Procedure:

1. Comments + test load
time php test.php > /dev/null

2. Just the test load
sed -r -i -e '/\*/D' test.php
time php test.php > /dev/null

3. Vs. a WordPress installation's generation times
I'd have to generate a test DB that was clean to send out for this to
be anywhere near comparable. I'm too lazy, but a default installation
with no posts and no plugins enabled would probably be a sufficient
milestone. I did NOT use an empty DB for my numbers.


> In theory, it does make sense that comments will have a minor impact
> on performance, however it shouldn't have that much impact. The
> characters would still have to be parsed up to the point where a
> clear guess could be figured. Up to the point where it can be
> gathered that the line is whitespace it would have to devote some
> time to figuring out what to do before it can skip it and move on.
>
> Much to the same reason why shorter variable names would have better 
> performance than longer ones. I very much prefer longer variable
> names and also very much prefer documentation over having none.

For that matter, a proper optimizing compiler + cache would do a whole
hell of a lot more for an installation than length tweaks, and would
also completely remove the comment issue on any responses served from
the cache. I'm certainly not arguing against inline documentation on
performance grounds -- I think that it's critical to start getting
test-grade PHPDoc-style API documentation in. I'm just pondering/
hypothesizing about whether those comments should be automatically
stripped from the deployment zip to improve performance on sites that
don't have (and especially ones that can't get) caching.



-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From ai2097 at users.sourceforge.net  Sun Oct 14 08:36:07 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Sun Oct 14 08:36:21 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <20071014012011.2d2af2a5@remstate.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
	<4711A32F.5050501@santosj.name>
	<b88434820710132220v30b5eeb8ma6cdfceeaac7a64e@mail.gmail.com>
	<d135ca9c0710132248l1be95f8au607aad8bb308385a@mail.gmail.com>
	<20071014001744.0adb0e9a@remstate.com>
	<4711CB9B.1060206@santosj.name>
	<20071014012011.2d2af2a5@remstate.com>
Message-ID: <20071014013607.65f3138f@remstate.com>

On Sun, 14 Oct 2007 01:20:11 -0700, Travis Snoozy
<ai2097@users.sourceforge.net> wrote:

> On Sun, 14 Oct 2007 02:56:11 -0500, Jacob <wordpress@santosj.name>
> wrote:
> 
> > You have to post your code.
> 
> Attached (gzip'd file, test load + comments). Procedure:
> 

Bah. I keep forgetting the list eats attachments. See
<http://remstate.com/php-comment-benchmark/test.php.gz>.

-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From wordpress at santosj.name  Sun Oct 14 08:59:15 2007
From: wordpress at santosj.name (Jacob)
Date: Sun Oct 14 08:59:47 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <4711D0DB.6010705@santosj.name>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>	<4711A32F.5050501@santosj.name>	<4711C859.5030100@santosj.name>	<b88434820710140056h27b89449r8124ea6d81b60e0e@mail.gmail.com>
	<4711D0DB.6010705@santosj.name>
Message-ID: <4711DA63.5050103@santosj.name>

In a nutshell:

1. Should be include the "-bleeding", "-beta#", "-rc#" along with the 
version if applicable. I vote yes.
2. Do we concern ourselves with just wp-includes/*.php or with the 
entire function codebase, except for admin (unless you really want to).
3. What do we do with functions that we apply @since, @return, and 
@param too?
4. Since we are documenting functions, should we also document files 
(file level phpDoc), globals, and defines (thinking more of the wider 
context of having a phpdocumentor site).
5. Should we hold all functions in public namespace? I'm limiting some 
such as wp_unregister_GLOBALS() and setting it to private, meaning it 
shouldn't show up on any phpdocumentor site. Do we really need to fully 
document those functions, because no one should be using it. If it 
doesn't work, then it really needs to be unit tested to see if it is broken.

For #3:

I was thinking of boilerplate text:

/**
 * function_name() - Undocumented
 *
 * Undocumented
 *
 * @package Whatever
 * @subpackage WhateverSub
 * @since 1.5
 * @param if applicable
 * @return null Does not return anything or returns no explicit type.
 */

The "Undocumented" text would serve as a starting point for future 
documentation of procedural code. That is, it would give the reader a 
placeholder to document the function and submit the patch to trac. I 
think the simple functions are too easy to not fully document.

Jacob Santos

Jacob wrote:
> Matt wrote:
>> On 10/14/07, Jacob <wordpress@santosj.name> wrote:
>>  
>>> Question: Should the since be which one?
>>>
>>> 1. @since 1.5
>>> 2. @since WP 1.5
>>> 3. @since WordPress 1.5
>>> 4. @since Version 1.5
>>>
>>>     
>>
>> I like the 1st one better. It's shorter, and it gets to the point 
>> quicker.
>>
>>   
> I was thinking about contexts such as "2.3-bleeding" or "2.4-bleeding" 
> or "2.3-beta1" as the main concern is the completed working version 
> the function is going to exist. For testing purposes, does it mean 
> anything if you have the trunk version and the since is 2.4, but it 
> hasn't been release yet. Can you just assume that it the since is the 
> next version.
>
> What I mean, is that a user is going to download the release version, 
> which will be accurate to them, but not the plugin tester. Well, my 
> logic is flawed, because most normal users are not going to break open 
> the code and say, "Oh yeah, that is when that was added, I really 
> needed to know that."
>
> Henceforth, it would be a good idea to include the "-bleeding" to say 
> the function was released prior to beta and maybe include the SVN 
> revision number and for betas and release candidates, include "-beta#" 
> for beta and "-RC#" for release candidates.
>
> For the older releases, at least the patches I'm going to create, I'm 
> going off the completed releases and not worrying with -bleeding or 
> whatever. Tags are much much easier to go by for past releases.
>
> Do we also want to document every function or focus on just the 
> wp-includes? If we focus on just wp-includes, it would leave out 
> xmlrpc.php functions and class and perhaps some others. Then again, 
> the method I listed does not give you the file the function exists. It 
> also does not help if you have plugins installed.
>
> Jacob Santos
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From kimmo at global-wire.fi  Sun Oct 14 09:30:58 2007
From: kimmo at global-wire.fi (Kimmo Suominen)
Date: Sun Oct 14 09:31:08 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <20071014011811.178507dc@remstate.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
	<4711A32F.5050501@santosj.name>
	<b88434820710132220v30b5eeb8ma6cdfceeaac7a64e@mail.gmail.com>
	<d135ca9c0710132248l1be95f8au607aad8bb308385a@mail.gmail.com>
	<20071014001744.0adb0e9a@remstate.com>
	<20071014073125.GP10927@kimmo.suominen.com>
	<20071014011811.178507dc@remstate.com>
Message-ID: <20071014093058.GR10927@kimmo.suominen.com>

Thanks for the clarification -- I think it makes the numbers more
useful, as I can understand what they represent.  :)

On Sun, Oct 14, 2007 at 01:18:11AM -0700, Travis Snoozy wrote:
> On Sun, 14 Oct 2007 10:31:25 +0300, Kimmo Suominen
> <kimmo@global-wire.fi> wrote:
> 
> > Hi Travis,
> > 
> > Numbers are good, but I'm not sure you are using the right ones.  The
> > real time is wall clock time, and is affected by all jobs running on
> > the system.  I think the relevant number is the sum of user and sys
> > times.
> 
> The system was very lightly loaded. I locked the CPU to its maximum
> frequency for the tests, and it idles at ~2-3% there. Wall clock time
> was used because it was the only thing marginally comparable to the page
> generation time I'd see in the embedded WordPress page generation stats.

The page generation stats shown by WP (timer_start() and timer_stop())
are indeed wall clock time as well.

However, it still feels wrong to use wall clock time to measure the
impact of comments in the code.  There are more factors that affect
the amount of wall clock time passing.

On the other hand, the sys time should account for the increased time
to read the larger source file, and the user time should account for
the increase in processing the comments.

> <snip>
> > To get the impact on PHP execution time, you should run PHP directly
> > from the command line using the time command.  Maybe this is what
> > you did, but it is not clear to me from your message.
> 
> I ran the test load from the command line. The WordPress home page for
> my test installation was generated via Apache; the generation time was
> taken from the embedded generation stats at the end of the page. These
> values should not be affected by Apache (AFAIK).

This is again going near the outer edges of my knowledge.  But I think
that when using mod_php, other things happening in Apache can have an
impact.  For example, I'm not sure what things have mutexes, if any,
that may need to be acquired by the thread executing the PHP code in
question, and if those can be contested by other parts of Apache.

> > Even then you should probably run something like 1000 repeats of
> > each, and use the average (or median or something -- I'm by no means
> > well versed in statistics).
> 
> "Statistically significant" tends to start at 20, but I didn't care
> *that* much ;). Standard deviation et. al. would be nice for getting a
> higher confidence in the numbers, but even taking the margin of error
> up to +/-50% would still leave 3.5% on the low end and 24% on the
> high.

An increased number of tests might reveal that the measurement is not
suitable for detecting a difference.  Maybe.  :)

Best regards,
+ Kimmo
-- 
<A HREF="http://kimmo.suominen.com/">Kimmo Suominen</A>

From ai2097 at users.sourceforge.net  Sun Oct 14 10:00:23 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Sun Oct 14 10:00:28 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <4711DA63.5050103@santosj.name>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
	<4711A32F.5050501@santosj.name> <4711C859.5030100@santosj.name>
	<b88434820710140056h27b89449r8124ea6d81b60e0e@mail.gmail.com>
	<4711D0DB.6010705@santosj.name> <4711DA63.5050103@santosj.name>
Message-ID: <20071014030023.0a094d09@remstate.com>

On Sun, 14 Oct 2007 03:59:15 -0500, Jacob <wordpress@santosj.name>
wrote:

My opinions do not necessarily reflect those of the devs or the
community at large... ;)

The goal that I'm going for in all of this is to stop the bleeding --
the API is a (somewhat subtle) mess stability-wise, and documentation
is a requirement (and a big step forward) to fixing that. Ideally,
thinks would be "spec first, code second," but pragmatically speaking,
a "code, iterate, freeze" can be made to work similarly.

> In a nutshell:
> 
> 1. Should be include the "-bleeding", "-beta#", "-rc#" along with the 
> version if applicable. I vote yes.

My inclination would be not to -- I see no compelling reason to add this
level of granularity, as people target "WordPress 2.2.2+" or
"WordPress 2.3", not "WordPress 2.3 RC1".

Also, for maximum usefulness, it may be necessary to document the
major/breaking changes between the same function in different versions
of WordPress (e.g., get_the_title returning raw titles before 2.3, and
filtered titles with 2.3+). Trying to do this with bleeding, betas and
RCs would be a lot of work, with very little usefulness (again, because
people tend to target full releases; everything else is assumed
broken or in flux).

> 2. Do we concern ourselves with just wp-includes/*.php or with the 
> entire function codebase, except for admin (unless you really want
> to).

You're putting the cart ahead of the horse. All public APIs should
probably be a subset of wp-includes/* (not that they are), but it's not
necessarily true that everything in wp-includes/* is a public API.
Determining which are public and which are not should probably come
first. Then, the public APIs should get priority on documentation.
There's an added twist in that public APIs need to be documented based
on what they *should* do, as opposed to what they currently do -- this
will require inputs from the devs (at least), and some level of
consensus. If the implementation is broken vs. what it should do, then
multiple documentation may be required (as noted in #1).

> 3. What do we do with functions that we apply @since, @return,
> and @param too?

A style guide would be a Good Thing to ensure that the entries are
consistent, as well as to help ensure that all the information is
included for each function (e.g., when returning non-class objects,
which properties the objects have, what their value types are, etc.).

> 4. Since we are documenting functions, should we also document files 
> (file level phpDoc), globals, and defines (thinking more of the wider 
> context of having a phpdocumentor site).

Same deal here as with the functions -- the globals/defines that are
considered public need to be sorted from the ones that are private, and
the public ones given documentation priority.

> 5. Should we hold all functions in public namespace? I'm limiting
> some such as wp_unregister_GLOBALS() and setting it to private,
> meaning it shouldn't show up on any phpdocumentor site. Do we really
> need to fully document those functions, because no one should be
> using it. If it doesn't work, then it really needs to be unit tested
> to see if it is broken.

Pretty much the same issue as with #2 and #4. There is no crystal-clear
delineation between internal/private and external at the moment.

> For #3:
> 
> I was thinking of boilerplate text:
> 
> /**
>  * function_name() - Undocumented
>  *
>  * Undocumented
>  *
>  * @package Whatever
>  * @subpackage WhateverSub
>  * @since 1.5
>  * @param if applicable
>  * @return null Does not return anything or returns no explicit type.
>  */
> 
> The "Undocumented" text would serve as a starting point for future 
> documentation of procedural code. That is, it would give the reader a 
> placeholder to document the function and submit the patch to trac. I 
> think the simple functions are too easy to not fully document.

For new functions, the boilerplate should probably be marked "private"
at first, and only get a version (and be switched to public) after
thorough review to make sure that the API isn't horribly broken in some
way. For existing functions, the boilerplate should probably still be
marked private until the API is sanity-checked, documented and frozen,
and the version should be set to either the current version (if it
conforms to the spec) or the next version (if the current version
doesn't conform). In either case, there should be a note to back-trace
and update, indicating how far back checks have been made.

I'm also partial to precondition/postcondition sections, as a standard
way to document the value limitations on input params (at minimum).


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From jeremy.visser at gmail.com  Sun Oct 14 10:24:51 2007
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Sun Oct 14 10:25:10 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <4711C859.5030100@santosj.name>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>
	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>
	<4711A32F.5050501@santosj.name>  <4711C859.5030100@santosj.name>
Message-ID: <1192357491.15673.1.camel@rillian>


On Sun, 2007-10-14 at 02:42 -0500, Jacob wrote:
> Question: Should the since be which one?
> 
> 1. @since 1.5
> 2. @since WP 1.5
> 3. @since WordPress 1.5
> 4. @since Version 1.5
> 
> #3 might be useful if WordPress Mu 
> ever jumps on board and does the same for its functions.

Well, we could just use whatever $wp_version is. WordPress 2.3's
$wp_version is '2.3'. WordPress MU's equivalent $wp_version would be
'wordpress-mu-1.3'.

From wordpress at santosj.name  Sun Oct 14 10:44:57 2007
From: wordpress at santosj.name (Jacob)
Date: Sun Oct 14 10:45:36 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <20071014030023.0a094d09@remstate.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>	<4711A32F.5050501@santosj.name>
	<4711C859.5030100@santosj.name>	<b88434820710140056h27b89449r8124ea6d81b60e0e@mail.gmail.com>	<4711D0DB.6010705@santosj.name>
	<4711DA63.5050103@santosj.name>
	<20071014030023.0a094d09@remstate.com>
Message-ID: <4711F329.6080804@santosj.name>

Test DIFF here: http://www.santosj.name/wp-settings.phpdoc.diff - 
Comments, insults, suggestions welcome.

Some of what you suggestion could only be approved by Matt, Mark, etc as 
it would be on them to enforce it. It would require they enforce it on 
themselves, I doubt such a suggestion would make it through. Seeing as 
the current style is (like it or not), code it and see if it breaks 
anything, I doubt the paradigm like "code, iterate, freeze, test, 
unfreeze, repeat" would work at this stage. Could send an email to Matt 
though, but still doubtful as it would require a whole new coding style 
and drastic change to development cycle.

I've given up with that crap, getting my ass jumped for having the 
audacity to suggest using a better framework pretty much left me 
drained. Documentation is fun, discussing life changing paradigm 
switches is not.

*Rest below: *

Travis Snoozy wrote:
> On Sun, 14 Oct 2007 03:59:15 -0500, Jacob <wordpress@santosj.name>
> wrote:
>
> My opinions do not necessarily reflect those of the devs or the
> community at large... ;)
>
> The goal that I'm going for in all of this is to stop the bleeding --
> the API is a (somewhat subtle) mess stability-wise, and documentation
> is a requirement (and a big step forward) to fixing that. Ideally,
> thinks would be "spec first, code second," but pragmatically speaking,
> a "code, iterate, freeze" can be made to work similarly.
>
>   
>> In a nutshell:
>>
>> 1. Should be include the "-bleeding", "-beta#", "-rc#" along with the 
>> version if applicable. I vote yes.
>>     
>
> My inclination would be not to -- I see no compelling reason to add this
> level of granularity, as people target "WordPress 2.2.2+" or
> "WordPress 2.3", not "WordPress 2.3 RC1".
>
> Also, for maximum usefulness, it may be necessary to document the
> major/breaking changes between the same function in different versions
> of WordPress (e.g., get_the_title returning raw titles before 2.3, and
> filtered titles with 2.3+). Trying to do this with bleeding, betas and
> RCs would be a lot of work, with very little usefulness (again, because
> people tend to target full releases; everything else is assumed
> broken or in flux).
>   
I thought similar, but I figured that plugin authors might be concerned 
about when the function was added as opposed to when it will be 
released. As I agree with you, I'm going to do this instead. Unless 
someone has a more compelling argument on why #1 would be useful given 
the plugin developer position.
>   
>> 2. Do we concern ourselves with just wp-includes/*.php or with the 
>> entire function codebase, except for admin (unless you really want
>> to).
>>     
>
> You're putting the cart ahead of the horse. All public APIs should
> probably be a subset of wp-includes/* (not that they are), but it's not
> necessarily true that everything in wp-includes/* is a public API.
> Determining which are public and which are not should probably come
> first. Then, the public APIs should get priority on documentation.
> There's an added twist in that public APIs need to be documented based
> on what they *should* do, as opposed to what they currently do -- this
> will require inputs from the devs (at least), and some level of
> consensus. If the implementation is broken vs. what it should do, then
> multiple documentation may be required (as noted in #1).
>   
I disagree with that on the basis that current development doesn't care 
about what the function should do, that is lost with the developer that 
wrote it. It can only be assumed that something is broken and then a 
trac report can be created or postulate what it should do, which I 
believe that they call such reports "enhancements."

I had similar problems documenting the taxonomy API and I tried very 
hard to be neutral. For every "WTF?" I had, there was probably an 
explanation or purpose I was missing. Of course, someone had a similar 
"WTF?" and spoke up, upon which said WTF was corrected.

Spending too much time contemplating whether something is broken based 
on code review is time wasted in my opinion. Documentation should be 
written about what the code *does* not what it should do. If such a case 
is found, then the documentation should point out workarounds, until 
such fixes are committed.

Dev review would be nice, but if the taxonomy documentation is any 
indication, those are non-existent. I would have very much liked to of 
had the developer go over and reply back, either "that documentation is 
wrong or incomplete for such-and-such function" or "Yeah, that is right 
and what I had in mind." Oh well, when all you have to go by is what you 
read and can see, it causes even more strain trying to figure out 
whether or not the developer intended the WTF and really for that, you 
need unit tests to back up the assertion and not opinion from reading 
the code alone.

No dev review should be expected or needed, let the code speak for 
itself. Just assert the documentation to be true based on the code, and 
until another speaks up and states otherwise.

>   
>> 3. What do we do with functions that we apply @since, @return,
>> and @param too?
>>     
>
> A style guide would be a Good Thing to ensure that the entries are
> consistent, as well as to help ensure that all the information is
> included for each function (e.g., when returning non-class objects,
> which properties the objects have, what their value types are, etc.).
>   

I may be misunderstanding you, but I think that perhaps some of that 
information belongs to the class in question or in the long description 
and not in the return description. From what I understand, the @return 
and @param are supposed to be very short descriptions on what to expect. 
I would assume any further information would be in @example and @tutorial.

>   
>> 4. Since we are documenting functions, should we also document files 
>> (file level phpDoc), globals, and defines (thinking more of the wider 
>> context of having a phpdocumentor site).
>>     
>
> Same deal here as with the functions -- the globals/defines that are
> considered public need to be sorted from the ones that are private, and
> the public ones given documentation priority.
>   

I did not concern myself with the documentation I wrote above. All 
globals and defines need to be considered public by the very nature of 
both. I do agree with documentation priority. However, in the community 
context, such a thing does not exist without a committee and in open 
source, there is no committee.

>   
>> 5. Should we hold all functions in public namespace? I'm limiting
>> some such as wp_unregister_GLOBALS() and setting it to private,
>> meaning it shouldn't show up on any phpdocumentor site. Do we really
>> need to fully document those functions, because no one should be
>> using it. If it doesn't work, then it really needs to be unit tested
>> to see if it is broken.
>>     
>
> Pretty much the same issue as with #2 and #4. There is no crystal-clear
> delineation between internal/private and external at the moment.
>   

I was unclear, I meant should we rather assume that what we the phpdoc 
author believe to be private get full documentation, short and long, or 
try to only do short or only move the short comments, only if they exist 
previously to phpdoc format?

I did not waste my time writing long documentation for 
wp_unregister_GLOBALS(), because I would assume that the core devs know 
what it does, since I know what it does. No one else needs to care about 
what it does, only if it works and that isn't the documentation writers 
job, it is for unit tests to figure.
>   
>> For #3:
>>
>> I was thinking of boilerplate text:
>>
>> /**
>>  * function_name() - Undocumented
>>  *
>>  * Undocumented
>>  *
>>  * @package Whatever
>>  * @subpackage WhateverSub
>>  * @since 1.5
>>  * @param if applicable
>>  * @return null Does not return anything or returns no explicit type.
>>  */
>>
>> The "Undocumented" text would serve as a starting point for future 
>> documentation of procedural code. That is, it would give the reader a 
>> placeholder to document the function and submit the patch to trac. I 
>> think the simple functions are too easy to not fully document.
>>     
>
> For new functions, the boilerplate should probably be marked "private"
> at first, and only get a version (and be switched to public) after
> thorough review to make sure that the API isn't horribly broken in some
> way. For existing functions, the boilerplate should probably still be
> marked private until the API is sanity-checked, documented and frozen,
> and the version should be set to either the current version (if it
> conforms to the spec) or the next version (if the current version
> doesn't conform). In either case, there should be a note to back-trace
> and update, indicating how far back checks have been made.
>
> I'm also partial to precondition/postcondition sections, as a standard
> way to document the value limitations on input params (at minimum).
My reasoning was that just because a function isn't documented doesn't 
mean it ceases to exist. Much like the WP hooks documentation site [1] I 
believe that any phpDocumentator site should have the full list of 
WordPress functions, even if they aren't fully documented.

The rest, I would need clarification on as I probably move on a 
completely different direction than what you were trying to explain.

Jacob Santos

[1] http://wphooks.flatearth.org/
From peter.westwood at ftwr.co.uk  Sun Oct 14 11:02:19 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sun Oct 14 11:04:16 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <4711F329.6080804@santosj.name>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>	<4711A32F.5050501@santosj.name>	<4711C859.5030100@santosj.name>	<b88434820710140056h27b89449r8124ea6d81b60e0e@mail.gmail.com>	<4711D0DB.6010705@santosj.name>	<4711DA63.5050103@santosj.name>	<20071014030023.0a094d09@remstate.com>
	<4711F329.6080804@santosj.name>
Message-ID: <4711F73B.1030401@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Jacob wrote:
> Test DIFF here: http://www.santosj.name/wp-settings.phpdoc.diff -
> Comments, insults, suggestions welcome.
> 
> Some of what you suggestion could only be approved by Matt, Mark, etc as
> it would be on them to enforce it. It would require they enforce it on
> themselves, I doubt such a suggestion would make it through. Seeing as
> the current style is (like it or not), code it and see if it breaks
> anything, I doubt the paradigm like "code, iterate, freeze, test,
> unfreeze, repeat" would work at this stage. Could send an email to Matt
> though, but still doubtful as it would require a whole new coding style
> and drastic change to development cycle.

Improving the documentation is welcome.

I have been trying to ensure that all new template tags/functions I add
are documented when they go in: [1],[2],[3] and adding documentation
where provided [4]

However, before we start on a mass documentation spree of the
undocumented code we really need to form a list of the tags we are going
to use from those available in phpDoc and valid values where appropriate.

It would be nice to see a proposal on the documentation format which
specifies:

1. The set of @package tags we are going to use.
2. Whether or not we want to use @since and if so in how much detail do
we go.
3. How we handle deprecated functions.

If you have simple single function or file phpDoc patches that just add
documentation get them on trac and assigned to me and I will review and
check them in.

Better documentation will benefit everyone!

[1] http://trac.wordpress.org/changeset/6198
[2] http://trac.wordpress.org/changeset/6199
[3] http://trac.wordpress.org/changeset/6228
[4] http://trac.wordpress.org/changeset/6200

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHEfc7VPRdzag0AcURAkNPAKC094f3EpNSd+3zRko37eU04/VWsACfUORh
3Z6piBsEwJ55H5YupJPzp6g=
=Mu0l
-----END PGP SIGNATURE-----
From wordpress at santosj.name  Sun Oct 14 12:05:20 2007
From: wordpress at santosj.name (Jacob)
Date: Sun Oct 14 12:05:48 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <4711F73B.1030401@ftwr.co.uk>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>	<ae81acd10710131147h1ddd4a7agc2e7b8bf9f50d3ad@mail.gmail.com>	<7b4922320710131325v16c0cd59mec15aae403350a9@mail.gmail.com>	<4711A32F.5050501@santosj.name>	<4711C859.5030100@santosj.name>	<b88434820710140056h27b89449r8124ea6d81b60e0e@mail.gmail.com>	<4711D0DB.6010705@santosj.name>	<4711DA63.5050103@santosj.name>	<20071014030023.0a094d09@remstate.com>	<4711F329.6080804@santosj.name>
	<4711F73B.1030401@ftwr.co.uk>
Message-ID: <47120600.307@santosj.name>

1. Obviously the whole issue with Mike Purvis [1] would require the 
@since so that tag should go in where possible. If you mean for details 
on how much version detail, I really would push for just 1.5, 2.0, 
2.0.1, etc. #.#.# should be enough. Assume WordPress Mu has different 
standard if they want to jump aboard.

2. Deprecated functions, globals can be handled with @deprecated tag.

3. Do not have phpdoc blocks for include/require functions, because 
usually, the wording of the documentation is redundant anyway.

File Level

I would suggest that at the very least, that if we are going to do this 
right the first time that at the minimum these should be added.

4. @license It means nothing to the code, but it does phpDocumentor 
site. License.txt covers the full extent of the installation, but 
wouldn't for phpDocumentor. Raise of hands, how many have actually 
*read* license.txt? It might say that we owe our first born to Matt or 
something.

All it needs is a link to the GPL v2 site.

5. @category WordPress ("All your bases our belong to us") Means 
nothing, but might help move issues with WordPress Mu documentation out 
from WordPress documentation. Could also use @Package WordPress, if 
@Package isn't going to be used for anything else [3].

6. @since Would be nice to know what version the file was added to 
WordPress.

7. I would suggest that a description of what the file's purpose is, in 
long description format with no short description.

Global Level

I believe that globals should be documented, given the inherited public 
nature they have. If you wish to tell people to not mess with them, then 
that should also be public.

8. Requires at the very least @global
9. May also require @name in some cases.
10. May also require @deprecated.
11. Will require @since at the very least, when information is known.

Define Level

Defines should be documented as much as possible. phpDoc blocks allow 
for the blocks to be away from the area they are documenting, but that 
shouldn't be relied on. Would have to try to get as close to the define 
as possible without having too many changes to the code.

12. Requires short description, along with any helpful information on 
what it can be used for.
13. Should also require @since for when the define was available.

Function / Class / Method Level

14. Require Short Description, in form of "function_name() - Short 
Description text here"
15. Should have Long Description where needed, including examples. If 
long description should be written, then comment should be added, either 
"Do Documentation" or "Undocumented".
16.Should have @access private if no one else should touch the code 
besides the internals of WordPress.
17. Required to have @param, if function/method parameters are used in 
function.
18. Required to label @global, if global variables are used in the 
function/method
19. Required to have @return if a value is returned.
20. Required to have @since, when known.

Examples/Tutorials

21. Examples should be written in the long description and between 
<code>...</code> tags. Tutorials should be linked to using the @see tag 
with the link to the resource, should prefer codex.

22. @internal: This should be used to pass notes to readers of the code, 
because most cases it won't be displayed on the phpDocumentor site.

--------------

On a related note, the hook tags I added to the taxonomy. I'm unsure 
whether I want to keep them. It is practically worthless at this point 
as it would require a custom tool. The hooks should and can be added to 
the long description or as @tutorial/@example instead. I think that 
when/if I go back to writing documentation for that I'll do that instead 
and strip out the custom tags for hooks.

I really wish devs would review documentation and correct mistakes, I 
really hate the wording of [2] and I wrote it! I could just die I could. 
If I was a better writer, I would spend time rewording it to where it 
doesn't completely suck. I can just imagine somebody reading it in the 
future thinking, "How can the code be easier to read than the 
description?" Oh yeah, I was really angry when I wrote it, probably why 
it doesn't make sense, it was on purpose. My bad, I forgot.

[1] http://comox.textdrive.com/pipermail/wp-hackers/2007-October/015553.html
[2] http://trac.wordpress.org/changeset/6200
[3] I can never get those things right. Probably should leave it up to 
the devs, if you want to add them. Or add them at a later date when a 
consensus is reached. I'll remove them from the diff.

Jacob Santos

Peter Westwood wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Jacob wrote:
>   
>> Test DIFF here: http://www.santosj.name/wp-settings.phpdoc.diff -
>> Comments, insults, suggestions welcome.
>>
>> Some of what you suggestion could only be approved by Matt, Mark, etc as
>> it would be on them to enforce it. It would require they enforce it on
>> themselves, I doubt such a suggestion would make it through. Seeing as
>> the current style is (like it or not), code it and see if it breaks
>> anything, I doubt the paradigm like "code, iterate, freeze, test,
>> unfreeze, repeat" would work at this stage. Could send an email to Matt
>> though, but still doubtful as it would require a whole new coding style
>> and drastic change to development cycle.
>>     
>
> Improving the documentation is welcome.
>
> I have been trying to ensure that all new template tags/functions I add
> are documented when they go in: [1],[2],[3] and adding documentation
> where provided [4]
>
> However, before we start on a mass documentation spree of the
> undocumented code we really need to form a list of the tags we are going
> to use from those available in phpDoc and valid values where appropriate.
>
> It would be nice to see a proposal on the documentation format which
> specifies:
>
> 1. The set of @package tags we are going to use.
> 2. Whether or not we want to use @since and if so in how much detail do
> we go.
> 3. How we handle deprecated functions.
>
> If you have simple single function or file phpDoc patches that just add
> documentation get them on trac and assigned to me and I will review and
> check them in.
>
> Better documentation will benefit everyone!
>
> [1] http://trac.wordpress.org/changeset/6198
> [2] http://trac.wordpress.org/changeset/6199
> [3] http://trac.wordpress.org/changeset/6228
> [4] http://trac.wordpress.org/changeset/6200
>
> westi
> - --
> Peter Westwood
> http://blog.ftwr.co.uk
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.2 (MingW32)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
>
> iD8DBQFHEfc7VPRdzag0AcURAkNPAKC094f3EpNSd+3zRko37eU04/VWsACfUORh
> 3Z6piBsEwJ55H5YupJPzp6g=
> =Mu0l
> -----END PGP SIGNATURE-----
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From hovenko at linpro.no  Sun Oct 14 16:22:07 2007
From: hovenko at linpro.no (Knut-Olav Hoven)
Date: Sun Oct 14 16:22:21 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <4711DA63.5050103@santosj.name>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<4711D0DB.6010705@santosj.name> <4711DA63.5050103@santosj.name>
Message-ID: <200710141822.07117.hovenko@linpro.no>

On Sunday 14 October 2007 10:59:15 Jacob wrote:
> In a nutshell:
>
> 1. Should be include the "-bleeding", "-beta#", "-rc#" along with the
> version if applicable. I vote yes.

It should definitely not include "-bleeding", "-beta#", etc.

If we do, we would never get such as "@since 2.4", only "@since 2.4-RC1" 
and "@since 2.4-beta2". Why? Because *NO* new functions should be introduced 
right before a final/stable release.


-- 
Knut-Olav Hoven
Systemutvikler               mob: +47 986 71 700
Linpro AS                    http://www.linpro.no/
From speedboxer at gmail.com  Sun Oct 14 20:35:54 2007
From: speedboxer at gmail.com (Matt)
Date: Sun Oct 14 20:35:59 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <47120600.307@santosj.name>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<4711A32F.5050501@santosj.name> <4711C859.5030100@santosj.name>
	<b88434820710140056h27b89449r8124ea6d81b60e0e@mail.gmail.com>
	<4711D0DB.6010705@santosj.name> <4711DA63.5050103@santosj.name>
	<20071014030023.0a094d09@remstate.com> <4711F329.6080804@santosj.name>
	<4711F73B.1030401@ftwr.co.uk> <47120600.307@santosj.name>
Message-ID: <b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>

On 10/14/07, Jacob <wordpress@santosj.name> wrote:
>
> 2. Deprecated functions, globals can be handled with @deprecated tag.
>

@deprecated has the version it was deprecated in, right?

-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From wordpress at santosj.name  Mon Oct 15 02:08:19 2007
From: wordpress at santosj.name (Jacob)
Date: Mon Oct 15 02:08:42 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<4711A32F.5050501@santosj.name>
	<4711C859.5030100@santosj.name>	<b88434820710140056h27b89449r8124ea6d81b60e0e@mail.gmail.com>	<4711D0DB.6010705@santosj.name>
	<4711DA63.5050103@santosj.name>	<20071014030023.0a094d09@remstate.com>
	<4711F329.6080804@santosj.name>	<4711F73B.1030401@ftwr.co.uk>
	<47120600.307@santosj.name>
	<b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>
Message-ID: <4712CB93.6060403@santosj.name>

Matt wrote:
> On 10/14/07, Jacob <wordpress@santosj.name> wrote:
>   
>> 2. Deprecated functions, globals can be handled with @deprecated tag.
>>
>>     
>
> @deprecated has the version it was deprecated in, right?
>
>   
I'm kind of waiting until I get more feedback before I make a trac 
ticket and start doing any more documentation.

The second try [1] has @deprecated since 2.1 for one global. It isn't 
required, but it should be used to allow others to know when the global 
or function stopped being used.

/**
 * @since 1.5
 * @deprecated since 2.1
 */

[1] http://www.santosj.name/wp-settings.phpdoc.2.diff

Jacob Santos
From otto at ottodestruct.com  Mon Oct 15 14:48:27 2007
From: otto at ottodestruct.com (Otto)
Date: Mon Oct 15 14:48:32 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <4712CB93.6060403@santosj.name>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<b88434820710140056h27b89449r8124ea6d81b60e0e@mail.gmail.com>
	<4711D0DB.6010705@santosj.name> <4711DA63.5050103@santosj.name>
	<20071014030023.0a094d09@remstate.com> <4711F329.6080804@santosj.name>
	<4711F73B.1030401@ftwr.co.uk> <47120600.307@santosj.name>
	<b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>
	<4712CB93.6060403@santosj.name>
Message-ID: <161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>

On 10/14/07, Jacob <wordpress@santosj.name> wrote:
> /**
>  * @since 1.5
>  * @deprecated since 2.1
>  */

I suggest using the same scheme for version numbers on both of these.
In other words, do this instead:
/**
* @since 1.5
* @deprecated 2.1
*/

Keep the version simple.
From robin.adr at gmail.com  Mon Oct 15 15:07:13 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Mon Oct 15 15:07:25 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<4711D0DB.6010705@santosj.name> <4711DA63.5050103@santosj.name>
	<20071014030023.0a094d09@remstate.com> <4711F329.6080804@santosj.name>
	<4711F73B.1030401@ftwr.co.uk> <47120600.307@santosj.name>
	<b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>
	<4712CB93.6060403@santosj.name>
	<161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>
Message-ID: <d135ca9c0710150807r3a4e30bge9b3971eed098b64@mail.gmail.com>

+1.

On 10/15/07, Otto <otto@ottodestruct.com> wrote:
>
> On 10/14/07, Jacob <wordpress@santosj.name> wrote:
> > /**
> >  * @since 1.5
> >  * @deprecated since 2.1
> >  */
>
> I suggest using the same scheme for version numbers on both of these.
> In other words, do this instead:
> /**
> * @since 1.5
> * @deprecated 2.1
> */
>
> Keep the version simple.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ryan at boren.nu  Mon Oct 15 22:59:09 2007
From: ryan at boren.nu (Ryan Boren)
Date: Mon Oct 15 22:59:14 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <d135ca9c0710150807r3a4e30bge9b3971eed098b64@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<4711DA63.5050103@santosj.name> <20071014030023.0a094d09@remstate.com>
	<4711F329.6080804@santosj.name> <4711F73B.1030401@ftwr.co.uk>
	<47120600.307@santosj.name>
	<b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>
	<4712CB93.6060403@santosj.name>
	<161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>
	<d135ca9c0710150807r3a4e30bge9b3971eed098b64@mail.gmail.com>
Message-ID: <c8f37c930710151559h2adbadefrc8f6cb6a16860b4d@mail.gmail.com>

On 10/15/07, Robin Adrianse <robin.adr@gmail.com> wrote:
> +1.
>
> On 10/15/07, Otto <otto@ottodestruct.com> wrote:
> >
> > On 10/14/07, Jacob <wordpress@santosj.name> wrote:
> > > /**
> > >  * @since 1.5
> > >  * @deprecated since 2.1
> > >  */
> >
> > I suggest using the same scheme for version numbers on both of these.
> > In other words, do this instead:
> > /**
> > * @since 1.5
> > * @deprecated 2.1
> > */

+1 here too.

Also, we have some old phpdoc patches around if anyone wants to update them.

http://trac.wordpress.org/query?status=new&status=assigned&status=reopened&status=closed&keywords=%7Ephpdoc&order=priority
From wordpress at santosj.name  Tue Oct 16 00:51:16 2007
From: wordpress at santosj.name (Jacob)
Date: Tue Oct 16 00:51:41 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <c8f37c930710151559h2adbadefrc8f6cb6a16860b4d@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<4711DA63.5050103@santosj.name>
	<20071014030023.0a094d09@remstate.com>	<4711F329.6080804@santosj.name>
	<4711F73B.1030401@ftwr.co.uk>	<47120600.307@santosj.name>	<b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>	<4712CB93.6060403@santosj.name>	<161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>	<d135ca9c0710150807r3a4e30bge9b3971eed098b64@mail.gmail.com>
	<c8f37c930710151559h2adbadefrc8f6cb6a16860b4d@mail.gmail.com>
Message-ID: <47140B04.90304@santosj.name>

Agreed. I'll update the patches.

I have some more questions.

I think a compromise between Travis and me would be that we include both 
what functions should do along with what it does do. This will give 
optimal information on what to expect in both what the function does and 
what it actually does. In going over the plugins.php phpdoc, I did just 
this. I found that using the @see 
http://trac.wordpress.org/ticket/{Ticket number of bug} in that, in the 
likely chance that the bug is fixed, the reader would know by looking at 
the trac ticket.

The second is that I haven't reached a conclusion on short description 
format.

/**
 * function_name() - short description

or

/**
 * short description

Plugins.php uses the second, while taxonomy.php (the phpdoc that I 
wrote) uses the first.

Jacob Santos

Ryan Boren wrote:
> On 10/15/07, Robin Adrianse <robin.adr@gmail.com> wrote:
>   
>> +1.
>>
>> On 10/15/07, Otto <otto@ottodestruct.com> wrote:
>>     
>>> On 10/14/07, Jacob <wordpress@santosj.name> wrote:
>>>       
>>>> /**
>>>>  * @since 1.5
>>>>  * @deprecated since 2.1
>>>>  */
>>>>         
>>> I suggest using the same scheme for version numbers on both of these.
>>> In other words, do this instead:
>>> /**
>>> * @since 1.5
>>> * @deprecated 2.1
>>> */
>>>       
>
> +1 here too.
>
> Also, we have some old phpdoc patches around if anyone wants to update them.
>
> http://trac.wordpress.org/query?status=new&status=assigned&status=reopened&status=closed&keywords=%7Ephpdoc&order=priority
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From peter.westwood at ftwr.co.uk  Tue Oct 16 08:03:21 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue Oct 16 08:03:28 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <47140B04.90304@santosj.name>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<4711DA63.5050103@santosj.name> <20071014030023.0a094d09@remstate.com>
	<4711F329.6080804@santosj.name> <4711F73B.1030401@ftwr.co.uk>
	<47120600.307@santosj.name>
	<b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>
	<4712CB93.6060403@santosj.name>
	<161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>
	<d135ca9c0710150807r3a4e30bge9b3971eed098b64@mail.gmail.com>
	<c8f37c930710151559h2adbadefrc8f6cb6a16860b4d@mail.gmail.com>
	<47140B04.90304@santosj.name>
Message-ID: <18004.199.64.72.252.1192521801.squirrel@epia.ftwr.co.uk>


On Tue, October 16, 2007 1:51 am, Jacob wrote:
> Agreed. I'll update the patches.
>
> I have some more questions.
>
> I think a compromise between Travis and me would be that we include both
> what functions should do along with what it does do. This will give
> optimal information on what to expect in both what the function does and
> what it actually does. In going over the plugins.php phpdoc, I did just
> this. I found that using the @see
> http://trac.wordpress.org/ticket/{Ticket number of bug} in that, in the
> likely chance that the bug is fixed, the reader would know by looking at
> the trac ticket.
>
> The second is that I haven't reached a conclusion on short description
> format.
>
> /**
>  * function_name() - short description
>
> or
>
> /**
>  * short description
>
> Plugins.php uses the second, while taxonomy.php (the phpdoc that I
> wrote) uses the first.
>

My vote would be for the first - Adding the function_name() as well feels
like unnecessary duplication.

westi
-- 
Peter Westwood <peter.westwood@ftwr.co.uk>
http://blog.ftwr.co.uk
From ai2097 at users.sourceforge.net  Tue Oct 16 09:52:37 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Tue Oct 16 09:52:44 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <18004.199.64.72.252.1192521801.squirrel@epia.ftwr.co.uk>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<4711DA63.5050103@santosj.name>
	<20071014030023.0a094d09@remstate.com>
	<4711F329.6080804@santosj.name> <4711F73B.1030401@ftwr.co.uk>
	<47120600.307@santosj.name>
	<b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>
	<4712CB93.6060403@santosj.name>
	<161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>
	<d135ca9c0710150807r3a4e30bge9b3971eed098b64@mail.gmail.com>
	<c8f37c930710151559h2adbadefrc8f6cb6a16860b4d@mail.gmail.com>
	<47140B04.90304@santosj.name>
	<18004.199.64.72.252.1192521801.squirrel@epia.ftwr.co.uk>
Message-ID: <20071016025237.172e974a@remstate.com>

On Tue, 16 Oct 2007 09:03:21 +0100 (BST), "Peter Westwood"
<peter.westwood@ftwr.co.uk> wrote:

> 
> On Tue, October 16, 2007 1:51 am, Jacob wrote:
> > Agreed. I'll update the patches.
> >
> > I have some more questions.
> >
> > I think a compromise between Travis and me would be that we include
> > both what functions should do along with what it does do. This will
> > give optimal information on what to expect in both what the
> > function does and what it actually does. In going over the
> > plugins.php phpdoc, I did just this. I found that using the @see
> > http://trac.wordpress.org/ticket/{Ticket number of bug} in that, in
> > the likely chance that the bug is fixed, the reader would know by
> > looking at the trac ticket.
> >
> > The second is that I haven't reached a conclusion on short
> > description format.
> >
> > /**
> >  * function_name() - short description
> >
> > or
> >
> > /**
> >  * short description
> >
> > Plugins.php uses the second, while taxonomy.php (the phpdoc that I
> > wrote) uses the first.
> >
> 
> My vote would be for the first - Adding the function_name() as well
> feels like unnecessary duplication.

Theoretically, I concur with you. In practice, I find that having the
function name is really useful when reading these comments in the
source, especially if the comments are more than a screen worth of text.
Even when I can see the function line, I wind up scanning down and up
to match the documentation with the function name, and it tends to
break my flow of focus. Naturally, this is only an issue when reading
the comments in-line with the code -- but again, in practice, that's
where I usually read these.


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From cpoteet at siolon.com  Tue Oct 16 12:16:38 2007
From: cpoteet at siolon.com (Chris Poteet)
Date: Tue Oct 16 12:16:41 2007
Subject: [wp-hackers] Added Parameter on wp_title
Message-ID: <001001c80fee$67b530e0$371f92a0$@com>

I added a patch for #4407 that has a change on wp_title.   There is a
description in the ticket.

http://trac.wordpress.org/ticket/4407

Thoughts?
chris

From wordpress at santosj.name  Tue Oct 16 12:28:57 2007
From: wordpress at santosj.name (Jacob)
Date: Tue Oct 16 12:29:23 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <20071016025237.172e974a@remstate.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<4711DA63.5050103@santosj.name>	<20071014030023.0a094d09@remstate.com>	<4711F329.6080804@santosj.name>
	<4711F73B.1030401@ftwr.co.uk>	<47120600.307@santosj.name>	<b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>	<4712CB93.6060403@santosj.name>	<161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>	<d135ca9c0710150807r3a4e30bge9b3971eed098b64@mail.gmail.com>	<c8f37c930710151559h2adbadefrc8f6cb6a16860b4d@mail.gmail.com>	<47140B04.90304@santosj.name>	<18004.199.64.72.252.1192521801.squirrel@epia.ftwr.co.uk>
	<20071016025237.172e974a@remstate.com>
Message-ID: <4714AE89.5040709@santosj.name>

Travis Snoozy wrote:
> On Tue, 16 Oct 2007 09:03:21 +0100 (BST), "Peter Westwood"
> <peter.westwood@ftwr.co.uk> wrote:
>
>   
>> On Tue, October 16, 2007 1:51 am, Jacob wrote:
>>     
>>> Agreed. I'll update the patches.
>>>
>>> I have some more questions.
>>>
>>> I think a compromise between Travis and me would be that we include
>>> both what functions should do along with what it does do. This will
>>> give optimal information on what to expect in both what the
>>> function does and what it actually does. In going over the
>>> plugins.php phpdoc, I did just this. I found that using the @see
>>> http://trac.wordpress.org/ticket/{Ticket number of bug} in that, in
>>> the likely chance that the bug is fixed, the reader would know by
>>> looking at the trac ticket.
>>>
>>> The second is that I haven't reached a conclusion on short
>>> description format.
>>>
>>> /**
>>>  * function_name() - short description
>>>
>>> or
>>>
>>> /**
>>>  * short description
>>>
>>> Plugins.php uses the second, while taxonomy.php (the phpdoc that I
>>> wrote) uses the first.
>>>
>>>       
>> My vote would be for the first - Adding the function_name() as well
>> feels like unnecessary duplication.
>>     
>
> Theoretically, I concur with you. In practice, I find that having the
> function name is really useful when reading these comments in the
> source, especially if the comments are more than a screen worth of text.
> Even when I can see the function line, I wind up scanning down and up
> to match the documentation with the function name, and it tends to
> break my flow of focus. Naturally, this is only an issue when reading
> the comments in-line with the code -- but again, in practice, that's
> where I usually read these.
>
>
>   
Compelling and I agree with you, but it is really a matter of preference 
and I don't want to say, "This is how it will be done." If plugins.php 
did not have the second, then it wouldn't be an issue. I do not feel 
that updating those parts to the first is in my rights. I do think that 
if anything, this should be a standard and followed through for all 
function phpdoc. In which case, any future phpdoc comments should not be 
in confusion of which style to use. If someone sees that it is one style 
or the other, then that is most likely what they will use.

The reason to not use the first (I really should have numbered the 
methods) is because the phpDocumentor site for WordPress is already 
going to have that information. While in the source code it would be 
useful, it wouldn't for use phpDocumentor. Now you could do something like:

#3
/**
 * @internal       function_name();
 * @access public
 *
 * Short Description
 *
 * Long Description

This would solve both issues of become confused of which function you 
are looking at and it wouldn't show up in the phpDocumentor site. The 
@access public line should block the @internal from hiding the short 
description and long description text. You would just have to be 
explicit on whether the function is public or private.

I think the goal should be to shoot for being able to have a complete 
phpDocumentor site for WordPress functions. I do think it will take a 
long time to fully document all functions.

Whichever method make sense. If no one has any objections, then I will 
upload the second patch [1] that uses the first style. If anything, 
changing plugins.php will be justified by, "Well, all of the /other/ 
files are doing it." I would have suggested that a massive change be 
applied that "fixes" the issue either way, but from reading past phpdoc 
efforts, it seems that patches must be for one file.

I stripped out the @license tag, since it really isn't my place to place 
that requirement and WordPress is well known enough that almost everyone 
knows WordPress is GPL. It really isn't that important and if the issue 
ever does become decided, then it can always be added later.

My priority with documenting WordPress code is whatever I feel like and 
"fixing" existing files that have patches. I also feel compelled to 
complete taxonomy.php phpdoc, since I keep thinking back to it and how 
it isn't complete and how awesome it would be if it was only complete. I 
won't trend on anyone's feet if they take up the effort of any file. 
Unless you don't feel up the task of documenting one of more functions 
within that file.

Also, at the very least, the @param, @global, @return, @since needs to 
be added to every file and that is the easiest part. The short and long 
description can come later, I think, as people feel compelled to 
complete them, "WTF? This function isn't fully documented and I spent 
hours trying to figure it out. I might as well tell others about it, so 
they don't spend the same amount as I have." Perhaps, I'm an optimist, 
but documentation is boring, except in this case where it is a group effort.

[1] http://trac.wordpress.org/ticket/5211

Jacob Santos
From omry at yadan.net  Tue Oct 16 11:30:42 2007
From: omry at yadan.net (Omry Yadan)
Date: Tue Oct 16 12:30:59 2007
Subject: [wp-hackers] WPMU Plugin management
Message-ID: <4714A0E2.5000103@yadan.net>

Hi All,
I wrote a plugin management plugin for WPMU 
(http://firestats.cc/wiki/WPMUPluginCommander)  that allows Automatic 
activation of plugins in the plugins directory, and mass 
activate/deactivate of plugins.
what I would like to add is the ability to hide plugins from normal 
users and prevent them from activating them through some hackery.
this involves two things:
1. manipulate the list of plugins displayed to the user.
2. prevent activation of plugins not in the plugins list.

I don't see how those things can be done with the current WPMU code, but 
I am willing to add the required filters/hooks needed to perform this 
and submit a patch.
what do you guys think?

    Omry.
From Martin at Cleaver.org  Tue Oct 16 12:44:13 2007
From: Martin at Cleaver.org (Martin@Cleaver.org)
Date: Tue Oct 16 12:45:03 2007
Subject: Shipping wpmu as wp (Re: [wp-hackers] WPMU Plugin management)
Message-ID: <fe8dba6a0710160544q1dc81afaja1d4128d77cf75a@mail.gmail.com>

I think making changes to the WP core for WPMU is perfectly reasonable.

It may well be that wp will be increasingly like wpmu. Certainly plugin and
skin authors need to be aware that their code will get executed under wpmu
sometimes.

Here's an idea: how about everyone gets wpmu when they install wp, except
the multiuser stuff is disabled by default?

Cheers,
  Martin.

On 10/16/07, Omry Yadan <omry@yadan.net> wrote:
>
> Hi All,
> I wrote a plugin management plugin for WPMU
> (http://firestats.cc/wiki/WPMUPluginCommander)  that allows Automatic
> activation of plugins in the plugins directory, and mass
> activate/deactivate of plugins.
> what I would like to add is the ability to hide plugins from normal
> users and prevent them from activating them through some hackery.
> this involves two things:
> 1. manipulate the list of plugins displayed to the user.
> 2. prevent activation of plugins not in the plugins list.
>
> I don't see how those things can be done with the current WPMU code, but
> I am willing to add the required filters/hooks needed to perform this
> and submit a patch.
> what do you guys think?
>
>     Omry.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Martin@Cleaver.org
From m at mullenweg.com  Tue Oct 16 14:59:19 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Oct 16 15:01:21 2007
Subject: Shipping wpmu as wp (Re: [wp-hackers] WPMU Plugin management)
In-Reply-To: <fe8dba6a0710160544q1dc81afaja1d4128d77cf75a@mail.gmail.com>
References: <fe8dba6a0710160544q1dc81afaja1d4128d77cf75a@mail.gmail.com>
Message-ID: <4714D1C7.3050204@mullenweg.com>

Martin@Cleaver.org wrote:
> Here's an idea: how about everyone gets wpmu when they install wp, except
> the multiuser stuff is disabled by default?

There are no plans to merge the functionality of WP and MU in the 
foreseeable future, each can serve its users better as an independent 
entity. We do add hooks or filters sometimes to help out MU, just like 
we do for anything, and that will continue.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From skeltoac at gmail.com  Tue Oct 16 16:06:49 2007
From: skeltoac at gmail.com (Andy Skelton)
Date: Tue Oct 16 16:06:55 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <4714AE89.5040709@santosj.name>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>
	<4712CB93.6060403@santosj.name>
	<161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>
	<d135ca9c0710150807r3a4e30bge9b3971eed098b64@mail.gmail.com>
	<c8f37c930710151559h2adbadefrc8f6cb6a16860b4d@mail.gmail.com>
	<47140B04.90304@santosj.name>
	<18004.199.64.72.252.1192521801.squirrel@epia.ftwr.co.uk>
	<20071016025237.172e974a@remstate.com> <4714AE89.5040709@santosj.name>
Message-ID: <e6ec604d0710160906n4835076fh3945bd1fd63289d6@mail.gmail.com>

On 10/16/07, Jacob <wordpress@santosj.name> wrote:
> Also, at the very least, the @param, @global, @return, @since needs to
> be added to every file and that is the easiest part.

Would everyone on this thread please pause your typing and take a
reality pill. If you think it is important, do the work and submit a
patch.

But if you want to make those with commit access despise the very idea
of glancing at a PHPdoc block, let alone committing your patches, keep
this thread going.

Andy

p.s. I haven't read any of the messages on this thread.
From skeltoac at gmail.com  Tue Oct 16 18:01:15 2007
From: skeltoac at gmail.com (Andy Skelton)
Date: Tue Oct 16 18:01:22 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <e6ec604d0710160906n4835076fh3945bd1fd63289d6@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<4712CB93.6060403@santosj.name>
	<161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>
	<d135ca9c0710150807r3a4e30bge9b3971eed098b64@mail.gmail.com>
	<c8f37c930710151559h2adbadefrc8f6cb6a16860b4d@mail.gmail.com>
	<47140B04.90304@santosj.name>
	<18004.199.64.72.252.1192521801.squirrel@epia.ftwr.co.uk>
	<20071016025237.172e974a@remstate.com> <4714AE89.5040709@santosj.name>
	<e6ec604d0710160906n4835076fh3945bd1fd63289d6@mail.gmail.com>
Message-ID: <e6ec604d0710161101o53289c03n1987747ee4e40254@mail.gmail.com>

On 10/16/07, Andy Skelton <skeltoac@gmail.com> wrote:
> Would everyone on this thread please pause your typing and take a
> reality pill. If you think it is important, do the work and submit a
> patch.

One more thought: an excellent commenting convention may evolve, but
if you want something enforced you must convince the commit funnel
that no function should be added or changed without the matching
PHPdoc being updated. If you are successful in this campaign, the
funnel will either push back on patches missing PHPdoc updates, or do
it themselves. If you are unsuccessful, they will neglect enforcement
and allow non-conformance.

Is this what you're after?

Andy

p.s. I'm not a member of the commit funnel.
From m at marcosmedia.com  Tue Oct 16 18:17:58 2007
From: m at marcosmedia.com (Marcos Sader | marcosmedia)
Date: Tue Oct 16 18:18:04 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <c8f37c930710151559h2adbadefrc8f6cb6a16860b4d@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<20071014030023.0a094d09@remstate.com> <4711F329.6080804@santosj.name>
	<4711F73B.1030401@ftwr.co.uk> <47120600.307@santosj.name>
	<b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>
	<4712CB93.6060403@santosj.name>
	<161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>
	<d135ca9c0710150807r3a4e30bge9b3971eed098b64@mail.gmail.com>
	<c8f37c930710151559h2adbadefrc8f6cb6a16860b4d@mail.gmail.com>
Message-ID: <8ff7155b0710161117r2ae5ac0bjec057fe464d264c@mail.gmail.com>

I still think that there should be a "WP" indicator in case of functions
shared between the regular and multiuser version.

So WP will get,
/**
* @since WP 1.5
* @deprecated WP 2.1
*/

and WPmu,
/**
* @since WPmu 1.5
* @deprecated WPmu 2.1
*/


On 10/15/07, Ryan Boren <ryan@boren.nu> wrote:
>
> On 10/15/07, Robin Adrianse <robin.adr@gmail.com> wrote:
> > +1.
> >
> > On 10/15/07, Otto <otto@ottodestruct.com> wrote:
> > >
> > > On 10/14/07, Jacob <wordpress@santosj.name> wrote:
> > > > /**
> > > >  * @since 1.5
> > > >  * @deprecated since 2.1
> > > >  */
> > >
> > > I suggest using the same scheme for version numbers on both of these.
> > > In other words, do this instead:
> > > /**
> > > * @since 1.5
> > > * @deprecated 2.1
> > > */
>
> +1 here too.
>
> Also, we have some old phpdoc patches around if anyone wants to update
> them.
>
>
> http://trac.wordpress.org/query?status=new&status=assigned&status=reopened&status=closed&keywords=%7Ephpdoc&order=priority
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Marcos Sader
m@marcosmedia.com
http://defmay.com | http://marcosmedia.com
From peter.westwood at ftwr.co.uk  Tue Oct 16 20:23:07 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue Oct 16 20:24:54 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <e6ec604d0710161101o53289c03n1987747ee4e40254@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<4712CB93.6060403@santosj.name>	<161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>	<d135ca9c0710150807r3a4e30bge9b3971eed098b64@mail.gmail.com>	<c8f37c930710151559h2adbadefrc8f6cb6a16860b4d@mail.gmail.com>	<47140B04.90304@santosj.name>	<18004.199.64.72.252.1192521801.squirrel@epia.ftwr.co.uk>	<20071016025237.172e974a@remstate.com>
	<4714AE89.5040709@santosj.name>	<e6ec604d0710160906n4835076fh3945bd1fd63289d6@mail.gmail.com>
	<e6ec604d0710161101o53289c03n1987747ee4e40254@mail.gmail.com>
Message-ID: <47151DAB.8010005@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Andy Skelton wrote:
> On 10/16/07, Andy Skelton <skeltoac@gmail.com> wrote:
>> Would everyone on this thread please pause your typing and take a
>> reality pill. If you think it is important, do the work and submit a
>> patch.
> 
> One more thought: an excellent commenting convention may evolve, but
> if you want something enforced you must convince the commit funnel
> that no function should be added or changed without the matching
> PHPdoc being updated. If you are successful in this campaign, the
> funnel will either push back on patches missing PHPdoc updates, or do
> it themselves. If you are unsuccessful, they will neglect enforcement
> and allow non-conformance.
> 

+1 to this.

If future I will be tagging all patches for new functionality without
documentation with needs-docs and they will drop lower on my to-commit
list than stuff with docs.

For small isolated bug fix patches I will obviously commit without docs.

However if a function needs changing and the changes are large I will
prefer patches with docs.

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHFR2rVPRdzag0AcURAlbaAKCG2tqA104ztNU24NaEw2OZrd+wXgCeKhq3
CbRCBVO/sP/Ifpm1/lrPkCY=
=LTz1
-----END PGP SIGNATURE-----
From peter.westwood at ftwr.co.uk  Tue Oct 16 20:24:20 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue Oct 16 20:26:08 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <8ff7155b0710161117r2ae5ac0bjec057fe464d264c@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<20071014030023.0a094d09@remstate.com>
	<4711F329.6080804@santosj.name>	<4711F73B.1030401@ftwr.co.uk>
	<47120600.307@santosj.name>	<b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>	<4712CB93.6060403@santosj.name>	<161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>	<d135ca9c0710150807r3a4e30bge9b3971eed098b64@mail.gmail.com>	<c8f37c930710151559h2adbadefrc8f6cb6a16860b4d@mail.gmail.com>
	<8ff7155b0710161117r2ae5ac0bjec057fe464d264c@mail.gmail.com>
Message-ID: <47151DF4.9060103@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Marcos Sader | marcosmedia wrote:
> I still think that there should be a "WP" indicator in case of functions
> shared between the regular and multiuser version.
> 
> So WP will get,
> /**
> * @since WP 1.5
> * @deprecated WP 2.1
> */
> 
> and WPmu,
> /**
> * @since WPmu 1.5
> * @deprecated WPmu 2.1
> */

If you want PHPDoc over in wpmu land then you need to convince the
people there that it is worth adding and the the @since and @depreceated
tags can be correctly maintained there.

WP != WPmu and we don't need WPmu docs in our code.

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHFR30VPRdzag0AcURAtjtAKDRyKv8ZxLeI35Dwfvn+Ktz+IAKJwCg0bzk
g2JdEhmxaOG2a5SsLpvGhGE=
=3hi9
-----END PGP SIGNATURE-----
From lists.automattic.com at callum-macdonald.com  Wed Oct 17 00:26:37 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 17 00:26:47 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <4F3ECB91-31D2-42FA-BFD1-F6ED14258412@turbonet.com>
References: <470913C6.2090502@callum-macdonald.com>	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>	<20071009124253.741212cc@remstate.com>
	<4F3ECB91-31D2-42FA-BFD1-F6ED14258412@turbonet.com>
Message-ID: <471556BD.60606@callum-macdonald.com>

Did anything ever come of this suggestion? I don't remember seeing any 
opposition to it and I saw several people supporting it.

Is there a process which needs to be followed to get this done or do we 
just need to pester Matt?

Cheers - Callum.

Michael D Adams wrote:
> On Oct 9, 2007, at 12:42 PM, Travis Snoozy wrote:
>> It's a great big PITA if you have files you don't want to distribute,
>> though.
>
> What if the "Stable Tag" field in the readme could specify a directory 
> instead of just a tag name?
>
> Stable Tag: 2.1/sub-directory
>
> would result in tags/2.1/sub-directory/ being packaged as the download 
> zip. For the "Other Versions" section of the plugin directory, we'd 
> probably still package the whole "root" directory (tags/2.1/) because 
> we can't know if all tags have the same directory structure.
>
> Would that help with these issues? Thoughts?
>
> Michael
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>

From wp-hackers at nj-arp.org  Wed Oct 17 00:40:50 2007
From: wp-hackers at nj-arp.org (Bob)
Date: Wed Oct 17 00:41:10 2007
Subject: [wp-hackers] Moving tickets/patches forward
Message-ID: <001001c81056$6004ac50$0300a8c0@Toshiba>

I'm involved with patches for a couple tickets related to wp-mail.php.  For 
one of them, #5169, I've tested and uploaded a patch, but that was 5 days 
ago and nothing has happened to the ticket since then.  Is there a process 
for moving these tickets forward so the patch can be incorporated in the 
trunk?  (Note that what's in the trunk now basically doesn't work, so a 
patch is definitely needed, and I have tested my patch.)

The other ticket, #4642, depends on the patch for #5169.  I'm waiting for 
#5169 to be closed before continuing with #4642 so I don't have to test the 
patch twice.

If someone could take care of #5169, I would really appreciate it.  And if 
there's some sort of process to get patches accepted, please let me know.

http://trac.wordpress.org/ticket/5169
http://trac.wordpress.org/ticket/4642

Thanks...
Bob

From lists at wpthoughts.com  Wed Oct 17 01:40:07 2007
From: lists at wpthoughts.com (Andrew Barnett)
Date: Wed Oct 17 01:40:12 2007
Subject: [wp-hackers] Re: [wp-trac] Re: [WordPress Trac] #5158: Admin name
	not showing when making a post
In-Reply-To: <060.9a965573024f233a5fac1ceb6f89689d@lists.automattic.com>
References: <051.89fd9b0981696123941ad4cf9e9a71be@lists.automattic.com>
	<060.9a965573024f233a5fac1ceb6f89689d@lists.automattic.com>
Message-ID: <ce7b18710710161840n5fd09645sd4008ec3ada0c4cb@mail.gmail.com>

OK, maybe not plaguing, but annoying. I've never noticed it before until
recently when I started a blog with multiple authors and contributors. Its
only a cosmetic issue, but annoying in the fact that I had to create another
user just so that I could post as the author rather then other who are just
contributors.
From wordpress at santosj.name  Wed Oct 17 03:55:09 2007
From: wordpress at santosj.name (Jacob)
Date: Wed Oct 17 03:55:37 2007
Subject: [wp-hackers] Proposal for a function commenting convention
In-Reply-To: <47151DF4.9060103@ftwr.co.uk>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<20071014030023.0a094d09@remstate.com>	<4711F329.6080804@santosj.name>	<4711F73B.1030401@ftwr.co.uk>	<47120600.307@santosj.name>	<b88434820710141335k7afec114jd6b9b75a889f6e30@mail.gmail.com>	<4712CB93.6060403@santosj.name>	<161617690710150748o6eb9b8aap4196ddab465f97d3@mail.gmail.com>	<d135ca9c0710150807r3a4e30bge9b3971eed098b64@mail.gmail.com>	<c8f37c930710151559h2adbadefrc8f6cb6a16860b4d@mail.gmail.com>	<8ff7155b0710161117r2ae5ac0bjec057fe464d264c@mail.gmail.com>
	<47151DF4.9060103@ftwr.co.uk>
Message-ID: <4715879D.1040807@santosj.name>

@Andy: I was referring to actions I would be taking and patches I'll be 
submitting. If anyone wants to join in and do the same for files, then 
do please tell me and I won't work on those. Also, it wouldn't do much 
good to have people going off in different directions. Conformity in any 
case is a good thing. I reference a ticket in my previous post, which 
I'm using as an example. You can take a look at it and comment on it. 
The more feedback, the better the end result.

That and the whole @package WordPress solves the whole issue. They can 
just use @package WordPressMu, for their functions. There is no need to 
have additional information with @since and @deprecated. I've been 
adding "@package WordPress" to all functions that I've documented so far.

Jacob Santos

Peter Westwood wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Marcos Sader | marcosmedia wrote:
>   
>> I still think that there should be a "WP" indicator in case of functions
>> shared between the regular and multiuser version.
>>
>> So WP will get,
>> /**
>> * @since WP 1.5
>> * @deprecated WP 2.1
>> */
>>
>> and WPmu,
>> /**
>> * @since WPmu 1.5
>> * @deprecated WPmu 2.1
>> */
>>     
>
> If you want PHPDoc over in wpmu land then you need to convince the
> people there that it is worth adding and the the @since and @depreceated
> tags can be correctly maintained there.
>
> WP != WPmu and we don't need WPmu docs in our code.
>
> westi
> - --
> Peter Westwood
> http://blog.ftwr.co.uk
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.2 (MingW32)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
>
> iD8DBQFHFR30VPRdzag0AcURAtjtAKDRyKv8ZxLeI35Dwfvn+Ktz+IAKJwCg0bzk
> g2JdEhmxaOG2a5SsLpvGhGE=
> =3hi9
> -----END PGP SIGNATURE-----
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From ozh at planetozh.com  Wed Oct 17 09:03:26 2007
From: ozh at planetozh.com (Ozh)
Date: Wed Oct 17 09:03:31 2007
Subject: [wp-hackers] WordPress versions <-> functions map
In-Reply-To: <8f93a7390710030455g315fa9c1rcd19f0dd91f74afe@mail.gmail.com>
References: <ae81acd10709290344u2c35e275mb6192dca57076c5d@mail.gmail.com>
	<8f93a7390709290501n459c41b1w42cdb73063112a28@mail.gmail.com>
	<47034B2A.1050902@freecharity.org.uk>
	<8f93a7390710030455g315fa9c1rcd19f0dd91f74afe@mail.gmail.com>
Message-ID: <ae81acd10710170203i20de981dx9f8dfce4f01257d6@mail.gmail.com>

Ola

I'm bumping this old thread to report to anyone interested that I will
be soon posting a complete map of functions across all WP versions.
Preview: <http://planetozh.com/temp/wp_functions_history.gif>
That's 1250 functions through WP history across 30 releases from 0.7.1
to 2.3 ! :)

Things won't be 100% accurate probably (all things generated from grep
patterns parsing the source) but it should be of some help anyway to
plugin coders wondering about a particular function.

Cheers,

Ozh
-- 
http://FrenchFragFactory.net ~ Daily Quake News
http://planetOzh.com ~ Blog and WordPress Stuff
From viper at viper007bond.com  Wed Oct 17 10:04:16 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Wed Oct 17 10:04:22 2007
Subject: [wp-hackers] WordPress versions <-> functions map
In-Reply-To: <ae81acd10710170203i20de981dx9f8dfce4f01257d6@mail.gmail.com>
References: <ae81acd10709290344u2c35e275mb6192dca57076c5d@mail.gmail.com>
	<8f93a7390709290501n459c41b1w42cdb73063112a28@mail.gmail.com>
	<47034B2A.1050902@freecharity.org.uk>
	<8f93a7390710030455g315fa9c1rcd19f0dd91f74afe@mail.gmail.com>
	<ae81acd10710170203i20de981dx9f8dfce4f01257d6@mail.gmail.com>
Message-ID: <8f93a7390710170304r6e6b35d5y59de2a653cd1aaa@mail.gmail.com>

*thumbsup*

And I haven't forgotten about my paste-in-your-plugin code, but I've just
been oh so busy lately.

On 10/17/07, Ozh <ozh@planetozh.com> wrote:
>
> Ola
>
> I'm bumping this old thread to report to anyone interested that I will
> be soon posting a complete map of functions across all WP versions.
> Preview: <http://planetozh.com/temp/wp_functions_history.gif>
> That's 1250 functions through WP history across 30 releases from 0.7.1
> to 2.3 ! :)
>
> Things won't be 100% accurate probably (all things generated from grep
> patterns parsing the source) but it should be of some help anyway to
> plugin coders wondering about a particular function.
>
> Cheers,
>
> Ozh
> --
> http://FrenchFragFactory.net ~ Daily Quake News
> http://planetOzh.com ~ Blog and WordPress Stuff
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From yahgrp at poplarware.com  Wed Oct 17 14:20:12 2007
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Wed Oct 17 14:18:21 2007
Subject: [wp-hackers] WordPress versions <-> functions map
In-Reply-To: <ae81acd10710170203i20de981dx9f8dfce4f01257d6@mail.gmail.com>
References: <ae81acd10709290344u2c35e275mb6192dca57076c5d@mail.gmail.com>	<8f93a7390709290501n459c41b1w42cdb73063112a28@mail.gmail.com>	<47034B2A.1050902@freecharity.org.uk>	<8f93a7390710030455g315fa9c1rcd19f0dd91f74afe@mail.gmail.com>
	<ae81acd10710170203i20de981dx9f8dfce4f01257d6@mail.gmail.com>
Message-ID: <47161A1C.6030800@poplarware.com>

Ozh wrote:
> I'm bumping this old thread to report to anyone interested that I will
> be soon posting a complete map of functions across all WP versions.
> Preview: <http://planetozh.com/temp/wp_functions_history.gif>
> That's 1250 functions through WP history across 30 releases from 0.7.1
> to 2.3 ! :)

Please put a link from somewhere in codex.wordpress.org to your site. 
The Plugin Resources and Theme Developer Resources lists would be a 
good places to make links, as well as the Function List article. All 
are locatable from the Developer Documentation landing page.

Thanks,
     Jennifer

-- 
Jennifer Hodgdon

Poplar ProductivityWare * www.poplarware.com
Web Databases/Scripts * Modeling/Analysis/Palm OS Software

From lists07 at wiltgen.net  Wed Oct 17 16:57:03 2007
From: lists07 at wiltgen.net (Charles)
Date: Wed Oct 17 16:57:21 2007
Subject: [wp-hackers] Details of Windows Live Writer AtomPub support
In-Reply-To: <d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>
	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
Message-ID: <00e401c810de$bf761470$3e623d50$@net>

http://jcheng.wordpress.com/2007/10/15/how-wlw-speaks-atompub-introduction/
http://jcheng.wordpress.com/2007/10/16/how-wlw-speaks-atompub-part-1-autodiscovery/

-- Charles


From computerguru at neosmart.net  Wed Oct 17 19:04:00 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Wed Oct 17 19:04:25 2007
Subject: [wp-hackers] Details of Windows Live Writer AtomPub support
In-Reply-To: <00e401c810de$bf761470$3e623d50$@net>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<00e401c810de$bf761470$3e623d50$@net>
Message-ID: <000f01c810f0$81310cd0$83932670$@net>

What I'd like to see is WLW supporting WP tags... That's the only thing I use the admin center for nowadays.

Computer Guru
NeoSmart Technologies
http://neosmart.net/

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of Charles
> Sent: Wednesday, October 17, 2007 7:57 PM
> To: wp-hackers@lists.automattic.com
> Subject: [wp-hackers] Details of Windows Live Writer AtomPub support
> 
> http://jcheng.wordpress.com/2007/10/15/how-wlw-speaks-atompub-
> introduction/
> http://jcheng.wordpress.com/2007/10/16/how-wlw-speaks-atompub-part-1-
> autodiscovery/
> 
> -- Charles
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From joseph at randomnetworks.com  Wed Oct 17 19:16:59 2007
From: joseph at randomnetworks.com (Joseph Scott)
Date: Wed Oct 17 19:17:22 2007
Subject: [wp-hackers] Details of Windows Live Writer AtomPub support
In-Reply-To: <000f01c810f0$81310cd0$83932670$@net>
References: <ae81acd10710131047t34b2679bgb4708c21083bcd6b@mail.gmail.com>	<d135ca9c0710131101r59fc7042wc4633921c75937ad@mail.gmail.com>
	<00e401c810de$bf761470$3e623d50$@net>
	<000f01c810f0$81310cd0$83932670$@net>
Message-ID: <565D0E76-3C22-43AB-80CD-F3C0C82CAD53@randomnetworks.com>


On Oct 17, 2007, at 12:04 PM, Computer Guru wrote:

> What I'd like to see is WLW supporting WP tags... That's the only  
> thing I use the admin center for nowadays.


The 2.3 branch (see http://trac.wordpress.org/changeset/6211) and - 
trunk (see http://trac.wordpress.org/changeset/6192) both have code  
that turns this on now.

This was completely my bad for not realizing we needed these changes  
soon enough to get them into the 2.3 release.

--
Joseph Scott
http://joseph.randomnetworks.com/


From morty at gmx.net  Wed Oct 17 21:56:50 2007
From: morty at gmx.net (=?UTF-8?B?TW9yaXR6ICdNb3J0eScgU3Ryw7xiZQ==?=)
Date: Wed Oct 17 22:26:11 2007
Subject: [wp-hackers] WordPress versions <-> functions map
In-Reply-To: <ae81acd10710170203i20de981dx9f8dfce4f01257d6@mail.gmail.com>
References: <ae81acd10709290344u2c35e275mb6192dca57076c5d@mail.gmail.com>	<8f93a7390709290501n459c41b1w42cdb73063112a28@mail.gmail.com>	<47034B2A.1050902@freecharity.org.uk>	<8f93a7390710030455g315fa9c1rcd19f0dd91f74afe@mail.gmail.com>
	<ae81acd10710170203i20de981dx9f8dfce4f01257d6@mail.gmail.com>
Message-ID: <47168522.5090407@gmx.net>

Ozh schrieb:
> Ola
>
> I'm bumping this old thread to report to anyone interested that I will
> be soon posting a complete map of functions across all WP versions.
> Preview: <http://planetozh.com/temp/wp_functions_history.gif>
> That's 1250 functions through WP history across 30 releases from 0.7.1
> to 2.3 ! :)
>   


What is the state of your list? I'd love to save me some research. :-)
Cheers
Morty

From lloydomattic at gmail.com  Thu Oct 18 00:25:35 2007
From: lloydomattic at gmail.com (Lloyd Budd)
Date: Thu Oct 18 00:25:40 2007
Subject: [wp-hackers] Moving tickets/patches forward
In-Reply-To: <001001c81056$6004ac50$0300a8c0@Toshiba>
References: <001001c81056$6004ac50$0300a8c0@Toshiba>
Message-ID: <70ebb7140710171725n6f863a8eg2fa032177e16999@mail.gmail.com>

On 10/16/07, Bob <wp-hackers@nj-arp.org> wrote:
> If someone could take care of #5169, I would really appreciate it.  And if
> there's some sort of process to get patches accepted, please let me know.
>
> http://trac.wordpress.org/ticket/5169
> http://trac.wordpress.org/ticket/4642

Maybe ask rboren, westi, or markjaquith on IRC about the tickets
irc://irc.freenode.net/wordpress-dev

Hope that helps,
-- 
Lloyd Budd | Digital Entomologist | | Skype:foolswisdom
WordPress.com | WordPress.org | Automattic.com
From lists.automattic.com at callum-macdonald.com  Thu Oct 18 03:11:46 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Thu Oct 18 03:12:30 2007
Subject: [wp-hackers] Moving tickets/patches forward
In-Reply-To: <70ebb7140710171725n6f863a8eg2fa032177e16999@mail.gmail.com>
References: <001001c81056$6004ac50$0300a8c0@Toshiba>
	<70ebb7140710171725n6f863a8eg2fa032177e16999@mail.gmail.com>
Message-ID: <4716CEF2.5080303@callum-macdonald.com>

I think this raises an interesting point. Is there actually a process 
for making contributions or decisions in WordPress? Or is it just what 
the core devs do, when they do it?

I realise there's a great deal of discussion on the list, and that's 
great. I know that I've personally noticed westi replying to lots of 
stuff and accepting patches. Is that it, is that the process?

http://codex.wordpress.org/Core_Patch_Submission
This page is currently blank. It would be nice if there was something 
here explaining how patches should be submitted.

Cheers - Callum.

Lloyd Budd wrote:
> On 10/16/07, Bob <wp-hackers@nj-arp.org> wrote:
>   
>> If someone could take care of #5169, I would really appreciate it.  And if
>> there's some sort of process to get patches accepted, please let me know.
>>
>> http://trac.wordpress.org/ticket/5169
>> http://trac.wordpress.org/ticket/4642
>>     
>
> Maybe ask rboren, westi, or markjaquith on IRC about the tickets
> irc://irc.freenode.net/wordpress-dev
>
> Hope that helps,
>   

From ryan at boren.nu  Thu Oct 18 05:36:35 2007
From: ryan at boren.nu (Ryan Boren)
Date: Thu Oct 18 05:36:41 2007
Subject: [wp-hackers] Moving tickets/patches forward
In-Reply-To: <4716CEF2.5080303@callum-macdonald.com>
References: <001001c81056$6004ac50$0300a8c0@Toshiba>
	<70ebb7140710171725n6f863a8eg2fa032177e16999@mail.gmail.com>
	<4716CEF2.5080303@callum-macdonald.com>
Message-ID: <c8f37c930710172236ge21ed11i4387613b6f1c542a@mail.gmail.com>

On 10/17/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com> wrote:
> I think this raises an interesting point. Is there actually a process
> for making contributions or decisions in WordPress? Or is it just what
> the core devs do, when they do it?
>
> I realise there's a great deal of discussion on the list, and that's
> great. I know that I've personally noticed westi replying to lots of
> stuff and accepting patches. Is that it, is that the process?
>
> http://codex.wordpress.org/Core_Patch_Submission
> This page is currently blank. It would be nice if there was something
> here explaining how patches should be submitted.

http://codex.wordpress.org/Submitting_Bugs covers some of this.  Not
sure what's with the Core Patch Submission page.

Patch commits tend to happen in cycles.  Right now we've been getting
2.3.1 ready and doing some architectural stuff to 2.4.  Small bugs
milestoned for 2.4 are kinda on the back burner.  In the case of
#5169, it's a bug in the somewhat orphaned and neglected wp-mail and
involves email related regular expressions, which are a pain. For an
example of what a pain it is to handle all cases for an email address:

http://trac.wordpress.org/attachment/ticket/4616/4616b.diff

Such bugs tend to get shuffled to the back of development priorities.
But, the thing to do if you care about a bug that isn't getting
traction is just what's been done here.  Add a note to trac and bring
it up on this list to see if anyone wants to take up the cause.

Anyhow, I added some notes to the ticket.

Ryan
From wp-hackers at nj-arp.org  Thu Oct 18 09:27:50 2007
From: wp-hackers at nj-arp.org (Bob)
Date: Thu Oct 18 09:28:01 2007
Subject: [wp-hackers] Moving tickets/patches forward
References: <001001c81056$6004ac50$0300a8c0@Toshiba><70ebb7140710171725n6f863a8eg2fa032177e16999@mail.gmail.com><4716CEF2.5080303@callum-macdonald.com>
	<c8f37c930710172236ge21ed11i4387613b6f1c542a@mail.gmail.com>
Message-ID: <000701c81169$2795dbf0$0300a8c0@Toshiba>

Ryan, thank you for your reply.

Email address validation is a pain and I know wp-mail.php is 
overly-restrictive on what it accepts.  But at this point, I was simply 
trying to correct the errors in the previous two #5169 patches applied to 
trunk (yes, they made things worse) and fix the specific error mentioned in 
#5169.  My philosophy is that it's not perfect, but it's better than what's 
in WP 2.3, properly handles the vast majority of email addresses, and is 
consistent with email address processing elsewhere in WP.

There are a few ways to approach the issues raised by #4616, #4642, and 
#5169.  I'm thinking:
1. Put in #5169 as it is now to fix the reported errors in wp-mail and fix 
the already-applied bad patches.
2. Put in #4642 to restrict posting in wp-mail to those allowed to post.
3. Expand #4616 to cover wp-mail and implement a general solution on email 
validation.

Does that sound OK to you, or would you prefer a different approach?  Note 
that a general solution also requires changes to is_email and sanitize_email 
in formatting.php, as they only allow the same (overly-restrictive) 
characters as wp-mail allows.

Bob


----- Original Message ----- 
From: "Ryan Boren" <ryan@boren.nu>
To: <wp-hackers@lists.automattic.com>
Sent: Thursday, October 18, 2007 1:36 AM
Subject: Re: [wp-hackers] Moving tickets/patches forward


> On 10/17/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com> 
> wrote:
>> I think this raises an interesting point. Is there actually a process
>> for making contributions or decisions in WordPress? Or is it just what
>> the core devs do, when they do it?
>>
>> I realise there's a great deal of discussion on the list, and that's
>> great. I know that I've personally noticed westi replying to lots of
>> stuff and accepting patches. Is that it, is that the process?
>>
>> http://codex.wordpress.org/Core_Patch_Submission
>> This page is currently blank. It would be nice if there was something
>> here explaining how patches should be submitted.
>
> http://codex.wordpress.org/Submitting_Bugs covers some of this.  Not
> sure what's with the Core Patch Submission page.
>
> Patch commits tend to happen in cycles.  Right now we've been getting
> 2.3.1 ready and doing some architectural stuff to 2.4.  Small bugs
> milestoned for 2.4 are kinda on the back burner.  In the case of
> #5169, it's a bug in the somewhat orphaned and neglected wp-mail and
> involves email related regular expressions, which are a pain. For an
> example of what a pain it is to handle all cases for an email address:
>
> http://trac.wordpress.org/attachment/ticket/4616/4616b.diff
>
> Such bugs tend to get shuffled to the back of development priorities.
> But, the thing to do if you care about a bug that isn't getting
> traction is just what's been done here.  Add a note to trac and bring
> it up on this list to see if anyone wants to take up the cause.
>
> Anyhow, I added some notes to the ticket.
>
> Ryan
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

From burobjorn at gmail.com  Thu Oct 18 16:13:21 2007
From: burobjorn at gmail.com (Burobjorn)
Date: Thu Oct 18 16:13:29 2007
Subject: [wp-hackers] automatically create a new page with plugin upon
	installation
Message-ID: <47178621.3050107@gmail.com>

Hi,

I want my (WPMU) plugin to automatically create a page with a specific 
theme in the main blog upon installation. I recall seeing this been done 
by another (wp or wpmu) plugin, but I can't remember which one nor how 
it did this. I was wondering if someone could point me in the right 
direction in order to do this either for WP or WPMU.

Thanks in advance,

All the best,

grtz
BjornW

-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Concordiastraat 68-114
3551 EM Utrecht
The Netherlands

phone: +31 30 2444 101
http://www.burobjorn.nl
From dan at dancoulter.com  Thu Oct 18 17:05:18 2007
From: dan at dancoulter.com (Dan Coulter)
Date: Thu Oct 18 17:05:24 2007
Subject: [wp-hackers] automatically create a new page with plugin upon
	installation
In-Reply-To: <47178621.3050107@gmail.com>
References: <47178621.3050107@gmail.com>
Message-ID: <5dc2163e0710181005u3f6b7d89r6d771281f30d9fe2@mail.gmail.com>

Check out this function:

http://codex.wordpress.org/Function_Reference/wp_insert_post

On 10/18/07, Burobjorn <burobjorn@gmail.com> wrote:
>
> Hi,
>
> I want my (WPMU) plugin to automatically create a page with a specific
> theme in the main blog upon installation. I recall seeing this been done
> by another (wp or wpmu) plugin, but I can't remember which one nor how
> it did this. I was wondering if someone could point me in the right
> direction in order to do this either for WP or WPMU.
>
> Thanks in advance,
>
> All the best,
>
> grtz
> BjornW
>
> --
>
> met vriendelijke groet,
> Bjorn Wijers
>
> * b u r o b j o r n .nl *
> digitaal vakmanschap | digital craftsmanship
>
> Concordiastraat 68-114
> 3551 EM Utrecht
> The Netherlands
>
> phone: +31 30 2444 101
> http://www.burobjorn.nl
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Dan Coulter
http://www.dancoulter.com/
http://www.phpflickr.com/
It is time - http://e-hobo.com/

Hey, I got nothing to do today but smile
-Simon and Garfunkel
From ozh at planetozh.com  Thu Oct 18 17:06:42 2007
From: ozh at planetozh.com (Ozh)
Date: Thu Oct 18 17:07:07 2007
Subject: [wp-hackers] automatically create a new page with plugin upon
	installation
In-Reply-To: <47178621.3050107@gmail.com>
References: <47178621.3050107@gmail.com>
Message-ID: <ae81acd10710181006m281d31b3q941738a7a8b18636@mail.gmail.com>

As far as I remember, theme kubrick2 does this (creates an archive
page with a particular template I think)

On 10/18/07, Burobjorn <burobjorn@gmail.com> wrote:
> Hi,
>
> I want my (WPMU) plugin to automatically create a page with a specific
> theme in the main blog upon installation. I recall seeing this been done
> by another (wp or wpmu) plugin, but I can't remember which one nor how
> it did this. I was wondering if someone could point me in the right
> direction in order to do this either for WP or WPMU.
>
> Thanks in advance,
>
> All the best,
>
> grtz
> BjornW
>
> --
>
> met vriendelijke groet,
> Bjorn Wijers
>
> * b u r o b j o r n .nl *
> digitaal vakmanschap | digital craftsmanship
>
> Concordiastraat 68-114
> 3551 EM Utrecht
> The Netherlands
>
> phone: +31 30 2444 101
> http://www.burobjorn.nl
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://FrenchFragFactory.net ~ Daily Quake News
http://planetOzh.com ~ Blog and WordPress Stuff
From robin.adr at gmail.com  Thu Oct 18 19:19:29 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Thu Oct 18 19:19:37 2007
Subject: [wp-hackers] automatically create a new page with plugin upon
	installation
In-Reply-To: <ae81acd10710181006m281d31b3q941738a7a8b18636@mail.gmail.com>
References: <47178621.3050107@gmail.com>
	<ae81acd10710181006m281d31b3q941738a7a8b18636@mail.gmail.com>
Message-ID: <d135ca9c0710181219vda92027v903a990c91b4c7fc@mail.gmail.com>

Yeah, K2 (getk2.com) does this.

I believe the practice is to hook into the plugin_activation-{filename} hook
(or whatever it's called) and check to see if it's a first-time
installation, then wp_insert_post().

On 10/18/07, Ozh <ozh@planetozh.com> wrote:
>
> As far as I remember, theme kubrick2 does this (creates an archive
> page with a particular template I think)
>
> On 10/18/07, Burobjorn <burobjorn@gmail.com> wrote:
> > Hi,
> >
> > I want my (WPMU) plugin to automatically create a page with a specific
> > theme in the main blog upon installation. I recall seeing this been done
> > by another (wp or wpmu) plugin, but I can't remember which one nor how
> > it did this. I was wondering if someone could point me in the right
> > direction in order to do this either for WP or WPMU.
> >
> > Thanks in advance,
> >
> > All the best,
> >
> > grtz
> > BjornW
> >
> > --
> >
> > met vriendelijke groet,
> > Bjorn Wijers
> >
> > * b u r o b j o r n .nl *
> > digitaal vakmanschap | digital craftsmanship
> >
> > Concordiastraat 68-114
> > 3551 EM Utrecht
> > The Netherlands
> >
> > phone: +31 30 2444 101
> > http://www.burobjorn.nl
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> --
> http://FrenchFragFactory.net ~ Daily Quake News
> http://planetOzh.com ~ Blog and WordPress Stuff
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wp-hackers at striderweb.com  Thu Oct 18 19:41:22 2007
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Oct 18 19:41:25 2007
Subject: [wp-hackers] OT: Stephen Fry
Message-ID: <B89134A2-9EB3-4E21-A216-E8327A7CD056@striderweb.com>

Sorry for the OT, but this just caught my attention.  British actor  
Stephen Fry has a (so far, interesting) blog, powered by WordPress.

<http://stephenfry.com/blog/>

He's a total geek.  Who knew?

We now return to your regularly scheduled mailing list.

Stephen
From viper at viper007bond.com  Fri Oct 19 00:50:59 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Fri Oct 19 00:51:05 2007
Subject: [wp-hackers] OT: Stephen Fry
In-Reply-To: <B89134A2-9EB3-4E21-A216-E8327A7CD056@striderweb.com>
References: <B89134A2-9EB3-4E21-A216-E8327A7CD056@striderweb.com>
Message-ID: <8f93a7390710181750h63827c3r364e47c0cced9762@mail.gmail.com>

Damn, those are some long ass posts!

On 10/18/07, Stephen Rider <wp-hackers@striderweb.com> wrote:
>
> Sorry for the OT, but this just caught my attention.  British actor
> Stephen Fry has a (so far, interesting) blog, powered by WordPress.
>
> <http://stephenfry.com/blog/>
>
> He's a total geek.  Who knew?
>
> We now return to your regularly scheduled mailing list.
>
> Stephen
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From cpoteet at siolon.com  Fri Oct 19 02:15:49 2007
From: cpoteet at siolon.com (Chris Poteet)
Date: Fri Oct 19 02:15:56 2007
Subject: [wp-hackers] Dropping the Ball
Message-ID: <1192760149.248601.111890@z24g2000prh.googlegroups.com>

Team,

WP 2.3 is a monumental step forward for WordPress, and I want to
congratulate all of you for your hard work.  I'm excited to see the
future of the application.

The one thing I think that we short-sighted was backwards
compatibility with the DB schema.  I'm puzzled on why we would
continue to support legacy/deprecated functions for a time, but we
didn't do the same for DB tables which lead to almost all of my WP
sites breaking in one way or another?  Just think in the future we
could be conscious of this.

Again, great job on the new version, and I look forward to the future.

Chris Poteet

From robin.adr at gmail.com  Fri Oct 19 02:35:15 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Fri Oct 19 02:35:19 2007
Subject: [wp-hackers] Dropping the Ball
In-Reply-To: <1192760149.248601.111890@z24g2000prh.googlegroups.com>
References: <1192760149.248601.111890@z24g2000prh.googlegroups.com>
Message-ID: <d135ca9c0710181935v44a0d13fr3c8ebca4ac5c9e92@mail.gmail.com>

What would be done to support them? Keeping the _categories and _post2cat
and other tables and populating them as well would be a major hindrance, and
regular expressions on DB queries would just be a royal PITA.

Reality is, things have to change sometime, and I for one think the
WordPress development team did a fine job, both in keeping the old function
API and especially in attempting to give due notice to plugin developers and
the like. Extensive lists of compatibility were made on the wiki, numerous
posts were made on the development blog, which shows up in every WordPress
dashboard (unless otherwise removed). I don't know what more could have
done.

So I don't think they "dropped the ball" at all. The WP dev team was
extremely conscious of the incompatibilities that took place and tried to
limit the negative effects that the changes were sure to create.

On 10/18/07, Chris Poteet <cpoteet@siolon.com> wrote:
>
> Team,
>
> WP 2.3 is a monumental step forward for WordPress, and I want to
> congratulate all of you for your hard work.  I'm excited to see the
> future of the application.
>
> The one thing I think that we short-sighted was backwards
> compatibility with the DB schema.  I'm puzzled on why we would
> continue to support legacy/deprecated functions for a time, but we
> didn't do the same for DB tables which lead to almost all of my WP
> sites breaking in one way or another?  Just think in the future we
> could be conscious of this.
>
> Again, great job on the new version, and I look forward to the future.
>
> Chris Poteet
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From burobjorn at gmail.com  Fri Oct 19 07:50:14 2007
From: burobjorn at gmail.com (Burobjorn)
Date: Fri Oct 19 07:50:21 2007
Subject: [wp-hackers] automatically create a new page with plugin upon
	installation
In-Reply-To: <5dc2163e0710181005u3f6b7d89r6d771281f30d9fe2@mail.gmail.com>
References: <47178621.3050107@gmail.com>
	<5dc2163e0710181005u3f6b7d89r6d771281f30d9fe2@mail.gmail.com>
Message-ID: <471861B6.4060505@gmail.com>

Great. Thanks Dan, Ozh and Robin for your replies.

Dan Coulter wrote:
> Check out this function:
> 
> http://codex.wordpress.org/Function_Reference/wp_insert_post
> 
> On 10/18/07, Burobjorn <burobjorn@gmail.com> wrote:
>> Hi,
>>
>> I want my (WPMU) plugin to automatically create a page with a specific
>> theme in the main blog upon installation. I recall seeing this been done
>> by another (wp or wpmu) plugin, but I can't remember which one nor how
>> it did this. I was wondering if someone could point me in the right
>> direction in order to do this either for WP or WPMU.
>>
>> Thanks in advance,
>>
>> All the best,
>>
>> grtz
>> BjornW
>>
>> --
>>
>> met vriendelijke groet,
>> Bjorn Wijers
>>
>> * b u r o b j o r n .nl *
>> digitaal vakmanschap | digital craftsmanship
>>
>> Concordiastraat 68-114
>> 3551 EM Utrecht
>> The Netherlands
>>
>> phone: +31 30 2444 101
>> http://www.burobjorn.nl
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> 
> 
> 


-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Concordiastraat 68-114
3551 EM Utrecht
The Netherlands

phone: +31 30 2444 101
http://www.burobjorn.nl
From viper at viper007bond.com  Fri Oct 19 08:21:51 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Fri Oct 19 08:21:57 2007
Subject: [wp-hackers] Dropping the Ball
In-Reply-To: <1192760149.248601.111890@z24g2000prh.googlegroups.com>
References: <1192760149.248601.111890@z24g2000prh.googlegroups.com>
Message-ID: <8f93a7390710190121n4fe24eabpf4c73834c2b9f802@mail.gmail.com>

It's not as if the tables were just renamed to something else or two tables
merged.

The way the data was stored was fundamentally changed. Making the old tables
exist and still operate wouldn't be as simple as just leaving the code in --
whole new code would have to have been written to convert the new format
back to the old format.

Really would make no sense.

Plus as said, if you stick to using APIs, there's only a couple specific
cases in which your plugin would break.

On 10/18/07, Chris Poteet <cpoteet@siolon.com> wrote:
>
> Team,
>
> WP 2.3 is a monumental step forward for WordPress, and I want to
> congratulate all of you for your hard work.  I'm excited to see the
> future of the application.
>
> The one thing I think that we short-sighted was backwards
> compatibility with the DB schema.  I'm puzzled on why we would
> continue to support legacy/deprecated functions for a time, but we
> didn't do the same for DB tables which lead to almost all of my WP
> sites breaking in one way or another?  Just think in the future we
> could be conscious of this.
>
> Again, great job on the new version, and I look forward to the future.
>
> Chris Poteet
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From peter.westwood at ftwr.co.uk  Fri Oct 19 08:53:03 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri Oct 19 08:54:40 2007
Subject: [wp-hackers] Re: [wp-svn] [6271] trunk/wp-includes/taxonomy.php:
	Catch WP_Error.
In-Reply-To: <20071018155515.D5733710E57@basie.automattic.com>
References: <20071018155515.D5733710E57@basie.automattic.com>
Message-ID: <4718706F.5080206@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

m@wordpress.org wrote:
> Revision
>     6271
> Author
>     ryan
> Date
>     2007-10-18 15:55:15 +0000 (Thu, 18 Oct 2007)
> 
> 
>       Log Message
> 
> Catch WP_Error. Props tellyworth. fixes #5226
> 
> 
>       Modified Paths
> 
>     * trunk/wp-includes/taxonomy.php <#trunkwpincludestaxonomyphp>
> 
> 
>       Diff
> 
> 
>         Modified: trunk/wp-includes/taxonomy.php (6270 => 6271)
> 
> 
> --- trunk/wp-includes/taxonomy.php	2007-10-17 21:20:45 UTC (rev 6270)
> +++ trunk/wp-includes/taxonomy.php	2007-10-18 15:55:15 UTC (rev 6271)
> @@ -1119,6 +1119,8 @@
>  	foreach ($terms as $term) {
>  		if ( !$id = is_term($term, $taxonomy) )
>  			$id = wp_insert_term($term, $taxonomy);
> +		if ( is_wp_error($id) )
> +			return $id;
>  		$term_ids[] = $id['term_id'];
>  		$id = $id['term_taxonomy_id'];
>  		$tt_ids[] = $id;
> 
> 

Shouldn't the check on is_wp_error() only be done inside this if:

if ( !$id = is_term($term, $taxonomy) )

is_term doesn't return a wp_error only wp_insert_term does?

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHGHBvVPRdzag0AcURAimjAKDFnzDf6Ckvfm1/yKoTMFSUbcH3pwCeMLsq
78zAkb90al6wxtIMkGIzJM0=
=jgJc
-----END PGP SIGNATURE-----
From cpoteet at siolon.com  Fri Oct 19 14:15:30 2007
From: cpoteet at siolon.com (Chris Poteet)
Date: Fri Oct 19 14:15:49 2007
Subject: [wp-hackers] Re: Dropping the Ball
In-Reply-To: <1192760149.248601.111890@z24g2000prh.googlegroups.com>
References: <1192760149.248601.111890@z24g2000prh.googlegroups.com>
Message-ID: <1192803330.146703.273190@q3g2000prf.googlegroups.com>


All,

My apologies for a short-sighted e-mail.  Robin and Viper both made
great points that I failed to see.

Chris

From ozh at planetozh.com  Fri Oct 19 15:30:28 2007
From: ozh at planetozh.com (Ozh)
Date: Fri Oct 19 15:30:37 2007
Subject: [wp-hackers] WordPress versions <-> functions map
In-Reply-To: <47168522.5090407@gmx.net>
References: <ae81acd10709290344u2c35e275mb6192dca57076c5d@mail.gmail.com>
	<8f93a7390709290501n459c41b1w42cdb73063112a28@mail.gmail.com>
	<47034B2A.1050902@freecharity.org.uk>
	<8f93a7390710030455g315fa9c1rcd19f0dd91f74afe@mail.gmail.com>
	<ae81acd10710170203i20de981dx9f8dfce4f01257d6@mail.gmail.com>
	<47168522.5090407@gmx.net>
Message-ID: <ae81acd10710190830r4d8389a8w99290ce9ee110c92@mail.gmail.com>

On 10/17/07, Moritz 'Morty' Str?be <morty@gmx.net> wrote:
> What is the state of your list? I'd love to save me some research. :-)
> Cheers
> Morty

You might like this:
<http://planetozh.com/blog/2007/10/wordpress-functions-implementation-history-tool/>

(I must say in all modesty that it's completely uber woot)

Ozh

-- 
http://FrenchFragFactory.net ~ Daily Quake News
http://planetOzh.com ~ Blog and WordPress Stuff
From janbucher at gmail.com  Fri Oct 19 16:09:24 2007
From: janbucher at gmail.com (Jan Bucher)
Date: Fri Oct 19 16:09:29 2007
Subject: [wp-hackers] Save Changes for Taxonomies ...
Message-ID: <6132e6d0710190909u6fa91b9fj3b43c38995891e8@mail.gmail.com>

Hello Everybody,

this could be ab bit noob, but i don't have an idea how to save
changes i have made to the Taxonomies of WP.

I succesfully created a Admin-Page, where I perform the following
lines for testing:

	
//get all taxonimies:
$taxonomies = get_object_taxonomies('post');

//show all taxonomies ;)
print_r($taxonomies);	

//create a new one: "people"

register_taxonomy( "people", "post");

//retrieve altered taxonomies
$taxonomies = get_object_taxonomies('post');

// and spot the changes
print_r($taxonomies);		
	
This works fine. But it does not save the changes in the database..
.. this must be a very hard one ;)

Thanks for your time
Jan
From lloydomattic at gmail.com  Fri Oct 19 16:18:47 2007
From: lloydomattic at gmail.com (Lloyd Budd)
Date: Fri Oct 19 16:18:57 2007
Subject: [wp-hackers] -was- Re: [wp-svn] [6273] trunk: Refactor atom support
	to share code.
Message-ID: <70ebb7140710190918l7d58d2b5t600f655502b61573@mail.gmail.com>

On 10/19/07, m@wordpress.org <m@wordpress.org> wrote:
>
>
>  Revision 6273 Author westi Date 2007-10-19 15:42:30 +0000 (Fri, 19 Oct
> 2007)
> Log Message Refactor atom support to share code. Fixes #5181 props rubys
>
> Modified Paths
>
> trunk/wp-app.php
> trunk/wp-includes/feed-atom.php
> trunk/wp-includes/feed.php
>
> Diff

snip

> Modified: trunk/wp-includes/feed.php (6272 => 6273)
> --- trunk/wp-includes/feed.php 2007-10-18 22:09:56 UTC (rev 6272)
> +++ trunk/wp-includes/feed.php 2007-10-19 15:42:30 UTC (rev 6273)
> @@ -250,4 +250,46 @@
>  }
>  }
>
> +/**
> + * prep_atom_text_construct() - determine if given string of data is
> + * type text, html, or xhtml, per RFC 4287 section 3.1.
> + *
> + * In the case of WordPress, text is defined as containing no markup,
> + * xhtml is defined as "well formed", and html as tag soup (i.e., the
> rest).
> + *
> + * Container div tags are added to xhtml values, per section 3.1.1.3.
> + *
> + * @package WordPress
> + * @subpackage Feed
> + *
> + * @param string $data input string
> + * @return array $result array(type, value)
> + * @link

snip

prep_atom_text_construct doesn't have @since

Can someone update http://codex.wordpress.org/Inline_Documentation
with the conventions and desired fields.

Thank you,
-- 
Lloyd Budd | Digital Entomologist | | Skype:foolswisdom
WordPress.com | WordPress.org | Automattic.com
From peter.westwood at ftwr.co.uk  Fri Oct 19 16:25:30 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri Oct 19 16:27:58 2007
Subject: [wp-hackers] -was- Re: [wp-svn] [6273] trunk: Refactor atom
	support to share code.
In-Reply-To: <70ebb7140710190918l7d58d2b5t600f655502b61573@mail.gmail.com>
References: <70ebb7140710190918l7d58d2b5t600f655502b61573@mail.gmail.com>
Message-ID: <4718DA7A.8070904@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Lloyd Budd wrote:
> On 10/19/07, m@wordpress.org <m@wordpress.org> wrote:
>>
>>  Revision 6273 Author westi Date 2007-10-19 15:42:30 +0000 (Fri, 19 Oct
>> 2007)
>> Log Message Refactor atom support to share code. Fixes #5181 props rubys
>>
>> Modified Paths
>>
>> trunk/wp-app.php
>> trunk/wp-includes/feed-atom.php
>> trunk/wp-includes/feed.php
>>
>> Diff
> 
> snip
> 
>> Modified: trunk/wp-includes/feed.php (6272 => 6273)
>> --- trunk/wp-includes/feed.php 2007-10-18 22:09:56 UTC (rev 6272)
>> +++ trunk/wp-includes/feed.php 2007-10-19 15:42:30 UTC (rev 6273)
>> @@ -250,4 +250,46 @@
>>  }
>>  }
>>
>> +/**
>> + * prep_atom_text_construct() - determine if given string of data is
>> + * type text, html, or xhtml, per RFC 4287 section 3.1.
>> + *
>> + * In the case of WordPress, text is defined as containing no markup,
>> + * xhtml is defined as "well formed", and html as tag soup (i.e., the
>> rest).
>> + *
>> + * Container div tags are added to xhtml values, per section 3.1.1.3.
>> + *
>> + * @package WordPress
>> + * @subpackage Feed
>> + *
>> + * @param string $data input string
>> + * @return array $result array(type, value)
>> + * @link
> 
> snip
> 
> prep_atom_text_construct doesn't have @since
> 

Fixed

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHGNp6VPRdzag0AcURAiDsAKCCYlU1Sa/iJVhLJUG5kYkI19AhJwCgiUvg
ksISEc30x2QYpY6IrelqwmQ=
=UgyC
-----END PGP SIGNATURE-----
From admin at laptoptips.ca  Fri Oct 19 17:40:42 2007
From: admin at laptoptips.ca (Andrew Ozz)
Date: Fri Oct 19 17:45:21 2007
Subject: [wp-hackers] Couple of quick questions: restrict access to plugin
 file and loading of l10n
In-Reply-To: <20071019120044.3E8946755@comox.textdrive.com>
References: <20071019120044.3E8946755@comox.textdrive.com>
Message-ID: <4718EC1A.9080906@laptoptips.ca>

Hi, I need a bit of advice about a plugin I'm working on.

1. I've read the discussion about restricting access to a plugin's php 
file from about a month ago and agree that there's no substitute for 
properly escaping and sanitizing user input, POST and GET requests, 
using wp_nonce, etc. But good security is build in layers, so I'm 
thinking to restrict the loading of the plugin's main php file like that:

if( strpos($_SERVER['REQUEST_URI'], 'my-plugin.php') !== false &&
     strpos($_SERVER['REQUEST_URI'], 'wp-admin') === false )
     exit('some error message');

(load my-plugin.php only if it's requested by a script from wp-admin 
directory).

Or even the more restrictive:

if ( strpos($_SERVER['REQUEST_URI'], 'my-plugin.php') !== false &&
     ! ('options-general.php' == basename($_SERVER['SCRIPT_FILENAME']) ||
     'plugins.php' == basename($_SERVER['SCRIPT_FILENAME']) ||
     'wp-login.php' == basename($_SERVER['SCRIPT_FILENAME'])) )
     exit('some error message');

(load my-plugin.php only if it's requested by options-general, wp-login 
or plugins.php).

Does anyone see any problems with using these? I've tested both on my 
LAMP server and all seems to work fine in WordPress 2.2 and 2.3.

2. I'm providing .pot file for easy translation and (of course) using 
load_plugin_textdomain to load the translations.

How "late" can I call it? I see some plugins use the "init" or 
"plugins_loaded" hooks but that would load the translation on every run 
- another 25-30KB - whether it's needed or not.

I've tried loading it at the beginning of the plugin's options page and 
it works well on the test server, but was wondering if that's not "too 
late". Does anyone have experience with this?

Thanks a lot,
Andrew
From wp-hackers at striderweb.com  Fri Oct 19 17:58:53 2007
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Oct 19 17:58:48 2007
Subject: [wp-hackers] Couple of quick questions: restrict access to plugin
	file and loading of l10n
In-Reply-To: <4718EC1A.9080906@laptoptips.ca>
References: <20071019120044.3E8946755@comox.textdrive.com>
	<4718EC1A.9080906@laptoptips.ca>
Message-ID: <9E6450C7-DDE3-457A-9F11-77DF37BEFC18@striderweb.com>


On Oct 19, 2007, at 12:40 PM, Andrew Ozz wrote:

> 2. I'm providing .pot file for easy translation and (of course)  
> using load_plugin_textdomain to load the translations.
>
> How "late" can I call it? I see some plugins use the "init" or  
> "plugins_loaded" hooks but that would load the translation on every  
> run - another 25-30KB - whether it's needed or not.
>
> I've tried loading it at the beginning of the plugin's options page 
> [...]

I just wanted to say that that's a really excellent question.  I use  
translation files myself, and never even thought to limit beyond the  
plugin loading (which happens on every page).  The translations are  
only needed on certain admin screens!

Whatever the reply is, this should get a mention in the codex....

Stephen
From yahgrp at poplarware.com  Fri Oct 19 18:24:59 2007
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Fri Oct 19 18:23:08 2007
Subject: [wp-hackers] Couple of quick questions: restrict access to plugin
	file and loading of l10n
In-Reply-To: <4718EC1A.9080906@laptoptips.ca>
References: <20071019120044.3E8946755@comox.textdrive.com>
	<4718EC1A.9080906@laptoptips.ca>
Message-ID: <4718F67B.60602@poplarware.com>

Andrew Ozz wrote:
> 2. I'm providing .pot file for easy translation and (of course) using 
> load_plugin_textdomain to load the translations.
> 
> How "late" can I call it? I see some plugins use the "init" or 
> "plugins_loaded" hooks but that would load the translation on every run 
> - another 25-30KB - whether it's needed or not.

As the maintainer of a multilingual plugin, which changes the locale 
based on URLs/cookies, I have a couple of thoughts on this:

a) Never call load_plugin_textdomain in the main text of your plugin 
file (i.e. outside of a WP filter/action). It might get loaded before 
a multilingual plugin has properly decided which language to use (the 
load command loads a particular language).

b) During the init or loaded hook is fine, from the multilingual 
plugin point of view, because the language should be decided on by then.

c) In one of my plugins (not the multilingual one), I used a scheme 
like this:
    - define a function called myplugin_setup, which calls 
load_plugin_textdomain and then sets a global "setup_done" flag 
variable to true. At the top of that function, check the flag, and if 
it is true, just return.
    - make sure that each function that actually needs localization 
calls setup at the top.

It's not beautiful, but it does save loading text domains if they 
aren't needed, especially if they are only needed by one or two screen 
functions.

d) It is wonderful that you decided to internationalize your plugin 
properly!!!! Many plugin authors do not even consider that WP is used 
all over the world. I have put instructions on my multilingual plugin 
site on how to internationalize plugins, because of this... and 
believe me, it is not much fun for an average non-plugin-developer WP 
user who just wants to set up a blog.

    --Jennifer

-- 
Jennifer Hodgdon

Poplar ProductivityWare * www.poplarware.com
Web Databases/Scripts * Modeling/Analysis/Palm OS Software

From ionfish at gmail.com  Fri Oct 19 19:13:04 2007
From: ionfish at gmail.com (Benedict Eastaugh)
Date: Fri Oct 19 19:13:13 2007
Subject: [wp-hackers] Couple of quick questions: restrict access to plugin
	file and loading of l10n
In-Reply-To: <4718F67B.60602@poplarware.com>
References: <20071019120044.3E8946755@comox.textdrive.com>
	<4718EC1A.9080906@laptoptips.ca> <4718F67B.60602@poplarware.com>
Message-ID: <fd3b80510710191213v44b202fdx7aa2ac4a18da6f8@mail.gmail.com>

Jennifer, how does that advice ("Never call load_plugin_textdomain in
the main text of your plugin file") apply to themes? I currently just
have load_theme_textdomain() called in the functions.php file of my
theme; is this not best practice, and if not, what is? Cheers,

Benedict.
From ozh at planetozh.com  Fri Oct 19 19:25:39 2007
From: ozh at planetozh.com (Ozh)
Date: Fri Oct 19 19:29:18 2007
Subject: [wp-hackers] Couple of quick questions: restrict access to plugin
	file and loading of l10n
In-Reply-To: <fd3b80510710191213v44b202fdx7aa2ac4a18da6f8@mail.gmail.com>
References: <20071019120044.3E8946755@comox.textdrive.com>
	<4718EC1A.9080906@laptoptips.ca> <4718F67B.60602@poplarware.com>
	<fd3b80510710191213v44b202fdx7aa2ac4a18da6f8@mail.gmail.com>
Message-ID: <ae81acd10710191225md2e4028x7e97b8f695d95363@mail.gmail.com>

I believe this is less critical for themes, as by concept the theme is
always loaded (contrary to plugins which can be loaded or not,
depending on context: admin page, etc...)

Unless of course if for some reason only the admin area of your theme
is translated (say, an admin page within wp-admin). In such a case,
you could conditionally load the translation file within an if
(is_admin()) { } block

On 10/19/07, Benedict Eastaugh <ionfish@gmail.com> wrote:
> Jennifer, how does that advice ("Never call load_plugin_textdomain in
> the main text of your plugin file") apply to themes? I currently just
> have load_theme_textdomain() called in the functions.php file of my
> theme; is this not best practice, and if not, what is? Cheers,
>
> Benedict.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://FrenchFragFactory.net ~ Daily Quake News
http://planetOzh.com ~ Blog and WordPress Stuff
From admin at laptoptips.ca  Fri Oct 19 19:44:36 2007
From: admin at laptoptips.ca (Andrew Ozz)
Date: Fri Oct 19 19:49:06 2007
Subject: [wp-hackers] Re: Couple of quick questions: restrict access to
 plugin file and loading of l10n
In-Reply-To: <20071019120044.3E8946755@comox.textdrive.com>
References: <20071019120044.3E8946755@comox.textdrive.com>
Message-ID: <47190924.5030503@laptoptips.ca>

Thanks Jennifer for your quick reply. Your page on how to 
internationalize plugins is very helpful and informative.

 > a) Never call load_plugin_textdomain in the main text of your plugin
 > file (i.e. outside of a WP filter/action). It might get loaded before
 > a multilingual plugin has properly decided which language to use (the
 > load command loads a particular language).

I'm sorry I didn't explain very well what I'm trying to do. The 
load_plugin_textdomain is called at the beginning of the function that 
outputs the admin page, that is called by options_general.php long after 
the "init" and "plugins_loaded" hooks (as fas as I can tell) and only if 
the user clicks on the menu for it.

That way the translation is only loaded when needed, but I was afraid 
that it may be too late for the .mo file to load properly if the server 
is slow, etc.
From yahgrp at poplarware.com  Fri Oct 19 19:42:28 2007
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Fri Oct 19 20:20:11 2007
Subject: [wp-hackers] Couple of quick questions: restrict access to plugin
	file and loading of l10n
In-Reply-To: <fd3b80510710191213v44b202fdx7aa2ac4a18da6f8@mail.gmail.com>
References: <20071019120044.3E8946755@comox.textdrive.com>	<4718EC1A.9080906@laptoptips.ca>
	<4718F67B.60602@poplarware.com>
	<fd3b80510710191213v44b202fdx7aa2ac4a18da6f8@mail.gmail.com>
Message-ID: <471908A4.2070503@poplarware.com>

Benedict Eastaugh wrote:
> Jennifer, how does that advice ("Never call load_plugin_textdomain in
> the main text of your plugin file") apply to themes? I currently just
> have load_theme_textdomain() called in the functions.php file of my
> theme; is this not best practice, and if not, what is? 

The theme's functions.php file gets loaded after all the plugins are 
loaded and initialized, so it shouldn't be a problem. See
      http://codex.wordpress.org/Query_Overview
if you want to know more about loading order.

     --Jennifer

-- 
Jennifer Hodgdon

Poplar ProductivityWare * www.poplarware.com
Web Databases/Scripts * Modeling/Analysis/Palm OS Software

From ai2097 at users.sourceforge.net  Fri Oct 19 20:57:27 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Fri Oct 19 20:57:37 2007
Subject: [wp-hackers] Couple of quick questions: restrict access to
	plugin file and loading of l10n
In-Reply-To: <4718EC1A.9080906@laptoptips.ca>
References: <20071019120044.3E8946755@comox.textdrive.com>
	<4718EC1A.9080906@laptoptips.ca>
Message-ID: <20071019135727.727610bd@remstate.com>

On Fri, 19 Oct 2007 10:40:42 -0700, Andrew Ozz <admin@laptoptips.ca>
wrote:

> Hi, I need a bit of advice about a plugin I'm working on.
> 
> 1. I've read the discussion about restricting access to a plugin's
> php file from about a month ago and agree that there's no substitute
> for properly escaping and sanitizing user input, POST and GET
> requests, using wp_nonce, etc. But good security is build in layers,
> so I'm thinking to restrict the loading of the plugin's main php file
> like that:
> 
> if( strpos($_SERVER['REQUEST_URI'], 'my-plugin.php') !== false &&
>      strpos($_SERVER['REQUEST_URI'], 'wp-admin') === false )
>      exit('some error message');
>
> (load my-plugin.php only if it's requested by a script from wp-admin 
> directory).
<snip>

Don't overload the word "requested" here; it's confusing. The word
you're looking for is included. ;)

You'd much more likely want to go for a match to something like
get_option('blogurl') . "wp-admin" (with normalization on the URL to
get the trailing slash right, and possibly with anything in or before
the prefix area of  http://{prefix}.example.org/ cut out) if you're
going to insist on URL matching. This prevents things like posts with
wp-admin in the slug from being able to include the code.

Also, I wouldn't recommend doing an exit, except in really controlled
circumstances. Your plugin is included on every page load, and you
don't want to inadvertently cause pages on the main blog to
quit early. A better approach would be to have the main plugin file
simply be a guarded require_once() statement, that will only trigger
when all the checks pass. If you really want to exit, and are convinced
that you'll trigger only on truly intentional attempts at accessing the
code in question, consider using wp_die instead.

IMHO, a check with current_user_can('manage_options') would be
simpler, more restrictive, and more robust than an URL/script name
check.


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From yahgrp at poplarware.com  Fri Oct 19 22:17:55 2007
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Fri Oct 19 22:19:22 2007
Subject: [wp-hackers] Re: Couple of quick questions: restrict access to
	plugin file and loading of l10n
In-Reply-To: <47190924.5030503@laptoptips.ca>
References: <20071019120044.3E8946755@comox.textdrive.com>
	<47190924.5030503@laptoptips.ca>
Message-ID: <47192D13.5040207@poplarware.com>

Andrew Ozz wrote:
> I'm sorry I didn't explain very well what I'm trying to do. The 
> load_plugin_textdomain is called at the beginning of the function that 
> outputs the admin page, that is called by options_general.php long after 
> the "init" and "plugins_loaded" hooks (as fas as I can tell) and only if 
> the user clicks on the menu for it.
> 
> That way the translation is only loaded when needed, but I was afraid 
> that it may be too late for the .mo file to load properly if the server 
> is slow, etc.

PHP runs line by line, and each function/line/command finishes before 
the next one is executed. So as long as you call 
load_plugin_textdomain before you call __ or _e, there is no problem.

Also, the MO file is read from a file system mounted directly on the 
same server that PHP is running on, or at least that would be the norm.

     --Jennifer

-- 
Jennifer Hodgdon

Poplar ProductivityWare * www.poplarware.com
Web Databases/Scripts * Modeling/Analysis/Palm OS Software

From wp-hackers at nj-arp.org  Sat Oct 20 13:29:26 2007
From: wp-hackers at nj-arp.org (Bob)
Date: Sat Oct 20 13:29:45 2007
Subject: [wp-hackers] E-mail address and SQL injection
Message-ID: <000501c8131d$3cffb730$0300a8c0@Toshiba>

WordPress is overly-restrictive on the e-mail addresses that it will accept.
Ticket #4616 proposes that all valid e-mail addresses should be accepted.
I'm concerned that one form of e-mail addresses may be a security problem.

Specifically, the following is a valid e-mail address:

  "Put anything you want here"@example.com

The quoted string before the @ can contain any characters, including spaces
and other characters not otherwise accepted in an e-mail address.  My
concern is that SQL commands could be placed in the string to perform an SQL
injection attack.

Does anyone know if this is a possibility?  As part of #4616, I'm tempted to
prohibit the above form of e-mail addresses unless someone knows for certain
that it's safe.  (Note that those addresses are currently rejected.)

Bob

From computerguru at neosmart.net  Sat Oct 20 15:13:53 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sat Oct 20 15:14:08 2007
Subject: [wp-hackers] E-mail address and SQL injection
In-Reply-To: <000501c8131d$3cffb730$0300a8c0@Toshiba>
References: <000501c8131d$3cffb730$0300a8c0@Toshiba>
Message-ID: <000c01c8132b$d86924f0$893b6ed0$@net>

It shouldn't be a problem in the current code which escapes all content before accessing the DB.

However, the whole point of that field is for a valid email address - so regardless of security implications or not, something that can't possibly be an email address shouldn't be accepted in the first place, IMHO.... 

That's what the regex proposed in that ticket <http://iamcal.com/publish/articles/php/parsing_email/> is for.

Computer Guru
NeoSmart Technologies
http://neosmart.net/

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of Bob
> Sent: Saturday, October 20, 2007 4:29 PM
> To: wp-hackers
> Subject: [wp-hackers] E-mail address and SQL injection
> 
> WordPress is overly-restrictive on the e-mail addresses that it will
> accept.
> Ticket #4616 proposes that all valid e-mail addresses should be
> accepted.
> I'm concerned that one form of e-mail addresses may be a security
> problem.
> 
> Specifically, the following is a valid e-mail address:
> 
>   "Put anything you want here"@example.com
> 
> The quoted string before the @ can contain any characters, including
> spaces
> and other characters not otherwise accepted in an e-mail address.  My
> concern is that SQL commands could be placed in the string to perform
> an SQL
> injection attack.
> 
> Does anyone know if this is a possibility?  As part of #4616, I'm
> tempted to
> prohibit the above form of e-mail addresses unless someone knows for
> certain
> that it's safe.  (Note that those addresses are currently rejected.)
> 
> Bob
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp-hackers at nj-arp.org  Sat Oct 20 15:20:17 2007
From: wp-hackers at nj-arp.org (Bob)
Date: Sat Oct 20 15:20:31 2007
Subject: [wp-hackers] E-mail address and SQL injection
References: <000501c8131d$3cffb730$0300a8c0@Toshiba>
	<000c01c8132b$d86924f0$893b6ed0$@net>
Message-ID: <000701c8132c$b8ff3180$0300a8c0@Toshiba>

No, I think you misunderstood my post.  The following IS a VALID e-mail 
address and will be accepted by the referenced e-mail validation:

  "Some bad SQL code here"@example.com

If we allow the above VALID e-mail address, is it possible to include 
malicious SQL code?  I don't know enough about SQL to know if escaping all 
content before accessing the DB will work in this case.

Bob


----- Original Message ----- 
From: "Computer Guru" <computerguru@neosmart.net>
To: <wp-hackers@lists.automattic.com>
Sent: Saturday, October 20, 2007 11:13 AM
Subject: RE: [wp-hackers] E-mail address and SQL injection


It shouldn't be a problem in the current code which escapes all content 
before accessing the DB.

However, the whole point of that field is for a valid email address - so 
regardless of security implications or not, something that can't possibly be 
an email address shouldn't be accepted in the first place, IMHO....

That's what the regex proposed in that ticket 
<http://iamcal.com/publish/articles/php/parsing_email/> is for.

Computer Guru
NeoSmart Technologies
http://neosmart.net/

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of Bob
> Sent: Saturday, October 20, 2007 4:29 PM
> To: wp-hackers
> Subject: [wp-hackers] E-mail address and SQL injection
>
> WordPress is overly-restrictive on the e-mail addresses that it will
> accept.
> Ticket #4616 proposes that all valid e-mail addresses should be
> accepted.
> I'm concerned that one form of e-mail addresses may be a security
> problem.
>
> Specifically, the following is a valid e-mail address:
>
>   "Put anything you want here"@example.com
>
> The quoted string before the @ can contain any characters, including
> spaces
> and other characters not otherwise accepted in an e-mail address.  My
> concern is that SQL commands could be placed in the string to perform
> an SQL
> injection attack.
>
> Does anyone know if this is a possibility?  As part of #4616, I'm
> tempted to
> prohibit the above form of e-mail addresses unless someone knows for
> certain
> that it's safe.  (Note that those addresses are currently rejected.)
>
> Bob
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers 

From computerguru at neosmart.net  Sat Oct 20 15:30:03 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sat Oct 20 15:30:25 2007
Subject: [wp-hackers] E-mail address and SQL injection
In-Reply-To: <000701c8132c$b8ff3180$0300a8c0@Toshiba>
References: <000501c8131d$3cffb730$0300a8c0@Toshiba>	<000c01c8132b$d86924f0$893b6ed0$@net>
	<000701c8132c$b8ff3180$0300a8c0@Toshiba>
Message-ID: <000d01c8132e$1d21b1f0$576515d0$@net>

It should still work :)
It'll be just another nasty being POST'd to some location and prep'd for db storage.

Computer Guru
NeoSmart Technologies
http://neosmart.net/


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of Bob
> Sent: Saturday, October 20, 2007 6:20 PM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] E-mail address and SQL injection
> 
> No, I think you misunderstood my post.  The following IS a VALID e-mail
> address and will be accepted by the referenced e-mail validation:
> 
>   "Some bad SQL code here"@example.com
> 
> If we allow the above VALID e-mail address, is it possible to include
> malicious SQL code?  I don't know enough about SQL to know if escaping
> all
> content before accessing the DB will work in this case.
> 
> Bob
> 
> 
> ----- Original Message -----
> From: "Computer Guru" <computerguru@neosmart.net>
> To: <wp-hackers@lists.automattic.com>
> Sent: Saturday, October 20, 2007 11:13 AM
> Subject: RE: [wp-hackers] E-mail address and SQL injection
> 
> 
> It shouldn't be a problem in the current code which escapes all content
> before accessing the DB.
> 
> However, the whole point of that field is for a valid email address -
> so
> regardless of security implications or not, something that can't
> possibly be
> an email address shouldn't be accepted in the first place, IMHO....
> 
> That's what the regex proposed in that ticket
> <http://iamcal.com/publish/articles/php/parsing_email/> is for.
> 
> Computer Guru
> NeoSmart Technologies
> http://neosmart.net/
> 
> > -----Original Message-----
> > From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> > bounces@lists.automattic.com] On Behalf Of Bob
> > Sent: Saturday, October 20, 2007 4:29 PM
> > To: wp-hackers
> > Subject: [wp-hackers] E-mail address and SQL injection
> >
> > WordPress is overly-restrictive on the e-mail addresses that it will
> > accept.
> > Ticket #4616 proposes that all valid e-mail addresses should be
> > accepted.
> > I'm concerned that one form of e-mail addresses may be a security
> > problem.
> >
> > Specifically, the following is a valid e-mail address:
> >
> >   "Put anything you want here"@example.com
> >
> > The quoted string before the @ can contain any characters, including
> > spaces
> > and other characters not otherwise accepted in an e-mail address.  My
> > concern is that SQL commands could be placed in the string to perform
> > an SQL
> > injection attack.
> >
> > Does anyone know if this is a possibility?  As part of #4616, I'm
> > tempted to
> > prohibit the above form of e-mail addresses unless someone knows for
> > certain
> > that it's safe.  (Note that those addresses are currently rejected.)
> >
> > Bob
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp-hackers at nj-arp.org  Sat Oct 20 15:42:01 2007
From: wp-hackers at nj-arp.org (Bob)
Date: Sat Oct 20 15:42:15 2007
Subject: [wp-hackers] E-mail address and SQL injection
References: <000501c8131d$3cffb730$0300a8c0@Toshiba>
	<000c01c8132b$d86924f0$893b6ed0$@net><000701c8132c$b8ff3180$0300a8c0@Toshiba>
	<000d01c8132e$1d21b1f0$576515d0$@net>
Message-ID: <000d01c8132f$c282ecd0$0300a8c0@Toshiba>

wp-mail.php takes the From address in the e-mail headers and does the 
following:

$wpdb->get_row("SELECT ID FROM $wpdb->users WHERE user_email='$author' LIMIT 
1");

So this will be safe no matter what $author contains?

Sorry if the answer should be obvious, as I said, I'm not an SQL weenie.

Bob


----- Original Message ----- 
From: "Computer Guru" <computerguru@neosmart.net>
To: <wp-hackers@lists.automattic.com>
Sent: Saturday, October 20, 2007 11:30 AM
Subject: RE: [wp-hackers] E-mail address and SQL injection


It should still work :)
It'll be just another nasty being POST'd to some location and prep'd for db 
storage.

Computer Guru
NeoSmart Technologies
http://neosmart.net/


> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> bounces@lists.automattic.com] On Behalf Of Bob
> Sent: Saturday, October 20, 2007 6:20 PM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] E-mail address and SQL injection
>
> No, I think you misunderstood my post.  The following IS a VALID e-mail
> address and will be accepted by the referenced e-mail validation:
>
>   "Some bad SQL code here"@example.com
>
> If we allow the above VALID e-mail address, is it possible to include
> malicious SQL code?  I don't know enough about SQL to know if escaping
> all
> content before accessing the DB will work in this case.
>
> Bob
>
>
> ----- Original Message -----
> From: "Computer Guru" <computerguru@neosmart.net>
> To: <wp-hackers@lists.automattic.com>
> Sent: Saturday, October 20, 2007 11:13 AM
> Subject: RE: [wp-hackers] E-mail address and SQL injection
>
>
> It shouldn't be a problem in the current code which escapes all content
> before accessing the DB.
>
> However, the whole point of that field is for a valid email address -
> so
> regardless of security implications or not, something that can't
> possibly be
> an email address shouldn't be accepted in the first place, IMHO....
>
> That's what the regex proposed in that ticket
> <http://iamcal.com/publish/articles/php/parsing_email/> is for.
>
> Computer Guru
> NeoSmart Technologies
> http://neosmart.net/
>
> > -----Original Message-----
> > From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> > bounces@lists.automattic.com] On Behalf Of Bob
> > Sent: Saturday, October 20, 2007 4:29 PM
> > To: wp-hackers
> > Subject: [wp-hackers] E-mail address and SQL injection
> >
> > WordPress is overly-restrictive on the e-mail addresses that it will
> > accept.
> > Ticket #4616 proposes that all valid e-mail addresses should be
> > accepted.
> > I'm concerned that one form of e-mail addresses may be a security
> > problem.
> >
> > Specifically, the following is a valid e-mail address:
> >
> >   "Put anything you want here"@example.com
> >
> > The quoted string before the @ can contain any characters, including
> > spaces
> > and other characters not otherwise accepted in an e-mail address.  My
> > concern is that SQL commands could be placed in the string to perform
> > an SQL
> > injection attack.
> >
> > Does anyone know if this is a possibility?  As part of #4616, I'm
> > tempted to
> > prohibit the above form of e-mail addresses unless someone knows for
> > certain
> > that it's safe.  (Note that those addresses are currently rejected.)
> >
> > Bob
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers 

From flurischt at gmail.com  Sat Oct 20 16:31:32 2007
From: flurischt at gmail.com (Rindisbacher Flurin)
Date: Sat Oct 20 16:31:39 2007
Subject: [wp-hackers] E-mail address and SQL injection
In-Reply-To: <000d01c8132f$c282ecd0$0300a8c0@Toshiba>
References: <000501c8131d$3cffb730$0300a8c0@Toshiba>
	<000c01c8132b$d86924f0$893b6ed0$@net>
	<000701c8132c$b8ff3180$0300a8c0@Toshiba>
	<000d01c8132e$1d21b1f0$576515d0$@net>
	<000d01c8132f$c282ecd0$0300a8c0@Toshiba>
Message-ID: <f5422b30710200931uadfa075j575a7da7a0431940@mail.gmail.com>

On 10/20/07, Bob <wp-hackers@nj-arp.org> wrote:
>
> wp-mail.php takes the From address in the e-mail headers and does the
> following:
>
> $wpdb->get_row("SELECT ID FROM $wpdb->users WHERE user_email='$author'
> LIMIT
> 1");
>
> So this will be safe no matter what $author contains?


This will be safe because in the line above $author is escaped.
($wpdb->escape())

Example:

$author = " '; BAD SQL CODE; --";
after escape() the ' will be \' and so on.

Flurin

Sorry if the answer should be obvious, as I said, I'm not an SQL weenie.
>
> Bob
>
>
> ----- Original Message -----
> From: "Computer Guru" <computerguru@neosmart.net>
> To: <wp-hackers@lists.automattic.com>
> Sent: Saturday, October 20, 2007 11:30 AM
> Subject: RE: [wp-hackers] E-mail address and SQL injection
>
>
> It should still work :)
> It'll be just another nasty being POST'd to some location and prep'd for
> db
> storage.
>
> Computer Guru
> NeoSmart Technologies
> http://neosmart.net/
>
>
> > -----Original Message-----
> > From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> > bounces@lists.automattic.com] On Behalf Of Bob
> > Sent: Saturday, October 20, 2007 6:20 PM
> > To: wp-hackers@lists.automattic.com
> > Subject: Re: [wp-hackers] E-mail address and SQL injection
> >
> > No, I think you misunderstood my post.  The following IS a VALID e-mail
> > address and will be accepted by the referenced e-mail validation:
> >
> >   "Some bad SQL code here"@example.com
> >
> > If we allow the above VALID e-mail address, is it possible to include
> > malicious SQL code?  I don't know enough about SQL to know if escaping
> > all
> > content before accessing the DB will work in this case.
> >
> > Bob
> >
> >
> > ----- Original Message -----
> > From: "Computer Guru" <computerguru@neosmart.net>
> > To: <wp-hackers@lists.automattic.com>
> > Sent: Saturday, October 20, 2007 11:13 AM
> > Subject: RE: [wp-hackers] E-mail address and SQL injection
> >
> >
> > It shouldn't be a problem in the current code which escapes all content
> > before accessing the DB.
> >
> > However, the whole point of that field is for a valid email address -
> > so
> > regardless of security implications or not, something that can't
> > possibly be
> > an email address shouldn't be accepted in the first place, IMHO....
> >
> > That's what the regex proposed in that ticket
> > <http://iamcal.com/publish/articles/php/parsing_email/> is for.
> >
> > Computer Guru
> > NeoSmart Technologies
> > http://neosmart.net/
> >
> > > -----Original Message-----
> > > From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> > > bounces@lists.automattic.com] On Behalf Of Bob
> > > Sent: Saturday, October 20, 2007 4:29 PM
> > > To: wp-hackers
> > > Subject: [wp-hackers] E-mail address and SQL injection
> > >
> > > WordPress is overly-restrictive on the e-mail addresses that it will
> > > accept.
> > > Ticket #4616 proposes that all valid e-mail addresses should be
> > > accepted.
> > > I'm concerned that one form of e-mail addresses may be a security
> > > problem.
> > >
> > > Specifically, the following is a valid e-mail address:
> > >
> > >   "Put anything you want here"@example.com
> > >
> > > The quoted string before the @ can contain any characters, including
> > > spaces
> > > and other characters not otherwise accepted in an e-mail address.  My
> > > concern is that SQL commands could be placed in the string to perform
> > > an SQL
> > > injection attack.
> > >
> > > Does anyone know if this is a possibility?  As part of #4616, I'm
> > > tempted to
> > > prohibit the above form of e-mail addresses unless someone knows for
> > > certain
> > > that it's safe.  (Note that those addresses are currently rejected.)
> > >
> > > Bob
> > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wp-hackers at nj-arp.org  Sat Oct 20 20:32:11 2007
From: wp-hackers at nj-arp.org (Bob)
Date: Sat Oct 20 20:32:26 2007
Subject: [wp-hackers] Moving tickets/patches forward
References: <001001c81056$6004ac50$0300a8c0@Toshiba><70ebb7140710171725n6f863a8eg2fa032177e16999@mail.gmail.com><4716CEF2.5080303@callum-macdonald.com>
	<c8f37c930710172236ge21ed11i4387613b6f1c542a@mail.gmail.com>
Message-ID: <000501c81358$4b8caf20$0300a8c0@Toshiba>

Ryan,

#5169 is all done and ready to be committed.  Can it go into 2.3.1?

Bob


----- Original Message ----- 
From: "Ryan Boren" <ryan@boren.nu>
To: <wp-hackers@lists.automattic.com>
Sent: Thursday, October 18, 2007 1:36 AM
Subject: Re: [wp-hackers] Moving tickets/patches forward


> On 10/17/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com> 
> wrote:
>> I think this raises an interesting point. Is there actually a process
>> for making contributions or decisions in WordPress? Or is it just what
>> the core devs do, when they do it?
>>
>> I realise there's a great deal of discussion on the list, and that's
>> great. I know that I've personally noticed westi replying to lots of
>> stuff and accepting patches. Is that it, is that the process?
>>
>> http://codex.wordpress.org/Core_Patch_Submission
>> This page is currently blank. It would be nice if there was something
>> here explaining how patches should be submitted.
>
> http://codex.wordpress.org/Submitting_Bugs covers some of this.  Not
> sure what's with the Core Patch Submission page.
>
> Patch commits tend to happen in cycles.  Right now we've been getting
> 2.3.1 ready and doing some architectural stuff to 2.4.  Small bugs
> milestoned for 2.4 are kinda on the back burner.  In the case of
> #5169, it's a bug in the somewhat orphaned and neglected wp-mail and
> involves email related regular expressions, which are a pain. For an
> example of what a pain it is to handle all cases for an email address:
>
> http://trac.wordpress.org/attachment/ticket/4616/4616b.diff
>
> Such bugs tend to get shuffled to the back of development priorities.
> But, the thing to do if you care about a bug that isn't getting
> traction is just what's been done here.  Add a note to trac and bring
> it up on this list to see if anyone wants to take up the cause.
>
> Anyhow, I added some notes to the ticket.
>
> Ryan
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

From ryan at boren.nu  Sun Oct 21 06:19:58 2007
From: ryan at boren.nu (Ryan Boren)
Date: Sun Oct 21 06:20:05 2007
Subject: [wp-hackers] Moving tickets/patches forward
In-Reply-To: <000501c81358$4b8caf20$0300a8c0@Toshiba>
References: <001001c81056$6004ac50$0300a8c0@Toshiba>
	<70ebb7140710171725n6f863a8eg2fa032177e16999@mail.gmail.com>
	<4716CEF2.5080303@callum-macdonald.com>
	<c8f37c930710172236ge21ed11i4387613b6f1c542a@mail.gmail.com>
	<000501c81358$4b8caf20$0300a8c0@Toshiba>
Message-ID: <c8f37c930710202319w2569be7arf21b03ec57c5c237@mail.gmail.com>

On 10/20/07, Bob <wp-hackers@nj-arp.org> wrote:
> Ryan,
>
> #5169 is all done and ready to be committed.  Can it go into 2.3.1?

Done.
From r at robm.me.uk  Sun Oct 21 06:37:51 2007
From: r at robm.me.uk (Rob Miller)
Date: Sun Oct 21 06:39:50 2007
Subject: [wp-hackers] E-mail address and SQL injection
In-Reply-To: <000701c8132c$b8ff3180$0300a8c0@Toshiba>
References: <000501c8131d$3cffb730$0300a8c0@Toshiba>	<000c01c8132b$d86924f0$893b6ed0$@net>
	<000701c8132c$b8ff3180$0300a8c0@Toshiba>
Message-ID: <471AF3BF.2010905@robm.me.uk>

Bob wrote:
> No, I think you misunderstood my post.  The following IS a VALID 
> e-mail address and will be accepted by the referenced e-mail validation:
>
>  "Some bad SQL code here"@example.com
>
> If we allow the above VALID e-mail address, is it possible to include 
> malicious SQL code?  I don't know enough about SQL to know if escaping 
> all content before accessing the DB will work in this case.
>
> Bob
>

Nope, it's fine. It's the same as posts; you can use all manner of 
special characters and SQL statements in a post, but because the content 
is escaped before being used in a DB query there's no way they'll affect 
anything.

-- 
Rob Miller
http://robm.me.uk/

From wordpress at santosj.name  Sun Oct 21 07:36:13 2007
From: wordpress at santosj.name (Jacob)
Date: Sun Oct 21 07:36:50 2007
Subject: [wp-hackers] Plugins 'all' tag discussion
Message-ID: <471B016D.8050306@santosj.name>

 From php.net http://www.php.net/array_merge:

"If, however, the arrays contain numeric keys, the later value will 
*not* overwrite the original value, but will be appended.

If only one array is given and the array is numerically indexed, the 
keys get reindexed in a continuous way."

This translate to: If you use array_merge to merge two arrays the result 
will be reindexed. The documentation is wrong, it doesn't matter how 
many arrays you give, they will all still be reindexed. I found this out 
while writing unit tests for plugin.php and trying to remove the hook 
afterwards.

Resulting in the lost of hook priorities. See 
http://trac.wordpress.org/ticket/4715. The fix this is to use '+' to add 
the two arrays. This has been confirmed to be the fix (by my unit test) 
and has been confirmed to be broken in by two separate parties (my unit 
test and Automattic unit tests).

If the 'all' tag is to be of any use, it will need to be first *fixed* 
and then extended for the other enhancements.

http://trac.wordpress.org/ticket/5231
http://trac.wordpress.org/ticket/5232

I've been thinking about the solution to 5231 and there isn't really a 
good one unless you create two globals, one for filters and one for 
actions. Which isn't a good solution, but one that would require the 
least amount of resistance.

Fixing 5232 solution is already available and I would suggest a 
combination of the two proposed "patches."

Any more thoughts on how to go about correcting this misbehavior?

Jacob Santos

From wordpress at santosj.name  Sun Oct 21 08:08:06 2007
From: wordpress at santosj.name (Jacob)
Date: Sun Oct 21 08:08:49 2007
Subject: [wp-hackers] May the discussion on phpdoc never happen again
Message-ID: <471B08E6.3010101@santosj.name>

Probably would have been nice to have known about 
<http://codex.wordpress.org/Inline_Documentation>, so I could have 
pulled my head out of my ass. 
<http://comox.textdrive.com/pipermail/wp-hackers/2006-February/004921.html> 
and again a few months later. Who knows how many times before 
<http://comox.textdrive.com/pipermail/wp-hackers/2007-October/015584.html>. 
(Props to Ozh and 
<http://comox.textdrive.com/pipermail/wp-hackers/2007-October/015655.html>, 
totally kick ass!).

An aside @deprecated should be (WP Version) and not description as such 
noted. I do not think that it would make since to tell the person that 
the function is deprecated, just when it was. The discussion has already 
passed at that point.

If at the very least, if every function has placeholders, people will 
realize that the discussion has already taken place and then instead of 
having discussions on adding phpdoc comments, the discussion could be 
what the descriptions for functions should be. I wonder if there are any 
objections to this?

/**
 * function_name() - {@internal Missing Short Description}}
 *
 * {@internal Missing Long Description}}
 *
 * @package WordPress
 * @since (WordPress Version)
 */

Add to every WordPress function not already documented. At the very 
least all parameters and return values, along with @since information 
will be added. I've been doing this for most of the functions I don't 
have time for. I find I can spend hours just on 10 to 20 functions and I 
"feel" better if at the very least the parameters and return information 
is added.

http://trac.wordpress.org/ticket/5211 - documents internal WordPress 
functions in wp-settings.php, as well as globals in that file and in 
vars.php and version.php. Any objections to these patches?

I think it is important to also document globals so that plugin and 
hackers don't unintentionally step on others toes and will know what 
globals are available and what purpose they serve and can serve in their 
code.

http://trac.wordpress.org/ticket/5233 - I know this is Matt's baby, but 
I really do think that *every* function means *every* function. The long 
description sucks and it is my only objections. I'm rewriting it to a 
less sucky version... that will still pretty much suck. Not much you can 
write about a function that just pulls in whether not your WordPress 
version is up to date. "Yeah, this function does, oh wait, yeah you 
already know from reading the code. Oops." Anyone not know what 
fsockopen() does? I think I did add an aside that the function would not 
work in some situations. It isn't like any plugins can use the function 
directly.

I'm in the process of completing widgets.php and will create a ticket 
after I've done so. I've yet to look at the rest of the other tickets 
for documentation that exists but current won't commit. However, I'll be 
more incline to submit partial documentation patches that has the above 
phpdoc for most of the files, until which time I find time to go back 
and document the ones that need it. Some functions are so easy that it 
is worth the time to document them right then. However, I think many in 
functions.php can't be said the same about.

It is more or less, I'll feel better about submitting the patches, 
instead of waiting several weeks before I'm able to complete said 
documentation. I think it would be better to have at least some 
documentation than none.

Jacob Santos
From cpoteet at siolon.com  Sun Oct 21 18:09:19 2007
From: cpoteet at siolon.com (Chris Poteet)
Date: Sun Oct 21 18:09:26 2007
Subject: [wp-hackers] Termination of Categories
Message-ID: <1192990159.413925.282770@k35g2000prh.googlegroups.com>

With the advent of tags and the new schema is there a plan to get rid
of the category structure?  It seems to be redundant with the superior
tagging system.

From speedboxer at gmail.com  Sun Oct 21 18:50:07 2007
From: speedboxer at gmail.com (Matt)
Date: Sun Oct 21 18:50:13 2007
Subject: [wp-hackers] May the discussion on phpdoc never happen again
In-Reply-To: <471B08E6.3010101@santosj.name>
References: <471B08E6.3010101@santosj.name>
Message-ID: <b88434820710211150s53c02a46i237f443d348dda52@mail.gmail.com>

On 10/21/07, Jacob <wordpress@santosj.name> wrote:
>
> An aside @deprecated should be (WP Version) and not description as such
> noted. I do not think that it would make since to tell the person that
> the function is deprecated, just when it was. The discussion has already
> passed at that point.
>

Maybe we should put the function you should use instead of the deprecated
one. Like @deprecated 2.1 - use blah_blah_blah(). I know this won't work for
all the deprecated functions, but it will for some of them.

-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From speedboxer at gmail.com  Sun Oct 21 18:51:11 2007
From: speedboxer at gmail.com (Matt)
Date: Sun Oct 21 18:51:16 2007
Subject: [wp-hackers] Termination of Categories
In-Reply-To: <1192990159.413925.282770@k35g2000prh.googlegroups.com>
References: <1192990159.413925.282770@k35g2000prh.googlegroups.com>
Message-ID: <b88434820710211151n4ee5a8e2q87454b65cc273c24@mail.gmail.com>

On 10/21/07, Chris Poteet <cpoteet@siolon.com> wrote:
>
> With the advent of tags and the new schema is there a plan to get rid
> of the category structure?  It seems to be redundant with the superior
> tagging system.
>

Tags and Categories are two completely different things, so I doubt it.

-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From zamoose at gmail.com  Sun Oct 21 19:11:25 2007
From: zamoose at gmail.com (Doug Stewart)
Date: Sun Oct 21 19:11:33 2007
Subject: [wp-hackers] WPhone Admin plugin 1.3.1,
	aka "iPhone Contest Final Version"
Message-ID: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>

Hey all,
Just a quick note to inform you of the final (pending any catastrophic
bug reports) release of WPhone before the contest deadline (tomorrow).

We're really psyched about this release, as it adds a lot to the work
we've put into the past few versions.

What's new? From the release notes:

* Latest Activity: added a new section to the dashboard to replicate
the WP's Latest Activity features, but without requiring JS as WP does
(incoming links).

* Quicklinks: Added quick links to the main features directly from the
hide/show "Go..." panel for easier global navigation.

* User search: Added a search form/feature to and tweaked the output
of the search listing screen.

* Added display preferences select list in the appropriate
user/profile edit forms.

* Styles and xhtml improvements for both the rich and lite interfaces.

* Further improved output compression scheme for faster download and
processing performance.

* Bug fixes, thanks to loads of wonderful feedback we had from the
WordPress users community.

* Improved on the already pretty good WP backward compatibility front.

* Code: Improved adherence to WP's coding standards, added function
documentation (phpdocs), more hooks, etc.

* And more (see svn log if interested).

Download and test away, particularly if you're lucky enough to have a
mobile Apple device.

Thanks!

-- 
-Doug

http://literalbarrage.org/blog/
From wordpress at santosj.name  Sun Oct 21 19:39:09 2007
From: wordpress at santosj.name (Jacob)
Date: Sun Oct 21 19:39:47 2007
Subject: [wp-hackers] May the discussion on phpdoc never happen again
In-Reply-To: <b88434820710211150s53c02a46i237f443d348dda52@mail.gmail.com>
References: <471B08E6.3010101@santosj.name>
	<b88434820710211150s53c02a46i237f443d348dda52@mail.gmail.com>
Message-ID: <471BAADD.3010703@santosj.name>

Matt wrote:
> On 10/21/07, Jacob <wordpress@santosj.name> wrote:
>   
>> An aside @deprecated should be (WP Version) and not description as such
>> noted. I do not think that it would make since to tell the person that
>> the function is deprecated, just when it was. The discussion has already
>> passed at that point.
>>
>>     
>
> Maybe we should put the function you should use instead of the deprecated
> one. Like @deprecated 2.1 - use blah_blah_blah(). I know this won't work for
> all the deprecated functions, but it will for some of them.
>
>   
Well, for one, it was easy since the one you should be using was being 
used by the deprecated function. Actually, the deprecated reference is a 
global, which is to say that I wrote that you shouldn't be using it and 
what you should be using instead.

-- 

Jacob Santos

http://www.santosj.name - blog
http://wordpress.svn.dragonu.net/unittest/ - unofficial WP unit test suite.

From robin.adr at gmail.com  Sun Oct 21 19:48:02 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Sun Oct 21 19:48:08 2007
Subject: [wp-hackers] Termination of Categories
In-Reply-To: <1192990159.413925.282770@k35g2000prh.googlegroups.com>
References: <1192990159.413925.282770@k35g2000prh.googlegroups.com>
Message-ID: <d135ca9c0710211248t703ec0bbyc4344cc404eaa777@mail.gmail.com>

IIRC this was brought up when tags were first being worked on, and the
answer that was reached was a flat no. Both serve different purposes, and
some people use one or both, it's up to them. Personally I think getting rid
of categories would be a big mistake.

On 10/21/07, Chris Poteet <cpoteet@siolon.com> wrote:
>
> With the advent of tags and the new schema is there a plan to get rid
> of the category structure?  It seems to be redundant with the superior
> tagging system.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wordpress at tekartist.org  Sun Oct 21 20:12:51 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Sun Oct 21 20:12:59 2007
Subject: [wp-hackers] Termination of Categories
In-Reply-To: <d135ca9c0710211248t703ec0bbyc4344cc404eaa777@mail.gmail.com>
References: <1192990159.413925.282770@k35g2000prh.googlegroups.com>
	<d135ca9c0710211248t703ec0bbyc4344cc404eaa777@mail.gmail.com>
Message-ID: <A7250354-DB98-42CF-8159-EA6E4697223D@tekartist.org>


Couldn't agree more.
The fact that some have used categories as tags since the latter has  
taken root does not make the categories obsolete.

S.

On Oct 21, 2007, at 15:48, Robin Adrianse wrote:

> IIRC this was brought up when tags were first being worked on, and the
> answer that was reached was a flat no. Both serve different  
> purposes, and
> some people use one or both, it's up to them. Personally I think  
> getting rid
> of categories would be a big mistake.
>
> On 10/21/07, Chris Poteet <cpoteet@siolon.com> wrote:
>>
>> With the advent of tags and the new schema is there a plan to get rid
>> of the category structure?  It seems to be redundant with the  
>> superior
>> tagging system.
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From jared at pacific22.com  Mon Oct 22 04:21:01 2007
From: jared at pacific22.com (Jared Bangs)
Date: Mon Oct 22 04:21:14 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <471556BD.60606@callum-macdonald.com>
References: <470913C6.2090502@callum-macdonald.com>
	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>
	<20071009124253.741212cc@remstate.com>
	<4F3ECB91-31D2-42FA-BFD1-F6ED14258412@turbonet.com>
	<471556BD.60606@callum-macdonald.com>
Message-ID: <7b4922320710212121s4f7dcfe4kebf85a8eff260aa1@mail.gmail.com>

On 10/16/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
wrote:
>
> Did anything ever come of this suggestion? I don't remember seeing any
> opposition to it and I saw several people supporting it.
>
> Is there a process which needs to be followed to get this done or do we
> just need to pester Matt?


I think the general consensus might be that it works fine as is.

If that's not the case, then I'd say (as you suggest) that the first step is
determining if this part of code is open for discussion, and if so, what
that process should be.

If we are considering possible changes, I'd throw in the suggestion for
allowing (or actually requiring) the readme screenshot images to be named
references to files, rather than files named according to the current
convention.

Then you could allow these file references to have an attribute indicating
whether the packager should include it in the zip of not.
From drgath at gmail.com  Mon Oct 22 04:48:51 2007
From: drgath at gmail.com (Derek Gathright)
Date: Mon Oct 22 04:49:02 2007
Subject: [wp-hackers] Termination of Categories
In-Reply-To: <A7250354-DB98-42CF-8159-EA6E4697223D@tekartist.org>
References: <1192990159.413925.282770@k35g2000prh.googlegroups.com>
	<d135ca9c0710211248t703ec0bbyc4344cc404eaa777@mail.gmail.com>
	<A7250354-DB98-42CF-8159-EA6E4697223D@tekartist.org>
Message-ID: <132fcd4d0710212148v2a5565f0y406f88373a6aaa0e@mail.gmail.com>

I struggled initially in figuring out how to effectively use tags &
categories when tagging first became natively supported, but after reading
some blogs about the issue, it became more clear.  Here is a good one
http://lorelle.wordpress.com/2006/03/01/tags-are-not-categories-got-it/

Tags & categories are not the same thing and should be used for different
purposes.

On 10/21/07, Stephane Daury <wordpress@tekartist.org> wrote:
>
>
> Couldn't agree more.
> The fact that some have used categories as tags since the latter has
> taken root does not make the categories obsolete.
>
> S.
>
> On Oct 21, 2007, at 15:48, Robin Adrianse wrote:
>
> > IIRC this was brought up when tags were first being worked on, and the
> > answer that was reached was a flat no. Both serve different
> > purposes, and
> > some people use one or both, it's up to them. Personally I think
> > getting rid
> > of categories would be a big mistake.
> >
> > On 10/21/07, Chris Poteet <cpoteet@siolon.com> wrote:
> >>
> >> With the advent of tags and the new schema is there a plan to get rid
> >> of the category structure?  It seems to be redundant with the
> >> superior
> >> tagging system.
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jared at pacific22.com  Mon Oct 22 06:01:06 2007
From: jared at pacific22.com (Jared Bangs)
Date: Mon Oct 22 06:01:11 2007
Subject: [wp-hackers] WPhone Admin plugin 1.3.1,
	aka "iPhone Contest Final Version"
In-Reply-To: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>
References: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>
Message-ID: <7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>

On 10/21/07, Doug Stewart <zamoose@gmail.com> wrote:
> Hey all,
> Just a quick note to inform you of the final (pending any catastrophic
> bug reports) release of WPhone before the contest deadline (tomorrow).
>
> We're really psyched about this release, as it adds a lot to the work
> we've put into the past few versions.

Cool, yours is looking good.

Is anyone else in on this competition, or is it just our two plugins?
I haven't seen anything yet, but who knows...

Anyway, we also just submitted the latest revision for our entry in
the contest: the Mobile Admin plugin [1]

Here's a quick list (for the judges :-) ) of some of the competitive
advantages I feel we've got:

Leverages existing admin pages code, allowing for:
    *  WP features like auto-save to continue to function as normal
    *  Easier upgrade path in the future, as changes to the WP admin
code are less likely to break the plugin
    *  Beneficial changes (or bug fixes) to the WP admin code are
automatically incorporated
    *  While the most common features have custom styling, all admin
functions are still readily available

Compatibility with existing admin plugins without any modifications
(such as SEO, tag suggest, etc. plugins )

Extensibility:
    *  Large library of current (and future) WP admin plugins will
"just work" in the mobile UI, without rewriting or tweaking
    *  Built from the ground up around a plugin architecture.
    *  Object oriented design allows for easy customization and plugin
development while minimizing the amount of code that needs to be
written.
    *  iPhone support itself is a plugin, which can be easily altered
or used as an example for new plugins.

Ability to toggle the "mobile" view on and off, from any browser
(mobile or otherwise) without disabling the plugin or logging in/out,
and without requiring javascript to be enabled

Draws iPhone UI (and any other custom interfaces) without requiring
javascript to be enabled

First!!! (to release, that is) - just a little slashdot comment humor, there :-)

May the best plugin win!

- Jared

[1] http://wordpress.org/extend/plugins/mobileadmin/
From wordpress at tekartist.org  Mon Oct 22 06:28:26 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Mon Oct 22 06:28:47 2007
Subject: [wp-hackers] WPhone Admin plugin 1.3.1,
	aka "iPhone Contest Final Version"
In-Reply-To: <7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
References: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>
	<7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
Message-ID: <6535D39E-77C8-4971-A8AD-AD95B66F152E@tekartist.org>


Competitive advantage and "first out" aside, heads up though Jared: I  
got errors while trying to activate your plugin under the current WP  
trunk (Plugin could not be activated because it triggered a fatal  
error.) and got a WP error while trying to access it from 2.2.x  
(Cannot load MobileAdminNormalUI).

Stephane


On Oct 22, 2007, at 2:01, Jared Bangs wrote:

> On 10/21/07, Doug Stewart <zamoose@gmail.com> wrote:
>> Hey all,
>> Just a quick note to inform you of the final (pending any  
>> catastrophic
>> bug reports) release of WPhone before the contest deadline  
>> (tomorrow).
>>
>> We're really psyched about this release, as it adds a lot to the work
>> we've put into the past few versions.
>
> Cool, yours is looking good.
>
> Is anyone else in on this competition, or is it just our two plugins?
> I haven't seen anything yet, but who knows...
>
> Anyway, we also just submitted the latest revision for our entry in
> the contest: the Mobile Admin plugin [1]
>
> Here's a quick list (for the judges :-) ) of some of the competitive
> advantages I feel we've got:
>
> Leverages existing admin pages code, allowing for:
>     *  WP features like auto-save to continue to function as normal
>     *  Easier upgrade path in the future, as changes to the WP admin
> code are less likely to break the plugin
>     *  Beneficial changes (or bug fixes) to the WP admin code are
> automatically incorporated
>     *  While the most common features have custom styling, all admin
> functions are still readily available
>
> Compatibility with existing admin plugins without any modifications
> (such as SEO, tag suggest, etc. plugins )
>
> Extensibility:
>     *  Large library of current (and future) WP admin plugins will
> "just work" in the mobile UI, without rewriting or tweaking
>     *  Built from the ground up around a plugin architecture.
>     *  Object oriented design allows for easy customization and plugin
> development while minimizing the amount of code that needs to be
> written.
>     *  iPhone support itself is a plugin, which can be easily altered
> or used as an example for new plugins.
>
> Ability to toggle the "mobile" view on and off, from any browser
> (mobile or otherwise) without disabling the plugin or logging in/out,
> and without requiring javascript to be enabled
>
> Draws iPhone UI (and any other custom interfaces) without requiring
> javascript to be enabled
>
> First!!! (to release, that is) - just a little slashdot comment  
> humor, there :-)
>
> May the best plugin win!
>
> - Jared
>
> [1] http://wordpress.org/extend/plugins/mobileadmin/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at santosj.name  Mon Oct 22 06:29:05 2007
From: wordpress at santosj.name (Jacob)
Date: Mon Oct 22 06:29:48 2007
Subject: [wp-hackers] WPhone Admin plugin 1.3.1, aka "iPhone Contest Final
	Version"
In-Reply-To: <7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
References: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>
	<7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
Message-ID: <471C4331.3010805@santosj.name>

Jared Bangs wrote:
> Extensibility:
>     *  Large library of current (and future) WP admin plugins will
> "just work" in the mobile UI, without rewriting or tweaking
>     *  Built from the ground up around a plugin architecture.
>     *  Object oriented design allows for easy customization and plugin
> development while minimizing the amount of code that needs to be
> written.

If more people wrote OO code like yours, then I wouldn't have such a 
long list of people to bury alive in my neighbor's yard. I almost cried. 
Absolutely beautiful.

-- 

Jacob Santos

http://www.santosj.name - blog
http://wordpress.svn.dragonu.net/unittest/ - unofficial WP unit test suite.
Also known as darkdragon and santosj on WP trac (don't ask)

From wordpress at tekartist.org  Mon Oct 22 07:06:51 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Mon Oct 22 07:07:15 2007
Subject: [wp-hackers] WPhone Admin plugin 1.3.1,
	aka "iPhone Contest Final Version"
In-Reply-To: <471C4331.3010805@santosj.name>
References: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>
	<7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
	<471C4331.3010805@santosj.name>
Message-ID: <B21E4E0D-5C6E-442F-B713-3CF8866C8736@tekartist.org>


I think it's when you get in the details of what truly supporting all  
mobile / embedded / accessibility devices really means in practice  
that you start appreciating the approach we took instead.

I'm afraid I'm seeing a lot of http error 413 in your future with  
yours. ;-)
Our runs on my 3 year old pre-RAZR Motorola phone.

S.



On Oct 22, 2007, at 2:29, Jacob wrote:

> Jared Bangs wrote:
>> Extensibility:
>>     *  Large library of current (and future) WP admin plugins will
>> "just work" in the mobile UI, without rewriting or tweaking
>>     *  Built from the ground up around a plugin architecture.
>>     *  Object oriented design allows for easy customization and  
>> plugin
>> development while minimizing the amount of code that needs to be
>> written.
>
> If more people wrote OO code like yours, then I wouldn't have such  
> a long list of people to bury alive in my neighbor's yard. I almost  
> cried. Absolutely beautiful.
> -- 
> Jacob Santos
From viper at viper007bond.com  Mon Oct 22 07:44:06 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Mon Oct 22 07:44:13 2007
Subject: [wp-hackers] WPhone Admin plugin 1.3.1,
	aka "iPhone Contest Final Version"
In-Reply-To: <7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
References: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>
	<7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
Message-ID: <8f93a7390710220044s75cf5399s243cba1071607fb7@mail.gmail.com>

I see you didn't take the time to fully check out our plugin before writing
your post. ;)

On 10/21/07, Jared Bangs <jared@pacific22.com> wrote:
>
> Leverages existing admin pages code, allowing for:
>     *  WP features like auto-save to continue to function as normal


This is true -- ours doesn't currently have autosave (not that it'd be hard
to add, just didn't think of it).

    *  Easier upgrade path in the future, as changes to the WP admin
> code are less likely to break the plugin
>     *  Beneficial changes (or bug fixes) to the WP admin code are
> automatically incorporated


Any upgrade to the core won't affect our plugin really as the regular admin
pages still run and all that. What we did is hooked in early, enabled output
buffering, allowed the regular admin page to run (handle POSTs, fetch data
for use by us, etc.), then flushed the buffer to remove any outputted HTML.
This means that we aren't replicating any code or anything like that.

Then the plugin outputs a lighter, fully gzip'ed version of the admin page
(page, CSS, Javascript, everything) created using the WordPress API
functions. I think you'll really notice the difference on a limited
bandwidth connection, especially on older, slower phones.

    *  While the most common features have custom styling, all admin
> functions are still readily available
>
> Compatibility with existing admin plugins without any modifications
> (such as SEO, tag suggest, etc. plugins )


I wasn't able to check any of that out as I can't get your plugin to
activate for me. It throws a PHP error.

Extensibility:
>     *  Large library of current (and future) WP admin plugins will
> "just work" in the mobile UI, without rewriting or tweaking
>     *  Built from the ground up around a plugin architecture.
>     *  Object oriented design allows for easy customization and plugin
> development while minimizing the amount of code that needs to be
> written.
>     *  iPhone support itself is a plugin, which can be easily altered
> or used as an example for new plugins.


Again, not able to respond, although I will mention that out plugin is 100%
hookable, filterable, and translatable (see example plugin).

Ability to toggle the "mobile" view on and off, from any browser
> (mobile or otherwise) without disabling the plugin or logging in/out,
> and without requiring javascript to be enabled


Same for our plugin (via $_GET), but we opted to provide no UI for this as
it didn't seem to be needed from our perspective, especially with the
limited screen space.

Draws iPhone UI (and any other custom interfaces) without requiring
> javascript to be enabled


We figured that if a phone didn't support JS, it's capabilities were
obviously limited (memory, processor power, etc.) and therefore would be
better off with an imageless and very light version.

First!!! (to release, that is) - just a little slashdot comment humor, there
> :-)


Mmk.

May the best plugin win!


Indeed! I wish you good luck. :)

-- 
Viper007Bond | http://www.viper007bond.com/
From ai2097 at users.sourceforge.net  Mon Oct 22 07:48:13 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Mon Oct 22 07:48:20 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <7b4922320710212121s4f7dcfe4kebf85a8eff260aa1@mail.gmail.com>
References: <470913C6.2090502@callum-macdonald.com>
	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>
	<20071009124253.741212cc@remstate.com>
	<4F3ECB91-31D2-42FA-BFD1-F6ED14258412@turbonet.com>
	<471556BD.60606@callum-macdonald.com>
	<7b4922320710212121s4f7dcfe4kebf85a8eff260aa1@mail.gmail.com>
Message-ID: <20071022004813.6c9f7026@remstate.com>

On Sun, 21 Oct 2007 21:21:01 -0700, "Jared Bangs" <jared@pacific22.com>
wrote:

> On 10/16/07, Callum Macdonald
> <lists.automattic.com@callum-macdonald.com> wrote:
> >
> > Did anything ever come of this suggestion? I don't remember seeing
> > any opposition to it and I saw several people supporting it.
> >
> > Is there a process which needs to be followed to get this done or
> > do we just need to pester Matt?
> 
> 
> I think the general consensus might be that it works fine as is.

Based on...? I've seen only one person settle on "leave it be." It's
not exactly easy to tell the difference between "vocal minority" and
"silent consensus." ;)

> If that's not the case, then I'd say (as you suggest) that the first
> step is determining if this part of code is open for discussion, and
> if so, what that process should be.

Indeed. Who's the maintainer? It's not exactly listed anywhere; I
assume from skimming some trac tickets that we have to go through Matt
or Mike.

> If we are considering possible changes, I'd throw in the suggestion
> for allowing (or actually requiring) the readme screenshot images to
> be named references to files, rather than files named according to
> the current convention.
> 
> Then you could allow these file references to have an attribute
> indicating whether the packager should include it in the zip of not.

Yeah, but my coder's intuition tells me that's getting into a bigger,
more complex change in code, and it also solves a narrower issue.
Indicating a subdirectory provides a lot more leverage over package
contents for the effort. I totally agree that screenshots should be
allowed to have real names (the way it is now is totally lame), but the
inclusion issue can be solved independently, so we don't need to tie
the two solutions together.


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From viper at viper007bond.com  Mon Oct 22 07:48:19 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Mon Oct 22 07:48:31 2007
Subject: [wp-hackers] WPhone Admin plugin 1.3.1,
	aka "iPhone Contest Final Version"
In-Reply-To: <8f93a7390710220044s75cf5399s243cba1071607fb7@mail.gmail.com>
References: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>
	<7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
	<8f93a7390710220044s75cf5399s243cba1071607fb7@mail.gmail.com>
Message-ID: <8f93a7390710220048p71eb5acpdcd236866998c2cb@mail.gmail.com>

Turns out the plugin activates correctly on 2.3, but throws an error on WP
trunk.

On 10/22/07, Viper007Bond <viper@viper007bond.com> wrote:
>
> I see you didn't take the time to fully check out our plugin before
> writing your post. ;)
>
> On 10/21/07, Jared Bangs < jared@pacific22.com> wrote:
> >
> > Leverages existing admin pages code, allowing for:
> >     *  WP features like auto-save to continue to function as normal
>
>
> This is true -- ours doesn't currently have autosave (not that it'd be
> hard to add, just didn't think of it).
>
>     *  Easier upgrade path in the future, as changes to the WP admin
> > code are less likely to break the plugin
> >     *  Beneficial changes (or bug fixes) to the WP admin code are
> > automatically incorporated
>
>
> Any upgrade to the core won't affect our plugin really as the regular
> admin pages still run and all that. What we did is hooked in early, enabled
> output buffering, allowed the regular admin page to run (handle POSTs, fetch
> data for use by us, etc.), then flushed the buffer to remove any outputted
> HTML. This means that we aren't replicating any code or anything like that.
>
> Then the plugin outputs a lighter, fully gzip'ed version of the admin page
> (page, CSS, Javascript, everything) created using the WordPress API
> functions. I think you'll really notice the difference on a limited
> bandwidth connection, especially on older, slower phones.
>
>     *  While the most common features have custom styling, all admin
> > functions are still readily available
> >
> > Compatibility with existing admin plugins without any modifications
> > (such as SEO, tag suggest, etc. plugins )
>
>
> I wasn't able to check any of that out as I can't get your plugin to
> activate for me. It throws a PHP error.
>
> Extensibility:
> >     *  Large library of current (and future) WP admin plugins will
> > "just work" in the mobile UI, without rewriting or tweaking
> >     *  Built from the ground up around a plugin architecture.
> >     *  Object oriented design allows for easy customization and plugin
> > development while minimizing the amount of code that needs to be
> > written.
> >     *  iPhone support itself is a plugin, which can be easily altered
> > or used as an example for new plugins.
>
>
> Again, not able to respond, although I will mention that out plugin is
> 100% hookable, filterable, and translatable (see example plugin).
>
> Ability to toggle the "mobile" view on and off, from any browser
> > (mobile or otherwise) without disabling the plugin or logging in/out,
> > and without requiring javascript to be enabled
>
>
> Same for our plugin (via $_GET), but we opted to provide no UI for this as
> it didn't seem to be needed from our perspective, especially with the
> limited screen space.
>
> Draws iPhone UI (and any other custom interfaces) without requiring
> > javascript to be enabled
>
>
> We figured that if a phone didn't support JS, it's capabilities were
> obviously limited (memory, processor power, etc.) and therefore would be
> better off with an imageless and very light version.
>
> First!!! (to release, that is) - just a little slashdot comment humor,
> > there :-)
>
>
> Mmk.
>
> May the best plugin win!
>
>
> Indeed! I wish you good luck. :)
>
> --
> Viper007Bond | http://www.viper007bond.com/




-- 
Viper007Bond | http://www.viper007bond.com/
From viper at viper007bond.com  Mon Oct 22 07:51:52 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Mon Oct 22 07:51:59 2007
Subject: [wp-hackers] Plugin zip problem on wordpress.org
In-Reply-To: <20071022004813.6c9f7026@remstate.com>
References: <470913C6.2090502@callum-macdonald.com>
	<70ebb7140710091158u4f03995cwef5b3b0116fe3e9e@mail.gmail.com>
	<20071009124253.741212cc@remstate.com>
	<4F3ECB91-31D2-42FA-BFD1-F6ED14258412@turbonet.com>
	<471556BD.60606@callum-macdonald.com>
	<7b4922320710212121s4f7dcfe4kebf85a8eff260aa1@mail.gmail.com>
	<20071022004813.6c9f7026@remstate.com>
Message-ID: <8f93a7390710220051p13b859e8h6ee3d8c09c82cb02@mail.gmail.com>

I think most people are probably just fine with how it is, but not opposed
to the previously suggested suggestion (but not really in favor of it
either). Or at least that's how I feel.

On 10/22/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
>
> On Sun, 21 Oct 2007 21:21:01 -0700, "Jared Bangs" <jared@pacific22.com>
> wrote:
>
> > On 10/16/07, Callum Macdonald
> > <lists.automattic.com@callum-macdonald.com> wrote:
> > >
> > > Did anything ever come of this suggestion? I don't remember seeing
> > > any opposition to it and I saw several people supporting it.
> > >
> > > Is there a process which needs to be followed to get this done or
> > > do we just need to pester Matt?
> >
> >
> > I think the general consensus might be that it works fine as is.
>
> Based on...? I've seen only one person settle on "leave it be." It's
> not exactly easy to tell the difference between "vocal minority" and
> "silent consensus." ;)
>
> > If that's not the case, then I'd say (as you suggest) that the first
> > step is determining if this part of code is open for discussion, and
> > if so, what that process should be.
>
> Indeed. Who's the maintainer? It's not exactly listed anywhere; I
> assume from skimming some trac tickets that we have to go through Matt
> or Mike.
>
> > If we are considering possible changes, I'd throw in the suggestion
> > for allowing (or actually requiring) the readme screenshot images to
> > be named references to files, rather than files named according to
> > the current convention.
> >
> > Then you could allow these file references to have an attribute
> > indicating whether the packager should include it in the zip of not.
>
> Yeah, but my coder's intuition tells me that's getting into a bigger,
> more complex change in code, and it also solves a narrower issue.
> Indicating a subdirectory provides a lot more leverage over package
> contents for the effort. I totally agree that screenshots should be
> allowed to have real names (the way it is now is totally lame), but the
> inclusion issue can be solved independently, so we don't need to tie
> the two solutions together.
>
>
> --
> Travis
>
> In Series maintainer
> Random coder & quality guy
> <http://remstate.com/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From zamoose at gmail.com  Mon Oct 22 09:43:08 2007
From: zamoose at gmail.com (Doug Stewart)
Date: Mon Oct 22 09:50:26 2007
Subject: [wp-hackers] WPhone Admin plugin 1.3.1,
	aka "iPhone Contest Final Version"
In-Reply-To: <8f93a7390710220048p71eb5acpdcd236866998c2cb@mail.gmail.com>
References: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>
	<7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
	<8f93a7390710220044s75cf5399s243cba1071607fb7@mail.gmail.com>
	<8f93a7390710220048p71eb5acpdcd236866998c2cb@mail.gmail.com>
Message-ID: <71ddd7490710220243j5b21ca59n5f83a612382f7ef5@mail.gmail.com>

On 10/22/07, Viper007Bond <viper@viper007bond.com> wrote:
> Turns out the plugin activates correctly on 2.3, but throws an error on WP
> trunk.
>

I'm just waiting for some well-funded dark horse entry to drop at
11:45 tonight and blow us all away. *grin*

It's going to, like, butter your toast, mow your lawn and tip your
paperboy in addition to being HTML 4.01 strict and full of WIN.

We're all doomed.  DOOMED, I say!  *chuckle*

-- 
-Doug

http://literalbarrage.org/blog/
From ai2097 at users.sourceforge.net  Mon Oct 22 10:01:08 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Mon Oct 22 10:01:15 2007
Subject: [wp-hackers] Permissions changed on svn.wp-plugins.net?
Message-ID: <20071022030108.6d3280f9@remstate.com>

Hey folks,

  I can't perform any actions on svn.wp-plugins.net anymore. Checkins
are denied, and even attempting to view the source over HTTP is asking
for authentication now (checkouts are, likewise, not working).

Anyone else having this issue? Anyone know what's up?

-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From zamoose at gmail.com  Mon Oct 22 10:13:20 2007
From: zamoose at gmail.com (Doug Stewart)
Date: Mon Oct 22 10:13:27 2007
Subject: [wp-hackers] Permissions changed on svn.wp-plugins.net?
In-Reply-To: <20071022030108.6d3280f9@remstate.com>
References: <20071022030108.6d3280f9@remstate.com>
Message-ID: <71ddd7490710220313p55de04b1r71eef32760aeff94@mail.gmail.com>

You mean svn.wp-plugins.ORG, right?  Not .NET?

On 10/22/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
> Hey folks,
>
>   I can't perform any actions on svn.wp-plugins.net anymore. Checkins
> are denied, and even attempting to view the source over HTTP is asking
> for authentication now (checkouts are, likewise, not working).
>
> Anyone else having this issue? Anyone know what's up?
>
> --
> Travis
>
> In Series maintainer
> Random coder & quality guy
> <http://remstate.com/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
-Doug

http://literalbarrage.org/blog/
From spencerp1 at gmail.com  Mon Oct 22 10:18:41 2007
From: spencerp1 at gmail.com (spencerp)
Date: Mon Oct 22 10:18:39 2007
Subject: [wp-hackers] Permissions changed on svn.wp-plugins.net?
In-Reply-To: <71ddd7490710220313p55de04b1r71eef32760aeff94@mail.gmail.com>
References: <20071022030108.6d3280f9@remstate.com>
	<71ddd7490710220313p55de04b1r71eef32760aeff94@mail.gmail.com>
Message-ID: <471C7901.2030800@gmail.com>

Doug Stewart wrote:
> You mean svn.wp-plugins.ORG, right?  Not .NET?
>   
It was .ORG for me. But I just went START > RUN > CMD > plink mydomain 
and tried "svn up" on all the domains, and it's working now.. :D

From ai2097 at users.sourceforge.net  Mon Oct 22 10:26:27 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Mon Oct 22 10:26:39 2007
Subject: [wp-hackers] Permissions changed on svn.wp-plugins.net?
In-Reply-To: <471C7901.2030800@gmail.com>
References: <20071022030108.6d3280f9@remstate.com>
	<71ddd7490710220313p55de04b1r71eef32760aeff94@mail.gmail.com>
	<471C7901.2030800@gmail.com>
Message-ID: <20071022032627.12bb9c97@remstate.com>

On Mon, 22 Oct 2007 06:18:41 -0400, spencerp <spencerp1@gmail.com>
wrote:

> Doug Stewart wrote:
> > You mean svn.wp-plugins.ORG, right?  Not .NET?
> >   
> It was .ORG for me. But I just went START > RUN > CMD > plink
> mydomain and tried "svn up" on all the domains, and it's working
> now.. :D

Yes; please ignore my thinko, I meant .org :). My SVN directories know
where they're from, and svn up/svn ci was not a happy camper until about
03:08 (~16 minutes ago). Things seem to be working now. Maintenance
window, perhaps?

-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From spencerp1 at gmail.com  Mon Oct 22 10:05:56 2007
From: spencerp1 at gmail.com (spencerp)
Date: Mon Oct 22 10:29:54 2007
Subject: [wp-hackers] Permissions changed on svn.wp-plugins.net?
In-Reply-To: <20071022030108.6d3280f9@remstate.com>
References: <20071022030108.6d3280f9@remstate.com>
Message-ID: <471C7604.6090603@gmail.com>

Travis Snoozy wrote:
> Hey folks,
>
>   I can't perform any actions on svn.wp-plugins.net anymore. Checkins
> are denied, and even attempting to view the source over HTTP is asking
> for authentication now (checkouts are, likewise, not working).
>
> Anyone else having this issue? Anyone know what's up?

I'm having this as well. I was just plinking my domain, to "svn up" all 
my domains on Dreamhost, and got that login issue as well. I didn't have 
it before, so...not sure what's going on... Perhaps just a glitch?
From barry at automattic.com  Mon Oct 22 10:55:31 2007
From: barry at automattic.com (Barry Abrahamson)
Date: Mon Oct 22 11:19:49 2007
Subject: [wp-hackers] Permissions changed on svn.wp-plugins.net?
In-Reply-To: <471C7604.6090603@gmail.com>
References: <20071022030108.6d3280f9@remstate.com> <471C7604.6090603@gmail.com>
Message-ID: <471C81A3.3090404@automattic.com>

spencerp wrote:
> Travis Snoozy wrote:
> I'm having this as well. I was just plinking my domain, to "svn up" all 
> my domains on Dreamhost, and got that login issue as well. I didn't have 
> it before, so...not sure what's going on... Perhaps just a glitch?

Looks like there was a glitch between 09:07 GMT and 10:05 GMT. 
Everything should be fixed now.

Barry


-- 
Barry Abrahamson | Systems Wrangler | Automattic
Blog: http://barry.wordpress.com
From wordpress at tekartist.org  Mon Oct 22 12:19:55 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Mon Oct 22 12:20:06 2007
Subject: [wp-hackers] WPhone Admin plugin 1.3.1,
	aka "iPhone Contest Final Version"
In-Reply-To: <71ddd7490710220243j5b21ca59n5f83a612382f7ef5@mail.gmail.com>
References: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>
	<7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
	<8f93a7390710220044s75cf5399s243cba1071607fb7@mail.gmail.com>
	<8f93a7390710220048p71eb5acpdcd236866998c2cb@mail.gmail.com>
	<71ddd7490710220243j5b21ca59n5f83a612382f7ef5@mail.gmail.com>
Message-ID: <5564053F-2B45-4CCA-A0D1-55E331C74639@tekartist.org>


All and all, the important thing here is that we're Santa Certified.
http://santas.tempel.org/  -> http://santas.tempel.org/wp-login.php

(nope it's not one of our blogs and there's no relation to us)

:D

S.



On Oct 22, 2007, at 5:43, Doug Stewart wrote:

> On 10/22/07, Viper007Bond <viper@viper007bond.com> wrote:
>> Turns out the plugin activates correctly on 2.3, but throws an  
>> error on WP
>> trunk.
>>
>
> I'm just waiting for some well-funded dark horse entry to drop at
> 11:45 tonight and blow us all away. *grin*
>
> It's going to, like, butter your toast, mow your lawn and tip your
> paperboy in addition to being HTML 4.01 strict and full of WIN.
>
> We're all doomed.  DOOMED, I say!  *chuckle*
>
> -- 
> -Doug
>
> http://literalbarrage.org/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From dan at scatter3d.com  Mon Oct 22 15:32:41 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Mon Oct 22 15:33:25 2007
Subject: [wp-hackers] WPhone Admin plugin 1.3.1,
	aka "iPhone Contest Final Version"
In-Reply-To: <8f93a7390710220044s75cf5399s243cba1071607fb7@mail.gmail.com>
References: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>
	<7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
	<8f93a7390710220044s75cf5399s243cba1071607fb7@mail.gmail.com>
Message-ID: <7cf9ae490710220832g28967c1ekc70f2f06f94f2ad4@mail.gmail.com>

On 10/22/07, Viper007Bond <viper@viper007bond.com> wrote:
>
> Extensibility:
> >     *  Large library of current (and future) WP admin plugins will
> > "just work" in the mobile UI, without rewriting or tweaking
>
> Again, not able to respond, although I will mention that out plugin is
> 100%
> hookable, filterable, and translatable (see example plugin).


I acknowledge that your plugin is extensible but ours doesn't require a
plugin author to modify his/her code to make it work for mobileadmin.

Ability to toggle the "mobile" view on and off, from any browser
> > (mobile or otherwise) without disabling the plugin or logging in/out,
> > and without requiring javascript to be enabled
>
> Same for our plugin (via $_GET), but we opted to provide no UI for this as
> it didn't seem to be needed from our perspective, especially with the
> limited screen space.


I have to disagree with it being necessary. And hopefully whomever wins you
change it because on an iPhone you must logout after the plugin activation,
then log-in again for iUI interface to activate. More importantly, if you
wanted to get to a section of the admin that wasn't supported by your plugin
you you couldn't either type the url in or just log out and deactivate the
interface, instead you would have to use a non-mobile browser to deactive
the plugin and by that time it wouldn't be necessary as the options you'd
try to access earlier would be available on the desktop. IMO you shouldn't
lock the user out of the fully featured admin, especially on the iPhone
where it still runs great.


> Indeed! I wish you good luck. :)

Thanks, you guys have a great plugin too. So much, that we were forced to
list our benefits to distinguish ourselves and in case those benefits
weren't apparent to the judge(s).

UI and underlying code aside, I personally like the admin page designs. Even
though they're not unique to the iPhone they have a uniformity which we had
a tough time accomplishing but we expect 2.4 with it's new backend design
and hopefully better markup we'll be able to do what I intended.

I also can't believe you designed in the dark for the iPhone, that's cool.

Like you've mentioned before, regardless of the outcome both projects could
learn from each other and the result could potentially be the ultimate of
mobile admin plugin for WP.


Good luck to all and may our users benefit from our work the most.


-- 
Dan Cameron
From scompt at scompt.com  Mon Oct 22 16:11:18 2007
From: scompt at scompt.com (Edward Dale)
Date: Mon Oct 22 16:11:31 2007
Subject: [wp-hackers] New plugin add missing manage_pages column hooks
Message-ID: <1fe4fa230710220911u29e24fccxe2dc613c2f5d92b9@mail.gmail.com>

Hello all,

I released a new plugin[1] yesterday that might be of use to some
reading this list.  It provides the missing hooks that have been
requested on trac[2].

The hooks in question are 'manage_pages_columns' and
'manage_pages_custom_column'.  They're created by hooking onto the
'wp' action and recording what it's showing and then adding any custom
columns after the page loads using jQuery.

Give it a look and let me know if you think it's useful or if you have
any suggestions.  I'd appreciate any input from the WP ninjas here.

[1] http://scompt.com/projects/manage-pages-custom-columns-in-wordpress
[2] http://trac.wordpress.org/ticket/2284

Cheers,
Ed
From ionfish at gmail.com  Mon Oct 22 16:29:08 2007
From: ionfish at gmail.com (Benedict Eastaugh)
Date: Mon Oct 22 16:29:14 2007
Subject: [wp-hackers] tag__in and tag__and query vars empty for tag unions
	and intersections
Message-ID: <fd3b80510710220929g6b512fbdl88d2f9b7cbcbb04b@mail.gmail.com>

I've been writing some code to allow a theme to display multiple tag
titles for tag intersections and unions, so for example if your query
string looks like this:

tag=john+paul+george+ringo

then the resultant title might look like this:

"You are browsing posts tagged with John, Paul, George and Ringo"

Now, I have this all working fine, save for the part that gets a list
of tag ids from WordPress. tag_slug__in and tag_slug__and are
populated for unions and intersections respectively, and presumably
WordPress must be getting that list of tag ids somehow, so it can
display the correct posts. However, although the tag_id query var is
set (albeit only for the first tag in an intersection or union) the
tag__in and tag__and query vars appear to be empty for tag unions and
intersections.

What I'm wondering is why the tag__in and tag__and query vars aren't
populated in these instances, since it would be be useful to be able
to pull that data directly rather than querying the database again
with the tag slugs. Thanks in advance for any help that may be
rendered. Cheers,

Benedict.
From wordpress at tekartist.org  Mon Oct 22 17:18:12 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Mon Oct 22 17:18:22 2007
Subject: [wp-hackers] WPhone Admin plugin 1.3.1,
	aka "iPhone Contest Final Version"
In-Reply-To: <7cf9ae490710220832g28967c1ekc70f2f06f94f2ad4@mail.gmail.com>
References: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>
	<7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
	<8f93a7390710220044s75cf5399s243cba1071607fb7@mail.gmail.com>
	<7cf9ae490710220832g28967c1ekc70f2f06f94f2ad4@mail.gmail.com>
Message-ID: <1DC2DF3E-1758-4BC9-A11A-C68348A38763@tekartist.org>


On Oct 22, 2007, at 11:32, Daniel Cameron wrote:
> Like you've mentioned before, regardless of the outcome both  
> projects could
> learn from each other and the result could potentially be the  
> ultimate of
> mobile admin plugin for WP.
>
> Good luck to all and may our users benefit from our work the most.

That's my view as well. Couldn't agree more.

In the end, we took different approaches to the challenge, and came  
up with what I see as two quality solutions.
Maybe when this is *over*, we can indeed find ways to make them  
coexist, and who knows, maybe even merge if we all see it as an  
advantage to our respective user bases.

Cheers,

Stephane


From abelcheung at gmail.com  Mon Oct 22 19:05:15 2007
From: abelcheung at gmail.com (Abel Cheung)
Date: Mon Oct 22 19:05:21 2007
Subject: [wp-hackers] Termination of Categories
In-Reply-To: <1192990159.413925.282770@k35g2000prh.googlegroups.com>
References: <1192990159.413925.282770@k35g2000prh.googlegroups.com>
Message-ID: <df41a9470710221205l52b9f5c1peeaa78a6553e68e4@mail.gmail.com>

On 10/22/07, Chris Poteet <cpoteet@siolon.com> wrote:
> With the advent of tags and the new schema is there a plan to get rid
> of the category structure?  It seems to be redundant with the superior
> tagging system.

Sites with subcategories are destined to death, unless:

1. nobody are linking to these subcategory pages
2. those blog sites are not crawled by search engines
3. nobody subscribes to category feeds belonging to such website

which pretty much means sites isolated from internet.

Abel


>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Abel Cheung   (GPG Key: 0xC67186FF)
Key fingerprint: 671C C7AE EFB5 110C D6D1  41EE 4152 E1F1 C671 86FF
--------------------------------------------------------------------
* My own cave: http://me.abelcheung.org/
* Opensource Application Knowledge Assoc. - http://oaka.org/
From m at mullenweg.com  Mon Oct 22 21:35:52 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon Oct 22 21:35:43 2007
Subject: [wp-hackers] iPhone Pencils Down Tonight
Message-ID: <471D17B8.2050400@mullenweg.com>

I'm moving apartments right now, but tonight at 10 PM PST I'll download 
each of the iPhone plugins from the plugin directory and use those as 
the basis for the judging. I'll do all testing on an iPhone.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From wordpress at tekartist.org  Mon Oct 22 23:09:16 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Mon Oct 22 23:09:25 2007
Subject: [wp-hackers] iPhone Pencils Down Tonight
In-Reply-To: <471D17B8.2050400@mullenweg.com>
References: <471D17B8.2050400@mullenweg.com>
Message-ID: <30A7D3EE-D022-4253-8082-28EBCEF8B36B@tekartist.org>


Just curious, since it's an iPhone specifically: will you be testing  
under EDGE or WIFI?
Good luck with the move. Answer can wait and come with or after the  
judgement.

Thanks,

Stephane




On Oct 22, 2007, at 17:35, Matt Mullenweg wrote:

> I'm moving apartments right now, but tonight at 10 PM PST I'll  
> download each of the iPhone plugins from the plugin directory and  
> use those as the basis for the judging. I'll do all testing on an  
> iPhone.
>
> -- 
> Matt Mullenweg
>  http://photomatt.net | http://wordpress.org
> http://automattic.com | http://akismet.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From jared at pacific22.com  Tue Oct 23 01:25:16 2007
From: jared at pacific22.com (Jared Bangs)
Date: Tue Oct 23 01:25:43 2007
Subject: [wp-hackers] WPhone Admin plugin 1.3.1,
	aka "iPhone Contest Final Version"
In-Reply-To: <471C4331.3010805@santosj.name>
References: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>
	<7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
	<471C4331.3010805@santosj.name>
Message-ID: <7b4922320710221825t760ea9fdx80634f87cb1db85c@mail.gmail.com>

On 10/21/07, Jacob <wordpress@santosj.name> wrote:
>
> If more people wrote OO code like yours, then I wouldn't have such a
> long list of people to bury alive in my neighbor's yard. I almost cried.
> Absolutely beautiful.
>
> --
>
> Jacob Santos
>

Cool, thanks. I appreciate that. It's also good to know that I'm not a
target for burial anytime soon. :-)
From jared at pacific22.com  Tue Oct 23 01:23:19 2007
From: jared at pacific22.com (Jared Bangs)
Date: Tue Oct 23 01:28:20 2007
Subject: [wp-hackers] WPhone Admin plugin 1.3.1,
	aka "iPhone Contest Final Version"
In-Reply-To: <1DC2DF3E-1758-4BC9-A11A-C68348A38763@tekartist.org>
References: <71ddd7490710211211t612f706eje9b604f35401bd17@mail.gmail.com>
	<7b4922320710212301l6b0e1793ke4af3627bd5d87fc@mail.gmail.com>
	<8f93a7390710220044s75cf5399s243cba1071607fb7@mail.gmail.com>
	<7cf9ae490710220832g28967c1ekc70f2f06f94f2ad4@mail.gmail.com>
	<1DC2DF3E-1758-4BC9-A11A-C68348A38763@tekartist.org>
Message-ID: <7b4922320710221823h4441c893m87059d3353c7302b@mail.gmail.com>

On 10/22/07, Stephane Daury <wordpress@tekartist.org> wrote:
>
> On Oct 22, 2007, at 11:32, Daniel Cameron wrote:
> > Good luck to all and may our users benefit from our work the most.
>
> That's my view as well. Couldn't agree more.
>
> In the end, we took different approaches to the challenge, and came
> up with what I see as two quality solutions.
> Maybe when this is *over*, we can indeed find ways to make them
> coexist, and who knows, maybe even merge if we all see it as an
> advantage to our respective user bases.
>
> Cheers,
>
> Stephane
>

Yeah, thanks for the tip on the issue with the current trunk, BTW.
I'll check into that.

I haven't had a chance to check back in on this discussion since I
posted it late last night, but during the day (and after a night of
much needed sleep) I was thinking that my post may have been a bit
overly zealous or competitive, but it's good to see that everyone
involved has a good attitude about the whole thing.

I haven't really checked out your plugin (since I don't have an iPhone
either), but from what I've seen so far, I think these are both solid
contenders for the prize.

Thanks,
Jared
From wordpress at tekartist.org  Tue Oct 23 05:00:12 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Tue Oct 23 05:00:22 2007
Subject: [wp-hackers] iPhone Pencils Down Tonight
In-Reply-To: <30A7D3EE-D022-4253-8082-28EBCEF8B36B@tekartist.org>
References: <471D17B8.2050400@mullenweg.com>
	<30A7D3EE-D022-4253-8082-28EBCEF8B36B@tekartist.org>
Message-ID: <25AC5F9F-C99A-47B0-A664-A6226E6A870B@tekartist.org>


Good luck everybody.
It's been fun.

Stephane


On Oct 22, 2007, at 19:09, Stephane Daury wrote:

> Just curious, since it's an iPhone specifically: will you be  
> testing under EDGE or WIFI?
> Good luck with the move. Answer can wait and come with or after the  
> judgement.
>
> Thanks,
>
> Stephane
>
> On Oct 22, 2007, at 17:35, Matt Mullenweg wrote:
>
>> I'm moving apartments right now, but tonight at 10 PM PST I'll  
>> download each of the iPhone plugins from the plugin directory and  
>> use those as the basis for the judging. I'll do all testing on an  
>> iPhone.
>>
>> -- 
>> Matt Mullenweg
>>  http://photomatt.net | http://wordpress.org
>> http://automattic.com | http://akismet.com
From dan at scatter3d.com  Tue Oct 23 17:56:46 2007
From: dan at scatter3d.com (Daniel Cameron)
Date: Tue Oct 23 17:56:52 2007
Subject: [wp-hackers] iPhone Pencils Down Tonight
In-Reply-To: <25AC5F9F-C99A-47B0-A664-A6226E6A870B@tekartist.org>
References: <471D17B8.2050400@mullenweg.com>
	<30A7D3EE-D022-4253-8082-28EBCEF8B36B@tekartist.org>
	<25AC5F9F-C99A-47B0-A664-A6226E6A870B@tekartist.org>
Message-ID: <7cf9ae490710231056y5cbcd30dq221dd3f7b519fdf8@mail.gmail.com>

>
> Good luck everybody.
> It's been fun.
>
> Stephane



+1


The suspense is killing me.


-- 
Dan Cameron
From lloydomattic at gmail.com  Tue Oct 23 18:31:30 2007
From: lloydomattic at gmail.com (Lloyd Budd)
Date: Tue Oct 23 18:31:35 2007
Subject: [wp-hackers] Save Changes for Taxonomies ...
In-Reply-To: <6132e6d0710190909u6fa91b9fj3b43c38995891e8@mail.gmail.com>
References: <6132e6d0710190909u6fa91b9fj3b43c38995891e8@mail.gmail.com>
Message-ID: <70ebb7140710231131i5367597u9241ee6ae67115e9@mail.gmail.com>

On 10/19/07, Jan Bucher <janbucher@gmail.com> wrote:
>
> this could be ab bit noob, but i don't have an idea how to save
> changes i have made to the Taxonomies of WP.

I don't know anything about this stuff, but if I was looking to solve
this problem, I would probably look to see how it was done starting
from http://foolswisdom.com/wordpress/wp-admin/link-add.php

Hope that helps,
-- 
Lloyd Budd | Digital Entomologist | | Skype:foolswisdom
WordPress.com | WordPress.org | Automattic.com
From m at mullenweg.com  Tue Oct 23 18:56:25 2007
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Oct 23 18:56:20 2007
Subject: [wp-hackers] iPhone Pencils Down Tonight
In-Reply-To: <30A7D3EE-D022-4253-8082-28EBCEF8B36B@tekartist.org>
References: <471D17B8.2050400@mullenweg.com>
	<30A7D3EE-D022-4253-8082-28EBCEF8B36B@tekartist.org>
Message-ID: <471E43D9.8000005@mullenweg.com>

Stephane Daury wrote:
> Just curious, since it's an iPhone specifically: will you be testing 
> under EDGE or WIFI?
> Good luck with the move. Answer can wait and come with or after the 
> judgement.

I'm using the iPhone on EDGE, and an iPod Touch on Wifi.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From ryan at boren.nu  Tue Oct 23 21:06:18 2007
From: ryan at boren.nu (Ryan Boren)
Date: Tue Oct 23 21:06:25 2007
Subject: [wp-hackers] Save Changes for Taxonomies ...
In-Reply-To: <6132e6d0710190909u6fa91b9fj3b43c38995891e8@mail.gmail.com>
References: <6132e6d0710190909u6fa91b9fj3b43c38995891e8@mail.gmail.com>
Message-ID: <c8f37c930710231406s9ac057dg717837677e180ec3@mail.gmail.com>

On 10/19/07, Jan Bucher <janbucher@gmail.com> wrote:
> Hello Everybody,
>
> this could be ab bit noob, but i don't have an idea how to save
> changes i have made to the Taxonomies of WP.

Taxonomies are not saved.  Your plugin must call register_taxonomy()
on each page load to define them.

Ryan
From wordpress at tekartist.org  Tue Oct 23 23:06:35 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Tue Oct 23 23:07:00 2007
Subject: [wp-hackers] iPhone Pencils Down Tonight
In-Reply-To: <471E43D9.8000005@mullenweg.com>
References: <471D17B8.2050400@mullenweg.com>
	<30A7D3EE-D022-4253-8082-28EBCEF8B36B@tekartist.org>
	<471E43D9.8000005@mullenweg.com>
Message-ID: <6EDFD29D-8BDF-467E-8F47-76E2404B0BE7@tekartist.org>


On Oct 23, 2007, at 14:56, Matt Mullenweg wrote:

> Stephane Daury wrote:
>> Just curious, since it's an iPhone specifically: will you be  
>> testing under EDGE or WIFI?
>> Good luck with the move. Answer can wait and come with or after  
>> the judgement.
>
> I'm using the iPhone on EDGE, and an iPod Touch on Wifi.
>
> -- 
> Matt Mullenweg
>  http://photomatt.net | http://wordpress.org
> http://automattic.com | http://akismet.com

Cool, thanks for the note.

Unless you sorely hate the app, be sure to let us know how the it  
behaves on the iPhone under Edge.
I use our app on EDGE in *lite* mode on a crappy little phone, but  
have only used the *rich* interface an iPod on Wifi.

Thks,

S.




From viper at viper007bond.com  Wed Oct 24 00:04:33 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Wed Oct 24 00:04:53 2007
Subject: [wp-hackers] iPhone Pencils Down Tonight
In-Reply-To: <6EDFD29D-8BDF-467E-8F47-76E2404B0BE7@tekartist.org>
References: <471D17B8.2050400@mullenweg.com>
	<30A7D3EE-D022-4253-8082-28EBCEF8B36B@tekartist.org>
	<471E43D9.8000005@mullenweg.com>
	<6EDFD29D-8BDF-467E-8F47-76E2404B0BE7@tekartist.org>
Message-ID: <8f93a7390710231704o5b11def4v7b0438f29f4846ed@mail.gmail.com>

lol, just let the man do his thing, S. :P

(someone's impatient I see, hehe)

On 10/23/07, Stephane Daury <wordpress@tekartist.org> wrote:
>
>
> On Oct 23, 2007, at 14:56, Matt Mullenweg wrote:
>
> > Stephane Daury wrote:
> >> Just curious, since it's an iPhone specifically: will you be
> >> testing under EDGE or WIFI?
> >> Good luck with the move. Answer can wait and come with or after
> >> the judgement.
> >
> > I'm using the iPhone on EDGE, and an iPod Touch on Wifi.
> >
> > --
> > Matt Mullenweg
> >  http://photomatt.net | http://wordpress.org
> > http://automattic.com | http://akismet.com
>
> Cool, thanks for the note.
>
> Unless you sorely hate the app, be sure to let us know how the it
> behaves on the iPhone under Edge.
> I use our app on EDGE in *lite* mode on a crappy little phone, but
> have only used the *rich* interface an iPod on Wifi.
>
> Thks,
>
> S.
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From wordpress at tekartist.org  Wed Oct 24 00:12:46 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Wed Oct 24 00:13:01 2007
Subject: [wp-hackers] iPhone Pencils Down Tonight
In-Reply-To: <8f93a7390710231704o5b11def4v7b0438f29f4846ed@mail.gmail.com>
References: <471D17B8.2050400@mullenweg.com>
	<30A7D3EE-D022-4253-8082-28EBCEF8B36B@tekartist.org>
	<471E43D9.8000005@mullenweg.com>
	<6EDFD29D-8BDF-467E-8F47-76E2404B0BE7@tekartist.org>
	<8f93a7390710231704o5b11def4v7b0438f29f4846ed@mail.gmail.com>
Message-ID: <20269529-CEF1-4979-B0C2-BE16DCF9AA40@tekartist.org>


Nope, that's outside of the contest. We can always use feedback. :)

S.



On Oct 23, 2007, at 20:04, Viper007Bond wrote:

> lol, just let the man do his thing, S. :P
>
> (someone's impatient I see, hehe)
>
> On 10/23/07, Stephane Daury <wordpress@tekartist.org> wrote:
>>
>>
>> On Oct 23, 2007, at 14:56, Matt Mullenweg wrote:
>>
>>> Stephane Daury wrote:
>>>> Just curious, since it's an iPhone specifically: will you be
>>>> testing under EDGE or WIFI?
>>>> Good luck with the move. Answer can wait and come with or after
>>>> the judgement.
>>>
>>> I'm using the iPhone on EDGE, and an iPod Touch on Wifi.
>>>
>>> --
>>> Matt Mullenweg
>>>  http://photomatt.net | http://wordpress.org
>>> http://automattic.com | http://akismet.com
>>
>> Cool, thanks for the note.
>>
>> Unless you sorely hate the app, be sure to let us know how the it
>> behaves on the iPhone under Edge.
>> I use our app on EDGE in *lite* mode on a crappy little phone, but
>> have only used the *rich* interface an iPod on Wifi.
>>
>> Thks,
>>
>> S.
>>
>>
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> -- 
> Viper007Bond | http://www.viper007bond.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From lists.automattic.com at callum-macdonald.com  Wed Oct 24 14:37:26 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 24 14:37:36 2007
Subject: [wp-hackers] WPMU Plugin management
In-Reply-To: <4714A0E2.5000103@yadan.net>
References: <4714A0E2.5000103@yadan.net>
Message-ID: <471F58A6.6020300@callum-macdonald.com>

It's a little late, but it sounds like a great idea to me. Cheers - Callum.

Omry Yadan wrote:
> Hi All,
> I wrote a plugin management plugin for WPMU 
> (http://firestats.cc/wiki/WPMUPluginCommander)  that allows Automatic 
> activation of plugins in the plugins directory, and mass 
> activate/deactivate of plugins.
> what I would like to add is the ability to hide plugins from normal 
> users and prevent them from activating them through some hackery.
> this involves two things:
> 1. manipulate the list of plugins displayed to the user.
> 2. prevent activation of plugins not in the plugins list.
>
> I don't see how those things can be done with the current WPMU code, 
> but I am willing to add the required filters/hooks needed to perform 
> this and submit a patch.
> what do you guys think?
>
>    Omry.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>

From lists.automattic.com at callum-macdonald.com  Wed Oct 24 14:40:11 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 24 14:40:25 2007
Subject: [wp-hackers] WPMU cross-site categories & tagging
Message-ID: <471F594B.4040508@callum-macdonald.com>

G'day,

I've just started working with WPMU. I've noticed that my wordpress.com 
accounts have the same tagging box that WP 2.3 has, but WPMU doesn't. My 
question is two-fold.

1) Is anyone interested in collaborating on implementing this? I'm happy 
to put in some time, but it'd be nice to work with one or two others on it.

2) If we/I go ahead and do this, will it get committed to WPMU trunk?

My second point raises the question, is there point in us going through 
this process if the code already exists? Or is the WordPress.com code so 
far removed from the "stock" WPMU that it's probably quicker to copy 
from WP 2.3?

I guess that's more than two questions! :)

Cheers - Callum.

From peter.westwood at ftwr.co.uk  Wed Oct 24 14:43:21 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Oct 24 14:44:39 2007
Subject: [wp-hackers] WPMU cross-site categories & tagging
In-Reply-To: <471F594B.4040508@callum-macdonald.com>
References: <471F594B.4040508@callum-macdonald.com>
Message-ID: <471F5A09.5030806@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Callum Macdonald wrote:
> G'day,
> 
> I've just started working with WPMU. I've noticed that my wordpress.com
> accounts have the same tagging box that WP 2.3 has, but WPMU doesn't. My
> question is two-fold.
> 
> 1) Is anyone interested in collaborating on implementing this? I'm happy
> to put in some time, but it'd be nice to work with one or two others on it.
> 
> 2) If we/I go ahead and do this, will it get committed to WPMU trunk?
> 
> My second point raises the question, is there point in us going through
> this process if the code already exists? Or is the WordPress.com code so
> far removed from the "stock" WPMU that it's probably quicker to copy
> from WP 2.3?
> 
> I guess that's more than two questions! :)

Disclaimer - I don't work on wordpress.com or for automattic

- From what I know - wordpress.com runs on WPMU trunk plus stuff merged
from WordPress trunk so it is always ahead of WPMU itself.

AFAIK In general if you see it on wordpress.com it will get merged into
WPMU in the future.

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHH1oJVPRdzag0AcURAulRAJ4yQ81sSATh2kg82fL2+Rnyn08WkACdGTLQ
UTIRPqZuW3r1fEQ92mIeI9E=
=LJ/d
-----END PGP SIGNATURE-----
From omry at yadan.net  Wed Oct 24 13:49:28 2007
From: omry at yadan.net (Omry Yadan)
Date: Wed Oct 24 14:50:32 2007
Subject: [wp-hackers] WPMU Plugin management
In-Reply-To: <471F58A6.6020300@callum-macdonald.com>
References: <4714A0E2.5000103@yadan.net>
	<471F58A6.6020300@callum-macdonald.com>
Message-ID: <471F4D68.1010204@yadan.net>

Thanks for the feedback.

what i`d like is to get some approval to the idea from the core team 
before I go and implement it.


Callum Macdonald wrote:

> It's a little late, but it sounds like a great idea to me. Cheers - 
> Callum.
>
> Omry Yadan wrote:
>> Hi All,
>> I wrote a plugin management plugin for WPMU 
>> (http://firestats.cc/wiki/WPMUPluginCommander)  that allows Automatic 
>> activation of plugins in the plugins directory, and mass 
>> activate/deactivate of plugins.
>> what I would like to add is the ability to hide plugins from normal 
>> users and prevent them from activating them through some hackery.
>> this involves two things:
>> 1. manipulate the list of plugins displayed to the user.
>> 2. prevent activation of plugins not in the plugins list.
>>
>> I don't see how those things can be done with the current WPMU code, 
>> but I am willing to add the required filters/hooks needed to perform 
>> this and submit a patch.
>> what do you guys think?
>>
>>    Omry.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From burobjorn at gmail.com  Wed Oct 24 16:28:17 2007
From: burobjorn at gmail.com (Burobjorn)
Date: Wed Oct 24 16:28:26 2007
Subject: [wp-hackers] WPMU cross-site categories & tagging
In-Reply-To: <471F5A09.5030806@ftwr.co.uk>
References: <471F594B.4040508@callum-macdonald.com>
	<471F5A09.5030806@ftwr.co.uk>
Message-ID: <471F72A1.7080209@gmail.com>

Hi,

I've written a tags plugin for wordpress mu and would love to share it 
for all to use. I haven't had time to properly package it, but you email 
will definately motivate me to do this asap :)

You can see it in action on the dutch public broadcaster's site 
Radio6.nl (left column under 'Tags', surprisingly ;)).

The code is GPL licensed and the first part of it is sponsored by the 
dutch broadcast organization VPRO.

Let me know if there is an interest in this WP-MU plugin...

ps: Is there a specific wpmu plugin repository?

All the best,
grtz
BjornW



Peter Westwood wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Callum Macdonald wrote:
>> G'day,
>>
>> I've just started working with WPMU. I've noticed that my wordpress.com
>> accounts have the same tagging box that WP 2.3 has, but WPMU doesn't. My
>> question is two-fold.
>>
>> 1) Is anyone interested in collaborating on implementing this? I'm happy
>> to put in some time, but it'd be nice to work with one or two others on it.
>>
>> 2) If we/I go ahead and do this, will it get committed to WPMU trunk?
>>
>> My second point raises the question, is there point in us going through
>> this process if the code already exists? Or is the WordPress.com code so
>> far removed from the "stock" WPMU that it's probably quicker to copy
>> from WP 2.3?
>>
>> I guess that's more than two questions! :)
> 
> Disclaimer - I don't work on wordpress.com or for automattic
> 
> - From what I know - wordpress.com runs on WPMU trunk plus stuff merged
> from WordPress trunk so it is always ahead of WPMU itself.
> 
> AFAIK In general if you see it on wordpress.com it will get merged into
> WPMU in the future.
> 
> westi
> - --
> Peter Westwood
> http://blog.ftwr.co.uk
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.2 (MingW32)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
> 
> iD8DBQFHH1oJVPRdzag0AcURAulRAJ4yQ81sSATh2kg82fL2+Rnyn08WkACdGTLQ
> UTIRPqZuW3r1fEQ92mIeI9E=
> =LJ/d
> -----END PGP SIGNATURE-----
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 


-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Concordiastraat 68-114
3551 EM Utrecht
The Netherlands

phone: +31 30 2444 101
http://www.burobjorn.nl
From donncha at linux.ie  Wed Oct 24 17:30:38 2007
From: donncha at linux.ie (Donncha O Caoimh)
Date: Wed Oct 24 17:30:57 2007
Subject: [wp-hackers] WPMU Plugin management
In-Reply-To: <471F4D68.1010204@yadan.net>
References: <4714A0E2.5000103@yadan.net>	<471F58A6.6020300@callum-macdonald.com>
	<471F4D68.1010204@yadan.net>
Message-ID: <471F813E.3080300@linux.ie>

Hi Omry,

While it's true the plugins page itself doesn't have any filtering of
plugins, that page is possibly not the right page to display plugins to
users of WordPress MU. Users who aren't tech savvy, or even know what
software is running on your site aren't going to be interested in the
author information, or arcane configuration of plugins.

Your plugin should probably create a page that uses a list (stored in
sitemeta) of approved plugins, perhaps with a list of plugins stored in
a blog's options table to override the global list. Your plugin should
handle activation and deactivation of plugins. Take a look at
wp-admin/plugins.php for how this is done, it's pretty simple.

To mass-enable plugins, just put the plugin in mu-plugins, or your
plugin will need some function on init that checks for plugins that need
to be activated..

Everything can be done through a plugin, don't use plugins.php at all!

HTH,
Donncha


Omry Yadan wrote:
> Thanks for the feedback.
> 
> what i`d like is to get some approval to the idea from the core team 
> before I go and implement it.
> 
> 
> Callum Macdonald wrote:
>
>>> 1. manipulate the list of plugins displayed to the user.
>>> 2. prevent activation of plugins not in the plugins list.
>>>
>>> I don't see how those things can be done with the current WPMU code, 
>>> but I am willing to add the required filters/hooks needed to perform 
>>> this and submit a patch.
>>> what do you guys think?

From donncha at linux.ie  Wed Oct 24 17:31:35 2007
From: donncha at linux.ie (Donncha O Caoimh)
Date: Wed Oct 24 17:31:50 2007
Subject: [wp-hackers] WPMU cross-site categories & tagging
In-Reply-To: <471F594B.4040508@callum-macdonald.com>
References: <471F594B.4040508@callum-macdonald.com>
Message-ID: <471F8177.8080000@linux.ie>

Hi Callum,

Check the Trac page for WordPress MU at
http://trac.mu.wordpress.org/browser/trunk
I've been merging code from WP 2.3 for quite a while, and it's fairly
stable. As it's taken quite a while I'm going to wait until Ryan
releases WP 2.3.1 and merge that because there are a number of useful
bug and security fixes since 2.3 was released.
Shouldn't be long before the .1 maintenance release comes out.
This is the last post I made about the new release:
http://mu.wordpress.org/forums/topic.php?id=6557&page&replies=27

Donncha

Callum Macdonald wrote:
> G'day,
> 
> I've just started working with WPMU. I've noticed that my wordpress.com 
> accounts have the same tagging box that WP 2.3 has, but WPMU doesn't. My 
> question is two-fold.
> 
> 1) Is anyone interested in collaborating on implementing this? I'm happy 
> to put in some time, but it'd be nice to work with one or two others on it.
> 
> 2) If we/I go ahead and do this, will it get committed to WPMU trunk?


From burobjorn at gmail.com  Wed Oct 24 18:41:46 2007
From: burobjorn at gmail.com (Burobjorn)
Date: Wed Oct 24 19:09:42 2007
Subject: [wp-hackers] automatically create a new page with plugin upon
	installation
In-Reply-To: <471861B6.4060505@gmail.com>
References: <47178621.3050107@gmail.com>	<5dc2163e0710181005u3f6b7d89r6d771281f30d9fe2@mail.gmail.com>
	<471861B6.4060505@gmail.com>
Message-ID: <471F91EA.5040103@gmail.com>

Mhhm perhaps I have overlooked something. I can't figure out how to 
directly set the appropriate theme for this newly inserted page.

In a nutshell:
I want to create a page upon my plugin's installation and also set this 
page to a specific theme included with the plugin.

Any help much appreciated!

All the best,

grtz
BjornW

Burobjorn wrote:
> Great. Thanks Dan, Ozh and Robin for your replies.
> 
> Dan Coulter wrote:
>> Check out this function:
>>
>> http://codex.wordpress.org/Function_Reference/wp_insert_post
>>
>> On 10/18/07, Burobjorn <burobjorn@gmail.com> wrote:
>>> Hi,
>>>
>>> I want my (WPMU) plugin to automatically create a page with a specific
>>> theme in the main blog upon installation. I recall seeing this been done
>>> by another (wp or wpmu) plugin, but I can't remember which one nor how
>>> it did this. I was wondering if someone could point me in the right
>>> direction in order to do this either for WP or WPMU.
>>>
>>> Thanks in advance,
>>>
>>> All the best,
>>>
>>> grtz
>>> BjornW
>>>
>>> -- 
>>>
>>> met vriendelijke groet,
>>> Bjorn Wijers
>>>
>>> * b u r o b j o r n .nl *
>>> digitaal vakmanschap | digital craftsmanship
>>>
>>> Concordiastraat 68-114
>>> 3551 EM Utrecht
>>> The Netherlands
>>>
>>> phone: +31 30 2444 101
>>> http://www.burobjorn.nl
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>>
>>
> 
> 


-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Concordiastraat 68-114
3551 EM Utrecht
The Netherlands

phone: +31 30 2444 101
http://www.burobjorn.nl
From rich at cregy.co.uk  Wed Oct 24 19:16:28 2007
From: rich at cregy.co.uk (Richard Brown)
Date: Wed Oct 24 19:16:33 2007
Subject: [wp-hackers] Roles and Capabilities
Message-ID: <8b9d21f20710241216m5a86e20dj15fbd5ff2392542d@mail.gmail.com>

Hi All

I am building a site for multiple users. Each user will only have the
ability to edit their own posts, pages, etc. But I will also be using
a plugin to display images. Is it possible to use the roles and
capabilities function to restrict each user to add, edit or delete
their own images only please?

I am beginning to think this is a place for MU. It is actually a
website for a society who will change membership annually. What do
others think?

Thanks.
-- 
Kind regards
Rich
http://www.cregy.co.uk
Embracing what God does for you is the best thing you can do for him.
Romans 12 v 1
From omry at yadan.net  Wed Oct 24 20:07:31 2007
From: omry at yadan.net (Omry Yadan)
Date: Wed Oct 24 20:07:40 2007
Subject: [wp-hackers] WPMU Plugin management
In-Reply-To: <471F813E.3080300@linux.ie>
References: <4714A0E2.5000103@yadan.net>	<471F58A6.6020300@callum-macdonald.com>	<471F4D68.1010204@yadan.net>
	<471F813E.3080300@linux.ie>
Message-ID: <471FA603.7010704@yadan.net>

Hi Donncha,

What you are saying really is just implement plugins from scratch
instead of somehow reusing it.

instinctively I`d vote for code reuse, but in this case you may be right
that's the best approach would be to create a separate page for that.


is wpmu protected against users activating plugins through raw http
requests?


Donncha O Caoimh wrote:

> Hi Omry,
>
> While it's true the plugins page itself doesn't have any filtering of
> plugins, that page is possibly not the right page to display plugins to
> users of WordPress MU. Users who aren't tech savvy, or even know what
> software is running on your site aren't going to be interested in the
> author information, or arcane configuration of plugins.
>
> Your plugin should probably create a page that uses a list (stored in
> sitemeta) of approved plugins, perhaps with a list of plugins stored in
> a blog's options table to override the global list. Your plugin should
> handle activation and deactivation of plugins. Take a look at
> wp-admin/plugins.php for how this is done, it's pretty simple.
>
> To mass-enable plugins, just put the plugin in mu-plugins, or your
> plugin will need some function on init that checks for plugins that need
> to be activated..
>
> Everything can be done through a plugin, don't use plugins.php at all!
>
> HTH,
> Donncha
>
>
> Omry Yadan wrote:
>> Thanks for the feedback.
>>
>> what i`d like is to get some approval to the idea from the core team
>> before I go and implement it.
>>
>>
>> Callum Macdonald wrote:
>>
>>>> 1. manipulate the list of plugins displayed to the user.
>>>> 2. prevent activation of plugins not in the plugins list.
>>>>
>>>> I don't see how those things can be done with the current WPMU
>>>> code, but I am willing to add the required filters/hooks needed to
>>>> perform this and submit a patch.
>>>> what do you guys think?
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From abelcheung at gmail.com  Wed Oct 24 20:08:07 2007
From: abelcheung at gmail.com (Abel Cheung)
Date: Wed Oct 24 20:08:14 2007
Subject: [wp-hackers] E-mail address and SQL injection
In-Reply-To: <f5422b30710200931uadfa075j575a7da7a0431940@mail.gmail.com>
References: <000501c8131d$3cffb730$0300a8c0@Toshiba>
	<000c01c8132b$d86924f0$893b6ed0$@net>
	<000701c8132c$b8ff3180$0300a8c0@Toshiba>
	<000d01c8132e$1d21b1f0$576515d0$@net>
	<000d01c8132f$c282ecd0$0300a8c0@Toshiba>
	<f5422b30710200931uadfa075j575a7da7a0431940@mail.gmail.com>
Message-ID: <df41a9470710241308q390925ads355399a2a1118175@mail.gmail.com>

On 10/21/07, Rindisbacher Flurin <flurischt@gmail.com> wrote:
> > $wpdb->get_row("SELECT ID FROM $wpdb->users WHERE user_email='$author'
> > LIMIT 1");
> >
> > So this will be safe no matter what $author contains?
>
> This will be safe because in the line above $author is escaped.
> ($wpdb->escape())

Yes, safe if charset is iso-8859-1, ascii, utf-8 or other non-multibyte charset.
For multibyte charsets accepting backslash and single quote as the second
byte, it is quite possible to perform SQL injection as escape() solely relies
on add_slashes() but not mysql_real_escape_string(), so inserting a character
where second byte is single quote may do it.

But I haven't done any real testing yet. Bob, you can try.

Abel


>
> Example:
>
> $author = " '; BAD SQL CODE; --";
> after escape() the ' will be \' and so on.
>
> Flurin
>
> Sorry if the answer should be obvious, as I said, I'm not an SQL weenie.
> >
> > Bob
> >
> >
> > ----- Original Message -----
> > From: "Computer Guru" <computerguru@neosmart.net>
> > To: <wp-hackers@lists.automattic.com>
> > Sent: Saturday, October 20, 2007 11:30 AM
> > Subject: RE: [wp-hackers] E-mail address and SQL injection
> >
> >
> > It should still work :)
> > It'll be just another nasty being POST'd to some location and prep'd for
> > db
> > storage.
> >
> > Computer Guru
> > NeoSmart Technologies
> > http://neosmart.net/
> >
> >
> > > -----Original Message-----
> > > From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> > > bounces@lists.automattic.com] On Behalf Of Bob
> > > Sent: Saturday, October 20, 2007 6:20 PM
> > > To: wp-hackers@lists.automattic.com
> > > Subject: Re: [wp-hackers] E-mail address and SQL injection
> > >
> > > No, I think you misunderstood my post.  The following IS a VALID e-mail
> > > address and will be accepted by the referenced e-mail validation:
> > >
> > >   "Some bad SQL code here"@example.com
> > >
> > > If we allow the above VALID e-mail address, is it possible to include
> > > malicious SQL code?  I don't know enough about SQL to know if escaping
> > > all
> > > content before accessing the DB will work in this case.
> > >
> > > Bob
> > >
> > >
> > > ----- Original Message -----
> > > From: "Computer Guru" <computerguru@neosmart.net>
> > > To: <wp-hackers@lists.automattic.com>
> > > Sent: Saturday, October 20, 2007 11:13 AM
> > > Subject: RE: [wp-hackers] E-mail address and SQL injection
> > >
> > >
> > > It shouldn't be a problem in the current code which escapes all content
> > > before accessing the DB.
> > >
> > > However, the whole point of that field is for a valid email address -
> > > so
> > > regardless of security implications or not, something that can't
> > > possibly be
> > > an email address shouldn't be accepted in the first place, IMHO....
> > >
> > > That's what the regex proposed in that ticket
> > > <http://iamcal.com/publish/articles/php/parsing_email/> is for.
> > >
> > > Computer Guru
> > > NeoSmart Technologies
> > > http://neosmart.net/
> > >
> > > > -----Original Message-----
> > > > From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-
> > > > bounces@lists.automattic.com] On Behalf Of Bob
> > > > Sent: Saturday, October 20, 2007 4:29 PM
> > > > To: wp-hackers
> > > > Subject: [wp-hackers] E-mail address and SQL injection
> > > >
> > > > WordPress is overly-restrictive on the e-mail addresses that it will
> > > > accept.
> > > > Ticket #4616 proposes that all valid e-mail addresses should be
> > > > accepted.
> > > > I'm concerned that one form of e-mail addresses may be a security
> > > > problem.
> > > >
> > > > Specifically, the following is a valid e-mail address:
> > > >
> > > >   "Put anything you want here"@example.com
> > > >
> > > > The quoted string before the @ can contain any characters, including
> > > > spaces
> > > > and other characters not otherwise accepted in an e-mail address.  My
> > > > concern is that SQL commands could be placed in the string to perform
> > > > an SQL
> > > > injection attack.
> > > >
> > > > Does anyone know if this is a possibility?  As part of #4616, I'm
> > > > tempted to
> > > > prohibit the above form of e-mail addresses unless someone knows for
> > > > certain
> > > > that it's safe.  (Note that those addresses are currently rejected.)
> > > >
> > > > Bob
> > > >
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers@lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Abel Cheung   (GPG Key: 0xC67186FF)
Key fingerprint: 671C C7AE EFB5 110C D6D1  41EE 4152 E1F1 C671 86FF
--------------------------------------------------------------------
* My own cave: http://me.abelcheung.org/
* Opensource Application Knowledge Assoc. - http://oaka.org/
From peter.westwood at ftwr.co.uk  Wed Oct 24 20:14:12 2007
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Oct 24 20:16:51 2007
Subject: [wp-hackers] E-mail address and SQL injection
In-Reply-To: <df41a9470710241308q390925ads355399a2a1118175@mail.gmail.com>
References: <000501c8131d$3cffb730$0300a8c0@Toshiba>
	<000c01c8132b$d86924f0$893b6ed0$@net>
	<000701c8132c$b8ff3180$0300a8c0@Toshiba>
	<000d01c8132e$1d21b1f0$576515d0$@net>
	<000d01c8132f$c282ecd0$0300a8c0@Toshiba>
	<f5422b30710200931uadfa075j575a7da7a0431940@mail.gmail.com>
	<df41a9470710241308q390925ads355399a2a1118175@mail.gmail.com>
Message-ID: <93C169D2-0D22-44D2-9D59-64656F973559@ftwr.co.uk>


On 24 Oct 2007, at 21:08, Abel Cheung wrote:

> On 10/21/07, Rindisbacher Flurin <flurischt@gmail.com> wrote:
>>> $wpdb->get_row("SELECT ID FROM $wpdb->users WHERE  
>>> user_email='$author'
>>> LIMIT 1");
>>>
>>> So this will be safe no matter what $author contains?
>>
>> This will be safe because in the line above $author is escaped.
>> ($wpdb->escape())
>
> Yes, safe if charset is iso-8859-1, ascii, utf-8 or other non- 
> multibyte charset.
> For multibyte charsets accepting backslash and single quote as the  
> second
> byte, it is quite possible to perform SQL injection as escape()  
> solely relies
> on add_slashes() but not mysql_real_escape_string(), so inserting a  
> character
> where second byte is single quote may do it.

$wpdb->escape uses mysql_real_escape_string() if available

http://trac.wordpress.org/browser/trunk/wp-includes/wp-db.php#L112

and has done for the past 2 years:

http://trac.wordpress.org/changeset/2684

westi
-- 
Peter Westwood <peter.westwood@ftwr.co.uk>
Blog: http://blog.ftwr.co.uk/
WordPress Plugins: http://blog.ftwr.co.uk/wordpress/



From lists.automattic.com at callum-macdonald.com  Wed Oct 24 19:22:31 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 24 20:49:37 2007
Subject: [wp-hackers] WPMU cross-site categories & tagging
In-Reply-To: <471F8177.8080000@linux.ie>
References: <471F594B.4040508@callum-macdonald.com> <471F8177.8080000@linux.ie>
Message-ID: <471F9B77.6040707@callum-macdonald.com>

Hey Donncha,

Great, sounds awesome.

I grabbed trunk before posting and checked wp-admin/includes/schema.php 
but there's no mention of tags in there. DOH. I've now realised my WP 
2.3 installs have the wp_tags table left over from UltimateTagWarrior, 
the table doesn't existing in WP 2.3. DOH!

I'll look into it again, thanks for the heads up.

Cheers - Callum.

Donncha O Caoimh wrote:
> Hi Callum,
>
> Check the Trac page for WordPress MU at
> http://trac.mu.wordpress.org/browser/trunk
> I've been merging code from WP 2.3 for quite a while, and it's fairly
> stable. As it's taken quite a while I'm going to wait until Ryan
> releases WP 2.3.1 and merge that because there are a number of useful
> bug and security fixes since 2.3 was released.
> Shouldn't be long before the .1 maintenance release comes out.
> This is the last post I made about the new release:
> http://mu.wordpress.org/forums/topic.php?id=6557&page&replies=27
>
> Donncha
>
> Callum Macdonald wrote:
>> G'day,
>>
>> I've just started working with WPMU. I've noticed that my 
>> wordpress.com accounts have the same tagging box that WP 2.3 has, but 
>> WPMU doesn't. My question is two-fold.
>>
>> 1) Is anyone interested in collaborating on implementing this? I'm 
>> happy to put in some time, but it'd be nice to work with one or two 
>> others on it.
>>
>> 2) If we/I go ahead and do this, will it get committed to WPMU trunk?
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>

From lists.automattic.com at callum-macdonald.com  Wed Oct 24 21:22:13 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 24 21:22:20 2007
Subject: [wp-hackers] The term_group column
Message-ID: <471FB785.7020707@callum-macdonald.com>

G'day,

Is the term_group column actually used? Or is it provided for plugin 
use, future use, etc?

I can't figure out how it would be used from the interface, and it's not 
used in any of the blogs that I've checked.

Cheers,


Callum.

PS> This is curiosity more than anything!

From christine at neato.co.nz  Wed Oct 24 21:33:56 2007
From: christine at neato.co.nz (Christine Davis)
Date: Wed Oct 24 21:34:02 2007
Subject: [wp-hackers] The term_group column
In-Reply-To: <471FB785.7020707@callum-macdonald.com>
References: <471FB785.7020707@callum-macdonald.com>
Message-ID: <6e966a280710241433o4d59fc9ax8cd6547976ef3c4b@mail.gmail.com>

It's for marking a term as being an alias of another term;  in theory;  but
last time I looked,  the implementation seemed kinda broken.

On 10/25/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
wrote:
>
> G'day,
>
> Is the term_group column actually used? Or is it provided for plugin
> use, future use, etc?
>
> I can't figure out how it would be used from the interface, and it's not
> used in any of the blogs that I've checked.
>
> Cheers,
>
>
> Callum.
>
> PS> This is curiosity more than anything!
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wordpress at santosj.name  Thu Oct 25 01:45:31 2007
From: wordpress at santosj.name (Jacob)
Date: Thu Oct 25 01:46:25 2007
Subject: [wp-hackers] Roles and Capabilities
In-Reply-To: <8b9d21f20710241216m5a86e20dj15fbd5ff2392542d@mail.gmail.com>
References: <8b9d21f20710241216m5a86e20dj15fbd5ff2392542d@mail.gmail.com>
Message-ID: <471FF53B.2030806@santosj.name>

Richard Brown wrote:
> Hi All
>
> I am building a site for multiple users. Each user will only have the
> ability to edit their own posts, pages, etc. But I will also be using
> a plugin to display images. Is it possible to use the roles and
> capabilities function to restrict each user to add, edit or delete
> their own images only please?
>
> I am beginning to think this is a place for MU. It is actually a
> website for a society who will change membership annually. What do
> others think?
>
> Thanks.
>   
Good Luck. From my experience, it might be better to use WPMu.

Jacob Santos

-- 

Jacob Santos

http://www.santosj.name - blog
http://wordpress.svn.dragonu.net/unittest/ - unofficial WP unit test suite.

Also known as darkdragon and santosj on WP trac.

From wordpress at santosj.name  Thu Oct 25 01:50:08 2007
From: wordpress at santosj.name (Jacob)
Date: Thu Oct 25 01:50:54 2007
Subject: [wp-hackers] E-mail address and SQL injection
In-Reply-To: <93C169D2-0D22-44D2-9D59-64656F973559@ftwr.co.uk>
References: <000501c8131d$3cffb730$0300a8c0@Toshiba>	<000c01c8132b$d86924f0$893b6ed0$@net>	<000701c8132c$b8ff3180$0300a8c0@Toshiba>	<000d01c8132e$1d21b1f0$576515d0$@net>	<000d01c8132f$c282ecd0$0300a8c0@Toshiba>	<f5422b30710200931uadfa075j575a7da7a0431940@mail.gmail.com>	<df41a9470710241308q390925ads355399a2a1118175@mail.gmail.com>
	<93C169D2-0D22-44D2-9D59-64656F973559@ftwr.co.uk>
Message-ID: <471FF650.7060404@santosj.name>

No, it in fact only just returns addslashes, as you can see from the 115 
returning addslashes and the comment saying to disable the rest because 
of some problems. It has been disabled for quite some time now. At least 
from my estimate since 2.2.

Jacob Santos

Peter Westwood wrote:
>
> On 24 Oct 2007, at 21:08, Abel Cheung wrote:
>
>> On 10/21/07, Rindisbacher Flurin <flurischt@gmail.com> wrote:
>>>> $wpdb->get_row("SELECT ID FROM $wpdb->users WHERE user_email='$author'
>>>> LIMIT 1");
>>>>
>>>> So this will be safe no matter what $author contains?
>>>
>>> This will be safe because in the line above $author is escaped.
>>> ($wpdb->escape())
>>
>> Yes, safe if charset is iso-8859-1, ascii, utf-8 or other 
>> non-multibyte charset.
>> For multibyte charsets accepting backslash and single quote as the 
>> second
>> byte, it is quite possible to perform SQL injection as escape() 
>> solely relies
>> on add_slashes() but not mysql_real_escape_string(), so inserting a 
>> character
>> where second byte is single quote may do it.
>
> $wpdb->escape uses mysql_real_escape_string() if available
>
> http://trac.wordpress.org/browser/trunk/wp-includes/wp-db.php#L112
>
> and has done for the past 2 years:
>
> http://trac.wordpress.org/changeset/2684
>
> westi


-- 

Jacob Santos

http://www.santosj.name - blog
http://wordpress.svn.dragonu.net/unittest/ - unofficial WP unit test suite.

Also known as darkdragon and santosj on WP trac.

From donncha at linux.ie  Thu Oct 25 07:27:34 2007
From: donncha at linux.ie (Donncha O Caoimh)
Date: Thu Oct 25 07:27:47 2007
Subject: [wp-hackers] WPMU Plugin management
In-Reply-To: <471FA603.7010704@yadan.net>
References: <4714A0E2.5000103@yadan.net>	<471F58A6.6020300@callum-macdonald.com>	<471F4D68.1010204@yadan.net>	<471F813E.3080300@linux.ie>
	<471FA603.7010704@yadan.net>
Message-ID: <47204566.2060009@linux.ie>

Yes, if you have disabled the plugins page, then a regular user, even 
the admin of a blog won't be able to activate a plugin.

Your own plugins page can check the sitemeta record to verify that a 
plugin has been allowed if a blog admin tries to activate it.

Donncha

Omry Yadan wrote:
> 
> is wpmu protected against users activating plugins through raw http
> requests?
> 
>
From wordpress at dd32.id.au  Thu Oct 25 09:46:31 2007
From: wordpress at dd32.id.au (DD32)
Date: Thu Oct 25 09:46:26 2007
Subject: [wp-hackers] Wordpres.com: category browsing
Message-ID: <op.t0qyrtnnk6w4mc@dd32.no-ip.com>

I'm not sure who to contact about this, So i've decided to hit Wp-hackers up(Since Wordpress.com support is "Temporarily Closed" -- and i'm not about to check  back every few hours to report a bug)

The links listed in the Categories are missing
eg:
http://news.wordpress.com/category/technology/
<a class="title" href="">the commercial that should have made me famous...</a>

Cheers,
D
From supporto at pixline.net  Thu Oct 25 11:07:03 2007
From: supporto at pixline.net (Pixline)
Date: Thu Oct 25 11:07:16 2007
Subject: [wp-hackers] WPMU cross-site categories & tagging
In-Reply-To: <471F72A1.7080209@gmail.com>
References: <471F594B.4040508@callum-macdonald.com>
	<471F5A09.5030806@ftwr.co.uk> <471F72A1.7080209@gmail.com>
Message-ID: <E8182C11-37B6-4DE2-9F0B-0EE772266F86@pixline.net>

Il giorno 24/ott/07, alle ore 18:28, Burobjorn ha scritto:
> Hi,
> I've written a tags plugin for wordpress mu and would love to share  
> it for all to use. I haven't had time to properly package it, but  
> you email will definately motivate me to do this asap :)

I'd love to test it in our brand new live environment, if you need  
so. Otherwise, I'll simply look forward to your release :-)

Bests,
Paolo



Paolo Tresso, Online Media consultant
-----------------------------------------------------
http://pixline.net		http://amisnet.org
http://www.linkedin.com/in/paolotresso

From wp-hackers at striderweb.com  Thu Oct 25 15:05:43 2007
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Oct 25 15:05:31 2007
Subject: [wp-hackers] iPhone testing
Message-ID: <59F33A2F-5C84-46D1-9B8A-2ABCF2CBD282@striderweb.com>

Here's a handy website for testing iPhone sites.  Sorry I didn't find  
this for y'all about a month ago... ;)

<http://www.testiphone.com/>

They say it works best with Safari.

Stephen
From viper at viper007bond.com  Thu Oct 25 23:48:20 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Thu Oct 25 23:48:28 2007
Subject: [wp-hackers] iPhone testing
In-Reply-To: <59F33A2F-5C84-46D1-9B8A-2ABCF2CBD282@striderweb.com>
References: <59F33A2F-5C84-46D1-9B8A-2ABCF2CBD282@striderweb.com>
Message-ID: <8f93a7390710251648i43dc7efft844b3b8c502053ee@mail.gmail.com>

Sweet!

It's not far from what I (since I'm on a PC) developed on (Stephane wrote
some PHP and an <iframe> which I would use combined with Safari), but the
additional container looking like the iPhone is pretty slick and does help
with the experience.

Thanks for the link. :D

On 10/25/07, Stephen Rider <wp-hackers@striderweb.com> wrote:
>
> Here's a handy website for testing iPhone sites.  Sorry I didn't find
> this for y'all about a month ago... ;)
>
> <http://www.testiphone.com/>
>
> They say it works best with Safari.
>
> Stephen
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From 0vcqn5q02 at sneakemail.com  Fri Oct 26 06:07:56 2007
From: 0vcqn5q02 at sneakemail.com (Bertrand)
Date: Fri Oct 26 06:08:33 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
Message-ID: <4721843C.2000701@sneakemail.com>

Anyone have any idea how to share cookies from WP to Mediawiki? I know 
there's lots of work out there to share db tables, but I don't want 
users to have to sign in twice.

The ideal would be that Mediawiki reads the cookies from WP, but I don't 
know how many side effects this would have.

B
From spencerp1 at gmail.com  Fri Oct 26 06:13:02 2007
From: spencerp1 at gmail.com (spencerp)
Date: Fri Oct 26 06:13:09 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4721843C.2000701@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>
Message-ID: <4721856E.1030101@gmail.com>

Bertrand wrote:
> Anyone have any idea how to share cookies from WP to Mediawiki? I know 
> there's lots of work out there to share db tables, but I don't want 
> users to have to sign in twice.
>
> The ideal would be that Mediawiki reads the cookies from WP, but I 
> don't know how many side effects this would have.
>
> B
http://comox.textdrive.com/pipermail/wiki-tech/2005-August/thread.html
http://lists.automattic.com/mailman/listinfo/wiki-tech
http://spencerp.net/id/43

However, I haven't tested it for the latest versions of MW and WP 
though. Something I have to do then.. But as far as I know.. That 
hack/integration don't work now.

--
spencerp
http://spencerp.net
http://www.vindictivebastard.net




From 0vcqn5q02 at sneakemail.com  Fri Oct 26 06:20:16 2007
From: 0vcqn5q02 at sneakemail.com (Sneaks)
Date: Fri Oct 26 06:21:25 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4721856E.1030101@gmail.com>
References: <4721843C.2000701@sneakemail.com> <4721856E.1030101@gmail.com>
Message-ID: <13188-79525@sneakemail.com>

these don't actually share cookies and sessions from what i can tell, do 
they? these just share the user tables, which still forces a user to 
login to each system separately.

or did i miss something?

B


>> Anyone have any idea how to share cookies from WP to Mediawiki? I know 
> http://comox.textdrive.com/pipermail/wiki-tech/2005-August/thread.html
> http://lists.automattic.com/mailman/listinfo/wiki-tech
> http://spencerp.net/id/43
> 
> However, I haven't tested it for the latest versions of MW and WP 
> though. Something I have to do then.. But as far as I know.. That 
> hack/integration don't work now.
> 
> -- 
> spencerp
> http://spencerp.net
> http://www.vindictivebastard.net
From spencerp1 at gmail.com  Fri Oct 26 06:51:06 2007
From: spencerp1 at gmail.com (spencerp)
Date: Fri Oct 26 06:51:15 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <13188-79525@sneakemail.com>
References: <4721843C.2000701@sneakemail.com> <4721856E.1030101@gmail.com>
	<13188-79525@sneakemail.com>
Message-ID: <47218E5A.5060909@gmail.com>

Sneaks wrote:
> these don't actually share cookies and sessions from what i can tell, 
> do they? these just share the user tables, which still forces a user 
> to login to each system separately.
>
> or did i miss something?
>
> B

Actually, that hack was to allow bbpress and wp to work together using 
user table. Sorry about that. The link for my site, was about all three 
of them. I had all three database tables in under one database. And as 
for MW and WP logins together.. it must work I guess, because 
wordpress.org and the codex logins still use same login requirements.. 
but I dunno about that either though... basically yeah, it uses same 
user table login informations.. as far as i know.. right guys?
>
>
>>> Anyone have any idea how to share cookies from WP to Mediawiki? I know 
>> http://comox.textdrive.com/pipermail/wiki-tech/2005-August/thread.html
>> http://lists.automattic.com/mailman/listinfo/wiki-tech
>> http://spencerp.net/id/43
>>
>> However, I haven't tested it for the latest versions of MW and WP 
>> though. Something I have to do then.. But as far as I know.. That 
>> hack/integration don't work now.
>>
>> -- 
>> spencerp
>> http://spencerp.net
>> http://www.vindictivebastard.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From computerguru at neosmart.net  Fri Oct 26 11:35:15 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Fri Oct 26 11:35:21 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <47218E5A.5060909@gmail.com>
References: <4721843C.2000701@sneakemail.com> <4721856E.1030101@gmail.com>
	<13188-79525@sneakemail.com> <47218E5A.5060909@gmail.com>
Message-ID: <4681c7d40710260435t24e45a0brb972d7f850b889cc@mail.gmail.com>

Unless someone at WordPress modified their system to share the same login
format :-)

On 10/26/07, spencerp <spencerp1@gmail.com> wrote:
>
> Sneaks wrote:
> > these don't actually share cookies and sessions from what i can tell,
> > do they? these just share the user tables, which still forces a user
> > to login to each system separately.
> >
> > or did i miss something?
> >
> > B
>
> Actually, that hack was to allow bbpress and wp to work together using
> user table. Sorry about that. The link for my site, was about all three
> of them. I had all three database tables in under one database. And as
> for MW and WP logins together.. it must work I guess, because
> wordpress.org and the codex logins still use same login requirements..
> but I dunno about that either though... basically yeah, it uses same
> user table login informations.. as far as i know.. right guys?
> >
> >
> >>> Anyone have any idea how to share cookies from WP to Mediawiki? I know
> >> http://comox.textdrive.com/pipermail/wiki-tech/2005-August/thread.html
> >> http://lists.automattic.com/mailman/listinfo/wiki-tech
> >> http://spencerp.net/id/43
> >>
> >> However, I haven't tested it for the latest versions of MW and WP
> >> though. Something I have to do then.. But as far as I know.. That
> >> hack/integration don't work now.
> >>
> >> --
> >> spencerp
> >> http://spencerp.net
> >> http://www.vindictivebastard.net
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From wordpress at tekartist.org  Fri Oct 26 13:37:00 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Fri Oct 26 13:37:16 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4681c7d40710260435t24e45a0brb972d7f850b889cc@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com> <4721856E.1030101@gmail.com>
	<13188-79525@sneakemail.com> <47218E5A.5060909@gmail.com>
	<4681c7d40710260435t24e45a0brb972d7f850b889cc@mail.gmail.com>
Message-ID: <63B39CAD-2908-43EB-B3E0-141546B9A289@tekartist.org>


Depending on the type of community you are serving, you could also  
consider doing it *the right way* and use OpenID or LDAP, which both  
projects support with the appropriate plugins.

That's only really viable if you have a closed community, not the  
general public, but I thought I'd mention it.

Stephane




On Oct 26, 2007, at 7:35, Computer Guru wrote:

> Unless someone at WordPress modified their system to share the same  
> login
> format :-)
>
> On 10/26/07, spencerp <spencerp1@gmail.com> wrote:
>>
>> Sneaks wrote:
>>> these don't actually share cookies and sessions from what i can  
>>> tell,
>>> do they? these just share the user tables, which still forces a user
>>> to login to each system separately.
>>>
>>> or did i miss something?
>>>
>>> B
>>
>> Actually, that hack was to allow bbpress and wp to work together  
>> using
>> user table. Sorry about that. The link for my site, was about all  
>> three
>> of them. I had all three database tables in under one database.  
>> And as
>> for MW and WP logins together.. it must work I guess, because
>> wordpress.org and the codex logins still use same login  
>> requirements..
>> but I dunno about that either though... basically yeah, it uses same
>> user table login informations.. as far as i know.. right guys?
>>>
>>>
>>>>> Anyone have any idea how to share cookies from WP to Mediawiki?  
>>>>> I know
>>>> http://comox.textdrive.com/pipermail/wiki-tech/2005-August/ 
>>>> thread.html
>>>> http://lists.automattic.com/mailman/listinfo/wiki-tech
>>>> http://spencerp.net/id/43
>>>>
>>>> However, I haven't tested it for the latest versions of MW and WP
>>>> though. Something I have to do then.. But as far as I know.. That
>>>> hack/integration don't work now.
>>>>
>>>> --
>>>> spencerp
>>>> http://spencerp.net
>>>> http://www.vindictivebastard.net
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> -- 
> Computer Guru
> Director,
> NeoSmart Technologies
> http://neosmart.net/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From computerguru at neosmart.net  Fri Oct 26 14:25:00 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Fri Oct 26 14:25:07 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <63B39CAD-2908-43EB-B3E0-141546B9A289@tekartist.org>
References: <4721843C.2000701@sneakemail.com> <4721856E.1030101@gmail.com>
	<13188-79525@sneakemail.com> <47218E5A.5060909@gmail.com>
	<4681c7d40710260435t24e45a0brb972d7f850b889cc@mail.gmail.com>
	<63B39CAD-2908-43EB-B3E0-141546B9A289@tekartist.org>
Message-ID: <4681c7d40710260725w5d20a353lbc44d8e01deed050@mail.gmail.com>

On 10/26/07, Stephane Daury <wordpress@tekartist.org> wrote:
>
>
> Depending on the type of community you are serving, you could also
> consider doing it *the right way* and use OpenID or LDAP, which both
> projects support with the appropriate plugins.
>
> That's only really viable if you have a closed community, not the
> general public, but I thought I'd mention it.
>
>
How is that? I know some huge (top 50) sites that run their entire database
under an LDAP implementation, open to the public...

-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From lists.automattic.com at callum-macdonald.com  Fri Oct 26 14:55:54 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Fri Oct 26 14:56:05 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4721843C.2000701@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>
Message-ID: <4721FFFA.1070602@callum-macdonald.com>

Logging a user into WP via the cookie is relatively simple. Check out 
pluggable.php for the wp_setcookie() function.

Two cookies handle the login:
wordpressuser_MD5OFSITEURL
wordpresspass_MD5OFSITEURL

The user cookie takes the username in plain text, the pass takes a 
double md5 of the password (just md5 what's in the user db).

We're integrating WPMU login with another system, so we're writing our 
users to the wp user db then setting the cookies for WP. WP doesn't 
handle any login or logout functions.

Cheers - Callum.

[1] 
http://trac.wordpress.org/browser/trunk/wp-includes/pluggable.php?rev=6291#L458

Bertrand wrote:
> Anyone have any idea how to share cookies from WP to Mediawiki? I know 
> there's lots of work out there to share db tables, but I don't want 
> users to have to sign in twice.
>
> The ideal would be that Mediawiki reads the cookies from WP, but I 
> don't know how many side effects this would have.
>
> B
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>

From wordpress at tekartist.org  Fri Oct 26 15:05:13 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Fri Oct 26 15:05:31 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4681c7d40710260725w5d20a353lbc44d8e01deed050@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com> <4721856E.1030101@gmail.com>
	<13188-79525@sneakemail.com> <47218E5A.5060909@gmail.com>
	<4681c7d40710260435t24e45a0brb972d7f850b889cc@mail.gmail.com>
	<63B39CAD-2908-43EB-B3E0-141546B9A289@tekartist.org>
	<4681c7d40710260725w5d20a353lbc44d8e01deed050@mail.gmail.com>
Message-ID: <DD2CCF5F-A919-4E1F-80B6-25998B2BDFA9@tekartist.org>


On Oct 26, 2007, at 10:25, Computer Guru wrote:

> On 10/26/07, Stephane Daury <wordpress@tekartist.org> wrote:
>>
>>
>> Depending on the type of community you are serving, you could also
>> consider doing it *the right way* and use OpenID or LDAP, which both
>> projects support with the appropriate plugins.
>>
>> That's only really viable if you have a closed community, not the
>> general public, but I thought I'd mention it.
>>
>>
> How is that? I know some huge (top 50) sites that run their entire  
> database
> under an LDAP implementation, open to the public...

That's very cool to know actually.

I was just putting the reserve because it might have been seen as too  
elaborate of a solution for a small to medium site, since it would  
also then involve having to setup an integrated registration  
solution. Not impossible by any means, but I'm just not aware of  
anything automated.

S.
From lists.automattic.com at callum-macdonald.com  Fri Oct 26 17:17:38 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Fri Oct 26 17:19:26 2007
Subject: [wp-hackers] The term_group column
In-Reply-To: <6e966a280710241433o4d59fc9ax8cd6547976ef3c4b@mail.gmail.com>
References: <471FB785.7020707@callum-macdonald.com>
	<6e966a280710241433o4d59fc9ax8cd6547976ef3c4b@mail.gmail.com>
Message-ID: <47222132.9010006@callum-macdonald.com>

So what value would be set in term_group? If term 8 is an alias of term 
6, does term 8's term_group = 6? What about term 6, does it's term_group 
show 0?

Cheers - Callum.

Christine Davis wrote:
> It's for marking a term as being an alias of another term;  in theory;  but
> last time I looked,  the implementation seemed kinda broken.
>
> On 10/25/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
> wrote:
>   
>> G'day,
>>
>> Is the term_group column actually used? Or is it provided for plugin
>> use, future use, etc?
>>
>> I can't figure out how it would be used from the interface, and it's not
>> used in any of the blogs that I've checked.
>>
>> Cheers,
>>
>>
>> Callum.
>>
>> PS> This is curiosity more than anything!
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>   

From computerguru at neosmart.net  Fri Oct 26 18:17:56 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Fri Oct 26 18:18:04 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <DD2CCF5F-A919-4E1F-80B6-25998B2BDFA9@tekartist.org>
References: <4721843C.2000701@sneakemail.com> <4721856E.1030101@gmail.com>
	<13188-79525@sneakemail.com> <47218E5A.5060909@gmail.com>
	<4681c7d40710260435t24e45a0brb972d7f850b889cc@mail.gmail.com>
	<63B39CAD-2908-43EB-B3E0-141546B9A289@tekartist.org>
	<4681c7d40710260725w5d20a353lbc44d8e01deed050@mail.gmail.com>
	<DD2CCF5F-A919-4E1F-80B6-25998B2BDFA9@tekartist.org>
Message-ID: <4681c7d40710261117h6ad01e82h7c719174a00511ef@mail.gmail.com>

Yeah that's the biggest problem with LDAP - the code I've seen is all
home-brew... but nothing too complicated (especially if your using something
that is easy to integrate with the shell/OS like either Perl for scripting
or ISAPI for libraries).

That's another benefit of OpenID, IMHO: there are enough free libraries out
there in almost all languages if you'd like to host your own OpenID
authentication server. Plus, OpenID can be invisible with people logging in
to it not even knowing they're using an OpenID implementation in the first
place if you host your own.

On 10/26/07, Stephane Daury <wordpress@tekartist.org> wrote:
>
>
> On Oct 26, 2007, at 10:25, Computer Guru wrote:
>
> > On 10/26/07, Stephane Daury <wordpress@tekartist.org> wrote:
> >>
> >>
> >> Depending on the type of community you are serving, you could also
> >> consider doing it *the right way* and use OpenID or LDAP, which both
> >> projects support with the appropriate plugins.
> >>
> >> That's only really viable if you have a closed community, not the
> >> general public, but I thought I'd mention it.
> >>
> >>
> > How is that? I know some huge (top 50) sites that run their entire
> > database
> > under an LDAP implementation, open to the public...
>
> That's very cool to know actually.
>
> I was just putting the reserve because it might have been seen as too
> elaborate of a solution for a small to medium site, since it would
> also then involve having to setup an integrated registration
> solution. Not impossible by any means, but I'm just not aware of
> anything automated.
>
> S.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From 0vcqn5q02 at sneakemail.com  Fri Oct 26 19:32:44 2007
From: 0vcqn5q02 at sneakemail.com (Sneaks)
Date: Fri Oct 26 19:33:18 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4721FFFA.1070602@callum-macdonald.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com>
Message-ID: <32690-99368@sneakemail.com>

thats an interesting idea. i suppose i could hook into the wp cookie 
functions and set the mediawiki authentication cookies.

last night i was playing around and set WP's cookie root to /, and was 
using:

include($_SERVER[DOCUMENT_ROOT]."/blog/wp-blog-header.php");
auth_redirect();
wp_get_current_user();

in a mediawiki auth plugin. i think that direction would also work, but 
i'm worried about the lack of user data in the mediawiki db.





Callum Macdonald lists.automattic.com-at-callum-macdonald.com 
|wordpress| wrote:
> Logging a user into WP via the cookie is relatively simple. Check out 
> pluggable.php for the wp_setcookie() function.
> 
> Two cookies handle the login:
> wordpressuser_MD5OFSITEURL
> wordpresspass_MD5OFSITEURL
> 
> The user cookie takes the username in plain text, the pass takes a 
> double md5 of the password (just md5 what's in the user db).
> 
> We're integrating WPMU login with another system, so we're writing our 
> users to the wp user db then setting the cookies for WP. WP doesn't 
> handle any login or logout functions.
> 
> Cheers - Callum.
> 
> [1] 
> http://trac.wordpress.org/browser/trunk/wp-includes/pluggable.php?rev=6291#L458 
> 
> 
> Bertrand wrote:
>> Anyone have any idea how to share cookies from WP to Mediawiki? I know 
>> there's lots of work out there to share db tables, but I don't want 
>> users to have to sign in twice.
>>
>> The ideal would be that Mediawiki reads the cookies from WP, but I 
>> don't know how many side effects this would have.
>>
>> B
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From 0vcqn5q02 at sneakemail.com  Fri Oct 26 19:35:02 2007
From: 0vcqn5q02 at sneakemail.com (Sneaks)
Date: Fri Oct 26 19:35:36 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4681c7d40710261117h6ad01e82h7c719174a00511ef@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>
	<4721856E.1030101@gmail.com>	<13188-79525@sneakemail.com>
	<47218E5A.5060909@gmail.com>	<4681c7d40710260435t24e45a0brb972d7f850b889cc@mail.gmail.com>	<63B39CAD-2908-43EB-B3E0-141546B9A289@tekartist.org>	<4681c7d40710260725w5d20a353lbc44d8e01deed050@mail.gmail.com>	<DD2CCF5F-A919-4E1F-80B6-25998B2BDFA9@tekartist.org>
	<4681c7d40710261117h6ad01e82h7c719174a00511ef@mail.gmail.com>
Message-ID: <28280-57584@sneakemail.com>

OpenID and LDAP would still require a user to login to each system (WP 
and Mediawiki). And Integrating two databases is pretty easy.

I'm trying to get something different-- one actual login to start a 
session in both systems. one logout to stop the session in both systems. 
I'd need to read and/or set cookies for this.




> Yeah that's the biggest problem with LDAP - the code I've seen is all
> home-brew... but nothing too complicated (especially if your using something
> that is easy to integrate with the shell/OS like either Perl for scripting
> or ISAPI for libraries).
> 
> That's another benefit of OpenID, IMHO: there are enough free libraries out
> there in almost all languages if you'd like to host your own OpenID
> authentication server. Plus, OpenID can be invisible with people logging in
> to it not even knowing they're using an OpenID implementation in the first
> place if you host your own.
> 
> On 10/26/07, Stephane Daury <wordpress@tekartist.org> wrote:
>>
>> On Oct 26, 2007, at 10:25, Computer Guru wrote:
>>
>>> On 10/26/07, Stephane Daury <wordpress@tekartist.org> wrote:
>>>>
>>>> Depending on the type of community you are serving, you could also
>>>> consider doing it *the right way* and use OpenID or LDAP, which both
>>>> projects support with the appropriate plugins.
>>>>
>>>> That's only really viable if you have a closed community, not the
>>>> general public, but I thought I'd mention it.
>>>>
>>>>
>>> How is that? I know some huge (top 50) sites that run their entire
>>> database
>>> under an LDAP implementation, open to the public...
>> That's very cool to know actually.
>>
>> I was just putting the reserve because it might have been seen as too
>> elaborate of a solution for a small to medium site, since it would
>> also then involve having to setup an integrated registration
>> solution. Not impossible by any means, but I'm just not aware of
>> anything automated.
>>
>> S.

From lists.automattic.com at callum-macdonald.com  Fri Oct 26 20:22:54 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Fri Oct 26 20:23:03 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <32690-99368@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>
Message-ID: <47224C9E.3020306@callum-macdonald.com>

We're doing it the other way, creating the users in our own system (in 
this example MediaWiki) and then creating the WordPress cookies. I'm not 
sure how MediaWiki works, but with WordPress if you insert the rows into 
the user table and create the cookies, the user never has to log in. 
WordPress handles it all on the fly.

So if you can redirect all WordPress logins to MediaWiki logins, then 
you create the MediaWiki and WP cookies and redirect back, you're in 
business.

Ok, I just checked with MediaWiki version 1.11.0 and it requires an auth 
token to be updated in the user table and set in the cookie. For that 
reason, I'd suggest using MediaWiki's login, copy the data to WordPress, 
and then set the WordPress cookies. WP will do the rest.

I think MediaWiki's approach is intrinsically more secure than WP's, but 
that's a topic for another day / thread! :)

Cheers - Callum.

Sneaks wrote:
> thats an interesting idea. i suppose i could hook into the wp cookie 
> functions and set the mediawiki authentication cookies.
>
> last night i was playing around and set WP's cookie root to /, and was 
> using:
>
> include($_SERVER[DOCUMENT_ROOT]."/blog/wp-blog-header.php");
> auth_redirect();
> wp_get_current_user();
>
> in a mediawiki auth plugin. i think that direction would also work, 
> but i'm worried about the lack of user data in the mediawiki db.
>
>
>
>
>
> Callum Macdonald lists.automattic.com-at-callum-macdonald.com 
> |wordpress| wrote:
>> Logging a user into WP via the cookie is relatively simple. Check out 
>> pluggable.php for the wp_setcookie() function.
>>
>> Two cookies handle the login:
>> wordpressuser_MD5OFSITEURL
>> wordpresspass_MD5OFSITEURL
>>
>> The user cookie takes the username in plain text, the pass takes a 
>> double md5 of the password (just md5 what's in the user db).
>>
>> We're integrating WPMU login with another system, so we're writing 
>> our users to the wp user db then setting the cookies for WP. WP 
>> doesn't handle any login or logout functions.
>>
>> Cheers - Callum.
>>
>> [1] 
>> http://trac.wordpress.org/browser/trunk/wp-includes/pluggable.php?rev=6291#L458 
>>
>>
>> Bertrand wrote:
>>> Anyone have any idea how to share cookies from WP to Mediawiki? I 
>>> know there's lots of work out there to share db tables, but I don't 
>>> want users to have to sign in twice.
>>>
>>> The ideal would be that Mediawiki reads the cookies from WP, but I 
>>> don't know how many side effects this would have.
>>>
>>> B
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>

From christine at neato.co.nz  Fri Oct 26 20:43:48 2007
From: christine at neato.co.nz (Christine Davis)
Date: Fri Oct 26 20:43:55 2007
Subject: [wp-hackers] The term_group column
In-Reply-To: <47222132.9010006@callum-macdonald.com>
References: <471FB785.7020707@callum-macdonald.com>
	<6e966a280710241433o4d59fc9ax8cd6547976ef3c4b@mail.gmail.com>
	<47222132.9010006@callum-macdonald.com>
Message-ID: <6e966a280710261343i7b2e48adh3da09a9207616aa6@mail.gmail.com>

Looking at the code,  if term 8 is an alias of term 6;  then the term_group
for both term 6 and term 8 is the next term_group incrementally.

(So if there were three term groups in use;  term 6 and term 8 would have a
term group of 4.)

Roughly speaking,  it's not so much an alias (In so far as there is no
primary term) as it is setting terms to be in a group together.

-Ch.

On 10/27/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
wrote:
>
> So what value would be set in term_group? If term 8 is an alias of term
> 6, does term 8's term_group = 6? What about term 6, does it's term_group
> show 0?
>
> Cheers - Callum.
>
> Christine Davis wrote:
> > It's for marking a term as being an alias of another term;  in
> theory;  but
> > last time I looked,  the implementation seemed kinda broken.
> >
> > On 10/25/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com
> >
> > wrote:
> >
> >> G'day,
> >>
> >> Is the term_group column actually used? Or is it provided for plugin
> >> use, future use, etc?
> >>
> >> I can't figure out how it would be used from the interface, and it's
> not
> >> used in any of the blogs that I've checked.
> >>
> >> Cheers,
> >>
> >>
> >> Callum.
> >>
> >> PS> This is curiosity more than anything!
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> >
> >
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From lists.automattic.com at callum-macdonald.com  Fri Oct 26 21:08:37 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Fri Oct 26 21:08:47 2007
Subject: [wp-hackers] The term_group column
In-Reply-To: <6e966a280710261343i7b2e48adh3da09a9207616aa6@mail.gmail.com>
References: <471FB785.7020707@callum-macdonald.com>	<6e966a280710241433o4d59fc9ax8cd6547976ef3c4b@mail.gmail.com>	<47222132.9010006@callum-macdonald.com>
	<6e966a280710261343i7b2e48adh3da09a9207616aa6@mail.gmail.com>
Message-ID: <47225755.30106@callum-macdonald.com>

Would that not require another table, term_groups to link them together? 
It seems a little weird to me. Maybe I need to look at the code again... 
- C.

Christine Davis wrote:
> Looking at the code,  if term 8 is an alias of term 6;  then the term_group
> for both term 6 and term 8 is the next term_group incrementally.
>
> (So if there were three term groups in use;  term 6 and term 8 would have a
> term group of 4.)
>
> Roughly speaking,  it's not so much an alias (In so far as there is no
> primary term) as it is setting terms to be in a group together.
>
> -Ch.
>
> On 10/27/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
> wrote:
>   
>> So what value would be set in term_group? If term 8 is an alias of term
>> 6, does term 8's term_group = 6? What about term 6, does it's term_group
>> show 0?
>>
>> Cheers - Callum.
>>
>> Christine Davis wrote:
>>     
>>> It's for marking a term as being an alias of another term;  in
>>>       
>> theory;  but
>>     
>>> last time I looked,  the implementation seemed kinda broken.
>>>
>>> On 10/25/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com
>>>
>>> wrote:
>>>
>>>       
>>>> G'day,
>>>>
>>>> Is the term_group column actually used? Or is it provided for plugin
>>>> use, future use, etc?
>>>>
>>>> I can't figure out how it would be used from the interface, and it's
>>>>         
>> not
>>     
>>>> used in any of the blogs that I've checked.
>>>>
>>>> Cheers,
>>>>
>>>>
>>>> Callum.
>>>>
>>>> PS> This is curiosity more than anything!
>>>>
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>>>         
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>>
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>   

From christine at neato.co.nz  Fri Oct 26 22:13:17 2007
From: christine at neato.co.nz (Christine Davis)
Date: Fri Oct 26 22:13:23 2007
Subject: [wp-hackers] The term_group column
In-Reply-To: <47225755.30106@callum-macdonald.com>
References: <471FB785.7020707@callum-macdonald.com>
	<6e966a280710241433o4d59fc9ax8cd6547976ef3c4b@mail.gmail.com>
	<47222132.9010006@callum-macdonald.com>
	<6e966a280710261343i7b2e48adh3da09a9207616aa6@mail.gmail.com>
	<47225755.30106@callum-macdonald.com>
Message-ID: <6e966a280710261513o5b4e5f39o11b05daed57b9c00@mail.gmail.com>

Term groups kinda just float in space.  I find that column and its
functionality to be perplexing.

*cough*

It sure would be nice if a core-dev or some such could shed some light on
how it was intended to be used/what it was included to be used for;  because
that sure would help my (our?) understanding.

-Ch.

On 10/27/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
wrote:
>
> Would that not require another table, term_groups to link them together?
> It seems a little weird to me. Maybe I need to look at the code again...
> - C.
>
> Christine Davis wrote:
> > Looking at the code,  if term 8 is an alias of term 6;  then the
> term_group
> > for both term 6 and term 8 is the next term_group incrementally.
> >
> > (So if there were three term groups in use;  term 6 and term 8 would
> have a
> > term group of 4.)
> >
> > Roughly speaking,  it's not so much an alias (In so far as there is no
> > primary term) as it is setting terms to be in a group together.
> >
> > -Ch.
> >
> > On 10/27/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com
> >
> > wrote:
> >
> >> So what value would be set in term_group? If term 8 is an alias of term
> >> 6, does term 8's term_group = 6? What about term 6, does it's
> term_group
> >> show 0?
> >>
> >> Cheers - Callum.
> >>
> >> Christine Davis wrote:
> >>
> >>> It's for marking a term as being an alias of another term;  in
> >>>
> >> theory;  but
> >>
> >>> last time I looked,  the implementation seemed kinda broken.
> >>>
> >>> On 10/25/07, Callum Macdonald <
> lists.automattic.com@callum-macdonald.com
> >>>
> >>> wrote:
> >>>
> >>>
> >>>> G'day,
> >>>>
> >>>> Is the term_group column actually used? Or is it provided for plugin
> >>>> use, future use, etc?
> >>>>
> >>>> I can't figure out how it would be used from the interface, and it's
> >>>>
> >> not
> >>
> >>>> used in any of the blogs that I've checked.
> >>>>
> >>>> Cheers,
> >>>>
> >>>>
> >>>> Callum.
> >>>>
> >>>> PS> This is curiosity more than anything!
> >>>>
> >>>> _______________________________________________
> >>>> wp-hackers mailing list
> >>>> wp-hackers@lists.automattic.com
> >>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>>
> >>>>
> >>>>
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers@lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >>>
> >>>
> >>>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> >
> >
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From 0vcqn5q02 at sneakemail.com  Fri Oct 26 22:26:24 2007
From: 0vcqn5q02 at sneakemail.com (Sneaks)
Date: Fri Oct 26 22:26:55 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <47224C9E.3020306@callum-macdonald.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com>
Message-ID: <11997-68898@sneakemail.com>

thanks Callum, you've been more useful than Google!

i think i'd prefer to leave the master set on WP if nothing more than 
because the UI to manage users is much better.

i'm actually trying to tie in three different systems for a cancer 
non-profit: WP, Mediawiki and Vanilla (forum software). i just assumed 
nobody would have any Vanilla experience :)




> We're doing it the other way, creating the users in our own system (in 
> this example MediaWiki) and then creating the WordPress cookies. I'm not 
> sure how MediaWiki works, but with WordPress if you insert the rows into 
> the user table and create the cookies, the user never has to log in. 
> WordPress handles it all on the fly
> 
> So if you can redirect all WordPress logins to MediaWiki logins, then 
> you create the MediaWiki and WP cookies and redirect back, you're in 
> business.
> 
> Ok, I just checked with MediaWiki version 1.11.0 and it requires an auth 
> token to be updated in the user table and set in the cookie. For that 
> reason, I'd suggest using MediaWiki's login, copy the data to WordPress, 
> and then set the WordPress cookies. WP will do the rest.
> 
> I think MediaWiki's approach is intrinsically more secure than WP's, but 
> that's a topic for another day / thread! :)
> 
> Cheers - Callum.
> 
> Sneaks wrote:
>> thats an interesting idea. i suppose i could hook into the wp cookie 
>> functions and set the mediawiki authentication cookies.
>>
>> last night i was playing around and set WP's cookie root to /, and was 
>> using:
>>
>> include($_SERVER[DOCUMENT_ROOT]."/blog/wp-blog-header.php");
>> auth_redirect();
>> wp_get_current_user();
>>
>> in a mediawiki auth plugin. i think that direction would also work, 
>> but i'm worried about the lack of user data in the mediawiki db.
>>
>>
>>
>>
>>
>> Callum Macdonald lists.automattic.com-at-callum-macdonald.com 
>> |wordpress| wrote:
>>> Logging a user into WP via the cookie is relatively simple. Check out 
>>> pluggable.php for the wp_setcookie() function.
>>>
>>> Two cookies handle the login:
>>> wordpressuser_MD5OFSITEURL
>>> wordpresspass_MD5OFSITEURL
>>>
>>> The user cookie takes the username in plain text, the pass takes a 
>>> double md5 of the password (just md5 what's in the user db).
>>>
>>> We're integrating WPMU login with another system, so we're writing 
>>> our users to the wp user db then setting the cookies for WP. WP 
>>> doesn't handle any login or logout functions.
>>>
>>> Cheers - Callum.
>>>
>>> [1] 
>>> http://trac.wordpress.org/browser/trunk/wp-includes/pluggable.php?rev=6291#L458 
>>>
>>>
>>> Bertrand wrote:
>>>> Anyone have any idea how to share cookies from WP to Mediawiki? I 
>>>> know there's lots of work out there to share db tables, but I don't 
>>>> want users to have to sign in twice.
>>>>
>>>> The ideal would be that Mediawiki reads the cookies from WP, but I 
>>>> don't know how many side effects this would have.
>>>>
>>>> B
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From speedboxer at gmail.com  Fri Oct 26 23:40:50 2007
From: speedboxer at gmail.com (Matt)
Date: Fri Oct 26 23:41:00 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4721843C.2000701@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>
Message-ID: <b88434820710261640q751c9e74s7d1ed998db9b1390@mail.gmail.com>

Wouldn't the easiest way to do it would be to create your own register,
login and logout? Then, when the user registers, the data gets entered into
both the WP DB and the MW DB and when the user logins 2 cookies are set.
WordPress and MediaWiki would still work fine, and you'd still be able to
upgrade them easily.

-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From wordpress at santosj.name  Sat Oct 27 00:00:50 2007
From: wordpress at santosj.name (Jacob)
Date: Sat Oct 27 00:01:34 2007
Subject: [wp-hackers] The term_group column
In-Reply-To: <6e966a280710261513o5b4e5f39o11b05daed57b9c00@mail.gmail.com>
References: <471FB785.7020707@callum-macdonald.com>	<6e966a280710241433o4d59fc9ax8cd6547976ef3c4b@mail.gmail.com>	<47222132.9010006@callum-macdonald.com>	<6e966a280710261343i7b2e48adh3da09a9207616aa6@mail.gmail.com>	<47225755.30106@callum-macdonald.com>
	<6e966a280710261513o5b4e5f39o11b05daed57b9c00@mail.gmail.com>
Message-ID: <47227FB2.3020905@santosj.name>

I agree. Writing the documentation for the taxonomy relationship 
functions was difficult as I had no idea WTF the code was supposed to be 
doing? Going off the names didn't seem to make sense of the matter 
either. Without more context, I'm unsure how such relationships were to 
be used. I'm sure that at some point I'll have to check through and 
track through the code for some of them and see what the other taxonomy 
functions use the relationship functions.

It is perhaps in another section altogether. The dependencies in each 
function aren't so much that it back tracking manually would be 
difficult. It would give context, but that is a huge undertaking. 
Without looking at the admin functions, it would be worth the effort if 
someone else looked over the documentation to inform me if I'm wrong.

I'm about finished with the taxonomy.php documentation and I suppose 
I'll need to look more into this to make sure I get it correct now. Once 
I'm done with that file, I'm never going back to it. I'm not going to 
lie and say it is baby or something, I'm not mad as to torture myself 
more than I need to with writing documentation.

If anyone can explain the matter better, it would be extremely helpful.



Christine Davis wrote:
> Term groups kinda just float in space.  I find that column and its
> functionality to be perplexing.
>
> *cough*
>
> It sure would be nice if a core-dev or some such could shed some light on
> how it was intended to be used/what it was included to be used for;  because
> that sure would help my (our?) understanding.
>
> -Ch.
>
> On 10/27/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
> wrote:
>   
>> Would that not require another table, term_groups to link them together?
>> It seems a little weird to me. Maybe I need to look at the code again...
>> - C.
>>
>> Christine Davis wrote:
>>     
>>> Looking at the code,  if term 8 is an alias of term 6;  then the
>>>       
>> term_group
>>     
>>> for both term 6 and term 8 is the next term_group incrementally.
>>>
>>> (So if there were three term groups in use;  term 6 and term 8 would
>>>       
>> have a
>>     
>>> term group of 4.)
>>>
>>> Roughly speaking,  it's not so much an alias (In so far as there is no
>>> primary term) as it is setting terms to be in a group together.
>>>
>>> -Ch.
>>>
>>> On 10/27/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com
>>>
>>> wrote:
>>>
>>>       
>>>> So what value would be set in term_group? If term 8 is an alias of term
>>>> 6, does term 8's term_group = 6? What about term 6, does it's
>>>>         
>> term_group
>>     
>>>> show 0?
>>>>
>>>> Cheers - Callum.
>>>>
>>>> Christine Davis wrote:
>>>>
>>>>         
>>>>> It's for marking a term as being an alias of another term;  in
>>>>>
>>>>>           
>>>> theory;  but
>>>>
>>>>         
>>>>> last time I looked,  the implementation seemed kinda broken.
>>>>>
>>>>> On 10/25/07, Callum Macdonald <
>>>>>           
>> lists.automattic.com@callum-macdonald.com
>>     
>>>>> wrote:
>>>>>
>>>>>
>>>>>           
>>>>>> G'day,
>>>>>>
>>>>>> Is the term_group column actually used? Or is it provided for plugin
>>>>>> use, future use, etc?
>>>>>>
>>>>>> I can't figure out how it would be used from the interface, and it's
>>>>>>
>>>>>>             
>>>> not
>>>>
>>>>         
>>>>>> used in any of the blogs that I've checked.
>>>>>>
>>>>>> Cheers,
>>>>>>
>>>>>>
>>>>>> Callum.
>>>>>>
>>>>>> PS> This is curiosity more than anything!
>>>>>>
>>>>>> _______________________________________________
>>>>>> wp-hackers mailing list
>>>>>> wp-hackers@lists.automattic.com
>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>>
>>>>>>
>>>>>>
>>>>>>             
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers@lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>           
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>>>         
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>>
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   


-- 

Jacob Santos

http://www.santosj.name - blog
http://wordpress.svn.dragonu.net/unittest/ - unofficial WP unit test suite.

Also known as darkdragon and santosj on WP trac.

From 0vcqn5q02 at sneakemail.com  Sat Oct 27 00:07:04 2007
From: 0vcqn5q02 at sneakemail.com (Sneaks)
Date: Sat Oct 27 00:07:36 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <b88434820710261640q751c9e74s7d1ed998db9b1390@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>
	<b88434820710261640q751c9e74s7d1ed998db9b1390@mail.gmail.com>
Message-ID: <21905-74033@sneakemail.com>

Why would that be easier than hooking into an existing system?


Matt speedboxer-at-gmail.com |wordpress| wrote:
> Wouldn't the easiest way to do it would be to create your own register,
> login and logout? Then, when the user registers, the data gets entered into
> both the WP DB and the MW DB and when the user logins 2 cookies are set.
> WordPress and MediaWiki would still work fine, and you'd still be able to
> upgrade them easily.
> 

From spencerp1 at gmail.com  Sat Oct 27 00:08:55 2007
From: spencerp1 at gmail.com (spencerp)
Date: Sat Oct 27 00:09:01 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <b88434820710261640q751c9e74s7d1ed998db9b1390@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>
	<b88434820710261640q751c9e74s7d1ed998db9b1390@mail.gmail.com>
Message-ID: <47228197.1080103@gmail.com>

Matt wrote:
> Wouldn't the easiest way to do it would be to create your own register,
> login and logout? Then, when the user registers, the data gets entered into
> both the WP DB and the MW DB and when the user logins 2 cookies are set.
> WordPress and MediaWiki would still work fine, and you'd still be able to
> upgrade them easily.
Wow, I just re-read my last reply email, boy was I half asleep when I 
wrote it LOL! This would be nice to try. However, when I wrote up my 
article about integrating the three (bbpress, mediawiki, and wordpress). 
MW went and did alot of changes to their files and so forth, basically 
making that "hack" useless at the time.

What I did first was, applied the bbpress and wordpress integration/ 
login hack:
http://bbpress.org/forums/topic/249?replies=4

Then applied this one:
http://codex.wordpress.org/User:RobLa/bbPress_Auth_for_MediaWiki

With some modifications from here:
http://comox.textdrive.com/pipermail/wiki-tech/2005-August/000028.html

Enabling people to login to my MediaWiki with the usernames and 
passwords from either my WordPress blog, or the forums.. However, it 
wouldn't let people register on my MW without it spitting an error.

So for MW I just edited alot of files creating a custom register link in 
the sidebar, which pointed to my WordPress login page and one to the 
register page. Then even on the registration page on my MW, I had a 
message there for users to sign up through my WP first.

As far as I know, someone said that AuthPress.php plugin wasn't 
available for download anymore? If that's the case, I found a copy of 
the one I was using from before, it can be grabbed here:
http://spencerp.net/downloads/AuthPress.php.txt

There's alot of things that were changed though with MW. Hence the 
reason WP.org didn't upgrade their Codex to the last MW. Because if they 
did, it would be nothing but headaches. You COULD just grab an older 
version of MW, and apply those login hacks though. I know it's nice to 
have the latest versions of everything, or even the bleeding edge. But 
until something is revamped for later copies of things, it's about the 
only thing you can do right now. Unless someone out there is willing to 
take this challenge on...

Like Matt said above there, that would be a nice thing to try once, but 
I sure as heck wouldn't be able to help with the database query coding 
and so forth. Someone with more database knowledge would have to attempt 
this one... :P Anyone up for the challenge? HahaHA! :P

--
spencerp
http://spencerp.net
http://www.vindictivebastard.net
From christine at neato.co.nz  Sat Oct 27 00:09:28 2007
From: christine at neato.co.nz (Christine Davis)
Date: Sat Oct 27 00:09:40 2007
Subject: [wp-hackers] The term_group column
In-Reply-To: <47227FB2.3020905@santosj.name>
References: <471FB785.7020707@callum-macdonald.com>
	<6e966a280710241433o4d59fc9ax8cd6547976ef3c4b@mail.gmail.com>
	<47222132.9010006@callum-macdonald.com>
	<6e966a280710261343i7b2e48adh3da09a9207616aa6@mail.gmail.com>
	<47225755.30106@callum-macdonald.com>
	<6e966a280710261513o5b4e5f39o11b05daed57b9c00@mail.gmail.com>
	<47227FB2.3020905@santosj.name>
Message-ID: <6e966a280710261709n7255fa8aga4c088ddff3f4d75@mail.gmail.com>

With a bit more digging,  as part of the upgrade,  it looks like categories
that shared the same slug get put into a term_group (with the additional
terms having a number added to the end of the slug).  Which is at least an
indication of its usage.

Damned if I can see where term_group values are used for retrieval,
though...

On 10/27/07, Jacob <wordpress@santosj.name> wrote:
>
> I agree. Writing the documentation for the taxonomy relationship
> functions was difficult as I had no idea WTF the code was supposed to be
> doing? Going off the names didn't seem to make sense of the matter
> either. Without more context, I'm unsure how such relationships were to
> be used. I'm sure that at some point I'll have to check through and
> track through the code for some of them and see what the other taxonomy
> functions use the relationship functions.
>
> It is perhaps in another section altogether. The dependencies in each
> function aren't so much that it back tracking manually would be
> difficult. It would give context, but that is a huge undertaking.
> Without looking at the admin functions, it would be worth the effort if
> someone else looked over the documentation to inform me if I'm wrong.
>
> I'm about finished with the taxonomy.php documentation and I suppose
> I'll need to look more into this to make sure I get it correct now. Once
> I'm done with that file, I'm never going back to it. I'm not going to
> lie and say it is baby or something, I'm not mad as to torture myself
> more than I need to with writing documentation.
>
> If anyone can explain the matter better, it would be extremely helpful.
>
>
>
> Christine Davis wrote:
> > Term groups kinda just float in space.  I find that column and its
> > functionality to be perplexing.
> >
> > *cough*
> >
> > It sure would be nice if a core-dev or some such could shed some light
> on
> > how it was intended to be used/what it was included to be used
> for;  because
> > that sure would help my (our?) understanding.
> >
> > -Ch.
> >
> > On 10/27/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com
> >
> > wrote:
> >
> >> Would that not require another table, term_groups to link them
> together?
> >> It seems a little weird to me. Maybe I need to look at the code
> again...
> >> - C.
> >>
> >> Christine Davis wrote:
> >>
> >>> Looking at the code,  if term 8 is an alias of term 6;  then the
> >>>
> >> term_group
> >>
> >>> for both term 6 and term 8 is the next term_group incrementally.
> >>>
> >>> (So if there were three term groups in use;  term 6 and term 8 would
> >>>
> >> have a
> >>
> >>> term group of 4.)
> >>>
> >>> Roughly speaking,  it's not so much an alias (In so far as there is no
> >>> primary term) as it is setting terms to be in a group together.
> >>>
> >>> -Ch.
> >>>
> >>> On 10/27/07, Callum Macdonald <
> lists.automattic.com@callum-macdonald.com
> >>>
> >>> wrote:
> >>>
> >>>
> >>>> So what value would be set in term_group? If term 8 is an alias of
> term
> >>>> 6, does term 8's term_group = 6? What about term 6, does it's
> >>>>
> >> term_group
> >>
> >>>> show 0?
> >>>>
> >>>> Cheers - Callum.
> >>>>
> >>>> Christine Davis wrote:
> >>>>
> >>>>
> >>>>> It's for marking a term as being an alias of another term;  in
> >>>>>
> >>>>>
> >>>> theory;  but
> >>>>
> >>>>
> >>>>> last time I looked,  the implementation seemed kinda broken.
> >>>>>
> >>>>> On 10/25/07, Callum Macdonald <
> >>>>>
> >> lists.automattic.com@callum-macdonald.com
> >>
> >>>>> wrote:
> >>>>>
> >>>>>
> >>>>>
> >>>>>> G'day,
> >>>>>>
> >>>>>> Is the term_group column actually used? Or is it provided for
> plugin
> >>>>>> use, future use, etc?
> >>>>>>
> >>>>>> I can't figure out how it would be used from the interface, and
> it's
> >>>>>>
> >>>>>>
> >>>> not
> >>>>
> >>>>
> >>>>>> used in any of the blogs that I've checked.
> >>>>>>
> >>>>>> Cheers,
> >>>>>>
> >>>>>>
> >>>>>> Callum.
> >>>>>>
> >>>>>> PS> This is curiosity more than anything!
> >>>>>>
> >>>>>> _______________________________________________
> >>>>>> wp-hackers mailing list
> >>>>>> wp-hackers@lists.automattic.com
> >>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>>>>
> >>>>>>
> >>>>>>
> >>>>>>
> >>>>> _______________________________________________
> >>>>> wp-hackers mailing list
> >>>>> wp-hackers@lists.automattic.com
> >>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>>>
> >>>>>
> >>>>>
> >>>>>
> >>>>>
> >>>> _______________________________________________
> >>>> wp-hackers mailing list
> >>>> wp-hackers@lists.automattic.com
> >>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>>
> >>>>
> >>>>
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers@lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >>>
> >>>
> >>>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> --
>
> Jacob Santos
>
> http://www.santosj.name - blog
> http://wordpress.svn.dragonu.net/unittest/ - unofficial WP unit test
> suite.
>
> Also known as darkdragon and santosj on WP trac.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From speedboxer at gmail.com  Sat Oct 27 00:43:25 2007
From: speedboxer at gmail.com (Matt)
Date: Sat Oct 27 00:43:33 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <47228197.1080103@gmail.com>
References: <4721843C.2000701@sneakemail.com>
	<b88434820710261640q751c9e74s7d1ed998db9b1390@mail.gmail.com>
	<47228197.1080103@gmail.com>
Message-ID: <b88434820710261743x2ccef047wd7331e7b00c356b1@mail.gmail.com>

On 10/26/07, spencerp <spencerp1@gmail.com> wrote:
>
> Like Matt said above there, that would be a nice thing to try once, but
> I sure as heck wouldn't be able to help with the database query coding
> and so forth. Someone with more database knowledge would have to attempt
> this one... :P Anyone up for the challenge? HahaHA! :P
>

The problem could be when the user tries to update their password... I guess
you could check both DBs on login, if the password is incorrect in one, try
the other. :P It seems sorta "hacky" thought, but it would do it's job.

-- 
Matt (speedboxer@gmail.com)
http://mattsblog.ca/
From ryan at boren.nu  Sat Oct 27 00:57:24 2007
From: ryan at boren.nu (Ryan Boren)
Date: Sat Oct 27 00:57:31 2007
Subject: [wp-hackers] The term_group column
In-Reply-To: <6e966a280710261709n7255fa8aga4c088ddff3f4d75@mail.gmail.com>
References: <471FB785.7020707@callum-macdonald.com>
	<6e966a280710241433o4d59fc9ax8cd6547976ef3c4b@mail.gmail.com>
	<47222132.9010006@callum-macdonald.com>
	<6e966a280710261343i7b2e48adh3da09a9207616aa6@mail.gmail.com>
	<47225755.30106@callum-macdonald.com>
	<6e966a280710261513o5b4e5f39o11b05daed57b9c00@mail.gmail.com>
	<47227FB2.3020905@santosj.name>
	<6e966a280710261709n7255fa8aga4c088ddff3f4d75@mail.gmail.com>
Message-ID: <c8f37c930710261757u54adb5fdme206a1befa64a7a2@mail.gmail.com>

On 10/26/07, Christine Davis <christine@neato.co.nz> wrote:
> With a bit more digging,  as part of the upgrade,  it looks like categories
> that shared the same slug get put into a term_group (with the additional
> terms having a number added to the end of the slug).  Which is at least an
> indication of its usage.
>
> Damned if I can see where term_group values are used for retrieval,
> though...

They're not retrieved anywhere.  Support for term_group never fully
materialized.  I think someone is writing a plugin that uses it, but
I'm not sure where that's at or what it's doing.  term_group is just a
simple way of grouping like terms together.  The discussion about
supporting aliasing, term collation, etc. never took off during 2.3
development, so this simple grouping mechanism is what we left it at.
If ya'll have ideas for making this more useful, do tell.
From lists.automattic.com at callum-macdonald.com  Sat Oct 27 04:48:31 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Sat Oct 27 04:48:47 2007
Subject: [wp-hackers] The term_group column
In-Reply-To: <6e966a280710261709n7255fa8aga4c088ddff3f4d75@mail.gmail.com>
References: <471FB785.7020707@callum-macdonald.com>	<6e966a280710241433o4d59fc9ax8cd6547976ef3c4b@mail.gmail.com>	<47222132.9010006@callum-macdonald.com>	<6e966a280710261343i7b2e48adh3da09a9207616aa6@mail.gmail.com>	<47225755.30106@callum-macdonald.com>	<6e966a280710261513o5b4e5f39o11b05daed57b9c00@mail.gmail.com>	<47227FB2.3020905@santosj.name>
	<6e966a280710261709n7255fa8aga4c088ddff3f4d75@mail.gmail.com>
Message-ID: <4722C31F.8010700@callum-macdonald.com>

I'm confused. How could two categories have the same slug? If they're 
sub-categories of one another, or at different levels? Surely they'd 
still have had different slugs in the previous implementation though?

Thanks for digging into this, the whole thing baffles me and I hadn't 
gotten round to grepping the code to try and figure it out.

Cheers - Callum.

Christine Davis wrote:
> With a bit more digging,  as part of the upgrade,  it looks like categories
> that shared the same slug get put into a term_group (with the additional
> terms having a number added to the end of the slug).  Which is at least an
> indication of its usage.
>
> Damned if I can see where term_group values are used for retrieval,
> though...
>
> On 10/27/07, Jacob <wordpress@santosj.name> wrote:
>   
>> I agree. Writing the documentation for the taxonomy relationship
>> functions was difficult as I had no idea WTF the code was supposed to be
>> doing? Going off the names didn't seem to make sense of the matter
>> either. Without more context, I'm unsure how such relationships were to
>> be used. I'm sure that at some point I'll have to check through and
>> track through the code for some of them and see what the other taxonomy
>> functions use the relationship functions.
>>
>> It is perhaps in another section altogether. The dependencies in each
>> function aren't so much that it back tracking manually would be
>> difficult. It would give context, but that is a huge undertaking.
>> Without looking at the admin functions, it would be worth the effort if
>> someone else looked over the documentation to inform me if I'm wrong.
>>
>> I'm about finished with the taxonomy.php documentation and I suppose
>> I'll need to look more into this to make sure I get it correct now. Once
>> I'm done with that file, I'm never going back to it. I'm not going to
>> lie and say it is baby or something, I'm not mad as to torture myself
>> more than I need to with writing documentation.
>>
>> If anyone can explain the matter better, it would be extremely helpful.
>>
>>
>>
>> Christine Davis wrote:
>>     
>>> Term groups kinda just float in space.  I find that column and its
>>> functionality to be perplexing.
>>>
>>> *cough*
>>>
>>> It sure would be nice if a core-dev or some such could shed some light
>>>       
>> on
>>     
>>> how it was intended to be used/what it was included to be used
>>>       
>> for;  because
>>     
>>> that sure would help my (our?) understanding.
>>>
>>> -Ch.
>>>
>>> On 10/27/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com
>>>
>>> wrote:
>>>
>>>       
>>>> Would that not require another table, term_groups to link them
>>>>         
>> together?
>>     
>>>> It seems a little weird to me. Maybe I need to look at the code
>>>>         
>> again...
>>     
>>>> - C.
>>>>
>>>> Christine Davis wrote:
>>>>
>>>>         
>>>>> Looking at the code,  if term 8 is an alias of term 6;  then the
>>>>>
>>>>>           
>>>> term_group
>>>>
>>>>         
>>>>> for both term 6 and term 8 is the next term_group incrementally.
>>>>>
>>>>> (So if there were three term groups in use;  term 6 and term 8 would
>>>>>
>>>>>           
>>>> have a
>>>>
>>>>         
>>>>> term group of 4.)
>>>>>
>>>>> Roughly speaking,  it's not so much an alias (In so far as there is no
>>>>> primary term) as it is setting terms to be in a group together.
>>>>>
>>>>> -Ch.
>>>>>
>>>>> On 10/27/07, Callum Macdonald <
>>>>>           
>> lists.automattic.com@callum-macdonald.com
>>     
>>>>> wrote:
>>>>>
>>>>>
>>>>>           
>>>>>> So what value would be set in term_group? If term 8 is an alias of
>>>>>>             
>> term
>>     
>>>>>> 6, does term 8's term_group = 6? What about term 6, does it's
>>>>>>
>>>>>>             
>>>> term_group
>>>>
>>>>         
>>>>>> show 0?
>>>>>>
>>>>>> Cheers - Callum.
>>>>>>
>>>>>> Christine Davis wrote:
>>>>>>
>>>>>>
>>>>>>             
>>>>>>> It's for marking a term as being an alias of another term;  in
>>>>>>>
>>>>>>>
>>>>>>>               
>>>>>> theory;  but
>>>>>>
>>>>>>
>>>>>>             
>>>>>>> last time I looked,  the implementation seemed kinda broken.
>>>>>>>
>>>>>>> On 10/25/07, Callum Macdonald <
>>>>>>>
>>>>>>>               
>>>> lists.automattic.com@callum-macdonald.com
>>>>
>>>>         
>>>>>>> wrote:
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>               
>>>>>>>> G'day,
>>>>>>>>
>>>>>>>> Is the term_group column actually used? Or is it provided for
>>>>>>>>                 
>> plugin
>>     
>>>>>>>> use, future use, etc?
>>>>>>>>
>>>>>>>> I can't figure out how it would be used from the interface, and
>>>>>>>>                 
>> it's
>>     
>>>>>>>>                 
>>>>>> not
>>>>>>
>>>>>>
>>>>>>             
>>>>>>>> used in any of the blogs that I've checked.
>>>>>>>>
>>>>>>>> Cheers,
>>>>>>>>
>>>>>>>>
>>>>>>>> Callum.
>>>>>>>>
>>>>>>>> PS> This is curiosity more than anything!
>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> wp-hackers mailing list
>>>>>>>> wp-hackers@lists.automattic.com
>>>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>                 
>>>>>>> _______________________________________________
>>>>>>> wp-hackers mailing list
>>>>>>> wp-hackers@lists.automattic.com
>>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>               
>>>>>> _______________________________________________
>>>>>> wp-hackers mailing list
>>>>>> wp-hackers@lists.automattic.com
>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>>
>>>>>>
>>>>>>
>>>>>>             
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers@lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>           
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>>>         
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>       
>> --
>>
>> Jacob Santos
>>
>> http://www.santosj.name - blog
>> http://wordpress.svn.dragonu.net/unittest/ - unofficial WP unit test
>> suite.
>>
>> Also known as darkdragon and santosj on WP trac.
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>   

From lists.automattic.com at callum-macdonald.com  Sat Oct 27 04:50:44 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Sat Oct 27 04:50:59 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <11997-68898@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
Message-ID: <4722C3A4.3060300@callum-macdonald.com>

Just a tip, if you use bbPress (forum), it'll integrate user login and 
registration with WordPress out of the box. It's not as popular as any 
of the other systems, and I couldn't find any ready made themes for it, 
but it seems to have all the major forum functions. I'm assuming it'll 
be pretty easily themable (judging from WordPress).

I do know it integrates in a snap though, just set two variables in the 
bbPress config and you're off.

Cheers - Callum.

Sneaks wrote:
> thanks Callum, you've been more useful than Google!
>
> i think i'd prefer to leave the master set on WP if nothing more than 
> because the UI to manage users is much better.
>
> i'm actually trying to tie in three different systems for a cancer 
> non-profit: WP, Mediawiki and Vanilla (forum software). i just assumed 
> nobody would have any Vanilla experience :)
>
>
>
>
>> We're doing it the other way, creating the users in our own system 
>> (in this example MediaWiki) and then creating the WordPress cookies. 
>> I'm not sure how MediaWiki works, but with WordPress if you insert 
>> the rows into the user table and create the cookies, the user never 
>> has to log in. WordPress handles it all on the fly
>>
>> So if you can redirect all WordPress logins to MediaWiki logins, then 
>> you create the MediaWiki and WP cookies and redirect back, you're in 
>> business.
>>
>> Ok, I just checked with MediaWiki version 1.11.0 and it requires an 
>> auth token to be updated in the user table and set in the cookie. For 
>> that reason, I'd suggest using MediaWiki's login, copy the data to 
>> WordPress, and then set the WordPress cookies. WP will do the rest.
>>
>> I think MediaWiki's approach is intrinsically more secure than WP's, 
>> but that's a topic for another day / thread! :)
>>
>> Cheers - Callum.
>>
>> Sneaks wrote:
>>> thats an interesting idea. i suppose i could hook into the wp cookie 
>>> functions and set the mediawiki authentication cookies.
>>>
>>> last night i was playing around and set WP's cookie root to /, and 
>>> was using:
>>>
>>> include($_SERVER[DOCUMENT_ROOT]."/blog/wp-blog-header.php");
>>> auth_redirect();
>>> wp_get_current_user();
>>>
>>> in a mediawiki auth plugin. i think that direction would also work, 
>>> but i'm worried about the lack of user data in the mediawiki db.
>>>
>>>
>>>
>>>
>>>
>>> Callum Macdonald lists.automattic.com-at-callum-macdonald.com 
>>> |wordpress| wrote:
>>>> Logging a user into WP via the cookie is relatively simple. Check 
>>>> out pluggable.php for the wp_setcookie() function.
>>>>
>>>> Two cookies handle the login:
>>>> wordpressuser_MD5OFSITEURL
>>>> wordpresspass_MD5OFSITEURL
>>>>
>>>> The user cookie takes the username in plain text, the pass takes a 
>>>> double md5 of the password (just md5 what's in the user db).
>>>>
>>>> We're integrating WPMU login with another system, so we're writing 
>>>> our users to the wp user db then setting the cookies for WP. WP 
>>>> doesn't handle any login or logout functions.
>>>>
>>>> Cheers - Callum.
>>>>
>>>> [1] 
>>>> http://trac.wordpress.org/browser/trunk/wp-includes/pluggable.php?rev=6291#L458 
>>>>
>>>>
>>>> Bertrand wrote:
>>>>> Anyone have any idea how to share cookies from WP to Mediawiki? I 
>>>>> know there's lots of work out there to share db tables, but I 
>>>>> don't want users to have to sign in twice.
>>>>>
>>>>> The ideal would be that Mediawiki reads the cookies from WP, but I 
>>>>> don't know how many side effects this would have.
>>>>>
>>>>> B
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers@lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>

From janbucher at gmail.com  Sat Oct 27 10:47:27 2007
From: janbucher at gmail.com (Jan Bucher)
Date: Sat Oct 27 10:47:33 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <11997-68898@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com> <32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com> <11997-68898@sneakemail.com>
Message-ID: <6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>

I am working on exactly the same Setup (Vanilla, MW, WP). Until now i
did not care about cookies, so no help there. But a good thought:

Vanilla has the most extensive User-System, because of the
Group-System (you can actually create your own roles/groups). I needed
that, so my starting point had to be vanilla ..

You can now very easily hook the vanilla authentication into MW, using
the following 'plugin' (which by the way is not really a plugin, just
a howto sold as plugin):
http://lussumo.com/addons/index.php?PostBackAction=AddOn&AddOnID=130

If you don't plan to use the extra-features, try bbpress. Seems to be
more reliable and the installation process is a lot easier than
vanilla.

And if you find a good soluton ... let us know .. ;)

Jan

On 10/27/07, Sneaks <0vcqn5q02@sneakemail.com> wrote:
> thanks Callum, you've been more useful than Google!
>
> i think i'd prefer to leave the master set on WP if nothing more than
> because the UI to manage users is much better.
>
> i'm actually trying to tie in three different systems for a cancer
> non-profit: WP, Mediawiki and Vanilla (forum software). i just assumed
> nobody would have any Vanilla experience :)
>
>
>
>
> > We're doing it the other way, creating the users in our own system (in
> > this example MediaWiki) and then creating the WordPress cookies. I'm not
> > sure how MediaWiki works, but with WordPress if you insert the rows into
> > the user table and create the cookies, the user never has to log in.
> > WordPress handles it all on the fly
> >
> > So if you can redirect all WordPress logins to MediaWiki logins, then
> > you create the MediaWiki and WP cookies and redirect back, you're in
> > business.
> >
> > Ok, I just checked with MediaWiki version 1.11.0 and it requires an auth
> > token to be updated in the user table and set in the cookie. For that
> > reason, I'd suggest using MediaWiki's login, copy the data to WordPress,
> > and then set the WordPress cookies. WP will do the rest.
> >
> > I think MediaWiki's approach is intrinsically more secure than WP's, but
> > that's a topic for another day / thread! :)
> >
> > Cheers - Callum.
> >
> > Sneaks wrote:
> >> thats an interesting idea. i suppose i could hook into the wp cookie
> >> functions and set the mediawiki authentication cookies.
> >>
> >> last night i was playing around and set WP's cookie root to /, and was
> >> using:
> >>
> >> include($_SERVER[DOCUMENT_ROOT]."/blog/wp-blog-header.php");
> >> auth_redirect();
> >> wp_get_current_user();
> >>
> >> in a mediawiki auth plugin. i think that direction would also work,
> >> but i'm worried about the lack of user data in the mediawiki db.
> >>
> >>
> >>
> >>
> >>
> >> Callum Macdonald lists.automattic.com-at-callum-macdonald.com
> >> |wordpress| wrote:
> >>> Logging a user into WP via the cookie is relatively simple. Check out
> >>> pluggable.php for the wp_setcookie() function.
> >>>
> >>> Two cookies handle the login:
> >>> wordpressuser_MD5OFSITEURL
> >>> wordpresspass_MD5OFSITEURL
> >>>
> >>> The user cookie takes the username in plain text, the pass takes a
> >>> double md5 of the password (just md5 what's in the user db).
> >>>
> >>> We're integrating WPMU login with another system, so we're writing
> >>> our users to the wp user db then setting the cookies for WP. WP
> >>> doesn't handle any login or logout functions.
> >>>
> >>> Cheers - Callum.
> >>>
> >>> [1]
> >>> http://trac.wordpress.org/browser/trunk/wp-includes/pluggable.php?rev=6291#L458
> >>>
> >>>
> >>> Bertrand wrote:
> >>>> Anyone have any idea how to share cookies from WP to Mediawiki? I
> >>>> know there's lots of work out there to share db tables, but I don't
> >>>> want users to have to sign in twice.
> >>>>
> >>>> The ideal would be that Mediawiki reads the cookies from WP, but I
> >>>> don't know how many side effects this would have.
> >>>>
> >>>> B
> >>>> _______________________________________________
> >>>> wp-hackers mailing list
> >>>> wp-hackers@lists.automattic.com
> >>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>>
> >>>>
> >>>
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers@lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >>
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Jan Bucher
e: janbucher@web.de
m: 0176 / 2444 7149
w: www.radioaktiv.org
From viper at viper007bond.com  Sat Oct 27 14:53:48 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Sat Oct 27 14:53:55 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
Message-ID: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>

I've just upgraded my server and figured it'd be a good time to re-examine
the big WordPress install on the server and it's optimization. The install
gets ~40k hits on a slow day and over 100k on more popular ones (which is
1-3 days of the week).

For years now, I've just used WP-Cache. It worked fine and my buddy who
manages our server for me even enabled caching WP-Cache's folder to memory
(I think, server configs obviously aren't really my thing). But after
discovering the eAccelerator and Memcache plugins out there that make direct
usage of the modules, I figured that'd be more efficient than caching to
static files via WP-Cache.

However, I'm a bit clueless here and don't know which to use as my buddy
says both eAccelerator and Memcache are installed. I'd ask him, but he
doesn't know WordPress at all really.

phpinfo() -> http://titan.finalgear.com/php.php

Server specs can be listed if wanted as to determine which would be best for
the hardware.

So, any thoughts on the matter? And yeah, I did poke around the Google
Groups archive some, but didn't come up with anything of much use. Then
again, I'm not a search master.

-- 
Viper007Bond | http://www.viper007bond.com/
From wordpress at tekartist.org  Sat Oct 27 15:40:25 2007
From: wordpress at tekartist.org (Stephane Daury)
Date: Sat Oct 27 15:40:32 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
Message-ID: <E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>


Hey V,

The core asset of memcache are that it's language agnostic and  
distributed in nature. So it will really pay off if you want to use  
it for all the (compatible) apps running on your server and/or if  
you're running a cluster of box that you can run the daemon on and  
share the load across. It will work fine on it's own, but you lose  
the distributed advantage if you run it on only one machine (load  
balancing and fault tolerance). Kinda using a Ferrari to go grocery  
shopping: it works, but is it really appropriate?

On the other hand, eAccelerator is PHP-only, but has the advantage of  
handling both opcode and caching, which is another layer of  
performance tuning.

In the cluster environment I was running at McGill (last day  
yesterday), we pretty much ran both: memcache for caching, because we  
had multiple web nodes, and eAccelerator, but purely for the opcode  
advantage of the latter. They don't conflict (but the WP plugins  
using either probably will).

Nothing scientific in my answer (don't have benchmark numbers to give  
you), but I think in your context, I'd probably focus on  
eAccelerator, at least for now.

Stephane




On Oct 27, 2007, at 10:53, Viper007Bond wrote:

> I've just upgraded my server and figured it'd be a good time to re- 
> examine
> the big WordPress install on the server and it's optimization. The  
> install
> gets ~40k hits on a slow day and over 100k on more popular ones  
> (which is
> 1-3 days of the week).
>
> For years now, I've just used WP-Cache. It worked fine and my buddy  
> who
> manages our server for me even enabled caching WP-Cache's folder to  
> memory
> (I think, server configs obviously aren't really my thing). But after
> discovering the eAccelerator and Memcache plugins out there that  
> make direct
> usage of the modules, I figured that'd be more efficient than  
> caching to
> static files via WP-Cache.
>
> However, I'm a bit clueless here and don't know which to use as my  
> buddy
> says both eAccelerator and Memcache are installed. I'd ask him, but he
> doesn't know WordPress at all really.
>
> phpinfo() -> http://titan.finalgear.com/php.php
>
> Server specs can be listed if wanted as to determine which would be  
> best for
> the hardware.
>
> So, any thoughts on the matter? And yeah, I did poke around the Google
> Groups archive some, but didn't come up with anything of much use.  
> Then
> again, I'm not a search master.
>
> -- 
> Viper007Bond | http://www.viper007bond.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp-hackers at nj-arp.org  Sat Oct 27 23:42:51 2007
From: wp-hackers at nj-arp.org (Bob)
Date: Sat Oct 27 23:43:12 2007
Subject: [wp-hackers] E-mail address and SQL injection
References: <000501c8131d$3cffb730$0300a8c0@Toshiba>
	<000c01c8132b$d86924f0$893b6ed0$@net>	<000701c8132c$b8ff3180$0300a8c0@Toshiba>
	<000d01c8132e$1d21b1f0$576515d0$@net>	<000d01c8132f$c282ecd0$0300a8c0@Toshiba>
	<f5422b30710200931uadfa075j575a7da7a0431940@mail.gmail.com>
	<df41a9470710241308q390925ads355399a2a1118175@mail.gmail.com><93C169D2-0D22-44D2-9D59-64656F973559@ftwr.co.uk>
	<471FF650.7060404@santosj.name>
Message-ID: <000701c818f3$16f147d0$0300a8c0@Toshiba>

So it's still not clear to me if allowing quoted strings containing any 
sequence of characters in an email address is safe.


----- Original Message ----- 
From: "Jacob" <wordpress@santosj.name>
To: <wp-hackers@lists.automattic.com>
Sent: Wednesday, October 24, 2007 9:50 PM
Subject: Re: [wp-hackers] E-mail address and SQL injection


> No, it in fact only just returns addslashes, as you can see from the 115 
> returning addslashes and the comment saying to disable the rest because of 
> some problems. It has been disabled for quite some time now. At least from 
> my estimate since 2.2.
>
> Jacob Santos
>
> Peter Westwood wrote:
>>
>> On 24 Oct 2007, at 21:08, Abel Cheung wrote:
>>
>>> On 10/21/07, Rindisbacher Flurin <flurischt@gmail.com> wrote:
>>>>> $wpdb->get_row("SELECT ID FROM $wpdb->users WHERE user_email='$author'
>>>>> LIMIT 1");
>>>>>
>>>>> So this will be safe no matter what $author contains?
>>>>
>>>> This will be safe because in the line above $author is escaped.
>>>> ($wpdb->escape())
>>>
>>> Yes, safe if charset is iso-8859-1, ascii, utf-8 or other non-multibyte 
>>> charset.
>>> For multibyte charsets accepting backslash and single quote as the 
>>> second
>>> byte, it is quite possible to perform SQL injection as escape() solely 
>>> relies
>>> on add_slashes() but not mysql_real_escape_string(), so inserting a 
>>> character
>>> where second byte is single quote may do it.
>>
>> $wpdb->escape uses mysql_real_escape_string() if available
>>
>> http://trac.wordpress.org/browser/trunk/wp-includes/wp-db.php#L112
>>
>> and has done for the past 2 years:
>>
>> http://trac.wordpress.org/changeset/2684
>>
>> westi
>
>
> -- 
>
> Jacob Santos
>

From christine at neato.co.nz  Sat Oct 27 23:48:39 2007
From: christine at neato.co.nz (Christine Davis)
Date: Sat Oct 27 23:48:44 2007
Subject: [wp-hackers] The term_group column
In-Reply-To: <c8f37c930710261757u54adb5fdme206a1befa64a7a2@mail.gmail.com>
References: <471FB785.7020707@callum-macdonald.com>
	<6e966a280710241433o4d59fc9ax8cd6547976ef3c4b@mail.gmail.com>
	<47222132.9010006@callum-macdonald.com>
	<6e966a280710261343i7b2e48adh3da09a9207616aa6@mail.gmail.com>
	<47225755.30106@callum-macdonald.com>
	<6e966a280710261513o5b4e5f39o11b05daed57b9c00@mail.gmail.com>
	<47227FB2.3020905@santosj.name>
	<6e966a280710261709n7255fa8aga4c088ddff3f4d75@mail.gmail.com>
	<c8f37c930710261757u54adb5fdme206a1befa64a7a2@mail.gmail.com>
Message-ID: <6e966a280710271648q190f54d2t3a28a6c11dc5140e@mail.gmail.com>

In UTW land,  I had aliased tags work so that if you entered an aliased tag,
the corresponding primary tag would be saved against the post;  and if you
visited an aliased tag page,  you'd see the tag page for the primary tag
(although this side did churn through a bunch o' DB queries).  Both of those
bits of functionality kinda depend on knowing what the primary tag is for a
collection of equivalent tags.

API support for getting the terms that belong to the same term_group would
be a good start, though;  a way of getting the posts that belong to a term
-or- one of the terms in its term_group seems useful too.

On 10/27/07, Ryan Boren <ryan@boren.nu> wrote:
>
> On 10/26/07, Christine Davis <christine@neato.co.nz> wrote:
> > With a bit more digging,  as part of the upgrade,  it looks like
> categories
> > that shared the same slug get put into a term_group (with the additional
>
> > terms having a number added to the end of the slug).  Which is at least
> an
> > indication of its usage.
> >
> > Damned if I can see where term_group values are used for retrieval,
> > though...
>
> They're not retrieved anywhere.  Support for term_group never fully
> materialized.  I think someone is writing a plugin that uses it, but
> I'm not sure where that's at or what it's doing.  term_group is just a
> simple way of grouping like terms together.  The discussion about
> supporting aliasing, term collation, etc. never took off during 2.3
> development, so this simple grouping mechanism is what we left it at.
> If ya'll have ideas for making this more useful, do tell.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From robin.adr at gmail.com  Sat Oct 27 23:55:04 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Sat Oct 27 23:58:02 2007
Subject: [wp-hackers] E-mail address and SQL injection
In-Reply-To: <000701c818f3$16f147d0$0300a8c0@Toshiba>
References: <000501c8131d$3cffb730$0300a8c0@Toshiba>
	<000c01c8132b$d86924f0$893b6ed0$@net>
	<000701c8132c$b8ff3180$0300a8c0@Toshiba>
	<000d01c8132e$1d21b1f0$576515d0$@net>
	<000d01c8132f$c282ecd0$0300a8c0@Toshiba>
	<f5422b30710200931uadfa075j575a7da7a0431940@mail.gmail.com>
	<df41a9470710241308q390925ads355399a2a1118175@mail.gmail.com>
	<93C169D2-0D22-44D2-9D59-64656F973559@ftwr.co.uk>
	<471FF650.7060404@santosj.name>
	<000701c818f3$16f147d0$0300a8c0@Toshiba>
Message-ID: <d135ca9c0710271655o76c505f4ne67dc7897d4154d0@mail.gmail.com>

It's perfectly safe. If you're worried about SQL injection, there are quite
a few safeguards against that.

On 10/27/07, Bob <wp-hackers@nj-arp.org> wrote:
>
> So it's still not clear to me if allowing quoted strings containing any
> sequence of characters in an email address is safe.
>
>
> ----- Original Message -----
> From: "Jacob" <wordpress@santosj.name>
> To: <wp-hackers@lists.automattic.com>
> Sent: Wednesday, October 24, 2007 9:50 PM
> Subject: Re: [wp-hackers] E-mail address and SQL injection
>
>
> > No, it in fact only just returns addslashes, as you can see from the 115
> > returning addslashes and the comment saying to disable the rest because
> of
> > some problems. It has been disabled for quite some time now. At least
> from
> > my estimate since 2.2.
> >
> > Jacob Santos
> >
> > Peter Westwood wrote:
> >>
> >> On 24 Oct 2007, at 21:08, Abel Cheung wrote:
> >>
> >>> On 10/21/07, Rindisbacher Flurin <flurischt@gmail.com> wrote:
> >>>>> $wpdb->get_row("SELECT ID FROM $wpdb->users WHERE
> user_email='$author'
> >>>>> LIMIT 1");
> >>>>>
> >>>>> So this will be safe no matter what $author contains?
> >>>>
> >>>> This will be safe because in the line above $author is escaped.
> >>>> ($wpdb->escape())
> >>>
> >>> Yes, safe if charset is iso-8859-1, ascii, utf-8 or other
> non-multibyte
> >>> charset.
> >>> For multibyte charsets accepting backslash and single quote as the
> >>> second
> >>> byte, it is quite possible to perform SQL injection as escape() solely
> >>> relies
> >>> on add_slashes() but not mysql_real_escape_string(), so inserting a
> >>> character
> >>> where second byte is single quote may do it.
> >>
> >> $wpdb->escape uses mysql_real_escape_string() if available
> >>
> >> http://trac.wordpress.org/browser/trunk/wp-includes/wp-db.php#L112
> >>
> >> and has done for the past 2 years:
> >>
> >> http://trac.wordpress.org/changeset/2684
> >>
> >> westi
> >
> >
> > --
> >
> > Jacob Santos
> >
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From viper at viper007bond.com  Sun Oct 28 06:33:36 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Sun Oct 28 06:33:45 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
	<E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>
Message-ID: <8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>

Yeah, dual box hosting was too expensive, so we switched back to a single
box. Plus, this box has 4 dual core processors, so we can split up the
processors to act as separate servers of sorts.

Anyway, basically it comes down to which of these to install and would yield
the best performance:

http://neosmart.net/dl.php?id=13
http://ryan.wordpress.com/2005/12/23/memcached-backend/

(As you can only install one)

On 10/27/07, Stephane Daury <wordpress@tekartist.org> wrote:
>
>
> Hey V,
>
> The core asset of memcache are that it's language agnostic and
> distributed in nature. So it will really pay off if you want to use
> it for all the (compatible) apps running on your server and/or if
> you're running a cluster of box that you can run the daemon on and
> share the load across. It will work fine on it's own, but you lose
> the distributed advantage if you run it on only one machine (load
> balancing and fault tolerance). Kinda using a Ferrari to go grocery
> shopping: it works, but is it really appropriate?
>
> On the other hand, eAccelerator is PHP-only, but has the advantage of
> handling both opcode and caching, which is another layer of
> performance tuning.
>
> In the cluster environment I was running at McGill (last day
> yesterday), we pretty much ran both: memcache for caching, because we
> had multiple web nodes, and eAccelerator, but purely for the opcode
> advantage of the latter. They don't conflict (but the WP plugins
> using either probably will).
>
> Nothing scientific in my answer (don't have benchmark numbers to give
> you), but I think in your context, I'd probably focus on
> eAccelerator, at least for now.
>
> Stephane
>
>
>
>
> On Oct 27, 2007, at 10:53, Viper007Bond wrote:
>
> > I've just upgraded my server and figured it'd be a good time to re-
> > examine
> > the big WordPress install on the server and it's optimization. The
> > install
> > gets ~40k hits on a slow day and over 100k on more popular ones
> > (which is
> > 1-3 days of the week).
> >
> > For years now, I've just used WP-Cache. It worked fine and my buddy
> > who
> > manages our server for me even enabled caching WP-Cache's folder to
> > memory
> > (I think, server configs obviously aren't really my thing). But after
> > discovering the eAccelerator and Memcache plugins out there that
> > make direct
> > usage of the modules, I figured that'd be more efficient than
> > caching to
> > static files via WP-Cache.
> >
> > However, I'm a bit clueless here and don't know which to use as my
> > buddy
> > says both eAccelerator and Memcache are installed. I'd ask him, but he
> > doesn't know WordPress at all really.
> >
> > phpinfo() -> http://titan.finalgear.com/php.php
> >
> > Server specs can be listed if wanted as to determine which would be
> > best for
> > the hardware.
> >
> > So, any thoughts on the matter? And yeah, I did poke around the Google
> > Groups archive some, but didn't come up with anything of much use.
> > Then
> > again, I'm not a search master.
> >
> > --
> > Viper007Bond | http://www.viper007bond.com/
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From computerguru at neosmart.net  Sun Oct 28 06:40:28 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sun Oct 28 06:40:33 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
	<E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>
	<8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>
Message-ID: <4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>

They're both the same (hold on though, I have an update I've been meaning to
release!) with regards to WP integration - they do the same exact thing the
same exact way (I based my code off Ryan's).

However, XCache is the newest and has (in real-life testing) proven to be
the fastest - I was using APC then eAccelerator and am now on XCache - very
happy with it. Memcached is the slowest, but it offers support for
distributed servers - but you're not using that.

XCache has support for multi-processor setups (I'm using it on a dual-core
right now, set the "count" option to two).

IMHO, go with XCache, it's a good choice.

On 10/28/07, Viper007Bond <viper@viper007bond.com> wrote:
>
> Yeah, dual box hosting was too expensive, so we switched back to a single
> box. Plus, this box has 4 dual core processors, so we can split up the
> processors to act as separate servers of sorts.
>
> Anyway, basically it comes down to which of these to install and would
> yield
> the best performance:
>
> http://neosmart.net/dl.php?id=13
> http://ryan.wordpress.com/2005/12/23/memcached-backend/
>
> (As you can only install one)
>
> On 10/27/07, Stephane Daury <wordpress@tekartist.org> wrote:
> >
> >
> > Hey V,
> >
> > The core asset of memcache are that it's language agnostic and
> > distributed in nature. So it will really pay off if you want to use
> > it for all the (compatible) apps running on your server and/or if
> > you're running a cluster of box that you can run the daemon on and
> > share the load across. It will work fine on it's own, but you lose
> > the distributed advantage if you run it on only one machine (load
> > balancing and fault tolerance). Kinda using a Ferrari to go grocery
> > shopping: it works, but is it really appropriate?
> >
> > On the other hand, eAccelerator is PHP-only, but has the advantage of
> > handling both opcode and caching, which is another layer of
> > performance tuning.
> >
> > In the cluster environment I was running at McGill (last day
> > yesterday), we pretty much ran both: memcache for caching, because we
> > had multiple web nodes, and eAccelerator, but purely for the opcode
> > advantage of the latter. They don't conflict (but the WP plugins
> > using either probably will).
> >
> > Nothing scientific in my answer (don't have benchmark numbers to give
> > you), but I think in your context, I'd probably focus on
> > eAccelerator, at least for now.
> >
> > Stephane
> >
> >
> >
> >
> > On Oct 27, 2007, at 10:53, Viper007Bond wrote:
> >
> > > I've just upgraded my server and figured it'd be a good time to re-
> > > examine
> > > the big WordPress install on the server and it's optimization. The
> > > install
> > > gets ~40k hits on a slow day and over 100k on more popular ones
> > > (which is
> > > 1-3 days of the week).
> > >
> > > For years now, I've just used WP-Cache. It worked fine and my buddy
> > > who
> > > manages our server for me even enabled caching WP-Cache's folder to
> > > memory
> > > (I think, server configs obviously aren't really my thing). But after
> > > discovering the eAccelerator and Memcache plugins out there that
> > > make direct
> > > usage of the modules, I figured that'd be more efficient than
> > > caching to
> > > static files via WP-Cache.
> > >
> > > However, I'm a bit clueless here and don't know which to use as my
> > > buddy
> > > says both eAccelerator and Memcache are installed. I'd ask him, but he
> > > doesn't know WordPress at all really.
> > >
> > > phpinfo() -> http://titan.finalgear.com/php.php
> > >
> > > Server specs can be listed if wanted as to determine which would be
> > > best for
> > > the hardware.
> > >
> > > So, any thoughts on the matter? And yeah, I did poke around the Google
> > > Groups archive some, but didn't come up with anything of much use.
> > > Then
> > > again, I'm not a search master.
> > >
> > > --
> > > Viper007Bond | http://www.viper007bond.com/
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Viper007Bond | http://www.viper007bond.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From computerguru at neosmart.net  Sun Oct 28 06:41:58 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sun Oct 28 06:42:04 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
	<E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>
	<8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>
	<4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>
Message-ID: <4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com>

Ooops - I thought you were linking to the XCache plugin.

http://neosmart.net/dl.php?id=12

eAccelerator and XCache work in the same exact way, but XCache performs
better.

On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
>
> They're both the same (hold on though, I have an update I've been meaning
> to release!) with regards to WP integration - they do the same exact thing
> the same exact way (I based my code off Ryan's).
>
> However, XCache is the newest and has (in real-life testing) proven to be
> the fastest - I was using APC then eAccelerator and am now on XCache - very
> happy with it. Memcached is the slowest, but it offers support for
> distributed servers - but you're not using that.
>
> XCache has support for multi-processor setups (I'm using it on a dual-core
> right now, set the "count" option to two).
>
> IMHO, go with XCache, it's a good choice.
>
> On 10/28/07, Viper007Bond <viper@viper007bond.com> wrote:
> >
> > Yeah, dual box hosting was too expensive, so we switched back to a
> > single
> > box. Plus, this box has 4 dual core processors, so we can split up the
> > processors to act as separate servers of sorts.
> >
> > Anyway, basically it comes down to which of these to install and would
> > yield
> > the best performance:
> >
> > http://neosmart.net/dl.php?id=13
> > http://ryan.wordpress.com/2005/12/23/memcached-backend/
> >
> > (As you can only install one)
> >
> > On 10/27/07, Stephane Daury <wordpress@tekartist.org> wrote:
> > >
> > >
> > > Hey V,
> > >
> > > The core asset of memcache are that it's language agnostic and
> > > distributed in nature. So it will really pay off if you want to use
> > > it for all the (compatible) apps running on your server and/or if
> > > you're running a cluster of box that you can run the daemon on and
> > > share the load across. It will work fine on it's own, but you lose
> > > the distributed advantage if you run it on only one machine (load
> > > balancing and fault tolerance). Kinda using a Ferrari to go grocery
> > > shopping: it works, but is it really appropriate?
> > >
> > > On the other hand, eAccelerator is PHP-only, but has the advantage of
> > > handling both opcode and caching, which is another layer of
> > > performance tuning.
> > >
> > > In the cluster environment I was running at McGill (last day
> > > yesterday), we pretty much ran both: memcache for caching, because we
> > > had multiple web nodes, and eAccelerator, but purely for the opcode
> > > advantage of the latter. They don't conflict (but the WP plugins
> > > using either probably will).
> > >
> > > Nothing scientific in my answer (don't have benchmark numbers to give
> > > you), but I think in your context, I'd probably focus on
> > > eAccelerator, at least for now.
> > >
> > > Stephane
> > >
> > >
> > >
> > >
> > > On Oct 27, 2007, at 10:53, Viper007Bond wrote:
> > >
> > > > I've just upgraded my server and figured it'd be a good time to re-
> > > > examine
> > > > the big WordPress install on the server and it's optimization. The
> > > > install
> > > > gets ~40k hits on a slow day and over 100k on more popular ones
> > > > (which is
> > > > 1-3 days of the week).
> > > >
> > > > For years now, I've just used WP-Cache. It worked fine and my buddy
> > > > who
> > > > manages our server for me even enabled caching WP-Cache's folder to
> > > > memory
> > > > (I think, server configs obviously aren't really my thing). But
> > after
> > > > discovering the eAccelerator and Memcache plugins out there that
> > > > make direct
> > > > usage of the modules, I figured that'd be more efficient than
> > > > caching to
> > > > static files via WP-Cache.
> > > >
> > > > However, I'm a bit clueless here and don't know which to use as my
> > > > buddy
> > > > says both eAccelerator and Memcache are installed. I'd ask him, but
> > he
> > > > doesn't know WordPress at all really.
> > > >
> > > > phpinfo() -> http://titan.finalgear.com/php.php
> > > >
> > > > Server specs can be listed if wanted as to determine which would be
> > > > best for
> > > > the hardware.
> > > >
> > > > So, any thoughts on the matter? And yeah, I did poke around the
> > Google
> > > > Groups archive some, but didn't come up with anything of much use.
> > > > Then
> > > > again, I'm not a search master.
> > > >
> > > > --
> > > > Viper007Bond | http://www.viper007bond.com/
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers@lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> >
> > --
> > Viper007Bond | http://www.viper007bond.com/
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Computer Guru
> Director,
> NeoSmart Technologies
> http://neosmart.net/blog/




-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From viper at viper007bond.com  Sun Oct 28 06:45:04 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Sun Oct 28 06:45:11 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
	<E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>
	<8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>
	<4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>
	<4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com>
Message-ID: <8f93a7390710272345g93a5cd5uea9421b404081039@mail.gmail.com>

Ah, thank you _VERY_ much for the tips. I'll pass them along to my server
buddy and see what he has to say.

Again, thank you. :D

On 10/27/07, Computer Guru <computerguru@neosmart.net> wrote:
>
> Ooops - I thought you were linking to the XCache plugin.
>
> http://neosmart.net/dl.php?id=12
>
> eAccelerator and XCache work in the same exact way, but XCache performs
> better.
>
> On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
> >
> > They're both the same (hold on though, I have an update I've been
> meaning
> > to release!) with regards to WP integration - they do the same exact
> thing
> > the same exact way (I based my code off Ryan's).
> >
> > However, XCache is the newest and has (in real-life testing) proven to
> be
> > the fastest - I was using APC then eAccelerator and am now on XCache -
> very
> > happy with it. Memcached is the slowest, but it offers support for
> > distributed servers - but you're not using that.
> >
> > XCache has support for multi-processor setups (I'm using it on a
> dual-core
> > right now, set the "count" option to two).
> >
> > IMHO, go with XCache, it's a good choice.
> >
> > On 10/28/07, Viper007Bond <viper@viper007bond.com> wrote:
> > >
> > > Yeah, dual box hosting was too expensive, so we switched back to a
> > > single
> > > box. Plus, this box has 4 dual core processors, so we can split up the
> > > processors to act as separate servers of sorts.
> > >
> > > Anyway, basically it comes down to which of these to install and would
> > > yield
> > > the best performance:
> > >
> > > http://neosmart.net/dl.php?id=13
> > > http://ryan.wordpress.com/2005/12/23/memcached-backend/
> > >
> > > (As you can only install one)
> > >
> > > On 10/27/07, Stephane Daury <wordpress@tekartist.org> wrote:
> > > >
> > > >
> > > > Hey V,
> > > >
> > > > The core asset of memcache are that it's language agnostic and
> > > > distributed in nature. So it will really pay off if you want to use
> > > > it for all the (compatible) apps running on your server and/or if
> > > > you're running a cluster of box that you can run the daemon on and
> > > > share the load across. It will work fine on it's own, but you lose
> > > > the distributed advantage if you run it on only one machine (load
> > > > balancing and fault tolerance). Kinda using a Ferrari to go grocery
> > > > shopping: it works, but is it really appropriate?
> > > >
> > > > On the other hand, eAccelerator is PHP-only, but has the advantage
> of
> > > > handling both opcode and caching, which is another layer of
> > > > performance tuning.
> > > >
> > > > In the cluster environment I was running at McGill (last day
> > > > yesterday), we pretty much ran both: memcache for caching, because
> we
> > > > had multiple web nodes, and eAccelerator, but purely for the opcode
> > > > advantage of the latter. They don't conflict (but the WP plugins
> > > > using either probably will).
> > > >
> > > > Nothing scientific in my answer (don't have benchmark numbers to
> give
> > > > you), but I think in your context, I'd probably focus on
> > > > eAccelerator, at least for now.
> > > >
> > > > Stephane
> > > >
> > > >
> > > >
> > > >
> > > > On Oct 27, 2007, at 10:53, Viper007Bond wrote:
> > > >
> > > > > I've just upgraded my server and figured it'd be a good time to
> re-
> > > > > examine
> > > > > the big WordPress install on the server and it's optimization. The
> > > > > install
> > > > > gets ~40k hits on a slow day and over 100k on more popular ones
> > > > > (which is
> > > > > 1-3 days of the week).
> > > > >
> > > > > For years now, I've just used WP-Cache. It worked fine and my
> buddy
> > > > > who
> > > > > manages our server for me even enabled caching WP-Cache's folder
> to
> > > > > memory
> > > > > (I think, server configs obviously aren't really my thing). But
> > > after
> > > > > discovering the eAccelerator and Memcache plugins out there that
> > > > > make direct
> > > > > usage of the modules, I figured that'd be more efficient than
> > > > > caching to
> > > > > static files via WP-Cache.
> > > > >
> > > > > However, I'm a bit clueless here and don't know which to use as my
> > > > > buddy
> > > > > says both eAccelerator and Memcache are installed. I'd ask him,
> but
> > > he
> > > > > doesn't know WordPress at all really.
> > > > >
> > > > > phpinfo() -> http://titan.finalgear.com/php.php
> > > > >
> > > > > Server specs can be listed if wanted as to determine which would
> be
> > > > > best for
> > > > > the hardware.
> > > > >
> > > > > So, any thoughts on the matter? And yeah, I did poke around the
> > > Google
> > > > > Groups archive some, but didn't come up with anything of much use.
> > > > > Then
> > > > > again, I'm not a search master.
> > > > >
> > > > > --
> > > > > Viper007Bond | http://www.viper007bond.com/
> > > > > _______________________________________________
> > > > > wp-hackers mailing list
> > > > > wp-hackers@lists.automattic.com
> > > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers@lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > >
> > >
> > >
> > > --
> > > Viper007Bond | http://www.viper007bond.com/
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> >
> > --
> > Computer Guru
> > Director,
> > NeoSmart Technologies
> > http://neosmart.net/blog/
>
>
>
>
> --
> Computer Guru
> Director,
> NeoSmart Technologies
> http://neosmart.net/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From computerguru at neosmart.net  Sun Oct 28 07:45:43 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sun Oct 28 07:45:49 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <8f93a7390710272345g93a5cd5uea9421b404081039@mail.gmail.com>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
	<E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>
	<8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>
	<4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>
	<4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com>
	<8f93a7390710272345g93a5cd5uea9421b404081039@mail.gmail.com>
Message-ID: <4681c7d40710280045o52ad41f4rda678900c2c29e77@mail.gmail.com>

You're mighty welcome ;-)

If it weren't for you, I'd probably have never gotten around to publishing
the updates:
http://neosmart.net/blog/2007/xcache-and-eaccelerator-wp-plugins-updated/

They've been sitting in my virtual "Outbox" folder forever!

Good luck.

On 10/28/07, Viper007Bond <viper@viper007bond.com> wrote:
>
> Ah, thank you _VERY_ much for the tips. I'll pass them along to my server
> buddy and see what he has to say.
>
> Again, thank you. :D
>
> On 10/27/07, Computer Guru <computerguru@neosmart.net> wrote:
> >
> > Ooops - I thought you were linking to the XCache plugin.
> >
> > http://neosmart.net/dl.php?id=12
> >
> > eAccelerator and XCache work in the same exact way, but XCache performs
> > better.
> >
> > On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
> > >
> > > They're both the same (hold on though, I have an update I've been
> > meaning
> > > to release!) with regards to WP integration - they do the same exact
> > thing
> > > the same exact way (I based my code off Ryan's).
> > >
> > > However, XCache is the newest and has (in real-life testing) proven to
> > be
> > > the fastest - I was using APC then eAccelerator and am now on XCache -
> > very
> > > happy with it. Memcached is the slowest, but it offers support for
> > > distributed servers - but you're not using that.
> > >
> > > XCache has support for multi-processor setups (I'm using it on a
> > dual-core
> > > right now, set the "count" option to two).
> > >
> > > IMHO, go with XCache, it's a good choice.
> > >
> > > On 10/28/07, Viper007Bond <viper@viper007bond.com> wrote:
> > > >
> > > > Yeah, dual box hosting was too expensive, so we switched back to a
> > > > single
> > > > box. Plus, this box has 4 dual core processors, so we can split up
> the
> > > > processors to act as separate servers of sorts.
> > > >
> > > > Anyway, basically it comes down to which of these to install and
> would
> > > > yield
> > > > the best performance:
> > > >
> > > > http://neosmart.net/dl.php?id=13
> > > > http://ryan.wordpress.com/2005/12/23/memcached-backend/
> > > >
> > > > (As you can only install one)
> > > >
> > > > On 10/27/07, Stephane Daury <wordpress@tekartist.org> wrote:
> > > > >
> > > > >
> > > > > Hey V,
> > > > >
> > > > > The core asset of memcache are that it's language agnostic and
> > > > > distributed in nature. So it will really pay off if you want to
> use
> > > > > it for all the (compatible) apps running on your server and/or if
> > > > > you're running a cluster of box that you can run the daemon on and
> > > > > share the load across. It will work fine on it's own, but you lose
> > > > > the distributed advantage if you run it on only one machine (load
> > > > > balancing and fault tolerance). Kinda using a Ferrari to go
> grocery
> > > > > shopping: it works, but is it really appropriate?
> > > > >
> > > > > On the other hand, eAccelerator is PHP-only, but has the advantage
> > of
> > > > > handling both opcode and caching, which is another layer of
> > > > > performance tuning.
> > > > >
> > > > > In the cluster environment I was running at McGill (last day
> > > > > yesterday), we pretty much ran both: memcache for caching, because
> > we
> > > > > had multiple web nodes, and eAccelerator, but purely for the
> opcode
> > > > > advantage of the latter. They don't conflict (but the WP plugins
> > > > > using either probably will).
> > > > >
> > > > > Nothing scientific in my answer (don't have benchmark numbers to
> > give
> > > > > you), but I think in your context, I'd probably focus on
> > > > > eAccelerator, at least for now.
> > > > >
> > > > > Stephane
> > > > >
> > > > >
> > > > >
> > > > >
> > > > > On Oct 27, 2007, at 10:53, Viper007Bond wrote:
> > > > >
> > > > > > I've just upgraded my server and figured it'd be a good time to
> > re-
> > > > > > examine
> > > > > > the big WordPress install on the server and it's optimization.
> The
> > > > > > install
> > > > > > gets ~40k hits on a slow day and over 100k on more popular ones
> > > > > > (which is
> > > > > > 1-3 days of the week).
> > > > > >
> > > > > > For years now, I've just used WP-Cache. It worked fine and my
> > buddy
> > > > > > who
> > > > > > manages our server for me even enabled caching WP-Cache's folder
> > to
> > > > > > memory
> > > > > > (I think, server configs obviously aren't really my thing). But
> > > > after
> > > > > > discovering the eAccelerator and Memcache plugins out there that
> > > > > > make direct
> > > > > > usage of the modules, I figured that'd be more efficient than
> > > > > > caching to
> > > > > > static files via WP-Cache.
> > > > > >
> > > > > > However, I'm a bit clueless here and don't know which to use as
> my
> > > > > > buddy
> > > > > > says both eAccelerator and Memcache are installed. I'd ask him,
> > but
> > > > he
> > > > > > doesn't know WordPress at all really.
> > > > > >
> > > > > > phpinfo() -> http://titan.finalgear.com/php.php
> > > > > >
> > > > > > Server specs can be listed if wanted as to determine which would
> > be
> > > > > > best for
> > > > > > the hardware.
> > > > > >
> > > > > > So, any thoughts on the matter? And yeah, I did poke around the
> > > > Google
> > > > > > Groups archive some, but didn't come up with anything of much
> use.
> > > > > > Then
> > > > > > again, I'm not a search master.
> > > > > >
> > > > > > --
> > > > > > Viper007Bond | http://www.viper007bond.com/
> > > > > > _______________________________________________
> > > > > > wp-hackers mailing list
> > > > > > wp-hackers@lists.automattic.com
> > > > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > > >
> > > > > _______________________________________________
> > > > > wp-hackers mailing list
> > > > > wp-hackers@lists.automattic.com
> > > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > > >
> > > >
> > > >
> > > >
> > > > --
> > > > Viper007Bond | http://www.viper007bond.com/
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers@lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > >
> > >
> > >
> > > --
> > > Computer Guru
> > > Director,
> > > NeoSmart Technologies
> > > http://neosmart.net/blog/
> >
> >
> >
> >
> > --
> > Computer Guru
> > Director,
> > NeoSmart Technologies
> > http://neosmart.net/blog/
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Viper007Bond | http://www.viper007bond.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From ozh at planetozh.com  Sun Oct 28 08:52:21 2007
From: ozh at planetozh.com (Ozh)
Date: Sun Oct 28 08:52:34 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <4681c7d40710280045o52ad41f4rda678900c2c29e77@mail.gmail.com>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
	<E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>
	<8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>
	<4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>
	<4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com>
	<8f93a7390710272345g93a5cd5uea9421b404081039@mail.gmail.com>
	<4681c7d40710280045o52ad41f4rda678900c2c29e77@mail.gmail.com>
Message-ID: <ae81acd10710280152h615eb1ebo9142c05ea71e266b@mail.gmail.com>

How do such plugins (xcache, ea, memcache) behave regarding dynamic
parts within files?  To say the least, WP-Cache support for dynamic
stuff is terribly frustrating...

Ozh

-- 
http://FrenchFragFactory.net ~ Daily Quake News
http://planetOzh.com ~ Blog and WordPress Stuff
From computerguru at neosmart.net  Sun Oct 28 09:21:55 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sun Oct 28 09:22:01 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <ae81acd10710280152h615eb1ebo9142c05ea71e266b@mail.gmail.com>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
	<E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>
	<8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>
	<4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>
	<4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com>
	<8f93a7390710272345g93a5cd5uea9421b404081039@mail.gmail.com>
	<4681c7d40710280045o52ad41f4rda678900c2c29e77@mail.gmail.com>
	<ae81acd10710280152h615eb1ebo9142c05ea71e266b@mail.gmail.com>
Message-ID: <4681c7d40710280221h5bb16502xec2e8e91092b552d@mail.gmail.com>

The actual engine doesn't make a difference - it'll only cache the compiled
php, and not the results from the database.

the WP plugins let WP store the results from the DB in the opcode engine. I
found it exteremely easy to hack Brian's Latest Comments to use object cache
(no more 33 extra queries per page!) to store all comments and have it
rebuild the cache when a comment is added.

WP-Cache converts everything to HTML. With object caching + my/ryan/mark's
plugin, a file "opts-in" to the caching process. Basically, you store the
results of a query/calculation in the cache, and add a hook to invalidate
that cache when needed. It's quite easy:

Original line:

$commenters = $wpdb->get_results("SELECT *, UNIX_TIMESTAMP(comment_date) AS
unixdate FROM $tablecomments
WHERE comment_approved = '1'
AND comment_post_ID = '".$post->comment_post_ID."'
$ping
ORDER BY comment_date DESC
LIMIT $num_comments;");

New line:

// BEGIN WP-CACHE CHECK
if ( ( !$commenters = wp_cache_get( 'commenters_' . $post->comment_post_ID,
'blc' ) ) || $invalidated ) {


$commenters = $wpdb->get_results("SELECT *, UNIX_TIMESTAMP(comment_date) AS
unixdate FROM $tablecomments
WHERE comment_approved = '1'
AND comment_post_ID = '".$post->comment_post_ID."'
$ping
ORDER BY comment_date DESC
LIMIT $num_comments;");


wp_cache_add( 'commenters_' . $post->comment_post_ID, $commenters, 'blc' );
}

and

add_action( 'comment_post', 'blc_clear_cache' );

So you basically check if a cache exists by a unique name. if it doesn't
store results of sql cache to the cache. add a hook to invalidate the cache
when action XXXX is performed.

Almost all of WP core uses object cache and properly invalidates it, so no
worries there. Any plugins that don't explicitly use object cache will
display dynamic data. Plugins configured to use object cache will properly
invalidate data. So no disadvantages to using it (plus, object cache code
gracefully degrades if object cache is not enabled).

You have to actively "use" the object cache, unlike wp-cache where
everything is cached. However it's really easy

On 10/28/07, Ozh <ozh@planetozh.com> wrote:
>
> How do such plugins (xcache, ea, memcache) behave regarding dynamic
> parts within files?  To say the least, WP-Cache support for dynamic
> stuff is terribly frustrating...
>
> Ozh
>
> --
> http://FrenchFragFactory.net ~ Daily Quake News
> http://planetOzh.com ~ Blog and WordPress Stuff
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From omry at yadan.net  Sun Oct 28 12:37:21 2007
From: omry at yadan.net (Omry Yadan)
Date: Sun Oct 28 12:38:07 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <ae81acd10710280152h615eb1ebo9142c05ea71e266b@mail.gmail.com>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>	<E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>	<8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>	<4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>	<4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com>	<8f93a7390710272345g93a5cd5uea9421b404081039@mail.gmail.com>	<4681c7d40710280045o52ad41f4rda678900c2c29e77@mail.gmail.com>
	<ae81acd10710280152h615eb1ebo9142c05ea71e266b@mail.gmail.com>
Message-ID: <47248281.1000102@yadan.net>

Indeed.

I banged my head on wp-cache trying to get my stats plugin to work with 
it in a portable way, it's quite a pain.


Ozh wrote:

> How do such plugins (xcache, ea, memcache) behave regarding dynamic
> parts within files?  To say the least, WP-Cache support for dynamic
> stuff is terribly frustrating...
>
> Ozh
>
>   

From ozh at planetozh.com  Sun Oct 28 14:42:03 2007
From: ozh at planetozh.com (Ozh)
Date: Sun Oct 28 14:43:06 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <47248281.1000102@yadan.net>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
	<E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>
	<8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>
	<4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>
	<4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com>
	<8f93a7390710272345g93a5cd5uea9421b404081039@mail.gmail.com>
	<4681c7d40710280045o52ad41f4rda678900c2c29e77@mail.gmail.com>
	<ae81acd10710280152h615eb1ebo9142c05ea71e266b@mail.gmail.com>
	<47248281.1000102@yadan.net>
Message-ID: <ae81acd10710280742r1570a85dk34122351a3e9beee@mail.gmail.com>

While searching how to make one of my plugin compatible with WP-Cache
I came across an interesting post on the same topic:
<http://elliottback.com/wp/archives/2005/07/12/getting-wp-cache-to-work/>

Basically :
1) rewrite all internal WP functions in your plugin to make it
completely WP independent
2) include the plugin with the mclude token.

I've awarded this the PITA Of The Year medal.

On 10/28/07, Omry Yadan <omry@yadan.net> wrote:
> Indeed.
>
> I banged my head on wp-cache trying to get my stats plugin to work with
> it in a portable way, it's quite a pain.
>
>

-- 
http://FrenchFragFactory.net ~ Daily Quake News
http://planetOzh.com ~ Blog and WordPress Stuff
From computerguru at neosmart.net  Sun Oct 28 16:15:47 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sun Oct 28 16:15:55 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <ae81acd10710280742r1570a85dk34122351a3e9beee@mail.gmail.com>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
	<E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>
	<8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>
	<4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>
	<4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com>
	<8f93a7390710272345g93a5cd5uea9421b404081039@mail.gmail.com>
	<4681c7d40710280045o52ad41f4rda678900c2c29e77@mail.gmail.com>
	<ae81acd10710280152h615eb1ebo9142c05ea71e266b@mail.gmail.com>
	<47248281.1000102@yadan.net>
	<ae81acd10710280742r1570a85dk34122351a3e9beee@mail.gmail.com>
Message-ID: <4681c7d40710280915q2f6dda04g87d3643a9c401c00@mail.gmail.com>

What's more painful is how many people use it >.<

WP's object caching model is inherintly much easier to use: you cache and
object and you can delete that object from cache. Whereas WP-Cache caches
the entire document as an HTML file, object cache caches objects in a global
"drawer" where you can call and delete whatever you want. Only what you want
cached gets cached in the first place, and its easy to nullify that cache on
a certain action.

object-caching all DB references + an opcode caching engine gets you
_almost_ the same performance as pure HTML (assuming WP actually uses object
cache for everything). Since WP-Cache isn't even pure HTML (it still has to
request a PHP file which is NOT opcode cached) and since HTML files reside
on the disk (verses opcode caching and object caching where they're in the
memory) you've got quite a bit of overhead.

(Speaking from personal experience here, WP-Cache was enabled w/out any
object cache or opcode caching engine and my site went down with a
slashdotting. Removed WP-Cache, installed XCache + WP XCache plugin +
"object cachified" my plugins and my site withstood the next slashdotting :)

The Big Question:
Does anyone know if WP uses object caching throughout, or if there are
functions in the core which still need to be "object cachified?" (made aware
of object caching and taking advantage of it if present)

On 10/28/07, Ozh <ozh@planetozh.com> wrote:
>
> While searching how to make one of my plugin compatible with WP-Cache
> I came across an interesting post on the same topic:
> <http://elliottback.com/wp/archives/2005/07/12/getting-wp-cache-to-work/>
>
> Basically :
> 1) rewrite all internal WP functions in your plugin to make it
> completely WP independent
> 2) include the plugin with the mclude token.
>
> I've awarded this the PITA Of The Year medal.
>
> On 10/28/07, Omry Yadan <omry@yadan.net> wrote:
> > Indeed.
> >
> > I banged my head on wp-cache trying to get my stats plugin to work with
> > it in a portable way, it's quite a pain.
> >
> >
>
> --
> http://FrenchFragFactory.net ~ Daily Quake News
> http://planetOzh.com ~ Blog and WordPress Stuff
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From ryan at boren.nu  Sun Oct 28 16:30:40 2007
From: ryan at boren.nu (Ryan Boren)
Date: Sun Oct 28 16:30:49 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <4681c7d40710280915q2f6dda04g87d3643a9c401c00@mail.gmail.com>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
	<8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>
	<4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>
	<4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com>
	<8f93a7390710272345g93a5cd5uea9421b404081039@mail.gmail.com>
	<4681c7d40710280045o52ad41f4rda678900c2c29e77@mail.gmail.com>
	<ae81acd10710280152h615eb1ebo9142c05ea71e266b@mail.gmail.com>
	<47248281.1000102@yadan.net>
	<ae81acd10710280742r1570a85dk34122351a3e9beee@mail.gmail.com>
	<4681c7d40710280915q2f6dda04g87d3643a9c401c00@mail.gmail.com>
Message-ID: <c8f37c930710280930y7dcc7f5br748f5716a7280b55@mail.gmail.com>

On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:>
> Does anyone know if WP uses object caching throughout, or if there are
> functions in the core which still need to be "object cachified?" (made aware
> of object caching and taking advantage of it if present)

We've done quite a bit of caching work in 2.4.  It's been extended to
more places.  We also have an advanced caching plugin for 2.4 that
saves the results of the main query.

http://dev.wp-plugins.org/browser/advanced-caching/trunk/advanced-caching.php

The cache in 2.3 covers quite a lot, but in 2.4 I can get many pages
down to 0 queries.  I've been testing with your xcache backend for the
object cache and things are pretty freakin' fast.

Ryan
From computerguru at neosmart.net  Sun Oct 28 16:38:49 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sun Oct 28 16:38:54 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <c8f37c930710280930y7dcc7f5br748f5716a7280b55@mail.gmail.com>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
	<4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>
	<4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com>
	<8f93a7390710272345g93a5cd5uea9421b404081039@mail.gmail.com>
	<4681c7d40710280045o52ad41f4rda678900c2c29e77@mail.gmail.com>
	<ae81acd10710280152h615eb1ebo9142c05ea71e266b@mail.gmail.com>
	<47248281.1000102@yadan.net>
	<ae81acd10710280742r1570a85dk34122351a3e9beee@mail.gmail.com>
	<4681c7d40710280915q2f6dda04g87d3643a9c401c00@mail.gmail.com>
	<c8f37c930710280930y7dcc7f5br748f5716a7280b55@mail.gmail.com>
Message-ID: <4681c7d40710280938u5275f976r509ed8ee01d3fa6a@mail.gmail.com>

On 10/28/07, Ryan Boren <ryan@boren.nu> wrote:
>
> On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:>
> > Does anyone know if WP uses object caching throughout, or if there are
> > functions in the core which still need to be "object cachified?" (made
> aware
> > of object caching and taking advantage of it if present)
>
> We've done quite a bit of caching work in 2.4.  It's been extended to
> more places.  We also have an advanced caching plugin for 2.4 that
> saves the results of the main query.
>
>
> http://dev.wp-plugins.org/browser/advanced-caching/trunk/advanced-caching.php
>
> The cache in 2.3 covers quite a lot, but in 2.4 I can get many pages
> down to 0 queries.  I've been testing with your xcache backend for the
> object cache and things are pretty freakin' fast.
>
> Ryan
>

:O

That's just wicked cool!

I love how the "advanced caching" plugin is also backend-agnostic with
regards to whatever goes on in object-cache.php.

Nice work!

-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From spencerp1 at gmail.com  Sun Oct 28 19:15:20 2007
From: spencerp1 at gmail.com (spencerp)
Date: Sun Oct 28 19:15:41 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4722C3A4.3060300@callum-macdonald.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>
	<4722C3A4.3060300@callum-macdonald.com>
Message-ID: <4724DFC8.2030806@gmail.com>

Callum Macdonald wrote:
> Just a tip, if you use bbPress (forum), it'll integrate user login and 
> registration with WordPress out of the box. It's not as popular as any 
> of the other systems, and I couldn't find any ready made themes for 
> it, but it seems to have all the major forum functions. I'm assuming 
> it'll be pretty easily themable (judging from WordPress).
>
> I do know it integrates in a snap though, just set two variables in 
> the bbPress config and you're off.
Wow, goes to show how long I've been away from bbPress. I haven't really 
had "time" to deal with bbPress for many months now sigh. Me thinks it's 
time to get back into the old swing of things again.. Thanks a ton for 
this tip Callum. =) Now only if MW was that easy.. * cough * yah right.. 
lol..


From computerguru at neosmart.net  Sun Oct 28 19:42:33 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sun Oct 28 19:42:38 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4724DFC8.2030806@gmail.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com> <32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com> <11997-68898@sneakemail.com>
	<4722C3A4.3060300@callum-macdonald.com> <4724DFC8.2030806@gmail.com>
Message-ID: <4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>

It would be nice if all these popular open source projects could use
standards for a lot of things.

I'm looking at the bittorrent client field, and there becgause of the
circumstances and stuff all the "competing" clients are working together to
standardize just about everything from peer exchange to encryption.....

Imagine if we could decide on a de-facto salt+hashing method for
passwords... a standardized user-table layout.... the same cookie format for
everything....

/me spends too much time idealizing.

On 10/28/07, spencerp <spencerp1@gmail.com> wrote:
>
> Callum Macdonald wrote:
> > Just a tip, if you use bbPress (forum), it'll integrate user login and
> > registration with WordPress out of the box. It's not as popular as any
> > of the other systems, and I couldn't find any ready made themes for
> > it, but it seems to have all the major forum functions. I'm assuming
> > it'll be pretty easily themable (judging from WordPress).
> >
> > I do know it integrates in a snap though, just set two variables in
> > the bbPress config and you're off.
> Wow, goes to show how long I've been away from bbPress. I haven't really
> had "time" to deal with bbPress for many months now sigh. Me thinks it's
> time to get back into the old swing of things again.. Thanks a ton for
> this tip Callum. =) Now only if MW was that easy.. * cough * yah right..
> lol..
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From viper at viper007bond.com  Sun Oct 28 19:56:52 2007
From: viper at viper007bond.com (Viper007Bond)
Date: Sun Oct 28 19:57:02 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <4681c7d40710280221h5bb16502xec2e8e91092b552d@mail.gmail.com>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
	<E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>
	<8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>
	<4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>
	<4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com>
	<8f93a7390710272345g93a5cd5uea9421b404081039@mail.gmail.com>
	<4681c7d40710280045o52ad41f4rda678900c2c29e77@mail.gmail.com>
	<ae81acd10710280152h615eb1ebo9142c05ea71e266b@mail.gmail.com>
	<4681c7d40710280221h5bb16502xec2e8e91092b552d@mail.gmail.com>
Message-ID: <8f93a7390710281256x1f9cafd5led953461f1495322@mail.gmail.com>

Okay, so assume I get all the plugins I have installed to be queryless and
using the internal object cache -- would it be as fast as WP-Cache? The
pages are still being generated from scratch rather than just pulled from a
file cache (which is actually cached to memory). It seems like it'd be a
step backwards.

Plus, I already have WP-Cache working just fine (abeit modified quite a bit
to get it working how I want -- gzip + proper dynamic includes), so is it
worth ditching it?

On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
>
> The actual engine doesn't make a difference - it'll only cache the
> compiled
> php, and not the results from the database.
>
> the WP plugins let WP store the results from the DB in the opcode engine.
> I
> found it exteremely easy to hack Brian's Latest Comments to use object
> cache
> (no more 33 extra queries per page!) to store all comments and have it
> rebuild the cache when a comment is added.
>
> WP-Cache converts everything to HTML. With object caching + my/ryan/mark's
> plugin, a file "opts-in" to the caching process. Basically, you store the
> results of a query/calculation in the cache, and add a hook to invalidate
> that cache when needed. It's quite easy:
>
> Original line:
>
> $commenters = $wpdb->get_results("SELECT *, UNIX_TIMESTAMP(comment_date)
> AS
> unixdate FROM $tablecomments
> WHERE comment_approved = '1'
> AND comment_post_ID = '".$post->comment_post_ID."'
> $ping
> ORDER BY comment_date DESC
> LIMIT $num_comments;");
>
> New line:
>
> // BEGIN WP-CACHE CHECK
> if ( ( !$commenters = wp_cache_get( 'commenters_' .
> $post->comment_post_ID,
> 'blc' ) ) || $invalidated ) {
>
>
> $commenters = $wpdb->get_results("SELECT *, UNIX_TIMESTAMP(comment_date)
> AS
> unixdate FROM $tablecomments
> WHERE comment_approved = '1'
> AND comment_post_ID = '".$post->comment_post_ID."'
> $ping
> ORDER BY comment_date DESC
> LIMIT $num_comments;");
>
>
> wp_cache_add( 'commenters_' . $post->comment_post_ID, $commenters, 'blc'
> );
> }
>
> and
>
> add_action( 'comment_post', 'blc_clear_cache' );
>
> So you basically check if a cache exists by a unique name. if it doesn't
> store results of sql cache to the cache. add a hook to invalidate the
> cache
> when action XXXX is performed.
>
> Almost all of WP core uses object cache and properly invalidates it, so no
> worries there. Any plugins that don't explicitly use object cache will
> display dynamic data. Plugins configured to use object cache will properly
> invalidate data. So no disadvantages to using it (plus, object cache code
> gracefully degrades if object cache is not enabled).
>
> You have to actively "use" the object cache, unlike wp-cache where
> everything is cached. However it's really easy
>
> On 10/28/07, Ozh <ozh@planetozh.com> wrote:
> >
> > How do such plugins (xcache, ea, memcache) behave regarding dynamic
> > parts within files?  To say the least, WP-Cache support for dynamic
> > stuff is terribly frustrating...
> >
> > Ozh
> >
> > --
> > http://FrenchFragFactory.net ~ Daily Quake News
> > http://planetOzh.com ~ Blog and WordPress Stuff
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Computer Guru
> Director,
> NeoSmart Technologies
> http://neosmart.net/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Viper007Bond | http://www.viper007bond.com/
From wp-hackers at nj-arp.org  Sun Oct 28 19:59:23 2007
From: wp-hackers at nj-arp.org (Bob)
Date: Sun Oct 28 19:59:37 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ...
	(Yeah,another server opt. discussion)
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com><E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org><8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com><4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com><4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com><8f93a7390710272345g93a5cd5uea9421b404081039@mail.gmail.com><4681c7d40710280045o52ad41f4rda678900c2c29e77@mail.gmail.com><ae81acd10710280152h615eb1ebo9142c05ea71e266b@mail.gmail.com><47248281.1000102@yadan.net><ae81acd10710280742r1570a85dk34122351a3e9beee@mail.gmail.com>
	<4681c7d40710280915q2f6dda04g87d3643a9c401c00@mail.gmail.com>
Message-ID: <001101c8199d$09823ff0$0300a8c0@Toshiba>

The nice thing about WP-Cache is that if the page is in cache, it doesn't 
even connect to the database.

Those of us running WP on shared servers are unlikely to be allowed to 
reserve RAM for either PHP opcodes or database objects.

Bob

----- Original Message ----- 
From: "Computer Guru" <computerguru@neosmart.net>
To: <wp-hackers@lists.automattic.com>
Sent: Sunday, October 28, 2007 12:15 PM
Subject: Re: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... 
(Yeah,another server opt. discussion)


> What's more painful is how many people use it >.<
>
> WP's object caching model is inherintly much easier to use: you cache and
> object and you can delete that object from cache. Whereas WP-Cache caches
> the entire document as an HTML file, object cache caches objects in a 
> global
> "drawer" where you can call and delete whatever you want. Only what you 
> want
> cached gets cached in the first place, and its easy to nullify that cache 
> on
> a certain action.
>
> object-caching all DB references + an opcode caching engine gets you
> _almost_ the same performance as pure HTML (assuming WP actually uses 
> object
> cache for everything). Since WP-Cache isn't even pure HTML (it still has 
> to
> request a PHP file which is NOT opcode cached) and since HTML files reside
> on the disk (verses opcode caching and object caching where they're in the
> memory) you've got quite a bit of overhead.
>
> (Speaking from personal experience here, WP-Cache was enabled w/out any
> object cache or opcode caching engine and my site went down with a
> slashdotting. Removed WP-Cache, installed XCache + WP XCache plugin +
> "object cachified" my plugins and my site withstood the next slashdotting 
> :)
>
> The Big Question:
> Does anyone know if WP uses object caching throughout, or if there are
> functions in the core which still need to be "object cachified?" (made 
> aware
> of object caching and taking advantage of it if present)
>
> On 10/28/07, Ozh <ozh@planetozh.com> wrote:
>>
>> While searching how to make one of my plugin compatible with WP-Cache
>> I came across an interesting post on the same topic:
>> <http://elliottback.com/wp/archives/2005/07/12/getting-wp-cache-to-work/>
>>
>> Basically :
>> 1) rewrite all internal WP functions in your plugin to make it
>> completely WP independent
>> 2) include the plugin with the mclude token.
>>
>> I've awarded this the PITA Of The Year medal.
>>
>> On 10/28/07, Omry Yadan <omry@yadan.net> wrote:
>> > Indeed.
>> >
>> > I banged my head on wp-cache trying to get my stats plugin to work with
>> > it in a portable way, it's quite a pain.
>> >
>> >
>>
>> --
>> http://FrenchFragFactory.net ~ Daily Quake News
>> http://planetOzh.com ~ Blog and WordPress Stuff
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> -- 
> Computer Guru
> Director,
> NeoSmart Technologies
> http://neosmart.net/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

From computerguru at neosmart.net  Sun Oct 28 20:00:34 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sun Oct 28 20:00:42 2007
Subject: [wp-hackers] WP-Cache vs. eAccelerator vs. Memcache vs. ... (Yeah,
	another server opt. discussion)
In-Reply-To: <8f93a7390710281256x1f9cafd5led953461f1495322@mail.gmail.com>
References: <8f93a7390710270753x399e7006m81b5833b225487cd@mail.gmail.com>
	<E48856BF-331B-492A-926C-F7D79E9CBF08@tekartist.org>
	<8f93a7390710272333i3cc26ddan878adb2f1eab8463@mail.gmail.com>
	<4681c7d40710272340j79ebe7dcueff93f56a836d529@mail.gmail.com>
	<4681c7d40710272341t685ee2adrc059821eff5e4137@mail.gmail.com>
	<8f93a7390710272345g93a5cd5uea9421b404081039@mail.gmail.com>
	<4681c7d40710280045o52ad41f4rda678900c2c29e77@mail.gmail.com>
	<ae81acd10710280152h615eb1ebo9142c05ea71e266b@mail.gmail.com>
	<4681c7d40710280221h5bb16502xec2e8e91092b552d@mail.gmail.com>
	<8f93a7390710281256x1f9cafd5led953461f1495322@mail.gmail.com>
Message-ID: <4681c7d40710281300y6c354f33h1c269b9ec7c24604@mail.gmail.com>

Honestly, WP-Cache will still be a bit faster IF you also install an opcode
cacher (like eAccelerator or XCache). You don't need (and won't benefit
from) the WP plugins for the opcode caching engines.

But try it and see.

On 10/28/07, Viper007Bond <viper@viper007bond.com> wrote:
>
> Okay, so assume I get all the plugins I have installed to be queryless and
> using the internal object cache -- would it be as fast as WP-Cache? The
> pages are still being generated from scratch rather than just pulled from
> a
> file cache (which is actually cached to memory). It seems like it'd be a
> step backwards.
>
> Plus, I already have WP-Cache working just fine (abeit modified quite a
> bit
> to get it working how I want -- gzip + proper dynamic includes), so is it
> worth ditching it?
>
> On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
> >
> > The actual engine doesn't make a difference - it'll only cache the
> > compiled
> > php, and not the results from the database.
> >
> > the WP plugins let WP store the results from the DB in the opcode
> engine.
> > I
> > found it exteremely easy to hack Brian's Latest Comments to use object
> > cache
> > (no more 33 extra queries per page!) to store all comments and have it
> > rebuild the cache when a comment is added.
> >
> > WP-Cache converts everything to HTML. With object caching +
> my/ryan/mark's
> > plugin, a file "opts-in" to the caching process. Basically, you store
> the
> > results of a query/calculation in the cache, and add a hook to
> invalidate
> > that cache when needed. It's quite easy:
> >
> > Original line:
> >
> > $commenters = $wpdb->get_results("SELECT *, UNIX_TIMESTAMP(comment_date)
> > AS
> > unixdate FROM $tablecomments
> > WHERE comment_approved = '1'
> > AND comment_post_ID = '".$post->comment_post_ID."'
> > $ping
> > ORDER BY comment_date DESC
> > LIMIT $num_comments;");
> >
> > New line:
> >
> > // BEGIN WP-CACHE CHECK
> > if ( ( !$commenters = wp_cache_get( 'commenters_' .
> > $post->comment_post_ID,
> > 'blc' ) ) || $invalidated ) {
> >
> >
> > $commenters = $wpdb->get_results("SELECT *, UNIX_TIMESTAMP(comment_date)
> > AS
> > unixdate FROM $tablecomments
> > WHERE comment_approved = '1'
> > AND comment_post_ID = '".$post->comment_post_ID."'
> > $ping
> > ORDER BY comment_date DESC
> > LIMIT $num_comments;");
> >
> >
> > wp_cache_add( 'commenters_' . $post->comment_post_ID, $commenters, 'blc'
> > );
> > }
> >
> > and
> >
> > add_action( 'comment_post', 'blc_clear_cache' );
> >
> > So you basically check if a cache exists by a unique name. if it doesn't
> > store results of sql cache to the cache. add a hook to invalidate the
> > cache
> > when action XXXX is performed.
> >
> > Almost all of WP core uses object cache and properly invalidates it, so
> no
> > worries there. Any plugins that don't explicitly use object cache will
> > display dynamic data. Plugins configured to use object cache will
> properly
> > invalidate data. So no disadvantages to using it (plus, object cache
> code
> > gracefully degrades if object cache is not enabled).
> >
> > You have to actively "use" the object cache, unlike wp-cache where
> > everything is cached. However it's really easy
> >
> > On 10/28/07, Ozh <ozh@planetozh.com> wrote:
> > >
> > > How do such plugins (xcache, ea, memcache) behave regarding dynamic
> > > parts within files?  To say the least, WP-Cache support for dynamic
> > > stuff is terribly frustrating...
> > >
> > > Ozh
> > >
> > > --
> > > http://FrenchFragFactory.net ~ Daily Quake News
> > > http://planetOzh.com ~ Blog and WordPress Stuff
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> >
> > --
> > Computer Guru
> > Director,
> > NeoSmart Technologies
> > http://neosmart.net/blog/
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Viper007Bond | http://www.viper007bond.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From computerguru at neosmart.net  Sun Oct 28 20:10:44 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sun Oct 28 20:11:22 2007
Subject: [wp-hackers] OT: DBSlayer, a lightweight,
	JSON-powered Database Abstraction Layer
Message-ID: <4681c7d40710281310q2dbfd083o6b3ee6729b2e2690@mail.gmail.com>

The New York Times, as a part of their move from traditional printed media
to online-based news services, have started up an open-source website where
they're sharing the tools they've written to make it possible.

DBSlayer is one of these tools, it's a very intersted db abstraction layer
(currently only MySQL....) that runs in the background and transmits info
via JSON over HTTP:

http://code.nytimes.com/projects/dbslayer

It's quite useless if you're just running one server, but it's definitely
worth toying with if you have a MySQL server farm in the background and need
a lightweight way to access data directly from your scripts.

(I was surprised to find out that the entire NYTimes website is run under
PHP and MySQL!)

Note: I didn't mention this for anything to do with adding such support to
WP, just thought some might appreciate the code.

-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From robin.adr at gmail.com  Sun Oct 28 21:19:56 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Sun Oct 28 21:20:03 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com> <32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com> <11997-68898@sneakemail.com>
	<4722C3A4.3060300@callum-macdonald.com> <4724DFC8.2030806@gmail.com>
	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
Message-ID: <d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>

On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
>
> It would be nice if all these popular open source projects could use
> standards for a lot of things.


I'll have some of whatever he's smoking... :P
From spencerp1 at gmail.com  Sun Oct 28 21:43:08 2007
From: spencerp1 at gmail.com (spencerp)
Date: Sun Oct 28 21:43:11 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>	<4722C3A4.3060300@callum-macdonald.com>
	<4724DFC8.2030806@gmail.com>	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
Message-ID: <4725026C.9010704@gmail.com>

Robin Adrianse wrote:
> On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
>   
>> It would be nice if all these popular open source projects could use
>> standards for a lot of things.
>>     
>
>
> I'll have some of whatever he's smoking... :P

I'll take some crack n red bud, I mean Marlboro cigarettes. Then lets 
get "them" and all gather around a keg and try to convince the "others" 
to change their code to WordPress code! YAY! I'm sure it will work then! 
If not after the first few tokes, after the last! Oops, I meant keg...
From computerguru at neosmart.net  Sun Oct 28 21:47:09 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sun Oct 28 21:47:15 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4725026C.9010704@gmail.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com> <32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com> <11997-68898@sneakemail.com>
	<4722C3A4.3060300@callum-macdonald.com> <4724DFC8.2030806@gmail.com>
	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
	<4725026C.9010704@gmail.com>
Message-ID: <4681c7d40710281447n12a72636v7e1b318ef90cdfdb@mail.gmail.com>

Ok, ok, I get the point already. :P

On 10/28/07, spencerp <spencerp1@gmail.com> wrote:
>
> Robin Adrianse wrote:
> > On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
> >
> >> It would be nice if all these popular open source projects could use
> >> standards for a lot of things.
> >>
> >
> >
> > I'll have some of whatever he's smoking... :P
>
> I'll take some crack n red bud, I mean Marlboro cigarettes. Then lets
> get "them" and all gather around a keg and try to convince the "others"
> to change their code to WordPress code! YAY! I'm sure it will work then!
> If not after the first few tokes, after the last! Oops, I meant keg...
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From omry at yadan.net  Sun Oct 28 21:51:24 2007
From: omry at yadan.net (Omry Yadan)
Date: Sun Oct 28 21:51:38 2007
Subject: [wp-hackers] WPMU Plugin management
In-Reply-To: <47204566.2060009@linux.ie>
References: <4714A0E2.5000103@yadan.net>	<471F58A6.6020300@callum-macdonald.com>	<471F4D68.1010204@yadan.net>	<471F813E.3080300@linux.ie>	<471FA603.7010704@yadan.net>
	<47204566.2060009@linux.ie>
Message-ID: <4725045C.4000507@yadan.net>

Done:

http://firestats.cc/wiki/WPMUPluginCommander



Donncha O Caoimh wrote:

> Yes, if you have disabled the plugins page, then a regular user, even
> the admin of a blog won't be able to activate a plugin.
>
> Your own plugins page can check the sitemeta record to verify that a
> plugin has been allowed if a blog admin tries to activate it.
>
> Donncha
>
> Omry Yadan wrote:
>>
>> is wpmu protected against users activating plugins through raw http
>> requests?
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From spencerp1 at gmail.com  Sun Oct 28 21:52:45 2007
From: spencerp1 at gmail.com (spencerp)
Date: Sun Oct 28 21:52:51 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4681c7d40710281447n12a72636v7e1b318ef90cdfdb@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>	<4722C3A4.3060300@callum-macdonald.com>
	<4724DFC8.2030806@gmail.com>	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>	<4725026C.9010704@gmail.com>
	<4681c7d40710281447n12a72636v7e1b318ef90cdfdb@mail.gmail.com>
Message-ID: <472504AD.20702@gmail.com>

Computer Guru wrote:
> Ok, ok, I get the point already. :P
Haha. Actually I couldn't resist throwing that BS in there... LOL! But 
yeah, it would be SO much nicer if they all just worked around WP 
code... :P :D Matt (the dev(s) ), where's your version of a WP Wiki at? :P
From ai2097 at users.sourceforge.net  Sun Oct 28 22:01:34 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Sun Oct 28 22:01:40 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<4722C3A4.3060300@callum-macdonald.com>
	<4724DFC8.2030806@gmail.com>
	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
Message-ID: <20071028150134.2e40feae@remstate.com>

On Sun, 28 Oct 2007 14:19:56 -0700, "Robin Adrianse"
<robin.adr@gmail.com> wrote:

> On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
> >
> > It would be nice if all these popular open source projects could use
> > standards for a lot of things.
> 
> I'll have some of whatever he's smoking... :P

What are you talking about? Open Source, as a whole, is built on
a huge foundation of standards. Not only that, but there's a library
for almost everything, and re-use is fairly common. Write a standard
with a BSD-licensed reference implementation, make it visible so people
know about it, and you're gold. 

And since I brought up the topic of visibility -- see also: PAM[1], and
the PHP bindings[2]. I'm pretty sure that plugging this into the WP auth
framework would allow WP and any other PAM-enabled software to work off
the same auth tables. The issue is then simply a matter of getting more
PHP packages to use PAM, vs. rolling their own internal auth system. ;)


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>

[] http://en.wikipedia.org/wiki/Pluggable_Authentication_Modules
[] http://pecl.php.net/package/PAM
From computerguru at neosmart.net  Sun Oct 28 22:05:27 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sun Oct 28 22:05:34 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <20071028150134.2e40feae@remstate.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com> <32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com> <11997-68898@sneakemail.com>
	<4722C3A4.3060300@callum-macdonald.com> <4724DFC8.2030806@gmail.com>
	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
	<20071028150134.2e40feae@remstate.com>
Message-ID: <4681c7d40710281505o7cf5d2f2h1294668594b4ea7e@mail.gmail.com>

My point was kind of that bittorrent clients are a mixture of open and
closed freeware and otherwise software - they don't have the advantage that
all these open-source script-based packages do with complete transparency
and huge communities and mailing lists and all, yet they manage to churn out
these fully-compatible protocols, protocol add-ons, and implementations just
fine.

On 10/29/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
>
> On Sun, 28 Oct 2007 14:19:56 -0700, "Robin Adrianse"
> <robin.adr@gmail.com> wrote:
>
> > On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
> > >
> > > It would be nice if all these popular open source projects could use
> > > standards for a lot of things.
> >
> > I'll have some of whatever he's smoking... :P
>
> What are you talking about? Open Source, as a whole, is built on
> a huge foundation of standards. Not only that, but there's a library
> for almost everything, and re-use is fairly common. Write a standard
> with a BSD-licensed reference implementation, make it visible so people
> know about it, and you're gold.
>
> And since I brought up the topic of visibility -- see also: PAM[1], and
> the PHP bindings[2]. I'm pretty sure that plugging this into the WP auth
> framework would allow WP and any other PAM-enabled software to work off
> the same auth tables. The issue is then simply a matter of getting more
> PHP packages to use PAM, vs. rolling their own internal auth system. ;)
>
>
> --
> Travis
>
> In Series maintainer
> Random coder & quality guy
> <http://remstate.com/>
>
> [] http://en.wikipedia.org/wiki/Pluggable_Authentication_Modules
> [] http://pecl.php.net/package/PAM
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From robin.adr at gmail.com  Sun Oct 28 22:21:01 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Sun Oct 28 22:21:07 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <20071028150134.2e40feae@remstate.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com> <32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com> <11997-68898@sneakemail.com>
	<4722C3A4.3060300@callum-macdonald.com> <4724DFC8.2030806@gmail.com>
	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
	<20071028150134.2e40feae@remstate.com>
Message-ID: <d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>

I'm talking about real-life, apparently... the possiblity of having
standards for these kind of things is pretty slim. Very slim, in fact.
Anyone who says otherwise (OpenID) is a bit of an optimist to say the least.
OpenID, while a great idea, isn't going to catch on easily with the general
public. A tool with only a few geeks (technologically aware people) using it
isn't going to make a huge impact.

On 10/28/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
>
> On Sun, 28 Oct 2007 14:19:56 -0700, "Robin Adrianse"
> <robin.adr@gmail.com> wrote:
>
> > On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
> > >
> > > It would be nice if all these popular open source projects could use
> > > standards for a lot of things.
> >
> > I'll have some of whatever he's smoking... :P
>
> What are you talking about? Open Source, as a whole, is built on
> a huge foundation of standards. Not only that, but there's a library
> for almost everything, and re-use is fairly common. Write a standard
> with a BSD-licensed reference implementation, make it visible so people
> know about it, and you're gold.
>
> And since I brought up the topic of visibility -- see also: PAM[1], and
> the PHP bindings[2]. I'm pretty sure that plugging this into the WP auth
> framework would allow WP and any other PAM-enabled software to work off
> the same auth tables. The issue is then simply a matter of getting more
> PHP packages to use PAM, vs. rolling their own internal auth system. ;)
>
>
> --
> Travis
>
> In Series maintainer
> Random coder & quality guy
> <http://remstate.com/>
>
> [] http://en.wikipedia.org/wiki/Pluggable_Authentication_Modules
> [] http://pecl.php.net/package/PAM
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From computerguru at neosmart.net  Sun Oct 28 22:28:54 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Sun Oct 28 22:29:04 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com> <32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com> <11997-68898@sneakemail.com>
	<4722C3A4.3060300@callum-macdonald.com> <4724DFC8.2030806@gmail.com>
	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
	<20071028150134.2e40feae@remstate.com>
	<d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>
Message-ID: <4681c7d40710281528n3dc1ff9am761fb6307d8ce6ca@mail.gmail.com>

I agree....

hence the "/me spends too much time idealizing." bit ;-)

On 10/29/07, Robin Adrianse <robin.adr@gmail.com> wrote:
>
> I'm talking about real-life, apparently... the possiblity of having
> standards for these kind of things is pretty slim. Very slim, in fact.
> Anyone who says otherwise (OpenID) is a bit of an optimist to say the
> least.
> OpenID, while a great idea, isn't going to catch on easily with the
> general
> public. A tool with only a few geeks (technologically aware people) using
> it
> isn't going to make a huge impact.
>
> On 10/28/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
> >
> > On Sun, 28 Oct 2007 14:19:56 -0700, "Robin Adrianse"
> > <robin.adr@gmail.com> wrote:
> >
> > > On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
> > > >
> > > > It would be nice if all these popular open source projects could use
> > > > standards for a lot of things.
> > >
> > > I'll have some of whatever he's smoking... :P
> >
> > What are you talking about? Open Source, as a whole, is built on
> > a huge foundation of standards. Not only that, but there's a library
> > for almost everything, and re-use is fairly common. Write a standard
> > with a BSD-licensed reference implementation, make it visible so people
> > know about it, and you're gold.
> >
> > And since I brought up the topic of visibility -- see also: PAM[1], and
> > the PHP bindings[2]. I'm pretty sure that plugging this into the WP auth
> > framework would allow WP and any other PAM-enabled software to work off
> > the same auth tables. The issue is then simply a matter of getting more
> > PHP packages to use PAM, vs. rolling their own internal auth system. ;)
> >
> >
> > --
> > Travis
> >
> > In Series maintainer
> > Random coder & quality guy
> > <http://remstate.com/>
> >
> > [] http://en.wikipedia.org/wiki/Pluggable_Authentication_Modules
> > [] http://pecl.php.net/package/PAM
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From robin.adr at gmail.com  Sun Oct 28 23:02:40 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Sun Oct 28 23:02:49 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4681c7d40710281528n3dc1ff9am761fb6307d8ce6ca@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com> <11997-68898@sneakemail.com>
	<4722C3A4.3060300@callum-macdonald.com> <4724DFC8.2030806@gmail.com>
	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
	<20071028150134.2e40feae@remstate.com>
	<d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>
	<4681c7d40710281528n3dc1ff9am761fb6307d8ce6ca@mail.gmail.com>
Message-ID: <d135ca9c0710281602y2ffeab4bkde3a1ec480dfb52@mail.gmail.com>

Yeah, I saw that :). I was more responding to Travis.

On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
>
> I agree....
>
> hence the "/me spends too much time idealizing." bit ;-)
>
> On 10/29/07, Robin Adrianse <robin.adr@gmail.com> wrote:
> >
> > I'm talking about real-life, apparently... the possiblity of having
> > standards for these kind of things is pretty slim. Very slim, in fact.
> > Anyone who says otherwise (OpenID) is a bit of an optimist to say the
> > least.
> > OpenID, while a great idea, isn't going to catch on easily with the
> > general
> > public. A tool with only a few geeks (technologically aware people)
> using
> > it
> > isn't going to make a huge impact.
> >
> > On 10/28/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
> > >
> > > On Sun, 28 Oct 2007 14:19:56 -0700, "Robin Adrianse"
> > > <robin.adr@gmail.com> wrote:
> > >
> > > > On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
> > > > >
> > > > > It would be nice if all these popular open source projects could
> use
> > > > > standards for a lot of things.
> > > >
> > > > I'll have some of whatever he's smoking... :P
> > >
> > > What are you talking about? Open Source, as a whole, is built on
> > > a huge foundation of standards. Not only that, but there's a library
> > > for almost everything, and re-use is fairly common. Write a standard
> > > with a BSD-licensed reference implementation, make it visible so
> people
> > > know about it, and you're gold.
> > >
> > > And since I brought up the topic of visibility -- see also: PAM[1],
> and
> > > the PHP bindings[2]. I'm pretty sure that plugging this into the WP
> auth
> > > framework would allow WP and any other PAM-enabled software to work
> off
> > > the same auth tables. The issue is then simply a matter of getting
> more
> > > PHP packages to use PAM, vs. rolling their own internal auth system.
> ;)
> > >
> > >
> > > --
> > > Travis
> > >
> > > In Series maintainer
> > > Random coder & quality guy
> > > <http://remstate.com/>
> > >
> > > [] http://en.wikipedia.org/wiki/Pluggable_Authentication_Modules
> > > [] http://pecl.php.net/package/PAM
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Computer Guru
> Director,
> NeoSmart Technologies
> http://neosmart.net/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ai2097 at users.sourceforge.net  Sun Oct 28 23:04:56 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Sun Oct 28 23:05:05 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<4722C3A4.3060300@callum-macdonald.com>
	<4724DFC8.2030806@gmail.com>
	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
	<20071028150134.2e40feae@remstate.com>
	<d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>
Message-ID: <20071028160456.2240cb65@remstate.com>

On Sun, 28 Oct 2007 15:21:01 -0700, "Robin Adrianse"
<robin.adr@gmail.com> wrote:

> I'm talking about real-life, apparently...

I reject your reality and substitute my own. ;)

> the possiblity of having standards for these kind of things is pretty
> slim. Very slim, in fact. Anyone who says otherwise (OpenID) is a bit
> of an optimist to say the least. OpenID, while a great idea, isn't
> going to catch on easily with the general public. A tool with only a
> few geeks (technologically aware people) using it isn't going to make
> a huge impact.

That's another issue altogether. OpenID is for a larger problem space
(single sign-on *across sites*), and that idea has already been shown
to be more-or-less a bust (can you say Passport?).

Stop me if I'm wrong here, but the issue at hand is SOS for all the
services on a *single site* -- the Wiki, forum, blog, bug tracker, etc.
Having to log in once for each service on the same site is a huge PITA
for users and admins alike. Shared authentication in this case, via a
simple auth library, is a no-brainer -- all it requires is an API;
nothing else (tables, hashes, salt...) needs to be specified. The end
result winds up sounding very PAM-like (possibly even PAM itself),
since the ultimate authentication could be done against any number of
things (a centralized MySQL DB, OpenID, LDAP, what have you).

From what I'm hearing, the current practice (hacking up a whole bunch
of products as-needed so that they work off the same auth tables) is
just one step away from this. Just abstract the auth logic out into a
couple function calls, and voila -- you have a unified (single-site)
auth architecture. It's a whole hell of a lot easier to write it
once to patch into products vs. rewriting the whole thing for every new
integration. It's not idealistic, it's pragmatic.


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From wordpress at santosj.name  Sun Oct 28 23:13:18 2007
From: wordpress at santosj.name (Jacob)
Date: Sun Oct 28 23:14:08 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>	<4722C3A4.3060300@callum-macdonald.com>
	<4724DFC8.2030806@gmail.com>	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>	<20071028150134.2e40feae@remstate.com>
	<d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>
Message-ID: <4725178E.4010007@santosj.name>

So you are saying that interoperability between projects that don't mean 
shit to each other have a better chance of doing so than some 
abstraction layer between the projects and users. phpBB offers such an 
authentication and if you request that they change it, they will link 
you to the documentation that tells you how to link with their system.

OpenID isn't that difficult to implement with two libraries with PHP4 
support. The only thing keeping it back is this mentality that users 
won't use it and they won't without mainstream support in web 
applications. Unless the mainstream you are referring to are web 
application developers and not users. If you are unaware, Microsoft, 
Google, AOL, WordPress.com and others are already backing OpenID. I 
doubt you are smarter than they are, but don't take that personally, I'm 
sure they are smarter than I am too.

Comparing these two scenarios which do you think Users would prefer?

First Solution:
1. Go to site, need to do something.
2. Register, Fill out username.
3. Username is already taken. Fill out another username.
4. Repeat #3 until some obscure username is found to be unique.
5. Keep #4 username in memory for use later.

Some distance time in the future:

6. Hmm, what username did I have before. Go to "Forget Username" and 
fill out form and get username/password from email.

Second Solution:
1. Go to site, need to do something.
2. Fill in URL address to profile from AOL, blogspot, OpenID web site, 
or personal web site in Username field.
3. Register and create password
4. Do whatever
5. Either does not need to store web site in some distance future use 
because can use OpenID.

You must be joking, based on your lack of facts and head up your ass 
attitude. Try again and this time use sources. If you are going to 
blatantly advocate FUD, then I will reserve my right to call you out on it.

Jacob Santos

Robin Adrianse wrote:
> I'm talking about real-life, apparently... the possiblity of having
> standards for these kind of things is pretty slim. Very slim, in fact.
> Anyone who says otherwise (OpenID) is a bit of an optimist to say the least.
> OpenID, while a great idea, isn't going to catch on easily with the general
> public. A tool with only a few geeks (technologically aware people) using it
> isn't going to make a huge impact.
>
> On 10/28/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
>   
>> On Sun, 28 Oct 2007 14:19:56 -0700, "Robin Adrianse"
>> <robin.adr@gmail.com> wrote:
>>
>>     
>>> On 10/28/07, Computer Guru <computerguru@neosmart.net> wrote:
>>>       
>>>> It would be nice if all these popular open source projects could use
>>>> standards for a lot of things.
>>>>         
>>> I'll have some of whatever he's smoking... :P
>>>       
>> What are you talking about? Open Source, as a whole, is built on
>> a huge foundation of standards. Not only that, but there's a library
>> for almost everything, and re-use is fairly common. Write a standard
>> with a BSD-licensed reference implementation, make it visible so people
>> know about it, and you're gold.
>>
>> And since I brought up the topic of visibility -- see also: PAM[1], and
>> the PHP bindings[2]. I'm pretty sure that plugging this into the WP auth
>> framework would allow WP and any other PAM-enabled software to work off
>> the same auth tables. The issue is then simply a matter of getting more
>> PHP packages to use PAM, vs. rolling their own internal auth system. ;)
>>
>>
>> --
>> Travis
>>
>> In Series maintainer
>> Random coder & quality guy
>> <http://remstate.com/>
>>
>> [] http://en.wikipedia.org/wiki/Pluggable_Authentication_Modules
>> [] http://pecl.php.net/package/PAM
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   


-- 

Jacob Santos

http://www.santosj.name - blog
http://wordpress.svn.dragonu.net/unittest/ - unofficial WP unit test suite.

Also known as darkdragon and santosj on WP trac.

From wordpress at santosj.name  Sun Oct 28 23:30:03 2007
From: wordpress at santosj.name (Jacob)
Date: Sun Oct 28 23:30:52 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <20071028160456.2240cb65@remstate.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<4722C3A4.3060300@callum-macdonald.com>	<4724DFC8.2030806@gmail.com>	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>	<20071028150134.2e40feae@remstate.com>	<d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>
	<20071028160456.2240cb65@remstate.com>
Message-ID: <47251B7B.1030208@santosj.name>

Travis Snoozy wrote:
> On Sun, 28 Oct 2007 15:21:01 -0700, "Robin Adrianse"
> <robin.adr@gmail.com> wrote:
>
>   
>> I'm talking about real-life, apparently...
>>     
>
> I reject your reality and substitute my own. ;)
>
>   
>> the possiblity of having standards for these kind of things is pretty
>> slim. Very slim, in fact. Anyone who says otherwise (OpenID) is a bit
>> of an optimist to say the least. OpenID, while a great idea, isn't
>> going to catch on easily with the general public. A tool with only a
>> few geeks (technologically aware people) using it isn't going to make
>> a huge impact.
>>     
>
> That's another issue altogether. OpenID is for a larger problem space
> (single sign-on *across sites*), and that idea has already been shown
> to be more-or-less a bust (can you say Passport?).
>   

Stop. Passport had more drastic issues than that and should not be 
referenced based on Passport. The primary reason it failed can be 
researched, but regardless, subsequent security issues didn't help. 
OpenID isn't a solution for username/password combinations.

> From what I'm hearing, the current practice (hacking up a whole bunch
> of products as-needed so that they work off the same auth tables) is
> just one step away from this. Just abstract the auth logic out into a
> couple function calls, and voila -- you have a unified (single-site)
> auth architecture. It's a whole hell of a lot easier to write it
> once to patch into products vs. rewriting the whole thing for every new
> integration. It's not idealistic, it's pragmatic.
This in theory makes sense, but no one is going to do it. Good luck anyway.

The solution is not to revert to a standard where everyone uses the same 
library/function calls, but offers API, like WordPress does for cross 
web app authentication. Several major applications already do this by 
way of creating specific cookies or calling a web application specific 
function.

The problem is that web applications can know or don't care which 
primary web application the user chooses. They can't spend the time on 
that. Their primary concern is allowing for others to use their methods 
(functions/classes) for single site sign on.

-- 

Jacob Santos

http://www.santosj.name - blog
http://wordpress.svn.dragonu.net/unittest/ - unofficial WP unit test suite.

Also known as darkdragon and santosj on WP trac.

From ai2097 at users.sourceforge.net  Mon Oct 29 00:26:34 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Mon Oct 29 00:26:41 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <47251B7B.1030208@santosj.name>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<4722C3A4.3060300@callum-macdonald.com>
	<4724DFC8.2030806@gmail.com>
	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
	<20071028150134.2e40feae@remstate.com>
	<d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>
	<20071028160456.2240cb65@remstate.com>
	<47251B7B.1030208@santosj.name>
Message-ID: <20071028172634.60e358bf@remstate.com>

On Sun, 28 Oct 2007 18:30:03 -0500, Jacob <wordpress@santosj.name>
wrote:

> > That's another issue altogether. OpenID is for a larger problem
> > space 
<snip>
> OpenID isn't a solution for username/password combinations.
<snip>

What I'm getting at is that OpenID, specifically, is irrelevant to this
conversation. It's just another way to do auth -- it doesn't matter
*how* it gets done, just that every service (wiki, forum, bug tracker,
etc.) uses the same method.

<snip>
> > Just abstract the auth logic out into a couple function calls, and
> > voila -- you have a unified (single-site) auth architecture.
<snip>
> This in theory makes sense, but no one is going to do it. Good luck
> anyway.
>
> The solution is not to revert to a standard where everyone uses the
> same library/function calls, but offers API, like WordPress does for
> cross web app authentication. Several major applications already do
> this by way of creating specific cookies or calling a web application
> specific function.

We're pretty much in violent agreement here ;). It's just a matter of
"how", and there are several reasons why a standard approach is better
vs. each product rolling their own API.

The "override my auth system" approach is useful, and I *vastly*
prefer it to having a hard-coded auth system in a product. However, it
places the burden on people who create single sign on systems to also
create plugins for each and every one of these products. By
standardizing on an API and conventions, it would allow people to write
an auth system once, and have it work *without* needing this extra
layer of product-to-product glue code (and the potential security flaws
that could be introduced by subtle semantic differences between
products). Likewise, for products without native support for the
standard, but with a pluggable interface, it would still allow an
integration plugin to be written once for each product, and work with
*all* auth providers conforming to the standard. People can work on
making one chunk of code really solid, instead of having a million
different chunks of code that do almost-but-not-quite the same thing.

> The problem is that web applications can know or don't care which 
> primary web application the user chooses.
<snip>

Yep. Shouldn't know or care. Authentication is authentication. I'm
saying that there should be no "primary" web application -- all the
auth logic should be centralized behind a common API so that logging in
in one place is *exactly the same* as logging in somewhere else
(within a single site).


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From 0vcqn5q02 at sneakemail.com  Mon Oct 29 00:33:06 2007
From: 0vcqn5q02 at sneakemail.com (Sneaks)
Date: Mon Oct 29 00:33:39 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <20071028172634.60e358bf@remstate.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<4722C3A4.3060300@callum-macdonald.com>	<4724DFC8.2030806@gmail.com>	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>	<20071028150134.2e40feae@remstate.com>	<d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>	<20071028160456.2240cb65@remstate.com>	<47251B7B.1030208@santosj.name>
	<20071028172634.60e358bf@remstate.com>
Message-ID: <30056-07425@sneakemail.com>

> Yep. Shouldn't know or care. Authentication is authentication. I'm
> saying that there should be no "primary" web application -- all the
> auth logic should be centralized behind a common API so that logging in
> in one place is *exactly the same* as logging in somewhere else
> (within a single site).

i'd also like to take this moment to again point out that there is a big 
difference between having one username to login to different parts of a 
site, and actually logging in one time for all parts of the site.

most of this thread has just been about merging tabular user data, but 
my original question was about getting other applications in the same 
site to recognize that a user was already authenticated inside 
application X.

B
From ai2097 at users.sourceforge.net  Mon Oct 29 01:12:00 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Mon Oct 29 01:12:06 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <30056-07425@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<4722C3A4.3060300@callum-macdonald.com>
	<4724DFC8.2030806@gmail.com>
	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
	<20071028150134.2e40feae@remstate.com>
	<d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>
	<20071028160456.2240cb65@remstate.com>
	<47251B7B.1030208@santosj.name>
	<20071028172634.60e358bf@remstate.com> <30056-07425@sneakemail.com>
Message-ID: <20071028181200.5d2417de@remstate.com>

On Sun, 28 Oct 2007 17:33:06 -0700, "Sneaks" <0vcqn5q02@sneakemail.com>
wrote:

> most of this thread has just been about merging tabular user data,
> but my original question was about getting other applications in the
> same site to recognize that a user was already authenticated inside 
> application X.

(from the initial message)
> Anyone have any idea how to share cookies from WP to Mediawiki? I
> know there's lots of work out there to share db tables, but I don't
> want users to have to sign in twice.
>
> The ideal would be that Mediawiki reads the cookies from WP, but I
> don't know how many side effects this would have.

I'm aiming in the same direction you are -- a single chunk of code
that will say "you're logged in" or "you're not logged in" for the
entire site. However, it would be application agnostic (e.g., you
could log into Mediawiki or WordPress, but logging into would would
automatically log you into the other), so it's not sharing any
applicatin-specific cookies.

That said, you could very likely get WordPress running off the
MediaWiki cookie if it contains the username; just check the
MediaWiki cookie and call wp_set_current_user() from a plugin. I don't
know about getting MediaWiki to run off the WordPress cookie, because
you'd be changing MediaWiki code at that point (you shouldn't have to
change WordPress at all). The usernames would still need to exist in a
synced or shared table in both cases, but I assume you have this taken
care of.


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From wordpress at santosj.name  Mon Oct 29 03:00:08 2007
From: wordpress at santosj.name (Jacob)
Date: Mon Oct 29 03:00:58 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <20071028172634.60e358bf@remstate.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<4722C3A4.3060300@callum-macdonald.com>	<4724DFC8.2030806@gmail.com>	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>	<20071028150134.2e40feae@remstate.com>	<d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>	<20071028160456.2240cb65@remstate.com>	<47251B7B.1030208@santosj.name>
	<20071028172634.60e358bf@remstate.com>
Message-ID: <47254CB8.2010206@santosj.name>

Travis Snoozy wrote:
> On Sun, 28 Oct 2007 18:30:03 -0500, Jacob <wordpress@santosj.name>
> wrote:
>
>   
>>> That's another issue altogether. OpenID is for a larger problem
>>> space 
>>>       
> <snip>
>   
>> OpenID isn't a solution for username/password combinations.
>>     
> <snip>
>
> What I'm getting at is that OpenID, specifically, is irrelevant to this
> conversation. It's just another way to do auth -- it doesn't matter
> *how* it gets done, just that every service (wiki, forum, bug tracker,
> etc.) uses the same method.
>
> <snip>
>   
>>> Just abstract the auth logic out into a couple function calls, and
>>> voila -- you have a unified (single-site) auth architecture.
>>>       
> <snip>
>   
>> This in theory makes sense, but no one is going to do it. Good luck
>> anyway.
>>
>> The solution is not to revert to a standard where everyone uses the
>> same library/function calls, but offers API, like WordPress does for
>> cross web app authentication. Several major applications already do
>> this by way of creating specific cookies or calling a web application
>> specific function.
>>     
>
> We're pretty much in violent agreement here ;). It's just a matter of
> "how", and there are several reasons why a standard approach is better
> vs. each product rolling their own API.
>   
I've thought about this trust me, and unless someone like Matt 
personally makes the effort to do so then I don't see any project doing 
so. The biggest projects out there spent a great deal of time on their 
Auth system. Any adoption would have to be built on top of their Auth 
system first and published as a plugin. The people that use those 
projects will have to install said plugin, which is unlikely since the 
only advantage is that they get compatibility, which you could move 
forward by using the plugin to provide single sign on to other projects 
(people will bow and build idols to your name).

You need someone big, someone like me or you, Joe Programmer, doesn't 
have enough Karma. Of course the guy that developed OpenID either and 
look where he is now. Microsoft is up on OpenID.
> The "override my auth system" approach is useful, and I *vastly*
> prefer it to having a hard-coded auth system in a product. However, it
> places the burden on people who create single sign on systems to also
> create plugins for each and every one of these products. By
> standardizing on an API and conventions, it would allow people to write
> an auth system once, and have it work *without* needing this extra
> layer of product-to-product glue code (and the potential security flaws
> that could be introduced by subtle semantic differences between
> products). Likewise, for products without native support for the
> standard, but with a pluggable interface, it would still allow an
> integration plugin to be written once for each product, and work with
> *all* auth providers conforming to the standard. People can work on
> making one chunk of code really solid, instead of having a million
> different chunks of code that do almost-but-not-quite the same thing.
>
>   
>> The problem is that web applications can know or don't care which 
>> primary web application the user chooses.
>>     
> <snip>
>
> Yep. Shouldn't know or care. Authentication is authentication. I'm
> saying that there should be no "primary" web application -- all the
> auth logic should be centralized behind a common API so that logging in
> in one place is *exactly the same* as logging in somewhere else
> (within a single site).
>
>
>   
Hmm. Code wise this would be sexy, but it would have to be extremely 
simple and not centrally supported by any one product. Meaning it would 
have to be a community thing. The only problem would be to get other 
applications to adopt it and it would be difficult since they have 
developed their own API and as I said, they think their method is best 
and can't understand why other products don't use their superior method.

Single_Auth::Register('phpBB_authenticate'); // 
Single_Auth_Register($callback);
Single_Auth::Register('wp_login');

Single_Auth::Authenticate($username, $password); // 
Single_Auth_Authenticate($username, $password);

Simple enough?

Jacob Santos

-- 

Jacob Santos

http://www.santosj.name - blog
http://wordpress.svn.dragonu.net/unittest/ - unofficial WP unit test suite.

Also known as darkdragon and santosj on WP trac.

From wordpress at santosj.name  Mon Oct 29 03:06:14 2007
From: wordpress at santosj.name (Jacob)
Date: Mon Oct 29 03:08:11 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <30056-07425@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<4722C3A4.3060300@callum-macdonald.com>	<4724DFC8.2030806@gmail.com>	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>	<20071028150134.2e40feae@remstate.com>	<d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>	<20071028160456.2240cb65@remstate.com>	<47251B7B.1030208@santosj.name>	<20071028172634.60e358bf@remstate.com>
	<30056-07425@sneakemail.com>
Message-ID: <47254E26.3080101@santosj.name>

Sneaks wrote:
>> Yep. Shouldn't know or care. Authentication is authentication. I'm
>> saying that there should be no "primary" web application -- all the
>> auth logic should be centralized behind a common API so that logging in
>> in one place is *exactly the same* as logging in somewhere else
>> (within a single site).
>
> i'd also like to take this moment to again point out that there is a 
> big difference between having one username to login to different parts 
> of a site, and actually logging in one time for all parts of the site.
>
> most of this thread has just been about merging tabular user data, but 
> my original question was about getting other applications in the same 
> site to recognize that a user was already authenticated inside 
> application X.

Well, if you are talking about databases, then I think the issue is more 
that you won't get any project to develop a system where the 
username/password is completely separate table from all other profile 
information. Projects like phpBB (v2.x) have the entire username 
password in one table.

However, I think the solution you are talking about and I think that 
WordPress has (the code, I think has this capability, have to double 
check) is referencing which table has the username/password and what the 
field name is of each. You don't really need to know about the profile 
information (but it would be nice to not have to keep filling out the 
damn information for each project).

There are several projects that do this already. However the method for 
which to let the project know is different. Most only give you a 
function to use and call to sign the person in for that project. 
However, all of these projects would have to be on the same server or 
domain, but I'm most likely wrong about this depending on if my theory 
about PHP cookie writing is correct.


-- 

Jacob Santos

http://www.santosj.name - blog
http://wordpress.svn.dragonu.net/unittest/ - unofficial WP unit test suite.

Also known as darkdragon and santosj on WP trac.

From mike at uwmike.com  Mon Oct 29 06:21:34 2007
From: mike at uwmike.com (Mike Purvis)
Date: Mon Oct 29 06:21:40 2007
Subject: [wp-hackers] Roles and Capabilities
In-Reply-To: <8b9d21f20710241216m5a86e20dj15fbd5ff2392542d@mail.gmail.com>
References: <8b9d21f20710241216m5a86e20dj15fbd5ff2392542d@mail.gmail.com>
Message-ID: <d9b01a0710282321h1498731cvd2edcf526a1b2713@mail.gmail.com>

Depending on what your needs are as far as public commenting, your
usage pattern might be a little more in line with message-board
software rather than a blog. I manage a community site with a couple
dozen active users at <http://tron09.com>, and it's all PunBB and
MediaWiki under the hood, with a little custom script pulling the
"News" and "Sweet Links" into the homepage.

Mike


On 10/25/07, Richard Brown <rich@cregy.co.uk> wrote:
> Hi All
>
> I am building a site for multiple users. Each user will only have the
> ability to edit their own posts, pages, etc. But I will also be using
> a plugin to display images. Is it possible to use the roles and
> capabilities function to restrict each user to add, edit or delete
> their own images only please?
>
> I am beginning to think this is a place for MU. It is actually a
> website for a society who will change membership annually. What do
> others think?
>
> Thanks.
> --
> Kind regards
> Rich
> http://www.cregy.co.uk
> Embracing what God does for you is the best thing you can do for him.
> Romans 12 v 1
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://uwmike.com // http://googlemapsbook.com
From computerguru at neosmart.net  Mon Oct 29 07:05:51 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Mon Oct 29 07:06:04 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <47254E26.3080101@santosj.name>
References: <4721843C.2000701@sneakemail.com>
	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
	<20071028150134.2e40feae@remstate.com>
	<d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>
	<20071028160456.2240cb65@remstate.com> <47251B7B.1030208@santosj.name>
	<20071028172634.60e358bf@remstate.com> <30056-07425@sneakemail.com>
	<47254E26.3080101@santosj.name>
Message-ID: <4681c7d40710290005w142a94ajb48105df64c37a36@mail.gmail.com>

Honestly, you could solve all this without any help/cooperation from other
projects by simply writing a standalone authentication system.

Users register/log-in at your custom script.

This script is not a passive element that interfaces between multiple APIs
in different projects, instead, this script has plugins that explain how
user info is stored in MediaWiki, WordPress, vBulletin, etc. and it ACTIVELY
opens other tables, inserts user info in all of them, creates the (multiple)
needed cookies, and sets the user off on his or her way.

Only problem is what happens when the user wants to change a password, edit
an email, etc. and attempts to do so from within one of the projects instead
of your centralized authentication system - then your info is out of sync
and everything will be a mess. For stuff like wordpress with plenty of hooks
and stuff you can easily add a plugin to WordPress that will update the
central auth system's info when a user changes stuff - but then that is no
longer the "independant master auth" system at work.

For user registration, a simple mod_rewrite directing everyone away from
/forums/login.php and /wordpress/wp-login.php to the central auth should do
the trick.

I currently have a gallery (Gallery2), blog (WordPress), forum (vBulletin),
bug tracker (JIRA), wiki (Confluence). and a couple other things tucked away
on my site. When I first launched, I would've killed for this discussion,
but that was a long time ago and I had no idea what any of this stuff was.

Luckily for me, I ended up disabling user registration everywhere except the
forums and the blog (where people can just write anonymously with their
existing forum usernames) so it's mosty a non-issue, i.e. no one is having
to log into multiple sites (but me!) so I can live with that.


On 10/29/07, Jacob <wordpress@santosj.name> wrote:
>
> Sneaks wrote:
> >> Yep. Shouldn't know or care. Authentication is authentication. I'm
> >> saying that there should be no "primary" web application -- all the
> >> auth logic should be centralized behind a common API so that logging in
> >> in one place is *exactly the same* as logging in somewhere else
> >> (within a single site).
> >
> > i'd also like to take this moment to again point out that there is a
> > big difference between having one username to login to different parts
> > of a site, and actually logging in one time for all parts of the site.
> >
> > most of this thread has just been about merging tabular user data, but
> > my original question was about getting other applications in the same
> > site to recognize that a user was already authenticated inside
> > application X.
>
> Well, if you are talking about databases, then I think the issue is more
> that you won't get any project to develop a system where the
> username/password is completely separate table from all other profile
> information. Projects like phpBB (v2.x) have the entire username
> password in one table.
>
> However, I think the solution you are talking about and I think that
> WordPress has (the code, I think has this capability, have to double
> check) is referencing which table has the username/password and what the
> field name is of each. You don't really need to know about the profile
> information (but it would be nice to not have to keep filling out the
> damn information for each project).
>
> There are several projects that do this already. However the method for
> which to let the project know is different. Most only give you a
> function to use and call to sign the person in for that project.
> However, all of these projects would have to be on the same server or
> domain, but I'm most likely wrong about this depending on if my theory
> about PHP cookie writing is correct.
>
>
> --
>
> Jacob Santos
>
> http://www.santosj.name - blog
> http://wordpress.svn.dragonu.net/unittest/ - unofficial WP unit test
> suite.
>
> Also known as darkdragon and santosj on WP trac.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From lists.automattic.com at callum-macdonald.com  Mon Oct 29 18:26:08 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Mon Oct 29 18:26:33 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
Message-ID: <472625C0.8080805@callum-macdonald.com>

Integrating WordPress and MediaWiki should be relatively simple.

MediaWiki relies on a couple of cookies being set, one of them contains 
a "key" that's set in the MW user table. So on WP login, you need to 
update the "key", set the cookies, and you should be off. I know it's 
that easy with WordPress.

If you can use bbPress for the forum, you'll have all three from one 
login in a snap (I reckon less than an hours work and probably 40 lines 
of code).

Cheers - Callum.

Jan Bucher wrote:
> I am working on exactly the same Setup (Vanilla, MW, WP). Until now i
> did not care about cookies, so no help there. But a good thought:
>
> Vanilla has the most extensive User-System, because of the
> Group-System (you can actually create your own roles/groups). I needed
> that, so my starting point had to be vanilla ..
>
> You can now very easily hook the vanilla authentication into MW, using
> the following 'plugin' (which by the way is not really a plugin, just
> a howto sold as plugin):
> http://lussumo.com/addons/index.php?PostBackAction=AddOn&AddOnID=130
>
> If you don't plan to use the extra-features, try bbpress. Seems to be
> more reliable and the installation process is a lot easier than
> vanilla.
>
> And if you find a good soluton ... let us know .. ;)
>
> Jan
>
> On 10/27/07, Sneaks <0vcqn5q02@sneakemail.com> wrote:
>   
>> thanks Callum, you've been more useful than Google!
>>
>> i think i'd prefer to leave the master set on WP if nothing more than
>> because the UI to manage users is much better.
>>
>> i'm actually trying to tie in three different systems for a cancer
>> non-profit: WP, Mediawiki and Vanilla (forum software). i just assumed
>> nobody would have any Vanilla experience :)
>>
>>
>>
>>
>>     
>>> We're doing it the other way, creating the users in our own system (in
>>> this example MediaWiki) and then creating the WordPress cookies. I'm not
>>> sure how MediaWiki works, but with WordPress if you insert the rows into
>>> the user table and create the cookies, the user never has to log in.
>>> WordPress handles it all on the fly
>>>
>>> So if you can redirect all WordPress logins to MediaWiki logins, then
>>> you create the MediaWiki and WP cookies and redirect back, you're in
>>> business.
>>>
>>> Ok, I just checked with MediaWiki version 1.11.0 and it requires an auth
>>> token to be updated in the user table and set in the cookie. For that
>>> reason, I'd suggest using MediaWiki's login, copy the data to WordPress,
>>> and then set the WordPress cookies. WP will do the rest.
>>>
>>> I think MediaWiki's approach is intrinsically more secure than WP's, but
>>> that's a topic for another day / thread! :)
>>>
>>> Cheers - Callum.
>>>
>>> Sneaks wrote:
>>>       
>>>> thats an interesting idea. i suppose i could hook into the wp cookie
>>>> functions and set the mediawiki authentication cookies.
>>>>
>>>> last night i was playing around and set WP's cookie root to /, and was
>>>> using:
>>>>
>>>> include($_SERVER[DOCUMENT_ROOT]."/blog/wp-blog-header.php");
>>>> auth_redirect();
>>>> wp_get_current_user();
>>>>
>>>> in a mediawiki auth plugin. i think that direction would also work,
>>>> but i'm worried about the lack of user data in the mediawiki db.
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> Callum Macdonald lists.automattic.com-at-callum-macdonald.com
>>>> |wordpress| wrote:
>>>>         
>>>>> Logging a user into WP via the cookie is relatively simple. Check out
>>>>> pluggable.php for the wp_setcookie() function.
>>>>>
>>>>> Two cookies handle the login:
>>>>> wordpressuser_MD5OFSITEURL
>>>>> wordpresspass_MD5OFSITEURL
>>>>>
>>>>> The user cookie takes the username in plain text, the pass takes a
>>>>> double md5 of the password (just md5 what's in the user db).
>>>>>
>>>>> We're integrating WPMU login with another system, so we're writing
>>>>> our users to the wp user db then setting the cookies for WP. WP
>>>>> doesn't handle any login or logout functions.
>>>>>
>>>>> Cheers - Callum.
>>>>>
>>>>> [1]
>>>>> http://trac.wordpress.org/browser/trunk/wp-includes/pluggable.php?rev=6291#L458
>>>>>
>>>>>
>>>>> Bertrand wrote:
>>>>>           
>>>>>> Anyone have any idea how to share cookies from WP to Mediawiki? I
>>>>>> know there's lots of work out there to share db tables, but I don't
>>>>>> want users to have to sign in twice.
>>>>>>
>>>>>> The ideal would be that Mediawiki reads the cookies from WP, but I
>>>>>> don't know how many side effects this would have.
>>>>>>
>>>>>> B
>>>>>> _______________________________________________
>>>>>> wp-hackers mailing list
>>>>>> wp-hackers@lists.automattic.com
>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>>
>>>>>>
>>>>>>             
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers@lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>>>           
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>>>         
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
>
>
>   

From wp-hackers at striderweb.com  Mon Oct 29 18:34:10 2007
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon Oct 29 18:35:11 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4681c7d40710290005w142a94ajb48105df64c37a36@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>
	<4681c7d40710281242ncff8230m672df6fbc449dfba@mail.gmail.com>
	<d135ca9c0710281419h51e263cctfccac543c9f2829b@mail.gmail.com>
	<20071028150134.2e40feae@remstate.com>
	<d135ca9c0710281521g1f1d2c39w1daac09fb9ff1e53@mail.gmail.com>
	<20071028160456.2240cb65@remstate.com>
	<47251B7B.1030208@santosj.name>
	<20071028172634.60e358bf@remstate.com>
	<30056-07425@sneakemail.com> <47254E26.3080101@santosj.name>
	<4681c7d40710290005w142a94ajb48105df64c37a36@mail.gmail.com>
Message-ID: <F136F7ED-680E-4B0E-B181-C5DCE0BE32FC@striderweb.com>

Check out the conversation in August with the subject "Sharing Users/ 
authentication"

<http://comox.textdrive.com/pipermail/wp-hackers/2007-August/ 
subject.html> -- search for Curt Woodard especially

Curt Woodard was working on a WP plugin that allowed simultaneous  
login to multiple linked WordPress blogs.  Not quite the same thing,  
but similar.

I was helping him out with testing and such, and one thing I  
discovered is that, while user management in the WP code is  
theoretically abstracted in a way that should make this easy, the  
reality (that is, the code) is that the abstraction was not fully  
implemented, and thus doesn't quite work for this type of thing.

I would have to dig up the WP core function again, but basically  
there is a wrapper function (or two) relating to managing users that  
isn't used -- other core code skips the wrapper and goes directly to  
the main function.  If it were wrapped properly, it would be fairly  
easy for 3rd party plugins to modify the behavior without having to  
recreate the primary functionality -- by replacing the wrapper.

Another issue, as discussed in that thread, is that WordPress stores  
table name information in fields, which makes it a lot harder to  
simply access the appropriate fields -- you also have to fill in  
_other_ fields with the name of the field you want to reference!

Stephen



On Oct 29, 2007, at 2:05 AM, Computer Guru wrote:

> Honestly, you could solve all this without any help/cooperation  
> from other
> projects by simply writing a standalone authentication system.
>
> Users register/log-in at your custom script.
>
> This script is not a passive element that interfaces between  
> multiple APIs
> in different projects, instead, this script has plugins that  
> explain how
> user info is stored in MediaWiki, WordPress, vBulletin, etc. and it  
> ACTIVELY
> opens other tables, inserts user info in all of them, creates the  
> (multiple)
> needed cookies, and sets the user off on his or her way.
>
> Only problem is what happens when the user wants to change a  
> password, edit
> an email, etc. and attempts to do so from within one of the  
> projects instead
> of your centralized authentication system - then your info is out  
> of sync
> and everything will be a mess. For stuff like wordpress with plenty  
> of hooks
> and stuff you can easily add a plugin to WordPress that will update  
> the
> central auth system's info when a user changes stuff - but then  
> that is no
> longer the "independant master auth" system at work.
>
> For user registration, a simple mod_rewrite directing everyone away  
> from
> /forums/login.php and /wordpress/wp-login.php to the central auth  
> should do
> the trick.
>
> I currently have a gallery (Gallery2), blog (WordPress), forum  
> (vBulletin),
> bug tracker (JIRA), wiki (Confluence). and a couple other things  
> tucked away
> on my site. When I first launched, I would've killed for this  
> discussion,
> but that was a long time ago and I had no idea what any of this  
> stuff was.
>
> Luckily for me, I ended up disabling user registration everywhere  
> except the
> forums and the blog (where people can just write anonymously with  
> their
> existing forum usernames) so it's mosty a non-issue, i.e. no one is  
> having
> to log into multiple sites (but me!) so I can live with that.
>
>
> On 10/29/07, Jacob <wordpress@santosj.name> wrote:
>>
>> Sneaks wrote:
>>>> Yep. Shouldn't know or care. Authentication is authentication. I'm
>>>> saying that there should be no "primary" web application -- all the
>>>> auth logic should be centralized behind a common API so that  
>>>> logging in
>>>> in one place is *exactly the same* as logging in somewhere else
>>>> (within a single site).
>>>
>>> i'd also like to take this moment to again point out that there is a
>>> big difference between having one username to login to different  
>>> parts
>>> of a site, and actually logging in one time for all parts of the  
>>> site.
>>>
>>> most of this thread has just been about merging tabular user  
>>> data, but
>>> my original question was about getting other applications in the  
>>> same
>>> site to recognize that a user was already authenticated inside
>>> application X.
>>
>> Well, if you are talking about databases, then I think the issue  
>> is more
>> that you won't get any project to develop a system where the
>> username/password is completely separate table from all other profile
>> information. Projects like phpBB (v2.x) have the entire username
>> password in one table.
>>
>> However, I think the solution you are talking about and I think that
>> WordPress has (the code, I think has this capability, have to double
>> check) is referencing which table has the username/password and  
>> what the
>> field name is of each. You don't really need to know about the  
>> profile
>> information (but it would be nice to not have to keep filling out the
>> damn information for each project).
>>
>> There are several projects that do this already. However the  
>> method for
>> which to let the project know is different. Most only give you a
>> function to use and call to sign the person in for that project.
>> However, all of these projects would have to be on the same server or
>> domain, but I'm most likely wrong about this depending on if my  
>> theory
>> about PHP cookie writing is correct.
>>
From wp-hackers at striderweb.com  Mon Oct 29 18:36:46 2007
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon Oct 29 18:39:02 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <472625C0.8080805@callum-macdonald.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
	<472625C0.8080805@callum-macdonald.com>
Message-ID: <5C0D32F0-7D4B-4656-804F-35858EEBB893@striderweb.com>

How well does this cover users changing?

At the least, you have to ensure that any attempts to log into  
MediaWiki are redirected to the WordPress login.

Stephen

On Oct 29, 2007, at 1:26 PM, Callum Macdonald wrote:

> Integrating WordPress and MediaWiki should be relatively simple.
>
> MediaWiki relies on a couple of cookies being set, one of them  
> contains a "key" that's set in the MW user table. So on WP login,  
> you need to update the "key", set the cookies, and you should be  
> off. I know it's that easy with WordPress.
>
> If you can use bbPress for the forum, you'll have all three from  
> one login in a snap (I reckon less than an hours work and probably  
> 40 lines of code).
>
> Cheers - Callum.
>
> Jan Bucher wrote:
>> I am working on exactly the same Setup (Vanilla, MW, WP). Until now i
>> did not care about cookies, so no help there. But a good thought:
>>
>> Vanilla has the most extensive User-System, because of the
>> Group-System (you can actually create your own roles/groups). I  
>> needed
>> that, so my starting point had to be vanilla ..
>>
>> You can now very easily hook the vanilla authentication into MW,  
>> using
>> the following 'plugin' (which by the way is not really a plugin, just
>> a howto sold as plugin):
>> http://lussumo.com/addons/index.php?PostBackAction=AddOn&AddOnID=130
>>
>> If you don't plan to use the extra-features, try bbpress. Seems to be
>> more reliable and the installation process is a lot easier than
>> vanilla.
>>
>> And if you find a good soluton ... let us know .. ;)
>>
>> Jan
>>
>> On 10/27/07, Sneaks <0vcqn5q02@sneakemail.com> wrote:
>>
>>> thanks Callum, you've been more useful than Google!
>>>
>>> i think i'd prefer to leave the master set on WP if nothing more  
>>> than
>>> because the UI to manage users is much better.
>>>
>>> i'm actually trying to tie in three different systems for a cancer
>>> non-profit: WP, Mediawiki and Vanilla (forum software). i just  
>>> assumed
>>> nobody would have any Vanilla experience :)
>>>
>>>
>>>
>>>
>>>
>>>> We're doing it the other way, creating the users in our own  
>>>> system (in
>>>> this example MediaWiki) and then creating the WordPress cookies.  
>>>> I'm not
>>>> sure how MediaWiki works, but with WordPress if you insert the  
>>>> rows into
>>>> the user table and create the cookies, the user never has to log  
>>>> in.
>>>> WordPress handles it all on the fly
>>>>
>>>> So if you can redirect all WordPress logins to MediaWiki logins,  
>>>> then
>>>> you create the MediaWiki and WP cookies and redirect back,  
>>>> you're in
>>>> business.
>>>>
>>>> Ok, I just checked with MediaWiki version 1.11.0 and it requires  
>>>> an auth
>>>> token to be updated in the user table and set in the cookie. For  
>>>> that
>>>> reason, I'd suggest using MediaWiki's login, copy the data to  
>>>> WordPress,
>>>> and then set the WordPress cookies. WP will do the rest.
>>>>
>>>> I think MediaWiki's approach is intrinsically more secure than  
>>>> WP's, but
>>>> that's a topic for another day / thread! :)
>>>>
>>>> Cheers - Callum.
>>>>
>>>> Sneaks wrote:
>>>>
>>>>> thats an interesting idea. i suppose i could hook into the wp  
>>>>> cookie
>>>>> functions and set the mediawiki authentication cookies.
>>>>>
>>>>> last night i was playing around and set WP's cookie root to /,  
>>>>> and was
>>>>> using:
>>>>>
>>>>> include($_SERVER[DOCUMENT_ROOT]."/blog/wp-blog-header.php");
>>>>> auth_redirect();
>>>>> wp_get_current_user();
>>>>>
>>>>> in a mediawiki auth plugin. i think that direction would also  
>>>>> work,
>>>>> but i'm worried about the lack of user data in the mediawiki db.
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> Callum Macdonald lists.automattic.com-at-callum-macdonald.com
>>>>> |wordpress| wrote:
>>>>>
>>>>>> Logging a user into WP via the cookie is relatively simple.  
>>>>>> Check out
>>>>>> pluggable.php for the wp_setcookie() function.
>>>>>>
>>>>>> Two cookies handle the login:
>>>>>> wordpressuser_MD5OFSITEURL
>>>>>> wordpresspass_MD5OFSITEURL
>>>>>>
>>>>>> The user cookie takes the username in plain text, the pass  
>>>>>> takes a
>>>>>> double md5 of the password (just md5 what's in the user db).
>>>>>>
>>>>>> We're integrating WPMU login with another system, so we're  
>>>>>> writing
>>>>>> our users to the wp user db then setting the cookies for WP. WP
>>>>>> doesn't handle any login or logout functions.
>>>>>>
>>>>>> Cheers - Callum.
>>>>>>
>>>>>> [1]
>>>>>> http://trac.wordpress.org/browser/trunk/wp-includes/ 
>>>>>> pluggable.php?rev=6291#L458
>>>>>>
>>>>>>
>>>>>> Bertrand wrote:
>>>>>>
>>>>>>> Anyone have any idea how to share cookies from WP to  
>>>>>>> Mediawiki? I
>>>>>>> know there's lots of work out there to share db tables, but I  
>>>>>>> don't
>>>>>>> want users to have to sign in twice.
>>>>>>>
>>>>>>> The ideal would be that Mediawiki reads the cookies from WP,  
>>>>>>> but I
>>>>>>> don't know how many side effects this would have.
>>>>>>>
>>>>>>> B
>>>>>>> _______________________________________________
>>>>>>> wp-hackers mailing list
>>>>>>> wp-hackers@lists.automattic.com
>>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>> _______________________________________________
>>>>>> wp-hackers mailing list
>>>>>> wp-hackers@lists.automattic.com
>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>>
>>>>>>
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers@lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>>>
>>>>>
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>
>>
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From 0vcqn5q02 at sneakemail.com  Mon Oct 29 21:18:28 2007
From: 0vcqn5q02 at sneakemail.com (Sneaks)
Date: Mon Oct 29 21:19:06 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <472625C0.8080805@callum-macdonald.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
	<472625C0.8080805@callum-macdonald.com>
Message-ID: <3675-93667@sneakemail.com>

does bbPress share auth that easily? or just user tables?

how about an open-source, WP-suite of auth sharing plugins for commonly 
bundled software?

1. mediawiki
2. bbPress
3. ??

i'll host SVN and a website if anyone wants to do this.




Callum Macdonald lists.automattic.com-at-callum-macdonald.com 
|wordpress| wrote:
> Integrating WordPress and MediaWiki should be relatively simple.
> 
> MediaWiki relies on a couple of cookies being set, one of them contains 
> a "key" that's set in the MW user table. So on WP login, you need to 
> update the "key", set the cookies, and you should be off. I know it's 
> that easy with WordPress.
> 
> If you can use bbPress for the forum, you'll have all three from one 
> login in a snap (I reckon less than an hours work and probably 40 lines 
> of code).
> 
> Cheers - Callum.
> 
> Jan Bucher wrote:
>> I am working on exactly the same Setup (Vanilla, MW, WP). Until now i
>> did not care about cookies, so no help there. But a good thought:
>>
>> Vanilla has the most extensive User-System, because of the
>> Group-System (you can actually create your own roles/groups). I needed
>> that, so my starting point had to be vanilla ..
>>
>> You can now very easily hook the vanilla authentication into MW, using
>> the following 'plugin' (which by the way is not really a plugin, just
>> a howto sold as plugin):
>> http://lussumo.com/addons/index.php?PostBackAction=AddOn&AddOnID=130
>>
>> If you don't plan to use the extra-features, try bbpress. Seems to be
>> more reliable and the installation process is a lot easier than
>> vanilla.
>>
>> And if you find a good soluton ... let us know .. ;)
>>
>> Jan
From 0vcqn5q02 at sneakemail.com  Mon Oct 29 21:31:09 2007
From: 0vcqn5q02 at sneakemail.com (Sneaks)
Date: Mon Oct 29 21:31:47 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
Message-ID: <763-55194@sneakemail.com>

i did setup that mediawiki-vanilla auth plugin originally, but:
a) its only a db merge, doesnt read the auth cookies
b) vanilla doesnt have stable a development timeline
c) WP does, and can manage roles with plugins
d) WP has a better UI

i really love vanilla as a forum, but i'll dump it for development's 
sake if i have too much trouble integrating the three.


Jan Bucher janbucher-at-gmail.com |wordpress| wrote:
> I am working on exactly the same Setup (Vanilla, MW, WP). Until now i
> did not care about cookies, so no help there. But a good thought:
> 
> Vanilla has the most extensive User-System, because of the
> Group-System (you can actually create your own roles/groups). I needed
> that, so my starting point had to be vanilla ..
> 
> You can now very easily hook the vanilla authentication into MW, using
> the following 'plugin' (which by the way is not really a plugin, just
> a howto sold as plugin):
> http://lussumo.com/addons/index.php?PostBackAction=AddOn&AddOnID=130
> 
> If you don't plan to use the extra-features, try bbpress. Seems to be
> more reliable and the installation process is a lot easier than
> vanilla.
> 
> And if you find a good soluton ... let us know .. ;)
> 
> Jan
From spencerp1 at gmail.com  Mon Oct 29 21:33:34 2007
From: spencerp1 at gmail.com (spencerp)
Date: Mon Oct 29 21:33:47 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <5C0D32F0-7D4B-4656-804F-35858EEBB893@striderweb.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>	<472625C0.8080805@callum-macdonald.com>
	<5C0D32F0-7D4B-4656-804F-35858EEBB893@striderweb.com>
Message-ID: <472651AE.30306@gmail.com>

Stephen Rider wrote:
> How well does this cover users changing?
>
> At the least, you have to ensure that any attempts to log into 
> MediaWiki are redirected to the WordPress login.
>
> Stephen
That's what I was talking about on my post ( http://spencerp.net/id/43 
). I manually edited MW files to ensure in every which way that the 
users were directed to my WP blog login/registration pages.

"However, there is a downside, and that is people can?t register 
directly on my MediaWiki. If they tried too, it would give the following 
error message:
?Login error:
There was either an external authentication database error or you are 
not allowed to update your external account.?

Well, since I?m awesome like that! I?ve come up with a work around for 
this! And here below is what I had done..

1. Edited the MediaWiki:Sidebar by adding in my own custom Register 
link, pointing to the Blog?s register page.
2. Edited some of the MediaWiki: (Logouttext, Createaccount, some 
Login?whatever files?, Nologin, Notloggedin, and maybe a few others) 
files - Removing all the ?create account? references. So the ?Login / 
Create Account? link was chopped down to just ?Login?.. Same goes for 
the one found on the actual login page..
3. Replaced those ?create account? words/calls with custom text saying 
?Please click on the register link in the sidebar. Once you?ve created 
an account through my blog?s register page, you?ll get an email with the 
details. Once registered, your username and password will allow you to 
login on the Codex.?

However, it shouldn't be this complicated though. Like Callum said below 
in here, "MediaWiki relies on a couple of cookies being set, one of them 
contains a "key" that's set in the MW user table. So on WP login, you 
need to update the "key", set the cookies, and you should be off. I know 
it's that easy with WordPress."

If WP can use a similar "cookie/key" as MW does, it should be fairly 
easy for someone to make up a plugin. Have the MW registrations/logins, 
WP registrations/logins and so forth, controlling/using the same tables 
for such things. Example; If a user only has WP and bbPress installed, 
then that plugin wouldn't really be needed because as someone said in 
this discussion previously... that you would just need to set a couple 
variables in the bbPress config file and you're off.

BUT, if a user wants to use MW, WP, and bbPress, they would need this 
"plugin". Install this plugin, it then basically makes the MW user table 
use WP's, then from WP's, it's controlling them all. So if Joe 
registers/logins on MW, it will be fine because it's already using the 
WP user table. Or, if Joe registers/logs in on WP blog, he'd already be 
logged in/registered on MW too. Same goes for bbPress logins/ 
registrations.

 From what I get, WP and bbPress already makes it easy for users to 
control their registrations and logins. The only one that needs some 
help with this, is MW. Or, any other software for that matter. Too bad 
there couldn't be a way to make up a huge "main plugin", that has 
control settings for various forms of softwares. phpBB, MW, etc etc... 
Install this plugin some where, or just "uncomment" a section of the 
plugin, upload it, or activate it and have it "force" the other 
softwares user tables to use WP's.

Or, (since I'm not sure if WP has keys/cookies and what-not) if there's 
a way to just add those things to WP from now on? Or, if that plugin 
could do it, it would add those needed things to the WP users table when 
activated? I'm not sure though, just was throwing out some things on my 
mind...


>
> On Oct 29, 2007, at 1:26 PM, Callum Macdonald wrote:
>
>> Integrating WordPress and MediaWiki should be relatively simple.
>>
>> MediaWiki relies on a couple of cookies being set, one of them 
>> contains a "key" that's set in the MW user table. So on WP login, you 
>> need to update the "key", set the cookies, and you should be off. I 
>> know it's that easy with WordPress.
>>
>> If you can use bbPress for the forum, you'll have all three from one 
>> login in a snap (I reckon less than an hours work and probably 40 
>> lines of code).
>>
>> Cheers - Callum.
>>
>> Jan Bucher wrote:
>>> I am working on exactly the same Setup (Vanilla, MW, WP). Until now i
>>> did not care about cookies, so no help there. But a good thought:
>>>
>>> Vanilla has the most extensive User-System, because of the
>>> Group-System (you can actually create your own roles/groups). I needed
>>> that, so my starting point had to be vanilla ..
>>>
>>> You can now very easily hook the vanilla authentication into MW, using
>>> the following 'plugin' (which by the way is not really a plugin, just
>>> a howto sold as plugin):
>>> http://lussumo.com/addons/index.php?PostBackAction=AddOn&AddOnID=130
>>>
>>> If you don't plan to use the extra-features, try bbpress. Seems to be
>>> more reliable and the installation process is a lot easier than
>>> vanilla.
>>>
>>> And if you find a good soluton ... let us know .. ;)
>>>
>>> Jan
>>>
>>> On 10/27/07, Sneaks <0vcqn5q02@sneakemail.com> wrote:
>>>
>>>> thanks Callum, you've been more useful than Google!
>>>>
>>>> i think i'd prefer to leave the master set on WP if nothing more than
>>>> because the UI to manage users is much better.
>>>>
>>>> i'm actually trying to tie in three different systems for a cancer
>>>> non-profit: WP, Mediawiki and Vanilla (forum software). i just assumed
>>>> nobody would have any Vanilla experience :)
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>> We're doing it the other way, creating the users in our own system 
>>>>> (in
>>>>> this example MediaWiki) and then creating the WordPress cookies. 
>>>>> I'm not
>>>>> sure how MediaWiki works, but with WordPress if you insert the 
>>>>> rows into
>>>>> the user table and create the cookies, the user never has to log in.
>>>>> WordPress handles it all on the fly
>>>>>
>>>>> So if you can redirect all WordPress logins to MediaWiki logins, then
>>>>> you create the MediaWiki and WP cookies and redirect back, you're in
>>>>> business.
>>>>>
>>>>> Ok, I just checked with MediaWiki version 1.11.0 and it requires 
>>>>> an auth
>>>>> token to be updated in the user table and set in the cookie. For that
>>>>> reason, I'd suggest using MediaWiki's login, copy the data to 
>>>>> WordPress,
>>>>> and then set the WordPress cookies. WP will do the rest.
>>>>>
>>>>> I think MediaWiki's approach is intrinsically more secure than 
>>>>> WP's, but
>>>>> that's a topic for another day / thread! :)
>>>>>
>>>>> Cheers - Callum.
>>>>>
>>>>> Sneaks wrote:
>>>>>
>>>>>> thats an interesting idea. i suppose i could hook into the wp cookie
>>>>>> functions and set the mediawiki authentication cookies.
>>>>>>
>>>>>> last night i was playing around and set WP's cookie root to /, 
>>>>>> and was
>>>>>> using:
>>>>>>
>>>>>> include($_SERVER[DOCUMENT_ROOT]."/blog/wp-blog-header.php");
>>>>>> auth_redirect();
>>>>>> wp_get_current_user();
>>>>>>
>>>>>> in a mediawiki auth plugin. i think that direction would also work,
>>>>>> but i'm worried about the lack of user data in the mediawiki db.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> Callum Macdonald lists.automattic.com-at-callum-macdonald.com
>>>>>> |wordpress| wrote:
>>>>>>
>>>>>>> Logging a user into WP via the cookie is relatively simple. 
>>>>>>> Check out
>>>>>>> pluggable.php for the wp_setcookie() function.
>>>>>>>
>>>>>>> Two cookies handle the login:
>>>>>>> wordpressuser_MD5OFSITEURL
>>>>>>> wordpresspass_MD5OFSITEURL
>>>>>>>
>>>>>>> The user cookie takes the username in plain text, the pass takes a
>>>>>>> double md5 of the password (just md5 what's in the user db).
>>>>>>>
>>>>>>> We're integrating WPMU login with another system, so we're writing
>>>>>>> our users to the wp user db then setting the cookies for WP. WP
>>>>>>> doesn't handle any login or logout functions.
>>>>>>>
>>>>>>> Cheers - Callum.
>>>>>>>
>>>>>>> [1]
>>>>>>> http://trac.wordpress.org/browser/trunk/wp-includes/pluggable.php?rev=6291#L458 
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> Bertrand wrote:
>>>>>>>
>>>>>>>> Anyone have any idea how to share cookies from WP to Mediawiki? I
>>>>>>>> know there's lots of work out there to share db tables, but I 
>>>>>>>> don't
>>>>>>>> want users to have to sign in twice.
>>>>>>>>
>>>>>>>> The ideal would be that Mediawiki reads the cookies from WP, but I
>>>>>>>> don't know how many side effects this would have.
>>>>>>>>
>>>>>>>> B
>>>>>>>> _______________________________________________
>>>>>>>> wp-hackers mailing list
>>>>>>>> wp-hackers@lists.automattic.com
>>>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> wp-hackers mailing list
>>>>>>> wp-hackers@lists.automattic.com
>>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>>>
>>>>>>>
>>>>>> _______________________________________________
>>>>>> wp-hackers mailing list
>>>>>> wp-hackers@lists.automattic.com
>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>>
>>>>>>
>>>>>>
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers@lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>>>
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>>
>>>
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From 0vcqn5q02 at sneakemail.com  Mon Oct 29 21:14:53 2007
From: 0vcqn5q02 at sneakemail.com (Sneaks)
Date: Mon Oct 29 21:39:43 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
Message-ID: <2108-90942@sneakemail.com>

i did setup that mediawiki-vanilla auth plugin originally, but:
a) its only a db merge, doesnt read the auth cookies
b) vanilla doesnt have stable a development timeline
c) WP does, and can manage roles with plugins
d) WP has a better UI

i really love vanilla as a forum, but i'll dump it for development's 
sake if i have too much trouble integrating the three.




Jan Bucher janbucher-at-gmail.com |wordpress| wrote:
> I am working on exactly the same Setup (Vanilla, MW, WP). Until now i
> did not care about cookies, so no help there. But a good thought:
> 
> Vanilla has the most extensive User-System, because of the
> Group-System (you can actually create your own roles/groups). I needed
> that, so my starting point had to be vanilla ..
> 
> You can now very easily hook the vanilla authentication into MW, using
> the following 'plugin' (which by the way is not really a plugin, just
> a howto sold as plugin):
> http://lussumo.com/addons/index.php?PostBackAction=AddOn&AddOnID=130
> 
> If you don't plan to use the extra-features, try bbpress. Seems to be
> more reliable and the installation process is a lot easier than
> vanilla.
> 
> And if you find a good soluton ... let us know .. ;)
> 
> Jan
From ai2097 at users.sourceforge.net  Mon Oct 29 22:27:14 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Mon Oct 29 22:27:21 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <3675-93667@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
	<472625C0.8080805@callum-macdonald.com> <3675-93667@sneakemail.com>
Message-ID: <20071029152714.5edfaf92@remstate.com>

On Mon, 29 Oct 2007 14:18:28 -0700, "Sneaks" <0vcqn5q02@sneakemail.com>
wrote:

> does bbPress share auth that easily? or just user tables?
> 
> how about an open-source, WP-suite of auth sharing plugins for
> commonly bundled software?
> 
> 1. mediawiki
> 2. bbPress
> 3. ??
> 
> i'll host SVN and a website if anyone wants to do this.

I'll bite, since I'm finishing up a (platformized) proof-of-concept
anyway. MediaWiki is next on my list, followed by Bugzilla (it's going
to be trickier ;).

Note that bbPress can natively share user tables AND logged-in
state with WordPress already[1].

-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>

[1] http://bbpress.org/documentation/integration-with-wordpress/
From wordpress at dd32.id.au  Tue Oct 30 00:58:50 2007
From: wordpress at dd32.id.au (DD32)
Date: Tue Oct 30 00:58:28 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <3675-93667@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com> <32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com> <11997-68898@sneakemail.com>
	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
	<472625C0.8080805@callum-macdonald.com> <3675-93667@sneakemail.com>
Message-ID: <op.t0zjocjbk6w4mc@dd32.no-ip.com>

On Tue, 30 Oct 2007 08:18:28 +1100, Sneaks <0vcqn5q02@sneakemail.com> wrote:
> how about an open-source, WP-suite of auth sharing plugins for commonly
> bundled software?
>
> 1. mediawiki
> 2. bbPress
> 3. ??
>
> i'll host SVN and a website if anyone wants to do this.

I was just thinking of something similar, Something which acts like Googles signin page might be good, All sign in attempts get redirected from 3rd party software to WP's login page, If the user is allready logged in, it redirects back to the application with a key, the plugin in that software package reads the key, checks if its correct, and then logs the user into that application too, Actually, Thats sounding a bit like OpenID, exept more streamlined for a single domain.

That is assuming that other software have the great plugin hooking abilities that WP has :)
From wp-hackers at nj-arp.org  Tue Oct 30 00:39:09 2007
From: wp-hackers at nj-arp.org (Bob)
Date: Tue Oct 30 01:04:50 2007
Subject: [wp-hackers] Can we use PEAR?
Message-ID: <000601c81a8d$50379530$0300a8c0@Toshiba>

While researching solutions to ticket #4616, I discovered a PEAR function 
that does exactly what we need.  Can we use it?  I don't see any references 
to PEAR in the current WordPress code.

http://trac.wordpress.org/ticket/4616
http://pear.php.net/manual/en/package.mail.mail-rfc822.parseaddresslist.php


From skeltoac at gmail.com  Tue Oct 30 02:02:14 2007
From: skeltoac at gmail.com (Andy Skelton)
Date: Tue Oct 30 02:02:20 2007
Subject: [wp-hackers] Can we use PEAR?
In-Reply-To: <000601c81a8d$50379530$0300a8c0@Toshiba>
References: <000601c81a8d$50379530$0300a8c0@Toshiba>
Message-ID: <e6ec604d0710291902i5ad820cdid3a9ad5be01a7f4b@mail.gmail.com>

PEAR is not a requirement for WordPress so there can't be core code
that depends on PEAR.

Andy

On 10/29/07, Bob <wp-hackers@nj-arp.org> wrote:
> While researching solutions to ticket #4616, I discovered a PEAR function
> that does exactly what we need.  Can we use it?  I don't see any references
> to PEAR in the current WordPress code.
>
> http://trac.wordpress.org/ticket/4616
> http://pear.php.net/manual/en/package.mail.mail-rfc822.parseaddresslist.php
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From robin.adr at gmail.com  Tue Oct 30 02:12:17 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Tue Oct 30 02:12:24 2007
Subject: [wp-hackers] Can we use PEAR?
In-Reply-To: <e6ec604d0710291902i5ad820cdid3a9ad5be01a7f4b@mail.gmail.com>
References: <000601c81a8d$50379530$0300a8c0@Toshiba>
	<e6ec604d0710291902i5ad820cdid3a9ad5be01a7f4b@mail.gmail.com>
Message-ID: <d135ca9c0710291912s2e77c2a2j55882cb2495e0255@mail.gmail.com>

I think he means copy and pasting the function. I'm not sure what the
licensing issues are, though.

On 10/29/07, Andy Skelton <skeltoac@gmail.com> wrote:
>
> PEAR is not a requirement for WordPress so there can't be core code
> that depends on PEAR.
>
> Andy
>
> On 10/29/07, Bob <wp-hackers@nj-arp.org> wrote:
> > While researching solutions to ticket #4616, I discovered a PEAR
> function
> > that does exactly what we need.  Can we use it?  I don't see any
> references
> > to PEAR in the current WordPress code.
> >
> > http://trac.wordpress.org/ticket/4616
> >
> http://pear.php.net/manual/en/package.mail.mail-rfc822.parseaddresslist.php
> >
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From dan at dancoulter.com  Tue Oct 30 02:29:19 2007
From: dan at dancoulter.com (Dan Coulter)
Date: Tue Oct 30 02:29:30 2007
Subject: [wp-hackers] Can we use PEAR?
In-Reply-To: <d135ca9c0710291912s2e77c2a2j55882cb2495e0255@mail.gmail.com>
References: <000601c81a8d$50379530$0300a8c0@Toshiba>
	<e6ec604d0710291902i5ad820cdid3a9ad5be01a7f4b@mail.gmail.com>
	<d135ca9c0710291912s2e77c2a2j55882cb2495e0255@mail.gmail.com>
Message-ID: <5dc2163e0710291929s40e0ab0v72c6fd346f971a1c@mail.gmail.com>

On 10/29/07, Robin Adrianse <robin.adr@gmail.com> wrote:
>
> I think he means copy and pasting the function. I'm not sure what the
> licensing issues are, though.


PEAR is licensed under the PHP license, which according to the Free Software
Foundation:

> This license is used by most of PHP4. It is a non-copyleft free software
> license. It is incompatible with the GNU GPL because it includes strong
> restrictions on the use of "PHP" in the name of derived products.
>
> We recommend that you not use this license for anything except PHP
> add-ons.
>



-- 
Dan Coulter
http://www.dancoulter.com/
http://www.phpflickr.com/
It is time - http://e-hobo.com/

Hey, I got nothing to do today but smile
-Simon and Garfunkel
From wordpress at dd32.id.au  Tue Oct 30 03:47:31 2007
From: wordpress at dd32.id.au (DD32)
Date: Tue Oct 30 03:47:06 2007
Subject: [wp-hackers] Can we use PEAR?
In-Reply-To: <e6ec604d0710291902i5ad820cdid3a9ad5be01a7f4b@mail.gmail.com>
References: <000601c81a8d$50379530$0300a8c0@Toshiba>
	<e6ec604d0710291902i5ad820cdid3a9ad5be01a7f4b@mail.gmail.com>
Message-ID: <op.t0zrhhcvk6w4mc@dd32.no-ip.com>

The PEAR module however can be included in WP due to being BSD licenced. (See the comment in the track ticket).
PEAR doesnt have to be 'required' to be installed seperately.

On Tue, 30 Oct 2007 13:02:14 +1100, Andy Skelton <skeltoac@gmail.com> wrote:

> PEAR is not a requirement for WordPress so there can't be core code
> that depends on PEAR.
>
> Andy
>
> On 10/29/07, Bob <wp-hackers@nj-arp.org> wrote:
>> While researching solutions to ticket #4616, I discovered a PEAR function
>> that does exactly what we need.  Can we use it?  I don't see any references
>> to PEAR in the current WordPress code.
>>
>> http://trac.wordpress.org/ticket/4616
>> http://pear.php.net/manual/en/package.mail.mail-rfc822.parseaddresslist.php
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 



From cpoteet at siolon.com  Tue Oct 30 03:55:11 2007
From: cpoteet at siolon.com (Chris Poteet)
Date: Tue Oct 30 03:55:21 2007
Subject: [wp-hackers] WP-Debug: Testers Needed
Message-ID: <1193716511.213921.41400@z9g2000hsf.googlegroups.com>

I found the Krumo application today, and I was so impressed I whipped
up WP-Debug on their API.  I developed it with people like wp-hackers
in mind.  Please let me know what you think.

http://www.siolon.com/wp-debug.zip

From if.website at gmail.com  Tue Oct 30 04:15:37 2007
From: if.website at gmail.com (Austin Matzko)
Date: Tue Oct 30 04:15:43 2007
Subject: [wp-hackers] WP-Debug: Testers Needed
In-Reply-To: <1193716511.213921.41400@z9g2000hsf.googlegroups.com>
References: <1193716511.213921.41400@z9g2000hsf.googlegroups.com>
Message-ID: <674b4a3b0710292115q31fdbb83g14e47cb6d4b35ff6@mail.gmail.com>

On 10/29/07, Chris Poteet <cpoteet@siolon.com> wrote:
> I found the Krumo application today, and I was so impressed I whipped
> up WP-Debug on their API.  I developed it with people like wp-hackers
> in mind.  Please let me know what you think.

That looks promising.  You should consider having it dump info about
$wp_rewrite, $wp, and $wp_query, like the Dump Environment plugin does
[1].

[1] http://dev.wp-plugins.org/browser/dump_env
From 0vcqn5q02 at sneakemail.com  Tue Oct 30 06:28:41 2007
From: 0vcqn5q02 at sneakemail.com (Sneaks)
Date: Tue Oct 30 06:29:16 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <20071029152714.5edfaf92@remstate.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>	<472625C0.8080805@callum-macdonald.com>
	<3675-93667@sneakemail.com> <20071029152714.5edfaf92@remstate.com>
Message-ID: <3548-26739@sneakemail.com>

okay, i setup a forum, blog, svn & wiki to track and test this project. 
i used an old domain i had.

if anyone wants to join development, please send me an email at 
0vcqn5q02@sneakemail.com.

for reference, this project aims to unify auth sessions between 
different software while using WP as the login control.

should we keep discussion on this list since it's so wp-centric?



Travis Snoozy ai2097-at-users.sourceforge.net |wordpress| wrote:
> On Mon, 29 Oct 2007 14:18:28 -0700, "Sneaks" <0vcqn5q02@sneakemail.com>
> wrote:
> 
>> does bbPress share auth that easily? or just user tables?
>>
>> how about an open-source, WP-suite of auth sharing plugins for
>> commonly bundled software?
>>
>> 1. mediawiki
>> 2. bbPress
>> 3. ??
>>
>> i'll host SVN and a website if anyone wants to do this.
> 
> I'll bite, since I'm finishing up a (platformized) proof-of-concept
> anyway. MediaWiki is next on my list, followed by Bugzilla (it's going
> to be trickier ;).
> 
> Note that bbPress can natively share user tables AND logged-in
> state with WordPress already[1].

From spencerp1 at gmail.com  Tue Oct 30 09:18:34 2007
From: spencerp1 at gmail.com (spencerp)
Date: Tue Oct 30 09:18:48 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <3548-26739@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>	<472625C0.8080805@callum-macdonald.com>	<3675-93667@sneakemail.com>
	<20071029152714.5edfaf92@remstate.com> <3548-26739@sneakemail.com>
Message-ID: <4726F6EA.5080901@gmail.com>

Sneaks wrote:
> okay, i setup a forum, blog, svn & wiki to track and test this 
> project. i used an old domain i had.
>
> if anyone wants to join development, please send me an email at 
> 0vcqn5q02@sneakemail.com.
>
> for reference, this project aims to unify auth sessions between 
> different software while using WP as the login control.
>
> should we keep discussion on this list since it's so wp-centric?
I would love to help test this. I know I couldn't be of much help with 
the PHP coding and database query coding and so forth, but testing is 
one thing I CAN do, and would love to do! =D I'll send an email if this 
is ok? Or, are you only taking developers of this project, then having 
testers come aboard later? As for where to discuss this, I still think 
that this list is the better place for it:
http://lists.automattic.com/mailman/listinfo/wiki-tech

It was created for discussions regarding Wiki and so forth. Wp-hackers 
is AN OK place to discuss it, if it's not a huge in depth discussion. 
However, maybe if, and when, that project gets off the ground enough, 
and you would like some testers and or want to present a 
some_what_finished project it would be ok...? I'm not sure though, maybe 
others will disagree with me, maybe not... All I know is, I'd love to 
help test it! Let's get the party started! =D

From wp-hackers at nj-arp.org  Tue Oct 30 09:32:27 2007
From: wp-hackers at nj-arp.org (Bob)
Date: Tue Oct 30 09:32:45 2007
Subject: [wp-hackers] Can we use PEAR?
References: <000601c81a8d$50379530$0300a8c0@Toshiba><e6ec604d0710291902i5ad820cdid3a9ad5be01a7f4b@mail.gmail.com>
	<op.t0zrhhcvk6w4mc@dd32.no-ip.com>
Message-ID: <002501c81ad7$c98de6b0$0300a8c0@Toshiba>

So I can simply copy and modify the source code?

Here's the notice from the top of the module:

--------------------------------------------------------------------
Copyright (c) 2001-2002, Richard Heyes
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

o Redistributions of source code must retain the above copyright
  notice, this list of conditions and the following disclaimer.
o Redistributions in binary form must reproduce the above copyright
  notice, this list of conditions and the following disclaimer in the
  documentation and/or other materials provided with the distribution.
o The names of the authors may not be used to endorse or promote
  products derived from this software without specific prior written
  permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Authors: Richard Heyes <richard@phpguru.org>
         Chuck Hagenbuch <chuck@horde.org>


----- Original Message ----- 
From: "DD32" <wordpress@dd32.id.au>
To: <wp-hackers@lists.automattic.com>
Sent: Monday, October 29, 2007 11:47 PM
Subject: Re: [wp-hackers] Can we use PEAR?


> The PEAR module however can be included in WP due to being BSD licenced. 
> (See the comment in the track ticket).
> PEAR doesnt have to be 'required' to be installed seperately.
>
> On Tue, 30 Oct 2007 13:02:14 +1100, Andy Skelton <skeltoac@gmail.com> 
> wrote:
>
>> PEAR is not a requirement for WordPress so there can't be core code
>> that depends on PEAR.
>>
>> Andy
>>
>> On 10/29/07, Bob <wp-hackers@nj-arp.org> wrote:
>>> While researching solutions to ticket #4616, I discovered a PEAR 
>>> function
>>> that does exactly what we need.  Can we use it?  I don't see any 
>>> references
>>> to PEAR in the current WordPress code.
>>>
>>> http://trac.wordpress.org/ticket/4616
>>> http://pear.php.net/manual/en/package.mail.mail-rfc822.parseaddresslist.php
>>>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

From kimmo at global-wire.fi  Tue Oct 30 11:00:28 2007
From: kimmo at global-wire.fi (Kimmo Suominen)
Date: Tue Oct 30 11:00:42 2007
Subject: [wp-hackers] Can we use PEAR?
In-Reply-To: <002501c81ad7$c98de6b0$0300a8c0@Toshiba>
References: <op.t0zrhhcvk6w4mc@dd32.no-ip.com>
	<002501c81ad7$c98de6b0$0300a8c0@Toshiba>
Message-ID: <20071030110028.GY10927@kimmo.suominen.com>

Yes, you can, provided you follow the licence terms, i.e. you keep
the copyright and the licence intact in the file.

Typically for modified versions you'd make a note about the mods
and their author as well.

Isn't the BSD licence nice and easy.  :)

Best regards,
+ Kimmo
-- 
<A HREF="http://kimmo.suominen.com/">Kimmo Suominen</A>

On Tue, Oct 30, 2007 at 05:32:27AM -0400, Bob wrote:
> So I can simply copy and modify the source code?
> 
> Here's the notice from the top of the module:
> 
> --------------------------------------------------------------------
> Copyright (c) 2001-2002, Richard Heyes
> All rights reserved.
> 
> Redistribution and use in source and binary forms, with or without
> modification, are permitted provided that the following conditions
> are met:
> 
> o Redistributions of source code must retain the above copyright
>  notice, this list of conditions and the following disclaimer.
> o Redistributions in binary form must reproduce the above copyright
>  notice, this list of conditions and the following disclaimer in the
>  documentation and/or other materials provided with the distribution.
> o The names of the authors may not be used to endorse or promote
>  products derived from this software without specific prior written
>  permission.
> 
> THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
> "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
> LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
> A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
> OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
> SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
> LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
> DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
> THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
> (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
> OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
> 
> Authors: Richard Heyes <richard@phpguru.org>
>         Chuck Hagenbuch <chuck@horde.org>

From cpoteet at siolon.com  Tue Oct 30 12:13:04 2007
From: cpoteet at siolon.com (Chris Poteet)
Date: Tue Oct 30 12:13:12 2007
Subject: [wp-hackers] Re: WP-Debug: Testers Needed
In-Reply-To: <674b4a3b0710292115q31fdbb83g14e47cb6d4b35ff6@mail.gmail.com>
References: <1193716511.213921.41400@z9g2000hsf.googlegroups.com>
	<674b4a3b0710292115q31fdbb83g14e47cb6d4b35ff6@mail.gmail.com>
Message-ID: <1193746384.962349.89860@z9g2000hsf.googlegroups.com>

Austin,

That sounds good, but all those variables return null.  Is it because
I'm outside the Loop?

Thanks,
Chris

From if.website at gmail.com  Tue Oct 30 12:21:41 2007
From: if.website at gmail.com (Austin Matzko)
Date: Tue Oct 30 12:21:46 2007
Subject: [wp-hackers] Re: WP-Debug: Testers Needed
In-Reply-To: <1193746384.962349.89860@z9g2000hsf.googlegroups.com>
References: <1193716511.213921.41400@z9g2000hsf.googlegroups.com>
	<674b4a3b0710292115q31fdbb83g14e47cb6d4b35ff6@mail.gmail.com>
	<1193746384.962349.89860@z9g2000hsf.googlegroups.com>
Message-ID: <674b4a3b0710300521r71259370n3d20873881486662@mail.gmail.com>

On 10/30/07, Chris Poteet <cpoteet@siolon.com> wrote:
> That sounds good, but all those variables return null.  Is it because
> I'm outside the Loop?

They do need to be declared as globals within your function.  Take a
look at the Dump Environment plugin, which does basically the same
thing as yours, except with "print_r":
http://dev.wp-plugins.org/browser/dump_env
From cpoteet at siolon.com  Tue Oct 30 13:55:00 2007
From: cpoteet at siolon.com (Chris Poteet)
Date: Tue Oct 30 13:55:13 2007
Subject: [wp-hackers] Re: WP-Debug: Testers Needed
In-Reply-To: <674b4a3b0710300521r71259370n3d20873881486662@mail.gmail.com>
References: <1193716511.213921.41400@z9g2000hsf.googlegroups.com>
	<674b4a3b0710292115q31fdbb83g14e47cb6d4b35ff6@mail.gmail.com>
	<1193746384.962349.89860@z9g2000hsf.googlegroups.com>
	<674b4a3b0710300521r71259370n3d20873881486662@mail.gmail.com>
Message-ID: <1193752500.873875.264600@50g2000hsm.googlegroups.com>

Thanks Austin!  It works perfectly.  I think this plugin is going to
be a good asset for developers.  I'll wait until tomorrow to see if
any of you have any more comments (please do), and then I'll make a
public release.

On Oct 30, 8:21 am, "Austin Matzko" <if.webs...@gmail.com> wrote:
> On 10/30/07, Chris Poteet <cpot...@siolon.com> wrote:
>
> > That sounds good, but all those variables return null.  Is it because
> > I'm outside the Loop?
>
> They do need to be declared as globals within your function.  Take a
> look at the Dump Environment plugin, which does basically the same
> thing as yours, except with "print_r":http://dev.wp-plugins.org/browser/dump_env
> _______________________________________________
> wp-hackers mailing list
> wp-hack...@lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers

From cpoteet at siolon.com  Tue Oct 30 19:03:06 2007
From: cpoteet at siolon.com (Chris Poteet)
Date: Tue Oct 30 19:03:16 2007
Subject: [wp-hackers] Re: WP-Debug: Testers Needed
In-Reply-To: <1193716511.213921.41400@z9g2000hsf.googlegroups.com>
References: <1193716511.213921.41400@z9g2000hsf.googlegroups.com>
Message-ID: <1193770986.258995.193720@50g2000hsm.googlegroups.com>

The plugin is now available for public consumption: http://www.siolon.com/2007/wp-debug/

From james at freecharity.org.uk  Tue Oct 30 19:41:52 2007
From: james at freecharity.org.uk (James Davis)
Date: Tue Oct 30 19:42:39 2007
Subject: [wp-hackers] Handling upgrades to a plugin's database scheme
Message-ID: <47278900.9020002@freecharity.org.uk>

I've written a plugin which uses it's own database table to store data. 
I've since extended the plugin which now uses a slightly different 
schema for that table.

What's the best way to handle the change in schema when users upgrade 
from the previous version of the plugin to the current one?

Thanks,

James

-- 
FreeCharity.org.uk - Free hosting for charities and non-profits
WordPress and Blogging Consultancy       -      (01348) 800101
From docwhat+list.wp.hackers at gerf.org  Tue Oct 30 20:37:46 2007
From: docwhat+list.wp.hackers at gerf.org (Christian =?iso-8859-1?Q?H=F6ltje?=)
Date: Tue Oct 30 20:37:52 2007
Subject: [wp-hackers] Re: Handling upgrades to a plugin's database scheme
In-Reply-To: <47278900.9020002@freecharity.org.uk>
References: <47278900.9020002@freecharity.org.uk>
Message-ID: <20071030203746.GC25900@gerf.org>

* James Davis (james@freecharity.org.uk) [071030 15:42]:
> I've written a plugin which uses it's own database table to store
> data.  I've since extended the plugin which now uses a slightly
> different schema for that table.
>
> What's the best way to handle the change in schema when users
> upgrade from the previous version of the plugin to the current one?

This may be overkill for your application, but....

A common pattern is to:
 * You number each schema.
 * You create rules to upgrade from each schema.
 * You store the current schema # in the database someplace.
 * Then you can detect the schema #, and upgrade the database via the
   rules.

Example:
  Your plugin runs and detects schema version 32.  The plugin is
  expecting #38.  You would then run, one after each other, upgrades
  to 33, 34, 35, 36, 37, 38.

Ciao!

-- 
If you can't beat them, arrange to have them beaten.
       -- George Carlin

The Doctor What: Need I say more?                http://docwhat.gerf.org/
docwhat *at* gerf *dot* org                                        KF6VNC
From christine at neato.co.nz  Tue Oct 30 20:39:54 2007
From: christine at neato.co.nz (Christine Davis)
Date: Tue Oct 30 20:40:01 2007
Subject: [wp-hackers] Handling upgrades to a plugin's database scheme
In-Reply-To: <47278900.9020002@freecharity.org.uk>
References: <47278900.9020002@freecharity.org.uk>
Message-ID: <6e966a280710301339t35b0c950wa7899c53d10bcc28@mail.gmail.com>

http://codex.wordpress.org/Creating_Tables_with_Plugins has some waffle on
handling upgrades to database tables about halfway down the page.

On 10/31/07, James Davis <james@freecharity.org.uk> wrote:
>
> I've written a plugin which uses it's own database table to store data.
> I've since extended the plugin which now uses a slightly different
> schema for that table.
>
> What's the best way to handle the change in schema when users upgrade
> from the previous version of the plugin to the current one?
>
> Thanks,
>
> James
>
> --
> FreeCharity.org.uk - Free hosting for charities and non-profits
> WordPress and Blogging Consultancy       -      (01348) 800101
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ai2097 at users.sourceforge.net  Tue Oct 30 21:06:55 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Tue Oct 30 21:08:10 2007
Subject: [wp-hackers] Handling upgrades to a plugin's database scheme
In-Reply-To: <47278900.9020002@freecharity.org.uk>
References: <47278900.9020002@freecharity.org.uk>
Message-ID: <20071030140655.58ce1743@remstate.com>

On Tue, 30 Oct 2007 19:41:52 +0000, James Davis
<james@freecharity.org.uk> wrote:

> I've written a plugin which uses it's own database table to store
> data. I've since extended the plugin which now uses a slightly
> different schema for that table.
> 
> What's the best way to handle the change in schema when users upgrade 
> from the previous version of the plugin to the current one?

There may be better ways for others, but I've settled on always making a
discrete table to contain data of a specific version (e.g., "version 5"
data) and then doing a conversion/insertion of the data from the old
table ("version 4") into the new one. After the conversion, the old
table is dropped. (Example code is available for the curious[1][2]).

I use a progressive upgrade scheme - there's a chunk of code that
converts v1 data to v2 data, and another for v2 -> v3, and so on.
Doing a (conditional) creation followed by insertion means that if I
somehow get v2, v4, and v5 data in the same database, the conversion
will still work:

* v2 data is detected
	* v3 table is created
	* v2 data is merged into the (empty) v3 table
	* v2 table is dropped
* v3 data is detected
	* v4 table already exists
	* v3 data is merged into the v4 table
	* v3 table is dropped

And so on. Using this method means that there are no special cases (the
SQL for table creation always stays the same), and that the upgrade
logic is completely self-contained -- it does not need to be revisited
after it has been proved solid. It is also extremely straightforward to
detect what version of the data is in use by the name of the table in
question. Finally, it lays the foundation for solid upgrade support
from any old version to any newer version.

This upgrade process takes longer when upgrading really old data to the
newest version (vs. a direct upgrade), but the upgrade process is not
frequent, and is one-shot when it does occur. Upgrades from a recent
version to the newest are impacted only marginally (by however long it
takes to do a bunch of no-op upgrades). The lack of speed when
upgrading from old versions is also tempered by the fact that
correctness is better ensured by the tried-and-tested upgrade code,
compared to newly-written direct upgrade code.



Because MySQL uses a temporary table to perform ALTER TABLE
operations[3], I don't see a compelling reason to utilize ALTER TABLE
vs. creating, mapping, and dropping the tables directly. ALTER TABLE
also makes merging awkward; from the example above:

* v2 data is detected
	* ALTER TABLE the v2 data to a v3-temp table
	* Is v3 already present?
		* Yes: ALTER TABLE to rename v3-temp to the v3 table
		* No: merge the v2 data into the v3 table
	* Drop the v2 table if it still exists



I don't particularly like dbDelta, because it encourages
skipping straight to the newest schema, without going through
(potentially important) intermediate steps. You have to worry about
v1->v4, v2->v4 and v3->v4, instead of just having to worry only about
v3->v4. This means that the testing and coding space gets larger and
larger as the product gets older, and that you have to write new code
to deal with code that you are less and less familiar with (that is,
the v1 code is not likely fresh in your memory by v4). It can
potentially be faster, but it is also more prone to special cases, and
therefore error.


My $0.02,

-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>

[1] http://svn.wp-plugins.org/in-series/tags/3.0.7/in-series-init.php
(do_*_metadata_convert and initialize_*_database functions)
[2]
http://svn.wp-plugins.org/in-series/tags/3.0.7/in-series-internal.php
(activate function)
[3] http://dev.mysql.com/doc/refman/5.0/en/alter-table-problems.html
From lists.automattic.com at callum-macdonald.com  Tue Oct 30 21:49:54 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Tue Oct 30 21:50:05 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <op.t0zjocjbk6w4mc@dd32.no-ip.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>	<472625C0.8080805@callum-macdonald.com>
	<3675-93667@sneakemail.com> <op.t0zjocjbk6w4mc@dd32.no-ip.com>
Message-ID: <4727A702.7060103@callum-macdonald.com>

I agree, it sounds very much like OpenID.

Rather than re-invent the wheel I'd suggest using OpenID as a basis. 
There are OpenID plugins for an awful lot of OSS apps out there already, 
including WordPress, MediaWiki, etc.

I'm not sure WordPress makes the best base to store the user tables.
1) Passwords are stored insecurely (the hashes should be salted)
2) The login cookies are ridiculously easy to fake (simply md5 what's in 
the db)

Something which stores passwords salted, and keeps a separate key for 
login would be much more secure. If you suspect your database might have 
been stolen, simply update all the login tokens. Every user has to log 
in again, no major inconvenience .With WordPress, you'd have to send 
everyone new passwords, major pain in the ass.

That's my tuppence worth!

Cheers - Callum.

DD32 wrote:
> On Tue, 30 Oct 2007 08:18:28 +1100, Sneaks <0vcqn5q02@sneakemail.com> wrote:
>   
>> how about an open-source, WP-suite of auth sharing plugins for commonly
>> bundled software?
>>
>> 1. mediawiki
>> 2. bbPress
>> 3. ??
>>
>> i'll host SVN and a website if anyone wants to do this.
>>     
>
> I was just thinking of something similar, Something which acts like Googles signin page might be good, All sign in attempts get redirected from 3rd party software to WP's login page, If the user is allready logged in, it redirects back to the application with a key, the plugin in that software package reads the key, checks if its correct, and then logs the user into that application too, Actually, Thats sounding a bit like OpenID, exept more streamlined for a single domain.
>
> That is assuming that other software have the great plugin hooking abilities that WP has :)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>   

From lists.automattic.com at callum-macdonald.com  Tue Oct 30 21:53:39 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Tue Oct 30 21:53:49 2007
Subject: [wp-hackers] Handling upgrades to a plugin's database scheme
In-Reply-To: <20071030140655.58ce1743@remstate.com>
References: <47278900.9020002@freecharity.org.uk>
	<20071030140655.58ce1743@remstate.com>
Message-ID: <4727A7E3.8000607@callum-macdonald.com>

Sounds like solid advice. It's a new approach to me, but I like it, I 
might use that on bigger projects. Cheers - Callum.

Travis Snoozy wrote:
> On Tue, 30 Oct 2007 19:41:52 +0000, James Davis
> <james@freecharity.org.uk> wrote:
>
>   
>> I've written a plugin which uses it's own database table to store
>> data. I've since extended the plugin which now uses a slightly
>> different schema for that table.
>>
>> What's the best way to handle the change in schema when users upgrade 
>> from the previous version of the plugin to the current one?
>>     
>
> There may be better ways for others, but I've settled on always making a
> discrete table to contain data of a specific version (e.g., "version 5"
> data) and then doing a conversion/insertion of the data from the old
> table ("version 4") into the new one. After the conversion, the old
> table is dropped. (Example code is available for the curious[1][2]).
>
> I use a progressive upgrade scheme - there's a chunk of code that
> converts v1 data to v2 data, and another for v2 -> v3, and so on.
> Doing a (conditional) creation followed by insertion means that if I
> somehow get v2, v4, and v5 data in the same database, the conversion
> will still work:
>
> * v2 data is detected
> 	* v3 table is created
> 	* v2 data is merged into the (empty) v3 table
> 	* v2 table is dropped
> * v3 data is detected
> 	* v4 table already exists
> 	* v3 data is merged into the v4 table
> 	* v3 table is dropped
>
> And so on. Using this method means that there are no special cases (the
> SQL for table creation always stays the same), and that the upgrade
> logic is completely self-contained -- it does not need to be revisited
> after it has been proved solid. It is also extremely straightforward to
> detect what version of the data is in use by the name of the table in
> question. Finally, it lays the foundation for solid upgrade support
> from any old version to any newer version.
>
> This upgrade process takes longer when upgrading really old data to the
> newest version (vs. a direct upgrade), but the upgrade process is not
> frequent, and is one-shot when it does occur. Upgrades from a recent
> version to the newest are impacted only marginally (by however long it
> takes to do a bunch of no-op upgrades). The lack of speed when
> upgrading from old versions is also tempered by the fact that
> correctness is better ensured by the tried-and-tested upgrade code,
> compared to newly-written direct upgrade code.
>
>
>
> Because MySQL uses a temporary table to perform ALTER TABLE
> operations[3], I don't see a compelling reason to utilize ALTER TABLE
> vs. creating, mapping, and dropping the tables directly. ALTER TABLE
> also makes merging awkward; from the example above:
>
> * v2 data is detected
> 	* ALTER TABLE the v2 data to a v3-temp table
> 	* Is v3 already present?
> 		* Yes: ALTER TABLE to rename v3-temp to the v3 table
> 		* No: merge the v2 data into the v3 table
> 	* Drop the v2 table if it still exists
>
>
>
> I don't particularly like dbDelta, because it encourages
> skipping straight to the newest schema, without going through
> (potentially important) intermediate steps. You have to worry about
> v1->v4, v2->v4 and v3->v4, instead of just having to worry only about
> v3->v4. This means that the testing and coding space gets larger and
> larger as the product gets older, and that you have to write new code
> to deal with code that you are less and less familiar with (that is,
> the v1 code is not likely fresh in your memory by v4). It can
> potentially be faster, but it is also more prone to special cases, and
> therefore error.
>
>
> My $0.02,
>
>   

From 0vcqn5q02 at sneakemail.com  Tue Oct 30 22:08:45 2007
From: 0vcqn5q02 at sneakemail.com (Sneaks)
Date: Tue Oct 30 22:09:20 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4727A702.7060103@callum-macdonald.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>	<472625C0.8080805@callum-macdonald.com>	<3675-93667@sneakemail.com>
	<op.t0zjocjbk6w4mc@dd32.no-ip.com>
	<4727A702.7060103@callum-macdonald.com>
Message-ID: <7849-38871@sneakemail.com>

Pardon my ignorance, but given the possible permissions/roles/groups and 
UI management in each package, how well would a local OpenID server 
handle these issues and pass authentication to each application?

I know the OpenID concept is ideally nice, but I'm more interested in 
getting a traditional, seamless integration out of these disparate 
packages. My main concern is the end-user's experience. Security issues 
aside (not to minimize them), WP seems to make most of the management 
and authentication process pretty painless.



Callum Macdonald lists.automattic.com-at-callum-macdonald.com 
|wordpress| wrote:
> I agree, it sounds very much like OpenID.
> 
> Rather than re-invent the wheel I'd suggest using OpenID as a basis. 
> There are OpenID plugins for an awful lot of OSS apps out there already, 
> including WordPress, MediaWiki, etc.
> 
> I'm not sure WordPress makes the best base to store the user tables.
> 1) Passwords are stored insecurely (the hashes should be salted)
> 2) The login cookies are ridiculously easy to fake (simply md5 what's in 
> the db)
> 
> Something which stores passwords salted, and keeps a separate key for 
> login would be much more secure. If you suspect your database might have 
> been stolen, simply update all the login tokens. Every user has to log 
> in again, no major inconvenience .With WordPress, you'd have to send 
> everyone new passwords, major pain in the ass.
> 
> That's my tuppence worth!
> 
> Cheers - Callum.
> 
> DD32 wrote:
>> On Tue, 30 Oct 2007 08:18:28 +1100, Sneaks <0vcqn5q02@sneakemail.com> 
>> wrote:
>>  
>>> how about an open-source, WP-suite of auth sharing plugins for commonly
>>> bundled software?
>>>
>>> 1. mediawiki
>>> 2. bbPress
>>> 3. ??
>>>
>>> i'll host SVN and a website if anyone wants to do this.
>>>     
>>
>> I was just thinking of something similar, Something which acts like 
>> Googles signin page might be good, All sign in attempts get redirected 
>> from 3rd party software to WP's login page, If the user is allready 
>> logged in, it redirects back to the application with a key, the plugin 
>> in that software package reads the key, checks if its correct, and 
>> then logs the user into that application too, Actually, Thats sounding 
>> a bit like OpenID, exept more streamlined for a single domain.
>>
>> That is assuming that other software have the great plugin hooking 
>> abilities that WP has :)
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>>   
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 

From ai2097 at users.sourceforge.net  Tue Oct 30 22:43:04 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Tue Oct 30 22:43:10 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <7849-38871@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
	<472625C0.8080805@callum-macdonald.com> <3675-93667@sneakemail.com>
	<op.t0zjocjbk6w4mc@dd32.no-ip.com>
	<4727A702.7060103@callum-macdonald.com> <7849-38871@sneakemail.com>
Message-ID: <20071030154304.1a379617@remstate.com>

On Tue, 30 Oct 2007 15:08:45 -0700, "Sneaks" <0vcqn5q02@sneakemail.com>
wrote:

> Pardon my ignorance, but given the possible permissions/roles/groups
> and UI management in each package, how well would a local OpenID
> server handle these issues and pass authentication to each
> application?
> 
> I know the OpenID concept is ideally nice, but I'm more interested in 
> getting a traditional, seamless integration out of these disparate 
> packages. My main concern is the end-user's experience. Security
> issues aside (not to minimize them), WP seems to make most of the
> management and authentication process pretty painless.

"Management" == authorization. Authentication != authorization.

OpenID does indeed seem to have at least the capability to handle SSO[1]
a la Passport (Windows Live ID)[2], despite an earlier claim that it did
not[3]. If you'll forgive me for not having done my homework, I actually
had a little trouble tracking down the specs[4] yesterday (I blame sleep
deprivation ;).

It does not -- and should not -- have any hold on authorization,
though. That's a per-service thing. Having a standard to allow for
central management would be nifty, but that wasn't how this discussion
started out.


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>

[1]
http://openid.net/specs/openid-authentication-1_1.html#mode_checkid_immediate
[2] http://en.wikipedia.org/wiki/Windows_Live_ID
[3] "OpenID isn't a solution for username/password combinations."
http://comox.textdrive.com/pipermail/wp-hackers/2007-October/015806.html
[4] http://openid.net/developers/specs/
From lists.automattic.com at callum-macdonald.com  Tue Oct 30 22:46:01 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Tue Oct 30 22:46:11 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <7849-38871@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>	<472625C0.8080805@callum-macdonald.com>	<3675-93667@sneakemail.com>	<op.t0zjocjbk6w4mc@dd32.no-ip.com>	<4727A702.7060103@callum-macdonald.com>
	<7849-38871@sneakemail.com>
Message-ID: <4727B429.9000002@callum-macdonald.com>

OpenID does exactly what's been described. You log in to the OpenID 
server, you visit a client application (MW/WP/etc) and it makes a call 
to the OpenID server for authentication.

I don't know how you'd integrate the permissions / group structures / 
etc within each application. It might be possible to manage that through 
the OpenID server. Ultimately, I think each application will store it's 
own group, permissions, and role data alongside the user table. In WP 
it's in usermeta, I'm guessing it's a similar setup in the other apps. 
To combine those, you're facing the same challenge whether you use 
OpenID as the base or WordPress.

Cheers - Callum.

Sneaks wrote:
> Pardon my ignorance, but given the possible permissions/roles/groups 
> and UI management in each package, how well would a local OpenID 
> server handle these issues and pass authentication to each application?
>
> I know the OpenID concept is ideally nice, but I'm more interested in 
> getting a traditional, seamless integration out of these disparate 
> packages. My main concern is the end-user's experience. Security 
> issues aside (not to minimize them), WP seems to make most of the 
> management and authentication process pretty painless.
>
>
>
> Callum Macdonald lists.automattic.com-at-callum-macdonald.com 
> |wordpress| wrote:
>> I agree, it sounds very much like OpenID.
>>
>> Rather than re-invent the wheel I'd suggest using OpenID as a basis. 
>> There are OpenID plugins for an awful lot of OSS apps out there 
>> already, including WordPress, MediaWiki, etc.
>>
>> I'm not sure WordPress makes the best base to store the user tables.
>> 1) Passwords are stored insecurely (the hashes should be salted)
>> 2) The login cookies are ridiculously easy to fake (simply md5 what's 
>> in the db)
>>
>> Something which stores passwords salted, and keeps a separate key for 
>> login would be much more secure. If you suspect your database might 
>> have been stolen, simply update all the login tokens. Every user has 
>> to log in again, no major inconvenience .With WordPress, you'd have 
>> to send everyone new passwords, major pain in the ass.
>>
>> That's my tuppence worth!
>>
>> Cheers - Callum.
>>
>> DD32 wrote:
>>> On Tue, 30 Oct 2007 08:18:28 +1100, Sneaks 
>>> <0vcqn5q02@sneakemail.com> wrote:
>>>  
>>>> how about an open-source, WP-suite of auth sharing plugins for 
>>>> commonly
>>>> bundled software?
>>>>
>>>> 1. mediawiki
>>>> 2. bbPress
>>>> 3. ??
>>>>
>>>> i'll host SVN and a website if anyone wants to do this.
>>>>     
>>>
>>> I was just thinking of something similar, Something which acts like 
>>> Googles signin page might be good, All sign in attempts get 
>>> redirected from 3rd party software to WP's login page, If the user 
>>> is allready logged in, it redirects back to the application with a 
>>> key, the plugin in that software package reads the key, checks if 
>>> its correct, and then logs the user into that application too, 
>>> Actually, Thats sounding a bit like OpenID, exept more streamlined 
>>> for a single domain.
>>>
>>> That is assuming that other software have the great plugin hooking 
>>> abilities that WP has :)
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>>   
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>

From wp-hackers at nj-arp.org  Tue Oct 30 23:28:51 2007
From: wp-hackers at nj-arp.org (Bob)
Date: Tue Oct 30 23:29:11 2007
Subject: [wp-hackers] Can we use PEAR?
References: <op.t0zrhhcvk6w4mc@dd32.no-ip.com><002501c81ad7$c98de6b0$0300a8c0@Toshiba>
	<20071030110028.GY10927@kimmo.suominen.com>
Message-ID: <003301c81b4c$a1c5d320$0300a8c0@Toshiba>

OK, thanks.  I copied the source, took out the four references to PEAR, and 
it works fine.

The file is over 900 lines long.  Is it OK to add it to an existing 
WordPress file or should it go in its own file?

Bob

----- Original Message ----- 
From: "Kimmo Suominen" <kimmo@global-wire.fi>
To: <wp-hackers@lists.automattic.com>
Sent: Tuesday, October 30, 2007 7:00 AM
Subject: Re: [wp-hackers] Can we use PEAR?


> Yes, you can, provided you follow the licence terms, i.e. you keep
> the copyright and the licence intact in the file.
>
> Typically for modified versions you'd make a note about the mods
> and their author as well.
>
> Isn't the BSD licence nice and easy.  :)
>
> Best regards,
> + Kimmo

From lloydomattic at gmail.com  Tue Oct 30 23:41:34 2007
From: lloydomattic at gmail.com (Lloyd Budd)
Date: Tue Oct 30 23:41:43 2007
Subject: [wp-hackers] Can we use PEAR?
In-Reply-To: <003301c81b4c$a1c5d320$0300a8c0@Toshiba>
References: <op.t0zrhhcvk6w4mc@dd32.no-ip.com>
	<002501c81ad7$c98de6b0$0300a8c0@Toshiba>
	<20071030110028.GY10927@kimmo.suominen.com>
	<003301c81b4c$a1c5d320$0300a8c0@Toshiba>
Message-ID: <70ebb7140710301641x691b3d83p59ce63a520e1073f@mail.gmail.com>

On 10/30/07, Bob <wp-hackers@nj-arp.org> wrote:
> OK, thanks.  I copied the source, took out the four references to PEAR, and
> it works fine.
>
> The file is over 900 lines long.  Is it OK to add it to an existing
> WordPress file or should it go in its own file?
>
> Bob

A lot of that code doesn't seem relevant to the specific problem that
needs solving in WordPress. I suggest just taking the relevant code to
solve the problem and patch wp-includes/formatting.php

Cheers,
-- 
Lloyd Budd | Digital Entomologist | | Skype:foolswisdom
WordPress.com | WordPress.org | Automattic.com
From wp-hackers at nj-arp.org  Wed Oct 31 00:09:15 2007
From: wp-hackers at nj-arp.org (Bob)
Date: Wed Oct 31 00:09:58 2007
Subject: [wp-hackers] Can we use PEAR?
References: <op.t0zrhhcvk6w4mc@dd32.no-ip.com><002501c81ad7$c98de6b0$0300a8c0@Toshiba><20071030110028.GY10927@kimmo.suominen.com><003301c81b4c$a1c5d320$0300a8c0@Toshiba>
	<70ebb7140710301641x691b3d83p59ce63a520e1073f@mail.gmail.com>
Message-ID: <000f01c81b52$46a2c600$0300a8c0@Toshiba>

Actually, the specific problem requires the parsing of the entire "From:" 
line in an email message (not just the email address itself), and the code 
does what is required.


----- Original Message ----- 
From: "Lloyd Budd" <lloydomattic@gmail.com>
To: <wp-hackers@lists.automattic.com>
Sent: Tuesday, October 30, 2007 7:41 PM
Subject: Re: [wp-hackers] Can we use PEAR?


> On 10/30/07, Bob <wp-hackers@nj-arp.org> wrote:
>> OK, thanks.  I copied the source, took out the four references to PEAR, 
>> and
>> it works fine.
>>
>> The file is over 900 lines long.  Is it OK to add it to an existing
>> WordPress file or should it go in its own file?
>>
>> Bob
>
> A lot of that code doesn't seem relevant to the specific problem that
> needs solving in WordPress. I suggest just taking the relevant code to
> solve the problem and patch wp-includes/formatting.php
>
> Cheers,
> -- 
> Lloyd Budd | Digital Entomologist | | Skype:foolswisdom
> WordPress.com | WordPress.org | Automattic.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

From lloydomattic at gmail.com  Wed Oct 31 00:35:43 2007
From: lloydomattic at gmail.com (Lloyd Budd)
Date: Wed Oct 31 00:35:55 2007
Subject: [wp-hackers] Can we use PEAR?
In-Reply-To: <000f01c81b52$46a2c600$0300a8c0@Toshiba>
References: <op.t0zrhhcvk6w4mc@dd32.no-ip.com>
	<002501c81ad7$c98de6b0$0300a8c0@Toshiba>
	<20071030110028.GY10927@kimmo.suominen.com>
	<003301c81b4c$a1c5d320$0300a8c0@Toshiba>
	<70ebb7140710301641x691b3d83p59ce63a520e1073f@mail.gmail.com>
	<000f01c81b52$46a2c600$0300a8c0@Toshiba>
Message-ID: <70ebb7140710301735k51649cd7ua894fa9d9b4dc521@mail.gmail.com>

On 10/30/07, Bob <wp-hackers@nj-arp.org> wrote:
> Actually, the specific problem requires the parsing of the entire "From:"
> line in an email message (not just the email address itself), and the code
> does what is required.

Really? The original Debian bug report nor the WordPress bug report
describes that to be the case. Please update the WordPress bug report
with the specific scenario
http://trac.wordpress.org/ticket/4616

I thought the problem was more general than the "Post via e-mail" feature.

Thank you,
Lloyd
From wp-hackers at nj-arp.org  Wed Oct 31 00:56:15 2007
From: wp-hackers at nj-arp.org (Bob)
Date: Wed Oct 31 00:56:29 2007
Subject: [wp-hackers] Can we use PEAR?
References: <op.t0zrhhcvk6w4mc@dd32.no-ip.com><002501c81ad7$c98de6b0$0300a8c0@Toshiba><20071030110028.GY10927@kimmo.suominen.com><003301c81b4c$a1c5d320$0300a8c0@Toshiba><70ebb7140710301641x691b3d83p59ce63a520e1073f@mail.gmail.com><000f01c81b52$46a2c600$0300a8c0@Toshiba>
	<70ebb7140710301735k51649cd7ua894fa9d9b4dc521@mail.gmail.com>
Message-ID: <000501c81b58$d721fce0$0300a8c0@Toshiba>

Yes, the problem is more general than the Blog by Email feature, but that 
case also needs to be handled.  Right now, it has a simplistic parsing of 
the "From:" line, and you can easily construct valid "From:" lines that will 
be rejected.

If you handle the case with parsing of the entire "From:" line, you can 
easily use the same function(s) to handle subsets like addr@example.com 
without all the other stuff.

Bob

----- Original Message ----- 
From: "Lloyd Budd" <lloydomattic@gmail.com>
To: <wp-hackers@lists.automattic.com>
Sent: Tuesday, October 30, 2007 8:35 PM
Subject: Re: [wp-hackers] Can we use PEAR?


> On 10/30/07, Bob <wp-hackers@nj-arp.org> wrote:
>> Actually, the specific problem requires the parsing of the entire "From:"
>> line in an email message (not just the email address itself), and the 
>> code
>> does what is required.
>
> Really? The original Debian bug report nor the WordPress bug report
> describes that to be the case. Please update the WordPress bug report
> with the specific scenario
> http://trac.wordpress.org/ticket/4616
>
> I thought the problem was more general than the "Post via e-mail" feature.
>
> Thank you,
> Lloyd
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

From wordpress at santosj.name  Wed Oct 31 01:37:47 2007
From: wordpress at santosj.name (wordpress@santosj.name)
Date: Wed Oct 31 01:37:50 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <7849-38871@sneakemail.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>	<472625C0.8080805@callum-macdonald.com>	<3675-93667@sneakemail.com>
	<op.t0zjocjbk6w4mc@dd32.no-ip.com>
	<4727A702.7060103@callum-macdonald.com> <7849-38871@sneakemail.com>
Message-ID: <4392.198.209.165.134.1193794667.squirrel@webmail.santosj.name>

OpenID does not handle that and is not supposed to handle that. OpenID is
more an Username Replacement than a complete User Management/Role system.
You would still need to have a password for each site, but the deal is
that they wouldn't have to remember several different usernames.

While researching this several years ago, I came to the realization that
the best method would only be to register the user and have hooks in for
password updating.

Well, if you are going to go through all of that hassle anyway, it would
be wise to use something already created for that purpose for the
username.

I would leave off creating an OpenID server, just use a delegate instead.
Same thing, except you don't have to manage the software and can switch
providers if you need to. If you want to provide your domain as an OpenID
identity, then go ahead, the software is out there and free.

Jacob Santos

> Pardon my ignorance, but given the possible permissions/roles/groups and
> UI management in each package, how well would a local OpenID server
> handle these issues and pass authentication to each application?
>
> I know the OpenID concept is ideally nice, but I'm more interested in
> getting a traditional, seamless integration out of these disparate
> packages. My main concern is the end-user's experience. Security issues
> aside (not to minimize them), WP seems to make most of the management
> and authentication process pretty painless.
>
>
>
> Callum Macdonald lists.automattic.com-at-callum-macdonald.com
> |wordpress| wrote:
>> I agree, it sounds very much like OpenID.
>>
>> Rather than re-invent the wheel I'd suggest using OpenID as a basis.
>> There are OpenID plugins for an awful lot of OSS apps out there already,
>> including WordPress, MediaWiki, etc.
>>
>> I'm not sure WordPress makes the best base to store the user tables.
>> 1) Passwords are stored insecurely (the hashes should be salted)
>> 2) The login cookies are ridiculously easy to fake (simply md5 what's in
>> the db)
>>
>> Something which stores passwords salted, and keeps a separate key for
>> login would be much more secure. If you suspect your database might have
>> been stolen, simply update all the login tokens. Every user has to log
>> in again, no major inconvenience .With WordPress, you'd have to send
>> everyone new passwords, major pain in the ass.
>>
>> That's my tuppence worth!
>>
>> Cheers - Callum.
>>
>> DD32 wrote:
>>> On Tue, 30 Oct 2007 08:18:28 +1100, Sneaks <0vcqn5q02@sneakemail.com>
>>> wrote:
>>>
>>>> how about an open-source, WP-suite of auth sharing plugins for
>>>> commonly
>>>> bundled software?
>>>>
>>>> 1. mediawiki
>>>> 2. bbPress
>>>> 3. ??
>>>>
>>>> i'll host SVN and a website if anyone wants to do this.
>>>>
>>>
>>> I was just thinking of something similar, Something which acts like
>>> Googles signin page might be good, All sign in attempts get redirected
>>> from 3rd party software to WP's login page, If the user is allready
>>> logged in, it redirects back to the application with a key, the plugin
>>> in that software package reads the key, checks if its correct, and
>>> then logs the user into that application too, Actually, Thats sounding
>>> a bit like OpenID, exept more streamlined for a single domain.
>>>
>>> That is assuming that other software have the great plugin hooking
>>> abilities that WP has :)
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


From wordpress at santosj.name  Wed Oct 31 02:10:46 2007
From: wordpress at santosj.name (wordpress@santosj.name)
Date: Wed Oct 31 02:10:49 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <20071030154304.1a379617@remstate.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com> <32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com> <11997-68898@sneakemail.com>
	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
	<472625C0.8080805@callum-macdonald.com> <3675-93667@sneakemail.com>
	<op.t0zjocjbk6w4mc@dd32.no-ip.com>
	<4727A702.7060103@callum-macdonald.com> <7849-38871@sneakemail.com>
	<20071030154304.1a379617@remstate.com>
Message-ID: <4706.198.209.165.134.1193796646.squirrel@webmail.santosj.name>

My statement was not meant to be ambiguous, OpenID is only authenticating
that the user *owns* the identity, not meant to be a username/password
combination. There have been several talks on this very confusion. The
sites should hold on to the passwords and should only rely on the
authentication for small stuff, comment (instead of of Captcha, or some
other hackish question).

Passport was in fact a username/password combination with single sign on
meant to be used on online store sites. OpenID is not meant to be used
more than on simple tasks, like submitting comments on blogs and small
tasks. If you want something more powerful, you'll actually need to have
the user register and have a separate password for your site which both
you and the user know.

In that last case, no it would not be a single sign on, because you negate
it with the registering and separate password. You know the user is who
they say they are (their IDentity), unless they have a server that sends
back that everyone is who they say they are (which is bad).

You would not say, replace the administration account with OpenID account,
it has far too many permissions.

Jacob Santos

> On Tue, 30 Oct 2007 15:08:45 -0700, "Sneaks" <0vcqn5q02@sneakemail.com>
> wrote:
>
>> Pardon my ignorance, but given the possible permissions/roles/groups
>> and UI management in each package, how well would a local OpenID
>> server handle these issues and pass authentication to each
>> application?
>>
>> I know the OpenID concept is ideally nice, but I'm more interested in
>> getting a traditional, seamless integration out of these disparate
>> packages. My main concern is the end-user's experience. Security
>> issues aside (not to minimize them), WP seems to make most of the
>> management and authentication process pretty painless.
>
> "Management" == authorization. Authentication != authorization.
>
> OpenID does indeed seem to have at least the capability to handle SSO[1]
> a la Passport (Windows Live ID)[2], despite an earlier claim that it did
> not[3]. If you'll forgive me for not having done my homework, I actually
> had a little trouble tracking down the specs[4] yesterday (I blame sleep
> deprivation ;).
>
> It does not -- and should not -- have any hold on authorization,
> though. That's a per-service thing. Having a standard to allow for
> central management would be nifty, but that wasn't how this discussion
> started out.
>
>
> --
> Travis
>
> In Series maintainer
> Random coder & quality guy
> <http://remstate.com/>
>
> [1]
> http://openid.net/specs/openid-authentication-1_1.html#mode_checkid_immediate
> [2] http://en.wikipedia.org/wiki/Windows_Live_ID
> [3] "OpenID isn't a solution for username/password combinations."
> http://comox.textdrive.com/pipermail/wp-hackers/2007-October/015806.html
> [4] http://openid.net/developers/specs/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


From ai2097 at users.sourceforge.net  Wed Oct 31 02:11:01 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Wed Oct 31 02:11:07 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4392.198.209.165.134.1193794667.squirrel@webmail.santosj.name>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
	<472625C0.8080805@callum-macdonald.com> <3675-93667@sneakemail.com>
	<op.t0zjocjbk6w4mc@dd32.no-ip.com>
	<4727A702.7060103@callum-macdonald.com> <7849-38871@sneakemail.com>
	<4392.198.209.165.134.1193794667.squirrel@webmail.santosj.name>
Message-ID: <20071030191101.4daed67b@remstate.com>

On Tue, 30 Oct 2007 18:37:47 -0700 (PDT), wordpress@santosj.name wrote:

<snip>
> You would still need to have a password for each site, but the deal
> is that they wouldn't have to remember several different usernames.
<snip>

Not true. OpenID is intended as a SSO technology, and makes a direct
comparison to Passport in its own FAQ[1]. The API clearly allows you to
authenticate a user entirely through a third-party OpenID provider[2].
Even registration can be partially automated, with the appropriate
extension[3]. It is implementation-dependent whether or not you permit
access to a given service based on OpenID authentication -- but that's
mostly because permission is an *authorization* issue, not an
authentication one.


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>

[1] http://wiki.openid.net/FAQ#What_is_OpenID.3F
[2]
http://openid.net/specs/openid-authentication-1_1.html#mode_checkid_immediate
[3]
http://openid.net/specs/openid-simple-registration-extension-1_0.html
From wordpress at santosj.name  Wed Oct 31 03:52:56 2007
From: wordpress at santosj.name (Jacob)
Date: Wed Oct 31 03:53:08 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <20071030191101.4daed67b@remstate.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>	<472625C0.8080805@callum-macdonald.com>
	<3675-93667@sneakemail.com>	<op.t0zjocjbk6w4mc@dd32.no-ip.com>	<4727A702.7060103@callum-macdonald.com>
	<7849-38871@sneakemail.com>	<4392.198.209.165.134.1193794667.squirrel@webmail.santosj.name>
	<20071030191101.4daed67b@remstate.com>
Message-ID: <4727FC18.2050100@santosj.name>

Travis Snoozy wrote:
> On Tue, 30 Oct 2007 18:37:47 -0700 (PDT), wordpress@santosj.name wrote:
>
> <snip>
>   
>> You would still need to have a password for each site, but the deal
>> is that they wouldn't have to remember several different usernames.
>>     
> <snip>
>
> Not true. OpenID is intended as a SSO technology, and makes a direct
> comparison to Passport in its own FAQ[1]. The API clearly allows you to
> authenticate a user entirely through a third-party OpenID provider[2].
> Even registration can be partially automated, with the appropriate
> extension[3]. It is implementation-dependent whether or not you permit
> access to a given service based on OpenID authentication -- but that's
> mostly because permission is an *authorization* issue, not an
> authentication one.
>
>
>   
Now that we have came to the conclusion that 1) I'm completely wrong and 
2) OpenID is a perfect solution. I think we should move one to 
implementing this solution for WordPress and/or WordPress Mu. Or taking 
an existing plugin and positioning it into the core. I think the census 
from a while back was that this wasn't ever going to happen, but now 
that WordPress.com has it, I think the argument for it might stand now.

-- 

Jacob Santos

http://www.santosj.name - blog
http://wordpress.svn.dragonu.net/unittest/ - unofficial WP unit test suite.

Also known as darkdragon and santosj on WP trac.

From ai2097 at users.sourceforge.net  Wed Oct 31 04:21:27 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Wed Oct 31 04:21:34 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4727FC18.2050100@santosj.name>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
	<472625C0.8080805@callum-macdonald.com> <3675-93667@sneakemail.com>
	<op.t0zjocjbk6w4mc@dd32.no-ip.com>
	<4727A702.7060103@callum-macdonald.com> <7849-38871@sneakemail.com>
	<4392.198.209.165.134.1193794667.squirrel@webmail.santosj.name>
	<20071030191101.4daed67b@remstate.com>
	<4727FC18.2050100@santosj.name>
Message-ID: <20071030212127.73960315@remstate.com>

On Tue, 30 Oct 2007 22:52:56 -0500, Jacob <wordpress@santosj.name>
wrote:

<snip>
> I think we should move one to implementing this solution for
> WordPress and/or WordPress Mu. Or taking an existing plugin and
> positioning it into the core.

It looks like there's a plugin for WordPress at least[1] (though I
haven't installed it to test, yet). I see one that looks like a
provider for Mu[2], but not a consumer (again, haven't tested).

> I think the census from a while back was that this wasn't ever going
> to happen, but now that WordPress.com has it, I think the argument
> for it might stand now.

Hmm, looks like WordPress.com is an OpenID provider (I didn't know
that!), but I don't know if they're a consumer (I don't have an OpenID
nor a WordPress.com account to test; I don't particularly want
either :p). In any case, you're right -- being a provider at the very
least is leverage for getting the consumer part in.


Note that this still doesn't change the fact that users have to
separately authenticate with each service on your site (even if they're
all OpenID-enabled, and even if all the user has to do is enter their
OpenID URL). So, the "site-wide SSO" issue still stands, even though
it's less obnoxious :).


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>

[1] http://wordpress.org/extend/plugins/openid/
[2] http://wordpress.org/extend/plugins/mu-open-id/
From jeremy.visser at gmail.com  Wed Oct 31 07:08:03 2007
From: jeremy.visser at gmail.com (Jeremy Visser)
Date: Wed Oct 31 07:08:15 2007
Subject: [wp-hackers] Planet generator
Message-ID: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>

Does anybody know what powers the WordPress Planet at
http://planet.wordpress.org/?
From robin.adr at gmail.com  Wed Oct 31 07:18:23 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Wed Oct 31 07:18:34 2007
Subject: [wp-hackers] Planet generator
In-Reply-To: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>
References: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>
Message-ID: <d135ca9c0710310018g5176fac9u63611bb5b462d60d@mail.gmail.com>

Planet Planet: http://www.planetplanet.org/

On 10/31/07, Jeremy Visser <jeremy.visser@gmail.com> wrote:
>
> Does anybody know what powers the WordPress Planet at
> http://planet.wordpress.org/?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From robin.adr at gmail.com  Wed Oct 31 07:19:33 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Wed Oct 31 07:19:40 2007
Subject: [wp-hackers] Planet generator
In-Reply-To: <d135ca9c0710310018g5176fac9u63611bb5b462d60d@mail.gmail.com>
References: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>
	<d135ca9c0710310018g5176fac9u63611bb5b462d60d@mail.gmail.com>
Message-ID: <d135ca9c0710310019q55b219a0nde51c2cf0643d089@mail.gmail.com>

I think. At least, it was originally.

On 10/31/07, Robin Adrianse <robin.adr@gmail.com> wrote:
>
> Planet Planet: http://www.planetplanet.org/
>
> On 10/31/07, Jeremy Visser < jeremy.visser@gmail.com> wrote:
> >
> > Does anybody know what powers the WordPress Planet at
> > http://planet.wordpress.org/?
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
From robin.adr at gmail.com  Wed Oct 31 07:20:17 2007
From: robin.adr at gmail.com (Robin Adrianse)
Date: Wed Oct 31 07:20:22 2007
Subject: [wp-hackers] Planet generator
In-Reply-To: <d135ca9c0710310019q55b219a0nde51c2cf0643d089@mail.gmail.com>
References: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>
	<d135ca9c0710310018g5176fac9u63611bb5b462d60d@mail.gmail.com>
	<d135ca9c0710310019q55b219a0nde51c2cf0643d089@mail.gmail.com>
Message-ID: <d135ca9c0710310020o50245ea5y100a8497a7c2eb30@mail.gmail.com>

Actually, looks like it might be WP + FeedWordPress or something similar.

On 10/31/07, Robin Adrianse <robin.adr@gmail.com> wrote:
>
> I think. At least, it was originally.
>
> On 10/31/07, Robin Adrianse <robin.adr@gmail.com> wrote:
> >
> > Planet Planet: http://www.planetplanet.org/
> >
> > On 10/31/07, Jeremy Visser < jeremy.visser@gmail.com> wrote:
> > >
> > > Does anybody know what powers the WordPress Planet at
> > > http://planet.wordpress.org/?
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
>
From villiageidiot at gmail.com  Wed Oct 31 13:40:36 2007
From: villiageidiot at gmail.com (David Pappas)
Date: Wed Oct 31 13:40:43 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <20071030212127.73960315@remstate.com>
References: <4721843C.2000701@sneakemail.com>
	<472625C0.8080805@callum-macdonald.com> <3675-93667@sneakemail.com>
	<op.t0zjocjbk6w4mc@dd32.no-ip.com>
	<4727A702.7060103@callum-macdonald.com> <7849-38871@sneakemail.com>
	<4392.198.209.165.134.1193794667.squirrel@webmail.santosj.name>
	<20071030191101.4daed67b@remstate.com> <4727FC18.2050100@santosj.name>
	<20071030212127.73960315@remstate.com>
Message-ID: <21cf363b0710310640p27d270e5l43b628982b1e6ba7@mail.gmail.com>

<decloak>
Travis' last item is (I think) the critical point.  LDAP, Openid, Passport,
whatever - the point was to provide single sign on capability in to WP and
Mediawiki.  If you use Openid and still have to sign in separately in to
both systems have you really accomplished anything?

And just because I can't stand not throwing in another buzzword/acronym, why
not SAML (www.opensaml.org) which I tend to associate more with the phrase
"single sign on".

Ok - I've had enough fun for today.
</decloak>

On 10/31/07, Travis Snoozy <ai2097@users.sourceforge.net> wrote:
>
> On Tue, 30 Oct 2007 22:52:56 -0500, Jacob <wordpress@santosj.name>
> wrote:
>
> <snip>
>
> Note that this still doesn't change the fact that users have to
> separately authenticate with each service on your site (even if they're
> all OpenID-enabled, and even if all the user has to do is enter their
> OpenID URL). So, the "site-wide SSO" issue still stands, even though
> it's less obnoxious :).
>
>
> --
> David Pappas
> www.claimid.com/djpappas
From lloydomattic at gmail.com  Wed Oct 31 14:59:34 2007
From: lloydomattic at gmail.com (Lloyd Budd)
Date: Wed Oct 31 14:59:40 2007
Subject: [wp-hackers] Planet generator
In-Reply-To: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>
References: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>
Message-ID: <70ebb7140710310759s93cfa2boa3ccd88147eb4600@mail.gmail.com>

On 10/31/07, Jeremy Visser <jeremy.visser@gmail.com> wrote:
> Does anybody know what powers the WordPress Planet at
> http://planet.wordpress.org/?

It is planet planet, or at least it was when I checked last month.

Cheers,
-- 
Lloyd Budd | Digital Entomologist | | Skype:foolswisdom
WordPress.com | WordPress.org | Automattic.com
From lists.automattic.com at callum-macdonald.com  Wed Oct 31 17:37:15 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 31 17:37:33 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <20071030212127.73960315@remstate.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>	<472625C0.8080805@callum-macdonald.com>
	<3675-93667@sneakemail.com>	<op.t0zjocjbk6w4mc@dd32.no-ip.com>	<4727A702.7060103@callum-macdonald.com>
	<7849-38871@sneakemail.com>	<4392.198.209.165.134.1193794667.squirrel@webmail.santosj.name>	<20071030191101.4daed67b@remstate.com>	<4727FC18.2050100@santosj.name>
	<20071030212127.73960315@remstate.com>
Message-ID: <4728BD4B.5060706@callum-macdonald.com>

Travis Snoozy wrote:
> Note that this still doesn't change the fact that users have to
> separately authenticate with each service on your site (even if they're
> all OpenID-enabled, and even if all the user has to do is enter their
> OpenID URL). So, the "site-wide SSO" issue still stands, even though
> it's less obnoxious :).
>   
There might be a simple workaround. If you set the user's openID 
identity into a cookie, you could pick that cookie up in each of your 
apps. The user flow would be:
1) User visits WP site (is not logged in)
2) User clicks "Login" and is directed to OpenID server to authenticate
3) User is returned to WP now authenticated by OpenID
4) User browses to MediaWiki (not yet logged in to MediaWiki)
5) MediaWiki detects the OpenID cookie, requests authentication from 
OpenID server, logs user in to MediaWiki

The original requirement was for the user experience to be as 
transparent as possible. I think OpenID can provide that, although it 
may need a small change to check a cookie for the OpenID identity.

Note that storing your OpenID identity in a cookie isn't a security 
issue. The URL in itself is not sensitive information (it's your 
wordpress.com account address, hardly private!). Storing it in a cookie 
simply saves the user typing it on each service within your setup.

In this scenario, you would have issues if users wanted to sign in / 
register on one service (say WordPress) with their own OpenID provider. 
They would not then be able to sign in to all your services in one go. 
Hence, I'd suggest using a local OpenID provider and making it look 
transparent to the user, so they're not aware they're using OpenID.

Of course it would be uber-cool if the user could register their current 
OpenID identity with the local OpenID server, thus their primary OpenID 
would authenticate the secondary OpenID identity which would in turn 
unlock WP/MW/etc! :)

Cheers - Callum.

From lists.automattic.com at callum-macdonald.com  Wed Oct 31 17:41:46 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 31 17:42:05 2007
Subject: [wp-hackers] Planet generator
In-Reply-To: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>
References: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>
Message-ID: <4728BE5A.2070905@callum-macdonald.com>

Planet PHP runs on a couple of PHP apps banged together. I'll get round 
to implementing it at some point, but I haven't done so yet.
http://www.planet-php.net/

They make the code available here:
http://svn.bitflux.ch/repos/public/planet-php/trunk/

Would a combination of WP & FeedWordPress do the same job? Any issues 
with it?

As far as I know, planets don't allow comments or send pings, so I'm 
guessing those aspects of WP would have to be turned off. But the 
themes, searching, tagging, categories, etc would be quite nice. If the 
blogroll was generated automatically that would also be a nice feature.

Anyone interested in exploring this?

Cheers - Callum.

Jeremy Visser wrote:
> Does anybody know what powers the WordPress Planet at
> http://planet.wordpress.org/?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>   

From lists.automattic.com at callum-macdonald.com  Wed Oct 31 17:50:47 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 31 17:51:01 2007
Subject: [wp-hackers] Proposal: Adding a filter to get_admin_page_parent()
Message-ID: <4728C077.2070706@callum-macdonald.com>

G'day,

I'm hacking a version of WPMU to customise the admin interface. I've 
stripped out some of the menus that we don't want users to access 
(Themes and Users for example). I can remove the menus via the 
admin_menu action, however, it screws the sub menus.

menu-header.php[1] calls get_admin_page_parent() to figure out what the 
current page's parent is. The parents are hard coded into the individual 
admin pages, and as far as I can see, there's no way to override them 
via the plugin API.

wp_admin_page_parent[2] currently has 7 return()s. So the simplest 
approach might be to wrap it in a wrapper function and apply the filter. 
Something like:
function get_admin_page_parent() {
    $return = _get_admin_page_parent();
    apply_filter('get_admin_page_parent',$return);
}

Anyone got any suggestions? I'll whip up a trac ticket and patch in due 
course, but wanted to float the idea here first in case I've missed 
something.

Cheers - Callum.

[1] http://trac.wordpress.org/browser/trunk/wp-admin/menu-header.php#L6
[2] 
http://trac.wordpress.org/browser/trunk/wp-admin/includes/plugin.php#L213

From computerguru at neosmart.net  Wed Oct 31 17:54:12 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Wed Oct 31 17:54:24 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4728BD4B.5060706@callum-macdonald.com>
References: <4721843C.2000701@sneakemail.com> <3675-93667@sneakemail.com>
	<op.t0zjocjbk6w4mc@dd32.no-ip.com>
	<4727A702.7060103@callum-macdonald.com> <7849-38871@sneakemail.com>
	<4392.198.209.165.134.1193794667.squirrel@webmail.santosj.name>
	<20071030191101.4daed67b@remstate.com> <4727FC18.2050100@santosj.name>
	<20071030212127.73960315@remstate.com>
	<4728BD4B.5060706@callum-macdonald.com>
Message-ID: <4681c7d40710311054g16009ca2k2979a01a0474b063@mail.gmail.com>

On 10/31/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
wrote:
>
> Of course it would be uber-cool if the user could register their current
> OpenID identity with the local OpenID server, thus their primary OpenID
> would authenticate the secondary OpenID identity which would in turn
> unlock WP/MW/etc! :)
>
> Cheers - Callum.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

Not sure I follow, can you rephrase that?

-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From lists.automattic.com at callum-macdonald.com  Wed Oct 31 18:01:58 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 31 18:02:24 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4681c7d40710311054g16009ca2k2979a01a0474b063@mail.gmail.com>
References: <4721843C.2000701@sneakemail.com>
	<3675-93667@sneakemail.com>	<op.t0zjocjbk6w4mc@dd32.no-ip.com>	<4727A702.7060103@callum-macdonald.com>
	<7849-38871@sneakemail.com>	<4392.198.209.165.134.1193794667.squirrel@webmail.santosj.name>	<20071030191101.4daed67b@remstate.com>
	<4727FC18.2050100@santosj.name>	<20071030212127.73960315@remstate.com>	<4728BD4B.5060706@callum-macdonald.com>
	<4681c7d40710311054g16009ca2k2979a01a0474b063@mail.gmail.com>
Message-ID: <4728C316.1000401@callum-macdonald.com>

Taking the scenario I described as an example:
* User visits WordPress site, clicks Login, redirects to OpenID server 
to login
* At OpenID server, you have four options:
    1) Login with username & password
    2) Login with existing OpenID identity (from another OpenID server)
    3) Register through traditional method (username, password, email, etc)
    4) Register through OpenID & SREG

Does that make more sense? I'm not sure if OpenID servers allow you to 
authenticate with a different OpenID identity or not, but I suppose 
anything is possible right! :)

There is an open-source PHP standalone OpenID server for anyone interested:
http://openidenabled.com/php-standalone-openid-server

Cheers - Callum.

Computer Guru wrote:
> On 10/31/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
> wrote:
>   
>> Of course it would be uber-cool if the user could register their current
>> OpenID identity with the local OpenID server, thus their primary OpenID
>> would authenticate the secondary OpenID identity which would in turn
>> unlock WP/MW/etc! :)
>>
>> Cheers - Callum.
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
>
> Not sure I follow, can you rephrase that?
>
>   

From ozh at planetozh.com  Wed Oct 31 18:05:27 2007
From: ozh at planetozh.com (Ozh)
Date: Wed Oct 31 18:05:37 2007
Subject: [wp-hackers] Planet generator
In-Reply-To: <4728BE5A.2070905@callum-macdonald.com>
References: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>
	<4728BE5A.2070905@callum-macdonald.com>
Message-ID: <ae81acd10710311105w53f32b6cr42a90732e598143@mail.gmail.com>

I think WP + Whatever would be totally different: a front page of
posts going into an archive of post, hence a huge source of duplicated
content (original posts + the planet).
The planet as of now is just a front page. Basically, it's just a feed.

On 10/31/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com> wrote:
> Planet PHP runs on a couple of PHP apps banged together. I'll get round
> to implementing it at some point, but I haven't done so yet.
> http://www.planet-php.net/
>
> They make the code available here:
> http://svn.bitflux.ch/repos/public/planet-php/trunk/
>
> Would a combination of WP & FeedWordPress do the same job? Any issues
> with it?
>
> As far as I know, planets don't allow comments or send pings, so I'm
> guessing those aspects of WP would have to be turned off. But the
> themes, searching, tagging, categories, etc would be quite nice. If the
> blogroll was generated automatically that would also be a nice feature.
>
> Anyone interested in exploring this?
>
> Cheers - Callum.
>
> Jeremy Visser wrote:
> > Does anybody know what powers the WordPress Planet at
> > http://planet.wordpress.org/?
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> >
> >
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://FrenchFragFactory.net ~ Daily Quake News
http://planetOzh.com ~ Blog and WordPress Stuff
From shacker at birdhouse.org  Wed Oct 31 19:00:42 2007
From: shacker at birdhouse.org (Scot Hacker)
Date: Wed Oct 31 18:56:43 2007
Subject: [wp-hackers] Planet generator
In-Reply-To: <20071031180540.30C446BF2@comox.textdrive.com>
References: <20071031180540.30C446BF2@comox.textdrive.com>
Message-ID: <2480F39C-02D3-4ACF-8D90-3C5E038FD095@birdhouse.org>

> Date: Wed, 31 Oct 2007 13:41:46 -0400
> From: Callum Macdonald <lists.automattic.com@callum-macdonald.com>
> Subject: Re: [wp-hackers] Planet generator
>

> Would a combination of WP & FeedWordPress do the same job? Any issues
> with it?
>
> As far as I know, planets don't allow comments or send pings, so I'm
> guessing those aspects of WP would have to be turned off. But the
> themes, searching, tagging, categories, etc would be quite nice. If  
> the
> blogroll was generated automatically that would also be a nice  
> feature.

FeedWordpress  really is nice.  Each incoming post auto-generates new  
categories and authors in the system when necessary. Comments can be  
inside the planet site  or link to the original source, your choice.  
And yes, the blogroll is generated automatically. Here's a planet   
site  I built recently with FeedWordpress  that does these things:

http://hermenaut.org/

./s


From ai2097 at users.sourceforge.net  Wed Oct 31 19:06:06 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Wed Oct 31 19:06:12 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4728BD4B.5060706@callum-macdonald.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
	<472625C0.8080805@callum-macdonald.com> <3675-93667@sneakemail.com>
	<op.t0zjocjbk6w4mc@dd32.no-ip.com>
	<4727A702.7060103@callum-macdonald.com> <7849-38871@sneakemail.com>
	<4392.198.209.165.134.1193794667.squirrel@webmail.santosj.name>
	<20071030191101.4daed67b@remstate.com>
	<4727FC18.2050100@santosj.name>
	<20071030212127.73960315@remstate.com>
	<4728BD4B.5060706@callum-macdonald.com>
Message-ID: <20071031120606.68f6d4f2@remstate.com>

On Wed, 31 Oct 2007 13:37:15 -0400, Callum Macdonald
<lists.automattic.com@callum-macdonald.com> wrote:

> Travis Snoozy wrote:
> > Note that this still doesn't change the fact that users have to
> > separately authenticate with each service on your site (even if
> > they're all OpenID-enabled, and even if all the user has to do is
> > enter their OpenID URL). So, the "site-wide SSO" issue still
> > stands, even though it's less obnoxious :).
> >   
> There might be a simple workaround. If you set the user's openID 
> identity into a cookie, you could pick that cookie up in each of your 
> apps. The user flow would be:
> 1) User visits WP site (is not logged in)
> 2) User clicks "Login" and is directed to OpenID server to
> authenticate
> 3) User is returned to WP now authenticated by OpenID
> 4) User browses to MediaWiki (not yet logged in to MediaWiki)
> 5) MediaWiki detects the OpenID cookie, requests authentication from 
> OpenID server, logs user in to MediaWiki

My prototype does that, but *without* being tied to OpenID -- a
separate cookie gets set (tied to PHP session ID, so the client
contains NO sensitive information, regardless of what's stored), and
that is used for the basis of login. You could use a MySQL DB, flatfile,
Passport, OpenID, or whatever other authentication means you like (even,
potentially, allowing login through any of OpenID -or- Passport -or- a
local DB...). Solving the SSO integration problem generically means
that everybody wins -- not just sites that chose to use OpenID.


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>
From lists.automattic.com at callum-macdonald.com  Wed Oct 31 19:28:48 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 31 19:29:07 2007
Subject: [wp-hackers] Planet generator
In-Reply-To: <ae81acd10710311105w53f32b6cr42a90732e598143@mail.gmail.com>
References: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>	<4728BE5A.2070905@callum-macdonald.com>
	<ae81acd10710311105w53f32b6cr42a90732e598143@mail.gmail.com>
Message-ID: <4728D770.1020706@callum-macdonald.com>

PHP Planet is more than just a front page, there's over 8'300 articles
on there[1]. There's no "Single" view though, you only see a list of
posts.

I reckon you could turn WP into a planet quite easily.

1) Insert posts automatically from feeds (either FeedWordPress[2] or
WP-AutoBlog[3] seem to do the trick pretty nicely)

2) Add a simple plugin to filter the_permalink and replace it with the
original post's url. This plugin could also disable pings and comments
just to be sure.

3) Possibly, for the paranoid, add a filter to automatically 301
redirect to the original post if the single post is requested.

As a bonus to all of this stuff, you could use the Pages functionality
to display a bit of background info on the planet. Also, FeedWordPress
grabs it's feed URLs from the Links database, so you could easily
display a list of sources on the site.

I think I'll  knock this into a single plugin over the next week or so.
I'll post back once I've got something working.

Cheers - Callum.

[1] http://www.planet-php.net/?start=8300
[2] http://projects.radgeek.com/feedwordpress/basic-concepts/
[3] http://wpmudev.org/project/wp-autoblog

Ozh wrote:
> I think WP + Whatever would be totally different: a front page of
> posts going into an archive of post, hence a huge source of duplicated
> content (original posts + the planet).
> The planet as of now is just a front page. Basically, it's just a feed.
>
> On 10/31/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com> wrote:
>   
>> Planet PHP runs on a couple of PHP apps banged together. I'll get round
>> to implementing it at some point, but I haven't done so yet.
>> http://www.planet-php.net/
>>
>> They make the code available here:
>> http://svn.bitflux.ch/repos/public/planet-php/trunk/
>>
>> Would a combination of WP & FeedWordPress do the same job? Any issues
>> with it?
>>
>> As far as I know, planets don't allow comments or send pings, so I'm
>> guessing those aspects of WP would have to be turned off. But the
>> themes, searching, tagging, categories, etc would be quite nice. If the
>> blogroll was generated automatically that would also be a nice feature.
>>
>> Anyone interested in exploring this?
>>
>> Cheers - Callum.
>>
>> Jeremy Visser wrote:
>>     
>>> Does anybody know what powers the WordPress Planet at
>>> http://planet.wordpress.org/?
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>>
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
>
>
>   




From lists.automattic.com at callum-macdonald.com  Wed Oct 31 19:33:20 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 31 19:33:38 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <20071031120606.68f6d4f2@remstate.com>
References: <4721843C.2000701@sneakemail.com>	<4721FFFA.1070602@callum-macdonald.com>	<32690-99368@sneakemail.com>	<47224C9E.3020306@callum-macdonald.com>	<11997-68898@sneakemail.com>	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>	<472625C0.8080805@callum-macdonald.com>
	<3675-93667@sneakemail.com>	<op.t0zjocjbk6w4mc@dd32.no-ip.com>	<4727A702.7060103@callum-macdonald.com>
	<7849-38871@sneakemail.com>	<4392.198.209.165.134.1193794667.squirrel@webmail.santosj.name>	<20071030191101.4daed67b@remstate.com>	<4727FC18.2050100@santosj.name>	<20071030212127.73960315@remstate.com>	<4728BD4B.5060706@callum-macdonald.com>
	<20071031120606.68f6d4f2@remstate.com>
Message-ID: <4728D880.3000105@callum-macdonald.com>

Travis Snoozy wrote:
> My prototype does that, but *without* being tied to OpenID -- a
> separate cookie gets set (tied to PHP session ID, so the client
> contains NO sensitive information, regardless of what's stored), and
> that is used for the basis of login. You could use a MySQL DB, flatfile,
> Passport, OpenID, or whatever other authentication means you like (even,
> potentially, allowing login through any of OpenID -or- Passport -or- a
> local DB...). Solving the SSO integration problem generically means
> that everybody wins -- not just sites that chose to use OpenID.
>   
Sounds like an interesting approach.

How does the client application (say WordPress) determine if the user is 
logged in from their cookie? Is it via a PHP session? If it is, I'm 
guessing the applications would need to be on the same server to share 
PHP sessions.

I'd be interested to see the code.

Cheers - Callum.

From computerguru at neosmart.net  Wed Oct 31 20:22:49 2007
From: computerguru at neosmart.net (Computer Guru)
Date: Wed Oct 31 20:22:56 2007
Subject: [wp-hackers] Planet generator
In-Reply-To: <4728D770.1020706@callum-macdonald.com>
References: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>
	<4728BE5A.2070905@callum-macdonald.com>
	<ae81acd10710311105w53f32b6cr42a90732e598143@mail.gmail.com>
	<4728D770.1020706@callum-macdonald.com>
Message-ID: <4681c7d40710311322n59e25414ma8f1c6d5826818d4@mail.gmail.com>

 Just my two cents, but what's the benefit of using WP as a Planet?

The way I see it, if you're using it as a Planet it can't be used as
anything else. If a piece of highly-specialized code that does just one
thing (Planet) and does it right and light does the job, what would the
benefit be of using something not built for that purpose (WP and its "bloat"
that comes from all the features you won't be using in a Planet) instead?

(apologies if this message already came through, the list mailer crapped out
on me)

On 10/31/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
wrote:
>
> PHP Planet is more than just a front page, there's over 8'300 articles
> on there[1]. There's no "Single" view though, you only see a list of
> posts.
>
> I reckon you could turn WP into a planet quite easily.
>
> 1) Insert posts automatically from feeds (either FeedWordPress[2] or
> WP-AutoBlog[3] seem to do the trick pretty nicely)
>
> 2) Add a simple plugin to filter the_permalink and replace it with the
> original post's url. This plugin could also disable pings and comments
> just to be sure.
>
> 3) Possibly, for the paranoid, add a filter to automatically 301
> redirect to the original post if the single post is requested.
>
> As a bonus to all of this stuff, you could use the Pages functionality
> to display a bit of background info on the planet. Also, FeedWordPress
> grabs it's feed URLs from the Links database, so you could easily
> display a list of sources on the site.
>
> I think I'll  knock this into a single plugin over the next week or so.
> I'll post back once I've got something working.
>
> Cheers - Callum.
>
> [1] http://www.planet-php.net/?start=8300
> [2] http://projects.radgeek.com/feedwordpress/basic-concepts/
> [3] http://wpmudev.org/project/wp-autoblog
>
> Ozh wrote:
> > I think WP + Whatever would be totally different: a front page of
> > posts going into an archive of post, hence a huge source of duplicated
> > content (original posts + the planet).
> > The planet as of now is just a front page. Basically, it's just a feed.
> >
> > On 10/31/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
> wrote:
> >
> >> Planet PHP runs on a couple of PHP apps banged together. I'll get round
> >> to implementing it at some point, but I haven't done so yet.
> >> http://www.planet-php.net/
> >>
> >> They make the code available here:
> >> http://svn.bitflux.ch/repos/public/planet-php/trunk/
> >>
> >> Would a combination of WP & FeedWordPress do the same job? Any issues
> >> with it?
> >>
> >> As far as I know, planets don't allow comments or send pings, so I'm
> >> guessing those aspects of WP would have to be turned off. But the
> >> themes, searching, tagging, categories, etc would be quite nice. If the
> >> blogroll was generated automatically that would also be a nice feature.
> >>
> >> Anyone interested in exploring this?
> >>
> >> Cheers - Callum.
> >>
> >> Jeremy Visser wrote:
> >>
> >>> Does anybody know what powers the WordPress Planet at
> >>> http://planet.wordpress.org/?
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers@lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >>>
> >>>
> >>>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >>
> >
> >
> >
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Computer Guru
Director,
NeoSmart Technologies
http://neosmart.net/blog/
From ai2097 at users.sourceforge.net  Wed Oct 31 20:29:20 2007
From: ai2097 at users.sourceforge.net (Travis Snoozy)
Date: Wed Oct 31 20:29:24 2007
Subject: [wp-hackers] Single sign-on with Wordpress & Mediawiki
In-Reply-To: <4728D880.3000105@callum-macdonald.com>
References: <4721843C.2000701@sneakemail.com>
	<4721FFFA.1070602@callum-macdonald.com>
	<32690-99368@sneakemail.com>
	<47224C9E.3020306@callum-macdonald.com>
	<11997-68898@sneakemail.com>
	<6132e6d0710270347l4869f2f9s563005f6d8cc35d7@mail.gmail.com>
	<472625C0.8080805@callum-macdonald.com> <3675-93667@sneakemail.com>
	<op.t0zjocjbk6w4mc@dd32.no-ip.com>
	<4727A702.7060103@callum-macdonald.com> <7849-38871@sneakemail.com>
	<4392.198.209.165.134.1193794667.squirrel@webmail.santosj.name>
	<20071030191101.4daed67b@remstate.com>
	<4727FC18.2050100@santosj.name>
	<20071030212127.73960315@remstate.com>
	<4728BD4B.5060706@callum-macdonald.com>
	<20071031120606.68f6d4f2@remstate.com>
	<4728D880.3000105@callum-macdonald.com>
Message-ID: <20071031132920.28e14f8e@remstate.com>

On Wed, 31 Oct 2007 15:33:20 -0400, Callum Macdonald
<lists.automattic.com@callum-macdonald.com> wrote:

> Travis Snoozy wrote:
>
> Sounds like an interesting approach.
> 
> How does the client application (say WordPress) determine if the user
> is logged in from their cookie?

In WordPress' case, the plugin simply forces a logged-in state with a
call to wp_set_current_user(). The plugin determines logged-in state by
asking the authorization provider whether or not the user is logged in.
How this determination is made (PHP session, in-cookie info, etc.) can
be changed, without affecting how the plugin works at all.

> Is it via a PHP session? If it is, I'm guessing the applications
> would need to be on the same server to share PHP sessions.

Yes, but the implementation could be changed. A nonce or other
time-sensitive, one-use token would also be sufficient for this; it's
just a simple matter of coding. ;)

> I'd be interested to see the code.

Sure thing; I've put the (rough, rough, 10-grit, I hacked it up
in a single sleepless night as a proof of concept and haven't
touched it since rough) prototype up[1]. I'm going to be tied up with
*ahem* "important business"[2] this month, but I'm happy to field
questions.

The prototype does handle:

* Account creations
* Password changes (to the "master" account, via WordPress)
* Logins
* Logouts
* WordPress

It doesn't (yet) handle:

* Password changes (from the "master" account to other products)
* Account deletions
* Account management frontend (i.e., independent of any other products)
* Bootstrapping
	* Initial account import/merging
	* Initial "unified" admin account setup
* Applications other than WordPress (I'm only familiar with WP's
plugin architecture & codebase ;)


-- 
Travis 

In Series maintainer
Random coder & quality guy
<http://remstate.com/>

[1] http://remstate.com/SingleAuth-POC.tar.bz2
[2] http://nethack.devnull.net/
From cpoteet at siolon.com  Wed Oct 31 20:39:40 2007
From: cpoteet at siolon.com (Chris Poteet)
Date: Wed Oct 31 20:39:51 2007
Subject: [wp-hackers] Re: Planet generator
In-Reply-To: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>
References: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>
Message-ID: <1193863180.484852.184330@k79g2000hse.googlegroups.com>

You could use Yahoo! Pipes like I did for my del.icio.us feeds.

http://pipes.yahoo.com/pipes/pipe.info?_id=HklCONcd3BGwqsaKEpPZnA

From awgandrews at gmail.com  Wed Oct 31 21:47:49 2007
From: awgandrews at gmail.com (Alex Andrews)
Date: Wed Oct 31 21:47:58 2007
Subject: [wp-hackers] Ribcage - Manage A Record Label Website With Wordpress
	Plugin, help required
Message-ID: <e9f3ce460710311447p591a88f1lecb714b15d7219a@mail.gmail.com>

Mods - I got an error when sending this before, so I am trying again.

Hello all

As I have mentioned once before, I am trying to create a Wordpress plugin
that allows for one to manage the website of a record label - called
Ribcage, since it is developed for a Creative Commons netlabel called
Records On Ribs (it will of course be GPLed). I have written a fair bit of
code, which is up at  http://tools.assembla.com/ribcage/browser .


The intended features include ability to manage downloads of various music
file types, ability to edit artist descriptions, events and track these
downloads giving them a report on what has been downloaded
which integrates with Last.fm. A cluster of shell scripts will be called by
Cron to convert FLAC files someone uploads to various formats for release.


I am in a bit of a time crunch here (we have artists ready for release this
month), and I am floundering out of my depth as this is my first serious php
(or any) project. Any help anyone can give would be most excellent,
particularly with the creation of the admin section, as I have little idea
of what I am doing here.


If you cannot help personally a few things would be useful.


1) an example of a good, robust download/upload manager program, either a
wordpress plugin or otherwise
2) recomendations for MP3 management shell scripts.


So reply here if you want to help out or have suggestions on the best way to
go about these things.


Regards

Alex
From lists.automattic.com at callum-macdonald.com  Wed Oct 31 22:08:56 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 31 22:09:13 2007
Subject: [wp-hackers] Ribcage - Manage A Record Label Website With
	Wordpress Plugin, help required
In-Reply-To: <e9f3ce460710311447p591a88f1lecb714b15d7219a@mail.gmail.com>
References: <e9f3ce460710311447p591a88f1lecb714b15d7219a@mail.gmail.com>
Message-ID: <4728FCF8.6030002@callum-macdonald.com>

Hey Alex,

I'm pretty busy right now (with cash work) otherwise I might lend a 
hand, but here's a couple of tips...

Uploader: Photopress handles photo uploading... 
http://familypress.net/photopress/

If you want to create Options pages, see this:
http://codex.wordpress.org/Creating_Options_Pages

Can't recommend any good MP3 shell script utils I'm afraid.

Cheers - Callum.

Alex Andrews wrote:
> Mods - I got an error when sending this before, so I am trying again.
>
> Hello all
>
> As I have mentioned once before, I am trying to create a Wordpress plugin
> that allows for one to manage the website of a record label - called
> Ribcage, since it is developed for a Creative Commons netlabel called
> Records On Ribs (it will of course be GPLed). I have written a fair bit of
> code, which is up at  http://tools.assembla.com/ribcage/browser .
>
>
> The intended features include ability to manage downloads of various music
> file types, ability to edit artist descriptions, events and track these
> downloads giving them a report on what has been downloaded
> which integrates with Last.fm. A cluster of shell scripts will be called by
> Cron to convert FLAC files someone uploads to various formats for release.
>
>
> I am in a bit of a time crunch here (we have artists ready for release this
> month), and I am floundering out of my depth as this is my first serious php
> (or any) project. Any help anyone can give would be most excellent,
> particularly with the creation of the admin section, as I have little idea
> of what I am doing here.
>
>
> If you cannot help personally a few things would be useful.
>
>
> 1) an example of a good, robust download/upload manager program, either a
> wordpress plugin or otherwise
> 2) recomendations for MP3 management shell scripts.
>
>
> So reply here if you want to help out or have suggestions on the best way to
> go about these things.
>
>
> Regards
>
> Alex
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>   

From lists.automattic.com at callum-macdonald.com  Wed Oct 31 22:13:11 2007
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Wed Oct 31 22:13:31 2007
Subject: [wp-hackers] Planet generator
In-Reply-To: <4681c7d40710311322n59e25414ma8f1c6d5826818d4@mail.gmail.com>
References: <43253ec50710310008l25fcaabfkf23277d61173439a@mail.gmail.com>	<4728BE5A.2070905@callum-macdonald.com>	<ae81acd10710311105w53f32b6cr42a90732e598143@mail.gmail.com>	<4728D770.1020706@callum-macdonald.com>
	<4681c7d40710311322n59e25414ma8f1c6d5826818d4@mail.gmail.com>
Message-ID: <4728FDF7.6050807@callum-macdonald.com>

Planet requires python, that's my main reason for not using it. Agreed, 
WP is pretty bloated just to run a planet, there's probably a simpler 
option available in PHP. This seems like the least hassle though. Cheers 
- Callum.

PS> The list mailer seems to be iffy today, I had a couple of messages 
knocked back earlier.

Computer Guru wrote:
>  Just my two cents, but what's the benefit of using WP as a Planet?
>
> The way I see it, if you're using it as a Planet it can't be used as
> anything else. If a piece of highly-specialized code that does just one
> thing (Planet) and does it right and light does the job, what would the
> benefit be of using something not built for that purpose (WP and its "bloat"
> that comes from all the features you won't be using in a Planet) instead?
>
> (apologies if this message already came through, the list mailer crapped out
> on me)
>
> On 10/31/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
> wrote:
>   
>> PHP Planet is more than just a front page, there's over 8'300 articles
>> on there[1]. There's no "Single" view though, you only see a list of
>> posts.
>>
>> I reckon you could turn WP into a planet quite easily.
>>
>> 1) Insert posts automatically from feeds (either FeedWordPress[2] or
>> WP-AutoBlog[3] seem to do the trick pretty nicely)
>>
>> 2) Add a simple plugin to filter the_permalink and replace it with the
>> original post's url. This plugin could also disable pings and comments
>> just to be sure.
>>
>> 3) Possibly, for the paranoid, add a filter to automatically 301
>> redirect to the original post if the single post is requested.
>>
>> As a bonus to all of this stuff, you could use the Pages functionality
>> to display a bit of background info on the planet. Also, FeedWordPress
>> grabs it's feed URLs from the Links database, so you could easily
>> display a list of sources on the site.
>>
>> I think I'll  knock this into a single plugin over the next week or so.
>> I'll post back once I've got something working.
>>
>> Cheers - Callum.
>>
>> [1] http://www.planet-php.net/?start=8300
>> [2] http://projects.radgeek.com/feedwordpress/basic-concepts/
>> [3] http://wpmudev.org/project/wp-autoblog
>>
>> Ozh wrote:
>>     
>>> I think WP + Whatever would be totally different: a front page of
>>> posts going into an archive of post, hence a huge source of duplicated
>>> content (original posts + the planet).
>>> The planet as of now is just a front page. Basically, it's just a feed.
>>>
>>> On 10/31/07, Callum Macdonald <lists.automattic.com@callum-macdonald.com>
>>>       
>> wrote:
>>     
>>>> Planet PHP runs on a couple of PHP apps banged together. I'll get round
>>>> to implementing it at some point, but I haven't done so yet.
>>>> http://www.planet-php.net/
>>>>
>>>> They make the code available here:
>>>> http://svn.bitflux.ch/repos/public/planet-php/trunk/
>>>>
>>>> Would a combination of WP & FeedWordPress do the same job? Any issues
>>>> with it?
>>>>
>>>> As far as I know, planets don't allow comments or send pings, so I'm
>>>> guessing those aspects of WP would have to be turned off. But the
>>>> themes, searching, tagging, categories, etc would be quite nice. If the
>>>> blogroll was generated automatically that would also be a nice feature.
>>>>
>>>> Anyone interested in exploring this?
>>>>
>>>> Cheers - Callum.
>>>>
>>>> Jeremy Visser wrote:
>>>>
>>>>         
>>>>> Does anybody know what powers the WordPress Planet at
>>>>> http://planet.wordpress.org/?
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers@lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>           
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>>>         
>>>
>>>       
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
>
>
>
>   

