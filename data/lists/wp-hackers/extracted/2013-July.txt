From david at wordshell.net  Mon Jul  1 09:02:35 2013
From: david at wordshell.net (David Anderson)
Date: Mon, 01 Jul 2013 10:02:35 +0100
Subject: [wp-hackers] Restrict plugin load to certain pages?
Message-ID: <51D145AB.6070104@wordshell.net>

Hi,

I am running a plugin which, like many, loads plenty of code on 
irrelevant pages. This one, when profiled in P3 Performance Profiler, 
accounts for 0.27 seconds of page load time on pages which it has 
nothing to do with (its a forum plugin).

I'm confident that there will be no bad side-effects from simply not 
loading this plugin on irrelevant pages (e.g. those without /forum/ in 
the URL). Rather than re-writing the plugin, and then doing it again on 
every other plugin I find in future with this problem, I'd like to write 
some code to simply prevent plugin load, depending on the URL.

Looking at the WP core code, my only option to achieve this seems to be 
to be (via an mu-plugin, since a plugin would present a Catch-22) to 
hook get_option, detect the option 'active_plugins', and remove the 
offending plugin depending on the contents of _SERVER['REQUEST_URI'] and 
is_admin() (I don't want to disable anything admin-side).

Questions...
- Anyone see any problem with this idea?
- Anyone done it already and got some code?
- If plugins loaded in a controllable, deterministic order (e.g. 
deterministic), and with an action added in 
wp_get_active_and_valid_plugins, it would be possible to code this as a 
plugin. Do any of the insiders on this list have an opinion upon whether 
if I submitted a patch for WordPress core to do this it'd have any 
chance of getting in?

Many thanks,
David


-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From johnbillion+wp at gmail.com  Mon Jul  1 10:30:48 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Mon, 1 Jul 2013 11:30:48 +0100
Subject: [wp-hackers] Restrict plugin load to certain pages?
In-Reply-To: <51D145AB.6070104@wordshell.net>
References: <51D145AB.6070104@wordshell.net>
Message-ID: <CAOqAKWCqMVg4ArhuEHvkp5mXEmp63=BNbp1fSVnFsL6ou7GY1Q@mail.gmail.com>

On 1 July 2013 10:02, David Anderson <david at wordshell.net> wrote:
> Looking at the WP core code, my only option to achieve this seems to be to
> be (via an mu-plugin, since a plugin would present a Catch-22) to hook
> get_option, detect the option 'active_plugins', and remove the offending
> plugin depending on the contents of _SERVER['REQUEST_URI'] and is_admin() (I
> don't want to disable anything admin-side).

You're approaching this from the wrong angle. Rather than not loading
the plugin at all when it's not necessary, you should only load the
required parts of your plugin when necessary. If your mu-plugin is
able to detect the correct condition to determine when your forum
plugin should or should not be loaded, then it can instead be done
within the forum plugin itself.

If your plugin is split up into separate files effectively then you
should only load minimal code on every page load, detect if the rest
of the plugin needs to be loaded (eg. by inspecting the URL as you
state) and then loading its other files when necessary. There's no
need for a separate plugin, and certainly no need for a nasty hack
like filtering the value of the active plugins option.

This can be as simple as (pseudo-code):

if ( url_contains( 'forum' ) )
    include 'forum-code.php';

Lots of plugins use similar code for only loading files in the admin
are. It's pretty simple stuff.

if ( is_admin() )
    include 'admin-code.php';

Additionally, if your plugin makes good use of object oriented
programming and is split into multiple classes then you can use
autoloading.

John

From johnbillion+wp at gmail.com  Mon Jul  1 10:40:49 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Mon, 1 Jul 2013 11:40:49 +0100
Subject: [wp-hackers] Restrict plugin load to certain pages?
In-Reply-To: <CAOqAKWCqMVg4ArhuEHvkp5mXEmp63=BNbp1fSVnFsL6ou7GY1Q@mail.gmail.com>
References: <51D145AB.6070104@wordshell.net>
 <CAOqAKWCqMVg4ArhuEHvkp5mXEmp63=BNbp1fSVnFsL6ou7GY1Q@mail.gmail.com>
Message-ID: <CAOqAKWD=hAvMuTO6fUJNrNqs5JmXYNkS7X1ro-OO-nH7JXJdow@mail.gmail.com>

On 1 July 2013 11:30, John Blackbourn <johnbillion+wp at gmail.com> wrote:
> On 1 July 2013 10:02, David Anderson <david at wordshell.net> wrote:
>> Looking at the WP core code, my only option to achieve this seems to be to
>> be (via an mu-plugin, since a plugin would present a Catch-22) to hook
>> get_option, detect the option 'active_plugins', and remove the offending
>> plugin depending on the contents of _SERVER['REQUEST_URI'] and is_admin() (I
>> don't want to disable anything admin-side).
>
> You're approaching this from the wrong angle. Rather than not loading
> the plugin at all when it's not necessary, you should only load the
> required parts of your plugin when necessary. If your mu-plugin is
> able to detect the correct condition to determine when your forum
> plugin should or should not be loaded, then it can instead be done
> within the forum plugin itself.
>
> If your plugin is split up into separate files effectively then you
> should only load minimal code on every page load, detect if the rest
> of the plugin needs to be loaded (eg. by inspecting the URL as you
> state) and then loading its other files when necessary. There's no
> need for a separate plugin, and certainly no need for a nasty hack
> like filtering the value of the active plugins option.
>
> This can be as simple as (pseudo-code):
>
> if ( url_contains( 'forum' ) )
>     include 'forum-code.php';
>
> Lots of plugins use similar code for only loading files in the admin
> are. It's pretty simple stuff.
>
> if ( is_admin() )
>     include 'admin-code.php';
>
> Additionally, if your plugin makes good use of object oriented
> programming and is split into multiple classes then you can use
> autoloading.
>
> John

I've just realised you're probably talking about a third party plugin,
in which case my suggestion is mostly moot. Filtering the value of the
active plugins option is a pretty yucky hack, but I don't have any
other suggestions.

Bear in mind that disabling the plugin completely on pages other than
at "/forum" means you'll potentially lose out on related
functionality, such as sidebar widgets that display the latest forum
posts, integration with other parts of your site, etc etc. You'll also
need to ensure the plugin loads when WP-Cron fires, in case it's using
cron events.

From jw at jacksonwhelan.com  Mon Jul  1 11:21:25 2013
From: jw at jacksonwhelan.com (Jackson Whelan)
Date: Mon, 01 Jul 2013 07:21:25 -0400
Subject: [wp-hackers] Restrict plugin load to certain pages?
In-Reply-To: <51D145AB.6070104@wordshell.net>
References: <51D145AB.6070104@wordshell.net>
Message-ID: <51D16635.4060403@jacksonwhelan.com>

On 7/1/13 5:02 AM, David Anderson wrote:
> Looking at the WP core code, my only option to achieve this seems to 
> be to be (via an mu-plugin, since a plugin would present a Catch-22) 
> to hook get_option, detect the option 'active_plugins', and remove the 
> offending plugin depending on the contents of _SERVER['REQUEST_URI'] 
> and is_admin() (I don't want to disable anything admin-side).
>
> - Anyone done it already and got some code?
Hi David,

Here's an mu-plugin which does just what you're after:

     http://wordpress.org/plugins/disable-plugins/

- Jackson

From dyordan1 at ramapo.edu  Mon Jul  1 13:00:19 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Mon, 1 Jul 2013 09:00:19 -0400
Subject: [wp-hackers] Deleting a lot of posts/terms on plugin
	deactivation
In-Reply-To: <F87C53EC-7FC6-4D63-9EA8-1934CD652380@matthiasbreuer.com>
References: <CAOwx47foMSEhz7=ETd1Hgg-3EngEYAwN7Mye4RnA-1okVDHtCA@mail.gmail.com>
 <99B771A5FC056B469CBC96F1224826E424FE4167@UKEXDM1-L.lbi.local>
 <CAOwx47f+55fYgFqe7RDrco0_ud9i=6WgBjsaDrn+h38AAaiPwQ@mail.gmail.com>
 <EB756E51-0616-491C-A317-9A1A4B57EF0D@matthiasbreuer.com>
 <CAOwx47esNEVrMGydpO7a=Uypq-RBRjsFXArA6S56rzx_RKYqpw@mail.gmail.com>
 <51CFD2AD.9010509@rotorised.com>
 <F87C53EC-7FC6-4D63-9EA8-1934CD652380@matthiasbreuer.com>
Message-ID: <B6864B49-0753-4DF2-BDA1-DDBFA0B4EA4F@ramapo.edu>

wp-cron fires up on page request only (kinda the only way with just PHP if you think hard enough) so yes, in a way it's synchronous but at the same time no, since wordpress fires up a separate non-blocking (asynchronous) request to wp-cron so as to not make the original request wait for time-consuming cron jobs if such happen to exist the moment someone accessed the server. You know, user experience and stuff. But yes, Chris had a good point, 0 visitors means no jobs being done. I've seen it happen but there are workarounds.

~Dobri

On Sun, 30 Jun 2013, at 2:28 PM, Matthias Breuer wrote:

> 
> Am 30.06.2013 um 08:39 schrieb Ryan McCue <lists at rotorised.com>:
> 
>> Nikola Nikolov wrote:
>>> Yeah - I guess that this will be my choice at the end - just wanted to
>>> check if someone else has any better ideas.
>> 
>> Your best bet is to offload this onto wp-cron, which runs without a
>> timelimit (similar to CLI) in the background.
> 
> I always thought wp-cron is running as a synchronous process when not called via real cronjobs. Is it done asynchronously?
> 
>> 
>> -- 
>> Ryan McCue
>> <http://ryanmccue.info/>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp-hackers at thecodecave.com  Mon Jul  1 17:18:52 2013
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Mon, 01 Jul 2013 13:18:52 -0400
Subject: [wp-hackers] Deleting a lot of posts/terms on plugin
	deactivation
In-Reply-To: <F87C53EC-7FC6-4D63-9EA8-1934CD652380@matthiasbreuer.com>
References: <CAOwx47foMSEhz7=ETd1Hgg-3EngEYAwN7Mye4RnA-1okVDHtCA@mail.gmail.com>
 <99B771A5FC056B469CBC96F1224826E424FE4167@UKEXDM1-L.lbi.local>
 <CAOwx47f+55fYgFqe7RDrco0_ud9i=6WgBjsaDrn+h38AAaiPwQ@mail.gmail.com>
 <EB756E51-0616-491C-A317-9A1A4B57EF0D@matthiasbreuer.com>
 <CAOwx47esNEVrMGydpO7a=Uypq-RBRjsFXArA6S56rzx_RKYqpw@mail.gmail.com>
 <51CFD2AD.9010509@rotorised.com>
 <F87C53EC-7FC6-4D63-9EA8-1934CD652380@matthiasbreuer.com>
Message-ID: <51D1B9FC.6010400@thecodecave.com>

On 6/30/2013 2:28 PM, Matthias Breuer wrote:
>>> Yeah - I guess that this will be my choice at the end - just wanted to
>>> check if someone else has any better ideas.
>> Your best bet is to offload this onto wp-cron, which runs without a
>> timelimit (similar to CLI) in the background.
> I always thought wp-cron is running as a synchronous process when not called via real cronjobs. Is it done asynchronously?
Back in the 2.1 era or so you would have been correct.  Back then, 
whichever unlucky visitor triggered all the work was the one that got a 
slow page load.  Now, instead of processing cron directly, a separate 
web call is made from the code using wp_remote_post() to trigger the 
processing of a cron batch.  That way all of the cron steps are executed 
asynchronously to any the visitor's session.

Brian Layman

From dyordan1 at ramapo.edu  Mon Jul  1 18:32:02 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Mon, 1 Jul 2013 14:32:02 -0400
Subject: [wp-hackers] Salting
Message-ID: <27E49336-E8C5-46E5-8A87-10EEC5E3112A@ramapo.edu>

I might be wrong on how all of this works but since this -> https://api.wordpress.org/secret-key/1.1/salt/ exists, why isn't it built into wordpress to just grab a random set of salts on the initial installation and save it in the wp-config on its own instead of the 'put your unique phrase here'? I feel like a good 40-50% of all installations have exactly that as salts so I feel this would make it a bit more secure. Am I missing something?

~Dobri


From wp at andrewnacin.com  Mon Jul  1 18:36:21 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 1 Jul 2013 14:36:21 -0400
Subject: [wp-hackers] Salting
In-Reply-To: <27E49336-E8C5-46E5-8A87-10EEC5E3112A@ramapo.edu>
References: <27E49336-E8C5-46E5-8A87-10EEC5E3112A@ramapo.edu>
Message-ID: <CAP29Pvh4L9+u31FdXfMW8HbdhRbhvJcc91N7H=1R_jLcvWgV+g@mail.gmail.com>

On Mon, Jul 1, 2013 at 2:32 PM, Dobri <dyordan1 at ramapo.edu> wrote:

> I might be wrong on how all of this works but since this ->
> https://api.wordpress.org/secret-key/1.1/salt/ exists, why isn't it built
> into wordpress to just grab a random set of salts on the initial
> installation and save it in the wp-config on its own instead of the 'put
> your unique phrase here'? I feel like a good 40-50% of all installations
> have exactly that as salts so I feel this would make it a bit more secure.
> Am I missing something?


It is built into WP; see wp-admin/setup-config.php.

It's worth noting that if keys or salts are unchanged from the default, or
are duplicated in any way, wp_salt() actually refuses to honor what is in
wp-config.php, and generates a new value (storing it in the DB).

Even if 40-50% of installations have exactly the same salts, wp_salt() very
likely is returning something different all together.

Nacin

From dyordan1 at ramapo.edu  Mon Jul  1 18:44:56 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Mon, 1 Jul 2013 14:44:56 -0400
Subject: [wp-hackers] Salting
In-Reply-To: <CAP29Pvh4L9+u31FdXfMW8HbdhRbhvJcc91N7H=1R_jLcvWgV+g@mail.gmail.com>
References: <27E49336-E8C5-46E5-8A87-10EEC5E3112A@ramapo.edu>
 <CAP29Pvh4L9+u31FdXfMW8HbdhRbhvJcc91N7H=1R_jLcvWgV+g@mail.gmail.com>
Message-ID: <7114BEB7-FB75-4E61-BD5A-03A2D5B6D04F@ramapo.edu>

Ah, that would make sense. I only brought it up cause I noticed it didn't change anything in the wp-config.php file when I tried a fresh install. Come to think of it that makes no sense whatsoever, better to store it in DB at that point. Thanks for that!

~Dobri

On Mon, 1 Jul 2013, at 2:36 PM, Andrew Nacin wrote:

> On Mon, Jul 1, 2013 at 2:32 PM, Dobri <dyordan1 at ramapo.edu> wrote:
> 
>> I might be wrong on how all of this works but since this ->
>> https://api.wordpress.org/secret-key/1.1/salt/ exists, why isn't it built
>> into wordpress to just grab a random set of salts on the initial
>> installation and save it in the wp-config on its own instead of the 'put
>> your unique phrase here'? I feel like a good 40-50% of all installations
>> have exactly that as salts so I feel this would make it a bit more secure.
>> Am I missing something?
> 
> 
> It is built into WP; see wp-admin/setup-config.php.
> 
> It's worth noting that if keys or salts are unchanged from the default, or
> are duplicated in any way, wp_salt() actually refuses to honor what is in
> wp-config.php, and generates a new value (storing it in the DB).
> 
> Even if 40-50% of installations have exactly the same salts, wp_salt() very
> likely is returning something different all together.
> 
> Nacin
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From david at wordshell.net  Mon Jul  1 18:50:17 2013
From: david at wordshell.net (David Anderson)
Date: Mon, 01 Jul 2013 19:50:17 +0100
Subject: [wp-hackers] Restrict plugin load to certain pages?
In-Reply-To: <mailman.11.1372680002.4323.wp-hackers@lists.automattic.com>
References: <mailman.11.1372680002.4323.wp-hackers@lists.automattic.com>
Message-ID: <51D1CF69.2000905@wordshell.net>

Hi,

>       http://wordpress.org/plugins/disable-plugins/

Jackson - thanks; that looks exactly like what I meant.

John - yes, you're right in your second post; it's someone else's badly 
coded plugin that I want to work around rather than re-writing someone 
else's code. But the tip to remember cron is useful. I'm confident that 
the plugin does nothing else on other pages (no widgets, etc.).

Does anyone with inside knowledge of committing to core have any comment 
on whether there'd be any interest in accepting a patch that:
a) loading plugins in a deterministic, easy-to-slot-in-to order 
(alphabetic is what springs to mind) rather than relying upon PHP's 
array ordering, as at present?
b) ran a filter before deciding to load each plugin, thus giving 
earlier-loading plugins an option to disable later loading ones? (And 
thus making it possible for a plugin with slug aaaa-disable-plugins to 
prevent any of the others)?
With such a patch, the plugin that Jackson links to wouldn't need 
special installation plugins to boot-strap itself via mu-plugins.

Many thanks,
David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From otto at ottodestruct.com  Mon Jul  1 18:49:59 2013
From: otto at ottodestruct.com (Otto)
Date: Mon, 1 Jul 2013 13:49:59 -0500
Subject: [wp-hackers] Salting
In-Reply-To: <7114BEB7-FB75-4E61-BD5A-03A2D5B6D04F@ramapo.edu>
References: <27E49336-E8C5-46E5-8A87-10EEC5E3112A@ramapo.edu>
 <CAP29Pvh4L9+u31FdXfMW8HbdhRbhvJcc91N7H=1R_jLcvWgV+g@mail.gmail.com>
 <7114BEB7-FB75-4E61-BD5A-03A2D5B6D04F@ramapo.edu>
Message-ID: <CAD-FghzU=xqLHbS+r44PTpbyc_T9PUwVQbDmawtvwc2jwujugg@mail.gmail.com>

If you make your own wp-config.php file instead of letting the
setup-config process do it for you, then yes, you should get your own
salts manually and put them in there. having it store them in the DB
is slightly slower. Not enough where I'd expect you to notice though.

A lot of install instruction sets still say to copy the
wp-config-sample.php file, but the automatic config process is
somewhat better and I recommend using that when possible.

-Otto


On Mon, Jul 1, 2013 at 1:44 PM, Dobri <dyordan1 at ramapo.edu> wrote:
> Ah, that would make sense. I only brought it up cause I noticed it didn't change anything in the wp-config.php file when I tried a fresh install. Come to think of it that makes no sense whatsoever, better to store it in DB at that point. Thanks for that!
>
> ~Dobri
>
> On Mon, 1 Jul 2013, at 2:36 PM, Andrew Nacin wrote:
>
>> On Mon, Jul 1, 2013 at 2:32 PM, Dobri <dyordan1 at ramapo.edu> wrote:
>>
>>> I might be wrong on how all of this works but since this ->
>>> https://api.wordpress.org/secret-key/1.1/salt/ exists, why isn't it built
>>> into wordpress to just grab a random set of salts on the initial
>>> installation and save it in the wp-config on its own instead of the 'put
>>> your unique phrase here'? I feel like a good 40-50% of all installations
>>> have exactly that as salts so I feel this would make it a bit more secure.
>>> Am I missing something?
>>
>>
>> It is built into WP; see wp-admin/setup-config.php.
>>
>> It's worth noting that if keys or salts are unchanged from the default, or
>> are duplicated in any way, wp_salt() actually refuses to honor what is in
>> wp-config.php, and generates a new value (storing it in the DB).
>>
>> Even if 40-50% of installations have exactly the same salts, wp_salt() very
>> likely is returning something different all together.
>>
>> Nacin
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mail at matthiasbreuer.com  Mon Jul  1 18:50:42 2013
From: mail at matthiasbreuer.com (Matthias Breuer)
Date: Mon, 1 Jul 2013 20:50:42 +0200
Subject: [wp-hackers] Deleting a lot of posts/terms on plugin
	deactivation
In-Reply-To: <51D1B9FC.6010400@thecodecave.com>
References: <CAOwx47foMSEhz7=ETd1Hgg-3EngEYAwN7Mye4RnA-1okVDHtCA@mail.gmail.com>
 <99B771A5FC056B469CBC96F1224826E424FE4167@UKEXDM1-L.lbi.local>
 <CAOwx47f+55fYgFqe7RDrco0_ud9i=6WgBjsaDrn+h38AAaiPwQ@mail.gmail.com>
 <EB756E51-0616-491C-A317-9A1A4B57EF0D@matthiasbreuer.com>
 <CAOwx47esNEVrMGydpO7a=Uypq-RBRjsFXArA6S56rzx_RKYqpw@mail.gmail.com>
 <51CFD2AD.9010509@rotorised.com>
 <F87C53EC-7FC6-4D63-9EA8-1934CD652380@matthiasbreuer.com>
 <51D1B9FC.6010400@thecodecave.com>
Message-ID: <772A97AA-42AA-4E50-BD24-8B102125ED75@matthiasbreuer.com>

It's always delighting what you can learn reading through core sources.


Am 01.07.2013 um 19:18 schrieb Brian Layman <wp-hackers at thecodecave.com>:

> On 6/30/2013 2:28 PM, Matthias Breuer wrote:
>>>> Yeah - I guess that this will be my choice at the end - just wanted to
>>>> check if someone else has any better ideas.
>>> Your best bet is to offload this onto wp-cron, which runs without a
>>> timelimit (similar to CLI) in the background.
>> I always thought wp-cron is running as a synchronous process when not called via real cronjobs. Is it done asynchronously?
> Back in the 2.1 era or so you would have been correct.  Back then, whichever unlucky visitor triggered all the work was the one that got a slow page load.  Now, instead of processing cron directly, a separate web call is made from the code using wp_remote_post() to trigger the processing of a cron batch.  That way all of the cron steps are executed asynchronously to any the visitor's session.
> 
> Brian Layman
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From info at samauciello.com  Mon Jul  1 20:42:53 2013
From: info at samauciello.com (Sam Auciello)
Date: Mon, 1 Jul 2013 16:42:53 -0400
Subject: [wp-hackers] Mailing list passwords in plain text
Message-ID: <CAGXuZ6vXXhJEVbW2YeBQDikAZxm-=pow95ogVJLsmKRPPma=eg@mail.gmail.com>

So I was just sent the following unencrypted message.  I've replaced my
password with asterisks but it is otherwise as is.  I shouldn't need to
tell anyone here why its horrible to store passwords in plain text but
sending them in unencrypted emails!  Seriously?  This is incredibly
irresponsible.  Can something be done about this?

---------- Forwarded message ----------
From: <mailman-owner at lists.automattic.com>
Date: Mon, Jul 1, 2013 at 1:00 AM
Subject: lists.automattic.com mailing list memberships reminder
To: info at samauciello.com


This is a reminder, sent out once a month, about your
lists.automattic.com mailing list memberships.  It includes your
subscription info and how to use it to change it or unsubscribe from a
list.

You can visit the URLs to change your membership status or
configuration, including unsubscribing, setting digest-style delivery
or disabling delivery altogether (e.g., for a vacation), and so on.

In addition to the URL interfaces, you can also use email to make such
changes.  For more info, send a message to the '-request' address of
the list (for example, mailman-request at lists.automattic.com)
containing just the word 'help' in the message body, and an email
message will be sent to you with instructions.

If you have questions, problems, comments, etc, send them to
mailman-owner at lists.automattic.com.  Thanks!

Passwords for info at samauciello.com:

List                                     Password // URL
----                                     --------
wp-hackers at lists.automattic.com          ******************
http://lists.automattic.com/mailman/options/wp-hackers/info%40samauciello.com

From chloe.desoutter+wphackers at gmail.com  Mon Jul  1 20:45:01 2013
From: chloe.desoutter+wphackers at gmail.com (=?ISO-8859-1?Q?Chlo=E9_Desoutter?=)
Date: Mon, 1 Jul 2013 22:45:01 +0200
Subject: [wp-hackers] Mailing list passwords in plain text
In-Reply-To: <CAGXuZ6vXXhJEVbW2YeBQDikAZxm-=pow95ogVJLsmKRPPma=eg@mail.gmail.com>
References: <CAGXuZ6vXXhJEVbW2YeBQDikAZxm-=pow95ogVJLsmKRPPma=eg@mail.gmail.com>
Message-ID: <CAH9U35=zAQsE_FoDkGwhVxYZHqExt7s1oXB5JSdV3z6xg=DBjQ@mail.gmail.com>

Hello,

Quick said, use a discardable password for mailing list.

Yours sincerely


2013/7/1 Sam Auciello <info at samauciello.com>

> So I was just sent the following unencrypted message.  I've replaced my
> password with asterisks but it is otherwise as is.  I shouldn't need to
> tell anyone here why its horrible to store passwords in plain text but
> sending them in unencrypted emails!  Seriously?  This is incredibly
> irresponsible.  Can something be done about this?
>
> ---------- Forwarded message ----------
> From: <mailman-owner at lists.automattic.com>
> Date: Mon, Jul 1, 2013 at 1:00 AM
> Subject: lists.automattic.com mailing list memberships reminder
> To: info at samauciello.com
>
>
> This is a reminder, sent out once a month, about your
> lists.automattic.com mailing list memberships.  It includes your
> subscription info and how to use it to change it or unsubscribe from a
> list.
>
> You can visit the URLs to change your membership status or
> configuration, including unsubscribing, setting digest-style delivery
> or disabling delivery altogether (e.g., for a vacation), and so on.
>
> In addition to the URL interfaces, you can also use email to make such
> changes.  For more info, send a message to the '-request' address of
> the list (for example, mailman-request at lists.automattic.com)
> containing just the word 'help' in the message body, and an email
> message will be sent to you with instructions.
>
> If you have questions, problems, comments, etc, send them to
> mailman-owner at lists.automattic.com.  Thanks!
>
> Passwords for info at samauciello.com:
>
> List                                     Password // URL
> ----                                     --------
> wp-hackers at lists.automattic.com          ******************
>
> http://lists.automattic.com/mailman/options/wp-hackers/info%40samauciello.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jdg at codesymphony.co  Mon Jul  1 21:47:01 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Mon, 1 Jul 2013 17:47:01 -0400
Subject: [wp-hackers] Mailing list passwords in plain text
In-Reply-To: <CAH9U35=zAQsE_FoDkGwhVxYZHqExt7s1oXB5JSdV3z6xg=DBjQ@mail.gmail.com>
References: <CAGXuZ6vXXhJEVbW2YeBQDikAZxm-=pow95ogVJLsmKRPPma=eg@mail.gmail.com>
 <CAH9U35=zAQsE_FoDkGwhVxYZHqExt7s1oXB5JSdV3z6xg=DBjQ@mail.gmail.com>
Message-ID: <B63B4F9C-9A15-4E3C-B035-7B96251467D0@codesymphony.co>

When you sign up I'm pretty sure it says that you should choose a discardable password, and tells you that it will be regularly emailed to you in plain text format. If you go to your preferences, you can disable the monthly reminders, so your password won't be emailed to you each month.

-J.D.

On Jul 1, 2013, at 4:45 PM, Chlo? Desoutter <chloe.desoutter+wphackers at gmail.com> wrote:

> Hello,
> 
> Quick said, use a discardable password for mailing list.
> 
> Yours sincerely
> 
> 
> 2013/7/1 Sam Auciello <info at samauciello.com>
> 
>> So I was just sent the following unencrypted message.  I've replaced my
>> password with asterisks but it is otherwise as is.  I shouldn't need to
>> tell anyone here why its horrible to store passwords in plain text but
>> sending them in unencrypted emails!  Seriously?  This is incredibly
>> irresponsible.  Can something be done about this?
>> 
>> ---------- Forwarded message ----------
>> From: <mailman-owner at lists.automattic.com>
>> Date: Mon, Jul 1, 2013 at 1:00 AM
>> Subject: lists.automattic.com mailing list memberships reminder
>> To: info at samauciello.com
>> 
>> 
>> This is a reminder, sent out once a month, about your
>> lists.automattic.com mailing list memberships.  It includes your
>> subscription info and how to use it to change it or unsubscribe from a
>> list.
>> 
>> You can visit the URLs to change your membership status or
>> configuration, including unsubscribing, setting digest-style delivery
>> or disabling delivery altogether (e.g., for a vacation), and so on.
>> 
>> In addition to the URL interfaces, you can also use email to make such
>> changes.  For more info, send a message to the '-request' address of
>> the list (for example, mailman-request at lists.automattic.com)
>> containing just the word 'help' in the message body, and an email
>> message will be sent to you with instructions.
>> 
>> If you have questions, problems, comments, etc, send them to
>> mailman-owner at lists.automattic.com.  Thanks!
>> 
>> Passwords for info at samauciello.com:
>> 
>> List                                     Password // URL
>> ----                                     --------
>> wp-hackers at lists.automattic.com          ******************
>> 
>> http://lists.automattic.com/mailman/options/wp-hackers/info%40samauciello.com
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp at andrewnacin.com  Mon Jul  1 21:51:34 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Mon, 1 Jul 2013 17:51:34 -0400
Subject: [wp-hackers] Mailing list passwords in plain text
In-Reply-To: <B63B4F9C-9A15-4E3C-B035-7B96251467D0@codesymphony.co>
References: <CAGXuZ6vXXhJEVbW2YeBQDikAZxm-=pow95ogVJLsmKRPPma=eg@mail.gmail.com>
 <CAH9U35=zAQsE_FoDkGwhVxYZHqExt7s1oXB5JSdV3z6xg=DBjQ@mail.gmail.com>
 <B63B4F9C-9A15-4E3C-B035-7B96251467D0@codesymphony.co>
Message-ID: <CAP29PviZGf8d06rV-_vC7jHXE+K_TEG3o91kgVm+98aP_OGjoQ@mail.gmail.com>

On Mon, Jul 1, 2013 at 5:47 PM, J.D. Grimes <jdg at codesymphony.co> wrote:

> When you sign up I'm pretty sure it says that you should choose a
> discardable password, and tells you that it will be regularly emailed to
> you in plain text format. If you go to your preferences, you can disable
> the monthly reminders, so your password won't be emailed to you each month.
>

Yep. This is standard operating procedure for mailman (
http://www.gnu.org/software/mailman/) which is the most widely used list
manager (and what WordPress.org uses).

From info at bungeshea.com  Mon Jul  1 21:54:18 2013
From: info at bungeshea.com (Shea Bunge)
Date: Tue, 2 Jul 2013 07:54:18 +1000
Subject: [wp-hackers] Salting
In-Reply-To: <27E49336-E8C5-46E5-8A87-10EEC5E3112A@ramapo.edu>
References: <27E49336-E8C5-46E5-8A87-10EEC5E3112A@ramapo.edu>
Message-ID: <BLU177-W36F205C7C60E55B13A7C4DB8710@phx.gbl>




If you don't create a wp-config.php file, when you visit your WordPress installation URL, it will present you with a screen where all you need to do is enter your database details and WordPress will build a wp-config.php file for you (this includes setting the salts). The page you mention only exists for people who are building a wp-config.php file manually, by copying the wp-config-sample.php file and editing the values

> From: dyordan1 at ramapo.edu
> Date: Mon, 1 Jul 2013 14:32:02 -0400
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] Salting
> 
> I might be wrong on how all of this works but since this -> https://api.wordpress.org/secret-key/1.1/salt/ exists, why isn't it built into wordpress to just grab a random set of salts on the initial installation and save it in the wp-config on its own instead of the 'put your unique phrase here'? I feel like a good 40-50% of all installations have exactly that as salts so I feel this would make it a bit more secure. Am I missing something?
> 
> ~Dobri
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

 		 	   		  

From mahmudur at 79mplus.com  Tue Jul  2 09:17:13 2013
From: mahmudur at 79mplus.com (Md Mahmudur Rahman)
Date: Tue, 2 Jul 2013 19:17:13 +1000
Subject: [wp-hackers] Custom URL Rewrite Help
Message-ID: <CA+df8JL7-rto3tpDd9QqykGnhE35SAZcyD101zrhiy09QdbDOA@mail.gmail.com>

Dear Hackers,

I have a custom post type (artist), which has a custom URL rewrite for a
custom page template as given below:

*URL:* http://localhost/artist/artist-name/videos/3/

*Code for URL Rewrite:*

add_action( 'init', 'my_artist_rewrite_rule' );

function my_artist_rewrite_rule() {

            add_rewrite_rule( '([^/]+)/videos(/[0-9]+)?/?$',
'index.php?post_type=artist&name=$matches[1]&videos=yes&page=$matches[2]',
'top' );


        }

And I am manually flushing the permalink settings each time I am making any
change to the rewrite rule to reflect the changes. But it seems that the
custom rewrite rule is not working. Here is the response of the $wp object:

[query_vars] => Array
        (
            [name] => artist-name
            [page] => /3
            [news] => yes
            [post_type] => artist
        )

    [query_string] => name=artist-name&page=%2F3&news=yes&post_type=artist
    [request] => artist/artist-name/3
    [matched_rule] => ([^/]+)(/[0-9]+)?/?$
    [matched_query] => name=artist-name&page=%2F3
    [did_permalink] => 1

So the requesting URL is always matching to the below rule ignoring the
custom rewrite rule:

    [matched_rule] => ([^/]+)(/[0-9]+)?/?$

I have checked the custom rule with a rewrite rules inspector plugin and
requested URL always matched with the custom URL rewrite rule but that is
not the case in real.

Not sure what is happening behind? Hope someone can give me a clue.

*Many thanks,*

*Mahmudur Rahman*

<http://www.79mplus.com/>

From dyordan1 at ramapo.edu  Tue Jul  2 12:41:52 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Tue, 2 Jul 2013 08:41:52 -0400
Subject: [wp-hackers] Custom URL Rewrite Help
In-Reply-To: <CA+df8JL7-rto3tpDd9QqykGnhE35SAZcyD101zrhiy09QdbDOA@mail.gmail.com>
References: <CA+df8JL7-rto3tpDd9QqykGnhE35SAZcyD101zrhiy09QdbDOA@mail.gmail.com>
Message-ID: <F466FEBA-1EEA-4577-9A3D-4EB9D2FFFCF4@ramapo.edu>

WP complies with the first rule matched. add_rewrite_rule adds your rule to the bottom of the list (I think). Thus, it's never reached. You have a better shot doing this with something like this: (straight out of my code so ignore variable names and stuff.)

function add_rewrite_rules($aRules) {
	global $press_releases_slug;
	$year = date('Y');
    $aNewRules = array(
        $press_releases_slug.'/([0-9]{4})/?$' => 'index.php?post_type='.$press_releases_slug.'&year=$matches[1]&posts_per_page=-1&nopaging=1&orderby=post_date&order=DESC',
        $press_releases_slug.'/search/(.+?)/?$' => 'index.php?s=$matches[1]&post_type='.$press_releases_slug.'&orderby=post_date&order=DESC',
        $press_releases_slug.'/?$' => 'index.php?post_type='.$press_releases_slug.'&year='.$year.'&posts_per_page=-1&nopaging=1&orderby=post_date&order=DESC'
    );
    $aRules = $aNewRules + $aRules;
    return $aRules;
}

add_filter('rewrite_rules_array', 'add_rewrite_rules');

As you can see, I create an array of my rules and prepend it to the existing ones. Presto, they become the first ones that match. Not my best piece of work but it is functional. I think add_rewrite_rule is more about adding something that doesn't conflict with the stuff wp builds by default. I guess another way would be when creating your post type to set rewrite to false. (http://codex.wordpress.org/Function_Reference/register_post_type) Whichever works for you. Enjoy!

~Dobri

On Tue, 2 Jul 2013, at 5:17 AM, Md Mahmudur Rahman wrote:

> Dear Hackers,
> 
> I have a custom post type (artist), which has a custom URL rewrite for a
> custom page template as given below:
> 
> *URL:* http://localhost/artist/artist-name/videos/3/
> 
> *Code for URL Rewrite:*
> 
> add_action( 'init', 'my_artist_rewrite_rule' );
> 
> function my_artist_rewrite_rule() {
> 
>            add_rewrite_rule( '([^/]+)/videos(/[0-9]+)?/?$',
> 'index.php?post_type=artist&name=$matches[1]&videos=yes&page=$matches[2]',
> 'top' );
> 
> 
>        }
> 
> And I am manually flushing the permalink settings each time I am making any
> change to the rewrite rule to reflect the changes. But it seems that the
> custom rewrite rule is not working. Here is the response of the $wp object:
> 
> [query_vars] => Array
>        (
>            [name] => artist-name
>            [page] => /3
>            [news] => yes
>            [post_type] => artist
>        )
> 
>    [query_string] => name=artist-name&page=%2F3&news=yes&post_type=artist
>    [request] => artist/artist-name/3
>    [matched_rule] => ([^/]+)(/[0-9]+)?/?$
>    [matched_query] => name=artist-name&page=%2F3
>    [did_permalink] => 1
> 
> So the requesting URL is always matching to the below rule ignoring the
> custom rewrite rule:
> 
>    [matched_rule] => ([^/]+)(/[0-9]+)?/?$
> 
> I have checked the custom rule with a rewrite rules inspector plugin and
> requested URL always matched with the custom URL rewrite rule but that is
> not the case in real.
> 
> Not sure what is happening behind? Hope someone can give me a clue.
> 
> *Many thanks,*
> 
> *Mahmudur Rahman*
> 
> <http://www.79mplus.com/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From lists at rotorised.com  Tue Jul  2 12:45:28 2013
From: lists at rotorised.com (Ryan McCue)
Date: Tue, 02 Jul 2013 22:45:28 +1000
Subject: [wp-hackers] Custom URL Rewrite Help
In-Reply-To: <F466FEBA-1EEA-4577-9A3D-4EB9D2FFFCF4@ramapo.edu>
References: <CA+df8JL7-rto3tpDd9QqykGnhE35SAZcyD101zrhiy09QdbDOA@mail.gmail.com>
 <F466FEBA-1EEA-4577-9A3D-4EB9D2FFFCF4@ramapo.edu>
Message-ID: <51D2CB68.9050106@rotorised.com>

Dobri wrote:
> WP complies with the first rule matched. add_rewrite_rule adds your rule to the bottom of the list (I think).

Note the 'top' parameter there.

I believe the reason it's not matching is because the regex is wrong.

	([^/]+)/videos(/[0-9]+)?/?$

The first part of that matches anything but a slash, however the URL is:

	artist/artist-name/videos/3/

So, I don't believe that will match correctly. Try (.+) instead for the
first part.

-- 
Ryan McCue
<http://ryanmccue.info/>

From chris at lod.com  Tue Jul  2 13:32:23 2013
From: chris at lod.com (Chris McCoy)
Date: Tue, 02 Jul 2013 09:32:23 -0400
Subject: [wp-hackers] running a filter on stylesheet and template
Message-ID: <CDF84EA7.1B2F%chris@lod.com>

im running a filter on stylesheet and template to serve up a mobile theme,
if i put the code in a plugin it works fine, but when its in a theme it
doesnt seem to be running the filter.

would the theme code be running too late?




From johnbillion+wp at gmail.com  Tue Jul  2 13:41:31 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Tue, 2 Jul 2013 14:41:31 +0100
Subject: [wp-hackers] running a filter on stylesheet and template
In-Reply-To: <CDF84EA7.1B2F%chris@lod.com>
References: <CDF84EA7.1B2F%chris@lod.com>
Message-ID: <CAOqAKWDcnDfQhrAHt+_cfTd5vHs1cQyt4rUC=qxsMmnHFpHohw@mail.gmail.com>

On 2 July 2013 14:32, Chris McCoy <chris at lod.com> wrote:
> im running a filter on stylesheet and template to serve up a mobile theme,
> if i put the code in a plugin it works fine, but when its in a theme it
> doesnt seem to be running the filter.
>
> would the theme code be running too late?

You're running a filter in your theme to filter your theme? ;-)

Yes, these filters needs to be used by a plugin.

John

From wp at andrewnacin.com  Tue Jul  2 13:42:48 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 2 Jul 2013 09:42:48 -0400
Subject: [wp-hackers] running a filter on stylesheet and template
In-Reply-To: <CDF84EA7.1B2F%chris@lod.com>
References: <CDF84EA7.1B2F%chris@lod.com>
Message-ID: <CAP29PvgcwiCEsAAurjmXxhx4pk7zyJkpcqpcunaTe=0Vf0S66A@mail.gmail.com>

On Tue, Jul 2, 2013 at 9:32 AM, Chris McCoy <chris at lod.com> wrote:

> im running a filter on stylesheet and template to serve up a mobile theme,
> if i put the code in a plugin it works fine, but when its in a theme it
> doesnt seem to be running the filter.


If you try to have a different theme loaded after the theme has already
loaded, well, you're gonna have a bad time. You could either do this in
a plugin or use the template_include filter, or a host of other ways
depending on the desired effect.

From tcbarrett at gmail.com  Wed Jul  3 08:39:20 2013
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 3 Jul 2013 09:39:20 +0100
Subject: [wp-hackers] Removing 'www' from primary blog on network
In-Reply-To: <51CCEBCF.7020702@lobaugh.net>
References: <CAEgmxaa-y99_BxnGSYAoXMeHnp1jvc=Kg__r0TnjzNAW4rEc7A@mail.gmail.com>
 <9A3C5C99-E39E-4856-88C8-EBB524195ADE@ipstenu.org>
 <193AA443-5C20-41AE-8557-2592141A9208@brianhogg.ca>
 <51CCEBCF.7020702@lobaugh.net>
Message-ID: <CAEgmxaYdh8OhaE2652Gt_87k-FwLjGg=G8OZiSpJ65jUuKmr2g@mail.gmail.com>

Thanks all

I also needed to update wp_sitemeta to set the siteurl.


On 28 June 2013 02:50, Ben Lobaugh <lists at lobaugh.net> wrote:

> +1
>
> Just a couple days ago I used that script to migrate over a large
> important multisite with no issue other than script timeouts. If that
> happens to you simply select a few tables at a time and repeat the process
> till complete
>
>
> On 6/25/13 6:46 AM, Brian Hogg wrote:
>
>> A script like this one can help with the serialized data search +
>> replace, at least:
>>
>> http://interconnectit.com/**products/search-and-replace-**
>> for-wordpress-databases/<http://interconnectit.com/products/search-and-replace-for-wordpress-databases/>
>>
>> Have used it a few times when moving a multisite over to a new core
>> domain (in addition to any non-db changes like wp-config.php) and has
>> worked well.
>>
>> On 2013-06-25, at 9:23, Mika Epstein <ipstenu at ipstenu.org> wrote:
>>
>>  Check wp_options too. The home and siteurl entries often remain
>>> oroblematic.
>>>
>>> Actually, you may want to search the whole DB to see what lingers. But
>>> beware serialized data :/
>>>
>>> On Jun 25, 2013, at 4:56 AM, Tom Barrett <tcbarrett at gmail.com> wrote:
>>>
>>>  I have a network that was set up using www (even though the guide says
>>>> not
>>>> to).
>>>>
>>>> Is there a way to fix this?
>>>>
>>>> I have tried updating wp-config.php, wp_blogs and wp_site.
>>>>
>>>> I can get it to the point where all the non-primary sites and their
>>>> domain
>>>> mappings appear to work. The primary blog works, and the /network/ can
>>>> be
>>>> browsed.
>>>>
>>>> However, the two issues appear to be:
>>>> 1. Browsing /network/ is done on www site
>>>> 2. Adding new sites fails with 'Are you sure you want to do this?'
>>>>
>>>> Thanks!
>>>> ______________________________**_________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>>
>>> ______________________________**_________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>



-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From dyordan1 at ramapo.edu  Wed Jul  3 14:37:40 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Wed, 3 Jul 2013 10:37:40 -0400
Subject: [wp-hackers] Ignore filtered_html
Message-ID: <9D1D6608-D813-4046-B7B6-C4EAD86EFDD1@ramapo.edu>

Hi,

I'm working on a plugin for WordPress that adds Code Snippets. Brief overview: admin people create/edit the code snippets and then when an editor wants to include them on a page, they use a shortcode. However, I want to make sure that when the code snippet(which is just a post type) is being saved, no html filtering is done. My guess is it will be done with kses_remove_filters(). I'm having trouble hooking to the right place though. So, what would be a good hook to check that WP is currently saving, check it's my custom post type and be early enough to run kses_remove_filters()? Is content_save_pre with priority < 10 a good choice. I do get the content and I guess it's early enough to run kses... but can I check the post_type? Any other ideas? Thanks!

Dobromir Yordanov (Dobri)
Web Developer & WordPress Support Specialist
Ramapo College Web Team
Phone: (201) 684-6657

~Dobri


From nl at thoughtrefinery.com  Wed Jul  3 15:39:05 2013
From: nl at thoughtrefinery.com (Nicholas Ciske)
Date: Wed, 3 Jul 2013 10:39:05 -0500
Subject: [wp-hackers] Ignore filtered_html
In-Reply-To: <9D1D6608-D813-4046-B7B6-C4EAD86EFDD1@ramapo.edu>
References: <9D1D6608-D813-4046-B7B6-C4EAD86EFDD1@ramapo.edu>
Message-ID: <B604B143-BFE8-4630-9121-BD186DEACD31@thoughtrefinery.com>

Use a meta box/custom field (i.e. turn off post_content in your CPT) and you can control how it's saved.

As it's a code snippet I imagine a true code editor like code mirror would be preferable over the standard html editor in WP?

If you want to use the content editor, this may be what you're looking for:
http://wordpress.stackexchange.com/questions/75568/wp-insert-post-disable-html-filter

Also note that there is a capability called unfiltered_html that has a bearing on whether or not HTML is filtered by default.

_________________________
Nick Ciske
http://thoughtrefinery.com/
@nciske	

On Jul 3, 2013, at 9:37 AM, Dobri wrote:

> I'm working on a plugin for WordPress that adds Code Snippets. Brief overview: admin people create/edit the code snippets and then when an editor wants to include them on a page, they use a shortcode. However, I want to make sure that when the code snippet(which is just a post type) is being saved, no html filtering is done. 
> 
> ~Dobri


From jacobsnyder at gmail.com  Thu Jul  4 13:27:52 2013
From: jacobsnyder at gmail.com (Jacob Snyder)
Date: Thu, 4 Jul 2013 08:27:52 -0500
Subject: [wp-hackers] wp-hackers Digest, Vol 102, Issue 5
In-Reply-To: <mailman.15.1372939202.17505.wp-hackers@lists.automattic.com>
References: <mailman.15.1372939202.17505.wp-hackers@lists.automattic.com>
Message-ID: <CAPEbg-G_=NffM_5cA=NvKJSxJxoQ2zr3QDF9ehDAozxioT4-3A@mail.gmail.com>

You could plug into the
save_post<http://codex.wordpress.org/Plugin_API/Action_Reference/save_post>action.

if ( 'snippet_type' == $_POST['post_type'] ) // save
$post->post_content however you want

Of course, you are resaving it over the html_filtered save that just
happened, but you could control it. Maybe there is a better action, but the
meta field idea isn't a bad idea.

On Thu, Jul 4, 2013 at 7:00 AM, <wp-hackers-request at lists.automattic.com>wrote:

> Send wp-hackers mailing list submissions to
>         wp-hackers at lists.automattic.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>         http://lists.automattic.com/mailman/listinfo/wp-hackers
> or, via email, send a message with subject or body 'help' to
>         wp-hackers-request at lists.automattic.com
>
> You can reach the person managing the list at
>         wp-hackers-owner at lists.automattic.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wp-hackers digest..."
>
>
> Today's Topics:
>
>    1. Ignore filtered_html (Dobri)
>    2. Re: Ignore filtered_html (Nicholas Ciske)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Wed, 3 Jul 2013 10:37:40 -0400
> From: Dobri <dyordan1 at ramapo.edu>
> To: "Discussion list for WordPress developers."
>         <wp-hackers at lists.automattic.com>
> Subject: [wp-hackers] Ignore filtered_html
> Message-ID: <9D1D6608-D813-4046-B7B6-C4EAD86EFDD1 at ramapo.edu>
> Content-Type: text/plain;       charset=us-ascii
>
> Hi,
>
> I'm working on a plugin for WordPress that adds Code Snippets. Brief
> overview: admin people create/edit the code snippets and then when an
> editor wants to include them on a page, they use a shortcode. However, I
> want to make sure that when the code snippet(which is just a post type) is
> being saved, no html filtering is done. My guess is it will be done with
> kses_remove_filters(). I'm having trouble hooking to the right place
> though. So, what would be a good hook to check that WP is currently saving,
> check it's my custom post type and be early enough to run
> kses_remove_filters()? Is content_save_pre with priority < 10 a good
> choice. I do get the content and I guess it's early enough to run kses...
> but can I check the post_type? Any other ideas? Thanks!
>
> Dobromir Yordanov (Dobri)
> Web Developer & WordPress Support Specialist
> Ramapo College Web Team
> Phone: (201) 684-6657
>
> ~Dobri
>
>
>
> ------------------------------
>
> Message: 2
> Date: Wed, 3 Jul 2013 10:39:05 -0500
> From: Nicholas Ciske <nl at thoughtrefinery.com>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Ignore filtered_html
> Message-ID: <B604B143-BFE8-4630-9121-BD186DEACD31 at thoughtrefinery.com>
> Content-Type: text/plain;       charset=us-ascii
>
> Use a meta box/custom field (i.e. turn off post_content in your CPT) and
> you can control how it's saved.
>
> As it's a code snippet I imagine a true code editor like code mirror would
> be preferable over the standard html editor in WP?
>
> If you want to use the content editor, this may be what you're looking for:
>
> http://wordpress.stackexchange.com/questions/75568/wp-insert-post-disable-html-filter
>
> Also note that there is a capability called unfiltered_html that has a
> bearing on whether or not HTML is filtered by default.
>
> _________________________
> Nick Ciske
> http://thoughtrefinery.com/
> @nciske
>
> On Jul 3, 2013, at 9:37 AM, Dobri wrote:
>
> > I'm working on a plugin for WordPress that adds Code Snippets. Brief
> overview: admin people create/edit the code snippets and then when an
> editor wants to include them on a page, they use a shortcode. However, I
> want to make sure that when the code snippet(which is just a post type) is
> being saved, no html filtering is done.
> >
> > ~Dobri
>
>
>
> ------------------------------
>
> Subject: Digest Footer
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> ------------------------------
>
> End of wp-hackers Digest, Vol 102, Issue 5
> ******************************************
>

From mickyhulse.lists at gmail.com  Fri Jul  5 02:55:23 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Thu, 4 Jul 2013 19:55:23 -0700
Subject: [wp-hackers] GitHub submodule theme development?
Message-ID: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>

Hello,

Just curious if anyone here develops themes using GitHub submodules?

I"ve got a standard WordPress local/XAMPP/GitHub/production workflow
setup and that's working pretty good (I've got WordPress setup as a
submodule). I was starting a new theme and thought it might be cool to
make it a submodule.

Before I start down that path, I just wanted to see if anyone here
does this as a regular part of their theme dev workflow? If yes, do
you have any tips? What's your workflow like?

Thanks!
M

From brad at bradparbs.com  Fri Jul  5 03:02:38 2013
From: brad at bradparbs.com (Brad Parbs)
Date: Thu, 4 Jul 2013 22:02:38 -0500
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
Message-ID: <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>

I just switched over my installs to use WordPress in a Git submodule.

Check out http://github.com/bradp/wpeagles to see it in action. I based it off of Mark Jaquith's wp-stack and WordPress skeleton, check those out too!

Brad Parbs

On Jul 4, 2013, at 9:55 PM, Micky Hulse <mickyhulse.lists at gmail.com> wrote:

> Hello,
> 
> Just curious if anyone here develops themes using GitHub submodules?
> 
> I"ve got a standard WordPress local/XAMPP/GitHub/production workflow
> setup and that's working pretty good (I've got WordPress setup as a
> submodule). I was starting a new theme and thought it might be cool to
> make it a submodule.
> 
> Before I start down that path, I just wanted to see if anyone here
> does this as a regular part of their theme dev workflow? If yes, do
> you have any tips? What's your workflow like?
> 
> Thanks!
> M
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From brian at brianhogg.ca  Fri Jul  5 15:02:35 2013
From: brian at brianhogg.ca (Brian Hogg)
Date: Fri, 5 Jul 2013 11:02:35 -0400
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
 <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
Message-ID: <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>

Mark pointed out that these shouldn't be together, as the config files in the public web root contain passwords.  Perhaps another layer so they're out of the web root or just keep them separated?

On 2013-07-04, at 11:02 PM, Brad Parbs <brad at bradparbs.com> wrote:

> I just switched over my installs to use WordPress in a Git submodule.
> 
> Check out http://github.com/bradp/wpeagles to see it in action. I based it off of Mark Jaquith's wp-stack and WordPress skeleton, check those out too!
> 
> Brad Parbs
> 
> On Jul 4, 2013, at 9:55 PM, Micky Hulse <mickyhulse.lists at gmail.com> wrote:
> 
>> Hello,
>> 
>> Just curious if anyone here develops themes using GitHub submodules?
>> 
>> I"ve got a standard WordPress local/XAMPP/GitHub/production workflow
>> setup and that's working pretty good (I've got WordPress setup as a
>> submodule). I was starting a new theme and thought it might be cool to
>> make it a submodule.
>> 
>> Before I start down that path, I just wanted to see if anyone here
>> does this as a regular part of their theme dev workflow? If yes, do
>> you have any tips? What's your workflow like?
>> 
>> Thanks!
>> M
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From simon.weil at naturalint.com  Fri Jul  5 15:22:33 2013
From: simon.weil at naturalint.com (Simon Weil)
Date: Fri, 5 Jul 2013 18:22:33 +0300
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
 <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
 <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>
Message-ID: <CADxdhecqobewn1+curoKmOe1ucwkK=4KkqGmXN1yXSs07ocUjw@mail.gmail.com>

You can use the yeoman wordpress generator for this (I have only played
with it till now but looks promising):

npm install -g yo generator-yo-wordpress
(GitHub<https://github.com/romainberger/yeoman-wordpress>,
npm <https://npmjs.org/package/generator-yo-wordpress>)

or

npm install -g yo generator-wordpress
(npm<https://npmjs.org/package/generator-wordpress>
)


On Fri, Jul 5, 2013 at 6:02 PM, Brian Hogg <brian at brianhogg.ca> wrote:

> Mark pointed out that these shouldn't be together, as the config files in
> the public web root contain passwords.  Perhaps another layer so they're
> out of the web root or just keep them separated?
>
> On 2013-07-04, at 11:02 PM, Brad Parbs <brad at bradparbs.com> wrote:
>
> > I just switched over my installs to use WordPress in a Git submodule.
> >
> > Check out http://github.com/bradp/wpeagles to see it in action. I based
> it off of Mark Jaquith's wp-stack and WordPress skeleton, check those out
> too!
> >
> > Brad Parbs
> >
> > On Jul 4, 2013, at 9:55 PM, Micky Hulse <mickyhulse.lists at gmail.com>
> wrote:
> >
> >> Hello,
> >>
> >> Just curious if anyone here develops themes using GitHub submodules?
> >>
> >> I"ve got a standard WordPress local/XAMPP/GitHub/production workflow
> >> setup and that's working pretty good (I've got WordPress setup as a
> >> submodule). I was starting a new theme and thought it might be cool to
> >> make it a submodule.
> >>
> >> Before I start down that path, I just wanted to see if anyone here
> >> does this as a regular part of their theme dev workflow? If yes, do
> >> you have any tips? What's your workflow like?
> >>
> >> Thanks!
> >> M
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From zigotica at gmail.com  Fri Jul  5 15:25:01 2013
From: zigotica at gmail.com (sergi meseguer)
Date: Fri, 5 Jul 2013 17:25:01 +0200
Subject: [wp-hackers] define WP_ADMIN_DIR constant
Message-ID: <CA+oS4Gp-NhnHk0MJo_TaMq_YvqPF9PQuKgh9=7meFiM-cGMkPw@mail.gmail.com>

hi,

I've asked in the forums about the possibility of adding the admin folder
as a constant, ie WP_ADMIN_DIR:
http://wordpress.org/support/topic/wp-admin-constant

Been directed to contribute to the Core. The problem is, even if I made the
changes to Core, would they be accepted as a contribution? According to
this thread in 2011, NO:
http://lists.automattic.com/pipermail/wp-hackers/2011-June/039780.html

Is the official answer still (2013) to keep out of this? If the answer is
no, is there an official or recommended way to obfuscate wp-admin location?

Thank you
Sergi

From johnbillion+wp at gmail.com  Fri Jul  5 15:52:21 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri, 5 Jul 2013 16:52:21 +0100
Subject: [wp-hackers] define WP_ADMIN_DIR constant
In-Reply-To: <CA+oS4Gp-NhnHk0MJo_TaMq_YvqPF9PQuKgh9=7meFiM-cGMkPw@mail.gmail.com>
References: <CA+oS4Gp-NhnHk0MJo_TaMq_YvqPF9PQuKgh9=7meFiM-cGMkPw@mail.gmail.com>
Message-ID: <CAOqAKWA-TvatMV6YeYgPg77PraosZ76nNWxqcG7YgaLxFy=8qg@mail.gmail.com>

On 5 July 2013 16:25, sergi meseguer <zigotica at gmail.com> wrote:
> Is the official answer still (2013) to keep out of this? If the answer is
> no, is there an official or recommended way to obfuscate wp-admin location?

The answer still appears to be no. Security by obscurity is still not
real security.

The most recent discussion on this topic can be found here:
http://core.trac.wordpress.org/ticket/24673. See in particular Andrew
Nacin's comment on that ticket, and previous discussion on the related
tickets (http://core.trac.wordpress.org/ticket/15289,
http://core.trac.wordpress.org/ticket/13118,
http://core.trac.wordpress.org/ticket/7194).

John

From wp at andrewnacin.com  Fri Jul  5 16:02:46 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 5 Jul 2013 12:02:46 -0400
Subject: [wp-hackers] define WP_ADMIN_DIR constant
In-Reply-To: <CAOqAKWA-TvatMV6YeYgPg77PraosZ76nNWxqcG7YgaLxFy=8qg@mail.gmail.com>
References: <CA+oS4Gp-NhnHk0MJo_TaMq_YvqPF9PQuKgh9=7meFiM-cGMkPw@mail.gmail.com>
 <CAOqAKWA-TvatMV6YeYgPg77PraosZ76nNWxqcG7YgaLxFy=8qg@mail.gmail.com>
Message-ID: <CAP29PvhRs3H50MvCXUGK2EGwvMPGgzSx0iSE_tirXBJDPpY97A@mail.gmail.com>

And if you wanted to, you could filter URLs (everything goes through
admin_url() etc) and then just do rewriting manually at the server (i.e.
nginx, apache) level. This basically already occurs in multisite, to
rewrite /some-blog/wp-admin/ to the actual wp-admin directory. So, no need
to actually support this in core.


On Fri, Jul 5, 2013 at 11:52 AM, John Blackbourn
<johnbillion+wp at gmail.com>wrote:

> On 5 July 2013 16:25, sergi meseguer <zigotica at gmail.com> wrote:
> > Is the official answer still (2013) to keep out of this? If the answer is
> > no, is there an official or recommended way to obfuscate wp-admin
> location?
>
> The answer still appears to be no. Security by obscurity is still not
> real security.
>
> The most recent discussion on this topic can be found here:
> http://core.trac.wordpress.org/ticket/24673. See in particular Andrew
> Nacin's comment on that ticket, and previous discussion on the related
> tickets (http://core.trac.wordpress.org/ticket/15289,
> http://core.trac.wordpress.org/ticket/13118,
> http://core.trac.wordpress.org/ticket/7194).
>
> John
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mickyhulse.lists at gmail.com  Fri Jul  5 17:57:42 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Fri, 5 Jul 2013 10:57:42 -0700
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <CADxdhecqobewn1+curoKmOe1ucwkK=4KkqGmXN1yXSs07ocUjw@mail.gmail.com>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
 <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
 <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>
 <CADxdhecqobewn1+curoKmOe1ucwkK=4KkqGmXN1yXSs07ocUjw@mail.gmail.com>
Message-ID: <CALri7Mk18sffMZ-59g8+iVTx2+HkJtxsPX7CnQ__B+CnGYUfCQ@mail.gmail.com>

Hi Brad, Brian and Simon, thanks so much for the quick replies and
help, I really appreciate it. :)

On Thu, Jul 4, 2013 at 8:02 PM, Brad Parbs <brad at bradparbs.com> wrote:
> I just switched over my installs to use WordPress in a Git submodule.
> Check out http://github.com/bradp/wpeagles to see it in action. I based it off of Mark Jaquith's wp-stack and WordPress skeleton, check those out too!

Oh, nice!

Actually, I was just using (last night) Skeleton
<https://github.com/markjaquith/WordPress-Skeleton>, and
<https://github.com/davidwinter/wordpress-with-git>, to setup
something similar. :)

I've got a pretty good workflow setup for local/prod using a few
simple tools, so I'm stoked on my setup (which is close to yours) so
far.

Anyway, thanks for reply and for showing me your setup! I really
appreciate it. :)

On Fri, Jul 5, 2013 at 8:02 AM, Brian Hogg <brian at brianhogg.ca> wrote:
> Mark pointed out that these shouldn't be together, as the config files in the public web root contain passwords.  Perhaps another layer so they're out of the web root or just keep them separated?

Are you saying that the config should not be at the root of the WP
install? Not sure if I follow. In Brad's case, he has wp-config.php at
the top level there ... That seems like a normal spot to put it, esp.
if you have this in your .htaccess:

<files wp-config.php>
order allow,deny
deny from all
</files>

... and permisisons are 400 or 440.

I know that's not 100% security, but it's pretty solid, right?

For my personal setup, I'm just using gitignore to ignore my
local/production config files (I opted to not use wp-stack as I wanted
a more simple setup) but I still keep the config files at my root.

Would you be able to elaborate a tad on "Perhaps another layer so
they're out of the web root or just keep them separated?"

Maybe you're saying to have something like this in wp-config:
include_once(file with sensitive information outside web root);?

Sorry for my barrage of questions. :D

On Fri, Jul 5, 2013 at 8:22 AM, Simon Weil <simon.weil at naturalint.com> wrote:
> You can use the yeoman wordpress generator for this (I have only played
> with it till now but looks promising):

Interesting! Thanks for tip. :)

I used Yeoman a few months back, but I was not sure if it was the tool for me.

I'll have to give it another look.

Thanks folks!

From mickyhulse.lists at gmail.com  Fri Jul  5 18:07:02 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Fri, 5 Jul 2013 11:07:02 -0700
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <CALri7Mk18sffMZ-59g8+iVTx2+HkJtxsPX7CnQ__B+CnGYUfCQ@mail.gmail.com>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
 <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
 <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>
 <CADxdhecqobewn1+curoKmOe1ucwkK=4KkqGmXN1yXSs07ocUjw@mail.gmail.com>
 <CALri7Mk18sffMZ-59g8+iVTx2+HkJtxsPX7CnQ__B+CnGYUfCQ@mail.gmail.com>
Message-ID: <CALri7MmRELbW-5r0PUurGx5KmSawzY0aqNLhn0EnjFg7PYeoAg@mail.gmail.com>

I should mention, I'm wondering more about developing themes as Git submodules.

Maybe I should be asking if anyone here uses symlinks for themes?

Long story short, I'd like to have a separate version control process
for themes within a version controlled WP install.

My first thought was to use a Git submodule, but I have my concerns
about being able to see the updates as I'm working locally (I've not
used submodules too much, but I know they are a little bit more work
to juggle).

My second thought (which I had as I was going to bed) was to have a
symlink in my WP theme's folder to another repository (locally) which
contained my theme files. I did a quick bit of research last night,
and I could not find anything specifically related to this technique,
other than folks talking about how PHP/WP symlinks have drawbacks.

Anyway, just wanted to clarify my question.

It just feels a tad overkill to version control a whole WP install for
the sake of theme development.

What do you pro hackers do? :)

Thanks!
Micky

From brad at bradparbs.com  Fri Jul  5 18:38:47 2013
From: brad at bradparbs.com (Brad Parbs)
Date: Fri, 5 Jul 2013 13:38:47 -0500
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <CALri7MmRELbW-5r0PUurGx5KmSawzY0aqNLhn0EnjFg7PYeoAg@mail.gmail.com>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
 <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
 <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>
 <CADxdhecqobewn1+curoKmOe1ucwkK=4KkqGmXN1yXSs07ocUjw@mail.gmail.com>
 <CALri7Mk18sffMZ-59g8+iVTx2+HkJtxsPX7CnQ__B+CnGYUfCQ@mail.gmail.com>
 <CALri7MmRELbW-5r0PUurGx5KmSawzY0aqNLhn0EnjFg7PYeoAg@mail.gmail.com>
Message-ID: <B10D17B7-5DEE-4196-852F-10138D446838@bradparbs.com>

I use Git submodules symlinked into my themes folders when developing. On client projects (those w/ themes and plugins) I VC the whole install, with WP in a submodule, keeping it super clean in the repo. 

Brad Parbs

On Jul 5, 2013, at 1:07 PM, Micky Hulse <mickyhulse.lists at gmail.com> wrote:

> I should mention, I'm wondering more about developing themes as Git submodules.
> 
> Maybe I should be asking if anyone here uses symlinks for themes?
> 
> Long story short, I'd like to have a separate version control process
> for themes within a version controlled WP install.
> 
> My first thought was to use a Git submodule, but I have my concerns
> about being able to see the updates as I'm working locally (I've not
> used submodules too much, but I know they are a little bit more work
> to juggle).
> 
> My second thought (which I had as I was going to bed) was to have a
> symlink in my WP theme's folder to another repository (locally) which
> contained my theme files. I did a quick bit of research last night,
> and I could not find anything specifically related to this technique,
> other than folks talking about how PHP/WP symlinks have drawbacks.
> 
> Anyway, just wanted to clarify my question.
> 
> It just feels a tad overkill to version control a whole WP install for
> the sake of theme development.
> 
> What do you pro hackers do? :)
> 
> Thanks!
> Micky
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From m.witt at ia-sh.de  Fri Jul  5 19:35:58 2013
From: m.witt at ia-sh.de (Malte Witt)
Date: Fri, 05 Jul 2013 21:35:58 +0200
Subject: [wp-hackers] define WP_ADMIN_DIR constant
In-Reply-To: <CA+oS4Gp-NhnHk0MJo_TaMq_YvqPF9PQuKgh9=7meFiM-cGMkPw@mail.gmail.com>
References: <CA+oS4Gp-NhnHk0MJo_TaMq_YvqPF9PQuKgh9=7meFiM-cGMkPw@mail.gmail.com>
Message-ID: <51D7201E.4080507@ia-sh.de>

hey Sergi,
I also had some customers in the past who wanted a "complete" stealth wp 
install.

Here is a quick link, to how I realized the wp-admin/wp-login part: 
http://pastebin.com/krvfuBuU

Works fine on an empty install. As the others already pointed out, 
however you realize this, it can cause all sorts of compatibility issues 
later on.

Also I'm just using this for custom installs where I control the 
environment. I would never make a plugin out of it. Must be a 
support-nightmare if you publish a plugin that stops half of the other 
plugins in the Plugin Directory from working (perhaps nearly all of the 
more complex and badly coded ones :-)

Regards,
Malte

Am 05.07.2013 17:25, schrieb sergi meseguer:
> hi,
>
> I've asked in the forums about the possibility of adding the admin folder
> as a constant, ie WP_ADMIN_DIR:
> http://wordpress.org/support/topic/wp-admin-constant
>
> Been directed to contribute to the Core. The problem is, even if I made the
> changes to Core, would they be accepted as a contribution? According to
> this thread in 2011, NO:
> http://lists.automattic.com/pipermail/wp-hackers/2011-June/039780.html
>
> Is the official answer still (2013) to keep out of this? If the answer is
> no, is there an official or recommended way to obfuscate wp-admin location?
>
> Thank you
> Sergi
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


From mickyhulse.lists at gmail.com  Sun Jul  7 20:07:55 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Sun, 7 Jul 2013 13:07:55 -0700
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <B10D17B7-5DEE-4196-852F-10138D446838@bradparbs.com>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
 <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
 <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>
 <CADxdhecqobewn1+curoKmOe1ucwkK=4KkqGmXN1yXSs07ocUjw@mail.gmail.com>
 <CALri7Mk18sffMZ-59g8+iVTx2+HkJtxsPX7CnQ__B+CnGYUfCQ@mail.gmail.com>
 <CALri7MmRELbW-5r0PUurGx5KmSawzY0aqNLhn0EnjFg7PYeoAg@mail.gmail.com>
 <B10D17B7-5DEE-4196-852F-10138D446838@bradparbs.com>
Message-ID: <CALri7M=qw24QLk1UKK72kTamUi_jqrO=0=WtYKP6iF7PiktuuA@mail.gmail.com>

On Fri, Jul 5, 2013 at 11:38 AM, Brad Parbs <brad at bradparbs.com> wrote:
> I use Git submodules symlinked into my themes folders when developing. On client projects (those w/ themes and plugins) I VC the whole install, with WP in a submodule, keeping it super clean in the repo.

That's cool! I did not see any special setup in
https://github.com/bradp/wpeagles ... Do you happen to have a GitHub
repo with an an example of the theme submodule/symlink setup?

Or, if it's easier and/or not too much trouble, maybe you could
type-out how you have your setups for theme dev?

For example, here's my current setup (like WordPress-Skeleton):

[snip]

+---.htaccess
+---content
|   \---mu-plugins
|   \---plugins
|   \---themes
|      \--- ???
|   \---index.php
+---index.php
+---wp (WordPress submodule)

[/snip]

In the above, I've put "???" where I'm curious to learn about the
details of your setup.

For example, on your local machine, I assume you just add a simple
symlink to the theme repository? How do you handle the symlinks on a
production machine? Where do you put the theme
folders/repositories/submodules on production?

Sorry if dumb questions, I'm just trying to get a sense of how folks
like to develop themes using VC (whilst VCing everything else). :)

Thanks Brad!!! I really appreciate the help.

Cheers,
Micky

From mickyhulse.lists at gmail.com  Sun Jul  7 21:07:59 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Sun, 7 Jul 2013 14:07:59 -0700
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <CALri7M=qw24QLk1UKK72kTamUi_jqrO=0=WtYKP6iF7PiktuuA@mail.gmail.com>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
 <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
 <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>
 <CADxdhecqobewn1+curoKmOe1ucwkK=4KkqGmXN1yXSs07ocUjw@mail.gmail.com>
 <CALri7Mk18sffMZ-59g8+iVTx2+HkJtxsPX7CnQ__B+CnGYUfCQ@mail.gmail.com>
 <CALri7MmRELbW-5r0PUurGx5KmSawzY0aqNLhn0EnjFg7PYeoAg@mail.gmail.com>
 <B10D17B7-5DEE-4196-852F-10138D446838@bradparbs.com>
 <CALri7M=qw24QLk1UKK72kTamUi_jqrO=0=WtYKP6iF7PiktuuA@mail.gmail.com>
Message-ID: <CALri7M=qWeNDs6NDHeF518CxMD7rsBeZXjgNFQ075oP+1Tg7ow@mail.gmail.com>

On Sun, Jul 7, 2013 at 1:07 PM, Micky Hulse <mickyhulse.lists at gmail.com> wrote:
> In the above, I've put "???" where I'm curious to learn about the
> details of your setup.
> For example, on your local machine, I assume you just add a simple
> symlink to the theme repository? How do you handle the symlinks on a
> production machine? Where do you put the theme
> folders/repositories/submodules on production?

Also, do you include the theme (or its alias/symlink) in your .gitignore?

From mickyhulse.lists at gmail.com  Mon Jul  8 02:54:47 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Sun, 7 Jul 2013 19:54:47 -0700
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <CALri7M=qWeNDs6NDHeF518CxMD7rsBeZXjgNFQ075oP+1Tg7ow@mail.gmail.com>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
 <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
 <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>
 <CADxdhecqobewn1+curoKmOe1ucwkK=4KkqGmXN1yXSs07ocUjw@mail.gmail.com>
 <CALri7Mk18sffMZ-59g8+iVTx2+HkJtxsPX7CnQ__B+CnGYUfCQ@mail.gmail.com>
 <CALri7MmRELbW-5r0PUurGx5KmSawzY0aqNLhn0EnjFg7PYeoAg@mail.gmail.com>
 <B10D17B7-5DEE-4196-852F-10138D446838@bradparbs.com>
 <CALri7M=qw24QLk1UKK72kTamUi_jqrO=0=WtYKP6iF7PiktuuA@mail.gmail.com>
 <CALri7M=qWeNDs6NDHeF518CxMD7rsBeZXjgNFQ075oP+1Tg7ow@mail.gmail.com>
Message-ID: <CALri7MmFg6-on0-oBiiVUJDNsN8yekNbN3prh8BrLXwn2HQ-CA@mail.gmail.com>

So, I've made a little progress (not sure if this is of interest to anyone).

Locally, let's say I've got a WordPress project setup and it's called
"BILLY" (where WordPress core is a Git submodule).

Elsewhere on my computer, I have a theme named "FOO".

In BILLY's /content/themes/ folder, I created a symbolic link to my
local "FOO" theme repository (using XAMPP on a Mac, I've enabled
FollowSymLinks option for my VirtualHost and user/group, set in
httpd.conf, are {my-login's-user}/staff).

Now, as a local test environment, everything's working perfectly.
Nothing too complicated going on here. I dig it. :)

Moving on ...

Because I don't want to VC my themes (or, really, anything in any of
the /content/*/ folders), I've added the below to BILLY's .gitignore:

[snip]

# ... boilerplate .gitignore here ...

# Project-specific #
####################

/wp-config.php
/content/*/*
!/content/*/*.php

[/snip]

The above allows me to ignore things like "themes" and "plugins"
folders but it'll still allow me track changes to boilerplate
index.php files within those boilerplate WP folders.

>From there, I've setup a clone of BILLY on my host. Within the remote
BILLY, I've cloned "FOO" into /content/themes/ folder.

Note that the remote's theme is not a submodule; as I'm ignoring
themes in my .gitignore, I don't need to do any tracking of this theme
from BILLY.

Now that everything's setup, I'm able to independently push/pull from
local AND remote BILLY and FOO repositories (I'll mostly be going one
direction, from local to remote, but I like having the option to go
the other way).

Locally, I can make changes to FOO theme and see those changes happen
in real time (i.e. no submodule updating). Once I'm done for the day
(that is, developing my theme, locally) I can push it to GitHub, go to
the remote FOO and `git pull` the latest changes.

Of course, I'm sure this all sounds like crazy talk to all of you pro WP devs.

I know there are a lot more sophisticated tools out there to do
similar work/tasks ... The above is what makes sense to me.

If anyone is listening and/or interested, I'm open to feedback and/or
discussing my setup further. :)

Thanks again to everyone that's helped me out.

Cheers,
M

From mickyhulse.lists at gmail.com  Mon Jul  8 03:55:24 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Sun, 7 Jul 2013 20:55:24 -0700
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <CALri7MmFg6-on0-oBiiVUJDNsN8yekNbN3prh8BrLXwn2HQ-CA@mail.gmail.com>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
 <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
 <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>
 <CADxdhecqobewn1+curoKmOe1ucwkK=4KkqGmXN1yXSs07ocUjw@mail.gmail.com>
 <CALri7Mk18sffMZ-59g8+iVTx2+HkJtxsPX7CnQ__B+CnGYUfCQ@mail.gmail.com>
 <CALri7MmRELbW-5r0PUurGx5KmSawzY0aqNLhn0EnjFg7PYeoAg@mail.gmail.com>
 <B10D17B7-5DEE-4196-852F-10138D446838@bradparbs.com>
 <CALri7M=qw24QLk1UKK72kTamUi_jqrO=0=WtYKP6iF7PiktuuA@mail.gmail.com>
 <CALri7M=qWeNDs6NDHeF518CxMD7rsBeZXjgNFQ075oP+1Tg7ow@mail.gmail.com>
 <CALri7MmFg6-on0-oBiiVUJDNsN8yekNbN3prh8BrLXwn2HQ-CA@mail.gmail.com>
Message-ID: <CALri7MknXsOf8kBHyuSHKGP2S+Gv97NPzQBUdwtVbtQCho3eRg@mail.gmail.com>

Lovin' SSH tunneling:

<http://technosailor.com/2013/03/15/tutorial-developing-locally-on-wordpress-with-remote-database-over-ssh/>

I use this technique for Django dev at work ... I'm glad to see that I
can do it with WordPress too. :)

Local dev with a connection to remote DB ... Pretty slick.

From harry at dxw.com  Mon Jul  8 08:46:58 2013
From: harry at dxw.com (Harry Metcalfe)
Date: Mon, 08 Jul 2013 09:46:58 +0100
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <CALri7MmRELbW-5r0PUurGx5KmSawzY0aqNLhn0EnjFg7PYeoAg@mail.gmail.com>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
 <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
 <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>
 <CADxdhecqobewn1+curoKmOe1ucwkK=4KkqGmXN1yXSs07ocUjw@mail.gmail.com>
 <CALri7Mk18sffMZ-59g8+iVTx2+HkJtxsPX7CnQ__B+CnGYUfCQ@mail.gmail.com>
 <CALri7MmRELbW-5r0PUurGx5KmSawzY0aqNLhn0EnjFg7PYeoAg@mail.gmail.com>
Message-ID: <51DA7C82.4090003@dxw.com>

Since we're having a git workflow discussion, here's ours :)

We make wp-content into a repo. For themes or plugins that are reused in 
other projects, we add submodules that are shared. For things specific 
to this project, they just live in the main wp-content repo, or 
occasionally in their own submodule if that makes it easier to apply 
updates.

Once we've got the wp-content directory set up we use Whippet to start a 
local development server, and that takes care of the core files for us:

https://github.com/dxw/whippet

We also usually use Less for CSS, so the wp-content repo usually has a a 
node manifest and a gruntfile so we can compile and minify css (and do 
some other things) in the background while we're developing.

H

On 05/07/13 19:07, Micky Hulse wrote:
> I should mention, I'm wondering more about developing themes as Git submodules.
>
> Maybe I should be asking if anyone here uses symlinks for themes?
>
> Long story short, I'd like to have a separate version control process
> for themes within a version controlled WP install.
>
> My first thought was to use a Git submodule, but I have my concerns
> about being able to see the updates as I'm working locally (I've not
> used submodules too much, but I know they are a little bit more work
> to juggle).
>
> My second thought (which I had as I was going to bed) was to have a
> symlink in my WP theme's folder to another repository (locally) which
> contained my theme files. I did a quick bit of research last night,
> and I could not find anything specifically related to this technique,
> other than folks talking about how PHP/WP symlinks have drawbacks.
>
> Anyway, just wanted to clarify my question.
>
> It just feels a tad overkill to version control a whole WP install for
> the sake of theme development.
>
> What do you pro hackers do? :)
>
> Thanks!
> Micky
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mickyhulse.lists at gmail.com  Mon Jul  8 18:37:59 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Mon, 8 Jul 2013 11:37:59 -0700
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <51DA7C82.4090003@dxw.com>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
 <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
 <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>
 <CADxdhecqobewn1+curoKmOe1ucwkK=4KkqGmXN1yXSs07ocUjw@mail.gmail.com>
 <CALri7Mk18sffMZ-59g8+iVTx2+HkJtxsPX7CnQ__B+CnGYUfCQ@mail.gmail.com>
 <CALri7MmRELbW-5r0PUurGx5KmSawzY0aqNLhn0EnjFg7PYeoAg@mail.gmail.com>
 <51DA7C82.4090003@dxw.com>
Message-ID: <CALri7Mn7n-k2Ndb0WYGCwqEByOaoPeVRtpwkjbd_wrcxP5_UKQ@mail.gmail.com>

On Mon, Jul 8, 2013 at 1:46 AM, Harry Metcalfe <harry at dxw.com> wrote:
> Since we're having a git workflow discussion, here's ours :)

Awesome! Thanks for sharing! :)

> We make wp-content into a repo.

Ahhh, I was wondering about doing that. It makes sense to version
control the whole wp-content folder.

My solution was to just .gitignore things, but I'll have to play
making wp-content a repo.

> For themes or plugins that are reused in
> other projects, we add submodules that are shared.

How to do you test/develop those submodules (or, are they other
people's code that you're just linking to ... i.e you don't modify
directly)?

If you have the time to go into some details, I'm really curious to
hear more about how you develop themes locally and then push/pull
to/from remote/local.

> For things specific to
> this project, they just live in the main wp-content repo, or occasionally in
> their own submodule if that makes it easier to apply updates.

That makes sense. Do you have any publicly viewable repos that have
this type of setup? Just curious (I think I follow your setup, but I'd
love to have a visual too). :-}

> Once we've got the wp-content directory set up we use Whippet to start a
> local development server, and that takes care of the core files for us:
> https://github.com/dxw/whippet

Oh, that's interesting. Thanks for tip/link, I'll check it out. :)

> We also usually use Less for CSS, so the wp-content repo usually has a a
> node manifest and a gruntfile so we can compile and minify css (and do some
> other things) in the background while we're developing.

+1 for grunt.

Thanks for details! I really appreciate it. :)

From harry at dxw.com  Mon Jul  8 18:58:49 2013
From: harry at dxw.com (Harry Metcalfe)
Date: Mon, 08 Jul 2013 19:58:49 +0100
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <CALri7Mn7n-k2Ndb0WYGCwqEByOaoPeVRtpwkjbd_wrcxP5_UKQ@mail.gmail.com>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
 <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
 <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>
 <CADxdhecqobewn1+curoKmOe1ucwkK=4KkqGmXN1yXSs07ocUjw@mail.gmail.com>
 <CALri7Mk18sffMZ-59g8+iVTx2+HkJtxsPX7CnQ__B+CnGYUfCQ@mail.gmail.com>
 <CALri7MmRELbW-5r0PUurGx5KmSawzY0aqNLhn0EnjFg7PYeoAg@mail.gmail.com>
 <51DA7C82.4090003@dxw.com>
 <CALri7Mn7n-k2Ndb0WYGCwqEByOaoPeVRtpwkjbd_wrcxP5_UKQ@mail.gmail.com>
Message-ID: <51DB0BE9.8090702@dxw.com>


> How to do you test/develop those submodules (or, are they other
> people's code that you're just linking to ... i.e you don't modify
> directly)?
Yup, the latter. As soon as we need to modify something, it goes into a 
separate repo just for the project. As a rule, if we're going to apply 
upstream updates, we use a submodule. For repos which contain local 
modifications it allows us to easily make sure we don't overwrite one of 
our changes, and to resolve any conflicts. For ones that don't, we have 
a script that downloads the newer plugin version, unzips it, commits it, 
and tags it with the version. This makes updating it everywhere really 
easy, because we can just update the submodule to the new tag for each 
site, commit wp-content, and push to the production branch which 
auto-deploys.

> If you have the time to go into some details, I'm really curious to
> hear more about how you develop themes locally and then push/pull
> to/from remote/local.
Well, the theme usually just lives in the wp-content repo. Sometimes 
we'll have one of the default themes as a submodule, if it's a parent theme.

I'm not sure what more there is to add here -- did you have something 
specific in mind? Other than the production branch which we use for 
deploys, it's all fairly normal.

> That makes sense. Do you have any publicly viewable repos that have
> this type of setup? Just curious (I think I follow your setup, but I'd
> love to have a visual too). :-}
I'm afraid I don't think we do. We have a theme available:

   https://github.com/dxw/govuk-blogs/

Which shows how grunt is set up, and how we submodule roots and 
bootstrap into themes. That repo is then a submodule in a wp-content 
repo which also has a few plugins submoduled. The site is here:

http://blog.gov.uk

> Oh, that's interesting. Thanks for tip/link, I'll check it out. :)
Let me know how you get on :)

> +1 for grunt.
>
> Thanks for details! I really appreciate it. :)
Welcome!

Harry

From mickyhulse.lists at gmail.com  Mon Jul  8 19:33:23 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Mon, 8 Jul 2013 12:33:23 -0700
Subject: [wp-hackers] GitHub submodule theme development?
In-Reply-To: <51DB0BE9.8090702@dxw.com>
References: <CALri7MnixZ3JCAK6iL5VuY2A3qB7GkMVy5q5nkY9oWyaaX+NPA@mail.gmail.com>
 <A1F13868-9B74-465C-83B4-9918864EA064@bradparbs.com>
 <A39F97F1-D1D6-444B-853A-DE17D1C5435F@brianhogg.ca>
 <CADxdhecqobewn1+curoKmOe1ucwkK=4KkqGmXN1yXSs07ocUjw@mail.gmail.com>
 <CALri7Mk18sffMZ-59g8+iVTx2+HkJtxsPX7CnQ__B+CnGYUfCQ@mail.gmail.com>
 <CALri7MmRELbW-5r0PUurGx5KmSawzY0aqNLhn0EnjFg7PYeoAg@mail.gmail.com>
 <51DA7C82.4090003@dxw.com>
 <CALri7Mn7n-k2Ndb0WYGCwqEByOaoPeVRtpwkjbd_wrcxP5_UKQ@mail.gmail.com>
 <51DB0BE9.8090702@dxw.com>
Message-ID: <CALri7MkmE35dGMuiA1JXzy-N3N5rB=YfycJJEix7WQOXZg7PtA@mail.gmail.com>

Hi Harry! Thanks again for the help, it's much appreciated. :)

It's great hearing about your workflow too, so thanks for that as well.

On Mon, Jul 8, 2013 at 11:58 AM, Harry Metcalfe <harry at dxw.com> wrote:
>> How to do you test/develop those submodules (or, are they other
>> people's code that you're just linking to ... i.e you don't modify
>> directly)?
> Yup, the latter. As soon as we need to modify something, it goes into a
> separate repo just for the project. As a rule, if we're going to apply
> upstream updates, we use a submodule. For repos which contain local
> modifications it allows us to easily make sure we don't overwrite one of our
> changes, and to resolve any conflicts. For ones that don't, we have a script
> that downloads the newer plugin version, unzips it, commits it, and tags it
> with the version. This makes updating it everywhere really easy, because we
> can just update the submodule to the new tag for each site, commit
> wp-content, and push to the production branch which auto-deploys.

That sounds like an awesome workflow/setup! Thank you for giving
me/the list more details.

My personal WP workflow will probably never get to that high of a
level (honestly, some of it sounds more complex than my brain could
handle). :D

>> If you have the time to go into some details, I'm really curious to
>> hear more about how you develop themes locally and then push/pull
>> to/from remote/local.
> Well, the theme usually just lives in the wp-content repo. Sometimes we'll
> have one of the default themes as a submodule, if it's a parent theme.
> I'm not sure what more there is to add here -- did you have something
> specific in mind? Other than the production branch which we use for deploys,
> it's all fairly normal.

No, that's great! I think I get it now. Thank you for the additional details!

>> That makes sense. Do you have any publicly viewable repos that have
>> this type of setup? Just curious (I think I follow your setup, but I'd
>> love to have a visual too). :-}
> I'm afraid I don't think we do. We have a theme available:
>   https://github.com/dxw/govuk-blogs/

Awesome, thanks! Checking it out now. :)

Thanks for sharing!

> Which shows how grunt is set up, and how we submodule roots and bootstrap
> into themes. That repo is then a submodule in a wp-content repo which also
> has a few plugins submoduled. The site is here:
> http://blog.gov.uk

Oooh, nice! Impressive work! I'm looking forward to
installing/dissecting your theme. :)

Thanks again Harry!!!! Much appreciated.

Have an awesome day.

Cheers,
Micky

From joshua.abenazer at rtcamp.com  Tue Jul  9 17:07:31 2013
From: joshua.abenazer at rtcamp.com (Joshua Abenazer)
Date: Tue, 9 Jul 2013 22:37:31 +0530
Subject: [wp-hackers] Rename a plugin repository
Message-ID: <CAPfTm_Jnyd-VhC0aokLCs0qzGAjqA9JB2WBDRS-4AsWdU+ss2A@mail.gmail.com>

Hi,

Not sure, if this is the right place. Please guide me, if I need to post
elsewhere.

My team and I had released a plugin called BuddyPress Media. We have now
rebuilt it and widened the scope to include WordPress and bbPress. We have
renamed it as *rtMedia*.

In another conversation on buddypress.org, @modemlooper had mentioned that
he had renamed his plugins on the suggestion of @johnjamesjacoby.

So, what I need to know is how could we go ahead and emulate @modemlooper
and rename our plugin on the plugin repository? I don't see a setting
anywhere.

Would really appreciate any help on this.

Regards.

-- 
Joshua Abenazer | Team Leader | rtCamp Solutions Pvt. Ltd.
Skype: joshua.abenazer | Web: http://rtcamp.com/

From ipstenu at ipstenu.org  Tue Jul  9 17:08:59 2013
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Tue, 09 Jul 2013 10:08:59 -0700
Subject: [wp-hackers] Rename a plugin repository
In-Reply-To: <CAPfTm_Jnyd-VhC0aokLCs0qzGAjqA9JB2WBDRS-4AsWdU+ss2A@mail.gmail.com>
References: <CAPfTm_Jnyd-VhC0aokLCs0qzGAjqA9JB2WBDRS-4AsWdU+ss2A@mail.gmail.com>
Message-ID: <51DC43AB.8090407@ipstenu.org>

Impossible the way you probably want it :/

The repo doesn't allow us to rename the SLUG, however you can change the 
display name (controlled by your readme and plugin's php file) all you want.

The best that could happen is we close your plugin and you submit a new 
one, but that means no one using BuddyPress Media gets updated to the 
new versions. And no, we can't redirect your users.

If you REALLY want to do that, email plugins at wordpress.org

Joshua Abenazer wrote:
>
> Hi,
>
> Not sure, if this is the right place. Please guide me, if I need to post
> elsewhere.
>
> My team and I had released a plugin called BuddyPress Media. We have now
> rebuilt it and widened the scope to include WordPress and bbPress. We have
> renamed it as *rtMedia*.
>
> In another conversation on buddypress.org, @modemlooper had mentioned that
> he had renamed his plugins on the suggestion of @johnjamesjacoby.
>
> So, what I need to know is how could we go ahead and emulate @modemlooper
> and rename our plugin on the plugin repository? I don't see a setting
> anywhere.
>
> Would really appreciate any help on this.
>
> Regards.

From joshua.abenazer at rtcamp.com  Tue Jul  9 17:20:22 2013
From: joshua.abenazer at rtcamp.com (Joshua Abenazer)
Date: Tue, 9 Jul 2013 22:50:22 +0530
Subject: [wp-hackers] Rename a plugin repository
In-Reply-To: <51DC43AB.8090407@ipstenu.org>
References: <CAPfTm_Jnyd-VhC0aokLCs0qzGAjqA9JB2WBDRS-4AsWdU+ss2A@mail.gmail.com>
 <51DC43AB.8090407@ipstenu.org>
Message-ID: <CAPfTm_+aAA3YZ3_UU89AuMW0TpF_B=VkwTeyNgO5WGCk867MKg@mail.gmail.com>

Ok thanks a lot. Will try doing that.


On Tue, Jul 9, 2013 at 10:38 PM, Mika A Epstein <ipstenu at ipstenu.org> wrote:

> Impossible the way you probably want it :/
>
> The repo doesn't allow us to rename the SLUG, however you can change the
> display name (controlled by your readme and plugin's php file) all you want.
>
> The best that could happen is we close your plugin and you submit a new
> one, but that means no one using BuddyPress Media gets updated to the new
> versions. And no, we can't redirect your users.
>
> If you REALLY want to do that, email plugins at wordpress.org
>
> Joshua Abenazer wrote:
>
>>
>> Hi,
>>
>> Not sure, if this is the right place. Please guide me, if I need to post
>> elsewhere.
>>
>> My team and I had released a plugin called BuddyPress Media. We have now
>> rebuilt it and widened the scope to include WordPress and bbPress. We have
>> renamed it as *rtMedia*.
>>
>>
>> In another conversation on buddypress.org, @modemlooper had mentioned
>> that
>> he had renamed his plugins on the suggestion of @johnjamesjacoby.
>>
>> So, what I need to know is how could we go ahead and emulate @modemlooper
>> and rename our plugin on the plugin repository? I don't see a setting
>> anywhere.
>>
>> Would really appreciate any help on this.
>>
>> Regards.
>>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>



-- 
Joshua Abenazer | Team Leader | rtCamp Solutions Pvt. Ltd.
Skype: joshua.abenazer | Web: http://rtcamp.com/

From paolo.tresso at swergroup.com  Wed Jul 10 00:19:24 2013
From: paolo.tresso at swergroup.com (Paolo Tresso)
Date: Wed, 10 Jul 2013 02:19:24 +0200
Subject: [wp-hackers] wp-cli theme-test install
Message-ID: <1373415564.6156.9.camel@whitebook>

Hi hackers!

I would like to introduce you a tool that may be useful to theme testers
out there: a wp-cli command that automate the whole setup process
described in the codex. Here it is:

https://github.com/pixline/wp-cli-theme-test-command

It features:
- sample datafiles download and import
- multiple datafile sources (3x wpcom, wptest, maybe others)
- download and install plugin bundles (theme tester, VIP theme tester,
plugin dev, and a custom "debug" set of my choice (open to suggestions,
of course).
- blog-wide option updates on par with the standard

Besides that it's near-beta quality, and requires a bit of knowledge to
setup (but it should be easy enough to try), given that requires a
development version of wp-cli actually (>= 0.11a, because of "wp import"
command).

While I'm testing on my own - I'd like to share it and maybe have your
suggestions / bug reports (either here or in the issue tracker). Hope it
can be useful for someone!

Paolo (@pixline)
about.me/pixline



From tcbarrett at gmail.com  Wed Jul 10 07:36:42 2013
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 10 Jul 2013 08:36:42 +0100
Subject: [wp-hackers] Page Specific Widgets
Message-ID: <CAEgmxabmcSYa+tqPEUtZYYpRk9404qR8-dRgSe8w=XCed4Up3g@mail.gmail.com>

Has anyone built something that combines UI of the theme widget admin area
with the page editor. So on a single-page basis, there is a 'widget area'
meta-box that one can drag widgets into?


-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From david at wordshell.net  Wed Jul 10 12:14:10 2013
From: david at wordshell.net (David Anderson)
Date: Wed, 10 Jul 2013 13:14:10 +0100
Subject: [wp-hackers] Detecting the present botnet attacks
Message-ID: <51DD5012.4090503@wordshell.net>

Hi,

As most of us know, there are ongoing brute-force password attacks going 
on worldwide, that are distributed and hence can't be prevented with 
single-site "deny after X failed logins" heuristics. The individual IPs 
only connect to each site once or twice. We are protecting some of our 
websites with BruteProtect, but unfortunately not enough people are 
using that solution yet to make it effective - in our analysis of our 
logs, it catches about 10% of bad hosts. That's better than none, 
especially if a site gets broken into, so we'll persevere with it - and 
mention it so that others may perhaps take a look at it and help boost 
that figure for all the users!

But regardless of that, the multiple attacks on various websites on the 
same box are causing significant resource usage - perhaps around 25% of 
all resource usage on the server in question. We'd like to kill the 
attacks at an earlier stage - before the full WordPress load completes. 
We're thinking of adding a single line of code using PHP's 
auto_prepend_file feature (in php.ini) that will immediately die if an 
attack pattern is detected. This solution has the beauty of being 
something we can centrally manage fairly easily (our webserver's 
configuration file is written on-the-fly by a shell script, including 
per-site PHP-options). (Adding plugins to every site would be much more 
cumbersome).

This line would detect that the URL being visited is wp-login.php, and 
then apply some other tests. Looking at the logs we've collected from 
the attackers, we see these two patterns:
1) The POST payload does not include [wp-submit] => 'Log In', which you 
would have if logging in from the normal wp-login.php page.
2) The usernames are all one of:
* admin
* administrator
* the domain name of teh website being attacked
* {domain} (literally - presumably a bug in an earlier of the attacker's 
code)

So, we're considering banning all those usernames from the hosted sites. 
But, it looks like we could get a quicker result by blocking based on 1) 
instead. Question: Does anyone know if that's reliable? i.e. are there 
scenarios in which a likely user POST to /wp-login.php does not include 
that field? (Note that the popular Theme My Login plugin doesn't POST to 
/wp-login.php, so differences on its login form aren't important). (Of 
course too, if someone's built some legitimate automated WP tools that 
don't include that field, then this'll break them too - but we can deal 
with that if it ever happens. I'm just interested in normal Joe User WP 
usage).

Of course we could also combine 1) and 2) to reduce the risk. But I'm 
still interested in the answer to the question.

Many thanks,
David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From nikolov.tmw at gmail.com  Wed Jul 10 13:37:21 2013
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Wed, 10 Jul 2013 16:37:21 +0300
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <51DD5012.4090503@wordshell.net>
References: <51DD5012.4090503@wordshell.net>
Message-ID: <CAOwx47fkEjg2e8nTsaKuWX6M3=E1xgo=9uqMyp-kBxcNoVkYaA@mail.gmail.com>

Hi David,

When the attacks began I started blocking users on the second incorrect
login attempt for the longest time possible via the Wordfence plugin. That
was sort of ok - but as you stated - it's a waste of server resources.

The following solution is at the WordPress end - I know that this is not
what you're really looking for, but you can take a look at it(and it might
help someone else as well).

At the end I got really annoyed with the attacks and I did a simple thing(
I'm warning you that it's probably not suitable for most of the people out
there, although it might be plausible with a filter that would automate one
part of the solution ) - I manually changed the wp-login.php file.

I know - modifying core files is not a good thing. But hey - I don't want
someone to poke at my site/server.

So my solution was to check at the top of the file for the presence of a
$_GET variable and check it's value. Basically if you go straight to
/wp-login.php you would see "Unauthorized access!" and that's it. You have
nowhere else to go and you can't do anything. If you go to
/wp-login.php?myspecialkeyword=series_of_alphanumeric_and_special_characters
you would actually see the form. From then(that's the harder part) I had to
manually change the "action" attribute of the login form to include the
above $_GET parameter. After that the login form would work.

I'm not sure how well that's working - but I believe that this solution
works better than not using anything...

Okay - I played a bit and made this really quick and dirty mu-plugin. You
can find it here - http://pastebin.com/pTyCMd1z . Put it in your
wp-content's "mu-plugins" directory to make it run automatically. It should
have no impact on your site's performance since it's code only works on the
wp-login.php page. Once you upload the file, change the "define( ..." lines
to something that is actually more secret than the defaults.

This plugin will wp_die() (you can probably switch to just die() ) with
status 500 displaying just the "Unauthorized login" message unless you're
visiting the proper URL - with the defaults it would be "
http://mysite.com/wp-login.php?mysecretkey=myv3ry53cr37n0nc3". Some
JavaScript will then run and fix all of the login-related links and the
login form's action attribute, so that you don't have to.

Once you have that in place, just save the URL as a bookmark and that
should make things a bit easier.

I'm not sure whether the return code 500 has any effect on the attacks
intensity(like discouraging them) - I've had 93 POST and GET requests to
wp-login.php for the last 10 days - I remember that the attacks were very
intensive at some point, so it might have some minor effect.

Hope that helps,
Nikola


On Wed, Jul 10, 2013 at 3:14 PM, David Anderson <david at wordshell.net> wrote:

> Hi,
>
> As most of us know, there are ongoing brute-force password attacks going
> on worldwide, that are distributed and hence can't be prevented with
> single-site "deny after X failed logins" heuristics. The individual IPs
> only connect to each site once or twice. We are protecting some of our
> websites with BruteProtect, but unfortunately not enough people are using
> that solution yet to make it effective - in our analysis of our logs, it
> catches about 10% of bad hosts. That's better than none, especially if a
> site gets broken into, so we'll persevere with it - and mention it so that
> others may perhaps take a look at it and help boost that figure for all the
> users!
>
> But regardless of that, the multiple attacks on various websites on the
> same box are causing significant resource usage - perhaps around 25% of all
> resource usage on the server in question. We'd like to kill the attacks at
> an earlier stage - before the full WordPress load completes. We're thinking
> of adding a single line of code using PHP's auto_prepend_file feature (in
> php.ini) that will immediately die if an attack pattern is detected. This
> solution has the beauty of being something we can centrally manage fairly
> easily (our webserver's configuration file is written on-the-fly by a shell
> script, including per-site PHP-options). (Adding plugins to every site
> would be much more cumbersome).
>
> This line would detect that the URL being visited is wp-login.php, and
> then apply some other tests. Looking at the logs we've collected from the
> attackers, we see these two patterns:
> 1) The POST payload does not include [wp-submit] => 'Log In', which you
> would have if logging in from the normal wp-login.php page.
> 2) The usernames are all one of:
> * admin
> * administrator
> * the domain name of teh website being attacked
> * {domain} (literally - presumably a bug in an earlier of the attacker's
> code)
>
> So, we're considering banning all those usernames from the hosted sites.
> But, it looks like we could get a quicker result by blocking based on 1)
> instead. Question: Does anyone know if that's reliable? i.e. are there
> scenarios in which a likely user POST to /wp-login.php does not include
> that field? (Note that the popular Theme My Login plugin doesn't POST to
> /wp-login.php, so differences on its login form aren't important). (Of
> course too, if someone's built some legitimate automated WP tools that
> don't include that field, then this'll break them too - but we can deal
> with that if it ever happens. I'm just interested in normal Joe User WP
> usage).
>
> Of course we could also combine 1) and 2) to reduce the risk. But I'm
> still interested in the answer to the question.
>
> Many thanks,
> David
>
> --
> WordShell - WordPress fast from the CLI - www.wordshell.net
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From wp-hackers at zipsbazaar.co.uk  Thu Jul 11 06:14:28 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Thu, 11 Jul 2013 07:14:28 +0100
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <CAOwx47fkEjg2e8nTsaKuWX6M3=E1xgo=9uqMyp-kBxcNoVkYaA@mail.gmail.com>
References: <51DD5012.4090503@wordshell.net>
 <CAOwx47fkEjg2e8nTsaKuWX6M3=E1xgo=9uqMyp-kBxcNoVkYaA@mail.gmail.com>
Message-ID: <51DE4D44.90301@zipsbazaar.co.uk>

On 10/07/2013 14:37, Nikola Nikolov wrote:
> This plugin will wp_die() (you can probably switch to just die() ) with
> status 500 displaying just the "Unauthorized login" message unless you're
> visiting the proper URL
I have a couple of problems with that response.

First, a real HTTP 500 code indicates a fatal internal server error that 
could result from anything, such as a typo in your .htaccess. In your 
case no such error has occurred, so the 500 code is at best untrue.

Second, the 'Unauthorized login' message upon wp_die() or die() (which I 
presume will be read and understood by someone attempting a hands-on 
unauthorized login) has an adversarial twang to it that might just 
antagonize the scriddies out there.

If you're choosing to deny access to a service for whatever reason, it 
might make sense to terminate with an HTTP 503 Service Unavailable, and 
the message 'Sorry, this service is unavailable.'

It's honest and it's innocuous, but like any 'solution' it still won't 
stop them knocking at the door.

From johnbillion+wp at gmail.com  Thu Jul 11 08:26:18 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Thu, 11 Jul 2013 09:26:18 +0100
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <51DE4D44.90301@zipsbazaar.co.uk>
References: <51DD5012.4090503@wordshell.net>
 <CAOwx47fkEjg2e8nTsaKuWX6M3=E1xgo=9uqMyp-kBxcNoVkYaA@mail.gmail.com>
 <51DE4D44.90301@zipsbazaar.co.uk>
Message-ID: <CAOqAKWAXsGG+CN7ZJL8xMNM4-75OLaMNhUJCR_oSZrkJW7jzmQ@mail.gmail.com>

On 11 July 2013 07:14, Jeff Morris <wp-hackers at zipsbazaar.co.uk> wrote:
> First, a real HTTP 500 code indicates a fatal internal server error that
> could result from anything, such as a typo in your .htaccess. In your case
> no such error has occurred, so the 500 code is at best untrue.

FYI you can pass a different HTTP status code to wp_die() in the $args
parameter. Example:

wp_die( 'Sorry, this service is unavailable', get_bloginfo('name'),
array( 'response' => 503 ) );

From nikolov.tmw at gmail.com  Thu Jul 11 11:31:29 2013
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Thu, 11 Jul 2013 14:31:29 +0300
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <CAOqAKWAXsGG+CN7ZJL8xMNM4-75OLaMNhUJCR_oSZrkJW7jzmQ@mail.gmail.com>
References: <51DD5012.4090503@wordshell.net>
 <CAOwx47fkEjg2e8nTsaKuWX6M3=E1xgo=9uqMyp-kBxcNoVkYaA@mail.gmail.com>
 <51DE4D44.90301@zipsbazaar.co.uk>
 <CAOqAKWAXsGG+CN7ZJL8xMNM4-75OLaMNhUJCR_oSZrkJW7jzmQ@mail.gmail.com>
Message-ID: <CAOwx47eUbH6rBzCiRbboJXv7pyGsVDYRB3Og-CWEf8uVgiwP1g@mail.gmail.com>

@Jeff - you're right about the error code, but that's what WordPress
defaults to. As @John said - you can change the response code to anything
you want. I just wrote that quickly and I generally am the only one
logging-in, so I don't expect the users to log-in.

If you have users that are supposed to log-in to the site and you don't
have any alternative set-up(you can always have a front-end login form
which has nothing to do with wp-login.php), you can leave them a visible
message, a sticky post or whatever saying how they can log in.

The attack is massive and is targeted at the very small percentage that is
not protected well(has easy to predict username and password), so I would
guarantee you that at least at the current stage no one will actually stop
and read your site to see if there's a work-around for logging-in to the
site.


On Thu, Jul 11, 2013 at 11:26 AM, John Blackbourn
<johnbillion+wp at gmail.com>wrote:

> On 11 July 2013 07:14, Jeff Morris <wp-hackers at zipsbazaar.co.uk> wrote:
> > First, a real HTTP 500 code indicates a fatal internal server error that
> > could result from anything, such as a typo in your .htaccess. In your
> case
> > no such error has occurred, so the 500 code is at best untrue.
>
> FYI you can pass a different HTTP status code to wp_die() in the $args
> parameter. Example:
>
> wp_die( 'Sorry, this service is unavailable', get_bloginfo('name'),
> array( 'response' => 503 ) );
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp-hackers at zipsbazaar.co.uk  Thu Jul 11 12:03:32 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Thu, 11 Jul 2013 13:03:32 +0100
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <CAOqAKWAXsGG+CN7ZJL8xMNM4-75OLaMNhUJCR_oSZrkJW7jzmQ@mail.gmail.com>
References: <51DD5012.4090503@wordshell.net>
 <CAOwx47fkEjg2e8nTsaKuWX6M3=E1xgo=9uqMyp-kBxcNoVkYaA@mail.gmail.com>
 <51DE4D44.90301@zipsbazaar.co.uk>
 <CAOqAKWAXsGG+CN7ZJL8xMNM4-75OLaMNhUJCR_oSZrkJW7jzmQ@mail.gmail.com>
Message-ID: <51DE9F14.1050702@zipsbazaar.co.uk>

On 11/07/2013 09:26, John Blackbourn wrote:
> FYI you can pass a different HTTP status code to wp_die() in the $args
> parameter.

Right, John. It is that simple.

My point about HTTP 500 is that it ought to signal very serious "trouble 
at t'mill". Ideally, you want to never see HTTP 500 responses in server 
access logs.

The wp_die() documentation alludes to this in a round-about way:

"It is not recommended to call this function very often and try to 
handle as many errors as possible silently."

And if you're unhappy about the bloated output from wp_die(), you can 
replace the entire _default_wp_die_handler() function with an 
add_filter() hook.

From wp-hackers at zipsbazaar.co.uk  Thu Jul 11 13:32:00 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Thu, 11 Jul 2013 14:32:00 +0100
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <51DD5012.4090503@wordshell.net>
References: <51DD5012.4090503@wordshell.net>
Message-ID: <51DEB3D0.7060606@zipsbazaar.co.uk>

On 10/07/2013 13:14, David Anderson wrote:
> But, it looks like we could get a quicker result by blocking based on 
> 1) instead. Question: Does anyone know if that's reliable? i.e. are 
> there scenarios in which a likely user POST to /wp-login.php does not 
> include that field?

I've yet to see a regular bona-fide login or registration that doesn't 
carry the aforementioned field in the $_REQUEST. But now that it's been 
pointed out here, maybe we should expect to start seeing it in the 
payload ;)

I capture a lot of these admin brute-forces, and boy are they dull. One 
day last month I watched one feeding on 'Service Unavailable' for over 
five hours before I pulled its plug. Such was its sophistication it just 
kept on coming and chewing 403s for a futher 90 minutes.

In the case of a botnet, look for cookie-cutter traits, such as 
commonality in the HTTP protocol version, referrer and user agent 
fields, inter alia. A conclusion based on a combination of ticked boxes 
is bound to be more reliable.

From wp-hackers at on-e.com  Thu Jul 11 14:25:25 2013
From: wp-hackers at on-e.com (wp-hackers at on-e.com)
Date: Thu, 11 Jul 2013 07:25:25 -0700 (PDT)
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <mailman.15.1373544001.5624.wp-hackers@lists.automattic.com>
References: <mailman.15.1373544001.5624.wp-hackers@lists.automattic.com>
Message-ID: <Pine.GSO.4.64.1307110718590.24946@alpha>

> But regardless of that, the multiple attacks on various websites on the
> same box are causing significant resource usage - perhaps around 25% of
> all resource usage on the server in question. We'd like to kill the
> attacks at an earlier stage - before the full WordPress load completes.
> We're thinking of adding a single line of code using PHP's
> auto_prepend_file feature (in php.ini) that will immediately die if an
> attack pattern is detected. This solution has the beauty of being
> something we can centrally manage fairly easily (our webserver's
> configuration file is written on-the-fly by a shell script, including
> per-site PHP-options). (Adding plugins to every site would be much more
> cumbersome).
>
> This line would detect that the URL being visited is wp-login.php, and
> then apply some other tests. Looking at the logs we've collected from
> the attackers, we see these two patterns:
> 1) The POST payload does not include [wp-submit] => 'Log In', which you
> would have if logging in from the normal wp-login.php page.
> 2) The usernames are all one of:
> * admin
> * administrator
> * the domain name of teh website being attacked
> * {domain} (literally - presumably a bug in an earlier of the attacker's
> code)

auto_prepend_file would be better than letting Wordpress actually boot 
up, but I would suggest thinking something even earlier in the process 
(if you can) - mod_security, which runs very early in the http request 
process.

You could probably adapt your rules into mod_security rules, plus you'd 
get all the other benefits as well.

From sashaprsheer at gmail.com  Thu Jul 11 14:31:19 2013
From: sashaprsheer at gmail.com (=?UTF-8?B?U2HFoWEgUHLFoWly?=)
Date: Thu, 11 Jul 2013 16:31:19 +0200
Subject: [wp-hackers] How can I unsubscribe?
Message-ID: <CACvnGr9xVJHDU3MH7zSVNUk+AgcxDja97ot+bcBhQ27PHR=5wQ@mail.gmail.com>

I started to code as an serious oop, and I wont to stop using wordpress as
I no longer need its help. I don' t wanna get any e-mail's from it and
there is no unsubscribe link. How can I unsubscribe.

From xoodrew at gmail.com  Thu Jul 11 14:34:35 2013
From: xoodrew at gmail.com (Drew)
Date: Thu, 11 Jul 2013 08:34:35 -0600
Subject: [wp-hackers] How can I unsubscribe?
In-Reply-To: <CACvnGr9xVJHDU3MH7zSVNUk+AgcxDja97ot+bcBhQ27PHR=5wQ@mail.gmail.com>
References: <CACvnGr9xVJHDU3MH7zSVNUk+AgcxDja97ot+bcBhQ27PHR=5wQ@mail.gmail.com>
Message-ID: <CAEJabWhjMU6csiDXxDehhKp=5h-ys-20xAwOUWtON7pAw=-JJA@mail.gmail.com>

   1. Visit http://lists.automattic.com/mailman/listinfo/wp-hackers
   2. At the bottom under the *wp-hackers Subscribers* section, enter your
   list password and follow the instructions to unsubscribe.



On Thu, Jul 11, 2013 at 8:31 AM, Sa?a Pr?ir <sashaprsheer at gmail.com> wrote:

> I started to code as an serious oop, and I wont to stop using wordpress as
> I no longer need its help. I don' t wanna get any e-mail's from it and
> there is no unsubscribe link. How can I unsubscribe.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
-- I've kinda got a thing for WordPress > http://www.drewapicture.com

From wp-hackers at thecodecave.com  Thu Jul 11 18:28:03 2013
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Thu, 11 Jul 2013 14:28:03 -0400
Subject: [wp-hackers] Page Specific Widgets
In-Reply-To: <CAEgmxabmcSYa+tqPEUtZYYpRk9404qR8-dRgSe8w=XCed4Up3g@mail.gmail.com>
References: <CAEgmxabmcSYa+tqPEUtZYYpRk9404qR8-dRgSe8w=XCed4Up3g@mail.gmail.com>
Message-ID: <51DEF933.1060405@thecodecave.com>

Look for Per page sidebars.

It ads a meta box that says Replace Sidebar X with a custom side bar.

Then you use the normal Appearance->Widgets screen to populate the new 
sidebar which will be called PPS-pageslug

Hope that helps.

Brian Layman

On 7/10/2013 3:36 AM, Tom Barrett wrote:
> Has anyone built something that combines UI of the theme widget admin area
> with the page editor. So on a single-page basis, there is a 'widget area'
> meta-box that one can drag widgets into?
>
>


From wp-hackers at thecodecave.com  Thu Jul 11 19:02:49 2013
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Thu, 11 Jul 2013 15:02:49 -0400
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <51DD5012.4090503@wordshell.net>
References: <51DD5012.4090503@wordshell.net>
Message-ID: <51DF0159.4060407@thecodecave.com>

No black list is going to be perfect, but you might try:
http://www.projecthoneypot.org/httpbl_implementations.php

I've had some success with it recently shutting down attacks Joomla 
sites.  Plus it is an Apache module, so no plugin and it works 
automatically for all sites on the server.  Plus projecthoneypot has 
been around for a long time and has a fairly large database.

I've seen no speed or resource issues on the server I've installed it 
on.  That particular server hosts about 100 business sites each with a 
typical traffic level for a non-interactive informational site.

Brian Layman

On 7/10/2013 8:14 AM, David Anderson wrote:
> Hi,
>
> As most of us know, there are ongoing brute-force password attacks 
> going on worldwide, that are distributed and hence can't be prevented 
> with single-site "deny after X failed logins" heuristics. The 
> individual IPs only connect to each site once or twice. We are 
> protecting some of our websites with BruteProtect, but unfortunately 
> not enough people are using that solution yet to make it effective - 
> in our analysis of our logs, it catches about 10% of bad hosts. That's 
> better than none, especially if a site gets broken into, so we'll 
> persevere with it - and mention it so that others may perhaps take a 
> look at it and help boost that figure for all the users!
>
> But regardless of that, the multiple attacks on various websites on 
> the same box are causing significant resource usage - perhaps around 
> 25% of all resource usage on the server in question. We'd like to kill 
> the attacks at an earlier stage - before the full WordPress load 
> completes. We're thinking of adding a single line of code using PHP's 
> auto_prepend_file feature (in php.ini) that will immediately die if an 
> attack pattern is detected. This solution has the beauty of being 
> something we can centrally manage fairly easily (our webserver's 
> configuration file is written on-the-fly by a shell script, including 
> per-site PHP-options). (Adding plugins to every site would be much 
> more cumbersome).
>
> This line would detect that the URL being visited is wp-login.php, and 
> then apply some other tests. Looking at the logs we've collected from 
> the attackers, we see these two patterns:
> 1) The POST payload does not include [wp-submit] => 'Log In', which 
> you would have if logging in from the normal wp-login.php page.
> 2) The usernames are all one of:
> * admin
> * administrator
> * the domain name of teh website being attacked
> * {domain} (literally - presumably a bug in an earlier of the 
> attacker's code)
>
> So, we're considering banning all those usernames from the hosted 
> sites. But, it looks like we could get a quicker result by blocking 
> based on 1) instead. Question: Does anyone know if that's reliable? 
> i.e. are there scenarios in which a likely user POST to /wp-login.php 
> does not include that field? (Note that the popular Theme My Login 
> plugin doesn't POST to /wp-login.php, so differences on its login form 
> aren't important). (Of course too, if someone's built some legitimate 
> automated WP tools that don't include that field, then this'll break 
> them too - but we can deal with that if it ever happens. I'm just 
> interested in normal Joe User WP usage).
>
> Of course we could also combine 1) and 2) to reduce the risk. But I'm 
> still interested in the answer to the question.
>
> Many thanks,
> David
>


From louis.northmore at gmail.com  Thu Jul 11 20:53:34 2013
From: louis.northmore at gmail.com (Louis Northmore)
Date: Thu, 11 Jul 2013 21:53:34 +0100
Subject: [wp-hackers] Page Specific Widgets
In-Reply-To: <51DEF933.1060405@thecodecave.com>
References: <CAEgmxabmcSYa+tqPEUtZYYpRk9404qR8-dRgSe8w=XCed4Up3g@mail.gmail.com>
 <51DEF933.1060405@thecodecave.com>
Message-ID: <CAK6zEXKqG4VERb1sLRbgemFZpwWxqg4anZpJ=9qqW492D0m-Fg@mail.gmail.com>

Perhaps http://wordpress.org/plugins/widgets-on-pages/ might help?


On 11 July 2013 19:28, Brian Layman <wp-hackers at thecodecave.com> wrote:

> Look for Per page sidebars.
>
> It ads a meta box that says Replace Sidebar X with a custom side bar.
>
> Then you use the normal Appearance->Widgets screen to populate the new
> sidebar which will be called PPS-pageslug
>
> Hope that helps.
>
> Brian Layman
>
>
> On 7/10/2013 3:36 AM, Tom Barrett wrote:
>
>> Has anyone built something that combines UI of the theme widget admin area
>> with the page editor. So on a single-page basis, there is a 'widget area'
>> meta-box that one can drag widgets into?
>>
>>
>>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From nicobadano at gmail.com  Thu Jul 11 21:12:04 2013
From: nicobadano at gmail.com (=?ISO-8859-1?Q?Nicol=E1s_Badano?=)
Date: Thu, 11 Jul 2013 18:12:04 -0300
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <51DF0159.4060407@thecodecave.com>
References: <51DD5012.4090503@wordshell.net> <51DF0159.4060407@thecodecave.com>
Message-ID: <51DF1FA4.2010407@gmail.com>

We too have been having quite a headache with the bot attacks recently. 
In our case, what we did was installing the wp-fail2ban plugin (no more 
than two lines of code that log unsuccessful login attempts in the 
auth.log file) and configured fail2ban to monitor that logfile with the 
regex included in the plugin. Three failed logins, and we shut down the 
server for that IP (Deny from XX.XXX.XXX.XXX in the main .htaccess). An 
iptables ban would probably accomplish the same thing, or the denyhosts 
action. As we don't have an admin or administrator account, we are 
looking into banning tries using those accounts right away from the 
first try, but I don't have code for that just yet.

It's less sophisticated than stopping the botnet on its tracks by 
identifying a pattern (that would be GREAT) but it did help containing 
the bot invasion. We are not getting that many failed logins these days. 
I like how the Project Honey Pot looks like though: I'll probably give 
it a try, specially if it doesn't hurt performance too much.

My two cents!

From tangren at wsu.edu  Thu Jul 11 21:22:46 2013
From: tangren at wsu.edu (Tangren, Gerald Vernon)
Date: Thu, 11 Jul 2013 21:22:46 +0000
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <51DF1FA4.2010407@gmail.com>
Message-ID: <924D23A0C8F8BA41B14C1B72EECF46F40319CD10@EXMB-05.ad.wsu.edu>

How do some of the methods suggested here the last week or so compare with
an inclusive plug-in such as Better WP Security?

  http://wordpress.org/plugins/better-wp-security/

-- 
Jerry <tangren at wsu.edu>
WA State University-Tree Fruit Research & Extension Center
Wenatchee, WA
509-663-8181 x 231
USDA Cold Hardiness Zone 7a (during the current phase of the Pacific
Decadal
Oscillation)
http://www.tfrec.wsu.edu/pages/webdev/Favorites


?It?s folks knowing so much that ain?t so.? - Henry Wheeler Shaw



On 7/11/13 2:12 PM, "Nicol?s Badano" <nicobadano at gmail.com> wrote:

>We too have been having quite a headache with the bot attacks recently.
>In our case, what we did was installing the wp-fail2ban plugin (no more
>than two lines of code that log unsuccessful login attempts in the
>auth.log file) and configured fail2ban to monitor that logfile with the
>regex included in the plugin. Three failed logins, and we shut down the
>server for that IP (Deny from XX.XXX.XXX.XXX in the main .htaccess). An
>iptables ban would probably accomplish the same thing, or the denyhosts
>action. As we don't have an admin or administrator account, we are
>looking into banning tries using those accounts right away from the
>first try, but I don't have code for that just yet.
>
>It's less sophisticated than stopping the botnet on its tracks by
>identifying a pattern (that would be GREAT) but it did help containing
>the bot invasion. We are not getting that many failed logins these days.
>I like how the Project Honey Pot looks like though: I'll probably give
>it a try, specially if it doesn't hurt performance too much.
>
>My two cents!
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers


From les at lcb.me.uk  Thu Jul 11 21:23:41 2013
From: les at lcb.me.uk (Les Bessant)
Date: Thu, 11 Jul 2013 22:23:41 +0100
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <51DF1FA4.2010407@gmail.com>
References: <51DD5012.4090503@wordshell.net>
 <51DF0159.4060407@thecodecave.com> <51DF1FA4.2010407@gmail.com>
Message-ID: <E8A7EC2F-A6F3-49AD-A0EA-FF71C6287D8A@lcb.me.uk>

I've been using fail2ban, but I'm still seeing numerous single attempts to log on to my site - and they're not trying for "admin", they're actually targeting the user name that I post with. Getting one attempt at a time from numerous addresses.

Looks like it's time to go back to using bad behaviour.

--
Les Bessant les at lcb.me.uk
Losing it - http://losingit.me.uk/
Les Bessant Photography - http://lesbessant-photography.co.uk



On 11 Jul 2013, at 22:12, Nicol?s Badano <nicobadano at gmail.com> wrote:

> We too have been having quite a headache with the bot attacks recently. In our case, what we did was installing the wp-fail2ban plugin (no more than two lines of code that log unsuccessful login attempts in the auth.log file) and configured fail2ban to monitor that logfile with the regex included in the plugin. Three failed logins, and we shut down the server for that IP (Deny from XX.XXX.XXX.XXX in the main .htaccess). An iptables ban would probably accomplish the same thing, or the denyhosts action. As we don't have an admin or administrator account, we are looking into banning tries using those accounts right away from the first try, but I don't have code for that just yet.
> 
> It's less sophisticated than stopping the botnet on its tracks by identifying a pattern (that would be GREAT) but it did help containing the bot invasion. We are not getting that many failed logins these days. I like how the Project Honey Pot looks like though: I'll probably give it a try, specially if it doesn't hurt performance too much.
> 
> My two cents!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mickyhulse.lists at gmail.com  Thu Jul 11 21:27:15 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Thu, 11 Jul 2013 14:27:15 -0700
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <51DF1FA4.2010407@gmail.com>
References: <51DD5012.4090503@wordshell.net> <51DF0159.4060407@thecodecave.com>
 <51DF1FA4.2010407@gmail.com>
Message-ID: <CALri7Mmr1haRdf0LqgDdoatm1QpCemHB0GvDFx=kR3jFSQJ0BQ@mail.gmail.com>

This might be dumb to ask, but would security through obscurity work?
I know it's not a high level solution, but would hiding all of the
obvious routes one can login/adminster WP be one way to stop attacks?

Is there a good solution in WP to change URL to login/admin pages?

From dylan.k.kuhn at gmail.com  Fri Jul 12 00:20:20 2013
From: dylan.k.kuhn at gmail.com (Dylan Kuhn)
Date: Thu, 11 Jul 2013 17:20:20 -0700
Subject: [wp-hackers] Page Specific Widgets
In-Reply-To: <CAK6zEXKqG4VERb1sLRbgemFZpwWxqg4anZpJ=9qqW492D0m-Fg@mail.gmail.com>
References: <CAEgmxabmcSYa+tqPEUtZYYpRk9404qR8-dRgSe8w=XCed4Up3g@mail.gmail.com>
 <51DEF933.1060405@thecodecave.com>
 <CAK6zEXKqG4VERb1sLRbgemFZpwWxqg4anZpJ=9qqW492D0m-Fg@mail.gmail.com>
Message-ID: <CAO_PU=s4B9LCtpF0d1sNjxOOVYSUFbKxNtM0d0+o8cC-=6cUwA@mail.gmail.com>

>  Has anyone built something that combines UI of the theme widget admin area
>  with the page editor. So on a single-page basis, there is a 'widget area'
>  meta-box that one can drag widgets into?
>

Advanced Custom Fields with
http://wordpress.org/plugins/advanced-custom-fields-widget-relationship-field-add-on/is
pretty slick.

Dylan Kuhn

From doug at smithsrus.com  Fri Jul 12 14:48:33 2013
From: doug at smithsrus.com (Doug Smith)
Date: Fri, 12 Jul 2013 09:48:33 -0500
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <mailman.13.1373630401.30584.wp-hackers@lists.automattic.com>
References: <mailman.13.1373630401.30584.wp-hackers@lists.automattic.com>
Message-ID: <68C4B09C-01B8-4ED5-A164-B420EFC72DAC@smithsrus.com>

You could add another log in layer with basic HTTP authentication to protect your wp-admin directory. Or you could use the Google Authenticator plugin (http://wordpress.org/plugins/google-authenticator/) to give you second factor authentication through a smartphone.

fial2ban is still nice, though, because anything you can stop with it happens at the firewall so WordPress doesn't even see it, which is helpful for both performance and security. If you haven't seen it yet, there is a WP fail2ban plugin (http://wordpress.org/plugins/wp-fail2ban/) that will log WordPress login attempts so they can be used in fail2ban too. 

--
Doug Smith: doug at smithsrus.com
http://smithsrus.com

On 11 Jul 2013 22:23:41 +0100, Les Bessant <les at lcb.me.uk> wrote:

> I've been using fail2ban, but I'm still seeing numerous single attempts to log on to my site - and they're not trying for "admin", they're actually targeting the user name that I post with. Getting one attempt at a time from numerous addresses.
> 
> Looks like it's time to go back to using bad behaviour.
> 
> --
> Les Bessant les at lcb.me.uk
> Losing it - http://losingit.me.uk/
> Les Bessant Photography - http://lesbessant-photography.co.uk



From mickyhulse.lists at gmail.com  Fri Jul 12 19:59:59 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Fri, 12 Jul 2013 12:59:59 -0700
Subject: [wp-hackers] Why pass by reference?
Message-ID: <CALri7Mm7z+7sOuCsYKTmnUE2FA=ViajshhOuOArYdnhQqTZpcQ@mail.gmail.com>

Hello,

For the second example:

<http://codex.wordpress.org/Function_Reference/add_meta_box#Example>

Why pass $this by reference? Specifically:

array(
    &$this,
    'render_meta_box_content',
),

Occasionally, I'll see WP example code (like above) where the author
passes $this by reference.

Other examples, like:

<http://codex.wordpress.org/Function_Reference/add_action#Using_add_action_with_a_class>

... $this isn't passed by reference.

Sorry if this is a dumb question, but (within the context of coding
OOP for WP) how do I determine if I need to pass $this by reference?
Is there a good WP/PHP rule of thumb?

For the add_meta_box() example, I don't see any obvious reasons why
passing by reference is required and/or better than not. :D

Thanks!
M

From wp at andrewnacin.com  Fri Jul 12 20:10:06 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 12 Jul 2013 16:10:06 -0400
Subject: [wp-hackers] Why pass by reference?
In-Reply-To: <CALri7Mm7z+7sOuCsYKTmnUE2FA=ViajshhOuOArYdnhQqTZpcQ@mail.gmail.com>
References: <CALri7Mm7z+7sOuCsYKTmnUE2FA=ViajshhOuOArYdnhQqTZpcQ@mail.gmail.com>
Message-ID: <CAP29PvjK8pFOt_6M2NmFUD+p=SHqHyLpSYN1hqZE3FHDX4zb5w@mail.gmail.com>

It was necessary in PHP 4, it is no longer necessary in PHP 5.


On Fri, Jul 12, 2013 at 3:59 PM, Micky Hulse <mickyhulse.lists at gmail.com>wrote:

> Hello,
>
> For the second example:
>
> <http://codex.wordpress.org/Function_Reference/add_meta_box#Example>
>
> Why pass $this by reference? Specifically:
>
> array(
>     &$this,
>     'render_meta_box_content',
> ),
>
> Occasionally, I'll see WP example code (like above) where the author
> passes $this by reference.
>
> Other examples, like:
>
> <
> http://codex.wordpress.org/Function_Reference/add_action#Using_add_action_with_a_class
> >
>
> ... $this isn't passed by reference.
>
> Sorry if this is a dumb question, but (within the context of coding
> OOP for WP) how do I determine if I need to pass $this by reference?
> Is there a good WP/PHP rule of thumb?
>
> For the add_meta_box() example, I don't see any obvious reasons why
> passing by reference is required and/or better than not. :D
>
> Thanks!
> M
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mickyhulse.lists at gmail.com  Fri Jul 12 20:12:42 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Fri, 12 Jul 2013 13:12:42 -0700
Subject: [wp-hackers] Why pass by reference?
In-Reply-To: <CAP29PvjK8pFOt_6M2NmFUD+p=SHqHyLpSYN1hqZE3FHDX4zb5w@mail.gmail.com>
References: <CALri7Mm7z+7sOuCsYKTmnUE2FA=ViajshhOuOArYdnhQqTZpcQ@mail.gmail.com>
 <CAP29PvjK8pFOt_6M2NmFUD+p=SHqHyLpSYN1hqZE3FHDX4zb5w@mail.gmail.com>
Message-ID: <CALri7Mn_zkO=kv94c5r5kgZkXgwQ6h0m4q+vFxhLHdyMhPmTfQ@mail.gmail.com>

On Fri, Jul 12, 2013 at 1:10 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
> It was necessary in PHP 4, it is no longer necessary in PHP 5.

Ahhh, good to know! Thank you for the clarification Andrew, I really
appreciate it! :)

Have a nice day.

Cheers,
Micky

From sam at hotchkissconsulting.com  Sat Jul 13 01:39:45 2013
From: sam at hotchkissconsulting.com (Sam Hotchkiss)
Date: Fri, 12 Jul 2013 21:39:45 -0400
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <51DD5012.4090503@wordshell.net>
References: <51DD5012.4090503@wordshell.net>
Message-ID: <CAA8+H28yt2X_tCiOqWA=mh44Xor=t9wFxnvQzD2ZEa2D0Zk5mw@mail.gmail.com>

Hey David-- thanks for the BruteProtect plug!  On that front, we're hard at
work on improving our algorithms-- we've tripled our installed base over
the past 10 days as we've gotten some press, and so we're working on
improving our attack recognition, banning real attackers for longer and
allowing legitimate users to get back in sooner.  You won't need to do
anything, as the updates will happen on our end, but you should see those
numbers improve over the next week.

Best,
Sam

-- 
Sam Hotchkiss :: Principal :: Hotchkiss Consulting Group
122 Front Street, Second Floor, Bath, Maine 04530
P: 207.200.4314 :: F: 207.209.1365
eMail: sam at hotchkissconsulting.com :: Skype: hotchkiss.consulting


On Wed, Jul 10, 2013 at 8:14 AM, David Anderson <david at wordshell.net> wrote:

> Hi,
>
> As most of us know, there are ongoing brute-force password attacks going
> on worldwide, that are distributed and hence can't be prevented with
> single-site "deny after X failed logins" heuristics. The individual IPs
> only connect to each site once or twice. We are protecting some of our
> websites with BruteProtect, but unfortunately not enough people are using
> that solution yet to make it effective - in our analysis of our logs, it
> catches about 10% of bad hosts. That's better than none, especially if a
> site gets broken into, so we'll persevere with it - and mention it so that
> others may perhaps take a look at it and help boost that figure for all the
> users!
>
> But regardless of that, the multiple attacks on various websites on the
> same box are causing significant resource usage - perhaps around 25% of all
> resource usage on the server in question. We'd like to kill the attacks at
> an earlier stage - before the full WordPress load completes. We're thinking
> of adding a single line of code using PHP's auto_prepend_file feature (in
> php.ini) that will immediately die if an attack pattern is detected. This
> solution has the beauty of being something we can centrally manage fairly
> easily (our webserver's configuration file is written on-the-fly by a shell
> script, including per-site PHP-options). (Adding plugins to every site
> would be much more cumbersome).
>
> This line would detect that the URL being visited is wp-login.php, and
> then apply some other tests. Looking at the logs we've collected from the
> attackers, we see these two patterns:
> 1) The POST payload does not include [wp-submit] => 'Log In', which you
> would have if logging in from the normal wp-login.php page.
> 2) The usernames are all one of:
> * admin
> * administrator
> * the domain name of teh website being attacked
> * {domain} (literally - presumably a bug in an earlier of the attacker's
> code)
>
> So, we're considering banning all those usernames from the hosted sites.
> But, it looks like we could get a quicker result by blocking based on 1)
> instead. Question: Does anyone know if that's reliable? i.e. are there
> scenarios in which a likely user POST to /wp-login.php does not include
> that field? (Note that the popular Theme My Login plugin doesn't POST to
> /wp-login.php, so differences on its login form aren't important). (Of
> course too, if someone's built some legitimate automated WP tools that
> don't include that field, then this'll break them too - but we can deal
> with that if it ever happens. I'm just interested in normal Joe User WP
> usage).
>
> Of course we could also combine 1) and 2) to reduce the risk. But I'm
> still interested in the answer to the question.
>
> Many thanks,
> David
>
> --
> WordShell - WordPress fast from the CLI - www.wordshell.net
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From les at lcb.me.uk  Sat Jul 13 05:57:58 2013
From: les at lcb.me.uk (Les Bessant)
Date: Sat, 13 Jul 2013 06:57:58 +0100
Subject: [wp-hackers] Detecting the present botnet attacks
In-Reply-To: <68C4B09C-01B8-4ED5-A164-B420EFC72DAC@smithsrus.com>
References: <mailman.13.1373630401.30584.wp-hackers@lists.automattic.com>
 <68C4B09C-01B8-4ED5-A164-B420EFC72DAC@smithsrus.com>
Message-ID: <B0083753-9DE0-407A-80C7-D96F0FB98BC0@lcb.me.uk>

Yes, i've been using wp-fail2ban for a while. It seemed to be working for a while, but the attacks have changed from multiple attempts to single attempts from each IP address, making it less effective.

Installed Bad Behaviour (http://bad-behavior.ioerror.us/) which seems to be blocking the botnet attacks.

--
Les Bessant les at lcb.me.uk
Losing it - http://losingit.me.uk/
Les Bessant Photography - http://lesbessant-photography.co.uk



On 12 Jul 2013, at 15:48, Doug Smith <doug at smithsrus.com> wrote:

> You could add another log in layer with basic HTTP authentication to protect your wp-admin directory. Or you could use the Google Authenticator plugin (http://wordpress.org/plugins/google-authenticator/) to give you second factor authentication through a smartphone.
> 
> fial2ban is still nice, though, because anything you can stop with it happens at the firewall so WordPress doesn't even see it, which is helpful for both performance and security. If you haven't seen it yet, there is a WP fail2ban plugin (http://wordpress.org/plugins/wp-fail2ban/) that will log WordPress login attempts so they can be used in fail2ban too. 
> 
> --
> Doug Smith: doug at smithsrus.com
> http://smithsrus.com
> 
> On 11 Jul 2013 22:23:41 +0100, Les Bessant <les at lcb.me.uk> wrote:
> 
>> I've been using fail2ban, but I'm still seeing numerous single attempts to log on to my site - and they're not trying for "admin", they're actually targeting the user name that I post with. Getting one attempt at a time from numerous addresses.
>> 
>> Looks like it's time to go back to using bad behaviour.
>> 
>> --
>> Les Bessant les at lcb.me.uk
>> Losing it - http://losingit.me.uk/
>> Les Bessant Photography - http://lesbessant-photography.co.uk
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mickyhulse.lists at gmail.com  Tue Jul 16 02:36:21 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Mon, 15 Jul 2013 19:36:21 -0700
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
Message-ID: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>

Situation and example code:

[code]

$ignore = implode(',', array('1', '19', '21',));
echo '<pre>';
$rows = $wpdb->get_results($wpdb->prepare("SELECT blog_id FROM
$wpdb->blogs WHERE blog_id NOT IN (%s) AND public = '1' AND archived =
'0' AND mature = '0' AND spam = '0' AND deleted = '0'", $ignore),
ARRAY_A);
print_r($rows);
echo '</pre>';

[/code]

Problem:

The "NOT IN ()" filter fails to ignore blog ids.

Reason:

I'm not certain, but I assume my code fails because $ignore isn't of
the %s, %d or %f types.

Solution:

Move $ignore into the statement like so:

... blog_id NOT IN ($ignore) ...

Problem:

I get this PHP notice:

PHP Notice:  wpdb::prepare was called <strong>incorrectly</strong>.
wpdb::prepare() requires at least two arguments. Please see <a
href="http://codex.wordpress.org/Debugging_in_WordPress">Debugging in
WordPress</a> for more information. (This message was added in version
3.5.) in /rgblog/html/wp-includes/functions.php on line 2962

Reason for the notice:

"PHP Warning: Missing argument 2 for wpdb::prepare()"
<http://make.wordpress.org/core/2012/12/12/php-warning-missing-argument-2-for-wpdb-prepare/>

Specifically:

[quote]

you?re passing $id directly into the query, unprepared. And this,
right here, is why $wpdb->prepare() now issues a warning if it isn?t
called with more than one argument. Because you can?t prepare a query
without more than one argument.

[/quote]

With that said, how can I accomplish my goal of passing several blog
IDs into a query that uses wpdb::prepare() (like my example above)?

Any tips would be appreciated. :)

From mickyhulse.lists at gmail.com  Tue Jul 16 02:43:01 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Mon, 15 Jul 2013 19:43:01 -0700
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
In-Reply-To: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>
References: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>
Message-ID: <CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q@mail.gmail.com>

On Mon, Jul 15, 2013 at 7:36 PM, Micky Hulse <mickyhulse.lists at gmail.com> wrote:
> With that said, how can I accomplish my goal of passing several blog
> IDs into a query that uses wpdb::prepare() (like my example above)?

I should say:

What's the most practical and secure way (I want to avoid little Bobby
Tables http://xkcd.com/327/) to pass a list of blog IDs into the NOT
IN clause of wpdb::prepare() SQL statement?

From jmiloj at gmail.com  Tue Jul 16 02:51:42 2013
From: jmiloj at gmail.com (Jerry Milo Johnson)
Date: Mon, 15 Jul 2013 22:51:42 -0400
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
In-Reply-To: <CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q@mail.gmail.com>
References: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>
 <CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q@mail.gmail.com>
Message-ID: <CADYBncaYDdAnZbZXQUX-n9629iLzuaaZpVV7QEnAZUiVhZRM7g@mail.gmail.com>

from what I can see from this trac discussion, they decided that prepare
won't handle this case:

http://core.trac.wordpress.org/ticket/11102

hth,
Jerry Milo Johnson


On Mon, Jul 15, 2013 at 10:43 PM, Micky Hulse <mickyhulse.lists at gmail.com>wrote:

> On Mon, Jul 15, 2013 at 7:36 PM, Micky Hulse <mickyhulse.lists at gmail.com>
> wrote:
> > With that said, how can I accomplish my goal of passing several blog
> > IDs into a query that uses wpdb::prepare() (like my example above)?
>
> I should say:
>
> What's the most practical and secure way (I want to avoid little Bobby
> Tables http://xkcd.com/327/) to pass a list of blog IDs into the NOT
> IN clause of wpdb::prepare() SQL statement?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From lists at rotorised.com  Tue Jul 16 04:21:17 2013
From: lists at rotorised.com (Ryan McCue)
Date: Tue, 16 Jul 2013 14:21:17 +1000
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
In-Reply-To: <CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q@mail.gmail.com>
References: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>
 <CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q@mail.gmail.com>
Message-ID: <51E4CA3D.1030909@rotorised.com>

Micky Hulse wrote:
> What's the most practical and secure way (I want to avoid little Bobby
> Tables http://xkcd.com/327/) to pass a list of blog IDs into the NOT
> IN clause of wpdb::prepare() SQL statement?

$ids = array(1, '2', '3q', 'b');

// Ensure all IDs are positive integers
$ids = array_map('absint', $ids);

// Filter anything that converted to 0 (i.e. non-integers)
$ids = array_filter();

// Add to your SQL
$sql .= ' NOT IN (' . implode(',', $ids) . ')';

-- 
Ryan McCue
<http://ryanmccue.info/>

From lists at rotorised.com  Tue Jul 16 04:24:41 2013
From: lists at rotorised.com (Ryan McCue)
Date: Tue, 16 Jul 2013 14:24:41 +1000
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
In-Reply-To: <51E4CA3D.1030909@rotorised.com>
References: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>
 <CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q@mail.gmail.com>
 <51E4CA3D.1030909@rotorised.com>
Message-ID: <51E4CB09.8020809@rotorised.com>

Ryan McCue wrote:
> $ids = array(1, '2', '3q', 'b');

Forgot to include output: 'NOT IN (1,2,3)'

-- 
Ryan McCue
<http://ryanmccue.info/>

From mickyhulse.lists at gmail.com  Tue Jul 16 05:28:31 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Mon, 15 Jul 2013 22:28:31 -0700
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
In-Reply-To: <CADYBncaYDdAnZbZXQUX-n9629iLzuaaZpVV7QEnAZUiVhZRM7g@mail.gmail.com>
References: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>
 <CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q@mail.gmail.com>
 <CADYBncaYDdAnZbZXQUX-n9629iLzuaaZpVV7QEnAZUiVhZRM7g@mail.gmail.com>
Message-ID: <CALri7MnQzUi+OzKA0Fp2HQyRS8dASmypzK9xroSYzmhAf=d-zA@mail.gmail.com>

Hi Jerry! Thanks for the help! :)

On Mon, Jul 15, 2013 at 7:51 PM, Jerry Milo Johnson <jmiloj at gmail.com> wrote:
> from what I can see from this trac discussion, they decided that prepare
> won't handle this case:
> http://core.trac.wordpress.org/ticket/11102

Ahh, that does help. Thank you for the tip off. :)

Unfortunately, it looks like there's not a good alternative presented.

Either way, I appreciate the linkage! Definitely nice to see that
others have been in same boat. ;)

From mickyhulse.lists at gmail.com  Tue Jul 16 05:39:57 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Mon, 15 Jul 2013 22:39:57 -0700
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
In-Reply-To: <51E4CB09.8020809@rotorised.com>
References: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>
 <CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q@mail.gmail.com>
 <51E4CA3D.1030909@rotorised.com> <51E4CB09.8020809@rotorised.com>
Message-ID: <CALri7Mm1-wnmvfUmAPSYgoKaM2t00XdhZi78AExZFcco5q8Dew@mail.gmail.com>

On Mon, Jul 15, 2013 at 9:24 PM, Ryan McCue <lists at rotorised.com> wrote:
> ... snip ...
> Forgot to include output: 'NOT IN (1,2,3)'

That's awesome! Thanks for the code example Ryan! That's very helpful. :)

Based on your tips for working with my array of IDs, and the
limitation of wpdb::prepare() (must have at least one argument, and
arguments can only be %s (string), %d (int) or %f (float)), I could
fake things and do (not tested, but gets the point across):

$rows = $wpdb->get_results($wpdb->prepare("SELECT blog_id FROM
$wpdb->blogs WHERE blog_id NOT IN (' . implode(',', $ids) . ') AND
public = '%d' AND archived = '%d' AND mature = '%d' AND spam = '%d'
AND deleted = '%d'", 1, 0, 0, 0, 0), ARRAY_A);

I'd probably end up using easy to configure variables for the %ds above.

Using your tip on making sure the IDs are valid/secure, then I'd say
it's OK that I'm not actually using "prepare" to sanitize the input
array of IDs.

Thanks again Jerry and Ryan!

Cheers,
M

From info at bungeshea.com  Tue Jul 16 06:28:15 2013
From: info at bungeshea.com (Shea Bunge)
Date: Tue, 16 Jul 2013 16:28:15 +1000
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
 $wpdb->prepare()?
In-Reply-To: <CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q@mail.gmail.com>
References: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>,
 <CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q@mail.gmail.com>
Message-ID: <BLU177-W2329F71697433264BAE3F4B8600@phx.gbl>

What format are the blog ids stored in, and where did they come from?

> From: mickyhulse.lists at gmail.com
> Date: Mon, 15 Jul 2013 19:43:01 -0700
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in	$wpdb->prepare()?
> 
> On Mon, Jul 15, 2013 at 7:36 PM, Micky Hulse <mickyhulse.lists at gmail.com> wrote:
> > With that said, how can I accomplish my goal of passing several blog
> > IDs into a query that uses wpdb::prepare() (like my example above)?
> 
> I should say:
> 
> What's the most practical and secure way (I want to avoid little Bobby
> Tables http://xkcd.com/327/) to pass a list of blog IDs into the NOT
> IN clause of wpdb::prepare() SQL statement?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
 		 	   		  

From mickyhulse.lists at gmail.com  Tue Jul 16 06:55:07 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Mon, 15 Jul 2013 23:55:07 -0700
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
In-Reply-To: <BLU177-W2329F71697433264BAE3F4B8600@phx.gbl>
References: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>
 <CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q@mail.gmail.com>
 <BLU177-W2329F71697433264BAE3F4B8600@phx.gbl>
Message-ID: <CALri7M=rUfPLxt1G3oKnq3VhEjVKBA=FKfndD78-kDRp2W06iw@mail.gmail.com>

On Mon, Jul 15, 2013 at 11:28 PM, Shea Bunge <info at bungeshea.com> wrote:
> What format are the blog ids stored in, and where did they come from?

Great question. Sorry that I did not mention that before.

I have a couple of functions that allow me to get latest updated blogs
on our multisite. The IDs are controlled by me, the developer, and
I've allowed them to be overridden via function arguments. There will
be no forms or users (ones that I don't trust) that will have access
to this code, so I can be pretty certain the input will be legit.

Maybe I'm being overly cautious? I guess a part of me wants to just
play it safe even though I completely trust where the IDs are coming
from. :)

Thanks for asking! Let me know if you have feedback.

From nl at thoughtrefinery.com  Tue Jul 16 06:59:21 2013
From: nl at thoughtrefinery.com (Nicholas Ciske)
Date: Tue, 16 Jul 2013 01:59:21 -0500
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
In-Reply-To: <CALri7M=rUfPLxt1G3oKnq3VhEjVKBA=FKfndD78-kDRp2W06iw@mail.gmail.com>
References: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>
 <CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q@mail.gmail.com>
 <BLU177-W2329F71697433264BAE3F4B8600@phx.gbl>
 <CALri7M=rUfPLxt1G3oKnq3VhEjVKBA=FKfndD78-kDRp2W06iw@mail.gmail.com>
Message-ID: <75CFCF9F-FB86-4DB5-9A61-FCCD302897CA@thoughtrefinery.com>

If you play it safe, then the other developers can?t grab something unsafe from a form or query string and open up a security hole via your code.

IDs are so easy to sanitize, there's no reason not to.

_________________________
Nick Ciske
http://thoughtrefinery.com/
@nciske	

On Jul 16, 2013, at 1:55 AM, Micky Hulse wrote:
> 
> There will
> be no forms or users (ones that I don't trust) that will have access
> to this code, so I can be pretty certain the input will be legit.
> 
> Maybe I'm being overly cautious? I guess a part of me wants to just
> play it safe even though I completely trust where the IDs are coming
> from. :)


From info at bungeshea.com  Tue Jul 16 07:04:03 2013
From: info at bungeshea.com (Shea Bunge)
Date: Tue, 16 Jul 2013 17:04:03 +1000
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
 $wpdb->prepare()?
In-Reply-To: <CALri7M=rUfPLxt1G3oKnq3VhEjVKBA=FKfndD78-kDRp2W06iw@mail.gmail.com>
References: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>,
 <CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q@mail.gmail.com>,
 <BLU177-W2329F71697433264BAE3F4B8600@phx.gbl>,
 <CALri7M=rUfPLxt1G3oKnq3VhEjVKBA=FKfndD78-kDRp2W06iw@mail.gmail.com>
Message-ID: <BLU177-W4736213734C2938C8BF9B5B8600@phx.gbl>

You should have a look at the absint (http://queryposts.com/function/absint) function - it will make sure that a variable is a positive integer.
If you're dealing with an array of blog IDs, use array_map( $blog_ids, 'absint' ); (http://www.php.net/array_map) to apply the absint function to all of the array elements.
> From: mickyhulse.lists at gmail.com
> Date: Mon, 15 Jul 2013 23:55:07 -0700
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in	$wpdb->prepare()?
> 
> On Mon, Jul 15, 2013 at 11:28 PM, Shea Bunge <info at bungeshea.com> wrote:
> > What format are the blog ids stored in, and where did they come from?
> 
> Great question. Sorry that I did not mention that before.
> 
> I have a couple of functions that allow me to get latest updated blogs
> on our multisite. The IDs are controlled by me, the developer, and
> I've allowed them to be overridden via function arguments. There will
> be no forms or users (ones that I don't trust) that will have access
> to this code, so I can be pretty certain the input will be legit.
> 
> Maybe I'm being overly cautious? I guess a part of me wants to just
> play it safe even though I completely trust where the IDs are coming
> from. :)
> 
> Thanks for asking! Let me know if you have feedback.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
 		 	   		  

From der.keizers at gmail.com  Tue Jul 16 07:08:42 2013
From: der.keizers at gmail.com (der.keizers at gmail.com)
Date: Tue, 16 Jul 2013 07:08:42 +0000
Subject: [wp-hackers] wp-hackers Digest, Vol 102, Issue 16
In-Reply-To: <mailman.10402.1373957965.2518.wp-hackers@lists.automattic.com>
References: <mailman.10402.1373957965.2518.wp-hackers@lists.automattic.com>
Message-ID: <1630381000-1373958525-cardhu_decombobulator_blackberry.rim.net-889013090-@b1.c1.bise3.blackberry>







message from the dark side

-----Original Message-----
From: wp-hackers-request at lists.automattic.com
Sender: "wp-hackers" <wp-hackers-bounces at lists.automattic.com>Date: Tue, 16 Jul 2013 06:59:25 
To: <wp-hackers at lists.automattic.com>
Reply-To: wp-hackers at lists.automattic.com
Subject: wp-hackers Digest, Vol 102, Issue 16

Send wp-hackers mailing list submissions to
	wp-hackers at lists.automattic.com

To subscribe or unsubscribe via the World Wide Web, visit
	http://lists.automattic.com/mailman/listinfo/wp-hackers
or, via email, send a message with subject or body 'help' to
	wp-hackers-request at lists.automattic.com

You can reach the person managing the list at
	wp-hackers-owner at lists.automattic.com

When replying, please edit your Subject line so it is more specific
than "Re: Contents of wp-hackers digest..."


Today's Topics:

   1. WP 3.5.2/multisite: How to use NOT IN in	$wpdb->prepare()?
      (Micky Hulse)
   2. Re: WP 3.5.2/multisite: How to use NOT IN in
      $wpdb->prepare()? (Micky Hulse)
   3. Re: WP 3.5.2/multisite: How to use NOT IN in
      $wpdb->prepare()? (Jerry Milo Johnson)
   4. Re: WP 3.5.2/multisite: How to use NOT IN in
      $wpdb->prepare()? (Ryan McCue)
   5. Re: WP 3.5.2/multisite: How to use NOT IN in
      $wpdb->prepare()? (Ryan McCue)
   6. Re: WP 3.5.2/multisite: How to use NOT IN in
      $wpdb->prepare()? (Micky Hulse)
   7. Re: WP 3.5.2/multisite: How to use NOT IN in
      $wpdb->prepare()? (Micky Hulse)
   8. Re: WP 3.5.2/multisite: How to use NOT IN in
      $wpdb->prepare()? (Shea Bunge)
   9. Re: WP 3.5.2/multisite: How to use NOT IN in
      $wpdb->prepare()? (Micky Hulse)
  10. Re: WP 3.5.2/multisite: How to use NOT IN in
      $wpdb->prepare()? (Nicholas Ciske)


----------------------------------------------------------------------

Message: 1
Date: Mon, 15 Jul 2013 19:36:21 -0700
From: Micky Hulse <mickyhulse.lists at gmail.com>
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
Message-ID:
	<CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

Situation and example code:

[code]

$ignore = implode(',', array('1', '19', '21',));
echo '<pre>';
$rows = $wpdb->get_results($wpdb->prepare("SELECT blog_id FROM
$wpdb->blogs WHERE blog_id NOT IN (%s) AND public = '1' AND archived =
'0' AND mature = '0' AND spam = '0' AND deleted = '0'", $ignore),
ARRAY_A);
print_r($rows);
echo '</pre>';

[/code]

Problem:

The "NOT IN ()" filter fails to ignore blog ids.

Reason:

I'm not certain, but I assume my code fails because $ignore isn't of
the %s, %d or %f types.

Solution:

Move $ignore into the statement like so:

... blog_id NOT IN ($ignore) ...

Problem:

I get this PHP notice:

PHP Notice:  wpdb::prepare was called <strong>incorrectly</strong>.
wpdb::prepare() requires at least two arguments. Please see <a
href="http://codex.wordpress.org/Debugging_in_WordPress">Debugging in
WordPress</a> for more information. (This message was added in version
3.5.) in /rgblog/html/wp-includes/functions.php on line 2962

Reason for the notice:

"PHP Warning: Missing argument 2 for wpdb::prepare()"
<http://make.wordpress.org/core/2012/12/12/php-warning-missing-argument-2-for-wpdb-prepare/>

Specifically:

[quote]

you?re passing $id directly into the query, unprepared. And this,
right here, is why $wpdb->prepare() now issues a warning if it isn?t
called with more than one argument. Because you can?t prepare a query
without more than one argument.

[/quote]

With that said, how can I accomplish my goal of passing several blog
IDs into a query that uses wpdb::prepare() (like my example above)?

Any tips would be appreciated. :)


------------------------------

Message: 2
Date: Mon, 15 Jul 2013 19:43:01 -0700
From: Micky Hulse <mickyhulse.lists at gmail.com>
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
Message-ID:
	<CALri7MmK3ddK+1E_vUuetGqz_TyCtDh4rLh9cB+tAd9NODQM7Q at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

On Mon, Jul 15, 2013 at 7:36 PM, Micky Hulse <mickyhulse.lists at gmail.com> wrote:
> With that said, how can I accomplish my goal of passing several blog
> IDs into a query that uses wpdb::prepare() (like my example above)?

I should say:

What's the most practical and secure way (I want to avoid little Bobby
Tables http://xkcd.com/327/) to pass a list of blog IDs into the NOT
IN clause of wpdb::prepare() SQL statement?


------------------------------

Message: 3
Date: Mon, 15 Jul 2013 22:51:42 -0400
From: Jerry Milo Johnson <jmiloj at gmail.com>
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
Message-ID:
	<CADYBncaYDdAnZbZXQUX-n9629iLzuaaZpVV7QEnAZUiVhZRM7g at mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1

from what I can see from this trac discussion, they decided that prepare
won't handle this case:

http://core.trac.wordpress.org/ticket/11102

hth,
Jerry Milo Johnson


On Mon, Jul 15, 2013 at 10:43 PM, Micky Hulse <mickyhulse.lists at gmail.com>wrote:

> On Mon, Jul 15, 2013 at 7:36 PM, Micky Hulse <mickyhulse.lists at gmail.com>
> wrote:
> > With that said, how can I accomplish my goal of passing several blog
> > IDs into a query that uses wpdb::prepare() (like my example above)?
>
> I should say:
>
> What's the most practical and secure way (I want to avoid little Bobby
> Tables http://xkcd.com/327/) to pass a list of blog IDs into the NOT
> IN clause of wpdb::prepare() SQL statement?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


------------------------------

Message: 4
Date: Tue, 16 Jul 2013 14:21:17 +1000
From: Ryan McCue <lists at rotorised.com>
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
Message-ID: <51E4CA3D.1030909 at rotorised.com>
Content-Type: text/plain; charset=ISO-8859-1

Micky Hulse wrote:
> What's the most practical and secure way (I want to avoid little Bobby
> Tables http://xkcd.com/327/) to pass a list of blog IDs into the NOT
> IN clause of wpdb::prepare() SQL statement?

$ids = array(1, '2', '3q', 'b');

// Ensure all IDs are positive integers
$ids = array_map('absint', $ids);

// Filter anything that converted to 0 (i.e. non-integers)
$ids = array_filter();

// Add to your SQL
$sql .= ' NOT IN (' . implode(',', $ids) . ')';

-- 
Ryan McCue
<http://ryanmccue.info/>


------------------------------

Message: 5
Date: Tue, 16 Jul 2013 14:24:41 +1000
From: Ryan McCue <lists at rotorised.com>
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
Message-ID: <51E4CB09.8020809 at rotorised.com>
Content-Type: text/plain; charset=ISO-8859-1

Ryan McCue wrote:
> $ids = array(1, '2', '3q', 'b');

Forgot to include output: 'NOT IN (1,2,3)'

-- 
Ryan McCue
<http://ryanmccue.info/>


------------------------------

Message: 6
Date: Mon, 15 Jul 2013 22:28:31 -0700
From: Micky Hulse <mickyhulse.lists at gmail.com>
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
Message-ID:
	<CALri7MnQzUi+OzKA0Fp2HQyRS8dASmypzK9xroSYzmhAf=d-zA at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

Hi Jerry! Thanks for the help! :)

On Mon, Jul 15, 2013 at 7:51 PM, Jerry Milo Johnson <jmiloj at gmail.com> wrote:
> from what I can see from this trac discussion, they decided that prepare
> won't handle this case:
> http://core.trac.wordpress.org/ticket/11102

Ahh, that does help. Thank you for the tip off. :)

Unfortunately, it looks like there's not a good alternative presented.

Either way, I appreciate the linkage! Definitely nice to see that
others have been in same boat. ;)


------------------------------

Message: 7
Date: Mon, 15 Jul 2013 22:39:57 -0700
From: Micky Hulse <mickyhulse.lists at gmail.com>
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
Message-ID:
	<CALri7Mm1-wnmvfUmAPSYgoKaM2t00XdhZi78AExZFcco5q8Dew at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

On Mon, Jul 15, 2013 at 9:24 PM, Ryan McCue <lists at rotorised.com> wrote:
> ... snip ...
> Forgot to include output: 'NOT IN (1,2,3)'

That's awesome! Thanks for the code example Ryan! That's very helpful. :)

Based on your tips for working with my array of IDs, and the
limitation of wpdb::prepare() (must have at least one argument, and
arguments can only be %s (string), %d (int) or %f (float)), I could
fake things and do (not tested, but gets the point across):

$rows = $wpdb->get_results($wpdb->prepare("SELECT blog_id FROM
$wpdb->blogs WHERE blog_id NOT IN (' . implode(',', $ids) . ') AND
public = '%d' AND archived = '%d' AND mature = '%d' AND spam = '%d'
AND deleted = '%d'", 1, 0, 0, 0, 0), ARRAY_A);

I'd probably end up using easy to configure variables for the %ds above.

Using your tip on making sure the IDs are valid/secure, then I'd say
it's OK that I'm not actually using "prepare" to sanitize the input
array of IDs.

Thanks again Jerry and Ryan!

Cheers,
M


------------------------------

Message: 8
Date: Tue, 16 Jul 2013 16:28:15 +1000
From: Shea Bunge <info at bungeshea.com>
To: "wp-hackers at lists.automattic.com"
	<wp-hackers at lists.automattic.com>
Subject: Re: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
Message-ID: <BLU177-W2329F71697433264BAE3F4B8600 at phx.gbl>
Content-Type: text/plain; charset="iso-8859-1"

What format are the blog ids stored in, and where did they come from?

> From: mickyhulse.lists at gmail.com
> Date: Mon, 15 Jul 2013 19:43:01 -0700
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in	$wpdb->prepare()?
> 
> On Mon, Jul 15, 2013 at 7:36 PM, Micky Hulse <mickyhulse.lists at gmail.com> wrote:
> > With that said, how can I accomplish my goal of passing several blog
> > IDs into a query that uses wpdb::prepare() (like my example above)?
> 
> I should say:
> 
> What's the most practical and secure way (I want to avoid little Bobby
> Tables http://xkcd.com/327/) to pass a list of blog IDs into the NOT
> IN clause of wpdb::prepare() SQL statement?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
 		 	   		  

------------------------------

Message: 9
Date: Mon, 15 Jul 2013 23:55:07 -0700
From: Micky Hulse <mickyhulse.lists at gmail.com>
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
Message-ID:
	<CALri7M=rUfPLxt1G3oKnq3VhEjVKBA=FKfndD78-kDRp2W06iw at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

On Mon, Jul 15, 2013 at 11:28 PM, Shea Bunge <info at bungeshea.com> wrote:
> What format are the blog ids stored in, and where did they come from?

Great question. Sorry that I did not mention that before.

I have a couple of functions that allow me to get latest updated blogs
on our multisite. The IDs are controlled by me, the developer, and
I've allowed them to be overridden via function arguments. There will
be no forms or users (ones that I don't trust) that will have access
to this code, so I can be pretty certain the input will be legit.

Maybe I'm being overly cautious? I guess a part of me wants to just
play it safe even though I completely trust where the IDs are coming
from. :)

Thanks for asking! Let me know if you have feedback.


------------------------------

Message: 10
Date: Tue, 16 Jul 2013 01:59:21 -0500
From: Nicholas Ciske <nl at thoughtrefinery.com>
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
Message-ID: <75CFCF9F-FB86-4DB5-9A61-FCCD302897CA at thoughtrefinery.com>
Content-Type: text/plain;	charset=windows-1252

If you play it safe, then the other developers can?t grab something unsafe from a form or query string and open up a security hole via your code.

IDs are so easy to sanitize, there's no reason not to.

_________________________
Nick Ciske
http://thoughtrefinery.com/
@nciske	

On Jul 16, 2013, at 1:55 AM, Micky Hulse wrote:
> 
> There will
> be no forms or users (ones that I don't trust) that will have access
> to this code, so I can be pretty certain the input will be legit.
> 
> Maybe I'm being overly cautious? I guess a part of me wants to just
> play it safe even though I completely trust where the IDs are coming
> from. :)



------------------------------

Subject: Digest Footer

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


------------------------------

End of wp-hackers Digest, Vol 102, Issue 16
*******************************************

From wp at andrewnacin.com  Tue Jul 16 12:52:44 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 16 Jul 2013 08:52:44 -0400
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
In-Reply-To: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>
References: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>
Message-ID: <CAP29Pvh6ywwLs_heWHJp5DPb-CFHWChuNpAWWHvE__5C6sqP6Q@mail.gmail.com>

$wpdb->prepare() is only for preparing a query with %s, %d, or %f
placeholders.

If your query doesn't have a placeholder, then don't use prepare. As in:
$rows = $wpdb->get_results($wpdb->prepare("SELECT blog_id FROM
$wpdb->blogs WHERE blog_id NOT IN ($ignore) AND public = '1' AND archived =
'0' AND mature = '0' AND spam = '0' AND deleted = '0'", $ignore),
ARRAY_A);

Just make sure that $ignore is is secure! As in:
$ignore = esc_sql( array( $a, $b, $c ) );
$ignore = "'" . implode( "', '", $ignore ) . "'";

Since the ignored values are IDs, then you don't *actually* need to escape
it
with esc_sql() here. I would still use intval() or absint(), though.

$ignore = array_map( 'absint', array( $a, $b, $c ) );
$ignore = implode( ', ', $ignore );


On Mon, Jul 15, 2013 at 10:36 PM, Micky Hulse <mickyhulse.lists at gmail.com>wrote:

> Situation and example code:
>
> [code]
>
> $ignore = implode(',', array('1', '19', '21',));
> echo '<pre>';
> $rows = $wpdb->get_results($wpdb->prepare("SELECT blog_id FROM
> $wpdb->blogs WHERE blog_id NOT IN (%s) AND public = '1' AND archived =
> '0' AND mature = '0' AND spam = '0' AND deleted = '0'", $ignore),
> ARRAY_A);
> print_r($rows);
> echo '</pre>';
>
> [/code]
>
> Problem:
>
> The "NOT IN ()" filter fails to ignore blog ids.
>
> Reason:
>
> I'm not certain, but I assume my code fails because $ignore isn't of
> the %s, %d or %f types.
>
> Solution:
>
> Move $ignore into the statement like so:
>
> ... blog_id NOT IN ($ignore) ...
>
> Problem:
>
> I get this PHP notice:
>
> PHP Notice:  wpdb::prepare was called <strong>incorrectly</strong>.
> wpdb::prepare() requires at least two arguments. Please see <a
> href="http://codex.wordpress.org/Debugging_in_WordPress">Debugging in
> WordPress</a> for more information. (This message was added in version
> 3.5.) in /rgblog/html/wp-includes/functions.php on line 2962
>
> Reason for the notice:
>
> "PHP Warning: Missing argument 2 for wpdb::prepare()"
> <
> http://make.wordpress.org/core/2012/12/12/php-warning-missing-argument-2-for-wpdb-prepare/
> >
>
> Specifically:
>
> [quote]
>
> you?re passing $id directly into the query, unprepared. And this,
> right here, is why $wpdb->prepare() now issues a warning if it isn?t
> called with more than one argument. Because you can?t prepare a query
> without more than one argument.
>
> [/quote]
>
> With that said, how can I accomplish my goal of passing several blog
> IDs into a query that uses wpdb::prepare() (like my example above)?
>
> Any tips would be appreciated. :)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mickyhulse.lists at gmail.com  Tue Jul 16 17:55:01 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Tue, 16 Jul 2013 10:55:01 -0700
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
In-Reply-To: <CAP29Pvh6ywwLs_heWHJp5DPb-CFHWChuNpAWWHvE__5C6sqP6Q@mail.gmail.com>
References: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>
 <CAP29Pvh6ywwLs_heWHJp5DPb-CFHWChuNpAWWHvE__5C6sqP6Q@mail.gmail.com>
Message-ID: <CALri7MkdEHMHnWK38peiXkFWyVnpjXk_+TtFUa-eFDEtrPkCFw@mail.gmail.com>

Wow, you folks are so helpful!

Thanks to everyone (Jerry, Ryan, Shea, Nicholas and Andrew) for the
pro hacker tips and advice. It is much appreciated. :-)

Andrew, thanks for pointing me towards get_results() (and for the
additional details and example code).

Have a nice day!

Cheers,
M

From mickyhulse.lists at gmail.com  Tue Jul 16 18:27:43 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Tue, 16 Jul 2013 11:27:43 -0700
Subject: [wp-hackers] WP 3.5.2/multisite: How to use NOT IN in
	$wpdb->prepare()?
In-Reply-To: <CAP29Pvh6ywwLs_heWHJp5DPb-CFHWChuNpAWWHvE__5C6sqP6Q@mail.gmail.com>
References: <CALri7M=Xu6RNrwSbKnyv5xmPznq5rGOGadjjzc0iyAsjA_Y0oQ@mail.gmail.com>
 <CAP29Pvh6ywwLs_heWHJp5DPb-CFHWChuNpAWWHvE__5C6sqP6Q@mail.gmail.com>
Message-ID: <CALri7Mk-W734HUER+xQpKi5-u1RJWJNdZp8CwaN_dRSAhUc-Cw@mail.gmail.com>

On Tue, Jul 16, 2013 at 5:52 AM, Andrew Nacin <wp at andrewnacin.com> wrote:
> If your query doesn't have a placeholder, then don't use prepare. As in:
> $rows = $wpdb->get_results($wpdb->prepare("SELECT blog_id FROM
> $wpdb->blogs WHERE blog_id NOT IN ($ignore) AND public = '1' AND archived =
> '0' AND mature = '0' AND spam = '0' AND deleted = '0'", $ignore),
> ARRAY_A)

On Tue, Jul 16, 2013 at 10:55 AM, Micky Hulse
<mickyhulse.lists at gmail.com> wrote:
> Andrew, thanks for pointing me towards get_results() (and for the
> additional details and example code).

For some reason, in the example code above, my eyes skimmed over the
"prepare()" bit .. When I read "don't use prepare", I saw
"get_results()" and assumed that I could use that without using
prepare(). Lol, it's still early and the coffee has yet to kick in. :D

Andrew, in your example above, I see that you have $ignore in both
spots. I assume you meant to delete the $ignore argument from the
prepare()? Or, to clarify, you must be saying to leave it there as an
unused argument (otherwise, prepare will throw that PHP notice)? Sorry
for me being so dense.

Thanks again Andrew and all!

Cheers,
M

From tcbarrett at gmail.com  Wed Jul 17 09:50:58 2013
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 17 Jul 2013 10:50:58 +0100
Subject: [wp-hackers] Example use of add_meta_box callback args
Message-ID: <CAEgmxabqmcVBiYxtX4HFTWb8sQx6Lj6q8HUNdT=o9Ne18yS5-A@mail.gmail.com>

http://codex.wordpress.org/Function_Reference/add_meta_box#Callback_args

Can someone give me an example use of add_meta_box() that uses
$callback_args where those args could not be built in the callback function
itself?

Tom

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From info at bungeshea.com  Wed Jul 17 10:02:08 2013
From: info at bungeshea.com (Shea Bunge)
Date: Wed, 17 Jul 2013 20:02:08 +1000
Subject: [wp-hackers] Example use of add_meta_box callback args
In-Reply-To: <CAEgmxabqmcVBiYxtX4HFTWb8sQx6Lj6q8HUNdT=o9Ne18yS5-A@mail.gmail.com>
References: <CAEgmxabqmcVBiYxtX4HFTWb8sQx6Lj6q8HUNdT=o9Ne18yS5-A@mail.gmail.com>
Message-ID: <BLU177-W82166D09460D8E5ED0D1CB8610@phx.gbl>

A single callback function used for multiple meta boxes?


> Date: Wed, 17 Jul 2013 10:50:58 +0100
> From: tcbarrett at gmail.com
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] Example use of add_meta_box callback args
> 
> http://codex.wordpress.org/Function_Reference/add_meta_box#Callback_args
> 
> Can someone give me an example use of add_meta_box() that uses
> $callback_args where those args could not be built in the callback function
> itself?
> 
> Tom
> 
> -- 
> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> http://twitter.com/tcbarrett
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
 		 	   		  

From dyordan1 at ramapo.edu  Wed Jul 17 12:45:12 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Wed, 17 Jul 2013 08:45:12 -0400
Subject: [wp-hackers] Date/Time and WP
Message-ID: <B5C98932-EC55-4E65-9FD5-CEB4BF039F70@ramapo.edu>


Hey guys,

From my understanding, when dealing with date and time, WordPress, because of PHP 4 legacy support, sets timezone to UTC and does its own calculations based on the timezone in options. So, when writing plugins, what would be the correct approach to making sure correct timezone is used? Should I use built-in functions like date and somehow specify timezone every time I access them? Or are there any WordPress functions created for that purpose? Any help with this appreciated. Thanks!

~Dobri


From lists at rotorised.com  Wed Jul 17 12:48:02 2013
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 17 Jul 2013 22:48:02 +1000
Subject: [wp-hackers] Date/Time and WP
In-Reply-To: <B5C98932-EC55-4E65-9FD5-CEB4BF039F70@ramapo.edu>
References: <B5C98932-EC55-4E65-9FD5-CEB4BF039F70@ramapo.edu>
Message-ID: <51E69282.3020907@rotorised.com>

Dobri wrote:

> From my understanding, when dealing with date and time, WordPress, because of PHP 4 legacy support, sets timezone to UTC and does its own calculations based on the timezone in options. So, when writing plugins, what would be the correct approach to making sure correct timezone is used? Should I use built-in functions like date and somehow specify timezone every time I access them? Or are there any WordPress functions created for that purpose?

See http://core.trac.wordpress.org/ticket/24730

Here's how I handle it:

protected function get_timezone() {
	$tzstring = get_option( 'timezone_string' );
	if ( ! $tzstring ) {
		// Create a UTC+- zone if no timezone string exists
		$current_offset = get_option( 'gmt_offset' );
		if ( 0 == $current_offset )
			$tzstring = 'UTC';
		elseif ($current_offset < 0)
			$tzstring = 'Etc/GMT' . $current_offset;
		else
			$tzstring = 'Etc/GMT+' . $current_offset;
	}
	$zone = new DateTimeZone( $tzstring );
	return $zone;
}

-- 
Ryan McCue
<http://ryanmccue.info/>

From will.davis at gmail.com  Wed Jul 17 12:56:47 2013
From: will.davis at gmail.com (William P. Davis)
Date: Wed, 17 Jul 2013 12:56:47 +0000
Subject: [wp-hackers] Date/Time and WP
In-Reply-To: <51E69282.3020907@rotorised.com>
References: <B5C98932-EC55-4E65-9FD5-CEB4BF039F70@ramapo.edu>
 <51E69282.3020907@rotorised.com>
Message-ID: <1498213418-1374065808-cardhu_decombobulator_blackberry.rim.net-739188336-@b16.c4.bise6.blackberry>

date_i18n is a fantastic function that will make sure the date and time is returned in the same timezone set in the WP settings
Sent from my BlackBerry

-----Original Message-----
From: Ryan McCue <lists at rotorised.com>
Sender: "wp-hackers" <wp-hackers-bounces at lists.automattic.com>Date: Wed, 17 Jul 2013 22:48:02 
To: <wp-hackers at lists.automattic.com>
Reply-To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Date/Time and WP

Dobri wrote:

> From my understanding, when dealing with date and time, WordPress, because of PHP 4 legacy support, sets timezone to UTC and does its own calculations based on the timezone in options. So, when writing plugins, what would be the correct approach to making sure correct timezone is used? Should I use built-in functions like date and somehow specify timezone every time I access them? Or are there any WordPress functions created for that purpose?

See http://core.trac.wordpress.org/ticket/24730

Here's how I handle it:

protected function get_timezone() {
	$tzstring = get_option( 'timezone_string' );
	if ( ! $tzstring ) {
		// Create a UTC+- zone if no timezone string exists
		$current_offset = get_option( 'gmt_offset' );
		if ( 0 == $current_offset )
			$tzstring = 'UTC';
		elseif ($current_offset < 0)
			$tzstring = 'Etc/GMT' . $current_offset;
		else
			$tzstring = 'Etc/GMT+' . $current_offset;
	}
	$zone = new DateTimeZone( $tzstring );
	return $zone;
}

-- 
Ryan McCue
<http://ryanmccue.info/>
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From dyordan1 at ramapo.edu  Wed Jul 17 12:57:49 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Wed, 17 Jul 2013 08:57:49 -0400
Subject: [wp-hackers] Date/Time and WP
In-Reply-To: <51E69282.3020907@rotorised.com>
References: <B5C98932-EC55-4E65-9FD5-CEB4BF039F70@ramapo.edu>
 <51E69282.3020907@rotorised.com>
Message-ID: <B7014BA8-D40A-4E11-9561-AB14E66F1E29@ramapo.edu>

Thanks Ryan! When would a timezone_string not exist though? Wouldn't that simply mean settings were not touched, therefore it's some default (I'd guess UTC?)

~Dobri

On Wed, 17 Jul 2013, at 8:48 AM, Ryan McCue wrote:

> Dobri wrote:
> 
>> From my understanding, when dealing with date and time, WordPress, because of PHP 4 legacy support, sets timezone to UTC and does its own calculations based on the timezone in options. So, when writing plugins, what would be the correct approach to making sure correct timezone is used? Should I use built-in functions like date and somehow specify timezone every time I access them? Or are there any WordPress functions created for that purpose?
> 
> See http://core.trac.wordpress.org/ticket/24730
> 
> Here's how I handle it:
> 
> protected function get_timezone() {
> 	$tzstring = get_option( 'timezone_string' );
> 	if ( ! $tzstring ) {
> 		// Create a UTC+- zone if no timezone string exists
> 		$current_offset = get_option( 'gmt_offset' );
> 		if ( 0 == $current_offset )
> 			$tzstring = 'UTC';
> 		elseif ($current_offset < 0)
> 			$tzstring = 'Etc/GMT' . $current_offset;
> 		else
> 			$tzstring = 'Etc/GMT+' . $current_offset;
> 	}
> 	$zone = new DateTimeZone( $tzstring );
> 	return $zone;
> }
> 
> -- 
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From dyordan1 at ramapo.edu  Wed Jul 17 13:01:24 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Wed, 17 Jul 2013 09:01:24 -0400
Subject: [wp-hackers] Date/Time and WP
In-Reply-To: <1498213418-1374065808-cardhu_decombobulator_blackberry.rim.net-739188336-@b16.c4.bise6.blackberry>
References: <B5C98932-EC55-4E65-9FD5-CEB4BF039F70@ramapo.edu>
 <51E69282.3020907@rotorised.com>
 <1498213418-1374065808-cardhu_decombobulator_blackberry.rim.net-739188336-@b16.c4.bise6.blackberry>
Message-ID: <8FEF3A29-3708-410C-B94D-DAD2624598DD@ramapo.edu>

Awesome, exactly what I was looking for. Thanks William! Just a sanity check, timestamps are just timestamps and are not affected by timezones, correct? As in, I can still use time(), time()+DAY_IN_SECONDS, etc.?

~Dobri

On Wed, 17 Jul 2013, at 8:56 AM, William P. Davis wrote:

> date_i18n is a fantastic function that will make sure the date and time is returned in the same timezone set in the WP settings
> Sent from my BlackBerry
> 
> -----Original Message-----
> From: Ryan McCue <lists at rotorised.com>
> Sender: "wp-hackers" <wp-hackers-bounces at lists.automattic.com>Date: Wed, 17 Jul 2013 22:48:02 
> To: <wp-hackers at lists.automattic.com>
> Reply-To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Date/Time and WP
> 
> Dobri wrote:
> 
>> From my understanding, when dealing with date and time, WordPress, because of PHP 4 legacy support, sets timezone to UTC and does its own calculations based on the timezone in options. So, when writing plugins, what would be the correct approach to making sure correct timezone is used? Should I use built-in functions like date and somehow specify timezone every time I access them? Or are there any WordPress functions created for that purpose?
> 
> See http://core.trac.wordpress.org/ticket/24730
> 
> Here's how I handle it:
> 
> protected function get_timezone() {
> 	$tzstring = get_option( 'timezone_string' );
> 	if ( ! $tzstring ) {
> 		// Create a UTC+- zone if no timezone string exists
> 		$current_offset = get_option( 'gmt_offset' );
> 		if ( 0 == $current_offset )
> 			$tzstring = 'UTC';
> 		elseif ($current_offset < 0)
> 			$tzstring = 'Etc/GMT' . $current_offset;
> 		else
> 			$tzstring = 'Etc/GMT+' . $current_offset;
> 	}
> 	$zone = new DateTimeZone( $tzstring );
> 	return $zone;
> }
> 
> -- 
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From lists at alexking.org  Wed Jul 17 13:03:29 2013
From: lists at alexking.org (Alex King)
Date: Wed, 17 Jul 2013 07:03:29 -0600
Subject: [wp-hackers] Date/Time and WP
In-Reply-To: <8FEF3A29-3708-410C-B94D-DAD2624598DD@ramapo.edu>
References: <B5C98932-EC55-4E65-9FD5-CEB4BF039F70@ramapo.edu>
 <51E69282.3020907@rotorised.com>
 <1498213418-1374065808-cardhu_decombobulator_blackberry.rim.net-739188336-@b16.c4.bise6.blackberry>
 <8FEF3A29-3708-410C-B94D-DAD2624598DD@ramapo.edu>
Message-ID: <F62400B3-7B4B-4C8A-878F-4E3EE72A2B6D@alexking.org>

Be aware of this too: http://core.trac.wordpress.org/ticket/20328

Cheers,
--Alex

http://alexking.org | http://crowdfavorite.com



From lists at rotorised.com  Wed Jul 17 13:06:11 2013
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 17 Jul 2013 23:06:11 +1000
Subject: [wp-hackers] Date/Time and WP
In-Reply-To: <B7014BA8-D40A-4E11-9561-AB14E66F1E29@ramapo.edu>
References: <B5C98932-EC55-4E65-9FD5-CEB4BF039F70@ramapo.edu>
 <51E69282.3020907@rotorised.com>
 <B7014BA8-D40A-4E11-9561-AB14E66F1E29@ramapo.edu>
Message-ID: <51E696C3.4040102@rotorised.com>

Dobri wrote:
> Thanks Ryan! When would a timezone_string not exist though? Wouldn't that simply mean settings were not touched, therefore it's some default (I'd guess UTC?)

If the timezone is set to a manual offset (e.g. UTC+10), then the
timezone string won't be set (IIRC). In addition, older versions of
WordPress won't have the timezone_string setting and use gmt_offset instead.

-- 
Ryan McCue
<http://ryanmccue.info/>

From dyordan1 at ramapo.edu  Wed Jul 17 13:14:13 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Wed, 17 Jul 2013 09:14:13 -0400
Subject: [wp-hackers] Date/Time and WP
In-Reply-To: <51E696C3.4040102@rotorised.com>
References: <B5C98932-EC55-4E65-9FD5-CEB4BF039F70@ramapo.edu>
 <51E69282.3020907@rotorised.com>
 <B7014BA8-D40A-4E11-9561-AB14E66F1E29@ramapo.edu>
 <51E696C3.4040102@rotorised.com>
Message-ID: <883DA041-BEE1-4F67-9DEF-3710A1676D77@ramapo.edu>

That makes sense. So, would you say there are performance benefits to using DateTime and the function you provided to just using date_i18n as William suggested? And is this a more robust method (for now) because of the bug in core that Alex brought up when dealing with date/time in DLS while it's currently not DLS and vice versa?

~Dobri

On Wed, 17 Jul 2013, at 9:06 AM, Ryan McCue wrote:

> Dobri wrote:
>> Thanks Ryan! When would a timezone_string not exist though? Wouldn't that simply mean settings were not touched, therefore it's some default (I'd guess UTC?)
> 
> If the timezone is set to a manual offset (e.g. UTC+10), then the
> timezone string won't be set (IIRC). In addition, older versions of
> WordPress won't have the timezone_string setting and use gmt_offset instead.
> 
> -- 
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From lists at rotorised.com  Wed Jul 17 13:18:26 2013
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 17 Jul 2013 23:18:26 +1000
Subject: [wp-hackers] Date/Time and WP
In-Reply-To: <883DA041-BEE1-4F67-9DEF-3710A1676D77@ramapo.edu>
References: <B5C98932-EC55-4E65-9FD5-CEB4BF039F70@ramapo.edu>
 <51E69282.3020907@rotorised.com>
 <B7014BA8-D40A-4E11-9561-AB14E66F1E29@ramapo.edu>
 <51E696C3.4040102@rotorised.com>
 <883DA041-BEE1-4F67-9DEF-3710A1676D77@ramapo.edu>
Message-ID: <51E699A2.8090204@rotorised.com>

Dobri wrote:
> That makes sense. So, would you say there are performance benefits to using DateTime and the function you provided to just using date_i18n as William suggested? And is this a more robust method (for now) because of the bug in core that Alex brought up when dealing with date/time in DLS while it's currently not DLS and vice versa?

If you're working with relative time, you should definitely be using the
DateTime and DateTimeZone classes. DateTime natively understands
DateTimeZone and the DST transitions that can occur with it.

Performance-wise, creating a DateTimeZone instance is costly, but using
DateTime is fairly fast. If you're using this in production, I'd
recommend caching it:

protected function get_timezone() {
	static $zone = null;
	if ($zone !== null)
		return $zone;

	$tzstring = get_option( 'timezone_string' );
	if ( ! $tzstring ) {
		// Create a UTC+- zone if no timezone string exists
		$current_offset = get_option( 'gmt_offset' );
		if ( 0 == $current_offset )
			$tzstring = 'UTC';
		elseif ($current_offset < 0)
			$tzstring = 'Etc/GMT' . $current_offset;
		else
			$tzstring = 'Etc/GMT+' . $current_offset;
	}
	$zone = new DateTimeZone( $tzstring );
	return $zone;
}

(I'm using this in my JSON REST API, and the caching is fairly important
when using this for a list of posts.)

-- 
Ryan McCue
<http://ryanmccue.info/>

From dyordan1 at ramapo.edu  Wed Jul 17 13:27:57 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Wed, 17 Jul 2013 09:27:57 -0400
Subject: [wp-hackers] Date/Time and WP
In-Reply-To: <51E699A2.8090204@rotorised.com>
References: <B5C98932-EC55-4E65-9FD5-CEB4BF039F70@ramapo.edu>
 <51E69282.3020907@rotorised.com>
 <B7014BA8-D40A-4E11-9561-AB14E66F1E29@ramapo.edu>
 <51E696C3.4040102@rotorised.com>
 <883DA041-BEE1-4F67-9DEF-3710A1676D77@ramapo.edu>
 <51E699A2.8090204@rotorised.com>
Message-ID: <B847E1B9-154D-4AAE-AE29-14614F7B21A9@ramapo.edu>

Yeah, I figured some sort of caching is in place. Thanks for that, I think I've got a winner. Looks pretty robust to me and makes sense as a core function. I'd say think about caching on that trac ticket too. In any case, good luck with that and thanks for the help!

~Dobri

On Wed, 17 Jul 2013, at 9:18 AM, Ryan McCue wrote:

> Dobri wrote:
>> That makes sense. So, would you say there are performance benefits to using DateTime and the function you provided to just using date_i18n as William suggested? And is this a more robust method (for now) because of the bug in core that Alex brought up when dealing with date/time in DLS while it's currently not DLS and vice versa?
> 
> If you're working with relative time, you should definitely be using the
> DateTime and DateTimeZone classes. DateTime natively understands
> DateTimeZone and the DST transitions that can occur with it.
> 
> Performance-wise, creating a DateTimeZone instance is costly, but using
> DateTime is fairly fast. If you're using this in production, I'd
> recommend caching it:
> 
> protected function get_timezone() {
> 	static $zone = null;
> 	if ($zone !== null)
> 		return $zone;
> 
> 	$tzstring = get_option( 'timezone_string' );
> 	if ( ! $tzstring ) {
> 		// Create a UTC+- zone if no timezone string exists
> 		$current_offset = get_option( 'gmt_offset' );
> 		if ( 0 == $current_offset )
> 			$tzstring = 'UTC';
> 		elseif ($current_offset < 0)
> 			$tzstring = 'Etc/GMT' . $current_offset;
> 		else
> 			$tzstring = 'Etc/GMT+' . $current_offset;
> 	}
> 	$zone = new DateTimeZone( $tzstring );
> 	return $zone;
> }
> 
> (I'm using this in my JSON REST API, and the caching is fairly important
> when using this for a list of posts.)
> 
> -- 
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From jacobsnyder at gmail.com  Wed Jul 17 16:11:53 2013
From: jacobsnyder at gmail.com (Jacob Snyder)
Date: Wed, 17 Jul 2013 11:11:53 -0500
Subject: [wp-hackers] Date/Time and WP
Message-ID: <CAPEbg-FsQSUHZ8O9fPC__e07gE82JAkfHukxFAvv2eDgiO0CaQ@mail.gmail.com>

I have found that although date_i18n() is awesome, I also need to create my
timestamps using current_time('timestamp').

I wasn't getting timezone support from just date_i18n, until I started
using current_time. I haven't put much thought into, though, once my times
started getting recorded and retrieved as expected.

On Wed, Jul 17, 2013 at 8:14 AM, <wp-hackers-request at lists.automattic.com>wrote:

> Send wp-hackers mailing list submissions to
>         wp-hackers at lists.automattic.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>         http://lists.automattic.com/mailman/listinfo/wp-hackers
> or, via email, send a message with subject or body 'help' to
>         wp-hackers-request at lists.automattic.com
>
> You can reach the person managing the list at
>         wp-hackers-owner at lists.automattic.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wp-hackers digest..."
>
>
> Today's Topics:
>
>    1. Date/Time and WP (Dobri)
>    2. Re: Date/Time and WP (Ryan McCue)
>    3. Re: Date/Time and WP (William P. Davis)
>    4. Re: Date/Time and WP (Dobri)
>    5. Re: Date/Time and WP (Dobri)
>    6. Re: Date/Time and WP (Alex King)
>    7. Re: Date/Time and WP (Ryan McCue)
>    8. Re: Date/Time and WP (Dobri)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Wed, 17 Jul 2013 08:45:12 -0400
> From: Dobri <dyordan1 at ramapo.edu>
> To: "Discussion list for WordPress developers."
>         <wp-hackers at lists.automattic.com>
> Subject: [wp-hackers] Date/Time and WP
> Message-ID: <B5C98932-EC55-4E65-9FD5-CEB4BF039F70 at ramapo.edu>
> Content-Type: text/plain;       charset=us-ascii
>
>
> Hey guys,
>
> From my understanding, when dealing with date and time, WordPress, because
> of PHP 4 legacy support, sets timezone to UTC and does its own calculations
> based on the timezone in options. So, when writing plugins, what would be
> the correct approach to making sure correct timezone is used? Should I use
> built-in functions like date and somehow specify timezone every time I
> access them? Or are there any WordPress functions created for that purpose?
> Any help with this appreciated. Thanks!
>
> ~Dobri
>
>
>
> ------------------------------
>
> Message: 2
> Date: Wed, 17 Jul 2013 22:48:02 +1000
> From: Ryan McCue <lists at rotorised.com>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Date/Time and WP
> Message-ID: <51E69282.3020907 at rotorised.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Dobri wrote:
>
> > From my understanding, when dealing with date and time, WordPress,
> because of PHP 4 legacy support, sets timezone to UTC and does its own
> calculations based on the timezone in options. So, when writing plugins,
> what would be the correct approach to making sure correct timezone is used?
> Should I use built-in functions like date and somehow specify timezone
> every time I access them? Or are there any WordPress functions created for
> that purpose?
>
> See http://core.trac.wordpress.org/ticket/24730
>
> Here's how I handle it:
>
> protected function get_timezone() {
>         $tzstring = get_option( 'timezone_string' );
>         if ( ! $tzstring ) {
>                 // Create a UTC+- zone if no timezone string exists
>                 $current_offset = get_option( 'gmt_offset' );
>                 if ( 0 == $current_offset )
>                         $tzstring = 'UTC';
>                 elseif ($current_offset < 0)
>                         $tzstring = 'Etc/GMT' . $current_offset;
>                 else
>                         $tzstring = 'Etc/GMT+' . $current_offset;
>         }
>         $zone = new DateTimeZone( $tzstring );
>         return $zone;
> }
>
> --
> Ryan McCue
> <http://ryanmccue.info/>
>
>
> ------------------------------
>
> Message: 3
> Date: Wed, 17 Jul 2013 12:56:47 +0000
> From: "William P. Davis" <will.davis at gmail.com>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Date/Time and WP
> Message-ID:
>
> <1498213418-1374065808-cardhu_decombobulator_blackberry.rim.net-739188336- at b16.c4.bise6.blackberry
> >
>
> Content-Type: text/plain
>
> date_i18n is a fantastic function that will make sure the date and time is
> returned in the same timezone set in the WP settings
> Sent from my BlackBerry
>
> -----Original Message-----
> From: Ryan McCue <lists at rotorised.com>
> Sender: "wp-hackers" <wp-hackers-bounces at lists.automattic.com>Date: Wed,
> 17 Jul 2013 22:48:02
> To: <wp-hackers at lists.automattic.com>
> Reply-To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Date/Time and WP
>
> Dobri wrote:
>
> > From my understanding, when dealing with date and time, WordPress,
> because of PHP 4 legacy support, sets timezone to UTC and does its own
> calculations based on the timezone in options. So, when writing plugins,
> what would be the correct approach to making sure correct timezone is used?
> Should I use built-in functions like date and somehow specify timezone
> every time I access them? Or are there any WordPress functions created for
> that purpose?
>
> See http://core.trac.wordpress.org/ticket/24730
>
> Here's how I handle it:
>
> protected function get_timezone() {
>         $tzstring = get_option( 'timezone_string' );
>         if ( ! $tzstring ) {
>                 // Create a UTC+- zone if no timezone string exists
>                 $current_offset = get_option( 'gmt_offset' );
>                 if ( 0 == $current_offset )
>                         $tzstring = 'UTC';
>                 elseif ($current_offset < 0)
>                         $tzstring = 'Etc/GMT' . $current_offset;
>                 else
>                         $tzstring = 'Etc/GMT+' . $current_offset;
>         }
>         $zone = new DateTimeZone( $tzstring );
>         return $zone;
> }
>
> --
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> ------------------------------
>
> Message: 4
> Date: Wed, 17 Jul 2013 08:57:49 -0400
> From: Dobri <dyordan1 at ramapo.edu>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Date/Time and WP
> Message-ID: <B7014BA8-D40A-4E11-9561-AB14E66F1E29 at ramapo.edu>
> Content-Type: text/plain;       charset=us-ascii
>
> Thanks Ryan! When would a timezone_string not exist though? Wouldn't that
> simply mean settings were not touched, therefore it's some default (I'd
> guess UTC?)
>
> ~Dobri
>
> On Wed, 17 Jul 2013, at 8:48 AM, Ryan McCue wrote:
>
> > Dobri wrote:
> >
> >> From my understanding, when dealing with date and time, WordPress,
> because of PHP 4 legacy support, sets timezone to UTC and does its own
> calculations based on the timezone in options. So, when writing plugins,
> what would be the correct approach to making sure correct timezone is used?
> Should I use built-in functions like date and somehow specify timezone
> every time I access them? Or are there any WordPress functions created for
> that purpose?
> >
> > See http://core.trac.wordpress.org/ticket/24730
> >
> > Here's how I handle it:
> >
> > protected function get_timezone() {
> >       $tzstring = get_option( 'timezone_string' );
> >       if ( ! $tzstring ) {
> >               // Create a UTC+- zone if no timezone string exists
> >               $current_offset = get_option( 'gmt_offset' );
> >               if ( 0 == $current_offset )
> >                       $tzstring = 'UTC';
> >               elseif ($current_offset < 0)
> >                       $tzstring = 'Etc/GMT' . $current_offset;
> >               else
> >                       $tzstring = 'Etc/GMT+' . $current_offset;
> >       }
> >       $zone = new DateTimeZone( $tzstring );
> >       return $zone;
> > }
> >
> > --
> > Ryan McCue
> > <http://ryanmccue.info/>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> ------------------------------
>
> Message: 5
> Date: Wed, 17 Jul 2013 09:01:24 -0400
> From: Dobri <dyordan1 at ramapo.edu>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Date/Time and WP
> Message-ID: <8FEF3A29-3708-410C-B94D-DAD2624598DD at ramapo.edu>
> Content-Type: text/plain;       charset=us-ascii
>
> Awesome, exactly what I was looking for. Thanks William! Just a sanity
> check, timestamps are just timestamps and are not affected by timezones,
> correct? As in, I can still use time(), time()+DAY_IN_SECONDS, etc.?
>
> ~Dobri
>
> On Wed, 17 Jul 2013, at 8:56 AM, William P. Davis wrote:
>
> > date_i18n is a fantastic function that will make sure the date and time
> is returned in the same timezone set in the WP settings
> > Sent from my BlackBerry
> >
> > -----Original Message-----
> > From: Ryan McCue <lists at rotorised.com>
> > Sender: "wp-hackers" <wp-hackers-bounces at lists.automattic.com>Date:
> Wed, 17 Jul 2013 22:48:02
> > To: <wp-hackers at lists.automattic.com>
> > Reply-To: wp-hackers at lists.automattic.com
> > Subject: Re: [wp-hackers] Date/Time and WP
> >
> > Dobri wrote:
> >
> >> From my understanding, when dealing with date and time, WordPress,
> because of PHP 4 legacy support, sets timezone to UTC and does its own
> calculations based on the timezone in options. So, when writing plugins,
> what would be the correct approach to making sure correct timezone is used?
> Should I use built-in functions like date and somehow specify timezone
> every time I access them? Or are there any WordPress functions created for
> that purpose?
> >
> > See http://core.trac.wordpress.org/ticket/24730
> >
> > Here's how I handle it:
> >
> > protected function get_timezone() {
> >       $tzstring = get_option( 'timezone_string' );
> >       if ( ! $tzstring ) {
> >               // Create a UTC+- zone if no timezone string exists
> >               $current_offset = get_option( 'gmt_offset' );
> >               if ( 0 == $current_offset )
> >                       $tzstring = 'UTC';
> >               elseif ($current_offset < 0)
> >                       $tzstring = 'Etc/GMT' . $current_offset;
> >               else
> >                       $tzstring = 'Etc/GMT+' . $current_offset;
> >       }
> >       $zone = new DateTimeZone( $tzstring );
> >       return $zone;
> > }
> >
> > --
> > Ryan McCue
> > <http://ryanmccue.info/>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> ------------------------------
>
> Message: 6
> Date: Wed, 17 Jul 2013 07:03:29 -0600
> From: Alex King <lists at alexking.org>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Date/Time and WP
> Message-ID: <F62400B3-7B4B-4C8A-878F-4E3EE72A2B6D at alexking.org>
> Content-Type: text/plain; charset=us-ascii
>
> Be aware of this too: http://core.trac.wordpress.org/ticket/20328
>
> Cheers,
> --Alex
>
> http://alexking.org | http://crowdfavorite.com
>
>
>
>
> ------------------------------
>
> Message: 7
> Date: Wed, 17 Jul 2013 23:06:11 +1000
> From: Ryan McCue <lists at rotorised.com>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Date/Time and WP
> Message-ID: <51E696C3.4040102 at rotorised.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Dobri wrote:
> > Thanks Ryan! When would a timezone_string not exist though? Wouldn't
> that simply mean settings were not touched, therefore it's some default
> (I'd guess UTC?)
>
> If the timezone is set to a manual offset (e.g. UTC+10), then the
> timezone string won't be set (IIRC). In addition, older versions of
> WordPress won't have the timezone_string setting and use gmt_offset
> instead.
>
> --
> Ryan McCue
> <http://ryanmccue.info/>
>
>
> ------------------------------
>
> Message: 8
> Date: Wed, 17 Jul 2013 09:14:13 -0400
> From: Dobri <dyordan1 at ramapo.edu>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Date/Time and WP
> Message-ID: <883DA041-BEE1-4F67-9DEF-3710A1676D77 at ramapo.edu>
> Content-Type: text/plain;       charset=us-ascii
>
> That makes sense. So, would you say there are performance benefits to
> using DateTime and the function you provided to just using date_i18n as
> William suggested? And is this a more robust method (for now) because of
> the bug in core that Alex brought up when dealing with date/time in DLS
> while it's currently not DLS and vice versa?
>
> ~Dobri
>
> On Wed, 17 Jul 2013, at 9:06 AM, Ryan McCue wrote:
>
> > Dobri wrote:
> >> Thanks Ryan! When would a timezone_string not exist though? Wouldn't
> that simply mean settings were not touched, therefore it's some default
> (I'd guess UTC?)
> >
> > If the timezone is set to a manual offset (e.g. UTC+10), then the
> > timezone string won't be set (IIRC). In addition, older versions of
> > WordPress won't have the timezone_string setting and use gmt_offset
> instead.
> >
> > --
> > Ryan McCue
> > <http://ryanmccue.info/>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> ------------------------------
>
> Subject: Digest Footer
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> ------------------------------
>
> End of wp-hackers Digest, Vol 102, Issue 19
> *******************************************
>

From filippo.pisano at gmail.com  Thu Jul 18 07:08:17 2013
From: filippo.pisano at gmail.com (Filippo Pisano)
Date: Thu, 18 Jul 2013 09:08:17 +0200
Subject: [wp-hackers] About using WordPress as service and themes
Message-ID: <CABCyq-nJgfB1u3P-+O_-Fh6xypGOcZA+5AngV3dv0Z0TP_ehDA@mail.gmail.com>

Hi,

I was trying to figure out a good way to prevent themes from being included
when calling WordPress with a particular query string.

Here's an example of what I'm trying to do:

/pages/my-page -> Classic page.php from my_theme_directory
/xml/my-xml-page -> XML page served to external script through custom plugin


I want to exclude the XML generating routine from themes because I want to
speed up things avoiding to load theme's callbacks and functions.

I've tried to set the WP_USE_THEMES constant to false but the functions.php
file belonging to the active theme is still included.
I think that a possible solution could be to add an additional xml-only
theme and change active theme on the fly accordingly to the query string.

IMO such a solution could have an unwanted overhead because all formatting
and templating libraries are also included (despite I need to render a
simple XML only).


Could you suggest me a better way?


Thank you

From nate.divine at gmail.com  Thu Jul 18 13:59:42 2013
From: nate.divine at gmail.com (Nate Divine)
Date: Thu, 18 Jul 2013 07:59:42 -0600
Subject: [wp-hackers] About using WordPress as service and themes
In-Reply-To: <CABCyq-nJgfB1u3P-+O_-Fh6xypGOcZA+5AngV3dv0Z0TP_ehDA@mail.gmail.com>
References: <CABCyq-nJgfB1u3P-+O_-Fh6xypGOcZA+5AngV3dv0Z0TP_ehDA@mail.gmail.com>
Message-ID: <CACrr9HRQ5PnR4BzyFayeKvAvVjovv3K077hQJUOyX2eH_8SBcg@mail.gmail.com>

Not sure if this is exactly what you're looking for - but you could
hook template_include and based on the particular query load a specific
template (or don't load a template at all).


On Thu, Jul 18, 2013 at 1:08 AM, Filippo Pisano <filippo.pisano at gmail.com>wrote:

> Hi,
>
> I was trying to figure out a good way to prevent themes from being included
> when calling WordPress with a particular query string.
>
> Here's an example of what I'm trying to do:
>
> /pages/my-page -> Classic page.php from my_theme_directory
> /xml/my-xml-page -> XML page served to external script through custom
> plugin
>
>
> I want to exclude the XML generating routine from themes because I want to
> speed up things avoiding to load theme's callbacks and functions.
>
> I've tried to set the WP_USE_THEMES constant to false but the functions.php
> file belonging to the active theme is still included.
> I think that a possible solution could be to add an additional xml-only
> theme and change active theme on the fly accordingly to the query string.
>
> IMO such a solution could have an unwanted overhead because all formatting
> and templating libraries are also included (despite I need to render a
> simple XML only).
>
>
> Could you suggest me a better way?
>
>
> Thank you
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jamie at wunderdojo.com  Thu Jul 18 20:31:21 2013
From: jamie at wunderdojo.com (Jamie Currie)
Date: Thu, 18 Jul 2013 20:31:21 +0000
Subject: [wp-hackers] About using WordPress as service and themes
In-Reply-To: <CABCyq-nJgfB1u3P-+O_-Fh6xypGOcZA+5AngV3dv0Z0TP_ehDA@mail.gmail.com>
Message-ID: <emd781d6b4-5589-4e3a-abe5-87f3febe5421@laguna>

You might be able to use the setup_theme hook. If you look in 
wp-settings.php at line 262 it's called before WP loads in the theme's 
functions.php file. So if you add an action to that hook you could check 
for a query var and then load your XML only theme.


Jamie Currie
Founder / CEO
wunderdojo
wunderdojo.com
tel: 949-734-0758
23 Corporate Plaza Drive, Suite 100
Newport Beach, CA 92660
Master web & app developers




------ Original Message ------
From: "Filippo Pisano" <filippo.pisano at gmail.com>
To: wp-hackers at lists.automattic.com
Sent: 7/18/2013 12:08:17 AM
Subject: [wp-hackers] About using WordPress as service and themes
>Hi,
>
>I was trying to figure out a good way to prevent themes from being 
>included
>when calling WordPress with a particular query string.
>
>Here's an example of what I'm trying to do:
>
>/pages/my-page -> Classic page.php from my_theme_directory
>/xml/my-xml-page -> XML page served to external script through custom 
>plugin
>
>
>I want to exclude the XML generating routine from themes because I want 
>to
>speed up things avoiding to load theme's callbacks and functions.
>
>I've tried to set the WP_USE_THEMES constant to false but the 
>functions.php
>file belonging to the active theme is still included.
>I think that a possible solution could be to add an additional xml-only
>theme and change active theme on the fly accordingly to the query 
>string.
>
>IMO such a solution could have an unwanted overhead because all 
>formatting
>and templating libraries are also included (despite I need to render a
>simple XML only).
>
>
>Could you suggest me a better way?
>
>
>Thank you
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers


From warnaudayanga at gmail.com  Fri Jul 19 22:10:02 2013
From: warnaudayanga at gmail.com (Warna Rathnasekara)
Date: Fri, 19 Jul 2013 15:10:02 -0700
Subject: [wp-hackers] Thought you'd find this interesting
Message-ID: <0.0.4.B9.1CE84CCB749BAFA.0@vmta17.monkeyinferno.com>


Hi!


I?ve just learned about the water crisis and thought you would be interested to check out this story:

https://waterforward.charitywater.org/et/vWi2aqqP



Thanks,
Warna



--
Sent via WaterForward, an initiative of charity: water
WaterForward, 387 Tehama Street, San Francisco, CA 94103, USA.
Click here to unsubscribe: https://waterforward.charitywater.org/opt_out?et=vWi2aqqP

From frank at bueltge.de  Wed Jul 24 08:57:29 2013
From: frank at bueltge.de (Frank Bueltge)
Date: Wed, 24 Jul 2013 10:57:29 +0200
Subject: [wp-hackers] Alternative or reactivation for get_blog_info()
Message-ID: <CAH9UVvH+Fx6otRk5BUsDfcXRFkNVarxUdamFKOpGSah2mabAZw@mail.gmail.com>

Hello at all,

since WP 3.0 ist Multisite more and more popular.
Very often on development is it important, that you get all blogs on
network. Before WP 3.0 give it the function get_blog_list() for this job.
http://codex.wordpress.org/WPMU_Functions/get_blog_list

Since 3.0 is this function deprecated. But if you will search via www for a
alternative solution, you find many code snippets, but all with a sql
select. I think it is important, that we have a core function for this
topic, maybe the function get_blog_list().
What do you think, it is a enhancement, change for the trac that we
reactivate the function in core?
I have search on trac for topics to this functions, but only one result
with other content.

Thanks a lot for your time.
Frank

From m.witt at ia-sh.de  Wed Jul 24 09:18:47 2013
From: m.witt at ia-sh.de (Malte Witt)
Date: Wed, 24 Jul 2013 11:18:47 +0200
Subject: [wp-hackers] Alternative or reactivation for get_blog_info()
In-Reply-To: <CAH9UVvH+Fx6otRk5BUsDfcXRFkNVarxUdamFKOpGSah2mabAZw@mail.gmail.com>
References: <CAH9UVvH+Fx6otRk5BUsDfcXRFkNVarxUdamFKOpGSah2mabAZw@mail.gmail.com>
Message-ID: <51EF9BF7.2060904@ia-sh.de>

I stumbled upon this a few days ago, too.

In my opinion get_blog_list() is perfectly fine. The Codex and the 
source is just saying: "For performance reasons this function is not 
recommended." That's true for installations with thousands of blogs. But 
I think most multisite installations out there in the real world have 3 
to 100 sites and they have a perfect valid usecase for get_blog_list().

If there is a no other reason why the function is deprecated (and I 
can't see any) I would say just reactivate it and place a big warning 
sign in the Codex, that this function shouldn't be used in super-large 
multisite installations.

In short: +1 for reactivation of get_blog_list().

Regards,
Malte

Am 24.07.2013 10:57, schrieb Frank Bueltge:
> Hello at all,
>
> since WP 3.0 ist Multisite more and more popular.
> Very often on development is it important, that you get all blogs on
> network. Before WP 3.0 give it the function get_blog_list() for this job.
> http://codex.wordpress.org/WPMU_Functions/get_blog_list
>
> Since 3.0 is this function deprecated. But if you will search via www for a
> alternative solution, you find many code snippets, but all with a sql
> select. I think it is important, that we have a core function for this
> topic, maybe the function get_blog_list().
> What do you think, it is a enhancement, change for the trac that we
> reactivate the function in core?
> I have search on trac for topics to this functions, but only one result
> with other content.
>
> Thanks a lot for your time.
> Frank
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


From frank at bueltge.de  Wed Jul 24 10:24:55 2013
From: frank at bueltge.de (Frank Bueltge)
Date: Wed, 24 Jul 2013 12:24:55 +0200
Subject: [wp-hackers] Alternative or reactivation for get_blog_info()
In-Reply-To: <51EF9BF7.2060904@ia-sh.de>
References: <CAH9UVvH+Fx6otRk5BUsDfcXRFkNVarxUdamFKOpGSah2mabAZw@mail.gmail.com>
 <51EF9BF7.2060904@ia-sh.de>
Message-ID: <CAH9UVvHyvYyE9_Vx7jLjaSqf1py7+ow674iKR9jEExnaAHS9Yw@mail.gmail.com>

I have create the default functions with site transients, there is a bid
faster.
Maybe this helps other users, there search for a function to get all blogs.
https://github.com/bueltge/WordPress-Multisite-Enhancements/blob/master/inc/autoload/core.php

Best
Frank

On Wed, Jul 24, 2013 at 11:18 AM, Malte Witt <m.witt at ia-sh.de> wrote:

> I stumbled upon this a few days ago, too.
>
> In my opinion get_blog_list() is perfectly fine. The Codex and the source
> is just saying: "For performance reasons this function is not recommended."
> That's true for installations with thousands of blogs. But I think most
> multisite installations out there in the real world have 3 to 100 sites and
> they have a perfect valid usecase for get_blog_list().
>
> If there is a no other reason why the function is deprecated (and I can't
> see any) I would say just reactivate it and place a big warning sign in the
> Codex, that this function shouldn't be used in super-large multisite
> installations.
>
> In short: +1 for reactivation of get_blog_list().
>
> Regards,
> Malte
>
> Am 24.07.2013 10:57, schrieb Frank Bueltge:
>
>> Hello at all,
>>
>> since WP 3.0 ist Multisite more and more popular.
>> Very often on development is it important, that you get all blogs on
>> network. Before WP 3.0 give it the function get_blog_list() for this job.
>> http://codex.wordpress.org/**WPMU_Functions/get_blog_list<http://codex.wordpress.org/WPMU_Functions/get_blog_list>
>>
>> Since 3.0 is this function deprecated. But if you will search via www for
>> a
>> alternative solution, you find many code snippets, but all with a sql
>> select. I think it is important, that we have a core function for this
>> topic, maybe the function get_blog_list().
>> What do you think, it is a enhancement, change for the trac that we
>> reactivate the function in core?
>> I have search on trac for topics to this functions, but only one result
>> with other content.
>>
>> Thanks a lot for your time.
>> Frank
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From mickyhulse.lists at gmail.com  Wed Jul 24 19:31:20 2013
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Wed, 24 Jul 2013 12:31:20 -0700
Subject: [wp-hackers] Alternative or reactivation for get_blog_info()
In-Reply-To: <CAH9UVvHyvYyE9_Vx7jLjaSqf1py7+ow674iKR9jEExnaAHS9Yw@mail.gmail.com>
References: <CAH9UVvH+Fx6otRk5BUsDfcXRFkNVarxUdamFKOpGSah2mabAZw@mail.gmail.com>
 <51EF9BF7.2060904@ia-sh.de>
 <CAH9UVvHyvYyE9_Vx7jLjaSqf1py7+ow674iKR9jEExnaAHS9Yw@mail.gmail.com>
Message-ID: <CALri7M=3gbw2A-GE+kJhuj7Bkus9tvMD5uV94YXhN7oj=kU8wg@mail.gmail.com>

On Wed, Jul 24, 2013 at 3:24 AM, Frank Bueltge <frank at bueltge.de> wrote:
> Maybe this helps other users, there search for a function to get all blogs.
> https://github.com/bueltge/WordPress-Multisite-Enhancements/blob/master/inc/autoload/core.php

Frank, nice work on the above repo.

Looks like some nice additions you've made to a multisite install. I'm
looking forward to exploring/using your code.

From frank at bueltge.de  Thu Jul 25 06:23:39 2013
From: frank at bueltge.de (Frank Bueltge)
Date: Thu, 25 Jul 2013 08:23:39 +0200
Subject: [wp-hackers] Alternative or reactivation for get_blog_info()
In-Reply-To: <CALri7M=3gbw2A-GE+kJhuj7Bkus9tvMD5uV94YXhN7oj=kU8wg@mail.gmail.com>
References: <CAH9UVvH+Fx6otRk5BUsDfcXRFkNVarxUdamFKOpGSah2mabAZw@mail.gmail.com>
 <51EF9BF7.2060904@ia-sh.de>
 <CAH9UVvHyvYyE9_Vx7jLjaSqf1py7+ow674iKR9jEExnaAHS9Yw@mail.gmail.com>
 <CALri7M=3gbw2A-GE+kJhuj7Bkus9tvMD5uV94YXhN7oj=kU8wg@mail.gmail.com>
Message-ID: <CAH9UVvFO4gfeWVdYzhLZJ2gvtjfrMVo-Kwh=1OhUmuDGOXoU=A@mail.gmail.com>

Hi Mike.
Thanks a lot for the praise.
I invite you to an improved all the code and expand.

best
Frank

On Wed, Jul 24, 2013 at 9:31 PM, Micky Hulse <mickyhulse.lists at gmail.com>wrote:

> On Wed, Jul 24, 2013 at 3:24 AM, Frank Bueltge <frank at bueltge.de> wrote:
> > Maybe this helps other users, there search for a function to get all
> blogs.
> >
> https://github.com/bueltge/WordPress-Multisite-Enhancements/blob/master/inc/autoload/core.php
>
> Frank, nice work on the above repo.
>
> Looks like some nice additions you've made to a multisite install. I'm
> looking forward to exploring/using your code.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp at andrewnacin.com  Thu Jul 25 06:37:52 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Thu, 25 Jul 2013 02:37:52 -0400
Subject: [wp-hackers] Alternative or reactivation for get_blog_info()
In-Reply-To: <51EF9BF7.2060904@ia-sh.de>
References: <CAH9UVvH+Fx6otRk5BUsDfcXRFkNVarxUdamFKOpGSah2mabAZw@mail.gmail.com>
 <51EF9BF7.2060904@ia-sh.de>
Message-ID: <CAP29PvgHzk9gitjfvzYpoOxPhs-7f8_k6AVRWAgD=6FdBzuA0A@mail.gmail.com>

On Wed, Jul 24, 2013 at 5:18 AM, Malte Witt <m.witt at ia-sh.de> wrote:

> I stumbled upon this a few days ago, too.
>
> In my opinion get_blog_list() is perfectly fine. The Codex and the source
> is just saying: "For performance reasons this function is not recommended."
> That's true for installations with thousands of blogs. But I think most
> multisite installations out there in the real world have 3 to 100 sites and
> they have a perfect valid usecase for get_blog_list().
>
> If there is a no other reason why the function is deprecated (and I can't
> see any) I would say just reactivate it and place a big warning sign in the
> Codex, that this function shouldn't be used in super-large multisite
> installations.
>
> In short: +1 for reactivation of get_blog_list().


It's really just a poorly written function. No caching, no LIMIT (but does
"limiting" with an array_slice()), hits every site's posts table, etc. This
is one of the more dangerous functions performance-wise in core (probably
the most dangerous) because of how nasty it can be. If you have thousands
of sites, you'll run out of memory. If you have hundreds of sites, it could
take a long while to run. Even if you only have a few dozen sites, if you
have large post tables, this could take a few seconds to calculate. If it
actually did a proper LIMIT for both $start and $num, it'd be a lot better
off, but it's still pretty lame.

I've always had in my head a more robust WP_Site_Query, to be modeled after
WP_User_Query, WP_Comment_Query, and WP_Query. Fully functional arguments,
proper limiting, only touching the blogs table (post count is superflous ?
query it yourself only if or when you need it), having numerous filters and
built-in caching (WP_Comment_Query does this well, IIRC), declining to do
anything when wp_is_large_network(), etc. Even though we've yet to get
around to making such a replacement, I have no regrets for us marking
get_blog_list() deprecated. What a terrible function.

Nacin

From frank at bueltge.de  Thu Jul 25 08:05:50 2013
From: frank at bueltge.de (Frank Bueltge)
Date: Thu, 25 Jul 2013 10:05:50 +0200
Subject: [wp-hackers] Alternative or reactivation for get_blog_info()
In-Reply-To: <CAP29PvgHzk9gitjfvzYpoOxPhs-7f8_k6AVRWAgD=6FdBzuA0A@mail.gmail.com>
References: <CAH9UVvH+Fx6otRk5BUsDfcXRFkNVarxUdamFKOpGSah2mabAZw@mail.gmail.com>
 <51EF9BF7.2060904@ia-sh.de>
 <CAP29PvgHzk9gitjfvzYpoOxPhs-7f8_k6AVRWAgD=6FdBzuA0A@mail.gmail.com>
Message-ID: <CAH9UVvEYxCrSsDEMtHwZsHRBfrFk0zbFNwz=MH00PWNAV=WXeA@mail.gmail.com>

Hi Nacin,

thanks for the feedback and declare the points to deprecated.
I think a Query was the best solution, useful and flexible.

But maybe it is a small chance to reduce the get_blog_list() to the
important parts, get blog list ID and not more to reduce to a fast simple
function.

Best
Frank


On Thu, Jul 25, 2013 at 8:37 AM, Andrew Nacin <wp at andrewnacin.com> wrote:

> On Wed, Jul 24, 2013 at 5:18 AM, Malte Witt <m.witt at ia-sh.de> wrote:
>
> > I stumbled upon this a few days ago, too.
> >
> > In my opinion get_blog_list() is perfectly fine. The Codex and the source
> > is just saying: "For performance reasons this function is not
> recommended."
> > That's true for installations with thousands of blogs. But I think most
> > multisite installations out there in the real world have 3 to 100 sites
> and
> > they have a perfect valid usecase for get_blog_list().
> >
> > If there is a no other reason why the function is deprecated (and I can't
> > see any) I would say just reactivate it and place a big warning sign in
> the
> > Codex, that this function shouldn't be used in super-large multisite
> > installations.
> >
> > In short: +1 for reactivation of get_blog_list().
>
>
> It's really just a poorly written function. No caching, no LIMIT (but does
> "limiting" with an array_slice()), hits every site's posts table, etc. This
> is one of the more dangerous functions performance-wise in core (probably
> the most dangerous) because of how nasty it can be. If you have thousands
> of sites, you'll run out of memory. If you have hundreds of sites, it could
> take a long while to run. Even if you only have a few dozen sites, if you
> have large post tables, this could take a few seconds to calculate. If it
> actually did a proper LIMIT for both $start and $num, it'd be a lot better
> off, but it's still pretty lame.
>
> I've always had in my head a more robust WP_Site_Query, to be modeled after
> WP_User_Query, WP_Comment_Query, and WP_Query. Fully functional arguments,
> proper limiting, only touching the blogs table (post count is superflous ?
> query it yourself only if or when you need it), having numerous filters and
> built-in caching (WP_Comment_Query does this well, IIRC), declining to do
> anything when wp_is_large_network(), etc. Even though we've yet to get
> around to making such a replacement, I have no regrets for us marking
> get_blog_list() deprecated. What a terrible function.
>
> Nacin
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From patty at ayersvirtual.com  Fri Jul 26 13:26:36 2013
From: patty at ayersvirtual.com (Patty Ayers)
Date: Fri, 26 Jul 2013 09:26:36 -0400
Subject: [wp-hackers] Advice on possible malware affecting multiple sites on
 same server
Message-ID: <CADR_XNzGF7A4aG83w++4KN4Hww7tuuvMakkkCRN-4VehO27pbg@mail.gmail.com>

If this isn't appropriate for this list, I apologize, but I'm not sure
where to turn and I know there are experts here. Any advice will be much
appreciated.

I have a shared server with about 20 WordPress sites. Yesterday, on one
site, an issue appeared in the Media Uploader: the selection of sized
images is created, but does not show up as available for inserting. Only
the largest size shows up.

I troubleshot that site's issue, but then gradually discovered that the
exact same issue is appearing on every one of my WordPress sites.

I have tried de-activating all plugins and reverting to the default theme,
and the issue persists. The sites don't have anything in common except for
WordPress itself and being on the same shared server.

What is the best way to proceed in this situation? Thanks very much in
advance for any help.

Best,

Patty

From nikolov.tmw at gmail.com  Fri Jul 26 13:48:38 2013
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Fri, 26 Jul 2013 16:48:38 +0300
Subject: [wp-hackers] Advice on possible malware affecting multiple
 sites on same server
In-Reply-To: <CADR_XNzGF7A4aG83w++4KN4Hww7tuuvMakkkCRN-4VehO27pbg@mail.gmail.com>
References: <CADR_XNzGF7A4aG83w++4KN4Hww7tuuvMakkkCRN-4VehO27pbg@mail.gmail.com>
Message-ID: <CAOwx47eCD-Wtk3VKbDHdAshpHZicYCnLJq0p9p31yzSRtp_aQQ@mail.gmail.com>

Can you check if the other sizes are actually created on the server? Go to
the uploads( /wp-content/uploads/mm/yyyy ) directory and see if you get
multiple files with similar names for each upload that you make. It's
possible that the other sizes are simply not created(I'm not sure what
would cause that but I assume it could be some server configuration issue).

That's the first thing I can think of.


On Fri, Jul 26, 2013 at 4:26 PM, Patty Ayers <patty at ayersvirtual.com> wrote:

> If this isn't appropriate for this list, I apologize, but I'm not sure
> where to turn and I know there are experts here. Any advice will be much
> appreciated.
>
> I have a shared server with about 20 WordPress sites. Yesterday, on one
> site, an issue appeared in the Media Uploader: the selection of sized
> images is created, but does not show up as available for inserting. Only
> the largest size shows up.
>
> I troubleshot that site's issue, but then gradually discovered that the
> exact same issue is appearing on every one of my WordPress sites.
>
> I have tried de-activating all plugins and reverting to the default theme,
> and the issue persists. The sites don't have anything in common except for
> WordPress itself and being on the same shared server.
>
> What is the best way to proceed in this situation? Thanks very much in
> advance for any help.
>
> Best,
>
> Patty
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From info at a5d.org  Fri Jul 26 13:50:33 2013
From: info at a5d.org (A5D)
Date: Fri, 26 Jul 2013 14:50:33 +0100
Subject: [wp-hackers] Advice on possible malware affecting multiple
	sites on same server
In-Reply-To: <CAOwx47eCD-Wtk3VKbDHdAshpHZicYCnLJq0p9p31yzSRtp_aQQ@mail.gmail.com>
References: <CADR_XNzGF7A4aG83w++4KN4Hww7tuuvMakkkCRN-4VehO27pbg@mail.gmail.com>
 <CAOwx47eCD-Wtk3VKbDHdAshpHZicYCnLJq0p9p31yzSRtp_aQQ@mail.gmail.com>
Message-ID: <E5FE0C81-827B-4AF3-8A57-CFAC16ADD9CF@a5d.org>

Possibly try running Regenerate Thumbnails:
http://wordpress.org/plugins/regenerate-thumbnails/

Lee


On 26 Jul 2013, at 14:48, Nikola Nikolov wrote:

> Can you check if the other sizes are actually created on the server? Go to
> the uploads( /wp-content/uploads/mm/yyyy ) directory and see if you get
> multiple files with similar names for each upload that you make. It's
> possible that the other sizes are simply not created(I'm not sure what
> would cause that but I assume it could be some server configuration issue).
> 
> That's the first thing I can think of.
> 
> 
> On Fri, Jul 26, 2013 at 4:26 PM, Patty Ayers <patty at ayersvirtual.com> wrote:
> 
>> If this isn't appropriate for this list, I apologize, but I'm not sure
>> where to turn and I know there are experts here. Any advice will be much
>> appreciated.
>> 
>> I have a shared server with about 20 WordPress sites. Yesterday, on one
>> site, an issue appeared in the Media Uploader: the selection of sized
>> images is created, but does not show up as available for inserting. Only
>> the largest size shows up.
>> 
>> I troubleshot that site's issue, but then gradually discovered that the
>> exact same issue is appearing on every one of my WordPress sites.
>> 
>> I have tried de-activating all plugins and reverting to the default theme,
>> and the issue persists. The sites don't have anything in common except for
>> WordPress itself and being on the same shared server.
>> 
>> What is the best way to proceed in this situation? Thanks very much in
>> advance for any help.
>> 
>> Best,
>> 
>> Patty
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From patty at ayersvirtual.com  Fri Jul 26 13:57:00 2013
From: patty at ayersvirtual.com (Patty Ayers)
Date: Fri, 26 Jul 2013 09:57:00 -0400
Subject: [wp-hackers] Advice on possible malware affecting multiple
 sites on same server
In-Reply-To: <CAOwx47eCD-Wtk3VKbDHdAshpHZicYCnLJq0p9p31yzSRtp_aQQ@mail.gmail.com>
References: <CADR_XNzGF7A4aG83w++4KN4Hww7tuuvMakkkCRN-4VehO27pbg@mail.gmail.com>
 <CAOwx47eCD-Wtk3VKbDHdAshpHZicYCnLJq0p9p31yzSRtp_aQQ@mail.gmail.com>
Message-ID: <CADR_XNz957UshJMUz5Mir+Germs-=OGbxFxjZWkPMH3YMhByKg@mail.gmail.com>

Nikola, thank you - they *are* created - I can see them on the server - but
they don't appear in the drop-down list for insertion.

Patty

On Fri, Jul 26, 2013 at 9:48 AM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> Can you check if the other sizes are actually created on the server? Go to
> the uploads( /wp-content/uploads/mm/yyyy ) directory and see if you get
> multiple files with similar names for each upload that you make. It's
> possible that the other sizes are simply not created(I'm not sure what
> would cause that but I assume it could be some server configuration issue).
>
> That's the first thing I can think of.
>
>
> On Fri, Jul 26, 2013 at 4:26 PM, Patty Ayers <patty at ayersvirtual.com>
> wrote:
>
> > If this isn't appropriate for this list, I apologize, but I'm not sure
> > where to turn and I know there are experts here. Any advice will be much
> > appreciated.
> >
> > I have a shared server with about 20 WordPress sites. Yesterday, on one
> > site, an issue appeared in the Media Uploader: the selection of sized
> > images is created, but does not show up as available for inserting. Only
> > the largest size shows up.
> >
> > I troubleshot that site's issue, but then gradually discovered that the
> > exact same issue is appearing on every one of my WordPress sites.
> >
> > I have tried de-activating all plugins and reverting to the default
> theme,
> > and the issue persists. The sites don't have anything in common except
> for
> > WordPress itself and being on the same shared server.
> >
> > What is the best way to proceed in this situation? Thanks very much in
> > advance for any help.
> >
> > Best,
> >
> > Patty
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From patty at ayersvirtual.com  Fri Jul 26 13:58:06 2013
From: patty at ayersvirtual.com (Patty Ayers)
Date: Fri, 26 Jul 2013 09:58:06 -0400
Subject: [wp-hackers] Advice on possible malware affecting multiple
 sites on same server
In-Reply-To: <E5FE0C81-827B-4AF3-8A57-CFAC16ADD9CF@a5d.org>
References: <CADR_XNzGF7A4aG83w++4KN4Hww7tuuvMakkkCRN-4VehO27pbg@mail.gmail.com>
 <CAOwx47eCD-Wtk3VKbDHdAshpHZicYCnLJq0p9p31yzSRtp_aQQ@mail.gmail.com>
 <E5FE0C81-827B-4AF3-8A57-CFAC16ADD9CF@a5d.org>
Message-ID: <CADR_XNxtAoP1HCo2ivBZsP3szuC66eZNhRv-h64o54tBakAdJw@mail.gmail.com>

Ok, and thank you - but it seems like there must be something affecting
*all* of the sites, doesn't it?

Patty

On Fri, Jul 26, 2013 at 9:50 AM, A5D <info at a5d.org> wrote:

> Possibly try running Regenerate Thumbnails:
> http://wordpress.org/plugins/regenerate-thumbnails/
>
> Lee
>
>
> On 26 Jul 2013, at 14:48, Nikola Nikolov wrote:
>
> > Can you check if the other sizes are actually created on the server? Go
> to
> > the uploads( /wp-content/uploads/mm/yyyy ) directory and see if you get
> > multiple files with similar names for each upload that you make. It's
> > possible that the other sizes are simply not created(I'm not sure what
> > would cause that but I assume it could be some server configuration
> issue).
> >
> > That's the first thing I can think of.
> >
> >
> > On Fri, Jul 26, 2013 at 4:26 PM, Patty Ayers <patty at ayersvirtual.com>
> wrote:
> >
> >> If this isn't appropriate for this list, I apologize, but I'm not sure
> >> where to turn and I know there are experts here. Any advice will be much
> >> appreciated.
> >>
> >> I have a shared server with about 20 WordPress sites. Yesterday, on one
> >> site, an issue appeared in the Media Uploader: the selection of sized
> >> images is created, but does not show up as available for inserting. Only
> >> the largest size shows up.
> >>
> >> I troubleshot that site's issue, but then gradually discovered that the
> >> exact same issue is appearing on every one of my WordPress sites.
> >>
> >> I have tried de-activating all plugins and reverting to the default
> theme,
> >> and the issue persists. The sites don't have anything in common except
> for
> >> WordPress itself and being on the same shared server.
> >>
> >> What is the best way to proceed in this situation? Thanks very much in
> >> advance for any help.
> >>
> >> Best,
> >>
> >> Patty
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From patty at ayersvirtual.com  Fri Jul 26 17:43:22 2013
From: patty at ayersvirtual.com (Patty Ayers)
Date: Fri, 26 Jul 2013 13:43:22 -0400
Subject: [wp-hackers] Advice on possible malware affecting multiple
 sites on same server
In-Reply-To: <CADR_XNxtAoP1HCo2ivBZsP3szuC66eZNhRv-h64o54tBakAdJw@mail.gmail.com>
References: <CADR_XNzGF7A4aG83w++4KN4Hww7tuuvMakkkCRN-4VehO27pbg@mail.gmail.com>
 <CAOwx47eCD-Wtk3VKbDHdAshpHZicYCnLJq0p9p31yzSRtp_aQQ@mail.gmail.com>
 <E5FE0C81-827B-4AF3-8A57-CFAC16ADD9CF@a5d.org>
 <CADR_XNxtAoP1HCo2ivBZsP3szuC66eZNhRv-h64o54tBakAdJw@mail.gmail.com>
Message-ID: <CADR_XNwqQBvF3NW5t=7sZMUQodus+z04mpd8RbxLhN5v2paAZw@mail.gmail.com>

An update on this: I figured out that the problem is *only* with GIF
images. It happens 100% of the time with GIFs, and zero with other image
files. And it happens on every site on my hosting account. A colleague
suggested that I ask my host if they could check on the configuration of
the GD Library, which could cause something like this, he says. I've asked,
so will see what they say.

Thanks again, all - I'll let you know if I figure this out.

Patty



> On Fri, Jul 26, 2013 at 9:50 AM, A5D <info at a5d.org> wrote:
>
>> Possibly try running Regenerate Thumbnails:
>> http://wordpress.org/plugins/regenerate-thumbnails/
>>
>> Lee
>>
>>
>> On 26 Jul 2013, at 14:48, Nikola Nikolov wrote:
>>
>> > Can you check if the other sizes are actually created on the server? Go
>> to
>> > the uploads( /wp-content/uploads/mm/yyyy ) directory and see if you get
>> > multiple files with similar names for each upload that you make. It's
>> > possible that the other sizes are simply not created(I'm not sure what
>> > would cause that but I assume it could be some server configuration
>> issue).
>> >
>> > That's the first thing I can think of.
>> >
>> >
>> > On Fri, Jul 26, 2013 at 4:26 PM, Patty Ayers <patty at ayersvirtual.com>
>> wrote:
>> >
>> >> If this isn't appropriate for this list, I apologize, but I'm not sure
>> >> where to turn and I know there are experts here. Any advice will be
>> much
>> >> appreciated.
>> >>
>> >> I have a shared server with about 20 WordPress sites. Yesterday, on one
>> >> site, an issue appeared in the Media Uploader: the selection of sized
>> >> images is created, but does not show up as available for inserting.
>> Only
>> >> the largest size shows up.
>> >>
>> >> I troubleshot that site's issue, but then gradually discovered that the
>> >> exact same issue is appearing on every one of my WordPress sites.
>> >>
>> >> I have tried de-activating all plugins and reverting to the default
>> theme,
>> >> and the issue persists. The sites don't have anything in common except
>> for
>> >> WordPress itself and being on the same shared server.
>> >>
>> >> What is the best way to proceed in this situation? Thanks very much in
>> >> advance for any help.
>> >>
>> >> Best,
>> >>
>> >> Patty
>> >> _______________________________________________
>> >> wp-hackers mailing list
>> >> wp-hackers at lists.automattic.com
>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >>
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>

From otto at ottodestruct.com  Fri Jul 26 17:50:02 2013
From: otto at ottodestruct.com (Otto)
Date: Fri, 26 Jul 2013 12:50:02 -0500
Subject: [wp-hackers] Advice on possible malware affecting multiple
 sites on same server
In-Reply-To: <CADR_XNwqQBvF3NW5t=7sZMUQodus+z04mpd8RbxLhN5v2paAZw@mail.gmail.com>
References: <CADR_XNzGF7A4aG83w++4KN4Hww7tuuvMakkkCRN-4VehO27pbg@mail.gmail.com>
 <CAOwx47eCD-Wtk3VKbDHdAshpHZicYCnLJq0p9p31yzSRtp_aQQ@mail.gmail.com>
 <E5FE0C81-827B-4AF3-8A57-CFAC16ADD9CF@a5d.org>
 <CADR_XNxtAoP1HCo2ivBZsP3szuC66eZNhRv-h64o54tBakAdJw@mail.gmail.com>
 <CADR_XNwqQBvF3NW5t=7sZMUQodus+z04mpd8RbxLhN5v2paAZw@mail.gmail.com>
Message-ID: <CAD-FghzWa4=Hz8Y3k0QZfRfTUGFYVF2UgrbZK1w2wdYs6fPdGQ@mail.gmail.com>

Check the color settings of the image file.

I've seen installs of GD that are unable to cope with indexed color
images, changing them to 24 or 32-bit RGB images fixed the problem.
This most commonly appears when the images are black and white, but
any indexed color image can cause the issue.

Converting the images to PNG files with full-color before uploading
them is probably the simplest solution.

-Otto



On Fri, Jul 26, 2013 at 12:43 PM, Patty Ayers <patty at ayersvirtual.com> wrote:
> An update on this: I figured out that the problem is *only* with GIF
> images. It happens 100% of the time with GIFs, and zero with other image
> files. And it happens on every site on my hosting account. A colleague
> suggested that I ask my host if they could check on the configuration of
> the GD Library, which could cause something like this, he says. I've asked,
> so will see what they say.
>
> Thanks again, all - I'll let you know if I figure this out.
>
> Patty
>
>
>
>> On Fri, Jul 26, 2013 at 9:50 AM, A5D <info at a5d.org> wrote:
>>
>>> Possibly try running Regenerate Thumbnails:
>>> http://wordpress.org/plugins/regenerate-thumbnails/
>>>
>>> Lee
>>>
>>>
>>> On 26 Jul 2013, at 14:48, Nikola Nikolov wrote:
>>>
>>> > Can you check if the other sizes are actually created on the server? Go
>>> to
>>> > the uploads( /wp-content/uploads/mm/yyyy ) directory and see if you get
>>> > multiple files with similar names for each upload that you make. It's
>>> > possible that the other sizes are simply not created(I'm not sure what
>>> > would cause that but I assume it could be some server configuration
>>> issue).
>>> >
>>> > That's the first thing I can think of.
>>> >
>>> >
>>> > On Fri, Jul 26, 2013 at 4:26 PM, Patty Ayers <patty at ayersvirtual.com>
>>> wrote:
>>> >
>>> >> If this isn't appropriate for this list, I apologize, but I'm not sure
>>> >> where to turn and I know there are experts here. Any advice will be
>>> much
>>> >> appreciated.
>>> >>
>>> >> I have a shared server with about 20 WordPress sites. Yesterday, on one
>>> >> site, an issue appeared in the Media Uploader: the selection of sized
>>> >> images is created, but does not show up as available for inserting.
>>> Only
>>> >> the largest size shows up.
>>> >>
>>> >> I troubleshot that site's issue, but then gradually discovered that the
>>> >> exact same issue is appearing on every one of my WordPress sites.
>>> >>
>>> >> I have tried de-activating all plugins and reverting to the default
>>> theme,
>>> >> and the issue persists. The sites don't have anything in common except
>>> for
>>> >> WordPress itself and being on the same shared server.
>>> >>
>>> >> What is the best way to proceed in this situation? Thanks very much in
>>> >> advance for any help.
>>> >>
>>> >> Best,
>>> >>
>>> >> Patty
>>> >> _______________________________________________
>>> >> wp-hackers mailing list
>>> >> wp-hackers at lists.automattic.com
>>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> >>
>>> > _______________________________________________
>>> > wp-hackers mailing list
>>> > wp-hackers at lists.automattic.com
>>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From patty at ayersvirtual.com  Fri Jul 26 18:39:30 2013
From: patty at ayersvirtual.com (Patty Ayers)
Date: Fri, 26 Jul 2013 14:39:30 -0400
Subject: [wp-hackers] Advice on possible malware affecting multiple
 sites on same server
In-Reply-To: <CAD-FghzWa4=Hz8Y3k0QZfRfTUGFYVF2UgrbZK1w2wdYs6fPdGQ@mail.gmail.com>
References: <CADR_XNzGF7A4aG83w++4KN4Hww7tuuvMakkkCRN-4VehO27pbg@mail.gmail.com>
 <CAOwx47eCD-Wtk3VKbDHdAshpHZicYCnLJq0p9p31yzSRtp_aQQ@mail.gmail.com>
 <E5FE0C81-827B-4AF3-8A57-CFAC16ADD9CF@a5d.org>
 <CADR_XNxtAoP1HCo2ivBZsP3szuC66eZNhRv-h64o54tBakAdJw@mail.gmail.com>
 <CADR_XNwqQBvF3NW5t=7sZMUQodus+z04mpd8RbxLhN5v2paAZw@mail.gmail.com>
 <CAD-FghzWa4=Hz8Y3k0QZfRfTUGFYVF2UgrbZK1w2wdYs6fPdGQ@mail.gmail.com>
Message-ID: <CADR_XNyOxBhwJCTCsir=fWe3u+oWKUnAgWiWi0Y=dynfeHJzbw@mail.gmail.com>

Hm, really, ok. I can certainly do that. Might be a problem for my clients
at times, but then again, nobody's using GIFs all that much anyway.

So that would be caused by settings on the server, sounds like.

Thanks, very helpful -

Patty

On Fri, Jul 26, 2013 at 1:50 PM, Otto <otto at ottodestruct.com> wrote:

> Check the color settings of the image file.
>
> I've seen installs of GD that are unable to cope with indexed color
> images, changing them to 24 or 32-bit RGB images fixed the problem.
> This most commonly appears when the images are black and white, but
> any indexed color image can cause the issue.
>
> Converting the images to PNG files with full-color before uploading
> them is probably the simplest solution.
>
> -Otto
>
>
>
> On Fri, Jul 26, 2013 at 12:43 PM, Patty Ayers <patty at ayersvirtual.com>
> wrote:
> > An update on this: I figured out that the problem is *only* with GIF
> > images. It happens 100% of the time with GIFs, and zero with other image
> > files. And it happens on every site on my hosting account. A colleague
> > suggested that I ask my host if they could check on the configuration of
> > the GD Library, which could cause something like this, he says. I've
> asked,
> > so will see what they say.
> >
> > Thanks again, all - I'll let you know if I figure this out.
> >
> > Patty
> >
> >
> >
> >> On Fri, Jul 26, 2013 at 9:50 AM, A5D <info at a5d.org> wrote:
> >>
> >>> Possibly try running Regenerate Thumbnails:
> >>> http://wordpress.org/plugins/regenerate-thumbnails/
> >>>
> >>> Lee
> >>>
> >>>
> >>> On 26 Jul 2013, at 14:48, Nikola Nikolov wrote:
> >>>
> >>> > Can you check if the other sizes are actually created on the server?
> Go
> >>> to
> >>> > the uploads( /wp-content/uploads/mm/yyyy ) directory and see if you
> get
> >>> > multiple files with similar names for each upload that you make. It's
> >>> > possible that the other sizes are simply not created(I'm not sure
> what
> >>> > would cause that but I assume it could be some server configuration
> >>> issue).
> >>> >
> >>> > That's the first thing I can think of.
> >>> >
> >>> >
> >>> > On Fri, Jul 26, 2013 at 4:26 PM, Patty Ayers <patty at ayersvirtual.com
> >
> >>> wrote:
> >>> >
> >>> >> If this isn't appropriate for this list, I apologize, but I'm not
> sure
> >>> >> where to turn and I know there are experts here. Any advice will be
> >>> much
> >>> >> appreciated.
> >>> >>
> >>> >> I have a shared server with about 20 WordPress sites. Yesterday, on
> one
> >>> >> site, an issue appeared in the Media Uploader: the selection of
> sized
> >>> >> images is created, but does not show up as available for inserting.
> >>> Only
> >>> >> the largest size shows up.
> >>> >>
> >>> >> I troubleshot that site's issue, but then gradually discovered that
> the
> >>> >> exact same issue is appearing on every one of my WordPress sites.
> >>> >>
> >>> >> I have tried de-activating all plugins and reverting to the default
> >>> theme,
> >>> >> and the issue persists. The sites don't have anything in common
> except
> >>> for
> >>> >> WordPress itself and being on the same shared server.
> >>> >>
> >>> >> What is the best way to proceed in this situation? Thanks very much
> in
> >>> >> advance for any help.
> >>> >>
> >>> >> Best,
> >>> >>
> >>> >> Patty
> >>> >> _______________________________________________
> >>> >> wp-hackers mailing list
> >>> >> wp-hackers at lists.automattic.com
> >>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>> >>
> >>> > _______________________________________________
> >>> > wp-hackers mailing list
> >>> > wp-hackers at lists.automattic.com
> >>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >>
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From webservices at slingshot.co.nz  Fri Jul 26 19:34:50 2013
From: webservices at slingshot.co.nz (Duncan O'Neill)
Date: Sat, 27 Jul 2013 07:34:50 +1200
Subject: [wp-hackers] MultiSite Localhost subdomain redirect issue
Message-ID: <51F2CF5A.7000800@slingshot.co.nz>

Hi all,

I know this is a well-chewed over topic, but despite trawling forums 
over days, I haven't been able to find a topic which gives me an answer.
I've also posted this on the WordPress forums, but received no replies.

I've set up multisite on localhost on Windows using XAMPP.

The problem is a redirect loop when I try to login to my sub-domain 
dashboards. I can see the test sites themselves at test.xp-home, and 
test2.xp-home, etc. I can login to the main dashboard at xp-home.

Up until this, I'd just been doing separate installs for each build, and 
adding the subdomain to httpd-vhosts.conf, and editing my hosts file. 
That's worked fine, but I'm trying to streamline things so that I can 
manage plugins and themes centrally.

This is a sample of my hosts file;

( xp-home is the name of my local machine )

============================
127.0.0.1 localhost
.
127.0.0.1 xp-home
.
.
127.0.0.1 test.xp-home
127.0.0.1 test2.xp-home
=============================

This is my .htaccess file under the web root;

================================
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]

# add a trailing slash to /wp-admin
RewriteRule ^wp-admin$ wp-admin/ [R=301,L]

RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]
RewriteRule ^(wp-(content|admin|includes).*) $1 [L]
RewriteRule ^(.*\.php)$ wp/$1 [L]
RewriteRule . index.php [L]
==================================

This is a sample of my vhosts file;

====================================
<VirtualHost *:80>
DocumentRoot "C:/Users/admin/Documents/web"
ServerName xp-home
#ServerAlias xp-home *.xp-home
<Directory "C:/Users/admin/Documents/web">
AllowOverride All
Options +MultiViews +FollowSymLinks
</Directory>
ErrorLog logs/error.log
CustomLog logs/access.log combined
</VirtualHost>
====================================

and at the bottom....

====================================
<VirtualHost *:80>
DocumentRoot "C:/Users/admin/Documents/web"
ServerAlias *.xp-home
ErrorLog logs/error.log
CustomLog logs/access.log combined
</VirtualHost>
======================================

Can someone please point out what I'm doing wrong here?

Many thanks in advance,

-- 
Duncan O'Neill
http://urbanlegendweb.co.nz/
mob:+64 27 385 8086
skype: maxwell_s

From wp-hackers at zipsbazaar.co.uk  Fri Jul 26 21:23:57 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Fri, 26 Jul 2013 22:23:57 +0100
Subject: [wp-hackers] MultiSite Localhost subdomain redirect issue
In-Reply-To: <51F2CF5A.7000800@slingshot.co.nz>
References: <51F2CF5A.7000800@slingshot.co.nz>
Message-ID: <51F2E8ED.5040000@zipsbazaar.co.uk>

On 26/07/2013 20:34, Duncan O'Neill wrote:
> RewriteRule ^wp-admin$ wp-admin/ [R=301,L] 

Try:

RewriteRule ^wp-admin$ /wp-admin/ [R=301,L]

Leading slash on the target.

-- 
Jeff Morris
Kent, UK.


From otto at ottodestruct.com  Fri Jul 26 21:38:51 2013
From: otto at ottodestruct.com (Otto)
Date: Fri, 26 Jul 2013 16:38:51 -0500
Subject: [wp-hackers] Advice on possible malware affecting multiple
 sites on same server
In-Reply-To: <CADR_XNyOxBhwJCTCsir=fWe3u+oWKUnAgWiWi0Y=dynfeHJzbw@mail.gmail.com>
References: <CADR_XNzGF7A4aG83w++4KN4Hww7tuuvMakkkCRN-4VehO27pbg@mail.gmail.com>
 <CAOwx47eCD-Wtk3VKbDHdAshpHZicYCnLJq0p9p31yzSRtp_aQQ@mail.gmail.com>
 <E5FE0C81-827B-4AF3-8A57-CFAC16ADD9CF@a5d.org>
 <CADR_XNxtAoP1HCo2ivBZsP3szuC66eZNhRv-h64o54tBakAdJw@mail.gmail.com>
 <CADR_XNwqQBvF3NW5t=7sZMUQodus+z04mpd8RbxLhN5v2paAZw@mail.gmail.com>
 <CAD-FghzWa4=Hz8Y3k0QZfRfTUGFYVF2UgrbZK1w2wdYs6fPdGQ@mail.gmail.com>
 <CADR_XNyOxBhwJCTCsir=fWe3u+oWKUnAgWiWi0Y=dynfeHJzbw@mail.gmail.com>
Message-ID: <CAD-FghxBYtcZYxr9bCWpkZGGMWiVOqtsVHB+gbfzjCiS3NTt9Q@mail.gmail.com>

On Fri, Jul 26, 2013 at 1:39 PM, Patty Ayers <patty at ayersvirtual.com> wrote:
> Hm, really, ok. I can certainly do that. Might be a problem for my clients
> at times, but then again, nobody's using GIFs all that much anyway.
>
> So that would be caused by settings on the server, sounds like.

Yes and no... it's caused by the particular version of GD running on
the machine and the support it has for various images. GD is an older
image library.

WordPress 3.6 will support an alternate library called "ImageMagick",
if your server has that installed and enabled. However, you may not
have that and thus won't see any change if not.

-Otto

From cheeks at swcp.com  Fri Jul 26 21:47:13 2013
From: cheeks at swcp.com (Mark Costlow)
Date: Fri, 26 Jul 2013 15:47:13 -0600
Subject: [wp-hackers] Advice on possible malware affecting multiple
	sites on same server
In-Reply-To: <CAD-FghxBYtcZYxr9bCWpkZGGMWiVOqtsVHB+gbfzjCiS3NTt9Q@mail.gmail.com>
References: <CADR_XNzGF7A4aG83w++4KN4Hww7tuuvMakkkCRN-4VehO27pbg@mail.gmail.com>
 <CAOwx47eCD-Wtk3VKbDHdAshpHZicYCnLJq0p9p31yzSRtp_aQQ@mail.gmail.com>
 <E5FE0C81-827B-4AF3-8A57-CFAC16ADD9CF@a5d.org>
 <CADR_XNxtAoP1HCo2ivBZsP3szuC66eZNhRv-h64o54tBakAdJw@mail.gmail.com>
 <CADR_XNwqQBvF3NW5t=7sZMUQodus+z04mpd8RbxLhN5v2paAZw@mail.gmail.com>
 <CAD-FghzWa4=Hz8Y3k0QZfRfTUGFYVF2UgrbZK1w2wdYs6fPdGQ@mail.gmail.com>
 <CADR_XNyOxBhwJCTCsir=fWe3u+oWKUnAgWiWi0Y=dynfeHJzbw@mail.gmail.com>
 <CAD-FghxBYtcZYxr9bCWpkZGGMWiVOqtsVHB+gbfzjCiS3NTt9Q@mail.gmail.com>
Message-ID: <20130726214713.GA12053@risu.swcp.com>

On Fri, Jul 26, 2013 at 04:38:51PM -0500, Otto wrote:
> On Fri, Jul 26, 2013 at 1:39 PM, Patty Ayers <patty at ayersvirtual.com> wrote:
> > Hm, really, ok. I can certainly do that. Might be a problem for my clients
> > at times, but then again, nobody's using GIFs all that much anyway.
> >
> > So that would be caused by settings on the server, sounds like.
> 
> Yes and no... it's caused by the particular version of GD running on
> the machine and the support it has for various images. GD is an older
> image library.
> 
> WordPress 3.6 will support an alternate library called "ImageMagick",
> if your server has that installed and enabled. However, you may not
> have that and thus won't see any change if not.

You might check to see the admin of that server did an update.  If 
PHP got recompiled it may have been done with different configuration
flags or a different set of libraries.

Mark
-- 
Mark Costlow    | Southwest Cyberport | Fax:   +1-505-232-7975
cheeks at swcp.com | Web:   www.swcp.com | Voice: +1-505-232-7992

Mail Minder - Intelligent Push Notifications for Email on the iPhone
http://mailminderapp.com/download  or in the App Store


From webservices at slingshot.co.nz  Fri Jul 26 22:55:53 2013
From: webservices at slingshot.co.nz (Duncan O'Neill)
Date: Sat, 27 Jul 2013 10:55:53 +1200
Subject: [wp-hackers] MultiSite Localhost subdomain redirect issue
In-Reply-To: <51F2E8ED.5040000@zipsbazaar.co.uk>
References: <51F2CF5A.7000800@slingshot.co.nz>
 <51F2E8ED.5040000@zipsbazaar.co.uk>
Message-ID: <51F2FE79.8090507@slingshot.co.nz>

On 27/07/2013 9:23 a.m., Jeff Morris wrote:
> On 26/07/2013 20:34, Duncan O'Neill wrote:
>> RewriteRule ^wp-admin$ wp-admin/ [R=301,L]
>
> Try:
>
> RewriteRule ^wp-admin$ /wp-admin/ [R=301,L]
>
> Leading slash on the target.
>

Hi Jeff,

thanks for taking the time to help.

I tried the changing the rewrite rule as you suggest,
but same problem.

Any more / other suggestions gratefully received.

best,

-- 
Duncan O'Neill
http://urbanlegendweb.co.nz/
mob:+64 27 385 8086
skype: maxwell_s

From patty at ayersvirtual.com  Fri Jul 26 23:24:26 2013
From: patty at ayersvirtual.com (Patty Ayers)
Date: Fri, 26 Jul 2013 19:24:26 -0400
Subject: [wp-hackers] Advice on possible malware affecting multiple
 sites on same server
In-Reply-To: <CAD-FghxBYtcZYxr9bCWpkZGGMWiVOqtsVHB+gbfzjCiS3NTt9Q@mail.gmail.com>
References: <CADR_XNzGF7A4aG83w++4KN4Hww7tuuvMakkkCRN-4VehO27pbg@mail.gmail.com>
 <CAOwx47eCD-Wtk3VKbDHdAshpHZicYCnLJq0p9p31yzSRtp_aQQ@mail.gmail.com>
 <E5FE0C81-827B-4AF3-8A57-CFAC16ADD9CF@a5d.org>
 <CADR_XNxtAoP1HCo2ivBZsP3szuC66eZNhRv-h64o54tBakAdJw@mail.gmail.com>
 <CADR_XNwqQBvF3NW5t=7sZMUQodus+z04mpd8RbxLhN5v2paAZw@mail.gmail.com>
 <CAD-FghzWa4=Hz8Y3k0QZfRfTUGFYVF2UgrbZK1w2wdYs6fPdGQ@mail.gmail.com>
 <CADR_XNyOxBhwJCTCsir=fWe3u+oWKUnAgWiWi0Y=dynfeHJzbw@mail.gmail.com>
 <CAD-FghxBYtcZYxr9bCWpkZGGMWiVOqtsVHB+gbfzjCiS3NTt9Q@mail.gmail.com>
Message-ID: <CADR_XNxRD4gV+=ab8gM1CjTvvy9xELZbb+_y3wx4cTVK9QHcNA@mail.gmail.com>

On Fri, Jul 26, 2013 at 5:38 PM, Otto <otto at ottodestruct.com> wrote:

> On Fri, Jul 26, 2013 at 1:39 PM, Patty Ayers <patty at ayersvirtual.com>
> wrote:
> > Hm, really, ok. I can certainly do that. Might be a problem for my
> clients
> > at times, but then again, nobody's using GIFs all that much anyway.
> >
> > So that would be caused by settings on the server, sounds like.
>
> Yes and no... it's caused by the particular version of GD running on
> the machine and the support it has for various images. GD is an older
> image library.
>
> WordPress 3.6 will support an alternate library called "ImageMagick",
> if your server has that installed and enabled. However, you may not
> have that and thus won't see any change if not.
>
> -Otto
>

Ah, ok, that helps. This is new to me. Thanks, Otto.

Patty

From patty at ayersvirtual.com  Fri Jul 26 23:26:28 2013
From: patty at ayersvirtual.com (Patty Ayers)
Date: Fri, 26 Jul 2013 19:26:28 -0400
Subject: [wp-hackers] Advice on possible malware affecting multiple
 sites on same server
In-Reply-To: <20130726214713.GA12053@risu.swcp.com>
References: <CADR_XNzGF7A4aG83w++4KN4Hww7tuuvMakkkCRN-4VehO27pbg@mail.gmail.com>
 <CAOwx47eCD-Wtk3VKbDHdAshpHZicYCnLJq0p9p31yzSRtp_aQQ@mail.gmail.com>
 <E5FE0C81-827B-4AF3-8A57-CFAC16ADD9CF@a5d.org>
 <CADR_XNxtAoP1HCo2ivBZsP3szuC66eZNhRv-h64o54tBakAdJw@mail.gmail.com>
 <CADR_XNwqQBvF3NW5t=7sZMUQodus+z04mpd8RbxLhN5v2paAZw@mail.gmail.com>
 <CAD-FghzWa4=Hz8Y3k0QZfRfTUGFYVF2UgrbZK1w2wdYs6fPdGQ@mail.gmail.com>
 <CADR_XNyOxBhwJCTCsir=fWe3u+oWKUnAgWiWi0Y=dynfeHJzbw@mail.gmail.com>
 <CAD-FghxBYtcZYxr9bCWpkZGGMWiVOqtsVHB+gbfzjCiS3NTt9Q@mail.gmail.com>
 <20130726214713.GA12053@risu.swcp.com>
Message-ID: <CADR_XNxdLUpPTnY1jAZ4i-iNL1K9YTrT7f=rcVBmi3aWK3bCWA@mail.gmail.com>

On Fri, Jul 26, 2013 at 5:47 PM, Mark Costlow <cheeks at swcp.com> wrote:

> On Fri, Jul 26, 2013 at 04:38:51PM -0500, Otto wrote:
> > On Fri, Jul 26, 2013 at 1:39 PM, Patty Ayers <patty at ayersvirtual.com>
> wrote:
> > > Hm, really, ok. I can certainly do that. Might be a problem for my
> clients
> > > at times, but then again, nobody's using GIFs all that much anyway.
> > >
> > > So that would be caused by settings on the server, sounds like.
> >
> > Yes and no... it's caused by the particular version of GD running on
> > the machine and the support it has for various images. GD is an older
> > image library.
> >
> > WordPress 3.6 will support an alternate library called "ImageMagick",
> > if your server has that installed and enabled. However, you may not
> > have that and thus won't see any change if not.
>
> You might check to see the admin of that server did an update.  If
> PHP got recompiled it may have been done with different configuration
> flags or a different set of libraries.
>
> Mark
>

Ah, ok. I'm waiting to hear back (from HostGator..) - if they say they have
no clue, I'll raise that question. Thanks, Mark.

Patty

From wp-hackers at zipsbazaar.co.uk  Sat Jul 27 06:59:33 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Sat, 27 Jul 2013 07:59:33 +0100
Subject: [wp-hackers] MultiSite Localhost subdomain redirect issue
In-Reply-To: <51F2FE79.8090507@slingshot.co.nz>
References: <51F2CF5A.7000800@slingshot.co.nz>
 <51F2E8ED.5040000@zipsbazaar.co.uk> <51F2FE79.8090507@slingshot.co.nz>
Message-ID: <51F36FD5.1070003@zipsbazaar.co.uk>

On 26/07/2013 23:55, Duncan O'Neill wrote:
> Any more / other suggestions gratefully received. 

OK. Try adding a leading slash to your other RewriteRule targets, too.

-- 
Jeff Morris
Kent, UK.


From wp-hackers at zipsbazaar.co.uk  Sat Jul 27 07:33:48 2013
From: wp-hackers at zipsbazaar.co.uk (Jeff Morris)
Date: Sat, 27 Jul 2013 08:33:48 +0100
Subject: [wp-hackers] MultiSite Localhost subdomain redirect issue
In-Reply-To: <51F2FE79.8090507@slingshot.co.nz>
References: <51F2CF5A.7000800@slingshot.co.nz>
 <51F2E8ED.5040000@zipsbazaar.co.uk> <51F2FE79.8090507@slingshot.co.nz>
Message-ID: <51F377DC.5080502@zipsbazaar.co.uk>

On 26/07/2013 23:55, Duncan O'Neill wrote:
> thanks for taking the time to help. 

Actually, I can see a few issues with your rule set. It seems to have 
little in common with a standard WP set.
  It might help if you could re-post it with #comments interleaved to 
describe the logical order (and the effect of the flags). I think all 
will become clear.


-- 
Jeff Morris
Kent, UK.


From lehel at velomedia.com  Sun Jul 28 19:29:17 2013
From: lehel at velomedia.com (Lehel Kovach)
Date: Sun, 28 Jul 2013 12:29:17 -0700
Subject: [wp-hackers] (no subject)
Message-ID: <CAKry7uWjp8gHvSc39ibhaHbbVUr8CYmssWCMmnPs2czcRQdhug@mail.gmail.com>

Laflsof

From halukkaramete at gmail.com  Tue Jul 30 02:44:06 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Mon, 29 Jul 2013 19:44:06 -0700
Subject: [wp-hackers] On slug change, do something
Message-ID: <CAHERW=3s-DVr7f8p1yB3WXpQXs-gXZtPUCfZtr5KhwZoEDkcLw@mail.gmail.com>

I'd like to hook into the event when a tag slug changes, I can fire an
action - for the sake of simplicity, let's say, I want to send en email
when a tag slug is modified.

I tried the  following piece of code but that did not do the trick. I'm
curious to know what is it that I need to do?

add_action("permalink_structure_changed","do_something");

function do_something($data){

wp_mail( 'an_email_address_here', 'subject_here', 'some text here');
}


To try this, I changed the slug of a post_tag, but no email was fired.
I also tried changing the permalink of a post, that did not fired an email
neither.

What's the hook to tap into when a slug is changed? I'm particularly
interested in post_tag slugs change,

Thanks

From nl at thoughtrefinery.com  Tue Jul 30 14:41:49 2013
From: nl at thoughtrefinery.com (Nicholas Ciske)
Date: Tue, 30 Jul 2013 09:41:49 -0500
Subject: [wp-hackers] On slug change, do something
In-Reply-To: <CAHERW=3s-DVr7f8p1yB3WXpQXs-gXZtPUCfZtr5KhwZoEDkcLw@mail.gmail.com>
References: <CAHERW=3s-DVr7f8p1yB3WXpQXs-gXZtPUCfZtr5KhwZoEDkcLw@mail.gmail.com>
Message-ID: <A46AEA74-E5DD-4921-BF55-C0579FE17B39@thoughtrefinery.com>


permalink_structure_changed fires when the permalink structure is changed on the Settings page -- not when a slug is updated.

You're probably looking for the edit_terms action which fires just before the term slug is updated (keep in mind that one term can be in multiple taxonomies). This gets run in wp_update_term() in wp-includes/taxonomy.php.

This triggers every time a term is updated, you'll need to write some code to determine if the slug has actually changed or not.

_________________________
Nick Ciske
http://thoughtrefinery.com/
@nciske	

On Jul 29, 2013, at 9:44 PM, Haluk Karamete wrote:

> I'd like to hook into the event when a tag slug changes, I can fire an
> action - for the sake of simplicity, let's say, I want to send en email
> when a tag slug is modified.
> 
> I tried the  following piece of code but that did not do the trick. I'm
> curious to know what is it that I need to do?
> 
> add_action("permalink_structure_changed","do_something");
> 
> function do_something($data){
> 
> wp_mail( 'an_email_address_here', 'subject_here', 'some text here');
> }
> 
> 
> To try this, I changed the slug of a post_tag, but no email was fired.
> I also tried changing the permalink of a post, that did not fired an email
> neither.
> 
> What's the hook to tap into when a slug is changed? I'm particularly
> interested in post_tag slugs change,
> 
> Thanks


From robertmlowe at rmlowe.com  Tue Jul 30 16:22:46 2013
From: robertmlowe at rmlowe.com (Robert Lowe)
Date: Wed, 31 Jul 2013 00:22:46 +0800
Subject: [wp-hackers] Exemplary code for web single sign-on plugin
Message-ID: <CAMtoJh3O9d5z03_KEQwWoRN8tEE4Lf8DLcCUt8PbDw_kT23AcA@mail.gmail.com>

I am attempting to create a plugin that causes WordPress to use an external
site for authentication using a custom single sign-on protocol.

Essentially, the plugin will need to redirect users to the external site
when they need to log in. After authenticating the user, the external site
will redirect them back to WordPress, passing a username, along with a
message authentication code, which my plugin will need to validate.

I see a number of plugins in the official directory that claim to provide
various forms of single sign-on. However, looking at the code for these
plugins I see little commonality in the approaches taken.

Can anyone point me to code that they would consider exemplary for
implementing web single sign-on in a plugin?

-- 
Best regards,

Robert Lowe
http://notability.rmlowe.com/

From halukkaramete at gmail.com  Tue Jul 30 20:59:52 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Tue, 30 Jul 2013 13:59:52 -0700
Subject: [wp-hackers] On slug change, do something
In-Reply-To: <A46AEA74-E5DD-4921-BF55-C0579FE17B39@thoughtrefinery.com>
References: <CAHERW=3s-DVr7f8p1yB3WXpQXs-gXZtPUCfZtr5KhwZoEDkcLw@mail.gmail.com>
 <A46AEA74-E5DD-4921-BF55-C0579FE17B39@thoughtrefinery.com>
Message-ID: <CAHERW=02B3M+rw02C20VNpt5y_n82wzPYBjKmSNA2pwizjuUhg@mail.gmail.com>

Thank you Nicholas,

Whenever I need to write a hook, I always get confused as to how many args
I can pass to my hooked function from the core.
And in edit_terms, I faced that too.
For this very issue, codex has this;

To find out the number and name of arguments for an action, simply search
> the code base for the matching do_action() call. For example, if you are
> hooking into 'save_post', you would find it in post.php:
> <?php do_action( 'save_post', $post_ID, $post ); ?>
>
> Your add_action call would look like:
> <?php add_action( 'save_post', 'my_save_post', 10, 2 ); ?>
> And your function would be:
> function my_save_post( $post_ID, $post )
> {
> // do stuff here
> }


so from that, it looks easy. But when I locate the code in the core,
reaching a final conclusion is hard;

as this URI ( http://adambrown.info/p/wp_hooks/hook/save_post ) demonstrates
that there are just too many occurrences and in one instance save_post gets
to be used with one arg (
http://adambrown.info/p/wp_hooks/hook/save_post?version=2.0&file=wp-includes/functions-post.php
 )

edit_terms is another good example to illustrate this frustration;

I searched the core, in one instance, the core uses it as

do_action("edit_term", $term_id, $tt_id);


and in another instance, as

do_action("edit_term", $term_id, $tt_id, $taxonomy);


as you see, in the former, the action takes 2 args whereas in the latter
does it with 3.

Now the question becomes do I need to check all occurrences of the
"do_action edit_terms" in the core to find out what's available in the most
detailed case, otherwise it's a hit and miss?

for example, if I were to only spot do_action("edit_term", $term_id,
$tt_id), then how would I have know that it is also possible to get the 3rd
arg as $taxonomy?

So I write my own function ( the do_something function below), how will I
know how many args available to me from the core?

add_action( 'edit_terms', 'do_something' );

function do_something($var1,$var2,$var3,,,,$varN){
}

do you see what I mean?



On Tue, Jul 30, 2013 at 7:41 AM, Nicholas Ciske <nl at thoughtrefinery.com>wrote:

>
> permalink_structure_changed fires when the permalink structure is changed
> on the Settings page -- not when a slug is updated.
>
> You're probably looking for the edit_terms action which fires just before
> the term slug is updated (keep in mind that one term can be in multiple
> taxonomies). This gets run in wp_update_term() in wp-includes/taxonomy.php.
>
> This triggers every time a term is updated, you'll need to write some code
> to determine if the slug has actually changed or not.
>
> _________________________
> Nick Ciske
> http://thoughtrefinery.com/
> @nciske
>
> On Jul 29, 2013, at 9:44 PM, Haluk Karamete wrote:
>
> > I'd like to hook into the event when a tag slug changes, I can fire an
> > action - for the sake of simplicity, let's say, I want to send en email
> > when a tag slug is modified.
> >
> > I tried the  following piece of code but that did not do the trick. I'm
> > curious to know what is it that I need to do?
> >
> > add_action("permalink_structure_changed","do_something");
> >
> > function do_something($data){
> >
> > wp_mail( 'an_email_address_here', 'subject_here', 'some text here');
> > }
> >
> >
> > To try this, I changed the slug of a post_tag, but no email was fired.
> > I also tried changing the permalink of a post, that did not fired an
> email
> > neither.
> >
> > What's the hook to tap into when a slug is changed? I'm particularly
> > interested in post_tag slugs change,
> >
> > Thanks
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dyordan1 at ramapo.edu  Tue Jul 30 21:13:22 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Tue, 30 Jul 2013 17:13:22 -0400
Subject: [wp-hackers] On slug change, do something
In-Reply-To: <CAHERW=02B3M+rw02C20VNpt5y_n82wzPYBjKmSNA2pwizjuUhg@mail.gmail.com>
References: <CAHERW=3s-DVr7f8p1yB3WXpQXs-gXZtPUCfZtr5KhwZoEDkcLw@mail.gmail.com>
 <A46AEA74-E5DD-4921-BF55-C0579FE17B39@thoughtrefinery.com>
 <CAHERW=02B3M+rw02C20VNpt5y_n82wzPYBjKmSNA2pwizjuUhg@mail.gmail.com>
Message-ID: <D5AAE26F-F497-4FFC-9DFD-7794EA3FC6A3@ramapo.edu>

> function do_something($var1,$var2,$var3,,,,$varN){

If you really wanted to go down that path, look at

http://php.net/manual/en/function.func-num-args.php
http://php.net/manual/en/function.func-get-args.php
http://php.net/manual/en/function.func-get-arg.php

Essentially, just define your function as foo() [no parameters] and then use those functions to get the parameters. Of course, you should hook with a param count of something ridiculous like 999 or so and overall the solution just seems awkward.

Another idea would be to just give defaults. Chances are that that hook is used in multiple instances with different number of parameters but whatever happens, they are always in the same order. So, think about this - what do you really actually need? If you need just the term id, problem solved - define your function function($term_id) and you're done. If you need more, give default values to everything but the first parameter [function($term_id, $tt_id=-1,$whatever="potato")]. Then, check for those default values and act accordingly. I hope I made sense with all of that.

P.S. keep in mind that if you say in a hook for example "give me 3 parameters" and the actual code that calls do_action just gives you 2, nothing blows up you just get no value for the third parameter so you better have a default or use the num_args/get_args approach.

~Dobri

On Tue, 30 Jul 2013, at 4:59 PM, Haluk Karamete wrote:

> Thank you Nicholas,
> 
> Whenever I need to write a hook, I always get confused as to how many args
> I can pass to my hooked function from the core.
> And in edit_terms, I faced that too.
> For this very issue, codex has this;
> 
> To find out the number and name of arguments for an action, simply search
>> the code base for the matching do_action() call. For example, if you are
>> hooking into 'save_post', you would find it in post.php:
>> <?php do_action( 'save_post', $post_ID, $post ); ?>
>> 
>> Your add_action call would look like:
>> <?php add_action( 'save_post', 'my_save_post', 10, 2 ); ?>
>> And your function would be:
>> function my_save_post( $post_ID, $post )
>> {
>> // do stuff here
>> }
> 
> 
> so from that, it looks easy. But when I locate the code in the core,
> reaching a final conclusion is hard;
> 
> as this URI ( http://adambrown.info/p/wp_hooks/hook/save_post ) demonstrates
> that there are just too many occurrences and in one instance save_post gets
> to be used with one arg (
> http://adambrown.info/p/wp_hooks/hook/save_post?version=2.0&file=wp-includes/functions-post.php
> )
> 
> edit_terms is another good example to illustrate this frustration;
> 
> I searched the core, in one instance, the core uses it as
> 
> do_action("edit_term", $term_id, $tt_id);
> 
> 
> and in another instance, as
> 
> do_action("edit_term", $term_id, $tt_id, $taxonomy);
> 
> 
> as you see, in the former, the action takes 2 args whereas in the latter
> does it with 3.
> 
> Now the question becomes do I need to check all occurrences of the
> "do_action edit_terms" in the core to find out what's available in the most
> detailed case, otherwise it's a hit and miss?
> 
> for example, if I were to only spot do_action("edit_term", $term_id,
> $tt_id), then how would I have know that it is also possible to get the 3rd
> arg as $taxonomy?
> 
> So I write my own function ( the do_something function below), how will I
> know how many args available to me from the core?
> 
> add_action( 'edit_terms', 'do_something' );
> 
> function do_something($var1,$var2,$var3,,,,$varN){
> }
> 
> do you see what I mean?
> 
> 
> 
> On Tue, Jul 30, 2013 at 7:41 AM, Nicholas Ciske <nl at thoughtrefinery.com>wrote:
> 
>> 
>> permalink_structure_changed fires when the permalink structure is changed
>> on the Settings page -- not when a slug is updated.
>> 
>> You're probably looking for the edit_terms action which fires just before
>> the term slug is updated (keep in mind that one term can be in multiple
>> taxonomies). This gets run in wp_update_term() in wp-includes/taxonomy.php.
>> 
>> This triggers every time a term is updated, you'll need to write some code
>> to determine if the slug has actually changed or not.
>> 
>> _________________________
>> Nick Ciske
>> http://thoughtrefinery.com/
>> @nciske
>> 
>> On Jul 29, 2013, at 9:44 PM, Haluk Karamete wrote:
>> 
>>> I'd like to hook into the event when a tag slug changes, I can fire an
>>> action - for the sake of simplicity, let's say, I want to send en email
>>> when a tag slug is modified.
>>> 
>>> I tried the  following piece of code but that did not do the trick. I'm
>>> curious to know what is it that I need to do?
>>> 
>>> add_action("permalink_structure_changed","do_something");
>>> 
>>> function do_something($data){
>>> 
>>> wp_mail( 'an_email_address_here', 'subject_here', 'some text here');
>>> }
>>> 
>>> 
>>> To try this, I changed the slug of a post_tag, but no email was fired.
>>> I also tried changing the permalink of a post, that did not fired an
>> email
>>> neither.
>>> 
>>> What's the hook to tap into when a slug is changed? I'm particularly
>>> interested in post_tag slugs change,
>>> 
>>> Thanks
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From jdg at codesymphony.co  Tue Jul 30 21:15:26 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Tue, 30 Jul 2013 17:15:26 -0400
Subject: [wp-hackers] On slug change, do something
In-Reply-To: <CAHERW=02B3M+rw02C20VNpt5y_n82wzPYBjKmSNA2pwizjuUhg@mail.gmail.com>
References: <CAHERW=3s-DVr7f8p1yB3WXpQXs-gXZtPUCfZtr5KhwZoEDkcLw@mail.gmail.com>
 <A46AEA74-E5DD-4921-BF55-C0579FE17B39@thoughtrefinery.com>
 <CAHERW=02B3M+rw02C20VNpt5y_n82wzPYBjKmSNA2pwizjuUhg@mail.gmail.com>
Message-ID: <553C0872-4E6C-473C-B878-4948003A167C@codesymphony.co>

> I searched the core, in one instance, the core uses it as
> 
> do_action("edit_term", $term_id, $tt_id);
> 
> 
> and in another instance, as
> 
> do_action("edit_term", $term_id, $tt_id, $taxonomy);
> 
> 
> as you see, in the former, the action takes 2 args whereas in the latter
> does it with 3.

Where are you seeing this? What is the file and line number? I just did a search and the "edit_term" action is called only once, in wp-includes/taxonomy.php (http://adambrown.info/p/wp_hooks/hook/edit_term?version=3.5&file=wp-includes/taxonomy.php). It takes the three parameters as shown in your second example above. There is an "edit_$taxonomy" hook with calls like that of your first example, and there is also an "edit_terms" (plural) hook, but I don't see any other calls to "edit_term".

-J.D.

From lists at rotorised.com  Tue Jul 30 21:22:06 2013
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 31 Jul 2013 07:22:06 +1000
Subject: [wp-hackers] Exemplary code for web single sign-on plugin
In-Reply-To: <CAMtoJh3O9d5z03_KEQwWoRN8tEE4Lf8DLcCUt8PbDw_kT23AcA@mail.gmail.com>
References: <CAMtoJh3O9d5z03_KEQwWoRN8tEE4Lf8DLcCUt8PbDw_kT23AcA@mail.gmail.com>
Message-ID: <51F82E7E.5090202@rotorised.com>

Robert Lowe wrote:
> Can anyone point me to code that they would consider exemplary for
> implementing web single sign-on in a plugin?

Depending on what exactly you want, Keyring is probably a good start:
http://wordpress.org/plugins/keyring/

You may even be able to write your own service definition for it and
avoid reinventing the whole wheel.

As for the relevant cookie parts, I'm not sure if they're handled by
Keyring, but they're fairly trivial once you've got a WP_User.

-- 
Ryan McCue
<http://ryanmccue.info/>

From halukkaramete at gmail.com  Tue Jul 30 21:51:43 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Tue, 30 Jul 2013 14:51:43 -0700
Subject: [wp-hackers] On slug change, do something
In-Reply-To: <553C0872-4E6C-473C-B878-4948003A167C@codesymphony.co>
References: <CAHERW=3s-DVr7f8p1yB3WXpQXs-gXZtPUCfZtr5KhwZoEDkcLw@mail.gmail.com>
 <A46AEA74-E5DD-4921-BF55-C0579FE17B39@thoughtrefinery.com>
 <CAHERW=02B3M+rw02C20VNpt5y_n82wzPYBjKmSNA2pwizjuUhg@mail.gmail.com>
 <553C0872-4E6C-473C-B878-4948003A167C@codesymphony.co>
Message-ID: <CAHERW=09ROZ-ppBPmRwcbdX1foX1xEG-iv=Ccvw840cPSfzgAA@mail.gmail.com>

for do_action("edit_term", $term_id, $tt_id); please see
http://adambrown.info/p/wp_hooks/hook/edit_term?version=2.3&file=wp-includes/taxonomy.php

and for do_action("edit_term", $term_id, $tt_id, $taxonomy); please see
http://adambrown.info/p/wp_hooks/hook/edit_term?version=2.9&file=wp-includes/taxonomy.php

I just noticed, the only diff is the version number in the query string!
2nd one is WordPress version: 2.9 while the first is version 2.3

Boy! I had not noticed them before,
thanks to your trigger... now I know I was looking at the
http://adambrown.info site the wrong way all this time.
In this case, all I need to worry about is the latest WP version out there.

http://adambrown.info/p/wp_hooks/hook/edit_term?version=3.5&file=wp-includes/taxonomy.php

and there we have it as  do_action("edit_term", $term_id, $tt_id,
$taxonomy);

But I'm not sure, if looking for the latest is gonna solve the original
problem I had. Even on the latest version, are all function calls to that
action hook pass the same number of args? That I do not know.

Isn't there a function exactly named as "edit_term" in the core which I can
go and look up to check how many args does that function possibly take ?
That way I'd be going to the function def ( which is in one place) as
opposed to going to function calls to it - thru sites like adambrown?





On Tue, Jul 30, 2013 at 2:15 PM, J.D. Grimes <jdg at codesymphony.co> wrote:
>
> > I searched the core, in one instance, the core uses it as
> >
> > do_action("edit_term", $term_id, $tt_id);
> >
> >
> > and in another instance, as
> >
> > do_action("edit_term", $term_id, $tt_id, $taxonomy);
> >
> >
> > as you see, in the former, the action takes 2 args whereas in the latter
> > does it with 3.
>
> Where are you seeing this? What is the file and line number? I just did a
search and the "edit_term" action is called only once, in
wp-includes/taxonomy.php (
http://adambrown.info/p/wp_hooks/hook/edit_term?version=3.5&file=wp-includes/taxonomy.php).
It takes the three parameters as shown in your second example above. There
is an "edit_$taxonomy" hook with calls like that of your first example, and
there is also an "edit_terms" (plural) hook, but I don't see any other
calls to "edit_term".
>
> -J.D.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From jdg at codesymphony.co  Tue Jul 30 21:58:31 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Tue, 30 Jul 2013 17:58:31 -0400
Subject: [wp-hackers] On slug change, do something
In-Reply-To: <CAHERW=09ROZ-ppBPmRwcbdX1foX1xEG-iv=Ccvw840cPSfzgAA@mail.gmail.com>
References: <CAHERW=3s-DVr7f8p1yB3WXpQXs-gXZtPUCfZtr5KhwZoEDkcLw@mail.gmail.com>
 <A46AEA74-E5DD-4921-BF55-C0579FE17B39@thoughtrefinery.com>
 <CAHERW=02B3M+rw02C20VNpt5y_n82wzPYBjKmSNA2pwizjuUhg@mail.gmail.com>
 <553C0872-4E6C-473C-B878-4948003A167C@codesymphony.co>
 <CAHERW=09ROZ-ppBPmRwcbdX1foX1xEG-iv=Ccvw840cPSfzgAA@mail.gmail.com>
Message-ID: <1E0D94B7-297E-477C-ABCB-DA65014400D9@codesymphony.co>

> Isn't there a function exactly named as "edit_term" in the core which I can
> go and look up to check how many args does that function possibly take ?
> That way I'd be going to the function def ( which is in one place) as
> opposed to going to function calls to it - thru sites like adambrown?

If you look at this page, it shows each time that the "edit_term" action is used:

http://adambrown.info/p/wp_hooks/hook/edit_term?version=3.5&file=wp-includes/taxonomy.php

In this case, it is only used once.

-J.D.

From nl at thoughtrefinery.com  Tue Jul 30 22:12:41 2013
From: nl at thoughtrefinery.com (Nicholas Ciske)
Date: Tue, 30 Jul 2013 17:12:41 -0500
Subject: [wp-hackers] On slug change, do something
In-Reply-To: <1E0D94B7-297E-477C-ABCB-DA65014400D9@codesymphony.co>
References: <CAHERW=3s-DVr7f8p1yB3WXpQXs-gXZtPUCfZtr5KhwZoEDkcLw@mail.gmail.com>
 <A46AEA74-E5DD-4921-BF55-C0579FE17B39@thoughtrefinery.com>
 <CAHERW=02B3M+rw02C20VNpt5y_n82wzPYBjKmSNA2pwizjuUhg@mail.gmail.com>
 <553C0872-4E6C-473C-B878-4948003A167C@codesymphony.co>
 <CAHERW=09ROZ-ppBPmRwcbdX1foX1xEG-iv=Ccvw840cPSfzgAA@mail.gmail.com>
 <1E0D94B7-297E-477C-ABCB-DA65014400D9@codesymphony.co>
Message-ID: <776B878D-C615-4DF7-8B80-70E9FC0D0947@thoughtrefinery.com>


Here's a Gist that'll do what you want using the 2 actions fired before and after a term slug is updated.
https://gist.github.com/nciske/6117419

I had to use a global variable, but it works for all taxonomies (and a transient seems like overkill for this). I'm open to suggestions for improvement.

If you just wanted to do a single taxonomy, you could use this one hook version that exploits the fact that the slug change doesn?t immediately update the object cache, so we can compare the cached version to the database:

https://gist.github.com/nciske/6117497


_________________________
Nick Ciske
http://thoughtrefinery.com/
@nciske	

From otto at ottodestruct.com  Tue Jul 30 23:28:58 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 30 Jul 2013 18:28:58 -0500
Subject: [wp-hackers] Exemplary code for web single sign-on plugin
In-Reply-To: <51F82E7E.5090202@rotorised.com>
References: <CAMtoJh3O9d5z03_KEQwWoRN8tEE4Lf8DLcCUt8PbDw_kT23AcA@mail.gmail.com>
 <51F82E7E.5090202@rotorised.com>
Message-ID: <CAD-FghxEhm1RF5=0hHe1GhS=7_ykeCJu61bb07tdab3aY9C0rQ@mail.gmail.com>

On Tue, Jul 30, 2013 at 4:22 PM, Ryan McCue <lists at rotorised.com> wrote:
> As for the relevant cookie parts, I'm not sure if they're handled by
> Keyring, but they're fairly trivial once you've got a WP_User.

You don't need to handle the cookie parts yourself. Using the
"authenticate" filter correctly will do it for you.

Short version: Hook a filter function to "authenticate". It should
look like this:

add_filter('authenticate', 'example', 40, 3);

function example($user, $username, $password) {
  if ( is_a($user, 'WP_User') ) { return $user; }
  ... do your auth stuff here ...
  return ...something...
}

- If the function wants to login a user (after whatever verification
process), it should return a valid WP_User object.
- If the function wants to make a user *not* logged in (say the
verification was invalid or failed), it should return a WP_Error
object with a valid error message to display to the user.
- If the function wants to not affect the normal auth process in any
way, it should return the $user value unchanged.

When a valid WP_User is returned, the correct cookies for that user
will be set automatically by the normal process, and the next time
authentication is needed, those cookies will be used (they hook in to
this same filter, but at priority 30). Because of this, you can hook
in at priority 40, and that first is_a line will cause your auth to
not have to happen every time, since the cookie auth will be passing
you a WP_User and you can thus just skip it.

-Otto

From lists at rotorised.com  Wed Jul 31 00:58:00 2013
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 31 Jul 2013 10:58:00 +1000
Subject: [wp-hackers] Exemplary code for web single sign-on plugin
In-Reply-To: <CAD-FghxEhm1RF5=0hHe1GhS=7_ykeCJu61bb07tdab3aY9C0rQ@mail.gmail.com>
References: <CAMtoJh3O9d5z03_KEQwWoRN8tEE4Lf8DLcCUt8PbDw_kT23AcA@mail.gmail.com>
 <51F82E7E.5090202@rotorised.com>
 <CAD-FghxEhm1RF5=0hHe1GhS=7_ykeCJu61bb07tdab3aY9C0rQ@mail.gmail.com>
Message-ID: <51F86118.5010500@rotorised.com>

Otto wrote:
> You don't need to handle the cookie parts yourself. Using the
> "authenticate" filter correctly will do it for you.

>From my own experience, simply filtering authenticate is *not* enough.
The cookie check will happen before authenticate gets called in some
cases, and cause the user to be logged out.

I had to work around this:
https://github.com/rmccue/WordPressOAuthProvider/commit/4b779059fd352c9086aef31b6b3c817ea3229388

It may be the case that I was doing this incorrectly, but a simple
filter on authenticate wasn't enough for me.
-- 
Ryan McCue
<http://ryanmccue.info/>

From halukkaramete at gmail.com  Wed Jul 31 08:47:43 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Wed, 31 Jul 2013 01:47:43 -0700
Subject: [wp-hackers] On slug change, do something
In-Reply-To: <776B878D-C615-4DF7-8B80-70E9FC0D0947@thoughtrefinery.com>
References: <CAHERW=3s-DVr7f8p1yB3WXpQXs-gXZtPUCfZtr5KhwZoEDkcLw@mail.gmail.com>
 <A46AEA74-E5DD-4921-BF55-C0579FE17B39@thoughtrefinery.com>
 <CAHERW=02B3M+rw02C20VNpt5y_n82wzPYBjKmSNA2pwizjuUhg@mail.gmail.com>
 <553C0872-4E6C-473C-B878-4948003A167C@codesymphony.co>
 <CAHERW=09ROZ-ppBPmRwcbdX1foX1xEG-iv=Ccvw840cPSfzgAA@mail.gmail.com>
 <1E0D94B7-297E-477C-ABCB-DA65014400D9@codesymphony.co>
 <776B878D-C615-4DF7-8B80-70E9FC0D0947@thoughtrefinery.com>
Message-ID: <CAHERW=0mnec+KKu526q2u5xz1q+kM4LHbcDnbSDvRgvNLbbdaA@mail.gmail.com>

@Nicholas
 object cache idea is very interesting.
 thank you for the code.

@Grimes
  it may be just that. one occurrence of the hook in the current code base.
in that case, my original concern has no base.
  I'm glad I asked though. thank you

On Tue, Jul 30, 2013 at 3:12 PM, Nicholas Ciske <nl at thoughtrefinery.com>wrote:

>
> Here's a Gist that'll do what you want using the 2 actions fired before
> and after a term slug is updated.
> https://gist.github.com/nciske/6117419
>
> I had to use a global variable, but it works for all taxonomies (and a
> transient seems like overkill for this). I'm open to suggestions for
> improvement.
>
> If you just wanted to do a single taxonomy, you could use this one hook
> version that exploits the fact that the slug change doesn?t immediately
> update the object cache, so we can compare the cached version to the
> database:
>
> https://gist.github.com/nciske/6117497
>
>
> _________________________
> Nick Ciske
> http://thoughtrefinery.com/
> @nciske
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From cpeckens at jhu.edu  Wed Jul 31 12:06:21 2013
From: cpeckens at jhu.edu (Cara Peckens)
Date: Wed, 31 Jul 2013 12:06:21 +0000
Subject: [wp-hackers] Exemplary code for web single sign-on plugin (Cara
 Peckens)
Message-ID: <CE1E75FD.3516%cpeckens@jhu.edu>

Ryan ? What authentication method are you using?  I was able to implement single-sign-on using Shibboleth and used http://wordpress.org/plugins/shibboleth/ as the core for my plugin code.

-Cara

From lists at rotorised.com  Wed Jul 31 12:15:00 2013
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 31 Jul 2013 22:15:00 +1000
Subject: [wp-hackers] Exemplary code for web single sign-on plugin (Cara
 Peckens)
In-Reply-To: <CE1E75FD.3516%cpeckens@jhu.edu>
References: <CE1E75FD.3516%cpeckens@jhu.edu>
Message-ID: <51F8FFC4.9090500@rotorised.com>

Cara Peckens wrote:
> Ryan ? What authentication method are you using?  I was able to implement single-sign-on using Shibboleth and used http://wordpress.org/plugins/shibboleth/ as the core for my plugin code.

I'm using OAuth as both a client and a provider.

Also, keep in mind with the Shibboleth plugin that it hasn't been
updated for a long time (although, I'd trust mitcho's code enough to run
it regardless), so it may not be using current best practices.

(As a completely off-topic note, it appears that your email client
renames the subject of the email, which completely breaks threading for me.)

-- 
Ryan McCue
<http://ryanmccue.info/>

From danielx386 at gmail.com  Wed Jul 31 12:52:59 2013
From: danielx386 at gmail.com (Daniel)
Date: Wed, 31 Jul 2013 22:52:59 +1000
Subject: [wp-hackers] Exemplary code for web single sign-on plugin (Cara
	Peckens)
In-Reply-To: <51F8FFC4.9090500@rotorised.com>
References: <CE1E75FD.3516%cpeckens@jhu.edu> <51F8FFC4.9090500@rotorised.com>
Message-ID: <CAJ5Hi2gwmiw1dLR1CmHzx8n76YKsW5eOkaSNh7wfZLcvF8ec_w@mail.gmail.com>

I would like to echo what Ryan said, it breaks threading for me as well.

On 7/31/13, Ryan McCue <lists at rotorised.com> wrote:
> Cara Peckens wrote:
>> Ryan ? What authentication method are you using?  I was able to implement
>> single-sign-on using Shibboleth and used
>> http://wordpress.org/plugins/shibboleth/ as the core for my plugin code.
>
> I'm using OAuth as both a client and a provider.
>
> Also, keep in mind with the Shibboleth plugin that it hasn't been
> updated for a long time (although, I'd trust mitcho's code enough to run
> it regardless), so it may not be using current best practices.
>
> (As a completely off-topic note, it appears that your email client
> renames the subject of the email, which completely breaks threading for
> me.)
>
> --
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Regards,
Daniel Fenn

From dino at duechiacchiere.it  Wed Jul 31 13:01:36 2013
From: dino at duechiacchiere.it (Dino Termini)
Date: Wed, 31 Jul 2013 09:01:36 -0400
Subject: [wp-hackers] Managing a lot of content editors,
	roles and permissions
Message-ID: <51F90AB0.6090103@duechiacchiere.it>

Hello list,

I am working on a large scale website which has multiple sections 
(roughly associated to departments in the organization), and each 
section has its own group of contributors, editors, publishers and 
administrators. We will be using WordPress MU to segment content editors 
and assign appropriate roles and privileges to each of them. The site 
has currently about 80 editors.

We've also looked at plugins that extend WP's roles and capabilities, 
but we would prefer using as much off-the-shelf functionality as possible.

I was wondering if the list has any pointers to share about best 
practices, do's and dont's, etc, on setting up a permission management 
layer in WP for large scale websites.

Thank you,
Dino.

From otto at ottodestruct.com  Wed Jul 31 14:29:06 2013
From: otto at ottodestruct.com (Otto)
Date: Wed, 31 Jul 2013 09:29:06 -0500
Subject: [wp-hackers] Exemplary code for web single sign-on plugin
In-Reply-To: <51F86118.5010500@rotorised.com>
References: <CAMtoJh3O9d5z03_KEQwWoRN8tEE4Lf8DLcCUt8PbDw_kT23AcA@mail.gmail.com>
 <51F82E7E.5090202@rotorised.com>
 <CAD-FghxEhm1RF5=0hHe1GhS=7_ykeCJu61bb07tdab3aY9C0rQ@mail.gmail.com>
 <51F86118.5010500@rotorised.com>
Message-ID: <CAD-FghzKn6DV+g3U4kAkPxppZ=hp5bETfgFWdtH0ND8T4pdQ1A@mail.gmail.com>

On Tue, Jul 30, 2013 at 7:58 PM, Ryan McCue <lists at rotorised.com> wrote:
> Otto wrote:
>> You don't need to handle the cookie parts yourself. Using the
>> "authenticate" filter correctly will do it for you.
>
> From my own experience, simply filtering authenticate is *not* enough.
> The cookie check will happen before authenticate gets called in some
> cases, and cause the user to be logged out.
>
> I had to work around this:
> https://github.com/rmccue/WordPressOAuthProvider/commit/4b779059fd352c9086aef31b6b3c817ea3229388
>
> It may be the case that I was doing this incorrectly, but a simple
> filter on authenticate wasn't enough for me.

Think you must have been doing it wrong somehow. The cookie check
happens in wp_authenticate_cookie(), which is actually hooked to the
authenticate filter at priority 30.

Cookies can be cleared if something causes reauth to get set, but
that's separate, really.

Also, your workaround is incomplete. You're not setting up the
userdata globals quite properly. You might consider calling
wp_set_current_user() instead of just setting the global
$current_user.

-Otto

From robertmlowe at rmlowe.com  Wed Jul 31 16:09:37 2013
From: robertmlowe at rmlowe.com (Robert Lowe)
Date: Thu, 1 Aug 2013 00:09:37 +0800
Subject: [wp-hackers] Exemplary code for web single sign-on plugin
In-Reply-To: <CAD-FghxEhm1RF5=0hHe1GhS=7_ykeCJu61bb07tdab3aY9C0rQ@mail.gmail.com>
References: <CAMtoJh3O9d5z03_KEQwWoRN8tEE4Lf8DLcCUt8PbDw_kT23AcA@mail.gmail.com>
 <51F82E7E.5090202@rotorised.com>
 <CAD-FghxEhm1RF5=0hHe1GhS=7_ykeCJu61bb07tdab3aY9C0rQ@mail.gmail.com>
Message-ID: <CAMtoJh3kFvqNVq7KGJZ0-U3Vrro97cdE8OJQ8HtxYhZbrpApYg@mail.gmail.com>

> You don't need to handle the cookie parts yourself. Using the
>  "authenticate" filter correctly will do it for you.
>

Thanks Otto. I guess the implication here is that I'd still be sending the
user to wp-login.php to handle the authentication, even though they would
never see an actual WordPress login page.

-- 
Best regards,

Robert Lowe
http://notability.rmlowe.com/

From lists at alexking.org  Wed Jul 31 16:15:17 2013
From: lists at alexking.org (Alex King)
Date: Wed, 31 Jul 2013 10:15:17 -0600
Subject: [wp-hackers] Managing a lot of content editors,
	roles and permissions
In-Reply-To: <51F90AB0.6090103@duechiacchiere.it>
References: <51F90AB0.6090103@duechiacchiere.it>
Message-ID: <5C9A3B01-46FA-443E-943B-A987649D80E1@alexking.org>

Our experience has been that siloing content via WPMS is more problematic long term that building custom permissions. We have used custom taxonomies plus matching custom roles to address this nicely on several large scale sites.

Cheers,
--Alex

http://alexking.org | http://crowdfavorite.com


On Jul 31, 2013, at 7:01 AM, Dino Termini <dino at duechiacchiere.it> wrote:

> Hello list,
> 
> I am working on a large scale website which has multiple sections (roughly associated to departments in the organization), and each section has its own group of contributors, editors, publishers and administrators. We will be using WordPress MU to segment content editors and assign appropriate roles and privileges to each of them. The site has currently about 80 editors.
> 
> We've also looked at plugins that extend WP's roles and capabilities, but we would prefer using as much off-the-shelf functionality as possible.
> 
> I was wondering if the list has any pointers to share about best practices, do's and dont's, etc, on setting up a permission management layer in WP for large scale websites.
> 
> Thank you,
> Dino.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From chris at clwill.com  Wed Jul 31 17:20:13 2013
From: chris at clwill.com (Chris Williams)
Date: Wed, 31 Jul 2013 13:20:13 -0400
Subject: [wp-hackers] Managing a lot of content editors,
 roles and permissions
In-Reply-To: <5C9A3B01-46FA-443E-943B-A987649D80E1@alexking.org>
Message-ID: <CE1E934C.26754%chris@clwill.com>

Alex, I'm facing a similar conundrum (or should I say fiefdom...).  Can
you elaborate?  

You create a taxonomy for each division/department: abc.com/sales,
abc.com/development, etc.  And for that each of those you create a set of
author/editor/publisher/admin roles?  Is that right?

Each author is responsible for choosing the correct taxonomy for their new
content?  What if they choose incorrectly?  Do they see the entire
taxonomy, or just their window?  E.G., if I'm an author in Sales, do I see
all the departments in the Edit Post page?  Or just Sales?  Or does it
somehow just put my post in Sales?

Does this prevent an editor from division A from creating/editing content
in division B's taxonomy?  I assume so...

Thanks

On 7/31/13 9:15 AM, "Alex King" <lists at alexking.org> wrote:

>Our experience has been that siloing content via WPMS is more problematic
>long term that building custom permissions. We have used custom
>taxonomies plus matching custom roles to address this nicely on several
>large scale sites.
>
>Cheers,
>--Alex
>
>http://alexking.org | http://crowdfavorite.com
>
>
>On Jul 31, 2013, at 7:01 AM, Dino Termini <dino at duechiacchiere.it> wrote:
>
>> Hello list,
>> 
>> I am working on a large scale website which has multiple sections
>>(roughly associated to departments in the organization), and each
>>section has its own group of contributors, editors, publishers and
>>administrators. We will be using WordPress MU to segment content editors
>>and assign appropriate roles and privileges to each of them. The site
>>has currently about 80 editors.
>> 
>> We've also looked at plugins that extend WP's roles and capabilities,
>>but we would prefer using as much off-the-shelf functionality as
>>possible.
>> 
>> I was wondering if the list has any pointers to share about best
>>practices, do's and dont's, etc, on setting up a permission management
>>layer in WP for large scale websites.
>> 
>> Thank you,
>> Dino.


From lists at alexking.org  Wed Jul 31 17:31:19 2013
From: lists at alexking.org (Alex King)
Date: Wed, 31 Jul 2013 11:31:19 -0600
Subject: [wp-hackers] Managing a lot of content editors,
	roles and permissions
In-Reply-To: <CE1E934C.26754%chris@clwill.com>
References: <CE1E934C.26754%chris@clwill.com>
Message-ID: <0FA4748B-CC23-44F9-BCF4-A016E0C2D987@alexking.org>

> You create a taxonomy for each division/department: abc.com/sales,
> abc.com/development, etc.  And for that each of those you create a set of
> author/editor/publisher/admin roles?  Is that right?

Create a 'can_edit_{tax-slug}_content' role or similar.

> Each author is responsible for choosing the correct taxonomy for their new
> content?  What if they choose incorrectly?  Do they see the entire
> taxonomy, or just their window?  

That's just tooling - if a user only has access to a single section, silently add that term as appropriate to content they create. If they cross over into multiple sections, they then need to select the appropriate sections. This is a training issue.

> E.G., if I'm an author in Sales, do I see
> all the departments in the Edit Post page?  Or just Sales?  Or does it
> somehow just put my post in Sales?

Limit the views of these users in the admin as approprioate

> Does this prevent an editor from division A from creating/editing content
> in division B's taxonomy?  I assume so...

See above.

Cheers,
--Alex

http://alexking.org | http://crowdfavorite.com




On Jul 31, 2013, at 11:20 AM, Chris Williams <chris at clwill.com> wrote:

> Alex, I'm facing a similar conundrum (or should I say fiefdom...).  Can
> you elaborate?  
> 
> You create a taxonomy for each division/department: abc.com/sales,
> abc.com/development, etc.  And for that each of those you create a set of
> author/editor/publisher/admin roles?  Is that right?
> 
> Each author is responsible for choosing the correct taxonomy for their new
> content?  What if they choose incorrectly?  Do they see the entire
> taxonomy, or just their window?  E.G., if I'm an author in Sales, do I see
> all the departments in the Edit Post page?  Or just Sales?  Or does it
> somehow just put my post in Sales?
> 
> Does this prevent an editor from division A from creating/editing content
> in division B's taxonomy?  I assume so...
> 
> Thanks
> 
> On 7/31/13 9:15 AM, "Alex King" <lists at alexking.org> wrote:
> 
>> Our experience has been that siloing content via WPMS is more problematic
>> long term that building custom permissions. We have used custom
>> taxonomies plus matching custom roles to address this nicely on several
>> large scale sites.
>> 
>> Cheers,
>> --Alex
>> 
>> http://alexking.org | http://crowdfavorite.com
>> 
>> 
>> On Jul 31, 2013, at 7:01 AM, Dino Termini <dino at duechiacchiere.it> wrote:
>> 
>>> Hello list,
>>> 
>>> I am working on a large scale website which has multiple sections
>>> (roughly associated to departments in the organization), and each
>>> section has its own group of contributors, editors, publishers and
>>> administrators. We will be using WordPress MU to segment content editors
>>> and assign appropriate roles and privileges to each of them. The site
>>> has currently about 80 editors.
>>> 
>>> We've also looked at plugins that extend WP's roles and capabilities,
>>> but we would prefer using as much off-the-shelf functionality as
>>> possible.
>>> 
>>> I was wondering if the list has any pointers to share about best
>>> practices, do's and dont's, etc, on setting up a permission management
>>> layer in WP for large scale websites.
>>> 
>>> Thank you,
>>> Dino.
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


