From hendry.lee at gmail.com  Mon Jun  1 04:29:54 2009
From: hendry.lee at gmail.com (Hendry Lee)
Date: Mon Jun  1 04:30:12 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <4A22D386.5030205@yoast.com>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>	<360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com>	<82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>	<CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz>	<513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com>	<4A016EBC-E660-46B0-BEA7-8E8ED1957F37@gmail.com>	<513d59820905310552m46a49fb8s82d873ff730a3261@mail.gmail.com>	<349fe48b0905310756h1f2a30ddqc1c75a53491e85fd@mail.gmail.com>	<D7EEB93C-B237-4CA6-A2F3-74C010D590C8@striderweb.com>	<5cdeb9b20905310818j2e6e6947yc610a6ffb8b49bfd@mail.gmail.com>	<df809b110905310820u2369cb1eyeca981fb8806e665@mail.gmail.com>	<EMEWEMEW2_DELIMl4UDl2fd709f00908a8e67f3e5bb,
	mikeschinkel@newclarity.net,
	3D2FA971-1A39-4E9C-9D0D> <4A22D386.5030205@yoast.com>
Message-ID: <4a235946.1e068e0a.01f5.45f7@mx.google.com>

> Same goes for WestHost, neither of them seem to be on the recommended 
> hosting pages for WordPress though. Guess Automattic needs the affiliate 
> income? :)

WestHost also offers affiliate program. You know that because you promote
them on your site. I guess one can't possibly list every hosting on earth.

I use Hostgator for shared hosting. Linode for VPS and they work wonder.

-Hendry


From r at schestowitz.com  Mon Jun  1 07:05:09 2009
From: r at schestowitz.com (Roy Schestowitz)
Date: Mon Jun  1 06:20:27 2009
Subject: [wp-hackers] WP-Hackers Stats for May 2009
Message-ID: <4A237DA5.4090009@schestowitz.com>

  ?  Times are Greenwich Mean Time (GMT) +0:00

  ?  Statistics span a period of one month

  ?  Subject line formatted consistently "WP-Hackers Stats for <MONTH>
<YEAR>"

  ?  Killfile <subject contains "WP-Hackers Stats for "> if uninterested
____________________________________________________________


Stats for wp-hackers
~~~~~~~~~~~~~~~~~~~~
***** People who have written most messages:
+----+-----Author-----------------------------------+--Msg-+-Percent-+
|  1 | mikeschinkel newclarity.net                  |   17 |  7.69 % |
|  2 | scribu gmail.com                             |   15 |  6.79 % |
|  3 | ncrice gmail.com                             |   14 |  6.33 % |
|  4 | jer simianuprising.com                       |    9 |  4.07 % |
|  5 | lynne.pope gmail.com                         |    8 |  3.62 % |
|  6 | malaiac gmail.com                            |    8 |  3.62 % |
|  7 | peter.westwood ftwr.co.uk                    |    7 |  3.17 % |
|  8 | wp-hackers striderweb.com                    |    7 |  3.17 % |
|  9 | niladam gmail.com                            |    7 |  3.17 % |
| 10 | yahgrp poplarware.com                        |    5 |  2.26 % |
| 11 | paul codehooligans.com                       |    5 |  2.26 % |
| 12 | frank bueltge.de                             |    5 |  2.26 % |
| 13 | simon sweetinteraction.com                   |    5 |  2.26 % |
| 14 | bryanharley gmail.com                        |    5 |  2.26 % |
| 15 | alan verselogic.net                          |    5 |  2.26 % |
| 16 | joost yoast.com                              |    5 |  2.26 % |
| 17 | ozh planetozh.com                            |    5 |  2.26 % |
| 18 | ryan boren.nu                                |    4 |  1.81 % |
| 19 | if.website gmail.com                         |    4 |  1.81 % |
| 20 | wp xentek.net                                |    4 |  1.81 % |
| 21 | =?UTF-8?Q?Ja=6E_E=72ik_M=6Fs=74=72=C3=B6?= = |    4 |  1.81 % |
| 22 | elflop googlemail.com                        |    3 |  1.36 % |
| 23 | somani.mayur gmail.com                       |    3 |  1.36 % |
| 24 | johnbillion+wp gmail.com                     |    3 |  1.36 % |
| 25 | kushaldas gmail.com                          |    3 |  1.36 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |   61 | 27.60 % |
+----+----------------------------------------------+------+---------+

***** Best authors, by total size of their messages (w/o quoting):
+----+-----Author-------------------------------------------+-KBytes-+
|  1 | mikeschinkel newclarity.net                          |   20.3 |
|  2 | ncrice gmail.com                                     |   10.5 |
|  3 | jer simianuprising.com                               |    7.9 |
|  4 | yahgrp poplarware.com                                |    7.1 |
|  5 | lynne.pope gmail.com                                 |    7.0 |
|  6 | paul codehooligans.com                               |    6.9 |
|  7 | if.website gmail.com                                 |    6.0 |
|  8 | wp-hackers striderweb.com                            |    5.6 |
|  9 | peter.westwood ftwr.co.uk                            |    5.6 |
| 10 | malaiac gmail.com                                    |    5.2 |
| 11 | scribu gmail.com                                     |    4.9 |
| 12 | casey.bisson gmail.com                               |    4.9 |
| 13 | alan verselogic.net                                  |    4.7 |
| 14 | simon sweetinteraction.com                           |    4.1 |
| 15 | frank bueltge.de                                     |    3.8 |
| 16 | joost yoast.com                                      |    3.6 |
| 17 | niladam gmail.com                                    |    3.3 |
| 18 | fhelmschrott gmail.com                               |    3.0 |
| 19 | elflop googlemail.com                                |    2.8 |
| 20 | ozh planetozh.com                                    |    2.7 |
| 21 | glenn glennansley.com                                |    2.6 |
| 22 | gaarai gaarai.com                                    |    2.4 |
| 23 | wp xentek.net                                        |    2.3 |
| 24 | markjaquith gmail.com                                |    2.3 |
| 25 | =?UTF-8?Q?Ja=6E_E=72ik_M=6Fs=74=72=C3=B6?= =?UTF-8?Q |    2.1 |
+----+------------------------------------------------------+--------+

***** Best authors, by average size of their message (w/o quoting):
+----+-----Author--------------------------------------------+-bytes-+
|  1 | casey.bisson gmail.com                                |  2491 |
|  2 | gaarai gaarai.com                                     |  2412 |
|  3 | markjaquith gmail.com                                 |  2316 |
|  4 | maillist wangstedt.net                                |  1670 |
|  5 | mike_walsh mindspring.com                             |  1583 |
|  6 | if.website gmail.com                                  |  1537 |
|  7 | yahgrp poplarware.com                                 |  1450 |
|  8 | paul codehooligans.com                                |  1419 |
|  9 | ryan pixopoint.com                                    |  1416 |
| 10 | glenn glennansley.com                                 |  1350 |
| 11 | kikizas gmail.com                                     |  1260 |
| 12 | mikeschinkel newclarity.net                           |  1222 |
| 13 | ab006 chebucto.ns.ca                                  |  1212 |
| 14 | mpwalsh8 gmail.com                                    |  1139 |
| 15 | bunnylists gmail.com                                  |  1053 |
| 16 | poster communitymodder.com                            |  1050 |
| 17 | fhelmschrott gmail.com                                |  1019 |
| 18 | brian nerdlife.net                                    |   966 |
| 19 | alan verselogic.net                                   |   959 |
| 20 | elflop googlemail.com                                 |   952 |
| 21 | jer simianuprising.com                                |   904 |
| 22 | lynne.pope gmail.com                                  |   896 |
| 23 | technocraze gmail.com                                 |   896 |
| 24 | lists freshpacific.co.nz                              |   841 |
| 25 | simon sweetinteraction.com                            |   833 |
+----+-------------------------------------------------------+-------+

***** Table showing the most successful subjects:
+----+----Subject-----------------------------------+--Msg-+-Percent-+
|  1 | [wp-hackers] Pull Latest Post from Each of 6 |   27 | 12.22 % |
|  2 | [wp-hackers] 2.8 plugins page                |   19 |  8.60 % |
|  3 | [wp-hackers] WPMU gets b*tch-slapped on Drea |   15 |  6.79 % |
|  4 | [wp-hackers] Accessibility of WP back end (w |   10 |  4.52 % |
|  5 | [wp-hackers] Using XMLRPC                    |    9 |  4.07 % |
|  6 | [wp-hackers] add_meta_box without checked?   |    8 |  3.62 % |
|  7 | [wp-hackers] Hide admin page?                |    8 |  3.62 % |
|  8 | [wp-hackers] sitemap issues                  |    7 |  3.17 % |
|  9 | [wp-hackers] User-tagged posts               |    7 |  3.17 % |
| 10 | [wp-hackers] Display page only to admin..    |    7 |  3.17 % |
| 11 | [wp-hackers] template checks                 |    7 |  3.17 % |
| 12 | [wp-hackers] Functions that Fire during "cru |    6 |  2.71 % |
| 13 | [wp-hackers] Sticky posts turning up in my c |    5 |  2.26 % |
| 14 | [wp-hackers] TEMPLATEPATH in child themes    |    5 |  2.26 % |
| 15 | [wp-hackers] Help with wpdb Class Errors     |    5 |  2.26 % |
| 16 | [wp-hackers] Is WP back end supposed to work |    4 |  1.81 % |
| 17 | [wp-hackers] Accessibility of WP back end    |    4 |  1.81 % |
| 18 | [wp-hackers] register_setting tip            |    4 |  1.81 % |
| 19 | [wp-hackers] Re: 2.8 Changes in meta boxes ? |    4 |  1.81 % |
| 20 | [wp-hackers] update_option problem           |    4 |  1.81 % |
| 21 | [wp-hackers] SixApart releases WordPress plu |    4 |  1.81 % |
| 22 | [wp-hackers] Calendar generating bad links t |    4 |  1.81 % |
| 23 | [wp-hackers] Accessibility of WP back end (w |    3 |  1.36 % |
| 24 | [wp-hackers] Request for new mailing list wp |    3 |  1.36 % |
| 25 | [wp-hackers] Modifying Quick Edit            |    3 |  1.36 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |   39 | 17.65 % |
+----+----------------------------------------------+------+---------+

***** Most used email clients:
+----+----Mailer------------------------------------+--Msg-+-Percent-+
|  1 | Google Mail/Other                            |  130 | 58.82 % |
|  2 | Apple Mail (2.930.3)                         |   22 |  9.95 % |
|  3 | Apple Mail (2.935.3)                         |   13 |  5.88 % |
|  4 | Zimbra 5.0.13_GA_2791.RHEL5_64               |    9 |  4.07 % |
|  5 | Thunderbird 2.0.0.12 (Windows/20080213)      |    7 |  3.17 % |
|  6 | Thunderbird 2.0.0.21 (Windows/20090302)      |    6 |  2.71 % |
|  7 | Apple Mail (2.930.4)                         |    4 |  1.81 % |
|  8 | Mailsmith 2.2                                |    4 |  1.81 % |
|  9 | Mozilla/5.x                                  |    4 |  1.81 % |
| 10 | Postbox 1.0b12 (Macintosh/2009051120)        |    4 |  1.81 % |
| 11 | Zimbra 5.0.13_GA_2791.RHEL5_64 (Yahoo! Zimbr |    3 |  1.36 % |
| 12 | iPhone Mail (5H11)                           |    3 |  1.36 % |
| 13 | Lotus Notes Release 7.0                      |    2 |  0.90 % |
| 14 | Microsoft Office Outlook 12.0                |    1 |  0.45 % |
| 15 | Microsoft-Entourage/12.17.0.090302           |    1 |  0.45 % |
| 16 | Microsoft Outlook Express 6.x                |    1 |  0.45 % |
| 17 | Thunderbird 2.0.0.16 (Windows/20080708)      |    1 |  0.45 % |
| 18 | Turnpike/6.07-M (<AmDGt7qokIP+rGx9rWOTXb7hYc |    1 |  0.45 % |
| 19 | iPod Mail (5H11)                             |    1 |  0.45 % |
| 20 | YahooMailRC/1277.43 YahooMailWebService/0.7. |    1 |  0.45 % |
| 21 | G2/1.0                                       |    1 |  0.45 % |
| 22 | Internet Messaging Program (IMP) H3 (4.0.3)  |    1 |  0.45 % |
| 23 | Zimbra 5.0.16_GA_2921.RHEL5_64               |    1 |  0.45 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |    0 |  0.00 % |
+----+----------------------------------------------+------+---------+

***** Table of maximal quoting:
+----+-----Author------------------------------------------+-Percent-+
|  1 | joelfisher gmail.com                                | 91.95 % |
|  2 | alex.cologne googlemail.com                         | 88.39 % |
|  3 | mark.cunningham gmail.com                           | 83.71 % |
|  4 | geniosity gmail.com                                 | 83.55 % |
|  5 | sebastien hoosta.com                                | 81.61 % |
|  6 | aaron xavisys.com                                   | 78.82 % |
|  7 | les lcb.me.uk                                       | 75.41 % |
|  8 | lists freshpacific.co.nz                            | 74.40 % |
|  9 | johnbillion+wp gmail.com                            | 71.54 % |
| 10 | glenn glennansley.com                               | 68.54 % |
| 11 | bryanharley gmail.com                               | 68.52 % |
| 12 | joost yoast.com                                     | 67.52 % |
| 13 | speedboxer gmail.com                                | 66.19 % |
| 14 | paul codehooligans.com                              | 64.95 % |
| 15 | alan verselogic.net                                 | 60.22 % |
| 16 | leksa kapucino.org                                  | 59.59 % |
| 17 | ncrice gmail.com                                    | 57.12 % |
| 18 | mikeschinkel newclarity.net                         | 56.58 % |
| 19 | niladam gmail.com                                   | 56.43 % |
| 20 | aesqe skyphe.org                                    | 54.52 % |
| 21 | chris clwill.com                                    | 54.00 % |
| 22 | somani.mayur gmail.com                              | 53.04 % |
| 23 | lists mostrom.pp.se                                 | 51.15 % |
| 24 | kaspars konstruktors.com                            | 50.68 % |
| 25 | kushaldas gmail.com                                 | 47.94 % |
+----+-----------------------------------------------------+---------+
|    | average                                             | 46.96 % |
+----+-----------------------------------------------------+---------+

***** Graph showing number of messages written during hours of day:

100% -----------------------------#-----#------------- - 17
 90% ---------------------------#-#-----#------------- msgs
 80% ---------------------------#-#-----#---#---------
 70% -------------------#---#---#-#-----#-#-#-#---#---
 60% -------------------#---#---#-#---#-#-#-#-#-#-#-#-
 50% -------------------#---#---#-#---#-#-#-#-#-#-#-#-
 40% -#-#---------------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
 30% -#-#-----------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
 20% -#-#-#---------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
 10% -#-#-#-#-----#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
      * * * * * * * * * * * * * * * * * * * * * * * *
hour  0         5           11          17          23


***** Graph showing number of messages written during days of month:

100% -------#------------------------------------------------------- - 20
 90% -------#-----------------#-----------------------------------#- msgs
 80% -------#---------------#-#-----------------------------------#-
 70% -#-----#---------------#-#-----------------------------------#-
 60% -#---#-#-#-------------#-#---------------------------#-------#-
 50% -#---#-#-#-------------#-#---------------------#-----#-------#-
 40% -#---#-#-#-----------#-#-#-------#-------------#-----#-#-----#-
 30% -#-#-#-#-#---#-------#-#-#-#---#-#-------------#-----#-#-----#-
 20% -#-#-#-#-#-#-#-----#-#-#-#-#---#-#-#-----------#-----#-#-----#-
 10% -#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-------#-#-#-#-#-----#-
      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 day  1         6           12          18          24            31


***** Graph showing number of messages written during days of week:

100% -------------------------#--- - 55
 90% -------------------------#--- msgs
 80% -------------------------#---
 70% -------------------------#---
 60% -#---#---#---------------#---
 50% -#---#---#---------------#---
 40% -#---#---#---#-----------#---
 30% -#---#---#---#---#-------#---
 20% -#---#---#---#---#---#---#---
 10% -#---#---#---#---#---#---#---
      *   *   *   *   *   *   *
     Mon Tue Wed Thu Fri Sat Sun


***** Maximal quoting:
      Author     : joelfisher gmail.com
      Subject    : [wp-hackers] WPMU gets b*tch-slapped on DreamHost
      Date       : Sun, 31 May 2009 15:52:56 -0400
      Quote ratio: 91.96% / 3669 bytes

***** Longest message:
      Author     : mikeschinkel newclarity.net
      Subject    : [wp-hackers] Pull Latest Post from Each of 6 Categories
      Date       : Tue, 5 May 2009 02:15:45 -0500 (CDT)
      Size       : 8280 bytes

***** Most successful subject:
      Subject    : [wp-hackers] Pull Latest Post from Each of 6 Categories
      No. of msgs: 27
      Total size : 89679 bytes

***** Final summary:
      Total number of messages:             221
      Total number of different authors:    71
      Total number of different subjects:   54
      Total size of messages (w/o headers): 334561 bytes
      Average size of a message:            1513 bytes

***** Generated by MailListStat v1.3, (C) 2001-2003 <marki (at) nexin.sk>
***** See http://freshmeat.net/projects/mls for details...

DISCLAIMER: Stats automatically produced. Remember that stats are often
meaningless and deceiving.
From mwalters8 at gmail.com  Mon Jun  1 11:45:22 2009
From: mwalters8 at gmail.com (Matt Walters)
Date: Mon Jun  1 11:46:03 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <ae81acd10905311213x2be11c85hb29cb83cb62fa7f6@mail.gmail.com>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca> 
	<513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com> 
	<4A016EBC-E660-46B0-BEA7-8E8ED1957F37@gmail.com>
	<513d59820905310552m46a49fb8s82d873ff730a3261@mail.gmail.com> 
	<349fe48b0905310756h1f2a30ddqc1c75a53491e85fd@mail.gmail.com> 
	<D7EEB93C-B237-4CA6-A2F3-74C010D590C8@striderweb.com>
	<5cdeb9b20905310818j2e6e6947yc610a6ffb8b49bfd@mail.gmail.com> 
	<df809b110905310820u2369cb1eyeca981fb8806e665@mail.gmail.com> 
	<4A22D386.5030205@yoast.com>
	<ae81acd10905311213x2be11c85hb29cb83cb62fa7f6@mail.gmail.com>
Message-ID: <5dbff0c70906010445v3f0f3fc7i778db8d1f386d81d@mail.gmail.com>

On Sun, May 31, 2009 at 3:13 PM, Ozh <ozh@planetozh.com> wrote:
> </stopdiscussionabouthostingthxplz:)>

+1

There are many fine hosts out there.  We know :)  Thanks.
From xavier at borderie.net  Tue Jun  2 05:45:48 2009
From: xavier at borderie.net (Xavier Borderie)
Date: Tue Jun  2 05:46:22 2009
Subject: [wp-hackers] New milestone: 10000th tickets
Message-ID: <9e4ae73e0906012245i10d0696ey9db8caa59aecc11d@mail.gmail.com>

(cross-posted since if fits both lists IMHO, sorry for the inconvenience)

Remember the thread I launched, back in December, about having reached
10000 changesets to the codebase since it went into SVN ?
http://comox.textdrive.com/pipermail/wp-testers/2008-December/010374.html

Well, a few hours ago, Trac saw the opening (and closing) of the 10000th ticket!
http://core.trac.wordpress.org/ticket/10000

Congrats, hackers and testers! :)


I'd also like to point out a bit of trivia about 2.8: among all the
referenced milestones in Trac,
http://core.trac.wordpress.org/roadmap?show=all
2.8 is the one with the most tickets opened (815, which if memory
serves me well is the first time a milestone passes the 800 line), and
more importantly with the most tickets closed (758 and counting).

Usually milestones end their lifetime with a couple dozens (if not a
couple hundreds, most often) of unresolved tickets, which are then
swept under the rug of the next minor or major version.

But this time, thanks to extensions to the release date (and I'm
thinking also the tireless participation of external developers, among
which one of the most notable is Denis de Bernardy, who devoted
himself full-time to tickets-resolving ever since the 24-hour-marathon
(http://core.trac.wordpress.org/ticket/9758#comment:10), we've seen a
steady decrease in number of open tickets, even thought this major
release has seen more open tickets than any other previous release:
we're at 758 closed tickets already, and the closest to that is v2.5
with 750 closed tickets, then v2.7 with 668 closed tickets.

Seeing as both 2.5 and 2.7 both saw major interface changes to
WordPress, and that 2.8 doesn't not have much new interface apart from
the widgets sections, it looks to me as if the core developers chose
to push tis version's deadline so that they could "profit" from the
goodwill of said external developers, in order to try and close as
many long-standing tickets with the release, so as to to start on a
cleaner-than-ever slate when comes the time to produce 2.9.

Sure, 2.9 already has 398 open tickets under its sleeves, and "Future
release" has 339, but it looks like that, for the first time in a long
time (I might be wrong), we'll have a major release where no lone
ticket was left standing by unattended, so I'm hopeful this will make
for one of the sturdier version of WordPress since the 2.0 line

In any case, I'd like to use this e-mail to send another congrats to
everyone involved in this release: core devs, external devs,
reviewers, testers and people with an opinion who are willing to fight
for them with suggestions and, even better, patches.

-- 
Xavier Borderie
From aaron.jorbin at gmail.com  Tue Jun  2 22:15:49 2009
From: aaron.jorbin at gmail.com (Aaron Jorbin)
Date: Tue Jun  2 22:16:24 2009
Subject: [wp-hackers] adding action to get_footer, get_header etc.
Message-ID: <21952a280906021515i28dfdea5pb23275aeca5ef74e@mail.gmail.com>

Hi,
I was wondering if anyone new of a way to either use the $name
variable or similarly find it out when adding an action to one of the
get template tags (get_header, get_footer, get_sidebar)?
Thanks,
Aaron


aaron.jorbin@gmail.com
http://aaron.jorb.in
Twitter: @aaronjorbin
From kelter at badcat.com  Wed Jun  3 04:38:03 2009
From: kelter at badcat.com (Kelter-BadCat Design)
Date: Wed Jun  3 04:38:18 2009
Subject: [wp-hackers] Searching Links
Message-ID: <8c8309a20906022138t3a44d58cy6d7ffcc62106a214@mail.gmail.com>

Hi,
Can anyone point me to a plugin (or functions hack etc.) that allows
searching through the "Links" (Blogroll)?

thank you!
-Kel

===========================
BadCat Design, Inc.
250 Union Square Drive
New Hope, PA 18938
Tel 215.862.4860
http://www.BadCat.com
From mikeschinkel at newclarity.net  Wed Jun  3 04:42:14 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jun  3 04:43:16 2009
Subject: [wp-hackers] Searching Links
In-Reply-To: <8c8309a20906022138t3a44d58cy6d7ffcc62106a214@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl51NgF328621b8f9f5d2e0a33323,
	mikeschinkel@newclarity.net, 24446937.321244004129631.J>

How do you want to search?  Do you want the WordPress search to add them to the list of items searched or something else?

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "Kelter-BadCat Design" <kelter@badcat.com>
To: wp-hackers@lists.automattic.com
Sent: Wednesday, June 3, 2009 12:38:03 AM GMT -05:00 US/Canada Eastern
Subject: [wp-hackers] Searching Links

Hi,
Can anyone point me to a plugin (or functions hack etc.) that allows
searching through the "Links" (Blogroll)?

thank you!
-Kel

===========================
BadCat Design, Inc.
250 Union Square Drive
New Hope, PA 18938
Tel 215.862.4860
http://www.BadCat.com
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From malaiac at gmail.com  Wed Jun  3 07:30:03 2009
From: malaiac at gmail.com (Malaiac)
Date: Wed Jun  3 07:30:39 2009
Subject: [wp-hackers] Searching Links
In-Reply-To: <9074690543954043687@unknownmsgid>
References: <8c8309a20906022138t3a44d58cy6d7ffcc62106a214@mail.gmail.com> 
	<9074690543954043687@unknownmsgid>
Message-ID: <59e7f3130906030030w478eeb15t3fd0f25d5f01dd76@mail.gmail.com>

Links search is available in zeList (directory plugin)
see http://www.ecololiste.com/?ls=energie

http://wordpress.org/extend/plugins/zelist/

> From: "Kelter-BadCat Design" <kelter@badcat.com>
> Can anyone point me to a plugin (or functions hack etc.) that allows
> searching through the "Links" (Blogroll)?
From scribu at gmail.com  Wed Jun  3 10:25:11 2009
From: scribu at gmail.com (scribu)
Date: Wed Jun  3 10:25:28 2009
Subject: [wp-hackers] adding action to get_footer, get_header etc.
In-Reply-To: <21952a280906021515i28dfdea5pb23275aeca5ef74e@mail.gmail.com>
References: <21952a280906021515i28dfdea5pb23275aeca5ef74e@mail.gmail.com>
Message-ID: <349fe48b0906030325m300a717fq4482cb8c20ec70c5@mail.gmail.com>

I don't understand what this name variable is supposed to be.

Maybe you need to use current_filter() which tells you what hook is
currently fired. Or maybe has_filter().

On Wed, Jun 3, 2009 at 1:15 AM, Aaron Jorbin <aaron.jorbin@gmail.com> wrote:

> Hi,
> I was wondering if anyone new of a way to either use the $name
> variable or similarly find it out when adding an action to one of the
> get template tags (get_header, get_footer, get_sidebar)?
> Thanks,
> Aaron
>
>
> aaron.jorbin@gmail.com
> http://aaron.jorb.in
> Twitter: @aaronjorbin
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://scribu.net
From niladam at gmail.com  Wed Jun  3 15:19:52 2009
From: niladam at gmail.com (madalin)
Date: Wed Jun  3 15:20:11 2009
Subject: [wp-hackers] two wordpress's same db..
Message-ID: <df809b110906030819l3965cfdel5e899f506381130d@mail.gmail.com>

Say i'd like to have a single wordpress installation but different
themes on each subdomain (a site with multiple subdomains) and i'd
like every website to share users and such, how would i do that
without using WPMU ?

Thanks :)

-- 
Regards,
madalin
http://madalin.eu
From joost at yoast.com  Wed Jun  3 15:24:34 2009
From: joost at yoast.com (Joost de Valk)
Date: Wed Jun  3 15:25:27 2009
Subject: [wp-hackers] two wordpress's same db..
In-Reply-To: <df809b110906030819l3965cfdel5e899f506381130d@mail.gmail.com>
References: <df809b110906030819l3965cfdel5e899f506381130d@mail.gmail.com>
Message-ID: <6DEAEFCC-DB5A-4C07-93B7-12F6C97436F6@yoast.com>

Why on earth wouldn't you use WP MU?

On 3 jun 2009, at 17:19, madalin <niladam@gmail.com> wrote:

> Say i'd like to have a single wordpress installation but different
> themes on each subdomain (a site with multiple subdomains) and i'd
> like every website to share users and such, how would i do that
> without using WPMU ?
>
> Thanks :)
>
> -- 
> Regards,
> madalin
> http://madalin.eu
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From mike_walsh at mindspring.com  Wed Jun  3 15:26:45 2009
From: mike_walsh at mindspring.com (Mike Walsh)
Date: Wed Jun  3 15:27:04 2009
Subject: [wp-hackers] two wordpress's same db..
In-Reply-To: <df809b110906030819l3965cfdel5e899f506381130d@mail.gmail.com>
References: <df809b110906030819l3965cfdel5e899f506381130d@mail.gmail.com>
Message-ID: <000b01c9e45f$b48ac870$1da05950$@com>

There is a plugin I looked at called wp-hive which does this.  I looked at using it but felt some of the decisions the author had made about hard coded table names could potentially be a limitation so  ultimately I didn't use it.  It has been a while since I looked at it though.

Mike

-----Original Message-----
From: wp-hackers-bounces@lists.automattic.com [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of madalin
Sent: Wednesday, June 03, 2009 11:20 AM
To: wp-hackers@lists.automattic.com
Subject: [wp-hackers] two wordpress's same db..

Say i'd like to have a single wordpress installation but different
themes on each subdomain (a site with multiple subdomains) and i'd
like every website to share users and such, how would i do that
without using WPMU ?

Thanks :)

-- 
Regards,
madalin
http://madalin.eu
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From peter.westwood at ftwr.co.uk  Wed Jun  3 15:43:32 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Jun  3 15:44:38 2009
Subject: [wp-hackers] adding action to get_footer, get_header etc.
In-Reply-To: <349fe48b0906030325m300a717fq4482cb8c20ec70c5@mail.gmail.com>
References: <21952a280906021515i28dfdea5pb23275aeca5ef74e@mail.gmail.com>
	<349fe48b0906030325m300a717fq4482cb8c20ec70c5@mail.gmail.com>
Message-ID: <D0211488-82E2-4B23-BBD7-650D83DC2426@ftwr.co.uk>

I think what he wants is the name for the sidebar passed to the filter.

I'll look in to this soon

--
Peter Westwood
http://peter.westwood.name

On 3 Jun 2009, at 11:25, scribu <scribu@gmail.com> wrote:

> I don't understand what this name variable is supposed to be.
>
> Maybe you need to use current_filter() which tells you what hook is
> currently fired. Or maybe has_filter().
>
> On Wed, Jun 3, 2009 at 1:15 AM, Aaron Jorbin  
> <aaron.jorbin@gmail.com> wrote:
>
>> Hi,
>> I was wondering if anyone new of a way to either use the $name
>> variable or similarly find it out when adding an action to one of the
>> get template tags (get_header, get_footer, get_sidebar)?
>> Thanks,
>> Aaron
>>
>>
>> aaron.jorbin@gmail.com
>> http://aaron.jorb.in
>> Twitter: @aaronjorbin
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From malaiac at gmail.com  Wed Jun  3 15:54:44 2009
From: malaiac at gmail.com (Malaiac)
Date: Wed Jun  3 15:55:26 2009
Subject: [wp-hackers] two wordpress's same db..
In-Reply-To: <df809b110906030819l3965cfdel5e899f506381130d@mail.gmail.com>
References: <df809b110906030819l3965cfdel5e899f506381130d@mail.gmail.com>
Message-ID: <59e7f3130906030854l67a36694j8dc42cc4abeab409@mail.gmail.com>

2009/6/3 madalin <niladam@gmail.com>:
> Say i'd like to have a single wordpress installation but different
> themes on each subdomain (a site with multiple subdomains) and i'd
> like every website to share users and such, how would i do that
> without using WPMU ?

Shared user table.
look for custom_user_table in wp config tweaking

Assuming every user must have the same capabilities on each subdomain,
you'll have to hack core to change the prefix_capabilities

M
From niladam at gmail.com  Wed Jun  3 15:59:42 2009
From: niladam at gmail.com (madalin)
Date: Wed Jun  3 15:59:56 2009
Subject: [wp-hackers] two wordpress's same db..
In-Reply-To: <59e7f3130906030854l67a36694j8dc42cc4abeab409@mail.gmail.com>
References: <df809b110906030819l3965cfdel5e899f506381130d@mail.gmail.com>
	<59e7f3130906030854l67a36694j8dc42cc4abeab409@mail.gmail.com>
Message-ID: <df809b110906030859h1fb26c7bmfb278a9b3bdf92c6@mail.gmail.com>

Thanks. I think wpmu is the best solution, as wp-hive looks fine, but
might get outdated.

Another issue i have is:

i moved blog from /blog to root dir and used Dean's Permalinks
Migration because we also changed the permalinks from
/%year%/%monthnum%/%day%/%postname%/ to /%postname%/ and now whenever
i create a new page and go to it, i get a 404. Any suggestions ?

The 404 is theme's 404. I have really NO CLUE of what the problem is...

Thanks

On Wed, Jun 3, 2009 at 6:54 PM, Malaiac <malaiac@gmail.com> wrote:
> 2009/6/3 madalin <niladam@gmail.com>:
>> Say i'd like to have a single wordpress installation but different
>> themes on each subdomain (a site with multiple subdomains) and i'd
>> like every website to share users and such, how would i do that
>> without using WPMU ?
>
> Shared user table.
> look for custom_user_table in wp config tweaking
>
> Assuming every user must have the same capabilities on each subdomain,
> you'll have to hack core to change the prefix_capabilities
>
> M
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Cu drag,
madalin
http://madalin.eu
From aaron.jorbin at gmail.com  Wed Jun  3 16:49:52 2009
From: aaron.jorbin at gmail.com (Aaron Jorbin)
Date: Wed Jun  3 16:50:29 2009
Subject: [wp-hackers] adding action to get_footer, get_header etc.
In-Reply-To: <D0211488-82E2-4B23-BBD7-650D83DC2426@ftwr.co.uk>
References: <21952a280906021515i28dfdea5pb23275aeca5ef74e@mail.gmail.com> 
	<349fe48b0906030325m300a717fq4482cb8c20ec70c5@mail.gmail.com> 
	<D0211488-82E2-4B23-BBD7-650D83DC2426@ftwr.co.uk>
Message-ID: <21952a280906030949j21c2a8ffs7b05d87eebd47823@mail.gmail.com>

That's correct Peter.

Using Get_Header as an example:

<code>
function get_header( $name = null ) {
       do_action( 'get_header' );

       $templates = array();
       if ( isset($name) )
               $templates[] = "header-{$name}.php";

       $templates[] = "header.php";

       if ('' == locate_template($templates, true))
               load_template( get_theme_root() . '/default/header.php');
}
</code>

so for example a template could have get_header('home') set in there
theme template to use the header-home.php file, but when adding an
action to get_header, I can't figure out how to use $name variable
that would be set to 'home'.

Did this clear up your confusion Scribu?

Thanks,
Aaron
aaron.jorbin@gmail.com
http://aaron.jorb.in
Twitter: @aaronjorbin




On Wed, Jun 3, 2009 at 8:43 AM, Peter Westwood
<peter.westwood@ftwr.co.uk> wrote:
> I think what he wants is the name for the sidebar passed to the filter.
>
> I'll look in to this soon
>
> --
> Peter Westwood
> http://peter.westwood.name
>
> On 3 Jun 2009, at 11:25, scribu <scribu@gmail.com> wrote:
>
>> I don't understand what this name variable is supposed to be.
>>
>> Maybe you need to use current_filter() which tells you what hook is
>> currently fired. Or maybe has_filter().
>>
>> On Wed, Jun 3, 2009 at 1:15 AM, Aaron Jorbin <aaron.jorbin@gmail.com>
>> wrote:
>>
>>> Hi,
>>> I was wondering if anyone new of a way to either use the $name
>>> variable or similarly find it out when adding an action to one of the
>>> get template tags (get_header, get_footer, get_sidebar)?
>>> Thanks,
>>> Aaron
>>>
>>>
>>> aaron.jorbin@gmail.com
>>> http://aaron.jorb.in
>>> Twitter: @aaronjorbin
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>>
>>
>> --
>> http://scribu.net
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From yahgrp at poplarware.com  Wed Jun  3 17:00:04 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Wed Jun  3 16:57:47 2009
Subject: [wp-hackers] adding action to get_footer, get_header etc.
In-Reply-To: <21952a280906030949j21c2a8ffs7b05d87eebd47823@mail.gmail.com>
References: <21952a280906021515i28dfdea5pb23275aeca5ef74e@mail.gmail.com>
	<349fe48b0906030325m300a717fq4482cb8c20ec70c5@mail.gmail.com>
	<D0211488-82E2-4B23-BBD7-650D83DC2426@ftwr.co.uk>
	<21952a280906030949j21c2a8ffs7b05d87eebd47823@mail.gmail.com>
Message-ID: <4A26AC14.4000803@poplarware.com>

This is probably worthy of filing an issue on Trac.

    --Jennifer

Aaron Jorbin wrote:
> That's correct Peter.
> 
> Using Get_Header as an example:
> 
> <code>
> function get_header( $name = null ) {
>        do_action( 'get_header' );
> 
>        $templates = array();
>        if ( isset($name) )
>                $templates[] = "header-{$name}.php";
> 
>        $templates[] = "header.php";
> 
>        if ('' == locate_template($templates, true))
>                load_template( get_theme_root() . '/default/header.php');
> }
> </code>
> 
> so for example a template could have get_header('home') set in there
> theme template to use the header-home.php file, but when adding an
> action to get_header, I can't figure out how to use $name variable
> that would be set to 'home'.


-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com
Drupal, WordPress, and custom Web programming

From autremonde75 at gmail.com  Wed Jun  3 17:16:24 2009
From: autremonde75 at gmail.com (L'Autre Monde)
Date: Wed Jun  3 17:16:36 2009
Subject: [wp-hackers] How can I filter on post count for categories?
Message-ID: <8D6935FDD14145D0823A397F43A29AEC@pluton>

Hello,

I am currently writing a plugin which creates a custom post type. When the category list widget is displayed, the number of posts per categories only includes the posts with a post type of "post". Also, if a category only has the customer post type, it isn't listed as it is seen as an empty one.

I have tried to filter on the get_category and list_cats to modify the category->count for the category but it doesn't work :(

Any idea for this please? :)

Cheers!

Olivier
From if.website at gmail.com  Wed Jun  3 17:21:05 2009
From: if.website at gmail.com (Austin Matzko)
Date: Wed Jun  3 17:21:18 2009
Subject: [wp-hackers] How can I filter on post count for categories?
In-Reply-To: <8D6935FDD14145D0823A397F43A29AEC@pluton>
References: <8D6935FDD14145D0823A397F43A29AEC@pluton>
Message-ID: <674b4a3b0906031021r3171051n54b76849d6cf619a@mail.gmail.com>

On Wed, Jun 3, 2009 at 12:16 PM, L'Autre Monde <autremonde75@gmail.com> wrote:
> I am currently writing a plugin which creates a custom post type. When the category list widget is displayed, the number of posts per categories only includes the posts with a post type of "post". Also, if a category only has the customer post type, it isn't listed as it is seen as an empty one.
>
> I have tried to filter on the get_category and list_cats to modify the category->count for the category but it doesn't work :(

Try counting the number of items in the array returned by get_objects_in_term()
From mikeschinkel at newclarity.net  Wed Jun  3 17:56:39 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jun  3 17:58:39 2009
Subject: [wp-hackers] How can I filter on post count for categories?
In-Reply-To: <8D6935FDD14145D0823A397F43A29AEC@pluton>
References: <8D6935FDD14145D0823A397F43A29AEC@pluton>
Message-ID: <EMEWEMEW2_DELIMl52Cufa35fc01a376a68e1fe94cb,
	mikeschinkel@newclarity.net, 03988998-1CC3-44C1-AC48>

Olivier:

While I haven't drilled down yet to do this I think custom post types  
could be a really important addition to WP either as a plugin or  
better yet to core. As there are so many assumptions in WordPress that  
assume "post" that doing as a plugin will be an uphill battle which is  
why it would really need to be in core.  If not in core too many other  
plugins won't support the notion of custom post types.

I have a plugin I'm using for custom URLs that would fits well with  
custom post types. It's not yet ready to be released because it  
doesn't yet have an admin console interface and also because it still  
has a lot of areas where it is not robust but I have been using it  
with the More Fields plugin which gives kind of a psuedo-custom post  
types capability.

Anyway, the reason I email is to ask why not use More Fields because  
it works albeit not using wp_posts->post_type but instead wp_postmeta- 
 >option_name="mf_post_type", and also to see how many other people  
are interested in a custom post types in core?

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/




On Jun 3, 2009, at 1:16 PM, L'Autre Monde wrote:

> Hello,
>
> I am currently writing a plugin which creates a custom post type.  
> When the category list widget is displayed, the number of posts per  
> categories only includes the posts with a post type of "post". Also,  
> if a category only has the customer post type, it isn't listed as it  
> is seen as an empty one.
>
> I have tried to filter on the get_category and list_cats to modify  
> the category->count for the category but it doesn't work :(
>
> Any idea for this please? :)
>
> Cheers!
>
> Olivier
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From scribu at gmail.com  Wed Jun  3 17:58:36 2009
From: scribu at gmail.com (scribu)
Date: Wed Jun  3 17:58:52 2009
Subject: [wp-hackers] adding action to get_footer, get_header etc.
In-Reply-To: <21952a280906030949j21c2a8ffs7b05d87eebd47823@mail.gmail.com>
References: <21952a280906021515i28dfdea5pb23275aeca5ef74e@mail.gmail.com>
	<349fe48b0906030325m300a717fq4482cb8c20ec70c5@mail.gmail.com>
	<D0211488-82E2-4B23-BBD7-650D83DC2426@ftwr.co.uk>
	<21952a280906030949j21c2a8ffs7b05d87eebd47823@mail.gmail.com>
Message-ID: <349fe48b0906031058h2a8d392eje1e04f144594e760@mail.gmail.com>

>
> Did this clear up your confusion Scribu?
>

Yes, now I see what you're getting at.

Opened a ticket with a simple patch:
http://core.trac.wordpress.org/ticket/10022

-- 
http://scribu.net
From ryan at boren.nu  Wed Jun  3 19:59:49 2009
From: ryan at boren.nu (Ryan Boren)
Date: Wed Jun  3 19:59:59 2009
Subject: [wp-hackers] Summary of #wordpress-dev IRC meetup for 20090603
Message-ID: <c8f37c930906031259r3c1623a5nb67445131147d88e@mail.gmail.com>

Points from today's meetup:

* Next Wednesday, June 10th, is the target date for the release of
WordPress 2.8.  Tickets against the 2.8 milestone that are not
blockers will be postponed to another release.
* WP 2.9 will require MySQL 4.1.2.
* Checks will added to the auto upgrader that will prevent upgrade to
2.9 if running MySQL < 4.1.2 and suggest telling the host to upgrade.
* Checks will be added to the upgrader to suggest that those running
PHP 4 switch to PHP 5. A link to a Codex page describing how to switch
for various hosts should be provided.  This is in preparation for the
blessed day when we will be able to require PHP 5.
* The new meetup time will be every Wednesday at 9pm UTC.
From supporto at pixline.net  Wed Jun  3 21:03:15 2009
From: supporto at pixline.net (=?WINDOWS-1252?Q?Pixline_=9B_Paolo_Tresso?=)
Date: Wed Jun  3 21:03:31 2009
Subject: [wp-hackers] Summary of #wordpress-dev IRC meetup for 20090603
In-Reply-To: <c8f37c930906031259r3c1623a5nb67445131147d88e@mail.gmail.com>
References: <c8f37c930906031259r3c1623a5nb67445131147d88e@mail.gmail.com>
Message-ID: <5AA7FB07-BAC9-4620-B42E-8F8539BFD8AF@pixline.net>

Il giorno 03/giu/09, alle ore 21:59, Ryan Boren ha scritto:

> * Checks will be added to the upgrader to suggest that those running
> PHP 4 switch to PHP 5. A link to a Codex page describing how to switch
> for various hosts should be provided.  This is in preparation for the
> blessed day when we will be able to require PHP 5.


can I say I love you coders? :-)
thanks, really.

paolo/pixline

From aaron.jorbin at gmail.com  Wed Jun  3 21:05:55 2009
From: aaron.jorbin at gmail.com (Aaron Jorbin)
Date: Wed Jun  3 21:06:34 2009
Subject: [wp-hackers] adding action to get_footer, get_header etc.
In-Reply-To: <349fe48b0906031058h2a8d392eje1e04f144594e760@mail.gmail.com>
References: <21952a280906021515i28dfdea5pb23275aeca5ef74e@mail.gmail.com> 
	<349fe48b0906030325m300a717fq4482cb8c20ec70c5@mail.gmail.com> 
	<D0211488-82E2-4B23-BBD7-650D83DC2426@ftwr.co.uk>
	<21952a280906030949j21c2a8ffs7b05d87eebd47823@mail.gmail.com> 
	<349fe48b0906031058h2a8d392eje1e04f144594e760@mail.gmail.com>
Message-ID: <21952a280906031405y5748b094m22b046325bc2f8be@mail.gmail.com>

Thanks Scribu and Westi.  Hopefully this can make it into 2.8

aaron.jorbin@gmail.com
http://aaron.jorb.in
Twitter: @aaronjorbin
971-231-3499




On Wed, Jun 3, 2009 at 10:58 AM, scribu <scribu@gmail.com> wrote:
>>
>> Did this clear up your confusion Scribu?
>>
>
> Yes, now I see what you're getting at.
>
> Opened a ticket with a simple patch:
> http://core.trac.wordpress.org/ticket/10022
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From autremonde75 at gmail.com  Wed Jun  3 22:32:31 2009
From: autremonde75 at gmail.com (L'Autre Monde)
Date: Wed Jun  3 22:32:47 2009
Subject: [wp-hackers] How can I filter on post count for categories?
References: <8D6935FDD14145D0823A397F43A29AEC@pluton>
	<EMEWEMEW2_DELIMl52Cufa35fc01a376a68e1fe94cb,
	mikeschinkel@newclarity.net, 03988998-1CC3-44C1-AC48>
Message-ID: <F9FD501C7B1A44AD95B5058B7B5BBF71@pluton>

Mike,

To be clear, I am currently developping a ticket system based on Wordpress.
So I created a custom type "ticket". I have customized the admin to include
this new type and duplicated the post editor with some restrictions.

The idea behind that is that I wanted to keep wordpress built-in features 
intact.
I didn't want to tweak the post editor. So I added another menu from scratch
with the same functionnalities as the post editor with custom fields.

Now that my admin I/F looks ok, I need to be able to bring the tickets with
the posts together on the front end. It works pretty well with some 
filtering
on the wp_query however I am stuck on this category counter ;)

I will try the suggestion from Austin, thanks ;)

Cheers,

Olivier

----- Original Message ----- 
From: "Mike Schinkel" <mikeschinkel@newclarity.net>
To: <wp-hackers@lists.automattic.com>
Sent: Wednesday, June 03, 2009 7:56 PM
Subject: Re: [wp-hackers] How can I filter on post count for categories?


> Olivier:
>
> While I haven't drilled down yet to do this I think custom post types 
> could be a really important addition to WP either as a plugin or  better 
> yet to core. As there are so many assumptions in WordPress that  assume 
> "post" that doing as a plugin will be an uphill battle which is  why it 
> would really need to be in core.  If not in core too many other  plugins 
> won't support the notion of custom post types.
>
> I have a plugin I'm using for custom URLs that would fits well with 
> custom post types. It's not yet ready to be released because it  doesn't 
> yet have an admin console interface and also because it still  has a lot 
> of areas where it is not robust but I have been using it  with the More 
> Fields plugin which gives kind of a psuedo-custom post  types capability.
>
> Anyway, the reason I email is to ask why not use More Fields because  it 
> works albeit not using wp_posts->post_type but instead wp_postmeta-
> >option_name="mf_post_type", and also to see how many other people
> are interested in a custom post types in core?
>
> -Mike Schinkel
> WordPress Custom Plugins
> http://mikeschinkel.com/custom-wordpress-plugins/
>
>
>
>
> On Jun 3, 2009, at 1:16 PM, L'Autre Monde wrote:
>
>> Hello,
>>
>> I am currently writing a plugin which creates a custom post type.  When 
>> the category list widget is displayed, the number of posts per 
>> categories only includes the posts with a post type of "post". Also,  if 
>> a category only has the customer post type, it isn't listed as it  is 
>> seen as an empty one.
>>
>> I have tried to filter on the get_category and list_cats to modify  the 
>> category->count for the category but it doesn't work :(
>>
>> Any idea for this please? :)
>>
>> Cheers!
>>
>> Olivier
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

From joost at yoast.com  Wed Jun  3 22:33:57 2009
From: joost at yoast.com (Joost de Valk)
Date: Wed Jun  3 22:34:24 2009
Subject: [wp-hackers] How can I filter on post count for categories?
In-Reply-To: <F9FD501C7B1A44AD95B5058B7B5BBF71@pluton>
References: <8D6935FDD14145D0823A397F43A29AEC@pluton>	<EMEWEMEW2_DELIMl52Cufa35fc01a376a68e1fe94cb,
	mikeschinkel@newclarity.net,
	03988998-1CC3-44C1-AC48> <F9FD501C7B1A44AD95B5058B7B5BBF71@pluton>
Message-ID: <4A26FA55.6030409@yoast.com>

Arent you looking for custom taxonomies? :)

L'Autre Monde wrote:
> Mike,
>
> To be clear, I am currently developping a ticket system based on 
> Wordpress.
> So I created a custom type "ticket". I have customized the admin to 
> include
> this new type and duplicated the post editor with some restrictions.
>
> The idea behind that is that I wanted to keep wordpress built-in 
> features intact.
> I didn't want to tweak the post editor. So I added another menu from 
> scratch
> with the same functionnalities as the post editor with custom fields.
>
> Now that my admin I/F looks ok, I need to be able to bring the tickets 
> with
> the posts together on the front end. It works pretty well with some 
> filtering
> on the wp_query however I am stuck on this category counter ;)
>
> I will try the suggestion from Austin, thanks ;)
>
> Cheers,
>
> Olivier
>
> ----- Original Message ----- From: "Mike Schinkel" 
> <mikeschinkel@newclarity.net>
> To: <wp-hackers@lists.automattic.com>
> Sent: Wednesday, June 03, 2009 7:56 PM
> Subject: Re: [wp-hackers] How can I filter on post count for categories?
>
>
>> Olivier:
>>
>> While I haven't drilled down yet to do this I think custom post types 
>> could be a really important addition to WP either as a plugin or  
>> better yet to core. As there are so many assumptions in WordPress 
>> that  assume "post" that doing as a plugin will be an uphill battle 
>> which is  why it would really need to be in core.  If not in core too 
>> many other  plugins won't support the notion of custom post types.
>>
>> I have a plugin I'm using for custom URLs that would fits well with 
>> custom post types. It's not yet ready to be released because it  
>> doesn't yet have an admin console interface and also because it 
>> still  has a lot of areas where it is not robust but I have been 
>> using it  with the More Fields plugin which gives kind of a 
>> psuedo-custom post  types capability.
>>
>> Anyway, the reason I email is to ask why not use More Fields because  
>> it works albeit not using wp_posts->post_type but instead wp_postmeta-
>> >option_name="mf_post_type", and also to see how many other people
>> are interested in a custom post types in core?
>>
>> -Mike Schinkel
>> WordPress Custom Plugins
>> http://mikeschinkel.com/custom-wordpress-plugins/
>>
>>
>>
>>
>> On Jun 3, 2009, at 1:16 PM, L'Autre Monde wrote:
>>
>>> Hello,
>>>
>>> I am currently writing a plugin which creates a custom post type.  
>>> When the category list widget is displayed, the number of posts per 
>>> categories only includes the posts with a post type of "post". 
>>> Also,  if a category only has the customer post type, it isn't 
>>> listed as it  is seen as an empty one.
>>>
>>> I have tried to filter on the get_category and list_cats to modify  
>>> the category->count for the category but it doesn't work :(
>>>
>>> Any idea for this please? :)
>>>
>>> Cheers!
>>>
>>> Olivier
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers 
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers 
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

-- 
*Joost de Valk*
SEO & Web Development (Magento & WordPress)
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost@orangevalley.nl <mailto:joost@orangevalley.nl> - 
joost@yoast.com <mailto:joost@yoast.com>
T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
W: http://yoast.com/
From mikeschinkel at newclarity.net  Wed Jun  3 23:20:26 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jun  3 23:23:08 2009
Subject: [wp-hackers] How can I filter on post count for categories?
In-Reply-To: <3236572.581244069261758.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl52IKQ04a5261847708931c8f0d0,
	mikeschinkel@newclarity.net, 1661801.601244071224151.J>

Sounds like the "More Fields" plugin would give you exactly what you want.  It uses the default post editor but add a menu option for each of your custom post types, in your case it would be "Tickets" and it would let you add custom fields specifically for posts of type "ticket" that would not show up on the normal post editor page.

HTH. 

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "L'Autre Monde" <autremonde75@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Wednesday, June 3, 2009 6:32:31 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] How can I filter on post count for categories?

Mike,

To be clear, I am currently developping a ticket system based on Wordpress.
So I created a custom type "ticket". I have customized the admin to include
this new type and duplicated the post editor with some restrictions.

The idea behind that is that I wanted to keep wordpress built-in features 
intact.
I didn't want to tweak the post editor. So I added another menu from scratch
with the same functionnalities as the post editor with custom fields.

Now that my admin I/F looks ok, I need to be able to bring the tickets with
the posts together on the front end. It works pretty well with some 
filtering
on the wp_query however I am stuck on this category counter ;)

I will try the suggestion from Austin, thanks ;)

Cheers,

Olivier

----- Original Message ----- 
From: "Mike Schinkel" <mikeschinkel@newclarity.net>
To: <wp-hackers@lists.automattic.com>
Sent: Wednesday, June 03, 2009 7:56 PM
Subject: Re: [wp-hackers] How can I filter on post count for categories?


> Olivier:
>
> While I haven't drilled down yet to do this I think custom post types 
> could be a really important addition to WP either as a plugin or  better 
> yet to core. As there are so many assumptions in WordPress that  assume 
> "post" that doing as a plugin will be an uphill battle which is  why it 
> would really need to be in core.  If not in core too many other  plugins 
> won't support the notion of custom post types.
>
> I have a plugin I'm using for custom URLs that would fits well with 
> custom post types. It's not yet ready to be released because it  doesn't 
> yet have an admin console interface and also because it still  has a lot 
> of areas where it is not robust but I have been using it  with the More 
> Fields plugin which gives kind of a psuedo-custom post  types capability.
>
> Anyway, the reason I email is to ask why not use More Fields because  it 
> works albeit not using wp_posts->post_type but instead wp_postmeta-
> >option_name="mf_post_type", and also to see how many other people
> are interested in a custom post types in core?
>
> -Mike Schinkel
> WordPress Custom Plugins
> http://mikeschinkel.com/custom-wordpress-plugins/
>
>
>
>
> On Jun 3, 2009, at 1:16 PM, L'Autre Monde wrote:
>
>> Hello,
>>
>> I am currently writing a plugin which creates a custom post type.  When 
>> the category list widget is displayed, the number of posts per 
>> categories only includes the posts with a post type of "post". Also,  if 
>> a category only has the customer post type, it isn't listed as it  is 
>> seen as an empty one.
>>
>> I have tried to filter on the get_category and list_cats to modify  the 
>> category->count for the category but it doesn't work :(
>>
>> Any idea for this please? :)
>>
>> Cheers!
>>
>> Olivier
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From autremonde75 at gmail.com  Thu Jun  4 06:07:01 2009
From: autremonde75 at gmail.com (L'Autre Monde)
Date: Thu Jun  4 06:07:16 2009
Subject: [wp-hackers] How can I filter on post count for categories?
References: <EMEWEMEW2_DELIMl52IKQ04a5261847708931c8f0d0,
	mikeschinkel@newclarity.net, 1661801.601244071224151.J>
Message-ID: <DA0117BD8FE04DFABEFBA0C69403A4E2@pluton>

You are right, originally, I looked at the more fields plugin and it matched 
most of my needs but not all. When I started to developp this plugin, the 
more fields plugin wasn't providing a separate menu option I think. Also, I 
wanted to remove all the "unecessary" metas boxes from the editor so that it 
looks like a "ticket" editor more than a blog or whatever. Finally I wanted 
to provide directly customised front end template that includes the added 
metas for the tickets so that the user doesn't have to dig into the code to 
customise it if he doesn't want or know how to do it.

That's why I started from scratch. :)

Anyway, I appreciate your help!

Thanks!

Olivier

----- Original Message ----- 
From: "Mike Schinkel" <mikeschinkel@newclarity.net>
To: <wp-hackers@lists.automattic.com>
Sent: Thursday, June 04, 2009 1:20 AM
Subject: Re: [wp-hackers] How can I filter on post count for categories?


> Sounds like the "More Fields" plugin would give you exactly what you want. 
> It uses the default post editor but add a menu option for each of your 
> custom post types, in your case it would be "Tickets" and it would let you 
> add custom fields specifically for posts of type "ticket" that would not 
> show up on the normal post editor page.
>
> HTH.
>
> -Mike Schinkel
> Custom Wordpress Plugins
> http://mikeschinkel.com/custom-wordpress-plugins
>
> ----- Original Message -----
> From: "L'Autre Monde" <autremonde75@gmail.com>
> To: wp-hackers@lists.automattic.com
> Sent: Wednesday, June 3, 2009 6:32:31 PM GMT -05:00 US/Canada Eastern
> Subject: Re: [wp-hackers] How can I filter on post count for categories?
>
> Mike,
>
> To be clear, I am currently developping a ticket system based on 
> Wordpress.
> So I created a custom type "ticket". I have customized the admin to 
> include
> this new type and duplicated the post editor with some restrictions.
>
> The idea behind that is that I wanted to keep wordpress built-in features
> intact.
> I didn't want to tweak the post editor. So I added another menu from 
> scratch
> with the same functionnalities as the post editor with custom fields.
>
> Now that my admin I/F looks ok, I need to be able to bring the tickets 
> with
> the posts together on the front end. It works pretty well with some
> filtering
> on the wp_query however I am stuck on this category counter ;)
>
> I will try the suggestion from Austin, thanks ;)
>
> Cheers,
>
> Olivier
>
> ----- Original Message ----- 
> From: "Mike Schinkel" <mikeschinkel@newclarity.net>
> To: <wp-hackers@lists.automattic.com>
> Sent: Wednesday, June 03, 2009 7:56 PM
> Subject: Re: [wp-hackers] How can I filter on post count for categories?
>
>
>> Olivier:
>>
>> While I haven't drilled down yet to do this I think custom post types
>> could be a really important addition to WP either as a plugin or  better
>> yet to core. As there are so many assumptions in WordPress that  assume
>> "post" that doing as a plugin will be an uphill battle which is  why it
>> would really need to be in core.  If not in core too many other  plugins
>> won't support the notion of custom post types.
>>
>> I have a plugin I'm using for custom URLs that would fits well with
>> custom post types. It's not yet ready to be released because it  doesn't
>> yet have an admin console interface and also because it still  has a lot
>> of areas where it is not robust but I have been using it  with the More
>> Fields plugin which gives kind of a psuedo-custom post  types capability.
>>
>> Anyway, the reason I email is to ask why not use More Fields because  it
>> works albeit not using wp_posts->post_type but instead wp_postmeta-
>> >option_name="mf_post_type", and also to see how many other people
>> are interested in a custom post types in core?
>>
>> -Mike Schinkel
>> WordPress Custom Plugins
>> http://mikeschinkel.com/custom-wordpress-plugins/
>>
>>
>>
>>
>> On Jun 3, 2009, at 1:16 PM, L'Autre Monde wrote:
>>
>>> Hello,
>>>
>>> I am currently writing a plugin which creates a custom post type.  When
>>> the category list widget is displayed, the number of posts per
>>> categories only includes the posts with a post type of "post". Also,  if
>>> a category only has the customer post type, it isn't listed as it  is
>>> seen as an empty one.
>>>
>>> I have tried to filter on the get_category and list_cats to modify  the
>>> category->count for the category but it doesn't work :(
>>>
>>> Any idea for this please? :)
>>>
>>> Cheers!
>>>
>>> Olivier
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

From wp at xentek.net  Thu Jun  4 06:11:37 2009
From: wp at xentek.net (Eric Marden)
Date: Thu Jun  4 06:11:54 2009
Subject: [wp-hackers] Searching Links
In-Reply-To: <8c8309a20906022138t3a44d58cy6d7ffcc62106a214@mail.gmail.com>
References: <8c8309a20906022138t3a44d58cy6d7ffcc62106a214@mail.gmail.com>
Message-ID: <0D4C575C-AFBB-4CB5-A7A3-6A467966C89C@xentek.net>

If the other solutions didn't do it for you, you could also use  
get_bookmarks() to retrieve the list and search them 'manually'.
http://codex.wordpress.org/Function_Reference/get_bookmarks

There is even a get_bookmarks filter you could apply to help in that.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/

From autremonde75 at gmail.com  Thu Jun  4 06:12:05 2009
From: autremonde75 at gmail.com (L'Autre Monde)
Date: Thu Jun  4 06:12:18 2009
Subject: [wp-hackers] How can I filter on post count for categories?
References: <8D6935FDD14145D0823A397F43A29AEC@pluton>	<EMEWEMEW2_DELIMl52Cufa35fc01a376a68e1fe94cb,
	mikeschinkel@newclarity.net,
	03988998-1CC3-44C1-AC48> <F9FD501C7B1A44AD95B5058B7B5BBF71@pluton>
	<4A26FA55.6030409@yoast.com>
Message-ID: <0C6D4DB8B05D41B68ADB9A2CE241E207@pluton>

The answer is yes and no :)
Yes because this is a great idea to have a separate taxonomy for tickets to 
tag these.
No because I'd like to keep the system as "simple" as possible. So I think 
that keeping the posts together with the tickets it the best way. If I 
introduce a customer taxonomy, you can imagine the impact on the theme and 
also the plugin development. It will be released after windows 42 if I do 
that ;)

----- Original Message ----- 
From: "Joost de Valk" <joost@yoast.com>
To: <wp-hackers@lists.automattic.com>
Sent: Thursday, June 04, 2009 12:33 AM
Subject: Re: [wp-hackers] How can I filter on post count for categories?


> Arent you looking for custom taxonomies? :)
>
> L'Autre Monde wrote:
>> Mike,
>>
>> To be clear, I am currently developping a ticket system based on 
>> Wordpress.
>> So I created a custom type "ticket". I have customized the admin to 
>> include
>> this new type and duplicated the post editor with some restrictions.
>>
>> The idea behind that is that I wanted to keep wordpress built-in features 
>> intact.
>> I didn't want to tweak the post editor. So I added another menu from 
>> scratch
>> with the same functionnalities as the post editor with custom fields.
>>
>> Now that my admin I/F looks ok, I need to be able to bring the tickets 
>> with
>> the posts together on the front end. It works pretty well with some 
>> filtering
>> on the wp_query however I am stuck on this category counter ;)
>>
>> I will try the suggestion from Austin, thanks ;)
>>
>> Cheers,
>>
>> Olivier
>>
>> ----- Original Message ----- From: "Mike Schinkel" 
>> <mikeschinkel@newclarity.net>
>> To: <wp-hackers@lists.automattic.com>
>> Sent: Wednesday, June 03, 2009 7:56 PM
>> Subject: Re: [wp-hackers] How can I filter on post count for categories?
>>
>>
>>> Olivier:
>>>
>>> While I haven't drilled down yet to do this I think custom post types 
>>> could be a really important addition to WP either as a plugin or  better 
>>> yet to core. As there are so many assumptions in WordPress that  assume 
>>> "post" that doing as a plugin will be an uphill battle which is  why it 
>>> would really need to be in core.  If not in core too many other  plugins 
>>> won't support the notion of custom post types.
>>>
>>> I have a plugin I'm using for custom URLs that would fits well with 
>>> custom post types. It's not yet ready to be released because it  doesn't 
>>> yet have an admin console interface and also because it still  has a lot 
>>> of areas where it is not robust but I have been using it  with the More 
>>> Fields plugin which gives kind of a psuedo-custom post  types 
>>> capability.
>>>
>>> Anyway, the reason I email is to ask why not use More Fields because  it 
>>> works albeit not using wp_posts->post_type but instead wp_postmeta-
>>> >option_name="mf_post_type", and also to see how many other people
>>> are interested in a custom post types in core?
>>>
>>> -Mike Schinkel
>>> WordPress Custom Plugins
>>> http://mikeschinkel.com/custom-wordpress-plugins/
>>>
>>>
>>>
>>>
>>> On Jun 3, 2009, at 1:16 PM, L'Autre Monde wrote:
>>>
>>>> Hello,
>>>>
>>>> I am currently writing a plugin which creates a custom post type.  When 
>>>> the category list widget is displayed, the number of posts per 
>>>> categories only includes the posts with a post type of "post". Also, 
>>>> if a category only has the customer post type, it isn't listed as it 
>>>> is seen as an empty one.
>>>>
>>>> I have tried to filter on the get_category and list_cats to modify  the 
>>>> category->count for the category but it doesn't work :(
>>>>
>>>> Any idea for this please? :)
>>>>
>>>> Cheers!
>>>>
>>>> Olivier
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> -- 
> *Joost de Valk*
> SEO & Web Development (Magento & WordPress)
> OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
> E: joost@orangevalley.nl <mailto:joost@orangevalley.nl> - joost@yoast.com 
> <mailto:joost@yoast.com>
> T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
> W: http://yoast.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

From wp at xentek.net  Thu Jun  4 06:13:07 2009
From: wp at xentek.net (Eric Marden)
Date: Thu Jun  4 06:13:28 2009
Subject: [wp-hackers] two wordpress's same db..
In-Reply-To: <59e7f3130906030854l67a36694j8dc42cc4abeab409@mail.gmail.com>
References: <df809b110906030819l3965cfdel5e899f506381130d@mail.gmail.com>
	<59e7f3130906030854l67a36694j8dc42cc4abeab409@mail.gmail.com>
Message-ID: <0561453F-B0FD-447F-B137-FF9C7AFEDC27@xentek.net>

On Jun 3, 2009, at 11:54 AM, Malaiac wrote:

> 2009/6/3 madalin <niladam@gmail.com>:
>> Say i'd like to have a single wordpress installation but different
>> themes on each subdomain (a site with multiple subdomains) and i'd
>> like every website to share users and such, how would i do that
>> without using WPMU ?
>
> Shared user table.
> look for custom_user_table in wp config tweaking
>
> Assuming every user must have the same capabilities on each subdomain,
> you'll have to hack core to change the prefix_capabilities
>
> M

Malaiac, I wrote a plugin for that so you don't have to hack core: http://xentek.net/code/wordpress/plugins/wp-orphanage/


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/





> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From autremonde75 at gmail.com  Thu Jun  4 06:23:28 2009
From: autremonde75 at gmail.com (L'Autre Monde)
Date: Thu Jun  4 06:23:44 2009
Subject: [wp-hackers] How can I filter on post count for categories?
References: <8D6935FDD14145D0823A397F43A29AEC@pluton>
	<674b4a3b0906031021r3171051n54b76849d6cf619a@mail.gmail.com>
Message-ID: <5B7263F2AFB2423FBC89AF0CD32D8327@pluton>

Ok so I looked at this. My issue isn't really to count the number of items 
but rather to have my count took into consideration. I haven't managed to 
plug on a place where I can modify on the fly the number when a page 
containing the category list widget is generated.

----- Original Message ----- 
From: "Austin Matzko" <if.website@gmail.com>
To: <wp-hackers@lists.automattic.com>
Sent: Wednesday, June 03, 2009 7:21 PM
Subject: Re: [wp-hackers] How can I filter on post count for categories?


On Wed, Jun 3, 2009 at 12:16 PM, L'Autre Monde <autremonde75@gmail.com> 
wrote:
> I am currently writing a plugin which creates a custom post type. When the 
> category list widget is displayed, the number of posts per categories only 
> includes the posts with a post type of "post". Also, if a category only 
> has the customer post type, it isn't listed as it is seen as an empty one.
>
> I have tried to filter on the get_category and list_cats to modify the 
> category->count for the category but it doesn't work :(

Try counting the number of items in the array returned by 
get_objects_in_term()
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers 

From mikeschinkel at newclarity.net  Thu Jun  4 06:25:21 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jun  4 06:25:57 2009
Subject: [wp-hackers] How can I filter on post count for categories?
In-Reply-To: <DA0117BD8FE04DFABEFBA0C69403A4E2@pluton>
Message-ID: <EMEWEMEW2_DELIMl531PM04e5eded893c9aa308d50f,
	mikeschinkel@newclarity.net, 13730425.841244096716107.J>

Not to beat a dead-horse, but I think More Fields now has almost all of what you are asking for. You can turn off whatever metaboxes you don't want. Maybe it would be easier to add the automatic customised front end template to More Fields than to program it from scratch?

Still, if you want to continue more power to you. I'll be interested to see it when completed.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "L'Autre Monde" <autremonde75@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Thursday, June 4, 2009 2:07:01 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] How can I filter on post count for categories?

You are right, originally, I looked at the more fields plugin and it matched 
most of my needs but not all. When I started to developp this plugin, the 
more fields plugin wasn't providing a separate menu option I think. Also, I 
wanted to remove all the "unecessary" metas boxes from the editor so that it 
looks like a "ticket" editor more than a blog or whatever. Finally I wanted 
to provide directly customised front end template that includes the added 
metas for the tickets so that the user doesn't have to dig into the code to 
customise it if he doesn't want or know how to do it.

That's why I started from scratch. :)

Anyway, I appreciate your help!

Thanks!

Olivier

----- Original Message ----- 
From: "Mike Schinkel" <mikeschinkel@newclarity.net>
To: <wp-hackers@lists.automattic.com>
Sent: Thursday, June 04, 2009 1:20 AM
Subject: Re: [wp-hackers] How can I filter on post count for categories?


> Sounds like the "More Fields" plugin would give you exactly what you want. 
> It uses the default post editor but add a menu option for each of your 
> custom post types, in your case it would be "Tickets" and it would let you 
> add custom fields specifically for posts of type "ticket" that would not 
> show up on the normal post editor page.
>
> HTH.
>
> -Mike Schinkel
> Custom Wordpress Plugins
> http://mikeschinkel.com/custom-wordpress-plugins
>
> ----- Original Message -----
> From: "L'Autre Monde" <autremonde75@gmail.com>
> To: wp-hackers@lists.automattic.com
> Sent: Wednesday, June 3, 2009 6:32:31 PM GMT -05:00 US/Canada Eastern
> Subject: Re: [wp-hackers] How can I filter on post count for categories?
>
> Mike,
>
> To be clear, I am currently developping a ticket system based on 
> Wordpress.
> So I created a custom type "ticket". I have customized the admin to 
> include
> this new type and duplicated the post editor with some restrictions.
>
> The idea behind that is that I wanted to keep wordpress built-in features
> intact.
> I didn't want to tweak the post editor. So I added another menu from 
> scratch
> with the same functionnalities as the post editor with custom fields.
>
> Now that my admin I/F looks ok, I need to be able to bring the tickets 
> with
> the posts together on the front end. It works pretty well with some
> filtering
> on the wp_query however I am stuck on this category counter ;)
>
> I will try the suggestion from Austin, thanks ;)
>
> Cheers,
>
> Olivier
>
> ----- Original Message ----- 
> From: "Mike Schinkel" <mikeschinkel@newclarity.net>
> To: <wp-hackers@lists.automattic.com>
> Sent: Wednesday, June 03, 2009 7:56 PM
> Subject: Re: [wp-hackers] How can I filter on post count for categories?
>
>
>> Olivier:
>>
>> While I haven't drilled down yet to do this I think custom post types
>> could be a really important addition to WP either as a plugin or  better
>> yet to core. As there are so many assumptions in WordPress that  assume
>> "post" that doing as a plugin will be an uphill battle which is  why it
>> would really need to be in core.  If not in core too many other  plugins
>> won't support the notion of custom post types.
>>
>> I have a plugin I'm using for custom URLs that would fits well with
>> custom post types. It's not yet ready to be released because it  doesn't
>> yet have an admin console interface and also because it still  has a lot
>> of areas where it is not robust but I have been using it  with the More
>> Fields plugin which gives kind of a psuedo-custom post  types capability.
>>
>> Anyway, the reason I email is to ask why not use More Fields because  it
>> works albeit not using wp_posts->post_type but instead wp_postmeta-
>> >option_name="mf_post_type", and also to see how many other people
>> are interested in a custom post types in core?
>>
>> -Mike Schinkel
>> WordPress Custom Plugins
>> http://mikeschinkel.com/custom-wordpress-plugins/
>>
>>
>>
>>
>> On Jun 3, 2009, at 1:16 PM, L'Autre Monde wrote:
>>
>>> Hello,
>>>
>>> I am currently writing a plugin which creates a custom post type.  When
>>> the category list widget is displayed, the number of posts per
>>> categories only includes the posts with a post type of "post". Also,  if
>>> a category only has the customer post type, it isn't listed as it  is
>>> seen as an empty one.
>>>
>>> I have tried to filter on the get_category and list_cats to modify  the
>>> category->count for the category but it doesn't work :(
>>>
>>> Any idea for this please? :)
>>>
>>> Cheers!
>>>
>>> Olivier
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From if.website at gmail.com  Thu Jun  4 06:40:34 2009
From: if.website at gmail.com (Austin Matzko)
Date: Thu Jun  4 06:40:45 2009
Subject: [wp-hackers] How can I filter on post count for categories?
In-Reply-To: <5B7263F2AFB2423FBC89AF0CD32D8327@pluton>
References: <8D6935FDD14145D0823A397F43A29AEC@pluton>
	<674b4a3b0906031021r3171051n54b76849d6cf619a@mail.gmail.com>
	<5B7263F2AFB2423FBC89AF0CD32D8327@pluton>
Message-ID: <674b4a3b0906032340j45346d02m96815644ea2f0b5f@mail.gmail.com>

On Thu, Jun 4, 2009 at 1:23 AM, L'Autre Monde<autremonde75@gmail.com> wrote:
> Ok so I looked at this. My issue isn't really to count the number of items
> but rather to have my count took into consideration. I haven't managed to
> plug on a place where I can modify on the fly the number when a page
> containing the category list widget is generated.

I guess I misunderstood what you're trying to do.  If you're talking
about the category widget that prints wp_dropdown_categories(), you'll
need to redefine that widget with wp_dropdown_categories() such that
its "hide_empty" argument is set to 0.

The reason is that by default "hide_empty" is true, meaning that only
those categories will show up that have a positive count of associated
objects.  For each taxonomy, that count gets incremented by a callback
as determined when the taxonomy is defined.  For example, the
"category" taxonomy for object_type "post" calls
"_update_post_term_count" as the "update_count_callback."  Since each
taxonomy specifies its object type and you're using a custom object
type, probably there is no associated "update_count_callback," and the
count stays at zero.
From autremonde75 at gmail.com  Thu Jun  4 08:06:04 2009
From: autremonde75 at gmail.com (Autre Monde)
Date: Thu Jun  4 12:27:32 2009
Subject: [wp-hackers] How can I filter on post count for categories?
In-Reply-To: <-681970749865293280@unknownmsgid>
References: <DA0117BD8FE04DFABEFBA0C69403A4E2@pluton>
	<-681970749865293280@unknownmsgid>
Message-ID: <1e3fb7c90906040106k3051befjb09a4cdf3f8d49d0@mail.gmail.com>

You are killing my dead horse ;) lol :)

Well honestly, I started to work on this two months ago. While working on a
bigger project, I realized that I needed a ticket system in order to provide
technical support for it. I searched on google and I haven't found any quick
solution. All the support systems are so complex and not as quick and easy
to use as a wordpress plugin. So I said to myself that I need to quickly
code a wordpress plugin to achieve this need. I thought this would be the
best for me but also probably for other people. I saw few requests within
the community for a wordpress plugin to turn wordpress into a ticket system.

Also, I thought it would be a good exercise of style to dig into wordpress
code to replicate and customize the post engine. I faced a lot of challenges
while doing this and I thought I would gave up many times but finally I
managed to have something working.

Now I am just in the finalizing phase where I try to bring the minimum set
of features to make this valuable for the users.

I will obviously post this plugin on the wordpress repository once I would
have completed the release 1.0 dev. I hope this will happen before the end
of June as I am quite interested to get some feedback on it.

Thanks for your help anyway!

Olivier

2009/6/4 Mike Schinkel <mikeschinkel@newclarity.net>

> Not to beat a dead-horse, but I think More Fields now has almost all of
> what you are asking for. You can turn off whatever metaboxes you don't want.
> Maybe it would be easier to add the automatic customised front end template
> to More Fields than to program it from scratch?
>
> Still, if you want to continue more power to you. I'll be interested to see
> it when completed.
>
> -Mike Schinkel
> Custom Wordpress Plugins
> http://mikeschinkel.com/custom-wordpress-plugins
>
> ----- Original Message -----
> From: "L'Autre Monde" <autremonde75@gmail.com>
> To: wp-hackers@lists.automattic.com
>  Sent: Thursday, June 4, 2009 2:07:01 AM GMT -05:00 US/Canada Eastern
> Subject: Re: [wp-hackers] How can I filter on post count for categories?
>
> You are right, originally, I looked at the more fields plugin and it
> matched
> most of my needs but not all. When I started to developp this plugin, the
> more fields plugin wasn't providing a separate menu option I think. Also, I
> wanted to remove all the "unecessary" metas boxes from the editor so that
> it
> looks like a "ticket" editor more than a blog or whatever. Finally I wanted
> to provide directly customised front end template that includes the added
> metas for the tickets so that the user doesn't have to dig into the code to
> customise it if he doesn't want or know how to do it.
>
> That's why I started from scratch. :)
>
> Anyway, I appreciate your help!
>
> Thanks!
>
> Olivier
>
> ----- Original Message -----
> From: "Mike Schinkel" <mikeschinkel@newclarity.net>
> To: <wp-hackers@lists.automattic.com>
> Sent: Thursday, June 04, 2009 1:20 AM
> Subject: Re: [wp-hackers] How can I filter on post count for categories?
>
>
> > Sounds like the "More Fields" plugin would give you exactly what you
> want.
> > It uses the default post editor but add a menu option for each of your
> > custom post types, in your case it would be "Tickets" and it would let
> you
> > add custom fields specifically for posts of type "ticket" that would not
> > show up on the normal post editor page.
> >
> > HTH.
> >
> > -Mike Schinkel
> > Custom Wordpress Plugins
> > http://mikeschinkel.com/custom-wordpress-plugins
> >
> > ----- Original Message -----
> > From: "L'Autre Monde" <autremonde75@gmail.com>
> > To: wp-hackers@lists.automattic.com
> > Sent: Wednesday, June 3, 2009 6:32:31 PM GMT -05:00 US/Canada Eastern
> > Subject: Re: [wp-hackers] How can I filter on post count for categories?
> >
> > Mike,
> >
> > To be clear, I am currently developping a ticket system based on
> > Wordpress.
> > So I created a custom type "ticket". I have customized the admin to
> > include
> > this new type and duplicated the post editor with some restrictions.
> >
> > The idea behind that is that I wanted to keep wordpress built-in features
> > intact.
> > I didn't want to tweak the post editor. So I added another menu from
> > scratch
> > with the same functionnalities as the post editor with custom fields.
> >
> > Now that my admin I/F looks ok, I need to be able to bring the tickets
> > with
> > the posts together on the front end. It works pretty well with some
> > filtering
> > on the wp_query however I am stuck on this category counter ;)
> >
> > I will try the suggestion from Austin, thanks ;)
> >
> > Cheers,
> >
> > Olivier
> >
> > ----- Original Message -----
> > From: "Mike Schinkel" <mikeschinkel@newclarity.net>
> > To: <wp-hackers@lists.automattic.com>
> > Sent: Wednesday, June 03, 2009 7:56 PM
> > Subject: Re: [wp-hackers] How can I filter on post count for categories?
> >
> >
> >> Olivier:
> >>
> >> While I haven't drilled down yet to do this I think custom post types
> >> could be a really important addition to WP either as a plugin or  better
> >> yet to core. As there are so many assumptions in WordPress that  assume
> >> "post" that doing as a plugin will be an uphill battle which is  why it
> >> would really need to be in core.  If not in core too many other  plugins
> >> won't support the notion of custom post types.
> >>
> >> I have a plugin I'm using for custom URLs that would fits well with
> >> custom post types. It's not yet ready to be released because it  doesn't
> >> yet have an admin console interface and also because it still  has a lot
> >> of areas where it is not robust but I have been using it  with the More
> >> Fields plugin which gives kind of a psuedo-custom post  types
> capability.
> >>
> >> Anyway, the reason I email is to ask why not use More Fields because  it
> >> works albeit not using wp_posts->post_type but instead wp_postmeta-
> >> >option_name="mf_post_type", and also to see how many other people
> >> are interested in a custom post types in core?
> >>
> >> -Mike Schinkel
> >> WordPress Custom Plugins
> >> http://mikeschinkel.com/custom-wordpress-plugins/
> >>
> >>
> >>
> >>
> >> On Jun 3, 2009, at 1:16 PM, L'Autre Monde wrote:
> >>
> >>> Hello,
> >>>
> >>> I am currently writing a plugin which creates a custom post type.  When
> >>> the category list widget is displayed, the number of posts per
> >>> categories only includes the posts with a post type of "post". Also,
>  if
> >>> a category only has the customer post type, it isn't listed as it  is
> >>> seen as an empty one.
> >>>
> >>> I have tried to filter on the get_category and list_cats to modify  the
> >>> category->count for the category but it doesn't work :(
> >>>
> >>> Any idea for this please? :)
> >>>
> >>> Cheers!
> >>>
> >>> Olivier
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers@lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From kelter at badcat.com  Thu Jun  4 13:14:19 2009
From: kelter at badcat.com (Kelter-BadCat Design)
Date: Thu Jun  4 13:14:40 2009
Subject: [wp-hackers] Searching Links
In-Reply-To: <0D4C575C-AFBB-4CB5-A7A3-6A467966C89C@xentek.net>
References: <8c8309a20906022138t3a44d58cy6d7ffcc62106a214@mail.gmail.com>
	<0D4C575C-AFBB-4CB5-A7A3-6A467966C89C@xentek.net>
Message-ID: <p06240800c64d78f5bd57@[192.168.1.5]>

Thanks folks for the suggestions.

-Kel


At 2:11 AM -0400 6/4/09, Eric Marden wrote:
>If the other solutions didn't do it for you, you could also use get_bookmarks() to retrieve the list and search them 'manually'.
>http://codex.wordpress.org/Function_Reference/get_bookmarks
>
>There is even a get_bookmarks filter you could apply to help in that.
>
>
>- Eric Marden
>__________________________________
>http://xentek.net/code/wordpress/


-- 
===========================
BadCat Design, Inc.
250 Union Square Drive
New Hope, PA 18938
Phone: 215.862.4860
Web: http://www.BadCat.com
Twitter: @badcat
===========================
From autremonde75 at gmail.com  Thu Jun  4 08:32:53 2009
From: autremonde75 at gmail.com (Autre Monde)
Date: Thu Jun  4 16:30:43 2009
Subject: [wp-hackers] How can I filter on post count for categories?
In-Reply-To: <674b4a3b0906032340j45346d02m96815644ea2f0b5f@mail.gmail.com>
References: <8D6935FDD14145D0823A397F43A29AEC@pluton>
	<674b4a3b0906031021r3171051n54b76849d6cf619a@mail.gmail.com>
	<5B7263F2AFB2423FBC89AF0CD32D8327@pluton>
	<674b4a3b0906032340j45346d02m96815644ea2f0b5f@mail.gmail.com>
Message-ID: <1e3fb7c90906040132r5b9b365qf26e1630fbb9cb9b@mail.gmail.com>

I guess I haven't explained clearly enough my requirement... ;)

Anyway, thanks a lot for your help Austin, you put me on the right path. I
managed to find a solution. I have registered another taxonomy association
with this piece of code :
1/ The hook :
add_action('init','wats_register_taxonomy',0);
2/ The registration :
function wats_register_taxonomy()
{
  register_taxonomy( 'category', 'ticket', array('hierarchical' => true,
'update_count_callback' => 'wats_update_ticket_term_count', 'label' =>
__('Categories'), 'query_var' => false, 'rewrite' => false) ) ;
}
3/ The update count callback :
function wats_update_ticket_term_count($terms)
{
 global $wpdb;

 foreach ((array) $terms as $term)
 {
        $count = $wpdb->get_var($wpdb->prepare("SELECT COUNT(*) FROM
$wpdb->term_relationships, $wpdb->posts WHERE $wpdb->posts.ID =
$wpdb->term_relationships.object_id AND post_status = 'publish' AND
(post_type = 'ticket' OR post_type = 'post') AND term_taxonomy_id = %d",
$term));
        $wpdb->update($wpdb->term_taxonomy, compact('count'),
array('term_taxonomy_id' => $term));
    }
}

Believe it or not, it works! ;)

I spent the whole day yesterday digging into the core to try to understand
how this count was updated...

So thanks a lot for your help and expertise, much appreciated!
2009/6/4 Austin Matzko <if.website@gmail.com>

> On Thu, Jun 4, 2009 at 1:23 AM, L'Autre Monde<autremonde75@gmail.com>
> wrote:
> > Ok so I looked at this. My issue isn't really to count the number of
> items
> > but rather to have my count took into consideration. I haven't managed to
> > plug on a place where I can modify on the fly the number when a page
> > containing the category list widget is generated.
>
> I guess I misunderstood what you're trying to do.  If you're talking
> about the category widget that prints wp_dropdown_categories(), you'll
> need to redefine that widget with wp_dropdown_categories() such that
> its "hide_empty" argument is set to 0.
>
> The reason is that by default "hide_empty" is true, meaning that only
> those categories will show up that have a positive count of associated
> objects.  For each taxonomy, that count gets incremented by a callback
> as determined when the taxonomy is defined.  For example, the
> "category" taxonomy for object_type "post" calls
> "_update_post_term_count" as the "update_count_callback."  Since each
> taxonomy specifies its object type and you're using a custom object
> type, probably there is no associated "update_count_callback," and the
> count stays at zero.
>  _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From lloydomattic at gmail.com  Thu Jun  4 22:11:05 2009
From: lloydomattic at gmail.com (Lloyd Budd)
Date: Thu Jun  4 22:11:40 2009
Subject: [wp-hackers] WordPress Plugin GUID
Message-ID: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>

Hi,

Was working with mdawaffe on a plugin collision scenario -- two
plugins with the same name. We came to the conclusion that a decent
solution would be to add GUID to the "readme standard"
http://wordpress.org/extend/plugins/about/readme.txt.

Plugin GUID: (string)

For plugins in the extend/plugins the string would be their
extend/plugin URL. Example: "Plugin GUID:
http://wordpress.org/extend/plugins/stats/"

The Plugin GUID would get sent to the plugin directory when checking
for updates. If the GUID does not match any known plugin in the
directory, it would just skip that plugin during the update check. If
it matches, use that match. No longer do any heuristic matches between
titles, urls, etc.

Any comments, questions, concerns?

Thanks,
Lloyd
From ozh at planetozh.com  Thu Jun  4 22:51:02 2009
From: ozh at planetozh.com (Ozh)
Date: Thu Jun  4 22:51:19 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>
Message-ID: <ae81acd10906041551m7d41d533sc31b9d47c8e98742@mail.gmail.com>

Yeah but... if two plugins have the same name, won't they be given the
same guids too by their respective authors?

Or I totally misunderstood something :)

On Fri, Jun 5, 2009 at 12:11 AM, Lloyd Budd<lloydomattic@gmail.com> wrote:
> Hi,
>
> Was working with mdawaffe on a plugin collision scenario -- two
> plugins with the same name. We came to the conclusion that a decent
> solution would be to add GUID to the "readme standard"
> http://wordpress.org/extend/plugins/about/readme.txt.
>
> Plugin GUID: (string)
>
> For plugins in the extend/plugins the string would be their
> extend/plugin URL. Example: "Plugin GUID:
> http://wordpress.org/extend/plugins/stats/"
>
> The Plugin GUID would get sent to the plugin directory when checking
> for updates. If the GUID does not match any known plugin in the
> directory, it would just skip that plugin during the update check. If
> it matches, use that match. No longer do any heuristic matches between
> titles, urls, etc.
>
> Any comments, questions, concerns?
>
> Thanks,
> Lloyd
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News
From johnbillion+wp at gmail.com  Thu Jun  4 22:55:55 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Thu Jun  4 22:56:11 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <ae81acd10906041551m7d41d533sc31b9d47c8e98742@mail.gmail.com>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>
	<ae81acd10906041551m7d41d533sc31b9d47c8e98742@mail.gmail.com>
Message-ID: <1fa535a70906041555u15e7c6cbwa87210306461a0be@mail.gmail.com>

I think the point Lloyd is making is that the Extend URL is a GUID itself.

Couldn't the "Plugin URL" field just be used as the GUID? No need to
add another field to the readme.txt file then. Maybe use something
like the Author Name as a fallback if the Plugin URL isn't present?

John

2009/6/4 Ozh <ozh@planetozh.com>:
> Yeah but... if two plugins have the same name, won't they be given the
> same guids too by their respective authors?
>
> Or I totally misunderstood something :)
>
> On Fri, Jun 5, 2009 at 12:11 AM, Lloyd Budd<lloydomattic@gmail.com> wrote:
>> Hi,
>>
>> Was working with mdawaffe on a plugin collision scenario -- two
>> plugins with the same name. We came to the conclusion that a decent
>> solution would be to add GUID to the "readme standard"
>> http://wordpress.org/extend/plugins/about/readme.txt.
>>
>> Plugin GUID: (string)
>>
>> For plugins in the extend/plugins the string would be their
>> extend/plugin URL. Example: "Plugin GUID:
>> http://wordpress.org/extend/plugins/stats/"
>>
>> The Plugin GUID would get sent to the plugin directory when checking
>> for updates. If the GUID does not match any known plugin in the
>> directory, it would just skip that plugin during the update check. If
>> it matches, use that match. No longer do any heuristic matches between
>> titles, urls, etc.
>>
>> Any comments, questions, concerns?
>>
>> Thanks,
>> Lloyd
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> http://planetOzh.com ~ Blog and WordPress Stuff
> http://FrenchFragFactory.net ~ Daily Quake News
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From lloydomattic at gmail.com  Thu Jun  4 23:10:09 2009
From: lloydomattic at gmail.com (Lloyd Budd)
Date: Thu Jun  4 23:10:43 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <1fa535a70906041555u15e7c6cbwa87210306461a0be@mail.gmail.com>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com> 
	<ae81acd10906041551m7d41d533sc31b9d47c8e98742@mail.gmail.com> 
	<1fa535a70906041555u15e7c6cbwa87210306461a0be@mail.gmail.com>
Message-ID: <70ebb7140906041610s69cd7d91va8a03da976f1a017@mail.gmail.com>

> 2009/6/4 Ozh <ozh@planetozh.com>:
>> Yeah but... if two plugins have the same name, won't they be given the
>> same guids too by their respective authors?

No method would be fool proof or sabotage proof. On the surface it
would seem plugin name + [other detail] would be unique enough, but
likely are surprisingly fragile.

It really only matters for plugins in wordpress.org/extend/plugins/

On Thu, Jun 4, 2009 at 3:55 PM, John Blackbourn
<johnbillion+wp@gmail.com> wrote:
> I think the point Lloyd is making is that the Extend URL is a GUID itself.
>
> Couldn't the "Plugin URL" field just be used as the GUID? No need to
> add another field to the readme.txt file then. Maybe use something
> like the Author Name as a fallback if the Plugin URL isn't present?

Many authors have a shared (landing) page for all of their plugins.
The proposal is saying that wp.org URL for the plugin is explicitly
part of the description for a plugin to get updates.

Actually including it in plainer language might be a better idea,
because would also encourage users from downloading (manually
updating) directly from WordPress.org without disrupting the authors
use of Plugin URI. Maybe something like "WordPress.org Page" Or is the
developer info intrinsic to GUID better?

Cheers,
Lloyd
From peter.westwood at ftwr.co.uk  Fri Jun  5 06:23:06 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri Jun  5 06:24:12 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <70ebb7140906041610s69cd7d91va8a03da976f1a017@mail.gmail.com>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>
	<ae81acd10906041551m7d41d533sc31b9d47c8e98742@mail.gmail.com>
	<1fa535a70906041555u15e7c6cbwa87210306461a0be@mail.gmail.com>
	<70ebb7140906041610s69cd7d91va8a03da976f1a017@mail.gmail.com>
Message-ID: <E3D26971-CB98-432F-A955-9F1DA36060CE@ftwr.co.uk>

This sounds like a good idea.

Is it not something the extend plugin pacager could add to the readme  
as it packaged up the plugin for downloads that way each plugin gets  
the correct GUID for free.

--
Peter Westwood
http://peter.westwood.name

On 5 Jun 2009, at 00:10, Lloyd Budd <lloydomattic@gmail.com> wrote:

>> 2009/6/4 Ozh <ozh@planetozh.com>:
>>> Yeah but... if two plugins have the same name, won't they be given  
>>> the
>>> same guids too by their respective authors?
>
> No method would be fool proof or sabotage proof. On the surface it
> would seem plugin name + [other detail] would be unique enough, but
> likely are surprisingly fragile.
>
> It really only matters for plugins in wordpress.org/extend/plugins/
>
> On Thu, Jun 4, 2009 at 3:55 PM, John Blackbourn
> <johnbillion+wp@gmail.com> wrote:
>> I think the point Lloyd is making is that the Extend URL is a GUID  
>> itself.
>>
>> Couldn't the "Plugin URL" field just be used as the GUID? No need to
>> add another field to the readme.txt file then. Maybe use something
>> like the Author Name as a fallback if the Plugin URL isn't present?
>
> Many authors have a shared (landing) page for all of their plugins.
> The proposal is saying that wp.org URL for the plugin is explicitly
> part of the description for a plugin to get updates.
>
> Actually including it in plainer language might be a better idea,
> because would also encourage users from downloading (manually
> updating) directly from WordPress.org without disrupting the authors
> use of Plugin URI. Maybe something like "WordPress.org Page" Or is the
> developer info intrinsic to GUID better?
>
> Cheers,
> Lloyd
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From aaron.jorbin at gmail.com  Fri Jun  5 06:47:07 2009
From: aaron.jorbin at gmail.com (Aaron Jorbin)
Date: Fri Jun  5 06:47:43 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <E3D26971-CB98-432F-A955-9F1DA36060CE@ftwr.co.uk>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com> 
	<ae81acd10906041551m7d41d533sc31b9d47c8e98742@mail.gmail.com> 
	<1fa535a70906041555u15e7c6cbwa87210306461a0be@mail.gmail.com> 
	<70ebb7140906041610s69cd7d91va8a03da976f1a017@mail.gmail.com> 
	<E3D26971-CB98-432F-A955-9F1DA36060CE@ftwr.co.uk>
Message-ID: <21952a280906042347k73c9544bp6aab0f62809895ea@mail.gmail.com>

I also think this is a great idea and agree with Peter's idea to have
the GUID included from the packager.  That would also have the added
benefit of immediately bringing all current plugins into complience
without any plugin developer having to change the readme.txt file.


aaron.jorbin@gmail.com
http://aaron.jorb.in
Twitter: @aaronjorbin



On Thu, Jun 4, 2009 at 11:23 PM, Peter Westwood
<peter.westwood@ftwr.co.uk> wrote:
> This sounds like a good idea.
>
> Is it not something the extend plugin pacager could add to the readme as it
> packaged up the plugin for downloads that way each plugin gets the correct
> GUID for free.
>
> --
> Peter Westwood
> http://peter.westwood.name
>
> On 5 Jun 2009, at 00:10, Lloyd Budd <lloydomattic@gmail.com> wrote:
>
>>> 2009/6/4 Ozh <ozh@planetozh.com>:
>>>>
>>>> Yeah but... if two plugins have the same name, won't they be given the
>>>> same guids too by their respective authors?
>>
>> No method would be fool proof or sabotage proof. On the surface it
>> would seem plugin name + [other detail] would be unique enough, but
>> likely are surprisingly fragile.
>>
>> It really only matters for plugins in wordpress.org/extend/plugins/
>>
>> On Thu, Jun 4, 2009 at 3:55 PM, John Blackbourn
>> <johnbillion+wp@gmail.com> wrote:
>>>
>>> I think the point Lloyd is making is that the Extend URL is a GUID
>>> itself.
>>>
>>> Couldn't the "Plugin URL" field just be used as the GUID? No need to
>>> add another field to the readme.txt file then. Maybe use something
>>> like the Author Name as a fallback if the Plugin URL isn't present?
>>
>> Many authors have a shared (landing) page for all of their plugins.
>> The proposal is saying that wp.org URL for the plugin is explicitly
>> part of the description for a plugin to get updates.
>>
>> Actually including it in plainer language might be a better idea,
>> because would also encourage users from downloading (manually
>> updating) directly from WordPress.org without disrupting the authors
>> use of Plugin URI. Maybe something like "WordPress.org Page" Or is the
>> developer info intrinsic to GUID better?
>>
>> Cheers,
>> Lloyd
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From somani.mayur at gmail.com  Fri Jun  5 12:00:11 2009
From: somani.mayur at gmail.com (Mayur Somani)
Date: Fri Jun  5 12:00:41 2009
Subject: [wp-hackers] how to integrate plugins into theme easily
Message-ID: <a51040f00906050500m6fe78b95uf3202c297527a14@mail.gmail.com>

How can I integrate any plugin into the theme itself so that I don't have to
ask the end user to install it.
Thanks.
From jeremy at visser.name  Fri Jun  5 12:06:09 2009
From: jeremy at visser.name (Jeremy Visser)
Date: Fri Jun  5 12:09:30 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>
Message-ID: <1244203569.4106.24.camel@rillian.narnia.sunriseroad.net>

On Thu, 2009-06-04 at 15:11 -0700, Lloyd Budd wrote:
> The Plugin GUID would get sent to the plugin directory when checking
> for updates. If the GUID does not match any known plugin in the
> directory, it would just skip that plugin during the update check. If
> it matches, use that match. No longer do any heuristic matches between
> titles, urls, etc.

This is a great idea from a security perspective.

Currently, if a plugin author chooses to self-host his plugin and not
list it in the directory, a malicious individual could e-mail Matt and
ask for an entry in the plugin directory with the same slug. Then, the
malicious individual could release an 'update' to the plugin that could
0wn the blog.

However, having a GUID in place means users won't automagically get
updates to their plugins if a plugin author decides to have their plugin
hosted in the directory after a large quantity of users have already
downloaded a version that doesn't have a GUID.

I guess WordPress would have to still offer updates for plugins that
don't have a local GUID, but the slug matches. Or does that defeat the
purpose, or not make sense?

From casey.bisson at gmail.com  Fri Jun  5 12:10:46 2009
From: casey.bisson at gmail.com (Casey Bisson)
Date: Fri Jun  5 12:11:01 2009
Subject: [wp-hackers] how to integrate plugins into theme easily
In-Reply-To: <a51040f00906050500m6fe78b95uf3202c297527a14@mail.gmail.com>
References: <a51040f00906050500m6fe78b95uf3202c297527a14@mail.gmail.com>
Message-ID: <C800E94C-11A7-4D22-AEDD-CE4EA83413F3@gmail.com>


A number of themes include code for special widgets and other custom  
functionality in their functions.php file.

On Jun 5, 2009, at 8:00 AM, Mayur Somani wrote:

> How can I integrate any plugin into the theme itself so that I don't  
> have to
> ask the end user to install it.
> Thanks.
From somani.mayur at gmail.com  Fri Jun  5 12:12:26 2009
From: somani.mayur at gmail.com (Mayur Somani)
Date: Fri Jun  5 12:12:59 2009
Subject: [wp-hackers] how to integrate plugins into theme easily
In-Reply-To: <C800E94C-11A7-4D22-AEDD-CE4EA83413F3@gmail.com>
References: <a51040f00906050500m6fe78b95uf3202c297527a14@mail.gmail.com> 
	<C800E94C-11A7-4D22-AEDD-CE4EA83413F3@gmail.com>
Message-ID: <a51040f00906050512i5fafbfd3wfda0ac4f5c743b69@mail.gmail.com>

Yes, I know that and I have figured a few things by reading the sources. But
still I am looking for a definitive answer from people who have been doing
this.

On Fri, Jun 5, 2009 at 5:40 PM, Casey Bisson <casey.bisson@gmail.com> wrote:

>
> A number of themes include code for special widgets and other custom
> functionality in their functions.php file.
>
>
> On Jun 5, 2009, at 8:00 AM, Mayur Somani wrote:
>
>  How can I integrate any plugin into the theme itself so that I don't have
>> to
>> ask the end user to install it.
>> Thanks.
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From malaiac at gmail.com  Fri Jun  5 09:38:20 2009
From: malaiac at gmail.com (Malaiac)
Date: Fri Jun  5 12:21:16 2009
Subject: [wp-hackers] Wordpress.com stats API
Message-ID: <59e7f3130906050238o753af430k3b8fcdbf46d74a4e@mail.gmail.com>

I know the question has been asked before, but is there news about an
API to leverage WordPress.com stats ?
Just a thought, since access to data would allow :
in/out click links on external links inside posts
easy "more popular posts" display, without the hassle of extra tables

wp.com stats is already the best stats plugins for WP (if only by not
storing stats locally), data leverage would make it the bestest :)

Malaiac
From wp-hackers at striderweb.com  Fri Jun  5 12:30:18 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jun  5 12:30:50 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <1244203569.4106.24.camel@rillian.narnia.sunriseroad.net>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>
	<1244203569.4106.24.camel@rillian.narnia.sunriseroad.net>
Message-ID: <43FA1CE6-3E08-4B87-9852-B8D05B92349C@striderweb.com>


On Jun 5, 2009, at 7:06 AM, Jeremy Visser wrote:

> On Thu, 2009-06-04 at 15:11 -0700, Lloyd Budd wrote:
>> The Plugin GUID would get sent to the plugin directory when checking
>> for updates. If the GUID does not match any known plugin in the
>> directory, it would just skip that plugin during the update check. If
>> it matches, use that match. No longer do any heuristic matches  
>> between
>> titles, urls, etc.
>
> This is a great idea from a security perspective.
>
> Currently, if a plugin author chooses to self-host his plugin and not
> list it in the directory, a malicious individual could e-mail Matt and
> ask for an entry in the plugin directory with the same slug. Then, the
> malicious individual could release an 'update' to the plugin that  
> could
> 0wn the blog.
>
> However, having a GUID in place means users won't automagically get
> updates to their plugins if a plugin author decides to have their  
> plugin
> hosted in the directory after a large quantity of users have already
> downloaded a version that doesn't have a GUID.
>
> I guess WordPress would have to still offer updates for plugins that
> don't have a local GUID, but the slug matches. Or does that defeat the
> purpose, or not make sense?

I agree that without the GUID it shouldn't offer the update (that is,  
only auto-update plugins that came from WP-Extend).

And this is from a guy who doesn't host on WP-Extend. ;)

Stephen


-- 
Stephen Rider
http://striderweb.com/




From lists at rotorised.com  Fri Jun  5 12:32:51 2009
From: lists at rotorised.com (Ryan McCue)
Date: Fri Jun  5 12:34:06 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <43FA1CE6-3E08-4B87-9852-B8D05B92349C@striderweb.com>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>	<1244203569.4106.24.camel@rillian.narnia.sunriseroad.net>
	<43FA1CE6-3E08-4B87-9852-B8D05B92349C@striderweb.com>
Message-ID: <4A291073.3010100@rotorised.com>

On 5/06/2009 10:30 PM, Stephen Rider wrote:
> On Jun 5, 2009, at 7:06 AM, Jeremy Visser wrote:
>> I guess WordPress would have to still offer updates for plugins that
>> don't have a local GUID, but the slug matches. Or does that defeat the
>> purpose, or not make sense?
>
> I agree that without the GUID it shouldn't offer the update (that is, 
> only auto-update plugins that came from WP-Extend).

Then it would not be backwards compatible, as the old plugins on WP 
Extend don't have GUIDs, so WP would be unable to update from the 
current plugin (without a GUID) to a new version with a GUID.

That is, if I understand it correctly.

-- 
Ryan McCue
<http://cubegames.net/>

From cjscott69 at gmail.com  Fri Jun  5 12:38:53 2009
From: cjscott69 at gmail.com (Chris Scott)
Date: Fri Jun  5 12:39:13 2009
Subject: [wp-hackers] how to integrate plugins into theme easily
In-Reply-To: <a51040f00906050500m6fe78b95uf3202c297527a14@mail.gmail.com>
References: <a51040f00906050500m6fe78b95uf3202c297527a14@mail.gmail.com>
Message-ID: <469fb3cc0906050538n45301e4fud1d553631f504f69@mail.gmail.com>

On Fri, Jun 5, 2009 at 8:00 AM, Mayur Somani<somani.mayur@gmail.com> wrote:
> How can I integrate any plugin into the theme itself so that I don't have to
> ask the end user to install it.
> Thanks.

You can do something like this:

- Create a "plugins" directory in your theme directory.
- Copy the plugins to that directory.
- In your theme's functions.php do a require_once() for each plugin's
main file you want to enable.

Note that if you do this, users won't be able to disable the plugins
in the Plugins admin panel--they won't see them at all there.

--
Chris Scott
http://iamzed.com/
http://hailtheale.com/

> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wp-hackers at striderweb.com  Fri Jun  5 12:39:55 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jun  5 12:40:25 2009
Subject: [wp-hackers] how to integrate plugins into theme easily
In-Reply-To: <a51040f00906050512i5fafbfd3wfda0ac4f5c743b69@mail.gmail.com>
References: <a51040f00906050500m6fe78b95uf3202c297527a14@mail.gmail.com>
	<C800E94C-11A7-4D22-AEDD-CE4EA83413F3@gmail.com>
	<a51040f00906050512i5fafbfd3wfda0ac4f5c743b69@mail.gmail.com>
Message-ID: <48E98AD8-5A34-48BA-A65E-621BA7CA36C6@striderweb.com>

That's kind of a broad question -- depends on what your plugin does.   
Still...

Standard themes have hooks in them that you can use -- look at the  
comments section for an example.  Go through the default theme and  
look for things that say do_action() or apply_filter() -- you can  
attach actions that happen when the theme executes those.

However, you can't depend on those completely -- remember that a  
poorly designed (or very custom) theme might not have all the same  
hooks.

Stephen
On Jun 5, 2009, at 7:12 AM, Mayur Somani wrote:

> Yes, I know that and I have figured a few things by reading the  
> sources. But
> still I am looking for a definitive answer from people who have been  
> doing
> this.
>
> On Fri, Jun 5, 2009 at 5:40 PM, Casey Bisson  
> <casey.bisson@gmail.com> wrote:
>
>> A number of themes include code for special widgets and other custom
>> functionality in their functions.php file.
>>
>> On Jun 5, 2009, at 8:00 AM, Mayur Somani wrote:
>>
>>> How can I integrate any plugin into the theme itself so that I  
>>> don't have to
>>> ask the end user to install it.
>>> Thanks.

From wp-hackers at striderweb.com  Fri Jun  5 12:42:49 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jun  5 12:43:18 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <4A291073.3010100@rotorised.com>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>	<1244203569.4106.24.camel@rillian.narnia.sunriseroad.net>
	<43FA1CE6-3E08-4B87-9852-B8D05B92349C@striderweb.com>
	<4A291073.3010100@rotorised.com>
Message-ID: <C31C2EB0-71F5-43E8-B830-8D67D29D0763@striderweb.com>


On Jun 5, 2009, at 7:32 AM, Ryan McCue wrote:

> On 5/06/2009 10:30 PM, Stephen Rider wrote:
>> On Jun 5, 2009, at 7:06 AM, Jeremy Visser wrote:
>>> I guess WordPress would have to still offer updates for plugins that
>>> don't have a local GUID, but the slug matches. Or does that defeat  
>>> the
>>> purpose, or not make sense?
>>
>> I agree that without the GUID it shouldn't offer the update (that  
>> is, only auto-update plugins that came from WP-Extend).
>
> Then it would not be backwards compatible, as the old plugins on WP  
> Extend don't have GUIDs, so WP would be unable to update from the  
> current plugin (without a GUID) to a new version with a GUID.
>
> That is, if I understand it correctly.

It works if we follow Peter's suggestion:

> Is it not something the extend plugin pacager could add to the  
> readme as it packaged up the plugin for downloads that way each  
> plugin gets the correct GUID for free.

The packager adds the GUID automatically.

Of course, we *would* need some sort of "transition" system , since  
plugins already installed would not get the GUID until the next time  
they're updated.

Or is that what you meant? ;-)

Stephen
From nb at nikolay.bg  Fri Jun  5 12:43:10 2009
From: nb at nikolay.bg (Nikolay Bachiyski)
Date: Fri Jun  5 12:44:04 2009
Subject: [wp-hackers] Wordpress.com stats API
In-Reply-To: <59e7f3130906050238o753af430k3b8fcdbf46d74a4e@mail.gmail.com>
References: <59e7f3130906050238o753af430k3b8fcdbf46d74a4e@mail.gmail.com>
Message-ID: <87e663fa0906050543n79fb625dga7fc8e2731b94dc0@mail.gmail.com>

On Fri, Jun 5, 2009 at 12:38, Malaiac<malaiac@gmail.com> wrote:
> wp.com stats is already the best stats plugins for WP (if only by not
> storing stats locally), data leverage would make it the bestest :)

http://stats.wordpress.com/csv.php

Happy hacking,
Nikolay.
From wp-hackers at striderweb.com  Fri Jun  5 12:46:15 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jun  5 12:46:40 2009
Subject: [wp-hackers] how to integrate plugins into theme easily
In-Reply-To: <469fb3cc0906050538n45301e4fud1d553631f504f69@mail.gmail.com>
References: <a51040f00906050500m6fe78b95uf3202c297527a14@mail.gmail.com>
	<469fb3cc0906050538n45301e4fud1d553631f504f69@mail.gmail.com>
Message-ID: <BB518A6A-8D9E-405E-9D33-8EDE4919F0BA@striderweb.com>


On Jun 5, 2009, at 7:38 AM, Chris Scott wrote:

> On Fri, Jun 5, 2009 at 8:00 AM, Mayur Somani<somani.mayur@gmail.com>  
> wrote:
>> How can I integrate any plugin into the theme itself so that I  
>> don't have to
>> ask the end user to install it.
>> Thanks.
>
> You can do something like this:
>
> - Create a "plugins" directory in your theme directory.
> - Copy the plugins to that directory.
> - In your theme's functions.php do a require_once() for each plugin's
> main file you want to enable.
>
> Note that if you do this, users won't be able to disable the plugins
> in the Plugins admin panel--they won't see them at all there.

Ah -- I misunderstood the question I think.

Chris's method works, except that some plugins only really work if  
located in the plugins directory.  So if you're talking about your own  
plugins, no problem.  If you're talking about third party plugins, it  
will require testing.

(Especially plugins that require a URL to plugin files, e.g. they link  
a CSS file....)

Stephen


-- 
Stephen Rider
http://striderweb.com/




From lists at rotorised.com  Fri Jun  5 12:56:44 2009
From: lists at rotorised.com (Ryan McCue)
Date: Fri Jun  5 12:58:02 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <C31C2EB0-71F5-43E8-B830-8D67D29D0763@striderweb.com>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>	<1244203569.4106.24.camel@rillian.narnia.sunriseroad.net>	<43FA1CE6-3E08-4B87-9852-B8D05B92349C@striderweb.com>	<4A291073.3010100@rotorised.com>
	<C31C2EB0-71F5-43E8-B830-8D67D29D0763@striderweb.com>
Message-ID: <4A29160C.7070108@rotorised.com>

On 5/06/2009 10:42 PM, Stephen Rider wrote:
> Of course, we *would* need some sort of "transition" system , since 
> plugins already installed would not get the GUID until the next time 
> they're updated.
>
> Or is that what you meant? ;-)

I think that's what I meant, but I'm not quite sure. :)

-- 
Ryan McCue
<http://cubegames.net/>

From casey.bisson at gmail.com  Fri Jun  5 13:05:49 2009
From: casey.bisson at gmail.com (Casey Bisson)
Date: Fri Jun  5 13:06:05 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <C31C2EB0-71F5-43E8-B830-8D67D29D0763@striderweb.com>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>	<1244203569.4106.24.camel@rillian.narnia.sunriseroad.net>
	<43FA1CE6-3E08-4B87-9852-B8D05B92349C@striderweb.com>
	<4A291073.3010100@rotorised.com>
	<C31C2EB0-71F5-43E8-B830-8D67D29D0763@striderweb.com>
Message-ID: <E7201D71-F147-47ED-8F9F-42B53DDC513A@gmail.com>


No, the packager should not do this automatically. Anybody who updates  
their plugins via SVN wouldn't get automatic notifications then.

> Is it not something the extend plugin pacager could add to the  
> readme as it packaged up the plugin for downloads that way each  
> plugin gets the correct GUID for free.


From ozh at planetozh.com  Fri Jun  5 14:42:14 2009
From: ozh at planetozh.com (Ozh)
Date: Fri Jun  5 14:43:02 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <1244203569.4106.24.camel@rillian.narnia.sunriseroad.net>
Message-ID: <OF5520D3FF.BCE46A0E-ONC12575CC.0050AF90-C12575CC.0050C598@notes.edfgdf.fr>

> Currently, if a plugin author chooses to self-host his plugin and not
> list it in the directory, a malicious individual could e-mail Matt and
> ask for an entry in the plugin directory with the same slug. Then, the
> malicious individual could release an 'update' to the plugin that could
> 0wn the blog.

oh my...
fantastic idea >:]

From yahgrp at poplarware.com  Fri Jun  5 14:56:42 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Fri Jun  5 14:54:18 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <OF5520D3FF.BCE46A0E-ONC12575CC.0050AF90-C12575CC.0050C598@notes.edfgdf.fr>
References: <OF5520D3FF.BCE46A0E-ONC12575CC.0050AF90-C12575CC.0050C598@notes.edfgdf.fr>
Message-ID: <4A29322A.4060000@poplarware.com>

>> Currently, if a plugin author chooses to self-host his plugin and not
>> list it in the directory, a malicious individual could e-mail Matt and
>> ask for an entry in the plugin directory with the same slug. Then, the
>> malicious individual could release an 'update' to the plugin that could
>> 0wn the blog.

Couldn't they also put the same GUID in there as the original plugin? 
If you wanted to avoid hijacking of plugins hosted elsewhere, you'd 
also need to enforce the idea that the GUID for plugins on wp.org 
would be their wp.org full URL. In which case, putting it in 
automatically somehow seems like the only/best idea.

    --Jennifer

-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com
Drupal, WordPress, and custom Web programming

From wp-hackers at striderweb.com  Fri Jun  5 15:11:54 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jun  5 15:12:11 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <OF5520D3FF.BCE46A0E-ONC12575CC.0050AF90-C12575CC.0050C598@notes.edfgdf.fr>
References: <OF5520D3FF.BCE46A0E-ONC12575CC.0050AF90-C12575CC.0050C598@notes.edfgdf.fr>
Message-ID: <B968F2C4-A0D9-43AA-82DC-323AF99FF219@striderweb.com>


On Jun 5, 2009, at 9:42 AM, Ozh wrote:

>> Currently, if a plugin author chooses to self-host his plugin and not
>> list it in the directory, a malicious individual could e-mail Matt  
>> and
>> ask for an entry in the plugin directory with the same slug. Then,  
>> the
>> malicious individual could release an 'update' to the plugin that  
>> could
>> 0wn the blog.
>
> oh my...
> fantastic idea >:]

Hmm... I wonder if a non-Extend hosted plugin could protect itself  
from this?  Put in some code that prevents *itself* from being auto- 
updated by WP?

Something like (untested):


function filter_get_update_plugins( $data ) {
	unset( $data->response['myplugin/myplugin.php'] );
	return $data;
}

add_filter( 'option_update_plugins', 'filter_get_update_plugins' ) );
add_filter( 'transient_update_plugins',  
'filter_get_update_plugins' ) ); // for cached data

From wp-hackers at striderweb.com  Fri Jun  5 15:16:16 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jun  5 15:19:06 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <4A29322A.4060000@poplarware.com>
References: <OF5520D3FF.BCE46A0E-ONC12575CC.0050AF90-C12575CC.0050C598@notes.edfgdf.fr>
	<4A29322A.4060000@poplarware.com>
Message-ID: <4CA66C45-1C3E-4AC5-B557-51D5B2297AE2@striderweb.com>


On Jun 5, 2009, at 9:56 AM, Jennifer Hodgdon wrote:

>>> Currently, if a plugin author chooses to self-host his plugin and  
>>> not
>>> list it in the directory, a malicious individual could e-mail Matt  
>>> and
>>> ask for an entry in the plugin directory with the same slug. Then,  
>>> the
>>> malicious individual could release an 'update' to the plugin that  
>>> could
>>> 0wn the blog.
>
> Couldn't they also put the same GUID in there as the original  
> plugin? If you wanted to avoid hijacking of plugins hosted  
> elsewhere, you'd also need to enforce the idea that the GUID for  
> plugins on wp.org would be their wp.org full URL. In which case,  
> putting it in automatically somehow seems like the only/best idea.

No, that's the opposite.

He describes a cracker putting a malware plugin in WP-Extend that  
update/overwrites your self-hosted plugin.

You describe creating a self hosted plugin that would be update/ 
overwritten by someone else's WP-Extend plugin.  Which isn't very  
useful to a cracker....

Stephen

-- 
Stephen Rider
http://striderweb.com/
From repost_08 at yahoo.com  Fri Jun  5 20:03:26 2009
From: repost_08 at yahoo.com (RePost)
Date: Fri Jun  5 20:03:41 2009
Subject: [wp-hackers] Calendar generating bad links to pages
In-Reply-To: <BB4C87B8-9DBD-4FCF-9B14-9D221DAA694B@verselogic.net>
References: <4A1DD858.4050209@yahoo.com>	<33D7C320-4804-4B8A-A2A1-11895E1BB7F9@verselogic.net>	<4A1DF0F2.60407@yahoo.com>
	<BB4C87B8-9DBD-4FCF-9B14-9D221DAA694B@verselogic.net>
Message-ID: <4A297A0E.5040408@yahoo.com>

Alan Castonguay wrote:
> Yes. That plugin does -not- filter to only post_type='post', and 
> displays calendar entries for days with anything in the posts table 
> with a post_status of Published. By default that's posts & pages. You 
> could ask Eric to fix that.
>
> Alan J Castonguay
>
>
> On May 27, 2009, at 10:03 PM, RePost wrote:
>
>> Alan Castonguay wrote:
>>> 2.7.1's calendar is generated in 
>>> http://core.trac.wordpress.org/browser/tags/2.7.1/wp-includes/general-template.php but 
>>> as far as I see all the SQL is guarded with
>>>   AND post_type = 'post' AND post_status = 'publish'
>>>
>>> It might be caused by a plugin filtering the sql, or replacing the 
>>> calendar wholesale. I don't see this behavior on 2.8-bleeding-edge
>>>
>>> Alan J Castonguay
>>>
>>>
>>>
>>> On May 27, 2009, at 8:18 PM, RePost wrote:
>>>
>>>> I've found through checking my Google Webmaster stats that the 
>>>> WordPress (2.7.1) calendar is attempting to create links to pages 
>>>> as well as blog entries, resulting in 404 errors.
>>>>
>>>> For example, WP shows that I generated my "About" page on 11-24-08 
>>>> and my "Contact" pages on 11-26-08. The November calendar is 
>>>> treating those pages like blog entries and attempting to link to them.
>>>>
>>>> To test these links, see the calendar at the bottom of the middle 
>>>> column:
>>>> http://bit.ly/n0en4
>>>>
>>
>> Alan, I am using the mw-calendar plugin, detailed here:
>> http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.html
>>
>> The script is here:
>> http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.phpf
>>
>> Does this provide any clues?
>

Eric Meyer invites the community to update his mw_get_calendar plugin:

Any chance of getting someone on wp-hackers to make the changes for you, 
and communicating them back to me; or, alternatively, putting me in 
touch with someone who's willing to make the necessary edits and send 
them to me

Relevant links:
http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.html
http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.phpf

Contact eric at meyerweb.com
From repost_08 at yahoo.com  Fri Jun  5 20:33:48 2009
From: repost_08 at yahoo.com (RePost)
Date: Fri Jun  5 20:34:04 2009
Subject: [wp-hackers] Managing order of time,
	day and date in wp_list_comments
Message-ID: <4A29812C.9060706@yahoo.com>

I'm just now tackling wp_list_comments and need help figuring out how to 
manage time, day and date with the new code.

Formerly, I did it this way: <?php comment_time() ?> <?php 
comment_date('D, M j, Y') ?>

This let me express a comment as "Joe Jones said at 2:35 p.m. Mon, April 
2, 2009....

Is there any easy way to do the same thing in wp_list_comments?

Thanks.
From wp-hackers at striderweb.com  Fri Jun  5 20:39:50 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jun  5 20:40:42 2009
Subject: [wp-hackers] Calendar generating bad links to pages
In-Reply-To: <4A297A0E.5040408@yahoo.com>
References: <4A1DD858.4050209@yahoo.com>	<33D7C320-4804-4B8A-A2A1-11895E1BB7F9@verselogic.net>	<4A1DF0F2.60407@yahoo.com>
	<BB4C87B8-9DBD-4FCF-9B14-9D221DAA694B@verselogic.net>
	<4A297A0E.5040408@yahoo.com>
Message-ID: <8F20B02D-55C7-48F7-8AC6-46B8FD3EAEDE@striderweb.com>

Wow.  With different people top and bottom-posting their replies, I  
could make any sense of this thread.

This makes MUCH more sense.  Might even get some response....


>>> On May 27, 2009, at 8:18 PM, RePost wrote:
>>>
>>>> I've found through checking my Google Webmaster stats that the  
>>>> WordPress (2.7.1) calendar is attempting to create links to pages  
>>>> as well as blog entries, resulting in 404 errors.
>>>>
>>>> For example, WP shows that I generated my "About" page on  
>>>> 11-24-08 and my "Contact" pages on 11-26-08. The November  
>>>> calendar is treating those pages like blog entries and attempting  
>>>> to link to them.
>>>>
>>>> To test these links, see the calendar at the bottom of the middle  
>>>> column:
>>>> http://bit.ly/n0en4
>>>>
>


>> Alan Castonguay wrote:
>>> 2.7.1's calendar is generated in http://core.trac.wordpress.org/browser/tags/2.7.1/wp-includes/general-template.php 
>>>  but as far as I see all the SQL is guarded with
>>>  AND post_type = 'post' AND post_status = 'publish'
>>>
>>> It might be caused by a plugin filtering the sql, or replacing the  
>>> calendar wholesale. I don't see this behavior on 2.8-bleeding-edge
>>>
>>> Alan J Castonguay
>>>
>

> On May 27, 2009, at 10:03 PM, RePost wrote:
>

>> Alan, I am using the mw-calendar plugin, detailed here:
>> http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.html
>>
>> The script is here:
>> http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.phpf
>>
>> Does this provide any clues?


Alan Castonguay wrote:
> Yes. That plugin does -not- filter to only post_type='post', and  
> displays calendar entries for days with anything in the posts table  
> with a post_status of Published. By default that's posts & pages.  
> You could ask Eric to fix that.
>
> Alan J Castonguay
>
>


On Jun 5, 2009, at 3:03 PM, RePost wrote:
Eric Meyer invites the community to update his mw_get_calendar plugin:

Any chance of getting someone on wp-hackers to make the changes for  
you, and communicating them back to me; or, alternatively, putting me  
in touch with someone who's willing to make the necessary edits and  
send them to me

Relevant links:
http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.html
http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.phpf

Contact eric at meyerweb.com

From ncrice at gmail.com  Sat Jun  6 03:42:37 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Sat Jun  6 03:42:59 2009
Subject: [wp-hackers] Plugin Stats API
Message-ID: <862d087f0906052042m6fe412a5tcfbe62f52bb3bc02@mail.gmail.com>

I'm finding it hard to locate documentation on geting download stats for
plugins on Extend. Is there a simple way for me to display download stats
for a particular plugin on my site?

Thanks!
Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice
From mwalters8 at gmail.com  Sat Jun  6 03:55:41 2009
From: mwalters8 at gmail.com (Matt Walters)
Date: Sat Jun  6 03:56:16 2009
Subject: [wp-hackers] Plugin Stats API
In-Reply-To: <862d087f0906052042m6fe412a5tcfbe62f52bb3bc02@mail.gmail.com>
References: <862d087f0906052042m6fe412a5tcfbe62f52bb3bc02@mail.gmail.com>
Message-ID: <5dbff0c70906052055u493b8515h1d9dd91b3e52421c@mail.gmail.com>

Does this plugin solve the issue for you?

http://wordpress.org/extend/plugins/plugin-info/


If nothing else, you should be able to see how they did it so you can
do it yourself if it isn't what you're needing.


---------------------------------
Matt Walters
http://mattwalters.net/




On Fri, Jun 5, 2009 at 11:42 PM, Nathan Rice <ncrice@gmail.com> wrote:
> I'm finding it hard to locate documentation on geting download stats for
> plugins on Extend. Is there a simple way for me to display download stats
> for a particular plugin on my site?
>
> Thanks!
> Nathan
>
> My Website
> http://www.nathanrice.net/
>
> My Twitter
> http://twitter.com/nathanrice
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wp at xentek.net  Sat Jun  6 07:46:58 2009
From: wp at xentek.net (Eric Marden)
Date: Sat Jun  6 07:47:25 2009
Subject: [wp-hackers] how to integrate plugins into theme easily
In-Reply-To: <C800E94C-11A7-4D22-AEDD-CE4EA83413F3@gmail.com>
References: <a51040f00906050500m6fe78b95uf3202c297527a14@mail.gmail.com>
	<C800E94C-11A7-4D22-AEDD-CE4EA83413F3@gmail.com>
Message-ID: <28968EFF-4F66-4967-B708-96FC25D9F559@xentek.net>

> A number of themes include code for special widgets and other custom  
> functionality in their functions.php file.
>
> On Jun 5, 2009, at 8:00 AM, Mayur Somani wrote:
>
>> How can I integrate any plugin into the theme itself so that I  
>> don't have to
>> ask the end user to install it.
>> Thanks.


functions.php is your only answer for automatic code being run with  
out user interaction. If you want to support other plugins, put the  
code in your theme with a check of function_exists() and then tell  
users that the theme has more functionality if they stall x-y-z plugins.

Look for the do_action and apply_filter hooks, and target them in  
functions.php or even write more generic plugins to be used by other  
users of the theme (if you are targeting someone else's theme). I did  
this with K2: http://xentek.net/code/wordpress/plugins/k2-hook-up/

And if this is your own theme, just build it into the theme directly.  
On K2 we have a pluggable.php file that has a number of functions that  
you can over ride (in functions.php or as a traditional plugin) to  
further tweak the theme, though this for more advanced users for sure.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/

From wp at xentek.net  Sat Jun  6 07:48:56 2009
From: wp at xentek.net (Eric Marden)
Date: Sat Jun  6 07:49:23 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <C31C2EB0-71F5-43E8-B830-8D67D29D0763@striderweb.com>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>	<1244203569.4106.24.camel@rillian.narnia.sunriseroad.net>
	<43FA1CE6-3E08-4B87-9852-B8D05B92349C@striderweb.com>
	<4A291073.3010100@rotorised.com>
	<C31C2EB0-71F5-43E8-B830-8D67D29D0763@striderweb.com>
Message-ID: <3635D9B1-B3D7-4B06-831F-9D1B6966DCC0@xentek.net>

> The packager adds the GUID automatically.
>
> Of course, we *would* need some sort of "transition" system , since  
> plugins already installed would not get the GUID until the next time  
> they're updated.
>
> Or is that what you meant? ;-)

Unless the packager is zipping them on the fly, wouldn't the mere  
change of the readme.txt in svn be enough to trigger the update  
(especially if a .1 is added to the version number, if it depends on  
that too)?


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/


From harish.mlists at gmail.com  Sat Jun  6 13:38:38 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Sat Jun  6 13:38:56 2009
Subject: [wp-hackers] Tiny patch for plugins.php
Message-ID: <4A2A715E.5020807@gmail.com>

I've attached a tiny patch for wp-admin/plugins.php. This removes an
errant </p> which breaks xhtml validation and prevents my browser from
rendering the plugins page.

Perhaps someone else who's run into this issue will find it helpful.

Harish
-------------- next part --------------
Index: wp-admin/plugins.php
===================================================================
--- wp-admin/plugins.php	(revision 11526)
+++ wp-admin/plugins.php	(working copy)
@@ -436,7 +436,7 @@
 
 		$plugin_meta = apply_filters('plugin_row_meta', $plugin_meta, $plugin_file, $plugin_data, $context);
 		echo implode(' | ', $plugin_meta);
-		echo "</p></td>
+		echo "</td>
 	</tr>\n";
 
 		do_action( 'after_plugin_row', $plugin_file, $plugin_data, $context );
From navjotjsingh at gmail.com  Sat Jun  6 13:40:07 2009
From: navjotjsingh at gmail.com (Navjot Singh)
Date: Sat Jun  6 13:40:41 2009
Subject: [wp-hackers] Tiny patch for plugins.php
In-Reply-To: <4A2A715E.5020807@gmail.com>
References: <4A2A715E.5020807@gmail.com>
Message-ID: <7b9e108c0906060640n3348f404oe06f2f9d3a857657@mail.gmail.com>

Instead of submitting the patch here, please submit the ticket/patch on
Wordpress trac.

On Sat, Jun 6, 2009 at 7:08 PM, Harish Narayanan <harish.mlists@gmail.com>wrote:

> I've attached a tiny patch for wp-admin/plugins.php. This removes an
> errant </p> which breaks xhtml validation and prevents my browser from
> rendering the plugins page.
>
> Perhaps someone else who's run into this issue will find it helpful.
>
> Harish
>
> Index: wp-admin/plugins.php
> ===================================================================
> --- wp-admin/plugins.php        (revision 11526)
> +++ wp-admin/plugins.php        (working copy)
> @@ -436,7 +436,7 @@
>
>                $plugin_meta = apply_filters('plugin_row_meta',
> $plugin_meta, $plugin_file, $plugin_data, $context);
>                echo implode(' | ', $plugin_meta);
> -               echo "</p></td>
> +               echo "</td>
>        </tr>\n";
>
>                do_action( 'after_plugin_row', $plugin_file, $plugin_data,
> $context );
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
From jeremy at visser.name  Sat Jun  6 14:07:35 2009
From: jeremy at visser.name (Jeremy Visser)
Date: Sat Jun  6 14:07:52 2009
Subject: [wp-hackers] Tiny patch for plugins.php
In-Reply-To: <4A2A715E.5020807@gmail.com>
References: <4A2A715E.5020807@gmail.com>
Message-ID: <1244297255.4041.20.camel@rillian.narnia.sunriseroad.net>

On Sat, 2009-06-06 at 15:38 +0200, Harish Narayanan wrote:
> I've attached a tiny patch for wp-admin/plugins.php. This removes an
> errant </p> which breaks xhtml validation and prevents my browser from
> rendering the plugins page.

Thanks for your contribution. I just added it to the bug tracker so it
can be committed:

<http://core.trac.wordpress.org/ticket/10049>

From harish.mlists at gmail.com  Sat Jun  6 20:47:54 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Sat Jun  6 20:48:12 2009
Subject: [wp-hackers] Tiny patch for plugins.php
In-Reply-To: <1244297255.4041.20.camel@rillian.narnia.sunriseroad.net>
References: <4A2A715E.5020807@gmail.com>
	<1244297255.4041.20.camel@rillian.narnia.sunriseroad.net>
Message-ID: <4A2AD5FA.5050105@gmail.com>

Jeremy Visser wrote:
> On Sat, 2009-06-06 at 15:38 +0200, Harish Narayanan wrote:
>> I've attached a tiny patch for wp-admin/plugins.php. This removes an
>> errant </p> which breaks xhtml validation and prevents my browser from
>> rendering the plugins page.
> 
> Thanks for your contribution. I just added it to the bug tracker so it
> can be committed:
> 
> <http://core.trac.wordpress.org/ticket/10049>

Thanks!

Harish
From wp-hackers at striderweb.com  Sun Jun  7 00:01:15 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sun Jun  7 00:25:32 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <3635D9B1-B3D7-4B06-831F-9D1B6966DCC0@xentek.net>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>	<1244203569.4106.24.camel@rillian.narnia.sunriseroad.net>
	<43FA1CE6-3E08-4B87-9852-B8D05B92349C@striderweb.com>
	<4A291073.3010100@rotorised.com>
	<C31C2EB0-71F5-43E8-B830-8D67D29D0763@striderweb.com>
	<3635D9B1-B3D7-4B06-831F-9D1B6966DCC0@xentek.net>
Message-ID: <4AF46EB8-49D1-43DE-AD54-01BD0095964C@striderweb.com>


On Jun 6, 2009, at 2:48 AM, Eric Marden wrote:

>> The packager adds the GUID automatically.
>>
>> Of course, we *would* need some sort of "transition" system , since  
>> plugins already installed would not get the GUID until the next  
>> time they're updated.
>>
>> Or is that what you meant? ;-)
>
> Unless the packager is zipping them on the fly, wouldn't the mere  
> change of the readme.txt in svn be enough to trigger the update  
> (especially if a .1 is added to the version number, if it depends on  
> that too)?

if I already have Plugin X installed on my blog when this system is  
instituted, I would not get the GUID until the next update to that  
plugin.  Thus some sort of transitory system would have to be in place  
so that that first update still happens.  Two possibilities come to  
mind:

1) Brute force method: up the version every single plugin in Extend  
with a .1 on the end, adding the GUID.  I do **not** think this one is  
a good idea....

2) The system remembers the extant version for each plugin at the time  
the system is instituted, and basically upgrades a plugin if it's at  
version #x or below, OR it has the GUID.  This way could work. :)
From peter.westwood at ftwr.co.uk  Sun Jun  7 18:46:18 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sun Jun  7 18:46:38 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <4AF46EB8-49D1-43DE-AD54-01BD0095964C@striderweb.com>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>	<1244203569.4106.24.camel@rillian.narnia.sunriseroad.net>
	<43FA1CE6-3E08-4B87-9852-B8D05B92349C@striderweb.com>
	<4A291073.3010100@rotorised.com>
	<C31C2EB0-71F5-43E8-B830-8D67D29D0763@striderweb.com>
	<3635D9B1-B3D7-4B06-831F-9D1B6966DCC0@xentek.net>
	<4AF46EB8-49D1-43DE-AD54-01BD0095964C@striderweb.com>
Message-ID: <949B4D14-62C1-4AF1-A8D0-448D345F4FE8@ftwr.co.uk>


On 7 Jun 2009, at 01:01, Stephen Rider wrote:

>
> On Jun 6, 2009, at 2:48 AM, Eric Marden wrote:
>
>>> The packager adds the GUID automatically.
>>>
>>> Of course, we *would* need some sort of "transition" system ,  
>>> since plugins already installed would not get the GUID until the  
>>> next time they're updated.
>>>
>>> Or is that what you meant? ;-)
>>
>> Unless the packager is zipping them on the fly, wouldn't the mere  
>> change of the readme.txt in svn be enough to trigger the update  
>> (especially if a .1 is added to the version number, if it depends  
>> on that too)?
>
> if I already have Plugin X installed on my blog when this system is  
> instituted, I would not get the GUID until the next update to that  
> plugin.  Thus some sort of transitory system would have to be in  
> place so that that first update still happens.  Two possibilities  
> come to mind:
>
> 1) Brute force method: up the version every single plugin in Extend  
> with a .1 on the end, adding the GUID.  I do **not** think this one  
> is a good idea....
>
> 2) The system remembers the extant version for each plugin at the  
> time the system is instituted, and basically upgrades a plugin if  
> it's at version #x or below, OR it has the GUID.  This way could  
> work. :)
>

The following works I think (except for svn users):

1) Packager checks readme for GUID before building zip file if it  
doesn't exist it adds it to the zip file, if it exists but doesn't  
match the correct value then the readme is invalid.
2) WordPress starts sending the GUID as well as the other info (I  
think this is possibly automatic depending on how the request is built)
3) Serverside check for existance of upgrade can know if the version  
of the plugin installed has or has not always been available with GUID  
and can behave in the right way when checking for updates.

As part of this transition GUID should become a required field going  
forward for updates but we don't want plugin authors all pushing out  
an update just to add a GUID to the readme that is pointless and  
provides a lot of burden for no real benifit.

As for plugin users who install straight from svn, I don't see them as  
a target for the plugin updater and if it stops working for them for  
plugins which don't have a GUID (which based on the above rules  
probably won't happen anyway) then I don't see this as a big issue.

I would expect them to be pinned to a revision or a tag anyway so not  
wanting the update to happen till they had tested in.

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From wp at xentek.net  Sun Jun  7 19:33:37 2009
From: wp at xentek.net (Eric Marden)
Date: Sun Jun  7 20:49:23 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <949B4D14-62C1-4AF1-A8D0-448D345F4FE8@ftwr.co.uk>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>	<1244203569.4106.24.camel@rillian.narnia.sunriseroad.net>
	<43FA1CE6-3E08-4B87-9852-B8D05B92349C@striderweb.com>
	<4A291073.3010100@rotorised.com>
	<C31C2EB0-71F5-43E8-B830-8D67D29D0763@striderweb.com>
	<3635D9B1-B3D7-4B06-831F-9D1B6966DCC0@xentek.net>
	<4AF46EB8-49D1-43DE-AD54-01BD0095964C@striderweb.com>
	<949B4D14-62C1-4AF1-A8D0-448D345F4FE8@ftwr.co.uk>
Message-ID: <3B38AF27-BF28-465A-A48C-5FD7085EB999@xentek.net>

> As for plugin users who install straight from svn, I don't see them  
> as a target for the plugin updater and if it stops working for them  
> for plugins which don't have a GUID (which based on the above rules  
> probably won't happen anyway) then I don't see this as a big issue.
>
> I would expect them to be pinned to a revision or a tag anyway so  
> not wanting the update to happen till they had tested in.

As one of those SVN Users, I would still want the notifications in the  
admin...


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
From casey.bisson at gmail.com  Mon Jun  8 00:06:12 2009
From: casey.bisson at gmail.com (Casey Bisson)
Date: Mon Jun  8 00:40:01 2009
Subject: [wp-hackers] WordPress Plugin GUID
In-Reply-To: <3B38AF27-BF28-465A-A48C-5FD7085EB999@xentek.net>
References: <70ebb7140906041511r6b4e2c77h262b86875a2f9383@mail.gmail.com>	<1244203569.4106.24.camel@rillian.narnia.sunriseroad.net>
	<43FA1CE6-3E08-4B87-9852-B8D05B92349C@striderweb.com>
	<4A291073.3010100@rotorised.com>
	<C31C2EB0-71F5-43E8-B830-8D67D29D0763@striderweb.com>
	<3635D9B1-B3D7-4B06-831F-9D1B6966DCC0@xentek.net>
	<4AF46EB8-49D1-43DE-AD54-01BD0095964C@striderweb.com>
	<949B4D14-62C1-4AF1-A8D0-448D345F4FE8@ftwr.co.uk>
	<3B38AF27-BF28-465A-A48C-5FD7085EB999@xentek.net>
Message-ID: <5CB989BE-A658-4541-A8D0-60E9B2A9D336@gmail.com>


+1

On Jun 7, 2009, at 3:33 PM, Eric Marden wrote:

>> As for plugin users who install straight from svn, I don't see them  
>> as a target for the plugin updater...
>
> As one of those SVN Users, I would still want the notifications in  
> the admin...

From repost_08 at yahoo.com  Tue Jun  9 00:01:48 2009
From: repost_08 at yahoo.com (RePost)
Date: Tue Jun  9 00:01:55 2009
Subject: [wp-hackers] comment_form_title not working with threaded comments
Message-ID: <4A2DA66C.9040901@yahoo.com>

This tag is supposed to display "Reply to (author)," but it's not 
working for me and others who have posted on the WordPress forums 
without  finding a solution.

Here's the way I coded the tag:
<?php comment_form_title( 'Add <em>your</em> comment', 'Reply to %s' ); ?>

"Add your comment" displays every time, even when the poster is replying 
to another comment.

Site link:
http://bit.ly/DBe8x

Background on this issue:

Thread:
http://wordpress.org/support/topic/225225?replies=8#post-1095665

Ticket opened; immediately closed:
http://core.trac.wordpress.org/ticket/8639
From repost_08 at yahoo.com  Tue Jun  9 00:07:41 2009
From: repost_08 at yahoo.com (RePost)
Date: Tue Jun  9 00:07:44 2009
Subject: [wp-hackers] Eric Meyer requests help updating mw_get_calenda plugin
Message-ID: <4A2DA7CD.6000200@yahoo.com>

I'm using Eric Meyer's mw_get_calendar plugin, but the plugin requires 
updating, as it creates links to not just posts, but pages as well.

Alan J Castonguay notes:
That plugin does -not- filter to only post_type='post', and displays 
calendar entries for days with anything in the posts table with a 
post_status of Published. By default that's posts & pages.

I contacted Eric, and he's asking any interested list members to assist. 
I'd appreciate it as well!

Eric writes:
Any chance of getting someone on wp-hackers to make the changes for you, 
and communicating them back to me; or, alternatively, putting me in 
touch with someone who's willing to make the necessary edits and send 
them to me

Relevant links:
http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.html
http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.phpf

Contact eric at meyerweb.com

Thanks!

From wp at xentek.net  Tue Jun  9 00:14:49 2009
From: wp at xentek.net (Eric Marden)
Date: Tue Jun  9 00:15:23 2009
Subject: [wp-hackers] Eric Meyer requests help updating mw_get_calenda
	plugin
In-Reply-To: <4A2DA7CD.6000200@yahoo.com>
References: <4A2DA7CD.6000200@yahoo.com>
Message-ID: <1CE8BF80-BA37-4CCF-A062-498C9417EA6D@xentek.net>

I'll send Eric a reply now. We'd love to contribute these changes for  
free for the community.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/





On Jun 8, 2009, at 8:07 PM, RePost wrote:

> I'm using Eric Meyer's mw_get_calendar plugin, but the plugin  
> requires updating, as it creates links to not just posts, but pages  
> as well.
>
> Alan J Castonguay notes:
> That plugin does -not- filter to only post_type='post', and displays  
> calendar entries for days with anything in the posts table with a  
> post_status of Published. By default that's posts & pages.
>
> I contacted Eric, and he's asking any interested list members to  
> assist. I'd appreciate it as well!
>
> Eric writes:
> Any chance of getting someone on wp-hackers to make the changes for  
> you, and communicating them back to me; or, alternatively, putting  
> me in touch with someone who's willing to make the necessary edits  
> and send them to me
>
> Relevant links:
> http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.html
> http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.phpf
>
> Contact eric at meyerweb.com
>
> Thanks!
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From jayarjo at gmail.com  Tue Jun  9 14:26:14 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Tue Jun  9 14:26:28 2009
Subject: [wp-hackers] WP 2.8 "Enhanced support for custom taxonomies"
Message-ID: <9aa12a490906090726n49cc9e6dyfcf1897be57fc817@mail.gmail.com>

Hello people,

Does anyone know what the subject ("Enhanced support for custom taxonomies")
means in WP 2.8? I found it on "WP 2.8 What's New" list. Is a custom
taxonomy still strictly binded to a particular object type? I mean until now
one had to create separate taxonomies for links and for posts, etc, even if
they semantically belonged to the same one, let's say posts about music and
links to music resources, or something like that. Is it still true? And what
is meant under that "Enhanced support for custom taxonomies" after all?

Best Regards,
David Barbakadze
From joost at yoast.com  Tue Jun  9 14:28:20 2009
From: joost at yoast.com (Joost de Valk)
Date: Tue Jun  9 14:28:36 2009
Subject: [wp-hackers] WP 2.8 "Enhanced support for custom taxonomies"
In-Reply-To: <9aa12a490906090726n49cc9e6dyfcf1897be57fc817@mail.gmail.com>
References: <9aa12a490906090726n49cc9e6dyfcf1897be57fc817@mail.gmail.com>
Message-ID: <4A2E7184.2030904@yoast.com>

Sorry for dropping my own URL in here, but it's relevant I think:

http://yoast.com/wordpress-custom-taxonomies/

Davit Barbakadze wrote:
> Hello people,
>
> Does anyone know what the subject ("Enhanced support for custom taxonomies")
> means in WP 2.8? I found it on "WP 2.8 What's New" list. Is a custom
> taxonomy still strictly binded to a particular object type? I mean until now
> one had to create separate taxonomies for links and for posts, etc, even if
> they semantically belonged to the same one, let's say posts about music and
> links to music resources, or something like that. Is it still true? And what
> is meant under that "Enhanced support for custom taxonomies" after all?
>
> Best Regards,
> David Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>    

-- 
*Joost de Valk*
SEO & Web Development (Magento & WordPress)
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost@orangevalley.nl <mailto:joost@orangevalley.nl> - 
joost@yoast.com <mailto:joost@yoast.com>
T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
W: http://yoast.com/
From if.website at gmail.com  Tue Jun  9 14:32:39 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue Jun  9 14:32:53 2009
Subject: [wp-hackers] WP 2.8 "Enhanced support for custom taxonomies"
In-Reply-To: <9aa12a490906090726n49cc9e6dyfcf1897be57fc817@mail.gmail.com>
References: <9aa12a490906090726n49cc9e6dyfcf1897be57fc817@mail.gmail.com>
Message-ID: <674b4a3b0906090732v38476f9ep9a9bbcb53331e315@mail.gmail.com>

On Tue, Jun 9, 2009 at 9:26 AM, Davit Barbakadze<jayarjo@gmail.com> wrote:
> Does anyone know what the subject ("Enhanced support for custom taxonomies")
> means in WP 2.8? I found it on "WP 2.8 What's New" list. Is a custom
> taxonomy still strictly binded to a particular object type? I mean until now
> one had to create separate taxonomies for links and for posts, etc, even if
> they semantically belonged to the same one, let's say posts about music and
> links to music resources, or something like that. Is it still true? And what
> is meant under that "Enhanced support for custom taxonomies" after all?

"Enhanced support" means mainly that you can add taxonomies from the
admin, and the default taxonomies are now defined at init.  Nothing
major in the back-end functionality has changed.
From gaarai at gaarai.com  Tue Jun  9 14:34:24 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Tue Jun  9 14:34:42 2009
Subject: [wp-hackers] WP 2.8 "Enhanced support for custom taxonomies"
In-Reply-To: <4A2E7184.2030904@yoast.com>
References: <9aa12a490906090726n49cc9e6dyfcf1897be57fc817@mail.gmail.com>
	<4A2E7184.2030904@yoast.com>
Message-ID: <4A2E72F0.8020302@gaarai.com>

Thanks for the post and plugin Joost. I remember driving myself nuts 
with custom taxonomies a few months back when I was working on a 
project. Hopefully the API design for custom taxonomies can be improved 
in future versions.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/
http://dnsyogi.com/



Joost de Valk wrote:
> Sorry for dropping my own URL in here, but it's relevant I think:
>
> http://yoast.com/wordpress-custom-taxonomies/
>
> Davit Barbakadze wrote:
>> Hello people,
>>
>> Does anyone know what the subject ("Enhanced support for custom 
>> taxonomies")
>> means in WP 2.8? I found it on "WP 2.8 What's New" list. Is a custom
>> taxonomy still strictly binded to a particular object type? I mean 
>> until now
>> one had to create separate taxonomies for links and for posts, etc, 
>> even if
>> they semantically belonged to the same one, let's say posts about 
>> music and
>> links to music resources, or something like that. Is it still true? 
>> And what
>> is meant under that "Enhanced support for custom taxonomies" after all?
>>
>> Best Regards,
>> David Barbakadze
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>    
>
From john.ivar.myrstad at gmail.com  Tue Jun  9 14:48:22 2009
From: john.ivar.myrstad at gmail.com (John Myrstad)
Date: Tue Jun  9 14:48:36 2009
Subject: [wp-hackers] WP 2.8 "Enhanced support for custom taxonomies"
In-Reply-To: <4A2E72F0.8020302@gaarai.com>
References: <9aa12a490906090726n49cc9e6dyfcf1897be57fc817@mail.gmail.com>
	<4A2E7184.2030904@yoast.com> <4A2E72F0.8020302@gaarai.com>
Message-ID: <d29aad6e0906090748x1336da5cr3772ab1f1c08b8d5@mail.gmail.com>

 FYI:

Justin Tadlock have been busy with 2.8 taxonomy change lately:

http://justintadlock.com/archives/2009/06/04/using-custom-taxonomies-to-create-a-movie-database
http://justintadlock.com/archives/2009/05/06/custom-taxonomies-in-wordpress-28
http://justintadlock.com/archives/2009/06/09/series-wordpress-plugin

John Myrstad
From jayarjo at gmail.com  Tue Jun  9 15:56:46 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Tue Jun  9 15:57:01 2009
Subject: [wp-hackers] WP 2.8 "Enhanced support for custom taxonomies"
In-Reply-To: <4A2E7184.2030904@yoast.com>
References: <9aa12a490906090726n49cc9e6dyfcf1897be57fc817@mail.gmail.com>
	<4A2E7184.2030904@yoast.com>
Message-ID: <9aa12a490906090856y175ea60ydf1088e4ae283a62@mail.gmail.com>

Thanks for the link Joost, I've seen somewhere another plugin with same
functionality by the way. I wish someone had written those earlier :( I
still regret that I had no time to do so. Do you plan to implement something
like custom objects plugin in future? Although without proper (logical)
implementation of taxonomies themselves that could be a problem.

On Tue, Jun 9, 2009 at 6:28 PM, Joost de Valk <joost@yoast.com> wrote:

> Sorry for dropping my own URL in here, but it's relevant I think:
>
> http://yoast.com/wordpress-custom-taxonomies/
>
> Davit Barbakadze wrote:
>
>> Hello people,
>>
>> Does anyone know what the subject ("Enhanced support for custom
>> taxonomies")
>> means in WP 2.8? I found it on "WP 2.8 What's New" list. Is a custom
>> taxonomy still strictly binded to a particular object type? I mean until
>> now
>> one had to create separate taxonomies for links and for posts, etc, even
>> if
>> they semantically belonged to the same one, let's say posts about music
>> and
>> links to music resources, or something like that. Is it still true? And
>> what
>> is meant under that "Enhanced support for custom taxonomies" after all?
>>
>> Best Regards,
>> David Barbakadze
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>
> --
> *Joost de Valk*
> SEO & Web Development (Magento & WordPress)
> OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
> E: joost@orangevalley.nl <mailto:joost@orangevalley.nl> - joost@yoast.com<mailto:
> joost@yoast.com>
> T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
> W: http://yoast.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
David Barbakadze
From jayarjo at gmail.com  Tue Jun  9 16:15:41 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Tue Jun  9 16:15:57 2009
Subject: [wp-hackers] WP 2.8 "Enhanced support for custom taxonomies"
In-Reply-To: <d29aad6e0906090748x1336da5cr3772ab1f1c08b8d5@mail.gmail.com>
References: <9aa12a490906090726n49cc9e6dyfcf1897be57fc817@mail.gmail.com>
	<4A2E7184.2030904@yoast.com> <4A2E72F0.8020302@gaarai.com>
	<d29aad6e0906090748x1336da5cr3772ab1f1c08b8d5@mail.gmail.com>
Message-ID: <9aa12a490906090915o5854341fw58e0422024d41019@mail.gmail.com>

Those links were very helpful. Thanks John!

By the way I've stumbled upon this:
http://core.trac.wordpress.org/ticket/9674

"Similar to the improved support for custom taxonomies in WP 2.8, we really
need to have better support for custom post types. At the database layer,
this is completely supported, and used for things like post revision,
attachments, pages, etc. However, the administration pages used to manage
these objects (edit-page-form.php and edit-form-advanced.php for example)
contain lots of duplicated code, and do not expose any of their
functionality in a way that is re-usable by plugins, or other parts of
WordPress <http://core.trac.wordpress.org/wiki/WordPress>.

Correcting this will take a bit of work, so I'll be using this ticket to
track progress. (I'm surprised I didn't find an existing ticket for this...
if there is one, I'll use that instead)"

Awesome! :D


On Tue, Jun 9, 2009 at 6:48 PM, John Myrstad <john.ivar.myrstad@gmail.com>wrote:

>  FYI:
>
> Justin Tadlock have been busy with 2.8 taxonomy change lately:
>
>
> http://justintadlock.com/archives/2009/06/04/using-custom-taxonomies-to-create-a-movie-database
>
> http://justintadlock.com/archives/2009/05/06/custom-taxonomies-in-wordpress-28
> http://justintadlock.com/archives/2009/06/09/series-wordpress-plugin
>
> John Myrstad
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
David Barbakadze
From peter.westwood at ftwr.co.uk  Tue Jun  9 16:50:14 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue Jun  9 16:50:30 2009
Subject: [wp-hackers] comment_form_title not working with threaded comments
In-Reply-To: <4A2DA66C.9040901@yahoo.com>
References: <4A2DA66C.9040901@yahoo.com>
Message-ID: <12B6D15C-60EB-4DBD-A241-46D30001D33A@ftwr.co.uk>


On 9 Jun 2009, at 01:01, RePost wrote:

> This tag is supposed to display "Reply to (author)," but it's not  
> working for me and others who have posted on the WordPress forums  
> without  finding a solution.
>
> Here's the way I coded the tag:
> <?php comment_form_title( 'Add <em>your</em> comment', 'Reply to  
> %s' ); ?>
>
> "Add your comment" displays every time, even when the poster is  
> replying to another comment.
>
> Site link:
> http://bit.ly/DBe8x
>
> Background on this issue:
>
> Thread:
> http://wordpress.org/support/topic/225225?replies=8#post-1095665
>
> Ticket opened; immediately closed:
> http://core.trac.wordpress.org/ticket/8639

In what way do you think this does not work?

At present that function only affects the page when javascript is  
disabled.

With javascript enabled the comment for appears underneath the comment  
you are replying to with the default text.

Is this your issue - the difference in behaviour with javascript  
enabled and disabled?

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From sbruner at slipfire.com  Tue Jun  9 18:11:58 2009
From: sbruner at slipfire.com (Steve Bruner [SlipFire])
Date: Tue Jun  9 18:12:37 2009
Subject: [wp-hackers] Auto Add Page on Theme Select
Message-ID: <45c7e0790906091111n5c641787u3332e13a2ca35658@mail.gmail.com>

Hi All,

I'm creating a theme and would like a Page to be auto created when the theme
is selected.  Would obviously check to make sure the page doesn't
pre-exist.  Tried using the switch_theme hook but it seems that it won't
execute in functions.php, only a plugin.

Any suggestions would be appreciated.

Thanks
Steve
From maillist at wangstedt.net  Tue Jun  9 18:20:48 2009
From: maillist at wangstedt.net (=?ISO-8859-1?Q?Karl_W=E5ngstedt?=)
Date: Tue Jun  9 18:21:09 2009
Subject: [wp-hackers] Custom default settings at install
Message-ID: <6096B5F1-8325-442B-9B4C-37503330B892@wangstedt.net>

Hi all

I wonder if there is an easy way to change the default settings WP  
inserts into the DB at install?

Can I perhaps hook into the install process at some point with an  
array of settings from some custom script?

Thank you
Karl W?ngstedt
----------------------------------
          W?ngstedt  nova
         www.wangstedt.net

Karl W?ngstedt       0278-61 12 33
Stenhuggarv?gen 3g   070-578 13 04
821 41  BOLLN?S
----------------------------------
Det h?r brevet skickades med en Macintosh fr?n Apple.
Garanterat virusfri med Mac OS X.
From peter.westwood at ftwr.co.uk  Tue Jun  9 18:23:48 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue Jun  9 18:24:05 2009
Subject: [wp-hackers] Auto Add Page on Theme Select
In-Reply-To: <45c7e0790906091111n5c641787u3332e13a2ca35658@mail.gmail.com>
References: <45c7e0790906091111n5c641787u3332e13a2ca35658@mail.gmail.com>
Message-ID: <C5181932-E431-4FC5-8080-2136F5EF718E@ftwr.co.uk>


On 9 Jun 2009, at 19:11, Steve Bruner [SlipFire] wrote:

> Hi All,
>
> I'm creating a theme and would like a Page to be auto created when  
> the theme
> is selected.  Would obviously check to make sure the page doesn't
> pre-exist.  Tried using the switch_theme hook but it seems that it  
> won't
> execute in functions.php, only a plugin.
>

The switch_theme action will run when the previous theme is still  
effectively active as during the page load the switch happens the old  
themes functions.php is still included.

You best bet is to do something on the init action for now.

But it would be good to open a ticket in trac requesting a way for  
this to be achieved.

I think we need an activation hook for the theme which runs on the  
first page load that a theme is active for in the admin

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From peter.westwood at ftwr.co.uk  Tue Jun  9 18:26:05 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue Jun  9 18:26:19 2009
Subject: [wp-hackers] Custom default settings at install
In-Reply-To: <6096B5F1-8325-442B-9B4C-37503330B892@wangstedt.net>
References: <6096B5F1-8325-442B-9B4C-37503330B892@wangstedt.net>
Message-ID: <578FAF5B-6E4C-4E49-938F-43724F60F13A@ftwr.co.uk>


On 9 Jun 2009, at 19:20, Karl W?ngstedt wrote:

> Hi all
>
> I wonder if there is an easy way to change the default settings WP  
> inserts into the DB at install?
>
> Can I perhaps hook into the install process at some point with an  
> array of settings from some custom script?
>

Place a file called install.php in WP_CONTENT_DIR

Define a function called wp_install_defaults() in that file.

Add whatever defaults you want

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From joost at yoast.com  Tue Jun  9 18:40:16 2009
From: joost at yoast.com (Joost de Valk)
Date: Tue Jun  9 18:40:34 2009
Subject: [wp-hackers] Auto Add Page on Theme Select
In-Reply-To: <C5181932-E431-4FC5-8080-2136F5EF718E@ftwr.co.uk>
References: <45c7e0790906091111n5c641787u3332e13a2ca35658@mail.gmail.com>
	<C5181932-E431-4FC5-8080-2136F5EF718E@ftwr.co.uk>
Message-ID: <4A2EAC90.6050302@yoast.com>

Peter Westwood wrote:
> On 9 Jun 2009, at 19:11, Steve Bruner [SlipFire] wrote:
>
>> Hi All,
>>
>> I'm creating a theme and would like a Page to be auto created when 
>> the theme
>> is selected.  Would obviously check to make sure the page doesn't
>> pre-exist.  Tried using the switch_theme hook but it seems that it won't
>> execute in functions.php, only a plugin. 
>
> The switch_theme action will run when the previous theme is still 
> effectively active as during the page load the switch happens the old 
> themes functions.php is still included.
>
> You best bet is to do something on the init action for now.
>
> But it would be good to open a ticket in trac requesting a way for 
> this to be achieved.
>
> I think we need an activation hook for the theme which runs on the 
> first page load that a theme is active for in the admin
>
> westi 
+1 for that, that would make a lot of stuff easier in theme settings.

-- 
*Joost de Valk*
SEO & Web Development (Magento & WordPress)
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost@orangevalley.nl <mailto:joost@orangevalley.nl> - 
joost@yoast.com <mailto:joost@yoast.com>
T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
W: http://yoast.com/
From frank at bueltge.de  Tue Jun  9 18:50:25 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Tue Jun  9 18:50:58 2009
Subject: [wp-hackers] Custom default settings at install
In-Reply-To: <578FAF5B-6E4C-4E49-938F-43724F60F13A@ftwr.co.uk>
References: <6096B5F1-8325-442B-9B4C-37503330B892@wangstedt.net> 
	<578FAF5B-6E4C-4E49-938F-43724F60F13A@ftwr.co.uk>
Message-ID: <db047a770906091150x909a2c9wcb8dd5ecd9226679@mail.gmail.com>

or you set the settings via a plugin after the install. On this way it
is easy to save the default settings and it is possible to reset to
this settings.

Best regards
Frank

__
Das Buch: WordPress - Weblogs einrichten und administrieren, Open Source Press
  ISBN 978-3-937514-33-8
  http://wordpress-buch.bueltge.de/das-buch/

http://bueltge.de : frank@bueltge.de
http://wpengineer.com : frank@wpengineer.com
__
Frank B?ltge
Tel:    +49 36428 122529
Mobil:  +49 170 5322053
E-Mail: f.bueltge@inpsyde.com

Inpsyde GmbH
Mutzer Heide 3
51467 Bergisch Gladbach

Steuernr: 204/5756/0999 Steueridentnr.: DE263849534
Gesch?ftsf?hrender Gesellschafter: Heinz Roh? HRB 65224 Amtsgericht K?ln

http://inpsyde.com
http://pressthis.de



On Tue, Jun 9, 2009 at 8:26 PM, Peter Westwood<peter.westwood@ftwr.co.uk> wrote:
>
> On 9 Jun 2009, at 19:20, Karl W?ngstedt wrote:
>
>> Hi all
>>
>> I wonder if there is an easy way to change the default settings WP inserts
>> into the DB at install?
>>
>> Can I perhaps hook into the install process at some point with an array of
>> settings from some custom script?
>>
>
> Place a file called install.php in WP_CONTENT_DIR
>
> Define a function called wp_install_defaults() in that file.
>
> Add whatever defaults you want
>
> westi
> --
> Peter Westwood
> http://blog.ftwr.co.uk | http://westi.wordpress.com
> C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From glenn at glennansley.com  Tue Jun  9 19:08:08 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Tue Jun  9 19:08:42 2009
Subject: [wp-hackers] Auto Add Page on Theme Select
In-Reply-To: <4A2EAC90.6050302@yoast.com>
References: <45c7e0790906091111n5c641787u3332e13a2ca35658@mail.gmail.com> 
	<C5181932-E431-4FC5-8080-2136F5EF718E@ftwr.co.uk>
	<4A2EAC90.6050302@yoast.com>
Message-ID: <3283f0830906091208g45c412c0w1ff644f6d35f0ebb@mail.gmail.com>

In the meantime, it may help to parse the GET arguments for
action=activate and template=[yourtemplate].
Hook a function to the init like Westi suggested and do your checks on
the GET string at that point.

Glenn Ansley
http://fullthrottledevelopment.com
http://twitter.com/full_throttle
http://twitter.com/glennansley

On Tue, Jun 9, 2009 at 2:40 PM, Joost de Valk<joost@yoast.com> wrote:
> Peter Westwood wrote:
>>
>> On 9 Jun 2009, at 19:11, Steve Bruner [SlipFire] wrote:
>>
>>> Hi All,
>>>
>>> I'm creating a theme and would like a Page to be auto created when the
>>> theme
>>> is selected. ?Would obviously check to make sure the page doesn't
>>> pre-exist. ?Tried using the switch_theme hook but it seems that it won't
>>> execute in functions.php, only a plugin.
>>
>> The switch_theme action will run when the previous theme is still
>> effectively active as during the page load the switch happens the old themes
>> functions.php is still included.
>>
>> You best bet is to do something on the init action for now.
>>
>> But it would be good to open a ticket in trac requesting a way for this to
>> be achieved.
>>
>> I think we need an activation hook for the theme which runs on the first
>> page load that a theme is active for in the admin
>>
>> westi
>
> +1 for that, that would make a lot of stuff easier in theme settings.
>
> --
> *Joost de Valk*
> SEO & Web Development (Magento & WordPress)
> OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
> E: joost@orangevalley.nl <mailto:joost@orangevalley.nl> - joost@yoast.com
> <mailto:joost@yoast.com>
> T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
> W: http://yoast.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wp-hackers at striderweb.com  Tue Jun  9 19:16:19 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Tue Jun  9 19:16:37 2009
Subject: [wp-hackers] Custom default settings at install
In-Reply-To: <6096B5F1-8325-442B-9B4C-37503330B892@wangstedt.net>
References: <6096B5F1-8325-442B-9B4C-37503330B892@wangstedt.net>
Message-ID: <74F16FDC-0751-4673-85E0-D987D4FB7D9E@striderweb.com>


On Jun 9, 2009, at 1:20 PM, Karl W?ngstedt wrote:

> I wonder if there is an easy way to change the default settings WP  
> inserts into the DB at install?

Why Yes, you can. :)

<http://wpbits.wordpress.com/2007/08/10/automating-wordpress-customizations-the-installphp-way/ 
 >

Stephen


-- 
Stephen Rider
http://striderweb.com/




From frank at bueltge.de  Tue Jun  9 19:40:54 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Tue Jun  9 19:41:28 2009
Subject: [wp-hackers] Custom default settings at install
In-Reply-To: <74F16FDC-0751-4673-85E0-D987D4FB7D9E@striderweb.com>
References: <6096B5F1-8325-442B-9B4C-37503330B892@wangstedt.net> 
	<74F16FDC-0751-4673-85E0-D987D4FB7D9E@striderweb.com>
Message-ID: <db047a770906091240o659bbc2amf219584156cb502c@mail.gmail.com>

and the plugin way :)
I think, its a litlle bid simple wy.
http://wpbits.wordpress.com/2007/08/09/automating-wordpress-customizations-the-plugin-way/



On Tue, Jun 9, 2009 at 9:16 PM, Stephen Rider<wp-hackers@striderweb.com> wrote:
>
> On Jun 9, 2009, at 1:20 PM, Karl W?ngstedt wrote:
>
>> I wonder if there is an easy way to change the default settings WP inserts
>> into the DB at install?
>
> Why Yes, you can. :)
>
> <http://wpbits.wordpress.com/2007/08/10/automating-wordpress-customizations-the-installphp-way/>
>
> Stephen
>
>
> --
> Stephen Rider
> http://striderweb.com/
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From repost_08 at yahoo.com  Wed Jun 10 06:01:37 2009
From: repost_08 at yahoo.com (RePost)
Date: Wed Jun 10 06:02:01 2009
Subject: [wp-hackers] comment_form_title not working with threaded comments
In-Reply-To: <12B6D15C-60EB-4DBD-A241-46D30001D33A@ftwr.co.uk>
References: <4A2DA66C.9040901@yahoo.com>
	<12B6D15C-60EB-4DBD-A241-46D30001D33A@ftwr.co.uk>
Message-ID: <4A2F4C41.6020908@yahoo.com>

Peter Westwood wrote:
>
> On 9 Jun 2009, at 01:01, RePost wrote:
>
>> This tag is supposed to display "Reply to (author)," but it's not 
>> working for me and others who have posted on the WordPress forums 
>> without  finding a solution.
>>
>> Here's the way I coded the tag:
>> <?php comment_form_title( 'Add <em>your</em> comment', 'Reply to %s' 
>> ); ?>
>>
>> "Add your comment" displays every time, even when the poster is 
>> replying to another comment.
>>
>> Site link:
>> http://bit.ly/DBe8x
>>
>> Background on this issue:
>>
>> Thread:
>> http://wordpress.org/support/topic/225225?replies=8#post-1095665
>>
>> Ticket opened; immediately closed:
>> http://core.trac.wordpress.org/ticket/8639
>
> In what way do you think this does not work?
>
> At present that function only affects the page when javascript is 
> disabled.
>
> With javascript enabled the comment for appears underneath the comment 
> you are replying to with the default text.
>
> Is this your issue - the difference in behaviour with javascript 
> enabled and disabled?
>
> westi

Thanks for your reply, westi. I disabled javascript, selected the 
"reply" link and "Reply to (author)" did display in that case.

Now I'd like to know why the blog offers LESS functionality with 
javascript enabled. Understanding that most visitors do have javascript 
enabled, why would I want a generic "Leave a reply" message to display 
instead of the more personal "Reply to (author)"?


From mikeschinkel at newclarity.net  Wed Jun 10 06:31:49 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jun 10 06:32:25 2009
Subject: [wp-hackers] Custom default settings at install
In-Reply-To: <578FAF5B-6E4C-4E49-938F-43724F60F13A@ftwr.co.uk>
Message-ID: <EMEWEMEW2_DELIMl591Vod3eb6ab641dea7f7802346,
	mikeschinkel@newclarity.net, 27771441.751244615508826.J>

Peter,

What's the use case for install.php in WP_CONTENT_DIR?  It's not for a plugin or for a theme, right?  Would it be for a custom distribution of WordPress?

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "Peter Westwood" <peter.westwood@ftwr.co.uk>
To: wp-hackers@lists.automattic.com
Sent: Tuesday, June 9, 2009 2:26:05 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Custom default settings at install


On 9 Jun 2009, at 19:20, Karl W?ngstedt wrote:

> Hi all
>
> I wonder if there is an easy way to change the default settings WP  
> inserts into the DB at install?
>
> Can I perhaps hook into the install process at some point with an  
> array of settings from some custom script?
>

Place a file called install.php in WP_CONTENT_DIR

Define a function called wp_install_defaults() in that file.

Add whatever defaults you want

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From peter.westwood at ftwr.co.uk  Wed Jun 10 06:56:41 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Jun 10 06:57:00 2009
Subject: [wp-hackers] Custom default settings at install
In-Reply-To: <EMEWEMEW2_DELIMl591Vod3eb6ab641dea7f7802346,
	mikeschinkel@newclarity.net, 27771441.751244615508826.J>
References: <EMEWEMEW2_DELIMl591Vod3eb6ab641dea7f7802346,
	mikeschinkel@newclarity.net, 27771441.751244615508826.J>
Message-ID: <FFCD0AB4-B7A2-4679-87CA-D9CAD32C530D@ftwr.co.uk>


On 10 Jun 2009, at 07:31, Mike Schinkel wrote:

> What's the use case for install.php in WP_CONTENT_DIR?  It's not for  
> a plugin or for a theme, right?  Would it be for a custom  
> distribution of WordPress?

For a custom distribution.

At it happens at install time it's not relevant to plugins/themes as  
neither could be active.

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From wp at xentek.net  Wed Jun 10 07:09:59 2009
From: wp at xentek.net (Eric Marden)
Date: Wed Jun 10 07:10:18 2009
Subject: [wp-hackers] Custom default settings at install
In-Reply-To: <FFCD0AB4-B7A2-4679-87CA-D9CAD32C530D@ftwr.co.uk>
References: <EMEWEMEW2_DELIMl591Vod3eb6ab641dea7f7802346,
	mikeschinkel@newclarity.net, 27771441.751244615508826.J>
	<FFCD0AB4-B7A2-4679-87CA-D9CAD32C530D@ftwr.co.uk>
Message-ID: <C0B71B2D-3957-43B8-B6CE-2C2A2881D45B@xentek.net>

> On 10 Jun 2009, at 07:31, Mike Schinkel wrote:
>
>> What's the use case for install.php in WP_CONTENT_DIR?  It's not  
>> for a plugin or for a theme, right?  Would it be for a custom  
>> distribution of WordPress?
>
> For a custom distribution.
>
> At it happens at install time it's not relevant to plugins/themes as  
> neither could be active.

With WP.org and WP-MU merging, is there an impact to using install.php  
for custom distribs?


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/

From peter.westwood at ftwr.co.uk  Wed Jun 10 07:26:49 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Jun 10 07:27:06 2009
Subject: [wp-hackers] Custom default settings at install
In-Reply-To: <C0B71B2D-3957-43B8-B6CE-2C2A2881D45B@xentek.net>
References: <EMEWEMEW2_DELIMl591Vod3eb6ab641dea7f7802346,
	mikeschinkel@newclarity.net, 27771441.751244615508826.J>
	<FFCD0AB4-B7A2-4679-87CA-D9CAD32C530D@ftwr.co.uk>
	<C0B71B2D-3957-43B8-B6CE-2C2A2881D45B@xentek.net>
Message-ID: <B59B0F65-6CB1-4C49-93D8-455404651F84@ftwr.co.uk>


On 10 Jun 2009, at 08:09, Eric Marden wrote:

>> On 10 Jun 2009, at 07:31, Mike Schinkel wrote:
>>
>>> What's the use case for install.php in WP_CONTENT_DIR?  It's not  
>>> for a plugin or for a theme, right?  Would it be for a custom  
>>> distribution of WordPress?
>>
>> For a custom distribution.
>>
>> At it happens at install time it's not relevant to plugins/themes  
>> as neither could be active.
>
> With WP.org and WP-MU merging, is there an impact to using  
> install.php for custom distribs?
>

Not sure I understand the question, but WP-MU supports the same type  
on custom defaults override.

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From ozh at planetozh.com  Wed Jun 10 07:32:41 2009
From: ozh at planetozh.com (Ozh)
Date: Wed Jun 10 07:33:18 2009
Subject: [wp-hackers] Custom default settings at install
In-Reply-To: <EMEWEMEW2_DELIMl591Vod3eb6ab641dea7f7802346,
	mikeschinkel@newclarity.net, 27771441.751244615508826.J>
Message-ID: <OF581E0D76.C528CB20-ONC12575D1.00296937-C12575D1.00297224@notes.edfgdf.fr>

> What's the use case for install.php in WP_CONTENT_DIR?  It's not for
> a plugin or for a theme, right?  Would it be for a custom 
> distribution of WordPress?

More on this: <
http://wpbits.wordpress.com/2007/08/10/automating-wordpress-customizations-the-installphp-way/>
From wp at xentek.net  Wed Jun 10 08:04:18 2009
From: wp at xentek.net (Eric Marden)
Date: Wed Jun 10 08:04:34 2009
Subject: [wp-hackers] Custom default settings at install
In-Reply-To: <B59B0F65-6CB1-4C49-93D8-455404651F84@ftwr.co.uk>
References: <EMEWEMEW2_DELIMl591Vod3eb6ab641dea7f7802346,
	mikeschinkel@newclarity.net, 27771441.751244615508826.J>
	<FFCD0AB4-B7A2-4679-87CA-D9CAD32C530D@ftwr.co.uk>
	<C0B71B2D-3957-43B8-B6CE-2C2A2881D45B@xentek.net>
	<B59B0F65-6CB1-4C49-93D8-455404651F84@ftwr.co.uk>
Message-ID: <E0F48896-EE6F-4DC8-84A4-9BE41AA7FD5B@xentek.net>

On Jun 10, 2009, at 3:26 AM, Peter Westwood wrote:

>
> On 10 Jun 2009, at 08:09, Eric Marden wrote:
>
>>> On 10 Jun 2009, at 07:31, Mike Schinkel wrote:
>>>
>>>> What's the use case for install.php in WP_CONTENT_DIR?  It's not  
>>>> for a plugin or for a theme, right?  Would it be for a custom  
>>>> distribution of WordPress?
>>>
>>> For a custom distribution.
>>>
>>> At it happens at install time it's not relevant to plugins/themes  
>>> as neither could be active.
>>
>> With WP.org and WP-MU merging, is there an impact to using  
>> install.php for custom distribs?
>>
>
> Not sure I understand the question, but WP-MU supports the same type  
> on custom defaults override.
>
> westi

I mean, doesn't WPMU ship with an install file, that wp.org does not.  
I gather that the mechanism that MU uses is the one we've been talking  
about in this thread. My question was, I guess, Does this impact that  
in anyway?


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/





From mikeschinkel at newclarity.net  Wed Jun 10 08:45:22 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jun 10 08:46:19 2009
Subject: [wp-hackers] Custom default settings at install
In-Reply-To: <B59B0F65-6CB1-4C49-93D8-455404651F84@ftwr.co.uk>
Message-ID: <EMEWEMEW2_DELIMl593jMc638681aaf116a3a8e2cb6,
	mikeschinkel@newclarity.net, 29277972.1151244623519871.J>

"Peter Westwood" <peter.westwood@ftwr.co.uk> wrote:
> Not sure I understand the question, but WP-MU supports the same 
> type on custom defaults override.

Rather than clarify this pretty much answered my question:

http://wpbits.wordpress.com/2007/08/10/automating-wordpress-customizations-the-installphp-way/

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From malaiac at gmail.com  Wed Jun 10 14:38:31 2009
From: malaiac at gmail.com (Malaiac)
Date: Wed Jun 10 15:05:42 2009
Subject: [wp-hackers] Wordpress.com stats API
In-Reply-To: <87e663fa0906050543n79fb625dga7fc8e2731b94dc0@mail.gmail.com>
References: <59e7f3130906050238o753af430k3b8fcdbf46d74a4e@mail.gmail.com> 
	<87e663fa0906050543n79fb625dga7fc8e2731b94dc0@mail.gmail.com>
Message-ID: <59e7f3130906100738y1e01edfnf2163fad5144d6da@mail.gmail.com>

2009/6/5 Nikolay Bachiyski <nb@nikolay.bg>:
> On Fri, Jun 5, 2009 at 12:38, Malaiac<malaiac@gmail.com> wrote:
>> wp.com stats is already the best stats plugins for WP (if only by not
>> storing stats locally), data leverage would make it the bestest :)
>
> http://stats.wordpress.com/csv.php
>
> Happy hacking,
> Nikolay.

I eventually find the way to the stats API, thanks Nikolay :)

Question : is there plugins available to leverage the API data ?
(if no, I'm going to code one)

Malaiac
From wp at xentek.net  Wed Jun 10 16:29:13 2009
From: wp at xentek.net (Eric Marden)
Date: Wed Jun 10 16:29:34 2009
Subject: [wp-hackers] Wordpress.com stats API
In-Reply-To: <59e7f3130906100738y1e01edfnf2163fad5144d6da@mail.gmail.com>
References: <59e7f3130906050238o753af430k3b8fcdbf46d74a4e@mail.gmail.com>
	<87e663fa0906050543n79fb625dga7fc8e2731b94dc0@mail.gmail.com>
	<59e7f3130906100738y1e01edfnf2163fad5144d6da@mail.gmail.com>
Message-ID: <56892240-C14D-4DAF-A1AA-48EE30975469@xentek.net>

> I eventually find the way to the stats API, thanks Nikolay :)
>
> Question : is there plugins available to leverage the API data ?
> (if no, I'm going to code one)
>
> Malaiac

Tell us when you add it to the extend db :)



- Eric Marden
__________________________________
http://xentek.net/code/wordpress/

From awgandrews at gmail.com  Wed Jun 10 18:21:29 2009
From: awgandrews at gmail.com (Alex Andrews)
Date: Wed Jun 10 18:21:59 2009
Subject: [wp-hackers] Getting $sep from wp_title
Message-ID: <e9f3ce460906101121x24f862c0ua9ceb439cfabff47@mail.gmail.com>

Hi all,

I'm probably being stupid, but I can't work out how to get the
variable $sep which is the second parameter of wp_title

wp_title($sep = '&raquo;', $display = true, $seplocation = '')

I want to get $sep out, so when I do a add_filter('wp_title',
'ribcage_page_title'); then ribcage_page_title can get $sep from
wp_title somehow and

Looking at the source it seems that wp_title, when it applies the
filters, passes the variables along. So does that mean that
ribcage_page_title gets these variables?

Cheers very much

Alex
From if.website at gmail.com  Wed Jun 10 18:32:49 2009
From: if.website at gmail.com (Austin Matzko)
Date: Wed Jun 10 18:33:18 2009
Subject: [wp-hackers] Getting $sep from wp_title
In-Reply-To: <e9f3ce460906101121x24f862c0ua9ceb439cfabff47@mail.gmail.com>
References: <e9f3ce460906101121x24f862c0ua9ceb439cfabff47@mail.gmail.com>
Message-ID: <674b4a3b0906101132w1a27bcb5ra61902cd3946c6f@mail.gmail.com>

On Wed, Jun 10, 2009 at 1:21 PM, Alex Andrews<awgandrews@gmail.com> wrote:
> I'm probably being stupid, but I can't work out how to get the
> variable $sep which is the second parameter of wp_title
>
> wp_title($sep = '&raquo;', $display = true, $seplocation = '')
>
> I want to get $sep out, so when I do a add_filter('wp_title',
> 'ribcage_page_title'); then ribcage_page_title can get $sep from
> wp_title somehow and

Please see the Codex: http://codex.wordpress.org/Function_Reference/add_filter

The fourth argument passed to add_filter is the number of accepted
arguments.  Since $sep is the second, this needs to be 2.

In the future, please post support questions at the WP support forums:
http://wordpress.org/support/ .  This list is meant for development
issues.
From awgandrews at gmail.com  Wed Jun 10 18:36:37 2009
From: awgandrews at gmail.com (Alex Andrews)
Date: Wed Jun 10 18:37:13 2009
Subject: [wp-hackers] Getting $sep from wp_title
In-Reply-To: <674b4a3b0906101132w1a27bcb5ra61902cd3946c6f@mail.gmail.com>
References: <e9f3ce460906101121x24f862c0ua9ceb439cfabff47@mail.gmail.com> 
	<674b4a3b0906101132w1a27bcb5ra61902cd3946c6f@mail.gmail.com>
Message-ID: <e9f3ce460906101136w667008bap5b170f6bc0c24a73@mail.gmail.com>

Not wanting to be rude, but I've asked plenty of similar questions
like this here before.

Apologies though for perhaps not searching the codex better.

And, of course, thank you for your prompt reply!

Alex

2009/6/10 Austin Matzko <if.website@gmail.com>:
> On Wed, Jun 10, 2009 at 1:21 PM, Alex Andrews<awgandrews@gmail.com> wrote:
>> I'm probably being stupid, but I can't work out how to get the
>> variable $sep which is the second parameter of wp_title
>>
>> wp_title($sep = '&raquo;', $display = true, $seplocation = '')
>>
>> I want to get $sep out, so when I do a add_filter('wp_title',
>> 'ribcage_page_title'); then ribcage_page_title can get $sep from
>> wp_title somehow and
>
> Please see the Codex: http://codex.wordpress.org/Function_Reference/add_filter
>
> The fourth argument passed to add_filter is the number of accepted
> arguments. ?Since $sep is the second, this needs to be 2.
>
> In the future, please post support questions at the WP support forums:
> http://wordpress.org/support/ . ?This list is meant for development
> issues.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jake.mcmurchie at googlemail.com  Thu Jun 11 08:48:00 2009
From: jake.mcmurchie at googlemail.com (Jake McMurchie)
Date: Thu Jun 11 09:25:40 2009
Subject: [wp-hackers] execution of shortcode
Message-ID: <fcf6e76b0906110148l78a7a78t358b095dae332593@mail.gmail.com>

Hi.

I have this in my functions.php:

add_shortcode('ataglance', 'ataglance_function');
function ataglance_function() {
?>
<table>
<!-- // generate table from xml file -->
</table>
<?php
}

And this in my page:

test copy

[ataglance]

However, the page output is

<table>...</table>
test copy

How can I make sure the code is executed in order?

Thanks in advance.

Jake
From simon at sweetinteraction.com  Thu Jun 11 09:58:36 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Thu Jun 11 09:58:51 2009
Subject: [wp-hackers] execution of shortcode
In-Reply-To: <fcf6e76b0906110148l78a7a78t358b095dae332593@mail.gmail.com>
References: <fcf6e76b0906110148l78a7a78t358b095dae332593@mail.gmail.com>
Message-ID: <77c8b7bf0906110258m635e5ebawc372dc42cb26b2f8@mail.gmail.com>

On Thu, Jun 11, 2009 at 9:48 AM, Jake
McMurchie<jake.mcmurchie@googlemail.com> wrote:
> I have this in my functions.php:
>
> add_shortcode('ataglance', 'ataglance_function');
> function ataglance_function() {
> ?>
> <table>
> <!-- // generate table from xml file -->
> </table>
> <?php
> }
>

Your function needs to *return* not echo the HTML.

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT
From scribu at gmail.com  Thu Jun 11 10:57:16 2009
From: scribu at gmail.com (scribu)
Date: Thu Jun 11 10:57:30 2009
Subject: [wp-hackers] Plugin dependency checking
Message-ID: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>

First of all, great to see WP 2.8 finally comming out. In the official blog
post, dependency checking was mentioned at the end. What I have in mind
might not be the same thing but it is related, so here goes:

I have a plugin toolkit called
scbFramework<http://scribu.net/wordpress/scb-framework>,
which I would like to package as a base plugin.

The solution I found involves two steps:

1. Get the base plugin to be the first plugin that is loaded, so that the
classes are available to all the rest of the plugins. This is done
here<http://plugins.trac.wordpress.org/browser/scb-framework/trunk/plugin.php>
.
2. In each child plugin, check if the base plugin is installed. If not,
deactivate the child plugin and issue a notice. This is done in
scb-check.php<http://plugins.trac.wordpress.org/browser/scb-framework/trunk/scb-check.php>
.

Step two requires ticket #9991
<http://core.trac.wordpress.org/ticket/9991>to be fixed, so that the
user doesn't get two notices when he tries to
activate the child plugin.

Any thoughts on this method? Are there any plans to have an equivalent
mechanism in WP 2.9?


-- 
http://scribu.net
From burt at ourcommoninterest.org  Thu Jun 11 11:27:03 2009
From: burt at ourcommoninterest.org (Burt Adsit)
Date: Thu Jun 11 11:27:24 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
Message-ID: <4A30EA07.2090205@ourcommoninterest.org>

I have a similar issue with one of my plugins. I have classes in my 
plugin that extend native buddypress classes. There were some issues 
early on where the user loaded the plugins out of sequence. So now we 
have a standard way of determining if bp is installed and loaded at the 
time of dependent plugin load.

function oci_load_buddypress() {
    // check to see if bp is already loaded
    if ( function_exists( 'bp_core_setup_globals' ) )
        return true;

    /* Get the list of active sitewide plugins */
    $active_sitewide_plugins = maybe_unserialize( get_site_option( 
'active_sitewide_plugins' ) );

    // not activated  
    if ( !isset( $active_sidewide_plugins['buddypress/bp-loader.php'] ) )
        return false;

    // activated but not loaded yet
    if ( isset( $active_sidewide_plugins['buddypress/bp-loader.php'] ) 
&& !function_exists( 'bp_core_setup_globals' ) ) {
        require_once( WP_PLUGIN_DIR . '/buddypress/bp-loader.php' );
        return true;
    }

    return false;
}

So the fn returns true if it's ok to continue with dependent plugin load 
and false if we need a graceful exit. It doesn't require rearranging the 
list of active plugins.

scribu wrote:
> First of all, great to see WP 2.8 finally comming out. In the official blog
> post, dependency checking was mentioned at the end. What I have in mind
> might not be the same thing but it is related, so here goes:
>
> I have a plugin toolkit called
> scbFramework<http://scribu.net/wordpress/scb-framework>,
> which I would like to package as a base plugin.
>
> The solution I found involves two steps:
>
> 1. Get the base plugin to be the first plugin that is loaded, so that the
> classes are available to all the rest of the plugins. This is done
> here<http://plugins.trac.wordpress.org/browser/scb-framework/trunk/plugin.php>
> .
> 2. In each child plugin, check if the base plugin is installed. If not,
> deactivate the child plugin and issue a notice. This is done in
> scb-check.php<http://plugins.trac.wordpress.org/browser/scb-framework/trunk/scb-check.php>
> .
>
> Step two requires ticket #9991
> <http://core.trac.wordpress.org/ticket/9991>to be fixed, so that the
> user doesn't get two notices when he tries to
> activate the child plugin.
>
> Any thoughts on this method? Are there any plans to have an equivalent
> mechanism in WP 2.9?
>
>
>   

-- 
Code Is Freedom
Burt Adsit

From jake.mcmurchie at googlemail.com  Thu Jun 11 11:39:14 2009
From: jake.mcmurchie at googlemail.com (Jake McMurchie)
Date: Thu Jun 11 11:39:34 2009
Subject: [wp-hackers] execution of shortcode
In-Reply-To: <77c8b7bf0906110258m635e5ebawc372dc42cb26b2f8@mail.gmail.com>
References: <fcf6e76b0906110148l78a7a78t358b095dae332593@mail.gmail.com>
	<77c8b7bf0906110258m635e5ebawc372dc42cb26b2f8@mail.gmail.com>
Message-ID: <fcf6e76b0906110439j70222f32qc8c703e4a9819cf0@mail.gmail.com>

Excellent. Thanks Simon.

2009/6/11 Simon Wheatley <simon@sweetinteraction.com>:
> On Thu, Jun 11, 2009 at 9:48 AM, Jake
> McMurchie<jake.mcmurchie@googlemail.com> wrote:
>> I have this in my functions.php:
>>
>> add_shortcode('ataglance', 'ataglance_function');
>> function ataglance_function() {
>> ?>
>> <table>
>> <!-- // generate table from xml file -->
>> </table>
>> <?php
>> }
>>
>
> Your function needs to *return* not echo the HTML.
>
> S
>
>
> ---
> Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> Registered office: 7 Malton Av, Manchester, M21 8AT
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From scribu at gmail.com  Thu Jun 11 11:56:08 2009
From: scribu at gmail.com (scribu)
Date: Thu Jun 11 11:56:23 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <4A30EA07.2090205@ourcommoninterest.org>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A30EA07.2090205@ourcommoninterest.org>
Message-ID: <349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>

Interesting solution. The bigger problem, at least for me, is the graceful
exit, i.e. how to let the user know why one or more plugins aren't working
and what to do next.

If you have a lot of dependant plugins, you end up copying the same code
over and over again, so the less code you have to write for a graceful exit,
the better.

This is why I think 1 or two functions added to core would help. Something
like

plugin_dependency_warning($plugin, $version = '0');

--
http://scribu.net
From simon at sweetinteraction.com  Thu Jun 11 12:19:46 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Thu Jun 11 12:20:28 2009
Subject: [wp-hackers] Settings pages
Message-ID: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com>

I'm about to put in a settings page with only one field in. What a
waste of pixels and a menu item.

Or am I missing something... is there a way to add my field to one of
the existing options page (e.g. Options > Writing)? Without hacking it
in with JS. :)

Thanks in advance.

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT
From wp-hackers at striderweb.com  Thu Jun 11 12:35:30 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Jun 11 12:36:02 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com>
References: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com>
Message-ID: <51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>


On Jun 11, 2009, at 7:19 AM, Simon Wheatley wrote:

> I'm about to put in a settings page with only one field in. What a
> waste of pixels and a menu item.
>
> Or am I missing something... is there a way to add my field to one of
> the existing options page (e.g. Options > Writing)? Without hacking it
> in with JS. :)

This is a topic that in the past has had a lot of discussion, but  
little traction.

Two possibilities come to mind as solutions:

1) Allow a hook of some sort that allows a plugin to add a section to  
an "Other Settings" page.

2) Create an interface so that on the "Manage Plugins" page itself a  
plugin can open up a "mini form" below its row that let's users set  
one or two settings.

Another distinction to think about is that between Settings that may  
be changed from time to time, and "set and forget" settings.  A good  
example of set and forget is Akismet.  How many times do you need to  
go in and change your key?

Thus, both 1 and 2 above might be useful at the same time -- 1 for  
settings that change occasionally, and 2 for "set and forget" settings.

Stephen


-- 
Stephen Rider
http://striderweb.com/




From wp-hackers at striderweb.com  Thu Jun 11 12:43:24 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Jun 11 12:43:52 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>
References: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com>
	<51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>
Message-ID: <C03B3811-E55B-423B-8D59-699769995511@striderweb.com>

A little pre-emptive clarification:

On Jun 11, 2009, at 7:35 AM, Stephen Rider wrote:

> 2) Create an interface so that on the "Manage Plugins" page itself a  
> plugin can open up a "mini form" below its row that let's users set  
> one or two settings.

Should have said "...can temporarily open...".  For example, a plugin  
might have a "Configure" Action link (e.g. "Configure | Deactivate |  
Edit").  Clicking on the link would cause a little form to appear with  
the plugin's one or two settings.

Do it with Ajax, or sans JS, the Plugins page reloads with the little  
form added (and a # link so you're taken straight to it).

Stephen
From scribu at gmail.com  Thu Jun 11 12:53:36 2009
From: scribu at gmail.com (scribu)
Date: Thu Jun 11 12:53:52 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <C03B3811-E55B-423B-8D59-699769995511@striderweb.com>
References: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com>
	<51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>
	<C03B3811-E55B-423B-8D59-699769995511@striderweb.com>
Message-ID: <349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com>

In WP 2.7 the possibility of adding additional fields to existing settings
pages was added.

Check the function add_settings_field()

http://xref.yoast.com/trunk/nav.html?_functions/add_settings_field.html

-- 
http://scribu.net
From scribu at gmail.com  Thu Jun 11 12:55:16 2009
From: scribu at gmail.com (scribu)
Date: Thu Jun 11 12:55:34 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com>
References: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com>
	<51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>
	<C03B3811-E55B-423B-8D59-699769995511@striderweb.com>
	<349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com>
Message-ID: <349fe48b0906110555v6c00b818r3b0a4bfba3d671b7@mail.gmail.com>

By the way, somebody should make a new Codex page about that family of
functions.


-- 
http://scribu.net
From scribu at gmail.com  Thu Jun 11 13:02:57 2009
From: scribu at gmail.com (scribu)
Date: Thu Jun 11 13:03:14 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A30EA07.2090205@ourcommoninterest.org>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
Message-ID: <349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>

Btw, I noticed you have to hardcode 'buddypress/bp-loader.php'.

It's a ((minor) problem because if either the buddypress folder is renamed
or bp-loader.php is replaced with something else, the dependant plugin will
break.

-- 
http://scribu.net
From wp-hackers at striderweb.com  Thu Jun 11 13:03:14 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Jun 11 13:04:03 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com>
References: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com>
	<51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>
	<C03B3811-E55B-423B-8D59-699769995511@striderweb.com>
	<349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com>
Message-ID: <D3BBBC2E-CB0A-4523-8348-9AE54E7B6D37@striderweb.com>

Oooooh, shiny.

That is most excellent -- I had no idea about this one. Thanks for the  
link. :)

Stephen


On Jun 11, 2009, at 7:53 AM, scribu wrote:

> In WP 2.7 the possibility of adding additional fields to existing  
> settings
> pages was added.
>
> Check the function add_settings_field()
>
> http://xref.yoast.com/trunk/nav.html?_functions/ 
> add_settings_field.html

From jer at simianuprising.com  Thu Jun 11 13:19:31 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Thu Jun 11 13:19:44 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <349fe48b0906110555v6c00b818r3b0a4bfba3d671b7@mail.gmail.com>
References: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com>
	<51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>
	<C03B3811-E55B-423B-8D59-699769995511@striderweb.com>
	<349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com>
	<349fe48b0906110555v6c00b818r3b0a4bfba3d671b7@mail.gmail.com>
Message-ID: <e1202cb10906110619g36435014v9722bd8d3c285777@mail.gmail.com>

On Thu, Jun 11, 2009 at 8:55 AM, scribu<scribu@gmail.com> wrote:
> By the way, somebody should make a new Codex page about that family of
> functions.

/drumroll

http://codex.wordpress.org/Settings_API

(it was already there, i <3 codex pages with 'api' in the title)


-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org
From simon at sweetinteraction.com  Thu Jun 11 13:25:18 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Thu Jun 11 13:25:55 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <e1202cb10906110619g36435014v9722bd8d3c285777@mail.gmail.com>
References: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com> 
	<51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>
	<C03B3811-E55B-423B-8D59-699769995511@striderweb.com> 
	<349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com> 
	<349fe48b0906110555v6c00b818r3b0a4bfba3d671b7@mail.gmail.com> 
	<e1202cb10906110619g36435014v9722bd8d3c285777@mail.gmail.com>
Message-ID: <77c8b7bf0906110625w6420ab31l36024a3ac2100d8d@mail.gmail.com>

On Thu, Jun 11, 2009 at 2:19 PM, Jeremy Clarke<jer@simianuprising.com> wrote:
>
> http://codex.wordpress.org/Settings_API
>
> (it was already there, i <3 codex pages with 'api' in the title)
>

Genius... if only I'd looked there first! Thanks all.

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT
From simon at sweetinteraction.com  Thu Jun 11 13:59:22 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Thu Jun 11 14:00:00 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com>
References: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com> 
	<51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>
	<C03B3811-E55B-423B-8D59-699769995511@striderweb.com> 
	<349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com>
Message-ID: <77c8b7bf0906110659y24994adcw9282b3649a960e26@mail.gmail.com>

On Thu, Jun 11, 2009 at 1:53 PM, scribu<scribu@gmail.com> wrote:
>
> Check the function add_settings_field()
>

Between this and the register_settings function (Andrew describes it
here: http://planetozh.com/blog/2009/05/handling-plugins-options-in-wordpress-28-with-register_setting/)
I am absolutely made up. SO much easier to add and deal with settings!

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT
From burt at ourcommoninterest.org  Thu Jun 11 15:03:42 2009
From: burt at ourcommoninterest.org (Burt Adsit)
Date: Thu Jun 11 15:04:04 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>	<4A30EA07.2090205@ourcommoninterest.org>	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
Message-ID: <4A311CCE.3060501@ourcommoninterest.org>

Well, ya but there's a catch 22 there. Without having bp loaded I can't 
check for the bp plugin dir const. The plugin has to tell me those 
things. If it's loaded I don't have to, if it isn't I can't. :)

scribu wrote:
> Btw, I noticed you have to hardcode 'buddypress/bp-loader.php'.
>
> It's a ((minor) problem because if either the buddypress folder is renamed
> or bp-loader.php is replaced with something else, the dependant plugin will
> break.
>
>   

-- 
Code Is Freedom
Burt Adsit

From scribu at gmail.com  Thu Jun 11 15:31:38 2009
From: scribu at gmail.com (scribu)
Date: Thu Jun 11 15:31:52 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <4A311CCE.3060501@ourcommoninterest.org>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A30EA07.2090205@ourcommoninterest.org>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
Message-ID: <349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>

Yeah, that's why I said you "have" to hardcode it. There simply isn't a
better way at the moment.

Perhaps using the plugin guid that was proposed on the list recently.

--
http://scribu.net
From dan at sproutventure.com  Thu Jun 11 16:42:48 2009
From: dan at sproutventure.com (Dan Cameron)
Date: Thu Jun 11 16:43:05 2009
Subject: [wp-hackers] row output on wp-admin/users.php
In-Reply-To: <349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A30EA07.2090205@ourcommoninterest.org>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
Message-ID: <A511540D-FD25-41D0-B182-7BBAB568BDC3@sproutventure.com>

Currently there's a filter for adding the column headers  
(manage_users_columns) but nothing (AFAIK) for the row output. Right  
now I'm modifying core to accomplish what we need.

Thanks in advance.



My diff for the 2.8 wp-core update is below (starts on 356 in WP 2.7):

Index: wp-admin/users.php
===================================================================
--- wp-admin/users.php	(revision 4)
+++ wp-admin/users.php	(working copy)
@@ -357,7 +357,7 @@
  	$role = array_shift($roles);

  	$style = ( ' class="alternate"' == $style ) ? '' : '  
class="alternate"';
-	echo "\n\t" . user_row($user_object, $style, $role);
+	echo "\n\t" . apply_filters( 'user_row', user_row($user_object,  
$style, $role), $userid );
  }
  ?>
  </tbody>






-- 


// Dan Cameron
SproutVenture // grow your business
http://sproutventure.com
From wp-hackers at striderweb.com  Thu Jun 11 16:43:12 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Jun 11 16:43:39 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A30EA07.2090205@ourcommoninterest.org>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
Message-ID: <F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>

Something you might try is make the plugin do nothing but hook a  
function to run at plugins_loaded.  Then in that function you check  
that the "master" plugin is running, and if it is, load the dependent  
stuff.

There are some limitation to this since "plugins_loaded" doesn't run  
immediately after plugins are loaded (a bug IMO).  for example, the  
"pluggable.php" file is loaded between plugins loading and the  
"plugins_loaded" hook firing.  Also I think some caching stuff happens  
in between.

Stephen

-- 
Stephen Rider
http://striderweb.com/


On Jun 11, 2009, at 10:31 AM, scribu wrote:

> Yeah, that's why I said you "have" to hardcode it. There simply  
> isn't a
> better way at the moment.
>
> Perhaps using the plugin guid that was proposed on the list recently.
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers






From dan at sproutventure.com  Thu Jun 11 17:21:49 2009
From: dan at sproutventure.com (Dan Cameron)
Date: Thu Jun 11 17:22:05 2009
Subject: [wp-hackers] row output on wp-admin/users.php
Message-ID: <F4123DB7-8E29-4FBE-B2D7-8B45D5289E38@sproutventure.com>

					[sorry, I'm resending this since I hijacked another thread-- 
regardless of subject line]


Currently there's a filter for adding the column headers  
(manage_users_columns) but nothing (AFAIK) for the row output. Right  
now I'm modifying core to accomplish what we need.

Thanks in advance.



My diff for the 2.8 wp-core update is below (starts on 356 in WP 2.7):

Index: wp-admin/users.php
===================================================================
--- wp-admin/users.php	(revision 4)
+++ wp-admin/users.php	(working copy)
@@ -357,7 +357,7 @@
  	$role = array_shift($roles);

  	$style = ( ' class="alternate"' == $style ) ? '' : '  
class="alternate"';
-	echo "\n\t" . user_row($user_object, $style, $role);
+	echo "\n\t" . apply_filters( 'user_row', user_row($user_object,  
$style, $role), $userid );
  }
  ?>
  </tbody>
From scribu at gmail.com  Thu Jun 11 17:51:05 2009
From: scribu at gmail.com (scribu)
Date: Thu Jun 11 17:51:19 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A30EA07.2090205@ourcommoninterest.org>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
Message-ID: <349fe48b0906111051j4a269ae4h1de5bdb7b0cc9e74@mail.gmail.com>

The main problem with that approach is that you can't use
register_activation_hook() and the like, which is a deal breaker for a lot
of plugins.

-- 
http://scribu.net
From dan at sproutventure.com  Thu Jun 11 18:17:23 2009
From: dan at sproutventure.com (Dan Cameron)
Date: Thu Jun 11 18:17:38 2009
Subject: [wp-hackers] 2.8, add_submenu_page and class functions
Message-ID: <B4FBEC08-3C8C-4EBD-8227-B852557B4A76@sproutventure.com>

Hey guys, it's been too long :)

I'm running into some issues when I want to use add_submenu_page with  
something like:
	array( $this, 'displayThisPage' ) )
for the function.

Strangely, the top menu works fine (since it's shared) but any  
subsequent sub_pages get an error[1].

For example,

add_menu_page( __( 'Options' ), __( 'Options' ), 'read', 'test',  
array( $this, 'displayBasePage' ) );
add_submenu_page( 'test', __( 'Test Description' ), __( 'Test  
Description' ), 'read', 'test', array( $this, 'displayBasePage' ) );
add_submenu_page( 'test', __( 'Sub Description' ), __( 'Sub  
Description' ), 'read', 'sub', array( $this, 'displaySubPage' ) );

If I wrap what's above inside an action of:



Cheers.



[1]
Warning: call_user_func_array() [function.call-user-func-array]: First  
argument is expected to be a valid callback, 'Array' was given in / 
FULL/PATH/wp-includes/plugin.php on line 339




-- 


// Dan Cameron
SproutVenture // grow your business
From gaarai at gaarai.com  Thu Jun 11 18:24:58 2009
From: gaarai at gaarai.com (Chris Jean)
Date: Thu Jun 11 18:25:17 2009
Subject: [wp-hackers] 2.8, add_submenu_page and class functions
In-Reply-To: <B4FBEC08-3C8C-4EBD-8227-B852557B4A76@sproutventure.com>
References: <B4FBEC08-3C8C-4EBD-8227-B852557B4A76@sproutventure.com>
Message-ID: <4A314BFA.2020908@gaarai.com>

I don't see any problems with the code itself. The problem could be due 
to another problem in the code elsewhere. Would you be able to send a 
failing version of the code my way for me to test?

FYI: I recommend that you use the form of "array( &$this, 'function' )" 
when passing an object's function. Passing $this by reference allows 
PHP4 to play nicely. Otherwise, you'll run into really odd issues on PHP4.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/
http://dnsyogi.com/



Dan Cameron wrote:
> Hey guys, it's been too long :)
>
> I'm running into some issues when I want to use add_submenu_page with 
> something like:
>     array( $this, 'displayThisPage' ) )
> for the function.
>
> Strangely, the top menu works fine (since it's shared) but any 
> subsequent sub_pages get an error[1].
>
> For example,
>
> add_menu_page( __( 'Options' ), __( 'Options' ), 'read', 'test', 
> array( $this, 'displayBasePage' ) );
> add_submenu_page( 'test', __( 'Test Description' ), __( 'Test 
> Description' ), 'read', 'test', array( $this, 'displayBasePage' ) );
> add_submenu_page( 'test', __( 'Sub Description' ), __( 'Sub 
> Description' ), 'read', 'sub', array( $this, 'displaySubPage' ) );
>
> If I wrap what's above inside an action of:
>
>
>
> Cheers.
>
>
>
> [1]
> Warning: call_user_func_array() [function.call-user-func-array]: First 
> argument is expected to be a valid callback, 'Array' was given in 
> /FULL/PATH/wp-includes/plugin.php on line 339
>
>
>
>
From wp-hackers at striderweb.com  Thu Jun 11 18:42:25 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Jun 11 18:42:39 2009
Subject: [wp-hackers] row output on wp-admin/users.php
In-Reply-To: <F4123DB7-8E29-4FBE-B2D7-8B45D5289E38@sproutventure.com>
References: <F4123DB7-8E29-4FBE-B2D7-8B45D5289E38@sproutventure.com>
Message-ID: <3CC2974E-7B0A-4C7C-8042-622698BB70F9@striderweb.com>

Are you in essence trying to add non-existent users to the Users page?

On Jun 11, 2009, at 12:21 PM, Dan Cameron wrote:

> Currently there's a filter for adding the column headers  
> (manage_users_columns) but nothing (AFAIK) for the row output. Right  
> now I'm modifying core to accomplish what we need.

From dan at sproutventure.com  Thu Jun 11 18:53:34 2009
From: dan at sproutventure.com (Dan Cameron)
Date: Thu Jun 11 18:53:51 2009
Subject: [wp-hackers] row output on wp-admin/users.php
In-Reply-To: <3CC2974E-7B0A-4C7C-8042-622698BB70F9@striderweb.com>
References: <F4123DB7-8E29-4FBE-B2D7-8B45D5289E38@sproutventure.com>
	<3CC2974E-7B0A-4C7C-8042-622698BB70F9@striderweb.com>
Message-ID: <22604F40-A26F-41F2-9486-BC3F0F7DAA20@sproutventure.com>


> Are you in essence trying to add non-existent users to the Users page?


No, I'm outputting additional user information. For example,  
membership status.
From wp-hackers at striderweb.com  Thu Jun 11 19:13:51 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Jun 11 19:14:24 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906111051j4a269ae4h1de5bdb7b0cc9e74@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A30EA07.2090205@ourcommoninterest.org>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
	<349fe48b0906111051j4a269ae4h1de5bdb7b0cc9e74@mail.gmail.com>
Message-ID: <7C650DEF-DFF7-4ED4-88DF-9A99C9F833DF@striderweb.com>

I've been pondering the concept of sub-plugins lately.  There was a  
discussion about such a few weeks back.  The idea is that plugins such  
as Spam Karma, which has plugins of its own, could be set up so that  
the Spam Karma plugins are just regular WP plugins that are  
"subsidiary" to Spam Karma.

Ideally, I think, in the Manage Plugins page, Spam Karma would have a  
little open/close control that would use Ajax to reveal/hide the sub- 
plugins.

This same idea would work for your "dependent" plugins.  It's the same  
idea, just different wording.

I may submit a patch enabling that ability.  I'm pretty sure I can do  
the actual sub-plugin checking, but the Ajaxy stuff for the Admin is  
outside my area....

Stephen


-- 
Stephen Rider
http://striderweb.com/




From scribu at gmail.com  Thu Jun 11 20:00:39 2009
From: scribu at gmail.com (scribu)
Date: Thu Jun 11 20:01:16 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <7C650DEF-DFF7-4ED4-88DF-9A99C9F833DF@striderweb.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A30EA07.2090205@ourcommoninterest.org>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
	<349fe48b0906111051j4a269ae4h1de5bdb7b0cc9e74@mail.gmail.com>
	<7C650DEF-DFF7-4ED4-88DF-9A99C9F833DF@striderweb.com>
Message-ID: <349fe48b0906111300i4e688609i422e53496fb59be7@mail.gmail.com>

>
> Ideally, I think, in the Manage Plugins page, Spam Karma would have a
> little open/close control that would use Ajax to reveal/hide the
> sub-plugins.


That would be nice. The plugins page needs a restyling anyway.


> This same idea would work for your "dependent" plugins.  It's the same
> idea, just different wording.


Yes, it's the same concept: plugins that depend on a base / toolkit /
framework plugin.

I may submit a patch enabling that ability.  I'm pretty sure I can do the
> actual sub-plugin checking, but the Ajaxy stuff for the Admin is outside my
> area....
>

Sure would be nice to have at least a starting patch.

A new field in the plugin header would be nice:

/*
Plugin Name: My Plugin
Depends On: Spam Karma, scbFramework
*/

WP would check if each plugin in the list is installed and active and takes
care of the loading order.

After we got that working we could start on the user experience.


--
http://scribu.net
From mikeschinkel at newclarity.net  Thu Jun 11 22:40:43 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jun 12 00:02:43 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <3920089.1431244759447984.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5AHeh209dd18fe1d419327b3f32,
	mikeschinkel@newclarity.net, 13797858.1451244759558888.J>

Is there any reason why WordPress doesn't/we couldn't (shouldn't?) keep an array of plugin directories keys by plugin name (from WordPress.org's URL slug) and then have a function to retrieve the directory by name/slug?  Non-hosted plugins could expose a name but not be guaranteed they are unique. This would provide the ability to have a function(s) like:

get_plugin_info($name)
get_plugin_dir($name)

I'm assuming WordPress has to scan the plugins directory at some point so why not save it for convenience of coding and to have a canonical method for determining info about a plugin?  

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "Burt Adsit" <burt@ourcommoninterest.org>
To: wp-hackers@lists.automattic.com
Sent: Thursday, June 11, 2009 11:03:42 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Plugin dependency checking

Well, ya but there's a catch 22 there. Without having bp loaded I can't 
check for the bp plugin dir const. The plugin has to tell me those 
things. If it's loaded I don't have to, if it isn't I can't. :)

scribu wrote:
> Btw, I noticed you have to hardcode 'buddypress/bp-loader.php'.
>
> It's a ((minor) problem because if either the buddypress folder is renamed
> or bp-loader.php is replaced with something else, the dependant plugin will
> break.
>
>   

-- 
Code Is Freedom
Burt Adsit

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From wp-hackers at striderweb.com  Thu Jun 11 21:57:56 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jun 12 00:05:27 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906111300i4e688609i422e53496fb59be7@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A30EA07.2090205@ourcommoninterest.org>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
	<349fe48b0906111051j4a269ae4h1de5bdb7b0cc9e74@mail.gmail.com>
	<7C650DEF-DFF7-4ED4-88DF-9A99C9F833DF@striderweb.com>
	<349fe48b0906111300i4e688609i422e53496fb59be7@mail.gmail.com>
Message-ID: <CC47E802-EFA3-4781-B476-37B2B40EACDD@striderweb.com>


On Jun 11, 2009, at 3:00 PM, scribu wrote:

> A new field in the plugin header would be nice:
>
> /*
> Plugin Name: My Plugin
> Depends On: Spam Karma, scbFramework
> */
>
> WP would check if each plugin in the list is installed and active  
> and takes
> care of the loading order.

Two possibilities:

1) You can make a sub plugin for a plugin that registers itself as  
"sub-able".  Then you could do a header like your example.

2) otherwise you do a header like this:

	Depends On: spam-karma/spam_karma_plugin.php

Both 1 and 2 should work.  WordPress strongly follows a pattern like  
#1, but #2 would allow for more flexibility I think.  I can certainly  
imagine making a plugin that depends on another, even if the author of  
that other plugin doesn't anticipate that....

**
ALSO: Scribu -- I will definitely have to keep in mind your example,  
and the possibility that a plugin might be dependent on ***more than  
one*** other plugin.  In that situation the strict "sub plugin"  
concept doesn't quite work.  I think what I could do is set up the  
"dependency' system, and on top of that would be a second layer  
implementing the "sub plugin" idea.  The dependency part is universal,  
while the sub-plugin part really only affects how it appears under the  
Manage Plugins page.

That is, a sub-plugin is a special kind of dependent plugin.

In terms of interface, sub-plugins would fall under the collapsable  
area under their Master plugin.  Simply dependent plugins would look  
like regular plugins on the list.

**
What happens when I activate a dependent plugin and the master plugin  
is not active?  Automatically activate the master also?  Or give a  
"you can't do that" message?

**
ONE LAST THING:  You would have to be able to specify a minimum  
*version* of the master plugin.  "Depends on Spam Karma v2.0".  Don't  
want to run a plugin that needs v2.0 of another one, when v1.3 of that  
other is installed.

Stephen

-- 
Stephen Rider
http://striderweb.com/
From mikeschinkel at newclarity.net  Fri Jun 12 00:03:32 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jun 12 00:08:47 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <14295156.1551244764874323.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5AJ3Xcf7b2e0659996ca73e87e3,
	mikeschinkel@newclarity.net, 10253795.1571244765001014.J>

"scribu" <scribu@gmail.com> wrote:
> A new field in the plugin header would be nice:
>
> /*
> Plugin Name: My Plugin
> Depends On: Spam Karma, scbFramework
> */
>

That would be super.  Question: what unique identifier would be used in the "Depends On:" header? 

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From scribu at gmail.com  Fri Jun 12 00:20:38 2009
From: scribu at gmail.com (scribu)
Date: Fri Jun 12 00:20:54 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <1874097956779168329@unknownmsgid>
References: <14295156.1551244764874323.JavaMail.DELL-1405$@Dell-1405>
	<1874097956779168329@unknownmsgid>
Message-ID: <349fe48b0906111720m1e6c3d91m33e5f3640aaced9e@mail.gmail.com>

>
> In terms of interface, sub-plugins would fall under the collapsable area
> under their Master plugin.  Simply dependent plugins would look like regular
> plugins on the list.
>

I think a better way to display dependency information is to have a prompt
that tells you which plugin depends on which. This prompt would only show up
when a user tries to activate or deactivate one or more plugins. This way,
we don't get three types of plugins.

You would have to be able to specify a minimum *version* of the master
> plugin.  "Depends on Spam Karma v2.0".  Don't want to run a plugin that
> needs v2.0 of another one, when v1.3 of that other is installed.
>

True.

That would be super.  Question: what unique identifier would be used in the
> "Depends On:" header?
>

Ideally, it would be the "Plugin Name" of the parent plugin. But given the
fact that versions would also be required, I think a function like
set_dependencies(__FILE__, array('Spam Karma' => 1.3, ...)) would be better.

-- 
http://scribu.net
From mikeschinkel at newclarity.net  Fri Jun 12 00:19:34 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jun 12 00:21:14 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <21059462.1611244765859172.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5AJJY00309bd3db1328de6c85db,
	mikeschinkel@newclarity.net, 21734701.1631244765974596.J>

Not sure I like either #1 or #2.  What about a #3?

Use the URL "slug" from WordPress.org extend for those hosted and allow those not hosted on WordPress.org to define their own slug via another header?

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "Stephen Rider" <wp-hackers@striderweb.com>
To: wp-hackers@lists.automattic.com
Sent: Thursday, June 11, 2009 5:57:56 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Plugin dependency checking


On Jun 11, 2009, at 3:00 PM, scribu wrote:

> A new field in the plugin header would be nice:
>
> /*
> Plugin Name: My Plugin
> Depends On: Spam Karma, scbFramework
> */
>
> WP would check if each plugin in the list is installed and active  
> and takes
> care of the loading order.

Two possibilities:

1) You can make a sub plugin for a plugin that registers itself as  
"sub-able".  Then you could do a header like your example.

2) otherwise you do a header like this:

	Depends On: spam-karma/spam_karma_plugin.php

Both 1 and 2 should work.  WordPress strongly follows a pattern like  
#1, but #2 would allow for more flexibility I think.  I can certainly  
imagine making a plugin that depends on another, even if the author of  
that other plugin doesn't anticipate that....

**
ALSO: Scribu -- I will definitely have to keep in mind your example,  
and the possibility that a plugin might be dependent on ***more than  
one*** other plugin.  In that situation the strict "sub plugin"  
concept doesn't quite work.  I think what I could do is set up the  
"dependency' system, and on top of that would be a second layer  
implementing the "sub plugin" idea.  The dependency part is universal,  
while the sub-plugin part really only affects how it appears under the  
Manage Plugins page.

That is, a sub-plugin is a special kind of dependent plugin.

In terms of interface, sub-plugins would fall under the collapsable  
area under their Master plugin.  Simply dependent plugins would look  
like regular plugins on the list.

**
What happens when I activate a dependent plugin and the master plugin  
is not active?  Automatically activate the master also?  Or give a  
"you can't do that" message?

**
ONE LAST THING:  You would have to be able to specify a minimum  
*version* of the master plugin.  "Depends on Spam Karma v2.0".  Don't  
want to run a plugin that needs v2.0 of another one, when v1.3 of that  
other is installed.

Stephen

-- 
Stephen Rider
http://striderweb.com/
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Fri Jun 12 00:29:18 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jun 12 00:29:41 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <30843981.1651244766373496.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5AJYI3c9cab98cc08f0a15f45af,
	mikeschinkel@newclarity.net, 8902659.1671244766549731.J>

"scribu" <scribu@gmail.com> wrote:
> > That would be super.  Question: what unique identifier would be used in the
> > "Depends On:" header?
> 
> Ideally, it would be the "Plugin Name" of the parent plugin. But given the
> fact that versions would also be required, I think a function like
> set_dependencies(__FILE__, array('Spam Karma' => 1.3, ...)) would be better.

Hmm. I think maybe I was assuming something you were not and that if a plugin depends on another and the plugin on which the other plugin depends would automatically be downloaded and activated (with appropriate admin confirmation, of course.) For that it seems to me you'd need something a bit more exact than Plugin Name, i.e. something that is both guaranteed(?) unique and also something that can generate an appropriate and singular dereference point.

Am I correct that you guys were not thinking about automatic download but instead just error checking to ensure that the depended plugin is currently installed.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From dan at sproutventure.com  Thu Jun 11 21:07:45 2009
From: dan at sproutventure.com (Dan Cameron)
Date: Fri Jun 12 00:35:51 2009
Subject: [wp-hackers] 2.8, add_submenu_page and class functions
In-Reply-To: <4A314BFA.2020908@gaarai.com>
References: <B4FBEC08-3C8C-4EBD-8227-B852557B4A76@sproutventure.com>
	<4A314BFA.2020908@gaarai.com>
Message-ID: <04D586F3-DC6D-4EBB-A521-9DFFD28E3799@sproutventure.com>

> The problem could be due to another problem in the code elsewhere.

Figures, something very small made the me think it was something it  
clearly wasn't. Turns out I had:

add_action ( '_admin_menu'

Strange how the underscore worked fine in 2.7 but 2.8 bombed and made  
me think it was something mroe complicated than a simple mistake on my  
part.

Thanks.


From glenn at glennansley.com  Thu Jun 11 21:26:10 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Fri Jun 12 00:37:33 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906111300i4e688609i422e53496fb59be7@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com> 
	<4A30EA07.2090205@ourcommoninterest.org>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com> 
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com> 
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com> 
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
	<349fe48b0906111051j4a269ae4h1de5bdb7b0cc9e74@mail.gmail.com> 
	<7C650DEF-DFF7-4ED4-88DF-9A99C9F833DF@striderweb.com>
	<349fe48b0906111300i4e688609i422e53496fb59be7@mail.gmail.com>
Message-ID: <3283f0830906111426n73982dabx868133ed55b4d035@mail.gmail.com>

Hey all,
I've been toying with this idea while on the phone with a client this
afternoon and I have a proof of concept I'd like to have you look at.
Please let me know what you think. Example at:
http://fullthrottledevelopment.com/creating-dependent-wordpress-plugins

SneakPeak:
   1. Copy the code at the top of hello_dolly.txt and paste it into
the top of your Hello Dolly plugin
   2. Try to activate Hello Dolly without Akismet activated.
   3. Activate Akismet and try to activate Hello Dolly
   4. Deactivate Akismet and confirm that Hello Dolly has been deactivated

Glenn Ansley
http://fullthrottledevelopment.com
http://twitter.com/full_throttle
http://twitter.com/glennansley

On Thu, Jun 11, 2009 at 4:00 PM, scribu<scribu@gmail.com> wrote:
>>
>> Ideally, I think, in the Manage Plugins page, Spam Karma would have a
>> little open/close control that would use Ajax to reveal/hide the
>> sub-plugins.
>
>
> That would be nice. The plugins page needs a restyling anyway.
>
>
>> This same idea would work for your "dependent" plugins. ?It's the same
>> idea, just different wording.
>
>
> Yes, it's the same concept: plugins that depend on a base / toolkit /
> framework plugin.
>
> I may submit a patch enabling that ability. ?I'm pretty sure I can do the
>> actual sub-plugin checking, but the Ajaxy stuff for the Admin is outside my
>> area....
>>
>
> Sure would be nice to have at least a starting patch.
>
> A new field in the plugin header would be nice:
>
> /*
> Plugin Name: My Plugin
> Depends On: Spam Karma, scbFramework
> */
>
> WP would check if each plugin in the list is installed and active and takes
> care of the loading order.
>
> After we got that working we could start on the user experience.
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From scribu at gmail.com  Fri Jun 12 00:37:25 2009
From: scribu at gmail.com (scribu)
Date: Fri Jun 12 00:37:44 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <3158784646058653212@unknownmsgid>
References: <30843981.1651244766373496.JavaMail.DELL-1405$@Dell-1405>
	<3158784646058653212@unknownmsgid>
Message-ID: <349fe48b0906111737i2c78e414y3800948128653a07@mail.gmail.com>

>
> Am I correct that you guys were not thinking about automatic download but
> instead just error checking to ensure that the depended plugin is currently
> installed.
>

Yes, I was thinking about auto-installing, but I wasn't thinking about
plugins not hosted on WP Extend.

A solution might be something like this:

$dependencies = array(
  'Akismet' => array('version' => '1.0'),
  'Other plugin not on extend' => array('version' => '1.0', 'url' =>
'http://...')
);

For plugins not hosted on Extend, the child plugin would have to specify a
URL.


-- 
http://scribu.net
From mikeschinkel at newclarity.net  Fri Jun 12 00:48:27 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jun 12 00:48:54 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <33353901.1711244767380195.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5AJmR9f81fd4d35da136a27e9c4,
	mikeschinkel@newclarity.net, 17961502.1731244767683852.J>

"scribu" <scribu@gmail.com> wrote:
> Yes, I was thinking about auto-installing, but I wasn't thinking 
> about plugins not hosted on WP Extend.
> 
> A solution might be something like this:
> 
> $dependencies = array(
>  'Akismet' => array('version' => '1.0'),
>  'Other plugin not on extend' => array('version' => '1.0', 'url' =>
> 'http://...')
> );
> 
> For plugins not hosted on Extend, the child plugin would have to specify a
> URL.

Gotcha. 

Just something to consider; it feels fragile to me to use Name.

Let me propose to consider using something a little more exact than plugin name rather than something more exact. For example, consider "All in One SEO Pack" on http://wordpress.org/extend/plugins/all-in-one-seo-pack/  People could more easily mistake it as:

-- All in One SEO Pack
-- All-in-One SEO Pack
-- All-in-1 SEO Pack

And probably several others.  While it could still be easily mistyped, at least it could be dereferenced to validate if this was used instead:

-- all-in-one-seo-pack

Of course that made me look to see if there was a header for Extend URL (which I assumed there was but clearly isn't there.)  So I ask the community to consider:

-- Add a header "Extend URL" where plugin authors would set the Plugin URL on WordPress.org Extend
-- Allow EITHER the Plugin Name OR the URL Slug to be used for dependencies. 

That way those who want their code to be less fragile can make it so. 

Thanks for considering.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From scribu at gmail.com  Fri Jun 12 01:07:28 2009
From: scribu at gmail.com (scribu)
Date: Fri Jun 12 01:07:46 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <-7136277955290175901@unknownmsgid>
References: <33353901.1711244767380195.JavaMail.DELL-1405$@Dell-1405>
	<-7136277955290175901@unknownmsgid>
Message-ID: <349fe48b0906111807u4320499cjdab5cdd891803376@mail.gmail.com>

How about we just use the Extend slug for plugins hosted there and a full
url for the rest? The following examples would all be valid identifiers:

All-in-1 SEO Pack
all-in-1-seo-pack
http://wordpress.org/extend/plugins/all-in-1-seo-pack
http://example.com/some-other-plugin *

* The said URL would have to provide an API similar to that on Exend.

In other words, if you have a plugin called Master hosted on your site and
your site could provide automatic updates for that plugin, then Master could
also be used as a base plugin.


--
http://scribu.net
From shane at bugssite.org  Fri Jun 12 01:13:05 2009
From: shane at bugssite.org (Shane A. Froebel)
Date: Fri Jun 12 01:13:36 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906111807u4320499cjdab5cdd891803376@mail.gmail.com>
References: <33353901.1711244767380195.JavaMail.DELL-1405$@Dell-1405>
	<-7136277955290175901@unknownmsgid>
	<349fe48b0906111807u4320499cjdab5cdd891803376@mail.gmail.com>
Message-ID: <4A31ABA1.7080805@bugssite.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I rather that there be a API on the plugin itself so other plugins could
use it to see if it's there and working.... IMO.

Your Friend,
Shane

scribu wrote:
> How about we just use the Extend slug for plugins hosted there and a full
> url for the rest? The following examples would all be valid identifiers:
> 
> All-in-1 SEO Pack
> all-in-1-seo-pack
> http://wordpress.org/extend/plugins/all-in-1-seo-pack
> http://example.com/some-other-plugin *
> 
> * The said URL would have to provide an API similar to that on Exend.
> 
> In other words, if you have a plugin called Master hosted on your site and
> your site could provide automatic updates for that plugin, then Master could
> also be used as a base plugin.
> 
> 
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQIcBAEBAgAGBQJKMauhAAoJEChMcQvNqPqm/0oQALSkV1/CLijxNPSNSkdsB6ty
5/YbYTS/Zdpdp3ShC1erB/215E8AQkPDENFtjzuAsGTpD4IvuvUa7ZKuwdIl3En+
tiugAPRGmuMeM81yzhHEuFl9mz6QMNh7IyWNo/KkuuCVcZ1eNBZvFMNh8aUbCyT9
C0tUb088OttCqHWzIjnz9v43B1lNaWp1r/OCiFTafGA80BcB5S2D69LijOyjNjlr
3leFya+HBVg3Hkdka5MWRYlDsTL5pmR2EiCbWAmbKasgedG68ps5miqyz6s9KoiE
TC7BWbEMk5lEnL/m0pibZ828RkOj/+dzBnRuLt51vDaHwmYainEkQzLZH4CfPEyC
39rWKwaShTut/nlloOz8Koov5/+NUALeaunKEqRx4VavFl5LFUbFqMl3ZeOS7mA6
8x+bETeQeDloGGqabmX528U2iAsQ7PtDd4PCzZxBl1p5uvCyl4HC/9zQzRbOmclD
6QYR9ngCZk+7Zx30TrX6uolsEESK8sm1frArtC0FKRjeY9Lsy+wyN7HPs7ntlzPQ
Jcru1DZ1jozXYIeGpUGVkzx2B0Y0241W4celmXD9hWcITugppyg8xIm99fgVnd5M
3CzzCjaLz8PdFcSRNTm446FxB/uva+ONPs5foe7Y/UDG+xFGa87OnzDANv8f/um6
sFECcE7lNQ73K8JGa/8i
=QXDz
-----END PGP SIGNATURE-----
From scribu at gmail.com  Fri Jun 12 01:19:20 2009
From: scribu at gmail.com (scribu)
Date: Fri Jun 12 01:19:35 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <4A31ABA1.7080805@bugssite.org>
References: <33353901.1711244767380195.JavaMail.DELL-1405$@Dell-1405>
	<-7136277955290175901@unknownmsgid>
	<349fe48b0906111807u4320499cjdab5cdd891803376@mail.gmail.com>
	<4A31ABA1.7080805@bugssite.org>
Message-ID: <349fe48b0906111819q701a1901n26cde1c178246b56@mail.gmail.com>

On Fri, Jun 12, 2009 at 4:13 AM, Shane A. Froebel <shane@bugssite.org>wrote:

> I rather that there be a API on the plugin itself so other plugins could
> use it to see if it's there and working.... IMO.
>

You don't need an API for that. Just do a
function_exists('function_defined_in_plugin') or a class_exists().

Like I've said previously, the issue is providing a good user experience in
the case that the dependant plugin is not installed + activated + loaded.

-- 
http://scribu.net
From mikeschinkel at newclarity.net  Fri Jun 12 02:01:34 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jun 12 02:02:23 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906111807u4320499cjdab5cdd891803376@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl5AL1Y237ba7e6f24415aac0e574,
	mikeschinkel@newclarity.net, 17629856.1751244772091336.J>

"scribu" <scribu@gmail.com> write:
> How about we just use the Extend slug for plugins hosted there 
> and a full url for the rest? The following examples would all be
> valid identifiers:

> All-in-1 SEO Pack
> all-in-1-seo-pack
> http://wordpress.org/extend/plugins/all-in-1-seo-pack
> http://example.com/some-other-plugin *

Interesting. Looks good to me.

> * The said URL would have to provide an API similar to that on Exend.
> In other words, if you have a plugin called Master hosted on your 
> site and your site could provide automatic updates for that plugin, 
> then Master could also be used as a base plugin.

Sounds good. I do think we might be looking for trouble asking sites to implement a hosted API similar to extend, that is unless we provide a reference implementation, or better yet provide it as part of the WordPress distribution or a well-known plugin.

FWIW.

-Mike
From wp-hackers at striderweb.com  Fri Jun 12 02:37:53 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jun 12 02:38:40 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <EMEWEMEW2_DELIMl5AJmR9f81fd4d35da136a27e9c4,
	mikeschinkel@newclarity.net, 17961502.1731244767683852.J>
References: <EMEWEMEW2_DELIMl5AJmR9f81fd4d35da136a27e9c4,
	mikeschinkel@newclarity.net, 17961502.1731244767683852.J>
Message-ID: <231A09A7-A7CD-49FE-A7F7-15B61E2DDC47@striderweb.com>

Hi --

Okay, back up a moment.

First... for the moment, FORGET about auto download/install of master  
plugins.  One Thing At A Time or we won't get it committed.  Let's  
figure out dependencies and sub-plugins, and get that rolling.  Then  
later we can improve it with further automation, etc.

Second -- I'd like to reiterate the idea I said previously.  Two ways  
to set a "master" plugin:

1) via good old plugin_basename.  "myplugin/myplugin.php" is well  
established in WP, and **by definition** unique.

2) A plugin can register itself as "pluggable" via a function. In the  
process it establishes its own "master" tag for use by dependents.  E.g.

	register_master_plugin( __FILE__, 'myplugin' );

Again, very common in WordPress -- plugins frequently pick a "keyword"  
to represent themselves, whether it's an option name or a registered  
JS dependency.  Theoretically there could be duplication, but that  
hasn't been a problem with the other places such keys are used, so  
probably won't be here.

> I think a better way to display dependency information is to have a  
> prompt
> that tells you which plugin depends on which. This prompt would only  
> show up
> when a user tries to activate or deactivate one or more plugins.  
> This way,
> we don't get three types of plugins.

There aren't really three, just two.  Regular and Dependent.  **Any**  
plugin can be a "Master" plugin -- all it takes is the existence of  
some other plugin that requires it.  I could create a plugin right now  
that depends on a function from Akismet, for example.  Thus, "Master"  
isn't really a special type-- it's just a relative term when speaking  
of Dependent plugins.

Under the "Dependent" banner, there are two subtypes: "dependent" and  
"sub" plugins.  The only *real* difference here is how they appear in  
the Manage Plugins screen.  Dependent plugins look just like any other  
plugin.  Sub-plugins appear indented underneath their Master plugin  
(with Ajax reveal/hide control).  Thus if a sub-plugin is dependent on  
more than one other plugins, it may choose ONE other plugin to be its  
Master.

The reason the sub-plugins are important is that some Master plugins  
may have a large number of sub-plugins.  For example, Spam Karma,  
right now out of the box comes with TEN Spam Karma plugins. For  
purposes of upgrades and such, it would be best if these could each be  
actual WordPress plugins, but we *don't* want to add ten rows in the  
Manage Plugins screen!  Thus the desired ability to specify them as  
Sub-Plugins that can be hidden away in their own little nook under  
Spam Karma itself.

[FYI -- I'm involved with the development of SK, and this very topic  
has been discussed there.  That's why I keep using it as an  
example ;-) ]

Food for thought/ Questions to answser:

1) We must check required versions of Master plugins (previously  
mentioned)

2) If a user tries to activate a Dependent plugin and the master is  
missing or inactive, we need some way to tell the user "You also need  
Plugin X".  That is, the plugin name -- not just the "id tag"  
discussed earlier.  Maybe sub plugins can define their own custom  
error message for this?

3) If Master plugin is deactivated or goes missing, sub should be  
deactivated as well.  (Not too difficult actually to code it so that  
if Master is missing or inactive, Sub just doesn't load -- even if  
"activated".)

4) We somehow need to continuously keep track of versions.  What  
happens if one or the other is upgraded?  How about DOWNgraded?  Also,  
we can NOT depend on auto-install routines, nor activate/deactivate  
hooks.  Plugins are often upgraded via FTP, and are often up/ 
downgraded without being deactivated.

Stephen

-- 
Stephen Rider
http://striderweb.com/

From mikeschinkel at newclarity.net  Fri Jun 12 02:49:03 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jun 12 02:50:21 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <18639324.1851244774787049.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5ALn3a3604c3a8e5773083fa73c,
	mikeschinkel@newclarity.net, 14511225.1871244774941027.J>

> First... for the moment, FORGET about auto download/install of 
> master plugins.  One Thing At A Time or we won't get it committed.

Just for clarity, that's almost trivial by leveraging code already in the core. I'm doing that in a plugin that I keep planning to find time to document so I can upload to Extend; it's not a complex plugin.  Yes you could do in steps but it's really not much more scope. FWIW.

Your logic for all the rest seems good to me, and I'll demur to others for answers to your 4 questions. 

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins



----- Original Message -----
From: "Stephen Rider" <wp-hackers@striderweb.com>
To: wp-hackers@lists.automattic.com
Sent: Thursday, June 11, 2009 10:37:53 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Plugin dependency checking

Hi --

Okay, back up a moment.

First... for the moment, FORGET about auto download/install of master  
plugins.  One Thing At A Time or we won't get it committed.  Let's  
figure out dependencies and sub-plugins, and get that rolling.  Then  
later we can improve it with further automation, etc.

Second -- I'd like to reiterate the idea I said previously.  Two ways  
to set a "master" plugin:

1) via good old plugin_basename.  "myplugin/myplugin.php" is well  
established in WP, and **by definition** unique.

2) A plugin can register itself as "pluggable" via a function. In the  
process it establishes its own "master" tag for use by dependents.  E.g.

	register_master_plugin( __FILE__, 'myplugin' );

Again, very common in WordPress -- plugins frequently pick a "keyword"  
to represent themselves, whether it's an option name or a registered  
JS dependency.  Theoretically there could be duplication, but that  
hasn't been a problem with the other places such keys are used, so  
probably won't be here.

> I think a better way to display dependency information is to have a  
> prompt
> that tells you which plugin depends on which. This prompt would only  
> show up
> when a user tries to activate or deactivate one or more plugins.  
> This way,
> we don't get three types of plugins.

There aren't really three, just two.  Regular and Dependent.  **Any**  
plugin can be a "Master" plugin -- all it takes is the existence of  
some other plugin that requires it.  I could create a plugin right now  
that depends on a function from Akismet, for example.  Thus, "Master"  
isn't really a special type-- it's just a relative term when speaking  
of Dependent plugins.

Under the "Dependent" banner, there are two subtypes: "dependent" and  
"sub" plugins.  The only *real* difference here is how they appear in  
the Manage Plugins screen.  Dependent plugins look just like any other  
plugin.  Sub-plugins appear indented underneath their Master plugin  
(with Ajax reveal/hide control).  Thus if a sub-plugin is dependent on  
more than one other plugins, it may choose ONE other plugin to be its  
Master.

The reason the sub-plugins are important is that some Master plugins  
may have a large number of sub-plugins.  For example, Spam Karma,  
right now out of the box comes with TEN Spam Karma plugins. For  
purposes of upgrades and such, it would be best if these could each be  
actual WordPress plugins, but we *don't* want to add ten rows in the  
Manage Plugins screen!  Thus the desired ability to specify them as  
Sub-Plugins that can be hidden away in their own little nook under  
Spam Karma itself.

[FYI -- I'm involved with the development of SK, and this very topic  
has been discussed there.  That's why I keep using it as an  
example ;-) ]

Food for thought/ Questions to answser:

1) We must check required versions of Master plugins (previously  
mentioned)

2) If a user tries to activate a Dependent plugin and the master is  
missing or inactive, we need some way to tell the user "You also need  
Plugin X".  That is, the plugin name -- not just the "id tag"  
discussed earlier.  Maybe sub plugins can define their own custom  
error message for this?

3) If Master plugin is deactivated or goes missing, sub should be  
deactivated as well.  (Not too difficult actually to code it so that  
if Master is missing or inactive, Sub just doesn't load -- even if  
"activated".)

4) We somehow need to continuously keep track of versions.  What  
happens if one or the other is upgraded?  How about DOWNgraded?  Also,  
we can NOT depend on auto-install routines, nor activate/deactivate  
hooks.  Plugins are often upgraded via FTP, and are often up/ 
downgraded without being deactivated.

Stephen

-- 
Stephen Rider
http://striderweb.com/

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From burt at ourcommoninterest.org  Fri Jun 12 02:56:43 2009
From: burt at ourcommoninterest.org (Burt Adsit)
Date: Fri Jun 12 02:57:31 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <EMEWEMEW2_DELIMl5ALn3a3604c3a8e5773083fa73c,
	mikeschinkel@newclarity.net, 14511225.1871244774941027.J>
References: <EMEWEMEW2_DELIMl5ALn3a3604c3a8e5773083fa73c,
	mikeschinkel@newclarity.net, 14511225.1871244774941027.J>
Message-ID: <4A31C3EB.1080404@ourcommoninterest.org>

Just to throw some more into the mix. What happens now when a base 
plugin is auto updated? It seems to change the sequence of the base 
plugin in the active plugins list. Thus crashing all dependent plugins. 
Happened about an hour ago.

-- 
Code Is Freedom
Burt Adsit

From pt at ptahd.com  Fri Jun 12 03:03:53 2009
From: pt at ptahd.com (Ptah Dunbar)
Date: Fri Jun 12 03:05:27 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <77c8b7bf0906110659y24994adcw9282b3649a960e26@mail.gmail.com>
References: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com> 
	<51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>
	<C03B3811-E55B-423B-8D59-699769995511@striderweb.com> 
	<349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com> 
	<77c8b7bf0906110659y24994adcw9282b3649a960e26@mail.gmail.com>
Message-ID: <99fa93700906112003v5313b37bqf00e86842c15585f@mail.gmail.com>

If i'm creating an option using the register_setting API, is there a
mechanism for giving it an initial value or should I just keep using
add_option();?

Ptah Dunbar ? pt@ptahd.com
http://ptahdunbar.com


On Thu, Jun 11, 2009 at 9:59 AM, Simon Wheatley
<simon@sweetinteraction.com>wrote:

> On Thu, Jun 11, 2009 at 1:53 PM, scribu<scribu@gmail.com> wrote:
> >
> > Check the function add_settings_field()
> >
>
> Between this and the register_settings function (Andrew describes it
> here:
> http://planetozh.com/blog/2009/05/handling-plugins-options-in-wordpress-28-with-register_setting/
> )
> I am absolutely made up. SO much easier to add and deal with settings!
>
> S
>
>
> ---
> Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> Registered office: 7 Malton Av, Manchester, M21 8AT
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wp-hackers at striderweb.com  Fri Jun 12 04:06:32 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jun 12 04:07:06 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <4A31C3EB.1080404@ourcommoninterest.org>
References: <EMEWEMEW2_DELIMl5ALn3a3604c3a8e5773083fa73c,
	mikeschinkel@newclarity.net,
	14511225.1871244774941027.J> <4A31C3EB.1080404@ourcommoninterest.org>
Message-ID: <9988CD01-0C1F-420F-9A1A-E22451A8A898@striderweb.com>


On Jun 11, 2009, at 9:56 PM, Burt Adsit wrote:

> Just to throw some more into the mix. What happens now when a base  
> plugin is auto updated? It seems to change the sequence of the base  
> plugin in the active plugins list. Thus crashing all dependent  
> plugins. Happened about an hour ago.

Well... the thing we're talking about doesn't exist yet.  We're  
discussing hypothetical changes to Core WP.

What will happen (roughly speaking) is this:

All activated normal plugins will load.  Next, all activated dependent  
plugins will load, IF their respective required Master plugins are  
also active.

Plugins will go in rounds.  Theoretically a dependent plugin could  
also be a Master to a third plugin, which would activate in the  
*third* round....

Stephen

-- 
Stephen Rider
http://striderweb.com/


From scribu at gmail.com  Fri Jun 12 07:28:20 2009
From: scribu at gmail.com (scribu)
Date: Fri Jun 12 07:28:35 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <9988CD01-0C1F-420F-9A1A-E22451A8A898@striderweb.com>
References: <4A31C3EB.1080404@ourcommoninterest.org>
	<9988CD01-0C1F-420F-9A1A-E22451A8A898@striderweb.com>
Message-ID: <349fe48b0906120028s1efd4598tad990e9acc8d1bb5@mail.gmail.com>

>
> Thus if a sub-plugin is dependent on more than one other plugins, it may
> choose ONE other plugin to be its Master.


I don't think choosing ONE master plugin is useful. Instead, each plugin
should have a button that, when pressed, simply computes the list of other
plugins that depend on the plugin at hand. That button may be the
"Deactivate" link or a new one.

1) via good old plugin_basename.  "myplugin/myplugin.php" is well
> established in WP, and **by definition** unique.


The Extend slug is also unique.

2) A plugin can register itself as "pluggable" via a function. In the
> process it establishes its own "master" tag for use by dependents.  E.g.
>
>        register_master_plugin( __FILE__, 'myplugin' );
>

If we use either of these methods, there will be no way to retrieve the
normal plugin name that you mention here:

2) If a user tries to activate a Dependent plugin and the master is missing
> or inactive, we need some way to tell the user "You also need Plugin X".
>  That is, the plugin name -- not just the "id tag" discussed earlier.  Maybe
> sub plugins can define their own custom error message for this?
>

Error messages should be standard.

-- 
http://scribu.net
From malaiac at gmail.com  Fri Jun 12 08:23:35 2009
From: malaiac at gmail.com (Malaiac)
Date: Fri Jun 12 11:13:20 2009
Subject: [wp-hackers] Wordpress.com stats API
In-Reply-To: <56892240-C14D-4DAF-A1AA-48EE30975469@xentek.net>
References: <59e7f3130906050238o753af430k3b8fcdbf46d74a4e@mail.gmail.com> 
	<87e663fa0906050543n79fb625dga7fc8e2731b94dc0@mail.gmail.com> 
	<59e7f3130906100738y1e01edfnf2163fad5144d6da@mail.gmail.com> 
	<56892240-C14D-4DAF-A1AA-48EE30975469@xentek.net>
Message-ID: <59e7f3130906120123g39c88823g41abd158d183a6fd@mail.gmail.com>

2009/6/10 Eric Marden <wp@xentek.net>:
>> I eventually find the way to the stats API, thanks Nikolay :)
>> Question : is there plugins available to leverage the API data ?
>> (if no, I'm going to code one)
>> Malaiac
> Tell us when you add it to the extend db :)
> - Eric Marden

Done :)
http://wordpress.org/extend/plugins/stats-reports/
stats_show_views() to display view count of current post
stats_most_viewed() / stats_most_clicked / stats_most_incoming /
stats_most_searched to display the obvious tops
Cache is 1-+ hours
From simon at sweetinteraction.com  Fri Jun 12 07:56:58 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Fri Jun 12 11:20:50 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <99fa93700906112003v5313b37bqf00e86842c15585f@mail.gmail.com>
References: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com> 
	<51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>
	<C03B3811-E55B-423B-8D59-699769995511@striderweb.com> 
	<349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com> 
	<77c8b7bf0906110659y24994adcw9282b3649a960e26@mail.gmail.com> 
	<99fa93700906112003v5313b37bqf00e86842c15585f@mail.gmail.com>
Message-ID: <77c8b7bf0906120056l1d2b3e60q9b55fe62419bcd21@mail.gmail.com>

n Fri, Jun 12, 2009 at 4:03 AM, Ptah Dunbar<pt@ptahd.com> wrote:
>
> If i'm creating an option using the register_setting API, is there a
> mechanism for giving it an initial value or should I just keep using
> add_option();?
>

I'd be interested in how others do this, I run something similar to
the following on plugin activation:

// Get the option (returns a default if it doesn't exist)
$value = get_option( $name, $some_default_value );
// Then set the option value in case it didn't exist
update_option( $name, $value );

Hope this helps.

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT
From wp-hackers at striderweb.com  Fri Jun 12 12:55:43 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Fri Jun 12 12:56:37 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906120028s1efd4598tad990e9acc8d1bb5@mail.gmail.com>
References: <4A31C3EB.1080404@ourcommoninterest.org>
	<9988CD01-0C1F-420F-9A1A-E22451A8A898@striderweb.com>
	<349fe48b0906120028s1efd4598tad990e9acc8d1bb5@mail.gmail.com>
Message-ID: <979BD76F-F0C3-450A-A69D-4287EFD3B38B@striderweb.com>

On Jun 11, 2009, at 9:49 PM, Mike Schinkel wrote:

>> First... for the moment, FORGET about auto download/install of
>> master plugins.  One Thing At A Time or we won't get it committed.
>
> Just for clarity, that's almost trivial by leveraging code already  
> in the core.

Heh.  Duly noted. :)

Download and auto-install is trivial.  Determining what needs to be  
downloaded/installed may not be. (More later RE version checking....)

On Jun 12, 2009, at 2:28 AM, scribu wrote:

>> Thus if a sub-plugin is dependent on more than one other plugins,  
>> it may
>> choose ONE other plugin to be its Master.
>
> I don't think choosing ONE master plugin is useful. Instead, each  
> plugin
> should have a button that, when pressed, simply computes the list of  
> other
> plugins that depend on the plugin at hand. That button may be the
> "Deactivate" link or a new one.

I'm referring specifically to sub-plugins.  (Again, "regular"  
dependent plugins don't look any different that regular plugins in  
Admin -- not indented, not under another plugin.  Only sub-plugins go  
specifically underneath another particular plugin.)  I think you're  
looking at it from the code perspective -- I'm looking from the user  
interface.  The same plugin appearing in more than one place will  
confuse the heck out of users.

A Spam Karma sub-plugin might also depend on some framework plugin,  
but logically goes under Spam Karma, not under the framework plugin.   
It doesn't need to go both places.  Thus, the Master of a sub-plugin  
is simply the plugin that it appears underneath in the Plugin admin.

Okay... one difference for dependents: taking a tip from Drupal, we  
should add a small line below the Description that says "Requires:  
Plugin X, Plugin Y".

>> 1) via good old plugin_basename.  "myplugin/myplugin.php" is well
>> established in WP, and **by definition** unique.
>
> The Extend slug is also unique.

True, but not all plugins have one.  Also, I'm trying to keep the code  
straightforward, and using Extend slug complicates things.  With  
plugin_basename we directly identify the plugin file.  Ditto a master  
plugin registering itself with __FILE__ (even better actually).   
Extend slug is unique, but doesn't give me a definition of what the  
plugin file itself is -- even in the best of situations the system  
will have to go look something up in a reference list of some sort.

Also... I explicitly do not want to make non-Extend plugins second- 
class citizens any more than they already are. (grmblemumble)

(I'm basically thinking in terms of how adding Admin pages works --  
authors can use either the basename or a slug that they pick.  I think  
it's a good system, and it's already familiar to plugin authors.)

Of course, if a plugin registers itself, it can use its Extend slug as  
the keyword. ;-)

> 2) A plugin can register itself as "pluggable" via a function. In the
>> process it establishes its own "master" tag for use by dependents.   
>> E.g.
>>
>>       register_master_plugin( __FILE__, 'myplugin' );
>
> If we use either of these methods, there will be no way to retrieve  
> the
> normal plugin name that you mention here:

It can with registration, we just need to rework the function a bit  
(second parameter or whatever).

As for plugin_basename....  We could do a one-time retrieval of its  
name using get_plugin_data.  Perhaps (I was trying to avoid this,  
but...) storing a list of active Master plugins in the DB.

Actually, we already have an array of all activated plugins.  Modify  
it to also store the plugin name? (?)  I need to think on this one.   
Hmmmm....

> 2) If a user tries to activate a Dependent plugin and the master is  
> missing
>> or inactive, we need some way to tell the user "You also need  
>> Plugin X".
>> That is, the plugin name -- not just the "id tag" discussed  
>> earlier.  Maybe
>> sub plugins can define their own custom error message for this?
>
> Error messages should be standard.

Yeah, you're right.  Still, if we solve the above, we solve this too. :)


Overall, I think the hardest part of all this (by far) will be  
tracking versions, since we basically need to make that comparison on  
*every single run*.  I'm pretty sure we don't want to run  
get_plugin_data() for every plugin on every run of WordPress, but I'm  
not sure how else to do it....  This is definitely a puzzle.  The fact  
that plugins can change without firing activate/deactivate hooks (or  
"upgrade" hooks, or whatever) complicates this in a way that WordPress  
has never had to even *think* about unless you're on the Manage  
Plugins page.

Stephen

P.S. -- no rush to respond for my sake -- I won't see any of this for  
the rest of the day.

-- 
Stephen Rider
http://striderweb.com/

From if.website at gmail.com  Fri Jun 12 15:12:27 2009
From: if.website at gmail.com (Austin Matzko)
Date: Fri Jun 12 15:12:38 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A30EA07.2090205@ourcommoninterest.org>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
Message-ID: <674b4a3b0906120812l18989243h2bc2906f0e7520b9@mail.gmail.com>

On Thu, Jun 11, 2009 at 11:43 AM, Stephen
Rider<wp-hackers@striderweb.com> wrote:
> Something you might try is make the plugin do nothing but hook a function to
> run at plugins_loaded. ?Then in that function you check that the "master"
> plugin is running, and if it is, load the dependent stuff.

Instead of using "plugins_loaded" (or some new action hook or
function), why not attach a callback to a custom action hook of the
parent?

So for example if "My Child Plugin" is dependent on "My Parent
Plugin," then fire the "my_parent_plugin_initialized" action when
"Parent Plugin" has loaded.  Then "My Child Plugin" can attach its
initialization method to the "my_parent_plugin_initialized" hook.  If
the parent has initialized, it does too; otherwise, it doesn't.

Such a custom action hook would let you toggle "My Child Plugin"
object properties, so that you could print error messages in the case
that someone activates "My Child Plugin" without a "My Parent Plugin,"
or when "My Parent Plugin" is out-of-date, etc.

No new core functionality necessary.
From scribu at gmail.com  Fri Jun 12 15:12:41 2009
From: scribu at gmail.com (scribu)
Date: Fri Jun 12 15:12:56 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <979BD76F-F0C3-450A-A69D-4287EFD3B38B@striderweb.com>
References: <4A31C3EB.1080404@ourcommoninterest.org>
	<9988CD01-0C1F-420F-9A1A-E22451A8A898@striderweb.com>
	<349fe48b0906120028s1efd4598tad990e9acc8d1bb5@mail.gmail.com>
	<979BD76F-F0C3-450A-A69D-4287EFD3B38B@striderweb.com>
Message-ID: <349fe48b0906120812u45b1506fy6abe13200bec5026@mail.gmail.com>

Regarding the identifier:

I think it's best to use the plugin basename (i.e: 'bb-press/bb-loader.php')
because:
- it doesn't require any work on the master plugin side
- doesn't require loading the master plugin first

Considering "sub-plugins" and providing a nice plugin name, I think this is
what a call to register_dependecy() would look like:

// my_dependent_plugin.php:

register_dependency(__FILE__, array(
  'bb-press/bb-loader.php' => array('name' => 'BuddyPress', 'min-ver' =>
'1.0', 'master' => 'true'),
  'plugin-framework.php' => array('name' => 'WP Plugin Framework', 'min-ver'
=> '2.1')
);


As for plugin versions, I think we should store them in the active plugin
list. Then when we check dependencies, we would have them handy.

-- 
http://scribu.net
From scribu at gmail.com  Fri Jun 12 15:16:51 2009
From: scribu at gmail.com (scribu)
Date: Fri Jun 12 15:17:06 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <674b4a3b0906120812l18989243h2bc2906f0e7520b9@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A30EA07.2090205@ourcommoninterest.org>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
	<674b4a3b0906120812l18989243h2bc2906f0e7520b9@mail.gmail.com>
Message-ID: <349fe48b0906120816r5bcf1d5fuc49460cb8fc3fde9@mail.gmail.com>

On Fri, Jun 12, 2009 at 6:12 PM, Austin Matzko <if.website@gmail.com> wrote:

> Instead of using "plugins_loaded" (or some new action hook or
> function), why not attach a callback to a custom action hook of the
> parent?
>

That would be very nice, but what about register_activation_hook() and the
rest?

-- 
http://scribu.net
From ncrice at gmail.com  Fri Jun 12 15:33:09 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Fri Jun 12 15:34:01 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <99fa93700906112003v5313b37bqf00e86842c15585f@mail.gmail.com>
References: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com>
	<51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>
	<C03B3811-E55B-423B-8D59-699769995511@striderweb.com>
	<349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com>
	<77c8b7bf0906110659y24994adcw9282b3649a960e26@mail.gmail.com>
	<99fa93700906112003v5313b37bqf00e86842c15585f@mail.gmail.com>
Message-ID: <862d087f0906120833l9f0050aga270a9b86cc9d146@mail.gmail.com>

Ptah,
Using add_option is probably your best bet, as there is no theme activation
hook you'd be able to hook to (that I know of). And if you do it in such a
way that add_option is called only when the plugin/theme settings page is
loaded, you won't be adding any extra overhead to regular page loads.

Also, I'm not sure if you're serializing all your options into a single db
field, but if you are (and you should be) then you can do some magic with
wp_parse_args, or (like simon said) use the default parameter with
get_option to use defaults initially, until you can load the defaults into
the database.

Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Thu, Jun 11, 2009 at 11:03 PM, Ptah Dunbar <pt@ptahd.com> wrote:

> If i'm creating an option using the register_setting API, is there a
> mechanism for giving it an initial value or should I just keep using
> add_option();?
>
> Ptah Dunbar ? pt@ptahd.com
> http://ptahdunbar.com
>
>
> On Thu, Jun 11, 2009 at 9:59 AM, Simon Wheatley
> <simon@sweetinteraction.com>wrote:
>
> > On Thu, Jun 11, 2009 at 1:53 PM, scribu<scribu@gmail.com> wrote:
> > >
> > > Check the function add_settings_field()
> > >
> >
> > Between this and the register_settings function (Andrew describes it
> > here:
> >
> http://planetozh.com/blog/2009/05/handling-plugins-options-in-wordpress-28-with-register_setting/
> > )
> > I am absolutely made up. SO much easier to add and deal with settings!
> >
> > S
> >
> >
> > ---
> > Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> > Registered office: 7 Malton Av, Manchester, M21 8AT
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ncrice at gmail.com  Fri Jun 12 15:33:09 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Fri Jun 12 15:34:36 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <99fa93700906112003v5313b37bqf00e86842c15585f@mail.gmail.com>
References: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com>
	<51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>
	<C03B3811-E55B-423B-8D59-699769995511@striderweb.com>
	<349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com>
	<77c8b7bf0906110659y24994adcw9282b3649a960e26@mail.gmail.com>
	<99fa93700906112003v5313b37bqf00e86842c15585f@mail.gmail.com>
Message-ID: <862d087f0906120833l9f0050aga270a9b86cc9d146@mail.gmail.com>

Ptah,
Using add_option is probably your best bet, as there is no theme activation
hook you'd be able to hook to (that I know of). And if you do it in such a
way that add_option is called only when the plugin/theme settings page is
loaded, you won't be adding any extra overhead to regular page loads.

Also, I'm not sure if you're serializing all your options into a single db
field, but if you are (and you should be) then you can do some magic with
wp_parse_args, or (like simon said) use the default parameter with
get_option to use defaults initially, until you can load the defaults into
the database.

Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Thu, Jun 11, 2009 at 11:03 PM, Ptah Dunbar <pt@ptahd.com> wrote:

> If i'm creating an option using the register_setting API, is there a
> mechanism for giving it an initial value or should I just keep using
> add_option();?
>
> Ptah Dunbar ? pt@ptahd.com
> http://ptahdunbar.com
>
>
> On Thu, Jun 11, 2009 at 9:59 AM, Simon Wheatley
> <simon@sweetinteraction.com>wrote:
>
> > On Thu, Jun 11, 2009 at 1:53 PM, scribu<scribu@gmail.com> wrote:
> > >
> > > Check the function add_settings_field()
> > >
> >
> > Between this and the register_settings function (Andrew describes it
> > here:
> >
> http://planetozh.com/blog/2009/05/handling-plugins-options-in-wordpress-28-with-register_setting/
> > )
> > I am absolutely made up. SO much easier to add and deal with settings!
> >
> > S
> >
> >
> > ---
> > Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> > Registered office: 7 Malton Av, Manchester, M21 8AT
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From if.website at gmail.com  Fri Jun 12 15:35:11 2009
From: if.website at gmail.com (Austin Matzko)
Date: Fri Jun 12 15:35:55 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906120816r5bcf1d5fuc49460cb8fc3fde9@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A30EA07.2090205@ourcommoninterest.org>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
	<674b4a3b0906120812l18989243h2bc2906f0e7520b9@mail.gmail.com>
	<349fe48b0906120816r5bcf1d5fuc49460cb8fc3fde9@mail.gmail.com>
Message-ID: <674b4a3b0906120835g41a3e390nac29c545acb1ae64@mail.gmail.com>

On Fri, Jun 12, 2009 at 10:16 AM, scribu<scribu@gmail.com> wrote:
> On Fri, Jun 12, 2009 at 6:12 PM, Austin Matzko <if.website@gmail.com> wrote:
>
>> Instead of using "plugins_loaded" (or some new action hook or
>> function), why not attach a callback to a custom action hook of the
>> parent?
>>
>
> That would be very nice, but what about register_activation_hook() and the
> rest?

Here's what you could do in the child plugin:

On the standard activation hook: Set the child plugin's object
property $is_being_activated to true.

On the "my_parent_plugin_initialized" hook: If $is_being_activated is
true, do the activation stuff.
From scribu at gmail.com  Fri Jun 12 16:07:58 2009
From: scribu at gmail.com (scribu)
Date: Fri Jun 12 16:08:12 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <674b4a3b0906120835g41a3e390nac29c545acb1ae64@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A30EA07.2090205@ourcommoninterest.org>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
	<674b4a3b0906120812l18989243h2bc2906f0e7520b9@mail.gmail.com>
	<349fe48b0906120816r5bcf1d5fuc49460cb8fc3fde9@mail.gmail.com>
	<674b4a3b0906120835g41a3e390nac29c545acb1ae64@mail.gmail.com>
Message-ID: <349fe48b0906120907j18f8ee00o9a8c50b12557baf1@mail.gmail.com>

Yes, that might work.

Another issue: what if the parent plugin is called Z and the child plugin is
called A? The child plugin hooks would never fire.

-- 
http://scribu.net
From mikeschinkel at newclarity.net  Fri Jun 12 16:34:35 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Fri Jun 12 16:37:06 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <7001926.2001244823966772.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5BBYa6ee39ebd0c433831024009,
	mikeschinkel@newclarity.net, 11422025.2061244824474214.J>

> "Stephen Rider" <wp-hackers@striderweb.com> wrote:
> Determining what needs to be downloaded/installed may not be. 
> (More later RE version checking....)

True...

> The same plugin appearing in more than one place will  
> confuse the heck out of users.

While I like your sub-plugin model, will it confuse users if two (2) different plugins use the same sub-plugin?  I know you are thinking of plugins specifically made for another plugin but someone could easily choose to implement the same interface so they could have ready-made add-ins for their own plugin.  

Just a point to ponder... 

> Okay... one difference for dependents: taking a tip from Drupal, 
> we should add a small line below the Description that says 
> "Requires: Plugin X, Plugin Y".

Yes.

>>> 1) via good old plugin_basename.  "myplugin/myplugin.php" is well
>>> established in WP, and **by definition** unique.
>> The Extend slug is also unique.
> True, but not all plugins have one.  Also, I'm trying to keep 
> the code straightforward, and using Extend slug complicates things.  
> With plugin_basename we directly identify the plugin file.  

Point of note, until just now I didn't realize they were unique (i.e. that it would be a problem if I renamed that file.) FWIW I wish they were not unique so I wouldn't be constrained on the file naming, but oh well.

> Of course, if a plugin registers itself, it can use its Extend slug 
> as the keyword. ;-)

That's better.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From if.website at gmail.com  Fri Jun 12 16:43:54 2009
From: if.website at gmail.com (Austin Matzko)
Date: Fri Jun 12 16:44:06 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906120907j18f8ee00o9a8c50b12557baf1@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
	<674b4a3b0906120812l18989243h2bc2906f0e7520b9@mail.gmail.com>
	<349fe48b0906120816r5bcf1d5fuc49460cb8fc3fde9@mail.gmail.com>
	<674b4a3b0906120835g41a3e390nac29c545acb1ae64@mail.gmail.com>
	<349fe48b0906120907j18f8ee00o9a8c50b12557baf1@mail.gmail.com>
Message-ID: <674b4a3b0906120943x77f59d02h99df65241a8a9e94@mail.gmail.com>

On Fri, Jun 12, 2009 at 11:07 AM, scribu<scribu@gmail.com> wrote:
> Another issue: what if the parent plugin is called Z and the child plugin is
> called A? The child plugin hooks would never fire.

By "called Z" and "called A", I'm guessing that you're asking what
would happen if the child plugin's file is included before the
parent's file?

In general, good WordPress plugin practice does not initialize the
plugin when its files are first included, and that would be
particularly true for a plugin that's consciously a "framework" or
"parent" plugin.  Any other behavior can't really expect core WP
support, anyways.

So as long as the parent plugin's initialization event hook doesn't
fire until all plugins are loaded, it's not an issue when particular
files are loaded.
From dan at sproutventure.com  Fri Jun 12 16:45:05 2009
From: dan at sproutventure.com (Dan Cameron)
Date: Fri Jun 12 16:45:19 2009
Subject: [wp-hackers] row output on wp-admin/users.php
In-Reply-To: <3CC2974E-7B0A-4C7C-8042-622698BB70F9@striderweb.com>
References: <F4123DB7-8E29-4FBE-B2D7-8B45D5289E38@sproutventure.com>
	<3CC2974E-7B0A-4C7C-8042-622698BB70F9@striderweb.com>
Message-ID: <68528DBC-5C7A-4E18-B3A9-242A34A49EB7@sproutventure.com>

To anyone interested. We found it.

manage_users_custom_column



On Jun 11, 2009, at 11:42 AM, Stephen Rider wrote:

> Are you in essence trying to add non-existent users to the Users page?
>
> On Jun 11, 2009, at 12:21 PM, Dan Cameron wrote:
>
>> Currently there's a filter for adding the column headers  
>> (manage_users_columns) but nothing (AFAIK) for the row output.  
>> Right now I'm modifying core to accomplish what we need.


From scribu at gmail.com  Fri Jun 12 16:49:36 2009
From: scribu at gmail.com (scribu)
Date: Fri Jun 12 16:49:58 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <674b4a3b0906120943x77f59d02h99df65241a8a9e94@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
	<674b4a3b0906120812l18989243h2bc2906f0e7520b9@mail.gmail.com>
	<349fe48b0906120816r5bcf1d5fuc49460cb8fc3fde9@mail.gmail.com>
	<674b4a3b0906120835g41a3e390nac29c545acb1ae64@mail.gmail.com>
	<349fe48b0906120907j18f8ee00o9a8c50b12557baf1@mail.gmail.com>
	<674b4a3b0906120943x77f59d02h99df65241a8a9e94@mail.gmail.com>
Message-ID: <349fe48b0906120949j752ea9c9rb719b11d51c219e@mail.gmail.com>

On Fri, Jun 12, 2009 at 7:43 PM, Austin Matzko <if.website@gmail.com> wrote:

> By "called Z" and "called A", I'm guessing that you're asking what
> would happen if the child plugin's file is included before the
> parent's file?
>
> In general, good WordPress plugin practice does not initialize the
> plugin when its files are first included, and that would be
> particularly true for a plugin that's consciously a "framework" or
> "parent" plugin.  Any other behavior can't really expect core WP
> support, anyways.
>
> So as long as the parent plugin's initialization event hook doesn't
> fire until all plugins are loaded, it's not an issue when particular
> files are loaded.


Ok, thanks for the pointers. I'll see if I can manage to pull off the
activation hook workaround without modifying the active_plugins list.

-- 
http://scribu.net
From dan at sproutventure.com  Fri Jun 12 17:26:03 2009
From: dan at sproutventure.com (Dan Cameron)
Date: Fri Jun 12 17:26:16 2009
Subject: [wp-hackers] row output on wp-admin/users.php
In-Reply-To: <68528DBC-5C7A-4E18-B3A9-242A34A49EB7@sproutventure.com>
References: <F4123DB7-8E29-4FBE-B2D7-8B45D5289E38@sproutventure.com>
	<3CC2974E-7B0A-4C7C-8042-622698BB70F9@striderweb.com>
	<68528DBC-5C7A-4E18-B3A9-242A34A49EB7@sproutventure.com>
Message-ID: <CB34EBF7-7B67-4B3B-B30D-98E6EC24C4CE@sproutventure.com>

> manage_users_custom_column

I should mention that function only works in WP 2.8, looks like  
someone ran into the same problem and fixed it in a more elegant  
solution.


From pt at ptahd.com  Fri Jun 12 17:45:05 2009
From: pt at ptahd.com (Ptah Dunbar)
Date: Fri Jun 12 17:45:39 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <862d087f0906120833l9f0050aga270a9b86cc9d146@mail.gmail.com>
References: <77c8b7bf0906110519r6e9a072dtc20b73e4a0975f55@mail.gmail.com> 
	<51733E4D-1396-4BFC-BA5E-129F7A0013A5@striderweb.com>
	<C03B3811-E55B-423B-8D59-699769995511@striderweb.com> 
	<349fe48b0906110553i591f7e0ex4f175be66a3f7108@mail.gmail.com> 
	<77c8b7bf0906110659y24994adcw9282b3649a960e26@mail.gmail.com> 
	<99fa93700906112003v5313b37bqf00e86842c15585f@mail.gmail.com> 
	<862d087f0906120833l9f0050aga270a9b86cc9d146@mail.gmail.com>
Message-ID: <99fa93700906121045v699919c2r1e2e0898d518f543@mail.gmail.com>

Thanks for the tips NR. I was already afraid of that after snooping around
the core a little bit more. And yes, everything's going into one fat array
(you wouldnt catch me dead adding options all over the place).

Although I'm still curious as to what add_option_whitelist() does... Haven't
played with it yet.

In the meantime, I've been cooking up a function to address the non-having
theme activation hook problem:
add_action( 'admin_init', 'framework_activation_hook' );
/**
 * Set the activation hook for the theme
 *
 * @internal not bulletproof, but it'll due until this patch gets applied:
 * @link http://core.trac.wordpress.org/ticket/7795
 *
 * @since 0.4
 */
function framework_activation_hook() {
 global $theme_data;
 $current_theme = get_option( 'current_theme' ); // variable stores the
current theme
 $target_theme = $theme_data['Title']; // variable stores the theme we want
to target
 if ( isset($_GET['activated']) && $current_theme == $target_theme ) {
do_action( 'theme_activation_hook' ); // Available action:
theme_activation_hook
 }
}

So when the user clicks to activate the theme, developers can hook
into theme_activation_hook and call an install function.
Of course this only works when the user activates the theme via the admin
panel, so it's not bulletproof yet. Plus if the page gets refreshed, the
hook gets called again. Lots of holes, but I'm still working on a better
implementation.

Ptah Dunbar ? pt@ptahd.com
http://ptahdunbar.com


On Fri, Jun 12, 2009 at 11:33 AM, Nathan Rice <ncrice@gmail.com> wrote:

> Ptah,
> Using add_option is probably your best bet, as there is no theme activation
> hook you'd be able to hook to (that I know of). And if you do it in such a
> way that add_option is called only when the plugin/theme settings page is
> loaded, you won't be adding any extra overhead to regular page loads.
>
> Also, I'm not sure if you're serializing all your options into a single db
> field, but if you are (and you should be) then you can do some magic with
> wp_parse_args, or (like simon said) use the default parameter with
> get_option to use defaults initially, until you can load the defaults into
> the database.
>
> Nathan
>
> My Website
> http://www.nathanrice.net/
>
> My Twitter
> http://twitter.com/nathanrice
>
>
> On Thu, Jun 11, 2009 at 11:03 PM, Ptah Dunbar <pt@ptahd.com> wrote:
>
> > If i'm creating an option using the register_setting API, is there a
> > mechanism for giving it an initial value or should I just keep using
> > add_option();?
> >
> > Ptah Dunbar ? pt@ptahd.com
> > http://ptahdunbar.com
> >
> >
> > On Thu, Jun 11, 2009 at 9:59 AM, Simon Wheatley
> > <simon@sweetinteraction.com>wrote:
> >
> > > On Thu, Jun 11, 2009 at 1:53 PM, scribu<scribu@gmail.com> wrote:
> > > >
> > > > Check the function add_settings_field()
> > > >
> > >
> > > Between this and the register_settings function (Andrew describes it
> > > here:
> > >
> >
> http://planetozh.com/blog/2009/05/handling-plugins-options-in-wordpress-28-with-register_setting/
> > > )
> > > I am absolutely made up. SO much easier to add and deal with settings!
> > >
> > > S
> > >
> > >
> > > ---
> > > Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> > > Registered office: 7 Malton Av, Manchester, M21 8AT
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wp-hackers at striderweb.com  Fri Jun 12 22:28:51 2009
From: wp-hackers at striderweb.com (wp-hackers@striderweb.com)
Date: Fri Jun 12 22:29:22 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <674b4a3b0906120943x77f59d02h99df65241a8a9e94@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<349fe48b0906110456q8d87270k282c65d4d241178@mail.gmail.com>
	<349fe48b0906110602u1c050a28n90d57648c890b1a2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
	<674b4a3b0906120812l18989243h2bc2906f0e7520b9@mail.gmail.com>
	<349fe48b0906120816r5bcf1d5fuc49460cb8fc3fde9@mail.gmail.com>
	<674b4a3b0906120835g41a3e390nac29c545acb1ae64@mail.gmail.com>
	<349fe48b0906120907j18f8ee00o9a8c50b12557baf1@mail.gmail.com>
	<674b4a3b0906120943x77f59d02h99df65241a8a9e94@mail.gmail.com>
Message-ID: <27944.207.135.184.38.1244845731.squirrel@striderweb.com>

> On Fri, Jun 12, 2009 at 11:07 AM, scribu<scribu@gmail.com> wrote:
>> Another issue: what if the parent plugin is called Z and the child
>> plugin is
>> called A? The child plugin hooks would never fire.
>
> By "called Z" and "called A", I'm guessing that you're asking what
> would happen if the child plugin's file is included before the
> parent's file?
>
> In general, good WordPress plugin practice does not initialize the
> plugin when its files are first included, and that would be
> particularly true for a plugin that's consciously a "framework" or
> "parent" plugin.  Any other behavior can't really expect core WP
> support, anyways.
>
> So as long as the parent plugin's initialization event hook doesn't
> fire until all plugins are loaded, it's not an issue when particular
> files are loaded.

There are some problems here, due to a bug in WordPress (At least I think
it's a bug -- I've yet to hear a good explanation).

The earliest hook you can use after plugins load is "plugins_loaded". 
Unfortunately, the plugins_loaded hook is NOT the first thing that happens
after plugins are loaded.  First pluggable.php is called, then some
caching stuff happens.

So if your plugin wants to replace any of the pluggable.php functions, it
MUST do so immediately -- it can't run later on a do_action.

A second comment though -- your sugegstion regarding "is_being_activated"
helped me out on something else I've been working on (Strider Core
framework).  Thanks!  ;)

Stephen

From if.website at gmail.com  Fri Jun 12 23:38:53 2009
From: if.website at gmail.com (Austin Matzko)
Date: Fri Jun 12 23:39:08 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <27944.207.135.184.38.1244845731.squirrel@striderweb.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<4A311CCE.3060501@ourcommoninterest.org>
	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
	<674b4a3b0906120812l18989243h2bc2906f0e7520b9@mail.gmail.com>
	<349fe48b0906120816r5bcf1d5fuc49460cb8fc3fde9@mail.gmail.com>
	<674b4a3b0906120835g41a3e390nac29c545acb1ae64@mail.gmail.com>
	<349fe48b0906120907j18f8ee00o9a8c50b12557baf1@mail.gmail.com>
	<674b4a3b0906120943x77f59d02h99df65241a8a9e94@mail.gmail.com>
	<27944.207.135.184.38.1244845731.squirrel@striderweb.com>
Message-ID: <674b4a3b0906121638p35628ed3s9b2dd6fd6d5e8147@mail.gmail.com>

On Fri, Jun 12, 2009 at 5:28 PM, <wp-hackers@striderweb.com> wrote:
> The earliest hook you can use after plugins load is "plugins_loaded".
> Unfortunately, the plugins_loaded hook is NOT the first thing that happens
> after plugins are loaded. ?First pluggable.php is called, then some
> caching stuff happens.
>
> So if your plugin wants to replace any of the pluggable.php functions, it
> MUST do so immediately -- it can't run later on a do_action.

I'm not sure why "plugins_loaded" is called at that point, but I think
that's a separate issue from having dependent plugins.  You can define
a pluggable function when the plugin is loaded, without having to
initialize the plugin itself.

If it's a matter of wanting the child plugins to be able to redefine
the pluggable function, you could let the parent plugin define the
pluggable function as a wrapper of a parent plugin's factory method,
which would then open up the possibility of child plugins re-defining
the behavior of the pluggable function.
From burt at ourcommoninterest.org  Sat Jun 13 00:29:13 2009
From: burt at ourcommoninterest.org (Burt Adsit)
Date: Sat Jun 13 00:29:30 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <674b4a3b0906121638p35628ed3s9b2dd6fd6d5e8147@mail.gmail.com>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>	<4A311CCE.3060501@ourcommoninterest.org>	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>	<674b4a3b0906120812l18989243h2bc2906f0e7520b9@mail.gmail.com>	<349fe48b0906120816r5bcf1d5fuc49460cb8fc3fde9@mail.gmail.com>	<674b4a3b0906120835g41a3e390nac29c545acb1ae64@mail.gmail.com>	<349fe48b0906120907j18f8ee00o9a8c50b12557baf1@mail.gmail.com>	<674b4a3b0906120943x77f59d02h99df65241a8a9e94@mail.gmail.com>	<27944.207.135.184.38.1244845731.squirrel@striderweb.com>
	<674b4a3b0906121638p35628ed3s9b2dd6fd6d5e8147@mail.gmail.com>
Message-ID: <4A32F2D9.5080006@ourcommoninterest.org>

Haha. (Sorry). I've been trying to keep up with this thread and have 
been doing fairly well up to this point. Austin, could you put this last 
bit a little less concisely?

Austin Matzko wrote:
> If it's a matter of wanting the child plugins to be able to redefine
> the pluggable function, you could let the parent plugin define the
> pluggable function as a wrapper of a parent plugin's factory method,
> which would then open up the possibility of child plugins re-defining
> the behavior of the pluggable function.
>   

-- 
Code Is Freedom
Burt Adsit

From if.website at gmail.com  Sat Jun 13 00:53:07 2009
From: if.website at gmail.com (Austin Matzko)
Date: Sat Jun 13 00:53:21 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <4A32F2D9.5080006@ourcommoninterest.org>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>
	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>
	<674b4a3b0906120812l18989243h2bc2906f0e7520b9@mail.gmail.com>
	<349fe48b0906120816r5bcf1d5fuc49460cb8fc3fde9@mail.gmail.com>
	<674b4a3b0906120835g41a3e390nac29c545acb1ae64@mail.gmail.com>
	<349fe48b0906120907j18f8ee00o9a8c50b12557baf1@mail.gmail.com>
	<674b4a3b0906120943x77f59d02h99df65241a8a9e94@mail.gmail.com>
	<27944.207.135.184.38.1244845731.squirrel@striderweb.com>
	<674b4a3b0906121638p35628ed3s9b2dd6fd6d5e8147@mail.gmail.com>
	<4A32F2D9.5080006@ourcommoninterest.org>
Message-ID: <674b4a3b0906121753g272d0964gda116f7f0f04b58e@mail.gmail.com>

On Fri, Jun 12, 2009 at 7:29 PM, Burt Adsit<burt@ourcommoninterest.org> wrote:
> Austin Matzko wrote:
>>
>> If it's a matter of wanting the child plugins to be able to redefine
>> the pluggable function, you could let the parent plugin define the
>> pluggable function as a wrapper of a parent plugin's factory method,
>> which would then open up the possibility of child plugins re-defining
>> the behavior of the pluggable function.
>
> Haha. (Sorry). I've been trying to keep up with this thread and have been
> doing fairly well up to this point. Austin, could you put this last bit a
> little less concisely?

Let's say you want either a parent plugin or one of its children to be
able to redefine the behavior of a pluggable function, such as
wp_authenticate().

Then in the parent plugin, you could have something like the following:

class ParentPluggableAuthenticate {
   function __construct($username, $password)
   {
      // some logic to determine which child plugin's method should be
used to replace wp_authenticate()'s functionality
      // call that child method
   }
}

function wp_authenticate($username, $password) {
   return new ParentPluggableAuthenticate($username, $password);
}

Or something like that.
From wp-hackers at striderweb.com  Sat Jun 13 05:05:24 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sat Jun 13 05:05:51 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <4A32F2D9.5080006@ourcommoninterest.org>
References: <349fe48b0906110357t129be1av40d0c5acd8ebe2e2@mail.gmail.com>	<4A311CCE.3060501@ourcommoninterest.org>	<349fe48b0906110831m2ccb788fvcc0a267c9471ce37@mail.gmail.com>	<F3A48C28-AA9A-419E-B136-3E329CC86CF3@striderweb.com>	<674b4a3b0906120812l18989243h2bc2906f0e7520b9@mail.gmail.com>	<349fe48b0906120816r5bcf1d5fuc49460cb8fc3fde9@mail.gmail.com>	<674b4a3b0906120835g41a3e390nac29c545acb1ae64@mail.gmail.com>	<349fe48b0906120907j18f8ee00o9a8c50b12557baf1@mail.gmail.com>	<674b4a3b0906120943x77f59d02h99df65241a8a9e94@mail.gmail.com>	<27944.207.135.184.38.1244845731.squirrel@striderweb.com>
	<674b4a3b0906121638p35628ed3s9b2dd6fd6d5e8147@mail.gmail.com>
	<4A32F2D9.5080006@ourcommoninterest.org>
Message-ID: <13D9C1F2-3F3E-4402-8CAC-71EB864BFBA5@striderweb.com>

LOL.  I followed it, but it *is* starting to sound a bit like an  
Abbott and Costello routine...
;-)

Stephen

On Jun 12, 2009, at 7:29 PM, Burt Adsit wrote:

> Haha. (Sorry). I've been trying to keep up with this thread and have  
> been doing fairly well up to this point. Austin, could you put this  
> last bit a little less concisely?
>
> Austin Matzko wrote:
>> If it's a matter of wanting the child plugins to be able to redefine
>> the pluggable function, you could let the parent plugin define the
>> pluggable function as a wrapper of a parent plugin's factory method,
>> which would then open up the possibility of child plugins re-defining
>> the behavior of the pluggable function.

From wp-hackers at striderweb.com  Sat Jun 13 05:12:14 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sat Jun 13 05:12:34 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <EMEWEMEW2_DELIMl5BBYa6ee39ebd0c433831024009,
	mikeschinkel@newclarity.net, 11422025.2061244824474214.J>
References: <EMEWEMEW2_DELIMl5BBYa6ee39ebd0c433831024009,
	mikeschinkel@newclarity.net, 11422025.2061244824474214.J>
Message-ID: <D5E92847-7283-4D4D-BD92-623213D60E18@striderweb.com>


On Jun 12, 2009, at 11:34 AM, Mike Schinkel wrote:

>> The same plugin appearing in more than one place will
>> confuse the heck out of users.
>
> While I like your sub-plugin model, will it confuse users if two (2)  
> different plugins use the same sub-plugin?  I know you are thinking  
> of plugins specifically made for another plugin but someone could  
> easily choose to implement the same interface so they could have  
> ready-made add-ins for their own plugin.

Could you give me an example, because seriously I can't think of any.   
Again note the distinction between dependent plugins and sub-plugins.

If I make a "Spam Karma ReCaptcha" sub-plugin with "Spam Karma" as the  
master, I can't imagine that ever being *also* a sub plugin for some  
other plugin.

If you're talking a framework plugin, you have it turned around.  The  
Framework would be the master, and plugins based on it would be  
dependent on it (but probably NOT sub-plugins.)

Stephen

From mikeschinkel at newclarity.net  Sat Jun 13 06:56:45 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat Jun 13 06:57:17 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <23733360.2701244875844495.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5C1ujf41482c861553bd454da60,
	mikeschinkel@newclarity.net, 24103002.2721244876203927.J>

"Stephen Rider" <wp-hackers@striderweb.com> wrote:
>>> The same plugin appearing in more than one place will
>>> confuse the heck out of users.
>>
>> While I like your sub-plugin model, will it confuse users if two (2)  
>> different plugins use the same sub-plugin?  I know you are thinking  
>> of plugins specifically made for another plugin but someone could  
>> easily choose to implement the same interface so they could have  
>> ready-made add-ins for their own plugin.
>
> Could you give me an example, because seriously I can't think of any.   
> Again note the distinction between dependent plugins and sub-plugins.

Sure I can give an example and one I think is highly likely.

Let's say the fine folks who are offering WP e-Commerce decided to create payment processor sub-plugins; one for PayPal, one for Google Checkout, etc. etc.  I in my opportunistic wisdom decide to create my own ecommerce solution targeted at video cartoon characters with blogs on WordPress which I choose to call "WP Super Mario Cart" (oblivious to the obvious trademark lawsuits that will be hurled at me.) But rather than worry about implementing all those tedious payment processing modules I just implement the same interface that WP e-Commerce chose to implement. Presto bango, I now have a bunch of dependent sub-plugins that will work for my new shopping cart.

> If I make a "Spam Karma ReCaptcha" sub-plugin with "Spam Karma" 
> as the master, I can't imagine that ever being *also* a sub plugin 
> for some other plugin.

All tongue-in-cheek aside I do very much see wanting to share payment processor plugins, probably more likely than two plugins using the same anti-spam plugin (but you never know.) One pearl I learned from someone much wiser than me was that while finding a needle in a haystack may be hard, it's practically impossible to prove that a needle does not exist in that haystack (i.e. you can't prove a negative.)  Even though, I can imagine that another plugin might want to use your Recaptcha sub-plugin. After all, that's one of the things that makes open-source so vibrant and valuable; i.e. the ability to directly reuse what someone else has previously made available for use in a different context.

Backing into someone else's successful extension model is a savvy business move, look how many years it worked for Compaq on the hardware side. So I guess what I'm saying is I don't see the difference between multi-dependent plugins and single dependent sub-plugins except for the fact that at the moment the latter has one on plugin for which it depends whereas the former currently has many.

But I don't think this is a deal killer for the admin UI, just something to consider.  Maybe the approach is to list those sub-plugins underneath both of the plugins on which they are applicable.

However as I write this is occurs to me that your concept of "dependent plugins" and "sub-plugins" is really just the concept of "interfaces" like from Java, .NET, and PHP5. 

   http://java.sun.com/docs/books/tutorial/java/concepts/interface.html
   http://php.net/manual/en/language.oop5.interfaces.php

Your sub-plugins "implement" an interface albeit a defacto one and one that is higher level than built into Java or PHP5 (Java & PHP5 know nothing of WordPress "hooks", for example.) Any plugin that depends on another plugin probably a defacto interface. Note that the interface can be "out-of-band", for example the sub-plugin could share options with the master plugin and never actually call any of it's functions, though that's not all that likely I don't think.

This interface concept is extremely powerful. From Sun's page:

"For example, imagine a futuristic society where computer-controlled robotic cars transport passengers through city streets without a human operator. Automobile manufacturers write software (Java, of course) that operates the automobile?stop, start, accelerate, turn left, and so forth. Another industrial group, electronic guidance instrument manufacturers, make computer systems that receive GPS (Global Positioning System) position data and wireless transmission of traffic conditions and use that information to drive the car. 

The auto manufacturers must publish an industry-standard interface that spells out in detail what methods can be invoked to make the car move (any car, from any manufacturer). The guidance manufacturers can then write software that invokes the methods described in the interface to command the car. Neither industrial group needs to know how the other group's software is implemented. In fact, each group considers its software highly proprietary and reserves the right to modify it at any time, as long as it continues to adhere to the published interface."

So having the idea of what I call a "Well-known Interface" is really useful even if it's not a formal interface. A well-known interface encourages reuse and solution growth. WordPress core's "hook" system is really a well-known interface, so is the Thesis theme's set of hooks.

If you already knew all this about interfaces, forgive me. Some people on wp-hackers have a deep computer science background and others first learned to program in order to modify WordPress and since I don't know who knows what I figured I'd inject a bit of this background.

I'm now thinking it would be really useful if we were to create an WP_Interface() class to formally recognize this concept as an OPTION for those who are implementing plugins that use dependent & sub-plugins. A WP_Interface() would define everything about how a plugin would and should be used by a dependent & sub-plugin even if some of that definition were simply prose. It would be part documentation, part validation and possibly part implementation.  

For example, upon plugin activation WordPress could validate sub-plugins against their defined WP_Interface if such an interface exists.  Hell, WordPress could validate all plugins against a WP_Interface("WordPress","2.9") if we agree to define it:

One of the big benefits of such an interface would be documentation (WOW!): 

   $wpi = New WP_Interface("WordPress","2.9");
   $wpi->print();

The other benefit would be validation:

   $wpi = New WP_Interface("Spam Karma","1.0");
   if (!$wpi->validate("spam-karma-recaptcha")) 
      echo "Sorry: this version of Spam Karma Recaptcha is not compatible with this version of Spam Karma.";

Validation would be HUGELY beneficial. If could allow us to disable non-conforming plugins during an upgrade and even make it possible to determine if there will be problems prior to an upgrade. WP_Interface() would go a long way towards making larger companies and agencies more comfortable with using WordPress because over time it would increase the robustness of the WordPress platform.

Again, I stress that what I'm proposing would be OPTIONAL in all cases, but opting for it would make it easier for people who want to implement an interface and it would make it so we could validate plugins against that interface. It would also typically only be used during activation and not on each page load so it wouldn't impact site performance except marginally upon activation. I'd be happy to work on this if others see it has value.  I'd want to collaborate on it with a least a few others, possible via a Google group (so as not to flood this list with discussions.)

Wrapping up by coming back to your concept of "dependent plugins" vs. "sub-plugins" I really don't think we should make any such distinction. I think t he only difference should be the fact one has code that uses the other or OPTIONALLY they define the relationship using a potential WP_Interface().  As for the admin UI I do agree that it would be nice to have a way to display those that are generally only there to be supportive of another plugin in a tree view up that plugin, but that should be determined by WordPress inspecting the two plugins not by anything defining a plugin as a "master" and another as a "slave." IMO, anyway.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

P.S. I think I now need to go back and re-read the entire thread because I hadn't paid close enough attention to see how (in)compatible it is with the WP_Interface() concept.
From mikeschinkel at newclarity.net  Sat Jun 13 10:32:00 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat Jun 13 10:33:10 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <29543538.3101244889024522.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5C5W171f8a274afbad532bc91b4,
	mikeschinkel@newclarity.net, 32986455.3121244889118266.J>

"Ptah Dunbar" <pt@ptahd.com> wrote:
> Thanks for the tips NR. I was already afraid of that after snooping 
> around the core a little bit more. And yes, everything's going into 
> one fat array (you wouldnt catch me dead adding options all over 
> the place).

Something to consider. "Never" shouldn't be a hard and fast rule.  If you are storing record IDs or other items that can be used to uniquely identify a record you should consider putting them in their own option, especially if the information would be needed as a linking table in a SQL query.

As a case-in-point NextGen Gallery stores most options in "ngg_options."  One of the thing NGG stores in ngg_options is which galleries are part of which albums. My client wanted to display the albums in descending order of those that had the most recently added photos. It was completely impractical from a performance perspective to do it in PHP and not possible as delivered to do it in SQL.  

OTOH, had NGG used separate option entries for each album which violates NR's rule it would have been practical to do in SQL. For example, assuming album_id=7 had three (3) galleries with ids of 2, 5 & 17:

update_option('ngg_galleries_for_album_7','2,5,17');

Then I could have used the following SQL to get a list of photos in reverse chronological order:

SELECT a.id,a.name, g.gid,g.name, p.* 
FROM wp_ngg_album a
INNER JOIN wp_options o ON CONCAT('ngg_galleries_for_album_',a.id)=o.option_name
INNER JOIN wp_ngg_gallery g ON FIND_IN_SET(g.gid,o.option_value)
INNER JOIN wp_ngg_pictures p ON g.gid=p.galleryid
ORDER BY p.imagedate DESC

So even though most of the time you should put all options into one array you shouldn't ALWAYS do it that way. As with anything you should consider the situation and potential use-cases before deciding what makes the most sense.  IOW, "Always put all options in a serialized array" should be more of a guideline than a rule.

Just so you know how I solved it I had to hack NGG to include a linking table for "album_galleries" and I had my hacked version of NGG update that table right after it updated ngg_options. Here's a SQL query that shows how it worked (note it's much cleaner than the wp_options version above):

SELECT a.name, g.name, p.* 
FROM wp_ngg_album a
INNER JOIN wp_ngg_album_galleries ag ON a.id=ag.aid
INNER JOIN wp_ngg_gallery g ON ag.gid=g.gid
INNER JOIN wp_ngg_pictures p ON g.gid=p.galleryid
ORDER BY p.imagedate DESC

FWIW, it's often better especially for performance to do it with a linking table than to put in the options table the way I suggested.  OTOH, there is conceptual and maintenance overhead to adding tables so sometimes it's just better put into the wp_options table rather than have tens of simple linking tables cluttering up the database. 

But whatever the case for plugin/theme developers who've not had experience with relational database 3rd normal form having a rule that says "Always put all options in a serialized array" can result in doing so just because it's "a rule" instead of considering the use-case (see Wikipedia for "cargo cultist.") When that happens the plugin/theme author paints their user into a nasty corner and forces them to hack it up, as I had to do with NGG.

HTH.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

P.S. BTW, I keep meaning to send Alex Rabe my updates to NGG for hopeful inclusion in his next version.  Alex, are you on this list?
From jpenney at jczorkmid.net  Sat Jun 13 10:58:56 2009
From: jpenney at jczorkmid.net (Jason Penney)
Date: Sat Jun 13 10:59:13 2009
Subject: [wp-hackers] Best Practice for accessing _WP_Dependency->extra?
Message-ID: <4A338670.4010507@jczorkmid.net>

Hi,

In the process of updating my "Use Google Libraries" plugin
[http://jasonpenney.net/wordpress-plugins/use-google-libraries/] to take
advantage of the changes in WordPress 2.8 I saw that I needed to persist
any properties added using $scripts->add_data() to the new
registrations.  I didn't see anything that looked like a valid API for
doing this, so I ended up doing something like the following:

	// save off the old script before unregistering it
	$oldscript = $scripts->registered[$script->handle];

...

	// re-add all the extra data from the old script to the new
	foreach ($oldscript->extra as $data_name => $data) {
 		$scripts->add_data($script->handle,$data_name,$data);
	}


This seems to have done what I want, but probably not in the best
possible way (directly accessing 'registered' and 'extra' strike me as
likely to be problematic in future).

I was looking for something like the following:

class WP_Dependencies {
	// ...
	/**
	 * Retrieves extra data
	 *
	 * Returns data only if script has already been added
 	 *
	 * @param string handle Script name
	 * @param string data_name (optional) Name of object in which to

	 *        retrieve data from
	 * @return mixed false if handle not registered, Array value if
         *        $data_name is provided, Array containing all extra
         *        data if $data_name is false
	 */

	function get_data( $handle, $data_name = false) {
		if ( !isset($this->registered[$handle]) )
        		return false;
		if (!$data_name)
			return $this->registered[$handle]->extra;
		return $this->registered[$handle]->extra[$data_name];
	}
	// ...
}

Any pointers or suggestions appreciated,
Jay

-- 
Jason C Penney (jpenney@jczorkmid.net)
http://jasonpenney.net/


From scribu at gmail.com  Sat Jun 13 11:31:28 2009
From: scribu at gmail.com (scribu)
Date: Sat Jun 13 11:31:44 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <-7385106679131868987@unknownmsgid>
References: <23733360.2701244875844495.JavaMail.DELL-1405$@Dell-1405>
	<-7385106679131868987@unknownmsgid>
Message-ID: <349fe48b0906130431k5a9825d0scff8bd692af03e4b@mail.gmail.com>

>
> Ok, thanks for the pointers. I'll see if I can manage to pull off the
> activation hook workaround without modifying the active_plugins list.
>

So I've managed to call a function from the parent plugin when the child
plugin is activated (yes, I actually need that), without interfering with
the loading order:

Parent plugin: http://wp.pastebin.ca/1458835
Child plugin: http://wp.pastebin.ca/1458837

I just wrote it to see if it can be done.

--
http://scribu.net
From mikeschinkel at newclarity.net  Sat Jun 13 12:36:06 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sat Jun 13 12:36:41 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <6051006.3161244896178206.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5C7a60f443744a4fa4b0019c779,
	mikeschinkel@newclarity.net, 33172461.3181244896563526.J>

scribu:

Looking at your code it appears you are assuming a parent-child inheritance relationship?  Did I follow it correctly?

I hadn't considered dependent plugins having a parent-child inheritance relationship but I guess there are use-cases where that would make sense though I can't immediately think of one.

Still, does your approach *require* a parent-child inheritance relationship?  For my envisioned use-cases with one example being the payment processors plugins for an shopping cart plugin I see a lot more "uses a" relationships than "is a" relationships between a plugin and it's dependents.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "scribu" <scribu@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Saturday, June 13, 2009 7:31:28 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Plugin dependency checking

>
> Ok, thanks for the pointers. I'll see if I can manage to pull off the
> activation hook workaround without modifying the active_plugins list.
>

So I've managed to call a function from the parent plugin when the child
plugin is activated (yes, I actually need that), without interfering with
the loading order:

Parent plugin: http://wp.pastebin.ca/1458835
Child plugin: http://wp.pastebin.ca/1458837

I just wrote it to see if it can be done.

--
http://scribu.net
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From scribu at gmail.com  Sat Jun 13 13:14:04 2009
From: scribu at gmail.com (scribu)
Date: Sat Jun 13 13:14:21 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <-7136434387950442034@unknownmsgid>
References: <6051006.3161244896178206.JavaMail.DELL-1405$@Dell-1405>
	<-7136434387950442034@unknownmsgid>
Message-ID: <349fe48b0906130614s3177356kb813f79e6fa601c7@mail.gmail.com>

>
> Still, does your approach *require* a parent-child inheritance
> relationship?
>

No, child_class does not *extend* parent_class or parent_tool, if that's
what you were asking.

But for the activation thing to work, the child class has to call
parent_plugin_activation().

-- 
http://scribu.net
From wp-hackers at striderweb.com  Sat Jun 13 15:29:29 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sat Jun 13 15:29:54 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <EMEWEMEW2_DELIMl5C1ujf41482c861553bd454da60,
	mikeschinkel@newclarity.net, 24103002.2721244876203927.J>
References: <EMEWEMEW2_DELIMl5C1ujf41482c861553bd454da60,
	mikeschinkel@newclarity.net, 24103002.2721244876203927.J>
Message-ID: <7A2C4A5F-8FDA-4325-911A-A8BC5A4827C6@striderweb.com>

NOTE:

You can read all of this for the discussion, or you may just choose to  
jump to the bottom, where the rug gets yanked out from under....


On Jun 13, 2009, at 1:56 AM, Mike Schinkel wrote:

> "Stephen Rider" <wp-hackers@striderweb.com> wrote:
>>> While I like your sub-plugin model, will it confuse users if two (2)
>>> different plugins use the same sub-plugin?  I know you are thinking
>>> of plugins specifically made for another plugin but someone could
>>> easily choose to implement the same interface so they could have
>>> ready-made add-ins for their own plugin.
>>
>> Could you give me an example, because seriously I can't think of any.
>> Again note the distinction between dependent plugins and sub-plugins.
>
> Sure I can give an example and one I think is highly likely.
>
> Let's say the fine folks who are offering WP e-Commerce decided to  
> create payment processor sub-plugins; one for PayPal, one for Google  
> Checkout, etc. etc.  I in my opportunistic wisdom decide to create  
> my own ecommerce solution targeted at video cartoon characters with  
> blogs on WordPress which I choose to call "WP Super Mario  
> Cart" (oblivious to the obvious trademark lawsuits that will be  
> hurled at me.) But rather than worry about implementing all those  
> tedious payment processing modules I just implement the same  
> interface that WP e-Commerce chose to implement. Presto bango, I now  
> have a bunch of dependent sub-plugins that will work for my new  
> shopping cart.

So... we have "WP e-Commerce" and "Paypal Module" sub-plugin for WP e- 
Commerce.  Paypal Module plugin has some code in it that says "this is  
a sub-plugin of WP e-Commerce".  *By Definition* that means it is  
dependent on WP e-Commerce.  (Sub plugins are just a special kind of  
dependent plugin.)  That means that unless WP e-Commerce is present  
and activated, Paypal Module *doesn't even load*.  You would have to  
hack it to say "This is a sub-plugin of Mario Cart".

This is all very similar to frameworks.  Something I've been working  
on, on the side, is a WP plugin framework called Strider Core.  When I  
get it done, all of my plugins are going to be built on top of it.  In  
this situation I would not use the sub-plugin formula but simple  
dependencies -- Strider Core would be a plain-old plugin and the  
others would have the Header that says "this plugin depends on Strider  
Core".

Here's another thought.  If someone deletes a plugin that has subs,  
all of its sub-plugins should logically be deleted along with it,  
because *by definition* the sub plugins are nothing without their  
Master plugin.  IF I get rid of "Spam Karma", I really don't need the  
"Spam Karma Anubis" plugin sticking around.  In fact I don't need any  
of the TEN sub-plugins that ship with Spam Karma.

What you're asking for in your example is the ability to switch from  
Push to Pull -- you want a plugin to be able to say, "Plugin Z is a  
sub-plugin of Me".

The **simplest** solution to your example is that PayPal module  
shouldn't have ANY dependencies.  It's just some functions and an  
add_action, which doesn't do anything unless some other plugin calls  
the corresponding do_action.  You're not asking for real dependency,  
you just want the visual appearance of a sub-plugin.

Might be doable, but it's a different thing.  Here's the real UI  
problem with that though:

Okay, Paypal Module appears on the Plugins list underneath both WP e- 
Commerce and Mario Cart.  I go to the one under WP e-Commerce and  
deactivate it.  Ooops!  I just deactivated it for Mario Cart too!  In  
WordPress, a plugin is either activated or it's not (at runtime the  
file is either include()ed or it isn't.)  What you need is code within  
the two Cart plugins that say "use sub-plugin X or don't", which is --  
and should be -- beyond the scope of WP's plugin management.


<snip>
> If you already knew all this about interfaces, forgive me. Some  
> people on wp-hackers have a deep computer science background and  
> others first learned to program in order to modify WordPress and  
> since I don't know who knows what I figured I'd inject a bit of this  
> background.

Heh.  I learned programming by typing games into my Apple ][+.  Still,  
more of the latter than the former.  :)

> Validation would be HUGELY beneficial. If could allow us to disable  
> non-conforming plugins during an upgrade and even make it possible  
> to determine if there will be problems prior to an upgrade.  
> WP_Interface() would go a long way towards making larger companies  
> and agencies more comfortable with using WordPress because over time  
> it would increase the robustness of the WordPress platform.

Are you talking about what Firefox does where add-on authors have to  
continually update their add-ons just to bump the version of Firefox  
that their stuff is compatible with?

> Wrapping up by coming back to your concept of "dependent plugins"  
> vs. "sub-plugins" I really don't think we should make any such  
> distinction.

They are basically the same thing.

Dependent means that if Henchman Plugin is dependent on Boss  
Plugin(s), Henchman doesn't even load (in PHP, isn't included) unless  
Boss is loaded.

A Sub-Plugin is exactly the same, except for the added UI that it  
appears underneath a specified Boss in Manage Plugins, and if that  
specific Boss is deleted, so are all Subs.

> As for the admin UI I do agree that it would be nice to have a way  
> to display those that are generally only there to be supportive of  
> another plugin in a tree view up that plugin, but that should be  
> determined by WordPress inspecting the two plugins not by anything  
> defining a plugin as a "master" and another as a "slave." IMO, anyway.


...

*sigh*  10,000 words later, I think you've talked me out of the whole  
idea.  I'm seeing problems with the whole plan.

Plugins can already make themselves dependent on another by checking  
for the existence of the needed functions from the "master".  Or they  
can just offer up functionality via add_action that is called or not  
by some other plugin.

The only REAL important part of all this is that the dependency  
relationship allows for proper loading order.

So... rather than Master/Slave, or even "dependent", what we need is  
something in WP Core that allows for some plugins to say "offers X"  
and others to say "uses X"; and if the two match up then we get the  
"sub plugin" UI changes.  (And forget the bit about deleting sub- 
plugins!)  This is really a complete change from previous discussion,  
but probably the best.

Stephen

-- 
Stephen Rider
http://striderweb.com/




From ncrice at gmail.com  Sat Jun 13 19:42:19 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Sat Jun 13 19:42:37 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <-2583271928043634884@unknownmsgid>
References: <29543538.3101244889024522.JavaMail.DELL-1405$@Dell-1405>
	<-2583271928043634884@unknownmsgid>
Message-ID: <862d087f0906131242u2356cce1rcca618275011b8b4@mail.gmail.com>

Mike,
You're obviously right ... there are always exceptions to the rules, and in
the cases you described, there is obvious need for multiple entries in the
options db.

But for most, we're talking about very simple data (boolean, ID arrays, html
code, etc.) that would never warrant multiple entries in the options db.

Sorry, didn't mean to indicate that there was never a reason to use multiple
entries.

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Sat, Jun 13, 2009 at 6:32 AM, Mike Schinkel
<mikeschinkel@newclarity.net>wrote:

> "Ptah Dunbar" <pt@ptahd.com> wrote:
> > Thanks for the tips NR. I was already afraid of that after snooping
> > around the core a little bit more. And yes, everything's going into
> > one fat array (you wouldnt catch me dead adding options all over
> > the place).
>
> Something to consider. "Never" shouldn't be a hard and fast rule.  If you
> are storing record IDs or other items that can be used to uniquely identify
> a record you should consider putting them in their own option, especially if
> the information would be needed as a linking table in a SQL query.
>
> As a case-in-point NextGen Gallery stores most options in "ngg_options."
>  One of the thing NGG stores in ngg_options is which galleries are part of
> which albums. My client wanted to display the albums in descending order of
> those that had the most recently added photos. It was completely impractical
> from a performance perspective to do it in PHP and not possible as delivered
> to do it in SQL.
>
> OTOH, had NGG used separate option entries for each album which violates
> NR's rule it would have been practical to do in SQL. For example, assuming
> album_id=7 had three (3) galleries with ids of 2, 5 & 17:
>
> update_option('ngg_galleries_for_album_7','2,5,17');
>
> Then I could have used the following SQL to get a list of photos in reverse
> chronological order:
>
> SELECT a.id,a.name, g.gid,g.name, p.*
> FROM wp_ngg_album a
> INNER JOIN wp_options o ON CONCAT('ngg_galleries_for_album_',a.id
> )=o.option_name
> INNER JOIN wp_ngg_gallery g ON FIND_IN_SET(g.gid,o.option_value)
> INNER JOIN wp_ngg_pictures p ON g.gid=p.galleryid
> ORDER BY p.imagedate DESC
>
> So even though most of the time you should put all options into one array
> you shouldn't ALWAYS do it that way. As with anything you should consider
> the situation and potential use-cases before deciding what makes the most
> sense.  IOW, "Always put all options in a serialized array" should be more
> of a guideline than a rule.
>
> Just so you know how I solved it I had to hack NGG to include a linking
> table for "album_galleries" and I had my hacked version of NGG update that
> table right after it updated ngg_options. Here's a SQL query that shows how
> it worked (note it's much cleaner than the wp_options version above):
>
> SELECT a.name, g.name, p.*
> FROM wp_ngg_album a
> INNER JOIN wp_ngg_album_galleries ag ON a.id=ag.aid
> INNER JOIN wp_ngg_gallery g ON ag.gid=g.gid
> INNER JOIN wp_ngg_pictures p ON g.gid=p.galleryid
> ORDER BY p.imagedate DESC
>
> FWIW, it's often better especially for performance to do it with a linking
> table than to put in the options table the way I suggested.  OTOH, there is
> conceptual and maintenance overhead to adding tables so sometimes it's just
> better put into the wp_options table rather than have tens of simple linking
> tables cluttering up the database.
>
> But whatever the case for plugin/theme developers who've not had experience
> with relational database 3rd normal form having a rule that says "Always put
> all options in a serialized array" can result in doing so just because it's
> "a rule" instead of considering the use-case (see Wikipedia for "cargo
> cultist.") When that happens the plugin/theme author paints their user into
> a nasty corner and forces them to hack it up, as I had to do with NGG.
>
> HTH.
>
> -Mike Schinkel
> Custom Wordpress Plugins
> http://mikeschinkel.com/custom-wordpress-plugins
>
> P.S. BTW, I keep meaning to send Alex Rabe my updates to NGG for hopeful
> inclusion in his next version.  Alex, are you on this list?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wp-hackers at striderweb.com  Sat Jun 13 19:48:30 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sat Jun 13 20:19:03 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <EMEWEMEW2_DELIMl5C5W171f8a274afbad532bc91b4,
	mikeschinkel@newclarity.net, 32986455.3121244889118266.J>
References: <EMEWEMEW2_DELIMl5C5W171f8a274afbad532bc91b4,
	mikeschinkel@newclarity.net, 32986455.3121244889118266.J>
Message-ID: <9B2AF3A6-890E-4BB1-9BB1-09D686D91477@striderweb.com>


On Jun 13, 2009, at 5:32 AM, Mike Schinkel wrote:

> "Ptah Dunbar" <pt@ptahd.com> wrote:
>> Thanks for the tips NR. I was already afraid of that after snooping
>> around the core a little bit more. And yes, everything's going into
>> one fat array (you wouldnt catch me dead adding options all over
>> the place).
>
> Something to consider. "Never" shouldn't be a hard and fast rule.   
> If you are storing record IDs or other items that can be used to  
> uniquely identify a record you should consider putting them in their  
> own option, especially if the information would be needed as a  
> linking table in a SQL query.

Absolutely. :)

I've been a strong advocate of combining option into arrays (in fact  
wrote a details article on doing just that*); but there are definitely  
times when it makes sense to break out certain settings into their own  
entry -- especially when a certain range of settings fall into a  
distinct group.  Of course there are also times when it shouldn't be  
in the Options table at all, but instead may be a field added to an  
existing table, or even an entirely new table.

Stephen

* maybe somewhat outdated as of WP 2.8, but... http://striderweb.com/nerdaphernalia/2008/07/consolidate-options-with-arrays/
From scribu at gmail.com  Sat Jun 13 20:25:42 2009
From: scribu at gmail.com (scribu)
Date: Sat Jun 13 20:25:55 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <9B2AF3A6-890E-4BB1-9BB1-09D686D91477@striderweb.com>
References: <9B2AF3A6-890E-4BB1-9BB1-09D686D91477@striderweb.com>
Message-ID: <349fe48b0906131325x1a1cc7bcve7bc9e17746570bb@mail.gmail.com>

If we're on the topic, I wrote a class that manages an array of options, as
part of my plugin toolkit <http://scribu.net/wordpress/scb-framework>.

You can see the code here:

http://plugins.trac.wordpress.org/browser/scb-framework/trunk/classes/Options.php

I guess I should be writing a proper tutorial for it, but I'm lazy.

-- 
http://scribu.net
From jpenney at jczorkmid.net  Sat Jun 13 21:31:47 2009
From: jpenney at jczorkmid.net (Jason Penney)
Date: Sat Jun 13 21:32:35 2009
Subject: [wp-hackers] Script concatenation and dependencies
Message-ID: <4A341AC3.9060708@jczorkmid.net>

Hi,

I received few reports of my "Use Google Libraries" plugin v1.0.5
causing issues with the 2.8 admin, and it seems to be related to the
script concatenation and how it is interacting with dependencies.
Basically scripts that are eligible for concatenation, but rely on a
dependency that is not can load in the wrong order.

I added an 'init' hook that sets $concatenate_scripts to false, and that
seems to have gotten around it for now, but I didn't know if this would
be considered a bug or not.

Jay


-- 
Jason C Penney (jpenney@jczorkmid.net)
http://jasonpenney.net/
From heiko.rabe at code-styling.de  Sat Jun 13 22:58:38 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Sat Jun 13 22:58:59 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <349fe48b0906131325x1a1cc7bcve7bc9e17746570bb@mail.gmail.com>
References: <9B2AF3A6-890E-4BB1-9BB1-09D686D91477@striderweb.com>
	<349fe48b0906131325x1a1cc7bcve7bc9e17746570bb@mail.gmail.com>
Message-ID: <4A342F1E.2040503@code-styling.de>

scribu :
> If we're on the topic, I wrote a class that manages an array of options, as
> part of my plugin toolkit <http://scribu.net/wordpress/scb-framework>.
>
> You can see the code here:
>
> http://plugins.trac.wordpress.org/browser/scb-framework/trunk/classes/Options.php
>
> I guess I should be writing a proper tutorial for it, but I'm lazy.
>
>   

You proposal only fits to WordPress running with PHP >= 5.0 and all 
installations using PHP 4 versions will not work.
If this should become anykind of common use, that 2 potential options 
have to be clarified:

    a) WordPress (Automattic) have to announce immediatly that latest 
with WP 2.9 PHP 5 will be required (mus have)
    b) we have to ensure backward compatibility with PHP 4

I know, thats not your decision and not my but in my optinion it's 
necessary to state very early that upcomming next WP versions will only 
support >= PHP 5.

regards

Heiko
From scribu at gmail.com  Sat Jun 13 23:16:49 2009
From: scribu at gmail.com (scribu)
Date: Sat Jun 13 23:17:06 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <4A342F1E.2040503@code-styling.de>
References: <9B2AF3A6-890E-4BB1-9BB1-09D686D91477@striderweb.com>
	<349fe48b0906131325x1a1cc7bcve7bc9e17746570bb@mail.gmail.com>
	<4A342F1E.2040503@code-styling.de>
Message-ID: <349fe48b0906131616q9bf4c8ev9420e128b4a83ef8@mail.gmail.com>

>
> You proposal only fits to WordPress running with PHP >= 5.0 and all
> installations using PHP 4 versions will not work.
>

Yes, I'm aware of that. Should have mentioned it upfront.

If this should become anykind of common use, that 2 potential options have
> to be clarified:
>
>   a) WordPress (Automattic) have to announce immediatly that latest with WP
> 2.9 PHP 5 will be required (mus have)
>   b) we have to ensure backward compatibility with PHP 4
>

Although I would love WP 2.9 to drop PHP 4 compatibilty, it's not likely.

As for the second option, I have no intention of pursuing it. There's also
the WPlize <http://wpengineer.com/wplize-a-class-for-options-in-wordpress/>class.


-- 
http://scribu.net
From elflop at googlemail.com  Sun Jun 14 13:14:52 2009
From: elflop at googlemail.com (Rich Pedley)
Date: Sun Jun 14 13:15:09 2009
Subject: [wp-hackers] WP automatic upgrade issues
Message-ID: <c6c45a350906140614o3ec941cah1fb569af8262e736@mail.gmail.com>

At present I don't believe there are any checks to see if plugins are
compatible when the upgrade takes place. Surely a check on the readme
for the 'Tested up to' value could at least flag potential plugins
that may cause issues. As it is at present people may have installed
plugins that no longer work with that version.

Like wise, and I don't know if this has been implemented or not, a
similar check on the plugin against the version of WP installed should
be done when installing direct from WP.org. This could also be
extended to a check when activating any plugin.

Thoughts?

-- 
my mind is on a permanent tangent
http://cms.elfden.co.uk/
From scribu at gmail.com  Sun Jun 14 13:24:51 2009
From: scribu at gmail.com (scribu)
Date: Sun Jun 14 13:25:04 2009
Subject: [wp-hackers] WP automatic upgrade issues
In-Reply-To: <c6c45a350906140614o3ec941cah1fb569af8262e736@mail.gmail.com>
References: <c6c45a350906140614o3ec941cah1fb569af8262e736@mail.gmail.com>
Message-ID: <349fe48b0906140624l2792c3fwdda8e90494260857@mail.gmail.com>

>
> Like wise, and I don't know if this has been implemented or not, a
> similar check on the plugin against the version of WP installed should
> be done when installing direct from WP.org. This could also be
> extended to a check when activating any plugin.
>

There already is a warning if you try to install a plugin that "hasn't been
tested on your version of WP".

-- 
http://scribu.net
From wp-hackers at striderweb.com  Sun Jun 14 13:44:26 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sun Jun 14 13:44:52 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <349fe48b0906131616q9bf4c8ev9420e128b4a83ef8@mail.gmail.com>
References: <9B2AF3A6-890E-4BB1-9BB1-09D686D91477@striderweb.com>
	<349fe48b0906131325x1a1cc7bcve7bc9e17746570bb@mail.gmail.com>
	<4A342F1E.2040503@code-styling.de>
	<349fe48b0906131616q9bf4c8ev9420e128b4a83ef8@mail.gmail.com>
Message-ID: <6D1FBE9B-9724-4A3C-936F-4316BE431943@striderweb.com>

WP 2.9 I believe is moving the requirement up to PHP 4.2.

Please let's not have a long argument about the whys and wherefors

Stephen
From elflop at googlemail.com  Sun Jun 14 14:18:50 2009
From: elflop at googlemail.com (Rich Pedley)
Date: Sun Jun 14 14:19:08 2009
Subject: [wp-hackers] WP automatic upgrade issues
In-Reply-To: <349fe48b0906140624l2792c3fwdda8e90494260857@mail.gmail.com>
References: <c6c45a350906140614o3ec941cah1fb569af8262e736@mail.gmail.com>
	<349fe48b0906140624l2792c3fwdda8e90494260857@mail.gmail.com>
Message-ID: <c6c45a350906140718vcc262xc4aa43841a26b8e5@mail.gmail.com>

2009/6/14 scribu <scribu@gmail.com>:

> There already is a warning if you try to install a plugin that "hasn't been
> tested on your version of WP".
>

shows how long it is since I installed a plugin that wasn't one of mine :)

thanks for confirming that side, now should the auto upgrade do similar checks?




-- 
my mind is on a permanent tangent
http://cms.elfden.co.uk/
From heiko.rabe at code-styling.de  Sun Jun 14 14:34:23 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Sun Jun 14 14:34:48 2009
Subject: [wp-hackers] Settings pages
In-Reply-To: <6D1FBE9B-9724-4A3C-936F-4316BE431943@striderweb.com>
References: <9B2AF3A6-890E-4BB1-9BB1-09D686D91477@striderweb.com>	<349fe48b0906131325x1a1cc7bcve7bc9e17746570bb@mail.gmail.com>	<4A342F1E.2040503@code-styling.de>	<349fe48b0906131616q9bf4c8ev9420e128b4a83ef8@mail.gmail.com>
	<6D1FBE9B-9724-4A3C-936F-4316BE431943@striderweb.com>
Message-ID: <4A350A6F.4000802@code-styling.de>

Stephen Rider schrieb:
> WP 2.9 I believe is moving the requirement up to PHP 4.2.
>
> Please let's not have a long argument about the whys and wherefors
>
> Stephen
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
It's not true. WP 2.8 introduces a lot of file_get_contents() calls but 
without providing an substitute (created function) if missing.
So you are unable to run WordPress successful below PHP 4.3.0 !

regards

From kikizas at gmail.com  Sun Jun 14 14:45:14 2009
From: kikizas at gmail.com (Demetris)
Date: Sun Jun 14 14:45:28 2009
Subject: [wp-hackers] WP automatic upgrade issues
In-Reply-To: <c6c45a350906140614o3ec941cah1fb569af8262e736@mail.gmail.com>
References: <c6c45a350906140614o3ec941cah1fb569af8262e736@mail.gmail.com>
Message-ID: <9f34a3610906140745m3ef273c2hcce38d6ea41c624d@mail.gmail.com>

On Sun, Jun 14, 2009 at 4:14 PM, Rich Pedley<elflop@googlemail.com> wrote:
> At present I don't believe there are any checks to see if plugins are
> compatible when the upgrade takes place. Surely a check on the readme
> for the 'Tested up to' value could at least flag potential plugins
> that may cause issues. As it is at present people may have installed
> plugins that no longer work with that version.
>
[SNIP]

I was thinking this morning about opening a ticket for this.

For example:

You have 3 plugins that have not been tested for compatibility with
WordPress 2.8:

*   Plugin A
*   Plugin B
*   Plugin C

[ Thank you, WordPress!  Please, deactivate these plugins for me
before upgrading. ]

[ Don?t deactivate anything.  Just upgrade!  I know what I?m doing. ]

Something like this could save users (and also people who try to
support users) from a lot of trouble.

Cheers,

Demetris
http://op111.net/
From lynne.pope at gmail.com  Sun Jun 14 15:24:02 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Sun Jun 14 15:24:32 2009
Subject: [wp-hackers] WP automatic upgrade issues
In-Reply-To: <9f34a3610906140745m3ef273c2hcce38d6ea41c624d@mail.gmail.com>
References: <c6c45a350906140614o3ec941cah1fb569af8262e736@mail.gmail.com> 
	<9f34a3610906140745m3ef273c2hcce38d6ea41c624d@mail.gmail.com>
Message-ID: <427667db0906140824x653d5ff7i285de0c7a08b654a@mail.gmail.com>

2009/6/15 Demetris <kikizas@gmail.com>

> On Sun, Jun 14, 2009 at 4:14 PM, Rich Pedley<elflop@googlemail.com> wrote:
> > At present I don't believe there are any checks to see if plugins are
> > compatible when the upgrade takes place. Surely a check on the readme
> > for the 'Tested up to' value could at least flag potential plugins
> > that may cause issues. As it is at present people may have installed
> > plugins that no longer work with that version.
> >
> [SNIP]
>
> I was thinking this morning about opening a ticket for this.
>
> For example:
>
> You have 3 plugins that have not been tested for compatibility with
> WordPress 2.8:
>
> *   Plugin A
> *   Plugin B
> *   Plugin C
>
> [ Thank you, WordPress!  Please, deactivate these plugins for me
> before upgrading. ]
>
> [ Don?t deactivate anything.  Just upgrade!  I know what I?m doing. ]


 What about [WordPress will deactivate plugins before proceeding with your
upgrade.]

Followed by [Upgrade complete. Please check that your plugins are compatible
with this version before activating <link to codex compatibility list>]

Yeah, I know that not all compatible plugins get added to the list (and not
all incompatible plugins get added either) but this sure would be an
incentive for developers to make sure their updated plugins *were* listed ;)

Every major upgrade sees forum posts where WordPress gets blamed for
problems simply because users are not checking that their plugins are
up-to-date. A bit of education would not go amiss.
I prefer that plugins are automatically deactivated for two reasons - (a)The
Codex already tells users to deactivate plugins before upgrading; and (b)
doing this isolates any issues & makes it easier to identify where errors
may be occurring.

Lynne
From mikeschinkel at newclarity.net  Sun Jun 14 20:58:47 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun Jun 14 20:59:23 2009
Subject: [wp-hackers] WP automatic upgrade issues
In-Reply-To: <427667db0906140824x653d5ff7i285de0c7a08b654a@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl5DFwm2480d47c5226d3ef616d43,
	mikeschinkel@newclarity.net, 18149904.3281245012962665.J>

If an upgrade is going to disable plugins as a user I would like to know which plugins BEFORE I upgrade.  Disabling incompatible plugins might cause a site to disable critical functionality, or worse crash in the case of a theme that has been modified to call functions within plugins directly.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "Lynne Pope" <lynne.pope@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Sunday, June 14, 2009 11:24:02 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] WP automatic upgrade issues

2009/6/15 Demetris <kikizas@gmail.com>

> On Sun, Jun 14, 2009 at 4:14 PM, Rich Pedley<elflop@googlemail.com> wrote:
> > At present I don't believe there are any checks to see if plugins are
> > compatible when the upgrade takes place. Surely a check on the readme
> > for the 'Tested up to' value could at least flag potential plugins
> > that may cause issues. As it is at present people may have installed
> > plugins that no longer work with that version.
> >
> [SNIP]
>
> I was thinking this morning about opening a ticket for this.
>
> For example:
>
> You have 3 plugins that have not been tested for compatibility with
> WordPress 2.8:
>
> *   Plugin A
> *   Plugin B
> *   Plugin C
>
> [ Thank you, WordPress!  Please, deactivate these plugins for me
> before upgrading. ]
>
> [ Don?t deactivate anything.  Just upgrade!  I know what I?m doing. ]


 What about [WordPress will deactivate plugins before proceeding with your
upgrade.]

Followed by [Upgrade complete. Please check that your plugins are compatible
with this version before activating <link to codex compatibility list>]

Yeah, I know that not all compatible plugins get added to the list (and not
all incompatible plugins get added either) but this sure would be an
incentive for developers to make sure their updated plugins *were* listed ;)

Every major upgrade sees forum posts where WordPress gets blamed for
problems simply because users are not checking that their plugins are
up-to-date. A bit of education would not go amiss.
I prefer that plugins are automatically deactivated for two reasons - (a)The
Codex already tells users to deactivate plugins before upgrading; and (b)
doing this isolates any issues & makes it easier to identify where errors
may be occurring.

Lynne
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Mon Jun 15 04:28:06 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jun 15 04:28:36 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <6045648.3811245040022338.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5DNSB1d99b68fb08a4e4b8e3140,
	mikeschinkel@newclarity.net, 30288307.3831245040085756.J>

scribu:

I'm trying to understand this.  I think I'm struggling with the Parent/Child metaphor where the child can't exist w/o the (specific) parent much like how an (child) Line Item cannot exist without the context of a (parent) Invoice.

I'm thinking plugins are more like functions that can be called by other functions, or like URLs that can be linked from pages located at other URLs.  In both of those cases that called/linked function/URL doesn't have to define it's caller/referrer.

So are you suggesting a model that requires all child plugins identify their parents?  IOW, a model were no child plugins could be used by more than one parent plugin?

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "scribu" <scribu@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Saturday, June 13, 2009 9:14:04 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Plugin dependency checking

>
> Still, does your approach *require* a parent-child inheritance
> relationship?
>

No, child_class does not *extend* parent_class or parent_tool, if that's
what you were asking.

But for the activation thing to work, the child class has to call
parent_plugin_activation().

-- 
http://scribu.net
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Mon Jun 15 05:44:34 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jun 15 05:46:05 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <14961920.3891245043971545.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5E0iZ179bf523dcf99b54a277a3,
	mikeschinkel@newclarity.net, 1088882.3911245044675659.J>

"Stephen Rider" <wp-hackers@striderweb.com> wrote:
> So... rather than Master/Slave, or even "dependent", what 
> we need is something in WP Core that allows for some plugins 
> to say "offers X" and others to say "uses X"; and if the two 
> match up then we get the "sub plugin" UI changes.  

Dayum! I should have read ahead. I just wrote a ton and in this last paragraph you essentially described interfaces.  So I deleted everything that came before and am just sending this. If the WP community would instead want to call it "offers" instead of "interfaces" then that's completely copasetic with me.

I think we'd probably want something like this:

// Parent Plugin
wp_defines('my_offering.php');
wp_uses('my-offering',1.0);
...

// Child Plugin
wp_defines('my_offering.php');
wp_offers('my-offering',1.5);
...

// In WP Core
function wp_defines($file) {
  if ($GLOBALS['validate_offerings'])
    require_once($file);
}
function wp_uses($name,$version) {
  if ($GLOBALS['validate_offerings'])
    ...
}
function wp_offers($name,$version) {
  if ($GLOBALS['validate_offerings'])
    ...
}

// In my_offering.php
$o = new WP_Offering('my-offering');
$o->add_hook('foo','This hooks does foo.');
$o->add_hook('bar','This hooks does bar.');
$o->add_other_stuff('other stuff','This does other stuff.');
add_offering($o);

Now I haven't tried to implement any of this so the stuff in "my_offering.php" might need to be vastly different and of course maybe the "offering" part is too paganistic for this day and age, but you get the idea. :-)

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From mikeschinkel at newclarity.net  Mon Jun 15 06:28:02 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jun 15 06:28:32 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <12938118.4031245047125538.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5E1S37b1ad08a23679a177ed9ed,
	mikeschinkel@newclarity.net, 26466521.4051245047283161.J>

Hi all: 


I'm pondering an architectural decision and wanted to run it by the hackers. 

I'm building a plugin to provide "Post Links", i.e. "Links associated with a given Post." I've got a site where I'm using posts in ways that would model a Wikipedia entry more than it would a blog post. For example purposes let's say I had a tourism site that had a post for each of the 50 US states (I don't, this is just an example.) For my example I'd like to have the ability to add links to external travel articles related to each state. 

WordPress already has the (almost) perfect data structure for these links: the wp_links table along with the taxonomy tables for defining link categories (i.e. a link category "Post Links") I can also define a custom post field in wp_postmeta that contains a list of the link_ids in comma-seperated form. This would allow me to pass the comma-seperated list of link_ids using the 'include' parameter of get_bookmarks() to get the list of links. All good so far. (Right?) 

The next step is that I'd like to import blocks of links into my "Post Links" link category (I've already built the plugin for this) and then set up some workflow that would capture a screenshot for the URL (using another plugin I'm building), download the page title and meta description, and then finally present to me in a form to edit any of the links in much the same way Flickr.com lets you edit titles and descriptions when you mass upload photos. 

The problem arises in that there are not any fields in wp_links where I can store anything to tell me which links have had their screenshot generated, their title and description downloaded, nor their titles and descriptions manually reviewed and edited (excepting the "notes" field which IMO is not a viable candidate.) Posts have wp_postmeta and Users has wp_usermeta but there is no wp_linkmeta for Links. My usecase needs some metadata for workflow but I'm sure there are many other uses for link metadata as well. 

So here are the solutions I've considered: 


1.) Storing everything in a 'links_workflow' option as a serialized array (this just doesn't feel right.) 
2.) Creating a wp_linksmeta table and hoping that if WordPress ever adds it they add it like what I've added (Don't want to add a table but would be cleanest for SQL.) 
3.) Adding a "link_meta" field to the wp_links table and storing serialized array data for each link (This is okay, but can't do a performant SQL query against.) 

Maybe there's a fourth option but if so it hasn't occurred to me. 

So, what would you do if you had this need? Also would there be any pushback to seeing #2 or #3 added into core? 

Thanks in advance for pondering with me. 

-Mike Schinkel 
Custom Wordpress Plugins 
http://mikeschinkel.com/custom-wordpress-plugins 
From malaiac at gmail.com  Mon Jun 15 08:09:59 2009
From: malaiac at gmail.com (Malaiac)
Date: Mon Jun 15 08:10:37 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <-6631852756943898817@unknownmsgid>
References: <12938118.4031245047125538.JavaMail.DELL-1405$@Dell-1405> 
	<-6631852756943898817@unknownmsgid>
Message-ID: <59e7f3130906150109o11555f7h87656881e7e1257b@mail.gmail.com>

2009/6/15 Mike Schinkel <mikeschinkel@newclarity.net>:
> I'm pondering an architectural decision and wanted to run it by the hackers.
>
> I'm building a plugin to provide "Post Links", i.e. "Links associated with a given Post." I've got a site where I'm using posts in ways

You should check zeList plugin
http://wordpress.org/extend/plugins/zelist/ which includes some of the
things you're looking for.

For link extended fields, I strongly recommend the creation of a
link_meta table (aka option 2), and duplication of post_meta
functions, for two reasons :
- adding the table and copying the functions takes 30mn top.
- if and when WP decides to switch to a taxonomy-neutral meta table it
will be easier to switch from a "roughly similar to postmeta "
architecture than from a custom hack.
In zeList, just check zelist/includes/metas.php for the functions and
zelist/zelist.php (function zelist_install) for the database creation.
You may need to work on the Link Edit Page to add custom metas fields,
since I did not add these.

As for link related to posts, it can be done manually, or automatically.
Check http://cadeaux.laporterie.com/camping/18-acheter-une-caravane.htm
(check "Liens connexes") for an example of zeList in action. The
function is "related_links()" in
zelist/includes/template-functions.php

For the description/title/images parsing, check
http://www.screentoaster.com/watch/stUkJcQ0VIR11cSFtaXFJfVFRS/zelist_submit_page
it includes a zelist plugin (zelist-submitter), not released yet,
using the zeList API.

Let me know if some of that is helping you !

Malaiac
From scribu at gmail.com  Mon Jun 15 09:30:54 2009
From: scribu at gmail.com (scribu)
Date: Mon Jun 15 09:31:09 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <5036001351031517705@unknownmsgid>
References: <6045648.3811245040022338.JavaMail.DELL-1405$@Dell-1405>
	<5036001351031517705@unknownmsgid>
Message-ID: <349fe48b0906150230m5428e4d3ta3027c45da1ae06c@mail.gmail.com>

On Mon, Jun 15, 2009 at 7:28 AM, Mike Schinkel
<mikeschinkel@newclarity.net>wrote:

> I'm thinking plugins are more like functions that can be called by other
> functions, or like URLs that can be linked from pages located at other URLs.
>  In both of those cases that called/linked function/URL doesn't have to
> define it's caller/referrer.


Just as with regular plugins, you have to call add_action() and
add_filter(), the same happens with child-parent plugins. They can't be
completely separated.

So are you suggesting a model that requires all child plugins identify their
> parents?  IOW, a model were no child plugins could be used by more than one
> parent plugin?
>

One or more child plugins can use functionality provided by one parent
plugin. Parent plugins are not aware of the additional functionality that
each child plugin provides. That's the basic model.

In my activation hook example, the parent plugin simply fires one of it's
own functions with the parameters provided by the child plugin. (I could
have created a second child plugin that called the same parent plugin, but
with different params.)

--
http://scribu.net
From casey.bisson at gmail.com  Mon Jun 15 16:27:22 2009
From: casey.bisson at gmail.com (Casey Bisson)
Date: Mon Jun 15 16:27:41 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <EMEWEMEW2_DELIMl5E1S37b1ad08a23679a177ed9ed,
	mikeschinkel@newclarity.net, 26466521.4051245047283161.J>
References: <EMEWEMEW2_DELIMl5E1S37b1ad08a23679a177ed9ed,
	mikeschinkel@newclarity.net, 26466521.4051245047283161.J>
Message-ID: <33402CF1-D0C0-4F94-B9FB-D06124259FC4@gmail.com>


A while ago I proposed a comments_meta table[1], and at WordCamp I was  
introduced to bbPress' meta table architecture: rather than have meta  
tables for different types of content, there's just one meta table  
that includes an extra column describing what content type the ID  
links to.

The implication for the WP world was that an additional column in the  
postmeta table could extend it to serve links and comments (and if  
we're bold, replace usermeta). Our purposes are different, but having  
a standardized place and set of functions to store metadata about  
things other than posts would deliver obvious value to both of us.

[1]: http://comox.textdrive.com/pipermail/wp-hackers/2009-May/026343.html

All of that said, have you considered adding these links as posts?  
Putting content in the posts table gets you free tools to add tags and  
other metadata, makes the content easier to search (no need for  
plugins that scatter the searching to all those other tables), and  
allows you to open up the links to comments and other social activity.

You'd have to do the hard work of making the links work well as posts,  
but everything else comes free after that (rather than having to  
continually hack the link system to accommodate the interactions you'd  
like to see). But that's not as hard as it might appear -- I did it  
with photos and library records[2] and released the plugin[3].

[2]: see http://archives.colby-sawyer.edu/archives/2552/ and http://collingswoodlib.org/library/12023/
[3]: http://about.scriblio.net/

--Casey Bisson
http://maisonbisson.com/




On Jun 15, 2009, at 2:28 AM, Mike Schinkel wrote:

> The problem arises in that there are not any fields in wp_links  
> where I can store anything to tell me which links have had their  
> screenshot generated, their title and description downloaded, nor  
> their titles and descriptions manually reviewed and edited  
> (excepting the "notes" field which IMO is not a viable candidate.)  
> Posts have wp_postmeta and Users has wp_usermeta but there is no  
> wp_linkmeta for Links. My usecase needs some metadata for workflow  
> but I'm sure there are many other uses for link metadata as well.
>
> So here are the solutions I've considered:
>
> 1.) Storing everything in a 'links_workflow' option as a serialized  
> array (this just doesn't feel right.)
> 2.) Creating a wp_linksmeta table and hoping that if WordPress ever  
> adds it they add it like what I've added (Don't want to add a table  
> but would be cleanest for SQL.)
> 3.) Adding a "link_meta" field to the wp_links table and storing  
> serialized array data for each link (This is okay, but can't do a  
> performant SQL query against.)

From mikeschinkel at newclarity.net  Mon Jun 15 17:17:09 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jun 15 17:19:50 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <29966208.4141245086051544.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5ECHAdd3b8eff65a23be61ef70d,
	mikeschinkel@newclarity.net, 1950397.4161245086230336.J>

Casey,

Thanks for the background on the all-in-one meta table. I agree that a standardized place would benefit us both as well as benefit others who may have different needs.

As for making the links posts themselves, I considered but for my needs posts would be far too "heavy" and provide far more capability than I need. Links are the perfect structure for my needs assuming I have link_meta available. BTW, I'm already hacking posts to serve purposes other than typical blog posts, and I don't want to have to worry about yet another special post type.

But that's for the suggestions, it is definitely an option for another use-case.

BTW, Scriblio looks rather interesting, good work.  

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "Casey Bisson" <casey.bisson@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Monday, June 15, 2009 12:27:22 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Link metadata?


A while ago I proposed a comments_meta table[1], and at WordCamp I was  
introduced to bbPress' meta table architecture: rather than have meta  
tables for different types of content, there's just one meta table  
that includes an extra column describing what content type the ID  
links to.

The implication for the WP world was that an additional column in the  
postmeta table could extend it to serve links and comments (and if  
we're bold, replace usermeta). Our purposes are different, but having  
a standardized place and set of functions to store metadata about  
things other than posts would deliver obvious value to both of us.

[1]: http://comox.textdrive.com/pipermail/wp-hackers/2009-May/026343.html

All of that said, have you considered adding these links as posts?  
Putting content in the posts table gets you free tools to add tags and  
other metadata, makes the content easier to search (no need for  
plugins that scatter the searching to all those other tables), and  
allows you to open up the links to comments and other social activity.

You'd have to do the hard work of making the links work well as posts,  
but everything else comes free after that (rather than having to  
continually hack the link system to accommodate the interactions you'd  
like to see). But that's not as hard as it might appear -- I did it  
with photos and library records[2] and released the plugin[3].

[2]: see http://archives.colby-sawyer.edu/archives/2552/ and http://collingswoodlib.org/library/12023/
[3]: http://about.scriblio.net/

--Casey Bisson
http://maisonbisson.com/




On Jun 15, 2009, at 2:28 AM, Mike Schinkel wrote:

> The problem arises in that there are not any fields in wp_links  
> where I can store anything to tell me which links have had their  
> screenshot generated, their title and description downloaded, nor  
> their titles and descriptions manually reviewed and edited  
> (excepting the "notes" field which IMO is not a viable candidate.)  
> Posts have wp_postmeta and Users has wp_usermeta but there is no  
> wp_linkmeta for Links. My usecase needs some metadata for workflow  
> but I'm sure there are many other uses for link metadata as well.
>
> So here are the solutions I've considered:
>
> 1.) Storing everything in a 'links_workflow' option as a serialized  
> array (this just doesn't feel right.)
> 2.) Creating a wp_linksmeta table and hoping that if WordPress ever  
> adds it they add it like what I've added (Don't want to add a table  
> but would be cleanest for SQL.)
> 3.) Adding a "link_meta" field to the wp_links table and storing  
> serialized array data for each link (This is okay, but can't do a  
> performant SQL query against.)

_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Mon Jun 15 17:30:45 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jun 15 17:34:16 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <59e7f3130906150109o11555f7h87656881e7e1257b@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl5ECUj449cfed1ade511eee77adc,
	mikeschinkel@newclarity.net, 28245387.4201245087043770.J>

Malaiac:

Thanks for the pointer to zeList.  Are you going to test/update it for use with v2.8?

When I started writing my email I had been planning to add an option #3, a link_meta field. After completing the email I had changed my mind and decided a wp_linkmeta table a.k.a. option #2 would probably be the best. Thanks for confirming my decision to use a wp_linkmeta table, that is assuming I don't end up using zeList directly. 

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "Malaiac" <malaiac@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Monday, June 15, 2009 4:09:59 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Link metadata?

2009/6/15 Mike Schinkel <mikeschinkel@newclarity.net>:
> I'm pondering an architectural decision and wanted to run it by the hackers.
>
> I'm building a plugin to provide "Post Links", i.e. "Links associated with a given Post." I've got a site where I'm using posts in ways

You should check zeList plugin
http://wordpress.org/extend/plugins/zelist/ which includes some of the
things you're looking for.

For link extended fields, I strongly recommend the creation of a
link_meta table (aka option 2), and duplication of post_meta
functions, for two reasons :
- adding the table and copying the functions takes 30mn top.
- if and when WP decides to switch to a taxonomy-neutral meta table it
will be easier to switch from a "roughly similar to postmeta "
architecture than from a custom hack.
In zeList, just check zelist/includes/metas.php for the functions and
zelist/zelist.php (function zelist_install) for the database creation.
You may need to work on the Link Edit Page to add custom metas fields,
since I did not add these.

As for link related to posts, it can be done manually, or automatically.
Check http://cadeaux.laporterie.com/camping/18-acheter-une-caravane.htm
(check "Liens connexes") for an example of zeList in action. The
function is "related_links()" in
zelist/includes/template-functions.php

For the description/title/images parsing, check
http://www.screentoaster.com/watch/stUkJcQ0VIR11cSFtaXFJfVFRS/zelist_submit_page
it includes a zelist plugin (zelist-submitter), not released yet,
using the zeList API.

Let me know if some of that is helping you !

Malaiac
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From foolistbar at googlemail.com  Mon Jun 15 17:55:12 2009
From: foolistbar at googlemail.com (Geoffrey Sneddon)
Date: Mon Jun 15 17:55:37 2009
Subject: [wp-hackers] WXR compatibility
Message-ID: <FAE37EC3-A8AA-48B6-9C5E-C46349022ED1@googlemail.com>

Must the WXR importer remain compatible with all possible WXR exports,  
including those that aren't XML documents? If it must remain  
compatible, then WP can never use an WXR importer, and WP will need to  
stop claiming it is XML (as the de-facto standard will remain the  
status-quo of it not always being). If it doesn't need to, it makes it  
far easier for any other blogging software to write importers as they  
can use out-of-the-box XML parsers and be compatible with WP (instead  
of needing to write a parser of their own, which gets quite annoying  
if you can't copy/paste the GPL WP code).

--
Geoffrey Sneddon
<http://gsnedders.com/>

From beau at dentedreality.com.au  Mon Jun 15 17:58:43 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Mon Jun 15 17:58:53 2009
Subject: [wp-hackers] WXR compatibility
In-Reply-To: <FAE37EC3-A8AA-48B6-9C5E-C46349022ED1@googlemail.com>
References: <FAE37EC3-A8AA-48B6-9C5E-C46349022ED1@googlemail.com>
Message-ID: <902424490906151058j2fd79362ke72726d3fa3d09d5@mail.gmail.com>

> Must the WXR importer remain compatible with all possible WXR exports,
> including those that aren't XML documents?

Is it possible to convert non-XML WXR exports into valid XML on the
fly? How bad are they?
From malaiac at gmail.com  Mon Jun 15 18:46:42 2009
From: malaiac at gmail.com (Malaiac)
Date: Mon Jun 15 18:47:15 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <33402CF1-D0C0-4F94-B9FB-D06124259FC4@gmail.com>
References: <33402CF1-D0C0-4F94-B9FB-D06124259FC4@gmail.com>
Message-ID: <59e7f3130906151146ga1d64dbo2dbde5cc3269f6ac@mail.gmail.com>

2009/6/15 Casey Bisson <casey.bisson@gmail.com>:
> [1]: http://comox.textdrive.com/pipermail/wp-hackers/2009-May/026343.html
> All of that said, have you considered adding these links as posts? Putting
> content in the posts table gets you free tools to add tags and other
> metadata, makes the content easier to search (no need for plugins that
> scatter the searching to all those other tables), and allows you to open up
> the links to comments and other social activity.

He'll just have to recode the whole post (link) categories taxonomy.
Been there. Never doing that again.

Beyond that, I agree with the much needed central meta table.

Malaiac
From malaiac at gmail.com  Mon Jun 15 18:50:43 2009
From: malaiac at gmail.com (Malaiac)
Date: Mon Jun 15 18:51:12 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <-1217615762752970040@unknownmsgid>
References: <59e7f3130906150109o11555f7h87656881e7e1257b@mail.gmail.com> 
	<-1217615762752970040@unknownmsgid>
Message-ID: <59e7f3130906151150t3d967b28q9c48a904b04385f5@mail.gmail.com>

2009/6/15 Mike Schinkel <mikeschinkel@newclarity.net>:
> Malaiac:
> Thanks for the pointer to zeList. ?Are you going to test/update it for use with v2.8?
this week !

> When I started writing my email I had been planning to add an option #3, a link_meta field. After completing the email I had changed my mind and decided a wp_linkmeta table a.k.a. option #2 would probably be the best. Thanks for confirming my decision to use a wp_linkmeta table, that is assuming I don't end up using zeList directly.

#3 is good if you have very few values (like 1 to 3 metas)
and even in this case, #2 won't be much more work.
in link_meta, I store : link_updated, link_published, pagerank, and
some custom metas (like zipcode).

as for using zeList, please take it for a test drive, I feel it may
fill your specs quite closely. I'm available for further
doc/explanation on the plugin.

Malaiac
From foolistbar at googlemail.com  Mon Jun 15 18:54:19 2009
From: foolistbar at googlemail.com (Geoffrey Sneddon)
Date: Mon Jun 15 18:59:08 2009
Subject: [wp-hackers] WXR compatibility
In-Reply-To: <902424490906151058j2fd79362ke72726d3fa3d09d5@mail.gmail.com>
References: <FAE37EC3-A8AA-48B6-9C5E-C46349022ED1@googlemail.com>
	<902424490906151058j2fd79362ke72726d3fa3d09d5@mail.gmail.com>
Message-ID: <9B8466C2-27F3-4F6A-9248-409E15C143BB@googlemail.com>


On 15 Jun 2009, at 18:58, Beau Lebens wrote:

>> Must the WXR importer remain compatible with all possible WXR  
>> exports,
>> including those that aren't XML documents?
>
> Is it possible to convert non-XML WXR exports into valid XML on the
> fly? How bad are they?

Yeah, I guess. Seeming we have <generator> giving (WP) version, we  
should be able to do it based upon WP version. If anyone can help to  
gather together a list of bugs (only those that cause WXR to not be  
XML) affecting WP versions (up to 2.8, ones that only exist in trunk  
can be fixed at an export level) I would be grateful.

To start:

http://core.trac.wordpress.org/ticket/9633
http://core.trac.wordpress.org/ticket/9524
http://core.trac.wordpress.org/ticket/7624
http://core.trac.wordpress.org/ticket/5619 (maybe not a bug?)
http://core.trac.wordpress.org/ticket/4452
http://core.trac.wordpress.org/ticket/4242


--
Geoffrey Sneddon
<http://gsnedders.com/>

From andre at pixelplexus.co.za  Mon Jun 15 21:58:19 2009
From: andre at pixelplexus.co.za (AndreSC)
Date: Mon Jun 15 22:03:18 2009
Subject: [wp-hackers] 2.8 & wp_insert_post escaping characters
Message-ID: <4A36C3FB.3030704@pixelplexus.co.za>

Hi

I have a plugin that creates posts through wp_insert_post. It was 
working perfectly until I upgraded to 2.8. Now when it inserts or 
updates posts all the link and image tags have their quotes escaped in 
the post content in the DB, and on the front-end
e.g. render like |<img 
src=\'http://www.bookityourself.co.za/wp-content/uploads/dirman/Excelsior 
Manor Guesthouse02.gif\' width=\'400\' height=\'112\' border=\'0\' 
alt=\'pic1\' />|

I suspect I'm just ignorant about something, but can't figure out what, 
especially as it was working.

Any clarification appreciated, thank you

Andr?


-- 
This message has been scanned for viruses and
dangerous content by Pinpoint, and is
believed to be clean.

From mikeschinkel at newclarity.net  Mon Jun 15 23:39:03 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jun 15 23:40:47 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906150230m5428e4d3ta3027c45da1ae06c@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl5EId39de76528be4d42160b6bf2,
	mikeschinkel@newclarity.net, 10677091.4751245109142602.J>

"scribu" <scribu@gmail.com> wrote:
> One or more child plugins can use functionality provided by one 
> parent plugin. Parent plugins are not aware of the additional 
> functionality that each child plugin provides. That's the basic 
> model.

As with discussion with Steven on the list, let me urge not to have the child name its parent but instead have the child name the "interface" that its parents can consume.  Steven called is "offers" and "uses"; most any terms will work but coupling children directly to parents will really limit what can be done with their children and IMO would be a mistake.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

From repost_08 at yahoo.com  Tue Jun 16 01:36:05 2009
From: repost_08 at yahoo.com (RePost)
Date: Tue Jun 16 01:36:59 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
Message-ID: <4A36F705.6010302@yahoo.com>

Is there any way to link my stylesheet with WP's RSS feeds?

When it creates my feeds, WP grabs the images from my blog content and 
ignores the stylesheet, so I have images bumping up against text:
http://bit.ly/sBCvw

I've avoided this with my main feed by hand-coding the XML (replacing my 
styles with generic CSS) and sending it to FeedBurner:
http://bit.ly/atybz

However, now I'd like to set up Tags and Categories feeds, and would 
prefer to automate the process using WP's built-in feeds. I don't see 
any way to do this.
From scribu at gmail.com  Tue Jun 16 04:27:23 2009
From: scribu at gmail.com (scribu)
Date: Tue Jun 16 04:27:39 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <-6011790855306719154@unknownmsgid>
References: <349fe48b0906150230m5428e4d3ta3027c45da1ae06c@mail.gmail.com>
	<-6011790855306719154@unknownmsgid>
Message-ID: <349fe48b0906152127q3d57c2ear13640f4e85f5b50@mail.gmail.com>

Ok, now I get what you were trying to say with "Interfaces".

Yes, not using interfaces would would limit what could be done with
their children, but on the other hand, interfaces would limit what
child plugins could do themselves. It's a tradeoff.

It's the same tradeoff that would happen if normal plugins would have
to have an interface that the core would have to check.

On 6/16/09, Mike Schinkel <mikeschinkel@newclarity.net> wrote:
> "scribu" <scribu@gmail.com> wrote:
>> One or more child plugins can use functionality provided by one
>> parent plugin. Parent plugins are not aware of the additional
>> functionality that each child plugin provides. That's the basic
>> model.
>
> As with discussion with Steven on the list, let me urge not to have the
> child name its parent but instead have the child name the "interface" that
> its parents can consume.  Steven called is "offers" and "uses"; most any
> terms will work but coupling children directly to parents will really limit
> what can be done with their children and IMO would be a mistake.
>
> -Mike Schinkel
> Custom Wordpress Plugins
> http://mikeschinkel.com/custom-wordpress-plugins
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://scribu.net
From lists at rotorised.com  Tue Jun 16 06:42:19 2009
From: lists at rotorised.com (Ryan McCue)
Date: Tue Jun 16 06:44:28 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <4A36F705.6010302@yahoo.com>
References: <4A36F705.6010302@yahoo.com>
Message-ID: <4A373ECB.9070802@rotorised.com>

On 16/06/2009 11:36 AM, RePost wrote:
> Is there any way to link my stylesheet with WP's RSS feeds?

How do you intend to "link" it? RSS feeds contain just the information, 
not styling. The way RSS feeds with styling work is by using inline styling.

-- 
Ryan McCue
<http://cubegames.net/>

From frank at bueltge.de  Tue Jun 16 06:47:37 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Tue Jun 16 06:48:12 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <4A373ECB.9070802@rotorised.com>
References: <4A36F705.6010302@yahoo.com> <4A373ECB.9070802@rotorised.com>
Message-ID: <db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>

On Tue, Jun 16, 2009 at 8:42 AM, Ryan McCue<lists@rotorised.com> wrote:
> On 16/06/2009 11:36 AM, RePost wrote:
>>
>> Is there any way to link my stylesheet with WP's RSS feeds?
>
> How do you intend to "link" it? RSS feeds contain just the information, not
> styling. The way RSS feeds with styling work is by using inline styling.

+100 for this answer

>
> --
> Ryan McCue
> <http://cubegames.net/>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mikeschinkel at newclarity.net  Tue Jun 16 06:56:25 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue Jun 16 06:57:34 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906152127q3d57c2ear13640f4e85f5b50@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl5F1uPa8e56dfb93c303e297f452,
	mikeschinkel@newclarity.net, 28803467.241245135384247.J>

"scribu" <scribu@gmail.com> wrote:
> Yes, not using interfaces would would limit what could be done 
> with their children, but on the other hand, interfaces would 
> limit what child plugins could do themselves. 

How so?  I don't see it. 

Minimally (for the proposed use in WordPress) an "interface" is simply a name that parent and child agree to offer and to use.  It could be more than just a name but it would not have to be.

> It's the same tradeoff that would happen if normal plugins would 
> have to have an interface that the core would have to check.

I think it would be the other way around, i.e. core would implement (an) interface(s) that plugins would use. BTW, that is what already happens implicitly anyway, so we are not loosing anything by formalizing into a name. 

Let me see if I can find time to work on some examples. I think you'll "see" it more readily with code.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From repost_08 at yahoo.com  Tue Jun 16 07:46:22 2009
From: repost_08 at yahoo.com (RePost)
Date: Tue Jun 16 07:47:16 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
References: <4A36F705.6010302@yahoo.com> <4A373ECB.9070802@rotorised.com>
	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
Message-ID: <4A374DCE.8070108@yahoo.com>

Frank Bueltge wrote:
> On Tue, Jun 16, 2009 at 8:42 AM, Ryan McCue<lists@rotorised.com> wrote:
>   
>> On 16/06/2009 11:36 AM, RePost wrote:
>>     
>>> Is there any way to link my stylesheet with WP's RSS feeds?
>>>       
>> How do you intend to "link" it? RSS feeds contain just the information, not
>> styling. The way RSS feeds with styling work is by using inline styling.
>>     

There's plenty of instruction on the Web about linking stylesheets to 
RSS feeds. This for example:
http://mondaybynoon.com/2006/08/14/beginning-to-style-your-rss-feed/

But that doesn't relate to my question, which involved styling the 
WordPress feed(s).

I'd like to style my WordPress feed. Can I style the feed? How can I 
style the feed? Inline, you say? How can I add inline styles to my feed?

Here are the other key points of my message:

When it creates my feeds, WP grabs the images from my blog content and 
ignores the stylesheet, so I have images bumping up against text:
http://bit.ly/sBCvw

I've avoided this with my main feed by hand-coding the XML (replacing my 
styles with generic CSS) and sending it to FeedBurner:
http://bit.ly/atybz

Is there any way, other than to hand-style my feed, to get WP to create 
a feed where the text flows around the images?

Thanks.
From lists at rotorised.com  Tue Jun 16 07:53:50 2009
From: lists at rotorised.com (Ryan McCue)
Date: Tue Jun 16 07:54:16 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <4A374DCE.8070108@yahoo.com>
References: <4A36F705.6010302@yahoo.com>
	<4A373ECB.9070802@rotorised.com>	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
	<4A374DCE.8070108@yahoo.com>
Message-ID: <4A374F8E.60305@rotorised.com>

On 16/06/2009 5:46 PM, RePost wrote:
> There's plenty of instruction on the Web about linking stylesheets to 
> RSS feeds. This for example:
> http://mondaybynoon.com/2006/08/14/beginning-to-style-your-rss-feed/

That relates to the viewing of an XML file, such as in a browser, when 
you open the *actual XML file*, not when it's being aggregated (i.e. in 
a feed reader).

> I'd like to style my WordPress feed. Can I style the feed? How can I 
> style the feed? Inline, you say? How can I add inline styles to my feed?

You have to have the styles inline in the posts, which is why it doesn't 
work very well for WordPress. Theoretically, you could make a shortcode 
that would use classes on the site and inline the styles in the feeds.

-- 
Ryan McCue
<http://cubegames.net/>

From shane at bugssite.org  Tue Jun 16 09:12:03 2009
From: shane at bugssite.org (Shane A. Froebel)
Date: Tue Jun 16 09:12:21 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <EMEWEMEW2_DELIMl5F1uPa8e56dfb93c303e297f452,
	mikeschinkel@newclarity.net, 28803467.241245135384247.J>
References: <EMEWEMEW2_DELIMl5F1uPa8e56dfb93c303e297f452,
	mikeschinkel@newclarity.net, 28803467.241245135384247.J>
Message-ID: <4A3761E3.6030403@bugssite.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I got some good news. While I was reading all these messages I went
ahead (and watching ID4) I created a new "class":

WP_Dependency

This class with the proper registration of the plugin when it's read
will test to see if the theme or plugin will allow you to even activate
once it's tied into the WordPress main code.

I just finished the "class" and didn't tie it into any WordPress code
code. Just a test file.

The way I have it "coded" right now is that when the plugin is even
placed in WordPress it attaches itself to the 'register' part of the
class so it can say 'Hello. I am installed and these are my dependencies
based on version of WordPress and Plugins Needed and their versions for
me to work properly.'

I am working on one more feature that was suggested on the
#wordpress-dev channel. There be a field for 'recommended' for the
plugin dependencies. A little warning would show up only saying that you
should have at least this version, but not required. Let me know what
you think about this.

I'll post the sample code on my website (bugssite.org) in later in the day.

Your Friend,
Shane

Mike Schinkel wrote:
> "scribu" <scribu@gmail.com> wrote:
>> Yes, not using interfaces would would limit what could be done 
>> with their children, but on the other hand, interfaces would 
>> limit what child plugins could do themselves. 
> 
> How so?  I don't see it. 
> 
> Minimally (for the proposed use in WordPress) an "interface" is simply a name that parent and child agree to offer and to use.  It could be more than just a name but it would not have to be.
> 
>> It's the same tradeoff that would happen if normal plugins would 
>> have to have an interface that the core would have to check.
> 
> I think it would be the other way around, i.e. core would implement (an) interface(s) that plugins would use. BTW, that is what already happens implicitly anyway, so we are not loosing anything by formalizing into a name. 
> 
> Let me see if I can find time to work on some examples. I think you'll "see" it more readily with code.
> 
> -Mike Schinkel
> Custom Wordpress Plugins
> http://mikeschinkel.com/custom-wordpress-plugins
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQIcBAEBAgAGBQJKN2HiAAoJEChMcQvNqPqmDb8P/3mAOTqkP+ooaoQE28qbryXe
PhYXz7c5MMm4qN8XHT6rZ+vk1WkBTvs+N4snNMRcS4Qo2jIodnd7+7+drAfPi1vb
LYvvc0d+w4Bet6wL0xuXauBPJkvK3KvqFL0EWDOEdzBVnCpC//zwXm/XMxxzB7pC
gjzHiVI0h3Hcf6k7pLcOiM4RBCzjmx0aaD23gWHd6gWU7VTZ6KOKb5TfwkgZ6b4C
YCgf83oRqj5t16hCVu35rjjYdcr6NRJDq9udZAWNAJkKrRFMO8L+RVO0M/ofFJTa
o04bE0YrXlsg72cw6kgfWcirCOXNxTo+9pRQ4m3vXO7LkTbrTfkQvft7pWU1qh3D
oLY4Y7+nBDOBLRybRU6mCtPf9A9gzb0Csv+AFOQq1dLeWFEjMXKyhbTj13v0xmf5
pMFomLb59I/o3w4MP+dfV+RI4XW66ufjqwhIbJ4zKOnHbR3msIiAGxdsK7O0scXK
oE83QfcoDneET+iC6vf8XhETYnjwggDIxy/gswKLy9iPlTP6OUtb19ShHlVPUtes
r+Tu6aI4mYGajzk2GMG0X874f2O3d/WyFNc4Nsvab4hLq6wm7IPoDgnmmV3sWWqi
gfusmzHIQPH/pBtCEH0B1U+dMHktiy+vOEhQQLyw/tgfbkTQVP9IEr5JDgNT72Wo
VsIW8Nx28BTQDqmTuqZm
=82Yt
-----END PGP SIGNATURE-----
From if.website at gmail.com  Tue Jun 16 10:39:38 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue Jun 16 10:39:51 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <4A374DCE.8070108@yahoo.com>
References: <4A36F705.6010302@yahoo.com> <4A373ECB.9070802@rotorised.com>
	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
	<4A374DCE.8070108@yahoo.com>
Message-ID: <674b4a3b0906160339q13eec8b4idfc347700df22932@mail.gmail.com>

On Tue, Jun 16, 2009 at 2:46 AM, RePost <repost_08@yahoo.com> wrote:
> I'd like to style my WordPress feed. Can I style the feed? How can I style the feed? Inline, you say? How can I add inline styles to my feed?

You could make inline markup changes to your feed by conditionally
attaching a callback filter to "the_content", etc., whenever is_feed()
returns true:

if ( is_feed() ) {
   add_filter('the_content', 'my_rss_markup_replace');
}

[snip]

function my_rss_markup_replace($content = '')
{
   return preg_replace('#(<img[^>]*>)#', '<div
style="margin:10px;">$1</div>', $content);
}
From wp-hackers at striderweb.com  Tue Jun 16 12:46:52 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Tue Jun 16 12:47:21 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <EMEWEMEW2_DELIMl5EId39de76528be4d42160b6bf2,
	mikeschinkel@newclarity.net, 10677091.4751245109142602.J>
References: <EMEWEMEW2_DELIMl5EId39de76528be4d42160b6bf2,
	mikeschinkel@newclarity.net, 10677091.4751245109142602.J>
Message-ID: <5ABFA2AC-4F0C-46BE-8DB2-67030C9BF70B@striderweb.com>


On Jun 15, 2009, at 6:39 PM, Mike Schinkel wrote:

> As with discussion with Steven on the list, let me urge not to have  
> the child name its parent but instead have the child name the  
> "interface" that its parents can consume.  Steven called is "offers"  
> and "uses";

Just for the record, I wan't calling it anything, I was using the  
words as verbs.  ;-)  If we're going to find a terminology for it, I  
like the idea of an unambiguous metaphor for something that connects  
to something else:

plug/socket
button/buttonhole
Tab A/Slot B
toast/toaster  ;-)

I don't know what, exactly, but "interfaces" is too broad -- unless  
you know what it is, you don't know what it is.  If it's named  
properly authors can have an idea of how they work just from the name.

Stephen
From jayminkapish at inbox.com  Tue Jun 16 14:29:01 2009
From: jayminkapish at inbox.com (JAYMIN PATEL)
Date: Tue Jun 16 14:27:21 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <674b4a3b0906160339q13eec8b4idfc347700df22932@mail.gmail.com>
References: <4a373ecb.9070802@rotorised.com> <4a36f705.6010302@yahoo.com>
	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
	<4a374dce.8070108@yahoo.com>
Message-ID: <C62DF4C9D66.000000EBjayminkapish@inbox.com>

Can you separate images from your content?

if you can, you can put images in media:content or media:thumbnail.

Read more here..
http://video.search.yahoo.com/mrss

- JK

> -----Original Message-----
> From: if.website@gmail.com
> Sent: Tue, 16 Jun 2009 05:39:38 -0500
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Linking stylesheet to RSS feeds
> 
> On Tue, Jun 16, 2009 at 2:46 AM, RePost <repost_08@yahoo.com> wrote:
>> I'd like to style my WordPress feed. Can I style the feed? How can I
>> style the feed? Inline, you say? How can I add inline styles to my feed?
> 
> You could make inline markup changes to your feed by conditionally
> attaching a callback filter to "the_content", etc., whenever is_feed()
> returns true:
> 
> if ( is_feed() ) {
>    add_filter('the_content', 'my_rss_markup_replace');
> }
> 
> [snip]
> 
> function my_rss_markup_replace($content = '')
> {
>    return preg_replace('#(<img[^>]*>)#', '<div
> style="margin:10px;">$1</div>', $content);
> }
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

____________________________________________________________
FREE ONLINE PHOTOSHARING - Share your photos online with your friends and family!
Visit http://www.inbox.com/photosharing to find out more!
From shane at bugssite.org  Tue Jun 16 16:25:28 2009
From: shane at bugssite.org (Shane A. Froebel)
Date: Tue Jun 16 16:25:48 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906152127q3d57c2ear13640f4e85f5b50@mail.gmail.com>
References: <349fe48b0906150230m5428e4d3ta3027c45da1ae06c@mail.gmail.com>
	<-6011790855306719154@unknownmsgid>
	<349fe48b0906152127q3d57c2ear13640f4e85f5b50@mail.gmail.com>
Message-ID: <4A37C778.1080400@bugssite.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I put the class file on trac if anyone wants to take a look at it.

http://core.trac.wordpress.org/ticket/10190

Your Friend,
Shane

scribu wrote:
> Ok, now I get what you were trying to say with "Interfaces".
> 
> Yes, not using interfaces would would limit what could be done with
> their children, but on the other hand, interfaces would limit what
> child plugins could do themselves. It's a tradeoff.
> 
> It's the same tradeoff that would happen if normal plugins would have
> to have an interface that the core would have to check.
> 
> On 6/16/09, Mike Schinkel <mikeschinkel@newclarity.net> wrote:
>> "scribu" <scribu@gmail.com> wrote:
>>> One or more child plugins can use functionality provided by one
>>> parent plugin. Parent plugins are not aware of the additional
>>> functionality that each child plugin provides. That's the basic
>>> model.
>> As with discussion with Steven on the list, let me urge not to have the
>> child name its parent but instead have the child name the "interface" that
>> its parents can consume.  Steven called is "offers" and "uses"; most any
>> terms will work but coupling children directly to parents will really limit
>> what can be done with their children and IMO would be a mistake.
>>
>> -Mike Schinkel
>> Custom Wordpress Plugins
>> http://mikeschinkel.com/custom-wordpress-plugins
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> 
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQIcBAEBAgAGBQJKN8d4AAoJEChMcQvNqPqmT2sP/RPW7qSoVhv0aixFNl6DnPlN
RMvYLdDxLKG/Lh0Tjr/d4GZ39lth6K5AC9sXUgH4tIbRWJE4XSzl1PemjywuEm07
I8LIgLXuMcuB+iDAb3NiuMr32Vjfn1J3SgycOdfTPtbxpqxZchMaR31tLsYYFihk
+6o0QAfhIsvB9w9EsK2XSRUyI/sZ/CIZNbNyN2qIZ589Odw2r7XqyDCUtv+nbXCd
IxhHo24/gspjrLmLIuTzPcf2V0uVVGsydpJDBs7c0htnzYaY/JzzjrWqut9BERTV
8oom1rChv6cOTHIMXcCgpenlsc/5uENXvgK6a8onPdl38lSmCr5aMpq30jT+rhSD
u66KiXk6EQC2DWs4QXyeJYI9Lr39avEr/J1udLHR87KTIczuNgdmdL9+9lmvt+LI
Goil1c65oJNoMLTy74KD1OTO6c7ngBP3VyLfF1SxiYJcCLBTT3DGtW3yT7e6Q0GW
wxdRzmDy4Nihz6ZLukTC67bZpO0UB7JzlquOMgLQoeltfVg264w4Y6TB7KJEsz98
p0cc3Vo5x0tmhJFZuZ8OtEjZby9QDMrgHnoDg6C7F/C1NdHnQtve/4j4zz8w+6gE
9YaGwvX9DOgL3AUIJ5udIUaeYm+oRjkBRrTLoF+MYiUOp5JHTK/Ze9CkEEpXL4jL
FieqtBSiDIDm1NkLHV7G
=4dGN
-----END PGP SIGNATURE-----
From dougal at gunters.org  Tue Jun 16 17:47:07 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Tue Jun 16 17:47:24 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <33402CF1-D0C0-4F94-B9FB-D06124259FC4@gmail.com>
References: <EMEWEMEW2_DELIMl5E1S37b1ad08a23679a177ed9ed,
	mikeschinkel@newclarity.net, 26466521.4051245047283161.J>
	<33402CF1-D0C0-4F94-B9FB-D06124259FC4@gmail.com>
Message-ID: <4A37DA9B.4060003@gunters.org>

Casey Bisson wrote:
>
> A while ago I proposed a comments_meta table[1], and at WordCamp I was 
> introduced to bbPress' meta table architecture: rather than have meta 
> tables for different types of content, there's just one meta table 
> that includes an extra column describing what content type the ID 
> links to.
Ahhh, I had forgotten about that. That's a good suggestion. I've also 
pondered the lack of link- and comment- meta, and a unified metadata 
table, indexed by content type would be a good evolution, I think. It 
would also aid in the future migration towards more generic CMS 
capabilities in core WP, since it would be extensible for future data types.

> All of that said, have you considered adding these links as posts? 
> Putting content in the posts table gets you free tools to add tags and 
> other metadata, makes the content easier to search (no need for 
> plugins that scatter the searching to all those other tables), and 
> allows you to open up the links to comments and other social activity.

That's what I was about to suggest, too (I think). Or more specifically, 
I was going to suggest either adding metadata to the main post, with 
info about the child links (could connect by linkid), or even by using a 
child-post (more technically, an attachment) to house the extra data. 
This isn't as elegant as attaching the metadata directly to the links in 
some way, but is pragmatic in that it shouldn't be too hard to 
implement. Done right, you could even reference the same link (by its 
link ID) from different posts, but using different link metadata in each 
instance. I could probably think of some insteresting use-cases for that.

-- 
Dougal Campbell <dougal@gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/
From wp-hackers at striderweb.com  Tue Jun 16 22:02:27 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Tue Jun 16 22:02:44 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <4A3761E3.6030403@bugssite.org>
References: <EMEWEMEW2_DELIMl5F1uPa8e56dfb93c303e297f452,
	mikeschinkel@newclarity.net,
	28803467.241245135384247.J> <4A3761E3.6030403@bugssite.org>
Message-ID: <2EC17F70-FB5B-4CEF-A52D-CEE22EB824F8@striderweb.com>


On Jun 16, 2009, at 4:12 AM, Shane A. Froebel wrote:

> The way I have it "coded" right now is that when the plugin is even
> placed in WordPress it attaches itself to the 'register' part of the
> class so it can say 'Hello. I am installed and these are my  
> dependencies
> based on version of WordPress and Plugins Needed and their versions  
> for
> me to work properly.'


Certainly in the context of this thread, we have moved away from the  
idea of specifying plugin dependencies in favor of one plugin  
providing some sort of function that another plugin can look for.

Certainly within current WordPress plugins it is frowned upon to look  
for "WordPress version x.x"; instead coders are encouraged to look to  
see if a certain functionality exists.  This is because the latter is  
a more robust method.  For example I know that some people eliminate  
the WP Version string entirely for "security reasons" (aside: let's  
not get into arguments as to whether this is actually a security  
improvement!), but if a function exists, then it exists!

Mike Schinkel's argument is correct that even if I program a dependent  
plugin intending it to be used with "Plugin A", it might be entirely  
legitimate for someone to create "Plugin B" that can also use that  
"sub plugin".  This breaks if the sub plugin is checking for a  
specific "master"; but works just fine if the sub plugin says "I can  
do X for you" and the (any) master says "If any plugins can do X, do  
it now".

Stephen

-- 
Stephen Rider
http://striderweb.com/




From wp-hackers at striderweb.com  Tue Jun 16 22:09:45 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Tue Jun 16 22:10:02 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <EMEWEMEW2_DELIMl5E0iZ179bf523dcf99b54a277a3,
	mikeschinkel@newclarity.net, 1088882.3911245044675659.J>
References: <EMEWEMEW2_DELIMl5E0iZ179bf523dcf99b54a277a3,
	mikeschinkel@newclarity.net, 1088882.3911245044675659.J>
Message-ID: <BC995580-A0C1-4AD5-ABCC-0AC5C20ABE67@striderweb.com>


On Jun 15, 2009, at 12:44 AM, Mike Schinkel wrote:

> Dayum! I should have read ahead. I just wrote a ton and in this last  
> paragraph you essentially described interfaces.  So I deleted  
> everything that came before and am just sending this.

Heh.  Sorry about that.  I tried to warn you:

> You can read all of this for the discussion, or you may just choose  
> to jump to the bottom, where the rug gets yanked out from under....

Question for people who know more programming languages than I do:

Would it make sense to call these offered functions "services"?  Would  
this conflict with some other similar system that provides  
"services" (and uses that term)?

Stephen

-- 
Stephen Rider
http://striderweb.com/
From scribu at gmail.com  Tue Jun 16 23:20:30 2009
From: scribu at gmail.com (scribu)
Date: Tue Jun 16 23:20:49 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <2EC17F70-FB5B-4CEF-A52D-CEE22EB824F8@striderweb.com>
References: <4A3761E3.6030403@bugssite.org>
	<2EC17F70-FB5B-4CEF-A52D-CEE22EB824F8@striderweb.com>
Message-ID: <349fe48b0906161620n2061c295l1df44394aaae4be2@mail.gmail.com>

On 6/16/09, Stephen Rider <wp-hackers@striderweb.com> wrote:
>
> On Jun 16, 2009, at 4:12 AM, Shane A. Froebel wrote:
>
>> The way I have it "coded" right now is that when the plugin is even
>> placed in WordPress it attaches itself to the 'register' part of the
>> class so it can say 'Hello. I am installed and these are my
>> dependencies
>> based on version of WordPress and Plugins Needed and their versions
>> for
>> me to work properly.'
>
>
> Certainly in the context of this thread, we have moved away from the
> idea of specifying plugin dependencies in favor of one plugin
> providing some sort of function that another plugin can look for.
>
> Certainly within current WordPress plugins it is frowned upon to look
> for "WordPress version x.x"; instead coders are encouraged to look to
> see if a certain functionality exists.  This is because the latter is
> a more robust method.  For example I know that some people eliminate
> the WP Version string entirely for "security reasons" (aside: let's
> not get into arguments as to whether this is actually a security
> improvement!), but if a function exists, then it exists!
>
> Mike Schinkel's argument is correct that even if I program a dependent
> plugin intending it to be used with "Plugin A", it might be entirely
> legitimate for someone to create "Plugin B" that can also use that
> "sub plugin".  This breaks if the sub plugin is checking for a
> specific "master"; but works just fine if the sub plugin says "I can
> do X for you" and the (any) master says "If any plugins can do X, do
> it now".
>
> Stephen
>
> --
> Stephen Rider
> http://striderweb.com/


Now I finally get what Mike was trying to say about why to use
interfaces. (I think we should stick to this term)

-- 
http://scribu.net
From wp-hackers at striderweb.com  Tue Jun 16 23:44:51 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Tue Jun 16 23:45:17 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906161620n2061c295l1df44394aaae4be2@mail.gmail.com>
References: <4A3761E3.6030403@bugssite.org>
	<2EC17F70-FB5B-4CEF-A52D-CEE22EB824F8@striderweb.com>
	<349fe48b0906161620n2061c295l1df44394aaae4be2@mail.gmail.com>
Message-ID: <F2B994AB-8A10-451E-A527-D7CEC6FE2DF0@striderweb.com>


On Jun 16, 2009, at 6:20 PM, scribu wrote:

> On 6/16/09, Stephen Rider <wp-hackers@striderweb.com> wrote:
>>
>> Mike Schinkel's argument is correct that even if I program a  
>> dependent
>> plugin intending it to be used with "Plugin A", it might be entirely
>> legitimate for someone to create "Plugin B" that can also use that
>> "sub plugin".  This breaks if the sub plugin is checking for a
>> specific "master"; but works just fine if the sub plugin says "I can
>> do X for you" and the (any) master says "If any plugins can do X, do
>> it now".
>
> Now I finally get what Mike was trying to say about why to use
> interfaces. (I think we should stick to this term)

I'm not going to fight about the term.  "Interfaces" works.  :)

As I see it, everything needed to do this already exists within  
WordPress.  The sub-plugin can do a custom add_action, and the master  
plugins can do a do_action on the same hook.

Off the top of my head, an existing plugin that already does this is  
Ozh's Drop Down Menu plugin.  I'm sure there are others.  The Ozh menu  
plugin has action hooks for, among other things, adding a custom icon  
for a particular menu item.  Thus, another plugin can make itself  
compatible with the Ozh menu by having its own icon.

Ozh plugin:
http://planetozh.com/blog/my-projects/wordpress-admin-menu-drop-down-css/

API here:
http://planetozh.com/blog/my-projects/wordpress-admin-menu-drop-down-css/api-for-plugin-coders/


Stephen

-- 
Stephen Rider
http://striderweb.com/
From mikeschinkel at newclarity.net  Wed Jun 17 01:33:08 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jun 17 01:34:22 2009
Subject: [wp-hackers] LEFT JOIN in 2.7 to JOIN in 2.8; Why?
In-Reply-To: <751053.491245201904841.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5FKX8dbf9a3137c85f30b9c33d0,
	mikeschinkel@newclarity.net, 12337334.511245202095988.J>

Question: 

Does anyone know why the change was made in 2.8 on line 2141 of /wp-includes/query.php to this: 

$join .= " JOIN $wpdb->postmeta ON ($wpdb->posts.ID = $wpdb->postmeta.post_id) "; 

When in 2.7 on line 2136 of /wp-includes/query.php it was this? 

$join .= " LEFT JOIN $wpdb->postmeta ON ($wpdb->posts.ID = $wpdb->postmeta.post_id) "; 

I found it because it broke a plugin of mine where I was testing for 'LEFT JOIN ...' in the 'posts_join_paged' hook. 

I was able to fix my plugin by removing "LEFT " but I'm wondering: 

1.) Why was it changed in the first place? Was there a good reason that's non-obvious to me? If not it might break other's plugins for no good reason. 

2.) If no good reason can it be changed back? Testing for "LEFT JOIN ..." is more exact than testing or "JOIN ..."; or example there is a tiny chance I could match a "RIGHT JOIN ... " when I didn't intend to but not if I'm testing explicitly for "LEFT JOIN ..." 

Thanks in advance. 

-Mike Schinkel 
Custom Wordpress Plugins 
http://mikeschinkel.com/custom-wordpress-plugins 
From mikeschinkel at newclarity.net  Wed Jun 17 01:40:08 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jun 17 01:40:49 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <18901288.551245202243967.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5FKe91258f7ff91f5fbc7c16b5d,
	mikeschinkel@newclarity.net, 19474789.591245202809504.J>

"Dougal Campbell" <dougal@gunters.org> wrote:
> It would also aid in the future migration towards more generic 
> CMS capabilities in core WP, since it would be extensible for 
> future data types.

So is this something the community is ready to start moving toward, with 2.9?  Should we minimally add a wp_meta table to allow support for link, comments, and other meta even if we don't immediately migrate away from wp_postmeta and wp_usermeta?

> I was going to suggest either adding metadata to the main post, 
> with info about the child links (could connect by linkid), 

I *think* that's what I described as an option, i.e. in wp_postmeta a 'post_links' field that would store the comma-separated link_ids in a single string meta value. If that's not what you where thinking can you explain (in code?)

> or even by using a child-post (more technically, an attachment) to 
> house the extra data. 

Are you suggesting a post_type='attachment' or instead adding something like post_type='link'?
 
> This isn't as elegant as attaching the metadata directly to the 
> links in some way, 

Even with link metadata I still somehow need (to simulate) a linking table to associate the links with a post, hence the 'post_links' value in wp_postmeta.

> Done right, you could even reference the same link (by its 
link ID) from different posts, but using different link 
> metadata in each instance. I could probably think of some 
> interesting use-cases for that.

Now that's another level I didn't need for my use-case but it does make it more interesting. We could use the wp_postmeta values for the 'attachment/link' in wp_posts to give each link different metadata than the metadata for the link that would be shared by all.  It actually works well form a database perspective. Of course the "hitch" is building a good UI so an admin user can access all that power. :)


-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From if.website at gmail.com  Wed Jun 17 02:24:53 2009
From: if.website at gmail.com (Austin Matzko)
Date: Wed Jun 17 02:25:06 2009
Subject: [wp-hackers] LEFT JOIN in 2.7 to JOIN in 2.8; Why?
In-Reply-To: <-3613919526429666990@unknownmsgid>
References: <751053.491245201904841.JavaMail.DELL-1405$@Dell-1405>
	<-3613919526429666990@unknownmsgid>
Message-ID: <674b4a3b0906161924r7efe0ff0n281ea062d4353317@mail.gmail.com>

On Tue, Jun 16, 2009 at 8:33 PM, Mike Schinkel
<mikeschinkel@newclarity.net> wrote:
> Does anyone know why the change was made in 2.8 on line 2141 of /wp-includes/query.php to this:

According to this ticket, it was done for better performance:
http://core.trac.wordpress.org/ticket/9720

> 2.) If no good reason can it be changed back? Testing for "LEFT JOIN ..." is more exact than testing or "JOIN ..."; or example there is a tiny chance I could match a "RIGHT JOIN ... " when I didn't intend to but not if I'm testing explicitly for "LEFT JOIN ..."

You could use a negative lookbehind, which will match "LEFT JOIN" and
"JOIN", but not "RIGHT JOIN":

preg_match('/(?<!RIGHT )JOIN/', $text)
From mikeschinkel at newclarity.net  Wed Jun 17 04:11:00 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jun 17 04:12:01 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5FNB0a76ef5331273c482fb4031,
	mikeschinkel@newclarity.net, 22479620.1051245211859071.J>

"scribu" <scribu@gmail.com>
> Now I finally get what Mike was trying to say about 
> why to use interfaces. (I think we should stick to 
> this term)

Cool!

"Stephen Rider" <wp-hackers@striderweb.com> wrote:

> As I see it, everything needed to do this already exists 
> within WordPress.  The sub-plugin can do a custom add_action, 
> and the master plugins can do a do_action on the same hook.

Most of it already exists.  add_action()/do_action() allow for defacto definition of interfaces vs. named definition.

I've spend several hours working on a proof of concept this afternoon and come up with some approaches and some challenges. Before I dive in I want to explicitly state the principles I was following:

1.) As low impact on the owners of WordPress blog as possible - The should not need to know anything about said interfaces and they shouldn't have to do anything additional with respect to copying files besides what they currently have to do to install a plugin.

2.) Low cognitive load on plugin developers - Whatever is required should be fully optional except to gain features that currently are not available and when the optional features are used they should be as intuitively obvious for the average plugin developer as many (most?) plugin developers do not have computer science degrees and proficiency in many programming languages.

3.) Support Ad-Hoc Development - Make it as easy for ad-hoc plugin development as development of plugins that are hosted on WordPress.org extend.

Basically I've identified three (3) levels of interface support:

1.) Fully implicit (we already have this)
2.) Explicitly named and implicitly specified
3.) Explicitly named and explicitly specified

#2 is actually rather easy to tackle, and I propose that we tackle it via the plugin header because the plugin header is only parsed during activation and parsing doesn't require the plugin to actually be run through the PHP parser. Ignoring the exact terminology we would use for the moment I have taken the Akismet plugin as if it were a Parent/Master using the terms we've discussed in this thread and tried to apply the concepts (I've removed the "Description:" for clarity):

/*
Plugin Name: Akismet
Plugin URI: http://akismet.com/
Description: ...
Version: 2.2.4
Author: Matt Mullenweg
Author URI: http://ma.tt/
Uses: Akismet Interface 1.0
*/

I've named the interface that the Akismet plugin can use/consume "Akismet Interface" (which would be the default.) I'm thinking this name would imply the name "Akismet Dependent Plugin Interface." If it had two interfaces I might call them something like "Akismet Spam Interface 1.0" and  "Akismet Tab Interface 1.0." 

Back to the example; one or more plugins could "Implement" (or "Expose" or "Offer" or ...?) the "Akismet 1.0" Interface while Akisment and/or other plugins would be able to "Use"/"Consume" it. Note I versioned the interface; it think that will be important over time. Also note that it's not the same version # as the plugin itself; hopefully it is obvious why.

Akisment has a hook called 'akismet_spam_caught' that it runs after it find a comment that it considers spam. Here's an adhoc plugin I composed adhoc here in email (i.e. it's not tested.) It uses the header to state that it "Implements" "Akismet Interface 1.0":

/*
Plugin Name: My Akismet Spam Watcher
Description: Watchers Spam IP Addresses by Akismet
Version: 1.0
Author: Mike Schinkel
Author URI: http://mikeschinkel.com/
Implements: Akismet Interface 1.0
*/
add_action('akismet_spam_caught','my_akismet_spam_watcher');
function my_akismet_spam_watcher() {
  global $commentdata;
  $ip = $commentdata['comment_author_IP'];
  $options = get_option('my_akismet_spam_watcher');
  $options['ips'][$ip]= (isset($options['ips'][$ip])? $options['ips'][$ip]+1 : 1);
  if ($options['ips'][$ip]==3)
    @wp_mail($options['notify_email'], "3 Spam Strikes for IP $ip!");
  update_option('my_akismet_spam_watcher',$options);
}

With just this bit we could determine plugin load order after each activation and deactivation. Of course the definition of "Akismet Interface 1.0" is still implicit and thus murky, but its better than we had before.

Another consideration is that plugins should be able to both use and implement more than one interface, hence we should need multiple, I propose comma-separated:

/*
Implements Interface: Akismet 1.0, Foo 1.3, Bar 2.0
*/

The next step is to go to #3: Explicitly Named AND Explicitly Specified. I see great value in being able to do this but I'm sure it won't be immediately obvious to many why. I'll try to give examples here but if I were to be exhaustive it would take me all night and you'd probably never read it anyway. But first what is it that define an interface in WordPress? Well, it includes at least the following...

-- do_action()s
-- apply_filter()s
-- get_option()/update_option()
-- global variables defined
-- PHP Interfaces of pluggable functions
-- MySQL Tables added 
-- Fields added to MySQL Tables
-- Several other things I've yet to realize.

Note I did NOT include "add_action()" or "add_filter()" here. While you could view each of those individuallt as an Interface (and that too may make sense) I am viewing an Interface as a named collection of one or more hooks plus other stuff.  And while it might also make good sense to document the hooks a plugin consumes, the database tables and fields it touches, the global variables it accesses and modifies and so on I'm not going to address that in this email 

BTW, much of this information can actually be auto-generated by scanning source code. We can easily have a parser discover that 'foo_bar' is an action when "do_action('foo_bar')" is in the code but not when "do_action($hook)" is used instead.

What can having the information I described (optionally) provide us?

-- Allow us to do code coverage analysis for testing
-- Allow us to implement cleanup returns when plugins are deleted
-- Allow us to validate plugins on activation
-- Provide MUCH BETTER documentation for how to interface a plugin (and also WordPress core)
-- Allow us to move some of our specific code in our plugins to more generic code in the core (i.e. table creation, adding fields, etc.) 
-- Many other things I've forgotten at the moment, or yet to realize.

The problem with #3 is that the proposed WP_Interface is an independent entity from a plugin (just like a PHP interface is independent from the classes that implement it and the classes that use it) and as such needs to be defined independently from any given plugin lest we find ourselves in the paradox of the man with many watches (i.e. he never knows what time it is.) This leads me to think that the most appropriate solution would be a central registry online at wordpress.org (maybe http://interfaces.wordpress.org or similar.) BUT WAIT! DON'T BURN ME AT THE STAKE YET! :-)  Hear me out...
 
However, since most interfaces will only be consumed by one plugin that plugin should be able to define it in the plugin, something like this:

add_filter('plugin_interface_akismet_1.0','akismet_define_interface');
function akismet_define_interface($wp_interfaces) {
  $wp_interfaces['Akismet']['1.0'] = array(
    'actions'   => array(...),
    'filters'   => array(...),
    'options'   => array(...),
    'globals'   => array(...),
    'functions' => array(...),
    'tables'    => array(...),
    'fields'    => array(...),
    'other'     => array(...),
  );
  return $wp_interfaces;
}

For adhoc-defined interfaces, we could use a convention like interfaces that start with 'x-' are reserved for individual use. If they get hosted on Extend they need a registered interface.

But the problem again is what happens when two different plugins define the same interface differently? That's where the registry comes in. The function 'akismet_define_interface' would NEVER be called if it is defined in the registry, so plugin devs would be forced to ensure their definition would match the one in the registry (which is a good thing.) OTOH if a developer is developing locally with no Internet connection, or the registry web service was down, WP could fall back to the local definition.

Okay, that's enough for tonight. I'm exhausted. I need to see if any of this makes sense to the rest of you before I put any more thought into it.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

P.S. Another thought that occurs to me as I finish the email is what I now think Stephen was trying to say, i.e. that for a plugin with only one do_action() or one apply_filter() we can assume it defines the interface in a defacto manner and I think that would be a good idea. I think we also really do need to recognize that an interface is a collection of touch points, and rarely just one. 
From mikeschinkel at newclarity.net  Wed Jun 17 05:02:35 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jun 17 05:04:03 2009
Subject: [wp-hackers] LEFT JOIN in 2.7 to JOIN in 2.8; Why?
In-Reply-To: <21724082.1211245214350666.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5G02aa3d1b9dc886933e5192bee,
	mikeschinkel@newclarity.net, 30419119.1231245214959424.J>

"Austin Matzko" <if.website@gmail.com> wrote:
> According to this ticket, it was done for better performance:
> http://core.trac.wordpress.org/ticket/9720

Thanks for finding that.  OTOH, it looks like Ryan reverted it anyway because of other regression bugs: 

   http://core.trac.wordpress.org/ticket/9851

> You could use a negative lookbehind, which will match "LEFT JOIN" and "JOIN", but not "RIGHT JOIN":
> preg_match('/(?<!RIGHT )JOIN/', $text)

Thanks for that. I'm still not a regex whiz so unless it's obvious I don't think to use regex.
OTOH, isn't preg_match() significantly slower than strpos()?

Also, for future finders of this thread the follow is what you'd need in hook post_join_paged($join) - note the space after the closing paren, not before:

   preg_match('/(?<!RIGHT) JOIN/', $join)

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From wp at xentek.net  Wed Jun 17 05:39:25 2009
From: wp at xentek.net (Eric Marden)
Date: Wed Jun 17 05:39:45 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <2EC17F70-FB5B-4CEF-A52D-CEE22EB824F8@striderweb.com>
References: <EMEWEMEW2_DELIMl5F1uPa8e56dfb93c303e297f452,
	mikeschinkel@newclarity.net,
	28803467.241245135384247.J> <4A3761E3.6030403@bugssite.org>
	<2EC17F70-FB5B-4CEF-A52D-CEE22EB824F8@striderweb.com>
Message-ID: <9B78C15B-DA30-4CA2-B33D-7BE2B7BC88A4@xentek.net>

On Jun 16, 2009, at 6:02 PM, Stephen Rider wrote:

> Certainly in the context of this thread, we have moved away from the  
> idea of specifying plugin dependencies in favor of one plugin  
> providing some sort of function that another plugin can look for.
>
> Certainly within current WordPress plugins it is frowned upon to  
> look for "WordPress version x.x"; instead coders are encouraged to  
> look to see if a certain functionality exists.


Couldn't that just be a simple function_exists / method_exists call  
(in most cases)?


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/

From repost_08 at yahoo.com  Wed Jun 17 06:04:12 2009
From: repost_08 at yahoo.com (RePost)
Date: Wed Jun 17 06:05:10 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <674b4a3b0906160339q13eec8b4idfc347700df22932@mail.gmail.com>
References: <4A36F705.6010302@yahoo.com>
	<4A373ECB.9070802@rotorised.com>	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>	<4A374DCE.8070108@yahoo.com>
	<674b4a3b0906160339q13eec8b4idfc347700df22932@mail.gmail.com>
Message-ID: <4A38875C.70703@yahoo.com>

Austin Matzko wrote:
> On Tue, Jun 16, 2009 at 2:46 AM, RePost <repost_08@yahoo.com> wrote:
>   
>> I'd like to style my WordPress feed. Can I style the feed? How can I style the feed? Inline, you say? How can I add inline styles to my feed?
>>     
>
> You could make inline markup changes to your feed by conditionally
> attaching a callback filter to "the_content", etc., whenever is_feed()
> returns true:
>
> if ( is_feed() ) {
>    add_filter('the_content', 'my_rss_markup_replace');
> }
>
> [snip]
>
> function my_rss_markup_replace($content = '')
> {
>    return preg_replace('#(<img[^>]*>)#', '<div
> style="margin:10px;">$1</div>', $content);
> }
> _______________________________________________

Interesting idea, Austin. I'll knock it around.

For the time being, I'm going with custom feeds for the important stuff 
and will consider dialing back the lesser feeds from RSS2 to RSS. No 
problem with bumping graphics there, but no media enclosures, either.


From wp at xentek.net  Wed Jun 17 06:09:07 2009
From: wp at xentek.net (Eric Marden)
Date: Wed Jun 17 06:09:25 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
References: <4A36F705.6010302@yahoo.com> <4A373ECB.9070802@rotorised.com>
	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
Message-ID: <35C8666C-6C03-4C08-BC86-C2F3D77B52B2@xentek.net>

On Jun 16, 2009, at 2:47 AM, Frank Bueltge wrote:

> On Tue, Jun 16, 2009 at 8:42 AM, Ryan McCue<lists@rotorised.com>  
> wrote:
>> On 16/06/2009 11:36 AM, RePost wrote:
>>>
>>> Is there any way to link my stylesheet with WP's RSS feeds?
>>
>> How do you intend to "link" it? RSS feeds contain just the  
>> information, not
>> styling. The way RSS feeds with styling work is by using inline  
>> styling.
>
> +100 for this answer

You can use both CSS and XSL/T to style RSS (which is just XML),  
including linking external style sheets.

http://www.xefteri.com/articles/show.cfm?id=24
http://interglacial.com/~sburke/stuff/pretty_rss.html
http://www.oreillynet.com/pub/a/network/2005/07/01/rss.html



- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
From lynne.pope at gmail.com  Wed Jun 17 06:01:57 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Wed Jun 17 06:10:27 2009
Subject: [wp-hackers] LEFT JOIN in 2.7 to JOIN in 2.8; Why?
In-Reply-To: <5907958193570008733@unknownmsgid>
References: <21724082.1211245214350666.JavaMail.DELL-1405$@Dell-1405> 
	<5907958193570008733@unknownmsgid>
Message-ID: <427667db0906162301we85add4n82b74876ba56ea7@mail.gmail.com>

Thanks for posting this Mike. I had a similar problem and hadn't isolated
it.

My question (note - "question" not criticism) is why this wasn't in 2.8
final? The change was reverted on 25th May but this does not appear in RC1
or final. Just confused over the build process so would appreciate it if
anyone can explain please. Was this revision not committed to the trunk by
mistake?

Thanks.
Lynne
From joost at yoast.com  Wed Jun 17 06:27:43 2009
From: joost at yoast.com (Joost de Valk)
Date: Wed Jun 17 06:28:03 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <4A38875C.70703@yahoo.com>
References: <4A36F705.6010302@yahoo.com>	<4A373ECB.9070802@rotorised.com>	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>	<4A374DCE.8070108@yahoo.com>	<674b4a3b0906160339q13eec8b4idfc347700df22932@mail.gmail.com>
	<4A38875C.70703@yahoo.com>
Message-ID: <4A388CDF.6010804@yoast.com>

Disclaimer: I didn't follow this thread entirely, so sorry if I say 
something that's already been said.

Wouldn't it be cool if WordPress automatically replaced 
class="alignright" and "alignleft" etc with good inline CSS? That's 
always annoyed me a bit... Might make a plugin for that, since it's 
actually pretty darn easy to do, but still, shouldn't that be in core?

Best,
Joost

RePost wrote:
> Austin Matzko wrote:
>> On Tue, Jun 16, 2009 at 2:46 AM, RePost <repost_08@yahoo.com> wrote:
>>> I'd like to style my WordPress feed. Can I style the feed? How can I 
>>> style the feed? Inline, you say? How can I add inline styles to my 
>>> feed? 
>>
>> You could make inline markup changes to your feed by conditionally
>> attaching a callback filter to "the_content", etc., whenever is_feed()
>> returns true:
>>
>> if ( is_feed() ) {
>>    add_filter('the_content', 'my_rss_markup_replace');
>> }
>>
>> [snip]
>>
>> function my_rss_markup_replace($content = '')
>> {
>>    return preg_replace('#(<img[^>]*>)#', '<div
>> style="margin:10px;">$1</div>', $content);
>> }
>> _______________________________________________ 
>
> Interesting idea, Austin. I'll knock it around.
>
> For the time being, I'm going with custom feeds for the important 
> stuff and will consider dialing back the lesser feeds from RSS2 to 
> RSS. No problem with bumping graphics there, but no media enclosures, 
> either.
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

-- 
*Joost de Valk*
SEO & Web Development (Magento & WordPress)
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost@orangevalley.nl <mailto:joost@orangevalley.nl> - 
joost@yoast.com <mailto:joost@yoast.com>
T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
W: http://yoast.com/
From peter.westwood at ftwr.co.uk  Wed Jun 17 06:45:56 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Jun 17 06:47:56 2009
Subject: [wp-hackers] LEFT JOIN in 2.7 to JOIN in 2.8; Why?
In-Reply-To: <427667db0906162301we85add4n82b74876ba56ea7@mail.gmail.com>
References: <21724082.1211245214350666.JavaMail.DELL-1405$@Dell-1405>
	<5907958193570008733@unknownmsgid>
	<427667db0906162301we85add4n82b74876ba56ea7@mail.gmail.com>
Message-ID: <6144A136-DF39-4A19-9D46-E41E2C48F0F5@ftwr.co.uk>


On 17 Jun 2009, at 07:01, Lynne Pope wrote:

> Thanks for posting this Mike. I had a similar problem and hadn't  
> isolated
> it.
>
> My question (note - "question" not criticism) is why this wasn't in  
> 2.8
> final? The change was reverted on 25th May but this does not appear  
> in RC1
> or final. Just confused over the build process so would appreciate  
> it if
> anyone can explain please. Was this revision not committed to the  
> trunk by
> mistake?

Not sure what you mean here.

The original change in [11259] changed 4 instanced of LEFT JOIN to  
just JOIN.

On the 25th of May in [11452] one of the changes was reverted but the  
rest were kept.

The change that was reverted was because of the issue it caused with  
custom taxonomies - #9851

The packages that are made available for download are built from svn  
so this change would have been included.

Looking at the RC1 zipfile I can see this single LEFT JOIN in wp- 
includes/query.php:

			if ( $post_status_join ) {
				$join .= " LEFT JOIN $wpdb->posts AS p2 ON ($wpdb- 
 >posts.post_parent = p2.ID) ";
				foreach ( $statuswheres as $index => $statuswhere )
					$statuswheres[$index] = "($statuswhere OR ($wpdb- 
 >posts.post_status = 'inherit' AND " . str_replace($wpdb->posts,  
'p2', $statuswhere) . "))";
			}

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From peter.westwood at ftwr.co.uk  Wed Jun 17 07:06:01 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Jun 17 07:06:16 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <4A38875C.70703@yahoo.com>
References: <4A36F705.6010302@yahoo.com>
	<4A373ECB.9070802@rotorised.com>	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>	<4A374DCE.8070108@yahoo.com>
	<674b4a3b0906160339q13eec8b4idfc347700df22932@mail.gmail.com>
	<4A38875C.70703@yahoo.com>
Message-ID: <EF4D471F-67A9-4372-A145-04B0BEFAB9DF@ftwr.co.uk>


On 17 Jun 2009, at 07:04, RePost wrote:

> Austin Matzko wrote:
>> On Tue, Jun 16, 2009 at 2:46 AM, RePost <repost_08@yahoo.com> wrote:
>>
>>> I'd like to style my WordPress feed. Can I style the feed? How can  
>>> I style the feed? Inline, you say? How can I add inline styles to  
>>> my feed?
>>>
>>
>> You could make inline markup changes to your feed by conditionally
>> attaching a callback filter to "the_content", etc., whenever  
>> is_feed()
>> returns true:
>>
>> if ( is_feed() ) {
>>   add_filter('the_content', 'my_rss_markup_replace');
>> }
>>
>> [snip]
>>
>> function my_rss_markup_replace($content = '')
>> {
>>   return preg_replace('#(<img[^>]*>)#', '<div
>> style="margin:10px;">$1</div>', $content);
>> }
>> _______________________________________________
>

Looking quickly at that code I have a feeling it is safer to always  
add the filter and place the is_feed() check inside the function  
attached to the filter.

When the plugin file is included is_feed() will always return false as  
the query hasn't run yet.

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From lists at rotorised.com  Wed Jun 17 07:06:10 2009
From: lists at rotorised.com (Ryan McCue)
Date: Wed Jun 17 07:06:55 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <35C8666C-6C03-4C08-BC86-C2F3D77B52B2@xentek.net>
References: <4A36F705.6010302@yahoo.com>
	<4A373ECB.9070802@rotorised.com>	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
	<35C8666C-6C03-4C08-BC86-C2F3D77B52B2@xentek.net>
Message-ID: <4A3895E2.7070901@rotorised.com>

On 17/06/2009 4:09 PM, Eric Marden wrote:
> You can use both CSS and XSL/T to style RSS (which is just XML), 
> including linking external style sheets.

As I mentioned, this is only for viewing the feed in the browser, and it 
doesn't actually display on Firefox (or Safari, from memory), as they 
have their own XSLT styles. As far as I know, RePost wants to style it 
in an aggregator (feed reader).

-- 
Ryan McCue
<http://cubegames.net/>

From if.website at gmail.com  Wed Jun 17 07:13:50 2009
From: if.website at gmail.com (Austin Matzko)
Date: Wed Jun 17 07:14:03 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <EF4D471F-67A9-4372-A145-04B0BEFAB9DF@ftwr.co.uk>
References: <4A36F705.6010302@yahoo.com> <4A373ECB.9070802@rotorised.com>
	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
	<4A374DCE.8070108@yahoo.com>
	<674b4a3b0906160339q13eec8b4idfc347700df22932@mail.gmail.com>
	<4A38875C.70703@yahoo.com>
	<EF4D471F-67A9-4372-A145-04B0BEFAB9DF@ftwr.co.uk>
Message-ID: <674b4a3b0906170013v2689324exe756755536ca32f@mail.gmail.com>

On Wed, Jun 17, 2009 at 2:06 AM, Peter
Westwood<peter.westwood@ftwr.co.uk> wrote:
>> Austin Matzko wrote:
>>> if ( is_feed() ) {
>>> ?add_filter('the_content', 'my_rss_markup_replace');
>>> }
>>>
>>> [snip]
>>>
>>> function my_rss_markup_replace($content = '')
>>> {
>>> ?return preg_replace('#(<img[^>]*>)#', '<div
>>> style="margin:10px;">$1</div>', $content);
>>> }
>>> _______________________________________________
>>
>
> Looking quickly at that code I have a feeling it is safer to always add the
> filter and place the is_feed() check inside the function attached to the
> filter.
>
> When the plugin file is included is_feed() will always return false as the
> query hasn't run yet.

Yes, I am assuming a little knowledge of the WordPress action hook
API.  I didn't mean for anyone to copy and paste that straight into a
file (that's why the "[snip]").  The is_feed() block should be part of
a callback for the template_redirect hook.
From lynne.pope at gmail.com  Wed Jun 17 07:19:13 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Wed Jun 17 07:19:44 2009
Subject: [wp-hackers] LEFT JOIN in 2.7 to JOIN in 2.8; Why?
In-Reply-To: <6144A136-DF39-4A19-9D46-E41E2C48F0F5@ftwr.co.uk>
References: <21724082.1211245214350666.JavaMail.DELL-1405$@Dell-1405> 
	<5907958193570008733@unknownmsgid>
	<427667db0906162301we85add4n82b74876ba56ea7@mail.gmail.com> 
	<6144A136-DF39-4A19-9D46-E41E2C48F0F5@ftwr.co.uk>
Message-ID: <427667db0906170019qf936c88x988456fbd027c772@mail.gmail.com>

2009/6/17 Peter Westwood <peter.westwood@ftwr.co.uk>

>
>  The original change in [11259] changed 4 instanced of LEFT JOIN to just
> JOIN.
>
> On the 25th of May in [11452] one of the changes was reverted but the rest
> were kept.
>
> The change that was reverted was because of the issue it caused with custom
> taxonomies - #9851
>
> The packages that are made available for download are built from svn so
> this change would have been included.
>
> Looking at the RC1 zipfile I can see this single LEFT JOIN in
> wp-includes/query.php:
>
>                        if ( $post_status_join ) {
>                                $join .= " LEFT JOIN $wpdb->posts AS p2 ON
> ($wpdb->posts.post_parent = p2.ID) ";
>                                foreach ( $statuswheres as $index =>
> $statuswhere )
>                                        $statuswheres[$index] =
> "($statuswhere OR ($wpdb->posts.post_status = 'inherit' AND " .
> str_replace($wpdb->posts, 'p2', $statuswhere) . "))";
>                        }
>
>
Yep, you are completely right Westi - my bad (doing diffs on wrong lines -
doh!).
The LEFT JOIN has not been reverted in postmeta queries.

That's me back to the drawing board ;)

Cheers,
Lynne
From lynne.pope at gmail.com  Wed Jun 17 07:34:50 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Wed Jun 17 07:35:22 2009
Subject: Replacing class="alignright" etc Was: Re: [wp-hackers] Linking 
	stylesheet to RSS feeds
Message-ID: <427667db0906170034v77d2a7aic84ef8e0fd0d5441@mail.gmail.com>

2009/6/17 Joost de Valk <joost@yoast.com>

> Disclaimer: I didn't follow this thread entirely, so sorry if I say
> something that's already been said.
>
> Wouldn't it be cool if WordPress automatically replaced class="alignright"
> and "alignleft" etc with good inline CSS? That's always annoyed me a bit...
> Might make a plugin for that, since it's actually pretty darn easy to do,
> but still, shouldn't that be in core?
>
> Best,
> Joost
>

Nope, sorry, disagree. Having it simply as a class allows for easy
customisation. As it is, alignright and alignleft are styled differently for
global.css and RTL (where they get swapped around).

One day there will be loads of admin themes being developed by 3rd party
developers and they would end up having to hack the core to get rid of
inline styles ;)

Here's why...
Inline styles apply only to the element they are set on. They take
precedence over everything else in the cascade. Its impossible to style
pseudo-elements and -classes with inline styles and impossible to override
them in external CSS.
Added to this, the maintenance involved in any UI changes that rely on admin
themes would increase exponentially.

So, -100 for me on this one. If any change was to be made to alignright and
alignleft the only one I would like to see is a more semantic class name.

Lynne
From wp at xentek.net  Wed Jun 17 08:03:01 2009
From: wp at xentek.net (Eric Marden)
Date: Wed Jun 17 08:03:19 2009
Subject: Replacing class="alignright" etc Was: Re: [wp-hackers] Linking
	stylesheet to RSS feeds
In-Reply-To: <427667db0906170034v77d2a7aic84ef8e0fd0d5441@mail.gmail.com>
References: <427667db0906170034v77d2a7aic84ef8e0fd0d5441@mail.gmail.com>
Message-ID: <B747F916-D1F3-4DE6-8E29-62DF37116DE6@xentek.net>


On Jun 17, 2009, at 3:34 AM, Lynne Pope wrote:

> Inline styles apply only to the element they are set on. They take
> precedence over everything else in the cascade. Its impossible to  
> style
> pseudo-elements and -classes with inline styles and impossible to  
> override
> them in external CSS.

You can override them with the !important flag, but I wouldn't really  
recommend it unless required.

http://www.w3.org/TR/CSS2/cascade.html#important-rules


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/





From wp at xentek.net  Wed Jun 17 08:06:32 2009
From: wp at xentek.net (Eric Marden)
Date: Wed Jun 17 08:06:50 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <4A3895E2.7070901@rotorised.com>
References: <4A36F705.6010302@yahoo.com>
	<4A373ECB.9070802@rotorised.com>	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
	<35C8666C-6C03-4C08-BC86-C2F3D77B52B2@xentek.net>
	<4A3895E2.7070901@rotorised.com>
Message-ID: <8A92C1E3-5E28-4E2F-A139-24B26C73F9BE@xentek.net>


On Jun 17, 2009, at 3:06 AM, Ryan McCue wrote:

> On 17/06/2009 4:09 PM, Eric Marden wrote:
>> You can use both CSS and XSL/T to style RSS (which is just XML),  
>> including linking external style sheets.
>
> As I mentioned, this is only for viewing the feed in the browser,  
> and it doesn't actually display on Firefox (or Safari, from memory),  
> as they have their own XSLT styles. As far as I know, RePost wants  
> to style it in an aggregator (feed reader).

Most feed readers are browsers (or live there) and will display styles  
from external style sheets with out issue. The XSL/T may or may not be  
supported.

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/





From simon at sweetinteraction.com  Wed Jun 17 08:14:59 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Wed Jun 17 08:15:43 2009
Subject: Replacing class="alignright" etc Was: Re: [wp-hackers] Linking 
	stylesheet to RSS feeds
In-Reply-To: <B747F916-D1F3-4DE6-8E29-62DF37116DE6@xentek.net>
References: <427667db0906170034v77d2a7aic84ef8e0fd0d5441@mail.gmail.com> 
	<B747F916-D1F3-4DE6-8E29-62DF37116DE6@xentek.net>
Message-ID: <77c8b7bf0906170114i30bfdb22g65a8aae2b0688514@mail.gmail.com>

On Wed, Jun 17, 2009 at 9:03 AM, Eric Marden <wp@xentek.net> wrote:

>
> You can override them with the !important flag, but I wouldn't really
> recommend it unless required.
>
>
...and if you think it is required, think again just to check it actually
is. You might be better increasing the specificity of your rules [1].


Ugh, I had to style a plugin (which shall remain nameless) the other week
and it's built in CSS seemingly had !important at the end of every line,
which then infected my CSS (to override it I had to start adding !important
everywhere) and the whole thing ended up looking like a dogs breakfast.
</moaning>

S

[1] http://www.stuffandnonsense.co.uk/archives/css_specificity_wars.html

---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT
From scribu at gmail.com  Wed Jun 17 13:07:12 2009
From: scribu at gmail.com (scribu)
Date: Wed Jun 17 13:07:26 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <-8851448070486788814@unknownmsgid>
References: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
	<-8851448070486788814@unknownmsgid>
Message-ID: <349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>

On 6/17/09, Mike Schinkel <mikeschinkel@newclarity.net> wrote:
> But the problem again is what happens when two different plugins define the
> same interface differently? That's where the registry comes in. The function
> 'akismet_define_interface' would NEVER be called if it is defined in the
> registry, so plugin devs would be forced to ensure their definition would
> match the one in the registry (which is a good thing.) OTOH if a developer
> is developing locally with no Internet connection, or the registry web
> service was down, WP could fall back to the local definition.

For now, I'd just like to say that having to call a remote registry
for each plugin, on each page load, by default, is a *very* bad ideea.

-- 
http://scribu.net
From jayarjo at gmail.com  Wed Jun 17 13:42:27 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Wed Jun 17 13:42:46 2009
Subject: [wp-hackers] something wrong with wp_unique_filename()
Message-ID: <9aa12a490906170642q585b2389o80f277117e1e32a8@mail.gmail.com>

I was messing with wp_handle_upload()
(http://phpxref.com/xref/wordpress/wp-admin/includes/file.php.source.html#l207)
recently (trying to use it for my own uploads). It has a built-in
support for error generating and file naming operations override
(kinda twisted one). Or so it looks. Error reporting is ok. Unique
file name generation override seems wrong.

Here is the code:
http://phpxref.com/xref/wordpress/wp-includes/functions.php.source.html#l1883

Function takes optional argument - $unique_filename_callback, that
should point (if it is supplied) to the user-defined unique name
generating function. Now the problem is that default logic flow has
access to filename extension and callback doesn't. Hence it's
impossible to generate unique filename with proper extension manually.

Has anyone ever used this function?

--
David Barbakadze
From lynne.pope at gmail.com  Wed Jun 17 13:59:02 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Wed Jun 17 13:59:36 2009
Subject: Replacing class="alignright" etc Was: Re: [wp-hackers] Linking 
	stylesheet to RSS feeds
In-Reply-To: <B747F916-D1F3-4DE6-8E29-62DF37116DE6@xentek.net>
References: <427667db0906170034v77d2a7aic84ef8e0fd0d5441@mail.gmail.com> 
	<B747F916-D1F3-4DE6-8E29-62DF37116DE6@xentek.net>
Message-ID: <427667db0906170659y2a36acc1i26ec942bd82148ab@mail.gmail.com>

2009/6/17 Eric Marden <wp@xentek.net>

>
> On Jun 17, 2009, at 3:34 AM, Lynne Pope wrote:
>
>  Inline styles apply only to the element they are set on. They take
>> precedence over everything else in the cascade. Its impossible to style
>> pseudo-elements and -classes with inline styles and impossible to override
>> them in external CSS.
>>
>
> You can override them with the !important flag, but I wouldn't really
> recommend it unless required.
>
> http://www.w3.org/TR/CSS2/cascade.html#important-rules


True - I should have said, "impossible to do without messing a lot of other
things up" ;)

The !important modifier does indeed override inline styles - in browsers
that support it. IE6 doesn't and IE7 can't handle it if its used with
elements, eg, I routinely use :
#commentform input[type="submit"], #commentform input[type="reset"]{
styles
}
Any !important modifier used to target HTML elements is ignored by IE7.

Using the modifier also overrides user styles and browser styles, which can
have a serious impact on accessibility.

Like Simon, this is one of my pet peeves about plugins. I strip the CSS from
all plugins that I use and this often results in me having to hack the code,
just to get the plugin to work with my themes. Best practise should be NO
INLINE STYLING!

Lynne
From wp at xentek.net  Wed Jun 17 16:50:15 2009
From: wp at xentek.net (Eric Marden)
Date: Wed Jun 17 16:50:34 2009
Subject: Replacing class="alignright" etc Was: Re: [wp-hackers] Linking
	stylesheet to RSS feeds
In-Reply-To: <427667db0906170659y2a36acc1i26ec942bd82148ab@mail.gmail.com>
References: <427667db0906170034v77d2a7aic84ef8e0fd0d5441@mail.gmail.com>
	<B747F916-D1F3-4DE6-8E29-62DF37116DE6@xentek.net>
	<427667db0906170659y2a36acc1i26ec942bd82148ab@mail.gmail.com>
Message-ID: <983A6F49-80F4-4705-81FF-DCC60759A115@xentek.net>

On Jun 17, 2009, at 9:59 AM, Lynne Pope wrote:

> NO INLINE STYLING!
>
> Lynne

Amen to then.

- Eric Marden
__________________________________
http://xentek.net/code/wordpress/





From ryan at boren.nu  Wed Jun 17 17:01:48 2009
From: ryan at boren.nu (Ryan Boren)
Date: Wed Jun 17 17:02:03 2009
Subject: [wp-hackers] something wrong with wp_unique_filename()
In-Reply-To: <9aa12a490906170642q585b2389o80f277117e1e32a8@mail.gmail.com>
References: <9aa12a490906170642q585b2389o80f277117e1e32a8@mail.gmail.com>
Message-ID: <c8f37c930906171001p298ff783s869e7b56b6a50c41@mail.gmail.com>

On Wed, Jun 17, 2009 at 6:42 AM, Davit Barbakadze<jayarjo@gmail.com> wrote:
> I was messing with wp_handle_upload()
> (http://phpxref.com/xref/wordpress/wp-admin/includes/file.php.source.html#l207)
> recently (trying to use it for my own uploads). It has a built-in
> support for error generating and file naming operations override
> (kinda twisted one). Or so it looks. Error reporting is ok. Unique
> file name generation override seems wrong.
>
> Here is the code:
> http://phpxref.com/xref/wordpress/wp-includes/functions.php.source.html#l1883
>
> Function takes optional argument - $unique_filename_callback, that
> should point (if it is supplied) to the user-defined unique name
> generating function. Now the problem is that default logic flow has
> access to filename extension and callback doesn't. Hence it's
> impossible to generate unique filename with proper extension manually.
>
> Has anyone ever used this function?

I'm guessing not since that is definitely not useful behavior.  We can
try passing the extension as a third argument.
From shane at bugssite.org  Wed Jun 17 17:11:14 2009
From: shane at bugssite.org (Shane A. Froebel)
Date: Wed Jun 17 17:11:46 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
References: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
	<-8851448070486788814@unknownmsgid>
	<349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
Message-ID: <4A3923B2.2060904@bugssite.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

My API makes sure the correct versions are installed and also installed
before it gets activated.

I have a unit-test case file. I am starting the integration with the core.

scribu wrote:
> On 6/17/09, Mike Schinkel <mikeschinkel@newclarity.net> wrote:
>> But the problem again is what happens when two different plugins define the
>> same interface differently? That's where the registry comes in. The function
>> 'akismet_define_interface' would NEVER be called if it is defined in the
>> registry, so plugin devs would be forced to ensure their definition would
>> match the one in the registry (which is a good thing.) OTOH if a developer
>> is developing locally with no Internet connection, or the registry web
>> service was down, WP could fall back to the local definition.
> 
> For now, I'd just like to say that having to call a remote registry
> for each plugin, on each page load, by default, is a *very* bad ideea.
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQIcBAEBAgAGBQJKOSOyAAoJEChMcQvNqPqmezIQAJwJGctjX3lX5UqED1kleQnW
w/7xsURQvC7AtZdmOvy9qJX829qltT2+UYqtcEveZwui1aKLJ/SKABPJ9Hb8Z3NR
QknF9KcG3BiOGqOxn1uvm9+h7xm8FQ+VANvsZ6j9nP9QYSPJIlkcVKcg4nqr5tc7
rk07i81jqWXXTEQT+dPIZ0YMEVQxt3EuqlNhXDipF4B9xo+QvJ0WlzV160iDkkE3
yZWNP1VXxZhJMB1rJO9tgimYMpUtTU8X4IQ/qSvzoBmSdHSeH5tF+CXc504aSYxA
BBEXSgZ8w4Fi4mD5PmEK+ZZz3dSgyq6/OWrhEOe/O5QqRknE126c9KrCB5whJCiv
vmiDZfhLTGU8QoMBEsHHBlB+uxXIpes4PqyVHLbe3cSHsFfLS6NS5q9CIpD+XAPq
3bu2Xy0ncFipvVzcj7vtVGDwudJq2Au758vWzhzZz5LXf6F9BYWluTCFwyxQUqWC
d1zjRhWgBPeNGm91rDzk0Cdi+n+AmYeuk2chzgeWiatpQSs0t2i9j6u8Ex1ZoDc2
lXW1ui2LomhommKJaONSXCxQiFcHgDAJtWXv30DkIb3YdlSgYaepyVxcOA5r19i+
XwaRgA6d5AGD5WTFylM7ejKwqB1J1j35UNPMnhmFXsA0uCxbqV6B/qaXDXV85Nm+
kJECarIsS8NWZNalfIja
=c8Ed
-----END PGP SIGNATURE-----
From lynne.pope at gmail.com  Wed Jun 17 17:37:18 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Wed Jun 17 17:37:52 2009
Subject: [wp-hackers] Any issue with renaming _wp_unfiltered_html_comment?
Message-ID: <427667db0906171037x28dd4e31o512f7f7f5d449b40@mail.gmail.com>

Hi all,
Does anyone know of any issue that may be caused by renaming
_wp_unfiltered_html_comment in comment-template.php, admin-ajax.php and
wp-comments-post.php to  wp_unfiltered_html_comment (without the leading
underscore)?

Any plugins that rely on this?

This is in relation to http://core.trac.wordpress.org/ticket/5120, where the
do_action can output valid XHTML/HTML if the ID is valid. Currently, the XML
style ID, using a leading underscore breaks validation.

I personally couldn't care less about this as its a trivial matter but
fixing it would stop a lot of folk from complaining that their theme isn't
validating (even though it may validate if they are not logged in).

This issue has been around for a very long time and since it hasn't been
addressed previously, I guess that might be for some reason. Like breaking
things ;)

Anyone know if any plugins rely on this ID or of other issues that could
arise?

Lynne
From wp-hackers at striderweb.com  Wed Jun 17 17:53:45 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed Jun 17 18:28:59 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <9B78C15B-DA30-4CA2-B33D-7BE2B7BC88A4@xentek.net>
References: <EMEWEMEW2_DELIMl5F1uPa8e56dfb93c303e297f452,
	mikeschinkel@newclarity.net,
	28803467.241245135384247.J> <4A3761E3.6030403@bugssite.org>
	<2EC17F70-FB5B-4CEF-A52D-CEE22EB824F8@striderweb.com>
	<9B78C15B-DA30-4CA2-B33D-7BE2B7BC88A4@xentek.net>
Message-ID: <4B00F9A9-710D-4E42-A019-FEDD2E383CBD@striderweb.com>


On Jun 17, 2009, at 12:39 AM, Eric Marden wrote:

> On Jun 16, 2009, at 6:02 PM, Stephen Rider wrote:
>
>> Certainly within current WordPress plugins it is frowned upon to  
>> look for "WordPress version x.x"; instead coders are encouraged to  
>> look to see if a certain functionality exists.
>
> Couldn't that just be a simple function_exists / method_exists call  
> (in most cases)?

Yes, that is what I was referring to. :)  It's common practice in  
WordPress, but sometimes coders do still check against WP version....
From jer at simianuprising.com  Wed Jun 17 18:30:49 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed Jun 17 18:31:03 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <EF4D471F-67A9-4372-A145-04B0BEFAB9DF@ftwr.co.uk>
References: <4A36F705.6010302@yahoo.com> <4A373ECB.9070802@rotorised.com>
	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
	<4A374DCE.8070108@yahoo.com>
	<674b4a3b0906160339q13eec8b4idfc347700df22932@mail.gmail.com>
	<4A38875C.70703@yahoo.com>
	<EF4D471F-67A9-4372-A145-04B0BEFAB9DF@ftwr.co.uk>
Message-ID: <e1202cb10906171130m1137db21na152b0f05d2586bd@mail.gmail.com>

note: there is a filter for  'the_content_rss'

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org
From mikeschinkel at newclarity.net  Wed Jun 17 18:39:43 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jun 17 19:02:34 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
References: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
	<-8851448070486788814@unknownmsgid>
	<349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl5GDdde091b63a2f99d89d3b398e,
	mikeschinkel@newclarity.net, 89B5647C-3A7A-4656-8207>

On Jun 17, 2009, at 9:07 AM, scribu wrote:
> On 6/17/09, Mike Schinkel <mikeschinkel@newclarity.net> wrote:
>> But the problem again is what happens when two different plugins  
>> define the
>> same interface differently? That's where the registry comes in. The  
>> function
>> 'akismet_define_interface' would NEVER be called if it is defined  
>> in the
>> registry, so plugin devs would be forced to ensure their definition  
>> would
>> match the one in the registry (which is a good thing.) OTOH if a  
>> developer
>> is developing locally with no Internet connection, or the registry  
>> web
>> service was down, WP could fall back to the local definition.
>
> For now, I'd just like to say that having to call a remote registry
> for each plugin, on each page load, by default, is a *very* bad idea.

Agreed. But I was not proposing that. I was only proposing a call to a  
registry once upon plugin activation.

One call to a web service with a list of of plugins on activation that  
returns a list of registered interfaces is certainly not a legitimate  
performance concern for clients or for the server, right?

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/



From scribu at gmail.com  Wed Jun 17 19:03:41 2009
From: scribu at gmail.com (scribu)
Date: Wed Jun 17 19:04:03 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <e1202cb10906171130m1137db21na152b0f05d2586bd@mail.gmail.com>
References: <4A36F705.6010302@yahoo.com> <4A373ECB.9070802@rotorised.com>
	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
	<4A374DCE.8070108@yahoo.com>
	<674b4a3b0906160339q13eec8b4idfc347700df22932@mail.gmail.com>
	<4A38875C.70703@yahoo.com>
	<EF4D471F-67A9-4372-A145-04B0BEFAB9DF@ftwr.co.uk>
	<e1202cb10906171130m1137db21na152b0f05d2586bd@mail.gmail.com>
Message-ID: <349fe48b0906171203t5df954fs48dd94756e5ed085@mail.gmail.com>

the_content_rss will not be applied as you'd expect.

I know, because I've tried it for this exact reason: adding inline
styles to feeds.

On 6/17/09, Jeremy Clarke <jer@simianuprising.com> wrote:
> note: there is a filter for  'the_content_rss'
>
> --
> Jeremy Clarke | http://jeremyclarke.org
> Code and Design | http://globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://scribu.net
From mikeschinkel at newclarity.net  Wed Jun 17 19:02:32 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jun 17 19:04:23 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <4A3923B2.2060904@bugssite.org>
References: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
	<-8851448070486788814@unknownmsgid>
	<349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
	<4A3923B2.2060904@bugssite.org>
Message-ID: <EMEWEMEW2_DELIMl5GE2Y447938e4f1998c82e52e58,
	mikeschinkel@newclarity.net, A510C4FC-1AFE-4817-8077>

On Jun 17, 2009, at 1:11 PM, Shane A. Froebel wrote:
> My API makes sure the correct versions are installed and also  
> installed
> before it gets activated.
>
> I have a unit-test case file. I am starting the integration with the  
> core.

I didn't look at your WP_Dependency stuff at first because of comments  
from others that it wasn't the right way to do it.  I just looked at  
your PHP code and am confused by it as it seems you've got some  
generic code in there and also some plugin specific stuff for Contact  
Form 7?  Why the hardcoded info in something you wanted to integrate  
into core?  If it was an example it should have been external to your  
WP_Dependency code.

Ignoring my confusion it looks like WP_Dependency requires defining  
dependency relationships for plugin versions rather than defining  
explicitly named interfaces and determining dependencies based on  
those interfaces.  While in some cases the former may still be  
necessary I think we'd be adding to the problem by making things more  
fragile going the route of WP_Dependency.

JMTCW anyway.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/


From scribu at gmail.com  Wed Jun 17 19:12:11 2009
From: scribu at gmail.com (scribu)
Date: Wed Jun 17 19:12:26 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <-592463888035746185@unknownmsgid>
References: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
	<-8851448070486788814@unknownmsgid>
	<349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
	<-592463888035746185@unknownmsgid>
Message-ID: <349fe48b0906171212g48075a9fs410404d27e6960@mail.gmail.com>

On 6/17/09, Mike Schinkel <mikeschinkel@newclarity.net> wrote:
>> For now, I'd just like to say that having to call a remote registry
>> for each plugin, on each page load, by default, is a *very* bad idea.
>
> Agreed. But I was not proposing that. I was only proposing a call to a
> registry once upon plugin activation.
>
> One call to a web service with a list of of plugins on activation that
> returns a list of registered interfaces is certainly not a legitimate
> performance concern for clients or for the server, right?

Sorry, didn't catch the part about "once upon plugin activation".

About option nr. 3, I don't see the real benefit of explicitly
defining the interface.

I can already envision me defining an explicit interface, then I
update the plugin and subsequently forget to update the interface.

Also, we shouldn't put our hopes up for interfaces.wordpress.org.


--
http://scribu.net
From joost at yoast.com  Wed Jun 17 19:17:01 2009
From: joost at yoast.com (Joost de Valk)
Date: Wed Jun 17 19:17:18 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <349fe48b0906171203t5df954fs48dd94756e5ed085@mail.gmail.com>
References: <4A36F705.6010302@yahoo.com>
	<4A373ECB.9070802@rotorised.com>	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>	<4A374DCE.8070108@yahoo.com>	<674b4a3b0906160339q13eec8b4idfc347700df22932@mail.gmail.com>	<4A38875C.70703@yahoo.com>	<EF4D471F-67A9-4372-A145-04B0BEFAB9DF@ftwr.co.uk>	<e1202cb10906171130m1137db21na152b0f05d2586bd@mail.gmail.com>
	<349fe48b0906171203t5df954fs48dd94756e5ed085@mail.gmail.com>
Message-ID: <4A39412D.2040006@yoast.com>

Me too, been there done that, it works weirdly... (and there's no real 
need for it, the_content combined with is_feed does the job well)

scribu wrote:
> the_content_rss will not be applied as you'd expect.
>
> I know, because I've tried it for this exact reason: adding inline
> styles to feeds.
>
> On 6/17/09, Jeremy Clarke<jer@simianuprising.com>  wrote:
>    
>> note: there is a filter for  'the_content_rss'
>>
>> --
>> Jeremy Clarke | http://jeremyclarke.org
>> Code and Design | http://globalvoicesonline.org
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>      
>
>
>    

-- 
*Joost de Valk*
SEO & Web Development (Magento & WordPress)
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost@orangevalley.nl <mailto:joost@orangevalley.nl> - 
joost@yoast.com <mailto:joost@yoast.com>
T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
W: http://yoast.com/
From mikeschinkel at newclarity.net  Wed Jun 17 19:29:02 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jun 17 19:30:29 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906171212g48075a9fs410404d27e6960@mail.gmail.com>
References: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
	<-8851448070486788814@unknownmsgid>
	<349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
	<-592463888035746185@unknownmsgid>
	<349fe48b0906171212g48075a9fs410404d27e6960@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl5GESx5eebae5ca2c4c0f7170be6,
	mikeschinkel@newclarity.net, 78739E41-0877-4772-A27C>

On Jun 17, 2009, at 3:12 PM, scribu wrote:
>
> About option nr. 3, I don't see the real benefit of explicitly
> defining the interface.

Including, but not limited to:

-- Ability to validate during development that a plugin that  
implements an interface has done so correctly  
-- Ability to extract documentation for a plugin author (WordPress  
itself could define its interfaces) 
-- Ability for a developer to know explicitly what the other developer  
meant when he defined the interface
-- Ability to do explicit rather than implicit coupling [1]
-- Ability to do code coverage testing [2]
-- Ability to do (semi-)automated unit testing [3]
-- Ability for plugin developers to see, at-a-glance in a well-defined  
way, what the touch-points are for a plugin.

For example I'm currently using Thesis theme and it has 50+ hooks,  
numerous global variables, several options, etc.  If it defined those  
as interfaces I could easily see all that, and the documentation would  
be maintained during development, not created after.

Also, much (but not all) of the interface could be auto-generated via  
a tool the developer could use.

And I'm thinking the ability to do semi-automated unit testing should  
alone make for a reason to do this.

> I can already envision me defining an explicit interface, then I
> update the plugin and subsequently forget to update the interface.

That would only happen if you tested the site in deployment vs.  
development mode. If you tested in development mode it would tell you  
that you have a problem.

> Also, we shouldn't put our hopes up for interfaces.wordpress.org.


Agreed, but first things first.  We can do proof of concept at  
interfaces.yourormysite.com and then the benefits are likely to be  
obvious enough to get agreement.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/

[1] http://en.wikipedia.org/wiki/Coupling_(computer_science)
[2] http://en.wikipedia.org/wiki/Code_coverage
[3] http://en.wikipedia.org/wiki/Unit_testing

On Jun 17, 2009, at 3:12 PM, scribu wrote:

> On 6/17/09, Mike Schinkel <mikeschinkel@newclarity.net> wrote:
>>> For now, I'd just like to say that having to call a remote registry
>>> for each plugin, on each page load, by default, is a *very* bad  
>>> idea.
>>
>> Agreed. But I was not proposing that. I was only proposing a call  
>> to a
>> registry once upon plugin activation.
>>
>> One call to a web service with a list of of plugins on activation  
>> that
>> returns a list of registered interfaces is certainly not a legitimate
>> performance concern for clients or for the server, right?
>
> Sorry, didn't catch the part about "once upon plugin activation".
>
> About option nr. 3, I don't see the real benefit of explicitly
> defining the interface.
>
> I can already envision me defining an explicit interface, then I
> update the plugin and subsequently forget to update the interface.
>
> Also, we shouldn't put our hopes up for interfaces.wordpress.org.
>
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From scribu at gmail.com  Wed Jun 17 19:49:48 2009
From: scribu at gmail.com (scribu)
Date: Wed Jun 17 19:50:01 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <5009219131329731838@unknownmsgid>
References: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
	<-8851448070486788814@unknownmsgid>
	<349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
	<-592463888035746185@unknownmsgid>
	<349fe48b0906171212g48075a9fs410404d27e6960@mail.gmail.com>
	<5009219131329731838@unknownmsgid>
Message-ID: <349fe48b0906171249y18ff61cfj2582695b83145617@mail.gmail.com>

On 6/17/09, Mike Schinkel <mikeschinkel@newclarity.net> wrote:
> -- Ability to validate during development that a plugin that
> implements an interface has done so correctly
> -- Ability to extract documentation for a plugin author

How do you propose we achieve these two points? You said yourself that
lines like do_action("foo_$bar") would cause problems.

-- 
http://scribu.net
From mikeschinkel at newclarity.net  Wed Jun 17 23:02:01 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Wed Jun 17 23:04:34 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906171249y18ff61cfj2582695b83145617@mail.gmail.com>
References: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
	<-8851448070486788814@unknownmsgid>
	<349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
	<-592463888035746185@unknownmsgid>
	<349fe48b0906171212g48075a9fs410404d27e6960@mail.gmail.com>
	<5009219131329731838@unknownmsgid>
	<349fe48b0906171249y18ff61cfj2582695b83145617@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl5GI2201bf9ebcbe43af2d680aa9,
	mikeschinkel@newclarity.net, 5E859D4A-2F5F-41E8-8344>

On Jun 17, 2009, at 3:49 PM, scribu wrote:
> On 6/17/09, Mike Schinkel <mikeschinkel@newclarity.net> wrote:
>> -- Ability to validate during development that a plugin that
>> implements an interface has done so correctly
>> -- Ability to extract documentation for a plugin author
>
> How do you propose we achieve these two points? You said yourself that
> lines like do_action("foo_$bar") would cause problems.


Great questions!

To answer let me overview the process I'm envisioning using details  
that are fully open for collaborative improvement.

When a plugin is *activated* WP core would inspect its header to  
determine its interfaces and then retrieve its interfaces either via  
web service or as defined locally if the web service is unavailable  
and it would add the interfaces to a new global $wp_interfaces.  WP  
core would then crawl the interfaces and would order the plugins in  
dependency order for the 'active_plugins' option in the wp_options  
table. WP core would also serialize $wp_interfaces to the wp_options  
table.

When a URL is requested in "normal mode" the code at line 538 of wp- 
settings.php in v2.8 would use the 'active_plugins' option to load  
plugins as it currently does, but now in dependency order.

However, when a URL is requested in "development mode" the same code  
at line 538 of wp-settings.php in v2.8 would use the unserialized  
$wp_interfaces to validate the 'active_plugins' against their  
interfaces. I'm thinking this should only require one test of a global  
variable, maybe $wp_development_mode==true

In addition apply_filters() and do_action() would validate the  
dynamically defined hooks, but only when in development mode.   
Validation could also be cached so that the core wouldn't repeatedly  
validate the same thing to speed page load during development mode.  
apply_filters() and do_action() could even be made to be pluggable so  
that the test for development mode could be made only once, not each  
time thru the loops.

Development mode would be disabled by default but enabled in a new  
admin menu in the Settings area called (something like) "Developer  
Options" or "Deployment Options" or maybe just "Development" or  
"Deployment."  (This menu could also enable a move to support  
something I'd love to see: optionally different databases for  
development/test/staging/deployment ala Rails.)

For normal page loads this new system of interfaces would have also  
practically zero footprint and no unmeasurable performance impact.  It  
would only affect performance during plugin activation and when in  
"development mode."

As for documentation, that would be easy.  There could be a text link  
to a plugin/interfaces documentation page on the Developer Options  
menu page. That documentation page would simply format the information  
in $wp_interfaces for visual display to the end user.

Once again let me stress everything proposed is *optional*, and would  
only need be used by those who want add the additional support to  
their plugins. What's more it could also be architected in such a way  
that someone could add interface definitions for plugins that have not  
opted to include interface information in their theme allowing the  
WordPress developer full control over his site implementation.

Does this answer your concerns?

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/

From scribu at gmail.com  Wed Jun 17 23:37:06 2009
From: scribu at gmail.com (scribu)
Date: Wed Jun 17 23:37:21 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <-2432087642246143520@unknownmsgid>
References: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
	<-8851448070486788814@unknownmsgid>
	<349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
	<-592463888035746185@unknownmsgid>
	<349fe48b0906171212g48075a9fs410404d27e6960@mail.gmail.com>
	<5009219131329731838@unknownmsgid>
	<349fe48b0906171249y18ff61cfj2582695b83145617@mail.gmail.com>
	<-2432087642246143520@unknownmsgid>
Message-ID: <349fe48b0906171637k15996a37wf8d287f2c8b42b41@mail.gmail.com>

> Development mode would be disabled by default but enabled in a new admin menu in the Settings area called (something like) "Developer Options" or "Deployment Options" or maybe just "Development" or "Deployment."  (This menu could also enable a move to support something I'd love to see: optionally different databases for development/test/staging/deployment ala Rails.)

I think this would be more readily transformed into a new constant in
wp-config, like PLUGIN_DEBUG.

On 6/18/09, Mike Schinkel <mikeschinkel@newclarity.net> wrote:
> On Jun 17, 2009, at 3:49 PM, scribu wrote:
>> On 6/17/09, Mike Schinkel <mikeschinkel@newclarity.net> wrote:
>>> -- Ability to validate during development that a plugin that
>>> implements an interface has done so correctly
>>> -- Ability to extract documentation for a plugin author
>>
>> How do you propose we achieve these two points? You said yourself that
>> lines like do_action("foo_$bar") would cause problems.
>
>
> Great questions!
>
> To answer let me overview the process I'm envisioning using details
> that are fully open for collaborative improvement.
>
> When a plugin is *activated* WP core would inspect its header to
> determine its interfaces and then retrieve its interfaces either via
> web service or as defined locally if the web service is unavailable
> and it would add the interfaces to a new global $wp_interfaces.  WP
> core would then crawl the interfaces and would order the plugins in
> dependency order for the 'active_plugins' option in the wp_options
> table. WP core would also serialize $wp_interfaces to the wp_options
> table.
>
> When a URL is requested in "normal mode" the code at line 538 of wp-
> settings.php in v2.8 would use the 'active_plugins' option to load
> plugins as it currently does, but now in dependency order.
>
> However, when a URL is requested in "development mode" the same code
> at line 538 of wp-settings.php in v2.8 would use the unserialized
> $wp_interfaces to validate the 'active_plugins' against their
> interfaces. I'm thinking this should only require one test of a global
> variable, maybe $wp_development_mode==true
>
> In addition apply_filters() and do_action() would validate the
> dynamically defined hooks, but only when in development mode.
> Validation could also be cached so that the core wouldn't repeatedly
> validate the same thing to speed page load during development mode.
> apply_filters() and do_action() could even be made to be pluggable so
> that the test for development mode could be made only once, not each
> time thru the loops.
>
> Development mode would be disabled by default but enabled in a new
> admin menu in the Settings area called (something like) "Developer
> Options" or "Deployment Options" or maybe just "Development" or
> "Deployment."  (This menu could also enable a move to support
> something I'd love to see: optionally different databases for
> development/test/staging/deployment ala Rails.)
>
> For normal page loads this new system of interfaces would have also
> practically zero footprint and no unmeasurable performance impact.  It
> would only affect performance during plugin activation and when in
> "development mode."
>
> As for documentation, that would be easy.  There could be a text link
> to a plugin/interfaces documentation page on the Developer Options
> menu page. That documentation page would simply format the information
> in $wp_interfaces for visual display to the end user.
>
> Once again let me stress everything proposed is *optional*, and would
> only need be used by those who want add the additional support to
> their plugins. What's more it could also be architected in such a way
> that someone could add interface definitions for plugins that have not
> opted to include interface information in their theme allowing the
> WordPress developer full control over his site implementation.
>
> Does this answer your concerns?
>
> -Mike Schinkel
> WordPress Custom Plugins
> http://mikeschinkel.com/custom-wordpress-plugins/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://scribu.net
From repost_08 at yahoo.com  Thu Jun 18 00:56:41 2009
From: repost_08 at yahoo.com (RePost)
Date: Thu Jun 18 00:56:50 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <4A3895E2.7070901@rotorised.com>
References: <4A36F705.6010302@yahoo.com>	<4A373ECB.9070802@rotorised.com>	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>	<35C8666C-6C03-4C08-BC86-C2F3D77B52B2@xentek.net>
	<4A3895E2.7070901@rotorised.com>
Message-ID: <4A3990C9.2070605@yahoo.com>

Ryan McCue wrote:
> On 17/06/2009 4:09 PM, Eric Marden wrote:
>> You can use both CSS and XSL/T to style RSS (which is just XML), 
>> including linking external style sheets.
>
> As I mentioned, this is only for viewing the feed in the browser, and 
> it doesn't actually display on Firefox (or Safari, from memory), as 
> they have their own XSLT styles. As far as I know, RePost wants to 
> style it in an aggregator (feed reader).
>
I'm glad to see a real conversation develop here. Hope it has some 
impact on future iterations of the WP RSS2 feed.

I've never been happy with feed readers, but also never considered that 
my feed might display differently in feed readers vs. browsers. 
Hand-coding and FeedBurner seemed to take care of that problem. My 
concern has always been the way raw feeds look in the browser. And if 
the feed is picking up graphics from the content, it usually looks bad.

Curiously, I just styled and syndicated a Blogger feed for a client 
(using FeedBurner BuzzBoost) and, I don't know why, but the text flowed 
around the graphics in that feed, with no extra editing.

Great gaps clearly exist in my understanding of how feeds work. But my 
images are floated with such styles as "class=left;" and so on. If there 
were some way for WP to strip those styles and float images so 
everything looks nice and neat, I'd be happy. Or barring that, just 
strip the images and preserve the media enclosures!

From wp-hackers at striderweb.com  Thu Jun 18 02:21:00 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Jun 18 02:25:33 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <EMEWEMEW2_DELIMl5GI2201bf9ebcbe43af2d680aa9,
	mikeschinkel@newclarity.net, 5E859D4A-2F5F-41E8-8344>
References: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
	<-8851448070486788814@unknownmsgid>
	<349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
	<-592463888035746185@unknownmsgid>
	<349fe48b0906171212g48075a9fs410404d27e6960@mail.gmail.com>
	<5009219131329731838@unknownmsgid>
	<349fe48b0906171249y18ff61cfj2582695b83145617@mail.gmail.com>
	<EMEWEMEW2_DELIMl5GI2201bf9ebcbe43af2d680aa9,
	mikeschinkel@newclarity.net, 5E859D4A-2F5F-41E8-8344>
Message-ID: <B9E42660-0551-486D-A309-FA11F837E062@striderweb.com>


On Jun 17, 2009, at 6:02 PM, Mike Schinkel wrote:

> When a plugin is *activated* WP core would inspect its header to  
> determine its interfaces and then retrieve its interfaces either via  
> web service or as defined locally if the web service is unavailable  
> and it would add the interfaces to a new global $wp_interfaces.  WP  
> core would then crawl the interfaces and would order the plugins in  
> dependency order for the 'active_plugins' option in the wp_options  
> table. WP core would also serialize $wp_interfaces to the wp_options  
> table.

If this only happens when plugins are activated, how do you keep up  
with plugins being updated? Auto-update doesn't run the activate  
hooks, and plugins are also frequently updated via good ol' FTP,  
without being deactivated at all.  Thus, the plugins need to check  
their own interface versions and requirements on **each  
load** ...unless I'm missing something.

> Development mode would be[...] enabled in a new admin menu in the  
> Settings area[...].

Heh.  You must be new here. ;-p  As for a new setting in Admin:  
fuggedaboudit.

This will have to work with a new Constant placed in wp-config.php or  
something.

Stephen

-- 
Stephen Rider
http://striderweb.com/

From scribu at gmail.com  Thu Jun 18 02:25:39 2009
From: scribu at gmail.com (scribu)
Date: Thu Jun 18 02:29:09 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906171637k15996a37wf8d287f2c8b42b41@mail.gmail.com>
References: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
	<-8851448070486788814@unknownmsgid>
	<349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
	<-592463888035746185@unknownmsgid>
	<349fe48b0906171212g48075a9fs410404d27e6960@mail.gmail.com>
	<5009219131329731838@unknownmsgid>
	<349fe48b0906171249y18ff61cfj2582695b83145617@mail.gmail.com>
	<-2432087642246143520@unknownmsgid>
	<349fe48b0906171637k15996a37wf8d287f2c8b42b41@mail.gmail.com>
Message-ID: <349fe48b0906171925o1d88de7n725c7ca017ad2d77@mail.gmail.com>

About validating interfaces, it dawned on me that the simples way
would be to simply act like a consumer of that interface. For example:

define_interface('My Interface', '1.0', array(
  'constants' => array('FOO_CONST'),
  'classes' => array('foo_class', 'bar_class')
);

----------
// validating interface 'My Interface':

foreach ( $interface('classes') as $class )



On 6/18/09, scribu <scribu@gmail.com> wrote:
>> Development mode would be disabled by default but enabled in a new admin
>> menu in the Settings area called (something like) "Developer Options" or
>> "Deployment Options" or maybe just "Development" or "Deployment."  (This
>> menu could also enable a move to support something I'd love to see:
>> optionally different databases for development/test/staging/deployment ala
>> Rails.)
>
> I think this would be more readily transformed into a new constant in
> wp-config, like PLUGIN_DEBUG.
>
> On 6/18/09, Mike Schinkel <mikeschinkel@newclarity.net> wrote:
>> On Jun 17, 2009, at 3:49 PM, scribu wrote:
>>> On 6/17/09, Mike Schinkel <mikeschinkel@newclarity.net> wrote:
>>>> -- Ability to validate during development that a plugin that
>>>> implements an interface has done so correctly
>>>> -- Ability to extract documentation for a plugin author
>>>
>>> How do you propose we achieve these two points? You said yourself that
>>> lines like do_action("foo_$bar") would cause problems.
>>
>>
>> Great questions!
>>
>> To answer let me overview the process I'm envisioning using details
>> that are fully open for collaborative improvement.
>>
>> When a plugin is *activated* WP core would inspect its header to
>> determine its interfaces and then retrieve its interfaces either via
>> web service or as defined locally if the web service is unavailable
>> and it would add the interfaces to a new global $wp_interfaces.  WP
>> core would then crawl the interfaces and would order the plugins in
>> dependency order for the 'active_plugins' option in the wp_options
>> table. WP core would also serialize $wp_interfaces to the wp_options
>> table.
>>
>> When a URL is requested in "normal mode" the code at line 538 of wp-
>> settings.php in v2.8 would use the 'active_plugins' option to load
>> plugins as it currently does, but now in dependency order.
>>
>> However, when a URL is requested in "development mode" the same code
>> at line 538 of wp-settings.php in v2.8 would use the unserialized
>> $wp_interfaces to validate the 'active_plugins' against their
>> interfaces. I'm thinking this should only require one test of a global
>> variable, maybe $wp_development_mode==true
>>
>> In addition apply_filters() and do_action() would validate the
>> dynamically defined hooks, but only when in development mode.
>> Validation could also be cached so that the core wouldn't repeatedly
>> validate the same thing to speed page load during development mode.
>> apply_filters() and do_action() could even be made to be pluggable so
>> that the test for development mode could be made only once, not each
>> time thru the loops.
>>
>> Development mode would be disabled by default but enabled in a new
>> admin menu in the Settings area called (something like) "Developer
>> Options" or "Deployment Options" or maybe just "Development" or
>> "Deployment."  (This menu could also enable a move to support
>> something I'd love to see: optionally different databases for
>> development/test/staging/deployment ala Rails.)
>>
>> For normal page loads this new system of interfaces would have also
>> practically zero footprint and no unmeasurable performance impact.  It
>> would only affect performance during plugin activation and when in
>> "development mode."
>>
>> As for documentation, that would be easy.  There could be a text link
>> to a plugin/interfaces documentation page on the Developer Options
>> menu page. That documentation page would simply format the information
>> in $wp_interfaces for visual display to the end user.
>>
>> Once again let me stress everything proposed is *optional*, and would
>> only need be used by those who want add the additional support to
>> their plugins. What's more it could also be architected in such a way
>> that someone could add interface definitions for plugins that have not
>> opted to include interface information in their theme allowing the
>> WordPress developer full control over his site implementation.
>>
>> Does this answer your concerns?
>>
>> -Mike Schinkel
>> WordPress Custom Plugins
>> http://mikeschinkel.com/custom-wordpress-plugins/
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
> --
> http://scribu.net
>


-- 
http://scribu.net
From scribu at gmail.com  Thu Jun 18 02:29:17 2009
From: scribu at gmail.com (scribu)
Date: Thu Jun 18 02:29:38 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906171925o1d88de7n725c7ca017ad2d77@mail.gmail.com>
References: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
	<-8851448070486788814@unknownmsgid>
	<349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
	<-592463888035746185@unknownmsgid>
	<349fe48b0906171212g48075a9fs410404d27e6960@mail.gmail.com>
	<5009219131329731838@unknownmsgid>
	<349fe48b0906171249y18ff61cfj2582695b83145617@mail.gmail.com>
	<-2432087642246143520@unknownmsgid>
	<349fe48b0906171637k15996a37wf8d287f2c8b42b41@mail.gmail.com>
	<349fe48b0906171925o1d88de7n725c7ca017ad2d77@mail.gmail.com>
Message-ID: <349fe48b0906171929i4b0b926cw68c58e90f3e97128@mail.gmail.com>

[--Don't know what happend to my message above--]

About validating interfaces, it just dawned on me that the safest way
would be to simply act like a consumer of that interface. For example:

define_interface('My Interface', '1.0', array(
 'constants' => array('FOO_CONST'),
 'classes' => array('foo_class', 'bar_class')
);

----------

// validating interface 'My Interface':

foreach ( $interface('classes') as $class )
  if ( ! class_exisits($class) )
    return;  // interface not implemented properly

and so on for globals, functions etc.

Not sure about dynamic actions and hooks. Maybe defining them with
wildcards? 'my_filter_*'.


Another benefit of using interfaces would be that name collisions
would be easier to identify.

-- 
http://scribu.net
From speedboxer at gmail.com  Thu Jun 18 03:41:54 2009
From: speedboxer at gmail.com (Matt Freedman)
Date: Thu Jun 18 03:42:30 2009
Subject: Replacing class="alignright" etc Was: Re: [wp-hackers] Linking 
	stylesheet to RSS feeds
In-Reply-To: <427667db0906170034v77d2a7aic84ef8e0fd0d5441@mail.gmail.com>
References: <427667db0906170034v77d2a7aic84ef8e0fd0d5441@mail.gmail.com>
Message-ID: <b88434820906172041r1719431dn91c9db4d1c1d32df@mail.gmail.com>

On Wed, Jun 17, 2009 at 12:34 AM, Lynne Pope <lynne.pope@gmail.com> wrote:
> Nope, sorry, disagree. Having it simply as a class allows for easy
> customisation. As it is, alignright and alignleft are styled differently for
> global.css and RTL (where they get swapped around).


I think he meant replace them just in the feeds, so they'll display
correctly in feed readers.


--
Matt Freedman
http://mattfreedman.ca/
From jayarjo at gmail.com  Thu Jun 18 05:30:53 2009
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Thu Jun 18 05:31:08 2009
Subject: [wp-hackers] something wrong with wp_unique_filename()
In-Reply-To: <c8f37c930906171001p298ff783s869e7b56b6a50c41@mail.gmail.com>
References: <9aa12a490906170642q585b2389o80f277117e1e32a8@mail.gmail.com>
	<c8f37c930906171001p298ff783s869e7b56b6a50c41@mail.gmail.com>
Message-ID: <9aa12a490906172230n6a2b4203o837965855623dc34@mail.gmail.com>

Ryan, that would be helpful.

On Wed, Jun 17, 2009 at 9:01 PM, Ryan Boren <ryan@boren.nu> wrote:

> On Wed, Jun 17, 2009 at 6:42 AM, Davit Barbakadze<jayarjo@gmail.com>
> wrote:
> > I was messing with wp_handle_upload()
> > (
> http://phpxref.com/xref/wordpress/wp-admin/includes/file.php.source.html#l207
> )
> > recently (trying to use it for my own uploads). It has a built-in
> > support for error generating and file naming operations override
> > (kinda twisted one). Or so it looks. Error reporting is ok. Unique
> > file name generation override seems wrong.
> >
> > Here is the code:
> >
> http://phpxref.com/xref/wordpress/wp-includes/functions.php.source.html#l1883
> >
> > Function takes optional argument - $unique_filename_callback, that
> > should point (if it is supplied) to the user-defined unique name
> > generating function. Now the problem is that default logic flow has
> > access to filename extension and callback doesn't. Hence it's
> > impossible to generate unique filename with proper extension manually.
> >
> > Has anyone ever used this function?
>
> I'm guessing not since that is definitely not useful behavior.  We can
> try passing the extension as a third argument.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
David Barbakadze
From shane at bugssite.org  Thu Jun 18 05:33:01 2009
From: shane at bugssite.org (Shane A. Froebel)
Date: Thu Jun 18 05:33:31 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <349fe48b0906171929i4b0b926cw68c58e90f3e97128@mail.gmail.com>
References: <15696415.1031245211507055.JavaMail.DELL-1405$@Dell-1405>
	<-8851448070486788814@unknownmsgid>
	<349fe48b0906170607k7abd374r7fe2ec33bcb6ec33@mail.gmail.com>
	<-592463888035746185@unknownmsgid>
	<349fe48b0906171212g48075a9fs410404d27e6960@mail.gmail.com>
	<5009219131329731838@unknownmsgid>
	<349fe48b0906171249y18ff61cfj2582695b83145617@mail.gmail.com>
	<-2432087642246143520@unknownmsgid>
	<349fe48b0906171637k15996a37wf8d287f2c8b42b41@mail.gmail.com>
	<349fe48b0906171925o1d88de7n725c7ca017ad2d77@mail.gmail.com>
	<349fe48b0906171929i4b0b926cw68c58e90f3e97128@mail.gmail.com>
Message-ID: <4A39D18D.3000107@bugssite.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I see a few problems with a few of examples given here and I will revise
on how my Class API works. (I have a hard-coded array right now... but I
will explain that in this email.)

1) function_exists or extension_loaded is fine and all, but I see if the
function exists in two different versions and it does TWO different
things, it would be important for the author of the plugin/theme to
define the plugin version that it was tested on. That way the result
would be the exactly the way it was.

2) Using wordpress.org would only be usefull for the current version on
the site that could be downloaded.

My code doesn't have this in yet. This is just a first draft of it
posted. I plan on posting the newest version on Saturday.

Installed
- ---------
Plugin A v1.0 - Requires Plugin C v2.0+
Theme A v0.4 - Recommended Optionial Plugin B v2.5.2+, Optional B v2.3.4+
Theme B v0.5.2 - No requirements.
Plugin B v2.3.4 - No requirements. (Upgrade v2.5.2 exists)
Plugin C v1.0 - No requirements. (Upgrade v2.0 exists)


For plugin A to work, the class in theroy would not allow plugin A to be
activated. Instead it would say "under the plugin" Plugin C needs to be
upgraded to the current version. *This could be where the check on
WP.org comes in handy. Plugin A also requires Plugin C to be activated
for it to work. Current moment Plugin C is activated because it has no
requirements.

New Status
- -----------
Plugin A - Not Active
Plugin C - Active (Upgrade v2.0 Exists)

***

Theme A can be activated due to the fact it says it doesn't need Plugin
B. If it's needed for full use it asks that it be at least 2.3.4 but
recommended that it use 2.5.2+.

New Status
- -----------
Theme A can be turned on.

Now Theme A has an update and it now has in it's settings (put into a
serialized array inside the options/meta table that it requires Plugin B
AND Plugin C at their most current versions.


That's just a sample example of what we can do. Theme's could have a
check inside their code checks to see if a version exists. But I don't
think that would be needed. The class could even activate plugins
forcefully if they are required to run, though a setting could override
this.


Off to bed....
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQIcBAEBAgAGBQJKOdGNAAoJEChMcQvNqPqmiGIQAMieDPKKaWm1GSpOApgoPlXr
TD70saLYsvSOm1ne4vMiAv4lYVHXsG1zDy+laea4A3nZTKhzoiwdyvl+tPu9Pg/t
3wuqBubaVserNoILPH8pJ1Tg+5kboMFHJ68Coat41wIbWjmNqQawFfgJkl+D27Hj
B1aZhgbYNVh11d3eGqQnLcBe3NADZm4fZg5iLKIssm2NaAivwWA2HWukxDvNQBct
hDOYOd4TwzDSJUvMbVykAjmM8w88fkJlbu/iGTz7/f2o4MTBSF7sLPvDl8FNY1OP
EutWFmnoV+3mxNoFG6GHawfWYRGGQYj7q90ajkQBNEx1L0tb0FCPg7paCq37EJUu
xwEYmO+P3edAaoKr9A3qnpBzQEg84Jbw+I2DYw3rQ6+kb7jjSJ34wzW57WKzJq5G
rc90B4wbWfdfBpvfPBvOQYyyZOmcLFHdpxnzl5CnC/DcOmbGO+qQCCijPzJrPszY
tCDUwkuIBVt7abTM0cKbJjiuN06eH/Tid7h/JDUUV7H+isPtgGG5Fd9VvzlBgMFc
Zn74WLgh1x6f3I6feXoLM5pcaOGQRltYcMo8Uq5e6/ggIhR4CEbcj5lJvLsuBaY6
JLiVx5oFi3MHCMV2gohKqHtaQzpQyt0f++chK+/2cErIjvZqmaSc6b02XuqsQrFR
C5od2m8wc8zDgf4iOQ9d
=NrDQ
-----END PGP SIGNATURE-----
From mikeschinkel at newclarity.net  Thu Jun 18 06:22:02 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jun 18 06:22:39 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <4A39D18D.3000107@bugssite.org>
Message-ID: <EMEWEMEW2_DELIMl5H1M332cd1b5878e7b80d2dac36,
	mikeschinkel@newclarity.net, 12483918.1811245306123411.J>

"Shane A. Froebel" <shane@bugssite.org> wrote:
> 1) function_exists or extension_loaded is fine and all, but I see 
> if the function exists in two different versions and it does TWO 
> different things, it would be important for the author of the 
> plugin/theme to define the plugin version that it was tested on. 
> That way the result would be the exactly the way it was.

Agreed, which is where the concept of "interfaces" come in. Interfaces are more granular than plugins and their existence will result in greater reuse of plugins and their lower level functionality, if experience from other languages and platforms holds true which I see no evidence to believe it won't.

If you are not familiar with interfaces think of them as I've proposed for WordPress as "named hook sets" that would encompass not only functions but also actions, filters, constants, globals, tables, fields, and probably more.  

By default and w/o an explicit definition a plugin's interface & version would be equal to the plugin's name & version. OTOH, if explicitly defined a plugin could maintain a versioned interface across many plugin versions but more importantly if could both use and implement more than one interface. =

> 2) Using wordpress.org would only be useful for the current 
> version on the site that could be downloaded.

In earlier emails on this thread we discussed how interfaces could be managed on wordpress.org with a fallback to interfaces defined locally in a plugin which fully addresses this issue. If you read back through this entire thread you can to see the direction we were headed. Without speaking for them I believe scribu and Stephen were appreciating this direction. 

All in all I think the concepts you are working on are mostly a subset of the interfaces proposal and value would come from merging to two efforts.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From daiv at daivmowbray.com  Thu Jun 18 09:49:24 2009
From: daiv at daivmowbray.com (Daiv Mowbray)
Date: Thu Jun 18 09:49:38 2009
Subject: [wp-hackers] How do you get jQuery tabs working in Wordpress 2.8?
In-Reply-To: <ee3949160905280355g61b853f9x4d8df4e4c06b0564@mail.gmail.com>
References: <ee3949160905280355g61b853f9x4d8df4e4c06b0564@mail.gmail.com>
Message-ID: <096D456E-949E-42A0-8206-0D2036F24B60@daivmowbray.com>

Hello,
I have the same problem,
works fine in 2.7 but 2.8 tabs are failing.
The previously made suggestions haven't worked for me.

I am using the following :

function init_my_script() {
		jQuery(document).ready( function() {
			create_ui_tabs();
		} );
}
function create_ui_tabs() {
		jQuery('#mytabsnav').tabs({ fxFade: true, fxSpeed: 'fast' });
}

init_my_script();

The above script actually loads into mid body.

The jquery-ui-tabs script is loading into the footer;
<script type='text/javascript' src='http://localhost/wordpress_2.8/wp-admin/load-scripts.php?c=1&amp;load=hoverIntent,common,jquery-color,jquery-ui-core,jquery-ui-tabs&amp;ver=cf44a8aa087bf74bbcc19532e4707902' 
 ></script>


Thank for any pointers.


On May 28, 2009, at 12:55 PM, Mark Cunningham wrote:

> I've been doing some testing of my plugin on Wordpress 2.8 beta 2. I
> am using the Wordpress built-in jQuery and jQuery tabs to generate
> tabbed interface to my plugins options. But on the upgrade to 2.8, the
> tabs no longer work any more. I've checked documentation for jQuery
> tabs, and I don't appear to be doing anything wrong. Has anyone else
> got jQuery tabs working on Wordpress 2.8?


----------
Daiv Mowbray
daiv@daivmowbray.com
-----------------------------




From ozh at planetozh.com  Thu Jun 18 11:19:35 2009
From: ozh at planetozh.com (Ozh)
Date: Thu Jun 18 11:20:07 2009
Subject: [wp-hackers] How do you get jQuery tabs working in Wordpress 2.8?
In-Reply-To: <096D456E-949E-42A0-8206-0D2036F24B60@daivmowbray.com>
Message-ID: <OF104BC5C9.E1FFAE21-ONC12575D9.003E19E8-C12575D9.003E3806@notes.edfgdf.fr>

> 
> init_my_script();
> 

jQuery(document).ready(function(){
        init_my_script();
});
might change if the error is because you're firing the init before 
jquery-tabs have loaded (they're in the footer now, remember)

Ozh

From lynne.pope at gmail.com  Thu Jun 18 13:26:22 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu Jun 18 13:26:55 2009
Subject: Replacing class="alignright" etc Was: Re: [wp-hackers] Linking 
	stylesheet to RSS feeds
In-Reply-To: <b88434820906172041r1719431dn91c9db4d1c1d32df@mail.gmail.com>
References: <427667db0906170034v77d2a7aic84ef8e0fd0d5441@mail.gmail.com> 
	<b88434820906172041r1719431dn91c9db4d1c1d32df@mail.gmail.com>
Message-ID: <427667db0906180626h1fbf7d86s6c97ec0e6b5a2ddb@mail.gmail.com>

2009/6/18 Matt Freedman <speedboxer@gmail.com>

> On Wed, Jun 17, 2009 at 12:34 AM, Lynne Pope <lynne.pope@gmail.com> wrote:
> > Nope, sorry, disagree. Having it simply as a class allows for easy
> > customisation. As it is, alignright and alignleft are styled differently
> for
> > global.css and RTL (where they get swapped around).
>
>
> I think he meant replace them just in the feeds, so they'll display
> correctly in feed readers.


The same argument applies - inline styles override user styles.User styles
in this case being the uniform UA implemented by feed aggregators as well as
the end user who may have styled their own reader experience.

Lynne
From dylankkuhn at gmail.com  Thu Jun 18 13:28:27 2009
From: dylankkuhn at gmail.com (Dylan Kuhn)
Date: Thu Jun 18 13:29:58 2009
Subject: [wp-hackers] How do you get jQuery tabs working in Wordpress 2.8?
In-Reply-To: <OF104BC5C9.E1FFAE21-ONC12575D9.003E19E8-C12575D9.003E3806@notes.edfgdf.fr>
References: <096D456E-949E-42A0-8206-0D2036F24B60@daivmowbray.com> 
	<OF104BC5C9.E1FFAE21-ONC12575D9.003E19E8-C12575D9.003E3806@notes.edfgdf.fr>
Message-ID: <e7471da80906180628o2f04ee00i88640860879c5e63@mail.gmail.com>

I found by experimenting that in jQuery 1.3.x I have to select the container
of the tab UL, whereas in 1.2.x I had been selecting the UL itself. My
attempt (not claiming best practice) at code to work in both is something
like:

    jQuery(function() {
        var selector = '#tabs-container';
        if ( typeof jQuery.prototype.selector === 'undefined' ) {
            // We have jQuery 1.2.x, tabs work better on UL
            selector += ' > ul';
        }
        jQuery( selector ).tabs();

-dylan-

On Thu, Jun 18, 2009 at 5:19 AM, Ozh <ozh@planetozh.com> wrote:

> >
> > init_my_script();
> >
>
> jQuery(document).ready(function(){
>         init_my_script();
> });
> might change if the error is because you're firing the init before
> jquery-tabs have loaded (they're in the footer now, remember)
>
> Ozh
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From dylankkuhn at gmail.com  Thu Jun 18 13:29:30 2009
From: dylankkuhn at gmail.com (Dylan Kuhn)
Date: Thu Jun 18 13:30:06 2009
Subject: [wp-hackers] How do you get jQuery tabs working in Wordpress 2.8?
In-Reply-To: <OF104BC5C9.E1FFAE21-ONC12575D9.003E19E8-C12575D9.003E3806@notes.edfgdf.fr>
References: <096D456E-949E-42A0-8206-0D2036F24B60@daivmowbray.com> 
	<OF104BC5C9.E1FFAE21-ONC12575D9.003E19E8-C12575D9.003E3806@notes.edfgdf.fr>
Message-ID: <e7471da80906180629y24ecbemf70e53b47db35211@mail.gmail.com>

I found by experimenting that in jQuery 1.3.x I have to select the container
of the tab UL, whereas in 1.2.x I had been selecting the UL itself. My
attempt (not claiming best practice) at code to work in both is something
like:

    jQuery(function() {
        var selector = '#tabs-container';
        if ( typeof jQuery.prototype.selector === 'undefined' ) {
            // We have jQuery 1.2.x, tabs work better on UL
            selector += ' > ul';
        }
        jQuery( selector ).tabs();
    }

-dylan-

On Thu, Jun 18, 2009 at 5:19 AM, Ozh <ozh@planetozh.com> wrote:

> >
> > init_my_script();
> >
>
> jQuery(document).ready(function(){
>         init_my_script();
> });
> might change if the error is because you're firing the init before
> jquery-tabs have loaded (they're in the footer now, remember)
>
> Ozh
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wp-hackers at striderweb.com  Thu Jun 18 14:10:52 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Jun 18 14:11:17 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <EMEWEMEW2_DELIMl5H1M332cd1b5878e7b80d2dac36,
	mikeschinkel@newclarity.net, 12483918.1811245306123411.J>
References: <EMEWEMEW2_DELIMl5H1M332cd1b5878e7b80d2dac36,
	mikeschinkel@newclarity.net, 12483918.1811245306123411.J>
Message-ID: <5136C48D-0C07-4E9C-8497-9D1ED9DEF23D@striderweb.com>


On Jun 18, 2009, at 1:22 AM, Mike Schinkel wrote:

> In earlier emails on this thread we discussed how interfaces could  
> be managed on wordpress.org with a fallback to interfaces defined  
> locally in a plugin which fully addresses this issue. If you read  
> back through this entire thread you can to see the direction we were  
> headed. Without speaking for them I believe scribu and Stephen were  
> appreciating this direction.

Just for the record, I am not a fan of plugins depending on some  
service from a web site -- wordpress.org or otherwise.*  (If it's  
specific to the plugin -- e.g. Akismet -- fine, but not in a sense  
general to all plugins.)

So long as plugins can register interfaces locally, I'm okay with the  
site registration being a possibility....

Stephen


* This is already an issue for me with plugins and the auto-update: My  
plugins are not hosted on Extend, and as a result they are not checked  
for updates -- but the WP update check implicitly says "there are no  
updates for this plugin" by way of complete silence.

-- 
Stephen Rider
http://striderweb.com/
From lynne.pope at gmail.com  Thu Jun 18 14:12:04 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu Jun 18 14:12:41 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <4A3990C9.2070605@yahoo.com>
References: <4A36F705.6010302@yahoo.com> <4A373ECB.9070802@rotorised.com> 
	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com> 
	<35C8666C-6C03-4C08-BC86-C2F3D77B52B2@xentek.net>
	<4A3895E2.7070901@rotorised.com> <4A3990C9.2070605@yahoo.com>
Message-ID: <427667db0906180712i15f275a8w9fa0912eac37716b@mail.gmail.com>

2009/6/18 RePost <repost_08@yahoo.com>

> Ryan McCue wrote:
>
>> On 17/06/2009 4:09 PM, Eric Marden wrote:
>>
>>> You can use both CSS and XSL/T to style RSS (which is just XML),
>>> including linking external style sheets.
>>>
>>
>> As I mentioned, this is only for viewing the feed in the browser, and it
>> doesn't actually display on Firefox (or Safari, from memory), as they have
>> their own XSLT styles. As far as I know, RePost wants to style it in an
>> aggregator (feed reader).
>>
>>  I'm glad to see a real conversation develop here. Hope it has some impact
> on future iterations of the WP RSS2 feed.
>
> I've never been happy with feed readers, but also never considered that my
> feed might display differently in feed readers vs. browsers.


That's the thing - feed readers and aggregators are not web browsers. They
expect to get plain content, not a web page and have their own user
interfaces for displaying the XML data they receive.

Even those aggregators that preserve XSL styling can usually be overridden
by user preferences so once your feed has been accessed by someone (or by an
app) there is really no control over how it is presented. The same is also
true for web pages actually - the styling we provide can be completely
changed by the person viewing our sites.

I've never used this plugin, but it might provide a starting point for
styling your feeds: http://wordpress.org/extend/plugins/feed-styler/ It adds
inline styling.

Lynne
From jer at simianuprising.com  Thu Jun 18 14:18:30 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Thu Jun 18 14:18:43 2009
Subject: Replacing class="alignright" etc Was: Re: [wp-hackers] Linking 
	stylesheet to RSS feeds
In-Reply-To: <427667db0906180626h1fbf7d86s6c97ec0e6b5a2ddb@mail.gmail.com>
References: <427667db0906170034v77d2a7aic84ef8e0fd0d5441@mail.gmail.com>
	<b88434820906172041r1719431dn91c9db4d1c1d32df@mail.gmail.com>
	<427667db0906180626h1fbf7d86s6c97ec0e6b5a2ddb@mail.gmail.com>
Message-ID: <e1202cb10906180718k51bdffd8g13e01124d17c2f5f@mail.gmail.com>

On Thu, Jun 18, 2009 at 9:26 AM, Lynne Pope<lynne.pope@gmail.com> wrote:
> The same argument applies - inline styles override user styles.User styles
> in this case being the uniform UA implemented by feed aggregators as well as
> the end user who may have styled their own reader experience.

I agree on principal with what you're saying, but if only for my
personal curiosity, do you really think that a few key styles will
really break people's style customizations? I mean, in the context of
a blog post .alignright is almost structural for the content. An image
that's .alignright has a very specific semantic relationship with the
paragraph that follows it (e.g. it might say 'the photo to the right'
in the text). I can't help thinking that in these cases having inline
styles for float: and margin-left: (or margin-right:, i just mean
defining the margin opposite the float) not only makes sense but is
almost necessary. Having any kind of complex post layout in a feed
reader is impossible otherwise.

Not saying filtering .alignright into styles for RSS should be in
core, but I think it's a pretty acceptable practice when your content
depends on it (I do it manually on my blog and I haven't recieved any
complaints :P )

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org
From simon at sweetinteraction.com  Thu Jun 18 16:58:05 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Thu Jun 18 16:58:39 2009
Subject: [wp-hackers] Why the prohibition on changing usernames
Message-ID: <77c8b7bf0906180958x16250715ve5cc9011320f7558@mail.gmail.com>

In the user profile screen the username field is disabled... why is
that? Everywhere I can think of in the DB uses the User ID not the
username. Will the world explode on me if I allow the admin to change
user's usernames?

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT
From beau at dentedreality.com.au  Thu Jun 18 17:15:09 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Thu Jun 18 17:21:12 2009
Subject: [wp-hackers] Why the prohibition on changing usernames
In-Reply-To: <77c8b7bf0906180958x16250715ve5cc9011320f7558@mail.gmail.com>
References: <77c8b7bf0906180958x16250715ve5cc9011320f7558@mail.gmail.com>
Message-ID: <902424490906181015g54f9e639k57d3e02b352e943d@mail.gmail.com>

> In the user profile screen the username field is disabled... why is
> that? Everywhere I can think of in the DB uses the User ID not the
> username. Will the world explode on me if I allow the admin to change
> user's usernames?

Most likely to prevent breaking permalinks

e.g. http://website.com/author/yourname/
From mpwalsh8 at gmail.com  Thu Jun 18 17:47:12 2009
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Thu Jun 18 17:47:25 2009
Subject: [wp-hackers] wp-print plugin for Dashboard?
Message-ID: <bd35beb50906181047t3ffbc360u3bbb463059c2816e@mail.gmail.com>

Is anyone aware of something like wp-print for the Dashboard?  I have
a plugin that displays some information in tables that I would like to
be able to print (to a PDF file) and e-mail it to someone.  I have
been unsuccessful in finding anything that does this.

The other idea I had was to modify the CSS of the Dashboard such that
only the content within the "wrap" DIV class is displayed but so far I
am not having much luck with that either.

Any suggestions on how to achieve a "printable" page from the
Dashboard without all of the WordPress header, footer, and menu
content included?

Thanks,

Mike
From repost_08 at yahoo.com  Thu Jun 18 18:12:18 2009
From: repost_08 at yahoo.com (RePost)
Date: Thu Jun 18 18:12:39 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <427667db0906180712i15f275a8w9fa0912eac37716b@mail.gmail.com>
References: <4A36F705.6010302@yahoo.com> <4A373ECB.9070802@rotorised.com>
	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
	<35C8666C-6C03-4C08-BC86-C2F3D77B52B2@xentek.net>	<4A3895E2.7070901@rotorised.com>
	<4A3990C9.2070605@yahoo.com>
	<427667db0906180712i15f275a8w9fa0912eac37716b@mail.gmail.com>
Message-ID: <4A3A8382.4000900@yahoo.com>

Lynne Pope wrote:
> That's the thing - feed readers and aggregators are not web browsers. They
> expect to get plain content, not a web page and have their own user
> interfaces for displaying the XML data they receive.
>
> Even those aggregators that preserve XSL styling can usually be overridden
> by user preferences so once your feed has been accessed by someone (or by an
> app) there is really no control over how it is presented. The same is also
> true for web pages actually - the styling we provide can be completely
> changed by the person viewing our sites.
>
> I've never used this plugin, but it might provide a starting point for
> styling your feeds: http://wordpress.org/extend/plugins/feed-styler/ It adds
> inline styling.
>
>   

I did try out Feed Styler (no longer supported) during the past few 
days, Lynne. Only seems to work with FeedBurner feeds and doesn't affect 
the raw feed when you view it in the browser.

Didn't think to check it in a feed reader!

From admin at laptoptips.ca  Thu Jun 18 18:14:13 2009
From: admin at laptoptips.ca (Andrew Ozz)
Date: Thu Jun 18 18:15:44 2009
Subject: [wp-hackers] wp-print plugin for Dashboard?
In-Reply-To: <bd35beb50906181047t3ffbc360u3bbb463059c2816e@mail.gmail.com>
References: <bd35beb50906181047t3ffbc360u3bbb463059c2816e@mail.gmail.com>
Message-ID: <4A3A83F5.2050306@laptoptips.ca>

Mike Walsh wrote:
> The other idea I had was to modify the CSS of the Dashboard such that
> only the content within the "wrap" DIV class is displayed but so far I
> am not having much luck with that either.

Perhaps you can start by adding a css media="print" with
#wphead, #footer, #adminmenu, #screen-meta {display:none;}
.wrap {position:absolute;top:0;left:0;width:8in;}
From john.ivar.myrstad at gmail.com  Thu Jun 18 18:18:37 2009
From: john.ivar.myrstad at gmail.com (John Myrstad)
Date: Thu Jun 18 18:19:31 2009
Subject: [wp-hackers] wp-print plugin for Dashboard?
In-Reply-To: <bd35beb50906181047t3ffbc360u3bbb463059c2816e@mail.gmail.com>
References: <bd35beb50906181047t3ffbc360u3bbb463059c2816e@mail.gmail.com>
Message-ID: <d29aad6e0906181118k315e39adhaab79ec8e9927001@mail.gmail.com>

 Mike.

I recommend FF ext Aardvark for a task like this.

https://addons.mozilla.org/en-US/firefox/addon/4111

John Myrstad
From admin at laptoptips.ca  Thu Jun 18 18:24:18 2009
From: admin at laptoptips.ca (Andrew Ozz)
Date: Thu Jun 18 18:25:48 2009
Subject: [wp-hackers] How do you get jQuery tabs working in Wordpress 2.8?
In-Reply-To: <e7471da80906180628o2f04ee00i88640860879c5e63@mail.gmail.com>
References: <096D456E-949E-42A0-8206-0D2036F24B60@daivmowbray.com>
	<OF104BC5C9.E1FFAE21-ONC12575D9.003E19E8-C12575D9.003E3806@notes.edfgdf.fr>
	<e7471da80906180628o2f04ee00i88640860879c5e63@mail.gmail.com>
Message-ID: <4A3A8652.80504@laptoptips.ca>

Dylan Kuhn wrote:
> I found by experimenting that in jQuery 1.3.x I have to select the container
> of the tab UL, whereas in 1.2.x I had been selecting the UL itself.

Yes, jQuery UI Tabs has some changes in UI 1.7.1 and is not used in 2.8 
any more. If you only need basic tab switching it takes only couple of 
lines of js to do directly in jQuery and would be compatible with both 
1.2 and 1.3.
From mikeschinkel at newclarity.net  Thu Jun 18 18:48:27 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jun 18 18:51:13 2009
Subject: [wp-hackers] Why the prohibition on changing usernames
In-Reply-To: <902424490906181015g54f9e639k57d3e02b352e943d@mail.gmail.com>
References: <77c8b7bf0906180958x16250715ve5cc9011320f7558@mail.gmail.com>
	<902424490906181015g54f9e639k57d3e02b352e943d@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl5HDmRf6398916f9d07ac1ab7c49,
	mikeschinkel@newclarity.net, 1DC564FE-F15D-44FC-99AF>

Sounds like by implementing redirects ala posts with changed slugs  
this concern could be resolved?

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/




On Jun 18, 2009, at 1:15 PM, Beau Lebens wrote:

>> In the user profile screen the username field is disabled... why is
>> that? Everywhere I can think of in the DB uses the User ID not the
>> username. Will the world explode on me if I allow the admin to change
>> user's usernames?
>
> Most likely to prevent breaking permalinks
>
> e.g. http://website.com/author/yourname/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From heiko.rabe at code-styling.de  Thu Jun 18 18:55:56 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Thu Jun 18 18:56:13 2009
Subject: [wp-hackers] How do you get jQuery tabs working in Wordpress 2.8?
In-Reply-To: <4A3A8652.80504@laptoptips.ca>
References: <096D456E-949E-42A0-8206-0D2036F24B60@daivmowbray.com>	<OF104BC5C9.E1FFAE21-ONC12575D9.003E19E8-C12575D9.003E3806@notes.edfgdf.fr>	<e7471da80906180628o2f04ee00i88640860879c5e63@mail.gmail.com>
	<4A3A8652.80504@laptoptips.ca>
Message-ID: <4A3A8DBC.90501@code-styling.de>

It's very easy to write code that works for WP 2.7 and Wp 2.8 accourding 
to jQuery Tabs.
I wrote an article (sorry german only) but the essentials are this:

//jQuery UI 1.5.2 doesn?t expect tab ID?s at DIV, so we have to apply a 
hotfix instead
var *needs_jquery_hotfix* = (($.ui.version === undefined) || 
(parseInt($.ui.version.split(?.')[1]) < 7));
$("#tabs"+(*needs_jquery_hotfix* ? ?>ul? : ??)).tabs({
//do you init stuff here
});

To test the UI instead of jQuery is the better way, because the tabs 
component inherits from rewritten jQuery widget class.
Also some more patches can be easly applied against a older UI version 
to work as it would be a 1.7+ version.

regards


Andrew Ozz schrieb:
> Dylan Kuhn wrote:
>> I found by experimenting that in jQuery 1.3.x I have to select the 
>> container
>> of the tab UL, whereas in 1.2.x I had been selecting the UL itself.
>
> Yes, jQuery UI Tabs has some changes in UI 1.7.1 and is not used in 
> 2.8 any more. If you only need basic tab switching it takes only 
> couple of lines of js to do directly in jQuery and would be compatible 
> with both 1.2 and 1.3.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mikeschinkel at newclarity.net  Thu Jun 18 19:02:19 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jun 18 19:04:53 2009
Subject: [wp-hackers] Plugin dependency checking
In-Reply-To: <5136C48D-0C07-4E9C-8497-9D1ED9DEF23D@striderweb.com>
References: <EMEWEMEW2_DELIMl5H1M332cd1b5878e7b80d2dac36,
	mikeschinkel@newclarity.net, 12483918.1811245306123411.J>
	<5136C48D-0C07-4E9C-8497-9D1ED9DEF23D@striderweb.com>
Message-ID: <EMEWEMEW2_DELIMl5HE2F35386687b3428f39b5e819,
	mikeschinkel@newclarity.net, A1755791-6CE4-44A7-959B>

Stephen,

Believe me, I'm with you on that preference, in general. In this case  
the reason I proposed it was I could not see how it could work  
robustly without the option for a service.

Consider the following example which now seems preposterous.  Imagine  
that you wanted to retrieve information from a website via HTTP, i.e.  
use the Twitter Search API.  To do so you hardcode the IP address of  
the Twitter Search API into your plugin.  That would be crazy right?  
Better to use the DNS system to look it up.  But of course people DID  
hardcode IP addresses into a hosts file, before the DNS system existed.

I know the analogy isn't perfect but the reason it is needed here is  
to ensure that the correct interface definition is accessed.  Since my  
whole reason for proposing interfaces is to allow multiple people to  
implement the same interface who then is authoritative for the  
interface?  Each plugin developer could hardcode a slightly different  
implementation and if two plugins with conflicting interface  
definitions were used on the same site one of them would break.  A  
registry that is primary (with local coding as a fallback) would  
ensure that everyone ends up using the same interface definitions for  
well-known public interfaces when the service is available.

I don't see how it works robustly any other way.  Depending on web  
services is not a bad thing, depending on them when they are not  
*really* needed is. At least IMO.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/




On Jun 18, 2009, at 10:10 AM, Stephen Rider wrote:

>
> On Jun 18, 2009, at 1:22 AM, Mike Schinkel wrote:
>
>> In earlier emails on this thread we discussed how interfaces could  
>> be managed on wordpress.org with a fallback to interfaces defined  
>> locally in a plugin which fully addresses this issue. If you read  
>> back through this entire thread you can to see the direction we  
>> were headed. Without speaking for them I believe scribu and Stephen  
>> were appreciating this direction.
>
> Just for the record, I am not a fan of plugins depending on some  
> service from a web site -- wordpress.org or otherwise.*  (If it's  
> specific to the plugin -- e.g. Akismet -- fine, but not in a sense  
> general to all plugins.)
>
> So long as plugins can register interfaces locally, I'm okay with  
> the site registration being a possibility....
>
> Stephen
>
>
> * This is already an issue for me with plugins and the auto-update:  
> My plugins are not hosted on Extend, and as a result they are not  
> checked for updates -- but the WP update check implicitly says  
> "there are no updates for this plugin" by way of complete silence.
>
> -- 
> Stephen Rider
> http://striderweb.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From lynne.pope at gmail.com  Fri Jun 19 00:01:37 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Fri Jun 19 00:02:08 2009
Subject: Replacing class="alignright" etc Was: Re: [wp-hackers] Linking 
	stylesheet to RSS feeds
In-Reply-To: <e1202cb10906180718k51bdffd8g13e01124d17c2f5f@mail.gmail.com>
References: <427667db0906170034v77d2a7aic84ef8e0fd0d5441@mail.gmail.com> 
	<b88434820906172041r1719431dn91c9db4d1c1d32df@mail.gmail.com> 
	<427667db0906180626h1fbf7d86s6c97ec0e6b5a2ddb@mail.gmail.com> 
	<e1202cb10906180718k51bdffd8g13e01124d17c2f5f@mail.gmail.com>
Message-ID: <427667db0906181701t4f2e030waabe21efe0342582@mail.gmail.com>

2009/6/19 Jeremy Clarke <jer@simianuprising.com>

> On Thu, Jun 18, 2009 at 9:26 AM, Lynne Pope<lynne.pope@gmail.com> wrote:
> > The same argument applies - inline styles override user styles.User
> styles
> > in this case being the uniform UA implemented by feed aggregators as well
> as
> > the end user who may have styled their own reader experience.
>
> I agree on principal with what you're saying, but if only for my
> personal curiosity, do you really think that a few key styles will
> really break people's style customizations?


Yep, sure do. Inline styles take precedence over user styles (which,
includes browser and feed reader/aggregator application styles - the reason
many feed readers strip inline styling).

In the case of content viewed in a browser, this can have a serious impact
on accessibility.
There are loads of reasons why someone may choose to use their own style
sheet on certain sites (or choose to turn off CSS altogether on some sites)
and I routinely do this myself on some. There are also some sites that I
won't bother visiting at all, beause the styling makes it hard for me to
quickly read the content - for those, I read their feeds. If they styled
their feeds I just wouldn't bother.

And, for me, this has nothing to do with accessibility and everything to do
with usability - there are some really badly designed sites out there that
seem to put design above readability!


> I mean, in the context of
> a blog post .alignright is almost structural for the content. An image
> that's .alignright has a very specific semantic relationship with the
> paragraph that follows it (e.g. it might say 'the photo to the right'
> in the text). I can't help thinking that in these cases having inline
> styles for float: and margin-left: (or margin-right:, i just mean
> defining the margin opposite the float) not only makes sense but is
> almost necessary.


Those two classes aren't semantic. There is nothing about alignright that
says it must align to the right. It's not always aligned or floated to the
right even in WordPress core, which overrides it and flips it around for
sites that use RTL.


> Having any kind of complex post layout in a feed
> reader is impossible otherwise.


The debate about whether to style feeds has arisen many times over the past
few years, in loads of different places outside of WordPress. Generally,
those who say they want it state that they want control over the appearance
of their content and want to add branding. Well, people do have control over
the way their content is displayed - its called a web page and HTML/CSS
makes styling easy.

Feeds,on the other hand, are for syndicating content. Feed readers are not
browsers and feeds were never designed to be read in browsers. Browsers are
designed to recognise feed data and to pass it on to a feed application.

It's also called, "syndication" for a reason - feeds are not designed to be
served to just one end-user. Other sites take feeds, apply their styling,
and display the feed content within their own sites. Any CSS included with
the feed then impacts on the ability for aggregators to display the content.
You don't see Reuters or the New York Times syndicating their styling. It's
all about words.

Not saying filtering .alignright into styles for RSS should be in
> core, but I think it's a pretty acceptable practice when your content
> depends on it (I do it manually on my blog and I haven't recieved any
> complaints :P )


Yeah, well I don't complain or comment on a site that is unusable to me but
I won't subscribe to any feeds that use styling either;) If I want to see
the styling, I will visit the web page

Ok, so that's a personal preference and not everyone shares it, but at least
if the styling is provided by an external XSL sheet, users (and their
reader/aggregator apps) have the option of not using it. Impose styling
through inline styles and users get only two choices - put up with it
(assuming it makes the content accessible to them) or don't read at all.

Lynne
From jer at simianuprising.com  Fri Jun 19 01:18:54 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Fri Jun 19 01:23:52 2009
Subject: Replacing class="alignright" etc Was: Re: [wp-hackers] Linking 
	stylesheet to RSS feeds
In-Reply-To: <427667db0906181701t4f2e030waabe21efe0342582@mail.gmail.com>
References: <427667db0906170034v77d2a7aic84ef8e0fd0d5441@mail.gmail.com>
	<b88434820906172041r1719431dn91c9db4d1c1d32df@mail.gmail.com>
	<427667db0906180626h1fbf7d86s6c97ec0e6b5a2ddb@mail.gmail.com>
	<e1202cb10906180718k51bdffd8g13e01124d17c2f5f@mail.gmail.com>
	<427667db0906181701t4f2e030waabe21efe0342582@mail.gmail.com>
Message-ID: <e1202cb10906181818r799c1b9nd6d533362847c153@mail.gmail.com>

On Thu, Jun 18, 2009 at 8:01 PM, Lynne Pope<lynne.pope@gmail.com> wrote:
> And, for me, this has nothing to do with accessibility and everything to do
> with usability - there are some really badly designed sites out there that
> seem to put design above readability!

I doubt any of these problems are caused by aligning photos inside
post text using float: I know the kind of issues you are talking
about, but they are usually caused by bad text formatting choices. I'd
NEVER try to impose my text formatting choices on someone reading an
RSS feed (i hate even doing it with email), but that's a really
different issue from alignment.


>> I mean, in the context of
>> a blog post .alignright is almost structural for the content. An image
>> that's .alignright has a very specific semantic relationship with the
>> paragraph that follows it (e.g. it might say 'the photo to the right'
>> in the text).
>
> Those two classes aren't semantic. There is nothing about alignright that
> says it must align to the right. It's not always aligned or floated to the
> right even in WordPress core, which overrides it and flips it around for
> sites that use RTL.

To be clear, I wasn't saying that .alignright is itself actually a
semantic bit of markup. Rather I was saying that the use of
.alignright inside of a post is more than just a style decision, its a
structural content decision, and thus semantic in the *intent* of the
person using it on a photo . The fact that WP swaps the actual float
for RTL is a perfect example: it is working with the intended semantic
meaning of the right alignment rather than a specific style one.
You're right that there's nothing in class="alignright" that says it
needs to float right, but its still an incredibly useful convention,
and the way the WP post editor presents it is more about post
structure and layout than about style.

On some level I'm just bemoaning the lack of an actual XHTML property
that lets you control alignment, because I think alignment IS a
structural issue within site content. Sure, <center> was a bad idea,
but the fact is that when we are creating mixed-media content (photos,
videos, pullquotes) we naturally want ways to control left and right
alignment. Removing align="left" from html was a good idea because
it's not how you should set up your site's sidebar, but its a shame
because now our posts end up looking like 1995 when they're viewed
using modern tools. I think it's pretty logically sound to say that
right alignment of photos in a blog post is more than a 'style' issue,
it's part of the content of the post. It just happens that CSS 'style'
is the only means of achieving right alignment.

I think if nothing else floating of images deserves a spot as an
exception to the rule against inline styles in posts. I also doubt you
would even notice, let alone be upset or find usability problems with
a  feed that used basic floating and margins on images to make the
layout nicer (unless you get upset on principal, which is valid but
probably not productive ;)



-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org
From lynne.pope at gmail.com  Fri Jun 19 07:44:21 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Fri Jun 19 07:47:50 2009
Subject: Replacing class="alignright" etc Was: Re: [wp-hackers] Linking 
	stylesheet to RSS feeds
In-Reply-To: <e1202cb10906181818r799c1b9nd6d533362847c153@mail.gmail.com>
References: <427667db0906170034v77d2a7aic84ef8e0fd0d5441@mail.gmail.com> 
	<b88434820906172041r1719431dn91c9db4d1c1d32df@mail.gmail.com> 
	<427667db0906180626h1fbf7d86s6c97ec0e6b5a2ddb@mail.gmail.com> 
	<e1202cb10906180718k51bdffd8g13e01124d17c2f5f@mail.gmail.com> 
	<427667db0906181701t4f2e030waabe21efe0342582@mail.gmail.com> 
	<e1202cb10906181818r799c1b9nd6d533362847c153@mail.gmail.com>
Message-ID: <427667db0906190044p7da29450ia9ebccacc40db4cb@mail.gmail.com>

2009/6/19 Jeremy Clarke <jer@simianuprising.com>

> On Thu, Jun 18, 2009 at 8:01 PM, Lynne Pope<lynne.pope@gmail.com> wrote:
> > And, for me, this has nothing to do with accessibility and everything to
> do
> > with usability - there are some really badly designed sites out there
> that
> > seem to put design above readability!
>
> I doubt any of these problems are caused by aligning photos inside
> post text using float: I know the kind of issues you are talking
> about, but they are usually caused by bad text formatting choices. I'd
> NEVER try to impose my text formatting choices on someone reading an
> RSS feed (i hate even doing it with email), but that's a really
> different issue from alignment.


I agree that image alignment in feeds is an issue, but its a slippery slope.
The person who wants to align their images also generally wants to format
captions, apply fonts or colours, and generally take over the user
experience ;)


>> I mean, in the context of
> >> a blog post .alignright is almost structural for the content. An image
> >> that's .alignright has a very specific semantic relationship with the
> >> paragraph that follows it (e.g. it might say 'the photo to the right'
> >> in the text).
> >
>
>
> > Those two classes aren't semantic. There is nothing about alignright that
> > says it must align to the right. It's not always aligned or floated to
> the
> > right even in WordPress core, which overrides it and flips it around for
> > sites that use RTL.
>
> To be clear, I wasn't saying that .alignright is itself actually a
> semantic bit of markup. Rather I was saying that the use of
> .alignright inside of a post is more than just a style decision, its a
> structural content decision, and thus semantic in the *intent* of the
> person using it on a photo . The fact that WP swaps the actual float
> for RTL is a perfect example: it is working with the intended semantic
> meaning of the right alignment rather than a specific style one.


I don't want to get into an argument over semantics, but classes that are
purely for presentation/design can only be called semantic, at a stretch, if
they add to the understanding of the content. I see where you are coming
from, but since class="alignright" actually aligns to the left in RTL
themes, and can in fact be made to align almost anywhere, there really isn't
any meaning to it. You could call it
class="completely-nonsemantic-presentational-element" and still use it the
exact same way ;)
I guess it could be argued that its "somewhat" semantic if it does align to
the right. Not convinced though!

On some level I'm just bemoaning the lack of an actual XHTML property
> that lets you control alignment, because I think alignment IS a
> structural issue within site content. Sure, <center> was a bad idea,
> but the fact is that when we are creating mixed-media content (photos,
> videos, pullquotes) we naturally want ways to control left and right
> alignment. Removing align="left" from html was a good idea because
> it's not how you should set up your site's sidebar, but its a shame
> because now our posts end up looking like 1995 when they're viewed
> using modern tools. I think it's pretty logically sound to say that
> right alignment of photos in a blog post is more than a 'style' issue,
> it's part of the content of the post. It just happens that CSS 'style'
> is the only means of achieving right alignment.


Sorry, disagree - its purely presentational. CSS allows styling, and HTML
itself never really controlled this, except by allowing inline styling.
Again, this is styling, not document structure.


> I think if nothing else floating of images deserves a spot as an
> exception to the rule against inline styles in posts. I also doubt you
> would even notice, let alone be upset or find usability problems with
> a  feed that used basic floating and margins on images to make the
> layout nicer (unless you get upset on principal, which is valid but
> probably not productive ;)


Styles have specificity and cascade. A few years back, some feed readers
were caught on the hop when people started applying styles to their feeds.
The result of this was that styled feeds were suddenly imposing their
styling on every subsequent feed in the cascade, when viewed in the reader.
This is not a problem if the reader/aggregator is displaying only one feed
item at a time. It's still a problem for people who display external feed
content on their own sites.

Think about it - if you use "alignright" on your site for content placement
when the site is viewed in a browser, and you import a feed to your site
which also uses "alignright", the feeds styling will override your own CSS
unless you have deliberately added specificity.  .alignright may be styled
to clear floats, adding padding or margins, to apply borders or whatever -
you get no control over this styling if its embedded in inlne styles. If a
site does not float images, and uses a feed that does, can you imagine the
screaming that would ensue?

I send an icon/logo with feeds, and I like seeing these in feeds I subscribe
to. However, RSS is XML for a reason - its pure data format for machines and
its designed to be display agnostic. To me, it becomes less than useful if
styling is applied to individual feeds - might was well go to the web page.
At least then,users get the option to view content with CSS off or go to
print view ;)

But that's just me. I've unsubscribed to feeds that have forced styling on
me, and the minute a feed throws in an image that is not meaningful to
content, they are deleted from my subscriptions. Your mileage may vary ;)

Lynne
From daiv at daivmowbray.com  Fri Jun 19 08:44:24 2009
From: daiv at daivmowbray.com (Daiv Mowbray)
Date: Fri Jun 19 08:44:42 2009
Subject: [wp-hackers] How do you get jQuery tabs working in Wordpress 2.8?
In-Reply-To: <e7471da80906180629y24ecbemf70e53b47db35211@mail.gmail.com>
References: <096D456E-949E-42A0-8206-0D2036F24B60@daivmowbray.com>
	<OF104BC5C9.E1FFAE21-ONC12575D9.003E19E8-C12575D9.003E3806@notes.edfgdf.fr>
	<e7471da80906180629y24ecbemf70e53b47db35211@mail.gmail.com>
Message-ID: <4ED1CF39-5DCF-4DFD-A494-9089C25D287E@daivmowbray.com>


Hi thanx for the feedback, and well, I'm perplexed.
I've applied the jquery as such;

function create_ui_tabs() {

    jQuery(function() {
         var selector = '#ssslider';
             if ( typeof jQuery.prototype.selector === 'undefined' ) {
            		 // We have jQuery 1.2.x, tabs work better on UL
             	selector += ' > ul';
         	}
         jQuery( selector ).tabs({ fxFade: true, fxSpeed: 'slow' });

     });
};

jQuery(document).ready(function(){
         create_ui_tabs();
});
____________________________________

and my html is:

<div id="ssslider" class="ui-tabs">
     <ul id="ssnav" class="ui-tabs-nav">
         <li class="ui-tabs-selected"><a  
href="#fragment-1"><span>Global Options</span></a></li>
         <li class="ui-state-default"><a  
href="#fragment-2"><span>Plugins Appearance</span></a></li>
         <li class="ui-state-default" style="display: none;"><a  
href="#fragment-9"><span>Comment Slider</span></a></li>
     </ul>
     <div id="fragment-1" class="ui-tabs-panel">
...




On Jun 18, 2009, at 3:29 PM, Dylan Kuhn wrote:

> I found by experimenting that in jQuery 1.3.x I have to select the  
> container
> of the tab UL, whereas in 1.2.x I had been selecting the UL itself. My
> attempt (not claiming best practice) at code to work in both is  
> something
> like:


----------
Daiv Mowbray
daiv@daivmowbray.com
----------


From daiv at daivmowbray.com  Fri Jun 19 09:49:07 2009
From: daiv at daivmowbray.com (Daiv Mowbray)
Date: Fri Jun 19 09:49:22 2009
Subject: [wp-hackers] How do you get jQuery tabs working in Wordpress 2.8?
In-Reply-To: <4ED1CF39-5DCF-4DFD-A494-9089C25D287E@daivmowbray.com>
References: <096D456E-949E-42A0-8206-0D2036F24B60@daivmowbray.com>
	<OF104BC5C9.E1FFAE21-ONC12575D9.003E19E8-C12575D9.003E3806@notes.edfgdf.fr>
	<e7471da80906180629y24ecbemf70e53b47db35211@mail.gmail.com>
	<4ED1CF39-5DCF-4DFD-A494-9089C25D287E@daivmowbray.com>
Message-ID: <38983EE9-79C5-478F-8809-6D6BAF7013F6@daivmowbray.com>

Correction to my last post:

It seems that I failed to update cache or something.
This following does work for 2.7 and 2.8 :
______________________

  <script type="text/javascript">
// <![CDATA[

function create_ui_tabs() {
     jQuery(function() {
         var selector = '#ssslider';
             if ( typeof jQuery.prototype.selector === 'undefined' ) {
             // We have jQuery 1.2.x, tabs work better on UL
             selector += ' > ul';
         }
         jQuery( selector ).tabs({ fxFade: true, fxSpeed: 'slow' });

     });
}

jQuery(document).ready(function(){
         create_ui_tabs();
});

// ]]>
</script>
__________________________



On Jun 19, 2009, at 10:44 AM, Daiv Mowbray wrote:

> Hi thanx for the feedback, and well, I'm perplexed.
> I've applied the jquery as such;


----------
Daiv Mowbray
daiv@daivmowbray.com
----------


From dylankkuhn at gmail.com  Fri Jun 19 10:49:31 2009
From: dylankkuhn at gmail.com (Dylan Kuhn)
Date: Fri Jun 19 10:50:06 2009
Subject: [wp-hackers] How do you get jQuery tabs working in Wordpress 2.8?
In-Reply-To: <38983EE9-79C5-478F-8809-6D6BAF7013F6@daivmowbray.com>
References: <096D456E-949E-42A0-8206-0D2036F24B60@daivmowbray.com> 
	<OF104BC5C9.E1FFAE21-ONC12575D9.003E19E8-C12575D9.003E3806@notes.edfgdf.fr>
	<e7471da80906180629y24ecbemf70e53b47db35211@mail.gmail.com> 
	<4ED1CF39-5DCF-4DFD-A494-9089C25D287E@daivmowbray.com>
	<38983EE9-79C5-478F-8809-6D6BAF7013F6@daivmowbray.com>
Message-ID: <e7471da80906190349y6cc1274dvdbaaa72a79adb4c4@mail.gmail.com>

Good. Just for clarity, I think the only necessary code is the content of
you create_ui_tabs function. jQuery( function() { } ) is a shortcut for
jQuery(document).ready( function() { } ) - maybe a good example of how
shortcuts can reduce readbility.

Secondly, I agree with Heiko that testing the UI version is probably more
robust, since tabs() is UI code. I also agree with Ozh that not using tabs
at all is much more robust :). I'll probably use a compromise myself for
now.

-dylan-

On Fri, Jun 19, 2009 at 3:49 AM, Daiv Mowbray <daiv@daivmowbray.com> wrote:

> Correction to my last post:
>
> It seems that I failed to update cache or something.
> This following does work for 2.7 and 2.8 :
> ______________________
>
>  <script type="text/javascript">
> // <![CDATA[
>
> function create_ui_tabs() {
>    jQuery(function() {
>        var selector = '#ssslider';
>            if ( typeof jQuery.prototype.selector === 'undefined' ) {
>            // We have jQuery 1.2.x, tabs work better on UL
>            selector += ' > ul';
>        }
>        jQuery( selector ).tabs({ fxFade: true, fxSpeed: 'slow' });
>
>    });
> }
>
> jQuery(document).ready(function(){
>        create_ui_tabs();
> });
>
> // ]]>
> </script>
> __________________________
>
>
>
> On Jun 19, 2009, at 10:44 AM, Daiv Mowbray wrote:
>
>  Hi thanx for the feedback, and well, I'm perplexed.
>> I've applied the jquery as such;
>>
>
>
> ----------
> Daiv Mowbray
> daiv@daivmowbray.com
> ----------
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jer at simianuprising.com  Fri Jun 19 21:00:28 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Fri Jun 19 21:00:42 2009
Subject: [wp-hackers] Why the prohibition on changing usernames
In-Reply-To: <902424490906181015g54f9e639k57d3e02b352e943d@mail.gmail.com>
References: <77c8b7bf0906180958x16250715ve5cc9011320f7558@mail.gmail.com>
	<902424490906181015g54f9e639k57d3e02b352e943d@mail.gmail.com>
Message-ID: <e1202cb10906191400s70094ebtb20870e665012380@mail.gmail.com>

On Thu, Jun 18, 2009 at 1:15 PM, Beau Lebens<beau@dentedreality.com.au> wrote:
>> In the user profile screen the username field is disabled... why is
>> that?
>
> Most likely to prevent breaking permalinks

No more risky than changing category urls. Both should probably be
changeable but with a warning about urls breaking first.


-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | globalvoicesonline.org
From repost_08 at yahoo.com  Sun Jun 21 09:00:46 2009
From: repost_08 at yahoo.com (RePost)
Date: Sun Jun 21 09:01:17 2009
Subject: [wp-hackers] Linking stylesheet to RSS feeds
In-Reply-To: <427667db0906180712i15f275a8w9fa0912eac37716b@mail.gmail.com>
References: <4A36F705.6010302@yahoo.com> <4A373ECB.9070802@rotorised.com>
	<db047a770906152347o3f44bfcctce0fe4e1e2f8b25@mail.gmail.com>
	<35C8666C-6C03-4C08-BC86-C2F3D77B52B2@xentek.net>	<4A3895E2.7070901@rotorised.com>
	<4A3990C9.2070605@yahoo.com>
	<427667db0906180712i15f275a8w9fa0912eac37716b@mail.gmail.com>
Message-ID: <4A3DF6BE.1080402@yahoo.com>

Notice on this WordPress feed that the images are treated as "media 
files" and not appearing in the copy:
http://www2.macleans.ca/category/arts-culture/feed/

This avoids the problem of images bumping into the text.

I have no idea how they attached their logo in the upper right corner 
(thought you needed FeedBurner for that). But that's beside the point.

How do you induce WP to treat your images as media files?
From scribu at gmail.com  Sun Jun 21 14:12:17 2009
From: scribu at gmail.com (scribu)
Date: Sun Jun 21 14:12:34 2009
Subject: [wp-hackers] New profiles on WordPress.org
Message-ID: <349fe48b0906210712k491e92b8w333e4334b3cb600c@mail.gmail.com>

I just saw an sneak preview of the new profiles while whatching Matt on The
State Of The Word
2009<http://wordpress.tv/2009/06/21/matt-mullenwegs-state-of-the-word-wordcamp-san-francisco-2009/>,
and I discovered that you can actually see them online. Mine is here:

http://wordpress.org/profile/scribu/

Hope I'm not causing any trouble by posting this...

-- 
http://scribu.net
From heiko.rabe at code-styling.de  Sun Jun 21 17:45:50 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Sun Jun 21 17:46:08 2009
Subject: [wp-hackers] Question about translation extensions during WP 2.8
In-Reply-To: <349fe48b0906210712k491e92b8w333e4334b3cb600c@mail.gmail.com>
References: <349fe48b0906210712k491e92b8w333e4334b3cb600c@mail.gmail.com>
Message-ID: <4A3E71CE.4060809@code-styling.de>

Hi,

i would be happy if somebody can explain the advantage of the new one 
similar translation capabilities:

    _x('Published', 'page')

in opposite to

    _c('Published|page')

Normally a GNU gettext processor would not allow to have the same phrase 
twice in file.
So if the new _x method writes the phrase to *.mo file the same way as 
__ or _e would do, this may lead on some systems to bad behavoir because 
of double occurance and damaged hash map table inside *.mo file.

btw: same asked on polyglot but the mails seems not arrive there.

thanks and in advance

Heiko Rabe
(www.code-styling.de)   
From peter.westwood at ftwr.co.uk  Sun Jun 21 18:57:54 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sun Jun 21 18:58:11 2009
Subject: [wp-hackers] Question about translation extensions during WP 2.8
In-Reply-To: <4A3E71CE.4060809@code-styling.de>
References: <349fe48b0906210712k491e92b8w333e4334b3cb600c@mail.gmail.com>
	<4A3E71CE.4060809@code-styling.de>
Message-ID: <7CDFDF46-1C6E-46E7-8A0F-97AD4625B730@ftwr.co.uk>


On 21 Jun 2009, at 18:45, Heiko Rabe wrote:
> i would be happy if somebody can explain the advantage of the new  
> one similar translation capabilities:
>
>   _x('Published', 'page')
>
> in opposite to
>
>   _c('Published|page')
>
> Normally a GNU gettext processor would not allow to have the same  
> phrase twice in file.
> So if the new _x method writes the phrase to *.mo file the same way  
> as __ or _e would do, this may lead on some systems to bad behavoir  
> because of double occurance and damaged hash map table inside *.mo  
> file.

It allows for the context to be properly specified in the po file,  
makes the string easier to translate (and also makes it safer to use  
"|" in a string again)

Previously in the pof file:
#: wp-admin/edit-pages.php:78
msgid "Published|page"
msgstr ""

Now in the pot file:
#: wp-admin/edit-pages.php:78
msgctxt "page"
msgid "Published"
msgstr ""

So it is explicitly marked as context (http://www.gnu.org/software/gettext/manual/gettext.html#Contexts 
)

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From heiko.rabe at code-styling.de  Sun Jun 21 19:07:47 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Sun Jun 21 19:07:56 2009
Subject: [wp-hackers] Question about translation extensions during WP 2.8
In-Reply-To: <7CDFDF46-1C6E-46E7-8A0F-97AD4625B730@ftwr.co.uk>
References: <349fe48b0906210712k491e92b8w333e4334b3cb600c@mail.gmail.com>	<4A3E71CE.4060809@code-styling.de>
	<7CDFDF46-1C6E-46E7-8A0F-97AD4625B730@ftwr.co.uk>
Message-ID: <4A3E8503.3080006@code-styling.de>

Hi Peter,

thanks for the answer. If understand it right, than the result of *.mo 
file creation process will transform

_x('Published', 'page')

internally into

  "Published|page"

at the binary machine object file. If i now try to reverse a *.mo file, 
i can't figure out, if

  "Car|House|Boat|Context"

is a contextual separation string or just a menu item collection used at 
__(), because such information about context are not stored inside the 
binary format.
So how would the mo/po classes figure out this, because | becomes 
unreliable during load of *.mo file ?

regards

Heiko Rabe
(www.code-styling.de)

>
> On 21 Jun 2009, at 18:45, Heiko Rabe wrote:
>> i would be happy if somebody can explain the advantage of the new one 
>> similar translation capabilities:
>>
>>   _x('Published', 'page')
>>
>> in opposite to
>>
>>   _c('Published|page')
>>
>> Normally a GNU gettext processor would not allow to have the same 
>> phrase twice in file.
>> So if the new _x method writes the phrase to *.mo file the same way 
>> as __ or _e would do, this may lead on some systems to bad behavoir 
>> because of double occurance and damaged hash map table inside *.mo file.
>
> It allows for the context to be properly specified in the po file, 
> makes the string easier to translate (and also makes it safer to use 
> "|" in a string again)
>
> Previously in the pof file:
> #: wp-admin/edit-pages.php:78
> msgid "Published|page"
> msgstr ""
>
> Now in the pot file:
> #: wp-admin/edit-pages.php:78
> msgctxt "page"
> msgid "Published"
> msgstr ""
>
> So it is explicitly marked as context 
> (http://www.gnu.org/software/gettext/manual/gettext.html#Contexts)
>
> westi

From nb at nikolay.bg  Sun Jun 21 21:13:11 2009
From: nb at nikolay.bg (Nikolay Bachiyski)
Date: Sun Jun 21 21:13:46 2009
Subject: [wp-hackers] Question about translation extensions during WP 2.8
In-Reply-To: <4A3E8503.3080006@code-styling.de>
References: <349fe48b0906210712k491e92b8w333e4334b3cb600c@mail.gmail.com> 
	<4A3E71CE.4060809@code-styling.de>
	<7CDFDF46-1C6E-46E7-8A0F-97AD4625B730@ftwr.co.uk> 
	<4A3E8503.3080006@code-styling.de>
Message-ID: <87e663fa0906211413k184948b6u12b36685ced173f4@mail.gmail.com>

On Sun, Jun 21, 2009 at 22:07, Heiko Rabe<heiko.rabe@code-styling.de> wrote:
>
> Normally a GNU gettext processor would not allow to have the same phrase twice in file.
> So if the new _x method writes the phrase to *.mo file the same way as __ or _e would do, this may
> lead on some systems to bad behavoir because of double occurance and damaged hash map table inside *.mo file.

The context is part of the key, by which the strings are mapped in the
MO file. That's why it won't lead to ambiguities inside the hash map.
Actually, this is the proper gettext way of managing contexts. We
hadn't been using it before, because it wasn't well supported in the
various gettext tools, most notably poEdit.

> _x('Published', 'page')
>
> internally into
>
> ?"Published|page"
>
> at the binary machine object file. If i now try to reverse a *.mo file, i
> can't figure out, if
>
> ?"Car|House|Boat|Context"
>
> is a contextual separation string or just a menu item collection used at
> __(), because such information about context are not stored inside the
> binary format.
> So how would the mo/po classes figure out this, because | becomes unreliable
> during load of *.mo file ?
>

In the MO file, the context is stored in a different way, not like
"String|context".

>From the MO file specification:

    Contexts are stored by storing the concatenation of the context, a
<EOT> byte, and the original string, instead of the original string.

The full specification:
http://www.gnu.org/software/hello/manual/gettext/MO-Files.html

Happy hacking,
Nikolay.
From peter.westwood at ftwr.co.uk  Sun Jun 21 21:23:15 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sun Jun 21 21:23:30 2009
Subject: [wp-hackers] Question about translation extensions during WP 2.8
In-Reply-To: <4A3E8503.3080006@code-styling.de>
References: <349fe48b0906210712k491e92b8w333e4334b3cb600c@mail.gmail.com>	<4A3E71CE.4060809@code-styling.de>
	<7CDFDF46-1C6E-46E7-8A0F-97AD4625B730@ftwr.co.uk>
	<4A3E8503.3080006@code-styling.de>
Message-ID: <233F0CAA-65F2-4D23-A74B-57CD69D6CAF4@ftwr.co.uk>


On 21 Jun 2009, at 20:07, Heiko Rabe wrote:

> thanks for the answer. If understand it right, than the result of  
> *.mo file creation process will transform
>
> _x('Published', 'page')
>
> internally into
>
> "Published|page"
>
> at the binary machine object file. If i now try to reverse a *.mo  
> file, i can't figure out, if
>
> "Car|House|Boat|Context"
>
> is a contextual separation string or just a menu item collection  
> used at __(), because such information about context are not stored  
> inside the binary format.
> So how would the mo/po classes figure out this, because | becomes  
> unreliable during load of *.mo file ?

That doesn't sound right to me.

Looking at the code in pomo which parses the file in [1], and the code  
for the C gettext library, I believe the following is true

In the binary mo file the context is stored at the start of the  
translation followed by ascii character EOT (character code 4) this is  
then followed by the translated string.

In the plain text pot or po file it is stored in the context field,  
for example from [2]

#: wp-admin/menu.php:62
msgctxt "page"
msgid "Add New"
msgstr "????"

[1] - http://svn.automattic.com/wordpress/trunk/wp-includes/pomo/mo.php
[2] - http://svn.automattic.com/wordpress-i18n/bg_BG/tags/2.8/messages/bg_BG.po

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From elflop at googlemail.com  Sun Jun 21 21:37:32 2009
From: elflop at googlemail.com (Rich Pedley)
Date: Sun Jun 21 21:37:46 2009
Subject: [wp-hackers] New profiles on WordPress.org
In-Reply-To: <349fe48b0906210712k491e92b8w333e4334b3cb600c@mail.gmail.com>
References: <349fe48b0906210712k491e92b8w333e4334b3cb600c@mail.gmail.com>
Message-ID: <c6c45a350906211437m272bcc1bx68f5fd6df60004f5@mail.gmail.com>

2009/6/21 scribu <scribu@gmail.com>:
> I just saw an sneak preview of the new profiles while whatching Matt on The
> State Of The Word
> 2009<http://wordpress.tv/2009/06/21/matt-mullenwegs-state-of-the-word-wordcamp-san-francisco-2009/>,
> and I discovered that you can actually see them online. Mine is here:
>
> http://wordpress.org/profile/scribu/
>
> Hope I'm not causing any trouble by posting this...

doubt it - I could access mine from that page. Though the download
plugin count is off.
Compare:
http://wordpress.org/profile/elfin/
and
http://wordpress.org/extend/plugins/profile/elfin

(and some of those plugins are out of date anyway).

Rich
-- 
my mind is on a permanent tangent
http://cms.elfden.co.uk/
From heiko.rabe at code-styling.de  Sun Jun 21 22:34:39 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Sun Jun 21 22:34:45 2009
Subject: [wp-hackers] Question about translation extensions during WP 2.8
In-Reply-To: <233F0CAA-65F2-4D23-A74B-57CD69D6CAF4@ftwr.co.uk>
References: <349fe48b0906210712k491e92b8w333e4334b3cb600c@mail.gmail.com>	<4A3E71CE.4060809@code-styling.de>	<7CDFDF46-1C6E-46E7-8A0F-97AD4625B730@ftwr.co.uk>	<4A3E8503.3080006@code-styling.de>
	<233F0CAA-65F2-4D23-A74B-57CD69D6CAF4@ftwr.co.uk>
Message-ID: <4A3EB57F.8000209@code-styling.de>

Thanks to Nikolay and Peter,

final question(s): This leads (or have to lead) to multiple occurances 
at translation systems with the same phrase ?
The only difference is the context so the same term occuring in 50 
different contexts but maybe translated the same way now consumes 50 
times more space in mo file and PHP memory as would be required, right ?

regards

Heiko Rabe
(www.code-styling.de)

>
> On 21 Jun 2009, at 20:07, Heiko Rabe wrote:
>
>> thanks for the answer. If understand it right, than the result of 
>> *.mo file creation process will transform
>>
>> _x('Published', 'page')
>>
>> internally into
>>
>> "Published|page"
>>
>> at the binary machine object file. If i now try to reverse a *.mo 
>> file, i can't figure out, if
>>
>> "Car|House|Boat|Context"
>>
>> is a contextual separation string or just a menu item collection used 
>> at __(), because such information about context are not stored inside 
>> the binary format.
>> So how would the mo/po classes figure out this, because | becomes 
>> unreliable during load of *.mo file ?
>
> That doesn't sound right to me.
>
> Looking at the code in pomo which parses the file in [1], and the code 
> for the C gettext library, I believe the following is true
>
> In the binary mo file the context is stored at the start of the 
> translation followed by ascii character EOT (character code 4) this is 
> then followed by the translated string.
>
> In the plain text pot or po file it is stored in the context field, 
> for example from [2]
>
> #: wp-admin/menu.php:62
> msgctxt "page"
> msgid "Add New"
> msgstr "????"
>
> [1] - http://svn.automattic.com/wordpress/trunk/wp-includes/pomo/mo.php
> [2] - 
> http://svn.automattic.com/wordpress-i18n/bg_BG/tags/2.8/messages/bg_BG.po
>
> westi

From shane at bugssite.org  Sun Jun 21 22:36:20 2009
From: shane at bugssite.org (Shane A. Froebel)
Date: Sun Jun 21 22:37:15 2009
Subject: [wp-hackers] New profiles on WordPress.org
In-Reply-To: <c6c45a350906211437m272bcc1bx68f5fd6df60004f5@mail.gmail.com>
References: <349fe48b0906210712k491e92b8w333e4334b3cb600c@mail.gmail.com>
	<c6c45a350906211437m272bcc1bx68f5fd6df60004f5@mail.gmail.com>
Message-ID: <4A3EB5E4.70303@bugssite.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

That's tight. I found two of my profiles.
http://wordpress.org/profile/ShaneFroebel/ and
http://wordpress.org/profile/ShaneF/. To bad I can have the stuff from
the ShaneFroebel profile merged into the ShaneF.

Otherwise it's very cool! :D

Your Friend,
Shane

Rich Pedley wrote:
> 2009/6/21 scribu <scribu@gmail.com>:
>> I just saw an sneak preview of the new profiles while whatching Matt on The
>> State Of The Word
>> 2009<http://wordpress.tv/2009/06/21/matt-mullenwegs-state-of-the-word-wordcamp-san-francisco-2009/>,
>> and I discovered that you can actually see them online. Mine is here:
>>
>> http://wordpress.org/profile/scribu/
>>
>> Hope I'm not causing any trouble by posting this...
> 
> doubt it - I could access mine from that page. Though the download
> plugin count is off.
> Compare:
> http://wordpress.org/profile/elfin/
> and
> http://wordpress.org/extend/plugins/profile/elfin
> 
> (and some of those plugins are out of date anyway).
> 
> Rich
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQIcBAEBAgAGBQJKPrXkAAoJEChMcQvNqPqmoh0QAJ0DbgE9GV6/vr7Ml7RVv+mP
cZJPQ7a+IA9tdNfrDMX7/4dZvilRvdgk7U9HUd2bwgE5xsJdVgRIpRtn+nUMc5Ij
2q0s4JORuqG9FvCcpo1aHogKx6UUxg5QyY9/E1w1WNRl7295yzoQAHs6pbNIx+T9
+0BKcPpMXC4H4sw/bN5cGWfcXKzriOVycmzELCe27QQBa2FAB4a6rYky5+7UawcR
rwJlkm2/EcMPg3OTvpNYqxa8KcScU7y7h15w1QYllr6N+vuRc8ELlQPbJbDp9LfL
dkkPPO6NeK28+5JkDAxKOxmGH8+AY4YsQaw3Lli6g+bA0uFN+/kLmUaPvv2VrKUx
UxzA2NjHGXxBhGMBsUx6MJ4gO637EqLHKR67/t39mJfD33uX1FttR9DlOWgpyOTF
czvW1gghz7Wx4sKj8IM3JeypOhVmDf6ntvByzMSBJ2KY3O+rptw7VyU3Bkd4BeVh
bAvD2jS9iWrdTcAwKTvTHg1Xac4SkqwlPMrjbrO5VOnzj3XlceiOlJLYECqgOw8d
7Iej+2LKTZJmzaFvoCovFLAWOiNMN4duZ0ZqU4ut/aIpMKo5yBcIAKpCQKHtRGBf
hga+5ue3fBm6O9amuZzC4Xrf8Nizv8GUVUvZ4oQBUdZFW/Bf66sy1RMr+qMDymQb
mKuTUqyCBqeaqnAztGzI
=trTI
-----END PGP SIGNATURE-----
From malaiac at gmail.com  Mon Jun 22 07:01:12 2009
From: malaiac at gmail.com (Malaiac)
Date: Mon Jun 22 07:01:46 2009
Subject: [wp-hackers] remove plugin from extend
Message-ID: <59e7f3130906220001s63a2e3bap1d4425b255838bcb@mail.gmail.com>

What should be the good person to contact, in order to remove a plugin
from extend ?

I requested and got approved two times for the same plugin under two
different names, and the old wrong named version is still there,
despite three messages through Extend request contact page.
BAD : http://wordpress.org/extend/plugins/zelist-directory/
GOOD : http://wordpress.org/extend/plugins/zelist/

And unsurprisingly, the Extend search engine, returns the bad
(outdated) one first
http://wordpress.org/extend/plugins/search.php?q=zelist

Thanks
From scribu at gmail.com  Mon Jun 22 09:47:26 2009
From: scribu at gmail.com (scribu)
Date: Mon Jun 22 09:47:45 2009
Subject: [wp-hackers] remove plugin from extend
In-Reply-To: <59e7f3130906220001s63a2e3bap1d4425b255838bcb@mail.gmail.com>
References: <59e7f3130906220001s63a2e3bap1d4425b255838bcb@mail.gmail.com>
Message-ID: <349fe48b0906220247o5aaf1b6cqa46ff86aeb7e9311@mail.gmail.com>

The first thing you should do is remove all the files from the old URL
so that it won't show up anywhere

On 6/22/09, Malaiac <malaiac@gmail.com> wrote:
> What should be the good person to contact, in order to remove a plugin
> from extend ?
>
> I requested and got approved two times for the same plugin under two
> different names, and the old wrong named version is still there,
> despite three messages through Extend request contact page.
> BAD : http://wordpress.org/extend/plugins/zelist-directory/
> GOOD : http://wordpress.org/extend/plugins/zelist/
>
> And unsurprisingly, the Extend search engine, returns the bad
> (outdated) one first
> http://wordpress.org/extend/plugins/search.php?q=zelist
>
> Thanks
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
http://scribu.net
From nb at nikolay.bg  Mon Jun 22 10:29:16 2009
From: nb at nikolay.bg (Nikolay Bachiyski)
Date: Mon Jun 22 10:29:50 2009
Subject: [wp-hackers] Question about translation extensions during WP 2.8
In-Reply-To: <4A3EB57F.8000209@code-styling.de>
References: <349fe48b0906210712k491e92b8w333e4334b3cb600c@mail.gmail.com> 
	<4A3E71CE.4060809@code-styling.de>
	<7CDFDF46-1C6E-46E7-8A0F-97AD4625B730@ftwr.co.uk> 
	<4A3E8503.3080006@code-styling.de>
	<233F0CAA-65F2-4D23-A74B-57CD69D6CAF4@ftwr.co.uk> 
	<4A3EB57F.8000209@code-styling.de>
Message-ID: <87e663fa0906220329n68a8cfd7xbb9bf9ceea290807@mail.gmail.com>

On Mon, Jun 22, 2009 at 01:34, Heiko Rabe<heiko.rabe@code-styling.de> wrote:
> Thanks to Nikolay and Peter,
>
> final question(s): This leads (or have to lead) to multiple occurances at
> translation systems with the same phrase ?
> The only difference is the context so the same term occuring in 50 different
> contexts but maybe translated the same way now consumes 50 times more space
> in mo file and PHP memory as would be required, right ?
>

Yes.

The same points were valid for the |-way of doing this.

Happy hacking,
Nikolay.
From scribu at gmail.com  Mon Jun 22 13:24:29 2009
From: scribu at gmail.com (scribu)
Date: Mon Jun 22 13:24:42 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <1698046497813448295@unknownmsgid>
References: <18901288.551245202243967.JavaMail.DELL-1405$@Dell-1405>
	<1698046497813448295@unknownmsgid>
Message-ID: <349fe48b0906220624m48e42efald3445a3e919181ab@mail.gmail.com>

Submitted a ticket on the topic: http://core.trac.wordpress.org/ticket/10233

-- 
http://scribu.net
From mikeschinkel at newclarity.net  Tue Jun 23 00:14:39 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue Jun 23 00:16:43 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <25450602.1561245716040926.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl5LJEd8c48973e3a243133a5ffbd,
	mikeschinkel@newclarity.net, 14880276.1581245716079036.J>

scribu:

Thanks for submitting.  Unfortunately trying to decipher the ones that came before (not your fault) is like try to find the holy grail!

   http://core.trac.wordpress.org/ticket/10233
   http://core.trac.wordpress.org/ticket/5183
   http://core.trac.wordpress.org/ticket/5153
   http://core.trac.wordpress.org/ticket/2659   

So what the heck is the resolution?  One table, multiple tables, overload taxonomy, overload wp_options, do without?!?  Of course you may be as confused as me.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "scribu" <scribu@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Monday, June 22, 2009 9:24:29 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Link metadata?

Submitted a ticket on the topic: http://core.trac.wordpress.org/ticket/10233

-- 
http://scribu.net
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From scribu at gmail.com  Tue Jun 23 11:57:38 2009
From: scribu at gmail.com (scribu)
Date: Tue Jun 23 11:57:55 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <-3034966990543341494@unknownmsgid>
References: <25450602.1561245716040926.JavaMail.DELL-1405$@Dell-1405>
	<-3034966990543341494@unknownmsgid>
Message-ID: <349fe48b0906230457n71bfe33cw4ef8e176cff967d7@mail.gmail.com>

>
> So what the heck is the resolution?  One table, multiple tables, overload
> taxonomy, overload wp_options, do without?!?  Of course you may be as
> confused as me.
>
> -Mike Schinkel
>

There doens't seem to be any agreement on the matter yet.

-- 
http://scribu.net
From mikeschinkel at newclarity.net  Tue Jun 23 16:21:55 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue Jun 23 16:22:30 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <349fe48b0906230457n71bfe33cw4ef8e176cff967d7@mail.gmail.com>
References: <25450602.1561245716040926.JavaMail.DELL-1405$@Dell-1405>
	<-3034966990543341494@unknownmsgid>
	<349fe48b0906230457n71bfe33cw4ef8e176cff967d7@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl5MBLnd8c345bbba5041f4ffcd69,
	mikeschinkel@newclarity.net, E7C96890-4B96-422B-A483>

On Jun 23, 2009, at 7:57 AM, scribu wrote:
> There doens't seem to be any agreement on the matter yet.

Next step?  Discuss it here?  There?  On which ticket?
Thanks in advance.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/

From scribu at gmail.com  Tue Jun 23 16:43:42 2009
From: scribu at gmail.com (scribu)
Date: Tue Jun 23 16:43:59 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <2676606845500075860@unknownmsgid>
References: <25450602.1561245716040926.JavaMail.DELL-1405$@Dell-1405>
	<-3034966990543341494@unknownmsgid>
	<349fe48b0906230457n71bfe33cw4ef8e176cff967d7@mail.gmail.com>
	<2676606845500075860@unknownmsgid>
Message-ID: <349fe48b0906230943o2c1e89a3l8d7058b9323d5ecf@mail.gmail.com>

The main ticket seems to be http://core.trac.wordpress.org/ticket/5183

I think it's better to discuss it there since it won't get lost as easily as
previous discussions on wp-hackers. Also, it has better formatting.

-- 
http://scribu.net
From mikeschinkel at newclarity.net  Tue Jun 23 17:14:59 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue Jun 23 17:16:56 2009
Subject: [wp-hackers] Link metadata?
In-Reply-To: <349fe48b0906230943o2c1e89a3l8d7058b9323d5ecf@mail.gmail.com>
References: <25450602.1561245716040926.JavaMail.DELL-1405$@Dell-1405>
	<-3034966990543341494@unknownmsgid>
	<349fe48b0906230457n71bfe33cw4ef8e176cff967d7@mail.gmail.com>
	<2676606845500075860@unknownmsgid>
	<349fe48b0906230943o2c1e89a3l8d7058b9323d5ecf@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl5MCFG2b029a4b7f45bfc9356aaf,
	mikeschinkel@newclarity.net, 9EDD7D83-961F-4EE5-829B>

The discussion on trac said a single meta table would be too abstract  
and create indexes that were too large and thus too slow.
So I suggested keeping wp_postmeta and wp_usermeta and adding a more  
generic table called wp_othermeta for comments, links, or whatever.

Discussion here:  http://core.trac.wordpress.org/ticket/5183

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/



On Jun 23, 2009, at 12:43 PM, scribu wrote:

> The main ticket seems to be http://core.trac.wordpress.org/ticket/5183
>
> I think it's better to discuss it there since it won't get lost as  
> easily as
> previous discussions on wp-hackers. Also, it has better formatting.
>
> -- 
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at newclarity.net  Thu Jun 25 03:24:56 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jun 25 03:25:29 2009
Subject: [wp-hackers] Best Way
Message-ID: <EMEWEMEW2_DELIMl5NMOu96abc2a5de6aa175975ae2,
	mikeschinkel@newclarity.net, 16911435.2641245897946772.J>

So I'm about to polish up my first plugin that I'll actually be releasing (from the 20+ I've written for my own projects, most of which I hope to eventually release) and I've got a simple question. 

My plugin needs to use functions in /wp-admin/includes/bookmark.php which are not included by default. I have the following line at the top of the file but it feels like a hack: 

require_once(ABSPATH.'/wp-admin/includes/bookmark.php'); 

Is there a better way to do this vs. hardcoding? 

Also this plugin requires another plugin (I'm developing these plugins in part as real-world examples of the dependent plugin issues we were recently discussing on this list.) This is the code I have to include the other plugin's code to ensure they are loaded in the correct order, which also feels like a hack: 

if (!class_exists('WP_Options')) 
require_once(plugin_dir_path( __FILE__ ) . '../wp-options/wp-options.php'); 

Any suggestions for either? Thanks in advance. 

-Mike Schinkel 
Custom Wordpress Plugins 
http://mikeschinkel.com/custom-wordpress-plugins 
From wp-hackers at striderweb.com  Thu Jun 25 03:36:16 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Thu Jun 25 03:36:46 2009
Subject: [wp-hackers] Best Way
In-Reply-To: <EMEWEMEW2_DELIMl5NMOu96abc2a5de6aa175975ae2,
	mikeschinkel@newclarity.net, 16911435.2641245897946772.J>
References: <EMEWEMEW2_DELIMl5NMOu96abc2a5de6aa175975ae2,
	mikeschinkel@newclarity.net, 16911435.2641245897946772.J>
Message-ID: <B1874867-A85E-4303-B295-5ECB6A658F2A@striderweb.com>


On Jun 24, 2009, at 10:24 PM, Mike Schinkel wrote:

> My plugin needs to use functions in /wp-admin/includes/bookmark.php  
> which are not included by default. I have the following line at the  
> top of the file but it feels like a hack:
>
> require_once(ABSPATH.'/wp-admin/includes/bookmark.php');
>
> Is there a better way to do this vs. hardcoding?

That's pretty much what I do, but I first do a function_exists() on  
the function I actually need from that file.  If it doesn't exist  
*then* I require_once().  (I'm told that require_once is "expensive"  
in PHP.)

> Also this plugin requires another plugin (I'm developing these  
> plugins in part as real-world examples of the dependent plugin  
> issues we were recently discussing on this list.) This is the code I  
> have to include the other plugin's code to ensure they are loaded in  
> the correct order, which also feels like a hack:
>
> if (!class_exists('WP_Options'))
> require_once(plugin_dir_path( __FILE__ ) . '../wp-options/wp- 
> options.php');
>
> Any suggestions for either? Thanks in advance.

I don't claim it's the best system (yet... ;-)  ) but you might take a  
look at Strider Core: <http://code.google.com/p/strider-core/> --  
perhaps it will give you some ideas.

Stephen
From mikeschinkel at newclarity.net  Thu Jun 25 03:58:43 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jun 25 03:59:52 2009
Subject: [wp-hackers] Best Way
In-Reply-To: <B1874867-A85E-4303-B295-5ECB6A658F2A@striderweb.com>
Message-ID: <EMEWEMEW2_DELIMl5NMwh301cb1a19294c76553281c,
	mikeschinkel@newclarity.net, 4223196.2721245902326285.J>

"Stephen Rider" <wp-hackers@striderweb.com> wrote:
> That's pretty much what I do, but I first do a function_exists() 
> on the function I actually need from that file.  If it doesn't 
> exist *then* I require_once().  (I'm told that require_once is 
> "expensive" in PHP.)

Interesting. I never knew that was a concern. To learn more I googled and found some interesting discussion on the topic, specifically http://stackoverflow.com/questions/186338/why-is-requireonce-so-bad-to-use

Evidently in more recent versions of PHP 5 (not exactly sure which subversion) the difference in performance is trivial.  But it's still useful to know, thanks.

> I don't claim it's the best system (yet... ;-)  ) but you might 
> take a look at Strider Core, perhaps it will give you some ideas.

Will do, thanks.

-Mike
From piemanek at gmail.com  Thu Jun 25 14:41:58 2009
From: piemanek at gmail.com (Simon Blackbourn)
Date: Thu Jun 25 14:42:10 2009
Subject: [wp-hackers] Address and name used in notification messages
Message-ID: <65b196650906250741vcc8eab0y56fc3e88b293671b@mail.gmail.com>

Hi

When you set up a new WordPress site, it asks you for an email address. This
then populates the 'admin_email' option, as well as the administrator's user
profile. But then this address doesn't seem to get used for notifications,
instead they come from "WordPress <wordpress@myblog.com>". This is a totally
made-up address that the blog owner has no control over as it doesn't appear
in any options anywhere.

Should a user reply to a notification email (which is certainly likely,
especially with non-teccie users) it won't go anywhere unless you've set up
an email address (or alias) of that name on your hosting.

Some email-sending functions are in pluggable.php so can be overridden to
use a different From name and address (e.g. wp_new_user_notification,
wp_notify_postauthor, wp_notify_moderator) but others are not (e.g.
retrieve_password).

It seems to me that:

1. The From name should be the 'blogname' option, rather than "WordPress".

2. The From address should be the admin_email option, rather than
wordpress@myblog.com.

3. The option name 'admin_email' is confusing, because it's actually the
blog email address, not the admnistrator's (the administrator's email
address is in their user profile). It would make more sense to have the
option name called 'blog_email', then on the general options screen you'd
have 'Blog title', 'Blog address' and 'Blog email'.

4. If some email-sending functions are currently in pluggable.php, then all
of them should be there for consistency.

There may be good arguments against some of these that I haven't thought of,
I'm sure you'll let me know if there are!

Cheers
Simon
From jer at simianuprising.com  Thu Jun 25 15:29:32 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Thu Jun 25 15:29:57 2009
Subject: [wp-hackers] Address and name used in notification messages
In-Reply-To: <65b196650906250741vcc8eab0y56fc3e88b293671b@mail.gmail.com>
References: <65b196650906250741vcc8eab0y56fc3e88b293671b@mail.gmail.com>
Message-ID: <e1202cb10906250829g13fed451gb67c49c7b93ad16e@mail.gmail.com>

On Thu, Jun 25, 2009 at 4:41 PM, Simon Blackbourn<piemanek@gmail.com> wrote:
> 1. The From name should be the 'blogname' option, rather than "WordPress".

Definitely, this is a no-brainer, I've always hated this.

> 2. The From address should be the admin_email option, rather than
> wordpress@myblog.com.

+1, I don't see any reason not to do this. Security of the admin email
or something? Seems like its up to people to make the admin_email
general if they want that, most won't care and would get more benefit
from it being a real address in case of replies.

> 3. The option name 'admin_email' is confusing, because it's actually the
> blog email address, not the admnistrator's (the administrator's email
> address is in their user profile). It would make more sense to have the
> option name called 'blog_email', then on the general options screen you'd
> have 'Blog title', 'Blog address' and 'Blog email'.

+1, it just makes SO much more sense to do it this way. Also worth
noting is that there can be multiple administrators in WP, preferably
with usernames other than 'admin', rendering the situation even more
confusing. It *is* the blog_email and not the admin_email. If anything
it *might* be a good idea to also have a pulldown menu of users so
that you could choose a user rather than a specific address, and the
system could just use whatever email that user has set in case they
change it. IMHO not really worth it to go that far, but I think it
would be the logical way of handing it if you think it should be tied
to a user rather than the 'blog_url' (Note: I think it should
definitely be possible to set it to a non-user email even if you can
use a user, as there are really elegant choices that aren't linked to
any user, like setting up site@myurl.com and having it send from
that).

-- 
Jeremy Clarke | http://jeremyclarke.org
Code and Design | http://globalvoicesonline.org
From if.website at gmail.com  Thu Jun 25 15:11:35 2009
From: if.website at gmail.com (Austin Matzko)
Date: Thu Jun 25 15:39:11 2009
Subject: [wp-hackers] Address and name used in notification messages
In-Reply-To: <65b196650906250741vcc8eab0y56fc3e88b293671b@mail.gmail.com>
References: <65b196650906250741vcc8eab0y56fc3e88b293671b@mail.gmail.com>
Message-ID: <674b4a3b0906250811m1c6bedc4xe8776aeebf46ef50@mail.gmail.com>

On Thu, Jun 25, 2009 at 9:41 AM, Simon Blackbourn <piemanek@gmail.com> wrote:
> It seems to me that:
>
> 1. The From name should be the 'blogname' option, rather than "WordPress".
>
> 2. The From address should be the admin_email option, rather than
> wordpress@myblog.com.
>
> 3. The option name 'admin_email' is confusing, because it's actually the
> blog email address, not the admnistrator's (the administrator's email
> address is in their user profile). It would make more sense to have the
> option name called 'blog_email', then on the general options screen you'd
> have 'Blog title', 'Blog address' and 'Blog email'.
>
> 4. If some email-sending functions are currently in pluggable.php, then all
> of them should be there for consistency.
>
> There may be good arguments against some of these that I haven't thought of,
> I'm sure you'll let me know if there are!

There are a number of Trac tickets that have discussed this issue.
For example, see http://core.trac.wordpress.org/ticket/5007

Basically the problem is a catch-22: if you use admin_email, some
hosts will refuse to send the mail because the origin domain differs
from the sending domain.

And (apparently a much smaller number of) other hosts block
wordpress@* outgoing mail when that account doesn't exist.

There's no single answer that works for everyone.
From yahgrp at poplarware.com  Thu Jun 25 15:55:02 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Thu Jun 25 15:52:18 2009
Subject: [wp-hackers] Address and name used in notification messages
In-Reply-To: <674b4a3b0906250811m1c6bedc4xe8776aeebf46ef50@mail.gmail.com>
References: <65b196650906250741vcc8eab0y56fc3e88b293671b@mail.gmail.com>
	<674b4a3b0906250811m1c6bedc4xe8776aeebf46ef50@mail.gmail.com>
Message-ID: <4A439DD6.1060500@poplarware.com>

Austin Matzko wrote:
> Basically the problem is a catch-22: if you use admin_email, some
> hosts will refuse to send the mail because the origin domain differs
> from the sending domain.
> 
> And (apparently a much smaller number of) other hosts block
> wordpress@* outgoing mail when that account doesn't exist.
> 
> There's no single answer that works for everyone.

All the more reason to have it be a configurable option, separate from 
the "admin" user's email address. There could be some helpful text 
explaining these two issues, and a button that lets you send a test 
email message to see what works for you.

    --Jennifer

-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com
Drupal, WordPress, and custom Web programming

From mikeschinkel at newclarity.net  Thu Jun 25 17:37:55 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jun 25 17:38:25 2009
Subject: [wp-hackers] Address and name used in notification messages
In-Reply-To: <674b4a3b0906250811m1c6bedc4xe8776aeebf46ef50@mail.gmail.com>
References: <65b196650906250741vcc8eab0y56fc3e88b293671b@mail.gmail.com>
	<674b4a3b0906250811m1c6bedc4xe8776aeebf46ef50@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl5OCbl330b7cc1ffeed8fa9048ea,
	mikeschinkel@newclarity.net, 5BBE34FD-A8D7-4E3A-AE8F>

On Jun 25, 2009, at 11:11 AM, Austin Matzko wrote:
> On Thu, Jun 25, 2009 at 9:41 AM, Simon Blackbourn  
> <piemanek@gmail.com> wrote:
>> It seems to me that:
>>
>> 1. The From name should be the 'blogname' option, rather than  
>> "WordPress".
>>
>> 2. The From address should be the admin_email option, rather than
>> wordpress@myblog.com.
>>
>> 3. The option name 'admin_email' is confusing, because it's  
>> actually the
>> blog email address, not the admnistrator's (the administrator's email
>> address is in their user profile). It would make more sense to have  
>> the
>> option name called 'blog_email', then on the general options screen  
>> you'd
>> have 'Blog title', 'Blog address' and 'Blog email'.
>>
>> 4. If some email-sending functions are currently in pluggable.php,  
>> then all
>> of them should be there for consistency.
>>
>> There may be good arguments against some of these that I haven't  
>> thought of,
>> I'm sure you'll let me know if there are!
>
> There are a number of Trac tickets that have discussed this issue.
> For example, see http://core.trac.wordpress.org/ticket/5007

+1 on Simon's entire list save addressing the issues covered in #5007.

> Basically the problem is a catch-22: if you use admin_email, some
> hosts will refuse to send the mail because the origin domain differs
> from the sending domain.
>
> And (apparently a much smaller number of) other hosts block
> wordpress@* outgoing mail when that account doesn't exist.
>
> There's no single answer that works for everyone

There could be a 3rd answer....

On Jun 25, 2009, at 11:55 AM, Jennifer Hodgdon wrote:
> All the more reason to have it be a configurable option, separate  
> from the "admin" user's email address. There could be some helpful  
> text explaining these two issues, and a button that lets you send a  
> test email message to see what works for you.

+1, this is the 3rd answer.

That said, see my next email with the subject "Workflow in WordPress."

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/

From piemanek at gmail.com  Thu Jun 25 18:23:03 2009
From: piemanek at gmail.com (Simon Blackbourn)
Date: Thu Jun 25 18:23:19 2009
Subject: [wp-hackers] Address and name used in notification messages
In-Reply-To: <-1870326184228812051@unknownmsgid>
References: <65b196650906250741vcc8eab0y56fc3e88b293671b@mail.gmail.com>
	<674b4a3b0906250811m1c6bedc4xe8776aeebf46ef50@mail.gmail.com>
	<-1870326184228812051@unknownmsgid>
Message-ID: <65b196650906251123y3f307163ie09cfbbe66e6b0e0@mail.gmail.com>

>
> There are a number of Trac tickets that have discussed this issue.
>> For example, see http://core.trac.wordpress.org/ticket/5007
>>
>
> +1 on Simon's entire list save addressing the issues covered in #5007.


that ticket's confused the hell out of me, i can't figure out what's been
decided with it!
From mikeschinkel at newclarity.net  Thu Jun 25 18:29:24 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jun 25 18:30:40 2009
Subject: [wp-hackers] Address and name used in notification messages
In-Reply-To: <65b196650906251123y3f307163ie09cfbbe66e6b0e0@mail.gmail.com>
References: <65b196650906250741vcc8eab0y56fc3e88b293671b@mail.gmail.com>
	<674b4a3b0906250811m1c6bedc4xe8776aeebf46ef50@mail.gmail.com>
	<-1870326184228812051@unknownmsgid>
	<65b196650906251123y3f307163ie09cfbbe66e6b0e0@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl5ODYI43fea67562ead36b5f33d4,
	mikeschinkel@newclarity.net, 0AF7FAE2-C275-4299-8850>

On Jun 25, 2009, at 2:23 PM, Simon Blackbourn wrote:
> that ticket's confused the hell out of me, i can't figure out what's  
> been
> decided with it!

Welcome to the world of WordPress Trac.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/


From mikeschinkel at newclarity.net  Thu Jun 25 19:15:31 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu Jun 25 19:16:48 2009
Subject: [wp-hackers] WorkFlow in WordPress?
Message-ID: <EMEWEMEW2_DELIMl5OEFlcfd975170d6f99a9801c70,
	mikeschinkel@newclarity.net, 9C832ACB-AAEC-4D37-8CF0>

Hi Hackers:

I to bring up a discussion about Workflow in WordPress.  But first  
some background:

I have recently been working on a personal project that needs some  
built in workflow so that several processes can be automated related  
to links. I decided the best way to do that was to use a Link Category  
with non-visible links as a workflow queue and use link metadata to  
store the the current workflow state for each link (which is why I  
started this[1] discussion.)

Today Simon Blackbourn emailed the list [2] about the email address  
and name used in notification messages to which Jennifer Hodgdon  
suggested a configurable option, separate from the "admin" user's  
email address and I agree with that.  Of course adding such an option  
would increase the complexity of an install and thus I would expect  
the community would fight against such an option as if its life  
depended on it.

However what I could see working would be to have a notice in the  
admin section that shows up after initial installation that says "You  
haven't set your blog email address yet. Click here to set it now!"   
That way the email address could default to wordpress@mydomain.com,  
not require any additional conceptual load on the user during install,  
and be very simple to update after the user gets past being  
overwhelmed by the initial installation (I'm assuming the least  
technical user possible here. :)

Of course that looks so very similar to a workflow system to me  
especially since I've been thinking about exactly the same for my  
existing project.  And as I write this it occurs to me that WordPress  
could benefit from essentially a checklist of "todo" items that could  
be added as notifications upon initial install. And it also occurs to  
me that many plugins could also benefit from the same, i.e. "You just  
installed me, now go set my options!"

Akismet actually currently does this using the "admin_notices" hook  
and this hook could be used by any plugin to generate the types of  
notices I'm mentioning but doing so needs to be implicitly coupled to  
arbitrary data items, such as the Akismet API key in wp_options. But  
this approach isn't formalized and it's not standardized in any way to  
handle workflow so there are no obvious pattern for developers to  
follow in creating workflow and no "economies of scale" where numerous  
coding could be contributing to the same overall system.

So this makes me think it makes sense to introduce a simple workflow  
system into WordPress, possibly first as a plugin, that would create a  
queue for arbitrary workflows that could be defined and used by other  
plugins.  To see if anyone has come before with these concerts I  
googled and found than an Edward Dale of University of North Carolina  
(cc'd on this email) has done some work [3][4][5] in this area along  
with a plugin called Zensor[6] though I didn't see that anyone else is  
really touching on the subject. Looking at Zensor it seems to address  
workflow related to moderation of post contributors and not generic  
workflow in general.

What I have in mind was a generic workflow system, something that  
could handle the Zensor use cases but also a while lot more. Something  
like adding a wp_workflow table to contain a list of in-process  
workflows with fields for id (int), name (varchar), type (varchar),  
state/status (varchar), meta (text, for serialized array) and probably  
a few other fields I haven't thought of yet.  The code would include  
some schedule tasks that process the workflow queue periodically and  
then call hooks to process the workflow queue and move each workflow  
items from state to state as appropriate. It would also include  
various helper functions to streamline the process of using the  
workflow system. By itself this plugin/functionality would do very  
little for end users; it would only be something that other plugins or  
even core could use to implement workflows.

I'm emailing to get your thoughts on this. I'm thinking seriously of  
implementing this since I pretty much need it for my own use but I'd  
like to know what others think about it, if others have previously  
spent any time thinking about this, if others may even already have  
code for it, and if others here think this is something that could  
make it's way into core.

So, thoughts?

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/

[1] http://comox.textdrive.com/pipermail/wp-hackers/2009-June/026584.html 
  (Link Metadata)
[2] http://comox.textdrive.com/pipermail/wp-hackers/2009-June/026706.html 
  (Address and name used in notification messages)
[3] http://comox.textdrive.com/pipermail/wp-hackers/2009-March/025470.html 
  (GSoC2009 idea: Workflows/Moderation in WordPress)
[4] http://codex.wordpress.org/User:Scompt/Workflow_With_WordPress
[5] http://scompt.com/archives/2009/03/29/wordpress-gsoc-2009-idea-workflow
[6] http://wordpress.org/extend/plugins/zensor/

From piemanek at gmail.com  Fri Jun 26 18:27:05 2009
From: piemanek at gmail.com (Simon Blackbourn)
Date: Fri Jun 26 18:27:21 2009
Subject: [wp-hackers] Address and name used in notification messages
In-Reply-To: <-1919169385007838349@unknownmsgid>
References: <65b196650906250741vcc8eab0y56fc3e88b293671b@mail.gmail.com>
	<674b4a3b0906250811m1c6bedc4xe8776aeebf46ef50@mail.gmail.com>
	<-1870326184228812051@unknownmsgid>
	<65b196650906251123y3f307163ie09cfbbe66e6b0e0@mail.gmail.com>
	<-1919169385007838349@unknownmsgid>
Message-ID: <65b196650906261127l26b4e082n648b1eeb7413e7e8@mail.gmail.com>

So following on from Jennifer's reply, it seems that the install screen
could have three inputs instead of the current two, with short helper text
after each:

 - Blog Title (the name of your blog)
 - Blog Email (the email address that will be used for sending notification
messages, password reminders, etc)
 - Administrator Email (the email address assigned to your administrator
user account)

Then somewhere in the Codex documentation something like: "Please ensure
that Blog Email addresses are valid. If notification messages don't get
delivered, please contact your hosting company for advice."

That way WordPress is clearly putting the onus on the hosting company for
email delivery, which is as I believe it should be, because as far as I can
tell there is in fact no 'bug' in WordPress (as is mentioned in trac ticket
5007).




2009/6/25 Mike Schinkel <mikeschinkel@newclarity.net>

> On Jun 25, 2009, at 2:23 PM, Simon Blackbourn wrote:
>
>> that ticket's confused the hell out of me, i can't figure out what's been
>> decided with it!
>>
>
> Welcome to the world of WordPress Trac.
>
>
> -Mike Schinkel
> WordPress Custom Plugins
> http://mikeschinkel.com/custom-wordpress-plugins/
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mikeschinkel at newclarity.net  Sun Jun 28 22:03:07 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun Jun 28 22:08:18 2009
Subject: [wp-hackers] Re: [wp-pro] Discussion: 'Acceptable' and
	'Unacceptable' Posting Behavior On This List
In-Reply-To: <55964d020906280450t14a777a3w57444549dfc88694@mail.gmail.com>
References: <399c7c160906261646t4a1e5a7r30f5913692e6ce9a@mail.gmail.com>
	<55964d020906280450t14a777a3w57444549dfc88694@mail.gmail.com>
	<9EBCF0C8-1175-459A-BF11-A936B4360C9B@newclarity.net>
Message-ID: <EMEW3|ade3c7c58b2f0fa644eeb041bbe1ba89l5RH770cmikeschinkel|newclarity.net|9EBCF0C8-1175-459A-BF11-A936B4360C9B@newclarity.net>

> There seems to be a need for an email list that offers support to  
> WordPress users, and where people can ask WP questions and get  
> answers. I know there are the forums, but forums aren't for  
> everybody. I personally am not a fan of forums, while I do find that  
> the various email lists that I'm on offer a lot of value. A great  
> example is the WordPress Israel Google Group (http://groups.google.com/group/wpheb 
> ). It's in Hebrew which obviously limits the audience, but the  
> activity there is incredibly helpful and I always feel like it's a  
> shame a similar group doesn't exist in English.

I strongly agree.  +1.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/



On Jun 28, 2009, at 7:50 AM, Miriam Schwab wrote:

> I hope I don't get flamed for suggesting this, but I've been  
> thinking about this issue for a while. There seems to be a need for  
> an email list that offers support to WordPress users, and where  
> people can ask WP questions and get answers. I know there are the  
> forums, but forums aren't for everybody. I personally am not a fan  
> of forums, while I do find that the various email lists that I'm on  
> offer a lot of value. A great example is the WordPress Israel Google  
> Group (http://groups.google.com/group/wpheb). It's in Hebrew which  
> obviously limits the audience, but the activity there is incredibly  
> helpful and I always feel like it's a shame a similar group doesn't  
> exist in English.
>
> So...ages ago I set up the following Yahoo Group: http://tech.groups.yahoo.com/group/wpgarage/ 
>  (named after my WordPress Garage blog). It has a whopping two  
> members and no activity because I never did anything with it. But  
> maybe it can become a worthwhile resource, and also a place to send  
> all the people who end up here with WP development questions.
>
> Or not. Whatever you guys think. But if some of you want to join and  
> see how it goes, it would be great to have you :)
>
> Miriam
>
> --------------------------------------
> Miriam Schwab
> illuminea marketing & media | www.illuminea.com
> http://wordpressgarage.com
> mschwab@illuminea.com
>
>
> On Sat, Jun 27, 2009 at 2:46 AM, Made of These Studio <made.of.these@gmail.com 
> > wrote:
> Hey everyone,
>
> This might not be the right place to post this message to start a  
> discussion, but I couldn't figure of a better/more likely place to  
> start it.
>
> So please, if I posted in the wrong place and there's a better  
> place, PLEASE let me know and direct me there.  My intention is to  
> start a discussion and get things cleared up and confirmed for both  
> the older WP pro vets here and the newer incoming people.
>
> After the more recent rash of people posting to the list asking for  
> nonpaid help (and help that one can/should get in the forums):
>
> The question for discussion is:
>
> What IS and IS NOT acceptable/supported posting behavior to this list?
>
> What are the guidelines for signatures in posts (if there are even  
> guidelines to begin with)?
>
> What SORTS of posts are okay and what are not?
>
> Both answers seem to be pretty obvious (to me, anyways), but maybe  
> we could all use a one-shot clarification after all the non-wp pro  
> postings we've gotten lately.
>
> In regards to ideas about deterring the off-topic posters from  
> posting to this list or blacklisting them, maybe there really needs  
> to be more steps involved in the signing up process for this list  
> which includes a general overview on what is and isn't accepted on  
> this list.  Currently as far as I know, the sign-up process for this  
> list has no such thing.  If there's a general overview guidelines  
> thing pre-signup, then we on the list can politely point misdirected  
> users to the overview notice and then to the support forum and if  
> said person(s) don't want to 'follow the rules' then it will be  
> easier for us as whole to guide them out of the list.
>
> Also, another issue that might be contributing to our influx of  
> misdirected users is that I know that there are people on both  
> the .org and .com WP support forums who have pointed users to our  
> mailing list without explaining that the list is specifically to  
> seek out WP pros to HIRE with compensation.
>
> If users who have been misinformed by other users or a simple lack  
> of appropriate information are sent our way and we direct them back/ 
> elsewhere/send them packing, that's also a poor reflection on the WP  
> community as a whole in my opinion (but it just might be my own  
> personal opinion).
>
> So... yeah.
>
> What does everyone think?
>
> Right place or wrong place to discuss this?
>
> Anyone have other ideas or suggestions for tackling this issue?
>
> Did I just make a fool of myself? ;)
>
> J/K... sort of.
>
> Hope everyone's having a great Friday!
>
> ~ Valen
>
>
>
> _______________________________________________
> wp-pro mailing list
> wp-pro@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-pro
>
>
> _______________________________________________
> wp-pro mailing list
> wp-pro@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-pro

From niladam at gmail.com  Sun Jun 28 22:09:35 2009
From: niladam at gmail.com (madalin)
Date: Sun Jun 28 22:10:34 2009
Subject: [wp-hackers] Re: [wp-pro] Discussion: 'Acceptable' and 
	'Unacceptable' Posting Behavior On This List
In-Reply-To: <EMEW3|ade3c7c58b2f0fa644eeb041bbe1ba89l5RH770cmikeschinkel|newclarity.net|9EBCF0C8-1175-459A-BF11-A936B4360C9B@newclarity.net>
References: <399c7c160906261646t4a1e5a7r30f5913692e6ce9a@mail.gmail.com>
	<9EBCF0C8-1175-459A-BF11-A936B4360C9B@newclarity.net>
	<55964d020906280450t14a777a3w57444549dfc88694@mail.gmail.com>
	<EMEW3|ade3c7c58b2f0fa644eeb041bbe1ba89l5RH770cmikeschinkel|newclarity.net|9EBCF0C8-1175-459A-BF11-A936B4360C9B@newclarity.net>
Message-ID: <df809b110906281509j22a29984sb9bf887e85417c42@mail.gmail.com>

Sounds great. +1 :)

On Mon, Jun 29, 2009 at 1:03 AM, Mike
Schinkel<mikeschinkel@newclarity.net> wrote:
>> There seems to be a need for an email list that offers support to
>> WordPress users, and where people can ask WP questions and get answers. I
>> know there are the forums, but forums aren't for everybody. I personally am
>> not a fan of forums, while I do find that the various email lists that I'm
>> on offer a lot of value. A great example is the WordPress Israel Google
>> Group (http://groups.google.com/group/wpheb). It's in Hebrew which obviously
>> limits the audience, but the activity there is incredibly helpful and I
>> always feel like it's a shame a similar group doesn't exist in English.
>
> I strongly agree. ?+1.
>
> -Mike Schinkel
> WordPress Custom Plugins
> http://mikeschinkel.com/custom-wordpress-plugins/
>
>
>
> On Jun 28, 2009, at 7:50 AM, Miriam Schwab wrote:
>
>> I hope I don't get flamed for suggesting this, but I've been thinking
>> about this issue for a while. There seems to be a need for an email list
>> that offers support to WordPress users, and where people can ask WP
>> questions and get answers. I know there are the forums, but forums aren't
>> for everybody. I personally am not a fan of forums, while I do find that the
>> various email lists that I'm on offer a lot of value. A great example is the
>> WordPress Israel Google Group (http://groups.google.com/group/wpheb). It's
>> in Hebrew which obviously limits the audience, but the activity there is
>> incredibly helpful and I always feel like it's a shame a similar group
>> doesn't exist in English.
>>
>> So...ages ago I set up the following Yahoo Group:
>> http://tech.groups.yahoo.com/group/wpgarage/?(named after my WordPress
>> Garage blog). It has a whopping two members and no activity because I never
>> did anything with it. But maybe it can become a worthwhile resource, and
>> also a place to send all the people who end up here with WP development
>> questions.
>>
>> Or not. Whatever you guys think. But if some of you want to join and see
>> how it goes, it would be great to have you :)
>>
>> Miriam
>>
>> --------------------------------------
>> Miriam Schwab
>> illuminea marketing & media | www.illuminea.com
>> http://wordpressgarage.com
>> mschwab@illuminea.com
>>
>>
>> On Sat, Jun 27, 2009 at 2:46 AM, Made of These Studio
>> <made.of.these@gmail.com> wrote:
>> Hey everyone,
>>
>> This might not be the right place to post this message to start a
>> discussion, but I couldn't figure of a better/more likely place to start it.
>>
>> So please, if I posted in the wrong place and there's a better place,
>> PLEASE let me know and direct me there. ?My intention is to start a
>> discussion and get things cleared up and confirmed for both the older WP pro
>> vets here and the newer incoming people.
>>
>> After the more recent rash of people posting to the list asking for
>> nonpaid help (and help that one can/should get in the forums):
>>
>> The question for discussion is:
>>
>> What IS and IS NOT acceptable/supported posting behavior to this list?
>>
>> What are the guidelines for signatures in posts (if there are even
>> guidelines to begin with)?
>>
>> What SORTS of posts are okay and what are not?
>>
>> Both answers seem to be pretty obvious (to me, anyways), but maybe we
>> could all use a one-shot clarification after all the non-wp pro postings
>> we've gotten lately.
>>
>> In regards to ideas about deterring the off-topic posters from posting to
>> this list or blacklisting them, maybe there really needs to be more steps
>> involved in the signing up process for this list which includes a general
>> overview on what is and isn't accepted on this list. ?Currently as far as I
>> know, the sign-up process for this list has no such thing. ?If there's a
>> general overview guidelines thing pre-signup, then we on the list can
>> politely point misdirected users to the overview notice and then to the
>> support forum and if said person(s) don't want to 'follow the rules' then it
>> will be easier for us as whole to guide them out of the list.
>>
>> Also, another issue that might be contributing to our influx of
>> misdirected users is that I know that there are people on both the .org and
>> .com WP support forums who have pointed users to our mailing list without
>> explaining that the list is specifically to seek out WP pros to HIRE with
>> compensation.
>>
>> If users who have been misinformed by other users or a simple lack of
>> appropriate information are sent our way and we direct them
>> back/elsewhere/send them packing, that's also a poor reflection on the WP
>> community as a whole in my opinion (but it just might be my own personal
>> opinion).
>>
>> So... yeah.
>>
>> What does everyone think?
>>
>> Right place or wrong place to discuss this?
>>
>> Anyone have other ideas or suggestions for tackling this issue?
>>
>> Did I just make a fool of myself? ;)
>>
>> J/K... sort of.
>>
>> Hope everyone's having a great Friday!
>>
>> ~ Valen
>>
>>
>>
>> _______________________________________________
>> wp-pro mailing list
>> wp-pro@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-pro
>>
>>
>> _______________________________________________
>> wp-pro mailing list
>> wp-pro@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-pro
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Cu drag,
madalin
http://madalin.eu
From mikeschinkel at newclarity.net  Sun Jun 28 22:17:13 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Sun Jun 28 22:18:19 2009
Subject: [wp-hackers] Re: [wp-pro] Discussion: 'Acceptable' and
	'Unacceptable' Posting Behavior On This List
In-Reply-To: <55964d020906280450t14a777a3w57444549dfc88694@mail.gmail.com>
References: <399c7c160906261646t4a1e5a7r30f5913692e6ce9a@mail.gmail.com>
	<55964d020906280450t14a777a3w57444549dfc88694@mail.gmail.com>
	<02C9EC2A-92FD-46B1-9AC9-482AB5D8ADED@newclarity.net>
Message-ID: <EMEW3|98aa43c626fd7e61a51901ab193b6197l5RHHY0cmikeschinkel|newclarity.net|02C9EC2A-92FD-46B1-9AC9-482AB5D8ADED@newclarity.net>

Miriam:

Why don't you edit http://codex.wordpress.org/Mailing_Lists and add  
your list?  It's a wiki.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/



On Jun 28, 2009, at 7:50 AM, Miriam Schwab wrote:

> I hope I don't get flamed for suggesting this, but I've been  
> thinking about this issue for a while. There seems to be a need for  
> an email list that offers support to WordPress users, and where  
> people can ask WP questions and get answers. I know there are the  
> forums, but forums aren't for everybody. I personally am not a fan  
> of forums, while I do find that the various email lists that I'm on  
> offer a lot of value. A great example is the WordPress Israel Google  
> Group (http://groups.google.com/group/wpheb). It's in Hebrew which  
> obviously limits the audience, but the activity there is incredibly  
> helpful and I always feel like it's a shame a similar group doesn't  
> exist in English.
>
> So...ages ago I set up the following Yahoo Group: http://tech.groups.yahoo.com/group/wpgarage/ 
>  (named after my WordPress Garage blog). It has a whopping two  
> members and no activity because I never did anything with it. But  
> maybe it can become a worthwhile resource, and also a place to send  
> all the people who end up here with WP development questions.
>
> Or not. Whatever you guys think. But if some of you want to join and  
> see how it goes, it would be great to have you :)
>
> Miriam
>
> --------------------------------------
> Miriam Schwab
> illuminea marketing & media | www.illuminea.com
> http://wordpressgarage.com
> mschwab@illuminea.com
>
>
> On Sat, Jun 27, 2009 at 2:46 AM, Made of These Studio <made.of.these@gmail.com 
> > wrote:
> Hey everyone,
>
> This might not be the right place to post this message to start a  
> discussion, but I couldn't figure of a better/more likely place to  
> start it.
>
> So please, if I posted in the wrong place and there's a better  
> place, PLEASE let me know and direct me there.  My intention is to  
> start a discussion and get things cleared up and confirmed for both  
> the older WP pro vets here and the newer incoming people.
>
> After the more recent rash of people posting to the list asking for  
> nonpaid help (and help that one can/should get in the forums):
>
> The question for discussion is:
>
> What IS and IS NOT acceptable/supported posting behavior to this list?
>
> What are the guidelines for signatures in posts (if there are even  
> guidelines to begin with)?
>
> What SORTS of posts are okay and what are not?
>
> Both answers seem to be pretty obvious (to me, anyways), but maybe  
> we could all use a one-shot clarification after all the non-wp pro  
> postings we've gotten lately.
>
> In regards to ideas about deterring the off-topic posters from  
> posting to this list or blacklisting them, maybe there really needs  
> to be more steps involved in the signing up process for this list  
> which includes a general overview on what is and isn't accepted on  
> this list.  Currently as far as I know, the sign-up process for this  
> list has no such thing.  If there's a general overview guidelines  
> thing pre-signup, then we on the list can politely point misdirected  
> users to the overview notice and then to the support forum and if  
> said person(s) don't want to 'follow the rules' then it will be  
> easier for us as whole to guide them out of the list.
>
> Also, another issue that might be contributing to our influx of  
> misdirected users is that I know that there are people on both  
> the .org and .com WP support forums who have pointed users to our  
> mailing list without explaining that the list is specifically to  
> seek out WP pros to HIRE with compensation.
>
> If users who have been misinformed by other users or a simple lack  
> of appropriate information are sent our way and we direct them back/ 
> elsewhere/send them packing, that's also a poor reflection on the WP  
> community as a whole in my opinion (but it just might be my own  
> personal opinion).
>
> So... yeah.
>
> What does everyone think?
>
> Right place or wrong place to discuss this?
>
> Anyone have other ideas or suggestions for tackling this issue?
>
> Did I just make a fool of myself? ;)
>
> J/K... sort of.
>
> Hope everyone's having a great Friday!
>
> ~ Valen
>
>
>
> _______________________________________________
> wp-pro mailing list
> wp-pro@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-pro
>
>
> _______________________________________________
> wp-pro mailing list
> wp-pro@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-pro

From lynne.pope at gmail.com  Mon Jun 29 03:23:03 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon Jun 29 03:23:36 2009
Subject: [wp-hackers] Re: [wp-pro] Discussion: 'Acceptable' and 
	'Unacceptable' Posting Behavior On This List
In-Reply-To: <EMEW3|98aa43c626fd7e61a51901ab193b6197l5RHHY0cmikeschinkel|newclarity.net|02C9EC2A-92FD-46B1-9AC9-482AB5D8ADED@newclarity.net>
References: <399c7c160906261646t4a1e5a7r30f5913692e6ce9a@mail.gmail.com> 
	<02C9EC2A-92FD-46B1-9AC9-482AB5D8ADED@newclarity.net>
	<55964d020906280450t14a777a3w57444549dfc88694@mail.gmail.com> 
	<EMEW3|98aa43c626fd7e61a51901ab193b6197l5RHHY0cmikeschinkel|newclarity.net|02C9EC2A-92FD-46B1-9AC9-482AB5D8ADED@newclarity.net>
Message-ID: <427667db0906282023g1e5031b0m884e9514a0ddc388@mail.gmail.com>

Have you seen the call from WordPress for feedback/ideas on how to improve
communication?
http://wordpress.org/support/topic/269201?replies=53

As you will see from the feedback garnered so far, there is a general
consensus that things need to be improved. One of the complaints is that
there are already too many different methods of communication.

Providing even more avenues for user support would just add to the mess,
IMO. Hopefully there has been enough feedback by now that changes will be
coming soon.

Lynne
From mikeschinkel at newclarity.net  Mon Jun 29 04:15:04 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon Jun 29 04:39:39 2009
Subject: [wp-hackers] Re: [wp-pro] Discussion: 'Acceptable' and
	'Unacceptable' Posting Behavior On This List
In-Reply-To: <427667db0906282023g1e5031b0m884e9514a0ddc388@mail.gmail.com>
References: <399c7c160906261646t4a1e5a7r30f5913692e6ce9a@mail.gmail.com>
	<02C9EC2A-92FD-46B1-9AC9-482AB5D8ADED@newclarity.net>
	<55964d020906280450t14a777a3w57444549dfc88694@mail.gmail.com>
	<EMEW3|98aa43c626fd7e61a51901ab193b6197l5RHHY0cmikeschinkel|newclarity.net|02C9EC2A-92FD-46B1-9AC9-482AB5D8ADED@newclarity.net>
	<427667db0906282023g1e5031b0m884e9514a0ddc388@mail.gmail.com>
	<1D813E8A-3297-42A7-A92E-D34E355ACEBE@newclarity.net>
Message-ID: <EMEW3|73e9fd2537712f5823afc6d5323e7589l5RNEy0cmikeschinkel|newclarity.net|1D813E8A-3297-42A7-A92E-D34E355ACEBE@newclarity.net>

 From my perspective this is different.  A list for Q&A isn't a  
"method of communication" so much as a "way to get a problem solved."

Unless and until WordPress.org actually takes action and addresses  
this need I for one am a big +1 on having a support email list.  I  
would help on a list but I'll never help on a forum because the forum  
mechanism doesn't work for me.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/



On Jun 28, 2009, at 11:23 PM, Lynne Pope wrote:

> Have you seen the call from WordPress for feedback/ideas on how to  
> improve
> communication?
> http://wordpress.org/support/topic/269201?replies=53
>
> As you will see from the feedback garnered so far, there is a general
> consensus that things need to be improved. One of the complaints is  
> that
> there are already too many different methods of communication.
>
> Providing even more avenues for user support would just add to the  
> mess,
> IMO. Hopefully there has been enough feedback by now that changes  
> will be
> coming soon.
>
> Lynne
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From scribu at gmail.com  Mon Jun 29 07:28:38 2009
From: scribu at gmail.com (scribu)
Date: Mon Jun 29 07:28:52 2009
Subject: [wp-hackers] Re: [wp-pro] Discussion: 'Acceptable' and 
	'Unacceptable' Posting Behavior On This List
In-Reply-To: <EMEW3|73e9fd2537712f5823afc6d5323e7589l5RNEy0cmikeschinkel|newclarity.net|1D813E8A-3297-42A7-A92E-D34E355ACEBE@newclarity.net>
References: <399c7c160906261646t4a1e5a7r30f5913692e6ce9a@mail.gmail.com>
	<02C9EC2A-92FD-46B1-9AC9-482AB5D8ADED@newclarity.net>
	<55964d020906280450t14a777a3w57444549dfc88694@mail.gmail.com>
	<EMEW3|98aa43c626fd7e61a51901ab193b6197l5RHHY0cmikeschinkel|newclarity.net|02C9EC2A-92FD-46B1-9AC9-482AB5D8ADED@newclarity.net>
	<1D813E8A-3297-42A7-A92E-D34E355ACEBE@newclarity.net>
	<427667db0906282023g1e5031b0m884e9514a0ddc388@mail.gmail.com>
	<EMEW3|73e9fd2537712f5823afc6d5323e7589l5RNEy0cmikeschinkel|newclarity.net|1D813E8A-3297-42A7-A92E-D34E355ACEBE@newclarity.net>
Message-ID: <349fe48b0906290028t5a38952g6cd24240430a6e1a@mail.gmail.com>

On Mon, Jun 29, 2009 at 7:15 AM, Mike Schinkel
<mikeschinkel@newclarity.net>wrote:

> From my perspective this is different.  A list for Q&A isn't a "method of
> communication" so much as a "way to get a problem solved."
>

I agree - these are separate issues: maybe there are too many methods of
communication between general users and the dev team, but communication
between general users and advanced users is a different thing.

IMHO, there should be as many ways for users to talk with each other as
possible. So, a mailing list made specifically for support questions seems
like a good ideea.

--
http://scribu.net
From harish.mlists at gmail.com  Mon Jun 29 11:43:22 2009
From: harish.mlists at gmail.com (Harish Narayanan)
Date: Mon Jun 29 11:43:43 2009
Subject: [wp-hackers] Re: [wp-pro] Discussion: 'Acceptable' and
	'Unacceptable' Posting Behavior On This List
In-Reply-To: <427667db0906282023g1e5031b0m884e9514a0ddc388@mail.gmail.com>
References: <399c7c160906261646t4a1e5a7r30f5913692e6ce9a@mail.gmail.com>
	<02C9EC2A-92FD-46B1-9AC9-482AB5D8ADED@newclarity.net>	<55964d020906280450t14a777a3w57444549dfc88694@mail.gmail.com>
	<EMEW3|98aa43c626fd7e61a51901ab193b6197l5RHHY0cmikeschinkel|newclarity.net|02C9EC2A-92FD-46B1-9AC9-482AB5D8ADED@newclarity.net>
	<427667db0906282023g1e5031b0m884e9514a0ddc388@mail.gmail.com>
Message-ID: <4A48A8DA.4020903@gmail.com>

Lynne Pope wrote:
> Have you seen the call from WordPress for feedback/ideas on how to improve
> communication?
> http://wordpress.org/support/topic/269201?replies=53
> 
> As you will see from the feedback garnered so far, there is a general
> consensus that things need to be improved. One of the complaints is that
> there are already too many different methods of communication.
> 
> Providing even more avenues for user support would just add to the mess,
> IMO. Hopefully there has been enough feedback by now that changes will be
> coming soon.

I'm not sure I agree. As long as these different avenues are archived
sensibly and are reasonably easy to search through, I don't see how
having different forms of support is a bad thing. I think these tend to
spring up naturally because people have different working styles.

I personally prefer the mailing-list 'Ask a question,' 'everybody sees
it,' and 'someone who knows the answer provides it' style of
communication. This is different from a support web forum where
interested/knowledgeable folk have to actively trawl through the content
looking for questions to answer. This, to me, has a higher energy
barrier and it is not something I do unless I am really enthusiastic
about the matter in question.

Like Miriam, I too set up a mailing list some time ago
(wp-support@googlegroups.com) for this purpose, but it would be useful
if there were an official wp-support (or wp-users) list analogous to
wp-hackers. Many free software projects follow this model for developer
discussion and user support.

Harish
From lynne.pope at gmail.com  Mon Jun 29 12:35:36 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon Jun 29 12:36:10 2009
Subject: [wp-hackers] Re: [wp-pro] Discussion: 'Acceptable' and 
	'Unacceptable' Posting Behavior On This List
In-Reply-To: <4A48A8DA.4020903@gmail.com>
References: <399c7c160906261646t4a1e5a7r30f5913692e6ce9a@mail.gmail.com> 
	<02C9EC2A-92FD-46B1-9AC9-482AB5D8ADED@newclarity.net>
	<55964d020906280450t14a777a3w57444549dfc88694@mail.gmail.com> 
	<EMEW3|98aa43c626fd7e61a51901ab193b6197l5RHHY0cmikeschinkel|newclarity.net|02C9EC2A-92FD-46B1-9AC9-482AB5D8ADED@newclarity.net>
	<427667db0906282023g1e5031b0m884e9514a0ddc388@mail.gmail.com> 
	<4A48A8DA.4020903@gmail.com>
Message-ID: <427667db0906290535u486d7705r7c17349daed3c032@mail.gmail.com>

I don't know if any of you who replied on this thread actually read the
comments in the forum post I linked to, but this is a recurring theme.
Here's one:
http://wordpress.org/support/topic/269201?replies=53#post-1070649

Wordpress.org has 14 mailing lists already, plus a forum, IRC channel,
blogs, trac, development updates site and the planet, which aggregates blog
entries from a myriad of sites including the personal sites of core
developers.

There are also loads of blogs, forums and support groups set up and run by
WordPress users. The problem with these is that people very quickly decide
that they want experienced developers and/or core team members to be active
in these groups. It's just not possible. As it is, these folk cannot keep up
with the information/questions/suggestions/etc that is scattered across all
the official communication channels.

Just saying...

Lynne
From jake.mcmurchie at googlemail.com  Mon Jun 29 12:49:43 2009
From: jake.mcmurchie at googlemail.com (Jake McMurchie)
Date: Mon Jun 29 12:53:56 2009
Subject: [wp-hackers] wp security and upgrading
Message-ID: <fcf6e76b0906290549o53b9b5cfl1b9ee3014872ce67@mail.gmail.com>

Hello wp-hackers. I'm not sure if this list is the right place for this
question so apologies if this is off-topic (and will be grateful for
appropriate redirection)...
In the past I have always advised clients to upgrade Wordpress on the basis
that upgrades usually include fixes for security vulnerabilities and this
will counter-balance any work required to upgrade themes, plugins and other
(frequently bespoke) customisations. However, I have a sense that this
balance has shifted - no security vulnerabilities have been made public with
2.7/2.7.1 (that I'm aware of) and 2.8 has not been advertised as a required
upgrade for security purposes. If this is correct then full credit and
congratulations to the WP team :-)

Given that there's a time/cost implication for upgrading, that the new
features of a new version may not be required, and that additional work may
be required to adapt customisations to changes in the codebase and database,
is it reasonable to say that upgrading (at least from 2.7/2.7.1) is down to
client preferences, especially given the many other steps one could take to
improve security besides keeping the WP version up to date?

Many thanks in advance.

Jake
From ozh at planetozh.com  Mon Jun 29 13:31:56 2009
From: ozh at planetozh.com (Ozh)
Date: Mon Jun 29 13:33:58 2009
Subject: [wp-hackers] wp security and upgrading
In-Reply-To: <fcf6e76b0906290549o53b9b5cfl1b9ee3014872ce67@mail.gmail.com>
Message-ID: <OF22A5C611.94AEA110-ONC12575E4.00476C09-C12575E4.004A5642@notes.edfgdf.fr>

> is it reasonable to say that upgrading (at least from 2.7/2.7.1) is down 
to
> client preferences, especially given the many other steps one could take 
to
> improve security besides keeping the WP version up to date?

I would still advise client to always upgrade.

For instance, after 2.8.1 comes out, if there's a new exploit around that 
comes up and leads to a 2.8.2, I think the average Joe would be more 
scared with going straight from 2.7 to 2.8.2 than simply upgrading as new 
versions come out.

Also, a lot of people think you have to upgrade to every version one after 
the other, ie if you want to go from 2.7 to 2.8.2, you have to upgrade to 
2.7.1, then 2.8, then 2.81, then 2.82, imagine how cumbersome that is for 
those people.

Finally, the problem I see with letting this up to the client's decision 
is, how will they react if something breaks? For instance, most themes 
using ui-tabs broke with 2.8 because of a change in jQuery UI. Will the 
client assume it's because of something in WP? of something related to 
your previous work with them?

When the user interface doesnt radically change as it did with 2.5, I 
would always suggest to keep all things up to date.

Ozh


From lynne.pope at gmail.com  Mon Jun 29 16:08:18 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon Jun 29 16:08:50 2009
Subject: [wp-hackers] Address and name used in notification messages
In-Reply-To: <65b196650906261127l26b4e082n648b1eeb7413e7e8@mail.gmail.com>
References: <65b196650906250741vcc8eab0y56fc3e88b293671b@mail.gmail.com> 
	<674b4a3b0906250811m1c6bedc4xe8776aeebf46ef50@mail.gmail.com> 
	<-1870326184228812051@unknownmsgid>
	<65b196650906251123y3f307163ie09cfbbe66e6b0e0@mail.gmail.com> 
	<-1919169385007838349@unknownmsgid>
	<65b196650906261127l26b4e082n648b1eeb7413e7e8@mail.gmail.com>
Message-ID: <427667db0906290908r48d03e7rd08274ce2f705348@mail.gmail.com>

2009/6/27 Simon Blackbourn <piemanek@gmail.com>

> So following on from Jennifer's reply, it seems that the install screen
> could have three inputs instead of the current two, with short helper text
> after each:
>
>  - Blog Title (the name of your blog)
>  - Blog Email (the email address that will be used for sending notification
> messages, password reminders, etc)
>  - Administrator Email (the email address assigned to your administrator
> user account)
>
> Then somewhere in the Codex documentation something like: "Please ensure
> that Blog Email addresses are valid. If notification messages don't get
> delivered, please contact your hosting company for advice."
>
> That way WordPress is clearly putting the onus on the hosting company for
> email delivery, which is as I believe it should be, because as far as I can
> tell there is in fact no 'bug' in WordPress (as is mentioned in trac ticket
> 5007).


Seems reasonable but one tip that should be in the admin screen itself is
that many hosts don't allow phpmailer at all and require SMTP.  This is
increasingly common and confuses the heck out of users when they can't
figure out why mail just doesn't work.  This isn't really a hosting company
issue either since phpmailer is notoriously insecure.
(Luckily there is a plugin for using SMTP mail transport ;) )

Lynne
From dan at sproutventure.com  Mon Jun 29 16:29:30 2009
From: dan at sproutventure.com (Dan Cameron)
Date: Mon Jun 29 16:29:46 2009
Subject: [wp-hackers] Address and name used in notification messages
In-Reply-To: <427667db0906290908r48d03e7rd08274ce2f705348@mail.gmail.com>
References: <65b196650906250741vcc8eab0y56fc3e88b293671b@mail.gmail.com>
	<674b4a3b0906250811m1c6bedc4xe8776aeebf46ef50@mail.gmail.com>
	<-1870326184228812051@unknownmsgid>
	<65b196650906251123y3f307163ie09cfbbe66e6b0e0@mail.gmail.com>
	<-1919169385007838349@unknownmsgid>
	<65b196650906261127l26b4e082n648b1eeb7413e7e8@mail.gmail.com>
	<427667db0906290908r48d03e7rd08274ce2f705348@mail.gmail.com>
Message-ID: <CE7048CB-F609-4D19-828A-A929F0EDE2B2@sproutventure.com>

Regardless of any decision or indecision to add this functionality to  
core here is a plugin that will get you by ( if you haven't noticed it  
already ) :

http://wordpress.org/extend/plugins/mail-from/

From lynne.pope at gmail.com  Mon Jun 29 15:59:50 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Mon Jun 29 16:36:11 2009
Subject: [wp-hackers] wp security and upgrading
In-Reply-To: <fcf6e76b0906290549o53b9b5cfl1b9ee3014872ce67@mail.gmail.com>
References: <fcf6e76b0906290549o53b9b5cfl1b9ee3014872ce67@mail.gmail.com>
Message-ID: <427667db0906290859g130cd25eg87f119c38049ff91@mail.gmail.com>

2009/6/30 Jake McMurchie <jake.mcmurchie@googlemail.com>

> ...... no security vulnerabilities have been made public with
> 2.7/2.7.1 (that I'm aware of) and 2.8 has not been advertised as a required
> upgrade for security purposes.


While there hasn't been anything (at least in public) about vulnerabilities,
2.8 includes security improvements, such as these...
 - Refactor filters to avoid potential XSS attacks
 - Deprecate wp_specialchars() in favor of esc_html(). Encode quotes for
esc_html() as in esc_attr(), to improve plugin
security<http://codex.wordpress.org/Data_Validation>(ref. Development
Updates <http://wpdevel.wordpress.com/tag/escaping/>)

(From: http://codex.wordpress.org/Version_2.8)

So, from the point of enhanced security its a worthwhile upgrade.
Performance is better too, although depending on the site this may not be
very noticeable to clients.

I have the same dilemma and have people still on 2.6.5, some of whom are
sticking with that. If it helps, this is the criteria I use to decide
whether to recommend an upgrade.

1. If the server is secure and plugins have been checked for security, and
the user does not want threaded comments - leave as is.
2. If the user adds their own plugins - recommend upgrade.
3. If the site is using plugins that have not yet been updated for 2.8, then
wait.

Lynne
From otto at ottodestruct.com  Mon Jun 29 17:21:33 2009
From: otto at ottodestruct.com (Otto)
Date: Mon Jun 29 17:22:17 2009
Subject: [wp-hackers] wp security and upgrading
In-Reply-To: <fcf6e76b0906290549o53b9b5cfl1b9ee3014872ce67@mail.gmail.com>
References: <fcf6e76b0906290549o53b9b5cfl1b9ee3014872ce67@mail.gmail.com>
Message-ID: <161617690906291021w6a9eed53p83e6ea8ef38e574c@mail.gmail.com>

Upgrades are always recommended, but I have detected a sense of
urgency lately that I would not say is there. My advice is:

1. Upgrades should always be performed, but if a site is critical to
operations, then a proper test should be undertaken first. Set up a
similar test site with WordPress and all the plugins/theme you're
using, then upgrade it and test to make sure everything works first.
Don't upgrade live without testing unless you're comfortable fixing
issues in real time. and really, they should already have a decent
test site set up (perhaps in a subdirectory), so that they can test
changes before implementing them live.

2. If a site is critical and there's no immediate security threat,
wait a week or two. Plugins frequently don't get updated before a
release, wait until the plugins have been checked first, upgrade them,
then upgrade the site.

3. Advice your clients to read the changelogs, or have somebody
summarize them for them before an upgrade. This way, they know what
changes to expect.

-Otto



On Mon, Jun 29, 2009 at 7:49 AM, Jake
McMurchie<jake.mcmurchie@googlemail.com> wrote:
> Hello wp-hackers. I'm not sure if this list is the right place for this
> question so apologies if this is off-topic (and will be grateful for
> appropriate redirection)...
> In the past I have always advised clients to upgrade Wordpress on the basis
> that upgrades usually include fixes for security vulnerabilities and this
> will counter-balance any work required to upgrade themes, plugins and other
> (frequently bespoke) customisations. However, I have a sense that this
> balance has shifted - no security vulnerabilities have been made public with
> 2.7/2.7.1 (that I'm aware of) and 2.8 has not been advertised as a required
> upgrade for security purposes. If this is correct then full credit and
> congratulations to the WP team :-)
>
> Given that there's a time/cost implication for upgrading, that the new
> features of a new version may not be required, and that additional work may
> be required to adapt customisations to changes in the codebase and database,
> is it reasonable to say that upgrading (at least from 2.7/2.7.1) is down to
> client preferences, especially given the many other steps one could take to
> improve security besides keeping the WP version up to date?
>
> Many thanks in advance.
>
> Jake
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From heiko.rabe at code-styling.de  Mon Jun 29 21:04:37 2009
From: heiko.rabe at code-styling.de (Heiko Rabe)
Date: Mon Jun 29 21:05:34 2009
Subject: [wp-hackers] question about non standard textdomain in WordPress
 and wasted translation space
In-Reply-To: <161617690906291021w6a9eed53p83e6ea8ef38e574c@mail.gmail.com>
References: <fcf6e76b0906290549o53b9b5cfl1b9ee3014872ce67@mail.gmail.com>
	<161617690906291021w6a9eed53p83e6ea8ef38e574c@mail.gmail.com>
Message-ID: <4A492C65.6010608@code-styling.de>

Hi,

could somebody please explain, what this should be?

File:    wp-admin/includes/continents-cities.php

content snippet:

<?php

/* Continent and city translations for timezone selection.
 * This file is not included anywhere. It exists solely for use by xgettext.
 */

__('Africa', 'continents-cities');
__('Abidjan', 'continents-cities');
__('Accra', 'continents-cities');
__('Addis Ababa', 'continents-cities');
__('Algiers', 'continents-cities');
__('Asmara', 'continents-cities');
__('Asmera', 'continents-cities');
__('Bamako', 'continents-cities');
__('Bangui', 'continents-cities');
__('Banjul', 'continents-cities');

..... many more ....


Why did it use a different text domain than WordPress Core itself ?
Even if this is would be contained in main WordPress *.mo file, it 
doesn't get translated because this text domain doesn't exists.
Furthermore the remark text states, that it is nowhere included, so why 
we are able to tranlate such things if they never been accessed 
somewhere but occupy 486 entries at *.mo generation/translation ?

regards

Heiko Rabe
(www.code-styling.de)
From peter.westwood at ftwr.co.uk  Mon Jun 29 21:14:58 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon Jun 29 21:15:16 2009
Subject: [wp-hackers] question about non standard textdomain in WordPress
	and wasted translation space
In-Reply-To: <4A492C65.6010608@code-styling.de>
References: <fcf6e76b0906290549o53b9b5cfl1b9ee3014872ce67@mail.gmail.com>
	<161617690906291021w6a9eed53p83e6ea8ef38e574c@mail.gmail.com>
	<4A492C65.6010608@code-styling.de>
Message-ID: <8EEA2544-D90D-455B-BD19-A8605E255BE4@ftwr.co.uk>


On 29 Jun 2009, at 22:04, Heiko Rabe wrote:
>
> Why did it use a different text domain than WordPress Core itself ?

So as to make translation optional without filling up the main file  
and making it difficult to tell if you had translated all the strings.

>
> Even if this is would be contained in main WordPress *.mo file, it  
> doesn't get translated because this text domain doesn't exists.
> Furthermore the remark text states, that it is nowhere included, so  
> why we are able to tranlate such things if they never been accessed  
> somewhere but occupy 486 entries at *.mo generation/translation ?

The strings are used elsewhere as they come from php function calls  
but listed there so the translation tool can pick them up.

For more info read the wp-polyglots mailing list archives.

http://comox.textdrive.com/pipermail/wp-polyglots/2009-May/003430.html

This is probably a more appropriate topic for that list.

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From wp at xentek.net  Tue Jun 30 07:24:12 2009
From: wp at xentek.net (Eric Marden)
Date: Tue Jun 30 07:24:26 2009
Subject: [wp-hackers] question about non standard textdomain in WordPress
	and wasted translation space
In-Reply-To: <4A492C65.6010608@code-styling.de>
References: <fcf6e76b0906290549o53b9b5cfl1b9ee3014872ce67@mail.gmail.com>
	<161617690906291021w6a9eed53p83e6ea8ef38e574c@mail.gmail.com>
	<4A492C65.6010608@code-styling.de>
Message-ID: <765D5C3B-BE51-43CD-A5EA-1A6510B5D8B7@xentek.net>

Heiko Rabe,

Please start a new thread for a new topic. Changing the subject line  
isn't enough.

-e

From wpHackersList at anschitech.de  Tue Jun 30 18:06:19 2009
From: wpHackersList at anschitech.de (=?ISO-8859-1?Q?Andr=E9_Schieleit?=)
Date: Tue Jun 30 18:06:01 2009
Subject: [wp-hackers] Rebuild media archive
Message-ID: <26DBE792-2B7B-4252-99B8-54F803617E11@anschitech.de>

Hello,

don't know if this is the right place for this question but I could  
not find an answer in the forums or the net.
I recently moved my blog from one domain to an other. I exported all  
the old articles and imported them on the new site.
Because there were only a few articles I manually changed the links  
to pictures pointing to the new domain.
Today I noticed that only the pictures of new articles are listed in  
the media archive.
Is there any way to import all the old pictures that are in the media  
directory into the media archive?
I know about the plugin Add From Server but this is not what I am  
looking for.
I am looking for a way that links the pictures to the articles where  
they are displayed.

Any ideas or links to useful information?

Best Regards,
   Andr?
From scribu at gmail.com  Tue Jun 30 22:15:42 2009
From: scribu at gmail.com (scribu)
Date: Tue Jun 30 22:18:21 2009
Subject: [wp-hackers] Rebuild media archive
In-Reply-To: <26DBE792-2B7B-4252-99B8-54F803617E11@anschitech.de>
References: <26DBE792-2B7B-4252-99B8-54F803617E11@anschitech.de>
Message-ID: <349fe48b0906301515i456923fco63b72aa3105bc428@mail.gmail.com>

Maybe the attachment information was left out during the migration process?

Did the images show up in the Media Library on your old site?

-- 
http://scribu.net
