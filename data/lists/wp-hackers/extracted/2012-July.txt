From dianakac at gmail.com  Sun Jul  1 01:33:07 2012
From: dianakac at gmail.com (Diana K. C)
Date: Sat, 30 Jun 2012 22:33:07 -0300
Subject: [wp-hackers] Thumbnail creation question
Message-ID: <005b01cd5729$79cf0b20$2200a8c0@TITA>

I need to add an image size (I know there is add_image_size), but Is there someway to prevent the new size be used for all images sent?

I would like to have an image size for only the Featured image, not all images I send, thus saving some server space.

From wpmidia at gmail.com  Sun Jul  1 12:25:07 2012
From: wpmidia at gmail.com (wpmidia lab)
Date: Sun, 1 Jul 2012 09:25:07 -0300
Subject: [wp-hackers] Thumbnail creation question
In-Reply-To: <005b01cd5729$79cf0b20$2200a8c0@TITA>
References: <005b01cd5729$79cf0b20$2200a8c0@TITA>
Message-ID: <CADqS_ayvj_6g+fPAsa0uaYs-Gzif8fEBw3QF4_jKBVsYY724ow@mail.gmail.com>

This would be a great feature to implement in future versions ... =)

2012/6/30 Diana K. C <dianakac at gmail.com>

> I need to add an image size (I know there is add_image_size), but Is there
> someway to prevent the new size be used for all images sent?
>
> I would like to have an image size for only the Featured image, not all
> images I send, thus saving some server space.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
*M?riam de Paula *
*Twitter:* @miriamdepaula


*desenvolvimento web*
http://wpmidia.com.br
twitter: @wpmidia

*WordPress Brasil no Facebook:*
http://www.facebook.com/groups/wordpress.brasil

*OpenCart Brasil no Facebook:*
http://www.facebook.com/groups/opencart.brasil/

From ryannmicua at gmail.com  Sun Jul  1 13:15:34 2012
From: ryannmicua at gmail.com (Ryann Micua)
Date: Sun, 01 Jul 2012 21:15:34 +0800
Subject: [wp-hackers] hide specific nav items from public users (Kapil
	Chugh)
Message-ID: <4FF04D76.5080708@gmail.com>

Hey Kapil here's how I used the wp_get_nav_menu_items filter.

But first some context: I have this plugin that uses a custom post type 
- "private page". I won't get into much details, but it basically 
functions like a normal wp page, only difference is that an admin 
chooses which users (non-admins) can view this page. The admin then uses 
the "custom menu widget" to add this "private pages" as menu items to 
the sidebar. Now the problem, the menu must only show items that the 
current user (non-admin) has permission to see.

add_filter('wp_get_nav_menu_items', 'filterNavMenuItems', 10, 3 );
/**
  * Filter nav menu items - show only allowed menu items to the current user
  */
function filterNavMenuItems( $items, $menu, $args ){
     if( !is_array( $items ) ){
         return $items;
     }

     $currentUserId = get_current_user_id();

     //loop through each nav menu item
     foreach( $items as $index => $item ){

         //check if current item refers to our custom post type 
"private_page"
         if( $item->object == "private_page" ){
             //get the post object ID.
             $post = get_post( $item->object_id );

             //stop and continue with next $item if $post is empty
             if( empty( $post ) ) continue;

             //make sure that current user has permission to view this page
             if( !PPP_Utils::userCanAccess( $currentUserId, $post ) ){

                 //remove this $item from $items array
                 unset( $items[$index] );

             }
         }
     }

     return $items;
}

Hope this helps someone else..

> Ryann, please share your code.
>
> Best Regards,
>
> Kapil Chugh


-- 
*Ryann Micua*
/Web Developer/
------------------------------------------------------------------------

Website: /www.pogidude.com/
Skype: /rmicua/
Mobile: /+639169273059/


From fabien.quatravaux at 1nterval.com  Mon Jul  2 07:26:49 2012
From: fabien.quatravaux at 1nterval.com (Fabien Quatravaux)
Date: Mon, 02 Jul 2012 09:26:49 +0200
Subject: [wp-hackers] Thumbnail creation question
In-Reply-To: <mailman.11.1341144002.24473.wp-hackers@lists.automattic.com>
References: <mailman.11.1341144002.24473.wp-hackers@lists.automattic.com>
Message-ID: <4FF14D39.4020100@1nterval.com>

Hi Diana
I have the same request : I often use custom image sizes for my theme, 
and those custom sizes are only seldom used. But, as far as I know, 
there is no option to specify an image size only for featured images.

Instead of having each size created for each uploaded image, wouldn't it 
be more clever to create the image only the first time it is needed ? I 
mean, have a hook in wp_get_attachment_image_src and create the image 
here if it does not already exists ?

Fabien

Le 01/07/2012 14:00, wp-hackers-request at lists.automattic.com a ?crit :
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sat, 30 Jun 2012 22:33:07 -0300
> From: "Diana K. C" <dianakac at gmail.com>
> Subject: [wp-hackers] Thumbnail creation question
> To: <wp-hackers at lists.automattic.com>
> Message-ID: <005b01cd5729$79cf0b20$2200a8c0 at TITA>
> Content-Type: text/plain;	charset="iso-8859-1"
>
> I need to add an image size (I know there is add_image_size), but Is there someway to prevent the new size be used for all images sent?
>
> I would like to have an image size for only the Featured image, not all images I send, thus saving some server space.
>
> ------------------------------
>

-- 

*Fabien Quatravaux*
D?veloppeur
LD : 06 20 20 54 97

logo <http://www.1nterval.com/> *Interval*
/M?tiers d'art digital/
www.1nterval.com <http://www.1nterval.com/>

Afin de contribuer au respect de l'environnement,
merci de n'imprimer ce courriel que si n?cessaire.




From steve at sltaylor.co.uk  Mon Jul  2 09:59:18 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Mon, 2 Jul 2012 10:59:18 +0100
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
Message-ID: <CAGEuVU0SvtXMGvhCduHvW1J1QVUO8v26mjyb9k9W8hiS4URtdA@mail.gmail.com>

I'm looking into integrating my wordpress.org plugins with GitHub.
I've actually got all my wp.org plugins on GitHub already - properly
integrating them looked a bit tricky at first glance so I've just been
pushing development changes to GitHub and manually releasing new
versions via SVN to wp.org.

This seems to be the best guide to achieving what I'm after:

http://teleogistic.net/2011/05/revisiting-git-github-and-the-wordpress-org-plugin-repository/

However, this bit doesn't bode well for me:

"If you have active, separate commit histories in both svn and Github,
may God have mercy on your soul."

I followed the instructions and all went well until Part 3. Doing "git
rebase trunk" seemed to throw me into severe confusion - probably a
little to do with my lack of experience with rebasing, but also, I'm
sure, to do with my need for God's mercy (see above).

Any suggestions for getting this integration working? I wouldn't mind
if I lost the revision history on GitHub for any of the plugins, if
this is the only way to do it. But would there be any repercussions to
this? And how would I do it properly anyway?

Any help very welcome!

Steve

From stas at nerd.ro  Mon Jul  2 10:36:04 2012
From: stas at nerd.ro (=?utf-8?B?U3RhcyBTdciZY292?=)
Date: Mon, 02 Jul 2012 13:36:04 +0300
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <CAGEuVU0SvtXMGvhCduHvW1J1QVUO8v26mjyb9k9W8hiS4URtdA@mail.gmail.com>
References: <CAGEuVU0SvtXMGvhCduHvW1J1QVUO8v26mjyb9k9W8hiS4URtdA@mail.gmail.com>
Message-ID: <op.wgteee2n5x5v0b@rivalry>

You might want to take a look at this guide too:
http://stas.nerd.ro/publish-git-repository-to-svn-easily.html

?n data de Mon, 02 Jul 2012 12:59:18 +0300, Steve Taylor  
<steve at sltaylor.co.uk> a scris:

> I'm looking into integrating my wordpress.org plugins with GitHub.
> I've actually got all my wp.org plugins on GitHub already - properly
> integrating them looked a bit tricky at first glance so I've just been
> pushing development changes to GitHub and manually releasing new
> versions via SVN to wp.org.
>
> This seems to be the best guide to achieving what I'm after:
>
> http://teleogistic.net/2011/05/revisiting-git-github-and-the-wordpress-org-plugin-repository/
>
> However, this bit doesn't bode well for me:
>
> "If you have active, separate commit histories in both svn and Github,
> may God have mercy on your soul."
>
> I followed the instructions and all went well until Part 3. Doing "git
> rebase trunk" seemed to throw me into severe confusion - probably a
> little to do with my lack of experience with rebasing, but also, I'm
> sure, to do with my need for God's mercy (see above).
>
> Any suggestions for getting this integration working? I wouldn't mind
> if I lost the revision history on GitHub for any of the plugins, if
> this is the only way to do it. But would there be any repercussions to
> this? And how would I do it properly anyway?
>
> Any help very welcome!
>
> Steve
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



From steve at sltaylor.co.uk  Mon Jul  2 11:04:19 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Mon, 2 Jul 2012 12:04:19 +0100
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <op.wgteee2n5x5v0b@rivalry>
References: <CAGEuVU0SvtXMGvhCduHvW1J1QVUO8v26mjyb9k9W8hiS4URtdA@mail.gmail.com>
	<op.wgteee2n5x5v0b@rivalry>
Message-ID: <CAGEuVU3ctkaC2bn6Yi=ZWiomwx+2Faef=uXTfCNtAgEObK3EPA@mail.gmail.com>

Thanks for the link Stas, but apart from editing .git/config, it looks
like the same method as Boone Gorges' (the link I posted).

Any thoughts on starting the process when you already have working
GitHub & wordpress.org SVN repos?


On 2 July 2012 11:36, Stas Su?cov <stas at nerd.ro> wrote:
> You might want to take a look at this guide too:
> http://stas.nerd.ro/publish-git-repository-to-svn-easily.html
>
> ?n data de Mon, 02 Jul 2012 12:59:18 +0300, Steve Taylor
> <steve at sltaylor.co.uk> a scris:
>
>> I'm looking into integrating my wordpress.org plugins with GitHub.
>> I've actually got all my wp.org plugins on GitHub already - properly
>> integrating them looked a bit tricky at first glance so I've just been
>> pushing development changes to GitHub and manually releasing new
>> versions via SVN to wp.org.
>>
>> This seems to be the best guide to achieving what I'm after:
>>
>>
>> http://teleogistic.net/2011/05/revisiting-git-github-and-the-wordpress-org-plugin-repository/
>>
>> However, this bit doesn't bode well for me:
>>
>> "If you have active, separate commit histories in both svn and Github,
>> may God have mercy on your soul."
>>
>> I followed the instructions and all went well until Part 3. Doing "git
>> rebase trunk" seemed to throw me into severe confusion - probably a
>> little to do with my lack of experience with rebasing, but also, I'm
>> sure, to do with my need for God's mercy (see above).
>>
>> Any suggestions for getting this integration working? I wouldn't mind
>> if I lost the revision history on GitHub for any of the plugins, if
>> this is the only way to do it. But would there be any repercussions to
>> this? And how would I do it properly anyway?
>>
>> Any help very welcome!
>>
>> Steve
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From juanramon.diaz at gmail.com  Mon Jul  2 11:32:58 2012
From: juanramon.diaz at gmail.com (=?ISO-8859-1?Q?Juan_Ram=F3n_D=EDaz?=)
Date: Mon, 2 Jul 2012 13:32:58 +0200
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <CAGEuVU3ctkaC2bn6Yi=ZWiomwx+2Faef=uXTfCNtAgEObK3EPA@mail.gmail.com>
References: <CAGEuVU0SvtXMGvhCduHvW1J1QVUO8v26mjyb9k9W8hiS4URtdA@mail.gmail.com>
	<op.wgteee2n5x5v0b@rivalry>
	<CAGEuVU3ctkaC2bn6Yi=ZWiomwx+2Faef=uXTfCNtAgEObK3EPA@mail.gmail.com>
Message-ID: <CANf48dRVver4zw5kFpVDo6iwzQ=G+zRh+3TQNUEt8Z5NvAuv8A@mail.gmail.com>

I'm not sure if it will work, but the other thay GitHub published this post
in their blog: Collaborating on GitHub with
Subversion<https://github.com/blog/1178-collaborating-on-github-with-subversion>


On Mon, Jul 2, 2012 at 1:04 PM, Steve Taylor <steve at sltaylor.co.uk> wrote:

> Thanks for the link Stas, but apart from editing .git/config, it looks
> like the same method as Boone Gorges' (the link I posted).
>
> Any thoughts on starting the process when you already have working
> GitHub & wordpress.org SVN repos?
>
>
> On 2 July 2012 11:36, Stas Su?cov <stas at nerd.ro> wrote:
> > You might want to take a look at this guide too:
> > http://stas.nerd.ro/publish-git-repository-to-svn-easily.html
> >
> > ?n data de Mon, 02 Jul 2012 12:59:18 +0300, Steve Taylor
> > <steve at sltaylor.co.uk> a scris:
> >
> >> I'm looking into integrating my wordpress.org plugins with GitHub.
> >> I've actually got all my wp.org plugins on GitHub already - properly
> >> integrating them looked a bit tricky at first glance so I've just been
> >> pushing development changes to GitHub and manually releasing new
> >> versions via SVN to wp.org.
> >>
> >> This seems to be the best guide to achieving what I'm after:
> >>
> >>
> >>
> http://teleogistic.net/2011/05/revisiting-git-github-and-the-wordpress-org-plugin-repository/
> >>
> >> However, this bit doesn't bode well for me:
> >>
> >> "If you have active, separate commit histories in both svn and Github,
> >> may God have mercy on your soul."
> >>
> >> I followed the instructions and all went well until Part 3. Doing "git
> >> rebase trunk" seemed to throw me into severe confusion - probably a
> >> little to do with my lack of experience with rebasing, but also, I'm
> >> sure, to do with my need for God's mercy (see above).
> >>
> >> Any suggestions for getting this integration working? I wouldn't mind
> >> if I lost the revision history on GitHub for any of the plugins, if
> >> this is the only way to do it. But would there be any repercussions to
> >> this? And how would I do it properly anyway?
> >>
> >> Any help very welcome!
> >>
> >> Steve
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> >
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From steve at sltaylor.co.uk  Mon Jul  2 12:07:47 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Mon, 2 Jul 2012 13:07:47 +0100
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <CANf48dRVver4zw5kFpVDo6iwzQ=G+zRh+3TQNUEt8Z5NvAuv8A@mail.gmail.com>
References: <CAGEuVU0SvtXMGvhCduHvW1J1QVUO8v26mjyb9k9W8hiS4URtdA@mail.gmail.com>
	<op.wgteee2n5x5v0b@rivalry>
	<CAGEuVU3ctkaC2bn6Yi=ZWiomwx+2Faef=uXTfCNtAgEObK3EPA@mail.gmail.com>
	<CANf48dRVver4zw5kFpVDo6iwzQ=G+zRh+3TQNUEt8Z5NvAuv8A@mail.gmail.com>
Message-ID: <CAGEuVU0jB9QLPvGQSNcxGwQ1qr0OrxVY4fiM3kNyJj=kE=LQhQ@mail.gmail.com>

Thanks Juan. Could work I guess, but I'm looking to base myself in Git
for development, and merely deploy to SVN.


On 2 July 2012 12:32, Juan Ram?n D?az <juanramon.diaz at gmail.com> wrote:
> I'm not sure if it will work, but the other thay GitHub published this post
> in their blog: Collaborating on GitHub with
> Subversion<https://github.com/blog/1178-collaborating-on-github-with-subversion>
>
>
> On Mon, Jul 2, 2012 at 1:04 PM, Steve Taylor <steve at sltaylor.co.uk> wrote:
>
>> Thanks for the link Stas, but apart from editing .git/config, it looks
>> like the same method as Boone Gorges' (the link I posted).
>>
>> Any thoughts on starting the process when you already have working
>> GitHub & wordpress.org SVN repos?
>>
>>
>> On 2 July 2012 11:36, Stas Su?cov <stas at nerd.ro> wrote:
>> > You might want to take a look at this guide too:
>> > http://stas.nerd.ro/publish-git-repository-to-svn-easily.html
>> >
>> > ?n data de Mon, 02 Jul 2012 12:59:18 +0300, Steve Taylor
>> > <steve at sltaylor.co.uk> a scris:
>> >
>> >> I'm looking into integrating my wordpress.org plugins with GitHub.
>> >> I've actually got all my wp.org plugins on GitHub already - properly
>> >> integrating them looked a bit tricky at first glance so I've just been
>> >> pushing development changes to GitHub and manually releasing new
>> >> versions via SVN to wp.org.
>> >>
>> >> This seems to be the best guide to achieving what I'm after:
>> >>
>> >>
>> >>
>> http://teleogistic.net/2011/05/revisiting-git-github-and-the-wordpress-org-plugin-repository/
>> >>
>> >> However, this bit doesn't bode well for me:
>> >>
>> >> "If you have active, separate commit histories in both svn and Github,
>> >> may God have mercy on your soul."
>> >>
>> >> I followed the instructions and all went well until Part 3. Doing "git
>> >> rebase trunk" seemed to throw me into severe confusion - probably a
>> >> little to do with my lack of experience with rebasing, but also, I'm
>> >> sure, to do with my need for God's mercy (see above).
>> >>
>> >> Any suggestions for getting this integration working? I wouldn't mind
>> >> if I lost the revision history on GitHub for any of the plugins, if
>> >> this is the only way to do it. But would there be any repercussions to
>> >> this? And how would I do it properly anyway?
>> >>
>> >> Any help very welcome!
>> >>
>> >> Steve
>> >> _______________________________________________
>> >> wp-hackers mailing list
>> >> wp-hackers at lists.automattic.com
>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> >
>> >
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From stas at nerd.ro  Mon Jul  2 12:57:50 2012
From: stas at nerd.ro (=?utf-8?B?U3RhcyBTdciZY292?=)
Date: Mon, 02 Jul 2012 15:57:50 +0300
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <CAGEuVU3ctkaC2bn6Yi=ZWiomwx+2Faef=uXTfCNtAgEObK3EPA@mail.gmail.com>
References: <CAGEuVU0SvtXMGvhCduHvW1J1QVUO8v26mjyb9k9W8hiS4URtdA@mail.gmail.com>
	<op.wgteee2n5x5v0b@rivalry>
	<CAGEuVU3ctkaC2bn6Yi=ZWiomwx+2Faef=uXTfCNtAgEObK3EPA@mail.gmail.com>
Message-ID: <op.wgtkyon65x5v0b@rivalry>

?n data de Mon, 02 Jul 2012 14:04:19 +0300, Steve Taylor  
<steve at sltaylor.co.uk> a scris:

> Thanks for the link Stas, but apart from editing .git/config, it looks
> like the same method as Boone Gorges' (the link I posted).
>
> Any thoughts on starting the process when you already have working
> GitHub & wordpress.org SVN repos?

This might be a dumb question, but...
Did you even try the method with direct file editing?

To explain myself, `git svn` depends a lot on the entries in your  
`svn-remote` config file.
I'm managing BuddyPress Courseware project that lives on github, and was  
able to handle (at some point) 3 svn mirrors (and 2 git remotes), using  
`svn-remote` entries in my config file without having an issue along last  
~2 years.

Also the tutorial above has the purpose of digging into the `git-svn`  
config file, this way offering a chance of ignoring `git-svn` command  
magic, that from my experience broke a lot of projects for a lot of people.

Cheers.

From bill.erickson at gmail.com  Mon Jul  2 13:29:26 2012
From: bill.erickson at gmail.com (Bill Erickson)
Date: Mon, 2 Jul 2012 08:29:26 -0500
Subject: [wp-hackers] Thumbnail creation question
In-Reply-To: <4FF14D39.4020100@1nterval.com>
References: <mailman.11.1341144002.24473.wp-hackers@lists.automattic.com>
	<4FF14D39.4020100@1nterval.com>
Message-ID: <CADvbF5pZrKDpDOVCu4R3FXwUMYAoSzgHz86YAiAc4_rQJUx7yw@mail.gmail.com>

There's a great code snippet on this trac ticket (
http://core.trac.wordpress.org/ticket/15311 ) that allows dynamic image
resizing. You specify the dimensions and if it should be cropped, and the
function checks to see if that image size exists, and makes it if it
doesn't.

I'm using it on a site right now that would have had about 15 custom image
sizes throughout their site, but only one or two would have been used per
image uploaded.


---
Bill Erickson
WordPress Consultant
http://www.billerickson.net

NOTE: To better serve my clients, partners, and most importantly my family,
I've begun checking email only three times per day.

For phone calls, please schedule here: http://tungle.me/billerickson . If
it's an emergency, please call now and leave a voicemail



On Mon, Jul 2, 2012 at 2:26 AM, Fabien Quatravaux <
fabien.quatravaux at 1nterval.com> wrote:

> Hi Diana
> I have the same request : I often use custom image sizes for my theme, and
> those custom sizes are only seldom used. But, as far as I know, there is no
> option to specify an image size only for featured images.
>
> Instead of having each size created for each uploaded image, wouldn't it
> be more clever to create the image only the first time it is needed ? I
> mean, have a hook in wp_get_attachment_image_src and create the image here
> if it does not already exists ?
>
> Fabien
>
> Le 01/07/2012 14:00, wp-hackers-request at lists.**automattic.com<wp-hackers-request at lists.automattic.com>a ?crit :
>
>> ------------------------------**------------------------------**
>> ----------
>>
>> Message: 1
>> Date: Sat, 30 Jun 2012 22:33:07 -0300
>> From: "Diana K. C" <dianakac at gmail.com>
>> Subject: [wp-hackers] Thumbnail creation question
>> To: <wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>>
>> Message-ID: <005b01cd5729$79cf0b20$**2200a8c0 at TITA>
>> Content-Type: text/plain;       charset="iso-8859-1"
>>
>>
>> I need to add an image size (I know there is add_image_size), but Is
>> there someway to prevent the new size be used for all images sent?
>>
>> I would like to have an image size for only the Featured image, not all
>> images I send, thus saving some server space.
>>
>> ------------------------------
>>
>>
> --
>
> *Fabien Quatravaux*
> D?veloppeur
> LD : 06 20 20 54 97
>
> logo <http://www.1nterval.com/> *Interval*
> /M?tiers d'art digital/
> www.1nterval.com <http://www.1nterval.com/>
>
> Afin de contribuer au respect de l'environnement,
> merci de n'imprimer ce courriel que si n?cessaire.
>
>
>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From dianakac at gmail.com  Mon Jul  2 16:39:48 2012
From: dianakac at gmail.com (Diana K. C)
Date: Mon, 2 Jul 2012 13:39:48 -0300
Subject: [wp-hackers] Thumbnail creation question
References: <mailman.11.1341144002.24473.wp-hackers@lists.automattic.com>
	<4FF14D39.4020100@1nterval.com>
Message-ID: <002f01cd5871$4e54c720$2200a8c0@TITA>

My coding skill is quite... lacking, but you gave me a hint: maybe we can 
create the image size on some conditions, avoiding the creation for all 
images sent...

You said:

> But, as far as I know, there is no option to specify an image size only 
> for featured images.

There is in Settings > Midia, but the creation will be for every image sent 
as always. I wish I could order a 2nd featured image based on the first, but 
for this file only.


----- Original Message ----- 
From: "Fabien Quatravaux" <fabien.quatravaux at 1nterval.com>
To: <wp-hackers at lists.automattic.com>
Sent: Monday, July 02, 2012 4:26 AM
Subject: Re: [wp-hackers] Thumbnail creation question


Hi Diana
I have the same request : I often use custom image sizes for my theme,
and those custom sizes are only seldom used. But, as far as I know,
there is no option to specify an image size only for featured images.

Instead of having each size created for each uploaded image, wouldn't it
be more clever to create the image only the first time it is needed ? I
mean, have a hook in wp_get_attachment_image_src and create the image
here if it does not already exists ?

Fabien

Le 01/07/2012 14:00, wp-hackers-request at lists.automattic.com a ?crit :
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sat, 30 Jun 2012 22:33:07 -0300
> From: "Diana K. C" <dianakac at gmail.com>
> Subject: [wp-hackers] Thumbnail creation question
> To: <wp-hackers at lists.automattic.com>
> Message-ID: <005b01cd5729$79cf0b20$2200a8c0 at TITA>
> Content-Type: text/plain; charset="iso-8859-1"
>
> I need to add an image size (I know there is add_image_size), but Is there 
> someway to prevent the new size be used for all images sent?
>
> I would like to have an image size for only the Featured image, not all 
> images I send, thus saving some server space.
>
> ------------------------------
>

-- 

*Fabien Quatravaux*
D?veloppeur
LD : 06 20 20 54 97

logo <http://www.1nterval.com/> *Interval*
/M?tiers d'art digital/
www.1nterval.com <http://www.1nterval.com/>

Afin de contribuer au respect de l'environnement,
merci de n'imprimer ce courriel que si n?cessaire.



_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers 


From steve at sltaylor.co.uk  Mon Jul  2 17:34:46 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Mon, 2 Jul 2012 18:34:46 +0100
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <op.wgtkyon65x5v0b@rivalry>
References: <CAGEuVU0SvtXMGvhCduHvW1J1QVUO8v26mjyb9k9W8hiS4URtdA@mail.gmail.com>
	<op.wgteee2n5x5v0b@rivalry>
	<CAGEuVU3ctkaC2bn6Yi=ZWiomwx+2Faef=uXTfCNtAgEObK3EPA@mail.gmail.com>
	<op.wgtkyon65x5v0b@rivalry>
Message-ID: <CAGEuVU2Y26J-wVTPp2Q9mFmTCbMZdJ_HX6pwaacjwsrQ4uDmPw@mail.gmail.com>

I tried that method but got this error:

------------------------------------------------------------------------
Migrating from a git-svn v1 layout...
Data from a previous version of git-svn exists, but
        .git/svn
        (required for this version (1.7.8.msysgit.0) of git-svn) does not exist.

Done migrating from a git-svn v1 layout
Error validating server certificate for 'https://plugins.svn.wordpress.org:443':

 - The certificate is not issued by a trusted authority. Use the
   fingerprint to validate the certificate manually!
Certificate information:
 - Hostname: *.svn.wordpress.org
 - Valid: from Jun 21 16:07:30 2012 GMT until Jul 15 19:04:26 2015 GMT
 - Issuer: 07969287, http://certificates.godaddy.com/repository, GoDaddy.com, In
c., Scottsdale, Arizona, US
 - Fingerprint: bf:08:a3:de:ab:e4:76:fd:d0:5d:10:d1:c8:de:19:12:5f:bf:71:25
(R)eject, accept (t)emporarily or accept (p)ermanently? t

RA layer request failed: PROPFIND request failed on '/': PROPFIND of '/': Could
not read status line: connection was closed by server. (https://plugins.svn.word
press.org) at C:\Program Files (x86)\Git/libexec/git-core\git-svn line 2139
------------------------------------------------------------------------

In any case, before I persist, can you say that this method definitely
circumvents issues that arise when you have existing GitHub and
wordpress.org SVN repos, each with separate revision histories? That
was the only sticking point with Boone Gorges' method - things fell
apart when rebasing.



On 2 July 2012 13:57, Stas Su?cov <stas at nerd.ro> wrote:
> ?n data de Mon, 02 Jul 2012 14:04:19 +0300, Steve Taylor
> <steve at sltaylor.co.uk> a scris:
>
>
>> Thanks for the link Stas, but apart from editing .git/config, it looks
>> like the same method as Boone Gorges' (the link I posted).
>>
>> Any thoughts on starting the process when you already have working
>> GitHub & wordpress.org SVN repos?
>
>
> This might be a dumb question, but...
> Did you even try the method with direct file editing?
>
> To explain myself, `git svn` depends a lot on the entries in your
> `svn-remote` config file.
> I'm managing BuddyPress Courseware project that lives on github, and was
> able to handle (at some point) 3 svn mirrors (and 2 git remotes), using
> `svn-remote` entries in my config file without having an issue along last ~2
> years.
>
> Also the tutorial above has the purpose of digging into the `git-svn` config
> file, this way offering a chance of ignoring `git-svn` command magic, that
> from my experience broke a lot of projects for a lot of people.
>
> Cheers.

From stas at nerd.ro  Mon Jul  2 18:00:41 2012
From: stas at nerd.ro (=?utf-8?B?U3RhcyBTdciZY292?=)
Date: Mon, 02 Jul 2012 21:00:41 +0300
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <CAGEuVU2Y26J-wVTPp2Q9mFmTCbMZdJ_HX6pwaacjwsrQ4uDmPw@mail.gmail.com>
References: <CAGEuVU0SvtXMGvhCduHvW1J1QVUO8v26mjyb9k9W8hiS4URtdA@mail.gmail.com>
	<op.wgteee2n5x5v0b@rivalry>
	<CAGEuVU3ctkaC2bn6Yi=ZWiomwx+2Faef=uXTfCNtAgEObK3EPA@mail.gmail.com>
	<op.wgtkyon65x5v0b@rivalry>
	<CAGEuVU2Y26J-wVTPp2Q9mFmTCbMZdJ_HX6pwaacjwsrQ4uDmPw@mail.gmail.com>
Message-ID: <op.wgtyzfxi5x5v0b@rivalry>

?n data de Mon, 02 Jul 2012 20:34:46 +0300, Steve Taylor  
<steve at sltaylor.co.uk> a scris:

> I tried that method but got this error:
>
> ------------------------------------------------------------------------
> Migrating from a git-svn v1 layout...
> Data from a previous version of git-svn exists, but
>         .git/svn
>         (required for this version (1.7.8.msysgit.0) of git-svn) does  
> not exist.
>
> Done migrating from a git-svn v1 layout
> Error validating server certificate for  
> 'https://plugins.svn.wordpress.org:443':
>
>  - The certificate is not issued by a trusted authority. Use the
>    fingerprint to validate the certificate manually!
> Certificate information:
>  - Hostname: *.svn.wordpress.org
>  - Valid: from Jun 21 16:07:30 2012 GMT until Jul 15 19:04:26 2015 GMT
>  - Issuer: 07969287, http://certificates.godaddy.com/repository,  
> GoDaddy.com, In
> c., Scottsdale, Arizona, US
>  - Fingerprint:  
> bf:08:a3:de:ab:e4:76:fd:d0:5d:10:d1:c8:de:19:12:5f:bf:71:25
> (R)eject, accept (t)emporarily or accept (p)ermanently? t
>
> RA layer request failed: PROPFIND request failed on '/': PROPFIND of  
> '/': Could
> not read status line: connection was closed by server.  
> (https://plugins.svn.word
> press.org) at C:\Program Files (x86)\Git/libexec/git-core\git-svn line  
> 2139
> ------------------------------------------------------------------------
>
> In any case, before I persist, can you say that this method definitely
> circumvents issues that arise when you have existing GitHub and
> wordpress.org SVN repos, each with separate revision histories? That
> was the only sticking point with Boone Gorges' method - things fell
> apart when rebasing.
>
>

Could you post your .git/config to a pastebin or something?

Answering your question, the issues you are having about rebasing, are not  
git-svn fault (usually, exception happens when people are overwriting svn  
histories).

Usually people are trying to write on svn branch and git's branch history  
and they believe merging back will work as it happens with a git vs git  
branch merge.
Well, the short answer is NO, don't expect merging two way histories will  
ensure your repository integrity.

The best workflow I can suggest is like below:
* Use git for most of the development (check git workflow for that:  
branches, merges, etc...)
* Use svn branch as a push only channel. Merge git branches onto it and  
then, just `git-svn dcommit` those. Checkout master back after.
* Make sure your svn branch is a clean mirror of master. Don't amend,  
reset or commit directly on it!

Hope this helps.

From simon at wpsites.co.uk  Mon Jul  2 18:11:28 2012
From: simon at wpsites.co.uk (Simon Dunton - WP Sites)
Date: Mon, 2 Jul 2012 19:11:28 +0100
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <mailman.30759.1341252045.1433.wp-hackers@lists.automattic.com>
References: <mailman.30759.1341252045.1433.wp-hackers@lists.automattic.com>
Message-ID: <B95D30FD-CE26-441C-AC8A-3D6B696EEC70@wpsites.co.uk>

Hi,

I did a bit of a write up about a WordPress plugin deployment script I found a couple of months back http://www.wpsites.co.uk/558-svn-deploy-script-for-easily-publishing-your-wordpress-plugins-to-wordpress.php

If you just want to deploy to SVN but not actually use SVN as your primary version control system then that script is perfect.

Works form me anyway.

Simon

WP Sites Limited 
tel. +44 (0)161 883 0183
www.wpsites.co.uk

Company registration No. 07358583. VAT No. GB113599900. Registered office. Houghton Hall, Dunstable, Bedfordshire, England, LU5 5DY


On 2 Jul 2012, at 19:00, wp-hackers-request at lists.automattic.com wrote:

> Message: 1
> Date: Mon, 2 Jul 2012 13:07:47 +0100
> From: Steve Taylor <steve at sltaylor.co.uk>
> Subject: Re: [wp-hackers] GitHub + plugins.svn.wordpress.org
> To: wp-hackers at lists.automattic.com
> Message-ID:
> 	<CAGEuVU0jB9QLPvGQSNcxGwQ1qr0OrxVY4fiM3kNyJj=kE=LQhQ at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
> 
> Thanks Juan. Could work I guess, but I'm looking to base myself in Git
> for development, and merely deploy to SVN.


From steve at sltaylor.co.uk  Mon Jul  2 18:28:52 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Mon, 2 Jul 2012 19:28:52 +0100
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <B95D30FD-CE26-441C-AC8A-3D6B696EEC70@wpsites.co.uk>
References: <mailman.30759.1341252045.1433.wp-hackers@lists.automattic.com>
	<B95D30FD-CE26-441C-AC8A-3D6B696EEC70@wpsites.co.uk>
Message-ID: <CAGEuVU1s=M4yKu4nW9jFyc9-8S4Xv-aBGFGhuQMzBhHkEQeX4g@mail.gmail.com>

Thanks Simon, but I'm not that far yet! I'm having problems with the
fact that I already have a functioning GitHub repo and wordpress.org
SVN repo for my plugins.

Thus far I've been developing and committing in GitHub, then manually
copying & deploying new releases with TortoiseSVN. I started out like
that because the integration and scripting to automate things seemed a
bit complex when I was just getting my head around Git. I didn't count
on switching to automated deployment being tricky, otherwise I
probably would have invested the time to do it from the start.

I'm not clear on whether I've hit a real sticking point or if there's
any way round this, but the only thing on the web and in this thread
that I've found addressing my issue is:

"If you have active, separate commit histories in both svn and Github,
may God have mercy on your soul."
http://teleogistic.net/2011/05/revisiting-git-github-and-the-wordpress-org-plugin-repository/

:-( !

I don't mind losing my commit history on GitHub if absolutely
necessary (I imagine losing the history on wordpress.org is out of the
question). Just not sure how to address the issue.


On 2 July 2012 19:11, Simon Dunton - WP Sites <simon at wpsites.co.uk> wrote:
> Hi,
>
> I did a bit of a write up about a WordPress plugin deployment script I found a couple of months back http://www.wpsites.co.uk/558-svn-deploy-script-for-easily-publishing-your-wordpress-plugins-to-wordpress.php
>
> If you just want to deploy to SVN but not actually use SVN as your primary version control system then that script is perfect.
>
> Works form me anyway.
>
> Simon
>
> WP Sites Limited
> tel. +44 (0)161 883 0183
> www.wpsites.co.uk
>
> Company registration No. 07358583. VAT No. GB113599900. Registered office. Houghton Hall, Dunstable, Bedfordshire, England, LU5 5DY
>
>
> On 2 Jul 2012, at 19:00, wp-hackers-request at lists.automattic.com wrote:
>
>> Message: 1
>> Date: Mon, 2 Jul 2012 13:07:47 +0100
>> From: Steve Taylor <steve at sltaylor.co.uk>
>> Subject: Re: [wp-hackers] GitHub + plugins.svn.wordpress.org
>> To: wp-hackers at lists.automattic.com
>> Message-ID:
>>       <CAGEuVU0jB9QLPvGQSNcxGwQ1qr0OrxVY4fiM3kNyJj=kE=LQhQ at mail.gmail.com>
>> Content-Type: text/plain; charset=UTF-8
>>
>> Thanks Juan. Could work I guess, but I'm looking to base myself in Git
>> for development, and merely deploy to SVN.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From paul at byotos.com  Mon Jul  2 22:11:33 2012
From: paul at byotos.com (Paul Gibbs)
Date: Mon, 2 Jul 2012 23:11:33 +0100
Subject: [wp-hackers] how to stop custom post type creating
 attachment/trackback/feed rewrite rules?
Message-ID: <6EBF77B9C1264375B60818C701239170@byotos.com>

When registering a custom post type ("achievements") with the following arguments, WordPress creates more rewrite rules than I want. My concern is causing the unnecessary rules to be generated, and the possibility of a theme's generic template files being used. For example, I don't want any feed for my post type, but right now I can type the URL in and get fetch a RSS feed. I'm on WP 3.4.

How do I stop these rules being generated?


// 'rewrite'
$rewrite['achievement'] = array(
'feeds'      => false,
'pages'      => false,
'slug'       => dpa_get_achievement_slug(),
'with_front' => false,
);
// 'supports'
$supports['achievement'] = array(
'editor',
'revisions',
'thumbnail',
'title',
);


Using the Rewrite Rules Inspector plugin, I see WordPress has generated the following rewrite rules which I do not require:

ATTACHMENTS + COMMENT PAGING:
achievements/.+?/attachment/([^/]+)
achievements/.+?/attachment/([^/]+)/trackback/?$
achievements/.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$
achievements/.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$
achievements/.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$

TRACKBACK + FEED + COMMENT PAGING:
achievements/(.+?)/trackback/?$
achievements/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$
achievements/(.+?)/(feed|rdf|rss|rss2|atom)/?$
achievements/(.+?)/comment-page-([0-9]{1,})/?$

-- 
Paul Gibbs


From shastaw at gmail.com  Mon Jul  2 22:13:02 2012
From: shastaw at gmail.com (Shasta Willson)
Date: Mon, 2 Jul 2012 15:13:02 -0700
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
Message-ID: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>

A number of the plug-ins I use, such as sliders, involve inputting an
absolute URL for the image.  This is a problem at deployment (or any
other move) obviously, but I'm not sure I've seen it done any other
way.

I'm building a custom type that includes two image uploads using the
built-in media box.  I'd really like it to store a relative URL rather
than an absolute one so I've considered using regex to just strip off
everything to "/uploads".  Is there a downside to doing this?  Is
there a better way to accomplish the goal?  Am I missing some reason
everyone seems to store the absolute link?

Thanks,
Shasta

From kevinjohngallagher at hotmail.com  Mon Jul  2 23:09:37 2012
From: kevinjohngallagher at hotmail.com (Kevinjohn Gallagher)
Date: Tue, 3 Jul 2012 00:09:37 +0100
Subject: [wp-hackers] how to stop custom post type creating
 attachment/trackback/feed rewrite rules?
In-Reply-To: <6EBF77B9C1264375B60818C701239170@byotos.com>
References: <6EBF77B9C1264375B60818C701239170@byotos.com>
Message-ID: <BLU150-W98DF76B5AE85D61064E31CCEA0@phx.gbl>



Hi Paul,
Rules are loaded as an array, so you can "unset" them from the array.
2 points to note. 
You then need to flush the rules.If a theme or plugin flushes rules every time they are loaded (99% do - sigh) then you'll need to do so as well.
If you're in no rush I can look out my code tomorrow afternoon.
Kev



> Date: Mon, 2 Jul 2012 23:11:33 +0100
> From: paul at byotos.com
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] how to stop custom post type creating attachment/trackback/feed rewrite rules?
> 
> When registering a custom post type ("achievements") with the following arguments, WordPress creates more rewrite rules than I want. My concern is causing the unnecessary rules to be generated, and the possibility of a theme's generic template files being used. For example, I don't want any feed for my post type, but right now I can type the URL in and get fetch a RSS feed. I'm on WP 3.4.
> 
> How do I stop these rules being generated?
> 
> 
> // 'rewrite'
> $rewrite['achievement'] = array(
> 'feeds'      => false,
> 'pages'      => false,
> 'slug'       => dpa_get_achievement_slug(),
> 'with_front' => false,
> );
> // 'supports'
> $supports['achievement'] = array(
> 'editor',
> 'revisions',
> 'thumbnail',
> 'title',
> );
> 
> 
> Using the Rewrite Rules Inspector plugin, I see WordPress has generated the following rewrite rules which I do not require:
> 
> ATTACHMENTS + COMMENT PAGING:
> achievements/.+?/attachment/([^/]+)
> achievements/.+?/attachment/([^/]+)/trackback/?$
> achievements/.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$
> achievements/.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$
> achievements/.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$
> 
> TRACKBACK + FEED + COMMENT PAGING:
> achievements/(.+?)/trackback/?$
> achievements/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$
> achievements/(.+?)/(feed|rdf|rss|rss2|atom)/?$
> achievements/(.+?)/comment-page-([0-9]{1,})/?$
> 
> -- 
> Paul Gibbs
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
 		 	   		  

From wordpress at zed1.com  Tue Jul  3 01:17:53 2012
From: wordpress at zed1.com (Mike Little)
Date: Tue, 3 Jul 2012 02:17:53 +0100
Subject: [wp-hackers] how to stop custom post type creating
 attachment/trackback/feed rewrite rules?
In-Reply-To: <6EBF77B9C1264375B60818C701239170@byotos.com>
References: <6EBF77B9C1264375B60818C701239170@byotos.com>
Message-ID: <CAMb54M10atAW8i6pTWQLfvUCyhuq_2CSnd5cwk5Z0NeqK8qmvQ@mail.gmail.com>

On 2 July 2012 23:11, Paul Gibbs <paul at byotos.com> wrote:

> When registering a custom post type ("achievements") with the following
> arguments, WordPress creates more rewrite rules than I want. My concern is
> causing the unnecessary rules to be generated, and the possibility of a
> theme's generic template files being used. For example, I don't want any
> feed for my post type, but right now I can type the URL in and get fetch a
> RSS feed. I'm on WP 3.4.
>
> How do I stop these rules being generated?
>
>
> // 'rewrite'
> $rewrite['achievement'] = array(
> 'feeds'      => false,
> 'pages'      => false,
> 'slug'       => dpa_get_achievement_slug(),
> 'with_front' => false,
> );
> // 'supports'
> $supports['achievement'] = array(
> 'editor',
> 'revisions',
> 'thumbnail',
> 'title',
> );
>
>
> Using the Rewrite Rules Inspector plugin, I see WordPress has generated
> the following rewrite rules which I do not require:
>
> ATTACHMENTS + COMMENT PAGING:
> achievements/.+?/attachment/([^/]+)
> achievements/.+?/attachment/([^/]+)/trackback/?$
> achievements/.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$
> achievements/.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$
> achievements/.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$
>
> TRACKBACK + FEED + COMMENT PAGING:
> achievements/(.+?)/trackback/?$
> achievements/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$
> achievements/(.+?)/(feed|rdf|rss|rss2|atom)/?$
> achievements/(.+?)/comment-page-([0-9]{1,})/?$
>
>

Paul,

It looks like there is a bug. But firstly, I think you will need to deal
with the attachment feeds manually. Attachments are treated as an
independent type which then gets tacked on to other types. Perhaps
KevinJohn suggestion?

But the main CPT shouldn't get the feeds created. The problem comes from
the fact that register_post_type() looks at $args->rewrite['feeds'] to see
whether to add  feed rules or not. But then it calls add_permastruct()
passing $args->rewrite which calls WP_Rewrite::add_permastruct() which in
turn merges those args with an array of defaults using $defaults['feed'] --
with no 's';

That must be a bug but I don't know which is correct. I suspect the
singular is correct. (it ought to be older than CPTs)

So, for now if you add both 'feeds' => false and 'feed' => false to your
rewrite array, you won't get the trackback/feed/comment paging.

It's too late here to put together a proper bug report on trac right now,
I'll try to get to it tomorrow. Feel free to report it ahead of me.


Mike
-- 
Mike Little
http://zed1.com/

From casey.bisson at gmail.com  Tue Jul  3 03:11:37 2012
From: casey.bisson at gmail.com (Casey Bisson)
Date: Mon, 2 Jul 2012 20:11:37 -0700
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
Message-ID: <DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>


Have you considered leveraging WP's native image/attachments and simply store the ID of the attachment? From there it's very easy to generate a URL on the fly with wp_get_attachment_url( $id ) . Of course you can then automatically get different sizes as well.

Casey Bisson
http://twitter.com/misterbisson

On Jul 2, 2012, at 3:13 PM, Shasta Willson wrote:

> A number of the plug-ins I use, such as sliders, involve inputting an
> absolute URL for the image.  This is a problem at deployment (or any
> other move) obviously, but I'm not sure I've seen it done any other
> way.
> 
> I'm building a custom type that includes two image uploads using the
> built-in media box.  I'd really like it to store a relative URL rather
> than an absolute one so I've considered using regex to just strip off
> everything to "/uploads".  Is there a downside to doing this?  Is
> there a better way to accomplish the goal?  Am I missing some reason
> everyone seems to store the absolute link?
> 
> Thanks,
> Shasta
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From paul at byotos.com  Tue Jul  3 06:23:58 2012
From: paul at byotos.com (Paul Gibbs)
Date: Tue, 3 Jul 2012 07:23:58 +0100
Subject: [wp-hackers] how to stop custom post type creating
 attachment/trackback/feed rewrite rules?
In-Reply-To: <CAMb54M10atAW8i6pTWQLfvUCyhuq_2CSnd5cwk5Z0NeqK8qmvQ@mail.gmail.com>
References: <6EBF77B9C1264375B60818C701239170@byotos.com>
	<CAMb54M10atAW8i6pTWQLfvUCyhuq_2CSnd5cwk5Z0NeqK8qmvQ@mail.gmail.com>
Message-ID: <91C27022B42740C68DA003285773A8C9@byotos.com>

Hi Kevinjohn, Mike, 

Thanks for the advice. I'll investigate unsetting the attachment rewrite rules manually and seeing how well that works.

Mike, about 'feed' vs 'feeds'. Good spot, and this does seem like a bug. Setting that too removes the following as you'd expect: 
achievements/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$



achievements/(.+?)/(feed|rdf|rss|rss2|atom)/?$





It does not affect (these still here): achievements/(.+?)/trackback/?
achievements/(.+?)/comment-page-([0-9]{1,})/?$

Looking at WP_Rewrite::generate_rewrite_rules, it looks like those two rules are always added to the post type.
In any case, this has me down from 11 rewrites to 9 rewrites so far, and I'm really pleased about that. Thanks for the help.

-- 
Paul Gibbs


On Tuesday, 3 July 2012 at 02:17, Mike Little wrote:

> On 2 July 2012 23:11, Paul Gibbs <paul at byotos.com (mailto:paul at byotos.com)> wrote:
> 
> > When registering a custom post type ("achievements") with the following
> > arguments, WordPress creates more rewrite rules than I want. My concern is
> > causing the unnecessary rules to be generated, and the possibility of a
> > theme's generic template files being used. For example, I don't want any
> > feed for my post type, but right now I can type the URL in and get fetch a
> > RSS feed. I'm on WP 3.4.
> > 
> > How do I stop these rules being generated?
> > 
> > 
> > // 'rewrite'
> > $rewrite['achievement'] = array(
> > 'feeds' => false,
> > 'pages' => false,
> > 'slug' => dpa_get_achievement_slug(),
> > 'with_front' => false,
> > );
> > // 'supports'
> > $supports['achievement'] = array(
> > 'editor',
> > 'revisions',
> > 'thumbnail',
> > 'title',
> > );
> > 
> > 
> > Using the Rewrite Rules Inspector plugin, I see WordPress has generated
> > the following rewrite rules which I do not require:
> > 
> > ATTACHMENTS + COMMENT PAGING:
> > achievements/.+?/attachment/([^/]+)
> > achievements/.+?/attachment/([^/]+)/trackback/?$
> > achievements/.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$
> > achievements/.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$
> > achievements/.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$
> > 
> > TRACKBACK + FEED + COMMENT PAGING:
> > achievements/(.+?)/trackback/?$
> > achievements/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$
> > achievements/(.+?)/(feed|rdf|rss|rss2|atom)/?$
> > achievements/(.+?)/comment-page-([0-9]{1,})/?$
> > 
> 
> 
> Paul,
> 
> It looks like there is a bug. But firstly, I think you will need to deal
> with the attachment feeds manually. Attachments are treated as an
> independent type which then gets tacked on to other types. Perhaps
> KevinJohn suggestion?
> 
> But the main CPT shouldn't get the feeds created. The problem comes from
> the fact that register_post_type() looks at $args->rewrite['feeds'] to see
> whether to add feed rules or not. But then it calls add_permastruct()
> passing $args->rewrite which calls WP_Rewrite::add_permastruct() which in
> turn merges those args with an array of defaults using $defaults['feed'] --
> with no 's';
> 
> That must be a bug but I don't know which is correct. I suspect the
> singular is correct. (it ought to be older than CPTs)
> 
> So, for now if you add both 'feeds' => false and 'feed' => false to your
> rewrite array, you won't get the trackback/feed/comment paging.
> 
> It's too late here to put together a proper bug report on trac right now,
> I'll try to get to it tomorrow. Feel free to report it ahead of me.
> 
> 
> Mike
> -- 
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com)
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 



From wordpress at zed1.com  Tue Jul  3 09:25:19 2012
From: wordpress at zed1.com (Mike Little)
Date: Tue, 3 Jul 2012 10:25:19 +0100
Subject: [wp-hackers] how to stop custom post type creating
 attachment/trackback/feed rewrite rules?
In-Reply-To: <91C27022B42740C68DA003285773A8C9@byotos.com>
References: <6EBF77B9C1264375B60818C701239170@byotos.com>
	<CAMb54M10atAW8i6pTWQLfvUCyhuq_2CSnd5cwk5Z0NeqK8qmvQ@mail.gmail.com>
	<91C27022B42740C68DA003285773A8C9@byotos.com>
Message-ID: <CAMb54M3hzamA1bUWuO_Qa057mSsuUw9_88QdWgVnWAitGyUdKQ@mail.gmail.com>

On 3 July 2012 07:23, Paul Gibbs <paul at byotos.com> wrote:

> Hi Kevinjohn, Mike,
>
> Thanks for the advice. I'll investigate unsetting the attachment rewrite
> rules manually and seeing how well that works.
>
> Mike, about 'feed' vs 'feeds'. Good spot, and this does seem like a bug.
> Setting that too removes the following as you'd expect:
> achievements/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$
>
> achievements/(.+?)/(feed|rdf|rss|rss2|atom)/?$
>
> It does not affect (these still here): achievements/(.+?)/trackback/?
> achievements/(.+?)/comment-page-([0-9]{1,})/?$
>
> Looking at WP_Rewrite::generate_rewrite_rules, it looks like those two
> rules are always added to the post type.
> In any case, this has me down from 11 rewrites to 9 rewrites so far, and
> I'm really pleased about that. Thanks for the help.
>
>

The comment paging isn't always added: you need to make sure you don't have
comments in the supports parameter (obviously), but if you turn off too
many things, it seems to default to turning them back on, somewhere I
couldn't trace (I didn't try too hard).

This example plugin for custom post type "cpt"
http://pastebin.com/FCDwJr2i produces these rules:

    'cpts/?$' => 'index.php?post_type=cpt',
    'cpts/page/([0-9]{1,})/?$' =>
'index.php?post_type=cpt&paged=$matches[1]',
    'cpt/.+?/attachment/([^/]+)/?$' => 'index.php?attachment=$matches[1]',
    'cpt/.+?/attachment/([^/]+)/trackback/?$' =>
'index.php?attachment=$matches[1]&tb=1',
    'cpt/.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$' =>
'index.php?attachment=$matches[1]&feed=$matches[2]',
    'cpt/.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$' =>
'index.php?attachment=$matches[1]&feed=$matches[2]',
    'cpt/.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$' =>
'index.php?attachment=$matches[1]&cpage=$matches[2]',
    'cpt/(.+?)/trackback/?$' => 'index.php?cpt=$matches[1]&tb=1',
    'cpt/(.+?)/page/?([0-9]{1,})/?$' =>
'index.php?cpt=$matches[1]&paged=$matches[2]',
    'cpt/(.+?)(/[0-9]+)?/?$' =>
'index.php?cpt=$matches[1]&page=$matches[2]',

The attachments ones just seem to be always added as does the trackback
one. So you may need to add code to strip those explicitly.
Or else some extra magic with the ep_mask setting in the rewrite param (I
ended up setting it to 0 at some point).


Mike
-- 
Mike Little
http://zed1.com/

From simon at wpsites.co.uk  Tue Jul  3 09:31:19 2012
From: simon at wpsites.co.uk (Simon Dunton - WP Sites)
Date: Tue, 3 Jul 2012 10:31:19 +0100
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <mailman.30808.1341296644.1433.wp-hackers@lists.automattic.com>
References: <mailman.30808.1341296644.1433.wp-hackers@lists.automattic.com>
Message-ID: <061F5AA9-5A87-4B70-AF3A-274362F55140@wpsites.co.uk>

Hi Steve,

When I've looked into this in the past the instructions online were based upon a fresh WP repo and Git repo which for an existing plugin isn't much good. I used to develop on a local git repo, pushing my changes to Github and then manually copying files over SVN to WP.org. So I had the full version history over on GIthub and then some form of a commit history over on the WP.org repo. Tagging new versions over SVN seemed to take ages.

Then I found that script. No complicated setup just add the script to your project, change a few settings at the top and then run the script when ever you have a new version of your plugin to deploy. No changes to Git or WP.org SVN, your commit history being unchanged. Just now I don't worry/care about SVN, I work with my plugin using Git and then just execute that script to deploy my plugin to WP.org.

So you can use that script from today without any worries providing you're willing to not have your full commit history over at WP.org from this day forward. Your WP.org commit history would then on just be "uploaded version 1.0", "uploaded version 1.1" etc. Then over on Git you have your history of all changes, it's Git that is your version control software, SVN WP.org is just somewhere you deploy the code. That script also takes care of tagging the release both in SVN and Git, based on the version tag in your plugin header.

"If you have active, separate commit histories in both svn and Github, may God have mercy on your soul." - I may have the wrong end of the stick here but I don't think this applies to you. I think that comment is for a plugin that has developers committing code on SVN and then other developers committing code on Git, so two separate commit histories which I'm sure would be a nightmare. But then again I'm no version control guru, Git does some bloody fancy stuff and I wouldn't be surprised if someone turned around and said to me "do you not know the Git make a brew command: git-brew... try it, a Git robot will come round and make you a coffee"

Simon

On 3 Jul 2012, at 07:24, wp-hackers-request at lists.automattic.com wrote:

> Message: 2
> Date: Mon, 2 Jul 2012 19:28:52 +0100
> From: Steve Taylor <steve at sltaylor.co.uk>
> Subject: Re: [wp-hackers] GitHub + plugins.svn.wordpress.org
> To: wp-hackers at lists.automattic.com
> Message-ID:
> 	<CAGEuVU1s=M4yKu4nW9jFyc9-8S4Xv-aBGFGhuQMzBhHkEQeX4g at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
> 
> Thanks Simon, but I'm not that far yet! I'm having problems with the
> fact that I already have a functioning GitHub repo and wordpress.org
> SVN repo for my plugins.

> I don't mind losing my commit history on GitHub if absolutely
> necessary (I imagine losing the history on wordpress.org is out of the
> question). Just not sure how to address the issue.


From steve at sltaylor.co.uk  Tue Jul  3 10:55:51 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Tue, 3 Jul 2012 11:55:51 +0100
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <061F5AA9-5A87-4B70-AF3A-274362F55140@wpsites.co.uk>
References: <mailman.30808.1341296644.1433.wp-hackers@lists.automattic.com>
	<061F5AA9-5A87-4B70-AF3A-274362F55140@wpsites.co.uk>
Message-ID: <CAGEuVU0mp6DiKdxhQAo0Jv5CJ+LKY5oob3pXvkT1GY0BrKHUqg@mail.gmail.com>

Simon,

MANY thanks for unpicking some of my confusion! I think you're right.
I'm in exactly that position, just using wordpress.org SVN as a
distribution channel, manually creating new tags there when releasing
a new version - and I just need to automate that process.

What I wasn't getting was the difference between your deployment
script and the other approaches
(http://thereforei.am/2011/04/21/git-to-svn-automated-wordpress-plugin-deployment/
and http://stas.nerd.ro/publish-git-repository-to-svn-easily.html),
which seem to be more about mirroring the Git revision history in SVN
by having the SVN trunk as a Git branch.

Now. I believe my new sticking point is that I'm on Windows, and all
the deployment scripts around are .sh files! I know, I know, no
sympathy there ;-)

If anyone knows of an equivalent .bat file, please shout. Otherwise
I'll try and write a post if/when I find the time to convert. No idea
how hard / easy that might be. For now, on with the manual SVN
tagging...

Thanks again,

Steve

On 3 July 2012 10:31, Simon Dunton - WP Sites <simon at wpsites.co.uk> wrote:
> Hi Steve,
>
> When I've looked into this in the past the instructions online were based upon a fresh WP repo and Git repo which for an existing plugin isn't much good. I used to develop on a local git repo, pushing my changes to Github and then manually copying files over SVN to WP.org. So I had the full version history over on GIthub and then some form of a commit history over on the WP.org repo. Tagging new versions over SVN seemed to take ages.
>
> Then I found that script. No complicated setup just add the script to your project, change a few settings at the top and then run the script when ever you have a new version of your plugin to deploy. No changes to Git or WP.org SVN, your commit history being unchanged. Just now I don't worry/care about SVN, I work with my plugin using Git and then just execute that script to deploy my plugin to WP.org.
>
> So you can use that script from today without any worries providing you're willing to not have your full commit history over at WP.org from this day forward. Your WP.org commit history would then on just be "uploaded version 1.0", "uploaded version 1.1" etc. Then over on Git you have your history of all changes, it's Git that is your version control software, SVN WP.org is just somewhere you deploy the code. That script also takes care of tagging the release both in SVN and Git, based on the version tag in your plugin header.
>
> "If you have active, separate commit histories in both svn and Github, may God have mercy on your soul." - I may have the wrong end of the stick here but I don't think this applies to you. I think that comment is for a plugin that has developers committing code on SVN and then other developers committing code on Git, so two separate commit histories which I'm sure would be a nightmare. But then again I'm no version control guru, Git does some bloody fancy stuff and I wouldn't be surprised if someone turned around and said to me "do you not know the Git make a brew command: git-brew... try it, a Git robot will come round and make you a coffee"
>
> Simon
>
> On 3 Jul 2012, at 07:24, wp-hackers-request at lists.automattic.com wrote:
>
>> Message: 2
>> Date: Mon, 2 Jul 2012 19:28:52 +0100
>> From: Steve Taylor <steve at sltaylor.co.uk>
>> Subject: Re: [wp-hackers] GitHub + plugins.svn.wordpress.org
>> To: wp-hackers at lists.automattic.com
>> Message-ID:
>>       <CAGEuVU1s=M4yKu4nW9jFyc9-8S4Xv-aBGFGhuQMzBhHkEQeX4g at mail.gmail.com>
>> Content-Type: text/plain; charset=ISO-8859-1
>>
>> Thanks Simon, but I'm not that far yet! I'm having problems with the
>> fact that I already have a functioning GitHub repo and wordpress.org
>> SVN repo for my plugins.
>
>> I don't mind losing my commit history on GitHub if absolutely
>> necessary (I imagine losing the history on wordpress.org is out of the
>> question). Just not sure how to address the issue.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wordpress at dd32.id.au  Tue Jul  3 10:58:47 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Tue, 3 Jul 2012 20:58:47 +1000
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <CAGEuVU0mp6DiKdxhQAo0Jv5CJ+LKY5oob3pXvkT1GY0BrKHUqg@mail.gmail.com>
References: <mailman.30808.1341296644.1433.wp-hackers@lists.automattic.com>
	<061F5AA9-5A87-4B70-AF3A-274362F55140@wpsites.co.uk>
	<CAGEuVU0mp6DiKdxhQAo0Jv5CJ+LKY5oob3pXvkT1GY0BrKHUqg@mail.gmail.com>
Message-ID: <CAL4EHf=zJ+5p4bTF5jt3SN4ZDJwYMxD8KmT87U_a2+NPrDK7=g@mail.gmail.com>

On 3 July 2012 20:55, Steve Taylor <steve at sltaylor.co.uk> wrote:
> Now. I believe my new sticking point is that I'm on Windows, and all
> the deployment scripts around are .sh files! I know, I know, no
> sympathy there ;-)
>
> If anyone knows of an equivalent .bat file, please shout. Otherwise
> I'll try and write a post if/when I find the time to convert. No idea
> how hard / easy that might be. For now, on with the manual SVN
> tagging...

You could always install something such as cygwin, which will give you
the power of most linux CLI tools on windows.. Awesome fun to be able
to use the command line in Windows and actually be able to achieve
tasks rather than running a single program :)
(So yes, It should have Sh, which will allow you to run .sh, and
should be able to have any other app which the shell script depends on
available)
Might be worth a tinker :)

From steve at sltaylor.co.uk  Tue Jul  3 11:19:35 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Tue, 3 Jul 2012 12:19:35 +0100
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <CAL4EHf=zJ+5p4bTF5jt3SN4ZDJwYMxD8KmT87U_a2+NPrDK7=g@mail.gmail.com>
References: <mailman.30808.1341296644.1433.wp-hackers@lists.automattic.com>
	<061F5AA9-5A87-4B70-AF3A-274362F55140@wpsites.co.uk>
	<CAGEuVU0mp6DiKdxhQAo0Jv5CJ+LKY5oob3pXvkT1GY0BrKHUqg@mail.gmail.com>
	<CAL4EHf=zJ+5p4bTF5jt3SN4ZDJwYMxD8KmT87U_a2+NPrDK7=g@mail.gmail.com>
Message-ID: <CAGEuVU2ROgxSLxUfCN8fB+2+mZzEodA68AYj-BvXgKdAWuJiqg@mail.gmail.com>

Thanks Dion, nice to know I've a place to start :)


On 3 July 2012 11:58, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:
> On 3 July 2012 20:55, Steve Taylor <steve at sltaylor.co.uk> wrote:
>> Now. I believe my new sticking point is that I'm on Windows, and all
>> the deployment scripts around are .sh files! I know, I know, no
>> sympathy there ;-)
>>
>> If anyone knows of an equivalent .bat file, please shout. Otherwise
>> I'll try and write a post if/when I find the time to convert. No idea
>> how hard / easy that might be. For now, on with the manual SVN
>> tagging...
>
> You could always install something such as cygwin, which will give you
> the power of most linux CLI tools on windows.. Awesome fun to be able
> to use the command line in Windows and actually be able to achieve
> tasks rather than running a single program :)
> (So yes, It should have Sh, which will allow you to run .sh, and
> should be able to have any other app which the shell script depends on
> available)
> Might be worth a tinker :)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From simon at wpsites.co.uk  Tue Jul  3 12:28:24 2012
From: simon at wpsites.co.uk (Simon Dunton - WP Sites)
Date: Tue, 3 Jul 2012 13:28:24 +0100
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <mailman.7.1341316802.2987.wp-hackers@lists.automattic.com>
References: <mailman.7.1341316802.2987.wp-hackers@lists.automattic.com>
Message-ID: <BA15FC37-0E2C-4E9F-9EB6-18F1F19ED92E@wpsites.co.uk>

Nothing, that script is 99% like the one I'm using. I've since found a few variations of that same script.

To me every other approach seemed too complicated. I didn't want to use SVN at all and using one of these scripts took care of that for me.

If you really wanted to automate this process you could probably put the deploy script on a Linux server somewhere and create a post-receive hook in Github so that when a commit is made Github generates a request to a PHP file on your linux server which then executes the .sh script. Obviously you wouldn't want to deploy every commit to WP.org SVN so you'd want to make your PHP post-receive hook check the most recent commit message includes some text like "... release" or some other keywords that you decide upon that give your script the go-ahead to deploy to git.


On 3 Jul 2012, at 13:00, wp-hackers-request at lists.automattic.com wrote:

> What I wasn't getting was the difference between your deployment
> script and the other approaches
> (http://thereforei.am/2011/04/21/git-to-svn-automated-wordpress-plugin-deployment/


From bill.erickson at gmail.com  Tue Jul  3 14:34:42 2012
From: bill.erickson at gmail.com (Bill Erickson)
Date: Tue, 3 Jul 2012 09:34:42 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
Message-ID: <CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>

It's much easier to migrate a site with absolute URLs than it is with
relative URLs. Try using a script like this to update the URLs in the
database after you've moved it:
http://interconnectit.com/124/search-and-replace-for-wordpress-databases/


---
Bill Erickson
WordPress Consultant
http://www.billerickson.net

NOTE: To better serve my clients, partners, and most importantly my family,
I've begun checking email only three times per day.

For phone calls, please schedule here: http://tungle.me/billerickson . If
it's an emergency, please call now and leave a voicemail



On Mon, Jul 2, 2012 at 10:11 PM, Casey Bisson <casey.bisson at gmail.com>wrote:

>
> Have you considered leveraging WP's native image/attachments and simply
> store the ID of the attachment? From there it's very easy to generate a URL
> on the fly with wp_get_attachment_url( $id ) . Of course you can then
> automatically get different sizes as well.
>
> Casey Bisson
> http://twitter.com/misterbisson
>
> On Jul 2, 2012, at 3:13 PM, Shasta Willson wrote:
>
> > A number of the plug-ins I use, such as sliders, involve inputting an
> > absolute URL for the image.  This is a problem at deployment (or any
> > other move) obviously, but I'm not sure I've seen it done any other
> > way.
> >
> > I'm building a custom type that includes two image uploads using the
> > built-in media box.  I'd really like it to store a relative URL rather
> > than an absolute one so I've considered using regex to just strip off
> > everything to "/uploads".  Is there a downside to doing this?  Is
> > there a better way to accomplish the goal?  Am I missing some reason
> > everyone seems to store the absolute link?
> >
> > Thanks,
> > Shasta
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From aero.maxx.d at gmail.com  Tue Jul  3 15:23:01 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Tue, 03 Jul 2012 16:23:01 +0100
Subject: [wp-hackers] Custom post types and wp_get_archives
Message-ID: <4FF30E55.4070501@gmail.com>

Hi All,

Is there a simple way to get custom post types to appear in the archive 
along with the normal blog posts when using the wp_get_archives 
function, if not is there a similar function that can be used to display 
a list for the custom post types the same way it does for normal blog 
posts ?

I would prefer not to use a plugin, but if this is the only way then I 
guess I would do so, I just thought there maybe something built into 
wordpress that would do this seeing as the custom post types are there, 
and that maybe someone has thought users may want this.

I have googled and looked in the codex but not been able to find what I 
was looking for function wise as to what I was trying to achieve.

Thanks in advance
Daniel.

From lionel.pointet at globalis-ms.com  Tue Jul  3 15:25:17 2012
From: lionel.pointet at globalis-ms.com (Lionel Pointet)
Date: Tue, 03 Jul 2012 17:25:17 +0200
Subject: [wp-hackers] Custom post types and wp_get_archives
In-Reply-To: <4FF30E55.4070501@gmail.com>
References: <4FF30E55.4070501@gmail.com>
Message-ID: <4FF30EDD.5090904@globalis-ms.com>

Hi Daniel,

You can read this codex page : 
http://codex.wordpress.org/Function_Reference/register_post_type
And specifically the 'has_archive' arg that allows you to get your post 
type archived as the others (posts or pages) and allows you to override 
the default slug ($post_type by default) too.

I hope that's what you wanted...
Lionel

Le 03/07/2012 17:23, Aero Maxx a ?crit :
> Hi All,
>
> Is there a simple way to get custom post types to appear in the 
> archive along with the normal blog posts when using the 
> wp_get_archives function, if not is there a similar function that can 
> be used to display a list for the custom post types the same way it 
> does for normal blog posts ?
>
> I would prefer not to use a plugin, but if this is the only way then I 
> guess I would do so, I just thought there maybe something built into 
> wordpress that would do this seeing as the custom post types are 
> there, and that maybe someone has thought users may want this.
>
> I have googled and looked in the codex but not been able to find what 
> I was looking for function wise as to what I was trying to achieve.
>
> Thanks in advance
> Daniel.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



From aero.maxx.d at gmail.com  Tue Jul  3 16:26:30 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Tue, 03 Jul 2012 17:26:30 +0100
Subject: [wp-hackers] Custom post types and wp_get_archives
In-Reply-To: <4FF30EDD.5090904@globalis-ms.com>
References: <4FF30E55.4070501@gmail.com> <4FF30EDD.5090904@globalis-ms.com>
Message-ID: <4FF31D36.3090104@gmail.com>

Hi Lionel, All,

I have created the custom post type and its all working and so on, but I 
would like people to be able to view an archive list of the last month 
and so on, just like they can with my normal blog posts.

The archive themselves do work, but I have no way for my visitors to 
find them ? Because am unsure how to get them into the archives list on 
the sidebar, this is what I require help with.

For example my blog posts archive shows as :-

July 2012
June 2012
...
January 2012

but clicking on those links it shows only the blog post archives, I 
would either like to get my custom post types to affect that list, i.e. 
if there are no blog posts for say December 2011, but there are custom 
post types for this month, I would like there to be a link for it, but 
it seems this is not possible as wp_get_archives doesn't support the 
post-type parameter.

So I am wondering how I would be able to do a list similar to the blog 
posts one that would display months, years archive links for my custom 
post types.

On 03/07/2012 16:25, Lionel Pointet wrote:
> Hi Daniel,
>
> You can read this codex page : 
> http://codex.wordpress.org/Function_Reference/register_post_type
> And specifically the 'has_archive' arg that allows you to get your 
> post type archived as the others (posts or pages) and allows you to 
> override the default slug ($post_type by default) too.
>
> I hope that's what you wanted...
> Lionel
>
> Le 03/07/2012 17:23, Aero Maxx a ?crit :
>> Hi All,
>>
>> Is there a simple way to get custom post types to appear in the 
>> archive along with the normal blog posts when using the 
>> wp_get_archives function, if not is there a similar function that can 
>> be used to display a list for the custom post types the same way it 
>> does for normal blog posts ?
>>
>> I would prefer not to use a plugin, but if this is the only way then 
>> I guess I would do so, I just thought there maybe something built 
>> into wordpress that would do this seeing as the custom post types are 
>> there, and that maybe someone has thought users may want this.
>>
>> I have googled and looked in the codex but not been able to find what 
>> I was looking for function wise as to what I was trying to achieve.
>>
>> Thanks in advance
>> Daniel.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



From lionel.pointet at globalis-ms.com  Tue Jul  3 17:19:54 2012
From: lionel.pointet at globalis-ms.com (Lionel Pointet)
Date: Tue, 03 Jul 2012 19:19:54 +0200
Subject: [wp-hackers] Custom post types and wp_get_archives
In-Reply-To: <4FF31D36.3090104@gmail.com>
References: <4FF30E55.4070501@gmail.com> <4FF30EDD.5090904@globalis-ms.com>
	<4FF31D36.3090104@gmail.com>
Message-ID: <4FF329BA.7050003@globalis-ms.com>

Oh right! I misunderstood your request, sorry...

So, the first thing I notice in the 'wp_get_archives' function is that 
the post_type is hardcoded in the where clause.
But you can easily filter it to add your CPT slug thanks to the 
'getarchives_where' filter:

    function example_getarchives_where($where) {
         return str_replace("WHERE post_type = 'post'", "WHERE post_type
    IN ('post', 'cpt')", $where);
    }
    add_filter('getarchives_where', 'example_getarchives_where');

There may be another better solution, but that's the first thing I found 
and I know it'll work...

Lionel

Le 03/07/2012 18:26, Aero Maxx a ?crit :
> Hi Lionel, All,
>
> I have created the custom post type and its all working and so on, but 
> I would like people to be able to view an archive list of the last 
> month and so on, just like they can with my normal blog posts.
>
> The archive themselves do work, but I have no way for my visitors to 
> find them ? Because am unsure how to get them into the archives list 
> on the sidebar, this is what I require help with.
>
> For example my blog posts archive shows as :-
>
> July 2012
> June 2012
> ...
> January 2012
>
> but clicking on those links it shows only the blog post archives, I 
> would either like to get my custom post types to affect that list, 
> i.e. if there are no blog posts for say December 2011, but there are 
> custom post types for this month, I would like there to be a link for 
> it, but it seems this is not possible as wp_get_archives doesn't 
> support the post-type parameter.
>
> So I am wondering how I would be able to do a list similar to the blog 
> posts one that would display months, years archive links for my custom 
> post types.
>
> On 03/07/2012 16:25, Lionel Pointet wrote:
>> Hi Daniel,
>>
>> You can read this codex page : 
>> http://codex.wordpress.org/Function_Reference/register_post_type
>> And specifically the 'has_archive' arg that allows you to get your 
>> post type archived as the others (posts or pages) and allows you to 
>> override the default slug ($post_type by default) too.
>>
>> I hope that's what you wanted...
>> Lionel
>>
>> Le 03/07/2012 17:23, Aero Maxx a ?crit :
>>> Hi All,
>>>
>>> Is there a simple way to get custom post types to appear in the 
>>> archive along with the normal blog posts when using the 
>>> wp_get_archives function, if not is there a similar function that 
>>> can be used to display a list for the custom post types the same way 
>>> it does for normal blog posts ?
>>>
>>> I would prefer not to use a plugin, but if this is the only way then 
>>> I guess I would do so, I just thought there maybe something built 
>>> into wordpress that would do this seeing as the custom post types 
>>> are there, and that maybe someone has thought users may want this.
>>>
>>> I have googled and looked in the codex but not been able to find 
>>> what I was looking for function wise as to what I was trying to 
>>> achieve.
>>>
>>> Thanks in advance
>>> Daniel.
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>



From wordpress at zed1.com  Tue Jul  3 18:00:49 2012
From: wordpress at zed1.com (Mike Little)
Date: Tue, 3 Jul 2012 19:00:49 +0100
Subject: [wp-hackers] Custom post types and wp_get_archives
In-Reply-To: <4FF329BA.7050003@globalis-ms.com>
References: <4FF30E55.4070501@gmail.com> <4FF30EDD.5090904@globalis-ms.com>
	<4FF31D36.3090104@gmail.com> <4FF329BA.7050003@globalis-ms.com>
Message-ID: <CAMb54M3v===Sy9r3KFc470Wdo0wpK+51mWG4kHbzeF7H-Wp3Jg@mail.gmail.com>

Aero,

You can try this, add it to your custom post type plugin or your theme's
functions.php. It's fairly brute force but should do most of what you want,
including making the recent posts widget work.

add_action( 'pre_get_posts', 'cpt_add_to_posts' );
function cpt_add_to_posts( $query ) {
$post_type = $query->get( 'post_type' );
 if ( empty( $post_type ) ||  'post' == $post_type )
$query->set( 'post_type', array( 'post', 'cpt' ) );
}

replacing 'cpt' with your own custom post type


Using Lionel's suggestion
add_filter( 'getarchives_where', 'cpt_getarchives_where' );
function cpt_getarchives_where( $where ) {
return str_replace( "WHERE post_type = 'post'", "WHERE post_type IN
('post', 'cpt')", $where );
}

will make the archives widget work too.


Mike
-- 
Mike Little
http://zed1.com/

From paul at byotos.com  Tue Jul  3 18:02:43 2012
From: paul at byotos.com (Paul Gibbs)
Date: Tue, 3 Jul 2012 19:02:43 +0100
Subject: [wp-hackers] how to stop custom post type creating
 attachment/trackback/feed rewrite rules?
In-Reply-To: <CAMb54M3hzamA1bUWuO_Qa057mSsuUw9_88QdWgVnWAitGyUdKQ@mail.gmail.com>
References: <6EBF77B9C1264375B60818C701239170@byotos.com>
	<CAMb54M10atAW8i6pTWQLfvUCyhuq_2CSnd5cwk5Z0NeqK8qmvQ@mail.gmail.com>
	<91C27022B42740C68DA003285773A8C9@byotos.com>
	<CAMb54M3hzamA1bUWuO_Qa057mSsuUw9_88QdWgVnWAitGyUdKQ@mail.gmail.com>
Message-ID: <8E327E3A4B4B4D62B991CA1CED983814@byotos.com>

Ah hah. ep_mask = 0 removed the comment paging rewrite rule. Excellent. Thanks again.

-- 
Paul Gibbs


On Tuesday, 3 July 2012 at 10:25, Mike Little wrote:

> On 3 July 2012 07:23, Paul Gibbs <paul at byotos.com (mailto:paul at byotos.com)> wrote:
> 
> > Hi Kevinjohn, Mike,
> > 
> > Thanks for the advice. I'll investigate unsetting the attachment rewrite
> > rules manually and seeing how well that works.
> > 
> > Mike, about 'feed' vs 'feeds'. Good spot, and this does seem like a bug.
> > Setting that too removes the following as you'd expect:
> > achievements/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$
> > 
> > achievements/(.+?)/(feed|rdf|rss|rss2|atom)/?$
> > 
> > It does not affect (these still here): achievements/(.+?)/trackback/?
> > achievements/(.+?)/comment-page-([0-9]{1,})/?$
> > 
> > Looking at WP_Rewrite::generate_rewrite_rules, it looks like those two
> > rules are always added to the post type.
> > In any case, this has me down from 11 rewrites to 9 rewrites so far, and
> > I'm really pleased about that. Thanks for the help.
> > 
> 
> 
> The comment paging isn't always added: you need to make sure you don't have
> comments in the supports parameter (obviously), but if you turn off too
> many things, it seems to default to turning them back on, somewhere I
> couldn't trace (I didn't try too hard).
> 
> This example plugin for custom post type "cpt"
> http://pastebin.com/FCDwJr2i produces these rules:
> 
> 'cpts/?$' => 'index.php?post_type=cpt',
> 'cpts/page/([0-9]{1,})/?$' =>
> 'index.php?post_type=cpt&paged=$matches[1]',
> 'cpt/.+?/attachment/([^/]+)/?$' => 'index.php?attachment=$matches[1]',
> 'cpt/.+?/attachment/([^/]+)/trackback/?$' =>
> 'index.php?attachment=$matches[1]&tb=1',
> 'cpt/.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$' =>
> 'index.php?attachment=$matches[1]&feed=$matches[2]',
> 'cpt/.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$' =>
> 'index.php?attachment=$matches[1]&feed=$matches[2]',
> 'cpt/.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$' =>
> 'index.php?attachment=$matches[1]&cpage=$matches[2]',
> 'cpt/(.+?)/trackback/?$' => 'index.php?cpt=$matches[1]&tb=1',
> 'cpt/(.+?)/page/?([0-9]{1,})/?$' =>
> 'index.php?cpt=$matches[1]&paged=$matches[2]',
> 'cpt/(.+?)(/[0-9]+)?/?$' =>
> 'index.php?cpt=$matches[1]&page=$matches[2]',
> 
> The attachments ones just seem to be always added as does the trackback
> one. So you may need to add code to strip those explicitly.
> Or else some extra magic with the ep_mask setting in the rewrite param (I
> ended up setting it to 0 at some point).
> 
> 
> Mike
> -- 
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com)
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 



From aero.maxx.d at gmail.com  Tue Jul  3 18:08:28 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Tue, 03 Jul 2012 19:08:28 +0100
Subject: [wp-hackers] Custom post types and wp_get_archives
In-Reply-To: <4FF329BA.7050003@globalis-ms.com>
References: <4FF30E55.4070501@gmail.com> <4FF30EDD.5090904@globalis-ms.com>
	<4FF31D36.3090104@gmail.com> <4FF329BA.7050003@globalis-ms.com>
Message-ID: <4FF3351C.7030502@gmail.com>

Thats ok no worries....

Thats great it works really well and just what I was after, although now 
I realise that the archive list is incredibly long, and something that I 
never considered, and there is no way to limit it on the widget side bar.

But I have something to be getting along with til I find a better 
solution, so thank you very much!

On 03/07/2012 18:19, Lionel Pointet wrote:
> Oh right! I misunderstood your request, sorry...
>
> So, the first thing I notice in the 'wp_get_archives' function is that 
> the post_type is hardcoded in the where clause.
> But you can easily filter it to add your CPT slug thanks to the 
> 'getarchives_where' filter:
>
>     function example_getarchives_where($where) {
>         return str_replace("WHERE post_type = 'post'", "WHERE
>     post_type IN ('post', 'cpt')", $where);
>     }
>     add_filter('getarchives_where', 'example_getarchives_where');
>
> There may be another better solution, but that's the first thing I 
> found and I know it'll work...
>
> Lionel
>
> Le 03/07/2012 18:26, Aero Maxx a ?crit :
>> Hi Lionel, All,
>>
>> I have created the custom post type and its all working and so on, 
>> but I would like people to be able to view an archive list of the 
>> last month and so on, just like they can with my normal blog posts.
>>
>> The archive themselves do work, but I have no way for my visitors to 
>> find them ? Because am unsure how to get them into the archives list 
>> on the sidebar, this is what I require help with.
>>
>> For example my blog posts archive shows as :-
>>
>> July 2012
>> June 2012
>> ...
>> January 2012
>>
>> but clicking on those links it shows only the blog post archives, I 
>> would either like to get my custom post types to affect that list, 
>> i.e. if there are no blog posts for say December 2011, but there are 
>> custom post types for this month, I would like there to be a link for 
>> it, but it seems this is not possible as wp_get_archives doesn't 
>> support the post-type parameter.
>>
>> So I am wondering how I would be able to do a list similar to the 
>> blog posts one that would display months, years archive links for my 
>> custom post types.
>>
>> On 03/07/2012 16:25, Lionel Pointet wrote:
>>> Hi Daniel,
>>>
>>> You can read this codex page : 
>>> http://codex.wordpress.org/Function_Reference/register_post_type
>>> And specifically the 'has_archive' arg that allows you to get your 
>>> post type archived as the others (posts or pages) and allows you to 
>>> override the default slug ($post_type by default) too.
>>>
>>> I hope that's what you wanted...
>>> Lionel
>>>
>>> Le 03/07/2012 17:23, Aero Maxx a ?crit :
>>>> Hi All,
>>>>
>>>> Is there a simple way to get custom post types to appear in the 
>>>> archive along with the normal blog posts when using the 
>>>> wp_get_archives function, if not is there a similar function that 
>>>> can be used to display a list for the custom post types the same 
>>>> way it does for normal blog posts ?
>>>>
>>>> I would prefer not to use a plugin, but if this is the only way 
>>>> then I guess I would do so, I just thought there maybe something 
>>>> built into wordpress that would do this seeing as the custom post 
>>>> types are there, and that maybe someone has thought users may want 
>>>> this.
>>>>
>>>> I have googled and looked in the codex but not been able to find 
>>>> what I was looking for function wise as to what I was trying to 
>>>> achieve.
>>>>
>>>> Thanks in advance
>>>> Daniel.
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>
>



From aero.maxx.d at gmail.com  Tue Jul  3 20:10:53 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Tue, 03 Jul 2012 21:10:53 +0100
Subject: [wp-hackers] Custom post types and wp_get_archives
In-Reply-To: <CAMb54M3v===Sy9r3KFc470Wdo0wpK+51mWG4kHbzeF7H-Wp3Jg@mail.gmail.com>
References: <4FF30E55.4070501@gmail.com> <4FF30EDD.5090904@globalis-ms.com>
	<4FF31D36.3090104@gmail.com> <4FF329BA.7050003@globalis-ms.com>
	<CAMb54M3v===Sy9r3KFc470Wdo0wpK+51mWG4kHbzeF7H-Wp3Jg@mail.gmail.com>
Message-ID: <4FF351CD.8010403@gmail.com>

Hi Mike,

I have been trying to work out how to use the code that you wrote, as I 
like that it makes the recent posts widget work, but it seems to mess 
with my blog posts only page in that it shows posts from my custom post 
type aswell as posts from the blog, have tried using !is_page ( array ( 
'Blog', 'blog' ) ) but it doesn't seem to change anything.

Do you have any ideas as to what I could do ?

Also do you or anyone know how I could get a list based archive on my 
side bar for my custom post type, but to only show the last 6 months, as 
its fairly long list otherwise.

Have decided to keep the blog posts and the custom post type archives 
seperate.

On 03/07/2012 19:00, Mike Little wrote:
>
> Aero,
>
> You can try this, add it to your custom post type plugin or your 
> theme's functions.php. It's fairly brute force but should do most of 
> what you want, including making the recent posts widget work.
> add_action( 'pre_get_posts', 'cpt_add_to_posts' );
> function cpt_add_to_posts( $query ) {
> $post_type = $query->get( 'post_type' );
> if ( empty( $post_type ) ||  'post' == $post_type )
> $query->set( 'post_type', array( 'post', 'cpt' ) );
> }
>
> replacing 'cpt' with your own custom post type
>
>
> Using Lionel's suggestion
> add_filter( 'getarchives_where', 'cpt_getarchives_where' );
> function cpt_getarchives_where( $where ) {
> return str_replace( "WHERE post_type = 'post'", "WHERE post_type IN 
> ('post', 'cpt')", $where );
> }
>
> will make the archives widget work too.
>
>
> Mike
> -- 
> Mike Little
> http://zed1.com/
>



From wordpress at zed1.com  Tue Jul  3 21:22:58 2012
From: wordpress at zed1.com (Mike Little)
Date: Tue, 3 Jul 2012 22:22:58 +0100
Subject: [wp-hackers] Custom post types and wp_get_archives
In-Reply-To: <4FF351CD.8010403@gmail.com>
References: <4FF30E55.4070501@gmail.com> <4FF30EDD.5090904@globalis-ms.com>
	<4FF31D36.3090104@gmail.com> <4FF329BA.7050003@globalis-ms.com>
	<CAMb54M3v===Sy9r3KFc470Wdo0wpK+51mWG4kHbzeF7H-Wp3Jg@mail.gmail.com>
	<4FF351CD.8010403@gmail.com>
Message-ID: <CAMb54M1sqbckDEqA6Liv-nEV-TOMSapvBuuWta7vQAkOBZWuVw@mail.gmail.com>

On 3 July 2012 21:10, Aero Maxx <aero.maxx.d at gmail.com> wrote:

>  Hi Mike,
>
> I have been trying to work out how to use the code that you wrote, as I
> like that it makes the recent posts widget work, but it seems to mess with
> my blog posts only page in that it shows posts from my custom post type
> aswell as posts from the blog, have tried using !is_page ( array ( 'Blog',
> 'blog' ) ) but it doesn't seem to change anything.
>
>
Sorry, I thought that was what you wanted. When you are talking about
archives, do you just mean the archives widget? I misunderstood your
requirements.

Do you have any ideas as to what I could do ?
>
>
You need to remove the "cpt_add_to_posts" code.



> Also do you or anyone know how I could get a list based archive on my side
> bar for my custom post type, but to only show the last 6 months, as its
> fairly long list otherwise.
>
> Have decided to keep the blog posts and the custom post type archives
> seperate.
>
>

For your other issue, you will either have to use a plugin that will list
CPT archives, or write some code to duplicate the archives widget
functionality for your CPT, with the added functionality to restrict the
number of entries.

Mike
-- 
Mike Little
http://zed1.com/

From steve at sltaylor.co.uk  Tue Jul  3 22:03:15 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Tue, 3 Jul 2012 23:03:15 +0100
Subject: [wp-hackers] GitHub + plugins.svn.wordpress.org
In-Reply-To: <BA15FC37-0E2C-4E9F-9EB6-18F1F19ED92E@wpsites.co.uk>
References: <mailman.7.1341316802.2987.wp-hackers@lists.automattic.com>
	<BA15FC37-0E2C-4E9F-9EB6-18F1F19ED92E@wpsites.co.uk>
Message-ID: <CAGEuVU2pyRJBda1WB3pD=mPOEkp2UY-3fkPjfQgMsuWiMW=K4A@mail.gmail.com>

Just discussed this at the London wp-hooked meetup, and I think what
I'm going to do is either convert one of the .sh scripts around to
.bat (a useful exercize in learning what it's actually doing, if it
can be converted), or get Cygwin going and go that route. Either way,
I'll post something on my blog that will hopefully plug the gap out
there for people who are looking to do what I'm doing but are as
confused as I was checking out the options posted out there.

Git deployment hooks were mentioned at the meetup, I'll probably check
those out too.

Thanks for all your hints!


On 3 July 2012 13:28, Simon Dunton - WP Sites <simon at wpsites.co.uk> wrote:
> Nothing, that script is 99% like the one I'm using. I've since found a few variations of that same script.
>
> To me every other approach seemed too complicated. I didn't want to use SVN at all and using one of these scripts took care of that for me.
>
> If you really wanted to automate this process you could probably put the deploy script on a Linux server somewhere and create a post-receive hook in Github so that when a commit is made Github generates a request to a PHP file on your linux server which then executes the .sh script. Obviously you wouldn't want to deploy every commit to WP.org SVN so you'd want to make your PHP post-receive hook check the most recent commit message includes some text like "... release" or some other keywords that you decide upon that give your script the go-ahead to deploy to git.
>
>
> On 3 Jul 2012, at 13:00, wp-hackers-request at lists.automattic.com wrote:
>
>> What I wasn't getting was the difference between your deployment
>> script and the other approaches
>> (http://thereforei.am/2011/04/21/git-to-svn-automated-wordpress-plugin-deployment/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From shastaw at gmail.com  Wed Jul  4 00:08:22 2012
From: shastaw at gmail.com (Shasta Willson)
Date: Tue, 3 Jul 2012 17:08:22 -0700
Subject: [wp-hackers] id="respond" used more than once?
Message-ID: <CAGguigc0GPWBofxoN85_1JoNz0FgYK+QcWdzDNE0X-yhqZQP0w@mail.gmail.com>

I'm creating a plug-in for my own use (at least for now) that needs to
modify the comments only on a given template.  In most cases I've
figured out how to do what I want, however I'm stumped by turning off
the "respond to comments" portion of the template.  I know I could
write my own logic for a comments template, but it seems like there
should be a hook or filter or something that makes this easy.  After
failing to find it, I tried to use CSS to give the respond to comment
div a non-display value.

That's when I realized the CSS for the main comments and these
comments is identical.  Both have id="respond", id="commentform" etc.

So now I have two questions:

is there a hook to turn off the threading only on certain pages?
is there somewhere I should report the badly formed CSS?

Thanks!
Shasta

From fonglh at gmail.com  Wed Jul  4 02:27:16 2012
From: fonglh at gmail.com (Fong Li Heng)
Date: Wed, 4 Jul 2012 10:27:16 +0800
Subject: [wp-hackers] Custom post types and wp_get_archives
In-Reply-To: <CAMb54M1sqbckDEqA6Liv-nEV-TOMSapvBuuWta7vQAkOBZWuVw@mail.gmail.com>
References: <4FF30E55.4070501@gmail.com> <4FF30EDD.5090904@globalis-ms.com>
	<4FF31D36.3090104@gmail.com> <4FF329BA.7050003@globalis-ms.com>
	<CAMb54M3v===Sy9r3KFc470Wdo0wpK+51mWG4kHbzeF7H-Wp3Jg@mail.gmail.com>
	<4FF351CD.8010403@gmail.com>
	<CAMb54M1sqbckDEqA6Liv-nEV-TOMSapvBuuWta7vQAkOBZWuVw@mail.gmail.com>
Message-ID: <CACCsp-tc02P0D9nxyQy_jg8cFKeKmNBOi6uXFKxbsb_HLjrucQ@mail.gmail.com>

Hi Aero,

I modified the default widget to take a custom post type parameter, and
also turned it into a jQuery accordion so the list is more manageable. I
wrote a series of blog posts about it, you can start from
https://wpadventures.wordpress.com/2011/02/14/custom-post-type-archives-2/

Sorry it's a little messy and I dumped everything into my theme's
functions.php file. Would definitely be better to implement it as a plugin
but I hadn't figured out the template redirects at that time. Hope this
helps you get started.


On Wed, Jul 4, 2012 at 5:22 AM, Mike Little <wordpress at zed1.com> wrote:

> On 3 July 2012 21:10, Aero Maxx <aero.maxx.d at gmail.com> wrote:
>
> >  Hi Mike,
> >
> > I have been trying to work out how to use the code that you wrote, as I
> > like that it makes the recent posts widget work, but it seems to mess
> with
> > my blog posts only page in that it shows posts from my custom post type
> > aswell as posts from the blog, have tried using !is_page ( array (
> 'Blog',
> > 'blog' ) ) but it doesn't seem to change anything.
> >
> >
> Sorry, I thought that was what you wanted. When you are talking about
> archives, do you just mean the archives widget? I misunderstood your
> requirements.
>
> Do you have any ideas as to what I could do ?
> >
> >
> You need to remove the "cpt_add_to_posts" code.
>
>
>
> > Also do you or anyone know how I could get a list based archive on my
> side
> > bar for my custom post type, but to only show the last 6 months, as its
> > fairly long list otherwise.
> >
> > Have decided to keep the blog posts and the custom post type archives
> > seperate.
> >
> >
>
> For your other issue, you will either have to use a plugin that will list
> CPT archives, or write some code to duplicate the archives widget
> functionality for your CPT, with the added functionality to restrict the
> number of entries.
>
> Mike
> --
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From somani.mayur at gmail.com  Wed Jul  4 07:15:09 2012
From: somani.mayur at gmail.com (Mayur Somani)
Date: Wed, 4 Jul 2012 12:45:09 +0530
Subject: [wp-hackers] Updating orphaned plugins
Message-ID: <CAAw7Gt2S7TPu4sAzxjD6SkEM6cJp057x=yoGtRKTET3KEYDxsg@mail.gmail.com>

I have found a useful but orphaned plugin in the WordPress repository. I
can update it to make useful for current version of WordPress. But what is
the right way to do it?

From ipstenu at ipstenu.org  Wed Jul  4 13:14:13 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Wed, 4 Jul 2012 08:14:13 -0500
Subject: [wp-hackers] Updating orphaned plugins
In-Reply-To: <CAAw7Gt2S7TPu4sAzxjD6SkEM6cJp057x=yoGtRKTET3KEYDxsg@mail.gmail.com>
References: <CAAw7Gt2S7TPu4sAzxjD6SkEM6cJp057x=yoGtRKTET3KEYDxsg@mail.gmail.com>
Message-ID: <36E57CBE-1968-4741-82E6-177704615FDB@ipstenu.org>

Right now, fork it. There's not a good way to adopt them, unless the original author will hand it over to you.

(Credit if you fork ;) it's always nice)

On Jul 4, 2012, at 2:15 AM, Mayur Somani <somani.mayur at gmail.com> wrote:

> I have found a useful but orphaned plugin in the WordPress repository. I
> can update it to make useful for current version of WordPress. But what is
> the right way to do it?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From shastaw at gmail.com  Wed Jul  4 18:29:58 2012
From: shastaw at gmail.com (Shasta Willson)
Date: Wed, 4 Jul 2012 11:29:58 -0700
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
Message-ID: <CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>

On Tue, Jul 3, 2012 at 7:34 AM, Bill Erickson <bill.erickson at gmail.com> wrote:
> It's much easier to migrate a site with absolute URLs than it is with
> relative URLs. Try using a script like this to update the URLs in the

Ok, I've been thinking about this for two days.

Why would it be preferable to do a search and replace through the
database to update absolute URLs, rather than simply use relative URLs
(or IDs -- interesting idea) in the first place?

- Shasta

From bill.erickson at gmail.com  Wed Jul  4 18:32:45 2012
From: bill.erickson at gmail.com (Bill Erickson)
Date: Wed, 4 Jul 2012 13:32:45 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
Message-ID: <CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>

If the client asks you to move the site to a subdirectory, all your
relative links will be broken.

And even if you know your environment well and build your specific tool to
use relative URLs, WordPress core uses absolute URLs for everything so
you'd need to update those anyway (ex: any images inserted into posts).


---
Bill Erickson
WordPress Consultant
http://www.billerickson.net

NOTE: To better serve my clients, partners, and most importantly my family,
I've begun checking email only three times per day.

For phone calls, please schedule here: http://tungle.me/billerickson . If
it's an emergency, please call now and leave a voicemail



On Wed, Jul 4, 2012 at 1:29 PM, Shasta Willson <shastaw at gmail.com> wrote:

> On Tue, Jul 3, 2012 at 7:34 AM, Bill Erickson <bill.erickson at gmail.com>
> wrote:
> > It's much easier to migrate a site with absolute URLs than it is with
> > relative URLs. Try using a script like this to update the URLs in the
>
> Ok, I've been thinking about this for two days.
>
> Why would it be preferable to do a search and replace through the
> database to update absolute URLs, rather than simply use relative URLs
> (or IDs -- interesting idea) in the first place?
>
> - Shasta
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From shastaw at gmail.com  Wed Jul  4 18:42:40 2012
From: shastaw at gmail.com (Shasta Willson)
Date: Wed, 4 Jul 2012 11:42:40 -0700
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
Message-ID: <CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>

On Wed, Jul 4, 2012 at 11:32 AM, Bill Erickson <bill.erickson at gmail.com> wrote:
> If the client asks you to move the site to a subdirectory, all your
> relative links will be broken.

Uh..no..that's what relative URLs are specifically for.

> And even if you know your environment well and build your specific tool to
> use relative URLs, WordPress core uses absolute URLs for everything so
> you'd need to update those anyway (ex: any images inserted into posts).

That's a compelling argument!

- Shasta

From otto at ottodestruct.com  Wed Jul  4 19:55:26 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 4 Jul 2012 14:55:26 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
Message-ID: <CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>

On Wed, Jul 4, 2012 at 1:42 PM, Shasta Willson <shastaw at gmail.com> wrote:
> On Wed, Jul 4, 2012 at 11:32 AM, Bill Erickson <bill.erickson at gmail.com> wrote:
>> If the client asks you to move the site to a subdirectory, all your
>> relative links will be broken.
>
> Uh..no..that's what relative URLs are specifically for.

So, a URL of /2012/07/whatever will still work when you move it to
/blog/2012/07/whatever? (Hint: nope.)

If you're considering that a URL shouldn't be relative to the root (as
in not starting with a / character), then consider images in posts. If
the image is at /wp-content/uploads/whatever, then what will it's
relative URL be when it's displayed on both http://example.com/ and
http://example.com/2012/07/postname/? It can't be just
"wp-content/uploads/whatever", because it has to be
"../../../wp-content/uploads/whatever" for the second URL case.

Absolute URLs are the best solution to the problem of disconnecting
the URL from the actual location of the system on the server, because
they're easier to deal with than root-relative URLs are when moving a
site around, and pure-relative URLs just don't work when the URL is
divorced from the underlying filesystem. Unless you like screwing
around with tons of .htaccess rules.

-Otto

From erik.martinessanches at gmail.com  Wed Jul  4 20:18:21 2012
From: erik.martinessanches at gmail.com (Erik Martines Sanches)
Date: Wed, 04 Jul 2012 22:18:21 +0200
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
Message-ID: <4FF4A50D.7000404@gmail.com>

Bill Erickson skrev 2012-07-04 20:32:
> And even if you know your environment well and build your specific tool to
> use relative URLs, WordPress core uses absolute URLs for everything so
> you'd need to update those anyway (ex: any images inserted into posts).
So moving from a subdirectory (www.domain.com/test) to the top level 
(www.domain.com), when you say update images inserted into posts, I take 
it this can be done in the phpMyadmin and not have to reupload, right? 
(Hope so!)
Erik

From bill.erickson at gmail.com  Wed Jul  4 20:51:25 2012
From: bill.erickson at gmail.com (Bill Erickson)
Date: Wed, 4 Jul 2012 15:51:25 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF4A50D.7000404@gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<4FF4A50D.7000404@gmail.com>
Message-ID: <CADvbF5r++R9SjgEQbtPrQaXAqLgjwFUEtViBpXXTaBa937uVOg@mail.gmail.com>

Yes, you can either hop into phpMyAdmin and do a find/replace, or (and this
is my preference) use a script like searchreplacedb2.php which will go
through the database and do it for you. The benefit to the latter approach
is it will work for serialized arrays as well.

If you have a URL in a text widget, that is stored in a serialized array.
Doing a simple find/replace will cause you to lose the widget content
because the length will change (unless both URLs have exactly the same
number of characters). That script unserializes all of them, does the
find/replace, then re-serializes them.

http://interconnectit.com/124/search-and-replace-for-wordpress-databases/


---
Bill Erickson
WordPress Consultant
http://www.billerickson.net

NOTE: To better serve my clients, partners, and most importantly my family,
I've begun checking email only three times per day.

For phone calls, please schedule here: http://tungle.me/billerickson . If
it's an emergency, please call now and leave a voicemail



On Wed, Jul 4, 2012 at 3:18 PM, Erik Martines Sanches <
erik.martinessanches at gmail.com> wrote:

> Bill Erickson skrev 2012-07-04 20:32:
>
>  And even if you know your environment well and build your specific tool to
>> use relative URLs, WordPress core uses absolute URLs for everything so
>> you'd need to update those anyway (ex: any images inserted into posts).
>>
> So moving from a subdirectory (www.domain.com/test) to the top level (
> www.domain.com), when you say update images inserted into posts, I take
> it this can be done in the phpMyadmin and not have to reupload, right?
> (Hope so!)
> Erik
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From ipstenu at ipstenu.org  Wed Jul  4 21:48:02 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Wed, 4 Jul 2012 16:48:02 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF4A50D.7000404@gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<4FF4A50D.7000404@gmail.com>
Message-ID: <5398329C-AA11-472A-8AA7-5C86D0755BDD@ipstenu.org>

Yes, you can edit the folder :)

but think how much safer it is to search for domain.com/test vs /test/.... The more data you include in the search, the smaller the chance of 'Oh god, I broke the link to cia.com/test/foobar!' later ;)

----
Mika A Epstein (aka Ipstenu)
http://ipstenu.org | http://halfelf.org

On 4 Jul 2012, at 3:18:21PM, Erik Martines Sanches wrote:

> Bill Erickson skrev 2012-07-04 20:32:
>> And even if you know your environment well and build your specific tool to
>> use relative URLs, WordPress core uses absolute URLs for everything so
>> you'd need to update those anyway (ex: any images inserted into posts).
> So moving from a subdirectory (www.domain.com/test) to the top level (www.domain.com), when you say update images inserted into posts, I take it this can be done in the phpMyadmin and not have to reupload, right? (Hope so!)
> Erik
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From shastaw at gmail.com  Wed Jul  4 21:54:27 2012
From: shastaw at gmail.com (Shasta Willson)
Date: Wed, 4 Jul 2012 14:54:27 -0700
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
Message-ID: <CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>

On Wed, Jul 4, 2012 at 12:55 PM, Otto <otto at ottodestruct.com> wrote:
>
>> Uh..no..that's what relative URLs are specifically for.
>
> So, a URL of /2012/07/whatever will still work when you move it to
> /blog/2012/07/whatever? (Hint: nope.)

I'm not using the terms properly.  When I said "relative", I really
meant I code something like this:

<a href="<?php bloginfo('url') ?>/whatever">

Which is NOT a relative URL once rendered, but does update if I change
the site settings, as opposed to the plug-ins which require you to
input a URL like this:

http://testsite.com/wp-content/uploads/2012/01/cover.jpg

Now that I understand there are other things that are absolute AND
thanks to Bill I understand why I've had trouble with prior DB search
and replace operations, it makes sense that that's the right way to
handle moves. I rarely work with moving live content, but recently had
a site with posts and thought I'd done something wrong when I had to
fix all the images.

Thanks folks!
Shasta

From bill.erickson at gmail.com  Wed Jul  4 21:57:10 2012
From: bill.erickson at gmail.com (Bill Erickson)
Date: Wed, 4 Jul 2012 16:57:10 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
Message-ID: <CADvbF5pU62k5fx7zt1Xgia384oNtZdGieDYQinVATh8m94imFA@mail.gmail.com>

Ah yes, if you're making links inside your theme/plugin, definitely don't
hardcode the URLs. You can use the code you mentioned, or <?php echo
home_url( '/whatever' );?>


---
Bill Erickson
WordPress Consultant
http://www.billerickson.net

NOTE: To better serve my clients, partners, and most importantly my family,
I've begun checking email only three times per day.

For phone calls, please schedule here: http://tungle.me/billerickson . If
it's an emergency, please call now and leave a voicemail



On Wed, Jul 4, 2012 at 4:54 PM, Shasta Willson <shastaw at gmail.com> wrote:

> On Wed, Jul 4, 2012 at 12:55 PM, Otto <otto at ottodestruct.com> wrote:
> >
> >> Uh..no..that's what relative URLs are specifically for.
> >
> > So, a URL of /2012/07/whatever will still work when you move it to
> > /blog/2012/07/whatever? (Hint: nope.)
>
> I'm not using the terms properly.  When I said "relative", I really
> meant I code something like this:
>
> <a href="<?php bloginfo('url') ?>/whatever">
>
> Which is NOT a relative URL once rendered, but does update if I change
> the site settings, as opposed to the plug-ins which require you to
> input a URL like this:
>
> http://testsite.com/wp-content/uploads/2012/01/cover.jpg
>
> Now that I understand there are other things that are absolute AND
> thanks to Bill I understand why I've had trouble with prior DB search
> and replace operations, it makes sense that that's the right way to
> handle moves. I rarely work with moving live content, but recently had
> a site with posts and thought I'd done something wrong when I had to
> fix all the images.
>
> Thanks folks!
> Shasta
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Wed Jul  4 22:25:28 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 4 Jul 2012 17:25:28 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
Message-ID: <CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>

On Wed, Jul 4, 2012 at 4:54 PM, Shasta Willson <shastaw at gmail.com> wrote:
> I'm not using the terms properly.  When I said "relative", I really
> meant I code something like this:
>
> <a href="<?php bloginfo('url') ?>/whatever">

Just wanted to point out that this is slightly safer:

<a href="<?php home_url('whatever'); ?>">


> Which is NOT a relative URL once rendered, but does update if I change
> the site settings, as opposed to the plug-ins which require you to
> input a URL like this:
>
> http://testsite.com/wp-content/uploads/2012/01/cover.jpg

Not necessarily the best way, but
content_url('uploads/2012/01/cover.jpg'); would give you that. When to
use content_url() depends on the context though.

*Ideally*, something in the /uploads dir happened through the media
uploader, and you'd get the exact URL for the attachment using the
post_id for the attachment and something like wp_get_attachment_url().
Again, this depends entirely on context. More information is needed to
give a proper response.


-Otto

From dwain.maralack at gmail.com  Thu Jul  5 11:05:25 2012
From: dwain.maralack at gmail.com (Dwain Maralack)
Date: Thu, 5 Jul 2012 13:05:25 +0200
Subject: [wp-hackers] Access the wordpress menu from another CMS in a
	subdirectory
Message-ID: <CAPvkqyO+AFfYmS1Ebj5e9zLJ4LnF7vb8XQu00cmpyFjvKrcwig@mail.gmail.com>

I would like to access the wordpress Menu from another Content Management
System.

The code I'm currently using is:
<?php
      // no theme output
define('WP_USE_THEMES', false);

$_SERVER = array(
   "HTTP_HOST" => "http://localhost:8888/akfam/",
    "SERVER_NAME" => "http://localhost:8888/akfam/",
    "REQUEST_URI" => "/",
   "REQUEST_METHOD" => "GET"
);

// initializes  Wordpress
require_once('/Users/miiweb1/Sites/akfam/wp-blog-header.php');

// print menu
wp_nav_menu(array( 'theme_location' => 'primary' ));

?>

From dwain.maralack at gmail.com  Thu Jul  5 12:14:15 2012
From: dwain.maralack at gmail.com (Dwain Maralack)
Date: Thu, 5 Jul 2012 14:14:15 +0200
Subject: [wp-hackers] Access the wordpress menu from another CMS in a
	subdirectory
In-Reply-To: <CAPvkqyO+AFfYmS1Ebj5e9zLJ4LnF7vb8XQu00cmpyFjvKrcwig@mail.gmail.com>
References: <CAPvkqyO+AFfYmS1Ebj5e9zLJ4LnF7vb8XQu00cmpyFjvKrcwig@mail.gmail.com>
Message-ID: <CAPvkqyMUcaur=qubeYUFWSt1aqV+gM=E2sHAOX-3f-ku7ZMr2w@mail.gmail.com>

I would like to access the wordpress Menu from another Content Management
System.

The code I'm currently using is:
<?php
      // no theme output
define('WP_USE_THEMES', false);

$_SERVER = array(
   "HTTP_HOST" => "http://localhost:8888/akfam/",
    "SERVER_NAME" => "http://localhost:8888/akfam/",
    "REQUEST_URI" => "/",
   "REQUEST_METHOD" => "GET"
);

// initializes  Wordpress
require_once('/Users/miiweb1/Sites/akfam/wp-blog-header.php');

// print menu
wp_nav_menu(array( 'theme_location' => 'primary' ));

?>

From mpw at taquiri.de  Thu Jul  5 12:51:40 2012
From: mpw at taquiri.de (=?ISO-8859-15?Q?=22Matthias_P=2E_W=FCrfl=22?=)
Date: Thu, 05 Jul 2012 14:51:40 +0200
Subject: [wp-hackers] styling a plugins widget in a theme
Message-ID: <4FF58DDC.4020709@taquiri.de>

Hi all.

Is there a way to design/modify the output of a plugin displayed in the 
sidebar?

I use a plugin that displays a widget in the sidebar. I didn't like the 
way these contents are displayed, so i modified the plugin. Things i 
don't like with this solution:

1. Every time there's an update for the plugin my changes are overwritten
2. Theme would be the right place because that's where my design is

Is there a way the theme can control the output of the plugin? Do i need 
cooperation from the author of the module for this?

Matthias




From info at a5d.org  Thu Jul  5 12:58:46 2012
From: info at a5d.org (A5D)
Date: Thu, 5 Jul 2012 13:58:46 +0100
Subject: [wp-hackers] styling a plugins widget in a theme
In-Reply-To: <4FF58DDC.4020709@taquiri.de>
References: <4FF58DDC.4020709@taquiri.de>
Message-ID: <423ED5AC-778C-4E96-B270-2E7ADF9E19E7@a5d.org>

Your options:
- Fork the current version and create your own making sure you abide by the licensing.
- Check the plugin to see if it'll be straightforward to use in your functions file instead of as a plugin
- Change the version number to something high - like 666 - this way it'll never get updated/ overwritten
- Speak to the developer and ask them to create a custom version for you (recommended)

Obviously, it's entirely up to you what you do and I take no responsibility whatsoever for the outcome.

Lee


On 5 Jul 2012, at 13:51, Matthias P. W?rfl wrote:

> Hi all.
> 
> Is there a way to design/modify the output of a plugin displayed in the sidebar?
> 
> I use a plugin that displays a widget in the sidebar. I didn't like the way these contents are displayed, so i modified the plugin. Things i don't like with this solution:
> 
> 1. Every time there's an update for the plugin my changes are overwritten
> 2. Theme would be the right place because that's where my design is
> 
> Is there a way the theme can control the output of the plugin? Do i need cooperation from the author of the module for this?
> 
> Matthias
> 
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wordpress at zed1.com  Thu Jul  5 13:06:57 2012
From: wordpress at zed1.com (Mike Little)
Date: Thu, 5 Jul 2012 14:06:57 +0100
Subject: [wp-hackers] styling a plugins widget in a theme
In-Reply-To: <4FF58DDC.4020709@taquiri.de>
References: <4FF58DDC.4020709@taquiri.de>
Message-ID: <CAMb54M335jYAQOwe=jLd_BCEFidLCSu02SaQgEdjHCTACa7aLQ@mail.gmail.com>

On 5 July 2012 13:51, "Matthias P. W?rfl" <mpw at taquiri.de> wrote:

> Hi all.
>
> Is there a way to design/modify the output of a plugin displayed in the
> sidebar?
>
> I use a plugin that displays a widget in the sidebar. I didn't like the
> way these contents are displayed, so i modified the plugin. Things i don't
> like with this solution:
>
>
My first thought would be to just change the CSS to style it how you want
in your themes' style.css. Widgets have unique ID and easily identifiable
classes, so you should be able to address a lot of look and layout issues
with no need to modify code.

MIke
-- 
Mike Little
http://zed1.com/

From lionel.pointet at globalis-ms.com  Thu Jul  5 13:08:02 2012
From: lionel.pointet at globalis-ms.com (Lionel Pointet)
Date: Thu, 05 Jul 2012 15:08:02 +0200
Subject: [wp-hackers] styling a plugins widget in a theme
In-Reply-To: <CAMb54M335jYAQOwe=jLd_BCEFidLCSu02SaQgEdjHCTACa7aLQ@mail.gmail.com>
References: <4FF58DDC.4020709@taquiri.de>
	<CAMb54M335jYAQOwe=jLd_BCEFidLCSu02SaQgEdjHCTACa7aLQ@mail.gmail.com>
Message-ID: <4FF591B2.6080008@globalis-ms.com>

I agree with Mike, and I would add something: the plugin migth provide 
some hooks if you want to modify the HTML code itself, so take a look at 
its code!

Le 05/07/2012 15:06, Mike Little a ?crit :
> On 5 July 2012 13:51, "Matthias P. W?rfl" <mpw at taquiri.de> wrote:
>
>> Hi all.
>>
>> Is there a way to design/modify the output of a plugin displayed in the
>> sidebar?
>>
>> I use a plugin that displays a widget in the sidebar. I didn't like the
>> way these contents are displayed, so i modified the plugin. Things i don't
>> like with this solution:
>>
>>
> My first thought would be to just change the CSS to style it how you want
> in your themes' style.css. Widgets have unique ID and easily identifiable
> classes, so you should be able to address a lot of look and layout issues
> with no need to modify code.
>
> MIke



From dwain.maralack at gmail.com  Thu Jul  5 13:18:10 2012
From: dwain.maralack at gmail.com (Dwain Maralack)
Date: Thu, 5 Jul 2012 15:18:10 +0200
Subject: [wp-hackers] styling a plugins widget in a theme
In-Reply-To: <4FF591B2.6080008@globalis-ms.com>
References: <4FF58DDC.4020709@taquiri.de>
	<CAMb54M335jYAQOwe=jLd_BCEFidLCSu02SaQgEdjHCTACa7aLQ@mail.gmail.com>
	<4FF591B2.6080008@globalis-ms.com>
Message-ID: <-6890645612607763219@unknownmsgid>

Hey Guys, I know this is not the place, but I have sent a question to
wp-hackers but I'm not getting reply, how does it work?

Dwain

On 05 Jul 2012, at 3:09 PM, Lionel Pointet
<lionel.pointet at globalis-ms.com> wrote:

> I agree with Mike, and I would add something: the plugin migth provide some hooks if you want to modify the HTML code itself, so take a look at its code!
>
> Le 05/07/2012 15:06, Mike Little a ?crit :
>> On 5 July 2012 13:51, "Matthias P. W?rfl" <mpw at taquiri.de> wrote:
>>
>>> Hi all.
>>>
>>> Is there a way to design/modify the output of a plugin displayed in the
>>> sidebar?
>>>
>>> I use a plugin that displays a widget in the sidebar. I didn't like the
>>> way these contents are displayed, so i modified the plugin. Things i don't
>>> like with this solution:
>>>
>>>
>> My first thought would be to just change the CSS to style it how you want
>> in your themes' style.css. Widgets have unique ID and easily identifiable
>> classes, so you should be able to address a lot of look and layout issues
>> with no need to modify code.
>>
>> MIke
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mpw at taquiri.de  Thu Jul  5 14:04:53 2012
From: mpw at taquiri.de (=?UTF-8?B?Ik1hdHRoaWFzIFAuIFfDvHJmbCI=?=)
Date: Thu, 05 Jul 2012 16:04:53 +0200
Subject: [wp-hackers] styling a plugins widget in a theme
In-Reply-To: <CAMb54M335jYAQOwe=jLd_BCEFidLCSu02SaQgEdjHCTACa7aLQ@mail.gmail.com>
References: <4FF58DDC.4020709@taquiri.de>
	<CAMb54M335jYAQOwe=jLd_BCEFidLCSu02SaQgEdjHCTACa7aLQ@mail.gmail.com>
Message-ID: <4FF59F05.90101@taquiri.de>

Am 05.07.2012 15:06, schrieb Mike Little:
> My first thought would be to just change the CSS to style it how you want
> in your themes' style.css. Widgets have unique ID and easily identifiable
> classes, so you should be able to address a lot of look and layout issues
> with no need to modify code.

Thanks for your reply.

I looked at the code and it doesn't offer any hooks. Styling with CSS is 
not an option because i want to change date formats, change the order, etc.

If you were the author of the plugin, what would be the best way to 
offer custom templates? I thought of something like this:

> function widget(){
>
>     // some stuff at beginning snipped
>
>     // templates to search for
>     $search_for_templates = array(
>         get_stylesheet_directory() . "/" . $tpl . "-" . $slug . ".php",
>         get_stylesheet_directory() . "/" . $tpl . "-" . $id   . ".php",
>         get_template_directory()   . "/" . $tpl . "-" . $slug . ".php",
>         get_template_directory()   . "/" . $tpl . "-" . $id   . ".php",
>         get_stylesheet_directory() . "/" . $tpl . ".php",
>         get_template_directory()   . "/" . $tpl . ".php",
>     );
>
>     // see if we have a template
>     $i_already_did_output = false;
>     foreach($search_for_templates as $template){
>         if(file_exists($template) AND !$i_already_did_output){
>         include($template);
>         $i_already_did_output = true;
>         }
>     }
>     if(!$i_already_did_output){
>
>     // normal output goes here (in case there's no template)
>
>     }
>
>     // some stuff at the end snipped
> }

Is this the best way or is there a better way to achieve this?

Matthias


From lionel.pointet at globalis-ms.com  Thu Jul  5 14:11:04 2012
From: lionel.pointet at globalis-ms.com (Lionel Pointet)
Date: Thu, 05 Jul 2012 16:11:04 +0200
Subject: [wp-hackers] styling a plugins widget in a theme
In-Reply-To: <4FF59F05.90101@taquiri.de>
References: <4FF58DDC.4020709@taquiri.de>
	<CAMb54M335jYAQOwe=jLd_BCEFidLCSu02SaQgEdjHCTACa7aLQ@mail.gmail.com>
	<4FF59F05.90101@taquiri.de>
Message-ID: <4FF5A078.6060106@globalis-ms.com>

That's an idea, you could also provide a filter allowing themes but also 
plugins to set a template file path like this:

if($template = apply_filters('my_widget_template_filter', 
'/my/default/template') && file_exists($template)) {
     include($template);
}

That way, you don't force the template path and name and let plugin 
authors provide their templates too.

You could also put your normal output into an "else" section and let the 
"/my/default/template" string empty, it's up to you...

Le 05/07/2012 16:04, "Matthias P. W?rfl" a ?crit :
> Am 05.07.2012 15:06, schrieb Mike Little:
>> My first thought would be to just change the CSS to style it how you 
>> want
>> in your themes' style.css. Widgets have unique ID and easily 
>> identifiable
>> classes, so you should be able to address a lot of look and layout 
>> issues
>> with no need to modify code.
>
> Thanks for your reply.
>
> I looked at the code and it doesn't offer any hooks. Styling with CSS 
> is not an option because i want to change date formats, change the 
> order, etc.
>
> If you were the author of the plugin, what would be the best way to 
> offer custom templates? I thought of something like this:
>
>> function widget(){
>>
>>     // some stuff at beginning snipped
>>
>>     // templates to search for
>>     $search_for_templates = array(
>>         get_stylesheet_directory() . "/" . $tpl . "-" . $slug . ".php",
>>         get_stylesheet_directory() . "/" . $tpl . "-" . $id   . ".php",
>>         get_template_directory()   . "/" . $tpl . "-" . $slug . ".php",
>>         get_template_directory()   . "/" . $tpl . "-" . $id   . ".php",
>>         get_stylesheet_directory() . "/" . $tpl . ".php",
>>         get_template_directory()   . "/" . $tpl . ".php",
>>     );
>>
>>     // see if we have a template
>>     $i_already_did_output = false;
>>     foreach($search_for_templates as $template){
>>         if(file_exists($template) AND !$i_already_did_output){
>>         include($template);
>>         $i_already_did_output = true;
>>         }
>>     }
>>     if(!$i_already_did_output){
>>
>>     // normal output goes here (in case there's no template)
>>
>>     }
>>
>>     // some stuff at the end snipped
>> }
>
> Is this the best way or is there a better way to achieve this?
>
> Matthias
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



From lists at rotorised.com  Fri Jul  6 08:23:27 2012
From: lists at rotorised.com (Ryan McCue)
Date: Fri, 06 Jul 2012 18:23:27 +1000
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
Message-ID: <4FF6A07F.5070906@rotorised.com>

Otto wrote:
> Just wanted to point out that this is slightly safer:
>
> <a href="<?php home_url('whatever'); ?>">

You know, I'm sure I've asked this before, but why doesn't WordPress 
just insert URLs into posts as <a href="[home]/2012/01/01/abc/"> ?

This would save everyone a lot of pain, IMHO.

(I'm also willing to put my money where my mouth is and write a patch, 
but I'm sure we've discussed this before, so I'll hold off.)
-- 
Ryan McCue
<http://ryanmccue.info/>



From johnbillion+wp at gmail.com  Fri Jul  6 08:46:38 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri, 6 Jul 2012 09:46:38 +0100
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF6A07F.5070906@rotorised.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
Message-ID: <CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>

On 6 July 2012 09:23, Ryan McCue <lists at rotorised.com> wrote:
> You know, I'm sure I've asked this before, but why doesn't WordPress just
> insert URLs into posts as <a href="[home]/2012/01/01/abc/"> ?
>
> This would save everyone a lot of pain, IMHO.
>
> (I'm also willing to put my money where my mouth is and write a patch, but
> I'm sure we've discussed this before, so I'll hold off.)

This isn't a bad approach and I've considered it myself, but it
doesn't solve cases where one of your authors comes along and
copy-pastes a page URL into the post content.

From mpw at taquiri.de  Fri Jul  6 09:13:13 2012
From: mpw at taquiri.de (=?ISO-8859-1?Q?=22Matthias_P=2E_W=FCrfl=22?=)
Date: Fri, 06 Jul 2012 11:13:13 +0200
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
Message-ID: <4FF6AC29.3070506@taquiri.de>

Am 06.07.2012 10:46, schrieb John Blackbourn:
> This isn't a bad approach and I've considered it myself, but it 
> doesn't solve cases where one of your authors comes along and 
> copy-pastes a page URL into the post content.

I solved this with a small plugin that uses output buffering and 
search/replace. It is aware of alle the servers (dev/testing/live) and 
fixes all URLs. Together with multiple config-files included based on 
HTTP_HOST i can move around my Wordpress-blogs without touching anything.

Matthias

From ipstenu at ipstenu.org  Fri Jul  6 12:35:08 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Fri, 6 Jul 2012 07:35:08 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
Message-ID: <382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>

John's reason is exactly why I don't do it, too.

It's easier to search for 'one' thing, and the more specific that is (domain.com/foobar/ vs /foobar/) the easier your grep will be. Also you have to be careful with shortcodes, someone else could hijack it with a plugin. (Also I have this niggling memory that a hardcoded URL is faster than a shortcode, which would make sense - caching would grab the full domain).

----
Mika A Epstein (aka Ipstenu)
http://ipstenu.org | http://halfelf.org

On 6 Jul 2012, at 3:46:38AM, John Blackbourn wrote:

> On 6 July 2012 09:23, Ryan McCue <lists at rotorised.com> wrote:
>> You know, I'm sure I've asked this before, but why doesn't WordPress just
>> insert URLs into posts as <a href="[home]/2012/01/01/abc/"> ?
>> 
>> This would save everyone a lot of pain, IMHO.
>> 
>> (I'm also willing to put my money where my mouth is and write a patch, but
>> I'm sure we've discussed this before, so I'll hold off.)
> 
> This isn't a bad approach and I've considered it myself, but it
> doesn't solve cases where one of your authors comes along and
> copy-pastes a page URL into the post content.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From lists at rotorised.com  Fri Jul  6 13:46:38 2012
From: lists at rotorised.com (Ryan McCue)
Date: Fri, 06 Jul 2012 23:46:38 +1000
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
Message-ID: <4FF6EC3E.2040602@rotorised.com>

Mika A Epstein wrote:
> John's reason is exactly why I don't do it, too.

What about filtering on post save to replace the URLs with the 
shortcode? (Possibly using post_content_filtered)

> Also you have to be careful with shortcodes, someone else could hijack it with a plugin.

True, but that's no different to filtering the_content.

> (Also I have this niggling memory that a hardcoded URL is faster than a shortcode, which would make sense - caching would grab the full domain).

I can certainly see that, but I'd guess that's a micro-optimisation at 
best. IIRC, the shortcode filter runs pretty much all the time anyway.

-- 
Ryan McCue
<http://ryanmccue.info/>



From fabien.quatravaux at 1nterval.com  Fri Jul  6 13:50:17 2012
From: fabien.quatravaux at 1nterval.com (Fabien Quatravaux)
Date: Fri, 06 Jul 2012 15:50:17 +0200
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <mailman.9.1341576002.25240.wp-hackers@lists.automattic.com>
References: <mailman.9.1341576002.25240.wp-hackers@lists.automattic.com>
Message-ID: <4FF6ED19.6090902@1nterval.com>

Dear John, I would be _very_ interested if you could share this little 
plugin. It could save me some headache ...

Le 06/07/2012 14:00, wp-hackers-request at lists.automattic.com a ?crit :
> I solved this with a small plugin that uses output buffering and
> search/replace. It is aware of alle the servers (dev/testing/live) and
> fixes all URLs. Together with multiple config-files included based on
> HTTP_HOST i can move around my Wordpress-blogs without touching anything.
>
> Matthias
>
>
> ------------------------------
>
>

-- 

*Fabien Quatravaux*
D?veloppeur
LD : 06 20 20 54 97

logo <http://www.1nterval.com/> *Interval*
/M?tiers d'art digital/
www.1nterval.com <http://www.1nterval.com/>

Afin de contribuer au respect de l'environnement,
merci de n'imprimer ce courriel que si n?cessaire.




From ipstenu at ipstenu.org  Fri Jul  6 13:51:20 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Fri, 6 Jul 2012 08:51:20 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF6EC3E.2040602@rotorised.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
Message-ID: <3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>

Ryan - All that felt like just an epic ton of work to solve something that I didn't feel was a problem ;)

I don't like reinventing the wheel, or complicating my code to make something 'simpler' for a user who has to remember to do [home]\whatever\url - Telling them 'Put the whole URL in, http://domain.com/foobar for example' is easier, it's consistent, and it always works on any site they ever go to. Less to untrain the novice (dad) later.

The only person a shortcode or filter might help is the dev, and the dev already knows what to search/replace on anyway.

----
Mika A Epstein (aka Ipstenu)
http://ipstenu.org | http://halfelf.org

On 6 Jul 2012, at 8:46:38AM, Ryan McCue wrote:

> Mika A Epstein wrote:
>> John's reason is exactly why I don't do it, too.
> 
> What about filtering on post save to replace the URLs with the shortcode? (Possibly using post_content_filtered)
> 
>> Also you have to be careful with shortcodes, someone else could hijack it with a plugin.
> 
> True, but that's no different to filtering the_content.
> 
>> (Also I have this niggling memory that a hardcoded URL is faster than a shortcode, which would make sense - caching would grab the full domain).
> 
> I can certainly see that, but I'd guess that's a micro-optimisation at best. IIRC, the shortcode filter runs pretty much all the time anyway.
> 
> -- 
> Ryan McCue
> <http://ryanmccue.info/>
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From lists at rotorised.com  Fri Jul  6 13:57:01 2012
From: lists at rotorised.com (Ryan McCue)
Date: Fri, 06 Jul 2012 23:57:01 +1000
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
Message-ID: <4FF6EEAD.3050501@rotorised.com>

Mika A Epstein wrote:
> Ryan - All that felt like just an epic ton of work to solve something that I didn't feel was a problem ;)

It's hardly ever a problem for me, but it's a huge pain when it is. I 
usually use relative URLs and never change subdirectories, but you could 
theoretically do that with this too.

> I don't like reinventing the wheel, or complicating my code to make something 'simpler' for a user who has to remember to do [home]\whatever\url

(Psst, that's not a URL ;) )

> Telling them 'Put the whole URL in, http://domain.com/foobar for example' is easier, it's consistent, and it always works on any site they ever go to. Less to untrain the novice (dad) later.

Yep, that's why you could do it transparently. I can certainly see it 
confusing people who are used to having to replace it later, but I think 
from a usability perspective it's much better.

That is, of course, one developer's humble opinion. :) (And as we all 
know, I'm horrible at finding time to make patches, so it might not even 
make proof-of-concept stage.)

-- 
Ryan McCue
<http://ryanmccue.info/>



From ipstenu at ipstenu.org  Fri Jul  6 14:06:30 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Fri, 6 Jul 2012 09:06:30 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF6EEAD.3050501@rotorised.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6EEAD.3050501@rotorised.com>
Message-ID: <8538E103-4BD6-4559-866F-98822BAD4197@ipstenu.org>

>> I don't like reinventing the wheel, or complicating my code to make something 'simpler' for a user who has to remember to do [home]\whatever\url
> 
> (Psst, that's not a URL ;) )

I know that. You know that. My father has absolutely no idea. This is a man who writes amazing software, does math in his head that I can hardly grasp, and knows how farm anything.

He knows this: I go to a website, I copy the address. That's what I give you.

Relative URLs gives him options he doesn't need. I certainly could use 'em, and I'm the skill level who can and should, in certain situations. But for the beginners, man, it's just asking for trouble. :)

It's not a huge page when it's a problem. Moving everything from woody.com/agora to woody.com was a 2 minute fix, with a break to get more coffee in the middle. Heck, we even have plugins to help with that too :)

What would be 'easier' for that in-between dev, who is terrified of SQL, is a 'move WP' tool that does the mv and the sql s/r for you.

From bpetty at bluehost.com  Fri Jul  6 14:29:52 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Fri, 06 Jul 2012 08:29:52 -0600
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
Message-ID: <4FF6F660.8070302@bluehost.com>

On 07/06/2012 07:51 AM, Mika A Epstein wrote:
> Ryan - All that felt like just an epic ton of work to solve something that I didn't feel was a problem ;)
> 
> I don't like reinventing the wheel, or complicating my code to make something 'simpler' for a user who has to remember to do [home]\whatever\url - Telling them 'Put the whole URL in, http://domain.com/foobar for example' is easier, it's consistent, and it always works on any site they ever go to. Less to untrain the novice (dad) later.
> 
> The only person a shortcode or filter might help is the dev, and the dev already knows what to search/replace on anyway.

I wish it wasn't a "problem", but I have to call it one when I'm
constantly "fixing" it with every blog that needs moved, or started out
on a development server without hijacking the official, final hostname.
This is something that has always bothered me, and obviously bothers
several more people here with the same problem.

A search/replace performed on the entire database is a dangerous
operation for anyone that doesn't know the blog inside and out enough to
know what it could affect and what shouldn't be changed. It definitely
isn't something I would be advising the same WordPress users to perform
that can't figure out how a simple shortcode works.

Anyway, the idea here is that most of the time, the editor would be
pasting these shortcodes in automatically when the author picks out
something from the media library. Between that and filtering content on
save to replace any manually copied URLs, this problem could be solved
altogether without any authors needing to know anything about the syntax
of the shortcode, or how it works.

As an added bonus, this would make it easy to change the permalinks
structure without breaking links to other posts within another post's
content as well.

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com

From mpw at taquiri.de  Fri Jul  6 14:37:52 2012
From: mpw at taquiri.de (=?ISO-8859-1?Q?=22Matthias_P=2E_W=FCrfl=22?=)
Date: Fri, 06 Jul 2012 16:37:52 +0200
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF6ED19.6090902@1nterval.com>
References: <mailman.9.1341576002.25240.wp-hackers@lists.automattic.com>
	<4FF6ED19.6090902@1nterval.com>
Message-ID: <4FF6F840.2020907@taquiri.de>

Am 06.07.2012 15:50, schrieb Fabien Quatravaux:

> Le 06/07/2012 14:00, wp-hackers-request at lists.automattic.com a ?crit :
>> I solved this with a small plugin that uses output buffering and
>> search/replace.[...]
>> Matthias
> Dear John, I would be _very_ interested if you could share this little 
> plugin. It could save me some headache 

C'est moi, "Matthias" :-)

It's just:

add_action('wp', 'ws_set_up_buffer', 10, 0);

function ws_set_up_buffer(){
     if ( is_feed() || is_admin() ){
         return;
     }
     ob_start('tq_repair_output');
}

function tq_repair_output($str) {
     $str = 
str_replace("http://wrong.domain.example","http://right.domain.example",$str);
     return $str;
}

It's a bit more, but the rest is specialized on our situation (multiple 
configs, clean svn co & updates, etc.)

Gr??e, Matthias



From batmoo at gmail.com  Fri Jul  6 14:45:05 2012
From: batmoo at gmail.com (Mohammad Jangda)
Date: Fri, 06 Jul 2012 10:45:05 -0400
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF6ED19.6090902@1nterval.com>
References: <mailman.9.1341576002.25240.wp-hackers@lists.automattic.com>
	<4FF6ED19.6090902@1nterval.com>
Message-ID: <4FF6F9F1.9070702@gmail.com>


> I solved this with a small plugin that uses output buffering and
> search/replace. It is aware of alle the servers (dev/testing/live) and
> fixes all URLs. Together with multiple config-files included based on
> HTTP_HOST i can move around my Wordpress-blogs without touching anything.

Two other resources on this approach:

http://scotty-t.com/2012/01/18/wordpress-in-dev-qa-and-prod/
https://gist.github.com/1636304

From dmitry at getmoxied.net  Fri Jul  6 15:08:54 2012
From: dmitry at getmoxied.net (Dmitry Tokmakov)
Date: Fri, 6 Jul 2012 11:08:54 -0400
Subject: [wp-hackers] Empty link names
Message-ID: <726EF3DB-49D2-4418-B30C-AC7ECD2269A1@getmoxied.net>

Hi all, 
I'm having the issue with wp_nav_menu function,

I have set the theme location in functions.php, created the menu, and output it in the header,
all is working fine except that all a element's name are empty:

this is the output html:

<ul id="nav-menu">
<li><a href="link..." ></a>
</li>
...
</ul>

this is very strange issue, never had it before. 
Does anybody familiar with that issue?

Thank you in advance,

Best,
Dmitry Tokmakov
Digital Spin
digitalsp.in

From shastaw at gmail.com  Fri Jul  6 16:09:18 2012
From: shastaw at gmail.com (Shasta Willson)
Date: Fri, 6 Jul 2012 09:09:18 -0700
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF6F660.8070302@bluehost.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6F660.8070302@bluehost.com>
Message-ID: <CAGguigcrt=gd9QpWmT-dwEUROY7-zjut+S9mtBF7GbtmAtttKw@mail.gmail.com>

On Fri, Jul 6, 2012 at 7:29 AM, Bryan Petty <bpetty at bluehost.com> wrote:
>
> I wish it wasn't a "problem", but I have to call it one when I'm
> constantly "fixing" it with every blog that needs moved, or started out
> on a development server without hijacking the official, final hostname.

I have to agree with Bryan. I consider the move to deployment (and
maintenance of a matching testing server) one of the weakest areas of
WordPress. I've participated in threads on the forum discussing best
practices and seen mods say "there just isn't a best practice."  (e.g.
http://wordpress.org/support/topic/proper-procedure-for-moving-dev-site-to-live-site?replies=6)

And lest you think this is just whining from folks who should know
better, awareness of the problem is a lot less universal than you'd
hope.  I recently helped a lawyer friend who had spent a lot of money
for a new site.  A month after deployment her front page slider images
disappeared and the designer wanted $200/hr to investigate. Yup...they
forgot to change the URLS to their public-facing deployment server, so
they worked until they deactivated her testing site.  While that dev
needs a good shaking for not even checking their work when it broke,
the fact remains that it's an avoidable problem and it makes WordPress
look not quite prime time.

I should probably offer the disclaimer that I'm old-school.  I ran a
web shop in 1996, then went on to be a Java Dev (after getting a
degree) before returning to web a few years ago.  I'm still learning
about WordPress, but the very notion of absolute URLs strikes me as
"yer doin' it wrong". Obviously I'm still learning about WordPress and
there's a lot about the web that's changed, but so far I'm not seeing
any compelling positive arguments -- a reason it's better this way.

Placing URLs into a site that we KNOW will break with deployment seems
like a remnant of a time when the software was for blogging.  Build
your theme, deploy, start creating content.  To have a structure that
requires a database search and replace (and note Bill's earlier
comments: even that doesn't work in all cases and you really need a
tool) is a hack.  It seems to me that Wordpress should store
attachments with a format that will update automatically, however
given the huge number of plug-ins that already hard-code the URL maybe
it would be better to address it with a built in deployment tool?
Perhaps when you change the Wordpress Address or Site Address it
should update automatically? (Network is a whole additional headache.)
 Or simply offer a built-in tool for "update URL in database" so it's
done right?

- Shasta

From lsiq at papotam.com  Fri Jul  6 16:33:57 2012
From: lsiq at papotam.com (Luis Siquot)
Date: Fri, 6 Jul 2012 13:33:57 -0300
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAGguigcrt=gd9QpWmT-dwEUROY7-zjut+S9mtBF7GbtmAtttKw@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6F660.8070302@bluehost.com>
	<CAGguigcrt=gd9QpWmT-dwEUROY7-zjut+S9mtBF7GbtmAtttKw@mail.gmail.com>
Message-ID: <CA+fsZ0LQ07+KBT9o-LL3BLf4uThONArUv718WS-A1LW=-xG-rA@mail.gmail.com>

+1 Shasta Willson, I am in your shoes



2012/7/6 Shasta Willson <shastaw at gmail.com>:
> On Fri, Jul 6, 2012 at 7:29 AM, Bryan Petty <bpetty at bluehost.com> wrote:
>>
>> I wish it wasn't a "problem", but I have to call it one when I'm
>> constantly "fixing" it with every blog that needs moved, or started out
>> on a development server without hijacking the official, final hostname.
>
> I have to agree with Bryan. I consider the move to deployment (and
> maintenance of a matching testing server) one of the weakest areas of
> WordPress. I've participated in threads on the forum discussing best
> practices and seen mods say "there just isn't a best practice."  (e.g.
> http://wordpress.org/support/topic/proper-procedure-for-moving-dev-site-to-live-site?replies=6)
>
> And lest you think this is just whining from folks who should know
> better, awareness of the problem is a lot less universal than you'd
> hope.  I recently helped a lawyer friend who had spent a lot of money
> for a new site.  A month after deployment her front page slider images
> disappeared and the designer wanted $200/hr to investigate. Yup...they
> forgot to change the URLS to their public-facing deployment server, so
> they worked until they deactivated her testing site.  While that dev
> needs a good shaking for not even checking their work when it broke,
> the fact remains that it's an avoidable problem and it makes WordPress
> look not quite prime time.
>
> I should probably offer the disclaimer that I'm old-school.  I ran a
> web shop in 1996, then went on to be a Java Dev (after getting a
> degree) before returning to web a few years ago.  I'm still learning
> about WordPress, but the very notion of absolute URLs strikes me as
> "yer doin' it wrong". Obviously I'm still learning about WordPress and
> there's a lot about the web that's changed, but so far I'm not seeing
> any compelling positive arguments -- a reason it's better this way.
>
> Placing URLs into a site that we KNOW will break with deployment seems
> like a remnant of a time when the software was for blogging.  Build
> your theme, deploy, start creating content.  To have a structure that
> requires a database search and replace (and note Bill's earlier
> comments: even that doesn't work in all cases and you really need a
> tool) is a hack.  It seems to me that Wordpress should store
> attachments with a format that will update automatically, however
> given the huge number of plug-ins that already hard-code the URL maybe
> it would be better to address it with a built in deployment tool?
> Perhaps when you change the Wordpress Address or Site Address it
> should update automatically? (Network is a whole additional headache.)
>  Or simply offer a built-in tool for "update URL in database" so it's
> done right?
>
> - Shasta
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From yani.iliev at cspath.com  Fri Jul  6 20:01:24 2012
From: yani.iliev at cspath.com (Yanislav Iliev)
Date: Fri, 6 Jul 2012 23:01:24 +0300
Subject: [wp-hackers] Generate a POT file script
Message-ID: <8627EC0E-6101-4836-A937-AD1BE378FBB0@cspath.com>

Hi everyone,

Is the source code of the script that performs Generate a POT file for plugin admins available somewhere?

Thank you!
-Yani

From otto at ottodestruct.com  Fri Jul  6 20:08:02 2012
From: otto at ottodestruct.com (Otto)
Date: Fri, 6 Jul 2012 15:08:02 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAGguigcrt=gd9QpWmT-dwEUROY7-zjut+S9mtBF7GbtmAtttKw@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6F660.8070302@bluehost.com>
	<CAGguigcrt=gd9QpWmT-dwEUROY7-zjut+S9mtBF7GbtmAtttKw@mail.gmail.com>
Message-ID: <CAD-FghwRUE2RkpVydSvnjcN8zNYDxx5thF98ohJbh-0JUbKg8g@mail.gmail.com>

On Fri, Jul 6, 2012 at 11:09 AM, Shasta Willson <shastaw at gmail.com> wrote:
> I have to agree with Bryan. I consider the move to deployment (and
> maintenance of a matching testing server) one of the weakest areas of

Why are you "deploying" your content in the first place?

The notion of development->testing->production is fundamentally a
software or manufacturing notion. It doesn't make a whole heck of a
lot of sense to be forcing your writers/authors/content-creators to
use that same approach.

It seems to me that you need a separation of practices here. Your
themes/plugins/code, yes, using a deployment system like this makes
perfect sense. These can easily be developed without being tied to
URLs in any major way. Your content, however, isn't something you
should be trying to push through this sort of system. A "testing"
server should not have production content on it, ever. It's for
testing. It should have test content, content designed to test the
theme/plugin/code in question. Your authors should be writing new
content, real content, on the main site, using the main site.

(In fact, at previous jobs I've had, using real production data
anywhere but the production server was a fire-able offense, since
doing so actually broke a few laws.. Financial data in that case, but
still...)

-Otto

From otto at ottodestruct.com  Fri Jul  6 20:31:27 2012
From: otto at ottodestruct.com (Otto)
Date: Fri, 6 Jul 2012 15:31:27 -0500
Subject: [wp-hackers] Generate a POT file script
In-Reply-To: <8627EC0E-6101-4836-A937-AD1BE378FBB0@cspath.com>
References: <8627EC0E-6101-4836-A937-AD1BE378FBB0@cspath.com>
Message-ID: <CAD-FghycfnahZfEM65eNF23WQDxHK7CLaCh0ZSuwx1g4tKRpLg@mail.gmail.com>

On Fri, Jul 6, 2012 at 3:01 PM, Yanislav Iliev <yani.iliev at cspath.com> wrote:
> Is the source code of the script that performs Generate a POT file for plugin admins available somewhere?

I believe the code we're actually using is in:
http://svn.automattic.com/wordpress-i18n/tools/trunk/

Although there probably are other tools that can do the job as well.

-Otto

From bpetty at bluehost.com  Fri Jul  6 20:51:26 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Fri, 06 Jul 2012 14:51:26 -0600
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAD-FghwRUE2RkpVydSvnjcN8zNYDxx5thF98ohJbh-0JUbKg8g@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6F660.8070302@bluehost.com>
	<CAGguigcrt=gd9QpWmT-dwEUROY7-zjut+S9mtBF7GbtmAtttKw@mail.gmail.com>
	<CAD-FghwRUE2RkpVydSvnjcN8zNYDxx5thF98ohJbh-0JUbKg8g@mail.gmail.com>
Message-ID: <4FF74FCE.5010406@bluehost.com>

On 07/06/2012 02:08 PM, Otto wrote:
> On Fri, Jul 6, 2012 at 11:09 AM, Shasta Willson <shastaw at gmail.com> wrote:
>> I have to agree with Bryan. I consider the move to deployment (and
>> maintenance of a matching testing server) one of the weakest areas of
> 
> Why are you "deploying" your content in the first place?
> 
> The notion of development->testing->production is fundamentally a
> software or manufacturing notion. It doesn't make a whole heck of a
> lot of sense to be forcing your writers/authors/content-creators to
> use that same approach.

It does if they are developing themes around your content, especially
when that content revolves around custom post types, and tons of
metadata. Remember, content precedes design [1,2,3].

[1] http://www.zeldman.com/2008/05/06/content-precedes-design/
[2]
http://webstandardssherpa.com/reviews/designing-for-content-creating-a-message-hierarchy/
[3] http://www.abookapart.com/products/the-elements-of-content-strategy

> (In fact, at previous jobs I've had, using real production data
> anywhere but the production server was a fire-able offense, since
> doing so actually broke a few laws.. Financial data in that case, but
> still...)

If you're storing financial or medical records inside of notoriously
insecure software primarily designed for blogging and content
management, you have way more problems to worry about than running live
data on internal development servers. Regardless, who said any of us
were? What we're talking about here is *having the option* of running a
development server with a snapshot of the live site for real-world
testing/design/development for those of us smart enough to not be
storing sensitive information in our WordPress sites.

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com

From otto at ottodestruct.com  Fri Jul  6 20:57:46 2012
From: otto at ottodestruct.com (Otto)
Date: Fri, 6 Jul 2012 15:57:46 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF74FCE.5010406@bluehost.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6F660.8070302@bluehost.com>
	<CAGguigcrt=gd9QpWmT-dwEUROY7-zjut+S9mtBF7GbtmAtttKw@mail.gmail.com>
	<CAD-FghwRUE2RkpVydSvnjcN8zNYDxx5thF98ohJbh-0JUbKg8g@mail.gmail.com>
	<4FF74FCE.5010406@bluehost.com>
Message-ID: <CAD-Fghwz51TkFUVqdeERUv1U_1PirstFmxKvY2ei5rJjD6KPyg@mail.gmail.com>

On Fri, Jul 6, 2012 at 3:51 PM, Bryan Petty <bpetty at bluehost.com> wrote:
> It does if they are developing themes around your content, especially
> when that content revolves around custom post types, and tons of
> metadata. Remember, content precedes design [1,2,3].

If you're developing themes around the content, then what happens when
the content changes? Recreate the theme?

The theme isn't part of the content. It's the shell in which the
content is displayed. Now, it may *depend* on the content looking a
certain way, but it certainly won't contain fixed URLs and such. Or
rather, it doesn't have to.


> What we're talking about here is *having the option* of running a
> development server with a snapshot of the live site for real-world
> testing/design/development for those of us smart enough to not be
> storing sensitive information in our WordPress sites.

You have that option now. It's easily done. URLs don't have to be tied
to one server or one IP address. There's loads of ways to do DNS
trickery to make a local server think it's example.com or whatever you
want it to be.

Alternatively, you can write a simple 4-5 line script that will
convert all mentions of example.com to test-example.com on the fly,
shove that in as a plugin, and Bob's your uncle. Output buffering is
handy for development.

-Otto

From bpetty at bluehost.com  Fri Jul  6 21:08:24 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Fri, 06 Jul 2012 15:08:24 -0600
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAD-FghwRUE2RkpVydSvnjcN8zNYDxx5thF98ohJbh-0JUbKg8g@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6F660.8070302@bluehost.com>
	<CAGguigcrt=gd9QpWmT-dwEUROY7-zjut+S9mtBF7GbtmAtttKw@mail.gmail.com>
	<CAD-FghwRUE2RkpVydSvnjcN8zNYDxx5thF98ohJbh-0JUbKg8g@mail.gmail.com>
Message-ID: <4FF753C8.8000806@bluehost.com>

On 07/06/2012 02:08 PM, Otto wrote:
> On Fri, Jul 6, 2012 at 11:09 AM, Shasta Willson <shastaw at gmail.com> wrote:
>> I have to agree with Bryan. I consider the move to deployment (and
>> maintenance of a matching testing server) one of the weakest areas of
> 
> Why are you "deploying" your content in the first place?
> 
> The notion of development->testing->production is fundamentally a
> software or manufacturing notion. It doesn't make a whole heck of a
> lot of sense to be forcing your writers/authors/content-creators to
> use that same approach.

Two more points I forgot to add...

First, at least one level of testing fundamentally includes testing
against live data, not against the live database itself, but at least
against a snapshot. I don't force authors to publish their posts on some
development server, I'm talking about a snapshot, they still write their
posts on the live server. But I still can't do that without this change.

Second, even if everything you said was true of everyone using WordPress
(that they shouldn't be running live content on *any* server besides the
live one, period... even though that's not true), we still need this
change to simplify site domain/sub-folder migrations.

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com

From mpw at taquiri.de  Fri Jul  6 21:15:22 2012
From: mpw at taquiri.de (=?ISO-8859-1?Q?=22Matthias_P=2E_W=FCrfl=22?=)
Date: Fri, 06 Jul 2012 23:15:22 +0200
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF74FCE.5010406@bluehost.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6F660.8070302@bluehost.com>
	<CAGguigcrt=gd9QpWmT-dwEUROY7-zjut+S9mtBF7GbtmAtttKw@mail.gmail.com>
	<CAD-FghwRUE2RkpVydSvnjcN8zNYDxx5thF98ohJbh-0JUbKg8g@mail.gmail.com>
	<4FF74FCE.5010406@bluehost.com>
Message-ID: <4FF7556A.5040007@taquiri.de>

Am 06.07.2012 22:51, schrieb Bryan Petty:
> On 07/06/2012 02:08 PM, Otto wrote:
>> >On Fri, Jul 6, 2012 at 11:09 AM, Shasta Willson<shastaw at gmail.com>  wrote:
>>> >>I have to agree with Bryan. I consider the move to deployment (and
>>> >>maintenance of a matching testing server) one of the weakest areas of
>> >
>> >Why are you "deploying" your content in the first place?
>> >
>> >The notion of development->testing->production is fundamentally a
>> >software or manufacturing notion. It doesn't make a whole heck of a
>> >lot of sense to be forcing your writers/authors/content-creators to
>> >use that same approach.
> It does if they are developing themes around your content, especially
> when that content revolves around custom post types, and tons of
> metadata. Remember, content precedes design [1,2,3].

I agree with that.

Whenever a theme, a post type, a plugin or whatever is modified/updated 
i check this with real content. So the content moves from live to dev. 
When development is done there needs to be some content in testing. I 
use a copy of the live data for this. Customers won't accept looking at 
the "preview of the new website" with test-content typed by monkeys. So 
there's a need for content to move around.

And this is just content. There's a lot of settings and stuff in the 
database with absolute URIs in it.

I found out i have to draw a distinction between:

- 3rd party code (Wordpress Core)
- My Code (includes projects settings)
- Settings (what differs from host to host dev/stage/etc)
- Data
- temporary files (cache)

each one of these has to be treated different. This is easy with the 
files. I keep Wordpress in a subdirectory and have some svn externals 
and svn::ignores. This works for me, but when it comes to the database 
it's a mess. The absolute URIs are just the tip of the iceberg.

Gr??e, Matthias





From otto at ottodestruct.com  Fri Jul  6 21:23:01 2012
From: otto at ottodestruct.com (Otto)
Date: Fri, 6 Jul 2012 16:23:01 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF753C8.8000806@bluehost.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6F660.8070302@bluehost.com>
	<CAGguigcrt=gd9QpWmT-dwEUROY7-zjut+S9mtBF7GbtmAtttKw@mail.gmail.com>
	<CAD-FghwRUE2RkpVydSvnjcN8zNYDxx5thF98ohJbh-0JUbKg8g@mail.gmail.com>
	<4FF753C8.8000806@bluehost.com>
Message-ID: <CAD-FghwTG--9pee9y8HApvF+ZtGjm9mgo05H2Ua6zW6DnVuZTQ@mail.gmail.com>

On Fri, Jul 6, 2012 at 4:08 PM, Bryan Petty <bpetty at bluehost.com> wrote:
> First, at least one level of testing fundamentally includes testing
> against live data, not against the live database itself, but at least
> against a snapshot. I don't force authors to publish their posts on some
> development server, I'm talking about a snapshot, they still write their
> posts on the live server. But I still can't do that without this change.

ob_start('my_callback');
function my_callback($out) {
    return str_replace('example.com', 'localhost.dev.whatever', $out);
}

Drop that or something similar to the top of your dev site's
wp-config.php file. No real need to change the URLs in the database at
all.

See, I guess I'm just not getting the problem here. You're talking
about taking content from a live site, putting it on a local server
for testing, and that's fine. But in such a case, absolute URLs simply
aren't a big deal. A few snippets like the above on your dev site and
you can change the URLs being displayed without screwing around with
the database in any way whatsoever.

So you tell me, what am I missing? What is so hard about doing things
like the above code that makes this such a difficult process for you?


> Second, even if everything you said was true of everyone using WordPress
> (that they shouldn't be running live content on *any* server besides the
> live one, period... even though that's not true), we still need this
> change to simplify site domain/sub-folder migrations.

No argument, but moving sites around like this is something that
should be avoided in general, I'd think. Why would anybody ever change
their domain? It's an exceptional, and infrequent, circumstance. One
would hope. Changing the whole system for a very, very minority of a
case doesn't make a whole lot of sense.

-Otto

From bpetty at bluehost.com  Fri Jul  6 21:36:59 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Fri, 06 Jul 2012 15:36:59 -0600
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAD-Fghwz51TkFUVqdeERUv1U_1PirstFmxKvY2ei5rJjD6KPyg@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6F660.8070302@bluehost.com>
	<CAGguigcrt=gd9QpWmT-dwEUROY7-zjut+S9mtBF7GbtmAtttKw@mail.gmail.com>
	<CAD-FghwRUE2RkpVydSvnjcN8zNYDxx5thF98ohJbh-0JUbKg8g@mail.gmail.com>
	<4FF74FCE.5010406@bluehost.com>
	<CAD-Fghwz51TkFUVqdeERUv1U_1PirstFmxKvY2ei5rJjD6KPyg@mail.gmail.com>
Message-ID: <4FF75A7B.2050705@bluehost.com>

On 07/06/2012 02:57 PM, Otto wrote:
> On Fri, Jul 6, 2012 at 3:51 PM, Bryan Petty <bpetty at bluehost.com> wrote:
>> What we're talking about here is *having the option* of running a
>> development server with a snapshot of the live site for real-world
>> testing/design/development for those of us smart enough to not be
>> storing sensitive information in our WordPress sites.
> 
> You have that option now. It's easily done. URLs don't have to be tied
> to one server or one IP address. There's loads of ways to do DNS
> trickery to make a local server think it's example.com or whatever you
> want it to be.

Yes that is possible, but then I get to keep switching my computer's
host file back and forth when I need to do work on the other one, and
also get to forget whether I'm making test content changes on the dev
site, or the live site because the domain is exactly the same...

I used to do that with websites I was working on a decade ago, trust me,
it is a horrible "solution" to something that should just work without
modifications regardless of the domain it's running on, especially
because it's perfectly possible to do so. In my opinion, this is a bug,
not a feature request.

> Alternatively, you can write a simple 4-5 line script that will
> convert all mentions of example.com to test-example.com on the fly,
> shove that in as a plugin, and Bob's your uncle. Output buffering is
> handy for development.

How many other web applications do you know of that absolutely require
you to install additional extensions just to do something like this?

I'm not asking you to code up this functionality inside of WordPress
yourself, but please stop disrespecting everyone in here by ignoring
perfectly valid arguments, discouraging anyone else from working on
improvements and solutions towards those goals, derailing the
discussion, and assuming that just because you don't have a need for
this, no-one else does either.

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com

From otto at ottodestruct.com  Fri Jul  6 21:46:18 2012
From: otto at ottodestruct.com (Otto)
Date: Fri, 6 Jul 2012 16:46:18 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF75A7B.2050705@bluehost.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6F660.8070302@bluehost.com>
	<CAGguigcrt=gd9QpWmT-dwEUROY7-zjut+S9mtBF7GbtmAtttKw@mail.gmail.com>
	<CAD-FghwRUE2RkpVydSvnjcN8zNYDxx5thF98ohJbh-0JUbKg8g@mail.gmail.com>
	<4FF74FCE.5010406@bluehost.com>
	<CAD-Fghwz51TkFUVqdeERUv1U_1PirstFmxKvY2ei5rJjD6KPyg@mail.gmail.com>
	<4FF75A7B.2050705@bluehost.com>
Message-ID: <CAD-FghxkeiRtm9BuNhe0qZO1+9yLsoMNJ5YCHVz-darStLFu5A@mail.gmail.com>

On Fri, Jul 6, 2012 at 4:36 PM, Bryan Petty <bpetty at bluehost.com> wrote:
> How many other web applications do you know of that absolutely require
> you to install additional extensions just to do something like this?

Umm... Dude, you're a programmer. Writing code shouldn't be that
difficult or be considered a last-resort sort of option. Hell, I write
code all the time, and if I can do it with my average-BAC, anybody can
do it. :)


> I'm not asking you to code up this functionality inside of WordPress
> yourself, but please stop disrespecting everyone in here by ignoring
> perfectly valid arguments, discouraging anyone else from working on
> improvements and solutions towards those goals, derailing the
> discussion, and assuming that just because you don't have a need for
> this, no-one else does either.

Well, thanks for your opinion, but since I was asking questions in
order to figure out what the problem actually is and try and help
present better solutions for those problems, then I'm just going to
keep on doing that.

How about instead of getting pissy on internet mailing lists, you try
to explain yourself better when having conversations, eh?

-Otto

From bpetty at bluehost.com  Fri Jul  6 21:47:13 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Fri, 06 Jul 2012 15:47:13 -0600
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAD-FghwTG--9pee9y8HApvF+ZtGjm9mgo05H2Ua6zW6DnVuZTQ@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6F660.8070302@bluehost.com>
	<CAGguigcrt=gd9QpWmT-dwEUROY7-zjut+S9mtBF7GbtmAtttKw@mail.gmail.com>
	<CAD-FghwRUE2RkpVydSvnjcN8zNYDxx5thF98ohJbh-0JUbKg8g@mail.gmail.com>
	<4FF753C8.8000806@bluehost.com>
	<CAD-FghwTG--9pee9y8HApvF+ZtGjm9mgo05H2Ua6zW6DnVuZTQ@mail.gmail.com>
Message-ID: <4FF75CE1.90605@bluehost.com>

On 07/06/2012 03:23 PM, Otto wrote:
> ob_start('my_callback');
> function my_callback($out) {
>     return str_replace('example.com', 'localhost.dev.whatever', $out);
> }
> 
> Drop that or something similar to the top of your dev site's
> wp-config.php file. No real need to change the URLs in the database at
> all.
> 
> See, I guess I'm just not getting the problem here. You're talking
> about taking content from a live site, putting it on a local server
> for testing, and that's fine. But in such a case, absolute URLs simply
> aren't a big deal. A few snippets like the above on your dev site and
> you can change the URLs being displayed without screwing around with
> the database in any way whatsoever.
> 
> So you tell me, what am I missing? What is so hard about doing things
> like the above code that makes this such a difficult process for you?

It's not hard, but it's a "hack" to a bug that needs to be fixed in
core. I can do this, and right now, that's fine, but I absolutely *have*
to do this to get this to work right, and it's one more thing I have to
do with every WordPress site I work on, but I shouldn't have to at all.

No-one is saying this doesn't work. It's just not the ideal solution to
the problem.

> No argument, but moving sites around like this is something that
> should be avoided in general, I'd think. Why would anybody ever change
> their domain? It's an exceptional, and infrequent, circumstance. One
> would hope. Changing the whole system for a very, very minority of a
> case doesn't make a whole lot of sense.

Not if it doesn't break anything or hurt anyone to do it (and it
wouldn't). This would save a whole bunch of people a lot of headaches
and support time, as responses to this thread have already proven.

You're right, it should be avoided, and is a very infrequent
circumstance, but it still happens.

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com



From lists at rotorised.com  Sat Jul  7 03:14:58 2012
From: lists at rotorised.com (Ryan McCue)
Date: Sat, 07 Jul 2012 13:14:58 +1000
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <8538E103-4BD6-4559-866F-98822BAD4197@ipstenu.org>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6EEAD.3050501@rotorised.com>
	<8538E103-4BD6-4559-866F-98822BAD4197@ipstenu.org>
Message-ID: <4FF7A9B2.6060808@rotorised.com>

Mika A Epstein wrote:
> What would be 'easier' for that in-between dev, who is terrified of SQL, is a 'move WP' tool that does the mv and the sql s/r for you.

Alright, I'll concede the absolute-vs-relative-vs-shortcode (for now) in 
favour of actually getting a solution.

My thoughts on how to best implement a "move WP" tool:

1) User enables plugin before moving (if they forget, they can put in 
the old URL manually)
2) User moves WP installation
3) Plugin detects change of URL, presents ability to change URLs
4) Plugin changes all relevant pieces
4a) Replace URLs in post content
4b) Search options for old URL
4c) Walk through each old option, unserialize as needed, replace

Does that sound useful to anyone?
-- 
Ryan McCue
<http://ryanmccue.info/>



From lists at rotorised.com  Sat Jul  7 03:20:08 2012
From: lists at rotorised.com (Ryan McCue)
Date: Sat, 07 Jul 2012 13:20:08 +1000
Subject: [wp-hackers] Access the wordpress menu from another CMS in a
 subdirectory
In-Reply-To: <CAPvkqyO+AFfYmS1Ebj5e9zLJ4LnF7vb8XQu00cmpyFjvKrcwig@mail.gmail.com>
References: <CAPvkqyO+AFfYmS1Ebj5e9zLJ4LnF7vb8XQu00cmpyFjvKrcwig@mail.gmail.com>
Message-ID: <4FF7AAE8.5090302@rotorised.com>

Dwain Maralack wrote:
> <?php
>        // no theme output
> define('WP_USE_THEMES', false);
>
> $_SERVER = array(
>     "HTTP_HOST" => "http://localhost:8888/akfam/",
>      "SERVER_NAME" => "http://localhost:8888/akfam/",
>      "REQUEST_URI" => "/",
>     "REQUEST_METHOD" => "GET"
> );

You shouldn't need to do any of this unless you have badly behaving plugins.

> // initializes  Wordpress
> require_once('/Users/miiweb1/Sites/akfam/wp-blog-header.php');

Use wp-load.php here instead of wp-blog-header.php

----

Here's what I use:

<?php
class MyClass {
	// ...
	public static function load_wp() {
		if (empty(self::$wp_path)) {
			throw new Exception('WordPress could not be loaded', 500);
		}

		global $wp_the_query, $wp_query, $wp_rewrite, $wp;

		define('DISABLE_WP_CRON', true);
		require_once(self::$wp_path . '/wp-load.php');
	}

The globals are required if loading through a function. There may be 
others as well depending on what plugins you have. (WP should really 
have that built in, rather than assuming it's in the global context.)

DISABLE_WP_CRON is for performance reasons; I don't want cron running on 
the site this lives on.
-- 
Ryan McCue
<http://ryanmccue.info/>



From lists at rotorised.com  Sat Jul  7 03:21:01 2012
From: lists at rotorised.com (Ryan McCue)
Date: Sat, 07 Jul 2012 13:21:01 +1000
Subject: [wp-hackers] styling a plugins widget in a theme
In-Reply-To: <-6890645612607763219@unknownmsgid>
References: <4FF58DDC.4020709@taquiri.de>
	<CAMb54M335jYAQOwe=jLd_BCEFidLCSu02SaQgEdjHCTACa7aLQ@mail.gmail.com>
	<4FF591B2.6080008@globalis-ms.com>
	<-6890645612607763219@unknownmsgid>
Message-ID: <4FF7AB1D.8040200@rotorised.com>

Dwain Maralack wrote:
> Hey Guys, I know this is not the place, but I have sent a question to
> wp-hackers but I'm not getting reply, how does it work?

FYI: your messages were coming through, but you may need to wait a 
little while to get responses. :)

-- 
Ryan McCue
<http://ryanmccue.info/>



From lists at rotorised.com  Sat Jul  7 03:25:53 2012
From: lists at rotorised.com (Ryan McCue)
Date: Sat, 07 Jul 2012 13:25:53 +1000
Subject: [wp-hackers] Generate a POT file script
In-Reply-To: <CAD-FghycfnahZfEM65eNF23WQDxHK7CLaCh0ZSuwx1g4tKRpLg@mail.gmail.com>
References: <8627EC0E-6101-4836-A937-AD1BE378FBB0@cspath.com>
	<CAD-FghycfnahZfEM65eNF23WQDxHK7CLaCh0ZSuwx1g4tKRpLg@mail.gmail.com>
Message-ID: <4FF7AC41.7070105@rotorised.com>

Otto wrote:
> Although there probably are other tools that can do the job as well.

I believe PoEdit will do the job, although you'll have to customise it 
to match WP's functions: http://www.poedit.net/ - It may be slightly 
easier than setting up the WP script for your plugin.

-- 
Ryan McCue
<http://ryanmccue.info/>



From otto at ottodestruct.com  Sat Jul  7 04:09:23 2012
From: otto at ottodestruct.com (Otto)
Date: Fri, 6 Jul 2012 23:09:23 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF7A9B2.6060808@rotorised.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6EEAD.3050501@rotorised.com>
	<8538E103-4BD6-4559-866F-98822BAD4197@ipstenu.org>
	<4FF7A9B2.6060808@rotorised.com>
Message-ID: <CAD-FghxXekD+S_cadY7pe=Pxs_p8RKhhS-2x1WAxGS2udEMuTw@mail.gmail.com>

On Fri, Jul 6, 2012 at 10:14 PM, Ryan McCue <lists at rotorised.com> wrote:
> Alright, I'll concede the absolute-vs-relative-vs-shortcode (for now) in
> favour of actually getting a solution.
>
> My thoughts on how to best implement a "move WP" tool:
>
> 1) User enables plugin before moving (if they forget, they can put in the
> old URL manually)
> 2) User moves WP installation
> 3) Plugin detects change of URL, presents ability to change URLs
> 4) Plugin changes all relevant pieces
> 4a) Replace URLs in post content
> 4b) Search options for old URL
> 4c) Walk through each old option, unserialize as needed, replace
>
> Does that sound useful to anyone?

http://wordpress.org/extend/plugins/wordpress-move/
http://wordpress.org/extend/plugins/wp-migrate/
http://wordpress.org/extend/plugins/automatic-migration/
http://wordpress.org/extend/plugins/ezmigrate/
http://wordpress.org/extend/plugins/sitepush/
http://wordpress.org/extend/plugins/strategery-migrations/
http://wordpress.org/extend/plugins/wordpressdeploy/


There's a couple dozen more. Do none of these existing tools work?

-Otto

From ryannmicua at gmail.com  Sat Jul  7 15:04:49 2012
From: ryannmicua at gmail.com (Ryann Micua)
Date: Sat, 07 Jul 2012 23:04:49 +0800
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <mailman.11.1341662402.756.wp-hackers@lists.automattic.com>
References: <mailman.11.1341662402.756.wp-hackers@lists.automattic.com>
Message-ID: <4FF85011.5030304@gmail.com>

absolute vs relative urls again? :D

quick question, does any one know how other systems go around this issue 
dev -> testing -> deploy successfully?

Also, isn't this something that can be created as a plugin (sort of like 
a proof of concept) and see how it goes?

Create a plugin that automatically converts absolute urls to that 
shortcoded url. Let it run for a few months, see what headaches you go 
through and let us know how it goes :)

On Saturday, 07 July, 2012 08:00 PM, 
wp-hackers-request at lists.automattic.com wrote:
> Re: [wp-hackers] absolute URLs in plug-ins and custom types

-- 
*Ryann Micua*
/Web Developer/
------------------------------------------------------------------------

Website: /www.pogidude.com/
Skype: /rmicua/
Mobile: /+639169273059/


From charles.freesmelvin at me.com  Sat Jul  7 15:26:17 2012
From: charles.freesmelvin at me.com (Charles Frees-Melvin)
Date: Sat, 07 Jul 2012 12:26:17 -0300
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <4FF85011.5030304@gmail.com>
References: <mailman.11.1341662402.756.wp-hackers@lists.automattic.com>
	<4FF85011.5030304@gmail.com>
Message-ID: <DE922C58-A34E-423B-B665-CECFE87E09BE@me.com>

Considering that themes and plugins can be easily transferred between installs, what we seem to be talking about is moving content back and forth. Also considering all the dynamic nature of the full potential of the WordPress database, moving databases probably should be avoided. 

This might be fringe case but with post revisions and the XML-RPC work that was added into 3.4. Would it not be possible fairly simply via a plugin for one WordPress (dev) install to publish push content to a second WordPress (prod) and manage the absolute URL changes.

--
Charles E. Frees-Melvin
http://cefm.ca

Sent from my iPhone 4S on Bell

On 2012-07-07, at 12:04, Ryann Micua <ryannmicua at gmail.com> wrote:

> absolute vs relative urls again? :D
> 
> quick question, does any one know how other systems go around this issue dev -> testing -> deploy successfully?
> 
> Also, isn't this something that can be created as a plugin (sort of like a proof of concept) and see how it goes?
> 
> Create a plugin that automatically converts absolute urls to that shortcoded url. Let it run for a few months, see what headaches you go through and let us know how it goes :)
> 
> On Saturday, 07 July, 2012 08:00 PM, wp-hackers-request at lists.automattic.com wrote:
>> Re: [wp-hackers] absolute URLs in plug-ins and custom types
> 
> -- 
> *Ryann Micua*
> /Web Developer/
> ------------------------------------------------------------------------
> 
> Website: /www.pogidude.com/
> Skype: /rmicua/
> Mobile: /+639169273059/
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From shastaw at gmail.com  Sun Jul  8 01:52:43 2012
From: shastaw at gmail.com (Shasta Willson)
Date: Sat, 7 Jul 2012 18:52:43 -0700
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAD-FghxXekD+S_cadY7pe=Pxs_p8RKhhS-2x1WAxGS2udEMuTw@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6EEAD.3050501@rotorised.com>
	<8538E103-4BD6-4559-866F-98822BAD4197@ipstenu.org>
	<4FF7A9B2.6060808@rotorised.com>
	<CAD-FghxXekD+S_cadY7pe=Pxs_p8RKhhS-2x1WAxGS2udEMuTw@mail.gmail.com>
Message-ID: <CAGguigexatdnBKiU=P0VBvvENk=zULN_xRe6H8pLoJTLvCustQ@mail.gmail.com>

On Fri, Jul 6, 2012 at 9:09 PM, Otto <otto at ottodestruct.com> wrote:
>
> http://wordpress.org/extend/plugins/wordpress-move/
> http://wordpress.org/extend/plugins/wp-migrate/
> http://wordpress.org/extend/plugins/automatic-migration/
> http://wordpress.org/extend/plugins/ezmigrate/
> http://wordpress.org/extend/plugins/sitepush/
> http://wordpress.org/extend/plugins/strategery-migrations/
> http://wordpress.org/extend/plugins/wordpressdeploy/
>
>
> There's a couple dozen more. Do none of these existing tools work?

With all due respect, most of the above have less than a handful of
reviews.  (There was one which had 17.) If I'm going to let someone
else's code muck about in my database, I'd like to be using something
from a very reputable source -- ideally the folks who made the
software that database is designed to run. This is not a third party
puzzle like integrating with Google Maps.  This is core to WordPress'
utility as a CMS.

The argument that its fine seems to be "well, it is, and change is
dangerous, and it's not that hard to work around."  Those are valid
arguments in software development, and I concur that change is
dangerous, but I think some of the pros underestimate the issues it
creates for newer folks to WP, even if they are competent devs.  This
is a domain knowledge issue, not one of programming skill. For those
deeply steeped in WordPress the solutions may seem obvious, but after
three years of hanging around the forums and building sites, I've
learned new things in this thread.  This knowledge is NOT well
documented for the great unwashed masses of WordPress developers, and
after all, one of the selling points for WordPress is supposed to be
that it's easier to work with than building a site with Ruby (or even
Drupal.)

Finally, in addition to the use-cases already mentioned, there is one
that I don't think anyone mentioned.  Because of WordPress' success, I
am seeing more web site owners who want to migrate to a WordPress CMS
from an existing site.  In virtually all cases those users expect to
bring their existing content on line when the site goes live, which
means the content has to be pre-loaded on the development server and
tested along with the rest of the site.

- Shasta

From otto at ottodestruct.com  Sun Jul  8 05:31:47 2012
From: otto at ottodestruct.com (Otto)
Date: Sun, 8 Jul 2012 00:31:47 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAGguigexatdnBKiU=P0VBvvENk=zULN_xRe6H8pLoJTLvCustQ@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6EEAD.3050501@rotorised.com>
	<8538E103-4BD6-4559-866F-98822BAD4197@ipstenu.org>
	<4FF7A9B2.6060808@rotorised.com>
	<CAD-FghxXekD+S_cadY7pe=Pxs_p8RKhhS-2x1WAxGS2udEMuTw@mail.gmail.com>
	<CAGguigexatdnBKiU=P0VBvvENk=zULN_xRe6H8pLoJTLvCustQ@mail.gmail.com>
Message-ID: <CAD-FghxR46R7A3b8vFk=W-oE1aU32YsiK3cpxuyt0FXJkqTssQ@mail.gmail.com>

On Sat, Jul 7, 2012 at 8:52 PM, Shasta Willson <shastaw at gmail.com> wrote:
> On Fri, Jul 6, 2012 at 9:09 PM, Otto <otto at ottodestruct.com> wrote:
>>
>> http://wordpress.org/extend/plugins/wordpress-move/
>> http://wordpress.org/extend/plugins/wp-migrate/
>> http://wordpress.org/extend/plugins/automatic-migration/
>> http://wordpress.org/extend/plugins/ezmigrate/
>> http://wordpress.org/extend/plugins/sitepush/
>> http://wordpress.org/extend/plugins/strategery-migrations/
>> http://wordpress.org/extend/plugins/wordpressdeploy/
>>
>>
>> There's a couple dozen more. Do none of these existing tools work?
>
> With all due respect, most of the above have less than a handful of
> reviews.  (There was one which had 17.) If I'm going to let someone
> else's code muck about in my database, I'd like to be using something
> from a very reputable source -- ideally the folks who made the
> software that database is designed to run. This is not a third party
> puzzle like integrating with Google Maps.  This is core to WordPress'
> utility as a CMS.

I think you're reading more into it than I was actually asking.

If they don't work, fine. But there sure is an awful lot of them. Have
you tried them? Which ones don't work? I mean, I have the capability
of *removing* broken code from our system, if none of this stuff
works, then I really do want to know.

But if you haven't tried, then I'd also like to know that as well. We
have a lot of code out there, if something is broke, then by all means
*tell me*.

-Otto

From shastaw at gmail.com  Sun Jul  8 05:51:00 2012
From: shastaw at gmail.com (Shasta Willson)
Date: Sat, 7 Jul 2012 22:51:00 -0700
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAD-FghxR46R7A3b8vFk=W-oE1aU32YsiK3cpxuyt0FXJkqTssQ@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6EEAD.3050501@rotorised.com>
	<8538E103-4BD6-4559-866F-98822BAD4197@ipstenu.org>
	<4FF7A9B2.6060808@rotorised.com>
	<CAD-FghxXekD+S_cadY7pe=Pxs_p8RKhhS-2x1WAxGS2udEMuTw@mail.gmail.com>
	<CAGguigexatdnBKiU=P0VBvvENk=zULN_xRe6H8pLoJTLvCustQ@mail.gmail.com>
	<CAD-FghxR46R7A3b8vFk=W-oE1aU32YsiK3cpxuyt0FXJkqTssQ@mail.gmail.com>
Message-ID: <CAGguigfta_X5t3pybajmDpda_2mHmNfpaz4iUg=RjCRhyPOziQ@mail.gmail.com>

On Sat, Jul 7, 2012 at 10:31 PM, Otto <otto at ottodestruct.com> wrote:
>
> But if you haven't tried, then I'd also like to know that as well. We
> have a lot of code out there, if something is broke, then by all means
> *tell me*.

The only one that would remotely meet my standards for plug-in
selection is this one:
http://wordpress.org/extend/plugins/wordpress-move Only 17 reviews,
but a very good closure rate in the forums.  However it is also a very
young plug-in -- launched just six months ago.  Normally I'd steer a
client away from a plug-in without a longer track record and more
reviews, particularly for something so critical.  That said, the
fellow seems to be very sincere and responsive, which bodes well.
He's also a student, which means he may or may not maintain it when he
graduates (or school gets busy.)

Yes, I look at these things every time I consider a plug-in.
Particularly if it interacts with the database, since I'm relying on
someone else's security measures. I build sites commercially, so I
need a commercial level of reliability in the tools I adopt.
Sometimes that means a paid plug-in.  Often it means a well
established mature one.  The wide availability of those is one of the
great things about WordPress.

But I'm not sure why you think other people creating patches for a
flaw in WordPress addresses the issue.  WordPress is being promoted as
a serious CMS contender.  A lot of my dev friends sneer at it, but I
think it has a HUGE amount of potential due to the rapid development
and ease of end-user content creation.  But serious grown up systems
have serious grown up solutions for development path issues.  Not
hacks or a plug-in some fellow might stop supporting.

- Shasta

From otto at ottodestruct.com  Sun Jul  8 06:01:49 2012
From: otto at ottodestruct.com (Otto)
Date: Sun, 8 Jul 2012 01:01:49 -0500
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAGguigfta_X5t3pybajmDpda_2mHmNfpaz4iUg=RjCRhyPOziQ@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<DB78B126-AD36-42C2-B5E1-5F2EA7E36A51@gmail.com>
	<CADvbF5r1cjDuKrHMz_1_7E0qEn+EVE7kQASgxCy7DW+8n3tyug@mail.gmail.com>
	<CAGguigceujgmVts17Q_PRrBOF3-1_5iHm6KnXc1d=DsonyLycw@mail.gmail.com>
	<CADvbF5q4oJ31Z-Dj-kcLx=frAVnzBFPtSkBQhyUnnWv-OQCtYg@mail.gmail.com>
	<CAGguigdFdhCXAmVpVGgqVio8mrDPXegzqOZqiTvjLVFNn4v2BA@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6EEAD.3050501@rotorised.com>
	<8538E103-4BD6-4559-866F-98822BAD4197@ipstenu.org>
	<4FF7A9B2.6060808@rotorised.com>
	<CAD-FghxXekD+S_cadY7pe=Pxs_p8RKhhS-2x1WAxGS2udEMuTw@mail.gmail.com>
	<CAGguigexatdnBKiU=P0VBvvENk=zULN_xRe6H8pLoJTLvCustQ@mail.gmail.com>
	<CAD-FghxR46R7A3b8vFk=W-oE1aU32YsiK3cpxuyt0FXJkqTssQ@mail.gmail.com>
	<CAGguigfta_X5t3pybajmDpda_2mHmNfpaz4iUg=RjCRhyPOziQ@mail.gmail.com>
Message-ID: <CAD-FghycPGX7fcdhhuM83cCmG=n_uEGvu2iHh07CSWVN=u2deg@mail.gmail.com>

On Sun, Jul 8, 2012 at 12:51 AM, Shasta Willson <shastaw at gmail.com> wrote:
> But I'm not sure why you think other people creating patches for a
> flaw in WordPress addresses the issue.

Your continually calling it a "flaw" doesn't help. I don't consider it
to be a flaw, or a bug, or anything else. It's an edge case. A *rare*
edge case, at that.

But if you haven't tried it, if you haven't used the code, then I have
no means by which to judge. I'm not moving sites around, I have no
basis on which to judge. How am I supposed to know what works and what
doesn't and what code to look at if people are merely saying "I have a
problem" but not saying "here's something that worked for me"?

This is *open-source*. Anybody is free to contribute. If you have a
problem, that's fine, and I understand your pain. But unless you also
say "here's a solution that worked" then I have nothing to build upon.
Last I checked, WordPress was free software. Unless you're
contributing somehow, you haven't paid for it. And you don't need to
be a massive code expert to contribute, just saying "this plugin is
awesome and solves a bunch of problems for me" is pretty darned good
too, because it tells the core developers what code to look at, what
code works, what the problems are, and what to emulate in order to
solve those issues.

Anybody can point out a problem. It's far more useful to also point
out solutions.

-Otto

From lists at rotorised.com  Sun Jul  8 06:16:53 2012
From: lists at rotorised.com (Ryan McCue)
Date: Sun, 08 Jul 2012 16:16:53 +1000
Subject: [wp-hackers] absolute URLs in plug-ins and custom types
In-Reply-To: <CAD-FghycPGX7fcdhhuM83cCmG=n_uEGvu2iHh07CSWVN=u2deg@mail.gmail.com>
References: <CAGguige+Mw6RF3aLd7+dAutEcfTQZO8shVsTcY0QbVxekUzWgg@mail.gmail.com>
	<CAD-FghyEA4dKX5HMhHjF3oJf8=seB9rz1uC-RT9AAhnYbUZ0Qg@mail.gmail.com>
	<CAGguigf1jr_u_XTii3rx+UOuGZuEt5Omxzj2fSGHBOVNb3vkug@mail.gmail.com>
	<CAD-FghyuaDTwqiFR+hotBL3vHWsoRwgxzB=dw-L5wwdTaWXWfw@mail.gmail.com>
	<4FF6A07F.5070906@rotorised.com>
	<CAOqAKWDsb0xD29wqHVPL5NjHDB+bDHQ5Fr_T033pUmAboiPgsQ@mail.gmail.com>
	<382805A2-BEF3-437B-9466-FA887C5BC21F@ipstenu.org>
	<4FF6EC3E.2040602@rotorised.com>
	<3A081F9C-924C-482B-8037-FC959C102217@ipstenu.org>
	<4FF6EEAD.3050501@rotorised.com>
	<8538E103-4BD6-4559-866F-98822BAD4197@ipstenu.org>
	<4FF7A9B2.6060808@rotorised.com>
	<CAD-FghxXekD+S_cadY7pe=Pxs_p8RKhhS-2x1WAxGS2udEMuTw@mail.gmail.com>
	<CAGguigexatdnBKiU=P0VBvvENk=zULN_xRe6H8pLoJTLvCustQ@mail.gmail.com>
	<CAD-FghxR46R7A3b8vFk=W-oE1aU32YsiK3cpxuyt0FXJkqTssQ@mail.gmail.com>
	<CAGguigfta_X5t3pybajmDpda_2mHmNfpaz4iUg=RjCRhyPOziQ@mail.gmail.com>
	<CAD-FghycPGX7fcdhhuM83cCmG=n_uEGvu2iHh07CSWVN=u2deg@mail.gmail.com>
Message-ID: <4FF925D5.4040202@rotorised.com>

Otto wrote:
> Last I checked, WordPress was free software. Unless you're
> contributing somehow, you haven't paid for it. And you don't need to
> be a massive code expert to contribute, just saying "this plugin is
> awesome and solves a bunch of problems for me" is pretty darned good
> too, because it tells the core developers what code to look at, what
> code works, what the problems are, and what to emulate in order to
> solve those issues.

On the other hand, it's useful to find validation before submitting a 
patch. There's nothing like going to write a nice patch and getting most 
of the way through it before you're told it's never going to make it in. 
(That's what I was attempting to do in my previous posts.)

If there's a fair chance of it getting into core, I'd be happy to work 
on integrating that plugin (or writing something from scratch if it's 
not good enough).

-- 
Ryan McCue
<http://ryanmccue.info/>



From andre at pixelplexus.co.za  Sun Jul  8 22:02:23 2012
From: andre at pixelplexus.co.za (andre at pixelplexus.co.za)
Date: Sun, 8 Jul 2012 15:02:23 -0700
Subject: [wp-hackers] uploader with options API
Message-ID: <3e809b7c11b299f89b422f38a155c6a2.squirrel@webmail.pixelplexus.co.za>

I've been trying to figure out how to properly use the WordPress' uploader
with a plugin option.

I'm using add_settings_field to create the field and assumed there must be
straight-forward way to call the uploader from the callback that renders
the input, but no luck. I don't know if I'm just being a klutz, or a klutz
missing something really important.

Quite a few blogposts use a javascript,
(e.g.
http://www.webmaster-source.com/2010/01/08/using-the-wordpress-uploader-in-your-plugin-or-theme/)
but there seems to be some dodgyness around how to get the data back to
the form's text field. In my case I've not even got the button that should
launch the uploader to do anything when you click it.

Any advice or pointers to plugins to study would be much appreciated.

Thanks

Andr?




From kevinjohngallagher at hotmail.com  Sun Jul  8 22:57:54 2012
From: kevinjohngallagher at hotmail.com (Kevinjohn Gallagher)
Date: Sun, 8 Jul 2012 23:57:54 +0100
Subject: [wp-hackers] uploader with options API
In-Reply-To: <3e809b7c11b299f89b422f38a155c6a2.squirrel@webmail.pixelplexus.co.za>
References: <3e809b7c11b299f89b422f38a155c6a2.squirrel@webmail.pixelplexus.co.za>
Message-ID: <BLU150-W2075EFBA4897947AD01D42CCEC0@phx.gbl>



I added similar to our framework recently.You can see a cut down version at: http://wordpress.org/extend/plugins/kevinjohn-gallagher-pure-web-brilliants-image-controls/
Modern Tribe's IMAGE WIDGET plug-in is also an excellent place to start.
Kev



> Date: Sun, 8 Jul 2012 15:02:23 -0700
> From: andre at pixelplexus.co.za
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] uploader with options API
> 
> I've been trying to figure out how to properly use the WordPress' uploader
> with a plugin option.
> 
> I'm using add_settings_field to create the field and assumed there must be
> straight-forward way to call the uploader from the callback that renders
> the input, but no luck. I don't know if I'm just being a klutz, or a klutz
> missing something really important.
> 
> Quite a few blogposts use a javascript,
> (e.g.
> http://www.webmaster-source.com/2010/01/08/using-the-wordpress-uploader-in-your-plugin-or-theme/)
> but there seems to be some dodgyness around how to get the data back to
> the form's text field. In my case I've not even got the button that should
> launch the uploader to do anything when you click it.
> 
> Any advice or pointers to plugins to study would be much appreciated.
> 
> Thanks
> 
> Andr?
> 
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
 		 	   		  

From public at toppa.com  Mon Jul  9 13:31:23 2012
From: public at toppa.com (Michael Toppa)
Date: Mon, 09 Jul 2012 09:31:23 -0400
Subject: [wp-hackers] uploader with options API
In-Reply-To: <mailman.7.1341835202.10102.wp-hackers@lists.automattic.com>
References: <mailman.7.1341835202.10102.wp-hackers@lists.automattic.com>
Message-ID: <4FFADD2B.9090802@toppa.com>

Hi Andre,

This might help:

http://www.toppa.com/2011/using-plugins-to-create-custom-media-menus-in-wordpress-3-3/ 


Mike T

On 07/09/2012 08:00 AM, wp-hackers-request at lists.automattic.com wrote:
> Message: 2
> Date: Sun, 8 Jul 2012 23:57:54 +0100
> From: Kevinjohn Gallagher <kevinjohngallagher at hotmail.com>
> Subject: Re: [wp-hackers] uploader with options API
> To: "wp-hackers at lists.automattic.com"
> 	<wp-hackers at lists.automattic.com>
> Message-ID: <BLU150-W2075EFBA4897947AD01D42CCEC0 at phx.gbl>
> Content-Type: text/plain; charset="iso-8859-1"
>
>
>
> I added similar to our framework recently.You can see a cut down version at: http://wordpress.org/extend/plugins/kevinjohn-gallagher-pure-web-brilliants-image-controls/
> Modern Tribe's IMAGE WIDGET plug-in is also an excellent place to start.
> Kev
>
>
>
>> Date: Sun, 8 Jul 2012 15:02:23 -0700
>> From: andre at pixelplexus.co.za
>> To: wp-hackers at lists.automattic.com
>> Subject: [wp-hackers] uploader with options API
>>
>> I've been trying to figure out how to properly use the WordPress' uploader
>> with a plugin option.
>>
>> I'm using add_settings_field to create the field and assumed there must be
>> straight-forward way to call the uploader from the callback that renders
>> the input, but no luck. I don't know if I'm just being a klutz, or a klutz
>> missing something really important.
>>
>> Quite a few blogposts use a javascript,
>> (e.g.
>> http://www.webmaster-source.com/2010/01/08/using-the-wordpress-uploader-in-your-plugin-or-theme/)
>> but there seems to be some dodgyness around how to get the data back to
>> the form's text field. In my case I've not even got the button that should
>> launch the uploader to do anything when you click it.
>>
>> Any advice or pointers to plugins to study would be much appreciated.
>>
>> Thanks
>>
>> Andr?
>>
>>


From mpwalsh8 at gmail.com  Mon Jul  9 14:43:14 2012
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Mon, 9 Jul 2012 10:43:14 -0400
Subject: [wp-hackers] How to prevent multiple processing of shortcodes?
Message-ID: <CAMg3evH+fcEuZutnge=25cHBq92UQFtmSidbwEv46qWUQkf4_g@mail.gmail.com>

I am looking for some advice on how to prevent a shortcode from being
processed multiple times.  I am trying to help a user of my WordPress
Google Form plugin and figured out that another plugin is calling
do_shortcode() as part of the wp_head action which causes my shortcode to
be processed twice.  Because my shortcode uses the WordPress HTTP API to
submit form data to Google Forms, processing the short code twice messes
things up.  I am not sure if running do_shortcode() as part of wp_head is a
bad idea, it seems to me like it is but I am sure there is a good reason
for it.  So I am trying to update my plugin to deal with this situation.

Any recommendations or idea?  I thought about trying to use a transient to
track when wp_remote_post() is called which might work for simple forms but
since many Google Forms have more than one page, wp_remote_post() is called
more than once and in theory could be called in unknown number of times
since Google Forms support going back and forth through the pages.

Mike
-- 
Mike Walsh - mpwalsh8 at gmail.com

From kevinjohngallagher at hotmail.com  Mon Jul  9 14:51:10 2012
From: kevinjohngallagher at hotmail.com (Kevinjohn Gallagher)
Date: Mon, 9 Jul 2012 15:51:10 +0100
Subject: [wp-hackers] How to prevent multiple processing of shortcodes?
In-Reply-To: <CAMg3evH+fcEuZutnge=25cHBq92UQFtmSidbwEv46qWUQkf4_g@mail.gmail.com>
References: <CAMg3evH+fcEuZutnge=25cHBq92UQFtmSidbwEv46qWUQkf4_g@mail.gmail.com>
Message-ID: <BLU150-W57CE0D76871182EEE9C11DCCD30@phx.gbl>



No doubt there is a better WordPress way of doing it, but for one of my plugins I've had to do the same.
add a process check to do_shortcode()

function shortcode_counter(){ $shortcode_ran_before = true;}
add_action ('do_shortcode', 'shortcode_counter')

Then add in a check in your code to see if $shortcode_ran_before is true. If it has, don't fire your own action.
Thats probably a horrible, non-modern-programming way of doing things; but it'll work.


> Date: Mon, 9 Jul 2012 10:43:14 -0400
> From: mpwalsh8 at gmail.com
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] How to prevent multiple processing of shortcodes?
> 
> I am looking for some advice on how to prevent a shortcode from being
> processed multiple times.  I am trying to help a user of my WordPress
> Google Form plugin and figured out that another plugin is calling
> do_shortcode() as part of the wp_head action which causes my shortcode to
> be processed twice.  Because my shortcode uses the WordPress HTTP API to
> submit form data to Google Forms, processing the short code twice messes
> things up.  I am not sure if running do_shortcode() as part of wp_head is a
> bad idea, it seems to me like it is but I am sure there is a good reason
> for it.  So I am trying to update my plugin to deal with this situation.
> 
> Any recommendations or idea?  I thought about trying to use a transient to
> track when wp_remote_post() is called which might work for simple forms but
> since many Google Forms have more than one page, wp_remote_post() is called
> more than once and in theory could be called in unknown number of times
> since Google Forms support going back and forth through the pages.
> 
> Mike
> -- 
> Mike Walsh - mpwalsh8 at gmail.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
 		 	   		  

From otto at ottodestruct.com  Mon Jul  9 17:01:37 2012
From: otto at ottodestruct.com (Otto)
Date: Mon, 9 Jul 2012 12:01:37 -0500
Subject: [wp-hackers] How to prevent multiple processing of shortcodes?
In-Reply-To: <CAMg3evH+fcEuZutnge=25cHBq92UQFtmSidbwEv46qWUQkf4_g@mail.gmail.com>
References: <CAMg3evH+fcEuZutnge=25cHBq92UQFtmSidbwEv46qWUQkf4_g@mail.gmail.com>
Message-ID: <CAD-FghwK0FERTDZ3kuQ=EuCnWRVZDofgLRERd0Oe1yQyCR5khw@mail.gmail.com>

On Mon, Jul 9, 2012 at 9:43 AM, Mike Walsh <mpwalsh8 at gmail.com> wrote:
> I am looking for some advice on how to prevent a shortcode from being
> processed multiple times.  I am trying to help a user of my WordPress
> Google Form plugin and figured out that another plugin is calling
> do_shortcode() as part of the wp_head action which causes my shortcode to
> be processed twice.  Because my shortcode uses the WordPress HTTP API to
> submit form data to Google Forms, processing the short code twice messes
> things up.  I am not sure if running do_shortcode() as part of wp_head is a
> bad idea, it seems to me like it is but I am sure there is a good reason
> for it.  So I am trying to update my plugin to deal with this situation.
>
> Any recommendations or idea?  I thought about trying to use a transient to
> track when wp_remote_post() is called which might work for simple forms but
> since many Google Forms have more than one page, wp_remote_post() is called
> more than once and in theory could be called in unknown number of times
> since Google Forms support going back and forth through the pages.

Bottom line: You're doing it wrong. Rewrite your plugin such that the
shortcode isn't doing that.

Shortcodes are meant to be inside of the post-content, and to return
some HTML or whatever that will replace the shortcode itself inside
that content. *It is going to be run multiple times on the page, and
you should design it such that it does that correctly*.

A shortcode is basically the same thing as a filter. It should not
have any side effects. Having the shortcode send data to some Google
Forms thing somewhere is a *big* side effect, and it is simply not
something a shortcode should ever do.

Now, if you're submitting data, then you need to move the part that
does the actual submit outside the shortcode itself. I'll give you an
example. Say you have a shortcode to make a contact form on the page.
Simple.

The shortcode function should:
- Output a form, and
- Do nothing else.

Now, you might ask, how do I get the results of that form? Well, the
form has to submit the data to somewhere, and it's probably to this
same page. So, I can hook onto the init action hook, recognize when
the form was submitted, and act accordingly. The important bit here is
that the "init" action hook is an *action* hook. You can do things
(like actions) on action hooks. The "init" hook isn't going to run
twice. The shortcode isn't an action hook, it shouldn't "do" anything
other than return that form. Leave doing stuff to action hooks.

-Otto

From andrew.bartel at gmail.com  Tue Jul 10 23:22:06 2012
From: andrew.bartel at gmail.com (Andrew Bartel)
Date: Tue, 10 Jul 2012 16:22:06 -0700
Subject: [wp-hackers] Adding checkout form validation with wp-e-commerce
Message-ID: <CAJnHr4hPuWOo0Wpjguikqwx5rswTR2LifXoH081wryUMiQ0Prw@mail.gmail.com>

Hi,

I posted this on wordpress.stackexchange.com but I thought this group would
be able to offer more specific help.

I'd like to add some additional validation on what's entered in the
checkout form, specifically the shipping address.

The function validate_forms() resides within the wpsc_checkout class in
checkout.class.php, so easily extendable, but the actual function call and
class instantiation is in wpsc_submit_checkout() (in ajax.functions.php),
which is simply a user defined function.

Since PHP doesn't support overloading and I don't see any appropriate hooks
to add additional validation, it seems like I'm stuck with modifying core
code.

Does anyone have a workaround for this that makes my installation of wpec
update safe?

Thanks much,

Andrew

From shastaw at gmail.com  Tue Jul 10 23:52:09 2012
From: shastaw at gmail.com (Shasta Willson)
Date: Tue, 10 Jul 2012 16:52:09 -0700
Subject: [wp-hackers] Adding checkout form validation with wp-e-commerce
In-Reply-To: <CAJnHr4hPuWOo0Wpjguikqwx5rswTR2LifXoH081wryUMiQ0Prw@mail.gmail.com>
References: <CAJnHr4hPuWOo0Wpjguikqwx5rswTR2LifXoH081wryUMiQ0Prw@mail.gmail.com>
Message-ID: <CAGguigcu9DAOS-ny_PejZLEceCW+ukZKReDtbNMcAH=1HUUi0Q@mail.gmail.com>

On Tue, Jul 10, 2012 at 4:22 PM, Andrew Bartel <andrew.bartel at gmail.com> wrote:
>
> Since PHP doesn't support overloading and I don't see any appropriate hooks
> to add additional validation, it seems like I'm stuck with modifying core
> code.
>
> Does anyone have a workaround for this that makes my installation of wpec
> update safe?

I'd use jQuery for validation.  There are some nice tools available,
depending what you want to do.

I haven't been very happy with modifying WP E-commerce.  It seems the
code is rather messy and hooks are often lacking, and I've encountered
a few surprising things for a product that's ostensibly quite mature
and very widely used. There's no doubt it's flexible -- probably the
hands down most flexible tool out there for the very reasonable price
of free+paid extras -- but there have been enough emergency updates
that I'd definitely not want to impact my update path. I've been
looking around for an alternative and currently have Cart66 on my
testing server.  The code seems clean, at least so far.

- Shasta

From david at wordshell.net  Wed Jul 11 06:57:00 2012
From: david at wordshell.net (David Anderson)
Date: Wed, 11 Jul 2012 09:57:00 +0300
Subject: [wp-hackers] Richer metadata for plugin versions
Message-ID: <4FFD23BC.7030902@wordshell.net>

Hi,

This is my first post, so a brief introduction: I am David Anderson, a 
Baptist missionary working amongst the urban poor in Eldoret, a large 
town in Kenya (http://david.dw-perspective.org.uk). I am also the author 
WordShell (http://wordshell.net), a tool I developed to help me maintain 
many WordPress websites from the command-line, and since it saved me 
huge amounts of time+money I thought it would be interesting to others 
and decided to try to commercialise (it is both GPL and commercial 
software). I also maintain the free UpdraftPlus back-up plugin 
(http://wordpress.org/extend/plugins/updraftplus).

One challenge when maintaining a lot of websites is, to know which 
plugins need to be updated immediately (e.g. a zero-day security hole), 
and which not (perhaps on your client's website it is better to wait a 
week - some plugin authors upload code with fatal errors in, or they add 
new bugs and fix them 2 hours later, etc.).

A plugin's readme.txt file can contain an "Upgrade Notice", which can be 
processed by a human to attempt to make a decision. However there is no 
standardised format for this, and most plugin authors ignore it.

Am I right in this assessment of the situation?

If so, then it is something that makes it hard for maintainers to make 
intelligent decisions, and impossible to automate or semi-automate them.

Having been chewing over this for the last couple of months, I have this 
proposal: Add a tag to readme.txt, "Latest security update: ". The 
contents of the tag would be the most recent version number that fixed a 
security flaw.
e.g. Latest security update: 0.1.7

Then both humans and robots can know that if you are running a version 
less than 0.1.7, then they should update.

This scheme could be made more sophisticated. For example, perhaps you 
are running 0.1.5, and the specific security hole did not exist until 
0.1.6. Therefore you do not need to update. So a more sophisticated 
scheme would be instead to indicate vulnerable versions.
e.g. Imagine that 0.1.4 has the security version, but that also the 
whole 0.0.x series had a different hole, and 0.1.1 up to 0.1.3.
Insecure versions: 0.0.*, 0.1.1-0.1.3

If there was a standardised format, involving wildcards (*) and ranges 
(0.1.1 - 0.1.3) and comma/space separation then that could still be 
easily both human and machine parsable.

As a final step, for wordpress.org-hosted plugins, this data ought to be 
exposed through the API so that machines can extract it without needing 
to download the whole plugin. In combination with the already-exposed 
version compatibility data, you could then programmatically know that 
"my present version of the plugin is compatible with my present 
WordPress version and is secure".

Of course, many plugin authors might not deploy this tag. But at least 
for those that do, those maintaining WP websites that are meant to be 
maintained in a conservative manner could reduce their risks, by knowing 
that "my present plugin version is not insecure; I do not need to 
update" for some plugins at least.

So...

- What do people think; would this or a similar addition to readme.txt 
be desirable?
- Are either of the schemes above suitable?
- What would be the way forward to add it? I looked at the descriptions 
of mailing lists, and though this seemed the most suitable one 
(apologies if I blundered), I could not work out who I really needed to 
talk to.

Many thanks,
David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From otto at ottodestruct.com  Wed Jul 11 13:26:16 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 11 Jul 2012 08:26:16 -0500
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <4FFD23BC.7030902@wordshell.net>
References: <4FFD23BC.7030902@wordshell.net>
Message-ID: <CAD-FghwN6kZa8zj5gS-UtqZgi82Om7xkoVBWT2L2UdpW6so20g@mail.gmail.com>

On Wed, Jul 11, 2012 at 1:57 AM, David Anderson <david at wordshell.net> wrote:
> One challenge when maintaining a lot of websites is, to know which plugins
> need to be updated immediately (e.g. a zero-day security hole), and which
> not (perhaps on your client's website it is better to wait a week - some
> plugin authors upload code with fatal errors in, or they add new bugs and
> fix them 2 hours later, etc.).

You should update any and all plugins immediately when there is an
update available, period.

If the plugin author has a habit of introducing new versions with
bugs, then you should stop using that plugin and find a different one
instead.

I do not see it as a good idea to introduce anything which even
remotely suggests that it is okay to not update. It is not okay.
Update. Immediately. Always.

-Otto

From ipstenu at ipstenu.org  Wed Jul 11 13:29:05 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Wed, 11 Jul 2012 08:29:05 -0500
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <4FFD23BC.7030902@wordshell.net>
References: <4FFD23BC.7030902@wordshell.net>
Message-ID: <0DA9C305-E6B1-48C6-8D7F-6C5E3FD55C4D@ipstenu.org>

tl;dr: I do like the idea, but it'd be hit-and-miss as much as the Upgrade Notice.

Given that there isn't the same oversight and scrutiny with a plugin as there is with themes (once you're in the repo, we trust you until you show up on our sneaky lists of doing_it_evil() or someone reports you), I think it's a great idea that would be nigh impossible to enforce. 

Part of the reason the current notice isn't used all the time is ... we don't make you. The only time we really can is when we close a plugin due to a security issue, and that's because we do review it before it's re-released. I'm willing to put money down that we only close half the security-issue plugins, and the rest are resolved by the good guys who get that secunia email and dive in right away. Without the ability to enforce that change, it's not very useful, alas. We can't even get everyone to update the 'Compatible up to...' tag as it stands, and Zoidberg knows how many people think that's the Holy Grail of determinations when picking a plugin. (Zoot put up the false grail light!)

This is why I always suggest you run a separate, clean-ish, install somewhere on the same server, and keep all the plugins you use there. Test the upgrades before you upgrade the real boxes. :)

On Jul 11, 2012, at 1:57 AM, David Anderson <david at wordshell.net> wrote:

> Hi,
> 
> This is my first post, so a brief introduction: I am David Anderson, a Baptist missionary working amongst the urban poor in Eldoret, a large town in Kenya (http://david.dw-perspective.org.uk). I am also the author WordShell (http://wordshell.net), a tool I developed to help me maintain many WordPress websites from the command-line, and since it saved me huge amounts of time+money I thought it would be interesting to others and decided to try to commercialise (it is both GPL and commercial software). I also maintain the free UpdraftPlus back-up plugin (http://wordpress.org/extend/plugins/updraftplus).
> 
> One challenge when maintaining a lot of websites is, to know which plugins need to be updated immediately (e.g. a zero-day security hole), and which not (perhaps on your client's website it is better to wait a week - some plugin authors upload code with fatal errors in, or they add new bugs and fix them 2 hours later, etc.).
> 
> A plugin's readme.txt file can contain an "Upgrade Notice", which can be processed by a human to attempt to make a decision. However there is no standardised format for this, and most plugin authors ignore it.
> 
> Am I right in this assessment of the situation?
> 
> If so, then it is something that makes it hard for maintainers to make intelligent decisions, and impossible to automate or semi-automate them.
> 
> Having been chewing over this for the last couple of months, I have this proposal: Add a tag to readme.txt, "Latest security update: ". The contents of the tag would be the most recent version number that fixed a security flaw.
> e.g. Latest security update: 0.1.7
> 
> Then both humans and robots can know that if you are running a version less than 0.1.7, then they should update.
> 
> This scheme could be made more sophisticated. For example, perhaps you are running 0.1.5, and the specific security hole did not exist until 0.1.6. Therefore you do not need to update. So a more sophisticated scheme would be instead to indicate vulnerable versions.
> e.g. Imagine that 0.1.4 has the security version, but that also the whole 0.0.x series had a different hole, and 0.1.1 up to 0.1.3.
> Insecure versions: 0.0.*, 0.1.1-0.1.3
> 
> If there was a standardised format, involving wildcards (*) and ranges (0.1.1 - 0.1.3) and comma/space separation then that could still be easily both human and machine parsable.
> 
> As a final step, for wordpress.org-hosted plugins, this data ought to be exposed through the API so that machines can extract it without needing to download the whole plugin. In combination with the already-exposed version compatibility data, you could then programmatically know that "my present version of the plugin is compatible with my present WordPress version and is secure".
> 
> Of course, many plugin authors might not deploy this tag. But at least for those that do, those maintaining WP websites that are meant to be maintained in a conservative manner could reduce their risks, by knowing that "my present plugin version is not insecure; I do not need to update" for some plugins at least.
> 
> So...
> 
> - What do people think; would this or a similar addition to readme.txt be desirable?
> - Are either of the schemes above suitable?
> - What would be the way forward to add it? I looked at the descriptions of mailing lists, and though this seemed the most suitable one (apologies if I blundered), I could not work out who I really needed to talk to.
> 
> Many thanks,
> David
> 
> -- 
> WordShell - WordPress fast from the CLI - www.wordshell.net
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From david at wordshell.net  Wed Jul 11 17:45:17 2012
From: david at wordshell.net (David Anderson)
Date: Wed, 11 Jul 2012 20:45:17 +0300
Subject: [wp-hackers] Richer metadata for plugin versions
Message-ID: <4FFDBBAD.4010805@wordshell.net>

> You should update any and all plugins immediately when there is an
> update available, period.
Really?

- Your website is being advertised on national radio today, in 20 
minutes time. There's a new version of a plugin available, which 
advertises a new feature that you don't use. Update immediately ... ?

- Plugin X has a security hole that allows immediate and complete site 
take-over. Obviously, you should update immediately. But plugin Y just 
has a minor tweak to a feature you hardly use. You might want to take an 
hour or day to test it out. There's a difference in that situation. The 
metadata I'm proposing would help you know which is which.

- If "you should update any and all plugins immediately", then WordPress 
should just do it. Why is WordPress making users do something manually 
that should "always" be done automatically?

So, obviously "you should always update immediately" is not true. In the 
WordPress admin, it's a choice offered to users, and rightly so. Users 
can choose their own policies based on their own immediate needs and 
risk assessments. Adding a "last-insecure-version" tag helps users to 
make that choice more intelligently, based upon more information. It's a 
good thing.
> If the plugin author has a habit of introducing new versions with
> bugs, then you should stop using that plugin and find a different one
> instead.
Given a choice between letting the volunteer early-adopters try out new 
versions for a few days, and breaking your website, losing business, and 
then researching a new plugin, I don't see how the former can be the 
one-and-only true choice.

Sure, if he has a "habit", then switch plugins. But you cannot 
accumulate data on their habits without taking time. And under the 
"always update immediately" scheme, you'll break your website several 
times whilst finding out what their habits are. Again, I think lots of 
WordPress users would prefer an alternative. I certainly would.

> I do not see it as a good idea to introduce anything which even
> remotely suggests that it is okay to not update. It is not okay.
> Update. Immediately. Always.
So, why does WordPress not do that for you, if it's the only right policy?

Seems to me there's a fork in the road. If "update immediately always" 
is right, then WordPress should handle it automatically; someone should 
code up a patch to do it, and remove the maintenance task from users 
(why offer them the option of doing the wrong thing?). If, on the other 
hand, it's right to let the user make a decision about it, then surely 
it's a good thing to give them more information to base that decision 
on. Sure, not all plugin authors will use the tag; but that also gives 
users more information when choosing which are the good plugins to 
choose and which are the bad. So it's win-win.

David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From ipstenu at ipstenu.org  Wed Jul 11 17:55:04 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Wed, 11 Jul 2012 12:55:04 -0500
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <4FFDBBAD.4010805@wordshell.net>
References: <4FFDBBAD.4010805@wordshell.net>
Message-ID: <FCDAA6E2-59B4-485A-A0C3-416E71B49FBF@ipstenu.org>

>> You should update any and all plugins immediately when there is an
>> update available, period.
> Really?

Yes, but remember there's a difference between 'should' and 'can.' You should change your oil regularly. You can't change it while you're on the freeway. As soon as possible, you should update.

>> I do not see it as a good idea to introduce anything which even
>> remotely suggests that it is okay to not update. It is not okay.
>> Update. Immediately. Always.
> So, why does WordPress not do that for you, if it's the only right policy?

There's a bag of worms. Chrome does it right, and many people would love WP to do that too. And others of us would not. It's been bandied about before, though. :)

From johnbillion+wp at gmail.com  Wed Jul 11 18:01:21 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Wed, 11 Jul 2012 19:01:21 +0100
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <4FFDBBAD.4010805@wordshell.net>
References: <4FFDBBAD.4010805@wordshell.net>
Message-ID: <CAOqAKWDDyqhMqaf+qNdAt3XOSSErcABq8o+MwAG=Auhem8sfog@mail.gmail.com>

On 11 July 2012 18:45, David Anderson <david at wordshell.net> wrote:
> - Your website is being advertised on national radio today, in 20 minutes
> time. There's a new version of a plugin available, which advertises a new
> feature that you don't use. Update immediately ... ?

If your site uptime is critical then you should have have a test
environment to test new code before deploying it.

> - Plugin X has a security hole that allows immediate and complete site
> take-over. Obviously, you should update immediately. But plugin Y just has a
> minor tweak to a feature you hardly use. You might want to take an hour or
> day to test it out. There's a difference in that situation. The metadata I'm
> proposing would help you know which is which.

Again, if your site is critical then you should test all new code
going onto it, regardless of whether it's a security fix or a new
feature. You shouldn't be deploying any untested code to a site 20
minutes before going live on national radio, regardless of what the
code changes are.

From highfive at jesserfriedman.com  Wed Jul 11 18:56:00 2012
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Wed, 11 Jul 2012 14:56:00 -0400
Subject: [wp-hackers] Cloning content from Master site into new sites on a
	WP Network
Message-ID: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>

Hello All

What's the best way to grab posts, pages, CPT's from a Master (top level)
site in a WP Network and clone it into another site?

I've created a page template from wp-signup.php to alter the "Add New Blog"
form.  Now the form query's all the "Products" custom posts in the Master
Site and displays them as checkboxes.  The goal here is that when a new
site is added to the network a potential admin can select the products they
offer from a Master list of products and that content (currently existing
in the Master Site) will be duplicated into the new site.

My question is should I be using wp_insert_post().  Since I have the id's
of all the CPT's in the master site and the ones that the admin has
selected it'd be easy enough to loop through the info and use
wp_insert_post to insert the posts into the new site.  The problem is I
can't seem to define the site id of the new site with wp_insert_post().

thanks for the help

Jesse

From otto at ottodestruct.com  Wed Jul 11 19:03:44 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 11 Jul 2012 14:03:44 -0500
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <4FFDBBAD.4010805@wordshell.net>
References: <4FFDBBAD.4010805@wordshell.net>
Message-ID: <CAD-FghyPm7j9NQB4Gx0Ge7WNi1a5ciWfAzbgpn3TCzacikS8sg@mail.gmail.com>

On Wed, Jul 11, 2012 at 12:45 PM, David Anderson <david at wordshell.net> wrote:
> - If "you should update any and all plugins immediately", then WordPress
> should just do it.

I agree, it should. Hopefully that's something we can add in the future.

-Otto

From otto at ottodestruct.com  Wed Jul 11 19:10:26 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 11 Jul 2012 14:10:26 -0500
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
Message-ID: <CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>

If this is a one-time thing, or something that they're not going to do
a whole lot, then you can use switch_to_blog and restore_current_blog.

Example:

switch_to_blog(1); // id number of the blog
.. do the stuff to get the post data you need here..
restore_current_blog();
.. loop to insert that data as posts or whatever...

The problem with switch_to_blog is that it has a fair amount of
overhead, and so you shouldn't do it too often or unnecessarily.

-Otto


On Wed, Jul 11, 2012 at 1:56 PM, Jesse Friedman
<highfive at jesserfriedman.com> wrote:
> Hello All
>
> What's the best way to grab posts, pages, CPT's from a Master (top level)
> site in a WP Network and clone it into another site?
>
> I've created a page template from wp-signup.php to alter the "Add New Blog"
> form.  Now the form query's all the "Products" custom posts in the Master
> Site and displays them as checkboxes.  The goal here is that when a new
> site is added to the network a potential admin can select the products they
> offer from a Master list of products and that content (currently existing
> in the Master Site) will be duplicated into the new site.
>
> My question is should I be using wp_insert_post().  Since I have the id's
> of all the CPT's in the master site and the ones that the admin has
> selected it'd be easy enough to loop through the info and use
> wp_insert_post to insert the posts into the new site.  The problem is I
> can't seem to define the site id of the new site with wp_insert_post().
>
> thanks for the help
>
> Jesse
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From dennen at gmail.com  Wed Jul 11 19:14:24 2012
From: dennen at gmail.com (Bill Dennen)
Date: Wed, 11 Jul 2012 15:14:24 -0400
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
Message-ID: <CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>

> The problem with switch_to_blog is that it has a fair amount of
> overhead, and so you shouldn't do it too often or unnecessarily.

Otto, thanks. This was my suggestion to Jesse too.

One thing that has puzzled me is the notion that switch_to_blog
shouldn't be used too often. How often is too often? Is it even
possible to measure such a thing?

Put it another way - when is it safe to use, and when is it not? At
what point does it affect performance?

Of course, every site is different. So there probably isn't a hard and
fast rule.

But, switch_to_blog is a very useful tool. I use it for many things --
and when combined with things like transients and other caching, I
don't notice any performance problems.

From highfive at jesserfriedman.com  Wed Jul 11 19:17:08 2012
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Wed, 11 Jul 2012 15:17:08 -0400
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
Message-ID: <CAGtTZ+YTbuO6E0guaXGJWKO4U+wOw1HSEWvrB6x+1kNk-g=uKw@mail.gmail.com>

Thanks Otto

It's only when someone creates a new site.  At this current rate I'd be
thrilled if it were happening 15 times a day.

Jesse

On Wed, Jul 11, 2012 at 3:10 PM, Otto <otto at ottodestruct.com> wrote:

> If this is a one-time thing, or something that they're not going to do
> a whole lot, then you can use switch_to_blog and restore_current_blog.
>
> Example:
>
> switch_to_blog(1); // id number of the blog
> .. do the stuff to get the post data you need here..
> restore_current_blog();
> .. loop to insert that data as posts or whatever...
>
> The problem with switch_to_blog is that it has a fair amount of
> overhead, and so you shouldn't do it too often or unnecessarily.
>
> -Otto
>
>
> On Wed, Jul 11, 2012 at 1:56 PM, Jesse Friedman
> <highfive at jesserfriedman.com> wrote:
> > Hello All
> >
> > What's the best way to grab posts, pages, CPT's from a Master (top level)
> > site in a WP Network and clone it into another site?
> >
> > I've created a page template from wp-signup.php to alter the "Add New
> Blog"
> > form.  Now the form query's all the "Products" custom posts in the Master
> > Site and displays them as checkboxes.  The goal here is that when a new
> > site is added to the network a potential admin can select the products
> they
> > offer from a Master list of products and that content (currently existing
> > in the Master Site) will be duplicated into the new site.
> >
> > My question is should I be using wp_insert_post().  Since I have the id's
> > of all the CPT's in the master site and the ones that the admin has
> > selected it'd be easy enough to loop through the info and use
> > wp_insert_post to insert the posts into the new site.  The problem is I
> > can't seem to define the site id of the new site with wp_insert_post().
> >
> > thanks for the help
> >
> > Jesse
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
thanks,

*Jesse Friedman*
508-507-9673 | jesserfriedman at gmail.com
http://jesserfriedman.com | @professor <http://twitter.com/professor>

From ipstenu at ipstenu.org  Wed Jul 11 19:24:16 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Wed, 11 Jul 2012 14:24:16 -0500
Subject: [wp-hackers] Cloning content from Master site into new sites on
	a WP Network
In-Reply-To: <CAGtTZ+YTbuO6E0guaXGJWKO4U+wOw1HSEWvrB6x+1kNk-g=uKw@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAGtTZ+YTbuO6E0guaXGJWKO4U+wOw1HSEWvrB6x+1kNk-g=uKw@mail.gmail.com>
Message-ID: <CE1AF416-BB28-40AA-815F-F973689A29B0@ipstenu.org>

Do you want to clone, or push to both sites at the same time? There are plugins that will publish to multiple blogs at once (broadcast plugins etc). While they seem to only do normal posts, I'm sure you could fork them to do your CPTs :)



On Jul 11, 2012, at 2:17 PM, Jesse Friedman <highfive at jesserfriedman.com> wrote:

> Thanks Otto
> 
> It's only when someone creates a new site.  At this current rate I'd be
> thrilled if it were happening 15 times a day.
> 
> Jesse
> 
> On Wed, Jul 11, 2012 at 3:10 PM, Otto <otto at ottodestruct.com> wrote:
> 
>> If this is a one-time thing, or something that they're not going to do
>> a whole lot, then you can use switch_to_blog and restore_current_blog.
>> 
>> Example:
>> 
>> switch_to_blog(1); // id number of the blog
>> .. do the stuff to get the post data you need here..
>> restore_current_blog();
>> .. loop to insert that data as posts or whatever...
>> 
>> The problem with switch_to_blog is that it has a fair amount of
>> overhead, and so you shouldn't do it too often or unnecessarily.
>> 
>> -Otto
>> 
>> 
>> On Wed, Jul 11, 2012 at 1:56 PM, Jesse Friedman
>> <highfive at jesserfriedman.com> wrote:
>>> Hello All
>>> 
>>> What's the best way to grab posts, pages, CPT's from a Master (top level)
>>> site in a WP Network and clone it into another site?
>>> 
>>> I've created a page template from wp-signup.php to alter the "Add New
>> Blog"
>>> form.  Now the form query's all the "Products" custom posts in the Master
>>> Site and displays them as checkboxes.  The goal here is that when a new
>>> site is added to the network a potential admin can select the products
>> they
>>> offer from a Master list of products and that content (currently existing
>>> in the Master Site) will be duplicated into the new site.
>>> 
>>> My question is should I be using wp_insert_post().  Since I have the id's
>>> of all the CPT's in the master site and the ones that the admin has
>>> selected it'd be easy enough to loop through the info and use
>>> wp_insert_post to insert the posts into the new site.  The problem is I
>>> can't seem to define the site id of the new site with wp_insert_post().
>>> 
>>> thanks for the help
>>> 
>>> Jesse
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> 
> 
> -- 
> thanks,
> 
> *Jesse Friedman*
> 508-507-9673 | jesserfriedman at gmail.com
> http://jesserfriedman.com | @professor <http://twitter.com/professor>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From kevinjohngallagher at hotmail.com  Wed Jul 11 19:31:01 2012
From: kevinjohngallagher at hotmail.com (Kevinjohn Gallagher)
Date: Wed, 11 Jul 2012 20:31:01 +0100
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <CAD-FghwN6kZa8zj5gS-UtqZgi82Om7xkoVBWT2L2UdpW6so20g@mail.gmail.com>
References: <4FFD23BC.7030902@wordshell.net>,
	<CAD-FghwN6kZa8zj5gS-UtqZgi82Om7xkoVBWT2L2UdpW6so20g@mail.gmail.com>
Message-ID: <BLU150-W504D7486B29E20821C3930CCD10@phx.gbl>



"Update. Immediately. Always."

Thats just kind of unrealistic in the real word brother.
I mean, it's not about plug-ins that ship with bugs, its that some plug-ins add random UI changes, move from being accessible ro inaccessible, or add in "news" meta boxes on the dashboard.
Take the latest Yoast's WP SEO. Brilliant plugin. Moving form 1.1.8 to 1.2.1 added 4 new columns of crap in the default post, that make it unreadable - especially if using a fairly standard for non-geeks 1024 monitor.
In a world where you're dealing with Governments, Education or Charity bodies - you can't go trusting plug-ins (or WP .0 releases) to not screw you over. And many of our "non-geeky" clients/users have learnt that.




> From: otto at ottodestruct.com
> Date: Wed, 11 Jul 2012 08:26:16 -0500
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Richer metadata for plugin versions
> 
> On Wed, Jul 11, 2012 at 1:57 AM, David Anderson <david at wordshell.net> wrote:
> > One challenge when maintaining a lot of websites is, to know which plugins
> > need to be updated immediately (e.g. a zero-day security hole), and which
> > not (perhaps on your client's website it is better to wait a week - some
> > plugin authors upload code with fatal errors in, or they add new bugs and
> > fix them 2 hours later, etc.).
> 
> You should update any and all plugins immediately when there is an
> update available, period.
> 
> If the plugin author has a habit of introducing new versions with
> bugs, then you should stop using that plugin and find a different one
> instead.
> 
> I do not see it as a good idea to introduce anything which even
> remotely suggests that it is okay to not update. It is not okay.
> Update. Immediately. Always.
> 
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
 		 	   		  

From otto at ottodestruct.com  Wed Jul 11 19:34:28 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 11 Jul 2012 14:34:28 -0500
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
Message-ID: <CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>

On Wed, Jul 11, 2012 at 2:14 PM, Bill Dennen <dennen at gmail.com> wrote:
> One thing that has puzzled me is the notion that switch_to_blog
> shouldn't be used too often. How often is too often? Is it even
> possible to measure such a thing?
>
> Put it another way - when is it safe to use, and when is it not? At
> what point does it affect performance?
>
> Of course, every site is different. So there probably isn't a hard and
> fast rule.
>
> But, switch_to_blog is a very useful tool. I use it for many things --
> and when combined with things like transients and other caching, I
> don't notice any performance problems.

It becomes a problem when it becomes a problem, basically. :) There's
no hard and fast rule.

The thing is that it's tempting to use it stupidly, in loops and such.
Like, if you wanted to get the latest 10 posts across a multisite
setup, then one might try to loop through all the sites, get the
latest posts from them, then order them up yourself. This might work
fine if you have 4 sites, but when you have 40, or 400, or 4000, then
the same code breaks miserably.

So use it sparingly, basically. Probably not something you want to be
doing on every page load.

-Otto

From highfive at jesserfriedman.com  Wed Jul 11 19:37:56 2012
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Wed, 11 Jul 2012 15:37:56 -0400
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <BLU150-W504D7486B29E20821C3930CCD10@phx.gbl>
References: <4FFD23BC.7030902@wordshell.net>
	<CAD-FghwN6kZa8zj5gS-UtqZgi82Om7xkoVBWT2L2UdpW6so20g@mail.gmail.com>
	<BLU150-W504D7486B29E20821C3930CCD10@phx.gbl>
Message-ID: <CAGtTZ+aki1fk1SLDci5NYn4px2v_JVyh97U-C19-vX5pZUUmkA@mail.gmail.com>

I would love to see plugin id's assigned by the extend API. Then each
plugin could have a unique identifier.

With a unique identifier and appended version number themes could
potentially request the use of specific plugins. Then once installed
initiate (with the admins permission of course) an install of those plugins.

This could lead to ways to tracking plugins more easily and open a door of
opportunities

Jesse

On Wed, Jul 11, 2012 at 3:31 PM, Kevinjohn Gallagher <
kevinjohngallagher at hotmail.com> wrote:

>
>
> "Update. Immediately. Always."
>
> Thats just kind of unrealistic in the real word brother.
> I mean, it's not about plug-ins that ship with bugs, its that some
> plug-ins add random UI changes, move from being accessible ro inaccessible,
> or add in "news" meta boxes on the dashboard.
> Take the latest Yoast's WP SEO. Brilliant plugin. Moving form 1.1.8 to
> 1.2.1 added 4 new columns of crap in the default post, that make it
> unreadable - especially if using a fairly standard for non-geeks 1024
> monitor.
> In a world where you're dealing with Governments, Education or Charity
> bodies - you can't go trusting plug-ins (or WP .0 releases) to not screw
> you over. And many of our "non-geeky" clients/users have learnt that.
>
>
>
>
> > From: otto at ottodestruct.com
> > Date: Wed, 11 Jul 2012 08:26:16 -0500
> > To: wp-hackers at lists.automattic.com
> > Subject: Re: [wp-hackers] Richer metadata for plugin versions
> >
> > On Wed, Jul 11, 2012 at 1:57 AM, David Anderson <david at wordshell.net>
> wrote:
> > > One challenge when maintaining a lot of websites is, to know which
> plugins
> > > need to be updated immediately (e.g. a zero-day security hole), and
> which
> > > not (perhaps on your client's website it is better to wait a week -
> some
> > > plugin authors upload code with fatal errors in, or they add new bugs
> and
> > > fix them 2 hours later, etc.).
> >
> > You should update any and all plugins immediately when there is an
> > update available, period.
> >
> > If the plugin author has a habit of introducing new versions with
> > bugs, then you should stop using that plugin and find a different one
> > instead.
> >
> > I do not see it as a good idea to introduce anything which even
> > remotely suggests that it is okay to not update. It is not okay.
> > Update. Immediately. Always.
> >
> > -Otto
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
thanks,

*Jesse Friedman*
508-507-9673 | jesserfriedman at gmail.com
http://jesserfriedman.com | @professor <http://twitter.com/professor>

From highfive at jesserfriedman.com  Wed Jul 11 19:38:41 2012
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Wed, 11 Jul 2012 15:38:41 -0400
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CE1AF416-BB28-40AA-815F-F973689A29B0@ipstenu.org>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAGtTZ+YTbuO6E0guaXGJWKO4U+wOw1HSEWvrB6x+1kNk-g=uKw@mail.gmail.com>
	<CE1AF416-BB28-40AA-815F-F973689A29B0@ipstenu.org>
Message-ID: <CAGtTZ+bU2T57Vi13ZW2mW4juDgizrOiOja0VLRv6_bbqEx-_cA@mail.gmail.com>

The content is already made and exists in the Master site. I want to clone
it from there into the new site.

Jesse

On Wed, Jul 11, 2012 at 3:24 PM, Mika A Epstein <ipstenu at ipstenu.org> wrote:

> Do you want to clone, or push to both sites at the same time? There are
> plugins that will publish to multiple blogs at once (broadcast plugins
> etc). While they seem to only do normal posts, I'm sure you could fork them
> to do your CPTs :)
>
>
>
> On Jul 11, 2012, at 2:17 PM, Jesse Friedman <highfive at jesserfriedman.com>
> wrote:
>
> > Thanks Otto
> >
> > It's only when someone creates a new site.  At this current rate I'd be
> > thrilled if it were happening 15 times a day.
> >
> > Jesse
> >
> > On Wed, Jul 11, 2012 at 3:10 PM, Otto <otto at ottodestruct.com> wrote:
> >
> >> If this is a one-time thing, or something that they're not going to do
> >> a whole lot, then you can use switch_to_blog and restore_current_blog.
> >>
> >> Example:
> >>
> >> switch_to_blog(1); // id number of the blog
> >> .. do the stuff to get the post data you need here..
> >> restore_current_blog();
> >> .. loop to insert that data as posts or whatever...
> >>
> >> The problem with switch_to_blog is that it has a fair amount of
> >> overhead, and so you shouldn't do it too often or unnecessarily.
> >>
> >> -Otto
> >>
> >>
> >> On Wed, Jul 11, 2012 at 1:56 PM, Jesse Friedman
> >> <highfive at jesserfriedman.com> wrote:
> >>> Hello All
> >>>
> >>> What's the best way to grab posts, pages, CPT's from a Master (top
> level)
> >>> site in a WP Network and clone it into another site?
> >>>
> >>> I've created a page template from wp-signup.php to alter the "Add New
> >> Blog"
> >>> form.  Now the form query's all the "Products" custom posts in the
> Master
> >>> Site and displays them as checkboxes.  The goal here is that when a new
> >>> site is added to the network a potential admin can select the products
> >> they
> >>> offer from a Master list of products and that content (currently
> existing
> >>> in the Master Site) will be duplicated into the new site.
> >>>
> >>> My question is should I be using wp_insert_post().  Since I have the
> id's
> >>> of all the CPT's in the master site and the ones that the admin has
> >>> selected it'd be easy enough to loop through the info and use
> >>> wp_insert_post to insert the posts into the new site.  The problem is I
> >>> can't seem to define the site id of the new site with wp_insert_post().
> >>>
> >>> thanks for the help
> >>>
> >>> Jesse
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >
> >
> >
> > --
> > thanks,
> >
> > *Jesse Friedman*
> > 508-507-9673 | jesserfriedman at gmail.com
> > http://jesserfriedman.com | @professor <http://twitter.com/professor>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
thanks,

*Jesse Friedman*
508-507-9673 | jesserfriedman at gmail.com
http://jesserfriedman.com | @professor <http://twitter.com/professor>

From otto at ottodestruct.com  Wed Jul 11 19:39:24 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 11 Jul 2012 14:39:24 -0500
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <BLU150-W504D7486B29E20821C3930CCD10@phx.gbl>
References: <4FFD23BC.7030902@wordshell.net>
	<CAD-FghwN6kZa8zj5gS-UtqZgi82Om7xkoVBWT2L2UdpW6so20g@mail.gmail.com>
	<BLU150-W504D7486B29E20821C3930CCD10@phx.gbl>
Message-ID: <CAD-FghwRZ4OymGTS5FbrcMbpKyTnuxNF9iXAAYYz4NZkdHwcoA@mail.gmail.com>

On Wed, Jul 11, 2012 at 2:31 PM, Kevinjohn Gallagher
<kevinjohngallagher at hotmail.com> wrote:
> "Update. Immediately. Always."
>
> Thats just kind of unrealistic in the real word brother.
> I mean, it's not about plug-ins that ship with bugs, its that some plug-ins add random UI changes, move from being accessible ro inaccessible, or add in "news" meta boxes on the dashboard.
> Take the latest Yoast's WP SEO. Brilliant plugin. Moving form 1.1.8 to 1.2.1 added 4 new columns of crap in the default post, that make it unreadable - especially if using a fairly standard for non-geeks 1024 monitor.
> In a world where you're dealing with Governments, Education or Charity bodies - you can't go trusting plug-ins (or WP .0 releases) to not screw you over. And many of our "non-geeky" clients/users have learnt that.

Then choose better plugins. Or write your own. Or fork them and make
them your own. You know of all these options, of course.

I'm just saying that it's a bad idea to suggest that not-updating is a
viable strategy. If you don't want to update, then fine, but also be
aware of the consequences as well.

It's better to update than to not-update and become increasingly
behind and increasingly insecure. The time between exploits becoming
public and those exploits being actively used for evil is as close to
zero as you can imagine.

-Otto

From highfive at jesserfriedman.com  Wed Jul 11 19:39:53 2012
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Wed, 11 Jul 2012 15:39:53 -0400
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
	<CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
Message-ID: <CAGtTZ+a9On6587bi7-Jac787=yNK4A3r-w3QBAaTaQnLSJGN=w@mail.gmail.com>

Otto

In this case I would know exactly what site I want to switch to and would
only happen when a new site is added.  Seems like it won't cause too much
of a headache in that instance.

Jesse

On Wed, Jul 11, 2012 at 3:34 PM, Otto <otto at ottodestruct.com> wrote:

> On Wed, Jul 11, 2012 at 2:14 PM, Bill Dennen <dennen at gmail.com> wrote:
> > One thing that has puzzled me is the notion that switch_to_blog
> > shouldn't be used too often. How often is too often? Is it even
> > possible to measure such a thing?
> >
> > Put it another way - when is it safe to use, and when is it not? At
> > what point does it affect performance?
> >
> > Of course, every site is different. So there probably isn't a hard and
> > fast rule.
> >
> > But, switch_to_blog is a very useful tool. I use it for many things --
> > and when combined with things like transients and other caching, I
> > don't notice any performance problems.
>
> It becomes a problem when it becomes a problem, basically. :) There's
> no hard and fast rule.
>
> The thing is that it's tempting to use it stupidly, in loops and such.
> Like, if you wanted to get the latest 10 posts across a multisite
> setup, then one might try to loop through all the sites, get the
> latest posts from them, then order them up yourself. This might work
> fine if you have 4 sites, but when you have 40, or 400, or 4000, then
> the same code breaks miserably.
>
> So use it sparingly, basically. Probably not something you want to be
> doing on every page load.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
thanks,

*Jesse Friedman*
508-507-9673 | jesserfriedman at gmail.com
http://jesserfriedman.com | @professor <http://twitter.com/professor>

From otto at ottodestruct.com  Wed Jul 11 19:40:31 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 11 Jul 2012 14:40:31 -0500
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <CAGtTZ+aki1fk1SLDci5NYn4px2v_JVyh97U-C19-vX5pZUUmkA@mail.gmail.com>
References: <4FFD23BC.7030902@wordshell.net>
	<CAD-FghwN6kZa8zj5gS-UtqZgi82Om7xkoVBWT2L2UdpW6so20g@mail.gmail.com>
	<BLU150-W504D7486B29E20821C3930CCD10@phx.gbl>
	<CAGtTZ+aki1fk1SLDci5NYn4px2v_JVyh97U-C19-vX5pZUUmkA@mail.gmail.com>
Message-ID: <CAD-FghzPREtyneUCAQXVCLOZG1AZ9WjpJxOPuU7r5P63wTZ6_w@mail.gmail.com>

On Wed, Jul 11, 2012 at 2:37 PM, Jesse Friedman
<highfive at jesserfriedman.com> wrote:
> I would love to see plugin id's assigned by the extend API. Then each
> plugin could have a unique identifier.
>
> With a unique identifier and appended version number themes could
> potentially request the use of specific plugins. Then once installed
> initiate (with the admins permission of course) an install of those plugins.

No need for unique ID's in order to do that.

http://ottopress.com/2012/themeplugin-dependencies/

-Otto

From otto at ottodestruct.com  Wed Jul 11 19:43:55 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 11 Jul 2012 14:43:55 -0500
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAGtTZ+a9On6587bi7-Jac787=yNK4A3r-w3QBAaTaQnLSJGN=w@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
	<CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
	<CAGtTZ+a9On6587bi7-Jac787=yNK4A3r-w3QBAaTaQnLSJGN=w@mail.gmail.com>
Message-ID: <CAD-Fghzj-HJfpAR7UnnFXYxM0o+0M-9hhjM2=z_P-N=CHN-mSg@mail.gmail.com>

On Wed, Jul 11, 2012 at 2:39 PM, Jesse Friedman
<highfive at jesserfriedman.com> wrote:
> Otto
>
> In this case I would know exactly what site I want to switch to and would
> only happen when a new site is added.  Seems like it won't cause too much
> of a headache in that instance.

Right, exactly. It's a limited case, you're not overusing it, should
work just fine. Make sure you have the PHP memory_limit set high
enough to hold the products you want to pull from the master site and
put into the subsite.

-Otto

From highfive at jesserfriedman.com  Wed Jul 11 19:49:18 2012
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Wed, 11 Jul 2012 15:49:18 -0400
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAD-Fghzj-HJfpAR7UnnFXYxM0o+0M-9hhjM2=z_P-N=CHN-mSg@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
	<CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
	<CAGtTZ+a9On6587bi7-Jac787=yNK4A3r-w3QBAaTaQnLSJGN=w@mail.gmail.com>
	<CAD-Fghzj-HJfpAR7UnnFXYxM0o+0M-9hhjM2=z_P-N=CHN-mSg@mail.gmail.com>
Message-ID: <CAGtTZ+ZSHR5gtpG8K_F8Ls0u4LJxUNhGM8A2_+vJGc0y9FmfmQ@mail.gmail.com>

thanks Otto!

On Wed, Jul 11, 2012 at 3:43 PM, Otto <otto at ottodestruct.com> wrote:

> On Wed, Jul 11, 2012 at 2:39 PM, Jesse Friedman
> <highfive at jesserfriedman.com> wrote:
> > Otto
> >
> > In this case I would know exactly what site I want to switch to and would
> > only happen when a new site is added.  Seems like it won't cause too much
> > of a headache in that instance.
>
> Right, exactly. It's a limited case, you're not overusing it, should
> work just fine. Make sure you have the PHP memory_limit set high
> enough to hold the products you want to pull from the master site and
> put into the subsite.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
thanks,

*Jesse Friedman*
508-507-9673 | jesserfriedman at gmail.com
http://jesserfriedman.com | @professor <http://twitter.com/professor>

From david at wordshell.net  Wed Jul 11 20:14:20 2012
From: david at wordshell.net (David Anderson)
Date: Wed, 11 Jul 2012 23:14:20 +0300
Subject: [wp-hackers] Richer metadata for plugin versions
Message-ID: <4FFDDE9C.1000705@wordshell.net>

>   I'm just saying that it's a bad idea to suggest that not-updating is a
>   viable strategy. If you don't want to update, then fine, but also be
>   aware of the consequences as well.
>
>   It's better to update than to not-update and become increasingly
>   behind and increasingly insecure. The time between exploits becoming
>   public and those exploits being actively used for evil is as close to
>   zero as you can imagine.

I think this is an argument *for* the extra meta-data. Personally I was 
imagining choosing between "update now" and "update in 3 or 4 days time 
when the early adopters have done some testing for me". If the plugin 
update is marked as a security update, then that gives me extra 
information to persuade me to upgrade *sooner* rather than later.

"This is a security update" has other uses too. If such meta-data were 
made compulsory, then it would greatly help hosting companies. They 
could auto-inform their clients of insecure sites. They could offer them 
commercial update services. They could complete audits with a reasonable 
level of assurance.
Here's a way to make them compulsory - have two tags in the readme.txt, 
"Secure versions" and "Insecure versions". The plugin author would have 
to list every version in one of the two. An unlisted version would not 
be offered up by the WordPress plugins directory (and insecure ones 
could be removed or made harder to reach).

At present, the meta-data can only help you answer the question "am I 
running the highest-numbered version?" But "highest numbered" and "best 
for me" are not identical questions. "Don't fix what is not broken" is 
good advice. Adding security information would be a big step forward IMO 
so that you can actually know whether something is broken.

David



-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From shastaw at gmail.com  Wed Jul 11 20:20:28 2012
From: shastaw at gmail.com (Shasta Willson)
Date: Wed, 11 Jul 2012 13:20:28 -0700
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAGtTZ+bU2T57Vi13ZW2mW4juDgizrOiOja0VLRv6_bbqEx-_cA@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAGtTZ+YTbuO6E0guaXGJWKO4U+wOw1HSEWvrB6x+1kNk-g=uKw@mail.gmail.com>
	<CE1AF416-BB28-40AA-815F-F973689A29B0@ipstenu.org>
	<CAGtTZ+bU2T57Vi13ZW2mW4juDgizrOiOja0VLRv6_bbqEx-_cA@mail.gmail.com>
Message-ID: <CAGguigf2-KJmf+kC6KZXLKs_c-dEAFvmKV0ov0KkRVT6UVOvAQ@mail.gmail.com>

On Wed, Jul 11, 2012 at 12:38 PM, Jesse Friedman
<highfive at jesserfriedman.com> wrote:
> The content is already made and exists in the Master site. I want to clone
> it from there into the new site.

I use this plugin to create network subdomain blogs based on a default
blog I set up: http://wordpress.org/extend/plugins/default-blog-options/

- Shasta

From highfive at jesserfriedman.com  Wed Jul 11 20:24:10 2012
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Wed, 11 Jul 2012 16:24:10 -0400
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
	<CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
Message-ID: <CAGtTZ+ZWms-e5gZBF0MX+VunNA_Ujakt9wsQ9=GAev2LGEYqEQ@mail.gmail.com>

One last question can you add custom post types to a new post in this
fashion IF those custom post types are defined by a plugin?

Since it's a new site and the switch_to_blog() function ignores plugins
will it return an error?

Jesse

On Wed, Jul 11, 2012 at 3:34 PM, Otto <otto at ottodestruct.com> wrote:

> On Wed, Jul 11, 2012 at 2:14 PM, Bill Dennen <dennen at gmail.com> wrote:
> > One thing that has puzzled me is the notion that switch_to_blog
> > shouldn't be used too often. How often is too often? Is it even
> > possible to measure such a thing?
> >
> > Put it another way - when is it safe to use, and when is it not? At
> > what point does it affect performance?
> >
> > Of course, every site is different. So there probably isn't a hard and
> > fast rule.
> >
> > But, switch_to_blog is a very useful tool. I use it for many things --
> > and when combined with things like transients and other caching, I
> > don't notice any performance problems.
>
> It becomes a problem when it becomes a problem, basically. :) There's
> no hard and fast rule.
>
> The thing is that it's tempting to use it stupidly, in loops and such.
> Like, if you wanted to get the latest 10 posts across a multisite
> setup, then one might try to loop through all the sites, get the
> latest posts from them, then order them up yourself. This might work
> fine if you have 4 sites, but when you have 40, or 400, or 4000, then
> the same code breaks miserably.
>
> So use it sparingly, basically. Probably not something you want to be
> doing on every page load.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
thanks,

*Jesse Friedman*
508-507-9673 | jesserfriedman at gmail.com
http://jesserfriedman.com | @professor <http://twitter.com/professor>

From chris at lod.com  Wed Jul 11 20:25:31 2012
From: chris at lod.com (Chris McCoy)
Date: Wed, 11 Jul 2012 16:25:31 -0400
Subject: [wp-hackers] Cloning content from Master site into new sites on
	a WP Network
In-Reply-To: <CAGtTZ+ZSHR5gtpG8K_F8Ls0u4LJxUNhGM8A2_+vJGc0y9FmfmQ@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
	<CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
	<CAGtTZ+a9On6587bi7-Jac787=yNK4A3r-w3QBAaTaQnLSJGN=w@mail.gmail.com>
	<CAD-Fghzj-HJfpAR7UnnFXYxM0o+0M-9hhjM2=z_P-N=CHN-mSg@mail.gmail.com>
	<CAGtTZ+ZSHR5gtpG8K_F8Ls0u4LJxUNhGM8A2_+vJGc0y9FmfmQ@mail.gmail.com>
Message-ID: <000301cd5fa3$51deb430$f59c1c90$@lod.com>

Its not a free solution, but it's a nice little plugin, I use it for exaclty
this.

http://wpebooks.com/replicator/

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Jesse Friedman
Sent: Wednesday, July 11, 2012 3:49 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Cloning content from Master site into new sites on
a WP Network

thanks Otto!

On Wed, Jul 11, 2012 at 3:43 PM, Otto <otto at ottodestruct.com> wrote:

> On Wed, Jul 11, 2012 at 2:39 PM, Jesse Friedman 
> <highfive at jesserfriedman.com> wrote:
> > Otto
> >
> > In this case I would know exactly what site I want to switch to and 
> > would only happen when a new site is added.  Seems like it won't 
> > cause too much of a headache in that instance.
>
> Right, exactly. It's a limited case, you're not overusing it, should 
> work just fine. Make sure you have the PHP memory_limit set high 
> enough to hold the products you want to pull from the master site and 
> put into the subsite.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



--
thanks,

*Jesse Friedman*
508-507-9673 | jesserfriedman at gmail.com
http://jesserfriedman.com | @professor <http://twitter.com/professor>
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From dennen at gmail.com  Wed Jul 11 20:28:20 2012
From: dennen at gmail.com (Bill Dennen)
Date: Wed, 11 Jul 2012 16:28:20 -0400
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAGtTZ+ZWms-e5gZBF0MX+VunNA_Ujakt9wsQ9=GAev2LGEYqEQ@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
	<CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
	<CAGtTZ+ZWms-e5gZBF0MX+VunNA_Ujakt9wsQ9=GAev2LGEYqEQ@mail.gmail.com>
Message-ID: <CAAFBVjhpfRcL4eMxO4z-Yjowu5GNeM6Kk2vxJxt7fqUomd829A@mail.gmail.com>

On Wed, Jul 11, 2012 at 4:24 PM, Jesse Friedman
<highfive at jesserfriedman.com> wrote:
> One last question can you add custom post types to a new post in this
> fashion IF those custom post types are defined by a plugin?
>
> Since it's a new site and the switch_to_blog() function ignores plugins
> will it return an error?

You might switch_to_blog and then register the post types and
taxonomies and then add the posts. This may not be best practice, but
it has worked for me.

From ehitter at gmail.com  Wed Jul 11 20:31:28 2012
From: ehitter at gmail.com (Erick Hitter)
Date: Wed, 11 Jul 2012 16:31:28 -0400
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAAFBVjhpfRcL4eMxO4z-Yjowu5GNeM6Kk2vxJxt7fqUomd829A@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
	<CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
	<CAGtTZ+ZWms-e5gZBF0MX+VunNA_Ujakt9wsQ9=GAev2LGEYqEQ@mail.gmail.com>
	<CAAFBVjhpfRcL4eMxO4z-Yjowu5GNeM6Kk2vxJxt7fqUomd829A@mail.gmail.com>
Message-ID: <CADAM20qSaz1Sgqd+AdaPotsVfRvGMtehiaNW=23DipoqEX8iBw@mail.gmail.com>

You could also move the post-type plugin into mu-plugins if it's something
all sites on the network will use.

Erick
On Jul 11, 2012 4:28 PM, "Bill Dennen" <dennen at gmail.com> wrote:

> On Wed, Jul 11, 2012 at 4:24 PM, Jesse Friedman
> <highfive at jesserfriedman.com> wrote:
> > One last question can you add custom post types to a new post in this
> > fashion IF those custom post types are defined by a plugin?
> >
> > Since it's a new site and the switch_to_blog() function ignores plugins
> > will it return an error?
>
> You might switch_to_blog and then register the post types and
> taxonomies and then add the posts. This may not be best practice, but
> it has worked for me.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wordpress at zed1.com  Wed Jul 11 20:51:15 2012
From: wordpress at zed1.com (Mike Little)
Date: Wed, 11 Jul 2012 21:51:15 +0100
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAGtTZ+ZWms-e5gZBF0MX+VunNA_Ujakt9wsQ9=GAev2LGEYqEQ@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
	<CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
	<CAGtTZ+ZWms-e5gZBF0MX+VunNA_Ujakt9wsQ9=GAev2LGEYqEQ@mail.gmail.com>
Message-ID: <CAMb54M1e8_7=TLQZ06AaAdmYx6JCm7YwUxRNGH377gdaNnkTMQ@mail.gmail.com>

On 11 July 2012 21:24, Jesse Friedman <highfive at jesserfriedman.com> wrote:

> One last question can you add custom post types to a new post in this
> fashion IF those custom post types are defined by a plugin?
>
> Since it's a new site and the switch_to_blog() function ignores plugins
> will it return an error?
>
>
You would have to ensure the required plugin was already active on the new
site. Network enabled or mu-plugins should ensure that.

One other thing to be aware of is that some actions you may call when
switched to another blog might increase the memory requirements hugely.

I recently had a problem where switching to another site and calling a
standard WordPress function get_option(). Unfortunately, WordPress
pre-loads almost all options when you first call it. This additional memory
allocation was too much for my set up. I needed to make a database call in
the end to grab that one option.

Mike
-- 
Mike Little
http://zed1.com/

From steve at sltaylor.co.uk  Wed Jul 11 21:15:24 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Wed, 11 Jul 2012 22:15:24 +0100
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <CAD-FghwRZ4OymGTS5FbrcMbpKyTnuxNF9iXAAYYz4NZkdHwcoA@mail.gmail.com>
References: <4FFD23BC.7030902@wordshell.net>
	<CAD-FghwN6kZa8zj5gS-UtqZgi82Om7xkoVBWT2L2UdpW6so20g@mail.gmail.com>
	<BLU150-W504D7486B29E20821C3930CCD10@phx.gbl>
	<CAD-FghwRZ4OymGTS5FbrcMbpKyTnuxNF9iXAAYYz4NZkdHwcoA@mail.gmail.com>
Message-ID: <CAGEuVU1KL0+jQmDDC5VXsA2DhKw=XL-UjhEx5VVsRS7tw=1Q0Q@mail.gmail.com>

> It's better to update than to not-update and become increasingly
> behind and increasingly insecure. The time between exploits becoming
> public and those exploits being actively used for evil is as close to
> zero as you can imagine.

On the one hand I agree, of course, if you don't want to update at
all, you can fork the plugin.

On the other hand, I totally appreciate the original poster's point
about wanting information. If an exploit is discovered and patched,
what Otto is saying is 100% understandable. But if a load of
not-yet-mature features are piled into a new release, you may not want
to risk lost time in upgrading. This may be time that (1) you don't
have, (2) your client can't afford / won't pay, or (3) both. Despite
this, you may not want to fork because you may want to upgrade at some
point for improvements and new features, when you've got time to
address the issues these may cause.

I tend to include feature release upgrades of plugins along with
batches of work. Then, general knock-on issues that may arise can be
caught as part of the QA process for that work - 2 birds, one stone
etc. I work mostly with charities with tight budgets, so this works
OK.

For myself, at the very least having a clear indicator - output
according to plugin metadata - as to whether the version you've got
installed is lacking a security patch included in a more recent
version, that would be *extremely* useful. I appreciate that this
metadata may not be used by many plugin authors, but it seems like a
good thing to pursue.

If the core suddenly forces auto-updates of plugins, I'll be quickly
coding a plugin to disable this. I mean, that's just a dumb idea on a
live site, completely taking the human element (i.e. installing
locally and testing when you find the time) out of the equation.

Steve

From ryannmicua at gmail.com  Thu Jul 12 01:56:05 2012
From: ryannmicua at gmail.com (Ryann Micua)
Date: Thu, 12 Jul 2012 09:56:05 +0800
Subject: [wp-hackers] Richer metadata for plugin versions
Message-ID: <4FFE2EB5.4010002@gmail.com>

sounds nice..

but, isn't this what the upgrade notice tag is for?

if devs can't be forced to use the upgrade notice tag, what's going to 
make the security tag any different?

and if this is made compulsory, what's going to stop devs from just 
listing all versions under the secure tag?

also, most users don't usually install "old" versions unless they need 
one to be compatible with their installed wp version for server 
compatibility reasons (php4)

So, Otto's point is, if a plugin has the following versions: 2.1, 2.2, 
2.3, 2.4  and version 2.3 is marked as a security update but the latest 
version 2.4 isn't, then that's sort of like saying "it's okay not to 
update to v2.4"

and as I've mentioned before, if the dev were to tag the latest version 
2.4 as a security update (if he was kind enough to), then the dev could 
just as easily have done it using the Upgrade Notice tag..

and if this were made compulsory, then what's going to stop a dev from 
listing every version as secure? and when that becomes an issue, I'm 
pretty sure someone will come up with a new scheme to make it *easy* for 
users to make *intelligent* decisions..

> If the plugin
> update is marked as a security update, then that gives me extra
> information to persuade me to upgrade*sooner*  rather than later.

> Here's a way to make them compulsory - have two tags in the readme.txt,
> "Secure versions" and "Insecure versions". The plugin author would have
> to list every version in one of the two. An unlisted version would not
> be offered up by the WordPress plugins directory (and insecure ones
> could be removed or made harder to reach).



-- 
*Ryann Micua*
/Web Developer/
------------------------------------------------------------------------

Website: /www.pogidude.com/
Skype: /rmicua/
Mobile: /+639169273059/


From dianakac at gmail.com  Thu Jul 12 02:21:02 2012
From: dianakac at gmail.com (Diana K. C)
Date: Wed, 11 Jul 2012 23:21:02 -0300
Subject: [wp-hackers] How to Exclude shortcode in databse
Message-ID: <00a901cd5fd4$fd6d5a00$2200a8c0@TITA>

That't quick I think:

I found some SQL commands around, but all deal with fix shortcodes like [tweet], I need to exlcude shortcodes like [atgallery id="144"], [tagellery = "12"] etc

Thanks for help!

From chris at lod.com  Thu Jul 12 05:16:32 2012
From: chris at lod.com (Chris McCoy)
Date: Thu, 12 Jul 2012 01:16:32 -0400
Subject: [wp-hackers] How to Exclude shortcode in databse
In-Reply-To: <00a901cd5fd4$fd6d5a00$2200a8c0@TITA>
References: <00a901cd5fd4$fd6d5a00$2200a8c0@TITA>
Message-ID: <002601cd5fed$800fcf20$802f6d60$@lod.com>

Kinda hacky way of doing it, but here is something I did a while back

function remove_shortcode_from_db($shortcode = 'button') {

    global $wpdb;

    $posts = $wpdb->get_results("SELECT ID,post_title,post_content FROM
$wpdb->posts");
    $regex =
'/\[(\[?)('.$shortcode.')\b([^\]\/]*(?:\/(?!\])[^\]\/]*)*?)(?:(\/)\]|\](?:([
^\[]*+(?:\[(?!\/\2\])[^\[]*+)*+)\[\/\2\])?)(\]?)/s';

    foreach($posts as $post) {
        $final = preg_replace($regex,'',$post->post_content);
        $change = $wpdb->update( $wpdb->posts, array('post_content' =>
$final), array('ID' => $post->ID));
    }
}

Will accept any parameter being atgallery will look for all attribs and
remove

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Diana K. C
Sent: Wednesday, July 11, 2012 10:21 PM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] How to Exclude shortcode in databse

That't quick I think:

I found some SQL commands around, but all deal with fix shortcodes like
[tweet], I need to exlcude shortcodes like [atgallery id="144"], [tagellery
= "12"] etc

Thanks for help!
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From david at wordshell.net  Thu Jul 12 05:30:09 2012
From: david at wordshell.net (David Anderson)
Date: Thu, 12 Jul 2012 08:30:09 +0300
Subject: [wp-hackers] Richer metadata for plugin versions
Message-ID: <4FFE60E1.6050905@wordshell.net>


> sounds nice..
>
> but, isn't this what the upgrade notice tag is for?
>
In part, but mainly not. The "upgrade notice" is an arbitrary free-form 
text field. It has no structure and cannot be machine-parsed. It 
requires a human being to interpret its meaning. It is not like the 
existing compatibility metadata which is structured and parsable.

I was proposing machine-parsable, fixed-format meta data which can be 
used to programmatically resolve the question, "does this version of the 
plugin have known security problems?", just as we presently have 
meta-data which can deterministically resolve the question "is this 
version of the plugin compatible with my version of WordPress?".

> if devs can't be forced to use the upgrade notice tag, what's going to
> make the security tag any different?
If the tag is optional, then that provides an opportunity for plugin 
authors to differentiate their offerings by providing the data. 
Possession of this tag will be one more indicator of whether you're 
using a quality plugin or not. Failure to include it will be a data 
point that the plugin author sees security as a second-class concern. 
That's a useful data point for users evaluating plugins. Win-win.

> and if this is made compulsory, what's going to stop devs from just
> listing all versions under the secure tag?
>
Nothing, but so what? All meta data fields can be abused, but that 
doesn't mean they are all undesirable. If a dev fixes a security problem 
in a new release, and yet for some weird reason decides to list the 
previous version as secure, then that's also valuable data that the 
community can respond to - you then know that the dev treats security as 
a PR exercise instead of taking it seriously. People can blog that fact.

> also, most users don't usually install "old" versions unless they need
> one to be compatible with their installed wp version for server
> compatibility reasons (php4)
Adding new meta-data allows the user to make more informed decisions. If 
the user makes bad decisions, that is up to him. The intended purpose of 
the meta-data I was suggesting was not to advise the user "don't 
update". Personally I had in mind that it would give me a better idea of 
how quickly I need to think about updating. (Can my site be broken into 
right now? Should I test the new version for 5 minutes before deploying? 
Or is it a bunch of new features I don't urgently need, and I can be 
more leisurely in my testing?). Meta-data doesn't force anyone into any 
decisions; it better informs them for better decisions.
>
> So, Otto's point is, if a plugin has the following versions: 2.1, 2.2,
> 2.3, 2.4  and version 2.3 is marked as a security update but the latest
> version 2.4 isn't, then that's sort of like saying "it's okay not to
> update to v2.4"
No, that's confusing between meta-data and the interpretation of 
meta-data. The data point "this release is a security release" would 
mean "update sooner rather than later" to most sane users, but the data 
point "this release is not a security release" does not imply "don't 
bother installing it" - that's an over-interpretation.

This issue is one that most architects of update systems have faced. I 
use Fedora; the XML metadata for the package repositories now include 
security meta-data. I can delegate my update decisions to a machine, by 
adding --security to my update command line; and in Africa, where 
all-you-can-eat Internet is expensive (I'm on pay as you go), that's a 
valid concern. I don't want to pay $5 for every update available to then 
find it broke my machine; I want to be more conservative.
If you use Windows update, it classifies updates as to whether they are 
security or not. There is a trade off of risks between the time taken to 
update and the need to evaluate the quality of updates. Enriching the 
metadata will improve the lives of WP admins by giving them higher 
quality data to base this decision upon.

Anyway... am I going about this the right way? Who do I actually need to 
persuade? I'm thinking of putting together a web-page of pros-and-cons, 
FAQs; but who would I need to present it to anyway??

David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From tcbarrett at gmail.com  Thu Jul 12 07:20:17 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Thu, 12 Jul 2012 08:20:17 +0100
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <CAD-FghyPm7j9NQB4Gx0Ge7WNi1a5ciWfAzbgpn3TCzacikS8sg@mail.gmail.com>
References: <4FFDBBAD.4010805@wordshell.net>
	<CAD-FghyPm7j9NQB4Gx0Ge7WNi1a5ciWfAzbgpn3TCzacikS8sg@mail.gmail.com>
Message-ID: <CAEgmxaZM04tbOORYtO7k4wkUdfYUNOcsf3_=p5zS7NuhFDssJg@mail.gmail.com>

On 11 July 2012 20:03, Otto <otto at ottodestruct.com> wrote:

> On Wed, Jul 11, 2012 at 12:45 PM, David Anderson <david at wordshell.net>
> wrote:
> > - If "you should update any and all plugins immediately", then WordPress
> > should just do it.
>
> I agree, it should. Hopefully that's something we can add in the future.


That's got to be a pretty easy thing to implement. Why haven't you done it?

You know when there is an update, and you've written the button that does
the update, just 'auto-click' it, as it were.

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From wordpress at dd32.id.au  Thu Jul 12 07:25:14 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Thu, 12 Jul 2012 17:25:14 +1000
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <CAEgmxaZM04tbOORYtO7k4wkUdfYUNOcsf3_=p5zS7NuhFDssJg@mail.gmail.com>
References: <4FFDBBAD.4010805@wordshell.net>
	<CAD-FghyPm7j9NQB4Gx0Ge7WNi1a5ciWfAzbgpn3TCzacikS8sg@mail.gmail.com>
	<CAEgmxaZM04tbOORYtO7k4wkUdfYUNOcsf3_=p5zS7NuhFDssJg@mail.gmail.com>
Message-ID: <CAL4EHfnV0ssjVh24B8Y2ENVsMeaD7RWj0c6=D+MRYJFHBYC0Lg@mail.gmail.com>

On 12 July 2012 17:20, Tom Barrett <tcbarrett at gmail.com> wrote:
> On 11 July 2012 20:03, Otto <otto at ottodestruct.com> wrote:
>
>> On Wed, Jul 11, 2012 at 12:45 PM, David Anderson <david at wordshell.net>
>> wrote:
>> > - If "you should update any and all plugins immediately", then WordPress
>> > should just do it.
>>
>> I agree, it should. Hopefully that's something we can add in the future.
>
>
> That's got to be a pretty easy thing to implement. Why haven't you done it?
>
> You know when there is an update, and you've written the button that does
> the update, just 'auto-click' it, as it were.

Little more complicated than that, you've got race conditions to deal
with, security implications from bad plugin updates, people who don't
want things happening automatically such as that, accounts that
require FTP access first, cases where users are using the site at the
time, and updateing the plugin causes the site to be unavailable for a
few seconds, cases where it causes the site to fatal error due to a
bad plugin update (either caused by WordPress, or the Plugin
Developer)..
The list goes on.
It's not impossible, but it's also not been in the best interest of
WordPress users to add such a functionality yet (If people so wanted
to enable that).

(Please, can everyone NOT post pointless "NO! Never add auto-update
functions to WordPress" posts to keep the list quiet? you can voice
your opinions later down the line when/if it's ever implemented in
core at that time.. )

From tcbarrett at gmail.com  Thu Jul 12 07:37:11 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Thu, 12 Jul 2012 08:37:11 +0100
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <CAL4EHfnV0ssjVh24B8Y2ENVsMeaD7RWj0c6=D+MRYJFHBYC0Lg@mail.gmail.com>
References: <4FFDBBAD.4010805@wordshell.net>
	<CAD-FghyPm7j9NQB4Gx0Ge7WNi1a5ciWfAzbgpn3TCzacikS8sg@mail.gmail.com>
	<CAEgmxaZM04tbOORYtO7k4wkUdfYUNOcsf3_=p5zS7NuhFDssJg@mail.gmail.com>
	<CAL4EHfnV0ssjVh24B8Y2ENVsMeaD7RWj0c6=D+MRYJFHBYC0Lg@mail.gmail.com>
Message-ID: <CAEgmxaZZq5gJEnM4kMk_a=qvoOArj6fDNFN+dOUK=qb1vU+qbg@mail.gmail.com>

On 12 July 2012 08:25, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:

> > You know when there is an update, and you've written the button that does
> > the update, just 'auto-click' it, as it were.
>
> Little more complicated than that, you've got race conditions to deal
> with, security implications from bad plugin updates, people who don't
> want things happening automatically such as that, accounts that
> require FTP access first, cases where users are using the site at the
> time, and updateing the plugin causes the site to be unavailable for a
> few seconds, cases where it causes the site to fatal error due to a
> bad plugin update (either caused by WordPress, or the Plugin
> Developer)..
> The list goes on.
> It's not impossible, but it's also not been in the best interest of
> WordPress users to add such a functionality yet (If people so wanted
> to enable that).
>

Isn't that part of David's reason for posting in the first place?


> (Please, can everyone NOT post pointless "NO! Never add auto-update
> functions to WordPress" posts to keep the list quiet? you can voice
> your opinions later down the line when/if it's ever implemented in
> core at that time.. )


Too many double negatives - am I falling foul of this?

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From steve at sltaylor.co.uk  Thu Jul 12 09:52:50 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Thu, 12 Jul 2012 10:52:50 +0100
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <CAL4EHfnV0ssjVh24B8Y2ENVsMeaD7RWj0c6=D+MRYJFHBYC0Lg@mail.gmail.com>
References: <4FFDBBAD.4010805@wordshell.net>
	<CAD-FghyPm7j9NQB4Gx0Ge7WNi1a5ciWfAzbgpn3TCzacikS8sg@mail.gmail.com>
	<CAEgmxaZM04tbOORYtO7k4wkUdfYUNOcsf3_=p5zS7NuhFDssJg@mail.gmail.com>
	<CAL4EHfnV0ssjVh24B8Y2ENVsMeaD7RWj0c6=D+MRYJFHBYC0Lg@mail.gmail.com>
Message-ID: <CAGEuVU23QDYg-ZfrGxctvkvJJqxC5vm+s=i-1Wwyc16EBdL8Ew@mail.gmail.com>

> (Please, can everyone NOT post pointless "NO! Never add auto-update
> functions to WordPress" posts to keep the list quiet? you can voice
> your opinions later down the line when/if it's ever implemented in
> core at that time.. )

I posted a reasoned discussion of this, I haven't seen loads of
others. Certainly no stream of mindless ones that would prompt this
kind of response.

Maybe I missed these somehow, but I'm not comfortable with the logic
here. "Don't argue against new core features until they're
implemented"? Where's the forum where we do argue against them before
they're implemented? Or does the WP community have zero say in the
direction of WordPress, even when it comes to features that will
drastically affect developers' working lives?

I'm not trying to start any kind of irate meta-discussion - this seems
like a pretty crucial general issue and I'm genuinely curious to know
what the ground rules are here.

As to the feature itself, the automated upgrade of plugins, your own
"the list goes on" catalogue of reasons why it's not been implemented
yet pretty much sums up why it's a terrible idea. I can't see anything
like it in http://wordpress.org/extend/ideas/, so it's obviously not
in demand. Why the suggestion that it might be slipped in any time
soon in a top-down fashion?

It would naturally need disabling on all live sites, because, as has
been reiterated here a few times, updates should always be implemented
and tested on staging environments first. Which again flags it as a
no-brainer to never consider as a core feature idea. I mean, WP core
updates are much more important, but they're not automated. There's
maybe a stronger case for that - but even then, let's not mention
Chrome etc. We're talking about millions of live, customized websites,
not a desktop app. We need to test on staging first, according to our
own varying schedules.

Maybe a few people want their updates automated. Sounds like a cue for
a plugin to me :)

Steve

From highfive at jesserfriedman.com  Thu Jul 12 11:41:56 2012
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Thu, 12 Jul 2012 07:41:56 -0400
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAD-Fghzj-HJfpAR7UnnFXYxM0o+0M-9hhjM2=z_P-N=CHN-mSg@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
	<CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
	<CAGtTZ+a9On6587bi7-Jac787=yNK4A3r-w3QBAaTaQnLSJGN=w@mail.gmail.com>
	<CAD-Fghzj-HJfpAR7UnnFXYxM0o+0M-9hhjM2=z_P-N=CHN-mSg@mail.gmail.com>
Message-ID: <CAGtTZ+bv-=rUQ_RnVQ-u7C5ySCP8ArZtZRoRFCuz67kAf2zn1g@mail.gmail.com>

Thanks everyone for the help yesterday. One more question.

I'm running into an issue. After the switch I insert all the posts and it
works perfectly. However something is happening with that specific new site
because the dashboard will load amazingly slow. Oddly enough it's just that
one site. I can visit the rest of the network no problem. I'm guessing that
it's the restore_current_blog(); not working right (my fault).  If I
restart Apache I'm good to go and all the pages are there.

Before I attempt to tackle this issue I started to think about cloning the
posts using mySQL and PHP? Would it be a bad idea to just connect directly
to the database, clone the master site wp_posts table and be done with it?

Jesse

On Wed, Jul 11, 2012 at 3:43 PM, Otto <otto at ottodestruct.com> wrote:

> On Wed, Jul 11, 2012 at 2:39 PM, Jesse Friedman
> <highfive at jesserfriedman.com> wrote:
> > Otto
> >
> > In this case I would know exactly what site I want to switch to and would
> > only happen when a new site is added.  Seems like it won't cause too much
> > of a headache in that instance.
>
> Right, exactly. It's a limited case, you're not overusing it, should
> work just fine. Make sure you have the PHP memory_limit set high
> enough to hold the products you want to pull from the master site and
> put into the subsite.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
thanks,

*Jesse Friedman*
508-507-9673 | jesserfriedman at gmail.com
http://jesserfriedman.com | @professor <http://twitter.com/professor>

From moraleida at gmail.com  Thu Jul 12 12:36:59 2012
From: moraleida at gmail.com (Ricardo Moraleida)
Date: Thu, 12 Jul 2012 09:36:59 -0300
Subject: [wp-hackers] How to Exclude shortcode in databse
In-Reply-To: <00a901cd5fd4$fd6d5a00$2200a8c0@TITA>
References: <00a901cd5fd4$fd6d5a00$2200a8c0@TITA>
Message-ID: <CAF_HY=qoQ8KMYJa3AVo+4=QqsNFq+Dr_GtEZCF=txV+iZvw86g@mail.gmail.com>

I think i've used this plugin once ->
http://wordpress.org/extend/plugins/search-regex/screenshots/

It would work with some simple regex like: ^\[\atgallery\ \id="\d+"\]$
(tested on on Regex Tester: http://regexpal.com)

Ricardo Moraleida



2012/7/11 Diana K. C <dianakac at gmail.com>

> That't quick I think:
>
> I found some SQL commands around, but all deal with fix shortcodes like
> [tweet], I need to exlcude shortcodes like [atgallery id="144"], [tagellery
> = "12"] etc
>
> Thanks for help!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From highfive at jesserfriedman.com  Thu Jul 12 12:44:36 2012
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Thu, 12 Jul 2012 08:44:36 -0400
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAGtTZ+bv-=rUQ_RnVQ-u7C5ySCP8ArZtZRoRFCuz67kAf2zn1g@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
	<CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
	<CAGtTZ+a9On6587bi7-Jac787=yNK4A3r-w3QBAaTaQnLSJGN=w@mail.gmail.com>
	<CAD-Fghzj-HJfpAR7UnnFXYxM0o+0M-9hhjM2=z_P-N=CHN-mSg@mail.gmail.com>
	<CAGtTZ+bv-=rUQ_RnVQ-u7C5ySCP8ArZtZRoRFCuz67kAf2zn1g@mail.gmail.com>
Message-ID: <CAGtTZ+ZR0N+NpncgWyHgm5UMPLX03VeKK6cdnziGQqdQrp_-_Q@mail.gmail.com>

After all that from yesterday I simply wrote this today:

$new_mysql_query = 'REPLACE INTO ntw_'.$newsiteid.'_posts SELECT * FROM
ntw_posts WHERE post_type="custom post type";';
$result = mysql_query($new_mysql_query);

It works perfectly and is very fast.  Is this general bad practice and if
it is could you explain why?

Jesse

On Thu, Jul 12, 2012 at 7:41 AM, Jesse Friedman <highfive at jesserfriedman.com
> wrote:

> Thanks everyone for the help yesterday. One more question.
>
> I'm running into an issue. After the switch I insert all the posts and it
> works perfectly. However something is happening with that specific new site
> because the dashboard will load amazingly slow. Oddly enough it's just that
> one site. I can visit the rest of the network no problem. I'm guessing that
> it's the restore_current_blog(); not working right (my fault).  If I
> restart Apache I'm good to go and all the pages are there.
>
> Before I attempt to tackle this issue I started to think about cloning the
> posts using mySQL and PHP? Would it be a bad idea to just connect directly
> to the database, clone the master site wp_posts table and be done with it?
>
> Jesse
>
> On Wed, Jul 11, 2012 at 3:43 PM, Otto <otto at ottodestruct.com> wrote:
>
>> On Wed, Jul 11, 2012 at 2:39 PM, Jesse Friedman
>> <highfive at jesserfriedman.com> wrote:
>> > Otto
>> >
>> > In this case I would know exactly what site I want to switch to and
>> would
>> > only happen when a new site is added.  Seems like it won't cause too
>> much
>> > of a headache in that instance.
>>
>> Right, exactly. It's a limited case, you're not overusing it, should
>> work just fine. Make sure you have the PHP memory_limit set high
>> enough to hold the products you want to pull from the master site and
>> put into the subsite.
>>
>> -Otto
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> thanks,
>
> *Jesse Friedman*
> 508-507-9673 | jesserfriedman at gmail.com
> http://jesserfriedman.com | @professor <http://twitter.com/professor>
>



-- 
thanks,

*Jesse Friedman*
508-507-9673 | jesserfriedman at gmail.com
http://jesserfriedman.com | @professor <http://twitter.com/professor>

From wordpress at zed1.com  Thu Jul 12 13:13:47 2012
From: wordpress at zed1.com (Mike Little)
Date: Thu, 12 Jul 2012 14:13:47 +0100
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAGtTZ+ZR0N+NpncgWyHgm5UMPLX03VeKK6cdnziGQqdQrp_-_Q@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
	<CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
	<CAGtTZ+a9On6587bi7-Jac787=yNK4A3r-w3QBAaTaQnLSJGN=w@mail.gmail.com>
	<CAD-Fghzj-HJfpAR7UnnFXYxM0o+0M-9hhjM2=z_P-N=CHN-mSg@mail.gmail.com>
	<CAGtTZ+bv-=rUQ_RnVQ-u7C5ySCP8ArZtZRoRFCuz67kAf2zn1g@mail.gmail.com>
	<CAGtTZ+ZR0N+NpncgWyHgm5UMPLX03VeKK6cdnziGQqdQrp_-_Q@mail.gmail.com>
Message-ID: <CAMb54M1WtQujY9O5m0+p_TwCuo0uyt9_7KUbEP55Ra24Rz4N3g@mail.gmail.com>

On 12 July 2012 13:44, Jesse Friedman <highfive at jesserfriedman.com> wrote:

> After all that from yesterday I simply wrote this today:
>
> $new_mysql_query = 'REPLACE INTO ntw_'.$newsiteid.'_posts SELECT * FROM
> ntw_posts WHERE post_type="custom post type";';
> $result = mysql_query($new_mysql_query);
>
> It works perfectly and is very fast.  Is this general bad practice and if
> it is could you explain why?
>
>
None of the metadata will be transferred (if there is any it could be
things like prices, weights, etc). If there are any taxonomy terms
associated with the products (keywords, colours, product categories, etc),
those won't be transferred either.

You originally mentioned users, selecting which products they wanted, now
they get everything?

Mike
-- 
Mike Little
http://zed1.com/

From highfive at jesserfriedman.com  Thu Jul 12 13:29:11 2012
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Thu, 12 Jul 2012 09:29:11 -0400
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAMb54M1WtQujY9O5m0+p_TwCuo0uyt9_7KUbEP55Ra24Rz4N3g@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
	<CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
	<CAGtTZ+a9On6587bi7-Jac787=yNK4A3r-w3QBAaTaQnLSJGN=w@mail.gmail.com>
	<CAD-Fghzj-HJfpAR7UnnFXYxM0o+0M-9hhjM2=z_P-N=CHN-mSg@mail.gmail.com>
	<CAGtTZ+bv-=rUQ_RnVQ-u7C5ySCP8ArZtZRoRFCuz67kAf2zn1g@mail.gmail.com>
	<CAGtTZ+ZR0N+NpncgWyHgm5UMPLX03VeKK6cdnziGQqdQrp_-_Q@mail.gmail.com>
	<CAMb54M1WtQujY9O5m0+p_TwCuo0uyt9_7KUbEP55Ra24Rz4N3g@mail.gmail.com>
Message-ID: <CAGtTZ+YqKv8FZODsem5qmzFLUrT0VO6BSF3cHiqxZXQfowcXeQ@mail.gmail.com>

Thanks Mike

I can query the database to make they are only getting what they wanted and
I can bring over taxonomy and meta data as well.  My question now is, is
writing a mysql query like this bad form?  It's just so much faster and
more efficient.

thanks,

Jesse

On Thu, Jul 12, 2012 at 9:13 AM, Mike Little <wordpress at zed1.com> wrote:

> On 12 July 2012 13:44, Jesse Friedman <highfive at jesserfriedman.com> wrote:
>
> > After all that from yesterday I simply wrote this today:
> >
> > $new_mysql_query = 'REPLACE INTO ntw_'.$newsiteid.'_posts SELECT * FROM
> > ntw_posts WHERE post_type="custom post type";';
> > $result = mysql_query($new_mysql_query);
> >
> > It works perfectly and is very fast.  Is this general bad practice and if
> > it is could you explain why?
> >
> >
> None of the metadata will be transferred (if there is any it could be
> things like prices, weights, etc). If there are any taxonomy terms
> associated with the products (keywords, colours, product categories, etc),
> those won't be transferred either.
>
> You originally mentioned users, selecting which products they wanted, now
> they get everything?
>
> Mike
> --
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
thanks,

*Jesse Friedman*
508-507-9673 | jesserfriedman at gmail.com
http://jesserfriedman.com | @professor <http://twitter.com/professor>

From wordpress at zed1.com  Thu Jul 12 13:44:42 2012
From: wordpress at zed1.com (Mike Little)
Date: Thu, 12 Jul 2012 14:44:42 +0100
Subject: [wp-hackers] Cloning content from Master site into new sites on
 a WP Network
In-Reply-To: <CAGtTZ+YqKv8FZODsem5qmzFLUrT0VO6BSF3cHiqxZXQfowcXeQ@mail.gmail.com>
References: <CAGtTZ+bKOoGSRVKBezynDPcb-N3OuR160wPPyk490ziu_2y7Rg@mail.gmail.com>
	<CAD-FghwfZ0v_puGaJzSnkGBG9iCWp76tNZSKASv2=R61nPP9NA@mail.gmail.com>
	<CAAFBVjgiRBrtRorQF_285ig1e8GsdEZ2d6NHnc72u2oBq+Yh=g@mail.gmail.com>
	<CAD-Fghx9xvSNb1A7orY1T8aSF=4rJqCeJ2290br-d+jBpSVc_g@mail.gmail.com>
	<CAGtTZ+a9On6587bi7-Jac787=yNK4A3r-w3QBAaTaQnLSJGN=w@mail.gmail.com>
	<CAD-Fghzj-HJfpAR7UnnFXYxM0o+0M-9hhjM2=z_P-N=CHN-mSg@mail.gmail.com>
	<CAGtTZ+bv-=rUQ_RnVQ-u7C5ySCP8ArZtZRoRFCuz67kAf2zn1g@mail.gmail.com>
	<CAGtTZ+ZR0N+NpncgWyHgm5UMPLX03VeKK6cdnziGQqdQrp_-_Q@mail.gmail.com>
	<CAMb54M1WtQujY9O5m0+p_TwCuo0uyt9_7KUbEP55Ra24Rz4N3g@mail.gmail.com>
	<CAGtTZ+YqKv8FZODsem5qmzFLUrT0VO6BSF3cHiqxZXQfowcXeQ@mail.gmail.com>
Message-ID: <CAMb54M2HpJgaqptP+V2GRNzjHH3_KR7RP2GPDM5b6+XHVYwMpw@mail.gmail.com>

On 12 July 2012 14:29, Jesse Friedman <highfive at jesserfriedman.com> wrote:

> Thanks Mike
>
> I can query the database to make they are only getting what they wanted and
> I can bring over taxonomy and meta data as well.  My question now is, is
> writing a mysql query like this bad form?  It's just so much faster and
> more efficient.
>
>
I would suggest using the $wpdb object and running your query through the
class' prepare() function, especially if it might contain user input.
Why use replace into? If this only happend once on a new site, you
shouldn't have any existing records to match.
Also bear in mind that your SQL is copying over post ID's (and will copy
over meta and term ID's too), so the post numbering will likely look a
little weird.


Mike
-- 
Mike Little
http://zed1.com/

From ryannmicua at gmail.com  Thu Jul 12 14:47:59 2012
From: ryannmicua at gmail.com (Ryann Micua)
Date: Thu, 12 Jul 2012 22:47:59 +0800
Subject: [wp-hackers] Richer metadata for plugin versions
In-Reply-To: <mailman.31798.1342071030.1433.wp-hackers@lists.automattic.com>
References: <mailman.31798.1342071030.1433.wp-hackers@lists.automattic.com>
Message-ID: <4FFEE39F.7090207@gmail.com>

when you put it this way, it starts to make sense now :) especially when 
you think about the "machine-parsable" part.. we could then have a 
plugin that sends out an email when a *security update* for a plugin is 
released..

when you think about this, what David is proposing is differentiating 
*critical* updates (i.e. security fixes) from *normal* (can't think of 
the right term) plugin updates (i.e. new features, ui enhancements)

right now, you really can't tell a critical update from a normal update 
without reading through the notices (if ever there are any).. yes, I do 
agree that site owners should generally update *all* their plugins as 
soon as they can but the way I see it, right now, all plugin updates are 
considered critical and *immediately* be updated..

this may not matter much to site owners who only have a few plugins 
installed or who have a lot of time to test and evaluate each plugin.. 
but I do see David's point, especially the 
"conserve-internet-time-because-it's-so-expensive" part.. when you 
maintain a lot of sites (assuming 10-30 plugins each site) but don't 
have the luxury of unlimited internet/time, you'll want to be able to 
know which updates are critical so you can focus on this first, then 
leave the rest for later.

yes, I've already mentioned the Upgrade notice tag, but as David has 
pointed out, it's really not structured in any way and you could put 
whatever you wish in there.

but, one could also argue that, whenever the Upgrade notice tag is 
filled out, then one could assume that the update is *important* since 
that's the only way right now (through the meta tags that is) to give a 
notice.. but I dunno..

On Thursday, 12 July, 2012 01:30 PM, 
wp-hackers-request at lists.automattic.com wrote:
> I was proposing machine-parsable, fixed-format meta data which can be
> used to programmatically resolve the question, "does this version of the
> plugin have known security problems?", just as we presently have
> meta-data which can deterministically resolve the question "is this
> version of the plugin compatible with my version of WordPress?".

-- 
*Ryann Micua*
/Web Developer/
------------------------------------------------------------------------

Website: /www.pogidude.com/
Skype: /rmicua/
Mobile: /+639169273059/


From aero.maxx.d at gmail.com  Thu Jul 12 16:09:56 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Thu, 12 Jul 2012 17:09:56 +0100
Subject: [wp-hackers] Custom Taxonomy RSS feed link in header
Message-ID: <4FFEF6D4.4060801@gmail.com>

Hi Everyone,

Have only just noticed that there is no rss feed link to the custom 
taxonomy I have created on my site, is there an easy to include this ?

I would like to have it as follows if at all possible.

When on the custom post type url and showing all posts from all 
taxonomies, I would like all the rss feed links for all taxonomies to be 
in the header, but when on a single taxonomy then only show the rss link 
in the header for that single taxonomy and not all of them.

I have done a bit of googling, and found I can use the add_action to add 
things to wp_head, i've got all the rewrite urls done also for the feed 
links I just now need to figure how to know I am on a custom post type 
to show the feed links, and also how to know I am on a custom taxonomy 
to show the single link.

If anyone is able to help with the final bit I would be most grateful!

Thanks
Daniel.

From yojoaquin at gmail.com  Thu Jul 12 16:15:11 2012
From: yojoaquin at gmail.com (Joaquin Rodriguez Montero)
Date: Thu, 12 Jul 2012 13:15:11 -0300
Subject: [wp-hackers] Post to Posts and Taxonomies Relations
Message-ID: <CAAVCQdHy8wwZw-2z6O1sLLmAiXJ4n-JY=RT1dgy8-M6oC_UF-g@mail.gmail.com>

Hi guys, could you help me out and shed some light over this stuff please?
I have disciplines and cases post types. Both are linked via scribu's
post2post plugin.
Now I'm on Disciplines page and I have to link them to "Related Cases".
When clicked it will take me to the page with cases of the selected
discipline.
At the same time on that filtered last page I have a list of disciplines
that act as a filter. So I'm viewing "Integrated Branding" cases and on the
sidebar I also have a list of other disciplines. How would you do it "the
WP" way? "Easiest" solution would be to do it via query string but then the
pagination wouldn't work well probably plus I'm using qTranslate plugin
which adds "?lang=es" for instance for translated content..

Any ideas?

Thanks!

Joaquin

From mike at newclarity.net  Thu Jul 12 16:31:43 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Thu, 12 Jul 2012 12:31:43 -0400
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
Message-ID: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>

Hi All,

We are working to release several large plugins targeting professional site builders and we are trying to decide if we can require PHP 5.3 or not.  PHP 5.3 would allow us to create a cleaner interface for our libraries but we don't want to make a plugin that a significant percentage of professional site builders could or will not use.  

I posted this question on Twitter last week and had several people tell me they work on projects where the clients provide them an environment they cannot change and often those environments can be running < PHP 5.3. This caused us to think we should limit ourselves to PHP 5.2.4x.

Then today someone on our team found KeyRing[1] which "requires PHP 5.3+ to work, because it makes use of some modern features in PHP like late static binding and abstract classes."[2].  This plugin's authors include Automattic and 3 others who I think are Automattic employees so I'm wondering it this is a (semi-official) statement of support for 5.3?

So the specific questions are:

- How soon is it likely for WordPress to move to 5.3, especially considering how much debate was had moving from 4 to 5.x?
- Is assuming 5.3 a moot point for most professional site builders starting new sites?  Or are there still a lot of prescribed environments where the client forces <5.3?
- Why did KeyRing choose 5.3?  Was it really needed, or just preference?  Did they paint 5.2 out of the picture on purpose, or was if a detail they really didn't think about?
 
Thanks in advance for any helpful comments on these questions.

-Mike

P.S. I'm asking these questions to only help my team make decisions, not to advocate for any specific direction.

[1] http://wordpress.org/extend/plugins/keyring/
[2] http://wordpress.org/extend/plugins/keyring/faq/






From dianakac at gmail.com  Thu Jul 12 16:51:53 2012
From: dianakac at gmail.com (Diana K. C)
Date: Thu, 12 Jul 2012 13:51:53 -0300
Subject: [wp-hackers] How to Exclude shortcode in databse
References: <00a901cd5fd4$fd6d5a00$2200a8c0@TITA>
	<CAF_HY=qoQ8KMYJa3AVo+4=QqsNFq+Dr_GtEZCF=txV+iZvw86g@mail.gmail.com>
Message-ID: <000f01cd604e$a8b34950$2200a8c0@TITA>

Tried this plugin also, seems to use some special regex or is broken. Your 
syntax is right but not for search-regex :(



----- Original Message ----- 
From: "Ricardo Moraleida" <moraleida at gmail.com>
To: <wp-hackers at lists.automattic.com>
Sent: Thursday, July 12, 2012 9:36 AM
Subject: Re: [wp-hackers] How to Exclude shortcode in databse


>I think i've used this plugin once ->
> http://wordpress.org/extend/plugins/search-regex/screenshots/
>
> It would work with some simple regex like: ^\[\atgallery\ \id="\d+"\]$
> (tested on on Regex Tester: http://regexpal.com)
>
> Ricardo Moraleida
>
>
>
> 2012/7/11 Diana K. C <dianakac at gmail.com>
>
>> That't quick I think:
>>
>> I found some SQL commands around, but all deal with fix shortcodes like
>> [tweet], I need to exlcude shortcodes like [atgallery id="144"], 
>> [tagellery
>> = "12"] etc
>>
>> Thanks for help!
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 


From dianakac at gmail.com  Thu Jul 12 16:57:02 2012
From: dianakac at gmail.com (Diana K. C)
Date: Thu, 12 Jul 2012 13:57:02 -0300
Subject: [wp-hackers] How to Exclude shortcode in databse
References: <00a901cd5fd4$fd6d5a00$2200a8c0@TITA>
	<002601cd5fed$800fcf20$802f6d60$@lod.com>
Message-ID: <001e01cd604f$5fa3ddf0$2200a8c0@TITA>

Thanks that worked!


I add as an action:
add_action('init','remove_shortcode_from_db');



----- Original Message ----- 
From: "Chris McCoy" <chris at lod.com>
To: <wp-hackers at lists.automattic.com>
Sent: Thursday, July 12, 2012 2:16 AM
Subject: Re: [wp-hackers] How to Exclude shortcode in databse


> Kinda hacky way of doing it, but here is something I did a while back
>
> function remove_shortcode_from_db($shortcode = 'button') {
>
>    global $wpdb;
>
>    $posts = $wpdb->get_results("SELECT ID,post_title,post_content FROM
> $wpdb->posts");
>    $regex =
> '/\[(\[?)('.$shortcode.')\b([^\]\/]*(?:\/(?!\])[^\]\/]*)*?)(?:(\/)\]|\](?:([
> ^\[]*+(?:\[(?!\/\2\])[^\[]*+)*+)\[\/\2\])?)(\]?)/s';
>
>    foreach($posts as $post) {
>        $final = preg_replace($regex,'',$post->post_content);
>        $change = $wpdb->update( $wpdb->posts, array('post_content' =>
> $final), array('ID' => $post->ID));
>    }
> }
>
> Will accept any parameter being atgallery will look for all attribs and
> remove
>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Diana K. C
> Sent: Wednesday, July 11, 2012 10:21 PM
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] How to Exclude shortcode in databse
>
> That't quick I think:
>
> I found some SQL commands around, but all deal with fix shortcodes like
> [tweet], I need to exlcude shortcodes like [atgallery id="144"], 
> [tagellery
> = "12"] etc
>
> Thanks for help!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 


From otto at ottodestruct.com  Thu Jul 12 16:59:51 2012
From: otto at ottodestruct.com (Otto)
Date: Thu, 12 Jul 2012 11:59:51 -0500
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
Message-ID: <CAD-Fghwvha-8SSdds8C72L_fNp_wimhYf8k6DkjadiriLU=W+A@mail.gmail.com>

On Thu, Jul 12, 2012 at 11:31 AM, Mike Schinkel <mike at newclarity.net> wrote:
> - How soon is it likely for WordPress to move to 5.3, especially considering how much debate was had moving from 4 to 5.x?

http://wordpress.org/about/stats/

Almost three quarters of the WordPress userbase is still on PHP 5.2.

I wouldn't expect that to change soon.

-Otto

From navjotjsingh at gmail.com  Thu Jul 12 17:10:28 2012
From: navjotjsingh at gmail.com (Navjot Singh)
Date: Thu, 12 Jul 2012 22:40:28 +0530
Subject: [wp-hackers] Custom Taxonomy RSS feed link in header
In-Reply-To: <4FFEF6D4.4060801@gmail.com>
References: <4FFEF6D4.4060801@gmail.com>
Message-ID: <CAMmGNN33V5xXUKLA8vFEEU5_2ASzaWo30qew9NQ9OyvgT2SDTA@mail.gmail.com>

Check http://codex.wordpress.org/Conditional_Tags for your answer on how to
detect whether you are on a custom taxonomy page or custom post type page.

Regards,
Navjot Singh



On Thu, Jul 12, 2012 at 9:39 PM, Aero Maxx <aero.maxx.d at gmail.com> wrote:

> Hi Everyone,
>
> Have only just noticed that there is no rss feed link to the custom
> taxonomy I have created on my site, is there an easy to include this ?
>
> I would like to have it as follows if at all possible.
>
> When on the custom post type url and showing all posts from all
> taxonomies, I would like all the rss feed links for all taxonomies to be in
> the header, but when on a single taxonomy then only show the rss link in
> the header for that single taxonomy and not all of them.
>
> I have done a bit of googling, and found I can use the add_action to add
> things to wp_head, i've got all the rewrite urls done also for the feed
> links I just now need to figure how to know I am on a custom post type to
> show the feed links, and also how to know I am on a custom taxonomy to show
> the single link.
>
> If anyone is able to help with the final bit I would be most grateful!
>
> Thanks
> Daniel.
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From aero.maxx.d at gmail.com  Thu Jul 12 17:17:47 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Thu, 12 Jul 2012 18:17:47 +0100
Subject: [wp-hackers] Custom Taxonomy RSS feed link in header
In-Reply-To: <CAMmGNN33V5xXUKLA8vFEEU5_2ASzaWo30qew9NQ9OyvgT2SDTA@mail.gmail.com>
References: <4FFEF6D4.4060801@gmail.com>
	<CAMmGNN33V5xXUKLA8vFEEU5_2ASzaWo30qew9NQ9OyvgT2SDTA@mail.gmail.com>
Message-ID: <4FFF06BB.4070406@gmail.com>

It only lets me check if I am on a single post that is in a custom post 
type, which is a start but I also need to check if I am on a custom post 
type page that is display a list like a blog, not one single post how 
would I do this as there is no mention of that on this page.

On 12/07/2012 18:10, Navjot Singh wrote:
> Check http://codex.wordpress.org/Conditional_Tags for your answer on how to
> detect whether you are on a custom taxonomy page or custom post type page.
>
> Regards,
> Navjot Singh
>
>
>
> On Thu, Jul 12, 2012 at 9:39 PM, Aero Maxx <aero.maxx.d at gmail.com> wrote:
>
>> Hi Everyone,
>>
>> Have only just noticed that there is no rss feed link to the custom
>> taxonomy I have created on my site, is there an easy to include this ?
>>
>> I would like to have it as follows if at all possible.
>>
>> When on the custom post type url and showing all posts from all
>> taxonomies, I would like all the rss feed links for all taxonomies to be in
>> the header, but when on a single taxonomy then only show the rss link in
>> the header for that single taxonomy and not all of them.
>>
>> I have done a bit of googling, and found I can use the add_action to add
>> things to wp_head, i've got all the rewrite urls done also for the feed
>> links I just now need to figure how to know I am on a custom post type to
>> show the feed links, and also how to know I am on a custom taxonomy to show
>> the single link.
>>
>> If anyone is able to help with the final bit I would be most grateful!
>>
>> Thanks
>> Daniel.
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



From navjotjsingh at gmail.com  Thu Jul 12 17:20:36 2012
From: navjotjsingh at gmail.com (Navjot Singh)
Date: Thu, 12 Jul 2012 22:50:36 +0530
Subject: [wp-hackers] Custom Taxonomy RSS feed link in header
In-Reply-To: <4FFF06BB.4070406@gmail.com>
References: <4FFEF6D4.4060801@gmail.com>
	<CAMmGNN33V5xXUKLA8vFEEU5_2ASzaWo30qew9NQ9OyvgT2SDTA@mail.gmail.com>
	<4FFF06BB.4070406@gmail.com>
Message-ID: <CAMmGNN1sEUWN-aqe-X3JqPWRppHWodqBT9yWB5qh8Ft048NfEA@mail.gmail.com>

You mean custom post type archive page? If that's what you are looking for,
then check  http://codex.wordpress.org/Conditional_Tags#A_Post_Type_Archive

Regards,
Navjot Singh



On Thu, Jul 12, 2012 at 10:47 PM, Aero Maxx <aero.maxx.d at gmail.com> wrote:

> It only lets me check if I am on a single post that is in a custom post
> type, which is a start but I also need to check if I am on a custom post
> type page that is display a list like a blog, not one single post how would
> I do this as there is no mention of that on this page.
>
>
> On 12/07/2012 18:10, Navjot Singh wrote:
>
>> Check http://codex.wordpress.org/**Conditional_Tags<http://codex.wordpress.org/Conditional_Tags>for your answer on how to
>> detect whether you are on a custom taxonomy page or custom post type page.
>>
>> Regards,
>> Navjot Singh
>>
>>
>>
>> On Thu, Jul 12, 2012 at 9:39 PM, Aero Maxx <aero.maxx.d at gmail.com> wrote:
>>
>>  Hi Everyone,
>>>
>>> Have only just noticed that there is no rss feed link to the custom
>>> taxonomy I have created on my site, is there an easy to include this ?
>>>
>>> I would like to have it as follows if at all possible.
>>>
>>> When on the custom post type url and showing all posts from all
>>> taxonomies, I would like all the rss feed links for all taxonomies to be
>>> in
>>> the header, but when on a single taxonomy then only show the rss link in
>>> the header for that single taxonomy and not all of them.
>>>
>>> I have done a bit of googling, and found I can use the add_action to add
>>> things to wp_head, i've got all the rewrite urls done also for the feed
>>> links I just now need to figure how to know I am on a custom post type to
>>> show the feed links, and also how to know I am on a custom taxonomy to
>>> show
>>> the single link.
>>>
>>> If anyone is able to help with the final bit I would be most grateful!
>>>
>>> Thanks
>>> Daniel.
>>> ______________________________****_________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.****com <wp-hackers at lists.automattic.**com<wp-hackers at lists.automattic.com>
>>> >
>>> http://lists.automattic.com/****mailman/listinfo/wp-hackers<http://lists.automattic.com/**mailman/listinfo/wp-hackers>
>>> <ht**tp://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>> >
>>>
>>>  ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From mda at blogwaffe.com  Thu Jul 12 17:46:29 2012
From: mda at blogwaffe.com (Michael D Adams)
Date: Thu, 12 Jul 2012 10:46:29 -0700
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
Message-ID: <CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>

On Thu, Jul 12, 2012 at 9:31 AM, Mike Schinkel <mike at newclarity.net> wrote:
> Then today someone on our team found KeyRing[1] which "requires PHP 5.3+ to work, because it makes use of some modern features in PHP like late static binding and abstract classes."[2].  This plugin's authors include Automattic and 3 others who I think are Automattic employees so I'm wondering it this is a (semi-official) statement of support for 5.3?

Actions by Automattic should not automatically be taken to be guiding
lights in WordPress' development.  While I'm happy to be a member of
both Automattic and the WordPress community, those two entities are
very different things :)

We (Automattic) developed Keyring for WordPress.com (correction: see
PS), which is PHP 5.3.  As you've obviously noticed, some things are
way easier in PH 5.3 :) That's really the only reason Keyring requires
PHP 5.3: because development was easier and simpler, not because we
think WordPress should soon move to requiring it.

You'll note most of our other plugins (Jetpack included) do not require PHP 5.3.

> So the specific questions are:
>
> - How soon is it likely for WordPress to move to 5.3, especially considering how much debate was had moving from 4 to 5.x?

No idea. I imagine PHP 5.2 is at least 2/3 of the install base out
there, so probably not any time soon.  (That 2/3 is a guess, not a
stat.)

> - Is assuming 5.3 a moot point for most professional site builders starting new sites?  Or are there still a lot of prescribed environments where the client forces <5.3?

No idea.  New sites are probably more likely to support 5.3 than old
sites, but if you're looking for wide applicability, you need to
target WordPress' minimum requirements: 5.2.4.

> - Why did KeyRing choose 5.3?  Was it really needed, or just preference?  Did they paint 5.2 out of the picture on purpose, or was if a detail they really didn't think about?

Preference.  We thought about it.  We decided it wasn't worth the
extra headache to support PHP 5.2.  Though there's been interest from
the community around Keyring, it's probably not something any given
site will need.  If it convinces someone to upgrade to 5.3, so much
the better, but that decision may not be a good one for your
plugin/theme.  It's certainly a horrible one for core at the moment.

Mike
--mdawaffe

PS: I just checked with Beau, the original author.  Before its use on
WP.com, he wrote the original version of Keyring as a personal
project.  He intentionally disregarded the notion of wide adoption and
wasn't even sure we'd end up using it on WP.com.

From mda at blogwaffe.com  Thu Jul 12 17:47:05 2012
From: mda at blogwaffe.com (Michael D Adams)
Date: Thu, 12 Jul 2012 10:47:05 -0700
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CAD-Fghwvha-8SSdds8C72L_fNp_wimhYf8k6DkjadiriLU=W+A@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAD-Fghwvha-8SSdds8C72L_fNp_wimhYf8k6DkjadiriLU=W+A@mail.gmail.com>
Message-ID: <CAH-8B6vK2Rb8riWJWsvhLF0qAMKoDd4J+L+VG1-pvjjpMrZ_PQ@mail.gmail.com>

On Thu, Jul 12, 2012 at 9:59 AM, Otto <otto at ottodestruct.com> wrote:
> On Thu, Jul 12, 2012 at 11:31 AM, Mike Schinkel <mike at newclarity.net> wrote:
>> - How soon is it likely for WordPress to move to 5.3, especially considering how much debate was had moving from 4 to 5.x?
>
> http://wordpress.org/about/stats/

Neat! Thanks for the link.

From brian at fegter.com  Thu Jul 12 18:02:57 2012
From: brian at fegter.com (Brian Fegter)
Date: Thu, 12 Jul 2012 14:02:57 -0400
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
Message-ID: <CAPtWN+wJc1a-J7pMOvjAh7d45jfCVrpb2D7n6ZicVrdOxavxqA@mail.gmail.com>

Otto,

Just curious as to how WP collects these statistics? Is this sent in on
plugin searches or initial installs?

Thanks,
Brian

From mike at newclarity.net  Thu Jul 12 18:55:25 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Thu, 12 Jul 2012 14:55:25 -0400
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
Message-ID: <3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>

On Jul 12, 2012, at 12:59 PM, Otto wrote:
> On Thu, Jul 12, 2012 at 11:31 AM, Mike Schinkel <mike at newclarity.net> wrote:
>> - How soon is it likely for WordPress to move to 5.3, especially considering how much debate was had moving from 4 to 5.x?
> 
> http://wordpress.org/about/stats/
> 
> Almost three quarters of the WordPress userbase is still on PHP 5.2.
> 
> I wouldn't expect that to change soon.

Thanks.  Very helpful.

On Jul 12, 2012, at 1:46 PM, Michael D Adams wrote:
> On Thu, Jul 12, 2012 at 9:31 AM, Mike Schinkel <mike at newclarity.net> wrote:
>> Then today someone on our team found KeyRing[1] which "requires PHP 5.3+ to work, because it makes use of some modern features in PHP like late static binding and abstract classes."[2].  This plugin's authors include Automattic and 3 others who I think are Automattic employees so I'm wondering it this is a (semi-official) statement of support for 5.3?
> 
> Actions by Automattic should not automatically be taken to be guiding
> lights in WordPress' development.  While I'm happy to be a member of
> both Automattic and the WordPress community, those two entities are
> very different things :)
> 
> We (Automattic) developed Keyring for WordPress.com (correction: see
> PS), which is PHP 5.3.  As you've obviously noticed, some things are
> way easier in PH 5.3 :) That's really the only reason Keyring requires
> PHP 5.3: because development was easier and simpler, not because we
> think WordPress should soon move to requiring it.
> 
>> - Why did KeyRing choose 5.3?  Was it really needed, or just preference?  Did they paint 5.2 out of the picture on purpose, or was if a detail they really didn't think about?
> 
> Preference.  We thought about it.  We decided it wasn't worth the
> extra headache to support PHP 5.2.  Though there's been interest from
> the community around Keyring, it's probably not something any given
> site will need.  If it convinces someone to upgrade to 5.3, so much
> the better, but that decision may not be a good one for your
> plugin/theme.  It's certainly a horrible one for core at the moment.

Also extremely helpful. Thanks for taking the time to answer.

I could seriously see integrating KeyRing support into what we are building, but if we stick with 5.2.4 which is what we are learning toward, then the 5.3 requirement would be a non-starter.  

I'm curious, which specific 5.3 features did you use?  I scanned the code but I couldn't find anything obvious.  And are the PHP 5.3-specific features essential to the architecture or simply for convenience?  IOW, would a "KeyRing 5.2" fork be viable and maintainable?  Thanks in advance.

-Mike



From aero.maxx.d at gmail.com  Thu Jul 12 19:07:49 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Thu, 12 Jul 2012 20:07:49 +0100
Subject: [wp-hackers] Custom Taxonomy RSS feed link in header
In-Reply-To: <CAMmGNN1sEUWN-aqe-X3JqPWRppHWodqBT9yWB5qh8Ft048NfEA@mail.gmail.com>
References: <4FFEF6D4.4060801@gmail.com>
	<CAMmGNN33V5xXUKLA8vFEEU5_2ASzaWo30qew9NQ9OyvgT2SDTA@mail.gmail.com>
	<4FFF06BB.4070406@gmail.com>
	<CAMmGNN1sEUWN-aqe-X3JqPWRppHWodqBT9yWB5qh8Ft048NfEA@mail.gmail.com>
Message-ID: <4FFF2085.2040503@gmail.com>

Oh that one.

Ok how would I list all rss feed links to each of the taxonomies I have, 
is there an easy way to loop through these, I can do the rest from here.

On 12/07/2012 18:20, Navjot Singh wrote:
> You mean custom post type archive page? If that's what you are looking for,
> then check  http://codex.wordpress.org/Conditional_Tags#A_Post_Type_Archive
>
> Regards,
> Navjot Singh
>
>
>
> On Thu, Jul 12, 2012 at 10:47 PM, Aero Maxx <aero.maxx.d at gmail.com> wrote:
>
>> It only lets me check if I am on a single post that is in a custom post
>> type, which is a start but I also need to check if I am on a custom post
>> type page that is display a list like a blog, not one single post how would
>> I do this as there is no mention of that on this page.
>>
>>
>> On 12/07/2012 18:10, Navjot Singh wrote:
>>
>>> Check http://codex.wordpress.org/**Conditional_Tags<http://codex.wordpress.org/Conditional_Tags>for your answer on how to
>>> detect whether you are on a custom taxonomy page or custom post type page.
>>>
>>> Regards,
>>> Navjot Singh
>>>
>>>
>>>
>>> On Thu, Jul 12, 2012 at 9:39 PM, Aero Maxx <aero.maxx.d at gmail.com> wrote:
>>>
>>>   Hi Everyone,
>>>> Have only just noticed that there is no rss feed link to the custom
>>>> taxonomy I have created on my site, is there an easy to include this ?
>>>>
>>>> I would like to have it as follows if at all possible.
>>>>
>>>> When on the custom post type url and showing all posts from all
>>>> taxonomies, I would like all the rss feed links for all taxonomies to be
>>>> in
>>>> the header, but when on a single taxonomy then only show the rss link in
>>>> the header for that single taxonomy and not all of them.
>>>>
>>>> I have done a bit of googling, and found I can use the add_action to add
>>>> things to wp_head, i've got all the rewrite urls done also for the feed
>>>> links I just now need to figure how to know I am on a custom post type to
>>>> show the feed links, and also how to know I am on a custom taxonomy to
>>>> show
>>>> the single link.
>>>>
>>>> If anyone is able to help with the final bit I would be most grateful!
>>>>
>>>> Thanks
>>>> Daniel.
>>>> ______________________________****_________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.****com <wp-hackers at lists.automattic.**com<wp-hackers at lists.automattic.com>
>>>> http://lists.automattic.com/****mailman/listinfo/wp-hackers<http://lists.automattic.com/**mailman/listinfo/wp-hackers>
>>>> <ht**tp://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>>   ______________________________**_________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>
>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



From chris at lod.com  Thu Jul 12 20:07:54 2012
From: chris at lod.com (Chris McCoy)
Date: Thu, 12 Jul 2012 16:07:54 -0400
Subject: [wp-hackers] How to Exclude shortcode in databse
In-Reply-To: <001e01cd604f$5fa3ddf0$2200a8c0@TITA>
References: <00a901cd5fd4$fd6d5a00$2200a8c0@TITA>
	<002601cd5fed$800fcf20$802f6d60$@lod.com>
	<001e01cd604f$5fa3ddf0$2200a8c0@TITA>
Message-ID: <003f01cd606a$05f2a3c0$11d7eb40$@lod.com>

You will only need to run it once also you could even just do
remove_shortcode('shortcodename'); but that wouldn't remove it from the db
in total.



-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Diana K. C
Sent: Thursday, July 12, 2012 12:57 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] How to Exclude shortcode in databse

Thanks that worked!


I add as an action:
add_action('init','remove_shortcode_from_db');



----- Original Message ----- 
From: "Chris McCoy" <chris at lod.com>
To: <wp-hackers at lists.automattic.com>
Sent: Thursday, July 12, 2012 2:16 AM
Subject: Re: [wp-hackers] How to Exclude shortcode in databse


> Kinda hacky way of doing it, but here is something I did a while back
>
> function remove_shortcode_from_db($shortcode = 'button') {
>
>    global $wpdb;
>
>    $posts = $wpdb->get_results("SELECT ID,post_title,post_content FROM
> $wpdb->posts");
>    $regex =
>
'/\[(\[?)('.$shortcode.')\b([^\]\/]*(?:\/(?!\])[^\]\/]*)*?)(?:(\/)\]|\](?:([
> ^\[]*+(?:\[(?!\/\2\])[^\[]*+)*+)\[\/\2\])?)(\]?)/s';
>
>    foreach($posts as $post) {
>        $final = preg_replace($regex,'',$post->post_content);
>        $change = $wpdb->update( $wpdb->posts, array('post_content' =>
> $final), array('ID' => $post->ID));
>    }
> }
>
> Will accept any parameter being atgallery will look for all attribs and
> remove
>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Diana K. C
> Sent: Wednesday, July 11, 2012 10:21 PM
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] How to Exclude shortcode in databse
>
> That't quick I think:
>
> I found some SQL commands around, but all deal with fix shortcodes like
> [tweet], I need to exlcude shortcodes like [atgallery id="144"], 
> [tagellery
> = "12"] etc
>
> Thanks for help!
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From dianakac at gmail.com  Thu Jul 12 20:36:46 2012
From: dianakac at gmail.com (Diana K. C)
Date: Thu, 12 Jul 2012 17:36:46 -0300
Subject: [wp-hackers] How to Exclude shortcode in databse
References: <00a901cd5fd4$fd6d5a00$2200a8c0@TITA><002601cd5fed$800fcf20$802f6d60$@lod.com><001e01cd604f$5fa3ddf0$2200a8c0@TITA>
	<003f01cd606a$05f2a3c0$11d7eb40$@lod.com>
Message-ID: <006b01cd606e$111ffaf0$2200a8c0@TITA>

I see, I was using this but everytime I get post content I needed to 
preg_replace the outpput :(


----- Original Message ----- 
From: "Chris McCoy" <chris at lod.com>
To: <wp-hackers at lists.automattic.com>
Sent: Thursday, July 12, 2012 5:07 PM
Subject: Re: [wp-hackers] How to Exclude shortcode in databse


> You will only need to run it once also you could even just do
> remove_shortcode('shortcodename'); but that wouldn't remove it from the db
> in total.
>
>
>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Diana K. C
> Sent: Thursday, July 12, 2012 12:57 PM
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] How to Exclude shortcode in databse
>
> Thanks that worked!
>
>
> I add as an action:
> add_action('init','remove_shortcode_from_db');
>
>
>
> ----- Original Message ----- 
> From: "Chris McCoy" <chris at lod.com>
> To: <wp-hackers at lists.automattic.com>
> Sent: Thursday, July 12, 2012 2:16 AM
> Subject: Re: [wp-hackers] How to Exclude shortcode in databse
>
>
>> Kinda hacky way of doing it, but here is something I did a while back
>>
>> function remove_shortcode_from_db($shortcode = 'button') {
>>
>>    global $wpdb;
>>
>>    $posts = $wpdb->get_results("SELECT ID,post_title,post_content FROM
>> $wpdb->posts");
>>    $regex =
>>
> '/\[(\[?)('.$shortcode.')\b([^\]\/]*(?:\/(?!\])[^\]\/]*)*?)(?:(\/)\]|\](?:([
>> ^\[]*+(?:\[(?!\/\2\])[^\[]*+)*+)\[\/\2\])?)(\]?)/s';
>>
>>    foreach($posts as $post) {
>>        $final = preg_replace($regex,'',$post->post_content);
>>        $change = $wpdb->update( $wpdb->posts, array('post_content' =>
>> $final), array('ID' => $post->ID));
>>    }
>> }
>>
>> Will accept any parameter being atgallery will look for all attribs and
>> remove
>>
>> -----Original Message-----
>> From: wp-hackers-bounces at lists.automattic.com
>> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Diana K. C
>> Sent: Wednesday, July 11, 2012 10:21 PM
>> To: wp-hackers at lists.automattic.com
>> Subject: [wp-hackers] How to Exclude shortcode in databse
>>
>> That't quick I think:
>>
>> I found some SQL commands around, but all deal with fix shortcodes like
>> [tweet], I need to exlcude shortcodes like [atgallery id="144"],
>> [tagellery
>> = "12"] etc
>>
>> Thanks for help!
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 


From jnolte at getmoxied.net  Thu Jul 12 21:09:36 2012
From: jnolte at getmoxied.net (Jeffrey Nolte)
Date: Thu, 12 Jul 2012 17:09:36 -0400
Subject: [wp-hackers] 2 WP Instances with one database
Message-ID: <B781A43A-E2C7-4874-B986-4A443FDB1536@getmoxied.net>

Hello,

I am in the process of building a mobile template for a site and would like to run the mobile site off of the same database as the current live site. 

I have the following:

1. domain.com - this site is running a standard WordPress site 
2. m.domain.com - this site will make use of a mobile template (the content will never need to change here)

I know how to set symlinks for the wp-content/uploads folder and make all of the configurations for the server but am curious on how I would go about changing the domain name for the install as one will be using m.domain.com and the other will be using main domain. 

 Is there a specific way I can go about hardcoding the domain or another means of setting this up properly?

If there are any other suggestions to do the same thing going another route I am all ears.

Thank you in advance,

Jeffrey Nolte



From rafaehlers at gmail.com  Thu Jul 12 21:15:41 2012
From: rafaehlers at gmail.com (Rafael Ehlers)
Date: Thu, 12 Jul 2012 18:15:41 -0300
Subject: [wp-hackers] 2 WP Instances with one database
In-Reply-To: <B781A43A-E2C7-4874-B986-4A443FDB1536@getmoxied.net>
References: <B781A43A-E2C7-4874-B986-4A443FDB1536@getmoxied.net>
Message-ID: <CAF_6N0Nr4QnuxggnA+-yvaBy1HySQ53777fVPtwnPoZBNBkN+Q@mail.gmail.com>

There?s the way of creating a new theme (mobile), and using a plugin to
redirect the users to use this mobile theme.

http://code.kuederle.com/browserbasedthemes

http://code.kuederle.com/mobilewordpresstheme

On Thu, Jul 12, 2012 at 6:09 PM, Jeffrey Nolte <jnolte at getmoxied.net> wrote:

> Hello,
>
> I am in the process of building a mobile template for a site and would
> like to run the mobile site off of the same database as the current live
> site.
>
> I have the following:
>
> 1. domain.com - this site is running a standard WordPress site
> 2. m.domain.com - this site will make use of a mobile template (the
> content will never need to change here)
>
> I know how to set symlinks for the wp-content/uploads folder and make all
> of the configurations for the server but am curious on how I would go about
> changing the domain name for the install as one will be using m.domain.comand the other will be using main domain.
>
>  Is there a specific way I can go about hardcoding the domain or another
> means of setting this up properly?
>
> If there are any other suggestions to do the same thing going another
> route I am all ears.
>
> Thank you in advance,
>
> Jeffrey Nolte
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dianakac at gmail.com  Thu Jul 12 21:33:31 2012
From: dianakac at gmail.com (Diana K. C)
Date: Thu, 12 Jul 2012 18:33:31 -0300
Subject: [wp-hackers] 2 WP Instances with one database
References: <B781A43A-E2C7-4874-B986-4A443FDB1536@getmoxied.net>
	<CAF_6N0Nr4QnuxggnA+-yvaBy1HySQ53777fVPtwnPoZBNBkN+Q@mail.gmail.com>
Message-ID: <008401cd6075$ff3b2a00$2200a8c0@TITA>

Great approach but there is something more to consider: some content still 
will not be optimized, i.e huge images in content. Maybe that is why some 
sites has different content on both site versions.

----- Original Message ----- 
From: "Rafael Ehlers" <rafaehlers at gmail.com>
To: <wp-hackers at lists.automattic.com>
Sent: Thursday, July 12, 2012 6:15 PM
Subject: Re: [wp-hackers] 2 WP Instances with one database


There?s the way of creating a new theme (mobile), and using a plugin to
redirect the users to use this mobile theme.

http://code.kuederle.com/browserbasedthemes

http://code.kuederle.com/mobilewordpresstheme

On Thu, Jul 12, 2012 at 6:09 PM, Jeffrey Nolte <jnolte at getmoxied.net> wrote:

> Hello,
>
> I am in the process of building a mobile template for a site and would
> like to run the mobile site off of the same database as the current live
> site.
>
> I have the following:
>
> 1. domain.com - this site is running a standard WordPress site
> 2. m.domain.com - this site will make use of a mobile template (the
> content will never need to change here)
>
> I know how to set symlinks for the wp-content/uploads folder and make all
> of the configurations for the server but am curious on how I would go 
> about
> changing the domain name for the install as one will be using 
> m.domain.comand the other will be using main domain.
>
>  Is there a specific way I can go about hardcoding the domain or another
> means of setting this up properly?
>
> If there are any other suggestions to do the same thing going another
> route I am all ears.
>
> Thank you in advance,
>
> Jeffrey Nolte
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers 


From lugonja.aleksandar at gmail.com  Thu Jul 12 21:44:34 2012
From: lugonja.aleksandar at gmail.com (Aleksandar Lugonja)
Date: Thu, 12 Jul 2012 23:44:34 +0200
Subject: [wp-hackers] 2 WP Instances with one database
In-Reply-To: <008401cd6075$ff3b2a00$2200a8c0@TITA>
References: <B781A43A-E2C7-4874-B986-4A443FDB1536@getmoxied.net>
	<CAF_6N0Nr4QnuxggnA+-yvaBy1HySQ53777fVPtwnPoZBNBkN+Q@mail.gmail.com>
	<008401cd6075$ff3b2a00$2200a8c0@TITA>
Message-ID: <CANp7uVNuHv6tCBLpKFPV4xHknPLdfrMtXPVXkU30RYkOVSA9xw@mail.gmail.com>

is there a reason not to use media queries?

On Thu, Jul 12, 2012 at 11:33 PM, Diana K. C <dianakac at gmail.com> wrote:

> Great approach but there is something more to consider: some content still
> will not be optimized, i.e huge images in content. Maybe that is why some
> sites has different content on both site versions.
>
> ----- Original Message ----- From: "Rafael Ehlers" <rafaehlers at gmail.com>
> To: <wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>>
> Sent: Thursday, July 12, 2012 6:15 PM
> Subject: Re: [wp-hackers] 2 WP Instances with one database
>
>
>
> There?s the way of creating a new theme (mobile), and using a plugin to
> redirect the users to use this mobile theme.
>
> http://code.kuederle.com/**browserbasedthemes<http://code.kuederle.com/browserbasedthemes>
>
> http://code.kuederle.com/**mobilewordpresstheme<http://code.kuederle.com/mobilewordpresstheme>
>
> On Thu, Jul 12, 2012 at 6:09 PM, Jeffrey Nolte <jnolte at getmoxied.net>
> wrote:
>
>  Hello,
>>
>> I am in the process of building a mobile template for a site and would
>> like to run the mobile site off of the same database as the current live
>> site.
>>
>> I have the following:
>>
>> 1. domain.com - this site is running a standard WordPress site
>> 2. m.domain.com - this site will make use of a mobile template (the
>> content will never need to change here)
>>
>> I know how to set symlinks for the wp-content/uploads folder and make all
>> of the configurations for the server but am curious on how I would go
>> about
>> changing the domain name for the install as one will be using
>> m.domain.comand the other will be using main domain.
>>
>>  Is there a specific way I can go about hardcoding the domain or another
>> means of setting this up properly?
>>
>> If there are any other suggestions to do the same thing going another
>> route I am all ears.
>>
>> Thank you in advance,
>>
>> Jeffrey Nolte
>>
>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>>  ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From sinan at sinanisler.com  Thu Jul 12 22:16:21 2012
From: sinan at sinanisler.com (Sinan)
Date: Fri, 13 Jul 2012 01:16:21 +0300
Subject: [wp-hackers] Post ID and New Post Problem
Message-ID: <CABmkrsHnepdoAoLBA0zAFUESXwnOGpKbmAhQcn_EhmUPJDWBZg@mail.gmail.com>

Hello,

As you know with wp_insert_post() function we can add new posts

we cant add  custom field because add_post_meta() function need Post ID

But our problem start here with wp_insert_post function creating new post
we dont have a Post ID

so we cant add same time new post and custom field values. We can use only
add_post_meta function for existed posts.

I need a solution for this. I need create post and add custom fields same
time.

By the way I see same problem for attachments.


I hope we can find a solution for this.


-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From rafaehlers at gmail.com  Thu Jul 12 22:21:16 2012
From: rafaehlers at gmail.com (Rafael Ehlers)
Date: Thu, 12 Jul 2012 19:21:16 -0300
Subject: [wp-hackers] Post ID and New Post Problem
In-Reply-To: <CABmkrsHnepdoAoLBA0zAFUESXwnOGpKbmAhQcn_EhmUPJDWBZg@mail.gmail.com>
References: <CABmkrsHnepdoAoLBA0zAFUESXwnOGpKbmAhQcn_EhmUPJDWBZg@mail.gmail.com>
Message-ID: <CAF_6N0N95vTZea2=TQYtxJp-hEGKfoq0iQ9o4Ts_S6X-NSKdyg@mail.gmail.com>

http://pastebin.com/rWjzJCHW

On Thu, Jul 12, 2012 at 7:16 PM, Sinan <sinan at sinanisler.com> wrote:

> Hello,
>
> As you know with wp_insert_post() function we can add new posts
>
> we cant add  custom field because add_post_meta() function need Post ID
>
> But our problem start here with wp_insert_post function creating new post
> we dont have a Post ID
>
> so we cant add same time new post and custom field values. We can use only
> add_post_meta function for existed posts.
>
> I need a solution for this. I need create post and add custom fields same
> time.
>
> By the way I see same problem for attachments.
>
>
> I hope we can find a solution for this.
>
>
> --
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com>
> fb.com/sinanisler
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From sinan at sinanisler.com  Thu Jul 12 22:28:57 2012
From: sinan at sinanisler.com (Sinan)
Date: Fri, 13 Jul 2012 01:28:57 +0300
Subject: [wp-hackers] Post to Posts and Taxonomies Relations
In-Reply-To: <CAAVCQdHy8wwZw-2z6O1sLLmAiXJ4n-JY=RT1dgy8-M6oC_UF-g@mail.gmail.com>
References: <CAAVCQdHy8wwZw-2z6O1sLLmAiXJ4n-JY=RT1dgy8-M6oC_UF-g@mail.gmail.com>
Message-ID: <CABmkrsGP1_3qPjqLaZhUHrHrn28gK3aAPb+8MBZygt809F2DMA@mail.gmail.com>

Hello  Joaquin ,

I recently made a short tutorial for this but its turkish. I learn for my
new project ?m coding now its like social artist database its like imdb but
for Singers.

Any way here is my tutorial
http://www.codeprex.com/wordpress-ozel-yazi-bicimi-custom-post-type-ve-taxonomy/

I'm gonna tell you little bit how its works.

first you need create custom post or posts you can see article how I add.

and for relationship you must add taxonomy.

for example ;

Singer (Custom Post)
Album (Custom Post)
Music (Custom Post)

And most important

Singer (Taxonomy)

with this structure you can get relational content how ? easy;



$args = array(
'post_type'=> 'music', // custom post slug
 'singer'    => 'eminem' // taxonomy slug
);
query_posts( $args );

with this code you can get musics for eminem. (if you dont know query posts
and wp query learn them important !)


for translate I have no idea I dont try that. I use WPML its works with
custom posts.



2012/7/12 Joaquin Rodriguez Montero <yojoaquin at gmail.com>

> Hi guys, could you help me out and shed some light over this stuff please?
> I have disciplines and cases post types. Both are linked via scribu's
> post2post plugin.
> Now I'm on Disciplines page and I have to link them to "Related Cases".
> When clicked it will take me to the page with cases of the selected
> discipline.
> At the same time on that filtered last page I have a list of disciplines
> that act as a filter. So I'm viewing "Integrated Branding" cases and on the
> sidebar I also have a list of other disciplines. How would you do it "the
> WP" way? "Easiest" solution would be to do it via query string but then the
> pagination wouldn't work well probably plus I'm using qTranslate plugin
> which adds "?lang=es" for instance for translated content..
>
> Any ideas?
>
> Thanks!
>
> Joaquin
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From sinan at sinanisler.com  Thu Jul 12 22:32:39 2012
From: sinan at sinanisler.com (Sinan)
Date: Fri, 13 Jul 2012 01:32:39 +0300
Subject: [wp-hackers] Post to Posts and Taxonomies Relations
In-Reply-To: <CABmkrsGP1_3qPjqLaZhUHrHrn28gK3aAPb+8MBZygt809F2DMA@mail.gmail.com>
References: <CAAVCQdHy8wwZw-2z6O1sLLmAiXJ4n-JY=RT1dgy8-M6oC_UF-g@mail.gmail.com>
	<CABmkrsGP1_3qPjqLaZhUHrHrn28gK3aAPb+8MBZygt809F2DMA@mail.gmail.com>
Message-ID: <CABmkrsFH++JdW1PPhae1+S73dA90PWJsSuLV3rn6JMtJN1akAw@mail.gmail.com>

Thats important

you need to add custom posts this taxonomy relational


function singer_init() {
register_taxonomy(
 'singer',
array('*music*','*singer*','*album*'), // relational custom posts
 array(
'label' => __( 'Singer Name' ),
'rewrite' => array( 'slug' => 'singer' )
 )
);
}
add_action( 'init', ' singer_init' );




2012/7/13 Sinan <sinan at sinanisler.com>

> Hello  Joaquin ,
>
> I recently made a short tutorial for this but its turkish. I learn for my
> new project ?m coding now its like social artist database its like imdb but
> for Singers.
>
> Any way here is my tutorial
> http://www.codeprex.com/wordpress-ozel-yazi-bicimi-custom-post-type-ve-taxonomy/
>
> I'm gonna tell you little bit how its works.
>
> first you need create custom post or posts you can see article how I add.
>
> and for relationship you must add taxonomy.
>
> for example ;
>
> Singer (Custom Post)
> Album (Custom Post)
> Music (Custom Post)
>
> And most important
>
> Singer (Taxonomy)
>
> with this structure you can get relational content how ? easy;
>
>
>
> $args = array(
> 'post_type'=> 'music', // custom post slug
>  'singer'    => 'eminem' // taxonomy slug
> );
> query_posts( $args );
>
> with this code you can get musics for eminem. (if you dont know query
> posts and wp query learn them important !)
>
>
> for translate I have no idea I dont try that. I use WPML its works with
> custom posts.
>
>
>
> 2012/7/12 Joaquin Rodriguez Montero <yojoaquin at gmail.com>
>
>> Hi guys, could you help me out and shed some light over this stuff please?
>> I have disciplines and cases post types. Both are linked via scribu's
>> post2post plugin.
>> Now I'm on Disciplines page and I have to link them to "Related Cases".
>> When clicked it will take me to the page with cases of the selected
>> discipline.
>> At the same time on that filtered last page I have a list of disciplines
>> that act as a filter. So I'm viewing "Integrated Branding" cases and on
>> the
>> sidebar I also have a list of other disciplines. How would you do it "the
>> WP" way? "Easiest" solution would be to do it via query string but then
>> the
>> pagination wouldn't work well probably plus I'm using qTranslate plugin
>> which adds "?lang=es" for instance for translated content..
>>
>> Any ideas?
>>
>> Thanks!
>>
>> Joaquin
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com>
> fb.com/sinanisler
>
>


-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From dwain.maralack at gmail.com  Thu Jul 12 22:45:38 2012
From: dwain.maralack at gmail.com (Dwain Maralack)
Date: Fri, 13 Jul 2012 00:45:38 +0200
Subject: [wp-hackers] Access the wordpress menu from another CMS in a
	subdirectory
In-Reply-To: <4FF7AAE8.5090302@rotorised.com>
References: <CAPvkqyO+AFfYmS1Ebj5e9zLJ4LnF7vb8XQu00cmpyFjvKrcwig@mail.gmail.com>
	<4FF7AAE8.5090302@rotorised.com>
Message-ID: <7105633905302755545@unknownmsgid>

Hi all

Thanks for the reply Ryan.

My challenge was to integrate Wordpress , BuddyPress and Family CMS .

The solution to having the same menu on all platforms was a plugin
called JSON-API. The plugin exposes Wordpress functions via an API.

I had to write a special function inside this plugin that would send
the current primary menu via the API.


Regards
Dwain Maralack
0731576641

On 07 Jul 2012, at 5:20 AM, Ryan McCue <lists at rotorised.com> wrote:

> Dwain Maralack wrote:
>> <?php
>>       // no theme output
>> define('WP_USE_THEMES', false);
>>
>> $_SERVER = array(
>>    "HTTP_HOST" => "http://localhost:8888/akfam/",
>>     "SERVER_NAME" => "http://localhost:8888/akfam/",
>>     "REQUEST_URI" => "/",
>>    "REQUEST_METHOD" => "GET"
>> );
>
> You shouldn't need to do any of this unless you have badly behaving plugins.
>
>> // initializes  Wordpress
>> require_once('/Users/miiweb1/Sites/akfam/wp-blog-header.php');
>
> Use wp-load.php here instead of wp-blog-header.php
>
> ----
>
> Here's what I use:
>
> <?php
> class MyClass {
>    // ...
>    public static function load_wp() {
>        if (empty(self::$wp_path)) {
>            throw new Exception('WordPress could not be loaded', 500);
>        }
>
>        global $wp_the_query, $wp_query, $wp_rewrite, $wp;
>
>        define('DISABLE_WP_CRON', true);
>        require_once(self::$wp_path . '/wp-load.php');
>    }
>
> The globals are required if loading through a function. There may be others as well depending on what plugins you have. (WP should really have that built in, rather than assuming it's in the global context.)
>
> DISABLE_WP_CRON is for performance reasons; I don't want cron running on the site this lives on.
> --
> Ryan McCue
> <http://ryanmccue.info/>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From jnolte at getmoxied.net  Fri Jul 13 00:38:57 2012
From: jnolte at getmoxied.net (Jeffrey Nolte)
Date: Thu, 12 Jul 2012 20:38:57 -0400
Subject: [wp-hackers] 2 WP Instances with one database
In-Reply-To: <CANp7uVNuHv6tCBLpKFPV4xHknPLdfrMtXPVXkU30RYkOVSA9xw@mail.gmail.com>
References: <B781A43A-E2C7-4874-B986-4A443FDB1536@getmoxied.net>
	<CAF_6N0Nr4QnuxggnA+-yvaBy1HySQ53777fVPtwnPoZBNBkN+Q@mail.gmail.com>
	<008401cd6075$ff3b2a00$2200a8c0@TITA>
	<CANp7uVNuHv6tCBLpKFPV4xHknPLdfrMtXPVXkU30RYkOVSA9xw@mail.gmail.com>
Message-ID: <FD002B4E-3430-452E-B436-2F28822083D1@getmoxied.net>

Rafael - Great solution to our problem.  I think this will work perfectly.  One question I had is how to route the user to the desktop site in the event they would rather not browse by mobile?

Diana - In terms of the content it will be the same content and we will be using the tool src.sencha.io which is basically a proxy that resizes images appropriately for the device.  

Aleksandar - Media Queries would not work in this instance the layout is completely different.

Thanks again!

Jeff
On Jul 12, 2012, at 5:44 PM, Aleksandar Lugonja wrote:

> is there a reason not to use media queries?
> 
> On Thu, Jul 12, 2012 at 11:33 PM, Diana K. C <dianakac at gmail.com> wrote:
> 
>> Great approach but there is something more to consider: some content still
>> will not be optimized, i.e huge images in content. Maybe that is why some
>> sites has different content on both site versions.
>> 
>> ----- Original Message ----- From: "Rafael Ehlers" <rafaehlers at gmail.com>
>> To: <wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>>
>> Sent: Thursday, July 12, 2012 6:15 PM
>> Subject: Re: [wp-hackers] 2 WP Instances with one database
>> 
>> 
>> 
>> There?s the way of creating a new theme (mobile), and using a plugin to
>> redirect the users to use this mobile theme.
>> 
>> http://code.kuederle.com/**browserbasedthemes<http://code.kuederle.com/browserbasedthemes>
>> 
>> http://code.kuederle.com/**mobilewordpresstheme<http://code.kuederle.com/mobilewordpresstheme>
>> 
>> On Thu, Jul 12, 2012 at 6:09 PM, Jeffrey Nolte <jnolte at getmoxied.net>
>> wrote:
>> 
>> Hello,
>>> 
>>> I am in the process of building a mobile template for a site and would
>>> like to run the mobile site off of the same database as the current live
>>> site.
>>> 
>>> I have the following:
>>> 
>>> 1. domain.com - this site is running a standard WordPress site
>>> 2. m.domain.com - this site will make use of a mobile template (the
>>> content will never need to change here)
>>> 
>>> I know how to set symlinks for the wp-content/uploads folder and make all
>>> of the configurations for the server but am curious on how I would go
>>> about
>>> changing the domain name for the install as one will be using
>>> m.domain.comand the other will be using main domain.
>>> 
>>> Is there a specific way I can go about hardcoding the domain or another
>>> means of setting this up properly?
>>> 
>>> If there are any other suggestions to do the same thing going another
>>> route I am all ears.
>>> 
>>> Thank you in advance,
>>> 
>>> Jeffrey Nolte
>>> 
>>> 
>>> ______________________________**_________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>> 
>>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From rafaehlers at gmail.com  Fri Jul 13 00:57:15 2012
From: rafaehlers at gmail.com (Rafael Ehlers)
Date: Thu, 12 Jul 2012 21:57:15 -0300
Subject: [wp-hackers] 2 WP Instances with one database
In-Reply-To: <FD002B4E-3430-452E-B436-2F28822083D1@getmoxied.net>
References: <B781A43A-E2C7-4874-B986-4A443FDB1536@getmoxied.net>
	<CAF_6N0Nr4QnuxggnA+-yvaBy1HySQ53777fVPtwnPoZBNBkN+Q@mail.gmail.com>
	<008401cd6075$ff3b2a00$2200a8c0@TITA>
	<CANp7uVNuHv6tCBLpKFPV4xHknPLdfrMtXPVXkU30RYkOVSA9xw@mail.gmail.com>
	<FD002B4E-3430-452E-B436-2F28822083D1@getmoxied.net>
Message-ID: <CAF_6N0MKe1zmKHaZB0reWd3n8ePrm2NHrwQyj_EELJYJ1gmfeg@mail.gmail.com>

Check the code of this plugin, I remember that there is a way to use a
normal link to switch the themes.

On Thu, Jul 12, 2012 at 9:38 PM, Jeffrey Nolte <jnolte at getmoxied.net> wrote:

> Rafael - Great solution to our problem.  I think this will work perfectly.
>  One question I had is how to route the user to the desktop site in the
> event they would rather not browse by mobile?
>
> Diana - In terms of the content it will be the same content and we will be
> using the tool src.sencha.io which is basically a proxy that resizes
> images appropriately for the device.
>
> Aleksandar - Media Queries would not work in this instance the layout is
> completely different.
>
> Thanks again!
>
> Jeff
> On Jul 12, 2012, at 5:44 PM, Aleksandar Lugonja wrote:
>
> > is there a reason not to use media queries?
> >
> > On Thu, Jul 12, 2012 at 11:33 PM, Diana K. C <dianakac at gmail.com> wrote:
> >
> >> Great approach but there is something more to consider: some content
> still
> >> will not be optimized, i.e huge images in content. Maybe that is why
> some
> >> sites has different content on both site versions.
> >>
> >> ----- Original Message ----- From: "Rafael Ehlers" <
> rafaehlers at gmail.com>
> >> To: <wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com
> >>
> >> Sent: Thursday, July 12, 2012 6:15 PM
> >> Subject: Re: [wp-hackers] 2 WP Instances with one database
> >>
> >>
> >>
> >> There?s the way of creating a new theme (mobile), and using a plugin to
> >> redirect the users to use this mobile theme.
> >>
> >> http://code.kuederle.com/**browserbasedthemes<
> http://code.kuederle.com/browserbasedthemes>
> >>
> >> http://code.kuederle.com/**mobilewordpresstheme<
> http://code.kuederle.com/mobilewordpresstheme>
> >>
> >> On Thu, Jul 12, 2012 at 6:09 PM, Jeffrey Nolte <jnolte at getmoxied.net>
> >> wrote:
> >>
> >> Hello,
> >>>
> >>> I am in the process of building a mobile template for a site and would
> >>> like to run the mobile site off of the same database as the current
> live
> >>> site.
> >>>
> >>> I have the following:
> >>>
> >>> 1. domain.com - this site is running a standard WordPress site
> >>> 2. m.domain.com - this site will make use of a mobile template (the
> >>> content will never need to change here)
> >>>
> >>> I know how to set symlinks for the wp-content/uploads folder and make
> all
> >>> of the configurations for the server but am curious on how I would go
> >>> about
> >>> changing the domain name for the install as one will be using
> >>> m.domain.comand the other will be using main domain.
> >>>
> >>> Is there a specific way I can go about hardcoding the domain or another
> >>> means of setting this up properly?
> >>>
> >>> If there are any other suggestions to do the same thing going another
> >>> route I am all ears.
> >>>
> >>> Thank you in advance,
> >>>
> >>> Jeffrey Nolte
> >>>
> >>>
> >>> ______________________________**_________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> >>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> >>>
> >>> ______________________________**_________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> >> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> >> ______________________________**_________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> >> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From sinan at sinanisler.com  Fri Jul 13 01:04:36 2012
From: sinan at sinanisler.com (Sinan)
Date: Fri, 13 Jul 2012 04:04:36 +0300
Subject: [wp-hackers] Post ID and New Post Problem
In-Reply-To: <CAF_6N0N95vTZea2=TQYtxJp-hEGKfoq0iQ9o4Ts_S6X-NSKdyg@mail.gmail.com>
References: <CABmkrsHnepdoAoLBA0zAFUESXwnOGpKbmAhQcn_EhmUPJDWBZg@mail.gmail.com>
	<CAF_6N0N95vTZea2=TQYtxJp-hEGKfoq0iQ9o4Ts_S6X-NSKdyg@mail.gmail.com>
Message-ID: <CABmkrsFGpdEF2KSL6413CbYnxt+Hn5yHF_tAdjTWC9yet6ar2A@mail.gmail.com>

Thanks Rafael,

But this is not what I seek.

And this code not work :) for 2 step  maybe but 1 step adding post and meta
fields this code not works.

I think a way for solution but I'm looking better solution. My solution is;

As you know when we write a post-page wordpress panel page automatic save
the draft post and create a post id for that. Any way this is the wordpress
wp-admin way :)

We need new way. If there is it...




2012/7/13 Rafael Ehlers <rafaehlers at gmail.com>

> http://pastebin.com/rWjzJCHW
>
> On Thu, Jul 12, 2012 at 7:16 PM, Sinan <sinan at sinanisler.com> wrote:
>
> > Hello,
> >
> > As you know with wp_insert_post() function we can add new posts
> >
> > we cant add  custom field because add_post_meta() function need Post ID
> >
> > But our problem start here with wp_insert_post function creating new post
> > we dont have a Post ID
> >
> > so we cant add same time new post and custom field values. We can use
> only
> > add_post_meta function for existed posts.
> >
> > I need a solution for this. I need create post and add custom fields same
> > time.
> >
> > By the way I see same problem for attachments.
> >
> >
> > I hope we can find a solution for this.
> >
> >
> > --
> > Sinan ??LER
> > sinanisler.com <http://www.sinanisler.com>
> > fb.com/sinanisler
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From wordpress at dd32.id.au  Fri Jul 13 01:19:55 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Fri, 13 Jul 2012 11:19:55 +1000
Subject: [wp-hackers] Post ID and New Post Problem
In-Reply-To: <CABmkrsFGpdEF2KSL6413CbYnxt+Hn5yHF_tAdjTWC9yet6ar2A@mail.gmail.com>
References: <CABmkrsHnepdoAoLBA0zAFUESXwnOGpKbmAhQcn_EhmUPJDWBZg@mail.gmail.com>
	<CAF_6N0N95vTZea2=TQYtxJp-hEGKfoq0iQ9o4Ts_S6X-NSKdyg@mail.gmail.com>
	<CABmkrsFGpdEF2KSL6413CbYnxt+Hn5yHF_tAdjTWC9yet6ar2A@mail.gmail.com>
Message-ID: <CAL4EHfmsf8M1ATVoZSzYZuUO-LM=FcmNgJJUQD6E+7RBkNTQJw@mail.gmail.com>

It does exactly what you want.

wp_insert_post() returns the $post_id of the created post, you can
then add meta to it. This is how every plugin operates, if it doesn't
work for you, you've probably got a bug in your code elsewhere.

On 13 July 2012 11:04, Sinan <sinan at sinanisler.com> wrote:
> Thanks Rafael,
>
> But this is not what I seek.
>
> And this code not work :) for 2 step  maybe but 1 step adding post and meta
> fields this code not works.
>
> I think a way for solution but I'm looking better solution. My solution is;
>
> As you know when we write a post-page wordpress panel page automatic save
> the draft post and create a post id for that. Any way this is the wordpress
> wp-admin way :)
>
> We need new way. If there is it...
>
>
>
>
> 2012/7/13 Rafael Ehlers <rafaehlers at gmail.com>
>
>> http://pastebin.com/rWjzJCHW
>>
>> On Thu, Jul 12, 2012 at 7:16 PM, Sinan <sinan at sinanisler.com> wrote:
>>
>> > Hello,
>> >
>> > As you know with wp_insert_post() function we can add new posts
>> >
>> > we cant add  custom field because add_post_meta() function need Post ID
>> >
>> > But our problem start here with wp_insert_post function creating new post
>> > we dont have a Post ID
>> >
>> > so we cant add same time new post and custom field values. We can use
>> only
>> > add_post_meta function for existed posts.
>> >
>> > I need a solution for this. I need create post and add custom fields same
>> > time.
>> >
>> > By the way I see same problem for attachments.
>> >
>> >
>> > I hope we can find a solution for this.
>> >
>> >
>> > --
>> > Sinan ??LER
>> > sinanisler.com <http://www.sinanisler.com>
>> > fb.com/sinanisler
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com>
> fb.com/sinanisler
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From sinan at sinanisler.com  Fri Jul 13 01:30:38 2012
From: sinan at sinanisler.com (Sinan)
Date: Fri, 13 Jul 2012 04:30:38 +0300
Subject: [wp-hackers] Post ID and New Post Problem
In-Reply-To: <CAL4EHfmsf8M1ATVoZSzYZuUO-LM=FcmNgJJUQD6E+7RBkNTQJw@mail.gmail.com>
References: <CABmkrsHnepdoAoLBA0zAFUESXwnOGpKbmAhQcn_EhmUPJDWBZg@mail.gmail.com>
	<CAF_6N0N95vTZea2=TQYtxJp-hEGKfoq0iQ9o4Ts_S6X-NSKdyg@mail.gmail.com>
	<CABmkrsFGpdEF2KSL6413CbYnxt+Hn5yHF_tAdjTWC9yet6ar2A@mail.gmail.com>
	<CAL4EHfmsf8M1ATVoZSzYZuUO-LM=FcmNgJJUQD6E+7RBkNTQJw@mail.gmail.com>
Message-ID: <CABmkrsFDG+w7FaZkyYYaH+0VGDEVvg0zyzqwsmigMygcmjWsyQ@mail.gmail.com>

OH YES !

Sorry for my mistake. I try similar things that because I think like that.

it works fine.

Thank you.


2012/7/13 Dion Hulse (dd32) <wordpress at dd32.id.au>

> It does exactly what you want.
>
> wp_insert_post() returns the $post_id of the created post, you can
> then add meta to it. This is how every plugin operates, if it doesn't
> work for you, you've probably got a bug in your code elsewhere.
>
> On 13 July 2012 11:04, Sinan <sinan at sinanisler.com> wrote:
> > Thanks Rafael,
> >
> > But this is not what I seek.
> >
> > And this code not work :) for 2 step  maybe but 1 step adding post and
> meta
> > fields this code not works.
> >
> > I think a way for solution but I'm looking better solution. My solution
> is;
> >
> > As you know when we write a post-page wordpress panel page automatic save
> > the draft post and create a post id for that. Any way this is the
> wordpress
> > wp-admin way :)
> >
> > We need new way. If there is it...
> >
> >
> >
> >
> > 2012/7/13 Rafael Ehlers <rafaehlers at gmail.com>
> >
> >> http://pastebin.com/rWjzJCHW
> >>
> >> On Thu, Jul 12, 2012 at 7:16 PM, Sinan <sinan at sinanisler.com> wrote:
> >>
> >> > Hello,
> >> >
> >> > As you know with wp_insert_post() function we can add new posts
> >> >
> >> > we cant add  custom field because add_post_meta() function need Post
> ID
> >> >
> >> > But our problem start here with wp_insert_post function creating new
> post
> >> > we dont have a Post ID
> >> >
> >> > so we cant add same time new post and custom field values. We can use
> >> only
> >> > add_post_meta function for existed posts.
> >> >
> >> > I need a solution for this. I need create post and add custom fields
> same
> >> > time.
> >> >
> >> > By the way I see same problem for attachments.
> >> >
> >> >
> >> > I hope we can find a solution for this.
> >> >
> >> >
> >> > --
> >> > Sinan ??LER
> >> > sinanisler.com <http://www.sinanisler.com>
> >> > fb.com/sinanisler
> >> > _______________________________________________
> >> > wp-hackers mailing list
> >> > wp-hackers at lists.automattic.com
> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> >
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >
> >
> >
> > --
> > Sinan ??LER
> > sinanisler.com <http://www.sinanisler.com>
> > fb.com/sinanisler
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From aero.maxx.d at gmail.com  Fri Jul 13 12:56:21 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Fri, 13 Jul 2012 13:56:21 +0100
Subject: [wp-hackers] Custom Post Types or a Plugin
Message-ID: <7987760040962231669@unknownmsgid>

This question maybe OT so I apologise in advance if so.

I've been working on a lottery site as a hobby project which isn't live at
the moment and I'm wanting to include some statistical facts about the
individual numbers in the lottery games.

The urls would similar to http://www.domain/facts/([0-9]{1,})/ or
http://www.domain.com/facts/game/lotto/([0-9]{1,})/

I'm not sure what the best way to go about this is, would it be best
advised to do a custom post type and put short codes into the posts to keep
the ever changing statistics update, this would mean I could put the custom
post type into the menu easily and have the individual games as a drop down
from the number facts pages.

Or would it be best to create a single page called facts have the short
code from a plugin inserted here and have the plugin handle everything, it
would mean I would have to use custom links in the menu to get the links
for individual game statistics. The only downside I can see is that I would
lose the blog style listing when viewing the number facts for an individual
game as the custom post type option would have an individual post per
number and game. So this option may not look quite as good or easy to read
and find and could potentially be more work and hassle for me to make it
look good.

The number fact page for an individual number would have some basic textual
facts and a graph also in the page.

What are your thoughts any help advice or suggestions your able to provide
would be most helpful!

Thank you
Daniel.

From brasofilo at gmail.com  Fri Jul 13 14:33:23 2012
From: brasofilo at gmail.com (Rodolfo Buaiz)
Date: Fri, 13 Jul 2012 16:33:23 +0200
Subject: [wp-hackers] Any drawbacks in setting WP_CONTENT_DIR (and URL) to
	DOCUMENT_ROOT?
Message-ID: <CACzxQMa2jnTdPyvDEbaxq_MzORjHyXYO27gdYckouZgXHk6_rA@mail.gmail.com>

G'evening, wp-hackers out there!

Haven't tested this, but anyone can preview any troubles with this setup in
wp-config.php?
(WordPress installed at the root)

define( 'WP_CONTENT_DIR', $_SERVER['DOCUMENT_ROOT'] );
define( 'WP_CONTENT_URL', 'http://www.example.com' );

`/public_html` structure:

index.php
/plugins
/themes
/uploads
/wp-admin
wp-config.php
/wp-includes
wp-load.php


thanks,

Rodolfo Buaiz
Productor Multimedia
Pen?nsula Ib?rica
+34 68.760.1407
skype: brasofilo
www.rodbuaiz.com

From johnbillion+wp at gmail.com  Fri Jul 13 14:55:24 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri, 13 Jul 2012 15:55:24 +0100
Subject: [wp-hackers] Any drawbacks in setting WP_CONTENT_DIR (and URL)
	to DOCUMENT_ROOT?
In-Reply-To: <CACzxQMa2jnTdPyvDEbaxq_MzORjHyXYO27gdYckouZgXHk6_rA@mail.gmail.com>
References: <CACzxQMa2jnTdPyvDEbaxq_MzORjHyXYO27gdYckouZgXHk6_rA@mail.gmail.com>
Message-ID: <CAOqAKWDK9mAiwUaioE-UnkZMRWWgjnvGGLWuHuhGcc97WZYLEg@mail.gmail.com>

On 13 July 2012 15:33, Rodolfo Buaiz <brasofilo at gmail.com> wrote:
> G'evening, wp-hackers out there!
>
> Haven't tested this, but anyone can preview any troubles with this setup in
> wp-config.php?
> (WordPress installed at the root)
>
> define( 'WP_CONTENT_DIR', $_SERVER['DOCUMENT_ROOT'] );
> define( 'WP_CONTENT_URL', 'http://www.example.com' );

I've had this structure active on a site for the last 18 months and
haven't seen any problems. As with any change to the location of the
content directory, you'll need to double check any plugins you add to
the site don't assume that the content directory is at wp-content.
Most plugins should be fine, but there are bound to be plugins out
there that still hard code path such as 'wp-content/plugins'.

John

From otto at ottodestruct.com  Fri Jul 13 15:50:32 2012
From: otto at ottodestruct.com (Otto)
Date: Fri, 13 Jul 2012 10:50:32 -0500
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CAPtWN+wJc1a-J7pMOvjAh7d45jfCVrpb2D7n6ZicVrdOxavxqA@mail.gmail.com>
References: <CAPtWN+wJc1a-J7pMOvjAh7d45jfCVrpb2D7n6ZicVrdOxavxqA@mail.gmail.com>
Message-ID: <CAD-FghzBBxFf8Jmm00cO9XYhuqDPb1+SjbMP1MKgvbBery=c-A@mail.gmail.com>

On Thu, Jul 12, 2012 at 1:02 PM, Brian Fegter <brian at fegter.com> wrote:
> Just curious as to how WP collects these statistics? Is this sent in on
> plugin searches or initial installs?

Core update check sends these three version numbers as part of it.
This helped with the 3.0 update immensely, since PHP 5 was a
requirement change there, if you had WP 2.9 and PHP 4, you didn't get
an update notice (or at least not the normal update notice). Helped to
avoid breaking sites.

-Otto

From wordpress at zed1.com  Fri Jul 13 15:57:43 2012
From: wordpress at zed1.com (Mike Little)
Date: Fri, 13 Jul 2012 16:57:43 +0100
Subject: [wp-hackers] Any drawbacks in setting WP_CONTENT_DIR (and URL)
	to DOCUMENT_ROOT?
In-Reply-To: <CAOqAKWDK9mAiwUaioE-UnkZMRWWgjnvGGLWuHuhGcc97WZYLEg@mail.gmail.com>
References: <CACzxQMa2jnTdPyvDEbaxq_MzORjHyXYO27gdYckouZgXHk6_rA@mail.gmail.com>
	<CAOqAKWDK9mAiwUaioE-UnkZMRWWgjnvGGLWuHuhGcc97WZYLEg@mail.gmail.com>
Message-ID: <CAMb54M0YOC1_5BgYrKoV9O1+-WafT4g5SCDdonqBWsFDLgUSbA@mail.gmail.com>

On 13 July 2012 15:55, John Blackbourn <johnbillion+wp at gmail.com> wrote:

> On 13 July 2012 15:33, Rodolfo Buaiz <brasofilo at gmail.com> wrote:
> > G'evening, wp-hackers out there!
> >
> > Haven't tested this, but anyone can preview any troubles with this setup
> in
> > wp-config.php?
> > (WordPress installed at the root)
> >
> > define( 'WP_CONTENT_DIR', $_SERVER['DOCUMENT_ROOT'] );
> > define( 'WP_CONTENT_URL', 'http://www.example.com' );
>
>
There are discussions around the net the $_SERVER['DOCUMENT_ROOT'] may be
susceptible to hacking. In which case this is extremely dangerous because
there are lots of places that require() or include() WP_CONTENT_DIR .
'something';


Mike





> I've had this structure active on a site for the last 18 months and
> haven't seen any problems. As with any change to the location of the
> content directory, you'll need to double check any plugins you add to
> the site don't assume that the content directory is at wp-content.
> Most plugins should be fine, but there are bound to be plugins out
> there that still hard code path such as 'wp-content/plugins'.
>
> John
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>


-- 
Mike Little
http://zed1.com/

From otto at ottodestruct.com  Fri Jul 13 16:00:48 2012
From: otto at ottodestruct.com (Otto)
Date: Fri, 13 Jul 2012 11:00:48 -0500
Subject: [wp-hackers] Any drawbacks in setting WP_CONTENT_DIR (and URL)
	to DOCUMENT_ROOT?
In-Reply-To: <CAMb54M0YOC1_5BgYrKoV9O1+-WafT4g5SCDdonqBWsFDLgUSbA@mail.gmail.com>
References: <CACzxQMa2jnTdPyvDEbaxq_MzORjHyXYO27gdYckouZgXHk6_rA@mail.gmail.com>
	<CAOqAKWDK9mAiwUaioE-UnkZMRWWgjnvGGLWuHuhGcc97WZYLEg@mail.gmail.com>
	<CAMb54M0YOC1_5BgYrKoV9O1+-WafT4g5SCDdonqBWsFDLgUSbA@mail.gmail.com>
Message-ID: <CAD-FghwjnUhvVjgDKs_1h9-ugyQ49n3pY3q1V71MFHS8pfqAmg@mail.gmail.com>

On Fri, Jul 13, 2012 at 10:57 AM, Mike Little <wordpress at zed1.com> wrote:
>> > Haven't tested this, but anyone can preview any troubles with this setup
>> in
>> > wp-config.php?
>> > (WordPress installed at the root)
>> >
>> > define( 'WP_CONTENT_DIR', $_SERVER['DOCUMENT_ROOT'] );
>> > define( 'WP_CONTENT_URL', 'http://www.example.com' );
>>
>>
> There are discussions around the net the $_SERVER['DOCUMENT_ROOT'] may be
> susceptible to hacking. In which case this is extremely dangerous because
> there are lots of places that require() or include() WP_CONTENT_DIR .
> 'something';

What Mike said.

In general, $_SERVER is not safe. It's a mix of information from the
webserver, some of which can be changed by the web browser connecting
to the server.

There are cases where the content in $_SERVER can be perfectly safe,
but for security purposes, it is better to always treat it as
untrusted data. For this specific case, hardcode the directory.

-Otto

From beau at dentedreality.com.au  Fri Jul 13 16:31:12 2012
From: beau at dentedreality.com.au (Beau Lebens)
Date: Fri, 13 Jul 2012 18:31:12 +0200
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
Message-ID: <CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>

> I could seriously see integrating KeyRing support into what we are building, but if we stick with 5.2.4 which is what we are learning toward, then the 5.3 requirement would be a non-starter.
>
> I'm curious, which specific 5.3 features did you use?  I scanned the code but I couldn't find anything obvious.  And are the PHP 5.3-specific features essential to the architecture or simply for convenience?  IOW, would a "KeyRing 5.2" fork be viable and maintainable?  Thanks in advance.

I'm not 100% sure to be honest. We develop on a 5.3 platform (both on
WordPress.com, and myself, on my personal site), so that's all I've
ever tested it on. I didn't intentionally *make* it 5.3, I have just
never tried to make it work on anything lower and made an effort to
use a bit more of a "modern" approach to developing it. It may well
work on 5.2, especially since I changed a few uses of late static
binding which were previously breaking things after a couple of people
reported it.

If you try it out and it seems to work, then great, I guess we can
remove that message :) I don't have immediate access to a 5.2 install
though, so I can't confirm that it does or doesn't work.

Cheers,
Beau

From chason at gmail.com  Fri Jul 13 16:35:22 2012
From: chason at gmail.com (Chason Chaffin)
Date: Fri, 13 Jul 2012 09:35:22 -0700
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
Message-ID: <CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>

Unless you're doing something that isn't compatible with 5.3 (which aside
from some poorly updated themes, shouldn't be much) I don't see much of a
point to working in 5.2.x as opposed to 5.3.x. At this point the 5.3.x
branch has been out for almost 3 years, and 5.2.x has been EOL for almost 2
years.

On Fri, Jul 13, 2012 at 9:31 AM, Beau Lebens <beau at dentedreality.com.au>wrote:

> > I could seriously see integrating KeyRing support into what we are
> building, but if we stick with 5.2.4 which is what we are learning toward,
> then the 5.3 requirement would be a non-starter.
> >
> > I'm curious, which specific 5.3 features did you use?  I scanned the
> code but I couldn't find anything obvious.  And are the PHP 5.3-specific
> features essential to the architecture or simply for convenience?  IOW,
> would a "KeyRing 5.2" fork be viable and maintainable?  Thanks in advance.
>
> I'm not 100% sure to be honest. We develop on a 5.3 platform (both on
> WordPress.com, and myself, on my personal site), so that's all I've
> ever tested it on. I didn't intentionally *make* it 5.3, I have just
> never tried to make it work on anything lower and made an effort to
> use a bit more of a "modern" approach to developing it. It may well
> work on 5.2, especially since I changed a few uses of late static
> binding which were previously breaking things after a couple of people
> reported it.
>
> If you try it out and it seems to work, then great, I guess we can
> remove that message :) I don't have immediate access to a 5.2 install
> though, so I can't confirm that it does or doesn't work.
>
> Cheers,
> Beau
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From lists at rotorised.com  Fri Jul 13 16:38:51 2012
From: lists at rotorised.com (Ryan McCue)
Date: Sat, 14 Jul 2012 02:38:51 +1000
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
Message-ID: <50004F1B.2000907@rotorised.com>

Beau Lebens wrote:
> If you try it out and it seems to work, then great, I guess we can
> remove that message :) I don't have immediate access to a 5.2 install
> though, so I can't confirm that it does or doesn't work.

I can confirm from a reading of the code that there's still late static
binding in there.

In Keyring_Service: lines 73, 104, 113, 201, 215, 221, 240 all use
get_called_class() which is a late static binding. This *could* be
replaced (using debug_backtrace()), however it's probably a pain.

There may be more as well; I haven't checked the entire codebase.
-- 
Ryan McCue
<http://ryanmccue.info/>



From johnbillion+wp at gmail.com  Fri Jul 13 16:41:41 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri, 13 Jul 2012 17:41:41 +0100
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
Message-ID: <CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>

On 13 July 2012 17:35, Chason Chaffin <chason at gmail.com> wrote:
> Unless you're doing something that isn't compatible with 5.3 (which aside
> from some poorly updated themes, shouldn't be much) I don't see much of a
> point to working in 5.2.x as opposed to 5.3.x. At this point the 5.3.x
> branch has been out for almost 3 years, and 5.2.x has been EOL for almost 2
> years.

Except for the reason given by Otto: "Almost three quarters of the
WordPress userbase is still on PHP 5.2."

From chason at gmail.com  Fri Jul 13 17:19:41 2012
From: chason at gmail.com (Chason Chaffin)
Date: Fri, 13 Jul 2012 10:19:41 -0700
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
Message-ID: <CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>

Well just because everyone else is using an outdated piece of software does
that mean you should too? Lots of people are still using old versions of
timthumb.php, but that doesn't seem like a reason to follow their example.

I don't see any reason for any NEW installation of WordPress to be using
5.2. I'm not saying that 5.3 should be mandatory (although I don't think
its the worst idea from a security stand point), but if you're starting up
a new site and trying to figure out whether or not to use PHP 5.2 or 5.3 I
think the decision is easy.

On Fri, Jul 13, 2012 at 9:41 AM, John Blackbourn
<johnbillion+wp at gmail.com>wrote:

> On 13 July 2012 17:35, Chason Chaffin <chason at gmail.com> wrote:
> > Unless you're doing something that isn't compatible with 5.3 (which aside
> > from some poorly updated themes, shouldn't be much) I don't see much of a
> > point to working in 5.2.x as opposed to 5.3.x. At this point the 5.3.x
> > branch has been out for almost 3 years, and 5.2.x has been EOL for
> almost 2
> > years.
>
> Except for the reason given by Otto: "Almost three quarters of the
> WordPress userbase is still on PHP 5.2."
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From johnbillion+wp at gmail.com  Fri Jul 13 17:31:44 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri, 13 Jul 2012 18:31:44 +0100
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
Message-ID: <CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>

On 13 July 2012 18:19, Chason Chaffin <chason at gmail.com> wrote:
> Well just because everyone else is using an outdated piece of software does
> that mean you should too? Lots of people are still using old versions of
> timthumb.php, but that doesn't seem like a reason to follow their example.
>
> I don't see any reason for any NEW installation of WordPress to be using
> 5.2. I'm not saying that 5.3 should be mandatory (although I don't think
> its the worst idea from a security stand point), but if you're starting up
> a new site and trying to figure out whether or not to use PHP 5.2 or 5.3 I
> think the decision is easy.

The OP isn't asking which version of PHP he should use. He's asking
which is the minimum version he should require for his plugin.
Unfortunately,  PHP 5.2 has such a high distribution (currently 75% of
all WordPress sites) that requiring 5.3 may mean many users can't use
his plugin.

From brasofilo at gmail.com  Fri Jul 13 18:48:54 2012
From: brasofilo at gmail.com (Rodolfo Buaiz)
Date: Fri, 13 Jul 2012 20:48:54 +0200
Subject: [wp-hackers] Any drawbacks in setting WP_CONTENT_DIR (and URL)
	to DOCUMENT_ROOT?
Message-ID: <CACzxQMZhJv9TgBhWA7TASH3-yOKKQmna+qpjd4QzMFRiJOY3NQ@mail.gmail.com>

>> > Haven't tested this, but anyone can preview any troubles with this
setup
>> in
>> > wp-config.php?
>> > (WordPress installed at the root)
>> >
>> > define( 'WP_CONTENT_DIR', $_SERVER['DOCUMENT_ROOT'] );
>> > define( 'WP_CONTENT_URL', 'http://www.example.com' );
>>
>>
> There are discussions around the net the $_SERVER['DOCUMENT_ROOT'] may be
> susceptible to hacking. In which case this is extremely dangerous because
> there are lots of places that require() or include() WP_CONTENT_DIR .
> 'something';

Thanks John, Mike and Otto for the great feedback.

Now confident on going on with the envisioned setup.

Rodolfo

From mickyhulse.lists at gmail.com  Fri Jul 13 19:08:19 2012
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Fri, 13 Jul 2012 12:08:19 -0700
Subject: [wp-hackers] Any drawbacks in setting WP_CONTENT_DIR (and URL)
	to DOCUMENT_ROOT?
In-Reply-To: <CACzxQMZhJv9TgBhWA7TASH3-yOKKQmna+qpjd4QzMFRiJOY3NQ@mail.gmail.com>
References: <CACzxQMZhJv9TgBhWA7TASH3-yOKKQmna+qpjd4QzMFRiJOY3NQ@mail.gmail.com>
Message-ID: <CALri7MnnG_vk1LgnWusuphXmT48GOu3vF2ShmGkYFBt1ELsfsQ@mail.gmail.com>

Hi Rodolfo,

On Fri, Jul 13, 2012 at 11:48 AM, Rodolfo Buaiz <brasofilo at gmail.com> wrote:
> Now confident on going on with the envisioned setup.

Just out of curiosity, what's the final code going to look like (i.e
are you going to use/not use $_SERVER['DOCUMENT_ROOT'])?

Thanks!
Micky

From brasofilo at gmail.com  Fri Jul 13 20:03:02 2012
From: brasofilo at gmail.com (Rodolfo Buaiz)
Date: Fri, 13 Jul 2012 22:03:02 +0200
Subject: [wp-hackers] Any drawbacks in setting WP_CONTENT_DIR (and URL)
	to DOCUMENT_ROOT?
In-Reply-To: <CALri7MnnG_vk1LgnWusuphXmT48GOu3vF2ShmGkYFBt1ELsfsQ@mail.gmail.com>
References: <CACzxQMZhJv9TgBhWA7TASH3-yOKKQmna+qpjd4QzMFRiJOY3NQ@mail.gmail.com>
	<CALri7MnnG_vk1LgnWusuphXmT48GOu3vF2ShmGkYFBt1ELsfsQ@mail.gmail.com>
Message-ID: <CACzxQMaDHNPyjdV2gvK5Rxdx_kLgfUfdRe5GjcpPB88ByMW=rg@mail.gmail.com>

Oh, I'll follow the boss suggestion and hardcode it: /www/username/public_html

After all, why put some not so certain server constant when we can
hardcode the real path?
:o)

On 7/13/12, Micky Hulse <mickyhulse.lists at gmail.com> wrote:
> Hi Rodolfo,
>
> On Fri, Jul 13, 2012 at 11:48 AM, Rodolfo Buaiz <brasofilo at gmail.com>
> wrote:
>> Now confident on going on with the envisioned setup.
>
> Just out of curiosity, what's the final code going to look like (i.e
> are you going to use/not use $_SERVER['DOCUMENT_ROOT'])?
>
> Thanks!
> Micky
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Rodolfo Buaiz
Productor Multimedia
Pen?nsula Ib?rica
+34 68.760.1407
skype: brasofilo
www.rodbuaiz.com

From mickyhulse.lists at gmail.com  Fri Jul 13 21:16:04 2012
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Fri, 13 Jul 2012 14:16:04 -0700
Subject: [wp-hackers] Any drawbacks in setting WP_CONTENT_DIR (and URL)
	to DOCUMENT_ROOT?
In-Reply-To: <CACzxQMaDHNPyjdV2gvK5Rxdx_kLgfUfdRe5GjcpPB88ByMW=rg@mail.gmail.com>
References: <CACzxQMZhJv9TgBhWA7TASH3-yOKKQmna+qpjd4QzMFRiJOY3NQ@mail.gmail.com>
	<CALri7MnnG_vk1LgnWusuphXmT48GOu3vF2ShmGkYFBt1ELsfsQ@mail.gmail.com>
	<CACzxQMaDHNPyjdV2gvK5Rxdx_kLgfUfdRe5GjcpPB88ByMW=rg@mail.gmail.com>
Message-ID: <CALri7Mk5C+d0Z8JTVeCDk=5ymKdpMcY5hpHF_25VKo9fu+nFmg@mail.gmail.com>

On Fri, Jul 13, 2012 at 1:03 PM, Rodolfo Buaiz <brasofilo at gmail.com> wrote:
> Oh, I'll follow the boss suggestion and hardcode it: /www/username/public_html

Awesome! I appreciate the follow up. Thanks! :)

From beau at dentedreality.com.au  Fri Jul 13 22:36:03 2012
From: beau at dentedreality.com.au (Beau Lebens)
Date: Sat, 14 Jul 2012 00:36:03 +0200
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
Message-ID: <CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>

If I was writing a plugin/system/component/theme/whatever for
WordPress with distribution and widespread adoption in mind, then I'd
aim it at the base WordPress requirements, so 5.2.

Since I wasn't doing those things, I wrote it in what I was
comfortable in and what worked for me, 5.3.


On Fri, Jul 13, 2012 at 7:31 PM, John Blackbourn
<johnbillion+wp at gmail.com> wrote:
> On 13 July 2012 18:19, Chason Chaffin <chason at gmail.com> wrote:
>> Well just because everyone else is using an outdated piece of software does
>> that mean you should too? Lots of people are still using old versions of
>> timthumb.php, but that doesn't seem like a reason to follow their example.
>>
>> I don't see any reason for any NEW installation of WordPress to be using
>> 5.2. I'm not saying that 5.3 should be mandatory (although I don't think
>> its the worst idea from a security stand point), but if you're starting up
>> a new site and trying to figure out whether or not to use PHP 5.2 or 5.3 I
>> think the decision is easy.
>
> The OP isn't asking which version of PHP he should use. He's asking
> which is the minimum version he should require for his plugin.
> Unfortunately,  PHP 5.2 has such a high distribution (currently 75% of
> all WordPress sites) that requiring 5.3 may mean many users can't use
> his plugin.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp-hackers at thecodecave.com  Sat Jul 14 00:22:23 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Fri, 13 Jul 2012 20:22:23 -0400
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
Message-ID: <5000BBBF.6090209@thecodecave.com>

On 7/13/2012 6:36 PM, Beau Lebens wrote:
> If I was writing a plugin/system/component/theme/whatever for
> WordPress with distribution and widespread adoption in mind, then I'd
> aim it at the base WordPress requirements, so 5.2.
>
> Since I wasn't doing those things, I wrote it in what I was
> comfortable in and what worked for me, 5.3.
>
That's a fair statement and completely legit.

We need to remember that it is up to the developer what software they 
write and how they write it.  Their goals and plans may not match those 
of majority and that's perfectly fine.  If someone wants to come along 
and respectfully (or not I suppose) create a derivative work without 
those requirements, that's the benefit of GPL.

That said, I've no problem with plugins starting raise the bar higher 
than circa 2008.  This sort of thing is what starts the ball rolling and 
causes clients to ask questions about upgrading their servers/hosting to 
newer software releases. From everything I've seen, 5.3 is significantly 
faster than 5.2 and may offer some security improvements over the 
version currently installed on a server. This is a good thing..

Brian Layman

From liste at srpski.biz  Sat Jul 14 10:04:51 2012
From: liste at srpski.biz (=?UTF-8?B?TWlsYW4gRGluacSH?=)
Date: Sat, 14 Jul 2012 12:04:51 +0200
Subject: [wp-hackers] Generate a POT file script
In-Reply-To: <4FF7AC41.7070105@rotorised.com>
References: <8627EC0E-6101-4836-A937-AD1BE378FBB0@cspath.com>
	<CAD-FghycfnahZfEM65eNF23WQDxHK7CLaCh0ZSuwx1g4tKRpLg@mail.gmail.com>
	<4FF7AC41.7070105@rotorised.com>
Message-ID: <CAHH1Td5G_+aNQKzhqsNwhx2mVjnwvZr12TzFX+7yeGENc-aM2w@mail.gmail.com>

I don't think that will be easier to customize PoEdit since nowadays there
are a lot of functions that are used in WP. Using this tool is very easy,
here you have a commands:
http://codex.wordpress.org/I18n_for_WordPress_Developers#Generating_a_POT_file

2012/7/7 Ryan McCue <lists at rotorised.com>

> Otto wrote:
>
>> Although there probably are other tools that can do the job as well.
>>
>
> I believe PoEdit will do the job, although you'll have to customise it to
> match WP's functions: http://www.poedit.net/ - It may be slightly easier
> than setting up the WP script for your plugin.
>
> --
> Ryan McCue
> <http://ryanmccue.info/>
>
>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From mike at newclarity.net  Sat Jul 14 20:03:37 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sat, 14 Jul 2012 16:03:37 -0400
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <5000BBBF.6090209@thecodecave.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
Message-ID: <B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>

Hi guys,

I really appreciate all the feedback on this.  Ryan, thanks for finding the get_called_class() function, I wasn't familiar with it though I definitely see why it's needed (I have been focused on __callStatic().)

To everyone who commented may I ask what *you* would choose as a minimum requirement? Assume you are planning to release an open-source plugin targeting professional site builders who build CMS-focused WordPress websites for businesses and other organization (as opposed to "feature" plugins for a existing blogs?) 

The nature of the plugins are they will be used for new sites only, or maybe for existing sites if they are significantly overhauled and our goal will be to establish a large base of site builders using them. Note that what we have includes one foundational plugin, not really a "feature" plugin and nothing an end user would install, and then multiple vertical-market focused plugins (we're starting with just one vertical market.) 

The reason we're agonizing over this is because when I asked on Twitter I got answers from professional site builders like this that indicate they might have to build for <5.3:

https://twitter.com/norcross/status/220231230384390145

Also earlier this year I was consulting with an agency that was building a website for Coke and they (Coke) had a specific install that the agency was required to use because it had been tested and validated;  it was WordPress v3.1 (yes, 3.3 was already out, but they were not allowed to use it.) Of course in that situation they would likely not be able to use our plugin(s) either, so that scenario is likely moot.

So we've been back and forth on this issue and, at this minute are leaning to 5.3 being a minimum requirement.  But given that wide adoption is a goal I ask Otto, Beau, Michael, Brian, Ryan, John and Brian: "What would *you* chose as a min PHP level required for use if you were releasing a plugin targeting the same market and with the same goals?" (Chason, I assume I already know what you would do. :)

Thanks again in advance for your advice.

-Mike



On Jul 13, 2012, at 8:22 PM, Brian Layman wrote:

> On 7/13/2012 6:36 PM, Beau Lebens wrote:
>> If I was writing a plugin/system/component/theme/whatever for
>> WordPress with distribution and widespread adoption in mind, then I'd
>> aim it at the base WordPress requirements, so 5.2.
>> 
>> Since I wasn't doing those things, I wrote it in what I was
>> comfortable in and what worked for me, 5.3.
>> 
> That's a fair statement and completely legit.
> 
> We need to remember that it is up to the developer what software they write and how they write it.  Their goals and plans may not match those of majority and that's perfectly fine.  If someone wants to come along and respectfully (or not I suppose) create a derivative work without those requirements, that's the benefit of GPL.
> 
> That said, I've no problem with plugins starting raise the bar higher than circa 2008.  This sort of thing is what starts the ball rolling and causes clients to ask questions about upgrading their servers/hosting to newer software releases. From everything I've seen, 5.3 is significantly faster than 5.2 and may offer some security improvements over the version currently installed on a server. This is a good thing..
> 
> Brian Layman
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From beau at dentedreality.com.au  Sat Jul 14 21:52:07 2012
From: beau at dentedreality.com.au (Beau Lebens)
Date: Sat, 14 Jul 2012 23:52:07 +0200
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
Message-ID: <CAFuJWcdjO3ciFzaWLE9eLi_+q9jEPwOrrT20BJyuLXz2BTqRmw@mail.gmail.com>

> So we've been back and forth on this issue and, at this minute are leaning to 5.3 being a minimum requirement.  But given that wide adoption is a goal I ask Otto, Beau, Michael, Brian, Ryan, John and Brian: "What would *you* chose as a min PHP level required for use if you were releasing a plugin targeting the same market and with the same goals?" (Chason, I assume I already know what you would do. :)

As mentioned previously, if I was actually aiming for adoption I would
personally aim at 5.2. Given your described audience, I would
definitely aim for 5.2, since a lot of them are probably subject to
(ridiculous, external) imposed limitations coming from their clients.

From mike at newclarity.net  Sat Jul 14 21:58:29 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sat, 14 Jul 2012 17:58:29 -0400
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CAFuJWcdjO3ciFzaWLE9eLi_+q9jEPwOrrT20BJyuLXz2BTqRmw@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
	<CAFuJWcdjO3ciFzaWLE9eLi_+q9jEPwOrrT20BJyuLXz2BTqRmw@mail.gmail.com>
Message-ID: <31A5029B-3B81-44FF-83B0-87167C271113@newclarity.net>

> As mentioned previously, if I was actually aiming for adoption I would
> personally aim at 5.2. Given your described audience, I would
> definitely aim for 5.2, since a lot of them are probably subject to
> (ridiculous, external) imposed limitations coming from their clients.

Thanks.  

(just when I was leaning to recommend we choose 5.3... :)

-Mike 

From lists at rotorised.com  Sun Jul 15 03:42:08 2012
From: lists at rotorised.com (Ryan McCue)
Date: Sun, 15 Jul 2012 13:42:08 +1000
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
Message-ID: <50023C10.4060500@rotorised.com>

Mike Schinkel wrote:
> To everyone who commented may I ask what *you* would choose as a minimum requirement?

I'd do the same as I do for my open source projects: look at the
requirements for the project itself. For example, if I'm building a
system that involves a lot of classes with static methods, and those
have to be overridden, I might need late static bindings. If I want to
use PHP 5.3+ libraries or namespaces, then 5.3 is what I'd go for.

Personally, I almost always code for 5.2, but recommend 5.3. Requests
[0] and SimplePie [1] are both 5.2+, simply because it's so easy to
support 5.2 if you're careful.

(Sidenote: If you want late static binding on 5.2 (specifically,
`get_called_class()`, try this [2])

[0]: http://requests.ryanmccue.info/
[1]: http://simplepie.org/
[2]: https://gist.github.com/3114816

-- 
Ryan McCue
<http://ryanmccue.info/>



From mike at newclarity.net  Sun Jul 15 03:48:07 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sat, 14 Jul 2012 23:48:07 -0400
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <50023C10.4060500@rotorised.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
	<50023C10.4060500@rotorised.com>
Message-ID: <69E2B1B5-7996-4CB4-887C-E7D732A8A954@newclarity.net>

On Jul 14, 2012, at 11:42 PM, Ryan McCue wrote:
> 
> I'd do the same as I do for my open source projects: look at the...

Thanks.

> (Sidenote: If you want late static binding on 5.2 (specifically,
> `get_called_class()`, try this [2])
> 
> ...
> 
> [2]: https://gist.github.com/3114816

Yeah, I've got some very similar code in our plugin but I assume it's not performant enough if it might get called a large number of times per page load. Ever benchmarked it?

-Mike


From lists at rotorised.com  Sun Jul 15 03:52:45 2012
From: lists at rotorised.com (Ryan McCue)
Date: Sun, 15 Jul 2012 13:52:45 +1000
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <50023C10.4060500@rotorised.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
	<50023C10.4060500@rotorised.com>
Message-ID: <50023E8D.70903@rotorised.com>

Ryan McCue wrote:
> Mike Schinkel wrote:
>> To everyone who commented may I ask what *you* would choose as a minimum requirement?
> 
> I'd do the same as I do for my open source projects: look at the
> requirements for the project itself.

Addendum: given that you're targeting developers, it's a good idea to
look at it from their point of view.

If they're developing for clients on shared hosting, then they could be
on anything: the current Ubuntu LTS (10.04) comes with 5.3, while CentOS
5 has 5.1.

If they're on a VPS or dedicated, likely it's their choice, so they'll
be running 5.3 or 5.4 (since they're faster, and 5.3 is pretty stable now).

-- 
Ryan McCue
<http://ryanmccue.info/>



From lists at rotorised.com  Sun Jul 15 03:53:55 2012
From: lists at rotorised.com (Ryan McCue)
Date: Sun, 15 Jul 2012 13:53:55 +1000
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <69E2B1B5-7996-4CB4-887C-E7D732A8A954@newclarity.net>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
	<50023C10.4060500@rotorised.com>
	<69E2B1B5-7996-4CB4-887C-E7D732A8A954@newclarity.net>
Message-ID: <50023ED3.5000702@rotorised.com>

Mike Schinkel wrote:
> Yeah, I've got some very similar code in our plugin but I assume it's not performant enough if it might get called a large number of times per page load. Ever benchmarked it?

That code is used in an exception handler in production, so the
performance didn't really matter to me. I'm sure you could do
optimisations of that if needed.
-- 
Ryan McCue
<http://ryanmccue.info/>



From mike at newclarity.net  Sun Jul 15 04:38:37 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sun, 15 Jul 2012 00:38:37 -0400
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <50023ED3.5000702@rotorised.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
	<50023C10.4060500@rotorised.com>
	<69E2B1B5-7996-4CB4-887C-E7D732A8A954@newclarity.net>
	<50023ED3.5000702@rotorised.com>
Message-ID: <B5AA8AB5-DFA7-432B-8190-BF271CE93225@newclarity.net>

On Jul 14, 2012, at 11:53 PM, Ryan McCue wrote:
> That code is used in an exception handler in production, so the
> performance didn't really matter to me. I'm sure you could do
> optimisations of that if needed.

For exception handling, definitely.  But in the architectures we're considering it would be called too many times per page load and I don't really see how it would be possible to optimize \without decorating the classes that use it with so much complexity that it wouldn't be worth the trouble. I think we might be moving away from static methods for this and several other reasons.

-Mike 


From aaron at commandmedia.net  Sun Jul 15 06:33:35 2012
From: aaron at commandmedia.net (aaron at commandmedia.net)
Date: Sun, 15 Jul 2012 16:33:35 +1000
Subject: [wp-hackers] Custom widget layout on a per-page basis
Message-ID: <002f01cd6253$c44a6570$4cdf3050$@commandmedia.net>

Hi all,

 

I've only been a member of the mailing list for about a week, so I apologize
if I'm breaking any rules of etiquette or if this is off-topic. Lots of
interesting reads going through here. I'm working on a project that poses an
interesting design challenge and wanted to bounce it off some fellow hackers
to see if anyone might come up with a better approach than I have.

 

We are building a multi-page site of about 100 pages where each page has a
modular design. So there might be 8 pages under category one, and each page
is comprised of a number of modules in a simple two-column layout. The pages
in category two use the same modules, but they might be arranged
differently, there might be 9 or 10 pages instead of 8, etc.

 

This type of scenario seems well-adapted to the widget functionality in
Wordpress where we can define a reusable chunk of UI that can be placed
anywhere within a "sidebar" region. I can define a custom post type, and
upon the creation of a new page, use register_sidebars() to create the
layout regions for that page. We can then drag and drop our widgets into
each region as we please.

 

The problem with this is that with a 100+ page site, the "sidebars" we
register will number in the hundreds. So my questions are 

 

1)      Are there any performance or scalability concerns we should be aware
of on a site with hundreds of widget-containing "sidebars?"

2)      The UI at wp-admin/widgets.php is not up to the task of handling
hundreds of sidebars - any thoughts here about a good approach to creating a
better UI, could we re-use or subclass any part of that code, what would be
the best way to go about this? Is anyone familiar enough with that code to
estimate how hard it would be to include it in a metabox for our post
editor?

3)      Perhaps there is a simpler or superior technique for enabling
modular per-page layouts that I haven't thought of?

 

In general, I'm just looking for ideas and thoughts around the best way to
do this. Thanks!

 

Aaron


From tarasm at gmail.com  Sun Jul 15 14:47:15 2012
From: tarasm at gmail.com (Taras Mankovski)
Date: Sun, 15 Jul 2012 10:47:15 -0400
Subject: [wp-hackers] wp-hackers Digest, Vol 90, Issue 35
In-Reply-To: <mailman.7.1342353602.24725.wp-hackers@lists.automattic.com>
References: <mailman.7.1342353602.24725.wp-hackers@lists.automattic.com>
Message-ID: <5002D7F3.9030203@gmail.com>

Hello Aaron,

You might want to take a look Visual Composer 
<http://codecanyon.net/item/visual-composer-for-wordpress/242431>, which 
allows you to build pages visually and reuse widgets, or Xwidgets 
<http://wordpress.org/extend/plugins/xwidgets/>, which allows you to 
have sidebars on per page bases.

Taras
> wp-hackers-request at lists.automattic.com 
> <mailto:wp-hackers-request at lists.automattic.com>
> 15 July, 2012 8:00 AM
> Send wp-hackers mailing list submissions to
> wp-hackers at lists.automattic.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> or, via email, send a message with subject or body 'help' to
> wp-hackers-request at lists.automattic.com
>
> You can reach the person managing the list at
> wp-hackers-owner at lists.automattic.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wp-hackers digest..."
>
>
> Today's Topics:
>
> 1. Custom widget layout on a per-page basis (aaron at commandmedia.net)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 15 Jul 2012 16:33:35 +1000
> From: <aaron at commandmedia.net>
> Subject: [wp-hackers] Custom widget layout on a per-page basis
> To: <wp-hackers at lists.automattic.com>
> Message-ID: <002f01cd6253$c44a6570$4cdf3050$@commandmedia.net>
> Content-Type: text/plain; charset="us-ascii"
>
> Hi all,
>
>
>
> I've only been a member of the mailing list for about a week, so I 
> apologize
> if I'm breaking any rules of etiquette or if this is off-topic. Lots of
> interesting reads going through here. I'm working on a project that 
> poses an
> interesting design challenge and wanted to bounce it off some fellow 
> hackers
> to see if anyone might come up with a better approach than I have.
>
>
>
> We are building a multi-page site of about 100 pages where each page has a
> modular design. So there might be 8 pages under category one, and each 
> page
> is comprised of a number of modules in a simple two-column layout. The 
> pages
> in category two use the same modules, but they might be arranged
> differently, there might be 9 or 10 pages instead of 8, etc.
>
>
>
> This type of scenario seems well-adapted to the widget functionality in
> Wordpress where we can define a reusable chunk of UI that can be placed
> anywhere within a "sidebar" region. I can define a custom post type, and
> upon the creation of a new page, use register_sidebars() to create the
> layout regions for that page. We can then drag and drop our widgets into
> each region as we please.
>
>
>
> The problem with this is that with a 100+ page site, the "sidebars" we
> register will number in the hundreds. So my questions are
>
>
>
> 1) Are there any performance or scalability concerns we should be aware
> of on a site with hundreds of widget-containing "sidebars?"
>
> 2) The UI at wp-admin/widgets.php is not up to the task of handling
> hundreds of sidebars - any thoughts here about a good approach to 
> creating a
> better UI, could we re-use or subclass any part of that code, what 
> would be
> the best way to go about this? Is anyone familiar enough with that code to
> estimate how hard it would be to include it in a metabox for our post
> editor?
>
> 3) Perhaps there is a simpler or superior technique for enabling
> modular per-page layouts that I haven't thought of?
>
>
>
> In general, I'm just looking for ideas and thoughts around the best way to
> do this. Thanks!
>
>
>
> Aaron
>
>
>
> ------------------------------
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> End of wp-hackers Digest, Vol 90, Issue 35
> ******************************************

From brasofilo at gmail.com  Sun Jul 15 15:01:36 2012
From: brasofilo at gmail.com (Rodolfo Buaiz)
Date: Sun, 15 Jul 2012 17:01:36 +0200
Subject: [wp-hackers] Custom widget layout on a per-page basis
In-Reply-To: <002f01cd6253$c44a6570$4cdf3050$@commandmedia.net>
References: <002f01cd6253$c44a6570$4cdf3050$@commandmedia.net>
Message-ID: <CACzxQMZ-QNF-+Eyr1LEsDwWRX82XGJYtPppMSOGON6ffz8bSaQ@mail.gmail.com>

Hi Aaron, I recently stumbled upon this that may be of interest:
http://support.advancedcustomfields.com/discussion/1660/buckets-widgets-alternative

AdvancedCustomFields alone or with premium add-ons or in conjuction with
another plugin (e.g.: BucketsWidgets) could be of help in the scenario that
you describe.

cheers,
Rodolfo

On Sunday, July 15, 2012, wrote:

> Hi all,
>
>
>
> I've only been a member of the mailing list for about a week, so I
> apologize
> if I'm breaking any rules of etiquette or if this is off-topic. Lots of
> interesting reads going through here. I'm working on a project that poses
> an
> interesting design challenge and wanted to bounce it off some fellow
> hackers
> to see if anyone might come up with a better approach than I have.
>
>
>
> We are building a multi-page site of about 100 pages where each page has a
> modular design. So there might be 8 pages under category one, and each page
> is comprised of a number of modules in a simple two-column layout. The
> pages
> in category two use the same modules, but they might be arranged
> differently, there might be 9 or 10 pages instead of 8, etc.
>
>
>
> This type of scenario seems well-adapted to the widget functionality in
> Wordpress where we can define a reusable chunk of UI that can be placed
> anywhere within a "sidebar" region. I can define a custom post type, and
> upon the creation of a new page, use register_sidebars() to create the
> layout regions for that page. We can then drag and drop our widgets into
> each region as we please.
>
>
>
> The problem with this is that with a 100+ page site, the "sidebars" we
> register will number in the hundreds. So my questions are
>
>
>
> 1)      Are there any performance or scalability concerns we should be
> aware
> of on a site with hundreds of widget-containing "sidebars?"
>
> 2)      The UI at wp-admin/widgets.php is not up to the task of handling
> hundreds of sidebars - any thoughts here about a good approach to creating
> a
> better UI, could we re-use or subclass any part of that code, what would be
> the best way to go about this? Is anyone familiar enough with that code to
> estimate how hard it would be to include it in a metabox for our post
> editor?
>
> 3)      Perhaps there is a simpler or superior technique for enabling
> modular per-page layouts that I haven't thought of?
>
>
>
> In general, I'm just looking for ideas and thoughts around the best way to
> do this. Thanks!
>
>
>
> Aaron
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Rodolfo Buaiz
Productor Multimedia
Pen?nsula Ib?rica
+34 68.760.1407
skype: brasofilo
www.rodbuaiz.com

From jnellmore at gmail.com  Mon Jul 16 14:16:34 2012
From: jnellmore at gmail.com (John Ellmore)
Date: Mon, 16 Jul 2012 09:16:34 -0500
Subject: [wp-hackers] Custom widget layout on a per-page basis
In-Reply-To: <CACzxQMZ-QNF-+Eyr1LEsDwWRX82XGJYtPppMSOGON6ffz8bSaQ@mail.gmail.com>
References: <002f01cd6253$c44a6570$4cdf3050$@commandmedia.net>
	<CACzxQMZ-QNF-+Eyr1LEsDwWRX82XGJYtPppMSOGON6ffz8bSaQ@mail.gmail.com>
Message-ID: <CAK1Pxn+NVXRrofJSx84a3EkdrfYQr6rR5v9CPyNy4i7vNa=H4Q@mail.gmail.com>

Aaron - depending on how dynamic your modules are, using shortcodes may be
an easier approach. The downside is that they do not have a GUI to edit
them like widgets do (unless you write a fancy GUI interface in javascript).

John



On Sun, Jul 15, 2012 at 10:01 AM, Rodolfo Buaiz <brasofilo at gmail.com> wrote:

> Hi Aaron, I recently stumbled upon this that may be of interest:
>
> http://support.advancedcustomfields.com/discussion/1660/buckets-widgets-alternative
>
> AdvancedCustomFields alone or with premium add-ons or in conjuction with
> another plugin (e.g.: BucketsWidgets) could be of help in the scenario that
> you describe.
>
> cheers,
> Rodolfo
>
> On Sunday, July 15, 2012, wrote:
>
> > Hi all,
> >
> >
> >
> > I've only been a member of the mailing list for about a week, so I
> > apologize
> > if I'm breaking any rules of etiquette or if this is off-topic. Lots of
> > interesting reads going through here. I'm working on a project that poses
> > an
> > interesting design challenge and wanted to bounce it off some fellow
> > hackers
> > to see if anyone might come up with a better approach than I have.
> >
> >
> >
> > We are building a multi-page site of about 100 pages where each page has
> a
> > modular design. So there might be 8 pages under category one, and each
> page
> > is comprised of a number of modules in a simple two-column layout. The
> > pages
> > in category two use the same modules, but they might be arranged
> > differently, there might be 9 or 10 pages instead of 8, etc.
> >
> >
> >
> > This type of scenario seems well-adapted to the widget functionality in
> > Wordpress where we can define a reusable chunk of UI that can be placed
> > anywhere within a "sidebar" region. I can define a custom post type, and
> > upon the creation of a new page, use register_sidebars() to create the
> > layout regions for that page. We can then drag and drop our widgets into
> > each region as we please.
> >
> >
> >
> > The problem with this is that with a 100+ page site, the "sidebars" we
> > register will number in the hundreds. So my questions are
> >
> >
> >
> > 1)      Are there any performance or scalability concerns we should be
> > aware
> > of on a site with hundreds of widget-containing "sidebars?"
> >
> > 2)      The UI at wp-admin/widgets.php is not up to the task of handling
> > hundreds of sidebars - any thoughts here about a good approach to
> creating
> > a
> > better UI, could we re-use or subclass any part of that code, what would
> be
> > the best way to go about this? Is anyone familiar enough with that code
> to
> > estimate how hard it would be to include it in a metabox for our post
> > editor?
> >
> > 3)      Perhaps there is a simpler or superior technique for enabling
> > modular per-page layouts that I haven't thought of?
> >
> >
> >
> > In general, I'm just looking for ideas and thoughts around the best way
> to
> > do this. Thanks!
> >
> >
> >
> > Aaron
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> --
> Rodolfo Buaiz
> Productor Multimedia
> Pen?nsula Ib?rica
> +34 68.760.1407
> skype: brasofilo
> www.rodbuaiz.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mpwalsh8 at gmail.com  Mon Jul 16 17:51:30 2012
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Mon, 16 Jul 2012 13:51:30 -0400
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
Message-ID: <CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>

I am resurecting this thread as I never resolved it and now have run into
what appears to be the same problem with another user.

On Sat, Jun 2, 2012 at 1:25 PM, Gavin Pearce <Gavin.Pearce at 3seven9.com>wrote:

> In Firefox you can use the Net tab in Firebug to view page requests.
> (Live HTTP headers will provide some more detail also. Chrome's
> developer toolbar has a similar 'Network' feature.)
>
> If it is redirecting, you should see your original POST to the server,
> the server responding with a 302/301, and then your browser making a
> request to another page. Remember to press the Persist button (next to
> Clear), otherwise it's going to reset the tab when the redirect happens.
>
> Looking at where it's redirecting you to/from might give you a clue -
> but either way, yes, run through your plugins one by one to narrow it
> down. If a redirect is happening that's why your POST data is clearing,
> though could also be a plugin simply unsetting $_POST ...
>
> G
>
>
I have been poking at the two sites which are showing this behavior of
stripping the post information and I have found that the URL is served for
a GET request but is not served for a POST request.  What was happening (in
both cases) is a 403 response is issued on the POST request but the page
referenced by the 403 header information (/403.shtml) doesn't exist so
WordPress ends up rendering the original URL again (although I don't
understand how that part happens).

I have posted a screen shot of the headers using the Firebug Net tab:

https://dl.dropbox.com/u/10343959/GForm_SS_21.png

Can anyone think of configuration (I am assuming it is at the Apache level)
that would cause this?  On the one server I have the ability to change the
.htaccess file I tried adding "Options +FollowSymLinks" based on one post I
found on the WordPress support forum but it resulted in a 500 error so it
doesn't appear that server allows setting it in the .htaccess file.

Any idea of what I might look at next?

Mike
-- 
Mike Walsh - mpwalsh8 at gmail.com

From wp-hackers at thecodecave.com  Mon Jul 16 18:04:28 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Mon, 16 Jul 2012 14:04:28 -0400
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
Message-ID: <500457AC.90904@thecodecave.com>

On 7/16/2012 1:51 PM, Mike Walsh wrote:
> Can anyone think of configuration (I am assuming it is at the Apache 
> level) that would cause this? 

You are certain it is apache and not nginx right? Nginx throws a setting 
into your cookie to ensure that you are coming from the site and not 
from a generic posting tool.  At times it operates like a poor man's nonce.

Brian Layman



From wp-hackers at thecodecave.com  Mon Jul 16 18:09:29 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Mon, 16 Jul 2012 14:09:29 -0400
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
Message-ID: <500458D9.4030702@thecodecave.com>

Ignore my last question. I do see Apache referenced in the screen shot.  
When you said it wasn't respecting .htaccess, I began wonder.  It fit 
with your situation, if you were posting using curl.  But even if nginx 
was in front of apache as a proxy, I think if apache is serving the 
error code, nginx's cookie setting could not be the issue here.

Brian Layman

On 7/16/2012 1:51 PM, Mike Walsh wrote:

> https://dl.dropbox.com/u/10343959/GForm_SS_21.png Can anyone think of 
> configuration (I am assuming it is at the Apache level) that would 
> cause this? 



From mpwalsh8 at gmail.com  Mon Jul 16 18:12:37 2012
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Mon, 16 Jul 2012 14:12:37 -0400
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <500457AC.90904@thecodecave.com>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
	<500457AC.90904@thecodecave.com>
Message-ID: <CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg@mail.gmail.com>

I am not sure of anything on this problem!

In the Response Headers "Server" is reported as "Apache".  Is there some
other way to detect "nginx"?

Mike

On Mon, Jul 16, 2012 at 2:04 PM, Brian Layman <wp-hackers at thecodecave.com>wrote:

> On 7/16/2012 1:51 PM, Mike Walsh wrote:
>
>> Can anyone think of configuration (I am assuming it is at the Apache
>> level) that would cause this?
>>
>
> You are certain it is apache and not nginx right? Nginx throws a setting
> into your cookie to ensure that you are coming from the site and not from a
> generic posting tool.  At times it operates like a poor man's nonce.
>
> Brian Layman
>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>



-- 
Mike Walsh - mpwalsh8 at gmail.com

From mail at scribu.net  Mon Jul 16 23:21:40 2012
From: mail at scribu.net (scribu)
Date: Tue, 17 Jul 2012 02:21:40 +0300
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <B5AA8AB5-DFA7-432B-8190-BF271CE93225@newclarity.net>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
	<50023C10.4060500@rotorised.com>
	<69E2B1B5-7996-4CB4-887C-E7D732A8A954@newclarity.net>
	<50023ED3.5000702@rotorised.com>
	<B5AA8AB5-DFA7-432B-8190-BF271CE93225@newclarity.net>
Message-ID: <CABzSYNONdnrUr4XDs6HFHw+WTcVKUB5huFEW6VBJBr9BVBTSiQ@mail.gmail.com>

It just dawned on me that with PHP 5.3 namespaces, I wouldn't need to do
these crazy hacks to have a common set of functions bundled with each
plugin. I could just load them under that plugin's namespace only.

That said, I won't venture to give advice on what you should do with your
projects; you know better than anyone what your goals are.

-- 
http://scribu.net

From mail at scribu.net  Tue Jul 17 00:08:08 2012
From: mail at scribu.net (scribu)
Date: Tue, 17 Jul 2012 03:08:08 +0300
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CABzSYNONdnrUr4XDs6HFHw+WTcVKUB5huFEW6VBJBr9BVBTSiQ@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
	<50023C10.4060500@rotorised.com>
	<69E2B1B5-7996-4CB4-887C-E7D732A8A954@newclarity.net>
	<50023ED3.5000702@rotorised.com>
	<B5AA8AB5-DFA7-432B-8190-BF271CE93225@newclarity.net>
	<CABzSYNONdnrUr4XDs6HFHw+WTcVKUB5huFEW6VBJBr9BVBTSiQ@mail.gmail.com>
Message-ID: <CABzSYNPv43+HEnxtAwtgCr+e_5reDv-d64wr9KS2Ww9HXV1cxg@mail.gmail.com>

On Tue, Jul 17, 2012 at 2:21 AM, scribu <mail at scribu.net> wrote:

> It just dawned on me that with PHP 5.3 namespaces, I wouldn't need to do
> these crazy hacks to have a common set of functions bundled with each
> plugin. I could just load them under that plugin's namespace only.
>

Turns out what I was thinking about isn't possible with PHP namespaces:
*
*
*<?php

namespace MyPlugin;

require 'my-framework.php';*

Unless my-framework.php also has the *namespace MyPlugin;* declaration, all
it's functions will still be loaded in the global namespace.

PHP 5.3, still a fractal of bad design.

-- 
http://scribu.net

From danielx386 at gmail.com  Tue Jul 17 00:10:17 2012
From: danielx386 at gmail.com (Daniel Fenn)
Date: Tue, 17 Jul 2012 10:10:17 +1000
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CABzSYNPv43+HEnxtAwtgCr+e_5reDv-d64wr9KS2Ww9HXV1cxg@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
	<50023C10.4060500@rotorised.com>
	<69E2B1B5-7996-4CB4-887C-E7D732A8A954@newclarity.net>
	<50023ED3.5000702@rotorised.com>
	<B5AA8AB5-DFA7-432B-8190-BF271CE93225@newclarity.net>
	<CABzSYNONdnrUr4XDs6HFHw+WTcVKUB5huFEW6VBJBr9BVBTSiQ@mail.gmail.com>
	<CABzSYNPv43+HEnxtAwtgCr+e_5reDv-d64wr9KS2Ww9HXV1cxg@mail.gmail.com>
Message-ID: <CAJ5Hi2iqq3QDzYn9-T8YEnO9qib2ni06PMY2-W6nmQ9f0tx1fA@mail.gmail.com>

What about php 3.4? Same issue?
Regards,
Daniel Fenn






On Tue, Jul 17, 2012 at 10:08 AM, scribu <mail at scribu.net> wrote:
> On Tue, Jul 17, 2012 at 2:21 AM, scribu <mail at scribu.net> wrote:
>
>> It just dawned on me that with PHP 5.3 namespaces, I wouldn't need to do
>> these crazy hacks to have a common set of functions bundled with each
>> plugin. I could just load them under that plugin's namespace only.
>>
>
> Turns out what I was thinking about isn't possible with PHP namespaces:
> *
> *
> *<?php
>
> namespace MyPlugin;
>
> require 'my-framework.php';*
>
> Unless my-framework.php also has the *namespace MyPlugin;* declaration, all
> it's functions will still be loaded in the global namespace.
>
> PHP 5.3, still a fractal of bad design.
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mail at scribu.net  Tue Jul 17 00:20:56 2012
From: mail at scribu.net (scribu)
Date: Tue, 17 Jul 2012 03:20:56 +0300
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CAJ5Hi2iqq3QDzYn9-T8YEnO9qib2ni06PMY2-W6nmQ9f0tx1fA@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
	<50023C10.4060500@rotorised.com>
	<69E2B1B5-7996-4CB4-887C-E7D732A8A954@newclarity.net>
	<50023ED3.5000702@rotorised.com>
	<B5AA8AB5-DFA7-432B-8190-BF271CE93225@newclarity.net>
	<CABzSYNONdnrUr4XDs6HFHw+WTcVKUB5huFEW6VBJBr9BVBTSiQ@mail.gmail.com>
	<CABzSYNPv43+HEnxtAwtgCr+e_5reDv-d64wr9KS2Ww9HXV1cxg@mail.gmail.com>
	<CAJ5Hi2iqq3QDzYn9-T8YEnO9qib2ni06PMY2-W6nmQ9f0tx1fA@mail.gmail.com>
Message-ID: <CABzSYNM323UG_4P5gfHpQqvX_NgRJj8NaJ7zNKJZpSb7yYeuWQ@mail.gmail.com>

On Tue, Jul 17, 2012 at 3:10 AM, Daniel Fenn <danielx386 at gmail.com> wrote:

> What about php 3.4? Same issue?
>

I assume you mean PHP 5.4. Yes, no changes with regards to namespace
behaviour.

-- 
http://scribu.net

From almog.baku at gmail.com  Tue Jul 17 00:26:54 2012
From: almog.baku at gmail.com (=?UTF-8?B?15DXnNee15XXkiDXkden15U=?=)
Date: Tue, 17 Jul 2012 03:26:54 +0300
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CABzSYNM323UG_4P5gfHpQqvX_NgRJj8NaJ7zNKJZpSb7yYeuWQ@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
	<50023C10.4060500@rotorised.com>
	<69E2B1B5-7996-4CB4-887C-E7D732A8A954@newclarity.net>
	<50023ED3.5000702@rotorised.com>
	<B5AA8AB5-DFA7-432B-8190-BF271CE93225@newclarity.net>
	<CABzSYNONdnrUr4XDs6HFHw+WTcVKUB5huFEW6VBJBr9BVBTSiQ@mail.gmail.com>
	<CABzSYNPv43+HEnxtAwtgCr+e_5reDv-d64wr9KS2Ww9HXV1cxg@mail.gmail.com>
	<CAJ5Hi2iqq3QDzYn9-T8YEnO9qib2ni06PMY2-W6nmQ9f0tx1fA@mail.gmail.com>
	<CABzSYNM323UG_4P5gfHpQqvX_NgRJj8NaJ7zNKJZpSb7yYeuWQ@mail.gmail.com>
Message-ID: <CALncZpQv0BPmqJaHefMrB2=thFbyug7juJhM7Wdy75iFQjgKhw@mail.gmail.com>

Using namespacing with oop methodology is much nicer and easy.
If you working with loaders of class it solve the most of issues.

?????? ??? ?????, 17 ????? 2012, scribu ???:

> On Tue, Jul 17, 2012 at 3:10 AM, Daniel Fenn <danielx386 at gmail.com<javascript:;>>
> wrote:
>
> > What about php 3.4? Same issue?
> >
>
> I assume you mean PHP 5.4. Yes, no changes with regards to namespace
> behaviour.
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From danielx386 at gmail.com  Tue Jul 17 00:31:33 2012
From: danielx386 at gmail.com (Daniel Fenn)
Date: Tue, 17 Jul 2012 10:31:33 +1000
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CALncZpQv0BPmqJaHefMrB2=thFbyug7juJhM7Wdy75iFQjgKhw@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
	<50023C10.4060500@rotorised.com>
	<69E2B1B5-7996-4CB4-887C-E7D732A8A954@newclarity.net>
	<50023ED3.5000702@rotorised.com>
	<B5AA8AB5-DFA7-432B-8190-BF271CE93225@newclarity.net>
	<CABzSYNONdnrUr4XDs6HFHw+WTcVKUB5huFEW6VBJBr9BVBTSiQ@mail.gmail.com>
	<CABzSYNPv43+HEnxtAwtgCr+e_5reDv-d64wr9KS2Ww9HXV1cxg@mail.gmail.com>
	<CAJ5Hi2iqq3QDzYn9-T8YEnO9qib2ni06PMY2-W6nmQ9f0tx1fA@mail.gmail.com>
	<CABzSYNM323UG_4P5gfHpQqvX_NgRJj8NaJ7zNKJZpSb7yYeuWQ@mail.gmail.com>
	<CALncZpQv0BPmqJaHefMrB2=thFbyug7juJhM7Wdy75iFQjgKhw@mail.gmail.com>
Message-ID: <CAJ5Hi2hzu=jYAhzY+86q9rtBck4Jv3_kd7298rk8LPBsMAR=Pw@mail.gmail.com>

That 3.4 should have been 5.4, now where my coffee





On Tue, Jul 17, 2012 at 10:26 AM, ????? ??? <almog.baku at gmail.com> wrote:
> Using namespacing with oop methodology is much nicer and easy.
> If you working with loaders of class it solve the most of issues.
>
> ?????? ??? ?????, 17 ????? 2012, scribu ???:
>
>> On Tue, Jul 17, 2012 at 3:10 AM, Daniel Fenn <danielx386 at gmail.com<javascript:;>>
>> wrote:
>>
>> > What about php 3.4? Same issue?
>> >
>>
>> I assume you mean PHP 5.4. Yes, no changes with regards to namespace
>> behaviour.
>>
>> --
>> http://scribu.net
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com <javascript:;>
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From gcorne at bu.edu  Tue Jul 17 00:46:18 2012
From: gcorne at bu.edu (Cornelius, Gregory)
Date: Tue, 17 Jul 2012 00:46:18 +0000
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <CABzSYNONdnrUr4XDs6HFHw+WTcVKUB5huFEW6VBJBr9BVBTSiQ@mail.gmail.com>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
	<50023C10.4060500@rotorised.com>
	<69E2B1B5-7996-4CB4-887C-E7D732A8A954@newclarity.net>
	<50023ED3.5000702@rotorised.com>
	<B5AA8AB5-DFA7-432B-8190-BF271CE93225@newclarity.net>
	<CABzSYNONdnrUr4XDs6HFHw+WTcVKUB5huFEW6VBJBr9BVBTSiQ@mail.gmail.com>
Message-ID: <4C5407B1-F721-4D31-8F66-583D2AB0DFF7@bu.edu>

What is missing in WordPress is the notion of libraries and automatic handling of dependencies during the installation of a plugin or theme. I would love to see a 3rd party libraries directory added to wp-content, a separate repository from which the libraries can be installed, and a mechanism for describing which libraries are required for a given plugin or theme. Has anyone played with http://getcomposer.org/?

On Jul 16, 2012, at 7:21 PM, scribu wrote:

It just dawned on me that with PHP 5.3 namespaces, I wouldn't need to do
these crazy hacks to have a common set of functions bundled with each
plugin. I could just load them under that plugin's namespace only.

That said, I won't venture to give advice on what you should do with your
projects; you know better than anyone what your goals are.

--
http://scribu.net
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From mike at newclarity.net  Tue Jul 17 01:00:29 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Mon, 16 Jul 2012 21:00:29 -0400
Subject: [wp-hackers] WordPress moving to PHP 5.3x?
In-Reply-To: <4C5407B1-F721-4D31-8F66-583D2AB0DFF7@bu.edu>
References: <D74498CD-EE12-4966-A1B3-F31B95BA9A5C@newclarity.net>
	<CAH-8B6tbsgZ0r+dhFqQNdmh122rcs6nbS9tAAV9OPzCCAj0U5Q@mail.gmail.com>
	<3EC54109-810A-430F-8297-DEE65B86DC58@newclarity.net>
	<CAFuJWcdQ1MmM0S8aX1hWwpa7xPxFSDbP5eqozW=wxtwTB-ny5g@mail.gmail.com>
	<CAGw2N3WOGfzGHu6CPOUTkkSzpF2TsRvYwwJ++yZmiDM63NMkEw@mail.gmail.com>
	<CAOqAKWA43dht6+gEnR1XSM6VxUGeiGMX=hyCetzsv6j9oyFSPg@mail.gmail.com>
	<CAGw2N3WpX7GoHk6OSovNKrqfDUMeuzfJJkUszZfVo+wOZR2t=w@mail.gmail.com>
	<CAOqAKWCAU5M9nqHRkfwnPa4_f915oif13TaTp_c721gmxU+i2g@mail.gmail.com>
	<CAFuJWceKMC3s-R8597OXsdHtg682JhW5gk9etXE4R05vKdHqtg@mail.gmail.com>
	<5000BBBF.6090209@thecodecave.com>
	<B367FD31-AD40-4E0B-9DBD-890D4482767A@newclarity.net>
	<50023C10.4060500@rotorised.com>
	<69E2B1B5-7996-4CB4-887C-E7D732A8A954@newclarity.net>
	<50023ED3.5000702@rotorised.com>
	<B5AA8AB5-DFA7-432B-8190-BF271CE93225@newclarity.net>
	<CABzSYNONdnrUr4XDs6HFHw+WTcVKUB5huFEW6VBJBr9BVBTSiQ@mail.gmail.com>
	<4C5407B1-F721-4D31-8F66-583D2AB0DFF7@bu.edu>
Message-ID: <CD68C4E3-A3BF-46F7-83CA-2BDCB4EDC847@newclarity.net>

On Jul 16, 2012, at 8:46 PM, Cornelius, Gregory wrote:
> What is missing in WordPress is the notion of libraries and automatic handling of dependencies during the installation of a plugin or theme. I would love to see a 3rd party libraries directory added to wp-content, a separate repository from which the libraries can be installed, and a mechanism for describing which libraries are required for a given plugin or theme. Has anyone played with http://getcomposer.org/?

A big +1.  

It's been debated in the past with no resolution, but maybe it's finally time the team will start considering it?  We just start using a /wp-content/libraries/ directory ourselves.

-Mike



From serafin.vazquez at gmail.com  Tue Jul 17 01:06:39 2012
From: serafin.vazquez at gmail.com (Serafin)
Date: Tue, 17 Jul 2012 01:06:39 +0000
Subject: [wp-hackers] wp-hackers Digest, Vol 90, Issue 37
Message-ID: <5004baa0.27e3440a.6b75.39b4@mx.google.com>



Sent from my Droid Charge on Verizon 4GLTE

------Original Message------
From: <wp-hackers-request at lists.automattic.com>
To: <wp-hackers at lists.automattic.com>
Date: Tuesday, July 17, 2012 12:11:00 AM GMT+0000
Subject: wp-hackers Digest, Vol 90, Issue 37

Send wp-hackers mailing list submissions to
	wp-hackers at lists.automattic.com

To subscribe or unsubscribe via the World Wide Web, visit
	http://lists.automattic.com/mailman/listinfo/wp-hackers
or, via email, send a message with subject or body 'help' to
	wp-hackers-request at lists.automattic.com

You can reach the person managing the list at
	wp-hackers-owner at lists.automattic.com

When replying, please edit your Subject line so it is more specific
than "Re: Contents of wp-hackers digest..."


Today's Topics:

   1. Re: Custom widget layout on a per-page basis (John Ellmore)
   2. Re: What would strip $_POST before 'init' runs? (Mike Walsh)
   3. Re: What would strip $_POST before 'init' runs? (Brian Layman)
   4. Re: What would strip $_POST before 'init' runs? (Brian Layman)
   5. Re: What would strip $_POST before 'init' runs? (Mike Walsh)
   6. Re: WordPress moving to PHP 5.3x? (scribu)
   7. Re: WordPress moving to PHP 5.3x? (scribu)
   8. Re: WordPress moving to PHP 5.3x? (Daniel Fenn)


----------------------------------------------------------------------

Message: 1
Date: Mon, 16 Jul 2012 09:16:34 -0500
From: John Ellmore <jnellmore at gmail.com>
Subject: Re: [wp-hackers] Custom widget layout on a per-page basis
To: wp-hackers at lists.automattic.com
Message-ID:
	<CAK1Pxn+NVXRrofJSx84a3EkdrfYQr6rR5v9CPyNy4i7vNa=H4Q at mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1

Aaron - depending on how dynamic your modules are, using shortcodes may be
an easier approach. The downside is that they do not have a GUI to edit
them like widgets do (unless you write a fancy GUI interface in javascript).

John



On Sun, Jul 15, 2012 at 10:01 AM, Rodolfo Buaiz <brasofilo at gmail.com> wrote:

> Hi Aaron, I recently stumbled upon this that may be of interest:
>
> http://support.advancedcustomfields.com/discussion/1660/buckets-widgets-alternative
>
> AdvancedCustomFields alone or with premium add-ons or in conjuction with
> another plugin (e.g.: BucketsWidgets) could be of help in the scenario that
> you describe.
>
> cheers,
> Rodolfo
>
> On Sunday, July 15, 2012, wrote:
>
> > Hi all,
> >
> >
> >
> > I've only been a member of the mailing list for about a week, so I
> > apologize
> > if I'm breaking any rules of etiquette or if this is off-topic. Lots of
> > interesting reads going through here. I'm working on a project that poses
> > an
> > interesting design challenge and wanted to bounce it off some fellow
> > hackers
> > to see if anyone might come up with a better approach than I have.
> >
> >
> >
> > We are building a multi-page site of about 100 pages where each page has
> a
> > modular design. So there might be 8 pages under category one, and each
> page
> > is comprised of a number of modules in a simple two-column layout. The
> > pages
> > in category two use the same modules, but they might be arranged
> > differently, there might be 9 or 10 pages instead of 8, etc.
> >
> >
> >
> > This type of scenario seems well-adapted to the widget functionality in
> > Wordpress where we can define a reusable chunk of UI that can be placed
> > anywhere within a "sidebar" region. I can define a custom post type, and
> > upon the creation of a new page, use register_sidebars() to create the
> > layout regions for that page. We can then drag and drop our widgets into
> > each region as we please.
> >
> >
> >
> > The problem with this is that with a 100+ page site, the "sidebars" we
> > register will number in the hundreds. So my questions are
> >
> >
> >
> > 1)      Are there any performance or scalability concerns we should be
> > aware
> > of on a site with hundreds of widget-containing "sidebars?"
> >
> > 2)      The UI at wp-admin/widgets.php is not up to the task of handling
> > hundreds of sidebars - any thoughts here about a good approach to
> creating
> > a
> > better UI, could we re-use or subclass any part of that code, what would
> be
> > the best way to go about this? Is anyone familiar enough with that code
> to
> > estimate how hard it would be to include it in a metabox for our post
> > editor?
> >
> > 3)      Perhaps there is a simpler or superior technique for enabling
> > modular per-page layouts that I haven't thought of?
> >
> >
> >
> > In general, I'm just looking for ideas and thoughts around the best way
> to
> > do this. Thanks!
> >
> >
> >
> > Aaron
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> --
> Rodolfo Buaiz
> Productor Multimedia
> Pen?nsula Ib?rica
> +34 68.760.1407
> skype: brasofilo
> www.rodbuaiz.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


------------------------------

Message: 2
Date: Mon, 16 Jul 2012 13:51:30 -0400
From: Mike Walsh <mpwalsh8 at gmail.com>
Subject: Re: [wp-hackers] What would strip $_POST before 'init' runs?
To: wp-hackers at lists.automattic.com
Message-ID:
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw at mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1

I am resurecting this thread as I never resolved it and now have run into
what appears to be the same problem with another user.

On Sat, Jun 2, 2012 at 1:25 PM, Gavin Pearce <Gavin.Pearce at 3seven9.com>wrote:

> In Firefox you can use the Net tab in Firebug to view page requests.
> (Live HTTP headers will provide some more detail also. Chrome's
> developer toolbar has a similar 'Network' feature.)
>
> If it is redirecting, you should see your original POST to the server,
> the server responding with a 302/301, and then your browser making a
> request to another page. Remember to press the Persist button (next to
> Clear), otherwise it's going to reset the tab when the redirect happens.
>
> Looking at where it's redirecting you to/from might give you a clue -
> but either way, yes, run through your plugins one by one to narrow it
> down. If a redirect is happening that's why your POST data is clearing,
> though could also be a plugin simply unsetting $_POST ...
>
> G
>
>
I have been poking at the two sites which are showing this behavior of
stripping the post information and I have found that the URL is served for
a GET request but is not served for a POST request.  What was happening (in
both cases) is a 403 response is issued on the POST request but the page
referenced by the 403 header information (/403.shtml) doesn't exist so
WordPress ends up rendering the original URL again (although I don't
understand how that part happens).

I have posted a screen shot of the headers using the Firebug Net tab:

https://dl.dropbox.com/u/10343959/GForm_SS_21.png

Can anyone think of configuration (I am assuming it is at the Apache level)
that would cause this?  On the one server I have the ability to change the
.htaccess file I tried adding "Options +FollowSymLinks" based on one post I
found on the WordPress support forum but it resulted in a 500 error so it
doesn't appear that server allows setting it in the .htaccess file.

Any idea of what I might look at next?

Mike
-- 
Mike Walsh - mpwalsh8 at gmail.com


------------------------------

Message: 3
Date: Mon, 16 Jul 2012 14:04:28 -0400
From: Brian Layman <wp-hackers at thecodecave.com>
Subject: Re: [wp-hackers] What would strip $_POST before 'init' runs?
To: wp-hackers at lists.automattic.com
Message-ID: <500457AC.90904 at thecodecave.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed

On 7/16/2012 1:51 PM, Mike Walsh wrote:
> Can anyone think of configuration (I am assuming it is at the Apache 
> level) that would cause this? 

You are certain it is apache and not nginx right? Nginx throws a setting 
into your cookie to ensure that you are coming from the site and not 
from a generic posting tool.  At times it operates like a poor man's nonce.

Brian Layman




------------------------------

Message: 4
Date: Mon, 16 Jul 2012 14:09:29 -0400
From: Brian Layman <wp-hackers at thecodecave.com>
Subject: Re: [wp-hackers] What would strip $_POST before 'init' runs?
To: wp-hackers at lists.automattic.com
Message-ID: <500458D9.4030702 at thecodecave.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed

Ignore my last question. I do see Apache referenced in the screen shot.  
When you said it wasn't respecting .htaccess, I began wonder.  It fit 
with your situation, if you were posting using curl.  But even if nginx 
was in front of apache as a proxy, I think if apache is serving the 
error code, nginx's cookie setting could not be the issue here.

Brian Layman

On 7/16/2012 1:51 PM, Mike Walsh wrote:

> https://dl.dropbox.com/u/10343959/GForm_SS_21.png Can anyone think of 
> configuration (I am assuming it is at the Apache level) that would 
> cause this? 




------------------------------

Message: 5
Date: Mon, 16 Jul 2012 14:12:37 -0400
From: Mike Walsh <mpwalsh8 at gmail.com>
Subject: Re: [wp-hackers] What would strip $_POST before 'init' runs?
To: wp-hackers at lists.automattic.com
Message-ID:
	<CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg at mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1

I am not sure of anything on this problem!

In the Response Headers "Server" is reported as "Apache".  Is there some
other way to detect "nginx"?

Mike

On Mon, Jul 16, 2012 at 2:04 PM, Brian Layman <wp-hackers at thecodecave.com>wrote:

> On 7/16/2012 1:51 PM, Mike Walsh wrote:
>
>> Can anyone think of configuration (I am assuming it is at the Apache
>> level) that would cause this?
>>
>
> You are certain it is apache and not nginx right? Nginx throws a setting
> into your cookie to ensure that you are coming from the site and not from a
> generic posting tool.  At times it operates like a poor man's nonce.
>
> Brian Layman
>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>



-- 
Mike Walsh - mpwalsh8 at gmail.com


------------------------------

Message: 6
Date: Tue, 17 Jul 2012 02:21:40 +0300
From: scribu <mail at scribu.net>
Subject: Re: [wp-hackers] WordPress moving to PHP 5.3x?
To: wp-hackers at lists.automattic.com
Message-ID:
	<CABzSYNONdnrUr4XDs6HFHw+WTcVKUB5huFEW6VBJBr9BVBTSiQ at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

It just dawned on me that with PHP 5.3 namespaces, I wouldn't need to do
these crazy hacks to have a common set of functions bundled with each
plugin. I could just load them under that plugin's namespace only.

That said, I won't venture to give advice on what you should do with your
projects; you know better than anyone what your goals are.

-- 
http://scribu.net


------------------------------

Message: 7
Date: Tue, 17 Jul 2012 03:08:08 +0300
From: scribu <mail at scribu.net>
Subject: Re: [wp-hackers] WordPress moving to PHP 5.3x?
To: wp-hackers at lists.automattic.com
Message-ID:
	<CABzSYNPv43+HEnxtAwtgCr+e_5reDv-d64wr9KS2Ww9HXV1cxg at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

On Tue, Jul 17, 2012 at 2:21 AM, scribu <mail at scribu.net> wrote:

> It just dawned on me that with PHP 5.3 namespaces, I wouldn't need to do
> these crazy hacks to have a common set of functions bundled with each
> plugin. I could just load them under that plugin's namespace only.
>

Turns out what I was thinking about isn't possible with PHP namespaces:
*
*
*<?php

namespace MyPlugin;

require 'my-framework.php';*

Unless my-framework.php also has the *namespace MyPlugin;* declaration, all
it's functions will still be loaded in the global namespace.

PHP 5.3, still a fractal of bad design.

-- 
http://scribu.net


------------------------------

Message: 8
Date: Tue, 17 Jul 2012 10:10:17 +1000
From: Daniel Fenn <danielx386 at gmail.com>
Subject: Re: [wp-hackers] WordPress moving to PHP 5.3x?
To: wp-hackers at lists.automattic.com
Message-ID:
	<CAJ5Hi2iqq3QDzYn9-T8YEnO9qib2ni06PMY2-W6nmQ9f0tx1fA at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

What about php 3.4? Same issue?
Regards,
Daniel Fenn






On Tue, Jul 17, 2012 at 10:08 AM, scribu <mail at scribu.net> wrote:
> On Tue, Jul 17, 2012 at 2:21 AM, scribu <mail at scribu.net> wrote:
>
>> It just dawned on me that with PHP 5.3 namespaces, I wouldn't need to do
>> these crazy hacks to have a common set of functions bundled with each
>> plugin. I could just load them under that plugin's namespace only.
>>
>
> Turns out what I was thinking about isn't possible with PHP namespaces:
> *
> *
> *<?php
>
> namespace MyPlugin;
>
> require 'my-framework.php';*
>
> Unless my-framework.php also has the *namespace MyPlugin;* declaration, all
> it's functions will still be loaded in the global namespace.
>
> PHP 5.3, still a fractal of bad design.
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


------------------------------

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


End of wp-hackers Digest, Vol 90, Issue 37
******************************************


From serafin.vazquez at gmail.com  Tue Jul 17 01:06:45 2012
From: serafin.vazquez at gmail.com (Serafin)
Date: Tue, 17 Jul 2012 01:06:45 +0000
Subject: [wp-hackers] wp-hackers Digest, Vol 90, Issue 37
Message-ID: <5004baa7.0583440a.65bd.ffffb3cf@mx.google.com>



Sent from my Droid Charge on Verizon 4GLTE

------Original Message------
From: <wp-hackers-request at lists.automattic.com>
To: <wp-hackers at lists.automattic.com>
Date: Tuesday, July 17, 2012 12:11:00 AM GMT+0000
Subject: wp-hackers Digest, Vol 90, Issue 37

Send wp-hackers mailing list submissions to
	wp-hackers at lists.automattic.com

To subscribe or unsubscribe via the World Wide Web, visit
	http://lists.automattic.com/mailman/listinfo/wp-hackers
or, via email, send a message with subject or body 'help' to
	wp-hackers-request at lists.automattic.com

You can reach the person managing the list at
	wp-hackers-owner at lists.automattic.com

When replying, please edit your Subject line so it is more specific
than "Re: Contents of wp-hackers digest..."


Today's Topics:

   1. Re: Custom widget layout on a per-page basis (John Ellmore)
   2. Re: What would strip $_POST before 'init' runs? (Mike Walsh)
   3. Re: What would strip $_POST before 'init' runs? (Brian Layman)
   4. Re: What would strip $_POST before 'init' runs? (Brian Layman)
   5. Re: What would strip $_POST before 'init' runs? (Mike Walsh)
   6. Re: WordPress moving to PHP 5.3x? (scribu)
   7. Re: WordPress moving to PHP 5.3x? (scribu)
   8. Re: WordPress moving to PHP 5.3x? (Daniel Fenn)


----------------------------------------------------------------------

Message: 1
Date: Mon, 16 Jul 2012 09:16:34 -0500
From: John Ellmore <jnellmore at gmail.com>
Subject: Re: [wp-hackers] Custom widget layout on a per-page basis
To: wp-hackers at lists.automattic.com
Message-ID:
	<CAK1Pxn+NVXRrofJSx84a3EkdrfYQr6rR5v9CPyNy4i7vNa=H4Q at mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1

Aaron - depending on how dynamic your modules are, using shortcodes may be
an easier approach. The downside is that they do not have a GUI to edit
them like widgets do (unless you write a fancy GUI interface in javascript).

John



On Sun, Jul 15, 2012 at 10:01 AM, Rodolfo Buaiz <brasofilo at gmail.com> wrote:

> Hi Aaron, I recently stumbled upon this that may be of interest:
>
> http://support.advancedcustomfields.com/discussion/1660/buckets-widgets-alternative
>
> AdvancedCustomFields alone or with premium add-ons or in conjuction with
> another plugin (e.g.: BucketsWidgets) could be of help in the scenario that
> you describe.
>
> cheers,
> Rodolfo
>
> On Sunday, July 15, 2012, wrote:
>
> > Hi all,
> >
> >
> >
> > I've only been a member of the mailing list for about a week, so I
> > apologize
> > if I'm breaking any rules of etiquette or if this is off-topic. Lots of
> > interesting reads going through here. I'm working on a project that poses
> > an
> > interesting design challenge and wanted to bounce it off some fellow
> > hackers
> > to see if anyone might come up with a better approach than I have.
> >
> >
> >
> > We are building a multi-page site of about 100 pages where each page has
> a
> > modular design. So there might be 8 pages under category one, and each
> page
> > is comprised of a number of modules in a simple two-column layout. The
> > pages
> > in category two use the same modules, but they might be arranged
> > differently, there might be 9 or 10 pages instead of 8, etc.
> >
> >
> >
> > This type of scenario seems well-adapted to the widget functionality in
> > Wordpress where we can define a reusable chunk of UI that can be placed
> > anywhere within a "sidebar" region. I can define a custom post type, and
> > upon the creation of a new page, use register_sidebars() to create the
> > layout regions for that page. We can then drag and drop our widgets into
> > each region as we please.
> >
> >
> >
> > The problem with this is that with a 100+ page site, the "sidebars" we
> > register will number in the hundreds. So my questions are
> >
> >
> >
> > 1)      Are there any performance or scalability concerns we should be
> > aware
> > of on a site with hundreds of widget-containing "sidebars?"
> >
> > 2)      The UI at wp-admin/widgets.php is not up to the task of handling
> > hundreds of sidebars - any thoughts here about a good approach to
> creating
> > a
> > better UI, could we re-use or subclass any part of that code, what would
> be
> > the best way to go about this? Is anyone familiar enough with that code
> to
> > estimate how hard it would be to include it in a metabox for our post
> > editor?
> >
> > 3)      Perhaps there is a simpler or superior technique for enabling
> > modular per-page layouts that I haven't thought of?
> >
> >
> >
> > In general, I'm just looking for ideas and thoughts around the best way
> to
> > do this. Thanks!
> >
> >
> >
> > Aaron
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> --
> Rodolfo Buaiz
> Productor Multimedia
> Pen?nsula Ib?rica
> +34 68.760.1407
> skype: brasofilo
> www.rodbuaiz.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


------------------------------

Message: 2
Date: Mon, 16 Jul 2012 13:51:30 -0400
From: Mike Walsh <mpwalsh8 at gmail.com>
Subject: Re: [wp-hackers] What would strip $_POST before 'init' runs?
To: wp-hackers at lists.automattic.com
Message-ID:
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw at mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1

I am resurecting this thread as I never resolved it and now have run into
what appears to be the same problem with another user.

On Sat, Jun 2, 2012 at 1:25 PM, Gavin Pearce <Gavin.Pearce at 3seven9.com>wrote:

> In Firefox you can use the Net tab in Firebug to view page requests.
> (Live HTTP headers will provide some more detail also. Chrome's
> developer toolbar has a similar 'Network' feature.)
>
> If it is redirecting, you should see your original POST to the server,
> the server responding with a 302/301, and then your browser making a
> request to another page. Remember to press the Persist button (next to
> Clear), otherwise it's going to reset the tab when the redirect happens.
>
> Looking at where it's redirecting you to/from might give you a clue -
> but either way, yes, run through your plugins one by one to narrow it
> down. If a redirect is happening that's why your POST data is clearing,
> though could also be a plugin simply unsetting $_POST ...
>
> G
>
>
I have been poking at the two sites which are showing this behavior of
stripping the post information and I have found that the URL is served for
a GET request but is not served for a POST request.  What was happening (in
both cases) is a 403 response is issued on the POST request but the page
referenced by the 403 header information (/403.shtml) doesn't exist so
WordPress ends up rendering the original URL again (although I don't
understand how that part happens).

I have posted a screen shot of the headers using the Firebug Net tab:

https://dl.dropbox.com/u/10343959/GForm_SS_21.png

Can anyone think of configuration (I am assuming it is at the Apache level)
that would cause this?  On the one server I have the ability to change the
.htaccess file I tried adding "Options +FollowSymLinks" based on one post I
found on the WordPress support forum but it resulted in a 500 error so it
doesn't appear that server allows setting it in the .htaccess file.

Any idea of what I might look at next?

Mike
-- 
Mike Walsh - mpwalsh8 at gmail.com


------------------------------

Message: 3
Date: Mon, 16 Jul 2012 14:04:28 -0400
From: Brian Layman <wp-hackers at thecodecave.com>
Subject: Re: [wp-hackers] What would strip $_POST before 'init' runs?
To: wp-hackers at lists.automattic.com
Message-ID: <500457AC.90904 at thecodecave.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed

On 7/16/2012 1:51 PM, Mike Walsh wrote:
> Can anyone think of configuration (I am assuming it is at the Apache 
> level) that would cause this? 

You are certain it is apache and not nginx right? Nginx throws a setting 
into your cookie to ensure that you are coming from the site and not 
from a generic posting tool.  At times it operates like a poor man's nonce.

Brian Layman




------------------------------

Message: 4
Date: Mon, 16 Jul 2012 14:09:29 -0400
From: Brian Layman <wp-hackers at thecodecave.com>
Subject: Re: [wp-hackers] What would strip $_POST before 'init' runs?
To: wp-hackers at lists.automattic.com
Message-ID: <500458D9.4030702 at thecodecave.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed

Ignore my last question. I do see Apache referenced in the screen shot.  
When you said it wasn't respecting .htaccess, I began wonder.  It fit 
with your situation, if you were posting using curl.  But even if nginx 
was in front of apache as a proxy, I think if apache is serving the 
error code, nginx's cookie setting could not be the issue here.

Brian Layman

On 7/16/2012 1:51 PM, Mike Walsh wrote:

> https://dl.dropbox.com/u/10343959/GForm_SS_21.png Can anyone think of 
> configuration (I am assuming it is at the Apache level) that would 
> cause this? 




------------------------------

Message: 5
Date: Mon, 16 Jul 2012 14:12:37 -0400
From: Mike Walsh <mpwalsh8 at gmail.com>
Subject: Re: [wp-hackers] What would strip $_POST before 'init' runs?
To: wp-hackers at lists.automattic.com
Message-ID:
	<CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg at mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1

I am not sure of anything on this problem!

In the Response Headers "Server" is reported as "Apache".  Is there some
other way to detect "nginx"?

Mike

On Mon, Jul 16, 2012 at 2:04 PM, Brian Layman <wp-hackers at thecodecave.com>wrote:

> On 7/16/2012 1:51 PM, Mike Walsh wrote:
>
>> Can anyone think of configuration (I am assuming it is at the Apache
>> level) that would cause this?
>>
>
> You are certain it is apache and not nginx right? Nginx throws a setting
> into your cookie to ensure that you are coming from the site and not from a
> generic posting tool.  At times it operates like a poor man's nonce.
>
> Brian Layman
>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>



-- 
Mike Walsh - mpwalsh8 at gmail.com


------------------------------

Message: 6
Date: Tue, 17 Jul 2012 02:21:40 +0300
From: scribu <mail at scribu.net>
Subject: Re: [wp-hackers] WordPress moving to PHP 5.3x?
To: wp-hackers at lists.automattic.com
Message-ID:
	<CABzSYNONdnrUr4XDs6HFHw+WTcVKUB5huFEW6VBJBr9BVBTSiQ at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

It just dawned on me that with PHP 5.3 namespaces, I wouldn't need to do
these crazy hacks to have a common set of functions bundled with each
plugin. I could just load them under that plugin's namespace only.

That said, I won't venture to give advice on what you should do with your
projects; you know better than anyone what your goals are.

-- 
http://scribu.net


------------------------------

Message: 7
Date: Tue, 17 Jul 2012 03:08:08 +0300
From: scribu <mail at scribu.net>
Subject: Re: [wp-hackers] WordPress moving to PHP 5.3x?
To: wp-hackers at lists.automattic.com
Message-ID:
	<CABzSYNPv43+HEnxtAwtgCr+e_5reDv-d64wr9KS2Ww9HXV1cxg at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

On Tue, Jul 17, 2012 at 2:21 AM, scribu <mail at scribu.net> wrote:

> It just dawned on me that with PHP 5.3 namespaces, I wouldn't need to do
> these crazy hacks to have a common set of functions bundled with each
> plugin. I could just load them under that plugin's namespace only.
>

Turns out what I was thinking about isn't possible with PHP namespaces:
*
*
*<?php

namespace MyPlugin;

require 'my-framework.php';*

Unless my-framework.php also has the *namespace MyPlugin;* declaration, all
it's functions will still be loaded in the global namespace.

PHP 5.3, still a fractal of bad design.

-- 
http://scribu.net


------------------------------

Message: 8
Date: Tue, 17 Jul 2012 10:10:17 +1000
From: Daniel Fenn <danielx386 at gmail.com>
Subject: Re: [wp-hackers] WordPress moving to PHP 5.3x?
To: wp-hackers at lists.automattic.com
Message-ID:
	<CAJ5Hi2iqq3QDzYn9-T8YEnO9qib2ni06PMY2-W6nmQ9f0tx1fA at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

What about php 3.4? Same issue?
Regards,
Daniel Fenn






On Tue, Jul 17, 2012 at 10:08 AM, scribu <mail at scribu.net> wrote:
> On Tue, Jul 17, 2012 at 2:21 AM, scribu <mail at scribu.net> wrote:
>
>> It just dawned on me that with PHP 5.3 namespaces, I wouldn't need to do
>> these crazy hacks to have a common set of functions bundled with each
>> plugin. I could just load them under that plugin's namespace only.
>>
>
> Turns out what I was thinking about isn't possible with PHP namespaces:
> *
> *
> *<?php
>
> namespace MyPlugin;
>
> require 'my-framework.php';*
>
> Unless my-framework.php also has the *namespace MyPlugin;* declaration, all
> it's functions will still be loaded in the global namespace.
>
> PHP 5.3, still a fractal of bad design.
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


------------------------------

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


End of wp-hackers Digest, Vol 90, Issue 37
******************************************


From harry at dxw.com  Tue Jul 17 09:56:58 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Tue, 17 Jul 2012 10:56:58 +0100
Subject: [wp-hackers] Author URLs expose usernames
Message-ID: <500536EA.2000103@dxw.com>

Not a new issue by any means, but we're seeing an increasing number of 
attacks where:

  * Usernames are first enumerated by visiting ?author=<id> and checking
    the username slug in the redirect URL
  * Brute-force password attacks are then carried out against those accounts

I wondered whether WP might already have some mechanism for using 
something else as an author slug, or for not redirecting ?author=. Or, 
if not, whether something should be added or changed?

I realise usernames are probably used because nothing else in wp_user 
has permanence, but this is very much not ideal for us. We run a couple 
of big members-only BuddyPress sites. And like all such sites, they have 
user accounts with crap passwords. We have other controls to try to 
limit that, but the reality is that accessing the site is extremely 
trivial for an attacker if usernames can be enumerated, because at least 
a couple of them will have passwords in the top 10 list, which will 
therefore be guessed before our systems notice the attack and ban the 
IP/reset the password.

For the moment, we're 403ing requests for ?author=. Not exactly optimal 
as sites can still be spidered to look for /author/[username] links, but 
at least it stops the naive attack.

Has anyone else done anything to deal with these sorts of attacks?

Harry


From highfive at jesserfriedman.com  Tue Jul 17 10:31:14 2012
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Tue, 17 Jul 2012 06:31:14 -0400
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <500536EA.2000103@dxw.com>
References: <500536EA.2000103@dxw.com>
Message-ID: <CAGtTZ+Ys2pY93TufMZvJ9MoUdyRKqC95rxSw=UCnkE2-k03VdA@mail.gmail.com>

One thing I always tell my clients is to make front facing authors as low
on the role capabilities as possible. If that means having two accounts one
administrator and the other author or subscriber level so be it.

Never author anything as an admin

This is more a tip and less of a solution

Jesse
On Jul 17, 2012 5:57 AM, "Harry Metcalfe" <harry at dxw.com> wrote:

> Not a new issue by any means, but we're seeing an increasing number of
> attacks where:
>
>  * Usernames are first enumerated by visiting ?author=<id> and checking
>    the username slug in the redirect URL
>  * Brute-force password attacks are then carried out against those accounts
>
> I wondered whether WP might already have some mechanism for using
> something else as an author slug, or for not redirecting ?author=. Or, if
> not, whether something should be added or changed?
>
> I realise usernames are probably used because nothing else in wp_user has
> permanence, but this is very much not ideal for us. We run a couple of big
> members-only BuddyPress sites. And like all such sites, they have user
> accounts with crap passwords. We have other controls to try to limit that,
> but the reality is that accessing the site is extremely trivial for an
> attacker if usernames can be enumerated, because at least a couple of them
> will have passwords in the top 10 list, which will therefore be guessed
> before our systems notice the attack and ban the IP/reset the password.
>
> For the moment, we're 403ing requests for ?author=. Not exactly optimal as
> sites can still be spidered to look for /author/[username] links, but at
> least it stops the naive attack.
>
> Has anyone else done anything to deal with these sorts of attacks?
>
> Harry
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From danielx386 at gmail.com  Tue Jul 17 10:36:38 2012
From: danielx386 at gmail.com (Daniel Fenn)
Date: Tue, 17 Jul 2012 20:36:38 +1000
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAGtTZ+Ys2pY93TufMZvJ9MoUdyRKqC95rxSw=UCnkE2-k03VdA@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<CAGtTZ+Ys2pY93TufMZvJ9MoUdyRKqC95rxSw=UCnkE2-k03VdA@mail.gmail.com>
Message-ID: <CAJ5Hi2h_+sOnGfmbAKFtb9AZagV54U7xw8LHTU8NtGCNvfPsqg@mail.gmail.com>

Adding to that dont use admin or anything like that for the admin
account but you could get smart and have an account called admin but
only give it author level permission.

On 7/17/12, Jesse Friedman <highfive at jesserfriedman.com> wrote:
> One thing I always tell my clients is to make front facing authors as low
> on the role capabilities as possible. If that means having two accounts one
> administrator and the other author or subscriber level so be it.
>
> Never author anything as an admin
>
> This is more a tip and less of a solution
>
> Jesse
> On Jul 17, 2012 5:57 AM, "Harry Metcalfe" <harry at dxw.com> wrote:
>
>> Not a new issue by any means, but we're seeing an increasing number of
>> attacks where:
>>
>>  * Usernames are first enumerated by visiting ?author=<id> and checking
>>    the username slug in the redirect URL
>>  * Brute-force password attacks are then carried out against those
>> accounts
>>
>> I wondered whether WP might already have some mechanism for using
>> something else as an author slug, or for not redirecting ?author=. Or, if
>> not, whether something should be added or changed?
>>
>> I realise usernames are probably used because nothing else in wp_user has
>> permanence, but this is very much not ideal for us. We run a couple of
>> big
>> members-only BuddyPress sites. And like all such sites, they have user
>> accounts with crap passwords. We have other controls to try to limit
>> that,
>> but the reality is that accessing the site is extremely trivial for an
>> attacker if usernames can be enumerated, because at least a couple of
>> them
>> will have passwords in the top 10 list, which will therefore be guessed
>> before our systems notice the attack and ban the IP/reset the password.
>>
>> For the moment, we're 403ing requests for ?author=. Not exactly optimal
>> as
>> sites can still be spidered to look for /author/[username] links, but at
>> least it stops the naive attack.
>>
>> Has anyone else done anything to deal with these sorts of attacks?
>>
>> Harry
>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Regards,
Daniel Fenn

From wordpress at zed1.com  Tue Jul 17 11:12:52 2012
From: wordpress at zed1.com (Mike Little)
Date: Tue, 17 Jul 2012 12:12:52 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <500536EA.2000103@dxw.com>
References: <500536EA.2000103@dxw.com>
Message-ID: <CAMb54M0+zrCkmKpc9otNKfSd2xyNFg6+gFhM7Q14jDraqu0rNA@mail.gmail.com>

On 17 July 2012 10:56, Harry Metcalfe <harry at dxw.com> wrote:

> Not a new issue by any means, but we're seeing an increasing number of
> attacks where:
>
>  * Usernames are first enumerated by visiting ?author=<id> and checking
>    the username slug in the redirect URL
>  * Brute-force password attacks are then carried out against those accounts
>
> I wondered whether WP might already have some mechanism for using
> something else as an author slug, or for not redirecting ?author=. Or, if
> not, whether something should be added or changed?
>
> I realise usernames are probably used because nothing else in wp_user has
> permanence, but this is very much not ideal for us. We run a couple of big
> members-only BuddyPress sites. And like all such sites, they have user
> accounts with crap passwords. We have other controls to try to limit that,
> but the reality is that accessing the site is extremely trivial for an
> attacker if usernames can be enumerated, because at least a couple of them
> will have passwords in the top 10 list, which will therefore be guessed
> before our systems notice the attack and ban the IP/reset the password.
>
> For the moment, we're 403ing requests for ?author=. Not exactly optimal as
> sites can still be spidered to look for /author/[username] links, but at
> least it stops the naive attack.
>
> Has anyone else done anything to deal with these sorts of attacks?
>
> Harry
>
>

WordPress will try to use the user's 'user_nicename' column to create the
user's url. Alas, by default, this is the same as the user's login (unless
a sanitised login clash causes WP to add a numerical suffix). But it is
filterable at user creation time.

So, you could go through and run a query to update everyone's user_nicename
column (it's in the prefix_users table). WordPress will instantly start
using that value for the author's post url (you will likely need to clear
caches). It needs to be url friendly, so you might make it
firstname-lastname-randomnumber, for example.

To ensure new users have the appropriate user_nicename, you can hook the
'pre_user_nicename' filter to modify that field during user registration.

Hope that helps,

Mike
-- 
Mike Little
http://zed1.com/

From dailyrants at gmail.com  Tue Jul 17 11:57:10 2012
From: dailyrants at gmail.com (John)
Date: Tue, 17 Jul 2012 07:57:10 -0400
Subject: [wp-hackers] Author URLs expose usernames (Harry Metcalfe)
Message-ID: <CAPYXUfVWjE1cm-DYXF33jspZHEAZKQ3=VZ7jDDXZRgYz6yLNXA@mail.gmail.com>

The WP Author Slug plugin will use the display name for the slug instead of
the login name.

http://en.wp.obenland.it/wp-author-slug/




> ------------------------------
>
> Message: 2
> Date: Tue, 17 Jul 2012 10:56:58 +0100
> From: Harry Metcalfe <harry at dxw.com>
> Subject: [wp-hackers] Author URLs expose usernames
> To: wp-hackers at lists.automattic.com
> Message-ID: <500536EA.2000103 at dxw.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> Not a new issue by any means, but we're seeing an increasing number of
> attacks where:
>
>   * Usernames are first enumerated by visiting ?author=<id> and checking
>     the username slug in the redirect URL
>   * Brute-force password attacks are then carried out against those
> accounts
>
> I wondered whether WP might already have some mechanism for using
> something else as an author slug, or for not redirecting ?author=. Or,
> if not, whether something should be added or changed?
>
> I realise usernames are probably used because nothing else in wp_user
> has permanence, but this is very much not ideal for us. We run a couple
> of big members-only BuddyPress sites. And like all such sites, they have
> user accounts with crap passwords. We have other controls to try to
> limit that, but the reality is that accessing the site is extremely
> trivial for an attacker if usernames can be enumerated, because at least
> a couple of them will have passwords in the top 10 list, which will
> therefore be guessed before our systems notice the attack and ban the
> IP/reset the password.
>
> For the moment, we're 403ing requests for ?author=. Not exactly optimal
> as sites can still be spidered to look for /author/[username] links, but
> at least it stops the naive attack.
>
> Has anyone else done anything to deal with these sorts of attacks?
>
> Harry
>

From harry at dxw.com  Tue Jul 17 14:04:28 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Tue, 17 Jul 2012 15:04:28 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAMb54M0+zrCkmKpc9otNKfSd2xyNFg6+gFhM7Q14jDraqu0rNA@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<CAMb54M0+zrCkmKpc9otNKfSd2xyNFg6+gFhM7Q14jDraqu0rNA@mail.gmail.com>
Message-ID: <500570EC.1060702@dxw.com>

On 17/07/12 12:12, Mike Little wrote:
> On 17 July 2012 10:56, Harry Metcalfe <harry at dxw.com> wrote:
>
>> Not a new issue by any means, but we're seeing an increasing number of
>> attacks where:
>>
>>   * Usernames are first enumerated by visiting ?author=<id> and checking
>>     the username slug in the redirect URL
>>   * Brute-force password attacks are then carried out against those accounts
>>
>> I wondered whether WP might already have some mechanism for using
>> something else as an author slug, or for not redirecting ?author=. Or, if
>> not, whether something should be added or changed?
>>
>> I realise usernames are probably used because nothing else in wp_user has
>> permanence, but this is very much not ideal for us. We run a couple of big
>> members-only BuddyPress sites. And like all such sites, they have user
>> accounts with crap passwords. We have other controls to try to limit that,
>> but the reality is that accessing the site is extremely trivial for an
>> attacker if usernames can be enumerated, because at least a couple of them
>> will have passwords in the top 10 list, which will therefore be guessed
>> before our systems notice the attack and ban the IP/reset the password.
>>
>> For the moment, we're 403ing requests for ?author=. Not exactly optimal as
>> sites can still be spidered to look for /author/[username] links, but at
>> least it stops the naive attack.
>>
>> Has anyone else done anything to deal with these sorts of attacks?
>>
>> Harry
>>
>>
> WordPress will try to use the user's 'user_nicename' column to create the
> user's url. Alas, by default, this is the same as the user's login (unless
> a sanitised login clash causes WP to add a numerical suffix). But it is
> filterable at user creation time.
>
> So, you could go through and run a query to update everyone's user_nicename
> column (it's in the prefix_users table). WordPress will instantly start
> using that value for the author's post url (you will likely need to clear
> caches). It needs to be url friendly, so you might make it
> firstname-lastname-randomnumber, for example.
>
> To ensure new users have the appropriate user_nicename, you can hook the
> 'pre_user_nicename' filter to modify that field during user registration.
>
> Hope that helps,
>
> Mike

Ah, I should have checked that! Will the core keep those old URLs live 
if nicename changes?


From wordpress at zed1.com  Tue Jul 17 15:18:39 2012
From: wordpress at zed1.com (Mike Little)
Date: Tue, 17 Jul 2012 16:18:39 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <500570EC.1060702@dxw.com>
References: <500536EA.2000103@dxw.com>
	<CAMb54M0+zrCkmKpc9otNKfSd2xyNFg6+gFhM7Q14jDraqu0rNA@mail.gmail.com>
	<500570EC.1060702@dxw.com>
Message-ID: <CAMb54M2DJLtr0-iVKuLRiqMTojUtuPG2VWfPUH09W-nnotrUrA@mail.gmail.com>

On 17 July 2012 15:04, Harry Metcalfe <harry at dxw.com> wrote:

> On 17/07/12 12:12, Mike Little wrote:
>
>>
>> Ah, I should have checked that! Will the core keep those old URLs live if
> nicename changes?
>
>
No, I don't think it will (unlike posts and pages), you may need to tap
into the query processing.

The rewrite rules will convert the url to a query var: author_name =
'author-slug-from-url'; There are no filters around parsing that: the code
will simply call get_user_by('slug', $q['author_name']).

I think you should:

hook into 'pre_get_posts',
look for author_name being set and call get_user_by('slug',
$q['author_name']),
if you get a result, you're done.
else, call get_user_by('login', $q['author_name']),
if that works, get the user's slug (user_nicename) and update query var
author_name to match.


Hope that helps,


Mike
-- 
Mike Little
http://zed1.com/

From harry at dxw.com  Tue Jul 17 15:19:58 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Tue, 17 Jul 2012 16:19:58 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAMb54M2DJLtr0-iVKuLRiqMTojUtuPG2VWfPUH09W-nnotrUrA@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<CAMb54M0+zrCkmKpc9otNKfSd2xyNFg6+gFhM7Q14jDraqu0rNA@mail.gmail.com>
	<500570EC.1060702@dxw.com>
	<CAMb54M2DJLtr0-iVKuLRiqMTojUtuPG2VWfPUH09W-nnotrUrA@mail.gmail.com>
Message-ID: <5005829E.1080306@dxw.com>

Thanks Mike. We'll have a play!


On 17/07/12 16:18, Mike Little wrote:
> On 17 July 2012 15:04, Harry Metcalfe <harry at dxw.com> wrote:
>
>> On 17/07/12 12:12, Mike Little wrote:
>>
>>> Ah, I should have checked that! Will the core keep those old URLs live if
>> nicename changes?
>>
>>
> No, I don't think it will (unlike posts and pages), you may need to tap
> into the query processing.
>
> The rewrite rules will convert the url to a query var: author_name =
> 'author-slug-from-url'; There are no filters around parsing that: the code
> will simply call get_user_by('slug', $q['author_name']).
>
> I think you should:
>
> hook into 'pre_get_posts',
> look for author_name being set and call get_user_by('slug',
> $q['author_name']),
> if you get a result, you're done.
> else, call get_user_by('login', $q['author_name']),
> if that works, get the user's slug (user_nicename) and update query var
> author_name to match.
>
>
> Hope that helps,
>
>
> Mike



From mike at newclarity.net  Wed Jul 18 01:04:47 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 17 Jul 2012 21:04:47 -0400
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <500536EA.2000103@dxw.com>
References: <500536EA.2000103@dxw.com>
Message-ID: <29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>

On Jul 17, 2012, at 5:56 AM, Harry Metcalfe wrote:
> Not a new issue by any means, but we're seeing an increasing number of attacks where:
> 
> * Usernames are first enumerated by visiting ?author=<id> and checking
>   the username slug in the redirect URL
> * Brute-force password attacks are then carried out against those accounts

Is it not possible to just 404 any URLs like that? Are direct URLs needed anywhere?  

Here's code you can drop into your theme do return 404 for those URLs:

class No_Direct_Author_Attack {
	function __construct() {
		add_action( 'after_setup_theme', array( $this, 'after_setup_theme' ) );
	}
	function after_setup_theme() {
		if ( preg_match( '#/\?author=[0-9]+$#', $_SERVER['REQUEST_URI'] ) ) {
			status_header( 404 );
			die( '404 &#8212; File not found.' );
		}
	}
}
new No_Direct_Author_Attack;

Hope this helps.

-Mike


From helen.y.hou at gmail.com  Wed Jul 18 01:44:29 2012
From: helen.y.hou at gmail.com (Helen Hou-Sandi)
Date: Tue, 17 Jul 2012 21:44:29 -0400
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
Message-ID: <CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>

> Is it not possible to just 404 any URLs like that? Are direct URLs needed
> anywhere?
>
> Here's code you can drop into your theme do return 404 for those URLs:
>
> class No_Direct_Author_Attack {
>         function __construct() {
>                 add_action( 'after_setup_theme', array( $this,
> 'after_setup_theme' ) );
>         }
>         function after_setup_theme() {
>                 if ( preg_match( '#/\?author=[0-9]+$#',
> $_SERVER['REQUEST_URI'] ) ) {
>                         status_header( 404 );
>                         die( '404 &#8212; File not found.' );
>                 }
>         }
> }
> new No_Direct_Author_Attack;
>
>
I use the following on sites that need author anonymity - seems to work
well and stays in WP.

// send author page requests into the 404 hole
add_action( 'pre_get_posts', 'hhs_no_author_archives' );
function hhs_no_author_archives( $query ) {
    if ( $query->is_main_query() && $query->is_author() ) {
        $query->is_author = false;
        $query->is_404 = true;
    }
}

From mike at newclarity.net  Wed Jul 18 02:22:23 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 17 Jul 2012 22:22:23 -0400
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
Message-ID: <A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>

On Jul 17, 2012, at 9:44 PM, Helen Hou-Sandi wrote:
> I use the following on sites that need author anonymity - seems to work
> well and stays in WP.
> 
> // send author page requests into the 404 hole
> add_action( 'pre_get_posts', 'hhs_no_author_archives' );
> function hhs_no_author_archives( $query ) {
>    if ( $query->is_main_query() && $query->is_author() ) {
>        $query->is_author = false;
>        $query->is_404 = true;
>    }
> }

Just FYI, if you use the 'after_setup_theme' hook and die() immediately you can bypass at least 4 SQL queries. If a bot is hammering a site those could add up to be significant. 

If you do it in a plugin and use 'plugins_loaded' you can bypass at least 26 SQL queries.

Or you could add the following to wp-config.php and WordPress won't even have started loading:

if ( preg_match( '#/\?author=[0-9]+$#', $_SERVER['REQUEST_URI'] ) ) {
	header('HTTP/1.0 404 Not Found');
	echo '404 Not Found';
	die();
}

FWIW.

-Mike


From chason at gmail.com  Wed Jul 18 03:31:04 2012
From: chason at gmail.com (Chason Chaffin)
Date: Tue, 17 Jul 2012 20:31:04 -0700
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
Message-ID: <C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>

Use an .htaccess and PHP doesn't even get invoked. 

I'll leave the Rewrite rule as an exercise for the reader. 

Sent from my iPhone

On Jul 17, 2012, at 7:22 PM, Mike Schinkel <mike at newclarity.net> wrote:

> On Jul 17, 2012, at 9:44 PM, Helen Hou-Sandi wrote:
>> I use the following on sites that need author anonymity - seems to work
>> well and stays in WP.
>> 
>> // send author page requests into the 404 hole
>> add_action( 'pre_get_posts', 'hhs_no_author_archives' );
>> function hhs_no_author_archives( $query ) {
>>   if ( $query->is_main_query() && $query->is_author() ) {
>>       $query->is_author = false;
>>       $query->is_404 = true;
>>   }
>> }
> 
> Just FYI, if you use the 'after_setup_theme' hook and die() immediately you can bypass at least 4 SQL queries. If a bot is hammering a site those could add up to be significant. 
> 
> If you do it in a plugin and use 'plugins_loaded' you can bypass at least 26 SQL queries.
> 
> Or you could add the following to wp-config.php and WordPress won't even have started loading:
> 
> if ( preg_match( '#/\?author=[0-9]+$#', $_SERVER['REQUEST_URI'] ) ) {
>    header('HTTP/1.0 404 Not Found');
>    echo '404 Not Found';
>    die();
> }
> 
> FWIW.
> 
> -Mike
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From tcbarrett at gmail.com  Wed Jul 18 04:13:25 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 18 Jul 2012 05:13:25 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
Message-ID: <CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>

The main issue is exposing the username, passing an author id in the url is
just an easy way to find it.

The wp-author-slug plugin hides the username either way.

The next step is to remove the helpful login failure messages that let
hacker types search for user names.

Are they worth considering for inclusion into core?

//Tom
Sent on Android
On Jul 18, 2012 4:31 AM, "Chason Chaffin" <chason at gmail.com> wrote:

> Use an .htaccess and PHP doesn't even get invoked.
>
> I'll leave the Rewrite rule as an exercise for the reader.
>
> Sent from my iPhone
>
> On Jul 17, 2012, at 7:22 PM, Mike Schinkel <mike at newclarity.net> wrote:
>
> > On Jul 17, 2012, at 9:44 PM, Helen Hou-Sandi wrote:
> >> I use the following on sites that need author anonymity - seems to work
> >> well and stays in WP.
> >>
> >> // send author page requests into the 404 hole
> >> add_action( 'pre_get_posts', 'hhs_no_author_archives' );
> >> function hhs_no_author_archives( $query ) {
> >>   if ( $query->is_main_query() && $query->is_author() ) {
> >>       $query->is_author = false;
> >>       $query->is_404 = true;
> >>   }
> >> }
> >
> > Just FYI, if you use the 'after_setup_theme' hook and die() immediately
> you can bypass at least 4 SQL queries. If a bot is hammering a site those
> could add up to be significant.
> >
> > If you do it in a plugin and use 'plugins_loaded' you can bypass at
> least 26 SQL queries.
> >
> > Or you could add the following to wp-config.php and WordPress won't even
> have started loading:
> >
> > if ( preg_match( '#/\?author=[0-9]+$#', $_SERVER['REQUEST_URI'] ) ) {
> >    header('HTTP/1.0 404 Not Found');
> >    echo '404 Not Found';
> >    die();
> > }
> >
> > FWIW.
> >
> > -Mike
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ryan.wpmailinglists at gmail.com  Wed Jul 18 07:45:58 2012
From: ryan.wpmailinglists at gmail.com (Ryan WP Mailing Lists)
Date: Wed, 18 Jul 2012 00:45:58 -0700
Subject: [wp-hackers] Your development Setup
Message-ID: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>

Hi everyone. I am looking to get starting with WordPress and PHP coding and
I wanted to know what kind of setup do you all have, what kind a systems,
specs, software you use.

More detials the better, and of course some pics so I can see what it all
looks like. Hoping for some good ideas to get my own development setup done.

From steve at sltaylor.co.uk  Wed Jul 18 10:42:05 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Wed, 18 Jul 2012 11:42:05 +0100
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
Message-ID: <CAGEuVU3tC6ZaYLNGqMPksmeymwkbWO1b0XkrKjwbT3RCFWPhDg@mail.gmail.com>

Hi Ryan,

I reckon if everyone here gave you loads of details you might be
confused. And pics?!

You should have said whether you're on Mac, Windows or Linux for a
start. But basically you want MAMP, WAMP, LAMP, or XAMPP.

These tutorials might help:

http://wp.smashingmagazine.com/2011/09/28/developing-wordpress-locally-with-mamp/
http://sixrevisions.com/tutorials/web-development-tutorials/using-xampp-for-local-wordpress-theme-development/
http://markjaquith.wordpress.com/2011/06/24/wordpress-local-dev-tips/

As for editing code, again it depends on your platform. I recently
moved to a full IDE, which might be overwhelming if you're a beginner.
But if you're looking for an IDE, I can recommend
http://www.jetbrains.com/phpstorm/

Good luck!

Steve


On 18 July 2012 08:45, Ryan WP Mailing Lists
<ryan.wpmailinglists at gmail.com> wrote:
> Hi everyone. I am looking to get starting with WordPress and PHP coding and
> I wanted to know what kind of setup do you all have, what kind a systems,
> specs, software you use.
>
> More detials the better, and of course some pics so I can see what it all
> looks like. Hoping for some good ideas to get my own development setup done.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From harry at dxw.com  Wed Jul 18 11:58:04 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Wed, 18 Jul 2012 12:58:04 +0100
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
Message-ID: <5006A4CC.4020106@dxw.com>

Somewhat biased since I wrote most of it, but I use Whippet 
(http://github.com/dxw/whippet) which is a standalone WordPress server, 
so no Apache or IIS needed.

Lots of details on Github.


On 18/07/12 08:45, Ryan WP Mailing Lists wrote:
> Hi everyone. I am looking to get starting with WordPress and PHP coding and
> I wanted to know what kind of setup do you all have, what kind a systems,
> specs, software you use.
>
> More detials the better, and of course some pics so I can see what it all
> looks like. Hoping for some good ideas to get my own development setup done.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



From latz at elektroelch.de  Wed Jul 18 12:28:47 2012
From: latz at elektroelch.de (=?UTF-8?Q?Lutz_Schr=C3=B6er?=)
Date: Wed, 18 Jul 2012 14:28:47 +0200
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
Message-ID: <d430deab7f9f31289be5e24ec26c8c71@elektroelch.de>

Am 18.07.2012 06:13, schrieb Tom Barrett:
> The next step is to remove the helpful login failure messages that 
> let
> hacker types search for user names.

At the moment you can use the plugin "Unified Login Error Messages" 
which changes the error message to "ERROR: Invalid user/password 
combination." or anything you like. 
(http://wordpress.org/extend/plugins/unified-login-error-messages/)

> Are they worth considering for inclusion into core?

Supply a ticket and see what the lead devs are saying...

Latz



From mail at elamperti.com  Wed Jul 18 13:20:58 2012
From: mail at elamperti.com (Enrico Lamperti)
Date: Wed, 18 Jul 2012 10:20:58 -0300
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
Message-ID: <CAJHhZnkuS+xQYaumpAM9-oh2dBzO=bVbFWBOw9-kaJ18sv1nkg@mail.gmail.com>

I usually work on Windows, and I preffer Sublime
Text<http://www.sublimetext.com/> for
coding.

If I'm not using Linux I set up a VirtualBox
<https://www.virtualbox.org/>VM with a
Debian <http://www.debian.org/> using between 512 MB and 1 GB of RAM. Later
I install Apache, PHP, MySQL and phpMyAdmin (or you can use LAMP, it's *
almost* the same). Personally I like to use a headless VM (no window) and
access it via SSH (on Windows you can use
Putty<http://www.chiark.greenend.org.uk/~sgtatham/putty/>or this
Chrome extension<https://chrome.google.com/webstore/detail/pnhechapfaindjhompbnflcldabbghjo>-though
it doesn't work absolutely well-).
If it suits your project, you may want to replicate the exact distribution
and configuration of the server where the site is going to be ? we found it
useful for large projects.
It's up to you how you'll sync files with the server (some ideas: svn/git,
ftp/sftp, shared folder with guest OS).

To work/debug I use Chrome (I suggest the dev
channel<https://www.google.com/chrome/eula.html?extra=devchannel>)
and Firefox (nightly <http://nightly.mozilla.org/>). The Firefox inspector
lacks a lot of stuff, but Firebug <http://getfirebug.com/> will help you a
lot.

Good luck :)

On Wed, Jul 18, 2012 at 4:45 AM, Ryan WP Mailing Lists <
ryan.wpmailinglists at gmail.com> wrote:

> Hi everyone. I am looking to get starting with WordPress and PHP coding and
> I wanted to know what kind of setup do you all have, what kind a systems,
> specs, software you use.
>
> More detials the better, and of course some pics so I can see what it all
> looks like. Hoping for some good ideas to get my own development setup
> done.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Enrico

From jeff at jeffrose.ca  Wed Jul 18 14:18:16 2012
From: jeff at jeffrose.ca (Jeff Rose)
Date: Wed, 18 Jul 2012 07:18:16 -0700
Subject: [wp-hackers] Your development Setup
Message-ID: <CABWVAyX7une-EYgO5ptr4mxvOeyfzjy5t=yQgebXXvn_++yiPw@mail.gmail.com>

I've used a XAMPP setup on both Windows and Mac and have been quite happy
with it. Learning how to create virtual hosts on my Mac when I first got it
was a challenge, but it's all on the internet. Xdebug and Firebug of course
- and sometimes FIREPHP if I'm really desperate.

I tried MAMP (Mac version) but never got it working.

Having different installs for different clients that can match their real
world setup really helps, and keeping copies locally (with backups!) means
Internet isn't an issue.

On Wed, Jul 18, 2012 at 5:00 AM, <wp-hackers-request at lists.automattic.com>wrote:

>
> Message: 1
> Date: Wed, 18 Jul 2012 00:45:58 -0700
> From: Ryan WP Mailing Lists <ryan.wpmailinglists at gmail.com>
> Subject: [wp-hackers] Your development Setup
> To: wp-hackers at lists.automattic.com
> Message-ID:
>         <
> CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hi everyone. I am looking to get starting with WordPress and PHP coding and
> I wanted to know what kind of setup do you all have, what kind a systems,
> specs, software you use.
>
> More detials the better, and of course some pics so I can see what it all
> looks like. Hoping for some good ideas to get my own development setup
> done.
>
>
> --
Jeff Rose
------------------
http://www.jeffrose.ca/twitter
http://www.jeffrose.ca/facebook
http://www.ShopCrosstown.com
http://www.VancouverDogGroomers.ca

From aaron at commandmedia.net  Wed Jul 18 14:51:26 2012
From: aaron at commandmedia.net (aaron at commandmedia.net)
Date: Thu, 19 Jul 2012 00:51:26 +1000
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CABWVAyX7une-EYgO5ptr4mxvOeyfzjy5t=yQgebXXvn_++yiPw@mail.gmail.com>
References: <CABWVAyX7une-EYgO5ptr4mxvOeyfzjy5t=yQgebXXvn_++yiPw@mail.gmail.com>
Message-ID: <017e01cd64f4$d0290740$707b15c0$@commandmedia.net>

If you're on Windows, Microsoft has an installer that will set up MySQL, PHP
and Wordpress: http://www.microsoft.com/web/wordpress/

I've found WebMatrix to be pleasantly easy to use. It will run on top of IIS
instead of Apache so there are a couple of things, like url rewriting, that
will work a bit differently.

Beyond that I use the free Komodo Edit to edit HTML and PHP:
http://www.activestate.com/komodo-edit but it doesn't auto-indent code which
I find very annoying, so I'm open to replacement suggestions.


-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Jeff Rose
Sent: Thursday, July 19, 2012 12:18 AM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Your development Setup

I've used a XAMPP setup on both Windows and Mac and have been quite happy
with it. Learning how to create virtual hosts on my Mac when I first got it
was a challenge, but it's all on the internet. Xdebug and Firebug of course
- and sometimes FIREPHP if I'm really desperate.

I tried MAMP (Mac version) but never got it working.

Having different installs for different clients that can match their real
world setup really helps, and keeping copies locally (with backups!) means
Internet isn't an issue.

On Wed, Jul 18, 2012 at 5:00 AM,
<wp-hackers-request at lists.automattic.com>wrote:

>
> Message: 1
> Date: Wed, 18 Jul 2012 00:45:58 -0700
> From: Ryan WP Mailing Lists <ryan.wpmailinglists at gmail.com>
> Subject: [wp-hackers] Your development Setup
> To: wp-hackers at lists.automattic.com
> Message-ID:
>         <
> CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hi everyone. I am looking to get starting with WordPress and PHP 
> coding and I wanted to know what kind of setup do you all have, what 
> kind a systems, specs, software you use.
>
> More detials the better, and of course some pics so I can see what it 
> all looks like. Hoping for some good ideas to get my own development 
> setup done.
>
>
> --
Jeff Rose
------------------
http://www.jeffrose.ca/twitter
http://www.jeffrose.ca/facebook
http://www.ShopCrosstown.com
http://www.VancouverDogGroomers.ca
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From ravi-lists at g8o.net  Wed Jul 18 15:22:19 2012
From: ravi-lists at g8o.net (// ravi)
Date: Wed, 18 Jul 2012 11:22:19 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <017e01cd64f4$d0290740$707b15c0$@commandmedia.net>
References: <CABWVAyX7une-EYgO5ptr4mxvOeyfzjy5t=yQgebXXvn_++yiPw@mail.gmail.com>
	<017e01cd64f4$d0290740$707b15c0$@commandmedia.net>
Message-ID: <C336D822-56F2-4514-8BDE-45DB3ACFBA26@g8o.net>



I use the built-in Apache/PHP setup in OS X, and a Mac installation packaged by MySQL for the database. I use MacVim for editing code. The real tricky part was to set up a way to test the WordPress running on my system, including from a Windows VM. The problem is that WordPress, IIRC, [re]writes/generates URLs with the hostname configured in the Settings. In my case, this means that, among other things, if I let the installation to default to ?localhost? or an IP address, I cannot reach it from a VM or if the IP address changes etc. My hack to overcome this problem was to define a wp.example.com in my Mac?s /etc/hosts that points to localhost/127.0.0.1 and a wp.example.com in the LMHOSTS on the Windows VM that points to the Mac?s IP address on the VM/NAT side. I then configured WP to use the name wp.example.com as the site address, and that works, with suitable adjustments to proxies, etc. I haven?t come across a cleaner solution to this problem, but I suspect there may be one that involves better WP configuration.

Regards,

	?ravi


From wp-hackers at thecodecave.com  Wed Jul 18 15:34:56 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Wed, 18 Jul 2012 11:34:56 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
Message-ID: <5006D7A0.9000508@thecodecave.com>

This conversation comes up once a year. So be sure to look at the 
archives...

Locally I have xampp installed to my DropBox folder with the database as 
a MyISAM install. This allows me to walk to the other room and switch to 
using my laptop and continue local development without any effort to 
sync the work from my desktop.
Most often I work on the servers directly, sometimes using /etc/host to 
create a dev account for the URL in question on a different server.  
Then the client can easily preview it with an /etc/hosts change. (Note 
this requires editing the server's /etc/host too)
I use ExpanDrive (version 1.8.3 is the fastest) to connect all of my 
servers as a drive letter.
I'm on PC and use NotePad++ as the editor and at one point had extra 
function keys setup to do context sensitive searches in the codex and a 
phpxref repo.  It make it a great WordPress specific dev tool.

Brian Layman

On 7/18/2012 3:45 AM, Ryan WP Mailing Lists wrote:
> Hi everyone. I am looking to get starting with WordPress and PHP coding and
> I wanted to know what kind of setup do you all have, what kind a systems,
> specs, software you use.
>
> More detials the better, and of course some pics so I can see what it all
> looks like. Hoping for some good ideas to get my own development setup done.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From ryan.wpmailinglists at gmail.com  Wed Jul 18 15:45:14 2012
From: ryan.wpmailinglists at gmail.com (Ryan WP Mailing Lists)
Date: Wed, 18 Jul 2012 08:45:14 -0700
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAGEuVU3tC6ZaYLNGqMPksmeymwkbWO1b0XkrKjwbT3RCFWPhDg@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<CAGEuVU3tC6ZaYLNGqMPksmeymwkbWO1b0XkrKjwbT3RCFWPhDg@mail.gmail.com>
Message-ID: <CAFCSB_+BJ0xXhkegjJ41HXw9WFPe82FRsgixS3POLjJQ96EOtg@mail.gmail.com>

lol don't worry I'm on;ly new to wordpress not computers. As far as the
pictures I like to see what the setup looks like.

Personally I am on a PC now but like I said I am redoing my setup here and
want ideas on how you all do it.

Also someexample of machine specs would be nice just for comparison because
I don't want to bother getting more computer than I need. The other thing I
am curious about is multipule monitors. How many monitors do you use and do
you use each one for something specific.

On Wed, Jul 18, 2012 at 3:42 AM, Steve Taylor <steve at sltaylor.co.uk> wrote:

> Hi Ryan,
>
> I reckon if everyone here gave you loads of details you might be
> confused. And pics?!
>
> You should have said whether you're on Mac, Windows or Linux for a
> start. But basically you want MAMP, WAMP, LAMP, or XAMPP.
>
> These tutorials might help:
>
>
> http://wp.smashingmagazine.com/2011/09/28/developing-wordpress-locally-with-mamp/
>
> http://sixrevisions.com/tutorials/web-development-tutorials/using-xampp-for-local-wordpress-theme-development/
> http://markjaquith.wordpress.com/2011/06/24/wordpress-local-dev-tips/
>
> As for editing code, again it depends on your platform. I recently
> moved to a full IDE, which might be overwhelming if you're a beginner.
> But if you're looking for an IDE, I can recommend
> http://www.jetbrains.com/phpstorm/
>
> Good luck!
>
> Steve
>
>
> On 18 July 2012 08:45, Ryan WP Mailing Lists
> <ryan.wpmailinglists at gmail.com> wrote:
> > Hi everyone. I am looking to get starting with WordPress and PHP coding
> and
> > I wanted to know what kind of setup do you all have, what kind a systems,
> > specs, software you use.
> >
> > More detials the better, and of course some pics so I can see what it all
> > looks like. Hoping for some good ideas to get my own development setup
> done.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From gregg at fatheaddesign.com  Wed Jul 18 15:49:40 2012
From: gregg at fatheaddesign.com (Gregg Tomlinson)
Date: Wed, 18 Jul 2012 10:49:40 -0500
Subject: [wp-hackers] Your development Setup
In-Reply-To: <C336D822-56F2-4514-8BDE-45DB3ACFBA26@g8o.net>
References: <CABWVAyX7une-EYgO5ptr4mxvOeyfzjy5t=yQgebXXvn_++yiPw@mail.gmail.com>
	<017e01cd64f4$d0290740$707b15c0$@commandmedia.net>
	<C336D822-56F2-4514-8BDE-45DB3ACFBA26@g8o.net>
Message-ID: <05565EFB-CC9A-4919-B788-615B86EA62E7@fatheaddesign.com>

Judging from the discussions back & forth I read on this list I'm not as hardcore a programmer as most of the rest of you, so I approach my dev process from a different level of expertise. I guess that's a polite way of saying that I'm pretty sure the majority of people on this list are smarter than me & better programmers / coders than me, but believe me when I say I find this list exceptionally helpful and informative, and an absolutely invaluable tool in my development process.

I don't like working locally, that's just a personal preference I'm sure but for me working locally just doesn't work. I like to be able to show clients / coworkers projects in process at any point during the dev process.

That being said, I wrote a blog post a while ago on my MAMP setup & dev process, for those of you who'd like to read it it's here: http://www.fatheaddesign.com/352/build-your-own-mac-dev-server-for-under-100/

This is a bit out of date now, since 10.6 I now use Screen Sharing when necessary and use SSH a lot more. Eventually I'm going to figure out how to use / build my own subversion server but that's a pie in the sky goal at this point, so for the time being I'm trying to make the transition to using Beanstalk for collaboration. 

For code editing I'm sold on Sublime Text now (just not very happy with Coda any longer since v2 came out), and for CSS there's nothing better than CSSEdit.

Thanks for sharing, everyone!

--g


On Jul 18, 2012, at 10:22 AM, // ravi wrote:

> 
> 
> I use the built-in Apache/PHP setup in OS X, and a Mac installation packaged by MySQL for the database. I use MacVim for editing code. The real tricky part was to set up a way to test the WordPress running on my system, including from a Windows VM. The problem is that WordPress, IIRC, [re]writes/generates URLs with the hostname configured in the Settings. In my case, this means that, among other things, if I let the installation to default to ?localhost? or an IP address, I cannot reach it from a VM or if the IP address changes etc. My hack to overcome this problem was to define a wp.example.com in my Mac?s /etc/hosts that points to localhost/127.0.0.1 and a wp.example.com in the LMHOSTS on the Windows VM that points to the Mac?s IP address on the VM/NAT side. I then configured WP to use the name wp.example.com as the site address, and that works, with suitable adjustments to proxies, etc. I haven?t come across a cleaner solution to this problem, but I suspect there may be one that involves better WP configuration.
> 
> Regards,
> 
> 	?ravi
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

::::  ::::  ::::

Gregg Tomlinson
Principal

fathead design, inc.
1329 W. Loyola Ave., Suite G2  |  Chicago, Illinois  60626

p: 773.338.1313 ext. 6  |  f: 773.236.8573  |  t: 877.309.7799

http://fatheaddesign.com  |  http://contactsolved.com
fb: http://www.facebook.com/fatheaddesign  |  twitter: http://twitter.com/fatheaddesign



From ravi-lists at g8o.net  Wed Jul 18 16:12:31 2012
From: ravi-lists at g8o.net (// ravi)
Date: Wed, 18 Jul 2012 12:12:31 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAFCSB_+BJ0xXhkegjJ41HXw9WFPe82FRsgixS3POLjJQ96EOtg@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<CAGEuVU3tC6ZaYLNGqMPksmeymwkbWO1b0XkrKjwbT3RCFWPhDg@mail.gmail.com>
	<CAFCSB_+BJ0xXhkegjJ41HXw9WFPe82FRsgixS3POLjJQ96EOtg@mail.gmail.com>
Message-ID: <0120193A-100E-4159-8B3B-EA14D5A89FC4@g8o.net>

On Jul 18, 2012, at 11:45 AM, Ryan WP Mailing Lists wrote:
> 
> Also someexample of machine specs would be nice just for comparison because
> I don't want to bother getting more computer than I need. The other thing I
> am curious about is multipule monitors. How many monitors do you use and do
> you use each one for something specific.
> 


I am happy with my early 2011 15? MacBook Pro, 4GB memory, 2GHz Core i7. I use one external monitor (sometimes 23?, other times 27?) and use multiple workspaces (i.e., virtual windows). But all development stuff stays on workspace (that?s the web browser, MacVim, iTerm2 for terminal/shell, the WebKit Inspector, Sequel Pro for the DB if I need it, Less CSS if I need it, etc).

	?ravi


From hal at burgiss.net  Wed Jul 18 16:30:40 2012
From: hal at burgiss.net (Hal Burgiss)
Date: Wed, 18 Jul 2012 12:30:40 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
Message-ID: <CAEizahKUPijAkDG+GSSdy7+FqUYAVgCsO8eJ0=CFfbJKOWBR3g@mail.gmail.com>

On Wed, Jul 18, 2012 at 3:45 AM, Ryan WP Mailing Lists <
ryan.wpmailinglists at gmail.com> wrote:

> Hi everyone. I am looking to get starting with WordPress and PHP coding and
> I wanted to know what kind of setup do you all have, what kind a systems,
> specs, software you use.
>
>
Ubuntu Linux with core LAMP stuff, vim for editor (qazillions of choices /
preferences  for ide's or editors), and bzr for revision/source control,
which I think should be an integral part of any development environment.
Set up apache vhosting and whatnot, and edit host file, and away you go.

-- 
Hal

From andrew.bartel at gmail.com  Wed Jul 18 16:38:39 2012
From: andrew.bartel at gmail.com (Andrew Bartel)
Date: Wed, 18 Jul 2012 09:38:39 -0700
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAEizahKUPijAkDG+GSSdy7+FqUYAVgCsO8eJ0=CFfbJKOWBR3g@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<CAEizahKUPijAkDG+GSSdy7+FqUYAVgCsO8eJ0=CFfbJKOWBR3g@mail.gmail.com>
Message-ID: <CAJnHr4jOw6AoMdt_NtBFv+Y5w4q2=tVuU12oMjKae1-HU_W73g@mail.gmail.com>

I use Aptana v3 for editing, mostly because I like the built in git
integration.

Two monitors, on one I keep my email open and firefox, which is what I
primarily develop in because I'm so in love with firebug.  The other one
has Aptana full screen.

Running windows 7, 16 gigs of RAM with a quad core, which is probably more
computer than you need, but it's nice to be able to give java all the
processing it can handle so it doesn't slow you down.

-Andrew

On Wed, Jul 18, 2012 at 9:30 AM, Hal Burgiss <hal at burgiss.net> wrote:

> On Wed, Jul 18, 2012 at 3:45 AM, Ryan WP Mailing Lists <
> ryan.wpmailinglists at gmail.com> wrote:
>
> > Hi everyone. I am looking to get starting with WordPress and PHP coding
> and
> > I wanted to know what kind of setup do you all have, what kind a systems,
> > specs, software you use.
> >
> >
> Ubuntu Linux with core LAMP stuff, vim for editor (qazillions of choices /
> preferences  for ide's or editors), and bzr for revision/source control,
> which I think should be an integral part of any development environment.
> Set up apache vhosting and whatnot, and edit host file, and away you go.
>
> --
> Hal
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mpwalsh8 at gmail.com  Wed Jul 18 16:45:00 2012
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Wed, 18 Jul 2012 12:45:00 -0400
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg@mail.gmail.com>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
	<500457AC.90904@thecodecave.com>
	<CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg@mail.gmail.com>
Message-ID: <CAMg3evGYdZu6z_4-_6c8yifDMfPvL=63JzMjQ6u9-MF3WD6Anw@mail.gmail.com>

I finally got some additional data on this problem I am chasing.  The
hosting provider coughed up a server error log.  This is what it contains:

[error] ModSecurity: Access denied with code 403 (phase 2).Match of "rx
://%{SERVER_NAME}/" against "MATCHED_VARS:gform-action" required.
[file "/usr/local/apache/conf/modsec/10_asl_rules.conf"]
[line "489"]
[id "340162"]
[rev "262"]
[msg "Atomicorp.com UNSUPPORTED DELAYED Rules: Remote File Injection
attempt in ARGS (AE)"]
[data "
https://docs.google.com/spreadsheet/formresponse?formkey=dhzsutftwllwzwf6lwdyb0xcmkzsogc6mq&ifq
"]
[severity "CRITICAL"]
[hostname "lanaddicts.org"]
[uri "/test-form/"]
[unique_id "UAbUbnrJTaEAAHtoboQAAAAG"]

Thanks,

Mike

Anyone have any suggestions on how to interpret this?

On Mon, Jul 16, 2012 at 2:12 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:

> I am not sure of anything on this problem!
>
> In the Response Headers "Server" is reported as "Apache".  Is there some
> other way to detect "nginx"?
>
> Mike
>
> On Mon, Jul 16, 2012 at 2:04 PM, Brian Layman <wp-hackers at thecodecave.com>wrote:
>
>> On 7/16/2012 1:51 PM, Mike Walsh wrote:
>>
>>> Can anyone think of configuration (I am assuming it is at the Apache
>>> level) that would cause this?
>>>
>>
>> You are certain it is apache and not nginx right? Nginx throws a setting
>> into your cookie to ensure that you are coming from the site and not from a
>> generic posting tool.  At times it operates like a poor man's nonce.
>>
>> Brian Layman
>>
>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>
>
>
> --
> Mike Walsh - mpwalsh8 at gmail.com
>



-- 
Mike Walsh - mpwalsh8 at gmail.com

From otto at ottodestruct.com  Wed Jul 18 16:52:32 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 18 Jul 2012 11:52:32 -0500
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
Message-ID: <CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>

On Tue, Jul 17, 2012 at 11:13 PM, Tom Barrett <tcbarrett at gmail.com> wrote:
> The main issue is exposing the username, passing an author id in the url is
> just an easy way to find it.

Exposing the username isn't the issue. The username isn't secret, nor
should it need to be.

The issue is allowing brute-force attacks to be carried out against
your site, and having passwords that can be brute-forced to begin
with.

Consider the case where the username would be considered "secret". A
brute-force attack would now have to work against both the username
and the password. This is mathematically equivalent to knowing the
username and just making the password roughly twice as long.

However, it's not really equivalent, because while security
professionals have been saying to make your passwords hard for
decades, they have not been saying to make your usernames hard as
well. Usernames are more likely to be all lowercase, for example. It's
easier to brute-force a username than to brute-force a password,
basically. So hiding the username isn't adding a whole lot of extra
security to this particular attack-vector. Making the password more
complex or longer adds a ton more security.

What's more, usernames themselves are generally *known* anyway. Most
modern systems don't even have usernames, they simply use the email
address as the username. The real security is in the password and the
difficulty therein.

If you want to stop this sort of thing, attack the real problems. Stop
the brute-force attacks from working at all by using a plugin like
Limit Login Attempts
(http://wordpress.org/extend/plugins/limit-login-attempts/) or enforce
a good-password policy to begin with. Hiding the username just changes
the attack vector, and stops it for a limited time, until they adapt
to it. It doesn't actually solve the underlying problem.

-Otto

From steve at sltaylor.co.uk  Wed Jul 18 17:09:24 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Wed, 18 Jul 2012 18:09:24 +0100
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAFCSB_+BJ0xXhkegjJ41HXw9WFPe82FRsgixS3POLjJQ96EOtg@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<CAGEuVU3tC6ZaYLNGqMPksmeymwkbWO1b0XkrKjwbT3RCFWPhDg@mail.gmail.com>
	<CAFCSB_+BJ0xXhkegjJ41HXw9WFPe82FRsgixS3POLjJQ96EOtg@mail.gmail.com>
Message-ID: <CAGEuVU0LUS8odCOam-U74ZHZvx=jvCm0NtjsQK07pKOLtXaCVg@mail.gmail.com>

*Most* of the stuff you need for WP development would be hard-pressed
to have problems with anything but the lowest-end of current hardware
setups. I'm not sure, but I reckon Apache + PHP + MySQL + an FTP
client + a good editor have very low demands on a local dev
environment.

That said, after years loathing IDEs and all their "useful" features,
I'm finding PhpStorm fantastic. And anything like this (e.g. Aptana,
NetBeans, etc.) can become unusable on a very low-spec machine. My 4GB
RAM ASUS netbook copes fine, but I wouldn't want anything much weaker.

My desktop is an 8 GB RAM hex-core AMD Phenom II 3.2 GHz, but I got
that for video editing. Certainly doesn't harm the usability of a big
IDE though ;-)



On 18 July 2012 16:45, Ryan WP Mailing Lists
<ryan.wpmailinglists at gmail.com> wrote:
> lol don't worry I'm on;ly new to wordpress not computers. As far as the
> pictures I like to see what the setup looks like.
>
> Personally I am on a PC now but like I said I am redoing my setup here and
> want ideas on how you all do it.
>
> Also someexample of machine specs would be nice just for comparison because
> I don't want to bother getting more computer than I need. The other thing I
> am curious about is multipule monitors. How many monitors do you use and do
> you use each one for something specific.
>
> On Wed, Jul 18, 2012 at 3:42 AM, Steve Taylor <steve at sltaylor.co.uk> wrote:
>
>> Hi Ryan,
>>
>> I reckon if everyone here gave you loads of details you might be
>> confused. And pics?!
>>
>> You should have said whether you're on Mac, Windows or Linux for a
>> start. But basically you want MAMP, WAMP, LAMP, or XAMPP.
>>
>> These tutorials might help:
>>
>>
>> http://wp.smashingmagazine.com/2011/09/28/developing-wordpress-locally-with-mamp/
>>
>> http://sixrevisions.com/tutorials/web-development-tutorials/using-xampp-for-local-wordpress-theme-development/
>> http://markjaquith.wordpress.com/2011/06/24/wordpress-local-dev-tips/
>>
>> As for editing code, again it depends on your platform. I recently
>> moved to a full IDE, which might be overwhelming if you're a beginner.
>> But if you're looking for an IDE, I can recommend
>> http://www.jetbrains.com/phpstorm/
>>
>> Good luck!
>>
>> Steve
>>
>>
>> On 18 July 2012 08:45, Ryan WP Mailing Lists
>> <ryan.wpmailinglists at gmail.com> wrote:
>> > Hi everyone. I am looking to get starting with WordPress and PHP coding
>> and
>> > I wanted to know what kind of setup do you all have, what kind a systems,
>> > specs, software you use.
>> >
>> > More detials the better, and of course some pics so I can see what it all
>> > looks like. Hoping for some good ideas to get my own development setup
>> done.
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp-hackers at thecodecave.com  Wed Jul 18 17:24:57 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Wed, 18 Jul 2012 13:24:57 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAGEuVU0LUS8odCOam-U74ZHZvx=jvCm0NtjsQK07pKOLtXaCVg@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<CAGEuVU3tC6ZaYLNGqMPksmeymwkbWO1b0XkrKjwbT3RCFWPhDg@mail.gmail.com>
	<CAFCSB_+BJ0xXhkegjJ41HXw9WFPe82FRsgixS3POLjJQ96EOtg@mail.gmail.com>
	<CAGEuVU0LUS8odCOam-U74ZHZvx=jvCm0NtjsQK07pKOLtXaCVg@mail.gmail.com>
Message-ID: <5006F169.7050600@thecodecave.com>

Agreed. If it wasn't for gaming our 1090Ts would be a total waste!

Now the three 24" viewsonic LED monitors ARE actually useful for 
development and debugging.  Tailed error_log/spec/old code on one 
screen, working code on the next and browser on the third. It works.

Brian Layman

On 7/18/2012 1:09 PM, Steve Taylor wrote:
> *Most* of the stuff you need for WP development would be hard-pressed
> to have problems with anything but the lowest-end of current hardware
> setups. I'm not sure, but I reckon Apache + PHP + MySQL + an FTP
> client + a good editor have very low demands on a local dev
> environment.
>
> That said, after years loathing IDEs and all their "useful" features,
> I'm finding PhpStorm fantastic. And anything like this (e.g. Aptana,
> NetBeans, etc.) can become unusable on a very low-spec machine. My 4GB
> RAM ASUS netbook copes fine, but I wouldn't want anything much weaker.
>
> My desktop is an 8 GB RAM hex-core AMD Phenom II 3.2 GHz, but I got
> that for video editing. Certainly doesn't harm the usability of a big
> IDE though ;-)
>


From chris at lod.com  Wed Jul 18 18:04:05 2012
From: chris at lod.com (Chris McCoy)
Date: Wed, 18 Jul 2012 14:04:05 -0400
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <CAMg3evGYdZu6z_4-_6c8yifDMfPvL=63JzMjQ6u9-MF3WD6Anw@mail.gmail.com>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
	<500457AC.90904@thecodecave.com>
	<CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg@mail.gmail.com>
	<CAMg3evGYdZu6z_4-_6c8yifDMfPvL=63JzMjQ6u9-MF3WD6Anw@mail.gmail.com>
Message-ID: <000601cd650f$b87a4cb0$296ee610$@lod.com>

Looks line an issue with your apache module for modsecurity, its probably
firing off an error thinking that the form is insecure.



-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Mike Walsh
Sent: Wednesday, July 18, 2012 12:45 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] What would strip $_POST before 'init' runs?

I finally got some additional data on this problem I am chasing.  The
hosting provider coughed up a server error log.  This is what it contains:

[error] ModSecurity: Access denied with code 403 (phase 2).Match of "rx
://%{SERVER_NAME}/" against "MATCHED_VARS:gform-action" required.
[file "/usr/local/apache/conf/modsec/10_asl_rules.conf"]
[line "489"]
[id "340162"]
[rev "262"]
[msg "Atomicorp.com UNSUPPORTED DELAYED Rules: Remote File Injection attempt
in ARGS (AE)"] [data "
https://docs.google.com/spreadsheet/formresponse?formkey=dhzsutftwllwzwf6lwd
yb0xcmkzsogc6mq&ifq
"]
[severity "CRITICAL"]
[hostname "lanaddicts.org"]
[uri "/test-form/"]
[unique_id "UAbUbnrJTaEAAHtoboQAAAAG"]

Thanks,

Mike

Anyone have any suggestions on how to interpret this?

On Mon, Jul 16, 2012 at 2:12 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:

> I am not sure of anything on this problem!
>
> In the Response Headers "Server" is reported as "Apache".  Is there 
> some other way to detect "nginx"?
>
> Mike
>
> On Mon, Jul 16, 2012 at 2:04 PM, Brian Layman
<wp-hackers at thecodecave.com>wrote:
>
>> On 7/16/2012 1:51 PM, Mike Walsh wrote:
>>
>>> Can anyone think of configuration (I am assuming it is at the Apache
>>> level) that would cause this?
>>>
>>
>> You are certain it is apache and not nginx right? Nginx throws a 
>> setting into your cookie to ensure that you are coming from the site 
>> and not from a generic posting tool.  At times it operates like a poor
man's nonce.
>>
>> Brian Layman
>>
>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com> 
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://list
>> s.automattic.com/mailman/listinfo/wp-hackers>
>>
>
>
>
> --
> Mike Walsh - mpwalsh8 at gmail.com
>



--
Mike Walsh - mpwalsh8 at gmail.com
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From mpwalsh8 at gmail.com  Wed Jul 18 18:07:00 2012
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Wed, 18 Jul 2012 14:07:00 -0400
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <CAMg3evGYdZu6z_4-_6c8yifDMfPvL=63JzMjQ6u9-MF3WD6Anw@mail.gmail.com>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
	<500457AC.90904@thecodecave.com>
	<CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg@mail.gmail.com>
	<CAMg3evGYdZu6z_4-_6c8yifDMfPvL=63JzMjQ6u9-MF3WD6Anw@mail.gmail.com>
Message-ID: <CAMg3evHHG79FH2k6t56PMCSq3D+0cRHqaXvyaU_bEEjyQe5P1g@mail.gmail.com>

Replying to my own message - I have finally figured it out.  The Apache
server security doesn't like that I was passing a Google Form URL in a
post parameter.  By encoding it and then decoding it later when I actually
needed it, the server is happy and is no longer throwing 403 errors.

Mike

On Wed, Jul 18, 2012 at 12:45 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:

> I finally got some additional data on this problem I am chasing.  The
> hosting provider coughed up a server error log.  This is what it contains:
>
> [error] ModSecurity: Access denied with code 403 (phase 2).Match of "rx
> ://%{SERVER_NAME}/" against "MATCHED_VARS:gform-action" required.
> [file "/usr/local/apache/conf/modsec/10_asl_rules.conf"]
> [line "489"]
> [id "340162"]
> [rev "262"]
> [msg "Atomicorp.com UNSUPPORTED DELAYED Rules: Remote File Injection
> attempt in ARGS (AE)"]
> [data "
> https://docs.google.com/spreadsheet/formresponse?formkey=dhzsutftwllwzwf6lwdyb0xcmkzsogc6mq&ifq
> "]
> [severity "CRITICAL"]
> [hostname "lanaddicts.org"]
> [uri "/test-form/"]
> [unique_id "UAbUbnrJTaEAAHtoboQAAAAG"]
>
> Thanks,
>
> Mike
>
> Anyone have any suggestions on how to interpret this?
>
> --
Mike Walsh - mpwalsh8 at gmail.com

From mike at newclarity.net  Wed Jul 18 18:51:48 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Wed, 18 Jul 2012 14:51:48 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAGEuVU0LUS8odCOam-U74ZHZvx=jvCm0NtjsQK07pKOLtXaCVg@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<CAGEuVU3tC6ZaYLNGqMPksmeymwkbWO1b0XkrKjwbT3RCFWPhDg@mail.gmail.com>
	<CAFCSB_+BJ0xXhkegjJ41HXw9WFPe82FRsgixS3POLjJQ96EOtg@mail.gmail.com>
	<CAGEuVU0LUS8odCOam-U74ZHZvx=jvCm0NtjsQK07pKOLtXaCVg@mail.gmail.com>
Message-ID: <866B84B2-31DA-4E44-8B10-192D3D651F1F@newclarity.net>

On Jul 18, 2012, at 1:09 PM, Steve Taylor wrote:
> That said, after years loathing IDEs and all their "useful" features,
> I'm finding PhpStorm fantastic.

I second PhpStorm. Our entire team uses it, with it's debugger.  IMO there is nothing else that comes close for working with WordPress.  Things like Sublime are pretty, but without a debugger I find them far less useful.

I also use Navicat for MySQL; again, I haven't found a more powerful tool for working with MySQL even though I don't love their user interface.

I don't use any of the *AMPP, I instead use the standard install of Apache from Mac OS X because I prefer the standard install into of having files located in non-standard places. That almost means I've directly installed MySQL.

And as I'm on Mac the rest are Mac specific

- Then there is Transit for FTP but I also have Forklift which I'm considering switching to.
- VirtualHostX for managing Apache virtual config and hosts files, similar to a *AMPP control panel.
- HTTPScoop for debugging HTTP issues, but considering switching to Charles.

That's about it.  Hope it helps.

-Mike

From mjsafoxy at gmail.com  Wed Jul 18 19:12:03 2012
From: mjsafoxy at gmail.com (Muhammad Ali)
Date: Wed, 18 Jul 2012 21:12:03 +0200
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
Message-ID: <CAMGJ0yxL4R6czyYeMVD=7RbuHQNy4q2PA4E9zdK+rJd9i7WwfQ@mail.gmail.com>

I use Ubuntu LAMPP (Linux, Apache, MySQL, PHP, PHPMyAdmin) servers,
sometimes virtualised, with SSH. I have a few physical Windows based
servers which I generally use for mass mirroring, hosting Minecraft
servers, VPNs and general non-sense.

I use Coda (2) for Mac and on my clients for code writing.

Tbh when I get to creating a new project I just do via SSH:
apt-get update; apt-get upgrade; apt-get install apache2 php mysql
phpmyadmin

Then I edit the conf files and I'm good to go! It's the lazy people way.

For beginners I would advise getting a very low-spec Ubuntu server (no GUI
and like 512 meg of RAM) like a really old school computer and install
LAMPP on that.

On 18 July 2012 09:45, Ryan WP Mailing Lists
<ryan.wpmailinglists at gmail.com>wrote:

> Hi everyone. I am looking to get starting with WordPress and PHP coding and
> I wanted to know what kind of setup do you all have, what kind a systems,
> specs, software you use.
>
> More detials the better, and of course some pics so I can see what it all
> looks like. Hoping for some good ideas to get my own development setup
> done.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp-hackers at thecodecave.com  Wed Jul 18 20:30:09 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Wed, 18 Jul 2012 16:30:09 -0400
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <CAMg3evHHG79FH2k6t56PMCSq3D+0cRHqaXvyaU_bEEjyQe5P1g@mail.gmail.com>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
	<500457AC.90904@thecodecave.com>
	<CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg@mail.gmail.com>
	<CAMg3evGYdZu6z_4-_6c8yifDMfPvL=63JzMjQ6u9-MF3WD6Anw@mail.gmail.com>
	<CAMg3evHHG79FH2k6t56PMCSq3D+0cRHqaXvyaU_bEEjyQe5P1g@mail.gmail.com>
Message-ID: <50071CD1.7080903@thecodecave.com>

Can you clarify that a little further? Was that just the value for a 
post field?

I'd like to understand what your server didn't like in case it ever 
comes up again.

Brian Layman

On 7/18/2012 2:07 PM, Mike Walsh wrote:
> Replying to my own message - I have finally figured it out.  The Apache
> server security doesn't like that I was passing a Google Form URL in a
> post parameter.  By encoding it and then decoding it later when I actually
> needed it, the server is happy and is no longer throwing 403 errors.
>
> Mike
>
> On Wed, Jul 18, 2012 at 12:45 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:
>
>> I finally got some additional data on this problem I am chasing.  The
>> hosting provider coughed up a server error log.  This is what it contains:
>>
>> [error] ModSecurity: Access denied with code 403 (phase 2).Match of "rx
>> ://%{SERVER_NAME}/" against "MATCHED_VARS:gform-action" required.
>> [file "/usr/local/apache/conf/modsec/10_asl_rules.conf"]
>> [line "489"]
>> [id "340162"]
>> [rev "262"]
>> [msg "Atomicorp.com UNSUPPORTED DELAYED Rules: Remote File Injection
>> attempt in ARGS (AE)"]
>> [data "
>> https://docs.google.com/spreadsheet/formresponse?formkey=dhzsutftwllwzwf6lwdyb0xcmkzsogc6mq&ifq
>> "]
>> [severity "CRITICAL"]
>> [hostname "lanaddicts.org"]
>> [uri "/test-form/"]
>> [unique_id "UAbUbnrJTaEAAHtoboQAAAAG"]
>>
>> Thanks,
>>
>> Mike
>>
>> Anyone have any suggestions on how to interpret this?
>>
>> --
> Mike Walsh - mpwalsh8 at gmail.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mjsafoxy at gmail.com  Wed Jul 18 20:39:30 2012
From: mjsafoxy at gmail.com (Muhammad Ali)
Date: Wed, 18 Jul 2012 22:39:30 +0200
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
Message-ID: <CAMGJ0yx_ESsMc1HACxnhZcqcSv0xjEYzE5ys2xu1pjpoMVn6TA@mail.gmail.com>

Short answer (must sleep), I used to use .htaccess and .htpasswd to secure
the wp-admin directory. If you so please. I would advise also using a
captcha login page plugin of some time.


On 18 July 2012 18:52, Otto <otto at ottodestruct.com> wrote:

> On Tue, Jul 17, 2012 at 11:13 PM, Tom Barrett <tcbarrett at gmail.com> wrote:
> > The main issue is exposing the username, passing an author id in the url
> is
> > just an easy way to find it.
>
> Exposing the username isn't the issue. The username isn't secret, nor
> should it need to be.
>
> The issue is allowing brute-force attacks to be carried out against
> your site, and having passwords that can be brute-forced to begin
> with.
>
> Consider the case where the username would be considered "secret". A
> brute-force attack would now have to work against both the username
> and the password. This is mathematically equivalent to knowing the
> username and just making the password roughly twice as long.
>
> However, it's not really equivalent, because while security
> professionals have been saying to make your passwords hard for
> decades, they have not been saying to make your usernames hard as
> well. Usernames are more likely to be all lowercase, for example. It's
> easier to brute-force a username than to brute-force a password,
> basically. So hiding the username isn't adding a whole lot of extra
> security to this particular attack-vector. Making the password more
> complex or longer adds a ton more security.
>
> What's more, usernames themselves are generally *known* anyway. Most
> modern systems don't even have usernames, they simply use the email
> address as the username. The real security is in the password and the
> difficulty therein.
>
> If you want to stop this sort of thing, attack the real problems. Stop
> the brute-force attacks from working at all by using a plugin like
> Limit Login Attempts
> (http://wordpress.org/extend/plugins/limit-login-attempts/) or enforce
> a good-password policy to begin with. Hiding the username just changes
> the attack vector, and stops it for a limited time, until they adapt
> to it. It doesn't actually solve the underlying problem.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From almog.baku at gmail.com  Wed Jul 18 21:10:58 2012
From: almog.baku at gmail.com (=?UTF-8?B?15DXnNee15XXkiDXkden15U=?=)
Date: Thu, 19 Jul 2012 00:10:58 +0300
Subject: [wp-hackers] Your development Setup
In-Reply-To: <5006D7A0.9000508@thecodecave.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
Message-ID: <CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>

Cool! How did you conigure your apache's root to run from dropbox? Do you
have any artocle/link fo it?
And I doesnt get you about the DB.. How did you sync the db?

~ Almog.

?????? ??? ?????, 18 ????? 2012, Brian Layman ???:

> This conversation comes up once a year. So be sure to look at the
> archives...
>
> Locally I have xampp installed to my DropBox folder with the database as a
> MyISAM install. This allows me to walk to the other room and switch to
> using my laptop and continue local development without any effort to sync
> the work from my desktop.
> Most often I work on the servers directly, sometimes using /etc/host to
> create a dev account for the URL in question on a different server.  Then
> the client can easily preview it with an /etc/hosts change. (Note this
> requires editing the server's /etc/host too)
> I use ExpanDrive (version 1.8.3 is the fastest) to connect all of my
> servers as a drive letter.
> I'm on PC and use NotePad++ as the editor and at one point had extra
> function keys setup to do context sensitive searches in the codex and a
> phpxref repo.  It make it a great WordPress specific dev tool.
>
> Brian Layman
>
> On 7/18/2012 3:45 AM, Ryan WP Mailing Lists wrote:
>
>> Hi everyone. I am looking to get starting with WordPress and PHP coding
>> and
>> I wanted to know what kind of setup do you all have, what kind a systems,
>> specs, software you use.
>>
>> More detials the better, and of course some pics so I can see what it all
>> looks like. Hoping for some good ideas to get my own development setup
>> done.
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From hannit at codeart.co.il  Wed Jul 18 21:14:46 2012
From: hannit at codeart.co.il (Hannit Cohen)
Date: Thu, 19 Jul 2012 00:14:46 +0300
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
Message-ID: <CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>

Both are synched automatically.
As for apache - all you need to do is set the dropbox locayion to be
identcal on both computers and you're all good to go

On Thu, Jul 19, 2012 at 12:10 AM, ????? ??? <almog.baku at gmail.com> wrote:

> Cool! How did you conigure your apache's root to run from dropbox? Do you
> have any artocle/link fo it?
> And I doesnt get you about the DB.. How did you sync the db?
>
> ~ Almog.
>
> ?????? ??? ?????, 18 ????? 2012, Brian Layman ???:
>
> > This conversation comes up once a year. So be sure to look at the
> > archives...
> >
> > Locally I have xampp installed to my DropBox folder with the database as
> a
> > MyISAM install. This allows me to walk to the other room and switch to
> > using my laptop and continue local development without any effort to sync
> > the work from my desktop.
> > Most often I work on the servers directly, sometimes using /etc/host to
> > create a dev account for the URL in question on a different server.  Then
> > the client can easily preview it with an /etc/hosts change. (Note this
> > requires editing the server's /etc/host too)
> > I use ExpanDrive (version 1.8.3 is the fastest) to connect all of my
> > servers as a drive letter.
> > I'm on PC and use NotePad++ as the editor and at one point had extra
> > function keys setup to do context sensitive searches in the codex and a
> > phpxref repo.  It make it a great WordPress specific dev tool.
> >
> > Brian Layman
> >
> > On 7/18/2012 3:45 AM, Ryan WP Mailing Lists wrote:
> >
> >> Hi everyone. I am looking to get starting with WordPress and PHP coding
> >> and
> >> I wanted to know what kind of setup do you all have, what kind a
> systems,
> >> specs, software you use.
> >>
> >> More detials the better, and of course some pics so I can see what it
> all
> >> looks like. Hoping for some good ideas to get my own development setup
> >> done.
> >> ______________________________**_________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> >>
> >
> > ______________________________**_________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
???? ???
???-??? ????? ??"?
054-6280-490
hannit at codeart.co.il
http://codeart.co.il

From almog.baku at gmail.com  Wed Jul 18 21:23:40 2012
From: almog.baku at gmail.com (=?UTF-8?B?15DXnNee15XXkiDXkden15U=?=)
Date: Thu, 19 Jul 2012 00:23:40 +0300
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAMGJ0yx_ESsMc1HACxnhZcqcSv0xjEYzE5ys2xu1pjpoMVn6TA@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAMGJ0yx_ESsMc1HACxnhZcqcSv0xjEYzE5ys2xu1pjpoMVn6TA@mail.gmail.com>
Message-ID: <CALncZpS_0zDcHYMnK-7Jz_KzqTQMjnjkBG9pY+32N0XOt23sUg@mail.gmail.com>

So.. Otto, why is the login limitation not part of the core?
Its seems so basic, and so important.

The common wordpress user(website owner) doesnt even know the priority of
issues like security and caching, so most of them didn't install the
third-party plugins.

Caching and security MUST be part of the core. From my point of view at
least.

~ Almog.


?????? ??? ?????, 18 ????? 2012, Muhammad Ali ???:

> Short answer (must sleep), I used to use .htaccess and .htpasswd to secure
> the wp-admin directory. If you so please. I would advise also using a
> captcha login page plugin of some time.
>
>
> On 18 July 2012 18:52, Otto <otto at ottodestruct.com <javascript:;>> wrote:
>
> > On Tue, Jul 17, 2012 at 11:13 PM, Tom Barrett <tcbarrett at gmail.com<javascript:;>>
> wrote:
> > > The main issue is exposing the username, passing an author id in the
> url
> > is
> > > just an easy way to find it.
> >
> > Exposing the username isn't the issue. The username isn't secret, nor
> > should it need to be.
> >
> > The issue is allowing brute-force attacks to be carried out against
> > your site, and having passwords that can be brute-forced to begin
> > with.
> >
> > Consider the case where the username would be considered "secret". A
> > brute-force attack would now have to work against both the username
> > and the password. This is mathematically equivalent to knowing the
> > username and just making the password roughly twice as long.
> >
> > However, it's not really equivalent, because while security
> > professionals have been saying to make your passwords hard for
> > decades, they have not been saying to make your usernames hard as
> > well. Usernames are more likely to be all lowercase, for example. It's
> > easier to brute-force a username than to brute-force a password,
> > basically. So hiding the username isn't adding a whole lot of extra
> > security to this particular attack-vector. Making the password more
> > complex or longer adds a ton more security.
> >
> > What's more, usernames themselves are generally *known* anyway. Most
> > modern systems don't even have usernames, they simply use the email
> > address as the username. The real security is in the password and the
> > difficulty therein.
> >
> > If you want to stop this sort of thing, attack the real problems. Stop
> > the brute-force attacks from working at all by using a plugin like
> > Limit Login Attempts
> > (http://wordpress.org/extend/plugins/limit-login-attempts/) or enforce
> > a good-password policy to begin with. Hiding the username just changes
> > the attack vector, and stops it for a limited time, until they adapt
> > to it. It doesn't actually solve the underlying problem.
> >
> > -Otto
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From almog.baku at gmail.com  Wed Jul 18 21:32:59 2012
From: almog.baku at gmail.com (=?UTF-8?B?15DXnNee15XXkiDXkden15U=?=)
Date: Thu, 19 Jul 2012 00:32:59 +0300
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
Message-ID: <CALncZpTk8WJpaP9tuabwFrEJK=H+=LFRPdET55vNuSUA0KaRMQ@mail.gmail.com>

Hey Hannit,
The issue of the apache root souns really simple, but how do you do it with
the db??

?????? ??? ?????, 19 ????? 2012, Hannit Cohen ???:

> Both are synched automatically.
> As for apache - all you need to do is set the dropbox locayion to be
> identcal on both computers and you're all good to go
>
> On Thu, Jul 19, 2012 at 12:10 AM, ????? ??? <almog.baku at gmail.com<javascript:;>>
> wrote:
>
> > Cool! How did you conigure your apache's root to run from dropbox? Do you
> > have any artocle/link fo it?
> > And I doesnt get you about the DB.. How did you sync the db?
> >
> > ~ Almog.
> >
> > ?????? ??? ?????, 18 ????? 2012, Brian Layman ???:
> >
> > > This conversation comes up once a year. So be sure to look at the
> > > archives...
> > >
> > > Locally I have xampp installed to my DropBox folder with the database
> as
> > a
> > > MyISAM install. This allows me to walk to the other room and switch to
> > > using my laptop and continue local development without any effort to
> sync
> > > the work from my desktop.
> > > Most often I work on the servers directly, sometimes using /etc/host to
> > > create a dev account for the URL in question on a different server.
>  Then
> > > the client can easily preview it with an /etc/hosts change. (Note this
> > > requires editing the server's /etc/host too)
> > > I use ExpanDrive (version 1.8.3 is the fastest) to connect all of my
> > > servers as a drive letter.
> > > I'm on PC and use NotePad++ as the editor and at one point had extra
> > > function keys setup to do context sensitive searches in the codex and a
> > > phpxref repo.  It make it a great WordPress specific dev tool.
> > >
> > > Brian Layman
> > >
> > > On 7/18/2012 3:45 AM, Ryan WP Mailing Lists wrote:
> > >
> > >> Hi everyone. I am looking to get starting with WordPress and PHP
> coding
> > >> and
> > >> I wanted to know what kind of setup do you all have, what kind a
> > systems,
> > >> specs, software you use.
> > >>
> > >> More detials the better, and of course some pics so I can see what it
> > all
> > >> looks like. Hoping for some good ideas to get my own development setup
> > >> done.
> > >> ______________________________**_________________
> > >> wp-hackers mailing list
> > >> wp-hackers at lists.automattic.com <javascript:;>
> > >> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> > http://lists.automattic.com/mailman/listinfo/wp-hackers>
> > >>
> > >
> > > ______________________________**_________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com <javascript:;>
> > > http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> > http://lists.automattic.com/mailman/listinfo/wp-hackers>
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> ???? ???
> ???-??? ????? ??"?
> 054-6280-490
> hannit at codeart.co.il <javascript:;>
> http://codeart.co.il
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From hannit at codeart.co.il  Wed Jul 18 21:37:10 2012
From: hannit at codeart.co.il (Hannit Cohen)
Date: Thu, 19 Jul 2012 00:37:10 +0300
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CALncZpTk8WJpaP9tuabwFrEJK=H+=LFRPdET55vNuSUA0KaRMQ@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<CALncZpTk8WJpaP9tuabwFrEJK=H+=LFRPdET55vNuSUA0KaRMQ@mail.gmail.com>
Message-ID: <CAHG1zgiqictmL22eVStDA_asGzuv9rK5MgBkhBzFfvX0cPhFKg@mail.gmail.com>

Mysql DB is saved on files (as all DBs are).
Therefore it is synched through Dropbox.
I've written a post about that in my company's blog (sorry hebrew) look at
http://codeart.co.il/2010/07/%D7%94%D7%A7%D7%9E%D7%AA-%D7%A1%D7%91%D7%99%D7%91%D7%AA-%D7%95%D7%95%D7%A8%D7%93%D7%A4%D7%A8%D7%A1-%D7%9E%D7%91%D7%95%D7%A1%D7%A1%D7%AA-%D7%93%D7%A8%D7%95%D7%A4%D7%91%D7%95%D7%A7%D7%A1/


On Thu, Jul 19, 2012 at 12:32 AM, ????? ??? <almog.baku at gmail.com> wrote:

> Hey Hannit,
> The issue of the apache root souns really simple, but how do you do it with
> the db??
>
> ?????? ??? ?????, 19 ????? 2012, Hannit Cohen ???:
>
> > Both are synched automatically.
> > As for apache - all you need to do is set the dropbox locayion to be
> > identcal on both computers and you're all good to go
> >
> > On Thu, Jul 19, 2012 at 12:10 AM, ????? ??? <almog.baku at gmail.com
> <javascript:;>>
> > wrote:
> >
> > > Cool! How did you conigure your apache's root to run from dropbox? Do
> you
> > > have any artocle/link fo it?
> > > And I doesnt get you about the DB.. How did you sync the db?
> > >
> > > ~ Almog.
> > >
> > > ?????? ??? ?????, 18 ????? 2012, Brian Layman ???:
> > >
> > > > This conversation comes up once a year. So be sure to look at the
> > > > archives...
> > > >
> > > > Locally I have xampp installed to my DropBox folder with the database
> > as
> > > a
> > > > MyISAM install. This allows me to walk to the other room and switch
> to
> > > > using my laptop and continue local development without any effort to
> > sync
> > > > the work from my desktop.
> > > > Most often I work on the servers directly, sometimes using /etc/host
> to
> > > > create a dev account for the URL in question on a different server.
> >  Then
> > > > the client can easily preview it with an /etc/hosts change. (Note
> this
> > > > requires editing the server's /etc/host too)
> > > > I use ExpanDrive (version 1.8.3 is the fastest) to connect all of my
> > > > servers as a drive letter.
> > > > I'm on PC and use NotePad++ as the editor and at one point had extra
> > > > function keys setup to do context sensitive searches in the codex
> and a
> > > > phpxref repo.  It make it a great WordPress specific dev tool.
> > > >
> > > > Brian Layman
> > > >
> > > > On 7/18/2012 3:45 AM, Ryan WP Mailing Lists wrote:
> > > >
> > > >> Hi everyone. I am looking to get starting with WordPress and PHP
> > coding
> > > >> and
> > > >> I wanted to know what kind of setup do you all have, what kind a
> > > systems,
> > > >> specs, software you use.
> > > >>
> > > >> More detials the better, and of course some pics so I can see what
> it
> > > all
> > > >> looks like. Hoping for some good ideas to get my own development
> setup
> > > >> done.
> > > >> ______________________________**_________________
> > > >> wp-hackers mailing list
> > > >> wp-hackers at lists.automattic.com <javascript:;>
> > > >> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers>
> > > >>
> > > >
> > > > ______________________________**_________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com <javascript:;>
> > > > http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers>
> > > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com <javascript:;>
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> >
> > --
> > ???? ???
> > ???-??? ????? ??"?
> > 054-6280-490
> > hannit at codeart.co.il <javascript:;>
> > http://codeart.co.il
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
???? ???
???-??? ????? ??"?
054-6280-490
hannit at codeart.co.il
http://codeart.co.il

From almog.baku at gmail.com  Wed Jul 18 21:50:53 2012
From: almog.baku at gmail.com (=?UTF-8?B?15DXnNee15XXkiDXkden15U=?=)
Date: Thu, 19 Jul 2012 00:50:53 +0300
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAHG1zgiqictmL22eVStDA_asGzuv9rK5MgBkhBzFfvX0cPhFKg@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<CALncZpTk8WJpaP9tuabwFrEJK=H+=LFRPdET55vNuSUA0KaRMQ@mail.gmail.com>
	<CAHG1zgiqictmL22eVStDA_asGzuv9rK5MgBkhBzFfvX0cPhFKg@mail.gmail.com>
Message-ID: <CALncZpQMGnLL7=d5AnK7chHrKE3bG1ySxyNndtYgcR=Sg55bzA@mail.gmail.com>

Hebrew is fine =] I'll check it out, sounds intresting.. But im not sure if
dropbox is nice for git(too much strong)(if somone know any way to locate
the .git directory outside the shared dir please notice me..)

About my proccess(any project mot just wp):
# I am using PDT for the development proccess.
# Personally I using local wanp on windows, but in the last office I used
to work we use linux. Linux eviroment is much better, by my opinion, for
proffesional development.. But my laptop is also for personal using so i
preffer windows.
# for slicing- photoshop (in linux virtual machine)
# for css building I using LessCSS or SASS
# I am using GIT for manage my source. I host my source iver
bitbucket(great service and free for small buisness)
# I am using "The Bug Genie"(with bitbucket connector) to manage my
project(issues, planing, working with the client and testers..
# finnaly I upload the project to my deploy server(shared hosting)

~Almog

P.S dont forget about caching! Its really important!

?????? ??? ?????, 19 ????? 2012, Hannit Cohen ???:

> Mysql DB is saved on files (as all DBs are).
> Therefore it is synched through Dropbox.
> I've written a post about that in my company's blog (sorry hebrew) look at
>
> http://codeart.co.il/2010/07/%D7%94%D7%A7%D7%9E%D7%AA-%D7%A1%D7%91%D7%99%D7%91%D7%AA-%D7%95%D7%95%D7%A8%D7%93%D7%A4%D7%A8%D7%A1-%D7%9E%D7%91%D7%95%D7%A1%D7%A1%D7%AA-%D7%93%D7%A8%D7%95%D7%A4%D7%91%D7%95%D7%A7%D7%A1/
>
>
> On Thu, Jul 19, 2012 at 12:32 AM, ????? ??? <almog.baku at gmail.com<javascript:;>>
> wrote:
>
> > Hey Hannit,
> > The issue of the apache root souns really simple, but how do you do it
> with
> > the db??
> >
> > ?????? ??? ?????, 19 ????? 2012, Hannit Cohen ???:
> >
> > > Both are synched automatically.
> > > As for apache - all you need to do is set the dropbox locayion to be
> > > identcal on both computers and you're all good to go
> > >
> > > On Thu, Jul 19, 2012 at 12:10 AM, ????? ??? <almog.baku at gmail.com<javascript:;>
> > <javascript:;>>
> > > wrote:
> > >
> > > > Cool! How did you conigure your apache's root to run from dropbox? Do
> > you
> > > > have any artocle/link fo it?
> > > > And I doesnt get you about the DB.. How did you sync the db?
> > > >
> > > > ~ Almog.
> > > >
> > > > ?????? ??? ?????, 18 ????? 2012, Brian Layman ???:
> > > >
> > > > > This conversation comes up once a year. So be sure to look at the
> > > > > archives...
> > > > >
> > > > > Locally I have xampp installed to my DropBox folder with the
> database
> > > as
> > > > a
> > > > > MyISAM install. This allows me to walk to the other room and switch
> > to
> > > > > using my laptop and continue local development without any effort
> to
> > > sync
> > > > > the work from my desktop.
> > > > > Most often I work on the servers directly, sometimes using
> /etc/host
> > to
> > > > > create a dev account for the URL in question on a different server.
> > >  Then
> > > > > the client can easily preview it with an /etc/hosts change. (Note
> > this
> > > > > requires editing the server's /etc/host too)
> > > > > I use ExpanDrive (version 1.8.3 is the fastest) to connect all of
> my
> > > > > servers as a drive letter.
> > > > > I'm on PC and use NotePad++ as the editor and at one point had
> extra
> > > > > function keys setup to do context sensitive searches in the codex
> > and a
> > > > > phpxref repo.  It make it a great WordPress specific dev tool.
> > > > >
> > > > > Brian Layman
> > > > >
> > > > > On 7/18/2012 3:45 AM, Ryan WP Mailing Lists wrote:
> > > > >
> > > > >> Hi everyone. I am looking to get starting with WordPress and PHP
> > > coding
> > > > >> and
> > > > >> I wanted to know what kind of setup do you all have, what kind a
> > > > systems,
> > > > >> specs, software you use.
> > > > >>
> > > > >> More detials the better, and of course some pics so I can see what
> > it
> > > > all
> > > > >> looks like. Hoping for some good ideas to get my own development
> > setup
> > > > >> done.
> > > > >> ______________________________**_________________
> > > > >> wp-hackers mailing list
> > > > >> wp-hackers at lists.automattic.com <javascript:;> <javascript:;>
> > > > >> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers>
> > > > >>
> > > > >
> > > > > ______________________________**_________________
> > > > > wp-hackers mailing list
> > > > > wp-hackers at lists.automattic.com <javascript:;> <javascript:;>
> > > > > http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers>
> > > > >
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com <javascript:;> <javascript:;>
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > >
> > >
> > >
> > > --
> > > ???? ???
> > > ???-??? ????? ??"?
> > > 054-6280-490
> > > hannit at codeart.co.il <javascript:;> <javascript:;>
> > > http://codeart.co.il
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com <javascript:;> <javascript:;>
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> ???? ???
> ???-??? ????? ??"?
> 054-6280-490
> hannit at codeart.co.il <javascript:;>
> http://codeart.co.il
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From chason at gmail.com  Wed Jul 18 21:57:56 2012
From: chason at gmail.com (Chason Chaffin)
Date: Wed, 18 Jul 2012 14:57:56 -0700
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CALncZpS_0zDcHYMnK-7Jz_KzqTQMjnjkBG9pY+32N0XOt23sUg@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAMGJ0yx_ESsMc1HACxnhZcqcSv0xjEYzE5ys2xu1pjpoMVn6TA@mail.gmail.com>
	<CALncZpS_0zDcHYMnK-7Jz_KzqTQMjnjkBG9pY+32N0XOt23sUg@mail.gmail.com>
Message-ID: <CAGw2N3U4tEZ7_Ep+2PbKAvocgrU8MTWXHiWiiVxn3j-_8fcNOQ@mail.gmail.com>

I prefer to have as few things built into core as possible so that I can
either implement my own solutions, or choose the best of available
solutions.

You may like a basic disk based caching setup, but what if I have a more
complicated setup utilizing varnish and memcache? The caching built into
core would need to be able to handle this, but that would be a huge amount
of upkeep and maintenance to add to core.

"Security" is similar. What you define as security may not be the same
thing as myself. Plenty of people may not want to have people blocked after
a certain number of login attempts, or may want to implement that feature
in a separate way. Personally, I prefer to use something like fail2ban, but
others may want to use .htaccess, etc etc. This is a lot to build into
core, when core is better kept to be SIMPLE and EXTENSIBLE instead of
having it do everything for everyone.

On Wed, Jul 18, 2012 at 2:23 PM, ????? ??? <almog.baku at gmail.com> wrote:

> So.. Otto, why is the login limitation not part of the core?
> Its seems so basic, and so important.
>
> The common wordpress user(website owner) doesnt even know the priority of
> issues like security and caching, so most of them didn't install the
> third-party plugins.
>
> Caching and security MUST be part of the core. From my point of view at
> least.
>
> ~ Almog.
>
>
> ?????? ??? ?????, 18 ????? 2012, Muhammad Ali ???:
>
> > Short answer (must sleep), I used to use .htaccess and .htpasswd to
> secure
> > the wp-admin directory. If you so please. I would advise also using a
> > captcha login page plugin of some time.
> >
> >
> > On 18 July 2012 18:52, Otto <otto at ottodestruct.com <javascript:;>>
> wrote:
> >
> > > On Tue, Jul 17, 2012 at 11:13 PM, Tom Barrett <tcbarrett at gmail.com
> <javascript:;>>
> > wrote:
> > > > The main issue is exposing the username, passing an author id in the
> > url
> > > is
> > > > just an easy way to find it.
> > >
> > > Exposing the username isn't the issue. The username isn't secret, nor
> > > should it need to be.
> > >
> > > The issue is allowing brute-force attacks to be carried out against
> > > your site, and having passwords that can be brute-forced to begin
> > > with.
> > >
> > > Consider the case where the username would be considered "secret". A
> > > brute-force attack would now have to work against both the username
> > > and the password. This is mathematically equivalent to knowing the
> > > username and just making the password roughly twice as long.
> > >
> > > However, it's not really equivalent, because while security
> > > professionals have been saying to make your passwords hard for
> > > decades, they have not been saying to make your usernames hard as
> > > well. Usernames are more likely to be all lowercase, for example. It's
> > > easier to brute-force a username than to brute-force a password,
> > > basically. So hiding the username isn't adding a whole lot of extra
> > > security to this particular attack-vector. Making the password more
> > > complex or longer adds a ton more security.
> > >
> > > What's more, usernames themselves are generally *known* anyway. Most
> > > modern systems don't even have usernames, they simply use the email
> > > address as the username. The real security is in the password and the
> > > difficulty therein.
> > >
> > > If you want to stop this sort of thing, attack the real problems. Stop
> > > the brute-force attacks from working at all by using a plugin like
> > > Limit Login Attempts
> > > (http://wordpress.org/extend/plugins/limit-login-attempts/) or enforce
> > > a good-password policy to begin with. Hiding the username just changes
> > > the attack vector, and stops it for a limited time, until they adapt
> > > to it. It doesn't actually solve the underlying problem.
> > >
> > > -Otto
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com <javascript:;>
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From pross at pross.org.uk  Wed Jul 18 22:09:46 2012
From: pross at pross.org.uk (Simon Prosser)
Date: Wed, 18 Jul 2012 23:09:46 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAGw2N3U4tEZ7_Ep+2PbKAvocgrU8MTWXHiWiiVxn3j-_8fcNOQ@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAMGJ0yx_ESsMc1HACxnhZcqcSv0xjEYzE5ys2xu1pjpoMVn6TA@mail.gmail.com>
	<CALncZpS_0zDcHYMnK-7Jz_KzqTQMjnjkBG9pY+32N0XOt23sUg@mail.gmail.com>
	<CAGw2N3U4tEZ7_Ep+2PbKAvocgrU8MTWXHiWiiVxn3j-_8fcNOQ@mail.gmail.com>
Message-ID: <CAKwUDf1cznGq_kBWs01Fz-KOQhDPerK5NyAS33EXzhzXrH21Kg@mail.gmail.com>

Isn't it just easier to just not have admin users as public authors?
Thats the whole point right?

On 18 July 2012 22:57, Chason Chaffin <chason at gmail.com> wrote:
> I prefer to have as few things built into core as possible so that I can
> either implement my own solutions, or choose the best of available
> solutions.
>
> You may like a basic disk based caching setup, but what if I have a more
> complicated setup utilizing varnish and memcache? The caching built into
> core would need to be able to handle this, but that would be a huge amount
> of upkeep and maintenance to add to core.
>
> "Security" is similar. What you define as security may not be the same
> thing as myself. Plenty of people may not want to have people blocked after
> a certain number of login attempts, or may want to implement that feature
> in a separate way. Personally, I prefer to use something like fail2ban, but
> others may want to use .htaccess, etc etc. This is a lot to build into
> core, when core is better kept to be SIMPLE and EXTENSIBLE instead of
> having it do everything for everyone.
>
> On Wed, Jul 18, 2012 at 2:23 PM, ????? ??? <almog.baku at gmail.com> wrote:
>
>> So.. Otto, why is the login limitation not part of the core?
>> Its seems so basic, and so important.
>>
>> The common wordpress user(website owner) doesnt even know the priority of
>> issues like security and caching, so most of them didn't install the
>> third-party plugins.
>>
>> Caching and security MUST be part of the core. From my point of view at
>> least.
>>
>> ~ Almog.
>>
>>
>> ?????? ??? ?????, 18 ????? 2012, Muhammad Ali ???:
>>
>> > Short answer (must sleep), I used to use .htaccess and .htpasswd to
>> secure
>> > the wp-admin directory. If you so please. I would advise also using a
>> > captcha login page plugin of some time.
>> >
>> >
>> > On 18 July 2012 18:52, Otto <otto at ottodestruct.com <javascript:;>>
>> wrote:
>> >
>> > > On Tue, Jul 17, 2012 at 11:13 PM, Tom Barrett <tcbarrett at gmail.com
>> <javascript:;>>
>> > wrote:
>> > > > The main issue is exposing the username, passing an author id in the
>> > url
>> > > is
>> > > > just an easy way to find it.
>> > >
>> > > Exposing the username isn't the issue. The username isn't secret, nor
>> > > should it need to be.
>> > >
>> > > The issue is allowing brute-force attacks to be carried out against
>> > > your site, and having passwords that can be brute-forced to begin
>> > > with.
>> > >
>> > > Consider the case where the username would be considered "secret". A
>> > > brute-force attack would now have to work against both the username
>> > > and the password. This is mathematically equivalent to knowing the
>> > > username and just making the password roughly twice as long.
>> > >
>> > > However, it's not really equivalent, because while security
>> > > professionals have been saying to make your passwords hard for
>> > > decades, they have not been saying to make your usernames hard as
>> > > well. Usernames are more likely to be all lowercase, for example. It's
>> > > easier to brute-force a username than to brute-force a password,
>> > > basically. So hiding the username isn't adding a whole lot of extra
>> > > security to this particular attack-vector. Making the password more
>> > > complex or longer adds a ton more security.
>> > >
>> > > What's more, usernames themselves are generally *known* anyway. Most
>> > > modern systems don't even have usernames, they simply use the email
>> > > address as the username. The real security is in the password and the
>> > > difficulty therein.
>> > >
>> > > If you want to stop this sort of thing, attack the real problems. Stop
>> > > the brute-force attacks from working at all by using a plugin like
>> > > Limit Login Attempts
>> > > (http://wordpress.org/extend/plugins/limit-login-attempts/) or enforce
>> > > a good-password policy to begin with. Hiding the username just changes
>> > > the attack vector, and stops it for a limited time, until they adapt
>> > > to it. It doesn't actually solve the underlying problem.
>> > >
>> > > -Otto
>> > > _______________________________________________
>> > > wp-hackers mailing list
>> > > wp-hackers at lists.automattic.com <javascript:;>
>> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> > >
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com <javascript:;>
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



-- 
My Blog: http://pross.org.uk/
Plugins : http://pross.org.uk/plugins/
Themes: http://wordpress.org/extend/themes/profile/pross

From almog.baku at gmail.com  Wed Jul 18 22:14:24 2012
From: almog.baku at gmail.com (=?UTF-8?B?15DXnNee15XXkiDXkden15U=?=)
Date: Thu, 19 Jul 2012 01:14:24 +0300
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAGw2N3U4tEZ7_Ep+2PbKAvocgrU8MTWXHiWiiVxn3j-_8fcNOQ@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAMGJ0yx_ESsMc1HACxnhZcqcSv0xjEYzE5ys2xu1pjpoMVn6TA@mail.gmail.com>
	<CALncZpS_0zDcHYMnK-7Jz_KzqTQMjnjkBG9pY+32N0XOt23sUg@mail.gmail.com>
	<CAGw2N3U4tEZ7_Ep+2PbKAvocgrU8MTWXHiWiiVxn3j-_8fcNOQ@mail.gmail.com>
Message-ID: <CALncZpQDjP+gWQDfzuG8mhnXQyuWocUNNYSYB-8e+82eeEpL6w@mail.gmail.com>

Agree, but there is issues that the corr should offer, like caching. The
third-party plugin make it complicated and confusing.

Look at Drupal for example. The casing system is so deep into the core, so
it so easy to configure!
Drupal caching system is great example of something that the core do better
than third-party system.
Look at w3 total cache plugin..  Great plugin! But very complicated to
configure, and makes a lot of problems.. Now take a quick look about drupal
caching configure page.. And see the diffrences.

~ Almog

?????? ??? ?????, 19 ????? 2012, Chason Chaffin ???:

> I prefer to have as few things built into core as possible so that I can
> either implement my own solutions, or choose the best of available
> solutions.
> You may like a basic disk based caching setup, but what if I have a more
> complicated setup utilizing varnish and memcache? The caching built into
> core would need to be able to handle this, but that would be a huge amount
> of upkeep and maintenance to add to core.
>
> "Security" is similar. What you define as security may not be the same
> thing as myself. Plenty of people may not want to have people blocked after
> a certain number of login attempts, or may want to implement that feature
> in a separate way. Personally, I prefer to use something like fail2ban, but
> others may want to use .htaccess, etc etc. This is a lot to build into
> core, when core is better kept to be SIMPLE and EXTENSIBLE instead of
> having it do everything for everyone.
>
> On Wed, Jul 18, 2012 at 2:23 PM, ????? ??? <almog.baku at gmail.com<javascript:;>>
> wrote:
>
> > So.. Otto, why is the login limitation not part of the core?
> > Its seems so basic, and so important.
> >
> > The common wordpress user(website owner) doesnt even know the priority of
> > issues like security and caching, so most of them didn't install the
> > third-party plugins.
> >
> > Caching and security MUST be part of the core. From my point of view at
> > least.
> >
> > ~ Almog.
> >
> >
> > ?????? ??? ?????, 18 ????? 2012, Muhammad Ali ???:
> >
> > > Short answer (must sleep), I used to use .htaccess and .htpasswd to
> > secure
> > > the wp-admin directory. If you so please. I would advise also using a
> > > captcha login page plugin of some time.
> > >
> > >
> > > On 18 July 2012 18:52, Otto <otto at ottodestruct.com <javascript:;><javascript:;>>
> > wrote:
> > >
> > > > On Tue, Jul 17, 2012 at 11:13 PM, Tom Barrett <tcbarrett at gmail.com<javascript:;>
> > <javascript:;>>
> > > wrote:
> > > > > The main issue is exposing the username, passing an author id in
> the
> > > url
> > > > is
> > > > > just an easy way to find it.
> > > >
> > > > Exposing the username isn't the issue. The username isn't secret, nor
> > > > should it need to be.
> > > >
> > > > The issue is allowing brute-force attacks to be carried out against
> > > > your site, and having passwords that can be brute-forced to begin
> > > > with.
> > > >
> > > > Consider the case where the username would be considered "secret". A
> > > > brute-force attack would now have to work against both the username
> > > > and the password. This is mathematically equivalent to knowing the
> > > > username and just making the password roughly twice as long.
> > > >
> > > > However, it's not really equivalent, because while security
> > > > professionals have been saying to make your passwords hard for
> > > > decades, they have not been saying to make your usernames hard as
> > > > well. Usernames are more likely to be all lowercase, for example.
> It's
> > > > easier to brute-force a username than to brute-force a password,
> > > > basically. So hiding the username isn't adding a whole lot of extra
> > > > security to this particular attack-vector. Making the password more
> > > > complex or longer adds a ton more security.
> > > >
> > > > What's more, usernames themselves are generally *known* anyway. Most
> > > > modern systems don't even have usernames, they simply use the email
> > > > address as the username. The real security is in the password and the
> > > > difficulty therein.
> > > >
> > > > If you want to stop this sort of thing, attack the real problems.
> Stop
> > > > the brute-force attacks from working at all by using a plugin like
> > > > Limit Login Attempts
> > > > (http://wordpress.org/extend/plugins/limit-login-attempts/) or
> enforce
> > > > a good-password policy to begin with. Hiding the username just
> changes
> > > > the attack vector, and stops it for a limited time, until they adapt
> > > > to it. It doesn't actually solve the underlying problem.
> > > >
> > > > -Otto
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com <javascript:;> <javascript:;>
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com <javascript:;> <javascript:;>
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From chason at gmail.com  Wed Jul 18 22:16:52 2012
From: chason at gmail.com (Chason Chaffin)
Date: Wed, 18 Jul 2012 15:16:52 -0700
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CALncZpQDjP+gWQDfzuG8mhnXQyuWocUNNYSYB-8e+82eeEpL6w@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAMGJ0yx_ESsMc1HACxnhZcqcSv0xjEYzE5ys2xu1pjpoMVn6TA@mail.gmail.com>
	<CALncZpS_0zDcHYMnK-7Jz_KzqTQMjnjkBG9pY+32N0XOt23sUg@mail.gmail.com>
	<CAGw2N3U4tEZ7_Ep+2PbKAvocgrU8MTWXHiWiiVxn3j-_8fcNOQ@mail.gmail.com>
	<CALncZpQDjP+gWQDfzuG8mhnXQyuWocUNNYSYB-8e+82eeEpL6w@mail.gmail.com>
Message-ID: <CAGw2N3XVAyxomD5MKrVRC4Dha+00y_Zu0KBv=W412n_5qak1jg@mail.gmail.com>

While I haven't used Drupal extensively, my experience with helping people
troubleshoot it did not give me a lot of confidence in their caching
system. It may be simple and built in, but it does not scale well. And
since it is built so deep into the core, if you need to do something that
is not covered in its use cases you are out of luck.

If you need a caching plugin for WP that is simple, take a look at WP Super
Cache. This is the reason why leaving caching in plugins is great, it
allows for solutions that meet the diverse needs of the people that use
WordPress.

On Wed, Jul 18, 2012 at 3:14 PM, ????? ??? <almog.baku at gmail.com> wrote:

> Agree, but there is issues that the corr should offer, like caching. The
> third-party plugin make it complicated and confusing.
>
> Look at Drupal for example. The casing system is so deep into the core, so
> it so easy to configure!
> Drupal caching system is great example of something that the core do better
> than third-party system.
> Look at w3 total cache plugin..  Great plugin! But very complicated to
> configure, and makes a lot of problems.. Now take a quick look about drupal
> caching configure page.. And see the diffrences.
>
> ~ Almog
>
> ?????? ??? ?????, 19 ????? 2012, Chason Chaffin ???:
>
> > I prefer to have as few things built into core as possible so that I can
> > either implement my own solutions, or choose the best of available
> > solutions.
> > You may like a basic disk based caching setup, but what if I have a more
> > complicated setup utilizing varnish and memcache? The caching built into
> > core would need to be able to handle this, but that would be a huge
> amount
> > of upkeep and maintenance to add to core.
> >
> > "Security" is similar. What you define as security may not be the same
> > thing as myself. Plenty of people may not want to have people blocked
> after
> > a certain number of login attempts, or may want to implement that feature
> > in a separate way. Personally, I prefer to use something like fail2ban,
> but
> > others may want to use .htaccess, etc etc. This is a lot to build into
> > core, when core is better kept to be SIMPLE and EXTENSIBLE instead of
> > having it do everything for everyone.
> >
> > On Wed, Jul 18, 2012 at 2:23 PM, ????? ??? <almog.baku at gmail.com
> <javascript:;>>
> > wrote:
> >
> > > So.. Otto, why is the login limitation not part of the core?
> > > Its seems so basic, and so important.
> > >
> > > The common wordpress user(website owner) doesnt even know the priority
> of
> > > issues like security and caching, so most of them didn't install the
> > > third-party plugins.
> > >
> > > Caching and security MUST be part of the core. From my point of view at
> > > least.
> > >
> > > ~ Almog.
> > >
> > >
> > > ?????? ??? ?????, 18 ????? 2012, Muhammad Ali ???:
> > >
> > > > Short answer (must sleep), I used to use .htaccess and .htpasswd to
> > > secure
> > > > the wp-admin directory. If you so please. I would advise also using a
> > > > captcha login page plugin of some time.
> > > >
> > > >
> > > > On 18 July 2012 18:52, Otto <otto at ottodestruct.com<javascript:;><javascript:;>>
> > > wrote:
> > > >
> > > > > On Tue, Jul 17, 2012 at 11:13 PM, Tom Barrett <tcbarrett at gmail.com
> <javascript:;>
> > > <javascript:;>>
> > > > wrote:
> > > > > > The main issue is exposing the username, passing an author id in
> > the
> > > > url
> > > > > is
> > > > > > just an easy way to find it.
> > > > >
> > > > > Exposing the username isn't the issue. The username isn't secret,
> nor
> > > > > should it need to be.
> > > > >
> > > > > The issue is allowing brute-force attacks to be carried out against
> > > > > your site, and having passwords that can be brute-forced to begin
> > > > > with.
> > > > >
> > > > > Consider the case where the username would be considered "secret".
> A
> > > > > brute-force attack would now have to work against both the username
> > > > > and the password. This is mathematically equivalent to knowing the
> > > > > username and just making the password roughly twice as long.
> > > > >
> > > > > However, it's not really equivalent, because while security
> > > > > professionals have been saying to make your passwords hard for
> > > > > decades, they have not been saying to make your usernames hard as
> > > > > well. Usernames are more likely to be all lowercase, for example.
> > It's
> > > > > easier to brute-force a username than to brute-force a password,
> > > > > basically. So hiding the username isn't adding a whole lot of extra
> > > > > security to this particular attack-vector. Making the password more
> > > > > complex or longer adds a ton more security.
> > > > >
> > > > > What's more, usernames themselves are generally *known* anyway.
> Most
> > > > > modern systems don't even have usernames, they simply use the email
> > > > > address as the username. The real security is in the password and
> the
> > > > > difficulty therein.
> > > > >
> > > > > If you want to stop this sort of thing, attack the real problems.
> > Stop
> > > > > the brute-force attacks from working at all by using a plugin like
> > > > > Limit Login Attempts
> > > > > (http://wordpress.org/extend/plugins/limit-login-attempts/) or
> > enforce
> > > > > a good-password policy to begin with. Hiding the username just
> > changes
> > > > > the attack vector, and stops it for a limited time, until they
> adapt
> > > > > to it. It doesn't actually solve the underlying problem.
> > > > >
> > > > > -Otto
> > > > > _______________________________________________
> > > > > wp-hackers mailing list
> > > > > wp-hackers at lists.automattic.com <javascript:;> <javascript:;>
> > > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > > >
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com <javascript:;> <javascript:;>
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com <javascript:;>
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From almog.baku at gmail.com  Wed Jul 18 22:25:01 2012
From: almog.baku at gmail.com (=?UTF-8?B?15DXnNee15XXkiDXkden15U=?=)
Date: Thu, 19 Jul 2012 01:25:01 +0300
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAGw2N3XVAyxomD5MKrVRC4Dha+00y_Zu0KBv=W412n_5qak1jg@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAMGJ0yx_ESsMc1HACxnhZcqcSv0xjEYzE5ys2xu1pjpoMVn6TA@mail.gmail.com>
	<CALncZpS_0zDcHYMnK-7Jz_KzqTQMjnjkBG9pY+32N0XOt23sUg@mail.gmail.com>
	<CAGw2N3U4tEZ7_Ep+2PbKAvocgrU8MTWXHiWiiVxn3j-_8fcNOQ@mail.gmail.com>
	<CALncZpQDjP+gWQDfzuG8mhnXQyuWocUNNYSYB-8e+82eeEpL6w@mail.gmail.com>
	<CAGw2N3XVAyxomD5MKrVRC4Dha+00y_Zu0KBv=W412n_5qak1jg@mail.gmail.com>
Message-ID: <CALncZpRkaVt7CKDEeVchZLJbznX_-0sgzHd=+DnwsqqAt9S3LQ@mail.gmail.com>

Hey, I know the both of wp caching plugins.. And again- take a quick look
about drupal caching..
But I suggest totake this conversation to another theated, because it
became to discuss about caching istead of url stracture.

?????? ??? ?????, 19 ????? 2012, Chason Chaffin ???:

> While I haven't used Drupal extensively, my experience with helping people
> troubleshoot it did not give me a lot of confidence in their caching
> system. It may be simple and built in, but it does not scale well. And
> since it is built so deep into the core, if you need to do something that
> is not covered in its use cases you are out of luck.
>
> If you need a caching plugin for WP that is simple, take a look at WP Super
> Cache. This is the reason why leaving caching in plugins is great, it
> allows for solutions that meet the diverse needs of the people that use
> WordPress.
>
> On Wed, Jul 18, 2012 at 3:14 PM, ????? ??? <almog.baku at gmail.com<javascript:;>>
> wrote:
>
> > Agree, but there is issues that the corr should offer, like caching. The
> > third-party plugin make it complicated and confusing.
> >
> > Look at Drupal for example. The casing system is so deep into the core,
> so
> > it so easy to configure!
> > Drupal caching system is great example of something that the core do
> better
> > than third-party system.
> > Look at w3 total cache plugin..  Great plugin! But very complicated to
> > configure, and makes a lot of problems.. Now take a quick look about
> drupal
> > caching configure page.. And see the diffrences.
> >
> > ~ Almog
> >
> > ?????? ??? ?????, 19 ????? 2012, Chason Chaffin ???:
> >
> > > I prefer to have as few things built into core as possible so that I
> can
> > > either implement my own solutions, or choose the best of available
> > > solutions.
> > > You may like a basic disk based caching setup, but what if I have a
> more
> > > complicated setup utilizing varnish and memcache? The caching built
> into
> > > core would need to be able to handle this, but that would be a huge
> > amount
> > > of upkeep and maintenance to add to core.
> > >
> > > "Security" is similar. What you define as security may not be the same
> > > thing as myself. Plenty of people may not want to have people blocked
> > after
> > > a certain number of login attempts, or may want to implement that
> feature
> > > in a separate way. Personally, I prefer to use something like fail2ban,
> > but
> > > others may want to use .htaccess, etc etc. This is a lot to build into
> > > core, when core is better kept to be SIMPLE and EXTENSIBLE instead of
> > > having it do everything for everyone.
> > >
> > > On Wed, Jul 18, 2012 at 2:23 PM, ????? ??? <almog.baku at gmail.com<javascript:;>
> > <javascript:;>>
> > > wrote:
> > >
> > > > So.. Otto, why is the login limitation not part of the core?
> > > > Its seems so basic, and so important.
> > > >
> > > > The common wordpress user(website owner) doesnt even know the
> priority
> > of
> > > > issues like security and caching, so most of them didn't install the
> > > > third-party plugins.
> > > >
> > > > Caching and security MUST be part of the core. From my point of view
> at
> > > > least.
> > > >
> > > > ~ Almog.
> > > >
> > > >
> > > > ?????? ??? ?????, 18 ????? 2012, Muhammad Ali ???:
> > > >
> > > > > Short answer (must sleep), I used to use .htaccess and .htpasswd to
> > > > secure
> > > > > the wp-admin directory. If you so please. I would advise also
> using a
> > > > > captcha login page plugin of some time.
> > > > >
> > > > >
> > > > > On 18 July 2012 18:52, Otto <otto at ottodestruct.com <javascript:;>
> <javascript:;><javascript:;>>
> > > > wrote:
> > > > >
> > > > > > On Tue, Jul 17, 2012 at 11:13 PM, Tom Barrett <
> tcbarrett at gmail.com <javascript:;>
> > <javascript:;>
> > > > <javascript:;>>
> > > > > wrote:
> > > > > > > The main issue is exposing the username, passing an author id
> in
> > > the
> > > > > url
> > > > > > is
> > > > > > > just an easy way to find it.
> > > > > >
> > > > > > Exposing the username isn't the issue. The username isn't secret,
> > nor
> > > > > > should it need to be.
> > > > > >
> > > > > > The issue is allowing brute-force attacks to be carried out
> against
> > > > > > your site, and having passwords that can be brute-forced to begin
> > > > > > with.
> > > > > >
> > > > > > Consider the case where the username would be considered
> "secret".
> > A
> > > > > > brute-force attack would now have to work against both the
> username
> > > > > > and the password. This is mathematically equivalent to knowing
> the
> > > > > > username and just making the password roughly twice as long.
> > > > > >
> > > > > > However, it's not really equivalent, because while security
> > > > > > professionals have been saying to make your passwords hard for
> > > > > > decades, they have not been saying to make your usernames hard as
> > > > > > well. Usernames are more likely to be all lowercase, for example.
> > > It's
> > > > > > easier to brute-force a username than to brute-force a password,
> > > > > > basically. So hiding the username isn't adding a whole lot of
> extra
> > > > > > security to this particular attack-vector. Making the password
> more
> > > > > > complex or longer adds a ton more security.
> > > > > >
> > > > > > What's more, usernames themselves are generally *known* anyway.
> > Most
> > > > > > modern systems don't even have usernames, they simply use the
> email
> > > > > > address as the username. The real security is in the password and
> > the
> > > > > > difficulty therein.
> > > > > >
> > > > > > If you want to stop this sort of thing, attack the real problems.
> > > Stop
> > > > > > the brute-force attacks from working at all by using a plugin
> like
> > > > > > Limit Login Attempts
> > > > > > (http://wordpress.org/extend/plugins/limit-login-attempts/) or
> > > enforce
> > > > > > a good-password policy to begin with. Hiding the username just
> > > changes
> > > > > > the attack vector, and stops it for a limited time, until they
> > adapt
> > > > > > to it. It doesn't actually solve the underlying problem.
> > > > > >
> > > > > > -Otto
> > > > > > _______________________________________________
> > > > > > wp-hackers mailing list
> > > > > > wp-hackers at lists.automattic.com <javascript:;> <javascript:;>
> <javascript:;>
> > > > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > > > >
> > > > > _______________________________________________
> > > > > wp-hackers mailing list
> > > > > wp-hackers at lists.automattic.com <javascript:;> <javascript:;>
> <javascript:;>
> > > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > > >
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com <javascript:;> <javascript:;>
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com <javascript:;> <javascript:;>
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp-hackers at thecodecave.com  Wed Jul 18 22:26:05 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Wed, 18 Jul 2012 18:26:05 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
Message-ID: <500737FD.907@thecodecave.com>

Yes,, what Hannit said..

Everything DOES sync automatically, but when you are not using your 
computer, you need to closed down the MySql server that way drop box 
will be able access and send and write the files.

Also using MyISAM is better than using INNODB in this setup because the 
database table get stored in one single directory for myisam.

That's just a matter of editing my.cnf and making sure it has this line 
in it:

default-storage-engine=MYISAM

Brian Layman

On 7/18/2012 5:14 PM, Hannit Cohen wrote:
> Both are synched automatically.
> As for apache - all you need to do is set the dropbox locayion to be
> identcal on both computers and you're all good to go
>
> On Thu, Jul 19, 2012 at 12:10 AM, ????? ??? <almog.baku at gmail.com> wrote:
>
>> Cool! How did you conigure your apache's root to run from dropbox? Do you
>> have any artocle/link fo it?
>> And I doesnt get you about the DB.. How did you sync the db?
>>
>> ~ Almog.
>>


From ravi-lists at g8o.net  Wed Jul 18 22:34:58 2012
From: ravi-lists at g8o.net (// ravi)
Date: Wed, 18 Jul 2012 18:34:58 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <500737FD.907@thecodecave.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
Message-ID: <FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>

On Jul 18, 2012, at 6:26 PM, Brian Layman wrote:
> Yes,, what Hannit said..
> 
> Everything DOES sync automatically, but when you are not using your computer, you need to closed down the MySql server that way drop box will be able access and send and write the files.
> 

To reemphasise the above point, syncing files, especially DB files, while they are in use has a good chance of giving you corrupt data on the other end.

	?ravi


From johnbillion+wp at gmail.com  Wed Jul 18 22:52:00 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Wed, 18 Jul 2012 23:52:00 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CALncZpRkaVt7CKDEeVchZLJbznX_-0sgzHd=+DnwsqqAt9S3LQ@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAMGJ0yx_ESsMc1HACxnhZcqcSv0xjEYzE5ys2xu1pjpoMVn6TA@mail.gmail.com>
	<CALncZpS_0zDcHYMnK-7Jz_KzqTQMjnjkBG9pY+32N0XOt23sUg@mail.gmail.com>
	<CAGw2N3U4tEZ7_Ep+2PbKAvocgrU8MTWXHiWiiVxn3j-_8fcNOQ@mail.gmail.com>
	<CALncZpQDjP+gWQDfzuG8mhnXQyuWocUNNYSYB-8e+82eeEpL6w@mail.gmail.com>
	<CAGw2N3XVAyxomD5MKrVRC4Dha+00y_Zu0KBv=W412n_5qak1jg@mail.gmail.com>
	<CALncZpRkaVt7CKDEeVchZLJbznX_-0sgzHd=+DnwsqqAt9S3LQ@mail.gmail.com>
Message-ID: <CAOqAKWDLcu2zjKyhyHhUbXSrc2aYQ9b1GD+2wDtW3D7dxaXyDA@mail.gmail.com>

On 18 July 2012 23:25, ????? ??? <almog.baku at gmail.com> wrote:
> Hey, I know the both of wp caching plugins.. And again- take a quick look
> about drupal caching..
> But I suggest totake this conversation to another theated, because it
> became to discuss about caching istead of url stracture.

Indeed, but one last point on caching just to wrap it up. WordPress
does not include persistent caching by design. It used to include
persistent object caching, but it was removed way back in version 2.5
[1]. The reason for this is because there are simply too many possible
ways of caching a website that it's not practical to try to do it in
core.

There are over a thousand plugins tagged with "cache" in the plugins
repo [2], which demonstrates the breadth of caching that's possible.
Plugins are the ideal way to add caching to a site and WordPress has a
powerful object cache API for just this purpose.

[1] http://core.trac.wordpress.org/ticket/5570
[2] http://wordpress.org/extend/plugins/search.php?q=cache
[3] http://codex.wordpress.org/Class_Reference/WP_Object_Cache

From tcbarrett at gmail.com  Thu Jul 19 07:00:26 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Thu, 19 Jul 2012 08:00:26 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
Message-ID: <CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>

On 18 July 2012 17:52, Otto <otto at ottodestruct.com> wrote:

> On Tue, Jul 17, 2012 at 11:13 PM, Tom Barrett <tcbarrett at gmail.com> wrote:
> > The main issue is exposing the username, passing an author id in the url
> is
> > just an easy way to find it.
>
> Exposing the username isn't the issue. The username isn't secret, nor
> should it need to be.
>

I think I see where you are coming from. And possibly, in an ideal world, I
agree with you.


> The issue is allowing brute-force attacks to be carried out against
> your site, and having passwords that can be brute-forced to begin
> with.
>

I do completely agree with this. Users choosing bad passwords and making
brute force attempts easy is a huge part of this security issue.


> Consider the case where the username would be considered "secret". A
> brute-force attack would now have to work against both the username
> and the password. This is mathematically equivalent to knowing the
> username and just making the password roughly twice as long.
>

Which would mean much more than just doubling the time it takes to brute
force it (see below).

However, it's not really equivalent, because while security
> professionals have been saying to make your passwords hard for
> decades, they have not been saying to make your usernames hard as
> well. Usernames are more likely to be all lowercase, for example. It's
>

Passwords are controlled by the users (they can change them to what they
want). Usernames can be set up initially to be somewhat complex, and the
user cannot change it.


> easier to brute-force a username than to brute-force a password,
> basically. So hiding the username isn't adding a whole lot of extra
> security to this particular attack-vector. Making the password more
> complex or longer adds a ton more security.
>

I appreciate I'm looking at this a little simplistically. However, above
you say that hiding the username lengthens the password and a longer
password is better security.


> What's more, usernames themselves are generally *known* anyway. Most
> modern systems don't even have usernames, they simply use the email
> address as the username. The real security is in the password and the
> difficulty therein.
>

Is it not worth pursuing a non perfect solution that does add some security
before something better comes along? You don't think the ease with which
anyone can, by default, find out all the usernames makes it easier to hack
a WordPress installation? It is not a risk at all? Or it is not a
significant enough risk?


> If you want to stop this sort of thing, attack the real problems. Stop
> the brute-force attacks from working at all by using a plugin like
> Limit Login Attempts
> (http://wordpress.org/extend/plugins/limit-login-attempts/)


Again I agree with you. I always recommend this plugin.

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From aspratley at gmail.com  Thu Jul 19 07:52:39 2012
From: aspratley at gmail.com (Andrew Spratley)
Date: Thu, 19 Jul 2012 10:52:39 +0300
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
Message-ID: <CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>

I agree with Otto on this. Hiding usernames on the front end isn't
going to get you much more real security. As has been demonstrated
before, security by obscurity doesn't work long term. Usernames were
never engineered to be hidden. Having strong passwords and mitigating
brute force attacks is going to pay off for you in the long term.

Personally I'd put my security efforts into:

Limiting public login attempts (I'd like to see this in core, does the
aforementioned plugin for on Multisite installs?)
Ensuring strong passwords are used (long and complex)
Making sure my plugins and themes aren't opening my site up to abuse
Ensuring a strong hash is used for PW storage (bcrypt or something
that allows a unit of work to be set for the hash)

This is all assuming you have a secure hosting environment as well.

Re the caching point. As much as we'd all like it to be,
caching/scaling isn't just a flick of the switch and fix it kind of
thing. There're some excellent plugins out there but you really need
to choose something that suits your environment and workload.  Having
a generic solution in core, in my opinion wouldn't be a neat solution
because of the wide number of use-cases it would need to satisfy. When
it comes to caching you need to understand what the performance
problem on your particular site and then fix it.


On Thu, Jul 19, 2012 at 10:00 AM, Tom Barrett <tcbarrett at gmail.com> wrote:
> On 18 July 2012 17:52, Otto <otto at ottodestruct.com> wrote:
>
>> On Tue, Jul 17, 2012 at 11:13 PM, Tom Barrett <tcbarrett at gmail.com> wrote:
>> > The main issue is exposing the username, passing an author id in the url
>> is
>> > just an easy way to find it.
>>
>> Exposing the username isn't the issue. The username isn't secret, nor
>> should it need to be.
>>
>
> I think I see where you are coming from. And possibly, in an ideal world, I
> agree with you.
>
>
>> The issue is allowing brute-force attacks to be carried out against
>> your site, and having passwords that can be brute-forced to begin
>> with.
>>
>
> I do completely agree with this. Users choosing bad passwords and making
> brute force attempts easy is a huge part of this security issue.
>
>
>> Consider the case where the username would be considered "secret". A
>> brute-force attack would now have to work against both the username
>> and the password. This is mathematically equivalent to knowing the
>> username and just making the password roughly twice as long.
>>
>
> Which would mean much more than just doubling the time it takes to brute
> force it (see below).
>
> However, it's not really equivalent, because while security
>> professionals have been saying to make your passwords hard for
>> decades, they have not been saying to make your usernames hard as
>> well. Usernames are more likely to be all lowercase, for example. It's
>>
>
> Passwords are controlled by the users (they can change them to what they
> want). Usernames can be set up initially to be somewhat complex, and the
> user cannot change it.
>
>
>> easier to brute-force a username than to brute-force a password,
>> basically. So hiding the username isn't adding a whole lot of extra
>> security to this particular attack-vector. Making the password more
>> complex or longer adds a ton more security.
>>
>
> I appreciate I'm looking at this a little simplistically. However, above
> you say that hiding the username lengthens the password and a longer
> password is better security.
>
>
>> What's more, usernames themselves are generally *known* anyway. Most
>> modern systems don't even have usernames, they simply use the email
>> address as the username. The real security is in the password and the
>> difficulty therein.
>>
>
> Is it not worth pursuing a non perfect solution that does add some security
> before something better comes along? You don't think the ease with which
> anyone can, by default, find out all the usernames makes it easier to hack
> a WordPress installation? It is not a risk at all? Or it is not a
> significant enough risk?
>
>
>> If you want to stop this sort of thing, attack the real problems. Stop
>> the brute-force attacks from working at all by using a plugin like
>> Limit Login Attempts
>> (http://wordpress.org/extend/plugins/limit-login-attempts/)
>
>
> Again I agree with you. I always recommend this plugin.
>
> --
> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> http://twitter.com/tcbarrett
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From rob at bigfish.co.uk  Thu Jul 19 08:03:29 2012
From: rob at bigfish.co.uk (Rob Miller)
Date: Thu, 19 Jul 2012 09:03:29 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>
Message-ID: <E46E7EE61E794E2F85D7FE53307398FD@bigfish.co.uk>


On Thursday, 19 July 2012 at 08:52, Andrew Spratley wrote:

> Limiting public login attempts (I'd like to see this in core, does the
> aforementioned plugin for on Multisite installs?)

Even just a delay would be good ? where the time taken to process the login is (exponentially?) proportional to the number of attempts from that IP in the past X hours, making a brute-force attack rapidly impossible.

You can imagine how it would work: your first login attempt would process in normal time, but the second would take 0.5s, the third 0.75s, the fourth 1.1s, etc.; by the time of the tenth attempt, the process might take 30 seconds. This way, "legitimate" repeated attempts ? someone who can't quite remember their password ? remain possible, but trying thousands of passwords becomes impossible (before the universe dies, anyway).  

--

Rob Miller
Head of Digital

big fish?
11 Chelsea Wharf
15 Lots Road
London
SW10 0QJ
  
Office number: +44 (0)20 7795 0075
Direct number: +44 (0)20 7376 6799

www.bigfish.co.uk (http://www.bigfish.co.uk/)

From ryan.wpmailinglists at gmail.com  Thu Jul 19 08:08:29 2012
From: ryan.wpmailinglists at gmail.com (Ryan WP Mailing Lists)
Date: Thu, 19 Jul 2012 01:08:29 -0700
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <E46E7EE61E794E2F85D7FE53307398FD@bigfish.co.uk>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>
	<E46E7EE61E794E2F85D7FE53307398FD@bigfish.co.uk>
Message-ID: <CAFCSB_KUu2zfkAyCSbq8yohzXLd1h91_KczVooSOjdVayeXa4Q@mail.gmail.com>

I tunic that is a very ellegant way to do so without outright blocking
accounts as admins on blogs generally won't want to deal with unblocking a
user and any case where that is desired can be handled by a plugin. I do
like the idea of implimenting this in core.

Would this be done at a user level or ip level or both?
On Jul 19, 2012 1:03 AM, "Rob Miller" <rob at bigfish.co.uk> wrote:

>
> On Thursday, 19 July 2012 at 08:52, Andrew Spratley wrote:
>
> > Limiting public login attempts (I'd like to see this in core, does the
> > aforementioned plugin for on Multisite installs?)
>
> Even just a delay would be good ? where the time taken to process the
> login is (exponentially?) proportional to the number of attempts from that
> IP in the past X hours, making a brute-force attack rapidly impossible.
>
> You can imagine how it would work: your first login attempt would process
> in normal time, but the second would take 0.5s, the third 0.75s, the fourth
> 1.1s, etc.; by the time of the tenth attempt, the process might take 30
> seconds. This way, "legitimate" repeated attempts ? someone who can't quite
> remember their password ? remain possible, but trying thousands of
> passwords becomes impossible (before the universe dies, anyway).
>
> --
>
> Rob Miller
> Head of Digital
>
> big fish?
> 11 Chelsea Wharf
> 15 Lots Road
> London
> SW10 0QJ
>
> Office number: +44 (0)20 7795 0075
> Direct number: +44 (0)20 7376 6799
>
> www.bigfish.co.uk (http://www.bigfish.co.uk/)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From aspratley at gmail.com  Thu Jul 19 08:10:14 2012
From: aspratley at gmail.com (Andrew Spratley)
Date: Thu, 19 Jul 2012 11:10:14 +0300
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <E46E7EE61E794E2F85D7FE53307398FD@bigfish.co.uk>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>
	<E46E7EE61E794E2F85D7FE53307398FD@bigfish.co.uk>
Message-ID: <CAKNYAgAW50U2=TOPxeDLBb5S-tb+yQGs67xahfL_k87P5vtqmA@mail.gmail.com>

You'd also tie up you php processes for 30s as well. I could hit your
site from a collection of IPs and DOS you pretty quickly I'd imagine.
It's best just to drop their connection either from within WP or
integrate into iptables/fal2ban or something similar.

On Thu, Jul 19, 2012 at 11:03 AM, Rob Miller <rob at bigfish.co.uk> wrote:
>
> On Thursday, 19 July 2012 at 08:52, Andrew Spratley wrote:
>
>> Limiting public login attempts (I'd like to see this in core, does the
>> aforementioned plugin for on Multisite installs?)
>
> Even just a delay would be good ? where the time taken to process the login is (exponentially?) proportional to the number of attempts from that IP in the past X hours, making a brute-force attack rapidly impossible.
>
> You can imagine how it would work: your first login attempt would process in normal time, but the second would take 0.5s, the third 0.75s, the fourth 1.1s, etc.; by the time of the tenth attempt, the process might take 30 seconds. This way, "legitimate" repeated attempts ? someone who can't quite remember their password ? remain possible, but trying thousands of passwords becomes impossible (before the universe dies, anyway).
>
> --
>
> Rob Miller
> Head of Digital
>
> big fish?
> 11 Chelsea Wharf
> 15 Lots Road
> London
> SW10 0QJ
>
> Office number: +44 (0)20 7795 0075
> Direct number: +44 (0)20 7376 6799
>
> www.bigfish.co.uk (http://www.bigfish.co.uk/)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ryan.wpmailinglists at gmail.com  Thu Jul 19 08:15:01 2012
From: ryan.wpmailinglists at gmail.com (Ryan WP Mailing Lists)
Date: Thu, 19 Jul 2012 01:15:01 -0700
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAKNYAgAW50U2=TOPxeDLBb5S-tb+yQGs67xahfL_k87P5vtqmA@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>
	<E46E7EE61E794E2F85D7FE53307398FD@bigfish.co.uk>
	<CAKNYAgAW50U2=TOPxeDLBb5S-tb+yQGs67xahfL_k87P5vtqmA@mail.gmail.com>
Message-ID: <CAFCSB_LG5guOnAdXrGSqP71hDwsrerZXH2yY310Ni9X=YJM7-w@mail.gmail.com>

It wouldn't really tie up pho for 30s unless its coded to wait that long to
respond. Simply error out saying please wait 30s before trying again would
work.
On Jul 19, 2012 1:10 AM, "Andrew Spratley" <aspratley at gmail.com> wrote:

> You'd also tie up you php processes for 30s as well. I could hit your
> site from a collection of IPs and DOS you pretty quickly I'd imagine.
> It's best just to drop their connection either from within WP or
> integrate into iptables/fal2ban or something similar.
>
> On Thu, Jul 19, 2012 at 11:03 AM, Rob Miller <rob at bigfish.co.uk> wrote:
> >
> > On Thursday, 19 July 2012 at 08:52, Andrew Spratley wrote:
> >
> >> Limiting public login attempts (I'd like to see this in core, does the
> >> aforementioned plugin for on Multisite installs?)
> >
> > Even just a delay would be good ? where the time taken to process the
> login is (exponentially?) proportional to the number of attempts from that
> IP in the past X hours, making a brute-force attack rapidly impossible.
> >
> > You can imagine how it would work: your first login attempt would
> process in normal time, but the second would take 0.5s, the third 0.75s,
> the fourth 1.1s, etc.; by the time of the tenth attempt, the process might
> take 30 seconds. This way, "legitimate" repeated attempts ? someone who
> can't quite remember their password ? remain possible, but trying thousands
> of passwords becomes impossible (before the universe dies, anyway).
> >
> > --
> >
> > Rob Miller
> > Head of Digital
> >
> > big fish?
> > 11 Chelsea Wharf
> > 15 Lots Road
> > London
> > SW10 0QJ
> >
> > Office number: +44 (0)20 7795 0075
> > Direct number: +44 (0)20 7376 6799
> >
> > www.bigfish.co.uk (http://www.bigfish.co.uk/)
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Thu Jul 19 08:26:46 2012
From: otto at ottodestruct.com (Otto)
Date: Thu, 19 Jul 2012 03:26:46 -0500
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
Message-ID: <CAD-FghxPO_tf-qATmzygrVYtCaEaiinE+TA-Jw6YGk55Ns4iGw@mail.gmail.com>

On Thu, Jul 19, 2012 at 2:00 AM, Tom Barrett <tcbarrett at gmail.com> wrote:
> Is it not worth pursuing a non perfect solution that does add some security
> before something better comes along?

No. Fake/pretend security is worse than no security at all, because it
tricks you into thinking that it is somehow more secure when it isn't.
Example: Look at all the places on the internet that recommend turning
off SSID-broadcast on your WiFi router, for security reasons. The fact
that turning off SSID-broadcast literally adds *zero* extra security
doesn't seem to matter, people think "hidden" is somehow more secure.


> You don't think the ease with which
> anyone can, by default, find out all the usernames makes it easier to hack
> a WordPress installation? It is not a risk at all? Or it is not a
> significant enough risk?

I don't think it's a risk at all, nor would going to extreme efforts
to hide usernames make any real difference. And such efforts would be
*extreme*, the username was designed from the very beginning to be
public information, it's available and used in possibly dozens of
places.

My username on my own sites is "otto". The whole world knowing this
doesn't make me less secure, because you don't know my password, and
there's no chance of you brute-forcing my highly randomized password
either. The problem you should be addressing is the brute-force
attacks, not the fact that people can figure out your username. Public
usernames are not the real problem.

But putting something into core to address brute force attacks won't
work either, because this is fundamentally something that shouldn't
happen at the WordPress level. If somebody is running rapid fire
requests against your site, then you should be recognizing and
blocking those requests before PHP ever fires. This is a hosting-level
problem, your host should provide you tools to recognize and/or block
this, or you should use tools designed to do this yourself.. A brute
force attack on the login page, or any other form on the site,
basically is a DOS attack. Consider it from that angle. Your users
using crappy passwords is a user-education problem. Consider it from
that angle as well. You can't really apply technological solutions to
what are fundamentally human problems.

IMO, of course.

-Otto

From mjsafoxy at gmail.com  Thu Jul 19 08:27:44 2012
From: mjsafoxy at gmail.com (Muhammad Ali)
Date: Thu, 19 Jul 2012 10:27:44 +0200
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAFCSB_LG5guOnAdXrGSqP71hDwsrerZXH2yY310Ni9X=YJM7-w@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>
	<E46E7EE61E794E2F85D7FE53307398FD@bigfish.co.uk>
	<CAKNYAgAW50U2=TOPxeDLBb5S-tb+yQGs67xahfL_k87P5vtqmA@mail.gmail.com>
	<CAFCSB_LG5guOnAdXrGSqP71hDwsrerZXH2yY310Ni9X=YJM7-w@mail.gmail.com>
Message-ID: <CAMGJ0ywwyMN+BfbaUkpmzp4pKNfDWaiO4MRBW9+G0Nf+PTJKZg@mail.gmail.com>

I quite like the DDOS/Bruteforce protection tools in CloudFlare. How about
simply just creating a MySQL table with blocked IPs/hostnames with a start
block time. After the user selected time has expiration time has gone the
IP row will be dropped from the database, else if a login (or perhaps even
any load of the wp-load.php file) is attempted form that IP, a 'connection
refused by host' header will be sent and the script will then just die.

On 19 July 2012 10:15, Ryan WP Mailing Lists
<ryan.wpmailinglists at gmail.com>wrote:

> It wouldn't really tie up pho for 30s unless its coded to wait that long to
> respond. Simply error out saying please wait 30s before trying again would
> work.
> On Jul 19, 2012 1:10 AM, "Andrew Spratley" <aspratley at gmail.com> wrote:
>
> > You'd also tie up you php processes for 30s as well. I could hit your
> > site from a collection of IPs and DOS you pretty quickly I'd imagine.
> > It's best just to drop their connection either from within WP or
> > integrate into iptables/fal2ban or something similar.
> >
> > On Thu, Jul 19, 2012 at 11:03 AM, Rob Miller <rob at bigfish.co.uk> wrote:
> > >
> > > On Thursday, 19 July 2012 at 08:52, Andrew Spratley wrote:
> > >
> > >> Limiting public login attempts (I'd like to see this in core, does the
> > >> aforementioned plugin for on Multisite installs?)
> > >
> > > Even just a delay would be good ? where the time taken to process the
> > login is (exponentially?) proportional to the number of attempts from
> that
> > IP in the past X hours, making a brute-force attack rapidly impossible.
> > >
> > > You can imagine how it would work: your first login attempt would
> > process in normal time, but the second would take 0.5s, the third 0.75s,
> > the fourth 1.1s, etc.; by the time of the tenth attempt, the process
> might
> > take 30 seconds. This way, "legitimate" repeated attempts ? someone who
> > can't quite remember their password ? remain possible, but trying
> thousands
> > of passwords becomes impossible (before the universe dies, anyway).
> > >
> > > --
> > >
> > > Rob Miller
> > > Head of Digital
> > >
> > > big fish?
> > > 11 Chelsea Wharf
> > > 15 Lots Road
> > > London
> > > SW10 0QJ
> > >
> > > Office number: +44 (0)20 7795 0075
> > > Direct number: +44 (0)20 7376 6799
> > >
> > > www.bigfish.co.uk (http://www.bigfish.co.uk/)
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From rob at bigfish.co.uk  Thu Jul 19 08:38:05 2012
From: rob at bigfish.co.uk (Rob Miller)
Date: Thu, 19 Jul 2012 09:38:05 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAKNYAgAW50U2=TOPxeDLBb5S-tb+yQGs67xahfL_k87P5vtqmA@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>
	<E46E7EE61E794E2F85D7FE53307398FD@bigfish.co.uk>
	<CAKNYAgAW50U2=TOPxeDLBb5S-tb+yQGs67xahfL_k87P5vtqmA@mail.gmail.com>
Message-ID: <077E2C596E964B17928370FF6806ED66@bigfish.co.uk>


On Thursday, 19 July 2012 at 09:10, Andrew Spratley wrote:

> You'd also tie up you php processes for 30s as well. I could hit your
> site from a collection of IPs and DOS you pretty quickly I'd imagine.
> It's best just to drop their connection either from within WP or
> integrate into iptables/fal2ban or something similar.
>  
>  

The point of this approach is usually to avoid showing a message to the user or to in any way actually *block* the attempt, but rather just to increase the amount of time taken to achieve it ? similar to the philosophy used by hashing schemes like bcrypt with their concept of "work".

That way, if it *is* a legitimate user, who really does take ten attempts to remember their password, they're never blocked (and therefore never need manual intervention to unblock); they just have to wait a bit longer for the login to process.

But yes, as Andrew points out, you're opening yourself up to a DOS since it becomes trivial to get all of your Apache/php-fpm processes tied up at once, which means any new requests would be denied. So it's unfortunately not viable, as perhaps elegant as it would be.  

--

Rob Miller
Head of Digital

big fish?
11 Chelsea Wharf
15 Lots Road
London
SW10 0QJ
  
Office number: +44 (0)20 7795 0075
Direct number: +44 (0)20 7376 6799

www.bigfish.co.uk (http://www.bigfish.co.uk/)






From rob at bigfish.co.uk  Thu Jul 19 08:40:56 2012
From: rob at bigfish.co.uk (Rob Miller)
Date: Thu, 19 Jul 2012 09:40:56 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAD-FghxPO_tf-qATmzygrVYtCaEaiinE+TA-Jw6YGk55Ns4iGw@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAD-FghxPO_tf-qATmzygrVYtCaEaiinE+TA-Jw6YGk55Ns4iGw@mail.gmail.com>
Message-ID: <FEDC1378DC96462FB015DD0602394A0E@bigfish.co.uk>


On Thursday, 19 July 2012 at 09:26, Otto wrote:

> But putting something into core to address brute force attacks won't
> work either, because this is fundamentally something that shouldn't
> happen at the WordPress level.


I disagree, for whatever it's worth; the vast majority of WordPress's audience, and certainly the ones who are most likely to choose brute-forceable passwords ? the low-hanging fruit, I guess ? aren't going to be aware of this as a problem. I don't see how it can hurt, even if there is or should be DOS protection at an ISP level, to implement some kind of login throttling with sensible defaults (that is, defaults that err on the side of false negatives).  

--

Rob Miller
Head of Digital

big fish?
11 Chelsea Wharf
15 Lots Road
London
SW10 0QJ
  
Office number: +44 (0)20 7795 0075
Direct number: +44 (0)20 7376 6799

www.bigfish.co.uk (http://www.bigfish.co.uk/)



From mjsafoxy at gmail.com  Thu Jul 19 08:51:39 2012
From: mjsafoxy at gmail.com (Muhammad Ali)
Date: Thu, 19 Jul 2012 10:51:39 +0200
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <FEDC1378DC96462FB015DD0602394A0E@bigfish.co.uk>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAD-FghxPO_tf-qATmzygrVYtCaEaiinE+TA-Jw6YGk55Ns4iGw@mail.gmail.com>
	<FEDC1378DC96462FB015DD0602394A0E@bigfish.co.uk>
Message-ID: <CAMGJ0yyHwhHH7AJJrNyWo94JDfr9W2RuaFPcmr1Ux1u1xq7D3w@mail.gmail.com>

I still don't fully understand why we cant use captchas? Thus eliminating
the most bots (aside from very specialised targeted ones) and meaning the
user doesn't get 'locked out'.
An entirely hypothetical suggestion could be using a OAuth "Login with
Twitter" or "Connect with Facebook", this would outsource the protection to
a entity who has the economic/technical ability to subsidise such
bruteforce attacks, although I can fully understand the other concerns with
using 3rd party closed-source APIs for security. :p Perhaps a decentralised
Wordpress login/admin protection tool, which would also provide SSL for
people who can't be asked to install their own certificate?

Anyway, I still maintain CloudFlare Free + ReCaptcha.

On 19 July 2012 10:40, Rob Miller <rob at bigfish.co.uk> wrote:

>
> On Thursday, 19 July 2012 at 09:26, Otto wrote:
>
> > But putting something into core to address brute force attacks won't
> > work either, because this is fundamentally something that shouldn't
> > happen at the WordPress level.
>
>
> I disagree, for whatever it's worth; the vast majority of WordPress's
> audience, and certainly the ones who are most likely to choose
> brute-forceable passwords ? the low-hanging fruit, I guess ? aren't going
> to be aware of this as a problem. I don't see how it can hurt, even if
> there is or should be DOS protection at an ISP level, to implement some
> kind of login throttling with sensible defaults (that is, defaults that err
> on the side of false negatives).
>
> --
>
> Rob Miller
> Head of Digital
>
> big fish?
> 11 Chelsea Wharf
> 15 Lots Road
> London
> SW10 0QJ
>
> Office number: +44 (0)20 7795 0075
> Direct number: +44 (0)20 7376 6799
>
> www.bigfish.co.uk (http://www.bigfish.co.uk/)
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mpwalsh8 at gmail.com  Thu Jul 19 08:57:07 2012
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Thu, 19 Jul 2012 04:57:07 -0400
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <50071CD1.7080903@thecodecave.com>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
	<500457AC.90904@thecodecave.com>
	<CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg@mail.gmail.com>
	<CAMg3evGYdZu6z_4-_6c8yifDMfPvL=63JzMjQ6u9-MF3WD6Anw@mail.gmail.com>
	<CAMg3evHHG79FH2k6t56PMCSq3D+0cRHqaXvyaU_bEEjyQe5P1g@mail.gmail.com>
	<50071CD1.7080903@thecodecave.com>
Message-ID: <CAMg3evFWysbZ2v88-dzNOtxo1-NLgMmT8DF-DWsF1J71batZUA@mail.gmail.com>

It wasn't my server but the server of someone who is using my WordPress
Google Form plugin.  As it turns out, the problem isn't completely solved
because if someone submits a form that contains a URL in one of the post
variables, the Apache security module (ModSecurity?) kicks in and issues a
403.

AtomicModSecurity Rules:
http://www.atomicorp.com/wiki/index.php/Atomic_ModSecurity_Rules

I tried adding this to the .htaccess file based on this thread:
http://forums.asmallorange.com/topic/7356-mod-security-wordpress-403-forbidden/


<IfModule mod_security.c>
    SecFilterEngine Off
    SecFilterScanPOST Off
</IfModule>

Unfortunately it didn't work.  What PITA this is.  If I update my WordPress
profile on this site and add a URL, it posts correctly.  Looking at the
headers for that post versus the headers for my post, nothing jumps out at
me as an obvious difference but I will keep poking at it.

Mike

On Wed, Jul 18, 2012 at 4:30 PM, Brian Layman <wp-hackers at thecodecave.com>wrote:

> Can you clarify that a little further? Was that just the value for a post
> field?
>
> I'd like to understand what your server didn't like in case it ever comes
> up again.
>
> Brian Layman
>
> On 7/18/2012 2:07 PM, Mike Walsh wrote:
>
>> Replying to my own message - I have finally figured it out.  The Apache
>> server security doesn't like that I was passing a Google Form URL in a
>> post parameter.  By encoding it and then decoding it later when I actually
>> needed it, the server is happy and is no longer throwing 403 errors.
>>
>> Mike
>>
>> On Wed, Jul 18, 2012 at 12:45 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:
>>
>>  I finally got some additional data on this problem I am chasing.  The
>>> hosting provider coughed up a server error log.  This is what it
>>> contains:
>>>
>>> [error] ModSecurity: Access denied with code 403 (phase 2).Match of "rx
>>> ://%{SERVER_NAME}/" against "MATCHED_VARS:gform-action" required.
>>> [file "/usr/local/apache/conf/**modsec/10_asl_rules.conf"]
>>> [line "489"]
>>> [id "340162"]
>>> [rev "262"]
>>> [msg "Atomicorp.com UNSUPPORTED DELAYED Rules: Remote File Injection
>>> attempt in ARGS (AE)"]
>>> [data "
>>> https://docs.google.com/**spreadsheet/formresponse?**formkey=**
>>> dhzsutftwllwzwf6lwdyb0xcmkzsog**c6mq&ifq<https://docs.google.com/spreadsheet/formresponse?formkey=dhzsutftwllwzwf6lwdyb0xcmkzsogc6mq&ifq>
>>> "]
>>> [severity "CRITICAL"]
>>> [hostname "lanaddicts.org"]
>>> [uri "/test-form/"]
>>> [unique_id "UAbUbnrJTaEAAHtoboQAAAAG"]
>>>
>>> Thanks,
>>>
>>> Mike
>>>
>>> Anyone have any suggestions on how to interpret this?
>>>
>>> --
>>>
>> Mike Walsh - mpwalsh8 at gmail.com
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>



-- 
Mike Walsh - mpwalsh8 at gmail.com

From almog.baku at gmail.com  Thu Jul 19 10:35:55 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Thu, 19 Jul 2012 13:35:55 +0300
Subject: [wp-hackers] Caching as part of the core
Message-ID: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>

Hey wordpressers!
As a continue to "[wp-hackers] Author URLs expose usernames", we discuss
about adding the caching option to the core. so I think this subject must
be discuss in a separated subject.
------------


*Why the caching system should be part of the core?*

   1. The common wordpress user(website owner/setup the website) doesn't
   know the priority of caching.
   2. The common user wouln't install any third-part plugin that he can't
   actually see.. he doesn't realize backend meaning.. he realize thing he can
   see- like themes and beautiful galleries plugins.
   3. Caching system improve SEO, user-end satisfaction, best performance,
   and of course loading speed.
   4. It will force the developers to develop plugins who support caching,
   and it will cache the result from the beginning of the site building
   process.. and not only the output.
   5. It will offer simpler configuration and safer way to non-techies user.
   6. Third-party plugins are something unsafty, we can't offer the user
   something with huge weight as third-party application.

*
Why it shouldn't be part of the core?*

   1. There is too many plugins who hurt from this decision.
   2. There is too many ways to cache website.
   3. This is very large issue. it will influence about all the wordpress
   plugins and the core.

*Samples from DRUPAL*
Drupal for example implements caching system as part of the core.
You can enable/disable/configure the caching inside the administration.
The cache system is caching a objects inside the DB(like menu, theme, hooks
configurations) and cache and minify the pages and theme files.
There is also modules for drupal who make the caching much more effective
and cache static pages.. but the simple and basic cacing is made by the
core.

*Today plugins for wordpress:*
There are two popular plugins for wordpres who manage the caching:

   1. WP Super Cache <http://wordpress.org/extend/plugins/wp-super-cache/>
   2. W3 Total Cache <http://wordpress.org/extend/plugins/w3-total-cache/>


~ Almog

From andre at pixelplexus.co.za  Thu Jul 19 10:48:41 2012
From: andre at pixelplexus.co.za (andre at pixelplexus.co.za)
Date: Thu, 19 Jul 2012 03:48:41 -0700
Subject: [wp-hackers] Featured image functionality dissapeared from custom
 post types after upgrade
Message-ID: <a4d87d098f58ef95f750c16bea8e2a88.squirrel@webmail.pixelplexus.co.za>

Hi

I see a couple of mentions of similar problems on the forums but no detail
of what the problem might be or how to fix. So asking here and will start
digging.

A site that uses featured images on a custom post type. After upgrade to
3.4.1 when you go to the edit screen for *some* of the custom posts, the
featured image is no longer set. If you click on set featured image there
is still an image listed in the 'gallery' tab. However there is no 'set as
featured link' and the image thumbnail seems blank. Full size lists the
image size as (0 ? 0). (so suspect something broken in the db :-| (Got
exactly the same result on a clone of the site)

Will go through disabling all plugins etc. but its weird that it was
working perfectly before the upgrade.


From ehitter at gmail.com  Thu Jul 19 11:10:16 2012
From: ehitter at gmail.com (Erick Hitter)
Date: Thu, 19 Jul 2012 07:10:16 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
Message-ID: <CADAM20rHMV9+7kvjL7z=UncHz54wBSg1Zf2jFFAZvH-nqpmi7Q@mail.gmail.com>

Almong,

Personally, I don't want to see a persistent object cache back in Core.
That's what transients are for. They offer the DB-style caching found in
Drupal, but once a persistent caching plugin (such as either you mentioned,
or Memcached Object Cache, etc.) is enabled, the database is no longer
relied upon.

Considering the widely-varied server configurations WordPress runs on, I
think it's foolish to bloat Core with such a thing. There are too many
different ways to implement persistent caching, all of which depend on
server capabilities, for this to be a good idea. It's up to the individuals
behind a given site to make these decisions, and I feel that's exactly the
way it should be.

As a developer, the onus is rightly on me to select and implement caching
appropriately. If I'm writing a plugin or theme for the public repository,
I might choose transients if caching is warranted. Conversely, if I'm
coding something for an environment that I know does and always will have a
persistent object cache, I'll utilize that caching system. Context really
is the overriding factor here.

I do agree that plugin and theme authors ought to be better about building
caching into their code, but understanding when it helps and when it
hinders is just as important. Caching for sake of its presence alone
benefits no one.

Erick
On Jul 19, 2012 6:36 AM, "Almog Baku" <almog.baku at gmail.com> wrote:

> Hey wordpressers!
> As a continue to "[wp-hackers] Author URLs expose usernames", we discuss
> about adding the caching option to the core. so I think this subject must
> be discuss in a separated subject.
> ------------
>
>
> *Why the caching system should be part of the core?*
>
>    1. The common wordpress user(website owner/setup the website) doesn't
>    know the priority of caching.
>    2. The common user wouln't install any third-part plugin that he can't
>    actually see.. he doesn't realize backend meaning.. he realize thing he
> can
>    see- like themes and beautiful galleries plugins.
>    3. Caching system improve SEO, user-end satisfaction, best performance,
>    and of course loading speed.
>    4. It will force the developers to develop plugins who support caching,
>    and it will cache the result from the beginning of the site building
>    process.. and not only the output.
>    5. It will offer simpler configuration and safer way to non-techies
> user.
>    6. Third-party plugins are something unsafty, we can't offer the user
>    something with huge weight as third-party application.
>
> *
> Why it shouldn't be part of the core?*
>
>    1. There is too many plugins who hurt from this decision.
>    2. There is too many ways to cache website.
>    3. This is very large issue. it will influence about all the wordpress
>    plugins and the core.
>
> *Samples from DRUPAL*
> Drupal for example implements caching system as part of the core.
> You can enable/disable/configure the caching inside the administration.
> The cache system is caching a objects inside the DB(like menu, theme, hooks
> configurations) and cache and minify the pages and theme files.
> There is also modules for drupal who make the caching much more effective
> and cache static pages.. but the simple and basic cacing is made by the
> core.
>
> *Today plugins for wordpress:*
> There are two popular plugins for wordpres who manage the caching:
>
>    1. WP Super Cache <http://wordpress.org/extend/plugins/wp-super-cache/>
>    2. W3 Total Cache <http://wordpress.org/extend/plugins/w3-total-cache/>
>
>
> ~ Almog
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wordpress at dd32.id.au  Thu Jul 19 11:41:17 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Thu, 19 Jul 2012 21:41:17 +1000
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <CAMg3evFWysbZ2v88-dzNOtxo1-NLgMmT8DF-DWsF1J71batZUA@mail.gmail.com>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
	<500457AC.90904@thecodecave.com>
	<CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg@mail.gmail.com>
	<CAMg3evGYdZu6z_4-_6c8yifDMfPvL=63JzMjQ6u9-MF3WD6Anw@mail.gmail.com>
	<CAMg3evHHG79FH2k6t56PMCSq3D+0cRHqaXvyaU_bEEjyQe5P1g@mail.gmail.com>
	<50071CD1.7080903@thecodecave.com>
	<CAMg3evFWysbZ2v88-dzNOtxo1-NLgMmT8DF-DWsF1J71batZUA@mail.gmail.com>
Message-ID: <CAL4EHfkjfbZp8eNuqvFzUKkhmMyAjzWHvw+KuiVZ82sJD2FUQQ@mail.gmail.com>

mod_Security itself is a major PITA most of the time, I'm not saying
it's useless, but that doesn't make it a pain when you come up against
it.
The mod_security rules are often defined very loosely, in your case,
it might be catching a fieldname containing 'action' and a url as the
value,  incase a site is doing something such as include(
$_GET['field-action'] . '.php' ); ..Now that might sound like a
utterly stupid thing for an application to do.. but it's exactly what
mod_security is used to protect against in many cases.
Many people do not realise the rules can be updated either, or know
how - I certainly don't - but I do know the only time i've ever run
afoul of them, the rules were over 4 years old, and updating them to
the latest release solved the users issue.


On 19 July 2012 18:57, Mike Walsh <mpwalsh8 at gmail.com> wrote:
> It wasn't my server but the server of someone who is using my WordPress
> Google Form plugin.  As it turns out, the problem isn't completely solved
> because if someone submits a form that contains a URL in one of the post
> variables, the Apache security module (ModSecurity?) kicks in and issues a
> 403.
>
> AtomicModSecurity Rules:
> http://www.atomicorp.com/wiki/index.php/Atomic_ModSecurity_Rules
>
> I tried adding this to the .htaccess file based on this thread:
> http://forums.asmallorange.com/topic/7356-mod-security-wordpress-403-forbidden/
>
>
> <IfModule mod_security.c>
>     SecFilterEngine Off
>     SecFilterScanPOST Off
> </IfModule>
>
> Unfortunately it didn't work.  What PITA this is.  If I update my WordPress
> profile on this site and add a URL, it posts correctly.  Looking at the
> headers for that post versus the headers for my post, nothing jumps out at
> me as an obvious difference but I will keep poking at it.
>
> Mike
>
> On Wed, Jul 18, 2012 at 4:30 PM, Brian Layman <wp-hackers at thecodecave.com>wrote:
>
>> Can you clarify that a little further? Was that just the value for a post
>> field?
>>
>> I'd like to understand what your server didn't like in case it ever comes
>> up again.
>>
>> Brian Layman
>>
>> On 7/18/2012 2:07 PM, Mike Walsh wrote:
>>
>>> Replying to my own message - I have finally figured it out.  The Apache
>>> server security doesn't like that I was passing a Google Form URL in a
>>> post parameter.  By encoding it and then decoding it later when I actually
>>> needed it, the server is happy and is no longer throwing 403 errors.
>>>
>>> Mike
>>>
>>> On Wed, Jul 18, 2012 at 12:45 PM, Mike Walsh <mpwalsh8 at gmail.com> wrote:
>>>
>>>  I finally got some additional data on this problem I am chasing.  The
>>>> hosting provider coughed up a server error log.  This is what it
>>>> contains:
>>>>
>>>> [error] ModSecurity: Access denied with code 403 (phase 2).Match of "rx
>>>> ://%{SERVER_NAME}/" against "MATCHED_VARS:gform-action" required.
>>>> [file "/usr/local/apache/conf/**modsec/10_asl_rules.conf"]
>>>> [line "489"]
>>>> [id "340162"]
>>>> [rev "262"]
>>>> [msg "Atomicorp.com UNSUPPORTED DELAYED Rules: Remote File Injection
>>>> attempt in ARGS (AE)"]
>>>> [data "
>>>> https://docs.google.com/**spreadsheet/formresponse?**formkey=**
>>>> dhzsutftwllwzwf6lwdyb0xcmkzsog**c6mq&ifq<https://docs.google.com/spreadsheet/formresponse?formkey=dhzsutftwllwzwf6lwdyb0xcmkzsogc6mq&ifq>
>>>> "]
>>>> [severity "CRITICAL"]
>>>> [hostname "lanaddicts.org"]
>>>> [uri "/test-form/"]
>>>> [unique_id "UAbUbnrJTaEAAHtoboQAAAAG"]
>>>>
>>>> Thanks,
>>>>
>>>> Mike
>>>>
>>>> Anyone have any suggestions on how to interpret this?
>>>>
>>>> --
>>>>
>>> Mike Walsh - mpwalsh8 at gmail.com
>>> ______________________________**_________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>
>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>
>
>
> --
> Mike Walsh - mpwalsh8 at gmail.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From harry at dxw.com  Thu Jul 19 12:09:14 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Thu, 19 Jul 2012 13:09:14 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>
Message-ID: <5007F8EA.7020109@dxw.com>

On 19/07/12 08:52, Andrew Spratley wrote:
> I agree with Otto on this. Hiding usernames on the front end isn't
> going to get you much more real security. As has been demonstrated
> before, security by obscurity doesn't work long term. Usernames were
> never engineered to be hidden. Having strong passwords and mitigating
> brute force attacks is going to pay off for you in the long term.

I agree that the security of an individual account isn't much affected 
by the username of that account being public, but that's not what I'm 
talking about. I'm talking about the security of a whole (private) site, 
across all its accounts. And, from that perspective, this approach is 
really wrong.

Say you're trying to break into a site with 1000 users. With that number 
of users, it is a virtual certainty that at least 1 or 2 accounts will 
have very weak passwords (like "password" or "letmein"). Because it's a 
private site and any account gets you in, you don't care which account 
you break. You only need one.

Say you've guessed a few usernames based on publicly available 
information, like known accounts on other sites. You might have 20 
accounts to try. You try them, but you're looking for 1 or 2 sites out 
of 1000. And they weren't within this 20.

Now say the site lets you enumerate all user accounts. I'm sure you can 
guess the rest. With all the usernames, you'll definitely find the weak 
ones. And with that number of accounts, there'll definitely be weak ones 
to find.

I'm not saying that stopping username enumeration is going to completely 
solve the problem of weak passwords. Of course, it won't. And it's far 
from the only thing we do to protect sites -- in fact, after several 
years of operating, we're only just getting around to this one. Because 
we've had the simple, most effective things in place for ages (like 
detection and blocking of brute force attacks, password audits, minimum 
password lengths, etc).

But, we always seek to improve. This is a problem worth solving because 
the presence of usernames in sites serves no particular user need. It is 
something that can be removed without reducing the quality of the user 
experience at all. It is something that *will* increase the security of 
our sites. Not as much as other things, but we already do those things.

It's not about security through obscurity. It's about the difference 
between knowing a few of a sort of thing, and all of a sort of thing. 
It's the difference between the probability that the usernames you 
happen to have correspond to the passwords you have, and the probability 
that any existing username corresponds to the passwords you have. The 
latter is much higher.

Harry

PS - I'd definitely endorse the idea of a gradually increasing delay 
between failed login attempts. We might add that too :)

From harry at dxw.com  Thu Jul 19 12:21:01 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Thu, 19 Jul 2012 13:21:01 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAD-FghxPO_tf-qATmzygrVYtCaEaiinE+TA-Jw6YGk55Ns4iGw@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAD-FghxPO_tf-qATmzygrVYtCaEaiinE+TA-Jw6YGk55Ns4iGw@mail.gmail.com>
Message-ID: <5007FBAD.7000303@dxw.com>

On 19/07/12 09:26, Otto wrote:
> But putting something into core to address brute force attacks won't
> work either, because this is fundamentally something that shouldn't
> happen at the WordPress level.

Neither is preventing directory listings, yet there are numerous blank 
index.php files in WP for exactly that purpose.

In any case, I don't think this is right.

Mostly because the majority of the WordPress installations are not very 
well configured. In fact, in my experience, the majority of WordPress 
installations are extremely poorly configured. And many users would be 
completely baffled by the suggestion that they should configure Apache 
or PHP or an IDS to solve these problems. You've already acknowledge 
that limit-login-attempts is a good solution to the problem, and I agree.

Secondly, you're ignoring defence-in-depth. I certainly think that it 
would be sensible to block brute-force attacks at the lowest level 
possible (though they are manifestly not DoS attacks). But that doesn't 
mean it's not also sensible to block it at the WordPress level. Less 
important, but sensible.

As an example, we limit the ability for people to make SSH connections 
to our machines. We use iptables to do that. And in case iptables ever 
stopped working for some reason (most likely, by misconfiguration or 
mistake) it's also blocked in the sshd config (or perhaps by hosts.deny, 
I forget).

Anyway. Just because a problem *can* be solved by configuration, doesn't 
mean the WordPress core is excused from making any attempt to do the same.



From andrew at graymerica.com  Thu Jul 19 13:06:10 2012
From: andrew at graymerica.com (Andrew Gray)
Date: Thu, 19 Jul 2012 09:06:10 -0400
Subject: [wp-hackers] Caching as part of the core
Message-ID: <5A4F1110-DF7A-4DE9-99AB-CD5A59E8E162@graymerica.com>

One of the best reasons to keep Caching out of the core, (in addition to  those listed so far) is that you would immediately take away a pet project from the developers who have put a lot of work into their caching solutions.

Each person who maintains a caching plugin, does so for their own reasons, but to cut off the innovation and work they put in and  require a core commit every time they update would be not a good move.

My  only suggestion would be to expand on the transient cache and promote the use of that by plugin authors.      Maybe add a clear all transients or way to see what it in cache in the backend somewhere.   Maybe making transient extendable would bridget the gap.

By promoting an official way to store and retrieve cached information, it would provide a more common interface for plugin developers (who might use it, instead of rolling their own)

I am not advocating including xCache, APC cache, MemCache, WinCache, Ca$hCache into core, just providing a common point for them to all hook in.

One more thing,  if you are not putting Cloud Flare in front of your sites, you are missing out.   It is quite nice and worth the minimal money they charge for it.   We have cut our server usage down by about 75% on some high traffic sites.

Just my thoughts,

Andrew


PS: As my favorite WP t-shirt states,  C.R.E.A.M  "Cache Rules Everything Around Me"




From ipstenu at ipstenu.org  Thu Jul 19 13:33:55 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Thu, 19 Jul 2012 06:33:55 -0700
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>
Message-ID: <B9890C01-3A2B-4BFA-9F30-6FD18164E11D@ipstenu.org>

> Limiting public login attempts (I'd like to see this in core, does the
> aforementioned plugin for on Multisite installs?)

Yes :) I use it, works great.

Late to the party, but I didn't see anyone loop back n that one.


From aspratley at gmail.com  Thu Jul 19 13:42:56 2012
From: aspratley at gmail.com (Andrew Spratley)
Date: Thu, 19 Jul 2012 16:42:56 +0300
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <B9890C01-3A2B-4BFA-9F30-6FD18164E11D@ipstenu.org>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>
	<B9890C01-3A2B-4BFA-9F30-6FD18164E11D@ipstenu.org>
Message-ID: <CAKNYAgD+uhsXXnkp5=F5V8+EZ8uYhi6seSE3TfUAqgRuhwe1rg@mail.gmail.com>

Thanks Mike,

I need to check it out properly.

Re the point of increasing login times for failed attempts. Am I
correct in thinking that a php sleep will block that php process until
the sleep has finished? The result being you can't handle any more
requests on that process until the sleep has finished?

On Thu, Jul 19, 2012 at 4:33 PM, Mika A Epstein <ipstenu at ipstenu.org> wrote:
>> Limiting public login attempts (I'd like to see this in core, does the
>> aforementioned plugin for on Multisite installs?)
>
> Yes :) I use it, works great.
>
> Late to the party, but I didn't see anyone loop back n that one.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From almog.baku at gmail.com  Thu Jul 19 13:56:29 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Thu, 19 Jul 2012 16:56:29 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <5A4F1110-DF7A-4DE9-99AB-CD5A59E8E162@graymerica.com>
References: <5A4F1110-DF7A-4DE9-99AB-CD5A59E8E162@graymerica.com>
Message-ID: <CALncZpTzRURjYV56A6Xh_bz6vL44vmifUDLTO_a6ki-aVe+6oQ@mail.gmail.com>

Hey Andrew,
Disappointing the authors is really good reason as you say, because it can
demage our comminity and avoiding the contributing..
BUT, from the other side- we prevent the common user from caching.

Maybe the right solution is like drupal- making the basic caching by the
core- and the advanced and improved caching by the third-party plugins..
In this way, we can save our developers to extend and improve the caching
system(by caching hooks and offering other services like cdn, special
filtering, image cache, etc..) and in the same time to offer the common
user basic caching.

About CloudFlare- it seems a really great service.. BUT it really bad for
website who not in the U.S like Israel :)


The current status, by my opinion, putting us in a really low position
comparing the alternatives. Caching is really basic.

~ Almog.

On Thu, Jul 19, 2012 at 4:06 PM, Andrew Gray <andrew at graymerica.com> wrote:

> One of the best reasons to keep Caching out of the core, (in addition to
>  those listed so far) is that you would immediately take away a pet project
> from the developers who have put a lot of work into their caching solutions.
>
> Each person who maintains a caching plugin, does so for their own reasons,
> but to cut off the innovation and work they put in and  require a core
> commit every time they update would be not a good move.
>
> My  only suggestion would be to expand on the transient cache and promote
> the use of that by plugin authors.      Maybe add a clear all transients or
> way to see what it in cache in the backend somewhere.   Maybe making
> transient extendable would bridget the gap.
>
> By promoting an official way to store and retrieve cached information, it
> would provide a more common interface for plugin developers (who might use
> it, instead of rolling their own)
>
> I am not advocating including xCache, APC cache, MemCache, WinCache,
> Ca$hCache into core, just providing a common point for them to all hook in.
>
> One more thing,  if you are not putting Cloud Flare in front of your
> sites, you are missing out.   It is quite nice and worth the minimal money
> they charge for it.   We have cut our server usage down by about 75% on
> some high traffic sites.
>
> Just my thoughts,
>
> Andrew
>
>
> PS: As my favorite WP t-shirt states,  C.R.E.A.M  "Cache Rules Everything
> Around Me"
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From harry at dxw.com  Thu Jul 19 14:09:56 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Thu, 19 Jul 2012 15:09:56 +0100
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <CAKNYAgD+uhsXXnkp5=F5V8+EZ8uYhi6seSE3TfUAqgRuhwe1rg@mail.gmail.com>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAKNYAgA0wmAZ5NRtimjxx5c_9Wd8WjWMN5L2vM=Ky0inz2tG5w@mail.gmail.com>
	<B9890C01-3A2B-4BFA-9F30-6FD18164E11D@ipstenu.org>
	<CAKNYAgD+uhsXXnkp5=F5V8+EZ8uYhi6seSE3TfUAqgRuhwe1rg@mail.gmail.com>
Message-ID: <50081534.5020906@dxw.com>

Yes, and would likely cause the browser's request to time out. So the 
user would get an browser error, rather than something telling them to 
try again later.




On 19/07/2012 14:42, Andrew Spratley wrote:
> Thanks Mike,
>
> I need to check it out properly.
>
> Re the point of increasing login times for failed attempts. Am I
> correct in thinking that a php sleep will block that php process until
> the sleep has finished? The result being you can't handle any more
> requests on that process until the sleep has finished?
>
> On Thu, Jul 19, 2012 at 4:33 PM, Mika A Epstein<ipstenu at ipstenu.org>  wrote:
>>> Limiting public login attempts (I'd like to see this in core, does the
>>> aforementioned plugin for on Multisite installs?)
>> Yes :) I use it, works great.
>>
>> Late to the party, but I didn't see anyone loop back n that one.
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From hal at burgiss.net  Thu Jul 19 15:02:55 2012
From: hal at burgiss.net (Hal Burgiss)
Date: Thu, 19 Jul 2012 11:02:55 -0400
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <CAL4EHfkjfbZp8eNuqvFzUKkhmMyAjzWHvw+KuiVZ82sJD2FUQQ@mail.gmail.com>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
	<500457AC.90904@thecodecave.com>
	<CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg@mail.gmail.com>
	<CAMg3evGYdZu6z_4-_6c8yifDMfPvL=63JzMjQ6u9-MF3WD6Anw@mail.gmail.com>
	<CAMg3evHHG79FH2k6t56PMCSq3D+0cRHqaXvyaU_bEEjyQe5P1g@mail.gmail.com>
	<50071CD1.7080903@thecodecave.com>
	<CAMg3evFWysbZ2v88-dzNOtxo1-NLgMmT8DF-DWsF1J71batZUA@mail.gmail.com>
	<CAL4EHfkjfbZp8eNuqvFzUKkhmMyAjzWHvw+KuiVZ82sJD2FUQQ@mail.gmail.com>
Message-ID: <CAEizahKgTw_4GjFwA7d8U_Y3APXPtW_wpz494NhzPbZh7p+G+Q@mail.gmail.com>

On Thu, Jul 19, 2012 at 7:41 AM, Dion Hulse (dd32) <wordpress at dd32.id.au>wrote:

> mod_Security itself is a major PITA most of the time, I'm not saying
> it's useless, but that doesn't make it a pain when you come up against
> it.
>

I agree. I had it installed on our servers, and uninstalled it due to the
number of false positives and the continual work arounds.  In some
environments, it might be great. The concept is great, but the
implementation can be  problematic.

-- 
Hal

From otto at ottodestruct.com  Thu Jul 19 16:57:04 2012
From: otto at ottodestruct.com (Otto)
Date: Thu, 19 Jul 2012 11:57:04 -0500
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
Message-ID: <CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>

Caching comes in multiple flavors, you can't discuss it properly
without separating the concepts.

1. Page caching. This would be something like WP Super-Cache which
does static caching of the whole HTML page, thus eliminating vast
amounts of CPU execution on some sites.

2. Persistent object caching. This would be anything which hooks the
WP Object Cache and stores it somewhere. W3 Total Cache has this,
among other things.


Neither of these should be in core. I'll explain why for each case.


For page caching, there's one major problem in that when you start
caching the whole page HTML, then the site is no longer dynamically
generated for most cases. There's ways around this, with javascript
and so on, but basically unless you're configured to adapt to it, then
there can be unexpected side effects. Note that there are multiple
possible ways to do whole-page caching, such as the super-cache
approach (save to disk, use .htaccess to serve the pages directly), or
you can use something like Varnish proxying to achieve the same
results.


For object caching, this largely is built into core already, and very
well, just leaving out the "persistent" part. The problem with object
caching is simple: where do you store the objects?

- It makes little to no sense to store objects in the database,
because on the most common cases (shared hosting servers, database
servers shared by multiple people) then the database is already the
major bottleneck that you're trying to use object caching to get away
from. Object caching should *reduce* the number of database calls, it
makes little sense to cache an "object" in the database when the query
to build the object came from the database to begin with. Trust the
mySQL query optimizer, it's smarter than you are.

- Storing objects on disk is generally no good, because disk is
*slow*. Yes, on most systems, filesystem based caching is slow as
heck. Even if you're using uber-duper SSD drives and such, it still
has to sort through the filesystem, and this can be much slower than
communicating even to the DB over the network. DBs, after all, are
designed for fast data storage and retrieval, filesystems.. well, not
so much.

- Using a memory-based cache (xcache, memcached, etc) are perfect.
Persistent (to a point), fast as heck, can handle expiration of data,
wonderful. Also outside the range of like 80% of WP users on cheap or
shared hosting, not supported by like 10% of the rest of the hosts...
it's an uncommon thing. Also, different providers that do provide
these solutions provide different ones. There's dozens of mem-based
cache mechanisms, each of them different. WordPress accommodates these
by providing a very easily pluggable object caching mechanism, and
writing some code to connect the WP Object Cache to any given memory
cache methodology really isn't that tough to do.


Something like Drupal implements caching out of necessity, not choice.
The way Drupal/Joomla/others are architected is very, very different
than WordPress. A default WP site, freshly setup, only maybe does
20-30 queries to build a page. Drupal, last time I tried it, took
80-100. This is because the way those systems work is to store a lot
more of the "functionality" part of the site in the database. When you
can change what fields are available for a post in a UI interface,
then the definitions of the fields and such has to be stored
somewhere, and read to build the site contents. It's a different
approach, and with high amounts of DB access like that, caching
becomes very necessary.


Finally, here's the key point about caching: *most users don't need
it*. If you're a person writing a blog that gets less than 1000 hits a
day, caching ain't going to do much for you. Not really. Sure, your
site might go from 5 seconds down to >1 second load times, but if
you're not getting the traffic anyway, then cache isn't going to make
your traffic increase in any real way. When you start getting some
real traffic, 3000+ hits a day, that's when you need caching. That's
when speed of load starts to really matter. The majority of
WordPress's 70 million+ users aren't getting particularly serious
traffic. Most websites don't, you know.


-Otto

From ryan.wpmailinglists at gmail.com  Thu Jul 19 17:03:16 2012
From: ryan.wpmailinglists at gmail.com (Ryan WP Mailing Lists)
Date: Thu, 19 Jul 2012 10:03:16 -0700
Subject: [wp-hackers] Author URLs expose usernames
In-Reply-To: <FEDC1378DC96462FB015DD0602394A0E@bigfish.co.uk>
References: <500536EA.2000103@dxw.com>
	<29200EAF-0EEC-4D49-BED0-73D1F4F215AA@newclarity.net>
	<CAA0DF=8At+q9LERO+GfCS-7ZOSs3n9Mtmw3o8AFJLWHc-BKvvw@mail.gmail.com>
	<A2E6D352-3E8A-41B0-A7F1-510F219B2F1C@newclarity.net>
	<C9C24B46-F5B1-4961-9125-AA20FA3D2ADF@gmail.com>
	<CAEgmxabhTKr-NGHAAL2bkXgrXCZLE8KVecat833hjz2gowh4yQ@mail.gmail.com>
	<CAD-Fghy61L6Uot34qkUNGL9PtVbg-EPA=nxhT_YdBzTyd92H=Q@mail.gmail.com>
	<CAEgmxaYCgKUTQLApAxD39WZiOgCmp1x0=rsEe5jL=peuNs99+A@mail.gmail.com>
	<CAD-FghxPO_tf-qATmzygrVYtCaEaiinE+TA-Jw6YGk55Ns4iGw@mail.gmail.com>
	<FEDC1378DC96462FB015DD0602394A0E@bigfish.co.uk>
Message-ID: <CAFCSB_+y2vcNBAag=dyEAECdqRnRK+8jEekxkLmoM1rDvNp4eQ@mail.gmail.com>

I agree and its not that unheard of...for example vbulletin locks you out
for 15minutes if you enter wrong credentials 3 times. Having locked my own
accounts out because I can't remember which password of mine I used on the
site I can say 15 minutes is a little exessive but if after 3 attempts it
locked you out for say 5 minutes then after 3 more attempts 10 minutes
ect... I think that would be good to include in core FWIW.
On Jul 19, 2012 1:41 AM, "Rob Miller" <rob at bigfish.co.uk> wrote:

>
> On Thursday, 19 July 2012 at 09:26, Otto wrote:
>
> > But putting something into core to address brute force attacks won't
> > work either, because this is fundamentally something that shouldn't
> > happen at the WordPress level.
>
>
> I disagree, for whatever it's worth; the vast majority of WordPress's
> audience, and certainly the ones who are most likely to choose
> brute-forceable passwords ? the low-hanging fruit, I guess ? aren't going
> to be aware of this as a problem. I don't see how it can hurt, even if
> there is or should be DOS protection at an ISP level, to implement some
> kind of login throttling with sensible defaults (that is, defaults that err
> on the side of false negatives).
>
> --
>
> Rob Miller
> Head of Digital
>
> big fish?
> 11 Chelsea Wharf
> 15 Lots Road
> London
> SW10 0QJ
>
> Office number: +44 (0)20 7795 0075
> Direct number: +44 (0)20 7376 6799
>
> www.bigfish.co.uk (http://www.bigfish.co.uk/)
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From andre at pixelplexus.co.za  Thu Jul 19 20:08:18 2012
From: andre at pixelplexus.co.za (andre at pixelplexus.co.za)
Date: Thu, 19 Jul 2012 13:08:18 -0700
Subject: [wp-hackers] Featured image functionality dissapeared from
 custom post types after upgrade
In-Reply-To: <a4d87d098f58ef95f750c16bea8e2a88.squirrel@webmail.pixelplexus.co.za>
References: <a4d87d098f58ef95f750c16bea8e2a88.squirrel@webmail.pixelplexus.co.za>
Message-ID: <eceeeb6131af76f9a10f1a3da6d58aae.squirrel@webmail.pixelplexus.co.za>

I'm completely baffled. All 1088 of the cutom posts return true for
has_post_thumbnail and get_post_thumbnail_id returns the correct id.

But for about 600 of them get_the_post_thumbnail returns blank.

Any pointers or ideas would be very much appreciated :-|

Thanks

Andr?

PS. clarifying the below: On the custom post's editing screen the featured
image doesn't show in the meta box. But the fact that the 'use as featured
image' link is missing from the image in the media gallery tab seems to
sugest the right image is set as featured but the image is somehow
'borken'.


> Hi
>
> I see a couple of mentions of similar problems on the forums but no detail
> of what the problem might be or how to fix. So asking here and will start
> digging.
>
> A site that uses featured images on a custom post type. After upgrade to
> 3.4.1 when you go to the edit screen for *some* of the custom posts, the
> featured image is no longer set. If you click on set featured image there
> is still an image listed in the 'gallery' tab. However there is no 'set as
> featured link' and the image thumbnail seems blank. Full size lists the
> image size as (0 ? 0). (so suspect something broken in the db :-| (Got
> exactly the same result on a clone of the site)
>
> Will go through disabling all plugins etc. but its weird that it was
> working perfectly before the upgrade.
>


From mpwalsh8 at gmail.com  Thu Jul 19 20:20:40 2012
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Thu, 19 Jul 2012 16:20:40 -0400
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <CAEizahKgTw_4GjFwA7d8U_Y3APXPtW_wpz494NhzPbZh7p+G+Q@mail.gmail.com>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
	<500457AC.90904@thecodecave.com>
	<CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg@mail.gmail.com>
	<CAMg3evGYdZu6z_4-_6c8yifDMfPvL=63JzMjQ6u9-MF3WD6Anw@mail.gmail.com>
	<CAMg3evHHG79FH2k6t56PMCSq3D+0cRHqaXvyaU_bEEjyQe5P1g@mail.gmail.com>
	<50071CD1.7080903@thecodecave.com>
	<CAMg3evFWysbZ2v88-dzNOtxo1-NLgMmT8DF-DWsF1J71batZUA@mail.gmail.com>
	<CAL4EHfkjfbZp8eNuqvFzUKkhmMyAjzWHvw+KuiVZ82sJD2FUQQ@mail.gmail.com>
	<CAEizahKgTw_4GjFwA7d8U_Y3APXPtW_wpz494NhzPbZh7p+G+Q@mail.gmail.com>
Message-ID: <CAMg3evES+b+m+h09MwqdnRJefSYdrTW8McfsmK2KVpw9V7JRww@mail.gmail.com>

On Thu, Jul 19, 2012 at 11:02 AM, Hal Burgiss <hal at burgiss.net> wrote:

> On Thu, Jul 19, 2012 at 7:41 AM, Dion Hulse (dd32) <wordpress at dd32.id.au
> >wrote:
>
> > mod_Security itself is a major PITA most of the time, I'm not saying
> > it's useless, but that doesn't make it a pain when you come up against
> > it.
> >
>
> I agree. I had it installed on our servers, and uninstalled it due to the
> number of false positives and the continual work arounds.  In some
> environments, it might be great. The concept is great, but the
> implementation can be  problematic.
>
>
Based on what I've seen, I agree!  Unfortunately sometimes people have no
idea that their hosting provider is even doing this.  Having never run into
it before, it took a while for me to sort it out.

I was considering trying to add some jQuery to "encode" the form parameters
so there isn't any chance of a URL being caught but so far I haven't come
up with anything that does anything meaningful.  I have managed to flag
when a 403 is caught and added a message so at least it is a little cleaner.

-- 
Mike Walsh - mpwalsh8 at gmail.com

From wp-hackers at thecodecave.com  Thu Jul 19 20:38:43 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Thu, 19 Jul 2012 16:38:43 -0400
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <CAMg3evES+b+m+h09MwqdnRJefSYdrTW8McfsmK2KVpw9V7JRww@mail.gmail.com>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
	<500457AC.90904@thecodecave.com>
	<CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg@mail.gmail.com>
	<CAMg3evGYdZu6z_4-_6c8yifDMfPvL=63JzMjQ6u9-MF3WD6Anw@mail.gmail.com>
	<CAMg3evHHG79FH2k6t56PMCSq3D+0cRHqaXvyaU_bEEjyQe5P1g@mail.gmail.com>
	<50071CD1.7080903@thecodecave.com>
	<CAMg3evFWysbZ2v88-dzNOtxo1-NLgMmT8DF-DWsF1J71batZUA@mail.gmail.com>
	<CAL4EHfkjfbZp8eNuqvFzUKkhmMyAjzWHvw+KuiVZ82sJD2FUQQ@mail.gmail.com>
	<CAEizahKgTw_4GjFwA7d8U_Y3APXPtW_wpz494NhzPbZh7p+G+Q@mail.gmail.com>
	<CAMg3evES+b+m+h09MwqdnRJefSYdrTW8McfsmK2KVpw9V7JRww@mail.gmail.com>
Message-ID: <50087053.2040405@thecodecave.com>

yeah I was going to suggest the same thing, but as you are displaying a 
google form, I wasn't sure if you could do that.  However, if you could 
hash/base64_encode your field values before they are submitted, you 
maybe could get past mod_sec.

Brian Layman

On 7/19/2012 4:20 PM, Mike Walsh wrote:

> On Thu, Jul 19, 2012 at 11:02 AM, Hal Burgiss <hal at burgiss.net> wrote:
>
>> On Thu, Jul 19, 2012 at 7:41 AM, Dion Hulse (dd32) <wordpress at dd32.id.au
>>> wrote:
>>> mod_Security itself is a major PITA most of the time, I'm not saying
>>> it's useless, but that doesn't make it a pain when you come up against
>>> it.
>>>
>> I agree. I had it installed on our servers, and uninstalled it due to the
>> number of false positives and the continual work arounds.  In some
>> environments, it might be great. The concept is great, but the
>> implementation can be  problematic.
>>
>>
> Based on what I've seen, I agree!  Unfortunately sometimes people have no
> idea that their hosting provider is even doing this.  Having never run into
> it before, it took a while for me to sort it out.
>
> I was considering trying to add some jQuery to "encode" the form parameters
> so there isn't any chance of a URL being caught but so far I haven't come
> up with anything that does anything meaningful.  I have managed to flag
> when a 403 is caught and added a message so at least it is a little cleaner.
>


From andre at pixelplexus.co.za  Thu Jul 19 21:26:18 2012
From: andre at pixelplexus.co.za (andre at pixelplexus.co.za)
Date: Thu, 19 Jul 2012 14:26:18 -0700
Subject: [wp-hackers] image attachment bug? (was Re: Featured image
 functionality dissapeared from custom post types after upgrade)
In-Reply-To: <eceeeb6131af76f9a10f1a3da6d58aae.squirrel@webmail.pixelplexus.co.za>
References: <a4d87d098f58ef95f750c16bea8e2a88.squirrel@webmail.pixelplexus.co.za>
	<eceeeb6131af76f9a10f1a3da6d58aae.squirrel@webmail.pixelplexus.co.za>
Message-ID: <b2e33e3c2fa62b2852ab1f095c0a8c40.squirrel@webmail.pixelplexus.co.za>

Howdy

I found  older posts didn't have the meta value '_wp_attached_file'.
Running through them and calling update_attached_file solved my problem.

Just wondering if that shouldn't be happening, or at least attempted in
wp_get_attachment_image or somewhere else in the attachment retrieval
chain, in stead of it just returning a empty string? (provided with a
correct id and the file does exist)

Effectively I had a situation where the trusty template tags were telling
me "yes we have an attachment, but you can't see it, have it or use it"

Wondering, am I missing something or should I be filling it for review?

Thanks

Andr?




> I'm completely baffled. All 1088 of the cutom posts return true for
> has_post_thumbnail and get_post_thumbnail_id returns the correct id.
>
> But for about 600 of them get_the_post_thumbnail returns blank.
>
> Any pointers or ideas would be very much appreciated :-|
>
> Thanks
>
> Andr?
>
> PS. clarifying the below: On the custom post's editing screen the featured
> image doesn't show in the meta box. But the fact that the 'use as featured
> image' link is missing from the image in the media gallery tab seems to
> sugest the right image is set as featured but the image is somehow
> 'borken'.
>
>
>> Hi
>>
>> I see a couple of mentions of similar problems on the forums but no
>> detail
>> of what the problem might be or how to fix. So asking here and will
>> start
>> digging.
>>
>> A site that uses featured images on a custom post type. After upgrade to
>> 3.4.1 when you go to the edit screen for *some* of the custom posts, the
>> featured image is no longer set. If you click on set featured image
>> there
>> is still an image listed in the 'gallery' tab. However there is no 'set
>> as
>> featured link' and the image thumbnail seems blank. Full size lists the
>> image size as (0 ? 0). (so suspect something broken in the db :-| (Got
>> exactly the same result on a clone of the site)
>>
>> Will go through disabling all plugins etc. but its weird that it was
>> working perfectly before the upgrade.
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



From dwain.maralack at gmail.com  Thu Jul 19 22:18:40 2012
From: dwain.maralack at gmail.com (Dwain Maralack)
Date: Fri, 20 Jul 2012 00:18:40 +0200
Subject: [wp-hackers] Empty link names
In-Reply-To: <726EF3DB-49D2-4418-B30C-AC7ECD2269A1@getmoxied.net>
References: <726EF3DB-49D2-4418-B30C-AC7ECD2269A1@getmoxied.net>
Message-ID: <-4933024827308511393@unknownmsgid>

Hi Dmitry, can you paste your php here for more clarity? Also, are you
using wordpress menu ( under appearance) or or page list.

Dwain Maralack
0731576641

On 06 Jul 2012, at 5:09 PM, Dmitry Tokmakov <dmitry at getmoxied.net> wrote:

> Hi all,
> I'm having the issue with wp_nav_menu function,
>
> I have set the theme location in functions.php, created the menu, and output it in the header,
> all is working fine except that all a element's name are empty:
>
> this is the output html:
>
> <ul id="nav-menu">
> <li><a href="link..." ></a>
> </li>
> ...
> </ul>
>
> this is very strange issue, never had it before.
> Does anybody familiar with that issue?
>
> Thank you in advance,
>
> Best,
> Dmitry Tokmakov
> Digital Spin
> digitalsp.in
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mike at newclarity.net  Thu Jul 19 23:01:20 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Thu, 19 Jul 2012 19:01:20 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
Message-ID: <27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>

At the risk of wading into the deep end... :)

I think "Should caching be in core or not?" is the wrong question.  As I think Andrew Gray implied, core should have APIs that enable different types of caching and maybe a "Core plugin" (please don't shoot me for that one :-) that offers a very basic level of caching for those who need it but are afraid to explore the wild west of the plugin repository (or is could just be a regular plugin in the repository.)

Otto explained it well, there are (at least) two types of caching, page and object, and he also explained how complex it can be.  And where there is complexity there is functionality that could benefit from a lot of eyes and a lot of hands.  There are caching patterns to be discovered and turned into an API if only there is will to include such an API in core. One team working on one website typically cannot afford the time to learn what they need to know to get caching right, even with available plugins; "it takes a village."

As an aside the sites our team works on don't use caching yet even though they really need them because of the complexity of the available caching plugins and the relative lack of technical articles surrounding those plugins. So we've stayed away to avoid the problems associated with caching plugins that don't have the support of core (i.e.  I'm pretty sure at least WP Total Cache makes on-the-fly modifications to core, for example.)

If we instead had core caching APIs, there would be hundreds of articles written about them, and at least one of them I expect would be be a very well written article from Otto.

As is, caching is a black art that only a handful of people have really worked on because in part core doesn't have a caching API. And AFAIK none of the plugins available have APIs that can be extended. Instead they are plugins that provide a smorgasbord of functionality which is great as long as you don't have any reason to get into the weeds to understand it yourself and what you need is on their menu. 

So in summary, I would love to see WordPress implement standard caching *APIs* in core that would enable more people to fine tune their caching and so 3rd party caching plugins could be easier to install and be made more reliable.

JMTCW anyway.

-Mike 

P.S. 

On Jul 19, 2012, at 12:57 PM, Otto wrote:
> Finally, here's the key point about caching: *most users don't need
> it*. If you're a person writing a blog that gets less than 1000 hits a
> day, caching ain't going to do much for you. Not really. Sure, your
> site might go from 5 seconds down to >1 second load times, but if
> you're not getting the traffic anyway, then cache isn't going to make
> your traffic increase in any real way. When you start getting some
> real traffic, 3000+ hits a day, that's when you need caching. That's
> when speed of load starts to really matter. The majority of
> WordPress's 70 million+ users aren't getting particularly serious
> traffic. Most websites don't, you know.


In this particular case you are dooming the 5 second page load to a self-fulfilling prophesy of no traffic; at 5 second page loads Google will rank the site lower and likely send them very little traffic. So this argument is just not valid.  

OTOH if a site is already fast because of not much content and few performance draining plugins, well that's a better argument.  WordPress 3.4 is actually really fast, kudos to the team for that.

From ryan.wpmailinglists at gmail.com  Fri Jul 20 06:19:16 2012
From: ryan.wpmailinglists at gmail.com (Ryan WP Mailing Lists)
Date: Thu, 19 Jul 2012 23:19:16 -0700
Subject: [wp-hackers] Your development Setup
In-Reply-To: <FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
Message-ID: <CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>

I noticed many people mentioned PHPstorm.  But the license cost has me
thinking twice about it. Searching for other options I came accross
netbeans which seems promising and its open source and doesnt cost anything.

Anyone have any experience with netbeans or any other free or low cost
recommendations?

From mike at newclarity.net  Fri Jul 20 06:27:31 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 20 Jul 2012 02:27:31 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
Message-ID: <6FC2DBD5-2608-4429-A840-0CB29619788C@newclarity.net>

On Jul 20, 2012, at 2:19 AM, Ryan WP Mailing Lists wrote:
> I noticed many people mentioned PHPstorm.  But the license cost has me
> thinking twice about it. Searching for other options I came accross
> netbeans which seems promising and its open source and doesnt cost anything.
> 
> Anyone have any experience with netbeans or any other free or low cost
> recommendations?

I tried NetBeans before PhpStorm was released. It was lethargic, buggy and relative light on features.  I tried the beta of PhpStorm before version 1.0 was even released and I switched immediately, and never looked back. Now it's on 4.0 versions in fewer years, and it is light years better than NetBeans.

Considering how much I've leveraged PhpStorm for income, the amount I paid for it is probably the best value per dollar I've ever spent on software in 20+ years.  Period.

FWIW.

-Mike


From aspratley at gmail.com  Fri Jul 20 06:32:02 2012
From: aspratley at gmail.com (Andrew Spratley)
Date: Fri, 20 Jul 2012 09:32:02 +0300
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
Message-ID: <CAKNYAgADBuVEn4hU6hbwUze5BaxkR6=akuNr6=Kf2VN7LfcN4Q@mail.gmail.com>

I use netbeans (on a mac). I haven't had a chance to check out
PHPstorm so can't really compare the two. Netbeans integrates with
xdebug so you get built in debugging and can step through your code
line by line (a good learning aid as well to find out how WP ticks).
There's also "intellisense"/autocomplete to let you view method
definitions/phpdocs. If you put your entire WP install in a project
you'll get auto suggest for all the WP code as well.

The IDE is a bit heavy on memory and at least for me the debugger can
be littler iffy. For small edits I find myself just opening a small
text editor out of convenience, but Netbeans, IMO is a decent PHP IDE.

On Fri, Jul 20, 2012 at 9:19 AM, Ryan WP Mailing Lists
<ryan.wpmailinglists at gmail.com> wrote:
> I noticed many people mentioned PHPstorm.  But the license cost has me
> thinking twice about it. Searching for other options I came accross
> netbeans which seems promising and its open source and doesnt cost anything.
>
> Anyone have any experience with netbeans or any other free or low cost
> recommendations?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From almog.baku at gmail.com  Fri Jul 20 07:15:45 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Fri, 20 Jul 2012 10:15:45 +0300
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAKNYAgADBuVEn4hU6hbwUze5BaxkR6=akuNr6=Kf2VN7LfcN4Q@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
	<CAKNYAgADBuVEn4hU6hbwUze5BaxkR6=akuNr6=Kf2VN7LfcN4Q@mail.gmail.com>
Message-ID: <CALncZpSkiiDNCc+OuXNdmoVLmbK=uBvb+3U3Jta_o0fzuyb+pg@mail.gmail.com>

I am using eclipse pdt. The pros of eclipse with php :)
Just try and see.

?????? ??? ????, 20 ????? 2012, Andrew Spratley ???:

> I use netbeans (on a mac). I haven't had a chance to check out
> PHPstorm so can't really compare the two. Netbeans integrates with
> xdebug so you get built in debugging and can step through your code
> line by line (a good learning aid as well to find out how WP ticks).
> There's also "intellisense"/autocomplete to let you view method
> definitions/phpdocs. If you put your entire WP install in a project
> you'll get auto suggest for all the WP code as well.
>
> The IDE is a bit heavy on memory and at least for me the debugger can
> be littler iffy. For small edits I find myself just opening a small
> text editor out of convenience, but Netbeans, IMO is a decent PHP IDE.
>
> On Fri, Jul 20, 2012 at 9:19 AM, Ryan WP Mailing Lists
> <ryan.wpmailinglists at gmail.com <javascript:;>> wrote:
> > I noticed many people mentioned PHPstorm.  But the license cost has me
> > thinking twice about it. Searching for other options I came accross
> > netbeans which seems promising and its open source and doesnt cost
> anything.
> >
> > Anyone have any experience with netbeans or any other free or low cost
> > recommendations?
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From hannit at codeart.co.il  Fri Jul 20 07:37:10 2012
From: hannit at codeart.co.il (Hannit Cohen)
Date: Fri, 20 Jul 2012 10:37:10 +0300
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAKNYAgADBuVEn4hU6hbwUze5BaxkR6=akuNr6=Kf2VN7LfcN4Q@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
	<CAKNYAgADBuVEn4hU6hbwUze5BaxkR6=akuNr6=Kf2VN7LfcN4Q@mail.gmail.com>
Message-ID: <CAHG1zgjmnu3P6HETcmR9_AjQ1zSsHOxv6qqaPa=K7SGCtr__OQ@mail.gmail.com>

Must say I tried both and didn't like them.
PHPStorm is far better to my opinion than NetBeans, but both were too much
of a bother.
I use sublimetext with some extra components (ZenCoding, sass, etc...)

On Fri, Jul 20, 2012 at 9:32 AM, Andrew Spratley <aspratley at gmail.com>wrote:

> I use netbeans (on a mac). I haven't had a chance to check out
> PHPstorm so can't really compare the two. Netbeans integrates with
> xdebug so you get built in debugging and can step through your code
> line by line (a good learning aid as well to find out how WP ticks).
> There's also "intellisense"/autocomplete to let you view method
> definitions/phpdocs. If you put your entire WP install in a project
> you'll get auto suggest for all the WP code as well.
>
> The IDE is a bit heavy on memory and at least for me the debugger can
> be littler iffy. For small edits I find myself just opening a small
> text editor out of convenience, but Netbeans, IMO is a decent PHP IDE.
>
> On Fri, Jul 20, 2012 at 9:19 AM, Ryan WP Mailing Lists
> <ryan.wpmailinglists at gmail.com> wrote:
> > I noticed many people mentioned PHPstorm.  But the license cost has me
> > thinking twice about it. Searching for other options I came accross
> > netbeans which seems promising and its open source and doesnt cost
> anything.
> >
> > Anyone have any experience with netbeans or any other free or low cost
> > recommendations?
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
???? ???
???-??? ????? ??"?
054-6280-490
hannit at codeart.co.il
http://codeart.co.il

From dpac.mittal2 at gmail.com  Fri Jul 20 07:50:46 2012
From: dpac.mittal2 at gmail.com (Deepak Mittal)
Date: Fri, 20 Jul 2012 13:20:46 +0530
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAHG1zgjmnu3P6HETcmR9_AjQ1zSsHOxv6qqaPa=K7SGCtr__OQ@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
	<CAKNYAgADBuVEn4hU6hbwUze5BaxkR6=akuNr6=Kf2VN7LfcN4Q@mail.gmail.com>
	<CAHG1zgjmnu3P6HETcmR9_AjQ1zSsHOxv6qqaPa=K7SGCtr__OQ@mail.gmail.com>
Message-ID: <CABZq-sg-hKEA=tG-Vh05ZnLUDXpCG0HKXH001_BgZWFQ32tyYg@mail.gmail.com>

On Fri, Jul 20, 2012 at 1:07 PM, Hannit Cohen <hannit at codeart.co.il> wrote:

> Must say I tried both and didn't like them.
> PHPStorm is far better to my opinion than NetBeans, but both were too much
> of a bother.
> I use sublimetext with some extra components (ZenCoding, sass, etc...)
>

+1 for sublimetext


>
> On Fri, Jul 20, 2012 at 9:32 AM, Andrew Spratley <aspratley at gmail.com
> >wrote:
>
> > I use netbeans (on a mac). I haven't had a chance to check out
> > PHPstorm so can't really compare the two. Netbeans integrates with
> > xdebug so you get built in debugging and can step through your code
> > line by line (a good learning aid as well to find out how WP ticks).
> > There's also "intellisense"/autocomplete to let you view method
> > definitions/phpdocs. If you put your entire WP install in a project
> > you'll get auto suggest for all the WP code as well.
> >
> > The IDE is a bit heavy on memory and at least for me the debugger can
> > be littler iffy. For small edits I find myself just opening a small
> > text editor out of convenience, but Netbeans, IMO is a decent PHP IDE.
> >
> > On Fri, Jul 20, 2012 at 9:19 AM, Ryan WP Mailing Lists
> > <ryan.wpmailinglists at gmail.com> wrote:
> > > I noticed many people mentioned PHPstorm.  But the license cost has me
> > > thinking twice about it. Searching for other options I came accross
> > > netbeans which seems promising and its open source and doesnt cost
> > anything.
> > >
> > > Anyone have any experience with netbeans or any other free or low cost
> > > recommendations?
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> ???? ???
> ???-??? ????? ??"?
> 054-6280-490
> hannit at codeart.co.il
> http://codeart.co.il
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Regards,
Deepak Mittal,
Twitter - @dpacmittal

From mail at scribu.net  Fri Jul 20 12:41:33 2012
From: mail at scribu.net (scribu)
Date: Fri, 20 Jul 2012 15:41:33 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
Message-ID: <CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>

On Fri, Jul 20, 2012 at 2:01 AM, Mike Schinkel <mike at newclarity.net> wrote:

> So in summary, I would love to see WordPress implement standard caching
> *APIs* in core that would enable more people to fine tune their caching and
> so 3rd party caching plugins could be easier to install and be made more
> reliable.


WordPress already has a standard object caching API: wp_cache_set(),
wp_cache_get(), wp_cache_delete(). It is used extensively througout Core
and there already are several 3rd party caching plugins that implement that
API.

If you meant a standard _page_ caching API, you should have said so.

-- 
http://scribu.net

From almog.baku at gmail.com  Fri Jul 20 13:10:29 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Fri, 20 Jul 2012 16:10:29 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
Message-ID: <CALncZpQ2wYSyJ2xTjx-w7qJY9Nd8HP8Z2SJkM8LnR8xwOcaZzQ@mail.gmail.com>

Otto,

   1. First of all, great replay
   2. I am really not agree with you. The common user NEED caching. you may
   started out from the assumption that the most users using near-by hosting..
   today, the internet is so global that many israeli users for example, host
   ther website over dreamhost.. or maybe US client browse to israeli website..
   Also, google detect this website as slow..
   3. You can cache pages and keep the website update by db.. (by removing
   page cache every saving)
   4. With the default installation, wordpress is really tiny and small.
   But today, a lot of programers develop over WP website who are basicly
   simple but have a lot of components and actually rich(sliders, multiple
   post-type etc).. I think we should consider it.
   5. Maybe if the core will recognize the common mem-caching system and
   try to connect to them automatically(with option do disable of course) it
   will be awesome.

Mike,

   1. You offer here a great idea!
   2. I think we should at least develop api(with basic implementation)
   that the 3rd-party plugins can extend and improve.
   3. If there will be some api-interface, and we will encourage for it in
   the plugin repository it will serve us well.


Scribu,

   1. By my opinion the current system isn't good enough.
   2. Actually the current ststem is joke. it only save some vars in global
   array.. mean nothing.



*I think that minify and browser caching at least are the minumum.* what do
you think guys?

~ Almog



On Fri, Jul 20, 2012 at 3:41 PM, scribu <mail at scribu.net> wrote:

> On Fri, Jul 20, 2012 at 2:01 AM, Mike Schinkel <mike at newclarity.net>
> wrote:
>
> > So in summary, I would love to see WordPress implement standard caching
> > *APIs* in core that would enable more people to fine tune their caching
> and
> > so 3rd party caching plugins could be easier to install and be made more
> > reliable.
>
>
> WordPress already has a standard object caching API: wp_cache_set(),
> wp_cache_get(), wp_cache_delete(). It is used extensively througout Core
> and there already are several 3rd party caching plugins that implement that
> API.
>
> If you meant a standard _page_ caching API, you should have said so.
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From lionel.pointet at globalis-ms.com  Fri Jul 20 14:22:55 2012
From: lionel.pointet at globalis-ms.com (Lionel Pointet)
Date: Fri, 20 Jul 2012 16:22:55 +0200
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CALncZpQ2wYSyJ2xTjx-w7qJY9Nd8HP8Z2SJkM8LnR8xwOcaZzQ@mail.gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<CALncZpQ2wYSyJ2xTjx-w7qJY9Nd8HP8Z2SJkM8LnR8xwOcaZzQ@mail.gmail.com>
Message-ID: <500969BF.8030406@globalis-ms.com>

You say you can clear cache with each page saving, but when Otto says 
"page cache", it means a whole HTML page, generated with one post (as 
you mean) and with some other components like nav-menus, sidebars and 
widgets which can access to other contents stored in DB.
So you cannot just think a web page is one post: you said it yourself, 
developers bring some rich components.

Indeed, since it's the developers which bring those components, why 
aren't they considering their cache? Why is it the core's 
responsibility? It just won't work.

And why aren't you happy with the Object Cache API? It is pretty simple, 
useful enough and the default saving (an array in a class) is actually 
good to maintain the number of queries as low as possible on each page 
with a default installation. But if you want, WordPress let you add a 
persistant system over that API (see the object-cache.php drop-in and 
the multiple classes available on the web): you just have to provide 
your class interfacing with that system, and it's already working thanks 
to the API calls done all over the core...
I think choices made are good enough to let user run WP on a lot of 
hosting services, let developers take care of their own caching systems 
easily and keep WordPress as light as possible.

Speaking about 3rp party optimizations like minifying and stuff, WP core 
could take some responsibilities here but I don't think this is a top 
priority since there are plugins doing it already and it's much about 
comfort, not functionality.

Le 20/07/2012 15:10, Almog Baku a ?crit :
> Otto,
>
>     1. First of all, great replay
>     2. I am really not agree with you. The common user NEED caching. you may
>     started out from the assumption that the most users using near-by hosting..
>     today, the internet is so global that many israeli users for example, host
>     ther website over dreamhost.. or maybe US client browse to israeli website..
>     Also, google detect this website as slow..
>     3. You can cache pages and keep the website update by db.. (by removing
>     page cache every saving)
>     4. With the default installation, wordpress is really tiny and small.
>     But today, a lot of programers develop over WP website who are basicly
>     simple but have a lot of components and actually rich(sliders, multiple
>     post-type etc).. I think we should consider it.
>     5. Maybe if the core will recognize the common mem-caching system and
>     try to connect to them automatically(with option do disable of course) it
>     will be awesome.
>
> Mike,
>
>     1. You offer here a great idea!
>     2. I think we should at least develop api(with basic implementation)
>     that the 3rd-party plugins can extend and improve.
>     3. If there will be some api-interface, and we will encourage for it in
>     the plugin repository it will serve us well.
>
>
> Scribu,
>
>     1. By my opinion the current system isn't good enough.
>     2. Actually the current ststem is joke. it only save some vars in global
>     array.. mean nothing.
>
>
>
> *I think that minify and browser caching at least are the minumum.* what do
> you think guys?
>
> ~ Almog
>
>
>
> On Fri, Jul 20, 2012 at 3:41 PM, scribu <mail at scribu.net> wrote:
>
>> On Fri, Jul 20, 2012 at 2:01 AM, Mike Schinkel <mike at newclarity.net>
>> wrote:
>>
>>> So in summary, I would love to see WordPress implement standard caching
>>> *APIs* in core that would enable more people to fine tune their caching
>> and
>>> so 3rd party caching plugins could be easier to install and be made more
>>> reliable.
>>
>> WordPress already has a standard object caching API: wp_cache_set(),
>> wp_cache_get(), wp_cache_delete(). It is used extensively througout Core
>> and there already are several 3rd party caching plugins that implement that
>> API.
>>
>> If you meant a standard _page_ caching API, you should have said so.
>>
>> --
>> http://scribu.net
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From kwight at kwight.ca  Fri Jul 20 14:59:35 2012
From: kwight at kwight.ca (Kirk Wight)
Date: Fri, 20 Jul 2012 10:59:35 -0400
Subject: [wp-hackers] setting category on publish
Message-ID: <CAFQFuXOHdokAeW6F8NAQ+zc6_WCz-opAvHuR0iJ3XDM7h+EenQ@mail.gmail.com>

Is there a way to assign a category to a custom post type upon its
scheduled publishing?

We have an online magazine that is scheduled to be live (published) at
midnight. What shows on the front page, though, is dependent on which issue
(custom post type) is assigned the category "current issue". This means the
category would have to be removed from one issue and applied to the new
issue when the new issue's publish time occurs.

Any ideas very much appreciated!

Kirk

From filippo.pisano at gmail.com  Fri Jul 20 15:08:06 2012
From: filippo.pisano at gmail.com (Filippo Pisano)
Date: Fri, 20 Jul 2012 17:08:06 +0200
Subject: [wp-hackers] setting category on publish
In-Reply-To: <CAFQFuXOHdokAeW6F8NAQ+zc6_WCz-opAvHuR0iJ3XDM7h+EenQ@mail.gmail.com>
References: <CAFQFuXOHdokAeW6F8NAQ+zc6_WCz-opAvHuR0iJ3XDM7h+EenQ@mail.gmail.com>
Message-ID: <CABCyq-nzn_Dx5wQMdZxPe_n4iJNbn01PbW6PB0XFpCQmVM24zA@mail.gmail.com>

Hi Kirk,

you can add a hook to post publish action to add the correct terms to the
post being published.




Filippo


On Fri, Jul 20, 2012 at 4:59 PM, Kirk Wight <kwight at kwight.ca> wrote:

> Is there a way to assign a category to a custom post type upon its
> scheduled publishing?
>
> We have an online magazine that is scheduled to be live (published) at
> midnight. What shows on the front page, though, is dependent on which issue
> (custom post type) is assigned the category "current issue". This means the
> category would have to be removed from one issue and applied to the new
> issue when the new issue's publish time occurs.
>
> Any ideas very much appreciated!
>
> Kirk
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From wp-hackers at thecodecave.com  Fri Jul 20 15:09:16 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Fri, 20 Jul 2012 11:09:16 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
Message-ID: <5009749C.4000306@thecodecave.com>

Has anyone used the PHPStorm's remote debugger with plugins or WP core?

Brian Layman

On 7/20/2012 2:19 AM, Ryan WP Mailing Lists wrote:
> I noticed many people mentioned PHPstorm.  But the license cost has me
> thinking twice about it.


From wordpress at zed1.com  Fri Jul 20 15:13:25 2012
From: wordpress at zed1.com (Mike Little)
Date: Fri, 20 Jul 2012 16:13:25 +0100
Subject: [wp-hackers] setting category on publish
In-Reply-To: <CAFQFuXOHdokAeW6F8NAQ+zc6_WCz-opAvHuR0iJ3XDM7h+EenQ@mail.gmail.com>
References: <CAFQFuXOHdokAeW6F8NAQ+zc6_WCz-opAvHuR0iJ3XDM7h+EenQ@mail.gmail.com>
Message-ID: <CAMb54M07wvb8CiDwsRF6dDucYUryve6B4tap_zrrgU8eYg1UNg@mail.gmail.com>

On 20 July 2012 15:59, Kirk Wight <kwight at kwight.ca> wrote:

> Is there a way to assign a category to a custom post type upon its
> scheduled publishing?
>
>
Take a look at the action transition_post_status (
http://codex.wordpress.org/Post_Status_Transitions) which is triggered as a
post's status changes.
You can test whether the transition is to the 'publish' status, and of the
correct post type, and assign/change the category accordingly.

Mike
-- 
Mike Little
http://zed1.com/

From mail at scribu.net  Fri Jul 20 15:14:06 2012
From: mail at scribu.net (scribu)
Date: Fri, 20 Jul 2012 18:14:06 +0300
Subject: [wp-hackers] Your development Setup
In-Reply-To: <5009749C.4000306@thecodecave.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
	<5009749C.4000306@thecodecave.com>
Message-ID: <CABzSYNO0iknYb5g6eb8kQ5j=X=yUG=EYvMhmO+RswgBL99GNJw@mail.gmail.com>

On Fri, Jul 20, 2012 at 6:09 PM, Brian Layman <wp-hackers at thecodecave.com>wrote:

> Has anyone used the PHPStorm's remote debugger with plugins or WP core?
>

All editors use XDEBUG under the hood for remote debugging. I've debugged
WP with vim:

http://scribu.net/blog/efficient-php-debugging-in-vim.html

-- 
http://scribu.net

From kevinjohngallagher at hotmail.com  Fri Jul 20 15:15:59 2012
From: kevinjohngallagher at hotmail.com (Kevinjohn Gallagher)
Date: Fri, 20 Jul 2012 16:15:59 +0100
Subject: [wp-hackers] wanting to select no categories
Message-ID: <BLU150-W550913539072368CB7A48ACCD80@phx.gbl>



Folks,
How do I set a post to have NO categories?(yeah, i know, sounds simple)
Every time I uncheck categories, it adds the default in as standard. 
Kev



 		 	   		  

From otto at ottodestruct.com  Fri Jul 20 15:20:53 2012
From: otto at ottodestruct.com (Otto)
Date: Fri, 20 Jul 2012 10:20:53 -0500
Subject: [wp-hackers] wanting to select no categories
In-Reply-To: <BLU150-W550913539072368CB7A48ACCD80@phx.gbl>
References: <BLU150-W550913539072368CB7A48ACCD80@phx.gbl>
Message-ID: <CAD-FghzHT+ByaCaiNbq9915xf+NkPmVnDht=9OxS7Z8_ZBhaXg@mail.gmail.com>

On Fri, Jul 20, 2012 at 10:15 AM, Kevinjohn Gallagher
<kevinjohngallagher at hotmail.com> wrote:
> Folks,
> How do I set a post to have NO categories?(yeah, i know, sounds simple)
> Every time I uncheck categories, it adds the default in as standard.

The default "Uncategorized" category is what gets returned when the
post has no categories. Thus it appears to be in the default category
even when it's not (and it will be saved as such, meaning that it gets
the default category on save).

Bottom line: A post must have a cat. All of the core assumes that a
post has a cat, pretty much. If you remove all the cats, then the
default cat will be chosen.

-Otto

From wordpress at zed1.com  Fri Jul 20 16:05:04 2012
From: wordpress at zed1.com (Mike Little)
Date: Fri, 20 Jul 2012 17:05:04 +0100
Subject: [wp-hackers] wanting to select no categories
In-Reply-To: <BLU150-W550913539072368CB7A48ACCD80@phx.gbl>
References: <BLU150-W550913539072368CB7A48ACCD80@phx.gbl>
Message-ID: <CAMb54M1P6hYu1GiaSW0WucjPDGOPrj=O501k-5jugQJKifLtaA@mail.gmail.com>

On 20 July 2012 16:15, Kevinjohn Gallagher
<kevinjohngallagher at hotmail.com>wrote:

> Folks,
> How do I set a post to have NO categories?(yeah, i know, sounds simple)
> Every time I uncheck categories, it adds the default in as standard.
> Kev
>
>
If you want no categories for any posts you can remove the taxonomy from
posts:

add_action( 'init', 'unregister_categories_from_posts');
function unregister_categories_from_posts(){
global $wp_taxonomies;
$taxonomy = 'category';
 $post_type = 'post';
 if ( taxonomy_exists( $taxonomy)) {
 $tax_entry = $wp_taxonomies[$taxonomy];
foreach( $tax_entry->object_type as $index => $object_type )
 if ( $post_type ==  $object_type ) {
unset( $tax_entry->object_type[$index] );
 break;
}
}
 // or just remove the taxonomy, but other post type may use it.
//unset( $wp_taxonomies[$taxonomy]);
}


But if you only want *some* posts to have no category, you cannot as Otto
explained. Your best bet would be create a category to represent 'no
category' and make it the default category (so no action is required of the
user). Then hide that category from appearing in the theme, and if you
wanted to you could also hide it from the back end UI too.


Mike
-- 
Mike Little
http://zed1.com/

From ryan at pixopoint.com  Fri Jul 20 16:19:05 2012
From: ryan at pixopoint.com (Ryan Hellyer)
Date: Fri, 20 Jul 2012 18:19:05 +0200
Subject: [wp-hackers] Caching as part of the core
Message-ID: <CADTfcvawUG0qPH4z9c=YFz7bzR9nq9Pdr79YeiCK2fyqwUiAJA@mail.gmail.com>

As pointed out by Scribu, there is already a caching API built into
WordPress core. It is very easy to use.

It would be possible to force the caching API to use transients by
default instead of relying on an object cache, but that may
potentially slow things down sometimes, hence it's left up to
individual plugin/theme developers to utilize the caching API in the
optimal way.

I see no point in changing the way WordPress core handles caching. It
works pretty slick from my perspective.

You also mentioned minification, but that is not a caching IMO, that
is a separate issue, albeit one which is often applied during the
caching process.



> Message: 2
> Date: Fri, 20 Jul 2012 16:10:29 +0300
> From: Almog Baku <almog.baku at gmail.com>
> Subject: Re: [wp-hackers] Caching as part of the core
> To: wp-hackers at lists.automattic.com
> Message-ID:
>         <CALncZpQ2wYSyJ2xTjx-w7qJY9Nd8HP8Z2SJkM8LnR8xwOcaZzQ at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
......
> Mike,
>
>    1. You offer here a great idea!
>    2. I think we should at least develop api(with basic implementation)
>    that the 3rd-party plugins can extend and improve.
>    3. If there will be some api-interface, and we will encourage for it in
>    the plugin repository it will serve us well.

From almog.baku at gmail.com  Fri Jul 20 17:14:29 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Fri, 20 Jul 2012 20:14:29 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CADTfcvawUG0qPH4z9c=YFz7bzR9nq9Pdr79YeiCK2fyqwUiAJA@mail.gmail.com>
References: <CADTfcvawUG0qPH4z9c=YFz7bzR9nq9Pdr79YeiCK2fyqwUiAJA@mail.gmail.com>
Message-ID: <CALncZpQ-HyVSNq_541bG=8atsN612WUO5+s9SKTyXE9VA2RfYw@mail.gmail.com>

Caching and minification are both subjects about WP Optimization.

I was hosted some Israeli WP website in U.S(Dreamhost) and in Europe,
England(UK2) - and my results is that I MUST use some caching for my
website(for ex. www.kravi.org). This websites are now hosted in Israeli
hosting supplier but still. I need caching for run the fastly and improve
the SEO rate.

kravi.org for example, is very basic website.. some theme, some plugins,
and nice traffic(no more than 100 uniqes for a day).
And still, by YSlow rate, and by Google PageSpeed rate- the basic WP not
passing much fields like minification, caching, browser caching and other.
BUT!! I am not usual user. I am advanced user- I am web developer- 8 years
so far. regrular user/developer wouldn't even know about caching or relazie
the meaning of using it.

In the current status we damage the users by not giving them basic feature
as a part of the core. and the users who already installed cache plugins
are confused with configure them..

And the worst issue- the plugins today doesn't know how to deal with
caching.

~ Almog.

P.S about the current caching api - can somone send me link to any
documentation? I know only about the variable caching.

On Fri, Jul 20, 2012 at 7:19 PM, Ryan Hellyer <ryan at pixopoint.com> wrote:

> As pointed out by Scribu, there is already a caching API built into
> WordPress core. It is very easy to use.
>
> It would be possible to force the caching API to use transients by
> default instead of relying on an object cache, but that may
> potentially slow things down sometimes, hence it's left up to
> individual plugin/theme developers to utilize the caching API in the
> optimal way.
>
> I see no point in changing the way WordPress core handles caching. It
> works pretty slick from my perspective.
>
> You also mentioned minification, but that is not a caching IMO, that
> is a separate issue, albeit one which is often applied during the
> caching process.
>
>
>
> > Message: 2
> > Date: Fri, 20 Jul 2012 16:10:29 +0300
> > From: Almog Baku <almog.baku at gmail.com>
> > Subject: Re: [wp-hackers] Caching as part of the core
> > To: wp-hackers at lists.automattic.com
> > Message-ID:
> >         <
> CALncZpQ2wYSyJ2xTjx-w7qJY9Nd8HP8Z2SJkM8LnR8xwOcaZzQ at mail.gmail.com>
> > Content-Type: text/plain; charset=ISO-8859-1
> ......
> > Mike,
> >
> >    1. You offer here a great idea!
> >    2. I think we should at least develop api(with basic implementation)
> >    that the 3rd-party plugins can extend and improve.
> >    3. If there will be some api-interface, and we will encourage for it
> in
> >    the plugin repository it will serve us well.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From kwight at kwight.ca  Fri Jul 20 17:37:18 2012
From: kwight at kwight.ca (Kirk Wight)
Date: Fri, 20 Jul 2012 13:37:18 -0400
Subject: [wp-hackers] setting category on publish
In-Reply-To: <CAMb54M07wvb8CiDwsRF6dDucYUryve6B4tap_zrrgU8eYg1UNg@mail.gmail.com>
References: <CAFQFuXOHdokAeW6F8NAQ+zc6_WCz-opAvHuR0iJ3XDM7h+EenQ@mail.gmail.com>
	<CAMb54M07wvb8CiDwsRF6dDucYUryve6B4tap_zrrgU8eYg1UNg@mail.gmail.com>
Message-ID: <CAFQFuXPRRY3aGnfN2-91mPN71o-G2TVZFBhAkghJ-7RtXd5bWg@mail.gmail.com>

Perfect, just what I was looking for, thanks!

On 20 July 2012 11:13, Mike Little <wordpress at zed1.com> wrote:

> On 20 July 2012 15:59, Kirk Wight <kwight at kwight.ca> wrote:
>
> > Is there a way to assign a category to a custom post type upon its
> > scheduled publishing?
> >
> >
> Take a look at the action transition_post_status (
> http://codex.wordpress.org/Post_Status_Transitions) which is triggered as
> a
> post's status changes.
> You can test whether the transition is to the 'publish' status, and of the
> correct post type, and assign/change the category accordingly.
>
> Mike
> --
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mpwalsh8 at gmail.com  Fri Jul 20 17:40:50 2012
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Fri, 20 Jul 2012 13:40:50 -0400
Subject: [wp-hackers] What would strip $_POST before 'init' runs?
In-Reply-To: <50087053.2040405@thecodecave.com>
References: <CAMg3evEN2_ptHRZ04LSQo6MgEr8GhZjGmygVbyW4zjVLHj6BpQ@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48C@tbs-sbs01.TBS.local>
	<CAMg3evG-hRtNbLDamO5qEbbyoSJeov4dK1hKrvFU44pZr0q-_Q@mail.gmail.com>
	<CD47955B7E065D48AB5CF226C2ED75C050C48D@tbs-sbs01.TBS.local>
	<CAMg3evEAcwU7-910JkOBVi9JWGFNb4QxoX_t+phBVnUysVQDDw@mail.gmail.com>
	<500457AC.90904@thecodecave.com>
	<CAMg3evG=9KmViBRbSyk+PvCMxJjPwkP+pJpHQaa1iB=Su5kNzg@mail.gmail.com>
	<CAMg3evGYdZu6z_4-_6c8yifDMfPvL=63JzMjQ6u9-MF3WD6Anw@mail.gmail.com>
	<CAMg3evHHG79FH2k6t56PMCSq3D+0cRHqaXvyaU_bEEjyQe5P1g@mail.gmail.com>
	<50071CD1.7080903@thecodecave.com>
	<CAMg3evFWysbZ2v88-dzNOtxo1-NLgMmT8DF-DWsF1J71batZUA@mail.gmail.com>
	<CAL4EHfkjfbZp8eNuqvFzUKkhmMyAjzWHvw+KuiVZ82sJD2FUQQ@mail.gmail.com>
	<CAEizahKgTw_4GjFwA7d8U_Y3APXPtW_wpz494NhzPbZh7p+G+Q@mail.gmail.com>
	<CAMg3evES+b+m+h09MwqdnRJefSYdrTW8McfsmK2KVpw9V7JRww@mail.gmail.com>
	<50087053.2040405@thecodecave.com>
Message-ID: <CAMg3evEqej5-=Qh=EukGj5JrBZ80m+_y2c4akBucOJTJ64jd6w@mail.gmail.com>

On Thu, Jul 19, 2012 at 4:38 PM, Brian Layman <wp-hackers at thecodecave.com>wrote:

> yeah I was going to suggest the same thing, but as you are displaying a
> google form, I wasn't sure if you could do that.  However, if you could
> hash/base64_encode your field values before they are submitted, you maybe
> could get past mod_sec.
>
> Brian Layman
>
>
>
I actually spent some time yesterday afternoon trying to do exactly that
using jQuery.  Unfortunately I couldn't get anything to work correctly.  I
need to look at it again because I think that is the only way to ensure my
plugin will consistently work although I've only run into this situation
twice now.

Mike

-- 
Mike Walsh - mpwalsh8 at gmail.com

From mike at newclarity.net  Fri Jul 20 18:38:40 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 20 Jul 2012 14:38:40 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
Message-ID: <47453669-F68C-4375-9922-B14C826C1780@newclarity.net>

On Jul 20, 2012, at 8:41 AM, scribu <mail at scribu.net> wrote:
> If you meant a standard _page_ caching API, you should have said so.

Why the condescending tone?

-Mike

From chason at gmail.com  Fri Jul 20 18:38:58 2012
From: chason at gmail.com (Chason Chaffin)
Date: Fri, 20 Jul 2012 11:38:58 -0700
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CALncZpQ-HyVSNq_541bG=8atsN612WUO5+s9SKTyXE9VA2RfYw@mail.gmail.com>
References: <CADTfcvawUG0qPH4z9c=YFz7bzR9nq9Pdr79YeiCK2fyqwUiAJA@mail.gmail.com>
	<CALncZpQ-HyVSNq_541bG=8atsN612WUO5+s9SKTyXE9VA2RfYw@mail.gmail.com>
Message-ID: <CAGw2N3W5egXQNzDEbFFM3AZM6aJ8WnrPZD058AiB+9OVx7-iTA@mail.gmail.com>

Why not just install mod_pagespeed on the server?

It keeps coming back to this, WordPress core should not be in the business
of adding features to make people who don't know what they're doing just
get themselves into more trouble. Adding all these features increases
maintenance for the core devs, and adds unneeded complexity and feature
bloat for people who do know what they're doing. Additionally, the results
of Google Page Speed and any other tools like that have more to do with
minification and browser caching which is NOT object or page caching and
has very little do with them. AND they are also misleadingly complex topics
that would be very difficult to find a "standard" setting that would please
everyone or even most people.

If someone doesn't know what they are doing it is far better to suggest to
them to hire someone who does, rather than build extra code into the system
to hold their hand. This is not a usability issue, this is an issue with
complexity. You can't just program away complexity, and caching,
minification, and page optimization is something that should be done by a
professional that knows what they are doing. The reason WordPress has such
an awesome plugin architecture is to allow for extensibility like this.

Here's the documentation on the existing API that came up as the first
result of a google search for "WordPress caching API":
http://codex.wordpress.org/Class_Reference/WP_Object_Cache

The benefits of building a more advanced caching/page optimization system
do not outweigh the costs in the calculus of development.

On Fri, Jul 20, 2012 at 10:14 AM, Almog Baku <almog.baku at gmail.com> wrote:

> And still, by YSlow rate, and by Google PageSpeed rate- the basic WP not
> passing much fields like minification, caching, browser caching and other.
>

From mike at etchsoftware.com  Fri Jul 20 18:44:35 2012
From: mike at etchsoftware.com (Mike Bijon)
Date: Fri, 20 Jul 2012 11:44:35 -0700
Subject: [wp-hackers] Caching as part of the core
Message-ID: <CABwjQByiJ+pi0edg6iZCyRKX2_DB5LLX7U8zLuDAtgr=A8Et7A@mail.gmail.com>

Caching has always been heavily-debated. Putting aside the variety of cache
strategies, every site has slightly different effort vs. cost requirements
(ie: Akamai is great to work with, but only one of my clients is willing to
afford it).

Working with caching in Drupal recently, they have a much larger & more
time-consuming chore to maintain core page caching plus hooks for
customizing caching (which is largely what is done in WordPress now). And
even with page caching in core it's often not used correctly or effectively.

Personally, I think it would take less effort to educate the community on
the types, tradeoffs, & need for caching than to build & maintain some
flavor of it in our core. That would resolve as many problems as adding
caching to core would, but not create a new set of complexities for the
core team.

And, if you still want caching in core, take a look at these recent slides
on fragment caching,
http://www.ethitter.com/slides/wcmia-caching-scaling-2012-02-18/#slide-0.
It's close to the ideal case many people have advocated for in this thread,
but it's very app & site-specific. Anyone have an idea how to build
fragment caching in a globally-functional, non-site-specific way?

From mike at newclarity.net  Fri Jul 20 19:08:48 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 20 Jul 2012 15:08:48 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
Message-ID: <1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>

On Jul 20, 2012, at 8:41 AM, scribu wrote:
> If you meant a standard _page_ caching API, you should have said so.

Also, there are more potential types of caching that _page_ and object caching; there is fragment, query, widget, menu, and http to name a few.

-Mike

From otto at ottodestruct.com  Sat Jul 21 06:07:35 2012
From: otto at ottodestruct.com (Otto)
Date: Sat, 21 Jul 2012 01:07:35 -0500
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
Message-ID: <CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>

On Fri, Jul 20, 2012 at 2:08 PM, Mike Schinkel <mike at newclarity.net> wrote:
>> If you meant a standard _page_ caching API, you should have said so.
>
> Also, there are more potential types of caching that _page_ and object caching; there is fragment, query, widget, menu, and http to name a few.

Except for page caching, aren't all of those pretty much capable of
being handled with the object cache?


-Otto

From ryannmicua at gmail.com  Sat Jul 21 09:13:50 2012
From: ryannmicua at gmail.com (Ryann Micua)
Date: Sat, 21 Jul 2012 17:13:50 +0800
Subject: [wp-hackers] wanting to select no categories
In-Reply-To: <mailman.32677.1342809560.1433.wp-hackers@lists.automattic.com>
References: <mailman.32677.1342809560.1433.wp-hackers@lists.automattic.com>
Message-ID: <500A72CE.6050200@gmail.com>

no need to create a new "no category" category.. you already have it - 
"uncategorized" ^^

You can hide that instead.

On Saturday, 21 July, 2012 02:39 AM, 
wp-hackers-request at lists.automattic.com wrote:
> But if you only want*some*  posts to have no category, you cannot as Otto
> explained. Your best bet would be create a category to represent 'no
> category' and make it the default category (so no action is required of the
> user). Then hide that category from appearing in the theme, and if you
> wanted to you could also hide it from the back end UI too.

-- 
*Ryann Micua*
/Web Developer/
------------------------------------------------------------------------

Website: /www.pogidude.com/
Skype: /rmicua/
Mobile: /+639169273059/


From ryannmicua at gmail.com  Sat Jul 21 09:59:56 2012
From: ryannmicua at gmail.com (Ryann Micua)
Date: Sat, 21 Jul 2012 17:59:56 +0800
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <mailman.32677.1342809560.1433.wp-hackers@lists.automattic.com>
References: <mailman.32677.1342809560.1433.wp-hackers@lists.automattic.com>
Message-ID: <500A7D9C.4020207@gmail.com>

I was curious what Almog was griping about so I checked 
http://www.kravi.org/ on Google pagespeed and the stuff he mentioned 
that aren't passing such as minification, browser caching and other 
mainly due to external files.. I'm pretty sure those aren't easily cached.

> regrular user/developer wouldn't even know about caching or relazie
> the meaning of using it
and introducing a "basic caching" function isn't going to solve this 
problem. In fact it could very well worsen it as the "basic caching" 
function could very well be the problem with some particular server 
configurations (since it can't cover all configurations as mentioned in 
previous posts) and since the regular user/developer doesn't know about it

> In the current status we damage the users by not giving them basic feature
> as a part of the core.
How are we damaging users in this case? As Otto has mentioned previously 
80% of users practically don't need caching and the only reason they'll 
*want* one is because of Google. IMO caching just to kiss Google's ass 
is a lame reason to do it. The 20% who do need caching (due to traffic) 
are probably just going to customize (or most likely disable) any 
built-in caching mechanism (if there is one) so they can add one that 
fits their server configuration.

> And the worst issue- the plugins today doesn't know how to deal with
> caching.
How did you get to this conclusion? I may not have 8 years of 
development experience but I do know that caching is not a one click 
button that can be done (as of now) automatically.


-- 
*Ryann Micua*
/Web Developer/
------------------------------------------------------------------------

Website: /www.pogidude.com/
Skype: /rmicua/
Mobile: /+639169273059/


From almog.baku at gmail.com  Sat Jul 21 11:17:33 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Sat, 21 Jul 2012 14:17:33 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <500A7D9C.4020207@gmail.com>
References: <mailman.32677.1342809560.1433.wp-hackers@lists.automattic.com>
	<500A7D9C.4020207@gmail.com>
Message-ID: <CALncZpRdJECqdha+=2kHarSD+MEadhEeTjfNVFWRO+sfO6o2jQ@mail.gmail.com>

I think that if we will insert basic caching into the api it would fore the
plugins-developers to deal with caching.
Actually, it pretty simple- and the user will able to disabling this featue.
*
The base caching/optimization will include:*

   1. *minification: html, js, css:*

   *interface:
   *wp_enqueue_script( $handle, $src = false, $deps = array(), $ver =
   false, $in_footer = false, $minify=AUTO_MINIFY )
   wp_register_style( $handle, $src, $deps = array(), $ver = false, $media
   = 'all', $minify=AUTO_MINIFY )

   2. *combination: combine js, css files:*

   *interface:*
   wp_enqueue_script( $handle, $src = false, $deps = array(), $ver = false,
   $in_footer = false, $minify=AUTO_MINIFY, $combine=AUTO_COMBINE )
   wp_register_style( $handle, $src, $deps = array(), $ver = false, $media
   = 'all', $minify=MINIFY_DISABLED, $combine=AUTO_COMBINE )

   3. *basic object caching- at least as api interface without
   implemention!:*
   extending the object caching api: adding option to control the object
   caching within the development- like widgets, pages, etc

   *interface:*
   register_sidebar(array(
       'name'     => __( 'Post Sidebar'),
       'id'     => 'post-sidebar',
       ...
       'cache'    => AUTO_CACHE,
   ));
   register_nav_menus(array(
       'top_nav' => __( 'Top Navigation'),
       ...
       'cache'    => AUTO_CACHE,
   ));
   register_post_type('slider', array(
       'label' => __('Slider'),
       ...
       'cache'=> AUTO_CACHE,
   ));


Insert this minor changes into the api will able the caching plugins or
future core-caching-system to handle with caching!

On Sat, Jul 21, 2012 at 12:59 PM, Ryann Micua <ryannmicua at gmail.com> wrote:

> And the worst issue- the plugins today doesn't know how to deal with
>> caching.
>>
> How did you get to this conclusion? I may not have 8 years of development
> experience but I do know that caching is not a one click button that can be
> done (as of now) automatically.

From wp-hackers at thecodecave.com  Sat Jul 21 20:46:28 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Sat, 21 Jul 2012 16:46:28 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
	<CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
Message-ID: <500B1524.5080600@thecodecave.com>

In the end, it may be semantics because while Fragment Cache doesn't 
happen automatically, as does everything I consider object caching,  it 
would most likely use the same get and set methods. I think most of the 
items on Mike's list are actually fragment caching examples*, but the 
object cache api tools meet all our needs in that area.

Fragment caching takes place after object caching.  You would request 
results, a request which may or may not populate the object cache, and 
then you do something to those results to prepare them for use or 
display. That result is what I would consider fragment caching as you 
are likely caching a prebuilt HTML fragment that could be used on pages 
as they are being refresh.  It is possible that you can be tolerant of 
the values in that cache for 24hours (or more) and so when a page 
expires from the page cache, it can be rebuilt quicker because some of 
the work has been done already.

Brian Layman

* except query which is part of the object cache mechanisms already

On 7/21/2012 2:07 AM, Otto wrote:
> On Fri, Jul 20, 2012 at 2:08 PM, Mike Schinkel <mike at newclarity.net> wrote:
>>> If you meant a standard _page_ caching API, you should have said so.
>> Also, there are more potential types of caching that _page_ and object caching; there is fragment, query, widget, menu, and http to name a few.
> Except for page caching, aren't all of those pretty much capable of
> being handled with the object cache?
>
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp-hackers at thecodecave.com  Sat Jul 21 21:15:09 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Sat, 21 Jul 2012 17:15:09 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CABzSYNO0iknYb5g6eb8kQ5j=X=yUG=EYvMhmO+RswgBL99GNJw@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
	<5009749C.4000306@thecodecave.com>
	<CABzSYNO0iknYb5g6eb8kQ5j=X=yUG=EYvMhmO+RswgBL99GNJw@mail.gmail.com>
Message-ID: <500B1BDD.7060200@thecodecave.com>

Scribu: This is awesome! Thank you!

Brian Layman
On 7/20/2012 11:14 AM, scribu wrote:

> On Fri, Jul 20, 2012 at 6:09 PM, Brian Layman <wp-hackers at thecodecave.com>wrote:
> All editors use XDEBUG under the hood for remote debugging. I've debugged
> WP with vim:
>
> http://scribu.net/blog/efficient-php-debugging-in-vim.html
>


From mike at newclarity.net  Sat Jul 21 22:01:19 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sat, 21 Jul 2012 18:01:19 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <500B1524.5080600@thecodecave.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
	<CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
	<500B1524.5080600@thecodecave.com>
Message-ID: <E3EEECE1-C302-497C-9AF3-0E97D3AD40A1@newclarity.net>

On Jul 21, 2012, at 4:46 PM, Brian Layman wrote:
> In the end, it may be semantics because while Fragment Cache doesn't happen automatically, as does everything I consider object caching,  it would most likely use the same get and set methods. I think most of the items on Mike's list are actually fragment caching examples*, but the object cache api tools meet all our needs in that area.
> 
> Fragment caching takes place after object caching.  You would request results, a request which may or may not populate the object cache, and then you do something to those results to prepare them for use or display. That result is what I would consider fragment caching as you are likely caching a prebuilt HTML fragment that could be used on pages as they are being refresh.  It is possible that you can be tolerant of the values in that cache for 24hours (or more) and so when a page expires from the page cache, it can be rebuilt quicker because some of the work has been done already.

Well said.  

Basically from an API perspective one API may be built with another but that's not extremely relevant in that they don't address the same use-cases and thus have needs for different APIs.

-Mike

From ryan.wpmailinglists at gmail.com  Sat Jul 21 22:08:24 2012
From: ryan.wpmailinglists at gmail.com (Ryan WP Mailing Lists)
Date: Sat, 21 Jul 2012 15:08:24 -0700
Subject: [wp-hackers] Your development Setup
In-Reply-To: <500B1BDD.7060200@thecodecave.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
	<5009749C.4000306@thecodecave.com>
	<CABzSYNO0iknYb5g6eb8kQ5j=X=yUG=EYvMhmO+RswgBL99GNJw@mail.gmail.com>
	<500B1BDD.7060200@thecodecave.com>
Message-ID: <CAFCSB_J-pywMh3M6WnmJT+V1ZndwyKX66_WVWZ99vVhi=3Vxyw@mail.gmail.com>

I downloaded a trial of phpstorm and netbeans. So far I'm liking netbeans
better but ill keep tesing them out while my trial lasts.
On Jul 21, 2012 2:15 PM, "Brian Layman" <wp-hackers at thecodecave.com> wrote:

> Scribu: This is awesome! Thank you!
>
> Brian Layman
> On 7/20/2012 11:14 AM, scribu wrote:
>
>  On Fri, Jul 20, 2012 at 6:09 PM, Brian Layman <wp-hackers at thecodecave.com
>> >**wrote:
>> All editors use XDEBUG under the hood for remote debugging. I've debugged
>> WP with vim:
>>
>> http://scribu.net/blog/**efficient-php-debugging-in-**vim.html<http://scribu.net/blog/efficient-php-debugging-in-vim.html>
>>
>>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From johnbillion+wp at gmail.com  Sat Jul 21 22:37:11 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Sat, 21 Jul 2012 23:37:11 +0100
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <E3EEECE1-C302-497C-9AF3-0E97D3AD40A1@newclarity.net>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
	<CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
	<500B1524.5080600@thecodecave.com>
	<E3EEECE1-C302-497C-9AF3-0E97D3AD40A1@newclarity.net>
Message-ID: <CAOqAKWA+268Nq8Fmo27qeHun7tVTvSd-5ne2Mz1Ye_WOpkpujg@mail.gmail.com>

On 21 July 2012 23:01, Mike Schinkel <mike at newclarity.net> wrote:
> Basically from an API perspective one API may be built with another but that's not extremely relevant in that they don't address the same use-cases and thus have needs for different APIs.

How would you do fragment caching other than with an object cache?

From wp-hackers at thecodecave.com  Sat Jul 21 23:57:42 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Sat, 21 Jul 2012 19:57:42 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAOqAKWA+268Nq8Fmo27qeHun7tVTvSd-5ne2Mz1Ye_WOpkpujg@mail.gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
	<CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
	<500B1524.5080600@thecodecave.com>
	<E3EEECE1-C302-497C-9AF3-0E97D3AD40A1@newclarity.net>
	<CAOqAKWA+268Nq8Fmo27qeHun7tVTvSd-5ne2Mz1Ye_WOpkpujg@mail.gmail.com>
Message-ID: <500B41F6.1070007@thecodecave.com>

The way you've phrased the question illustrates how these discussions 
can become confusing.  I'll answer as best I can.

You asked about "an object cache" as opposed to "the object cache".  So 
I'm not sure what you call an object cache.  You would implement 
fragment caching using a "persistent cache" and I think that's what you 
were asking about.
http://codex.wordpress.org/Class_Reference/WP_Object_Cache#Persistent_Caching 
However there may be reasons why you don't care to implement it using 
the WordPress Object cache class WP_Object_Cache. That class has a 
number of features like grouping and cache versions that you may wish to 
avoid for whatever reason.  You may simply prefer using straight PHP 
memcache calls http://php.net/manual/en/book.memcache.php or want the 
data in separate server from the object cache. The why of it depends on 
the project and the programmer, fortunately, you only asked how.

Brian Layman

On 7/21/2012 6:37 PM, John Blackbourn wrote:

> How would you do fragment caching other than with an object cache?


From mike at newclarity.net  Sat Jul 21 23:58:46 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sat, 21 Jul 2012 19:58:46 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAOqAKWA+268Nq8Fmo27qeHun7tVTvSd-5ne2Mz1Ye_WOpkpujg@mail.gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
	<CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
	<500B1524.5080600@thecodecave.com>
	<E3EEECE1-C302-497C-9AF3-0E97D3AD40A1@newclarity.net>
	<CAOqAKWA+268Nq8Fmo27qeHun7tVTvSd-5ne2Mz1Ye_WOpkpujg@mail.gmail.com>
Message-ID: <CFBAFF08-BCC7-490F-B5E6-0CFE0BA19662@newclarity.net>

On Jul 21, 2012, at 6:37 PM, John Blackbourn <johnbillion+wp at gmail.com> wrote:
> On 21 July 2012 23:01, Mike Schinkel <mike at newclarity.net> wrote:
>> Basically from an API perspective one API may be built with another but that's not extremely relevant in that they don't address the same use-cases and thus have needs for different APIs.
> 
> How would you do fragment caching other than with an object cache?

Fragment caching could benefit from a higher level API.

-Mike

From johnbillion+wp at gmail.com  Sun Jul 22 00:56:04 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Sun, 22 Jul 2012 01:56:04 +0100
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <500B41F6.1070007@thecodecave.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
	<CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
	<500B1524.5080600@thecodecave.com>
	<E3EEECE1-C302-497C-9AF3-0E97D3AD40A1@newclarity.net>
	<CAOqAKWA+268Nq8Fmo27qeHun7tVTvSd-5ne2Mz1Ye_WOpkpujg@mail.gmail.com>
	<500B41F6.1070007@thecodecave.com>
Message-ID: <CAOqAKWAzpZWZh+zEFDDKjmOcKWGxdW7MkseQNnkiOZxCicrQLQ@mail.gmail.com>

On 22 July 2012 00:57, Brian Layman <wp-hackers at thecodecave.com> wrote:
> You asked about "an object cache" as opposed to "the object cache".  So I'm
> not sure what you call an object cache.  You would implement fragment
> caching using a "persistent cache" and I think that's what you were asking
> about.

My point really was that fragment caching is very straight forward
using either the Transients API, the Object Cache API with a
persistent cache, or both. Example:

if ( !$my_html = get_transient( 'my_html' ) ) {
  $my_html = 'Hello';
  set_transient( 'my_html', $my_html );
}
echo $my_html;

If there were a fragment caching API, the only difference in this bit
of code would be the name of the functions used to retrieve and store
the fragment. Bear in mind that if you're using a persistent object
cache (eg. APC) then the Transients API just acts as a wrapper to the
Object Cache API.

To rephrase my question, what might a fragment cache API do that the
Object Cache API / Transients API don't do?

From mike at newclarity.net  Sun Jul 22 01:44:15 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sat, 21 Jul 2012 21:44:15 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAOqAKWAzpZWZh+zEFDDKjmOcKWGxdW7MkseQNnkiOZxCicrQLQ@mail.gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
	<CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
	<500B1524.5080600@thecodecave.com>
	<E3EEECE1-C302-497C-9AF3-0E97D3AD40A1@newclarity.net>
	<CAOqAKWA+268Nq8Fmo27qeHun7tVTvSd-5ne2Mz1Ye_WOpkpujg@mail.gmail.com>
	<500B41F6.1070007@thecodecave.com>
	<CAOqAKWAzpZWZh+zEFDDKjmOcKWGxdW7MkseQNnkiOZxCicrQLQ@mail.gmail.com>
Message-ID: <F1C6D1F2-CF22-4101-9C1E-1FA25A58471C@newclarity.net>

On Jul 21, 2012, at 8:56 PM, John Blackbourn <johnbillion+wp at gmail.com> wrote:
> If there were a fragment caching API, the only difference in this bit
> of code would be the name of the functions used to retrieve and store
> the fragment. 

Actually, no.  A fragment caching API would benefit from numerous potential criteria that can select or invalidate the cache such as current time, current $post->ID, if the current page us an archive page or and is so what type, and a whole lot more. 

Clearly a fragment cache can be developed using an object cache but it takes time and experience to determine what fragment-specific features are needed and what architectures work the best. And that's exactly what a community of open-source developers is better at than a single developer hence why adding such an API to core as well as other caching APIs would be beneficial. IMO.

-Mike



From bullring at gmail.com  Sun Jul 22 05:59:51 2012
From: bullring at gmail.com (Woolly Bully)
Date: Sat, 21 Jul 2012 22:59:51 -0700
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAFCSB_J-pywMh3M6WnmJT+V1ZndwyKX66_WVWZ99vVhi=3Vxyw@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
	<5009749C.4000306@thecodecave.com>
	<CABzSYNO0iknYb5g6eb8kQ5j=X=yUG=EYvMhmO+RswgBL99GNJw@mail.gmail.com>
	<500B1BDD.7060200@thecodecave.com>
	<CAFCSB_J-pywMh3M6WnmJT+V1ZndwyKX66_WVWZ99vVhi=3Vxyw@mail.gmail.com>
Message-ID: <-2597687496969925104@unknownmsgid>

Sublime text 2 is super light weight and has all the features and more
that netbeans and eclipse/Zend studio offer.

Joshua Morris

On Jul 21, 2012, at 3:08 PM, Ryan WP Mailing Lists
<ryan.wpmailinglists at gmail.com> wrote:

> I downloaded a trial of phpstorm and netbeans. So far I'm liking netbeans
> better but ill keep tesing them out while my trial lasts.
> On Jul 21, 2012 2:15 PM, "Brian Layman" <wp-hackers at thecodecave.com> wrote:
>
>> Scribu: This is awesome! Thank you!
>>
>> Brian Layman
>> On 7/20/2012 11:14 AM, scribu wrote:
>>
>> On Fri, Jul 20, 2012 at 6:09 PM, Brian Layman <wp-hackers at thecodecave.com
>>>> **wrote:
>>> All editors use XDEBUG under the hood for remote debugging. I've debugged
>>> WP with vim:
>>>
>>> http://scribu.net/blog/**efficient-php-debugging-in-**vim.html<http://scribu.net/blog/efficient-php-debugging-in-vim.html>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From chason at gmail.com  Sun Jul 22 07:31:53 2012
From: chason at gmail.com (Chason Chaffin)
Date: Sun, 22 Jul 2012 00:31:53 -0700
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <F1C6D1F2-CF22-4101-9C1E-1FA25A58471C@newclarity.net>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
	<CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
	<500B1524.5080600@thecodecave.com>
	<E3EEECE1-C302-497C-9AF3-0E97D3AD40A1@newclarity.net>
	<CAOqAKWA+268Nq8Fmo27qeHun7tVTvSd-5ne2Mz1Ye_WOpkpujg@mail.gmail.com>
	<500B41F6.1070007@thecodecave.com>
	<CAOqAKWAzpZWZh+zEFDDKjmOcKWGxdW7MkseQNnkiOZxCicrQLQ@mail.gmail.com>
	<F1C6D1F2-CF22-4101-9C1E-1FA25A58471C@newclarity.net>
Message-ID: <16B4924C-4453-4C6B-BEC3-DD9F293136B0@gmail.com>

While I agree that fragment caching would be useful, it sounds like something that would be better as a plugin, since generalizing it would be a difficult problem, and I'd rather see how it works before adding more features into core. 

Sent from my iPhone

On Jul 21, 2012, at 6:44 PM, Mike Schinkel <mike at newclarity.net> wrote:

> On Jul 21, 2012, at 8:56 PM, John Blackbourn <johnbillion+wp at gmail.com> wrote:
>> If there were a fragment caching API, the only difference in this bit
>> of code would be the name of the functions used to retrieve and store
>> the fragment. 
> 
> Actually, no.  A fragment caching API would benefit from numerous potential criteria that can select or invalidate the cache such as current time, current $post->ID, if the current page us an archive page or and is so what type, and a whole lot more. 
> 
> Clearly a fragment cache can be developed using an object cache but it takes time and experience to determine what fragment-specific features are needed and what architectures work the best. And that's exactly what a community of open-source developers is better at than a single developer hence why adding such an API to core as well as other caching APIs would be beneficial. IMO.
> 
> -Mike
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From almog.baku at gmail.com  Sun Jul 22 07:48:38 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Sun, 22 Jul 2012 10:48:38 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <16B4924C-4453-4C6B-BEC3-DD9F293136B0@gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
	<CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
	<500B1524.5080600@thecodecave.com>
	<E3EEECE1-C302-497C-9AF3-0E97D3AD40A1@newclarity.net>
	<CAOqAKWA+268Nq8Fmo27qeHun7tVTvSd-5ne2Mz1Ye_WOpkpujg@mail.gmail.com>
	<500B41F6.1070007@thecodecave.com>
	<CAOqAKWAzpZWZh+zEFDDKjmOcKWGxdW7MkseQNnkiOZxCicrQLQ@mail.gmail.com>
	<F1C6D1F2-CF22-4101-9C1E-1FA25A58471C@newclarity.net>
	<16B4924C-4453-4C6B-BEC3-DD9F293136B0@gmail.com>
Message-ID: <CALncZpQmeRWGDrcaFDAxdDF0t5Pg8pc_rpkJXdT0i1ChWx0PLg@mail.gmail.com>

It diffucllt to learn the developer 3rd party api.
And in common wordpress there is a lot of 3rd party themes and plugins.

?????? ??? ?????, 22 ????? 2012, Chason Chaffin ???:

> While I agree that fragment caching would be useful, it sounds like
> something that would be better as a plugin, since generalizing it would be
> a difficult problem, and I'd rather see how it works before adding more
> features into core.
>
> Sent from my iPhone
>
> On Jul 21, 2012, at 6:44 PM, Mike Schinkel <mike at newclarity.net<javascript:;>>
> wrote:
>
> > On Jul 21, 2012, at 8:56 PM, John Blackbourn <johnbillion+wp at gmail.com<javascript:;>>
> wrote:
> >> If there were a fragment caching API, the only difference in this bit
> >> of code would be the name of the functions used to retrieve and store
> >> the fragment.
> >
> > Actually, no.  A fragment caching API would benefit from numerous
> potential criteria that can select or invalidate the cache such as current
> time, current $post->ID, if the current page us an archive page or and is
> so what type, and a whole lot more.
> >
> > Clearly a fragment cache can be developed using an object cache but it
> takes time and experience to determine what fragment-specific features are
> needed and what architectures work the best. And that's exactly what a
> community of open-source developers is better at than a single developer
> hence why adding such an API to core as well as other caching APIs would be
> beneficial. IMO.
> >
> > -Mike
> >
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mike at newclarity.net  Sun Jul 22 10:57:56 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sun, 22 Jul 2012 06:57:56 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <16B4924C-4453-4C6B-BEC3-DD9F293136B0@gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
	<CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
	<500B1524.5080600@thecodecave.com>
	<E3EEECE1-C302-497C-9AF3-0E97D3AD40A1@newclarity.net>
	<CAOqAKWA+268Nq8Fmo27qeHun7tVTvSd-5ne2Mz1Ye_WOpkpujg@mail.gmail.com>
	<500B41F6.1070007@thecodecave.com>
	<CAOqAKWAzpZWZh+zEFDDKjmOcKWGxdW7MkseQNnkiOZxCicrQLQ@mail.gmail.com>
	<F1C6D1F2-CF22-4101-9C1E-1FA25A58471C@newclarity.net>
	<16B4924C-4453-4C6B-BEC3-DD9F293136B0@gmail.com>
Message-ID: <44629B4D-52D8-4D27-B2EC-113FAC44C67F@newclarity.net>

On Jul 22, 2012, at 3:31 AM, Chason Chaffin wrote:
> While I agree that fragment caching would be useful, it sounds like something that would be better as a plugin,

Core uses a drop-in[1] for handling caching which means only one caching plugin unless plugins are explicitly designed to work together. As there are many different ways to do caching you can get any flavor available, but you can only that one flavor.  

To enable innovation in caching for WordPress the drop-in concept in core needs to be changed to enable multiple plugins to handle different aspects of caching. Currently advanced caching (pun intended) is really only viable for programmers with the time to invest.

> since generalizing it would be a difficult problem,

Why do you assume that?

-Mike
[1] http://hakre.wordpress.com/2010/05/01/must-use-and-drop-ins-plugins/

From mike at newclarity.net  Sun Jul 22 10:59:28 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sun, 22 Jul 2012 06:59:28 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <-2597687496969925104@unknownmsgid>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
	<5009749C.4000306@thecodecave.com>
	<CABzSYNO0iknYb5g6eb8kQ5j=X=yUG=EYvMhmO+RswgBL99GNJw@mail.gmail.com>
	<500B1BDD.7060200@thecodecave.com>
	<CAFCSB_J-pywMh3M6WnmJT+V1ZndwyKX66_WVWZ99vVhi=3Vxyw@mail.gmail.com>
	<-2597687496969925104@unknownmsgid>
Message-ID: <F4894BFF-5373-45E4-8763-11497E073375@newclarity.net>

On Jul 22, 2012, at 1:59 AM, Woolly Bully wrote:
> Sublime text 2 is super light weight and has all the features and more
> that netbeans and eclipse/Zend studio offer.

So Sublime offers XDEBUG & Zend Debugger support now?

-Mike

From mario at peshev.net  Sun Jul 22 12:21:09 2012
From: mario at peshev.net (Mario Peshev)
Date: Sun, 22 Jul 2012 15:21:09 +0300
Subject: [wp-hackers] Access $post near template_include
Message-ID: <CAN_8tK7dTrtrYzHEKa1QtwzMy2bn-++k-TEt1zTHKZbP5nDYhw@mail.gmail.com>

Hello,

I'm trying to do some on-the-fly manipulations on the page template that
take place in template-loader.php, by filtering the template_include part
at the end. However I am not sure how to get the post ID there as I still
don't have an access to the global variables for post and the loop and I
also can't get it from the server variable due to permalink specifics.

Is there a workaround to get the post ID at that point of loading?


Mario Peshev
Training and Consulting Services @ DevriX
http://www.linkedin.com/in/mpeshev
http://devrix.com
http://peshev.net/blog

From pross at pross.org.uk  Sun Jul 22 15:42:36 2012
From: pross at pross.org.uk (Simon Prosser)
Date: Sun, 22 Jul 2012 16:42:36 +0100
Subject: [wp-hackers] Your development Setup
In-Reply-To: <F4894BFF-5373-45E4-8763-11497E073375@newclarity.net>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
	<5009749C.4000306@thecodecave.com>
	<CABzSYNO0iknYb5g6eb8kQ5j=X=yUG=EYvMhmO+RswgBL99GNJw@mail.gmail.com>
	<500B1BDD.7060200@thecodecave.com>
	<CAFCSB_J-pywMh3M6WnmJT+V1ZndwyKX66_WVWZ99vVhi=3Vxyw@mail.gmail.com>
	<-2597687496969925104@unknownmsgid>
	<F4894BFF-5373-45E4-8763-11497E073375@newclarity.net>
Message-ID: <CAKwUDf0VaQ2NC+cDCeR=d1UzWHLK2EURTZe2q56MoBDQ8+YiDg@mail.gmail.com>

On 22 July 2012 11:59, Mike Schinkel <mike at newclarity.net> wrote:
> On Jul 22, 2012, at 1:59 AM, Woolly Bully wrote:
>> Sublime text 2 is super light weight and has all the features and more
>> that netbeans and eclipse/Zend studio offer.
>
> So Sublime offers XDEBUG & Zend Debugger support now?

https://github.com/Kindari/SublimeXdebug

From almog.baku at gmail.com  Sun Jul 22 15:52:11 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Sun, 22 Jul 2012 18:52:11 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <44629B4D-52D8-4D27-B2EC-113FAC44C67F@newclarity.net>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
	<CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
	<500B1524.5080600@thecodecave.com>
	<E3EEECE1-C302-497C-9AF3-0E97D3AD40A1@newclarity.net>
	<CAOqAKWA+268Nq8Fmo27qeHun7tVTvSd-5ne2Mz1Ye_WOpkpujg@mail.gmail.com>
	<500B41F6.1070007@thecodecave.com>
	<CAOqAKWAzpZWZh+zEFDDKjmOcKWGxdW7MkseQNnkiOZxCicrQLQ@mail.gmail.com>
	<F1C6D1F2-CF22-4101-9C1E-1FA25A58471C@newclarity.net>
	<16B4924C-4453-4C6B-BEC3-DD9F293136B0@gmail.com>
	<44629B4D-52D8-4D27-B2EC-113FAC44C67F@newclarity.net>
Message-ID: <CALncZpRZU1Vp4WQrTWFqwhuEi2iWsbPX9dWNPdXTWaL=pgsRyQ@mail.gmail.com>

That idea, of drop-ins is really bad. Because it hack the core.
I belive that any unoffical hacking(not aproved patch) is bad because well
known obviuse reasons.

Are you sure that the current plugins using it?
If they are it just proof my point.

?????? ??? ?????, 22 ????? 2012, Mike Schinkel ???:

> On Jul 22, 2012, at 3:31 AM, Chason Chaffin wrote:
> > While I agree that fragment caching would be useful, it sounds like
> something that would be better as a plugin,
>
> Core uses a drop-in[1] for handling caching which means only one caching
> plugin unless plugins are explicitly designed to work together. As there
> are many different ways to do caching you can get any flavor available, but
> you can only that one flavor.
>
> To enable innovation in caching for WordPress the drop-in concept in core
> needs to be changed to enable multiple plugins to handle different aspects
> of caching. Currently advanced caching (pun intended) is really only viable
> for programmers with the time to invest.
>
> > since generalizing it would be a difficult problem,
>
> Why do you assume that?
>
> -Mike
> [1] http://hakre.wordpress.com/2010/05/01/must-use-and-drop-ins-plugins/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From sinan at sinanisler.com  Sun Jul 22 17:25:20 2012
From: sinan at sinanisler.com (Sinan)
Date: Sun, 22 Jul 2012 20:25:20 +0300
Subject: [wp-hackers] Adding New Box (php content) New Post Page
Message-ID: <CABmkrsHbwnmgVJENDKwc36_15MUYYV=CH_CDW01U9Xf4PFnR2A@mail.gmail.com>

Hello,

I want t add new box to New Post Page.

As you can see the screenshot for place.

How can ? do this and what filter can help me ?

Thank you.




-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From wp-hackers at thecodecave.com  Sun Jul 22 17:31:58 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Sun, 22 Jul 2012 13:31:58 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CALncZpRZU1Vp4WQrTWFqwhuEi2iWsbPX9dWNPdXTWaL=pgsRyQ@mail.gmail.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
	<CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
	<500B1524.5080600@thecodecave.com>
	<E3EEECE1-C302-497C-9AF3-0E97D3AD40A1@newclarity.net>
	<CAOqAKWA+268Nq8Fmo27qeHun7tVTvSd-5ne2Mz1Ye_WOpkpujg@mail.gmail.com>
	<500B41F6.1070007@thecodecave.com>
	<CAOqAKWAzpZWZh+zEFDDKjmOcKWGxdW7MkseQNnkiOZxCicrQLQ@mail.gmail.com>
	<F1C6D1F2-CF22-4101-9C1E-1FA25A58471C@newclarity.net>
	<16B4924C-4453-4C6B-BEC3-DD9F293136B0@gmail.com>
	<44629B4D-52D8-4D27-B2EC-113FAC44C67F@newclarity.net>
	<CALncZpRZU1Vp4WQrTWFqwhuEi2iWsbPX9dWNPdXTWaL=pgsRyQ@mail.gmail.com>
Message-ID: <500C390E.1080704@thecodecave.com>

Actually it's not a bad thing. Drop in plugins are what they are because 
they must be loaded early on, or at least at very specific times in the 
initiation process, to do their job.
They are so specific in function, that the list of file names is hard 
coded into the core.

Here's a currentish list:

|If you look for the function _get_dropins() in 
wp-admin/includes/plugin.php|, you'll see there is a lit of the current 
dropdin functions.

     $dropins = array(
         'advanced-cache.php' => array( __( 'Advanced caching 
plugin.'       ), 'WP_CACHE' ), // WP_CACHE
         'db.php'             => array( __( 'Custom database 
class.'         ), true ), // auto on load
         'db-error.php'       => array( __( 'Custom database error 
message.' ), true ), // auto on error
         'install.php'        => array( __( 'Custom install 
script.'         ), true ), // auto on install
         'maintenance.php'    => array( __( 'Custom maintenance 
message.'    ), true ), // auto on maintenance
         'object-cache.php'   => array( __( 'External object 
cache.'         ), true ), // auto on load
     );

     if ( is_multisite() ) {
         $dropins['sunrise.php'       ] = array( __( 'Executed before 
Multisite is loaded.' ), 'SUNRISE' ); // SUNRISE
         $dropins['blog-deleted.php'  ] = array( __( 'Custom site 
deleted message.'   ), true ); // auto on deleted blog
         $dropins['blog-inactive.php' ] = array( __( 'Custom site 
inactive message.'  ), true ); // auto on inactive blog
         $dropins['blog-suspended.php'] = array( __( 'Custom site 
suspended message.' ), true ); // auto on archived or spammed blog
     }

     return $dropins;

Brian Layman

On 7/22/2012 11:52 AM, Almog Baku wrote:
> That idea, of drop-ins is really bad. Because it hack the core.
> I belive that any unoffical hacking(not aproved patch) is bad because well
> known obviuse reasons.
>
> Are you sure that the current plugins using it?
> If they are it just proof my point.
>
> ?????? ??? ?????, 22 ????? 2012, Mike Schinkel ???:
>
>> On Jul 22, 2012, at 3:31 AM, Chason Chaffin wrote:
>>> While I agree that fragment caching would be useful, it sounds like
>> something that would be better as a plugin,
>>
>> Core uses a drop-in[1] for handling caching which means only one caching
>> plugin unless plugins are explicitly designed to work together. As there
>> are many different ways to do caching you can get any flavor available, but
>> you can only that one flavor.
>>
>> To enable innovation in caching for WordPress the drop-in concept in core
>> needs to be changed to enable multiple plugins to handle different aspects
>> of caching. Currently advanced caching (pun intended) is really only viable
>> for programmers with the time to invest.
>>
>>> since generalizing it would be a difficult problem,
>> Why do you assume that?
>>
>> -Mike
>> [1] http://hakre.wordpress.com/2010/05/01/must-use-and-drop-ins-plugins/
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com <javascript:;>
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mike at newclarity.net  Sun Jul 22 19:22:35 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sun, 22 Jul 2012 15:22:35 -0400
Subject: [wp-hackers] Access $post near template_include
In-Reply-To: <CAN_8tK7dTrtrYzHEKa1QtwzMy2bn-++k-TEt1zTHKZbP5nDYhw@mail.gmail.com>
References: <CAN_8tK7dTrtrYzHEKa1QtwzMy2bn-++k-TEt1zTHKZbP5nDYhw@mail.gmail.com>
Message-ID: <70F65280-1F0D-4C28-9DED-D7B1C28CC222@newclarity.net>

On Jul 22, 2012, at 8:21 AM, Mario Peshev wrote:
> I'm trying to do some on-the-fly manipulations on the page template that
> take place in template-loader.php, by filtering the template_include part
> at the end. However I am not sure how to get the post ID there as I still
> don't have an access to the global variables for post and the loop and I
> also can't get it from the server variable due to permalink specifics.
> 
> Is there a workaround to get the post ID at that point of loading?

The global variable $post is available by the time the 'template_include' hook fires.  Add this to your theme's functions.php file to see it in action:

add_filter( 'template_include', 'marios_template_include' );
function marios_template_include( $template_file ) {
  global $post;
  echo "Post ID: " . $post->ID . "</br>";
  return $template_file;
}

Hope this helps.

-Mike

From mike at newclarity.net  Sun Jul 22 19:25:03 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sun, 22 Jul 2012 15:25:03 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <CAKwUDf0VaQ2NC+cDCeR=d1UzWHLK2EURTZe2q56MoBDQ8+YiDg@mail.gmail.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
	<5009749C.4000306@thecodecave.com>
	<CABzSYNO0iknYb5g6eb8kQ5j=X=yUG=EYvMhmO+RswgBL99GNJw@mail.gmail.com>
	<500B1BDD.7060200@thecodecave.com>
	<CAFCSB_J-pywMh3M6WnmJT+V1ZndwyKX66_WVWZ99vVhi=3Vxyw@mail.gmail.com>
	<-2597687496969925104@unknownmsgid>
	<F4894BFF-5373-45E4-8763-11497E073375@newclarity.net>
	<CAKwUDf0VaQ2NC+cDCeR=d1UzWHLK2EURTZe2q56MoBDQ8+YiDg@mail.gmail.com>
Message-ID: <DD1C022C-8F42-4837-85CA-8AA9AB3461B8@newclarity.net>

On Jul 22, 2012, at 11:42 AM, Simon Prosser wrote:
>> So Sublime offers XDEBUG & Zend Debugger support now?
> 
> https://github.com/Kindari/SublimeXdebug

Nice. Might be time to give Sublime another look.

-Mike


From brasofilo at gmail.com  Sun Jul 22 19:28:48 2012
From: brasofilo at gmail.com (Rodolfo Buaiz)
Date: Sun, 22 Jul 2012 21:28:48 +0200
Subject: [wp-hackers] Adding New Box (php content) New Post Page
In-Reply-To: <CABmkrsHbwnmgVJENDKwc36_15MUYYV=CH_CDW01U9Xf4PFnR2A@mail.gmail.com>
References: <CABmkrsHbwnmgVJENDKwc36_15MUYYV=CH_CDW01U9Xf4PFnR2A@mail.gmail.com>
Message-ID: <CACzxQMaCHN7_uy+YWaqSp97HrvoBNjAArWguPHGwhfaGEJHwaQ@mail.gmail.com>

Check here:
http://codex.wordpress.org/Function_Reference/add_meta_box


On Sun, Jul 22, 2012 at 7:25 PM, Sinan <sinan at sinanisler.com> wrote:

> Hello,
>
> I want t add new box to New Post Page.
>
> As you can see the screenshot for place.
>
> How can ? do this and what filter can help me ?
>
> Thank you.
>
>
>
>
> --
> Sinan ??LER
> sinanisler.com <http://www.sinanisler.com>
> fb.com/sinanisler
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>

From mike at newclarity.net  Sun Jul 22 19:54:33 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sun, 22 Jul 2012 15:54:33 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <500C390E.1080704@thecodecave.com>
References: <CALncZpSVftDA0Vbts3sST9=Zf8hf9BHVOU89ZsJpDVOht4hkPg@mail.gmail.com>
	<CAD-FghxZRBZchiHBeiJfJ0CT5diZWGNX+cvWmmuNCc7cXfoFfw@mail.gmail.com>
	<27A3F342-1855-4DDE-9471-2E07352B02B2@newclarity.net>
	<CABzSYNPMRZdGqog01TwJWwtqKjrh474hobP09Z4AszG77M5zeQ@mail.gmail.com>
	<1B66206F-80AC-4FB7-A1B3-0FC7BBEEFFE7@newclarity.net>
	<CAD-FghxfqAFyFonjxt+=emCmyUivO=4k2qnuZJqxm=_imNYhDQ@mail.gmail.com>
	<500B1524.5080600@thecodecave.com>
	<E3EEECE1-C302-497C-9AF3-0E97D3AD40A1@newclarity.net>
	<CAOqAKWA+268Nq8Fmo27qeHun7tVTvSd-5ne2Mz1Ye_WOpkpujg@mail.gmail.com>
	<500B41F6.1070007@thecodecave.com>
	<CAOqAKWAzpZWZh+zEFDDKjmOcKWGxdW7MkseQNnkiOZxCicrQLQ@mail.gmail.com>
	<F1C6D1F2-CF22-4101-9C1E-1FA25A58471C@newclarity.net>
	<16B4924C-4453-4C6B-BEC3-DD9F293136B0@gmail.com>
	<44629B4D-52D8-4D27-B2EC-113FAC44C67F@newclarity.net>
	<CALncZpRZU1Vp4WQrTWFqwhuEi2iWsbPX9dWNPdXTWaL=pgsRyQ@mail.gmail.com>
	<500C390E.1080704@thecodecave.com>
Message-ID: <66806DEC-16A6-43A3-993C-BF9371932991@newclarity.net>

On Jul 22, 2012, at 1:31 PM, Brian Layman wrote:
> Drop in plugins are what they are because they must be loaded early on, or at least at very specific times in the initiation process, to do their job.
> They are so specific in function, that the list of file names is hard coded into the core.

But clearly the method $dropins use to find and load files could be improved, no?

Consider this as a strawman proposal[1]:

1.) Move the require() in /wp-settings.php for /wp-includes/plugin.php from line 78 to 31 so that it gets loaded before any drop-ins.
2.) On line 32 of /wp-settings.php call a function that looks for a '/wp-content/dropins/' directory; if it exists then include() all the .php files in the directory.
3.) Deprecate existing dropins and implement do_action() hooks to run in place of existing dropins.
4.) Document that any file in dropins directory is responsible to add the actions it needs to support its own drop-in functionality.

Thoughts?  If I don't get someone to explain an obvious reason this won't work I can add to Trac.

-Mike
[1] http://en.wikipedia.org/wiki/Straw_man_proposal



From wp-hackers at thecodecave.com  Sun Jul 22 21:09:35 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Sun, 22 Jul 2012 17:09:35 -0400
Subject: [wp-hackers] Your development Setup
In-Reply-To: <DD1C022C-8F42-4837-85CA-8AA9AB3461B8@newclarity.net>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
	<5009749C.4000306@thecodecave.com>
	<CABzSYNO0iknYb5g6eb8kQ5j=X=yUG=EYvMhmO+RswgBL99GNJw@mail.gmail.com>
	<500B1BDD.7060200@thecodecave.com>
	<CAFCSB_J-pywMh3M6WnmJT+V1ZndwyKX66_WVWZ99vVhi=3Vxyw@mail.gmail.com>
	<-2597687496969925104@unknownmsgid>
	<F4894BFF-5373-45E4-8763-11497E073375@newclarity.net>
	<CAKwUDf0VaQ2NC+cDCeR=d1UzWHLK2EURTZe2q56MoBDQ8+YiDg@mail.gmail.com>
	<DD1C022C-8F42-4837-85CA-8AA9AB3461B8@newclarity.net>
Message-ID: <500C6C0F.8070308@thecodecave.com>

AND notepad++
http://amiworks.co.in/talk/debugging-php-using-xdebug-and-notepad-part-i/

(Thanks again Scribu, I never would have looked for this otherwise!)

Brian Layman

On 7/22/2012 3:25 PM, Mike Schinkel wrote:
> On Jul 22, 2012, at 11:42 AM, Simon Prosser wrote:
>>> So Sublime offers XDEBUG & Zend Debugger support now?
>> https://github.com/Kindari/SublimeXdebug
> Nice. Might be time to give Sublime another look.
>
> -Mike
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mario at peshev.net  Sun Jul 22 21:19:20 2012
From: mario at peshev.net (Mario Peshev)
Date: Mon, 23 Jul 2012 00:19:20 +0300
Subject: [wp-hackers] Access $post near template_include
In-Reply-To: <70F65280-1F0D-4C28-9DED-D7B1C28CC222@newclarity.net>
References: <CAN_8tK7dTrtrYzHEKa1QtwzMy2bn-++k-TEt1zTHKZbP5nDYhw@mail.gmail.com>
	<70F65280-1F0D-4C28-9DED-D7B1C28CC222@newclarity.net>
Message-ID: <CAN_8tK4YYuENoTZTiTP0YSuepwQG0H-060w3TJPG9C03KaLagQ@mail.gmail.com>

Some very idiotic question here, got the add_filter line commented and the
same function used as another hook on the line above it.

Thanks Mike, pretty much better now.

Mario Peshev
Training and Consulting Services @ DevriX
http://www.linkedin.com/in/mpeshev
http://devrix.com
http://peshev.net/blog



On Sun, Jul 22, 2012 at 10:22 PM, Mike Schinkel <mike at newclarity.net> wrote:

> On Jul 22, 2012, at 8:21 AM, Mario Peshev wrote:
> > I'm trying to do some on-the-fly manipulations on the page template that
> > take place in template-loader.php, by filtering the template_include part
> > at the end. However I am not sure how to get the post ID there as I still
> > don't have an access to the global variables for post and the loop and I
> > also can't get it from the server variable due to permalink specifics.
> >
> > Is there a workaround to get the post ID at that point of loading?
>
> The global variable $post is available by the time the 'template_include'
> hook fires.  Add this to your theme's functions.php file to see it in
> action:
>
> add_filter( 'template_include', 'marios_template_include' );
> function marios_template_include( $template_file ) {
>   global $post;
>   echo "Post ID: " . $post->ID . "</br>";
>   return $template_file;
> }
>
> Hope this helps.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From almog.baku at gmail.com  Sun Jul 22 23:52:21 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Mon, 23 Jul 2012 02:52:21 +0300
Subject: [wp-hackers] Your development Setup
In-Reply-To: <500C6C0F.8070308@thecodecave.com>
References: <CAFCSB_JHhQVMSvL9D7ve6pW6HzuhvDafd7MVH8z0ny51O9VWQw@mail.gmail.com>
	<5006D7A0.9000508@thecodecave.com>
	<CALncZpRA54TxGxBwuD1cp_kSmNJANUz+bExVqEZv==0dFBa6zA@mail.gmail.com>
	<CAHG1zghY0m63Q6Fy31of85m4UwxsLTBd9vR-GpkiwV0MqzK-Bg@mail.gmail.com>
	<500737FD.907@thecodecave.com>
	<FABCE97F-57CC-4654-8663-259C4B1CDFFD@g8o.net>
	<CAFCSB_KxXvKU2KsOPGO4d1sugs+0gnhNtwj0=zmSpgKYz12H6A@mail.gmail.com>
	<5009749C.4000306@thecodecave.com>
	<CABzSYNO0iknYb5g6eb8kQ5j=X=yUG=EYvMhmO+RswgBL99GNJw@mail.gmail.com>
	<500B1BDD.7060200@thecodecave.com>
	<CAFCSB_J-pywMh3M6WnmJT+V1ZndwyKX66_WVWZ99vVhi=3Vxyw@mail.gmail.com>
	<-2597687496969925104@unknownmsgid>
	<F4894BFF-5373-45E4-8763-11497E073375@newclarity.net>
	<CAKwUDf0VaQ2NC+cDCeR=d1UzWHLK2EURTZe2q56MoBDQ8+YiDg@mail.gmail.com>
	<DD1C022C-8F42-4837-85CA-8AA9AB3461B8@newclarity.net>
	<500C6C0F.8070308@thecodecave.com>
Message-ID: <CALncZpS6pHy_6xt6ktKNBRvQV2huu9Pn_MMx7EKHyCxYr7WFew@mail.gmail.com>

I have to say i was never hear about phpstorm and sublime before.
It make me wonder about my IDE, because eclipse is great! But it heavy and
slow too.

About notepad++, it a great tiny and nice editor. Sometimes I use it.
BUT- its not an IDE. Its an editor. You cannot manage your development with
it.

?????? ??? ???, 23 ????? 2012, Brian Layman ???:

> AND notepad++
> http://amiworks.co.in/talk/**debugging-php-using-xdebug-**
> and-notepad-part-i/<http://amiworks.co.in/talk/debugging-php-using-xdebug-and-notepad-part-i/>
>
> (Thanks again Scribu, I never would have looked for this otherwise!)
>
> Brian Layman
>
> On 7/22/2012 3:25 PM, Mike Schinkel wrote:
>
>> On Jul 22, 2012, at 11:42 AM, Simon Prosser wrote:
>>
>>> So Sublime offers XDEBUG & Zend Debugger support now?
>>>>
>>> https://github.com/Kindari/**SublimeXdebug<https://github.com/Kindari/SublimeXdebug>
>>>
>> Nice. Might be time to give Sublime another look.
>>
>> -Mike
>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From aero.maxx.d at gmail.com  Mon Jul 23 00:35:51 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Mon, 23 Jul 2012 01:35:51 +0100
Subject: [wp-hackers] Custom post types or plugin to manage and keep dynamic
	content updated.
Message-ID: <-1346563978441712930@unknownmsgid>

Hello All,

I've been working on a lottery site as a hobby project which isn't live at
the moment and I'm wanting to include some statistical facts about the
individual numbers in the lottery games.
This question maybe OT so I apologise in advance if so.

The urls would similar to http://www.domain/facts/([0-9]{1,})/ or
http://www.domain.com/ <http://www.domain.com/facts/game/lotto/>
facts/game/lotto/ <http://www.domain.com/facts/game/lotto/>([0-9]{1,})/

These urls are from the rewrite rules the last number in the urls is the
ball number 1-49.

I'm not sure what the best way to go about this is, would it be best
advised to do a custom post type and put short codes into the posts to keep
the ever changing statistics update, this would mean I could put the custom
post type into the menu easily and have the individual games as a drop down
from the number facts pages.

Or would it be best to create a single page called facts have the short
code from a plugin inserted here and have the plugin handle everything, it
would mean I would have to use custom links in the menu to get the links
for individual game statistics. The only downside I can see is that I would
lose the blog style listing when viewing the number facts for an individual
game as the custom post type option would have an individual post per
number and game. So this option may not look quite as good or easy to read
and find and could potentially be more work and hassle for me to make it
look good.

The number fact page for an individual number would have some basic textual
facts and a graph also in the page.

You can see a rough idea of what I mean here, click on any number to see
the page information I was talking about above not linked to an individual
number as the link is quite long! -
http://lottery.merseyworld.com/Palace.html

What are your thoughts any help advice or suggestions your able to provide
would be most helpful!

Thanks
Daniel

From ryan at pixopoint.com  Mon Jul 23 12:13:20 2012
From: ryan at pixopoint.com (Ryan Hellyer)
Date: Mon, 23 Jul 2012 14:13:20 +0200
Subject: [wp-hackers] Caching as part of the core
Message-ID: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>

Perhaps a better solution may be to provide an API to allow regular
plugins to add drop-ins automatically? This can already be done via
the WordPress file API, but having something specific to dropins might
make some sense.

Or perhaps we should encourage existing drop-in plugin developers to
implement the WordPress file API directly, to copy their files across,
instead of requiring manual copying?

The API could also remove the drop-in when the plugin is deactivated.
This would remove the headaches some users have when they deactivate a
caching plugin and still have the advanced-caching.php file lingering
in their system even though the plugin is no longer in use.


> Date: Sun, 22 Jul 2012 15:54:33 -0400
> From: Mike Schinkel <mike at newclarity.net>
> Subject: Re: [wp-hackers] Caching as part of the core
> To: wp-hackers at lists.automattic.com
> Message-ID: <66806DEC-16A6-43A3-993C-BF9371932991 at newclarity.net>
> Content-Type: text/plain; charset=us-ascii
>
> On Jul 22, 2012, at 1:31 PM, Brian Layman wrote:
>> Drop in plugins are what they are because they must be loaded early on, or at least at very specific times in the initiation process, to do their job.
>> They are so specific in function, that the list of file names is hard coded into the core.
>
> But clearly the method $dropins use to find and load files could be improved, no?
>
> Consider this as a strawman proposal[1]:
>
> 1.) Move the require() in /wp-settings.php for /wp-includes/plugin.php from line 78 to 31 so that it gets loaded before any drop-ins.
> 2.) On line 32 of /wp-settings.php call a function that looks for a '/wp-content/dropins/' directory; if it exists then include() all the .php files in the directory.
> 3.) Deprecate existing dropins and implement do_action() hooks to run in place of existing dropins.
> 4.) Document that any file in dropins directory is responsible to add the actions it needs to support its own drop-in functionality.
>
> Thoughts?  If I don't get someone to explain an obvious reason this won't work I can add to Trac.
>
> -Mike

From simon at sweetinteraction.com  Mon Jul 23 14:48:26 2012
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Mon, 23 Jul 2012 15:48:26 +0100
Subject: [wp-hackers] Capabilities and all that
Message-ID: <85F046F520934E85A573B10551F8B898@sweetinteraction.com>

Hi, 

I have a CPT for Videos. I want to allow all the users who would normally be able to edit/delete/publish/etc posts to be able to do the same with videos. I also want to have a separate role, Video Editor, which can do everything with videos but *only* with videos, I don't want them to be able to do anything else.

So far I've created a post type with a capability_type of video, and it has all the edit_video, etc, caps. I've created the Video Editor role and that seems to work.

I was hoping for a neat way of using map_meta_cap or similar to allow anyone with a *_posts(s) type cap to carry that cap over to the *_video(s) caps.

Any tips, or do I have to add all the *_video(s) caps to all the roles in the site I want to have them.

Thanks in advance.

Simon





---
My life in WordPress:
http://profiles.wordpress.org/users/simonwheatley/

Company information:
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT


From johnbillion+wp at gmail.com  Mon Jul 23 15:22:52 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Mon, 23 Jul 2012 16:22:52 +0100
Subject: [wp-hackers] Capabilities and all that
In-Reply-To: <85F046F520934E85A573B10551F8B898@sweetinteraction.com>
References: <85F046F520934E85A573B10551F8B898@sweetinteraction.com>
Message-ID: <CAOqAKWCbaLyS5Pm7kOUHu1J3MdFKEXozcdY=GcgV4k1A+wiORg@mail.gmail.com>

On 23 July 2012 15:48, Simon Wheatley <simon at sweetinteraction.com> wrote:
> I was hoping for a neat way of using map_meta_cap or similar to allow anyone with a *_posts(s) type cap to carry that cap over to the *_video(s) caps.
>
> Any tips, or do I have to add all the *_video(s) caps to all the roles in the site I want to have them.

Take a look at my User Switching plugin [1]. It uses the
'user_has_cap' and 'map_meta_cap' filters for adding capabilities on
the fly and I've documented it well because it can be hard to get your
head around.

I would use *_video as your CPT's meta capability, assign these
capabilities to your Video Editor role when you add the custom role,
and then filter the capabilities for all your other roles so you don't
need to touch them. Something along the lines of:

if ( ( 'edit_video' == $args[0] ) and !isset( $caps['edit_video'] ) )
  $caps['edit_video'] = user_can( $args[1], 'edit_posts' );

John

[1] http://wordpress.org/extend/plugins/user-switching/

From zanematthew at gmail.com  Mon Jul 23 15:50:45 2012
From: zanematthew at gmail.com (zanematthew at gmail.com)
Date: Mon, 23 Jul 2012 11:50:45 -0400
Subject: [wp-hackers] wp-hackers Digest, Vol 90, Issue 59
In-Reply-To: <mailman.9.1343044802.17129.wp-hackers@lists.automattic.com>
References: <mailman.9.1343044802.17129.wp-hackers@lists.automattic.com>
Message-ID: <CAJLhW7LRpwgS_Njw8crHEL9S5dxDD=R25oJY3Cum=SYE0QRuPQ@mail.gmail.com>

Please let me know if I'm replying to these correctly. I've been on the
list for a few weeks now, but this is my first reply :D

Message 1 & 3: Re: Your development Setup
I use (and love) Sublime text2. I've work remotely and locally before, and
now back to local. Sublime text2 has a plugin called sftp which I've used
also. FYI, every few months I switch editors for a change, I've used
bbedit, coda, textmate, textwrangler, notepad++, dreamweaver, nano, pi, vi,
css edit, and so far Sublime I've used the longest.

Message 3: Access $post near template_include
Can't you just hook into the
template_redirect<http://codex.wordpress.org/Plugin_API/Action_Reference/template_redirect>action?
I've been using on that my site and it works well, here's my
routes.php, maybe overkill for what you need.

Message "drop in plugins"
Isn't this what MU is for?

On Mon, Jul 23, 2012 at 8:00 AM, <wp-hackers-request at lists.automattic.com>wrote:

> Send wp-hackers mailing list submissions to
>         wp-hackers at lists.automattic.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>         http://lists.automattic.com/mailman/listinfo/wp-hackers
> or, via email, send a message with subject or body 'help' to
>         wp-hackers-request at lists.automattic.com
>
> You can reach the person managing the list at
>         wp-hackers-owner at lists.automattic.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wp-hackers digest..."
>
>
> Today's Topics:
>
>    1. Re: Caching as part of the core (Mike Schinkel)
>    2. Re: Your development Setup (Brian Layman)
>    3. Re: Access $post near template_include (Mario Peshev)
>    4. Re: Your development Setup (Almog Baku)
>    5. Custom post types or plugin to manage and keep dynamic
>       content updated. (Aero Maxx)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 22 Jul 2012 15:54:33 -0400
> From: Mike Schinkel <mike at newclarity.net>
> Subject: Re: [wp-hackers] Caching as part of the core
> To: wp-hackers at lists.automattic.com
> Message-ID: <66806DEC-16A6-43A3-993C-BF9371932991 at newclarity.net>
> Content-Type: text/plain; charset=us-ascii
>
> On Jul 22, 2012, at 1:31 PM, Brian Layman wrote:
> > Drop in plugins are what they are because they must be loaded early on,
> or at least at very specific times in the initiation process, to do their
> job.
> > They are so specific in function, that the list of file names is hard
> coded into the core.
>
> But clearly the method $dropins use to find and load files could be
> improved, no?
>
> Consider this as a strawman proposal[1]:
>
> 1.) Move the require() in /wp-settings.php for /wp-includes/plugin.php
> from line 78 to 31 so that it gets loaded before any drop-ins.
> 2.) On line 32 of /wp-settings.php call a function that looks for a
> '/wp-content/dropins/' directory; if it exists then include() all the .php
> files in the directory.
> 3.) Deprecate existing dropins and implement do_action() hooks to run in
> place of existing dropins.
> 4.) Document that any file in dropins directory is responsible to add the
> actions it needs to support its own drop-in functionality.
>
> Thoughts?  If I don't get someone to explain an obvious reason this won't
> work I can add to Trac.
>
> -Mike
> [1] http://en.wikipedia.org/wiki/Straw_man_proposal
>
>
>
>
> ------------------------------
>
> Message: 2
> Date: Sun, 22 Jul 2012 17:09:35 -0400
> From: Brian Layman <wp-hackers at thecodecave.com>
> Subject: Re: [wp-hackers] Your development Setup
> To: wp-hackers at lists.automattic.com
> Message-ID: <500C6C0F.8070308 at thecodecave.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> AND notepad++
> http://amiworks.co.in/talk/debugging-php-using-xdebug-and-notepad-part-i/
>
> (Thanks again Scribu, I never would have looked for this otherwise!)
>
> Brian Layman
>
> On 7/22/2012 3:25 PM, Mike Schinkel wrote:
> > On Jul 22, 2012, at 11:42 AM, Simon Prosser wrote:
> >>> So Sublime offers XDEBUG & Zend Debugger support now?
> >> https://github.com/Kindari/SublimeXdebug
> > Nice. Might be time to give Sublime another look.
> >
> > -Mike
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> ------------------------------
>
> Message: 3
> Date: Mon, 23 Jul 2012 00:19:20 +0300
> From: Mario Peshev <mario at peshev.net>
> Subject: Re: [wp-hackers] Access $post near template_include
> To: wp-hackers at lists.automattic.com
> Message-ID:
>         <
> CAN_8tK4YYuENoTZTiTP0YSuepwQG0H-060w3TJPG9C03KaLagQ at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Some very idiotic question here, got the add_filter line commented and the
> same function used as another hook on the line above it.
>
> Thanks Mike, pretty much better now.
>
> Mario Peshev
> Training and Consulting Services @ DevriX
> http://www.linkedin.com/in/mpeshev
> http://devrix.com
> http://peshev.net/blog
>
>
>
> On Sun, Jul 22, 2012 at 10:22 PM, Mike Schinkel <mike at newclarity.net>
> wrote:
>
> > On Jul 22, 2012, at 8:21 AM, Mario Peshev wrote:
> > > I'm trying to do some on-the-fly manipulations on the page template
> that
> > > take place in template-loader.php, by filtering the template_include
> part
> > > at the end. However I am not sure how to get the post ID there as I
> still
> > > don't have an access to the global variables for post and the loop and
> I
> > > also can't get it from the server variable due to permalink specifics.
> > >
> > > Is there a workaround to get the post ID at that point of loading?
> >
> > The global variable $post is available by the time the 'template_include'
> > hook fires.  Add this to your theme's functions.php file to see it in
> > action:
> >
> > add_filter( 'template_include', 'marios_template_include' );
> > function marios_template_include( $template_file ) {
> >   global $post;
> >   echo "Post ID: " . $post->ID . "</br>";
> >   return $template_file;
> > }
> >
> > Hope this helps.
> >
> > -Mike
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> ------------------------------
>
> Message: 4
> Date: Mon, 23 Jul 2012 02:52:21 +0300
> From: Almog Baku <almog.baku at gmail.com>
> Subject: Re: [wp-hackers] Your development Setup
> To: "wp-hackers at lists.automattic.com"
>         <wp-hackers at lists.automattic.com>
> Message-ID:
>         <
> CALncZpS6pHy_6xt6ktKNBRvQV2huu9Pn_MMx7EKHyCxYr7WFew at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
>
> I have to say i was never hear about phpstorm and sublime before.
> It make me wonder about my IDE, because eclipse is great! But it heavy and
> slow too.
>
> About notepad++, it a great tiny and nice editor. Sometimes I use it.
> BUT- its not an IDE. Its an editor. You cannot manage your development with
> it.
>
> ?????? ??? ???, 23 ????? 2012, Brian Layman ???:
>
> > AND notepad++
> > http://amiworks.co.in/talk/**debugging-php-using-xdebug-**
> > and-notepad-part-i/<
> http://amiworks.co.in/talk/debugging-php-using-xdebug-and-notepad-part-i/>
> >
> > (Thanks again Scribu, I never would have looked for this otherwise!)
> >
> > Brian Layman
> >
> > On 7/22/2012 3:25 PM, Mike Schinkel wrote:
> >
> >> On Jul 22, 2012, at 11:42 AM, Simon Prosser wrote:
> >>
> >>> So Sublime offers XDEBUG & Zend Debugger support now?
> >>>>
> >>> https://github.com/Kindari/**SublimeXdebug<
> https://github.com/Kindari/SublimeXdebug>
> >>>
> >> Nice. Might be time to give Sublime another look.
> >>
> >> -Mike
> >>
> >> ______________________________**_________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> >>
> >
> > ______________________________**_________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> >
>
>
> ------------------------------
>
> Message: 5
> Date: Mon, 23 Jul 2012 01:35:51 +0100
> From: Aero Maxx <aero.maxx.d at gmail.com>
> Subject: [wp-hackers] Custom post types or plugin to manage and keep
>         dynamic content updated.
> To: "wp-hackers at lists.automattic.com"
>         <wp-hackers at lists.automattic.com>
> Message-ID: <-1346563978441712930 at unknownmsgid>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hello All,
>
> I've been working on a lottery site as a hobby project which isn't live at
> the moment and I'm wanting to include some statistical facts about the
> individual numbers in the lottery games.
> This question maybe OT so I apologise in advance if so.
>
> The urls would similar to http://www.domain/facts/([0-9]{1,})/ or
> http://www.domain.com/ <http://www.domain.com/facts/game/lotto/>
> facts/game/lotto/ <http://www.domain.com/facts/game/lotto/>([0-9]{1,})/
>
> These urls are from the rewrite rules the last number in the urls is the
> ball number 1-49.
>
> I'm not sure what the best way to go about this is, would it be best
> advised to do a custom post type and put short codes into the posts to keep
> the ever changing statistics update, this would mean I could put the custom
> post type into the menu easily and have the individual games as a drop down
> from the number facts pages.
>
> Or would it be best to create a single page called facts have the short
> code from a plugin inserted here and have the plugin handle everything, it
> would mean I would have to use custom links in the menu to get the links
> for individual game statistics. The only downside I can see is that I would
> lose the blog style listing when viewing the number facts for an individual
> game as the custom post type option would have an individual post per
> number and game. So this option may not look quite as good or easy to read
> and find and could potentially be more work and hassle for me to make it
> look good.
>
> The number fact page for an individual number would have some basic textual
> facts and a graph also in the page.
>
> You can see a rough idea of what I mean here, click on any number to see
> the page information I was talking about above not linked to an individual
> number as the link is quite long! -
> http://lottery.merseyworld.com/Palace.html
>
> What are your thoughts any help advice or suggestions your able to provide
> would be most helpful!
>
> Thanks
> Daniel
>
>
> ------------------------------
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> End of wp-hackers Digest, Vol 90, Issue 59
> ******************************************
>



-- 
"The following will cause your email to be flagged:
*u, ur, sumthing, sumeone, dat, dis, ight, dere, plz, thx*"

Zane Matthew Kolnik
443-804-8161
http://bmxraceevents.com/
http:/zanematthew.com/ <http://blog.zanematthew.com/>
http://twitter.com/zanematthew/

From zanematthew at gmail.com  Mon Jul 23 16:01:51 2012
From: zanematthew at gmail.com (zanematthew at gmail.com)
Date: Mon, 23 Jul 2012 12:01:51 -0400
Subject: [wp-hackers] Using wp_generate_attachment_metadata inside a plugin.
Message-ID: <CAJLhW7LnkJfViVs=wA_ZaVdRHQqnM9ytec6xpp05p82B5ogfcQ@mail.gmail.com>

I have a plugin which in short powers this site <http://bmxraceevents.com/>,
I recently added this <http://bmxraceevents.com/events/new> form so users
can create events. Note the "browse" button, I'm using
this<https://github.com/zanematthew/zm-upload>library I wrote to
assist in meda uploads.

Everything works fine when used inside of a theme, but when used in a
plugin the function
wp_generate_attachment_metadata<http://codex.wordpress.org/Function_Reference/wp_generate_attachment_metadata>
does
not generate image thumbnails, everything else does work.

So I have to create my own thumbnails, which is not an issue, but my
question is "why"? Here's my final code <https://gist.github.com/3164389>.

-- 
"The following will cause your email to be flagged:
*u, ur, sumthing, sumeone, dat, dis, ight, dere, plz, thx*"

Zane Matthew Kolnik
443-804-8161
http://bmxraceevents.com/
http:/zanematthew.com/ <http://blog.zanematthew.com/>
http://twitter.com/zanematthew/

From otto at ottodestruct.com  Mon Jul 23 16:41:25 2012
From: otto at ottodestruct.com (Otto)
Date: Mon, 23 Jul 2012 11:41:25 -0500
Subject: [wp-hackers] wp-hackers Digest, Vol 90, Issue 59
In-Reply-To: <CAJLhW7LRpwgS_Njw8crHEL9S5dxDD=R25oJY3Cum=SYE0QRuPQ@mail.gmail.com>
References: <mailman.9.1343044802.17129.wp-hackers@lists.automattic.com>
	<CAJLhW7LRpwgS_Njw8crHEL9S5dxDD=R25oJY3Cum=SYE0QRuPQ@mail.gmail.com>
Message-ID: <CAD-FghysqYLPTyWNeLc8SOsRfjHr77nMYTsL4Za9zWSqKqbuLQ@mail.gmail.com>

On Mon, Jul 23, 2012 at 10:50 AM, zanematthew at gmail.com
<zanematthew at gmail.com> wrote:
> Please let me know if I'm replying to these correctly. I've been on the
> list for a few weeks now, but this is my first reply :D
>
> Message 1 & 3: Re: Your development Setup
> I use (and love) Sublime text2. I've work remotely and locally before, and
> now back to local. Sublime text2 has a plugin called sftp which I've used
> also. FYI, every few months I switch editors for a change, I've used
> bbedit, coda, textmate, textwrangler, notepad++, dreamweaver, nano, pi, vi,
> css edit, and so far Sublime I've used the longest.
>
> Message 3: Access $post near template_include
> Can't you just hook into the
> template_redirect<http://codex.wordpress.org/Plugin_API/Action_Reference/template_redirect>action?
> I've been using on that my site and it works well, here's my
> routes.php, maybe overkill for what you need.
>
> Message "drop in plugins"
> Isn't this what MU is for?
>

Howdy!

Please don't reply to digest emails. If you want to chat on the list,
then subscribe to it correctly, using full-emails. Digests are hard
for people to use and read, and pretty much ensure that your replies
will be ignored by the majority of people.

-Otto

From mike at mikevanwinkle.com  Mon Jul 23 18:25:08 2012
From: mike at mikevanwinkle.com (Michael Van Winkle)
Date: Mon, 23 Jul 2012 11:25:08 -0700
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
Message-ID: <CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>

In my experience caching is done best when it's done by the site developer.
One-size fits all solutions tend to fail or create more issues than then
they solve. There are a few places in WP where'd I would like to be able to
filter the output so I can deliver a cached version. For example in the
load_template() function it would be nice to have the ability to return a
"fragment" from the object cache rather than reloading the template file.

However, I'm not sure I understand why the existing object cache is
insufficient for delivering that fragment. Can we get more specific about
what the failure of the current object caching api is? I think a MUCH
bigger issue is theme/plugin developers generally lack of awareness and/or
concern for caching and performance.

Cheers,

Mike

On Mon, Jul 23, 2012 at 5:13 AM, Ryan Hellyer <ryan at pixopoint.com> wrote:

> Perhaps a better solution may be to provide an API to allow regular
> plugins to add drop-ins automatically? This can already be done via
> the WordPress file API, but having something specific to dropins might
> make some sense.
>
> Or perhaps we should encourage existing drop-in plugin developers to
> implement the WordPress file API directly, to copy their files across,
> instead of requiring manual copying?
>
> The API could also remove the drop-in when the plugin is deactivated.
> This would remove the headaches some users have when they deactivate a
> caching plugin and still have the advanced-caching.php file lingering
> in their system even though the plugin is no longer in use.
>
>
> > Date: Sun, 22 Jul 2012 15:54:33 -0400
> > From: Mike Schinkel <mike at newclarity.net>
> > Subject: Re: [wp-hackers] Caching as part of the core
> > To: wp-hackers at lists.automattic.com
> > Message-ID: <66806DEC-16A6-43A3-993C-BF9371932991 at newclarity.net>
> > Content-Type: text/plain; charset=us-ascii
> >
> > On Jul 22, 2012, at 1:31 PM, Brian Layman wrote:
> >> Drop in plugins are what they are because they must be loaded early on,
> or at least at very specific times in the initiation process, to do their
> job.
> >> They are so specific in function, that the list of file names is hard
> coded into the core.
> >
> > But clearly the method $dropins use to find and load files could be
> improved, no?
> >
> > Consider this as a strawman proposal[1]:
> >
> > 1.) Move the require() in /wp-settings.php for /wp-includes/plugin.php
> from line 78 to 31 so that it gets loaded before any drop-ins.
> > 2.) On line 32 of /wp-settings.php call a function that looks for a
> '/wp-content/dropins/' directory; if it exists then include() all the .php
> files in the directory.
> > 3.) Deprecate existing dropins and implement do_action() hooks to run in
> place of existing dropins.
> > 4.) Document that any file in dropins directory is responsible to add
> the actions it needs to support its own drop-in functionality.
> >
> > Thoughts?  If I don't get someone to explain an obvious reason this
> won't work I can add to Trac.
> >
> > -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Mike Van Winkle
708-289-3136
mike at mikevanwinkle.com
http://www.mikevanwinkle.com
http://www.twitter.com/mpvanwinkle
http://www.facebook.com/mpvanwinkle


"All excellent things are as difficult as they are rare." -Spinoza

From paul at codehooligans.com  Mon Jul 23 18:25:12 2012
From: paul at codehooligans.com (Paul Menard)
Date: Mon, 23 Jul 2012 14:25:12 -0400
Subject: [wp-hackers] At what point are a Theme's widgets loaded?
Message-ID: <20425556-1E44-4D96-B7B5-339D0B9C16E5@codehooligans.com>

I have a custom theme switcher plugin I wrote some time ago for use by a few clients. The plugin adds a widget which is just a list of anchors for some special themes. The user clicks on an anchor and the theme would change. The anchor link passed in a query string var to indicate  the alternate theme. There was nothing much special on the themes most of these were the same theme with slight color variations. 

Since upgrading a few client sites this past weekend to WP 3.4.1 I noticed the theme switcher was broken. Well to be specific the theme still does switch to the alternate theme. But the issue is the alternate theme widgets are not loaded. 

The plugin has two main functions that hook into the filters for 'stylesheet' and 'template' where each check for the query string var and if set return that alternate theme. I know WP 3.4 made some changes and introduced the WP_Theme class. But I'm not sure if there are new filters/actions needed to force the loading of the theme's widgets. Since this is just a user theme switcher the real theme is not effected within wp-admin. 

Anyone have a thought? 

P-


From dianakac at gmail.com  Mon Jul 23 20:35:31 2012
From: dianakac at gmail.com (Diana K. C)
Date: Mon, 23 Jul 2012 17:35:31 -0300
Subject: [wp-hackers] WordPress memory needed
Message-ID: <009b01cd6912$b6930a70$2200a8c0@TITA>

I wasn't aware that WP needes 256MB available memory (trac http://core.trac.wordpress.org/ticket/13847#comment:2) but it seems works ok with only 64MB also.

Increase memory to 256 will be enough for minimal BuddyPress features and bbPress then?


dianakcury.com
about.me/dianakc

From piemanek at gmail.com  Mon Jul 23 22:54:11 2012
From: piemanek at gmail.com (Simon Blackbourn)
Date: Tue, 24 Jul 2012 00:54:11 +0200
Subject: [wp-hackers] Capabilities and all that
In-Reply-To: <CAOqAKWCbaLyS5Pm7kOUHu1J3MdFKEXozcdY=GcgV4k1A+wiORg@mail.gmail.com>
References: <85F046F520934E85A573B10551F8B898@sweetinteraction.com>
	<CAOqAKWCbaLyS5Pm7kOUHu1J3MdFKEXozcdY=GcgV4k1A+wiORg@mail.gmail.com>
Message-ID: <CAJxFMSAyJBhUq2YKmDR23eYCF3Dz1680V+xu2OKfowqHNoxbFQ@mail.gmail.com>

my answer to a stack exchange question & the codex article might also come
in handy, especially if you need the video editor to be able to upload
images but don't want to give them the edit_posts capability:

http://wordpress.stackexchange.com/a/57373
http://codex.wordpress.org/Plugin_API/Filter_Reference/user_has_cap

From shinji at elite-systems.org  Mon Jul 23 23:18:35 2012
From: shinji at elite-systems.org (Robert Pendell)
Date: Mon, 23 Jul 2012 19:18:35 -0400
Subject: [wp-hackers] WordPress memory needed
In-Reply-To: <009b01cd6912$b6930a70$2200a8c0@TITA>
References: <009b01cd6912$b6930a70$2200a8c0@TITA>
Message-ID: <CAAeCd-M0rA67A0PcErB1oG7shXJce3oX1ym5fgWss1wBRXa3wA@mail.gmail.com>

On Mon, Jul 23, 2012 at 4:35 PM, Diana K. C <dianakac at gmail.com> wrote:

> I wasn't aware that WP needes 256MB available memory (trac
> http://core.trac.wordpress.org/ticket/13847#comment:2) but it seems works
> ok with only 64MB also.
>
> Increase memory to 256 will be enough for minimal BuddyPress features and
> bbPress then?
>
>
> dianakcury.com
> about.me/dianakc
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

As far as I'm aware of it probably isn't so much that Wordpress that needs
256MB of ram but it's supporting applications like PHP, MySQL, and the HTTP
server (be it Apache, Lighttpd, nginx, ect.).

Robert Pendell
shinji at elite-systems.org
*A perfect world is one of chaos.*

From almog.baku at gmail.com  Mon Jul 23 23:51:31 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Tue, 24 Jul 2012 02:51:31 +0300
Subject: [wp-hackers] WordPress memory needed
In-Reply-To: <CAAeCd-M0rA67A0PcErB1oG7shXJce3oX1ym5fgWss1wBRXa3wA@mail.gmail.com>
References: <009b01cd6912$b6930a70$2200a8c0@TITA>
	<CAAeCd-M0rA67A0PcErB1oG7shXJce3oX1ym5fgWss1wBRXa3wA@mail.gmail.com>
Message-ID: <CALncZpQY6isbH6c=j4rXWqqWnnzD=wR1GujVpcavLUdAVRgTww@mail.gmail.com>

If you ask me.. 256 is very very low.. so don't be miser about your
memory.. it for your own good!

On Tue, Jul 24, 2012 at 2:18 AM, Robert Pendell <shinji at elite-systems.org>wrote:

> On Mon, Jul 23, 2012 at 4:35 PM, Diana K. C <dianakac at gmail.com> wrote:
>
> > I wasn't aware that WP needes 256MB available memory (trac
> > http://core.trac.wordpress.org/ticket/13847#comment:2) but it seems
> works
> > ok with only 64MB also.
> >
> > Increase memory to 256 will be enough for minimal BuddyPress features and
> > bbPress then?
> >
> >
> > dianakcury.com
> > about.me/dianakc
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
> As far as I'm aware of it probably isn't so much that Wordpress that needs
> 256MB of ram but it's supporting applications like PHP, MySQL, and the HTTP
> server (be it Apache, Lighttpd, nginx, ect.).
>
> Robert Pendell
> shinji at elite-systems.org
> *A perfect world is one of chaos.*
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mike at newclarity.net  Tue Jul 24 00:12:26 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Mon, 23 Jul 2012 20:12:26 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
Message-ID: <29D8A4E1-44A0-4ECC-98AE-4D01B0777453@newclarity.net>

On Jul 23, 2012, at 8:13 AM, Ryan Hellyer wrote:
>> Date: Sun, 22 Jul 2012 15:54:33 -0400 From: Mike Schinkel <mike at newclarity.net>
>> 
>> Consider this as a strawman proposal[1]:
>> 
>> 1.) Move the require() in /wp-settings.php for /wp-includes/plugin.php from line 78 to 31 so that it gets loaded before any drop-ins.
>> 2.) On line 32 of /wp-settings.php call a function that looks for a '/wp-content/dropins/' directory; if it exists then include() all the .php files in the directory.
>> 3.) Deprecate existing dropins and implement do_action() hooks to run in place of existing dropins.
>> 4.) Document that any file in dropins directory is responsible to add the actions it needs to support its own drop-in functionality.
>> 
>> Thoughts?  If I don't get someone to explain an obvious reason this won't work I can add to Trac.
> 
> Perhaps a better solution may be to provide an API to allow regular
> plugins to add drop-ins automatically? This can already be done via
> the WordPress file API, but having something specific to dropins might
> make some sense.
> 
> Or perhaps we should encourage existing drop-in plugin developers to
> implement the WordPress file API directly, to copy their files across,
> instead of requiring manual copying?
> 
> The API could also remove the drop-in when the plugin is deactivated.
> This would remove the headaches some users have when they deactivate a
> caching plugin and still have the advanced-caching.php file lingering
> in their system even though the plugin is no longer in use.

That's an orthogonal issue and doesn't address core only supporting one drop-in per site, which the proposal does address.  

Having an API to add dropsins could have value though if combined with the ability to support hook-based dropins as proposed above.

-Mike

From otto at ottodestruct.com  Tue Jul 24 00:25:34 2012
From: otto at ottodestruct.com (Otto)
Date: Mon, 23 Jul 2012 19:25:34 -0500
Subject: [wp-hackers] WordPress memory needed
In-Reply-To: <009b01cd6912$b6930a70$2200a8c0@TITA>
References: <009b01cd6912$b6930a70$2200a8c0@TITA>
Message-ID: <CAD-Fghzz3uVFFUbTxHUZeLOjO2LENbGSYjmWqeuW7pf7nOZ3+Q@mail.gmail.com>

On Mon, Jul 23, 2012 at 3:35 PM, Diana K. C <dianakac at gmail.com> wrote:
> I wasn't aware that WP needes 256MB available memory (trac http://core.trac.wordpress.org/ticket/13847#comment:2) but it seems works ok with only 64MB also.
>
> Increase memory to 256 will be enough for minimal BuddyPress features and bbPress then?

WordPress doesn't "need" any particular amount of memory, however in
many configurations (and with plugins/themes/etc), the default of 32M
is often too low.

WordPress attempts to set the memory limit to 64M by default, and 256M
in specific places in the admin area (especially when manipulating
image files during media upload, extra memory is needed).

However, on many hosting configurations, the memory limit is fixed by
the host and cannot be adjusted by PHP code itself. In these cases, we
recommend having the memory limit set to a minimum of 64M, and higher
if you're going to be uploading large megapixel images. Setting the
memory limit higher does not mean that the process will actually use
that memory all the time, it only means that the process *can* use
that much memory, if needed, without triggering a fatal error.

-Otto

From mike at newclarity.net  Tue Jul 24 00:35:30 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Mon, 23 Jul 2012 20:35:30 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
Message-ID: <87760333-C5DB-4DE4-8A2C-55C1AE05B79C@newclarity.net>

On Jul 23, 2012, at 2:25 PM, Michael Van Winkle wrote:
> In my experience caching is done best when it's done by the site developer.

It's be interested in hearing about your experience and the specific scenarios where caching is better done by the site developer?  

> One-size fits all solutions tend to fail or create more issues than then
> they solve.

I don't think anyone is arguing for a one-size-fits-all solution.  Asking for API support is effectively the opposite approach.

> There are a few places in WP where'd I would like to be able to
> filter the output so I can deliver a cached version. For example in the
> load_template() function it would be nice to have the ability to return a
> "fragment" from the object cache rather than reloading the template file.

Strongly agree.  Have you added a trac ticket to request this?

Or we could just use my ticket, which would allow the same thing but was provided for a different use-case:

http://core.trac.wordpress.org/ticket/21062 

> However, I'm not sure I understand why the existing object cache is
> insufficient for delivering that fragment. Can we get more specific about
> what the failure of the current object caching api is?

It's not (necessarily) insufficient, it's just a low-level solution for which higher-level APIs could be built on.  

An good analogy would be a database system like MySQL is to a file system like those found in Linux[1] just as higher level caching APIs such as for page, query, fragment, widget and menu caching could be to the Wordpress object cache API; i.e the former are built using the latter.

> I think a MUCH bigger issue is theme/plugin developers generally lack of
> awareness and/or concern for caching and performance.

Adding a set of caching APIs so bloggers could write about it would go a long way to providing the requested awareness.  

As is, core simply has too many issues to enable good caching implementations in plugins such as the "there-can-be-only-one" dropins problem and sivel's Trac ticket asking for hooks to support fragment caching (this ticket has seen very little attention):

http://core.trac.wordpress.org/ticket/18803

Maybe we could start by discussing what could be changed in core to better support fragment caching?

-Mike

[1] http://tldp.org/LDP/intro-linux/html/sect_03_01.html

From mike at newclarity.net  Tue Jul 24 00:37:39 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Mon, 23 Jul 2012 20:37:39 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CABwjQByiJ+pi0edg6iZCyRKX2_DB5LLX7U8zLuDAtgr=A8Et7A@mail.gmail.com>
References: <CABwjQByiJ+pi0edg6iZCyRKX2_DB5LLX7U8zLuDAtgr=A8Et7A@mail.gmail.com>
Message-ID: <55331621-4C3F-46D3-B106-BC6C2DB0D1DB@newclarity.net>

On Jul 20, 2012, at 2:44 PM, Mike Bijon wrote:
> And, if you still want caching in core, take a look at these recent slides
> on fragment caching,
> http://www.ethitter.com/slides/wcmia-caching-scaling-2012-02-18/#slide-0.
> It's close to the ideal case many people have advocated for in this thread,
> but it's very app & site-specific. Anyone have an idea how to build
> fragment caching in a globally-functional, non-site-specific way?

Discussing this ticket would be a start:

http://core.trac.wordpress.org/ticket/18803

-Mike


From dianakac at gmail.com  Tue Jul 24 00:44:24 2012
From: dianakac at gmail.com (Diana K. C)
Date: Mon, 23 Jul 2012 21:44:24 -0300
Subject: [wp-hackers] WordPress memory needed
References: <009b01cd6912$b6930a70$2200a8c0@TITA>
	<CAD-Fghzz3uVFFUbTxHUZeLOjO2LENbGSYjmWqeuW7pf7nOZ3+Q@mail.gmail.com>
Message-ID: <004601cd6935$7abd6c70$2200a8c0@TITA>

> Setting the
> memory limit higher does not mean that the process will actually use
> that memory all the time, it only means that the process *can* use
> that much memory, if needed, without triggering a fatal error.


I though so. I dealing with a new install, this service offers 64MB only. I 
tried to use both BuddyPress and bbPress but the fatal error showed once and 
again (menu , widgets panels etc). Sometime these plugins will need more 
than 64MB then :( . Now I deactivated BuddyPress and is working fine.

----- Original Message ----- 
From: "Otto" <otto at ottodestruct.com>
To: <wp-hackers at lists.automattic.com>
Sent: Monday, July 23, 2012 9:25 PM
Subject: Re: [wp-hackers] WordPress memory needed


> On Mon, Jul 23, 2012 at 3:35 PM, Diana K. C <dianakac at gmail.com> wrote:
>> I wasn't aware that WP needes 256MB available memory (trac 
>> http://core.trac.wordpress.org/ticket/13847#comment:2) but it seems works 
>> ok with only 64MB also.
>>
>> Increase memory to 256 will be enough for minimal BuddyPress features and 
>> bbPress then?
>
> WordPress doesn't "need" any particular amount of memory, however in
> many configurations (and with plugins/themes/etc), the default of 32M
> is often too low.
>
> WordPress attempts to set the memory limit to 64M by default, and 256M
> in specific places in the admin area (especially when manipulating
> image files during media upload, extra memory is needed).
>
> However, on many hosting configurations, the memory limit is fixed by
> the host and cannot be adjusted by PHP code itself. In these cases, we
> recommend having the memory limit set to a minimum of 64M, and higher
> if you're going to be uploading large megapixel images. Setting the
> memory limit higher does not mean that the process will actually use
> that memory all the time, it only means that the process *can* use
> that much memory, if needed, without triggering a fatal error.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 


From bpetty at bluehost.com  Tue Jul 24 01:31:05 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Mon, 23 Jul 2012 19:31:05 -0600
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
Message-ID: <500DFAD9.8030808@bluehost.com>

On 07/23/2012 12:25 PM, Michael Van Winkle wrote:
> However, I'm not sure I understand why the existing object cache is 
> insufficient for delivering that fragment. Can we get more specific
> about what the failure of the current object caching api is? I think
> a MUCH bigger issue is theme/plugin developers generally lack of
> awareness and/or concern for caching and performance.

Personally, I believe the failure is mainly in the fact that the
existing object cache isn't persistent. A cache that doesn't have the
ability to persist across requests is really just a glorified static
class variable / global variable. It doesn't actually provide anything
helpful that you couldn't already do without it.

Of course fixing that does absolutely require an outside service such as
memcache/XCache/APC, or just fall back on file. There's two main
arguments I keep seeing against expanding the existing object cache to
support these:

1. Most shared hosting providers don't supply any of those services.
2. This should be implemented by plugins (and is currently).

At Bluehost, even though we don't offer memcache directly, a number of
customers have still compiled and run it themselves on our servers
anyway (and we do enable the PHP memcache extension). On the other hand
though, nearly every shared hosting provider does support file write
permissions, so at the very least, the file cache backend would work out
of the box on 99% of shared hosting accounts.

Putting that aside, it's possible to not only enable support for all of
the backends mentioned above in core WP, but to do so in a completely
backwards compatible way with the existing object cache, *and* also do
so without adding a single extra option to the installer *or* the
administration panel.

Those on shared hosting providers without support for any of those
backends (including file cache, assuming no write permissions)
wouldn't even notice support for this was added. And for those that do
support it, it could either be automatically configured during install
(though I wouldn't recommend that - beyond enabling the file cache at
least), or it could be a couple incredibly simple options in
wp-config.php (as opposed to looking for and installing some possibly
defective/dangerous 3rd party plugin/drop-in).

All web application frameworks provide this API exactly as I described
here and they do it because most web applications need it, and while
WordPress isn't trying to be a web application framework, it's not built
on top of one, so it has to provide it's own. I do actually believe that
this doesn't belong in WordPress, but that's only because it belongs in
a web framework. It's not like WordPress will ever be built on one
though, so there's really not much choice than to add it.

As for implementing it in a plugin, is there really more than one way to
write an API around a cache engine? There really isn't, they're all the
same, they just store the objects in different ways. So what is the
point of it even being a 3rd party drop-in or plugin?

To get back to your concern that the main issue is a lack of awareness
for caching or performance, I think part of that also has to do with the
fact that the existing object cache is barely helpful in the first place
because it's not persistent. When plugin authors know they can cache
data for longer than a single request (and that it will work on nearly
all WP installations by default without requiring additional plugins),
they'll be much more likely to make use of the caching engine since it
will actually make way more of a difference.

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com

From mike at newclarity.net  Tue Jul 24 02:23:15 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Mon, 23 Jul 2012 22:23:15 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <500DFAD9.8030808@bluehost.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
Message-ID: <52FA10DE-A6FB-4DE4-ABED-701E5217E6F4@newclarity.net>

Well said.

-Mike

On Jul 23, 2012, at 9:31 PM, Bryan Petty wrote:

> On 07/23/2012 12:25 PM, Michael Van Winkle wrote:
>> However, I'm not sure I understand why the existing object cache is 
>> insufficient for delivering that fragment. Can we get more specific
>> about what the failure of the current object caching api is? I think
>> a MUCH bigger issue is theme/plugin developers generally lack of
>> awareness and/or concern for caching and performance.
> 
> Personally, I believe the failure is mainly in the fact that the
> existing object cache isn't persistent. A cache that doesn't have the
> ability to persist across requests is really just a glorified static
> class variable / global variable. It doesn't actually provide anything
> helpful that you couldn't already do without it.
> 
> Of course fixing that does absolutely require an outside service such as
> memcache/XCache/APC, or just fall back on file. There's two main
> arguments I keep seeing against expanding the existing object cache to
> support these:
> 
> 1. Most shared hosting providers don't supply any of those services.
> 2. This should be implemented by plugins (and is currently).
> 
> At Bluehost, even though we don't offer memcache directly, a number of
> customers have still compiled and run it themselves on our servers
> anyway (and we do enable the PHP memcache extension). On the other hand
> though, nearly every shared hosting provider does support file write
> permissions, so at the very least, the file cache backend would work out
> of the box on 99% of shared hosting accounts.
> 
> Putting that aside, it's possible to not only enable support for all of
> the backends mentioned above in core WP, but to do so in a completely
> backwards compatible way with the existing object cache, *and* also do
> so without adding a single extra option to the installer *or* the
> administration panel.
> 
> Those on shared hosting providers without support for any of those
> backends (including file cache, assuming no write permissions)
> wouldn't even notice support for this was added. And for those that do
> support it, it could either be automatically configured during install
> (though I wouldn't recommend that - beyond enabling the file cache at
> least), or it could be a couple incredibly simple options in
> wp-config.php (as opposed to looking for and installing some possibly
> defective/dangerous 3rd party plugin/drop-in).
> 
> All web application frameworks provide this API exactly as I described
> here and they do it because most web applications need it, and while
> WordPress isn't trying to be a web application framework, it's not built
> on top of one, so it has to provide it's own. I do actually believe that
> this doesn't belong in WordPress, but that's only because it belongs in
> a web framework. It's not like WordPress will ever be built on one
> though, so there's really not much choice than to add it.
> 
> As for implementing it in a plugin, is there really more than one way to
> write an API around a cache engine? There really isn't, they're all the
> same, they just store the objects in different ways. So what is the
> point of it even being a 3rd party drop-in or plugin?
> 
> To get back to your concern that the main issue is a lack of awareness
> for caching or performance, I think part of that also has to do with the
> fact that the existing object cache is barely helpful in the first place
> because it's not persistent. When plugin authors know they can cache
> data for longer than a single request (and that it will work on nearly
> all WP installations by default without requiring additional plugins),
> they'll be much more likely to make use of the caching engine since it
> will actually make way more of a difference.
> 
> -- 
> Bryan Petty
> WordPress Developer
> bpetty at bluehost.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From almog.baku at gmail.com  Tue Jul 24 02:37:14 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Tue, 24 Jul 2012 05:37:14 +0300
Subject: [wp-hackers] WordPress memory needed
In-Reply-To: <004601cd6935$7abd6c70$2200a8c0@TITA>
References: <009b01cd6912$b6930a70$2200a8c0@TITA>
	<CAD-Fghzz3uVFFUbTxHUZeLOjO2LENbGSYjmWqeuW7pf7nOZ3+Q@mail.gmail.com>
	<004601cd6935$7abd6c70$2200a8c0@TITA>
Message-ID: <CALncZpR1Bjhn_=CfuxLkr9zbeXtHwMyxdHhDXcKovAE6jWRi8g@mail.gmail.com>

Dont forget that the mysql, apache and php needs memory too.
If you talking about only the php.ini configuration thoose size are the
minimum but larger size cannot make this corrupt.

?????? ??? ?????, 24 ????? 2012, Diana K. C ???:

> Setting the
>> memory limit higher does not mean that the process will actually use
>> that memory all the time, it only means that the process *can* use
>> that much memory, if needed, without triggering a fatal error.
>>
>
>
> I though so. I dealing with a new install, this service offers 64MB only.
> I tried to use both BuddyPress and bbPress but the fatal error showed once
> and again (menu , widgets panels etc). Sometime these plugins will need
> more than 64MB then :( . Now I deactivated BuddyPress and is working fine.
>
> ----- Original Message ----- From: "Otto" <otto at ottodestruct.com>
> To: <wp-hackers at lists.automattic.com>
> Sent: Monday, July 23, 2012 9:25 PM
> Subject: Re: [wp-hackers] WordPress memory needed
>
>
>  On Mon, Jul 23, 2012 at 3:35 PM, Diana K. C <dianakac at gmail.com> wrote:
>>
>>> I wasn't aware that WP needes 256MB available memory (trac
>>> http://core.trac.wordpress.**org/ticket/13847#comment:2<http://core.trac.wordpress.org/ticket/13847#comment:2>)
>>> but it seems works ok with only 64MB also.
>>>
>>> Increase memory to 256 will be enough for minimal BuddyPress features
>>> and bbPress then?
>>>
>>
>> WordPress doesn't "need" any particular amount of memory, however in
>> many configurations (and with plugins/themes/etc), the default of 32M
>> is often too low.
>>
>> WordPress attempts to set the memory limit to 64M by default, and 256M
>> in specific places in the admin area (especially when manipulating
>> image files during media upload, extra memory is needed).
>>
>> However, on many hosting configurations, the memory limit is fixed by
>> the host and cannot be adjusted by PHP code itself. In these cases, we
>> recommend having the memory limit set to a minimum of 64M, and higher
>> if you're going to be uploading large megapixel images. Setting the
>> memory limit higher does not mean that the process will actually use
>> that memory all the time, it only means that the process *can* use
>> that much memory, if needed, without triggering a fatal error.
>>
>> -Otto
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From wordpress at dd32.id.au  Tue Jul 24 03:20:27 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Tue, 24 Jul 2012 13:20:27 +1000
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <500DFAD9.8030808@bluehost.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
Message-ID: <CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>

On 24 July 2012 11:31, Bryan Petty <bpetty at bluehost.com> wrote:
> On 07/23/2012 12:25 PM, Michael Van Winkle wrote:
>> However, I'm not sure I understand why the existing object cache is
>> insufficient for delivering that fragment. Can we get more specific
>> about what the failure of the current object caching api is? I think
>> a MUCH bigger issue is theme/plugin developers generally lack of
>> awareness and/or concern for caching and performance.
>
> Personally, I believe the failure is mainly in the fact that the
> existing object cache isn't persistent. A cache that doesn't have the
> ability to persist across requests is really just a glorified static
> class variable / global variable. It doesn't actually provide anything
> helpful that you couldn't already do without it.
>
> Of course fixing that does absolutely require an outside service such as
> memcache/XCache/APC, or just fall back on file. There's two main
> arguments I keep seeing against expanding the existing object cache to
> support these:
>
> 1. Most shared hosting providers don't supply any of those services.
> 2. This should be implemented by plugins (and is currently).
>
> At Bluehost, even though we don't offer memcache directly, a number of
> customers have still compiled and run it themselves on our servers
> anyway (and we do enable the PHP memcache extension). On the other hand
> though, nearly every shared hosting provider does support file write
> permissions, so at the very least, the file cache backend would work out
> of the box on 99% of shared hosting accounts.
>
> Putting that aside, it's possible to not only enable support for all of
> the backends mentioned above in core WP, but to do so in a completely
> backwards compatible way with the existing object cache, *and* also do
> so without adding a single extra option to the installer *or* the
> administration panel.
>
> Those on shared hosting providers without support for any of those
> backends (including file cache, assuming no write permissions)
> wouldn't even notice support for this was added. And for those that do
> support it, it could either be automatically configured during install
> (though I wouldn't recommend that - beyond enabling the file cache at
> least), or it could be a couple incredibly simple options in
> wp-config.php (as opposed to looking for and installing some possibly
> defective/dangerous 3rd party plugin/drop-in).
>
> All web application frameworks provide this API exactly as I described
> here and they do it because most web applications need it, and while
> WordPress isn't trying to be a web application framework, it's not built
> on top of one, so it has to provide it's own. I do actually believe that
> this doesn't belong in WordPress, but that's only because it belongs in
> a web framework. It's not like WordPress will ever be built on one
> though, so there's really not much choice than to add it.
>
> As for implementing it in a plugin, is there really more than one way to
> write an API around a cache engine? There really isn't, they're all the
> same, they just store the objects in different ways. So what is the
> point of it even being a 3rd party drop-in or plugin?
>
> To get back to your concern that the main issue is a lack of awareness
> for caching or performance, I think part of that also has to do with the
> fact that the existing object cache is barely helpful in the first place
> because it's not persistent. When plugin authors know they can cache
> data for longer than a single request (and that it will work on nearly
> all WP installations by default without requiring additional plugins),
> they'll be much more likely to make use of the caching engine since it
> will actually make way more of a difference.

To me, this post (And most of this thread honestly) screams "I don't
know how the current system works, so I think we should add something
else instead" by people who are either a) not writing this stuff b)
don't configure servers, and c) don't know the history here

Back in WordPress < 2.5, there was a file-based Object cache included
in WordPress by default, however, it suffered one major drawback..
although when enabled it reduced the reliance upon MySQL and
regenerating objects constantly, on many hosts it was inefficient and
would *slow the site down instead*.

See http://core.trac.wordpress.org/ticket/5570 for when it was
removed, although the ticket doesn't mention the speed issues I
mentioned

The object cache is designed for fast persistent storage, and to
prevent requerying of data - As it is, a simply per-request in-memory
cache it saves a lot of queries from hitting MySQL because the result
of the functions are already cached.
Filesystems are often not fast, infact, they're REALLY slow, in many
cases, querying the data directly from MySQL was faster (thanks to
it's in-memory caches - query cache and table indicies in memory, etc)
- but a SQL is almost always slower than a key-value lookup in a
proper memory cache (Since it has to parse the query, check no data
changed, etc)

File based caches are good, but not for storing hundreds of small
chunks of data the pageload needs.. For example, loading the wp-admin
dashboard on my site requires 475 cache gets, Loading the front end?
1102 cache gets, a large number of those are duplicated (for example,
the alloptions and notoptions cache's) but the majority are not,
storing 500+ chunks of data on the filesystem, reading them in,
deserializing them, that takes time..  especially when it's a Network
based filesystem (NFS) which many shared hosts use - Many have local
caches for commonly accessed files (ie. all the WordPress .php's) but
many won't cache 10,000 small files (per site!) locally.. leading to
extra latency to retrieve the data.
You could say "Well, Just split the data over multiple files!".. Tell
you what, when you stop coming across MySQL databases that are
consistently less than 10MB in size, and not reaching >100MB, let me
know.. and maybe a dozen small efficient files will be usable.
Lets also not get into the race conditions of file-based caches, the
high latency increases chance conditions where 2 pageloads will do an
update_option, and clobber eachother since the files took so long to
update for the other process to notice (Yes, this is possible
currently with MySQL, the difference is, it's a much smaller chance it
happens)

It's true that since the file cache was introduced (And later removed)
that WordPress has become much more complex, the data structures being
stored are larger, the number of keys being set are larger (as there's
permutations of data with the number of options we now have for
functions), so potential issues back then, are perhaps compounded
today and will be even worse..

Full page caching to a static file is significantly different from the
above scenario, for that, you're storing and retrieving a SINGLE file
(So even if it's hitting the disk, it isn't loading the 100+ WordPress
files, nor having to load PHP in some cases). This is significantly
faster and more efficient *on pretty much all hosts*.

So, Why not include a full-page cache in WordPress then? Well.. several reasons:
 1. We have Plugins for this - the fact we have at least 5 different
plugins which do this in different ways goes to show something: There
is never a right way, nor a wrong way, every plugin suits different
use-cases

 2. Users loose a lot of dynamic abilities in their sites (regardless
of if you guys don't do that, or know you can use workarounds), face
it, most sites do NOT need full page caching, I can't count the number
of *fast* WordPress sites I come across which do not have a caching
plugin installed.. WordPress isn't as slow as many people like to
believe

 3. Not all server configurations are the same, we can't expect
everyone to be running Apache (Infact, IIS support is going great, and
looks like nginx support is "getting better"(I'm referring to rewrite
rule generation for config files here - see trac)), all 3 of these
major web servers require a different configuration method for direct
serving of static .html files, and although it can be done within PHP,
that's still an overhead many people don't want (thus,they use a
plugin to override it.. etc..)

 4. Adding it to core requires that it be compatible with many
configurations, this means often using a slower method if it means
it's more compatible, plugins don't generally have this problem, and
can throw a bazillion configuration options in instead..  But it's
also an extra thing the core team have to support (I can guarantee
you, If a *basic* file cache was added to WordPress, most of the
plugin authors who write this stuff would leave it to us to maintain..
 Keeping caching in a plugin means that updates can be pushed
separately from WordPress, and is the direction WordPress has been
going for a long time (Just look at the Debug functionality for
WordPress for example - It all requires a plugin, same as caching,
different databases, etc)

And finally,
 5. What are you trying to fix?
It really sounds like this is an attempt to work around Lazy
developers, or web admins, or people who don't know what they're
doing.. Doing it for them is not always the best option, education is
better.
To shift the discussion a bit, This probably heads back to the idea of
the plugins repo having better categories of plugins, and WordPress
suggesting people install a plugin from each (ie. Anti Spam, Caching,
Social, This, that, and the other)

post-finally.. Some links.
If you really want a disk based object cache, have at it:
http://wordpress.org/extend/plugins/wp-file-cache/ - be warned, it may
slow your site down if it's a shared server, or has a bad disk/io
cache
A quick overview of the slow down caused by the file-based cache:
http://www.viper007bond.com/2010/08/10/why-wordpress-doesnt-have-built-in-persistent-caching/
A thread when it was introduced:
http://lists.automattic.com/pipermail/wp-hackers/2005-November/003122.html

From otto at ottodestruct.com  Tue Jul 24 03:47:48 2012
From: otto at ottodestruct.com (Otto)
Date: Mon, 23 Jul 2012 22:47:48 -0500
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
Message-ID: <CAD-FghzQTVHAmZYO1TnsWHLMvPrJPzeNZDOkRQfRGdPAyKqNKA@mail.gmail.com>

On Mon, Jul 23, 2012 at 1:25 PM, Michael Van Winkle
<mike at mikevanwinkle.com> wrote:
> There are a few places in WP where'd I would like to be able to
> filter the output so I can deliver a cached version. For example in the
> load_template() function it would be nice to have the ability to return a
> "fragment" from the object cache rather than reloading the template file.

The load_template function is a bit late in the process. You should
probably hook to {$type}_template, in the get_query_template()
function. This will let you redirect specific templates to your own
based on the theme_hierarchy. Then you can do whatever caching you
feel necessary.

-Otto

From mike at newclarity.net  Tue Jul 24 06:40:03 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 24 Jul 2012 02:40:03 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
Message-ID: <BAF5751B-54BA-4BF1-9F8D-FEA0EA1F5E3F@newclarity.net>

On Jul 23, 2012, at 11:20 PM, Dion Hulse (dd32) wrote:
> So, Why not include a full-page cache in WordPress then? Well.. several reasons:
> 1. We have Plugins for this - the fact we have at least 5 different
> plugins which do this in different ways goes to show something: There
> is never a right way, nor a wrong way, every plugin suits different
> use-cases

Existence does not imply a need for many; it likely implies lack of leadership. Nature abhors a vacuum hence 20,000+ plugins at wordpress.org. Inspect the cache plugins and you'll find common patterns with arbitrarily different implementations.

Not asking for a user feature, asking for more API.  Let plugins innovate on UX not API. 

> 3. Not all server configurations are the same...although it can be done within PHP,
> that's still an overhead many people don't want (thus,they use a
> plugin to override it.. etc..)

60-80% is better than 0% improvement for those w/o technical skills or budget or ability to understand a bazillion configuration options. 

> I can guarantee you, If a *basic* file cache was added to WordPress, most
> of the plugin authors who write this stuff would leave it to us to maintain..

If they were convened I bet they would come up with a base caching API, and APIs are not hard to maintain.

> Just look at the Debug functionality for WordPress for example - It all
> requires a plugin, same as caching, different databases, etc

There is a defacto-standard debug bar plugin promoted by the core team. There is no equivalent for caching.

> 5. What are you trying to fix?

To fix incompatible implementations with otherwise compatible benefits. People innovate on top of APIs but chaos reigns when there are no APIs or they are not sufficiently prescriptive.

> better categories ... and WordPress suggesting people install a plugin
> from each (ie. Anti Spam, Caching, Social, This, that, and the other)

Yeah.

-Mike


From bpetty at bluehost.com  Tue Jul 24 06:44:55 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Tue, 24 Jul 2012 00:44:55 -0600
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
Message-ID: <500E4467.20104@bluehost.com>

On 07/23/2012 09:20 PM, Dion Hulse (dd32) wrote:
> Back in WordPress < 2.5, there was a file-based Object cache included
> in WordPress by default, however, it suffered one major drawback..
> although when enabled it reduced the reliance upon MySQL and
> regenerating objects constantly, on many hosts it was inefficient and
> would *slow the site down instead*.

That's not a problem with the caching system, it's a problem with code
using the cache improperly, especially since the code using it at the
time did know it was a file backed cache since it always was one before
it was crippled.

Any cache system regardless of where and how it stores the data can
still be highly inefficient and improperly used depending on what is
using it and how. This includes the current non-persistent object cache.

I may be new to the list, but I do know the history here and the reasons
the original file based cache was removed.

By removing it, you solved the performance of poorly written code
without fixing the code in question, while also slowing down other code
that relied on the persistent nature of the cache to store
computationally heavy data that was only ever computed once per request
in the first place, but was still required for a majority of page
requests. Making that change crippled every single plugin providing
page/fragment caching at the time that utilized the old persistent file
cache before it was removed from WordPress. Were any of the 5+ page
caching plugins you mentioned doing this before it was removed? Do you
know their history?

> Filesystems are often not fast, infact, they're REALLY slow, in many
> cases, querying the data directly from MySQL was faster (thanks to
> it's in-memory caches - query cache and table indicies in memory, etc)
> - but a SQL is almost always slower than a key-value lookup in a
> proper memory cache (Since it has to parse the query, check no data
> changed, etc)

Right, and this is why developers should be trained not to use a cache
for data that is already in the database (or should be). It still
doesn't mean that WordPress shouldn't provide a persistent cache for the
developers that know better, and know how to use a file based cache
efficiently.

> It's true that since the file cache was introduced (And later removed)
> that WordPress has become much more complex, the data structures being
> stored are larger, the number of keys being set are larger (as there's
> permutations of data with the number of options we now have for
> functions), so potential issues back then, are perhaps compounded
> today and will be even worse..

You are right, the problem *could* be compounded if the new cache API
I'm proposing is designed incorrectly.

Everything using it right now is expecting it to only store the data in
memory (since that's what it currently does). That doesn't have to
change to add new persistent backends though.

For example, if a cache set is called without an expiration as most
probably do right now (I can only find 3 locations in core that do
specify an expiration), we could assume it remains in the non-persistent
memory cache, while everything else with an expiration is saved in the
persistent cache.

> Full page caching to a static file is significantly different from the
> above scenario, for that, you're storing and retrieving a SINGLE file
> (So even if it's hitting the disk, it isn't loading the 100+ WordPress
> files, nor having to load PHP in some cases). This is significantly
> faster and more efficient *on pretty much all hosts*.
> 
> So, Why not include a full-page cache in WordPress then? Well.. several reasons:
>  1. We have Plugins for this - the fact we have at least 5 different
> plugins which do this in different ways goes to show something: There
> is never a right way, nor a wrong way, every plugin suits different
> use-cases
> 
>  2. Users loose a lot of dynamic abilities in their sites (regardless
> of if you guys don't do that, or know you can use workarounds), face
> it, most sites do NOT need full page caching, I can't count the number
> of *fast* WordPress sites I come across which do not have a caching
> plugin installed.. WordPress isn't as slow as many people like to
> believe
> 
>  3. Not all server configurations are the same, we can't expect
> everyone to be running Apache (Infact, IIS support is going great, and
> looks like nginx support is "getting better"(I'm referring to rewrite
> rule generation for config files here - see trac)), all 3 of these
> major web servers require a different configuration method for direct
> serving of static .html files, and although it can be done within PHP,
> that's still an overhead many people don't want (thus,they use a
> plugin to override it.. etc..)
> 
>  4. Adding it to core requires that it be compatible with many
> configurations, this means often using a slower method if it means
> it's more compatible, plugins don't generally have this problem, and
> can throw a bazillion configuration options in instead..  But it's
> also an extra thing the core team have to support (I can guarantee
> you, If a *basic* file cache was added to WordPress, most of the
> plugin authors who write this stuff would leave it to us to maintain..
>  Keeping caching in a plugin means that updates can be pushed
> separately from WordPress, and is the direction WordPress has been
> going for a long time (Just look at the Debug functionality for
> WordPress for example - It all requires a plugin, same as caching,
> different databases, etc)

So... four reasons not to add a full page cache API to core when I was
only discussing the addition of a persistent cache API. I'm pretty sure
I didn't even mention "page", "partial", "template", or "fragment" once
in my entire email.

Do you even know what I'm proposing? Unlike many others participating in
this thread, at least I know that we can't even begin discussing a
potential page caching API until we actually have a persistent cache to
store it in. I didn't even touch that subject.

Since you brought it up though, maybe we should discuss how developers
can't actually write page caching plugins without writing their own
persistent cache system included in their plugins currently because the
object cache in core has been entirely useless for that since 2008. This
isn't even a question of whether a page caching plugin would use it or
not, *all* page caching plugins require a persistent cache.

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com

From mike at newclarity.net  Tue Jul 24 06:59:27 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 24 Jul 2012 02:59:27 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <500E4467.20104@bluehost.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
Message-ID: <80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>

On Jul 24, 2012, at 2:44 AM, Bryan Petty wrote:
> Since you brought it up though, maybe we should discuss how developers
> can't actually write page caching plugins without writing their own
> persistent cache system included in their plugins currently because the
> object cache in core has been entirely useless for that since 2008. This
> isn't even a question of whether a page caching plugin would use it or
> not, *all* page caching plugins require a persistent cache.

The Transients API[1] would potentially be something that persistent storage could be based on using hooks.  

But alas, it is loaded *after* advanced-cache.php and it depends on the hooks system, which is loaded even later.  Yet another example of how caching is hard to implement in WordPress because core has never needed to address these issues.

-Mike
[1] http://codex.wordpress.org/Transients_API

From tcbarrett at gmail.com  Tue Jul 24 07:42:54 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Tue, 24 Jul 2012 08:42:54 +0100
Subject: [wp-hackers] Nginx rewrite rule support
Message-ID: <CAEgmxabCQtNait8EVuW8nBeV9zEObpOsZS-3vPfJLzNOPYhYVg@mail.gmail.com>

Hi Dion

On 24 July 2012 04:20, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:
[*snip*]

>  3. Not all server configurations are the same, we can't expect
> everyone to be running Apache (Infact, IIS support is going great, and
> looks like nginx support is "getting better"(I'm referring to rewrite
> rule generation for config files here - see trac)),
>
[*snip*]

My search-fu fails me, could you point me to this trac ticket?

Thanks.

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From wordpress at dd32.id.au  Tue Jul 24 07:45:24 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Tue, 24 Jul 2012 17:45:24 +1000
Subject: [wp-hackers] Nginx rewrite rule support
In-Reply-To: <CAEgmxabCQtNait8EVuW8nBeV9zEObpOsZS-3vPfJLzNOPYhYVg@mail.gmail.com>
References: <CAEgmxabCQtNait8EVuW8nBeV9zEObpOsZS-3vPfJLzNOPYhYVg@mail.gmail.com>
Message-ID: <CAL4EHf=3g7p_6Nm31e1WoLVqyqH6sj+V3yv_MR8ivQrN3qZPZQ@mail.gmail.com>

On 24 July 2012 17:42, Tom Barrett <tcbarrett at gmail.com> wrote:
> Hi Dion
>
> On 24 July 2012 04:20, Dion Hulse (dd32) <wordpress at dd32.id.au> wrote:
> [*snip*]
>
>>  3. Not all server configurations are the same, we can't expect
>> everyone to be running Apache (Infact, IIS support is going great, and
>> looks like nginx support is "getting better"(I'm referring to rewrite
>> rule generation for config files here - see trac)),
>>
> [*snip*]
>
> My search-fu fails me, could you point me to this trac ticket?

http://core.trac.wordpress.org/ticket/18852

From otto at ottodestruct.com  Tue Jul 24 11:32:16 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 24 Jul 2012 06:32:16 -0500
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
Message-ID: <CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>

On Tue, Jul 24, 2012 at 1:59 AM, Mike Schinkel <mike at newclarity.net> wrote:
> On Jul 24, 2012, at 2:44 AM, Bryan Petty wrote:
>> Since you brought it up though, maybe we should discuss how developers
>> can't actually write page caching plugins without writing their own
>> persistent cache system included in their plugins currently because the
>> object cache in core has been entirely useless for that since 2008. This
>> isn't even a question of whether a page caching plugin would use it or
>> not, *all* page caching plugins require a persistent cache.
>
> The Transients API[1] would potentially be something that persistent storage could be based on using hooks.
>
> But alas, it is loaded *after* advanced-cache.php and it depends on the hooks system, which is loaded even later.  Yet another example of how caching is hard to implement in WordPress because core has never needed to address these issues.

The transients API *uses* the object cache if it's set to be external.
Any plugin could behave in the same manner.

I guess I'm not getting at what you even want here. The Object Cache
API is solid and works well. Transients exist for persistent timed
storage, and leverage plugins that implement persistent object
caching. There's great plugins out there to implement persistent
object caching, and any of them can be easily used for various
purposes.

What more is needed? You speak about adding a caching API of some
sort, but you completely fail to address what actually is in this
magical API that would be useful or even valuable.

-Otto

From ryan at pixopoint.com  Tue Jul 24 12:38:29 2012
From: ryan at pixopoint.com (Ryan Hellyer)
Date: Tue, 24 Jul 2012 14:38:29 +0200
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
Message-ID: <CADTfcvY69KNrgR22V9Cts5WekrD8aMDt_zbR4zS0NMJJJDwZ1g@mail.gmail.com>

+1

Lots of waffle, but no explanation of what should actually be
improved. We have object caching. We have persistent caching that
defaults to object caching when available (ie: the transients API).

Is it possible that what you guys are actually wanting is a persistent
disk caching caching API? If so, then I guess that could be added via
the transients API, maybe as an extra argument. The disk caching API
could perhaps default to object caching when available, just as the
regular transients do.

On Tue, Jul 24, 2012 at 1:32 PM, Otto <otto at ottodestruct.com> wrote:
> What more is needed? You speak about adding a caching API of some
> sort, but you completely fail to address what actually is in this
> magical API that would be useful or even valuable.
>
> -Otto

From lists at rotorised.com  Tue Jul 24 12:56:48 2012
From: lists at rotorised.com (Ryan McCue)
Date: Tue, 24 Jul 2012 22:56:48 +1000
Subject: [wp-hackers] Why WP_Error Sucks
Message-ID: <500E9B90.9010507@rotorised.com>

Hi hackers!

I just posted a blog post regarding WP_Error, and why it (quite frankly)
sucks: http://journal.ryanmccue.info/165/why-wp_error-sucks/

I'd be interested to hear your thoughts on WP_Error and the possibility
of using exceptions as well. I'd also love to hear from anyone who has
implemented exceptions in their own plugin code.

(Bonus points if you're a core developer, especially if you're westi ;) ).

Cheers,
-- 
Ryan McCue
<http://ryanmccue.info/>

From otto at ottodestruct.com  Tue Jul 24 13:11:12 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 24 Jul 2012 08:11:12 -0500
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <500E9B90.9010507@rotorised.com>
References: <500E9B90.9010507@rotorised.com>
Message-ID: <CAD-Fghzpv0YBLgRR+mjdHwMGq6F+gdNTenT_cFu=ubELN87rXw@mail.gmail.com>

Exceptions and try/catch don't parse in PHP 4 environments, leading to
fatal parsing errors.

-Otto


On Tue, Jul 24, 2012 at 7:56 AM, Ryan McCue <lists at rotorised.com> wrote:
> Hi hackers!
>
> I just posted a blog post regarding WP_Error, and why it (quite frankly)
> sucks: http://journal.ryanmccue.info/165/why-wp_error-sucks/
>
> I'd be interested to hear your thoughts on WP_Error and the possibility
> of using exceptions as well. I'd also love to hear from anyone who has
> implemented exceptions in their own plugin code.
>
> (Bonus points if you're a core developer, especially if you're westi ;) ).
>
> Cheers,
> --
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From harry at dxw.com  Tue Jul 24 13:16:27 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Tue, 24 Jul 2012 14:16:27 +0100
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <500E9B90.9010507@rotorised.com>
References: <500E9B90.9010507@rotorised.com>
Message-ID: <D01431C4-D357-41A2-A439-D5ABF813D3D4@dxw.com>

Did someone post some stats recently about what versions of PHP in use by WP sites?

I completely agree that exceptions would be better, but presumably, that has to wait until so few people are still on PHP4 that we can make PHP5+ a requirement.

Harry



On 24 Jul 2012, at 13:56, Ryan McCue wrote:

> Hi hackers!
> 
> I just posted a blog post regarding WP_Error, and why it (quite frankly)
> sucks: http://journal.ryanmccue.info/165/why-wp_error-sucks/
> 
> I'd be interested to hear your thoughts on WP_Error and the possibility
> of using exceptions as well. I'd also love to hear from anyone who has
> implemented exceptions in their own plugin code.
> 
> (Bonus points if you're a core developer, especially if you're westi ;) ).
> 
> Cheers,
> -- 
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From lists at rotorised.com  Tue Jul 24 13:20:03 2012
From: lists at rotorised.com (Ryan McCue)
Date: Tue, 24 Jul 2012 23:20:03 +1000
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <D01431C4-D357-41A2-A439-D5ABF813D3D4@dxw.com>
References: <500E9B90.9010507@rotorised.com>
	<D01431C4-D357-41A2-A439-D5ABF813D3D4@dxw.com>
Message-ID: <500EA103.4040809@rotorised.com>

Harry Metcalfe wrote:
> I completely agree that exceptions would be better, but presumably, that has to wait until so few people are still on PHP4 that we can make PHP5+ a requirement.

WordPress currently requires PHP 5.1.4+, as of WP 3.2:
http://wordpress.org/news/2010/07/eol-for-php4-and-mysql4/

-- 
Ryan McCue
<http://ryanmccue.info/>

From will.davis at gmail.com  Tue Jul 24 13:20:21 2012
From: will.davis at gmail.com (William P. Davis)
Date: Tue, 24 Jul 2012 13:20:21 +0000
Subject: [wp-hackers] Why WP_Error Sucks
Message-ID: <288858077-1343136024-cardhu_decombobulator_blackberry.rim.net-626948915-@b17.c4.bise6.blackberry>

PHP5 is required in recent versions of WordPress, so I would agree that WP_Error should use exceptions. I would urge you to submit a patch to Trac. 

Will
------Original Message------
From: Harry Metcalfe
Sender: wp-hackers-bounces at lists.automattic.com
To: wp-hackers at lists.automattic.com
ReplyTo: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Why WP_Error Sucks
Sent: Jul 24, 2012 9:16 AM

Did someone post some stats recently about what versions of PHP in use by WP sites?

I completely agree that exceptions would be better, but presumably, that has to wait until so few people are still on PHP4 that we can make PHP5+ a requirement.

Harry



On 24 Jul 2012, at 13:56, Ryan McCue wrote:

> Hi hackers!
> 
> I just posted a blog post regarding WP_Error, and why it (quite frankly)
> sucks: http://journal.ryanmccue.info/165/why-wp_error-sucks/
> 
> I'd be interested to hear your thoughts on WP_Error and the possibility
> of using exceptions as well. I'd also love to hear from anyone who has
> implemented exceptions in their own plugin code.
> 
> (Bonus points if you're a core developer, especially if you're westi ;) ).
> 
> Cheers,
> -- 
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

Sent from my BlackBerry

From lists at rotorised.com  Tue Jul 24 13:21:21 2012
From: lists at rotorised.com (Ryan McCue)
Date: Tue, 24 Jul 2012 23:21:21 +1000
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <CAD-Fghzpv0YBLgRR+mjdHwMGq6F+gdNTenT_cFu=ubELN87rXw@mail.gmail.com>
References: <500E9B90.9010507@rotorised.com>
	<CAD-Fghzpv0YBLgRR+mjdHwMGq6F+gdNTenT_cFu=ubELN87rXw@mail.gmail.com>
Message-ID: <500EA151.7000908@rotorised.com>

Otto wrote:
> Exceptions and try/catch don't parse in PHP 4 environments, leading to
> fatal parsing errors.

I replied to your comment on my post, but to reiterate here: that's only
a problem for the very few files that are loaded before WP checks for
PHP 5+. These are small enough that it doesn't really matter (and is
really no different to protected/private keywords, etc).

-- 
Ryan McCue
<http://ryanmccue.info/>

From lists at rotorised.com  Tue Jul 24 13:23:06 2012
From: lists at rotorised.com (Ryan McCue)
Date: Tue, 24 Jul 2012 23:23:06 +1000
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <288858077-1343136024-cardhu_decombobulator_blackberry.rim.net-626948915-@b17.c4.bise6.blackberry>
References: <288858077-1343136024-cardhu_decombobulator_blackberry.rim.net-626948915-@b17.c4.bise6.blackberry>
Message-ID: <500EA1BA.3010909@rotorised.com>

William P. Davis wrote:
> PHP5 is required in recent versions of WordPress, so I would agree that WP_Error should use exceptions. I would urge you to submit a patch to Trac. 

I didn't mention it in the post, but this has been previously discussed:
http://core.trac.wordpress.org/ticket/16769

The idea of this post was to get the idea out there, see if there's any
good points against implementing it, and then to begin that process.
I'll happily contribute a patch, but at the moment, I don't see it as a
possibility.

I'd love to hear from core committers/contributors on what they'd think
about it.

-- 
Ryan McCue
<http://ryanmccue.info/>

From ryan.wpmailinglists at gmail.com  Tue Jul 24 13:43:38 2012
From: ryan.wpmailinglists at gmail.com (Ryan WP Mailing Lists)
Date: Tue, 24 Jul 2012 06:43:38 -0700
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <500E9B90.9010507@rotorised.com>
References: <500E9B90.9010507@rotorised.com>
Message-ID: <CAFCSB_LZGPicPo2iEBFw4Bum7Y1_Fm9Pn542Uj+6yv45CSUuXA@mail.gmail.com>

As a caregivers from my .net programming I use and am comfortable with the
concept of exceptions. WP_Error on the otherhand I just don't quite get. In
fact I admit I don't implement it in my plugins, not that it matters since
I have never made a pouting for public release but still.

I like the idea and honestly now that PHP supports it with version 5 why
not as it is the dare I say "correct" method of error handling.
On Jul 24, 2012 5:56 AM, "Ryan McCue" <lists at rotorised.com> wrote:

> Hi hackers!
>
> I just posted a blog post regarding WP_Error, and why it (quite frankly)
> sucks: http://journal.ryanmccue.info/165/why-wp_error-sucks/
>
> I'd be interested to hear your thoughts on WP_Error and the possibility
> of using exceptions as well. I'd also love to hear from anyone who has
> implemented exceptions in their own plugin code.
>
> (Bonus points if you're a core developer, especially if you're westi ;) ).
>
> Cheers,
> --
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Tue Jul 24 14:15:50 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 24 Jul 2012 09:15:50 -0500
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <CAFCSB_LZGPicPo2iEBFw4Bum7Y1_Fm9Pn542Uj+6yv45CSUuXA@mail.gmail.com>
References: <500E9B90.9010507@rotorised.com>
	<CAFCSB_LZGPicPo2iEBFw4Bum7Y1_Fm9Pn542Uj+6yv45CSUuXA@mail.gmail.com>
Message-ID: <CAD-Fghyz8iijOZFy2tY8AN25uSnSv08YMP2zyWVzyMZZMxg7QQ@mail.gmail.com>

On Tue, Jul 24, 2012 at 8:43 AM, Ryan WP Mailing Lists
<ryan.wpmailinglists at gmail.com> wrote:
> As a caregivers from my .net programming I use and am comfortable with the
> concept of exceptions. WP_Error on the otherhand I just don't quite get. In
> fact I admit I don't implement it in my plugins, not that it matters since
> I have never made a pouting for public release but still.
>
> I like the idea and honestly now that PHP supports it with version 5 why
> not as it is the dare I say "correct" method of error handling.


Okay, I would let this go, but... argh. "Correctness" is relative.

IMO, Exceptions suck rocks. This applies to every language they're
implemented in.

The base problem I have with Exceptions is that they should be used
for error handling, but what they invariably end up being used for is
program logic.

Exceptions, when you break it down, are a way to have a return value
from a function that is outside the normal scope of what the function
returns. If a function is supposed to return an integer value, but
something happens where it needs to signal the calling code something
else, then there's two ways to handle it:
a) special return values - this is harder in a strongly typed language
where the return value must fit into an int, for example. PHP is not
such a language.
b) Exceptions, where you "throw" an error condition and expect the
calling code to wrap in a try/catch to handle that special condition.

With a, at least you can define things as such that the calling code
will have to properly handle them. With exceptions, the calling code
can optionally handle the problem or just pass the Exception up the
call stack.

What this generally means is that you have some lazy coder ignoring
the Exceptions, and then a higher level code doing try{ } catch (
Exception e ) { } to just catch them all like some demented Pokemon
cartoon.

Furthermore, Exceptions should be exceptional, meaning that they
should be errors, basically. If I call a function and it throws an
Exception, then I'm presumably expected to handle that exception case
in some manner, to resolve the error. However, if I could have done
that, then I probably should have done it to begin with, and if I was
capable of eliminating the error possibility, then I don't need to
handle the exception case anyway. Meaning that all *real* Exceptions
in the world end up going back up the call stack and just presenting
some error to the user. So when Exceptions are useful, then they're
useless. By design.

While you can attribute a lot of this to shitty programmers, I think
Exceptions themselves encourage this sort of poor and lazy coding,
honestly. They don't encourage "defensive" coding, by which I mean to
write your code so that the error conditions are handled from the
actual program logic. Instead, the existence of Exceptions and
exception handling encourages developers to simply catch "expected"
exceptions and then ignore them in order to make the compiler happy.
This leads to poor code, difficulty of debugging, and general
crappiness. Look at virtually all Java code. Most .NET code is worse,
but harder to find anybody using (bad Java is somewhat everywhere).

This comes about mostly because Exceptions intentionally break
encapsulation. In order to handle an exception properly, I need to
know something about the implementation of the code that threw the
exception to begin with. Poor object oriented design.

So yeah, I hate 'em. Especially in PHP where we're not limited to
strict typed return values. I can return an int, a string, an object,
whatever I like. As long as it's defined well, and it's easy for the
calling code to discriminate between the expected return value vs a
WP_Error object, then Exceptions don't offer me much except for that
breaking of encapsulation, which I don't see as necessarily a good
thing.

-Otto

From harry at dxw.com  Tue Jul 24 14:30:34 2012
From: harry at dxw.com (Harry Metcalfe)
Date: Tue, 24 Jul 2012 15:30:34 +0100
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <500EA103.4040809@rotorised.com>
References: <500E9B90.9010507@rotorised.com>
	<D01431C4-D357-41A2-A439-D5ABF813D3D4@dxw.com>
	<500EA103.4040809@rotorised.com>
Message-ID: <21510977-A554-455C-8617-F7DF4BF890E3@dxw.com>

Ah. That'll teach me to post without checking :)


On 24 Jul 2012, at 14:20, Ryan McCue wrote:

> Harry Metcalfe wrote:
>> I completely agree that exceptions would be better, but presumably, that has to wait until so few people are still on PHP4 that we can make PHP5+ a requirement.
> 
> WordPress currently requires PHP 5.1.4+, as of WP 3.2:
> http://wordpress.org/news/2010/07/eol-for-php4-and-mysql4/
> 
> -- 
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp at andrewnacin.com  Tue Jul 24 14:46:03 2012
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 24 Jul 2012 10:46:03 -0400
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <500E9B90.9010507@rotorised.com>
References: <500E9B90.9010507@rotorised.com>
Message-ID: <CAP29PviEKp-E0tXdz-XDJ5EO88Qq2ETBwqp3fk_LdL-qg0bgCQ@mail.gmail.com>

On Tue, Jul 24, 2012 at 8:56 AM, Ryan McCue <lists at rotorised.com> wrote:

> Hi hackers!
>
> I just posted a blog post regarding WP_Error, and why it (quite frankly)
> sucks: http://journal.ryanmccue.info/165/why-wp_error-sucks/
>
> I'd be interested to hear your thoughts on WP_Error and the possibility
> of using exceptions as well. I'd also love to hear from anyone who has
> implemented exceptions in their own plugin code.
>
> (Bonus points if you're a core developer, especially if you're westi ;) ).
>

WordPress, for better and sometimes for worse, has its own way to doing
things. WP_Error has served us well. Refactoring areas of the codebase to
use and handle exceptions just doesn't make a lot of sense right now. Not
when we strive for backwards compatibility, and not when we put users
first. As you said in your article, it wouldn't be a fun or particularly
safe conversion. It is a good rule of thumb to actually benefit from such
overhauls. I'd rather invest my time in a lot of other architectural
projects.

You also mention the idea of putting try/catch inside of the plugin API ?
that would be terribly slow, and defeats the purpose of forcing exceptions
on developers. Congratulations, a plugin developer didn't code for an
exception because they knew core would catch it and issue a wp_die()
message, like that error would ever happen anyway. No thanks.

We use WP_Error for probably three distinct things:

1. As return codes. Often, WP_Error is used when the error is not
"exceptional." It enables you to pass multiple errors, and also extra data.
Using WP_Error as a return value is nice in the authentication API, for
example. It is also very helpful as a value passed to filters, to then
either be modified or checked against by plugins. The action/filter
paradigm is almost unique to WordPress, and is what defines WordPress
development in many ways. WP_Error assists with that, in a far cleaner way
than an exception would. Even with exceptions, we would still want WP_Error
as verbose return codes, because don't get me started on bitwise operators.

2. As legitimate errors where exceptions could be used, but shouldn't be.
This kind of factors into return codes. I personally do not find a failed
HTTP request to be "exceptional" that, if uncaught, should result in a
fatal error. At the very least, it certainly depends on what you're trying
to do ? an API request, or maybe just something in the background.
Sometimes, you actually just don't care about the return value of
something. But hey, that's just me.

3. As legitimate errors where exceptions can and should be used, but won't
be. Exceptions can be useful in particular instances in WordPress. For
example, during plugin/theme installation and upgrade, for core updates.
We're doing a ton with the filesystem here: downloading archives, verifying
and unzipping them, creating folders, moving files, setting permissions,
etc. Some code here is ripe for exceptions ? otherwise, we're forced to
check, over and over again, that our most recent result isn't a WP_Error.
Wrapping all of this in a try/catch would be nice. (I think relying on
exceptions to bubble is lazy; we'd be handling these all within that
routine.)

However, two major problems with this. One,
wp-admin/includes/update-core.php is copied over during a core update and
executed by the currently installed version. Can't throw a WP_Exception
when WP_Exception doesn't exist yet. Since you can update across multiple
major versions at once, you can never really do this well without coding
around it. So, the one place where I could see a benefit to exceptions,
couldn't truly benefit from them without needless refactoring.

The second problem is that PHP doesn't have finally blocks. This is
absurdly stupid. We'd be using try/catch when dealing with filesystem
operations, in particular upgrades. That means we need to roll back, clean
up, release locks, whatever. If WP_Error sucks because it requires slightly
more code and forces programmers to defensively consider errors, rather
than letting everything bubble up, then it sucks. But if try/catch is
supposed to make the code cleaner, then the lack of finally really blows
that argument out of the water.

I'm not saying there isn't a single use in WordPress for a WP_Exception. I
know for a fact there are some, but I also don't think there are enough
examples where an exception would be oh-just-so-much-better than error
objects to justify a paradigm change. As it is, WordPress is getting
complicated (almost too complicated) in certain areas, and it'll only serve
to hurt theme developers, designers, and many weaker plugin authors the
more "by the book" we become.

And of course, plugin authors can already use exceptions if they wanted to.
Write your own HTTP API wrapper that throws exceptions ? come on, you're a
programmer, do what programmers do: make a personal, convoluted abstraction
layer. :-)

Nacin

From mda at blogwaffe.com  Tue Jul 24 14:58:21 2012
From: mda at blogwaffe.com (Michael D Adams)
Date: Tue, 24 Jul 2012 07:58:21 -0700
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <500E9B90.9010507@rotorised.com>
References: <500E9B90.9010507@rotorised.com>
Message-ID: <CAH-8B6vHtbwUk9YdYtJ0P4mA=eW_5g5224QOkr4oTUjrNq7NPw@mail.gmail.com>

On Tue, Jul 24, 2012 at 5:56 AM, Ryan McCue <lists at rotorised.com> wrote:
> I'd be interested to hear your thoughts on WP_Error and the possibility
> of using exceptions as well. I'd also love to hear from anyone who has
> implemented exceptions in their own plugin code.

Joel Spolsky's opinion:
http://www.joelonsoftware.com/items/2003/10/13.html (Exceptions are
worse than GOTOs)

From almog.baku at gmail.com  Tue Jul 24 14:58:35 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Tue, 24 Jul 2012 17:58:35 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CADTfcvY69KNrgR22V9Cts5WekrD8aMDt_zbR4zS0NMJJJDwZ1g@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<CADTfcvY69KNrgR22V9Cts5WekrD8aMDt_zbR4zS0NMJJJDwZ1g@mail.gmail.com>
Message-ID: <CALncZpQoF2eaGAsvgHKhqB6nXYuujv47+-A5Ta98SnUoGxmBXg@mail.gmail.com>

As I type before- I would like to see references for the cache at the basic
use of the api. so the system will calculate the caching automatically(with
sidebars, files, widgets, etc) excepts for other registrations..

Quote:


On Sat, Jul 21, 2012 at 2:17 PM, Almog Baku <almog.baku at gmail.com> wrote:
>
> I think that if we will insert basic caching into the api it would fore
> the plugins-developers to deal with caching.
> Actually, it pretty simple- and the user will able to disabling this
> featue.
>
> The base caching/optimization will include:
>
> minification: html, js, css:
>
> interface:
> wp_enqueue_script( $handle, $src = false, $deps = array(), $ver = false,
> $in_footer = false, $minify=AUTO_MINIFY )
> wp_register_style( $handle, $src, $deps = array(), $ver = false, $media =
> 'all', $minify=AUTO_MINIFY )
>
> combination: combine js, css files:
>
> interface:
> wp_enqueue_script( $handle, $src = false, $deps = array(), $ver = false,
> $in_footer = false, $minify=AUTO_MINIFY, $combine=AUTO_COMBINE )
> wp_register_style( $handle, $src, $deps = array(), $ver = false, $media =
> 'all', $minify=MINIFY_DISABLED, $combine=AUTO_COMBINE )
>
> basic object caching- at least as api interface without implemention!:
> extending the object caching api: adding option to control the object
> caching within the development- like widgets, pages, etc
>
> interface:
> register_sidebar(array(
>     'name'     => __( 'Post Sidebar'),
>     'id'     => 'post-sidebar',
>     ...
>     'cache'    => AUTO_CACHE,
> ));
> register_nav_menus(array(
>     'top_nav' => __( 'Top Navigation'),
>     ...
>     'cache'    => AUTO_CACHE,
> ));
> register_post_type('slider', array(
>     'label' => __('Slider'),
>     ...
>     'cache'=> AUTO_CACHE,
> ));
>
>
> Insert this minor changes into the api will able the caching plugins or
> future core-caching-system to handle with caching!


On Tue, Jul 24, 2012 at 3:38 PM, Ryan Hellyer <ryan at pixopoint.com> wrote:

> +1
>
> Lots of waffle, but no explanation of what should actually be
> improved. We have object caching. We have persistent caching that
> defaults to object caching when available (ie: the transients API).
>
> Is it possible that what you guys are actually wanting is a persistent
> disk caching caching API? If so, then I guess that could be added via
> the transients API, maybe as an extra argument. The disk caching API
> could perhaps default to object caching when available, just as the
> regular transients do.
>
> On Tue, Jul 24, 2012 at 1:32 PM, Otto <otto at ottodestruct.com> wrote:
> > What more is needed? You speak about adding a caching API of some
> > sort, but you completely fail to address what actually is in this
> > magical API that would be useful or even valuable.
> >
> > -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From almog.baku at gmail.com  Tue Jul 24 15:10:44 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Tue, 24 Jul 2012 18:10:44 +0300
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <CAH-8B6vHtbwUk9YdYtJ0P4mA=eW_5g5224QOkr4oTUjrNq7NPw@mail.gmail.com>
References: <500E9B90.9010507@rotorised.com>
	<CAH-8B6vHtbwUk9YdYtJ0P4mA=eW_5g5224QOkr4oTUjrNq7NPw@mail.gmail.com>
Message-ID: <CALncZpSDxRmBkVx9C5xRH+MJoG+PxuqtBCy+CE=sDsbOdFcZww@mail.gmail.com>

According to the official requirements wordpress require php5.2.4(if
you ask me it really great time to upgrade this require to 5.3/5.4 for
the new release of wordpress ver. 3.6).

So- By this argument.. I totally agree. I think exceptions will be much better.


On Tue, Jul 24, 2012 at 5:58 PM, Michael D Adams <mda at blogwaffe.com> wrote:
> On Tue, Jul 24, 2012 at 5:56 AM, Ryan McCue <lists at rotorised.com> wrote:
>> I'd be interested to hear your thoughts on WP_Error and the possibility
>> of using exceptions as well. I'd also love to hear from anyone who has
>> implemented exceptions in their own plugin code.
>
> Joel Spolsky's opinion:
> http://www.joelonsoftware.com/items/2003/10/13.html (Exceptions are
> worse than GOTOs)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From sabreuse at gmail.com  Tue Jul 24 15:12:51 2012
From: sabreuse at gmail.com (Amy Hendrix)
Date: Tue, 24 Jul 2012 11:12:51 -0400
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <CALncZpSDxRmBkVx9C5xRH+MJoG+PxuqtBCy+CE=sDsbOdFcZww@mail.gmail.com>
References: <500E9B90.9010507@rotorised.com>
	<CAH-8B6vHtbwUk9YdYtJ0P4mA=eW_5g5224QOkr4oTUjrNq7NPw@mail.gmail.com>
	<CALncZpSDxRmBkVx9C5xRH+MJoG+PxuqtBCy+CE=sDsbOdFcZww@mail.gmail.com>
Message-ID: <CAKnJ9+w04bXU_1XOJicBORmWCcDzo=hWrZQJA2jfpyqBXH2XiA@mail.gmail.com>

Not likely to happen while 72% of the installed base is on 5.2

On Tue, Jul 24, 2012 at 11:10 AM, Almog Baku <almog.baku at gmail.com> wrote:
> According to the official requirements wordpress require php5.2.4(if
> you ask me it really great time to upgrade this require to 5.3/5.4 for
> the new release of wordpress ver. 3.6).
>
> So- By this argument.. I totally agree. I think exceptions will be much better.
>
>
> On Tue, Jul 24, 2012 at 5:58 PM, Michael D Adams <mda at blogwaffe.com> wrote:
>> On Tue, Jul 24, 2012 at 5:56 AM, Ryan McCue <lists at rotorised.com> wrote:
>>> I'd be interested to hear your thoughts on WP_Error and the possibility
>>> of using exceptions as well. I'd also love to hear from anyone who has
>>> implemented exceptions in their own plugin code.
>>
>> Joel Spolsky's opinion:
>> http://www.joelonsoftware.com/items/2003/10/13.html (Exceptions are
>> worse than GOTOs)
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From kelytharun at gmail.com  Tue Jul 24 15:14:05 2012
From: kelytharun at gmail.com (Ferenc Gergely Szilagyi)
Date: Tue, 24 Jul 2012 17:14:05 +0200
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <CAKnJ9+w04bXU_1XOJicBORmWCcDzo=hWrZQJA2jfpyqBXH2XiA@mail.gmail.com>
References: <500E9B90.9010507@rotorised.com>
	<CAH-8B6vHtbwUk9YdYtJ0P4mA=eW_5g5224QOkr4oTUjrNq7NPw@mail.gmail.com>
	<CALncZpSDxRmBkVx9C5xRH+MJoG+PxuqtBCy+CE=sDsbOdFcZww@mail.gmail.com>
	<CAKnJ9+w04bXU_1XOJicBORmWCcDzo=hWrZQJA2jfpyqBXH2XiA@mail.gmail.com>
Message-ID: <CAPoztbBZO2FWj=8T1ERKOte6KpeEOX9npDR0qySpFr7h2MgUPQ@mail.gmail.com>

Requiring PHP5 to run doesn't means that you also must use all PHP5
features, just because they are there.

On Tue, Jul 24, 2012 at 5:12 PM, Amy Hendrix <sabreuse at gmail.com> wrote:
> Not likely to happen while 72% of the installed base is on 5.2
>
> On Tue, Jul 24, 2012 at 11:10 AM, Almog Baku <almog.baku at gmail.com> wrote:
>> According to the official requirements wordpress require php5.2.4(if
>> you ask me it really great time to upgrade this require to 5.3/5.4 for
>> the new release of wordpress ver. 3.6).
>>
>> So- By this argument.. I totally agree. I think exceptions will be much better.
>>
>>
>> On Tue, Jul 24, 2012 at 5:58 PM, Michael D Adams <mda at blogwaffe.com> wrote:
>>> On Tue, Jul 24, 2012 at 5:56 AM, Ryan McCue <lists at rotorised.com> wrote:
>>>> I'd be interested to hear your thoughts on WP_Error and the possibility
>>>> of using exceptions as well. I'd also love to hear from anyone who has
>>>> implemented exceptions in their own plugin code.
>>>
>>> Joel Spolsky's opinion:
>>> http://www.joelonsoftware.com/items/2003/10/13.html (Exceptions are
>>> worse than GOTOs)
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From otto at ottodestruct.com  Tue Jul 24 15:19:01 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 24 Jul 2012 10:19:01 -0500
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CALncZpQoF2eaGAsvgHKhqB6nXYuujv47+-A5Ta98SnUoGxmBXg@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<CADTfcvY69KNrgR22V9Cts5WekrD8aMDt_zbR4zS0NMJJJDwZ1g@mail.gmail.com>
	<CALncZpQoF2eaGAsvgHKhqB6nXYuujv47+-A5Ta98SnUoGxmBXg@mail.gmail.com>
Message-ID: <CAD-Fghypg8PKF-gFpmZzs1x7s3vcR71ZH7J9ZbPcG_0_7F_99g@mail.gmail.com>

Minification and combination of JS/CSS files is already in there for
the admin, and also not part of "caching" in any real way.

-Otto


On Tue, Jul 24, 2012 at 9:58 AM, Almog Baku <almog.baku at gmail.com> wrote:
> As I type before- I would like to see references for the cache at the basic
> use of the api. so the system will calculate the caching automatically(with
> sidebars, files, widgets, etc) excepts for other registrations..
>
> Quote:
>
>
> On Sat, Jul 21, 2012 at 2:17 PM, Almog Baku <almog.baku at gmail.com> wrote:
>>
>> I think that if we will insert basic caching into the api it would fore
>> the plugins-developers to deal with caching.
>> Actually, it pretty simple- and the user will able to disabling this
>> featue.
>>
>> The base caching/optimization will include:
>>
>> minification: html, js, css:
>>
>> interface:
>> wp_enqueue_script( $handle, $src = false, $deps = array(), $ver = false,
>> $in_footer = false, $minify=AUTO_MINIFY )
>> wp_register_style( $handle, $src, $deps = array(), $ver = false, $media =
>> 'all', $minify=AUTO_MINIFY )
>>
>> combination: combine js, css files:
>>
>> interface:
>> wp_enqueue_script( $handle, $src = false, $deps = array(), $ver = false,
>> $in_footer = false, $minify=AUTO_MINIFY, $combine=AUTO_COMBINE )
>> wp_register_style( $handle, $src, $deps = array(), $ver = false, $media =
>> 'all', $minify=MINIFY_DISABLED, $combine=AUTO_COMBINE )
>>
>> basic object caching- at least as api interface without implemention!:
>> extending the object caching api: adding option to control the object
>> caching within the development- like widgets, pages, etc
>>
>> interface:
>> register_sidebar(array(
>>     'name'     => __( 'Post Sidebar'),
>>     'id'     => 'post-sidebar',
>>     ...
>>     'cache'    => AUTO_CACHE,
>> ));
>> register_nav_menus(array(
>>     'top_nav' => __( 'Top Navigation'),
>>     ...
>>     'cache'    => AUTO_CACHE,
>> ));
>> register_post_type('slider', array(
>>     'label' => __('Slider'),
>>     ...
>>     'cache'=> AUTO_CACHE,
>> ));
>>
>>
>> Insert this minor changes into the api will able the caching plugins or
>> future core-caching-system to handle with caching!
>
>
> On Tue, Jul 24, 2012 at 3:38 PM, Ryan Hellyer <ryan at pixopoint.com> wrote:
>
>> +1
>>
>> Lots of waffle, but no explanation of what should actually be
>> improved. We have object caching. We have persistent caching that
>> defaults to object caching when available (ie: the transients API).
>>
>> Is it possible that what you guys are actually wanting is a persistent
>> disk caching caching API? If so, then I guess that could be added via
>> the transients API, maybe as an extra argument. The disk caching API
>> could perhaps default to object caching when available, just as the
>> regular transients do.
>>
>> On Tue, Jul 24, 2012 at 1:32 PM, Otto <otto at ottodestruct.com> wrote:
>> > What more is needed? You speak about adding a caching API of some
>> > sort, but you completely fail to address what actually is in this
>> > magical API that would be useful or even valuable.
>> >
>> > -Otto
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp-hackers at thecodecave.com  Tue Jul 24 15:32:25 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Tue, 24 Jul 2012 11:32:25 -0400
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <CAD-Fghyz8iijOZFy2tY8AN25uSnSv08YMP2zyWVzyMZZMxg7QQ@mail.gmail.com>
References: <500E9B90.9010507@rotorised.com>
	<CAFCSB_LZGPicPo2iEBFw4Bum7Y1_Fm9Pn542Uj+6yv45CSUuXA@mail.gmail.com>
	<CAD-Fghyz8iijOZFy2tY8AN25uSnSv08YMP2zyWVzyMZZMxg7QQ@mail.gmail.com>
Message-ID: <500EC009.3040006@thecodecave.com>

While I won't say I hate them, I agree completely with Otto that 
"Exceptions should be exceptional". When you look at the extra load an 
exception handling adds to your program, you realize that they should be 
be avoided at almost all cost.  Unfortunately that means a lot of extra 
effort on our part to actually do things right in the first place - 
adding the if statements to look for what will cause the errors and 
building the logic to properly handle the work flow.  The problem is 
that this kind of coding is work and not fun. It's tedious.  
Additionally each time something comes through and is raised as an 
exception, that means there is more code you need to write to fix that 
exception.

I've not seen any performance tests on PHP to show the speed difference 
of if blocks vs exceptions, but I would be shocked if PHP somehow 
handled exceptions with more efficiency than any of the other languages 
I've worked in.

Brian Layman



From almog.baku at gmail.com  Tue Jul 24 15:37:04 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Tue, 24 Jul 2012 18:37:04 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAD-Fghypg8PKF-gFpmZzs1x7s3vcR71ZH7J9ZbPcG_0_7F_99g@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<CADTfcvY69KNrgR22V9Cts5WekrD8aMDt_zbR4zS0NMJJJDwZ1g@mail.gmail.com>
	<CALncZpQoF2eaGAsvgHKhqB6nXYuujv47+-A5Ta98SnUoGxmBXg@mail.gmail.com>
	<CAD-Fghypg8PKF-gFpmZzs1x7s3vcR71ZH7J9ZbPcG_0_7F_99g@mail.gmail.com>
Message-ID: <CALncZpTTUaVxzYr5LNSfqPHisM3vVCnYkiweXNU2RAASM7aRVQ@mail.gmail.com>

Sorry, I've just not understand you..
There is minification at 3.4.1? If there is.. where?..

And about the caching interface in the current basic/common hooks.. what?

On Tue, Jul 24, 2012 at 6:19 PM, Otto <otto at ottodestruct.com> wrote:
> Minification and combination of JS/CSS files is already in there for
> the admin, and also not part of "caching" in any real way.
>
> -Otto
>
>
> On Tue, Jul 24, 2012 at 9:58 AM, Almog Baku <almog.baku at gmail.com> wrote:
>> As I type before- I would like to see references for the cache at the basic
>> use of the api. so the system will calculate the caching automatically(with
>> sidebars, files, widgets, etc) excepts for other registrations..
>>
>> Quote:
>>
>>
>> On Sat, Jul 21, 2012 at 2:17 PM, Almog Baku <almog.baku at gmail.com> wrote:
>>>
>>> I think that if we will insert basic caching into the api it would fore
>>> the plugins-developers to deal with caching.
>>> Actually, it pretty simple- and the user will able to disabling this
>>> featue.
>>>
>>> The base caching/optimization will include:
>>>
>>> minification: html, js, css:
>>>
>>> interface:
>>> wp_enqueue_script( $handle, $src = false, $deps = array(), $ver = false,
>>> $in_footer = false, $minify=AUTO_MINIFY )
>>> wp_register_style( $handle, $src, $deps = array(), $ver = false, $media =
>>> 'all', $minify=AUTO_MINIFY )
>>>
>>> combination: combine js, css files:
>>>
>>> interface:
>>> wp_enqueue_script( $handle, $src = false, $deps = array(), $ver = false,
>>> $in_footer = false, $minify=AUTO_MINIFY, $combine=AUTO_COMBINE )
>>> wp_register_style( $handle, $src, $deps = array(), $ver = false, $media =
>>> 'all', $minify=MINIFY_DISABLED, $combine=AUTO_COMBINE )
>>>
>>> basic object caching- at least as api interface without implemention!:
>>> extending the object caching api: adding option to control the object
>>> caching within the development- like widgets, pages, etc
>>>
>>> interface:
>>> register_sidebar(array(
>>>     'name'     => __( 'Post Sidebar'),
>>>     'id'     => 'post-sidebar',
>>>     ...
>>>     'cache'    => AUTO_CACHE,
>>> ));
>>> register_nav_menus(array(
>>>     'top_nav' => __( 'Top Navigation'),
>>>     ...
>>>     'cache'    => AUTO_CACHE,
>>> ));
>>> register_post_type('slider', array(
>>>     'label' => __('Slider'),
>>>     ...
>>>     'cache'=> AUTO_CACHE,
>>> ));
>>>
>>>
>>> Insert this minor changes into the api will able the caching plugins or
>>> future core-caching-system to handle with caching!
>>
>>
>> On Tue, Jul 24, 2012 at 3:38 PM, Ryan Hellyer <ryan at pixopoint.com> wrote:
>>
>>> +1
>>>
>>> Lots of waffle, but no explanation of what should actually be
>>> improved. We have object caching. We have persistent caching that
>>> defaults to object caching when available (ie: the transients API).
>>>
>>> Is it possible that what you guys are actually wanting is a persistent
>>> disk caching caching API? If so, then I guess that could be added via
>>> the transients API, maybe as an extra argument. The disk caching API
>>> could perhaps default to object caching when available, just as the
>>> regular transients do.
>>>
>>> On Tue, Jul 24, 2012 at 1:32 PM, Otto <otto at ottodestruct.com> wrote:
>>> > What more is needed? You speak about adding a caching API of some
>>> > sort, but you completely fail to address what actually is in this
>>> > magical API that would be useful or even valuable.
>>> >
>>> > -Otto
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From otto at ottodestruct.com  Tue Jul 24 16:21:39 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 24 Jul 2012 11:21:39 -0500
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CALncZpTTUaVxzYr5LNSfqPHisM3vVCnYkiweXNU2RAASM7aRVQ@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<CADTfcvY69KNrgR22V9Cts5WekrD8aMDt_zbR4zS0NMJJJDwZ1g@mail.gmail.com>
	<CALncZpQoF2eaGAsvgHKhqB6nXYuujv47+-A5Ta98SnUoGxmBXg@mail.gmail.com>
	<CAD-Fghypg8PKF-gFpmZzs1x7s3vcR71ZH7J9ZbPcG_0_7F_99g@mail.gmail.com>
	<CALncZpTTUaVxzYr5LNSfqPHisM3vVCnYkiweXNU2RAASM7aRVQ@mail.gmail.com>
Message-ID: <CAD-Fghz_wf__kBUHtcZ=Af7DA5EGYkHZzFUWZTrfW2H42AYOBA@mail.gmail.com>

On Tue, Jul 24, 2012 at 10:37 AM, Almog Baku <almog.baku at gmail.com> wrote:
> Sorry, I've just not understand you..
> There is minification at 3.4.1? If there is.. where?..

Concatenation and compression of Javascript and CSS has been built
into the core for the wp-admin side of things for almost 4 years. This
isn't new to 3.4.1.

See http://core.trac.wordpress.org/ticket/8628.

This is only enabled on the admin side of things, for speed reasons.
It would be possible to use them on the front end too, with a bit of
extra work. It's certainly not in there by default because
compression/concatenation of CSS and scripts cannot be guaranteed not
to break in all (most?) cases.


> And about the caching interface in the current basic/common hooks.. what?

I don't understand the question you're asking here.


-Otto

From wp at andrewnacin.com  Tue Jul 24 16:31:17 2012
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 24 Jul 2012 12:31:17 -0400
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <500EC009.3040006@thecodecave.com>
References: <500E9B90.9010507@rotorised.com>
	<CAFCSB_LZGPicPo2iEBFw4Bum7Y1_Fm9Pn542Uj+6yv45CSUuXA@mail.gmail.com>
	<CAD-Fghyz8iijOZFy2tY8AN25uSnSv08YMP2zyWVzyMZZMxg7QQ@mail.gmail.com>
	<500EC009.3040006@thecodecave.com>
Message-ID: <CAP29PviZmxbw1e=HS0r9Js3_zr03Zznr7qAd29eyD1O9DYkriw@mail.gmail.com>

On Tue, Jul 24, 2012 at 11:32 AM, Brian Layman
<wp-hackers at thecodecave.com>wrote:

> I've not seen any performance tests on PHP to show the speed difference of
> if blocks vs exceptions, but I would be shocked if PHP somehow handled
> exceptions with more efficiency than any of the other languages I've worked
> in.


Nope, they're terribly slow in PHP too. Which is fine if they're only used
for catching critical failures ("exceptional" circumstances). That's not
the case with our WP_Error usage (as I summarized).

From wp at andrewnacin.com  Tue Jul 24 16:34:44 2012
From: wp at andrewnacin.com (Andrew Nacin)
Date: Tue, 24 Jul 2012 12:34:44 -0400
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <CAH-8B6vHtbwUk9YdYtJ0P4mA=eW_5g5224QOkr4oTUjrNq7NPw@mail.gmail.com>
References: <500E9B90.9010507@rotorised.com>
	<CAH-8B6vHtbwUk9YdYtJ0P4mA=eW_5g5224QOkr4oTUjrNq7NPw@mail.gmail.com>
Message-ID: <CAP29PvgrYm=sx5eapS6DZ4u=zvbFX8nVHW9G-1ojnYW=chdC9Q@mail.gmail.com>

On Tue, Jul 24, 2012 at 10:58 AM, Michael D Adams <mda at blogwaffe.com> wrote:

> On Tue, Jul 24, 2012 at 5:56 AM, Ryan McCue <lists at rotorised.com> wrote:
> > I'd be interested to hear your thoughts on WP_Error and the possibility
> > of using exceptions as well. I'd also love to hear from anyone who has
> > implemented exceptions in their own plugin code.
>
> Joel Spolsky's opinion:
> http://www.joelonsoftware.com/items/2003/10/13.html (Exceptions are
> worse than GOTOs)


Ah, yes, I was looking for this link. Thanks, Mike. Anything that Otto, I,
and others didn't cover, is dealt with there.

From almog.baku at gmail.com  Tue Jul 24 16:38:06 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Tue, 24 Jul 2012 19:38:06 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAD-Fghz_wf__kBUHtcZ=Af7DA5EGYkHZzFUWZTrfW2H42AYOBA@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<CADTfcvY69KNrgR22V9Cts5WekrD8aMDt_zbR4zS0NMJJJDwZ1g@mail.gmail.com>
	<CALncZpQoF2eaGAsvgHKhqB6nXYuujv47+-A5Ta98SnUoGxmBXg@mail.gmail.com>
	<CAD-Fghypg8PKF-gFpmZzs1x7s3vcR71ZH7J9ZbPcG_0_7F_99g@mail.gmail.com>
	<CALncZpTTUaVxzYr5LNSfqPHisM3vVCnYkiweXNU2RAASM7aRVQ@mail.gmail.com>
	<CAD-Fghz_wf__kBUHtcZ=Af7DA5EGYkHZzFUWZTrfW2H42AYOBA@mail.gmail.com>
Message-ID: <CALncZpSZUvtmdP1XXAAYYEZ_6aL3+mdU7yCX1g8-dCEwadCctQ@mail.gmail.com>

On Tue, Jul 24, 2012 at 7:21 PM, Otto <otto at ottodestruct.com> wrote:

> > And about the caching interface in the current basic/common hooks.. what?
>
> I don't understand the question you're asking here.


I asked what about the adding the cache to the API as option to the basic
hooks as I suggest before:
> The base caching/optimization will include:
>
> minification: html, js, css:
>
> interface:
> wp_enqueue_script( $handle, $src = false, $deps = array(), $ver = false,
> $in_footer = false, $minify=AUTO_MINIFY )
> wp_register_style( $handle, $src, $deps = array(), $ver = false, $media =
> 'all', $minify=AUTO_MINIFY )
>
> combination: combine js, css files:
>
> interface:
> wp_enqueue_script( $handle, $src = false, $deps = array(), $ver = false,
> $in_footer = false, $minify=AUTO_MINIFY, $combine=AUTO_COMBINE )
> wp_register_style( $handle, $src, $deps = array(), $ver = false, $media =
> 'all', $minify=MINIFY_DISABLED, $combine=AUTO_COMBINE )
>
> basic object caching- at least as api interface without implemention!:
> extending the object caching api: adding option to control the object
> caching within the development- like widgets, pages, etc
>
> interface:
> register_sidebar(array(
>     'name'     => __( 'Post Sidebar'),
>     'id'     => 'post-sidebar',
>     ...
>     'cache'    => AUTO_CACHE,
> ));
> register_nav_menus(array(
>     'top_nav' => __( 'Top Navigation'),
>     ...
>     'cache'    => AUTO_CACHE,
> ));
> register_post_type('slider', array(
>     'label' => __('Slider'),
>     ...
>     'cache'=> AUTO_CACHE,
> ));

From otto at ottodestruct.com  Tue Jul 24 17:25:28 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 24 Jul 2012 12:25:28 -0500
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CALncZpSZUvtmdP1XXAAYYEZ_6aL3+mdU7yCX1g8-dCEwadCctQ@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<CADTfcvY69KNrgR22V9Cts5WekrD8aMDt_zbR4zS0NMJJJDwZ1g@mail.gmail.com>
	<CALncZpQoF2eaGAsvgHKhqB6nXYuujv47+-A5Ta98SnUoGxmBXg@mail.gmail.com>
	<CAD-Fghypg8PKF-gFpmZzs1x7s3vcR71ZH7J9ZbPcG_0_7F_99g@mail.gmail.com>
	<CALncZpTTUaVxzYr5LNSfqPHisM3vVCnYkiweXNU2RAASM7aRVQ@mail.gmail.com>
	<CAD-Fghz_wf__kBUHtcZ=Af7DA5EGYkHZzFUWZTrfW2H42AYOBA@mail.gmail.com>
	<CALncZpSZUvtmdP1XXAAYYEZ_6aL3+mdU7yCX1g8-dCEwadCctQ@mail.gmail.com>
Message-ID: <CAD-Fghz0NzZT4zjHwB0EmrbRztNDa+4ADEvD5M2k+8Z9+fUWHg@mail.gmail.com>

On Tue, Jul 24, 2012 at 11:38 AM, Almog Baku <almog.baku at gmail.com> wrote:
> I asked what about the adding the cache to the API as option to the basic
> hooks as I suggest before:

Yeah, I read that before. Three times. But I didn't understand it.

Again, compression and concatenation have nothing to do with "caching"
at all. So why you're even bringing them up, I have no idea.

Also, you're giving interface examples, but you're not explaining what
any of it actually does or how it magically would make anything
faster. Adding a "cache" parameter to a register_post_type call
doesn't make any sense, for example. You didn't specify what exactly
is being cached, how, or why there.

Fragment caching for things like sidebars could be done for cases
where it is beneficial, but it's not something that makes any sense
for the core to do, and certainly not with the proposed interface.
Dynamic sidebars are made of widgets, caching them in the database or
to a filesystem would actually probably make things much slower, and
putting them in the object cache would make them more static and
non-dynamic, which is fine for high-traffic sites, but undesirable on
the majority of sites.

There is no one-size-fits-all solution to caching, and doing heavy
modification of various pieces to add things like this makes no real
sense. It makes more sense to implement them as plugins, to give
websites the freedom to choose and implement their solutions in their
own ways. If one solution becomes extremely popular, then it makes
sense to start talking about core support for it, but the fact is that
most sites don't *need* caching and would not benefit from it. It
doesn't fit the 80/20 rule.

The core support object caching extensively, and in complex and useful
ways. If you want to achieve massive benefits, install an external
object caching plugin and use it. I use W3 Total Cache myself for that
exact purpose. It's awesome. But it's certainly not for everybody, nor
are we there yet.

-Otto

From ryan.wpmailinglists at gmail.com  Tue Jul 24 17:30:22 2012
From: ryan.wpmailinglists at gmail.com (Ryan WP Mailing Lists)
Date: Tue, 24 Jul 2012 10:30:22 -0700
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <500EC009.3040006@thecodecave.com>
References: <500E9B90.9010507@rotorised.com>
	<CAFCSB_LZGPicPo2iEBFw4Bum7Y1_Fm9Pn542Uj+6yv45CSUuXA@mail.gmail.com>
	<CAD-Fghyz8iijOZFy2tY8AN25uSnSv08YMP2zyWVzyMZZMxg7QQ@mail.gmail.com>
	<500EC009.3040006@thecodecave.com>
Message-ID: <CAFCSB_+0oiBqnuCLk4PAx22cWWOdEWFbV0znMwzyuGVwoMgL-w@mail.gmail.com>

I guess given my experience with .net I was tought exceptions so I really
don't know better I guess. I also don't really understand WP_Error. Does
anyone know of a good overview of it I could have a look at?
On Jul 24, 2012 8:33 AM, "Brian Layman" <wp-hackers at thecodecave.com> wrote:

> While I won't say I hate them, I agree completely with Otto that
> "Exceptions should be exceptional". When you look at the extra load an
> exception handling adds to your program, you realize that they should be be
> avoided at almost all cost.  Unfortunately that means a lot of extra effort
> on our part to actually do things right in the first place - adding the if
> statements to look for what will cause the errors and building the logic to
> properly handle the work flow.  The problem is that this kind of coding is
> work and not fun. It's tedious.  Additionally each time something comes
> through and is raised as an exception, that means there is more code you
> need to write to fix that exception.
>
> I've not seen any performance tests on PHP to show the speed difference of
> if blocks vs exceptions, but I would be shocked if PHP somehow handled
> exceptions with more efficiency than any of the other languages I've worked
> in.
>
> Brian Layman
>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.**com <wp-hackers at lists.automattic.com>
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From almog.baku at gmail.com  Tue Jul 24 17:42:31 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Tue, 24 Jul 2012 20:42:31 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAD-Fghz0NzZT4zjHwB0EmrbRztNDa+4ADEvD5M2k+8Z9+fUWHg@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<CADTfcvY69KNrgR22V9Cts5WekrD8aMDt_zbR4zS0NMJJJDwZ1g@mail.gmail.com>
	<CALncZpQoF2eaGAsvgHKhqB6nXYuujv47+-A5Ta98SnUoGxmBXg@mail.gmail.com>
	<CAD-Fghypg8PKF-gFpmZzs1x7s3vcR71ZH7J9ZbPcG_0_7F_99g@mail.gmail.com>
	<CALncZpTTUaVxzYr5LNSfqPHisM3vVCnYkiweXNU2RAASM7aRVQ@mail.gmail.com>
	<CAD-Fghz_wf__kBUHtcZ=Af7DA5EGYkHZzFUWZTrfW2H42AYOBA@mail.gmail.com>
	<CALncZpSZUvtmdP1XXAAYYEZ_6aL3+mdU7yCX1g8-dCEwadCctQ@mail.gmail.com>
	<CAD-Fghz0NzZT4zjHwB0EmrbRztNDa+4ADEvD5M2k+8Z9+fUWHg@mail.gmail.com>
Message-ID: <CALncZpT6oMOni9+gcXfYX9+cvKqUoZNun0zc+oLaRenHaAjXqw@mail.gmail.com>

I think that the core should offer base fragment caching, or at least
prepering interface for it.
So.. I offer two options for implementing:

   1. Implemet the fragment caching as a part of the core.
   2. Adding only option for interface at the api. so the data will saved
   and will implements by 3rd party plugins.
   In any case- adding this data parameter inside the core and the docs
   will force the developers to notice and be known to the caching issue.
   *
   Why we need that?*
   Because it let us better caching comptability with the plugins and
   themes.


On Tue, Jul 24, 2012 at 8:25 PM, Otto <otto at ottodestruct.com> wrote:

> On Tue, Jul 24, 2012 at 11:38 AM, Almog Baku <almog.baku at gmail.com> wrote:
> > I asked what about the adding the cache to the API as option to the basic
> > hooks as I suggest before:
>
> Yeah, I read that before. Three times. But I didn't understand it.
>
> Again, compression and concatenation have nothing to do with "caching"
> at all. So why you're even bringing them up, I have no idea.
>
> Also, you're giving interface examples, but you're not explaining what
> any of it actually does or how it magically would make anything
> faster. Adding a "cache" parameter to a register_post_type call
> doesn't make any sense, for example. You didn't specify what exactly
> is being cached, how, or why there.
>
> Fragment caching for things like sidebars could be done for cases
> where it is beneficial, but it's not something that makes any sense
> for the core to do, and certainly not with the proposed interface.
> Dynamic sidebars are made of widgets, caching them in the database or
> to a filesystem would actually probably make things much slower, and
> putting them in the object cache would make them more static and
> non-dynamic, which is fine for high-traffic sites, but undesirable on
> the majority of sites.
>
> There is no one-size-fits-all solution to caching, and doing heavy
> modification of various pieces to add things like this makes no real
> sense. It makes more sense to implement them as plugins, to give
> websites the freedom to choose and implement their solutions in their
> own ways. If one solution becomes extremely popular, then it makes
> sense to start talking about core support for it, but the fact is that
> most sites don't *need* caching and would not benefit from it. It
> doesn't fit the 80/20 rule.
>
> The core support object caching extensively, and in complex and useful
> ways. If you want to achieve massive benefits, install an external
> object caching plugin and use it. I use W3 Total Cache myself for that
> exact purpose. It's awesome. But it's certainly not for everybody, nor
> are we there yet.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mike at newclarity.net  Tue Jul 24 17:57:12 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 24 Jul 2012 13:57:12 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
Message-ID: <20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>

On Jul 24, 2012, at 7:32 AM, Otto wrote:
> On Tue, Jul 24, 2012 at 1:59 AM, Mike Schinkel <mike at newclarity.net> wrote:
>> 
>> The Transients API[1] would potentially be something that persistent storage could be based on using hooks.
>> 
>> But alas, it is loaded *after* advanced-cache.php and it depends on the hooks system, which is loaded even later.  Yet another example of how caching is hard to implement in WordPress because core has never needed to address these issues.
> 
> The transients API *uses* the object cache if it's set to be external.
> Any plugin could behave in the same manner.
> 
> I guess I'm not getting at what you even want here. The Object Cache
> API is solid and works well. Transients exist for persistent timed
> storage, and leverage plugins that implement persistent object
> caching. There's great plugins out there to implement persistent
> object caching, and any of them can be easily used for various
> purposes.
> 
> What more is needed? You speak about adding a caching API of some
> sort, but you completely fail to address what actually is in this
> magical API that would be useful or even valuable.

Please reread my comments, Transients are not available in the advanced-cache.php dropin.

See for yourself, define WP_CACHE as true in /wp-config.php and then create an /wp-config.php/advanced-cache.php with these two lines in it:

<?php
$data = get_transient( 'front-page' );

> I guess I'm not getting at what you even want here. 

One thing I'm asking for, said even more explicitly, is to require() /wp-includes/option.php (or a subset that includes the Transient's API and whatever it depends on such as hooks and the object cache) to above line 67 in /wp-settings.php so that it can be used in advanced-cache.php.  The other things I'll mention in a reply to Ryan Hellyer.

-Mike

From otto at ottodestruct.com  Tue Jul 24 18:01:05 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 24 Jul 2012 13:01:05 -0500
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
Message-ID: <CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>

On Tue, Jul 24, 2012 at 12:57 PM, Mike Schinkel <mike at newclarity.net> wrote:
> Please reread my comments, Transients are not available in the advanced-cache.php dropin.

Well, no, they wouldn't be. The advanced-cache.php dropin is where you
would implement the external object caching. Fragment caching, or
another sort of caching, wouldn't happen in there.

What are you trying to implement into this dropin that would need transients?

-Otto

From mike at newclarity.net  Tue Jul 24 18:08:14 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 24 Jul 2012 14:08:14 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CADTfcvY69KNrgR22V9Cts5WekrD8aMDt_zbR4zS0NMJJJDwZ1g@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<CADTfcvY69KNrgR22V9Cts5WekrD8aMDt_zbR4zS0NMJJJDwZ1g@mail.gmail.com>
Message-ID: <4C64E886-2878-4BAB-8CA4-81EC3A26957D@newclarity.net>

On Jul 24, 2012, at 8:38 AM, Ryan Hellyer wrote:
> +1
> 
> Lots of waffle, but no explanation of what should actually be
> improved. 

Oh please, stop with the melodrama.  I've made 3 specific requests yet you've made no comment on any of them; instead you are throwing stones. Rather than be condescending maybe you could address them?  Here they are each with the link to the wp-hackers archive where I made the request:

1.) Fix the Transients API[1]
2.) Enable multiple dropin files per type of dropin[2]
3.) Address this fragment caching ticket[3]

Yes, there is a lot more that could be done in terms of caching-related APIs but we can at least start with these 3.

-Mike
P.S. For some reason "caching in the core" has become a code-word for the faithful to draw up arms in defense of core's virtue. Wouldn't it actually be smarter to address core's limitations that make implemented caching in a plugin harder than it should be?

[1] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043801.html
[2] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043772.html
[3] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043792.html

From mike at newclarity.net  Tue Jul 24 18:09:51 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 24 Jul 2012 14:09:51 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
Message-ID: <EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>

On Jul 24, 2012, at 2:01 PM, Otto wrote:
> On Tue, Jul 24, 2012 at 12:57 PM, Mike Schinkel <mike at newclarity.net> wrote:
>> Please reread my comments, Transients are not available in the advanced-cache.php dropin.
> 
> Well, no, they wouldn't be. The advanced-cache.php dropin is where you
> would implement the external object caching. Fragment caching, or
> another sort of caching, wouldn't happen in there.
> 
> What are you trying to implement into this dropin that would need transients?

Page caching could use transients, and pages can be the result of composition of fragments.

-Mike

From otto at ottodestruct.com  Tue Jul 24 18:38:38 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 24 Jul 2012 13:38:38 -0500
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
Message-ID: <CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>

On Tue, Jul 24, 2012 at 1:09 PM, Mike Schinkel <mike at newclarity.net> wrote:
>> What are you trying to implement into this dropin that would need transients?
>
> Page caching could use transients, and pages can be the result of composition of fragments.

Okay.

Page caching would indeed use the advanced-cache.php drop-in.
WP-Super-cache does exactly that. Using transients there would be
highly difficult, however I'm not sure that you'd want to,
realistically. Transients are essentially wrappers around database or
object cache calls. Storage of whole-page caching methods is capable
of being done more directly, and much faster, without the overhead
transients and the object cache bring to the table. Either you store
the page cache in a way that bypasses the need for PHP to execute at
all (super-cache) or you store the page directly in an external memory
system, where the WP_Object_Cache overhead is not helpful to you.

Fragment caching makes no sense in advanced-cache.php. The problem
with fragment caching is as the ticket states, the lack of reasonable
hooks to buffer and store output of various templates or pieces of a
page. I'm not personally convinced by the effectiveness of fragment
caching, it strikes me as a case of premature optimization for *most*
cases, although I can see it being useful for edge cases if you also
conduct profiling to determine where the load really is. Even so,
you're going to want to implement caching around only the fragments
causing the load, not all of them, and regardless you'd virtually
never want to store them in transients. Transient pulls are slower
than, for example, widget output, for the majority of cases. If you
wanted to cache the header or the sidebar as a single piece, then
going on to store it in the database (for the default case) is a bit
of a waste of time. Databases are often the major bottleneck on the
majority of hosting.

Re: Multiple-dropins, I both agree and disagree, in that I agree
drop-ins are hacky as heck, but I disagree that there is a vast need
for multiple-support for them. Most of them are for specific purposes
such that only one thing would ever be needed there. No site is going
to have two drop-ins for external object caching, which is the only
thing that you'd use that for. Like it says in the code itself:

// For an advanced caching plugin to use. Uses a static drop-in
because you would only want one.


-Otto

From mail at scribu.net  Tue Jul 24 18:58:25 2012
From: mail at scribu.net (scribu)
Date: Tue, 24 Jul 2012 21:58:25 +0300
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <CAFCSB_+0oiBqnuCLk4PAx22cWWOdEWFbV0znMwzyuGVwoMgL-w@mail.gmail.com>
References: <500E9B90.9010507@rotorised.com>
	<CAFCSB_LZGPicPo2iEBFw4Bum7Y1_Fm9Pn542Uj+6yv45CSUuXA@mail.gmail.com>
	<CAD-Fghyz8iijOZFy2tY8AN25uSnSv08YMP2zyWVzyMZZMxg7QQ@mail.gmail.com>
	<500EC009.3040006@thecodecave.com>
	<CAFCSB_+0oiBqnuCLk4PAx22cWWOdEWFbV0znMwzyuGVwoMgL-w@mail.gmail.com>
Message-ID: <CABzSYNOuj=-gxj-jruOzCNNux-AGw2_+QU+qUtPEL07Vr_dRUw@mail.gmail.com>

On Tue, Jul 24, 2012 at 8:30 PM, Ryan WP Mailing Lists <
ryan.wpmailinglists at gmail.com> wrote:

> I also don't really understand WP_Error. Does
> anyone know of a good overview of it I could have a look at?
>

It's just a class. The best overview you'll find anywhere:
http://core.trac.wordpress.org/browser/trunk/wp-includes/class-wp-error.php

-- 
http://scribu.net

From mike at mikevanwinkle.com  Tue Jul 24 19:06:38 2012
From: mike at mikevanwinkle.com (Michael Van Winkle)
Date: Tue, 24 Jul 2012 12:06:38 -0700
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAD-FghzQTVHAmZYO1TnsWHLMvPrJPzeNZDOkRQfRGdPAyKqNKA@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<CAD-FghzQTVHAmZYO1TnsWHLMvPrJPzeNZDOkRQfRGdPAyKqNKA@mail.gmail.com>
Message-ID: <CALVAUkUWpc5OKGW71n8L4uCo_J6XBhjeUuH9k0kYgn9hLvCwJQ@mail.gmail.com>

Thanks Otto, but actually the reason I want access late in the process is
because on any given page I like to be able cache different chunks or
*template parts* according to different rules ... this block of posts can
be cached for X minutes, etc. I can do that without a filter in
load_template but said filter would allow me to manage it a little cleaner.
Though maybe I don't fully understand the {$type}_template hook so I'll
take another look.

Cheers,
Mike

On Mon, Jul 23, 2012 at 8:47 PM, Otto <otto at ottodestruct.com> wrote:

> On Mon, Jul 23, 2012 at 1:25 PM, Michael Van Winkle
> <mike at mikevanwinkle.com> wrote:
> > There are a few places in WP where'd I would like to be able to
> > filter the output so I can deliver a cached version. For example in the
> > load_template() function it would be nice to have the ability to return a
> > "fragment" from the object cache rather than reloading the template file.
>
> The load_template function is a bit late in the process. You should
> probably hook to {$type}_template, in the get_query_template()
> function. This will let you redirect specific templates to your own
> based on the theme_hierarchy. Then you can do whatever caching you
> feel necessary.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Mike Van Winkle
708-289-3136
mike at mikevanwinkle.com
http://www.mikevanwinkle.com
http://www.twitter.com/mpvanwinkle
http://www.facebook.com/mpvanwinkle


"All excellent things are as difficult as they are rare." -Spinoza

From wp-hackers at thecodecave.com  Tue Jul 24 20:12:43 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Tue, 24 Jul 2012 16:12:43 -0400
Subject: [wp-hackers] WordPress memory needed
In-Reply-To: <CALncZpQY6isbH6c=j4rXWqqWnnzD=wR1GujVpcavLUdAVRgTww@mail.gmail.com>
References: <009b01cd6912$b6930a70$2200a8c0@TITA>
	<CAAeCd-M0rA67A0PcErB1oG7shXJce3oX1ym5fgWss1wBRXa3wA@mail.gmail.com>
	<CALncZpQY6isbH6c=j4rXWqqWnnzD=wR1GujVpcavLUdAVRgTww@mail.gmail.com>
Message-ID: <500F01BB.1070005@thecodecave.com>

On 7/23/2012 7:51 PM, Almog Baku wrote:
> If you ask me.. 256 is very very low.. so don't be miser about your
> memory.. it for your own good!
I tried to resist adding another reply to this thread, but I can't.

We need to remember that not every server implementation is done the 
same.  In many implementations there will be multiple instances of PHP 
executed and loaded in memory.  That must be a consideration.  If you 
have 30 instances of PHP running at once, and all of them tried to use 
256MB  of ram, you suddenly find yourself using 8gb of ram just for php 
process - and that doesn't consider apache, mysql and OS memory.  So 
yeah, 256MB doesn't sound like much, but being miserly over memory usage 
is critical. The one server I work regularly works its way up to 5500 
simultaneous connections.  If it used an Apache setup where 1/5 of those 
connections might require a separate php instance and each instance 
needed even 64MB, the server would need over 70GB of ram available to 
keep up.  Fortunately the max memory limit is simply that -  a limit.  
It is not a requested amount.  And also nginx configs are awesome and 
handle this level of traffic in full stride.

But you can see why it is important to keep memory usage in mind when 
you write plugins and develop core. Desktop development has one person 
using one computer, memory isn't as much of an issue. In  a distributed 
situation, when thousands of clients can connect at once, it's a 
different world.

Brian Layman



From lists at rotorised.com  Tue Jul 24 22:36:31 2012
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 25 Jul 2012 08:36:31 +1000
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <CALncZpSDxRmBkVx9C5xRH+MJoG+PxuqtBCy+CE=sDsbOdFcZww@mail.gmail.com>
References: <500E9B90.9010507@rotorised.com>
	<CAH-8B6vHtbwUk9YdYtJ0P4mA=eW_5g5224QOkr4oTUjrNq7NPw@mail.gmail.com>
	<CALncZpSDxRmBkVx9C5xRH+MJoG+PxuqtBCy+CE=sDsbOdFcZww@mail.gmail.com>
Message-ID: <500F236F.2060102@rotorised.com>

Almog Baku wrote:
> According to the official requirements wordpress require php5.2.4(if
> you ask me it really great time to upgrade this require to 5.3/5.4 for
> the new release of wordpress ver. 3.6).
> 
> So- By this argument.. I totally agree. I think exceptions will be much better.

I'd just like to note for anyone reading these posts: exceptions were
added to PHP in 5.0, not 5.3. It's easily possible for WP to start using
them now from a technical standpoint.

-- 
Ryan McCue
<http://ryanmccue.info/>

From mike at newclarity.net  Tue Jul 24 23:01:35 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 24 Jul 2012 19:01:35 -0400
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <CAP29PvgrYm=sx5eapS6DZ4u=zvbFX8nVHW9G-1ojnYW=chdC9Q@mail.gmail.com>
References: <500E9B90.9010507@rotorised.com>
	<CAH-8B6vHtbwUk9YdYtJ0P4mA=eW_5g5224QOkr4oTUjrNq7NPw@mail.gmail.com>
	<CAP29PvgrYm=sx5eapS6DZ4u=zvbFX8nVHW9G-1ojnYW=chdC9Q@mail.gmail.com>
Message-ID: <2C52569E-9402-40D5-9AF3-509BFC058F16@newclarity.net>

There are good points on both sides of this issue; exception handling is both useful and a nightmare, depending on how it is used.  

Exceptions are very useful when dealing with local complexity in visible scope when external factors result in failed assumptions.  Consider the following alternate take on Ryan's example[1]:

https://gist.github.com/3173032

it implies an updated wp_remote_get() that will throw an exception if passed $args['exception'] => true, otherwise it will return a WP_Error() like it currently does. This would only require that functions in core which are likely to fail because of external factors be changed to request an exception thrown instead of returning an error (there are only a few such functions that might need this.)  Basically this approach removes the injected dependency which is what I think most people have issue with.

This would be 100% backward compatible, it would address Ryan's reasonable concerns, and it would not infect core with exceptions. If best practices were documented in Codex, i.e. only use WP_Exceptions when everything about the exception's effects are visible in the current function then Codex tends to be rather influential among plugin developers to keep most everyone from _doing_it_wrong().

FWIW.

-Mike 
P.S. The example shown doesn't illustrate the level of complexity where exceptions would really help, i.e. with numerous calls to wp_remote_get() or other functions that are likely to fail.  Basically anywhere you have to do complex interactions with a web API, FTP server or other web service.

[1] http://journal.ryanmccue.info/165/why-wp_error-sucks/



On Jul 24, 2012, at 12:34 PM, Andrew Nacin wrote:

> On Tue, Jul 24, 2012 at 10:58 AM, Michael D Adams <mda at blogwaffe.com> wrote:
> 
>> On Tue, Jul 24, 2012 at 5:56 AM, Ryan McCue <lists at rotorised.com> wrote:
>>> I'd be interested to hear your thoughts on WP_Error and the possibility
>>> of using exceptions as well. I'd also love to hear from anyone who has
>>> implemented exceptions in their own plugin code.
>> 
>> Joel Spolsky's opinion:
>> http://www.joelonsoftware.com/items/2003/10/13.html (Exceptions are
>> worse than GOTOs)
> 
> 
> Ah, yes, I was looking for this link. Thanks, Mike. Anything that Otto, I,
> and others didn't cover, is dealt with there.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From bpetty at bluehost.com  Tue Jul 24 23:11:21 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Tue, 24 Jul 2012 17:11:21 -0600
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
Message-ID: <500F2B99.2090204@bluehost.com>

On 07/24/2012 12:38 PM, Otto wrote:
> Page caching would indeed use the advanced-cache.php drop-in.
> WP-Super-cache does exactly that. Using transients there would be
> highly difficult, however I'm not sure that you'd want to,
> realistically. Transients are essentially wrappers around database or
> object cache calls. Storage of whole-page caching methods is capable
> of being done more directly, and much faster, without the overhead
> transients and the object cache bring to the table. Either you store
> the page cache in a way that bypasses the need for PHP to execute at
> all (super-cache) or you store the page directly in an external memory
> system, where the WP_Object_Cache overhead is not helpful to you.

Ok... so now you'll admit that the Transients API has high overhead, is
difficult to use, and is in-appropriate for page or fragment caching.
You also admit that the dropins are "hacky as heck".

However, you'll still tell me that's what I should use when I so much as
suggest that WP_Object_Cache could be expanded (in a 100% backwards
compatible way) to support persistent cache backends in core like it
used to, but done the right way this time.

I didn't honestly think I had to actually submit a patch yet just to
explain what I was proposing since nearly everyone else implements a
flexible caching system with multiple backends nearly the same way, and
the way I'm proposing. How about some examples then?

In the category of PHP applications that aren't built on frameworks
since this is where WordPress falls in:

1. MediaWiki:
https://gerrit.wikimedia.org/r/gitweb?p=mediawiki/core.git;a=tree;f=includes/objectcache
2. phpBB:
https://github.com/phpbb/phpbb3/tree/develop/phpBB/includes/cache/driver
3. Gallery:
https://github.com/gallery/gallery3/tree/master/system/libraries/drivers/Cache
4. phpMyAdmin used to use phpExcel's cache library:
https://github.com/PHPOffice/PHPExcel/tree/develop/Classes/PHPExcel/CachedObjectStorage

All of them are mostly designed the same way object cache APIs are
designed on nearly all the frameworks, let's jump to those:

4. CakePHP: https://github.com/cakephp/cakephp/tree/master/lib/Cake/Cache
5. Symfony: http://www.symfony-project.org/api/1_4/sfCache and
https://github.com/symfony/symfony/tree/master/src/Symfony/Component/HttpKernel/Profiler
6. Kohana: https://github.com/kohana/cache/tree/3.2/master/classes/cache
7. CodeIgniter:
https://github.com/EllisLab/CodeIgniter/tree/develop/system/libraries/Cache/drivers

(Zend purposely left off the list, but it does multiple persistent
object cache backends the same way too - just very different frontend)

This isn't even limited to PHP. Even though Python and Ruby web
application processes handle multiple requests, they still implement
object cache APIs the same way:

8. Django:
https://github.com/django/django/tree/master/django/core/cache/backends
9. Beaker (a python cache/session library):
https://bitbucket.org/bbangert/beaker/src/d1757ad53763/beaker/
10. Ruby on Rails:
https://github.com/rails/rails/tree/master/activesupport/lib/active_support/cache

MediaWiki doesn't even tell everyone they should write object cache
implementations in extensions. They provide over a dozen persistent
object cache backends to choose from including multiple memcache backends.

How about this...

What if the Transients API was converted over to a WP_Object_Cache
backend, and used as the default fallback instead of the file backend if
none of the accelerators are available (APC/XCache/WinCache)? The
current API can still continue to fire off the same filters (and will
just make calls into wp_cache_get/set()) and new code can feel fine
about using wp_cache_get() with an expiration again, and page/fragment
caching plugins have a persistent object cache to use before the hooks
system is initialized. The transients API is really just a DB object
cache backend anyway (but with filters).

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com

From dianakac at gmail.com  Tue Jul 24 23:22:13 2012
From: dianakac at gmail.com (Diana K. C)
Date: Tue, 24 Jul 2012 20:22:13 -0300
Subject: [wp-hackers] WordPress memory needed
References: <009b01cd6912$b6930a70$2200a8c0@TITA><CAAeCd-M0rA67A0PcErB1oG7shXJce3oX1ym5fgWss1wBRXa3wA@mail.gmail.com><CALncZpQY6isbH6c=j4rXWqqWnnzD=wR1GujVpcavLUdAVRgTww@mail.gmail.com>
	<500F01BB.1070005@thecodecave.com>
Message-ID: <007501cd69f3$2cce0100$2200a8c0@TITA>

Great comment Layman, thank you.

I find useful to keep your comment as a reference for poor services 
configurations around here.

----- Original Message ----- 
From: "Brian Layman" <wp-hackers at thecodecave.com>
To: <wp-hackers at lists.automattic.com>
Sent: Tuesday, July 24, 2012 5:12 PM
Subject: Re: [wp-hackers] WordPress memory needed


> On 7/23/2012 7:51 PM, Almog Baku wrote:
>> If you ask me.. 256 is very very low.. so don't be miser about your
>> memory.. it for your own good!
> I tried to resist adding another reply to this thread, but I can't.
>
> We need to remember that not every server implementation is done the same. 
> In many implementations there will be multiple instances of PHP executed 
> and loaded in memory.  That must be a consideration.  If you have 30 
> instances of PHP running at once, and all of them tried to use 256MB  of 
> ram, you suddenly find yourself using 8gb of ram just for php process - 
> and that doesn't consider apache, mysql and OS memory.  So yeah, 256MB 
> doesn't sound like much, but being miserly over memory usage is critical. 
> The one server I work regularly works its way up to 5500 simultaneous 
> connections.  If it used an Apache setup where 1/5 of those connections 
> might require a separate php instance and each instance needed even 64MB, 
> the server would need over 70GB of ram available to keep up.  Fortunately 
> the max memory limit is simply that -  a limit.  It is not a requested 
> amount.  And also nginx configs are awesome and handle this level of 
> traffic in full stride.
>
> But you can see why it is important to keep memory usage in mind when you 
> write plugins and develop core. Desktop development has one person using 
> one computer, memory isn't as much of an issue. In  a distributed 
> situation, when thousands of clients can connect at once, it's a different 
> world.
>
> Brian Layman
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 


From aaron at jorb.in  Tue Jul 24 23:59:26 2012
From: aaron at jorb.in (Aaron Jorbin)
Date: Tue, 24 Jul 2012 19:59:26 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <500F2B99.2090204@bluehost.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
	<500F2B99.2090204@bluehost.com>
Message-ID: <CAGeDw98qAmgrZdChRa5DR4_D6+B8L1Gt-1KVL1U5OVGgwrsgcw@mail.gmail.com>

On Tue, Jul 24, 2012 at 7:11 PM, Bryan Petty <bpetty at bluehost.com> wrote:

> What if the Transients API was converted over to a WP_Object_Cache
> backend, and used as the default fallback instead of the file backend if
> none of the accelerators are available (APC/XCache/WinCache)? The
> current API can still continue to fire off the same filters (and will
> just make calls into wp_cache_get/set()) and new code can feel fine
> about using wp_cache_get() with an expiration again, and page/fragment
> caching plugins have a persistent object cache to use before the hooks
> system is initialized. The transients API is really just a DB object
> cache backend anyway (but with filters).
>

The transients API isn't just a db cache, it uses the object cache if it is
setup to be used[1]. The decision is left up to the site developer as to if
they want to use an object cache or not.  Seting up a scalable instillation
using an object cache is documented pretty well[2].

If you want to make sure something persists, this is the cache level that
most developers should be using(through the use of TLC transients[3] in
many instances).

1) http://core.trac.wordpress.org/browser/trunk/wp-includes/option.php#L408
http://core.trac.wordpress.org/browser/trunk/wp-includes/option.php#L449
http://core.trac.wordpress.org/browser/trunk/wp-includes/option.php#L497
2) http://evansolomon.me/notes/faster-wordpress-multisite-nginx-batcache/
3) https://github.com/markjaquith/WP-TLC-Transients

http://aaron.jorb.in
twitter: twitter.com/aaronjorbin



> --
> Bryan Petty
> WordPress Developer
> bpetty at bluehost.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From almog.baku at gmail.com  Wed Jul 25 00:16:59 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Wed, 25 Jul 2012 03:16:59 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <500F2B99.2090204@bluehost.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
	<500F2B99.2090204@bluehost.com>
Message-ID: <CALncZpRMwU5JaRff0MhZUFUifL8iWY98KP_J6Z9wivvtPf5jEA@mail.gmail.com>

I agree.
The most famous php-application is implement caching as as integral part of
the system.

In drupal for example, there is based cache and you can install a module
who extend this caching.

By the way, drupal - patches to the core is really something unaccepted -
so I really not like this drop-ins idea.. hacky = bad.
If you ask me we should replace this hacky-dropins with much more hooks to
the core, and option to extend it(by using OOP for ex.)

~ Almog

On Wed, Jul 25, 2012 at 2:11 AM, Bryan Petty <bpetty at bluehost.com> wrote:

> On 07/24/2012 12:38 PM, Otto wrote:
> > Page caching would indeed use the advanced-cache.php drop-in.
> > WP-Super-cache does exactly that. Using transients there would be
> > highly difficult, however I'm not sure that you'd want to,
> > realistically. Transients are essentially wrappers around database or
> > object cache calls. Storage of whole-page caching methods is capable
> > of being done more directly, and much faster, without the overhead
> > transients and the object cache bring to the table. Either you store
> > the page cache in a way that bypasses the need for PHP to execute at
> > all (super-cache) or you store the page directly in an external memory
> > system, where the WP_Object_Cache overhead is not helpful to you.
>
> Ok... so now you'll admit that the Transients API has high overhead, is
> difficult to use, and is in-appropriate for page or fragment caching.
> You also admit that the dropins are "hacky as heck".
>
> However, you'll still tell me that's what I should use when I so much as
> suggest that WP_Object_Cache could be expanded (in a 100% backwards
> compatible way) to support persistent cache backends in core like it
> used to, but done the right way this time.
>
> I didn't honestly think I had to actually submit a patch yet just to
> explain what I was proposing since nearly everyone else implements a
> flexible caching system with multiple backends nearly the same way, and
> the way I'm proposing. How about some examples then?
>
> In the category of PHP applications that aren't built on frameworks
> since this is where WordPress falls in:
>
> 1. MediaWiki:
>
> https://gerrit.wikimedia.org/r/gitweb?p=mediawiki/core.git;a=tree;f=includes/objectcache
> 2. phpBB:
> https://github.com/phpbb/phpbb3/tree/develop/phpBB/includes/cache/driver
> 3. Gallery:
>
> https://github.com/gallery/gallery3/tree/master/system/libraries/drivers/Cache
> 4. phpMyAdmin used to use phpExcel's cache library:
>
> https://github.com/PHPOffice/PHPExcel/tree/develop/Classes/PHPExcel/CachedObjectStorage
>
> All of them are mostly designed the same way object cache APIs are
> designed on nearly all the frameworks, let's jump to those:
>
> 4. CakePHP: https://github.com/cakephp/cakephp/tree/master/lib/Cake/Cache
> 5. Symfony: http://www.symfony-project.org/api/1_4/sfCache and
>
> https://github.com/symfony/symfony/tree/master/src/Symfony/Component/HttpKernel/Profiler
> 6. Kohana: https://github.com/kohana/cache/tree/3.2/master/classes/cache
> 7. CodeIgniter:
>
> https://github.com/EllisLab/CodeIgniter/tree/develop/system/libraries/Cache/drivers
>
> (Zend purposely left off the list, but it does multiple persistent
> object cache backends the same way too - just very different frontend)
>
> This isn't even limited to PHP. Even though Python and Ruby web
> application processes handle multiple requests, they still implement
> object cache APIs the same way:
>
> 8. Django:
> https://github.com/django/django/tree/master/django/core/cache/backends
> 9. Beaker (a python cache/session library):
> https://bitbucket.org/bbangert/beaker/src/d1757ad53763/beaker/
> 10. Ruby on Rails:
>
> https://github.com/rails/rails/tree/master/activesupport/lib/active_support/cache
>
> MediaWiki doesn't even tell everyone they should write object cache
> implementations in extensions. They provide over a dozen persistent
> object cache backends to choose from including multiple memcache backends.
>
> How about this...
>
> What if the Transients API was converted over to a WP_Object_Cache
> backend, and used as the default fallback instead of the file backend if
> none of the accelerators are available (APC/XCache/WinCache)? The
> current API can still continue to fire off the same filters (and will
> just make calls into wp_cache_get/set()) and new code can feel fine
> about using wp_cache_get() with an expiration again, and page/fragment
> caching plugins have a persistent object cache to use before the hooks
> system is initialized. The transients API is really just a DB object
> cache backend anyway (but with filters).
>
> --
> Bryan Petty
> WordPress Developer
> bpetty at bluehost.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From bpetty at bluehost.com  Wed Jul 25 00:41:46 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Tue, 24 Jul 2012 18:41:46 -0600
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAGeDw98qAmgrZdChRa5DR4_D6+B8L1Gt-1KVL1U5OVGgwrsgcw@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
	<500F2B99.2090204@bluehost.com>
	<CAGeDw98qAmgrZdChRa5DR4_D6+B8L1Gt-1KVL1U5OVGgwrsgcw@mail.gmail.com>
Message-ID: <500F40CA.4030402@bluehost.com>

On 07/24/2012 05:59 PM, Aaron Jorbin wrote:
> The transients API isn't just a db cache, it uses the object cache if it is
> setup to be used[1]. The decision is left up to the site developer as to if
> they want to use an object cache or not.

If the blogger hasn't installed a 3rd party cache dropin, that's
effectively what the transients API is, a DB cache backend. This is the
case with probably 99% of WordPress installations.

Maybe I wasn't entirely clear though. The transients API would continue
to live on unchanged and working *exactly* how it does currently, but
the actual internal code that stores and manages the data in the cache
would be moved to a WP_Object_Cache backend which would become the new
default cache if wp_cache_set() is called with an expiration.

The Batcache plugin you referred to would continue to work perfectly
fine untouched as would any custom advanced-cache.php dropins you
installed too.

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com

From otto at ottodestruct.com  Wed Jul 25 04:06:01 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 24 Jul 2012 23:06:01 -0500
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <500F2B99.2090204@bluehost.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
	<500F2B99.2090204@bluehost.com>
Message-ID: <CAD-FghzHHZtS3sg3F-Ny1XUErr29OtmRn2Rq7GSjhkVctSHC3w@mail.gmail.com>

On Tue, Jul 24, 2012 at 6:11 PM, Bryan Petty <bpetty at bluehost.com> wrote:
> Ok... so now you'll admit that the Transients API has high overhead, is
> difficult to use, and is in-appropriate for page or fragment caching.
> You also admit that the dropins are "hacky as heck".
>
> However, you'll still tell me that's what I should use when I so much as
> suggest that WP_Object_Cache could be expanded (in a 100% backwards
> compatible way) to support persistent cache backends in core like it
> used to, but done the right way this time.

No, I tell you that it's appropriate to implement persistent cache
backends *for your specific needs*. It shouldn't be in core. It should
be done on a per-host, per-server, per-setup basis.

There's no universal answers here. Core can't implement persistent
caching in a universal way that doesn't have downsides.


> How about this...
>
> What if the Transients API was converted over to a WP_Object_Cache
> backend, and used as the default fallback instead of the file backend if
> none of the accelerators are available (APC/XCache/WinCache)?

Implementing the object, or the transients, cache as a file backend is
a *proven* loser. It sucks. Royally. On the majority of hosts. Search
for the arguments over 5 years ago to find proof.

If you want to write it for your particular set of hosting
capabilities, then by all means do so. As a plugin. Convince more
people that your solution fits the 80/20 rule. Then, you have a shot
at core. Fit the majority case.

I'm not saying I'm right, or that I have any form of control over it,
because I don't. I'm just saying that you need to *prove* that you are
right. See, I don't control what goes into core, not by a long shot.
I'm just one of the few who knows how it works and who is more than
happy to tell you what you need to do. PROVE IT. Then you have a shot.
Right now, a whole lot of people whom I've talked to about it on
multiple occasions thinks that the evidence is against you. Prove me
wrong. Show me that you're right. Stats. Numbers. Code. This sort of
yap-yap goes nowhere, it's just me arguing with you. But if you show
improvement, if you can show, empirically, that you have the right
answer, then everybody will back you.

This is open source. You don't get anywhere without code that actually
gets the job done, man.

-Otto

From bpetty at bluehost.com  Wed Jul 25 04:18:49 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Tue, 24 Jul 2012 22:18:49 -0600
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
Message-ID: <500F73A9.90404@bluehost.com>

On 07/23/2012 09:20 PM, Dion Hulse (dd32) wrote:
> To me, this post (And most of this thread honestly) screams "I don't
> know how the current system works, so I think we should add something
> else instead" by people who are either a) not writing this stuff b)
> don't configure servers, and c) don't know the history here

I wasn't going to originally reply to this because I thought it
offensive, and I didn't have anything constructive to reply back with,
but I do actually feel like I have to address this now.

First off (a), I do write this stuff, not for WordPress obviously (until
possibly now), but I have written several object cache systems for
several web applications already before.

Second (b), I have also configured all of those applications (including
the caching mechanisms) running on several different web servers, not
just manually, but also through configuration management systems like
Puppet and Chef while provisioning armies of servers.

But most importantly, I wanted to point out that it sounds exactly like
"I don't know how the current system works, so I think we should add
something else instead" because that's true. Out of *all* of the object
caching systems I've worked with, WP's object cache isn't designed like
any of them, and that's exactly the problem!

New developers aren't being encouraged to use the caching appropriately
in their plugins or themes because it's foreign and confusing to them,
not only the ones new to programming, but also the ones coming to
WordPress from other web applications, the same ones also writing
extensions for MediaWiki or plugins for other blogging software.

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com

From bpetty at bluehost.com  Wed Jul 25 06:07:48 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Wed, 25 Jul 2012 00:07:48 -0600
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAD-FghzHHZtS3sg3F-Ny1XUErr29OtmRn2Rq7GSjhkVctSHC3w@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
	<500F2B99.2090204@bluehost.com>
	<CAD-FghzHHZtS3sg3F-Ny1XUErr29OtmRn2Rq7GSjhkVctSHC3w@mail.gmail.com>
Message-ID: <500F8D34.7060706@bluehost.com>

On 07/24/2012 10:06 PM, Otto wrote:
> No, I tell you that it's appropriate to implement persistent cache
> backends *for your specific needs*. It shouldn't be in core. It should
> be done on a per-host, per-server, per-setup basis.

If this were true, there wouldn't even be an object cache in core at all
but there really is only one single way an object cache can be
"customized" per-host/per-server/per-setup, and that's simply just
selecting the appropriate backend based on what's available. I really
don't feel like you should be required to go through the trouble of
installing a 3rd party plugin just to choose the backend you're going to
use for that site (unless it really is using some obscure backend that
no-one has heard of - but the advanced-cache.php dropin could still be
used for that).

Beyond that, it's an object cache, and the frontend API is exactly the
same for all of them, only one of them doesn't support expirations. Why
do you suppose WP already has that API and a default backend implemented
in core?

Your argument here might be helped a little though if the automated
plugin installer also supported automatically moving any dropins
contained in a plugin to wp-content. That still has to be done by hand
on all installations. Even if that was automated though, it still
wouldn't change my opinion here.

> There's no universal answers here. Core can't implement persistent
> caching in a universal way that doesn't have downsides.

I'm saying it can, but yes, we can leave it at that and maybe some day
soon I will show you.

> Implementing the object, or the transients, cache as a file backend is
> a *proven* loser. It sucks. Royally. On the majority of hosts. Search
> for the arguments over 5 years ago to find proof.

Well, it was proven that developers obviously need to be taught how to
use a file cache backend appropriately, but did you fully understand
what that last suggestion I made was? Under that, neither the object
cache or the transients API would actually use the file backend by
default (only if the site admin explicitly configured it to... maybe
they don't want it or can't have it writing to the DB for persistent
objects but still don't have access to accelerators or memcache).

> This is open source. You don't get anywhere without code that actually
> gets the job done, man.

Yep, I'm very aware of that. You must have missed my introduction to the
list last month when I mentioned being a core developer on another
widely popular open source project, and being involved with the Google
Summer of Code program for 3 years as a mentor.

Anyway, I never start on any medium to large project like this on an
important component without getting some feedback from the community
first, and seeing how the dev team that will ultimately be reviewing it
feels about how I plan to write it. That's all this is right now.

If the community has strong convictions against it, I'm not going to
write it. I'm not doing this for my own WordPress sites, I'm doing this
for the best of the project (and this truly is something that would
benefit everyone). I actually still wouldn't do it on my own sites if
it's not going to make it in core either since it would be a
modification to core code that I would have to re-apply and maintain on
each site with every upgrade.

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com

From otto at ottodestruct.com  Wed Jul 25 06:33:57 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 25 Jul 2012 01:33:57 -0500
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <500F8D34.7060706@bluehost.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
	<500F2B99.2090204@bluehost.com>
	<CAD-FghzHHZtS3sg3F-Ny1XUErr29OtmRn2Rq7GSjhkVctSHC3w@mail.gmail.com>
	<500F8D34.7060706@bluehost.com>
Message-ID: <CAD-FghzymkVKke4=2aTGMGc8pGhT7yvHxtcBX1kHuY-RD-BzTg@mail.gmail.com>

On Wed, Jul 25, 2012 at 1:07 AM, Bryan Petty <bpetty at bluehost.com> wrote:
> If this were true, there wouldn't even be an object cache in core at all
> but there really is only one single way an object cache can be
> "customized" per-host/per-server/per-setup, and that's simply just
> selecting the appropriate backend based on what's available. I really
> don't feel like you should be required to go through the trouble of
> installing a 3rd party plugin...

And right there is where you failed. You see "third-party plugin" as
if it's some kind of bad thing. Plugins are part of the whole
ecosystem, man. They're first-party. We all write plugins. All the
importers are plugins. Many plugins are written and maintained by the
core team. The core team is currently discussing how to remove "Links"
and move it to a plugin.

We consider that plugins are first-class citizens in the WordPress
world. Most of the code in core *is* a plugin. It's all implemented in
the same way. Actions and filters, my man. Actions and filters.


> Your argument here might be helped a little though if the automated
> plugin installer also supported automatically moving any dropins
> contained in a plugin to wp-content.

Plugins can certainly do that. Please look closer at W3 Total Cache
and WP Super Cache.


> Yep, I'm very aware of that. You must have missed my introduction to the
> list last month

Bryan, I did not miss that, in fact, and please understand that I
write all messages in the full knowledge of who you are, who I am, and
what I am saying as said from me to you, at all times. I might get a
technical detail wrong here or there, but I'm not ignorant of what is
going on. I read everything on these lists, I know all the peoples
here. My point is that, usually, I'm replying to what you say. Not who
you are.

You haven't explained your concept well-enough to convince me of your
correctness. You say "it was proven that developers obviously need to
be taught how to use a file cache backend appropriately", but you
didn't give any technical detail. Please, enlighten us. What is the
appropriate way? This is wp-hackers, we can take the technical detail.

Show me the code. Tell me the right way. Saying "oh, well you didn't
do it right then" is a cop-out. If it wasn't done right, then by all
means, do it right and prove the rest of the world wrong. Convince
people.

I remain unconvinced.


> If the community has strong convictions against it, I'm not going to
> write it.

I have strong convictions that you don't know what exactly you're
talking about, but that's just *me* judging based on what you've
written thus far. Maybe I'm wrong. It's happened many times before.
But then, I admit that I don't understand most of what you're trying
to communicate here. I understand how the current system works, I can
see the way it works fully, and I like the way it works. I understand
the concepts you're talking about, but the ways you're suggesting to
implement them strike me as problematic, misguided, and strange. This
might be a failure of communication. Probably is. Code would be much
clearer, perhaps. I dunno. You tell me, man.

Get technical. Wow me. Show me the error of my ways. But please, don't
try to be condescending. Doesn't work.


-Otto

From lists at rotorised.com  Wed Jul 25 06:47:52 2012
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 25 Jul 2012 16:47:52 +1000
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <CAP29PviEKp-E0tXdz-XDJ5EO88Qq2ETBwqp3fk_LdL-qg0bgCQ@mail.gmail.com>
References: <500E9B90.9010507@rotorised.com>
	<CAP29PviEKp-E0tXdz-XDJ5EO88Qq2ETBwqp3fk_LdL-qg0bgCQ@mail.gmail.com>
Message-ID: <500F9698.2000604@rotorised.com>

Andrew Nacin wrote:
> You also mention the idea of putting try/catch inside of the plugin API ?
> that would be terribly slow, and defeats the purpose of forcing exceptions
> on developers. Congratulations, a plugin developer didn't code for an
> exception because they knew core would catch it and issue a wp_die()
> message, like that error would ever happen anyway. No thanks.

To clarify what I said in the blog post: the idea of putting them inside
do_action/apply_filters would be to avoid calling wp_die() and instead
letting just that callback fail.

At the moment, a lot of developers forget about WP_Error (at least, in
the plugin audits I've done). This means that it actually causes a
warning (attempting to access object as array, e.g.) or worse, gives bad
data.

> 1. As return codes. Often, WP_Error is used when the error is not
> "exceptional." It enables you to pass multiple errors, and also extra data.

Definitely agree. There are plenty of places where it does make sense to
use WP_Error instead of an exception. I stereotyped all errors in my
blog post to be the type suiting exceptions, because there are a lot
that are. For those that aren't, WP_Error should be used instead,
although in some cases, a more specific class might be more useful.

As for the multiple errors/extra data, both of those are possible with
exceptions. Exceptions are still normal objects.


> 2. As legitimate errors where exceptions could be used, but shouldn't be.
> This kind of factors into return codes. I personally do not find a failed
> HTTP request to be "exceptional" that, if uncaught, should result in a
> fatal error.

I also agree here, but only for certain cases:

- cURL/fsockopen/Stream errors should be exceptions. These are things
  which should be raised, as they are a failure regardless of use case

- HTTP errors (i.e. non-2xx status codes) should not be exceptions,
  unless the caller specifically asks for them to be. For example,
  Requests [0] has a `throw_for_error()` method on the response object;
  Mike suggested an 'exception' option, which would also work great.

  The reason for this is because it's dependent on the caller as to
  whether one of these statuses is a failure mode.

> Wrapping all of this in a try/catch would be nice. (I think relying on
> exceptions to bubble is lazy; we'd be handling these all within that
> routine.)

It's less about being lazy and more about handling it where it makes
sense, rather than having to handle it at every stage.

> 
> However, two major problems with this. One,
> wp-admin/includes/update-core.php is copied over during a core update and
> executed by the currently installed version. Can't throw a WP_Exception
> when WP_Exception doesn't exist yet.

Why not include a mock WP_Exception within that? We already have mock
functions in wp-admin/load-scripts.php and wp-admin/load-styles.php.

On top of that, we could just use Exception itself. The functions that
have it available could use WP_Exception, and the other functions could
use Exception; the calling code could then catch all of them with `catch
(Exception $e)`

> The second problem is that PHP doesn't have finally blocks.

I do agree with that, and I'm not a fan of that, however they are
working on that (it looks likely that it'll make it into 5.5, and
possibly 5.4). That doesn't make much of a difference to us, but you can
fake it in the few cases where you actually need it:

	try {
		$fp = fopen('readme.txt');
		some_function_that_throws_an_exception($fp);
		fclose($fp);
	}
	catch (Exception $e) {
		fclose($fp);
		throw $e;
	}

It does involve duplication, but it's still possible, and I think it's
used infrequently enough that it's not too much of an issue.

> I'm not saying there isn't a single use in WordPress for a WP_Exception. I
> know for a fact there are some, but I also don't think there are enough
> examples where an exception would be oh-just-so-much-better than error
> objects to justify a paradigm change. As it is, WordPress is getting
> complicated (almost too complicated) in certain areas, and it'll only serve
> to hurt theme developers, designers, and many weaker plugin authors the
> more "by the book" we become.

WordPress is well-known throughout a lot of the PHP community for being
fairly horrible from a PHP standpoint. This has been changing as WP gets
modernised and I think part of that is embracing the facilities we have
in PHP.

I also think this will benefit plugin authors, especially the weaker
ones. A lot of them don't bother to check `is_wp_error()`. Exceptions on
the other hand make it very obvious when an error has occurred, and are
much less obscure than a "cannot use object of type WP_Error as array"
error.

Theme developers/designers should never need to handle that. Exceptions
don't make sense for any of the template tags (e.g.), only the more
low-level stuff.

> And of course, plugin authors can already use exceptions if they wanted to.

And they should, hence why I wrote about converting WP_Error to
exceptions now. I already do this myself. :)

> Write your own HTTP API wrapper that throws exceptions ? come on, you're a
> programmer, do what programmers do: make a personal, convoluted abstraction
> layer. :-)

Actually, my plan was to write a wrapper for Requests [0] to make it
expose a WP_Http-like API, including WP_Error support (so basically, in
the other direction). Convolution FTW! :D

Thanks for the detailed response!


[0]: http://requests.ryanmccue.info/

-- 
Ryan McCue
<http://ryanmccue.info/>

From lists at rotorised.com  Wed Jul 25 06:57:45 2012
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 25 Jul 2012 16:57:45 +1000
Subject: [wp-hackers] Why WP_Error Sucks
In-Reply-To: <CAH-8B6vHtbwUk9YdYtJ0P4mA=eW_5g5224QOkr4oTUjrNq7NPw@mail.gmail.com>
References: <500E9B90.9010507@rotorised.com>
	<CAH-8B6vHtbwUk9YdYtJ0P4mA=eW_5g5224QOkr4oTUjrNq7NPw@mail.gmail.com>
Message-ID: <500F98E9.9040103@rotorised.com>

Michael D Adams wrote:
> Joel Spolsky's opinion:
> http://www.joelonsoftware.com/items/2003/10/13.html (Exceptions are
> worse than GOTOs)

While I'm a big fan of Joel's writing, I don't always agree with him on
his topics. This is one of them.

Not knowing whether a function is going to throw an exception seems to
me like more of a documentation issue than anything else. I think that's
definitely solvable, especially given WordPress' fairly good PHPDoc that
we already have.

Also from the article:

> It is true that what should be a simple 3 line program often blossoms to 48 lines when you put in good error checking, but that's life

I disagree that it has to be this way. We're using a modern high-level
development language with these features built in.

-- 
Ryan McCue
<http://ryanmccue.info/>

From lists at rotorised.com  Wed Jul 25 07:27:56 2012
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 25 Jul 2012 17:27:56 +1000
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <500F73A9.90404@bluehost.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500F73A9.90404@bluehost.com>
Message-ID: <500F9FFC.9040808@rotorised.com>

Bryan Petty wrote:
> I wasn't going to originally reply to this because I thought it
> offensive, and I didn't have anything constructive to reply back with,
> but I do actually feel like I have to address this now.

Off-topic, but relevant here: Quite a few developers come off as quite
harsh and occasionally offensive, but please don't take it personally.
It's usually just our natural abrasiveness and desire to get straight to
the point without fluffing around.

(This is less to you Bryan, as I'm sure you're already aware of it, but
as a general note to everyone.)

-- 
Ryan McCue
<http://ryanmccue.info/>

From highfive at jesserfriedman.com  Wed Jul 25 13:53:12 2012
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Wed, 25 Jul 2012 09:53:12 -0400
Subject: [wp-hackers] Best Practice for storing WP Network wide data
Message-ID: <CAGtTZ+a1dRA6=Fk7OyEg0J7sb4v4Ua5WFwHRAx33rGd=pz-Tqg@mail.gmail.com>

I am tapping into an external API and I need to store data from that 3rd
party on my WordPress MultiSite Network and all sites on the network need
to be able to access this data easily.

If it were specific to one site I would save it as site options. It's kind
of a lot of data to save in a single serialized array, anyways.

Any help on what the best practice would be.

thanks,

Jesse

From ryan at pixopoint.com  Wed Jul 25 13:56:29 2012
From: ryan at pixopoint.com (Ryan Hellyer)
Date: Wed, 25 Jul 2012 15:56:29 +0200
Subject: [wp-hackers] Best Practice for storing WP Network wide data
In-Reply-To: <CAGtTZ+a1dRA6=Fk7OyEg0J7sb4v4Ua5WFwHRAx33rGd=pz-Tqg@mail.gmail.com>
References: <CAGtTZ+a1dRA6=Fk7OyEg0J7sb4v4Ua5WFwHRAx33rGd=pz-Tqg@mail.gmail.com>
Message-ID: <CADTfcvY2HQ0_UL-4iCNWp+Gjr5R6C68C4S+GW+=jUyvQezqihA@mail.gmail.com>

On Wed, Jul 25, 2012 at 3:53 PM, Jesse Friedman
<highfive at jesserfriedman.com> wrote:
> I am tapping into an external API and I need to store data from that 3rd
> party on my WordPress MultiSite Network and all sites on the network need
> to be able to access this data easily.
>
> If it were specific to one site I would save it as site options. It's kind
> of a lot of data to save in a single serialized array, anyways.
>
> Any help on what the best practice would be.
>
> thanks,
>
> Jesse


get_site_option() is what you need. It's the network equivalent of
get_option() and is darned handy! You can call it from anywhere on the
network and it behaves much the same as a single site option.
http://codex.wordpress.org/WPMU_Functions/get_site_option

From bpetty at bluehost.com  Wed Jul 25 14:14:48 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Wed, 25 Jul 2012 08:14:48 -0600
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAD-FghzymkVKke4=2aTGMGc8pGhT7yvHxtcBX1kHuY-RD-BzTg@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
	<500F2B99.2090204@bluehost.com>
	<CAD-FghzHHZtS3sg3F-Ny1XUErr29OtmRn2Rq7GSjhkVctSHC3w@mail.gmail.com>
	<500F8D34.7060706@bluehost.com>
	<CAD-FghzymkVKke4=2aTGMGc8pGhT7yvHxtcBX1kHuY-RD-BzTg@mail.gmail.com>
Message-ID: <500FFF58.9020402@bluehost.com>

On 07/25/2012 12:33 AM, Otto wrote:
> We consider that plugins are first-class citizens in the WordPress
> world. Most of the code in core *is* a plugin. It's all implemented in
> the same way. Actions and filters, my man. Actions and filters.

You don't just move everything to a plugin because it *can* be one. You
wouldn't strip out the admin settings panel or the reserved Pages CPT
and toss it in a plugin even though both could be. But, it makes perfect
sense that importers are plugins, and it also makes perfect sense that
the links are being moved to a plugin.

There's obviously a level of what functionality you should ship by
default with the core application that both plugin developers and users
can rely on and expect that every WP installation has those features and
functionality. Also, you said it yourself, the 80/20 rule.

> You haven't explained your concept well-enough to convince me of your
> correctness. You say "it was proven that developers obviously need to
> be taught how to use a file cache backend appropriately", but you
> didn't give any technical detail. Please, enlighten us. What is the
> appropriate way? This is wp-hackers, we can take the technical detail.

Sure, you show me which code was using wp_cache_get() back when it was
file-backed that was triggering it to create thousands of files and read
back at least a dozen of them per request, and I'll show you what they
did wrong, and how to fix it. It's very easy to fix.

I *am* telling you how the object cache can be fixed without running
into this problem again, and I *did* give you technical details on how I
would re-design the object cache so it doesn't run into those
limitations. All you had to say without being condescending, was "What
were they doing wrong?"

What they were doing wrong was either using too much granularity for the
data they were caching, or if it really didn't need to persist across
connections, they could have simply stored their own cache data in a
static variable themselves. WordPress made the call that no-one's
wp_cache_set() calls needed to persist when it removed the file-backed
cache, moving *everyone's* cache to a static variable for them
regardless of whether it was the cause of the problems or not and
regardless of whether that cached data really did need to be persistent
to be effective.

Maybe developers just weren't warned enough that it was a file-backed
cache they were saving to in the docs for the object cache methods and
what that meant for how they should use it, but it wasn't the design of
the cache that was at fault. There's a chance it could have been more
efficient itself. But it had a purpose, and it's purpose was to provide
a persistent object cache, not to just be an object cache, that's what
variables are for.

> I remain unconvinced.

That's fine. I've explained it, and I've answered your questions.
There's nothing more I can really do. You're insistent in being stubborn
about it and not being open to solutions, and that's your right. It's my
right to not care if you still don't understand it.

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com

From otto at ottodestruct.com  Wed Jul 25 17:10:39 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 25 Jul 2012 12:10:39 -0500
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <500FFF58.9020402@bluehost.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
	<500F2B99.2090204@bluehost.com>
	<CAD-FghzHHZtS3sg3F-Ny1XUErr29OtmRn2Rq7GSjhkVctSHC3w@mail.gmail.com>
	<500F8D34.7060706@bluehost.com>
	<CAD-FghzymkVKke4=2aTGMGc8pGhT7yvHxtcBX1kHuY-RD-BzTg@mail.gmail.com>
	<500FFF58.9020402@bluehost.com>
Message-ID: <CAD-FghwWcV2iU3OPFT86B5hSoW-Y0U_38xaQuOPoi9wQ5pkB8A@mail.gmail.com>

On Wed, Jul 25, 2012 at 9:14 AM, Bryan Petty <bpetty at bluehost.com> wrote:
> There's obviously a level of what functionality you should ship by
> default with the core application that both plugin developers and users
> can rely on and expect that every WP installation has those features and
> functionality. Also, you said it yourself, the 80/20 rule.

Agreed. But a persistent object cache doesn't fall into that category.
IMO, of course.


> That's fine. I've explained it, and I've answered your questions.

And you still haven't provided a plugin that shows how to implement it
correctly.

The Cache API allows hooking in of external caching mechanisms. It's
fairly trivial to implement such a cache using files. Here's one for
example:
http://wordpress.org/extend/plugins/wp-file-cache/

Here's another:
http://neosmart.net/WP/FileCache/

And here's a full explanation of the file cache and why it fell out of
WordPress:
http://neosmart.net/blog/2008/wordpress-25-and-the-object-cache/

If you know "the right way" then *implement it*. Don't explain it. Do it.


-Otto

From chris at lod.com  Wed Jul 25 17:53:05 2012
From: chris at lod.com (Chris McCoy)
Date: Wed, 25 Jul 2012 13:53:05 -0400
Subject: [wp-hackers] trimming oembed results
Message-ID: <000001cd6a8e$5848d1c0$08da7540$@lod.com>

Ive created a handler for an oembed, but it seems its adding <p> and <br/>'s
anyway to trim this before sending to the apply_filters?



From otto at ottodestruct.com  Wed Jul 25 17:56:37 2012
From: otto at ottodestruct.com (Otto)
Date: Wed, 25 Jul 2012 12:56:37 -0500
Subject: [wp-hackers] trimming oembed results
In-Reply-To: <000001cd6a8e$5848d1c0$08da7540$@lod.com>
References: <000001cd6a8e$5848d1c0$08da7540$@lod.com>
Message-ID: <CAD-FghzUsw_nyX5G9ydnjsGo+LOSPH+OXPehRird9DM8Y_vrrg@mail.gmail.com>

What's your code look like? oembed doesn't add P's and such, but
wpautop might be adding it later.

-Otto


On Wed, Jul 25, 2012 at 12:53 PM, Chris McCoy <chris at lod.com> wrote:
> Ive created a handler for an oembed, but it seems its adding <p> and <br/>'s
> anyway to trim this before sending to the apply_filters?
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From highfive at jesserfriedman.com  Wed Jul 25 18:21:48 2012
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Wed, 25 Jul 2012 14:21:48 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAD-FghzHHZtS3sg3F-Ny1XUErr29OtmRn2Rq7GSjhkVctSHC3w@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
	<500F2B99.2090204@bluehost.com>
	<CAD-FghzHHZtS3sg3F-Ny1XUErr29OtmRn2Rq7GSjhkVctSHC3w@mail.gmail.com>
Message-ID: <CAGtTZ+bk6HZ8096CVVcpN5sSKr4-qtnQwtepOE4qMUBwH5020w@mail.gmail.com>

Shouldn't the WordPress 80/20 Rule apply here? Not everything is built into
core for a reason. There are thousands of features that *some* users need
and oddly enough there are thousands of plugins available to support those
needs.

Jesse

On Wed, Jul 25, 2012 at 12:06 AM, Otto <otto at ottodestruct.com> wrote:

> On Tue, Jul 24, 2012 at 6:11 PM, Bryan Petty <bpetty at bluehost.com> wrote:
> > Ok... so now you'll admit that the Transients API has high overhead, is
> > difficult to use, and is in-appropriate for page or fragment caching.
> > You also admit that the dropins are "hacky as heck".
> >
> > However, you'll still tell me that's what I should use when I so much as
> > suggest that WP_Object_Cache could be expanded (in a 100% backwards
> > compatible way) to support persistent cache backends in core like it
> > used to, but done the right way this time.
>
> No, I tell you that it's appropriate to implement persistent cache
> backends *for your specific needs*. It shouldn't be in core. It should
> be done on a per-host, per-server, per-setup basis.
>
> There's no universal answers here. Core can't implement persistent
> caching in a universal way that doesn't have downsides.
>
>
> > How about this...
> >
> > What if the Transients API was converted over to a WP_Object_Cache
> > backend, and used as the default fallback instead of the file backend if
> > none of the accelerators are available (APC/XCache/WinCache)?
>
> Implementing the object, or the transients, cache as a file backend is
> a *proven* loser. It sucks. Royally. On the majority of hosts. Search
> for the arguments over 5 years ago to find proof.
>
> If you want to write it for your particular set of hosting
> capabilities, then by all means do so. As a plugin. Convince more
> people that your solution fits the 80/20 rule. Then, you have a shot
> at core. Fit the majority case.
>
> I'm not saying I'm right, or that I have any form of control over it,
> because I don't. I'm just saying that you need to *prove* that you are
> right. See, I don't control what goes into core, not by a long shot.
> I'm just one of the few who knows how it works and who is more than
> happy to tell you what you need to do. PROVE IT. Then you have a shot.
> Right now, a whole lot of people whom I've talked to about it on
> multiple occasions thinks that the evidence is against you. Prove me
> wrong. Show me that you're right. Stats. Numbers. Code. This sort of
> yap-yap goes nowhere, it's just me arguing with you. But if you show
> improvement, if you can show, empirically, that you have the right
> answer, then everybody will back you.
>
> This is open source. You don't get anywhere without code that actually
> gets the job done, man.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
thanks,

*Jesse Friedman*
508-507-9673 | jesserfriedman at gmail.com
http://jesserfriedman.com | @professor <http://twitter.com/professor>

From chris at lod.com  Wed Jul 25 18:25:35 2012
From: chris at lod.com (Chris McCoy)
Date: Wed, 25 Jul 2012 14:25:35 -0400
Subject: [wp-hackers] trimming oembed results
In-Reply-To: <CAD-FghzUsw_nyX5G9ydnjsGo+LOSPH+OXPehRird9DM8Y_vrrg@mail.gmail.com>
References: <000001cd6a8e$5848d1c0$08da7540$@lod.com>
	<CAD-FghzUsw_nyX5G9ydnjsGo+LOSPH+OXPehRird9DM8Y_vrrg@mail.gmail.com>
Message-ID: <000601cd6a92$e25a9890$a70fc9b0$@lod.com>

Im actually returning a shortcode its an html5 audio player shortcode, and
im passing it on to the handler for mp3 links in posts.

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Otto
Sent: Wednesday, July 25, 2012 1:57 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] trimming oembed results

What's your code look like? oembed doesn't add P's and such, but wpautop
might be adding it later.

-Otto


On Wed, Jul 25, 2012 at 12:53 PM, Chris McCoy <chris at lod.com> wrote:
> Ive created a handler for an oembed, but it seems its adding <p> and 
> <br/>'s anyway to trim this before sending to the apply_filters?
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From almog.baku at gmail.com  Wed Jul 25 20:14:33 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Wed, 25 Jul 2012 23:14:33 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAGtTZ+bk6HZ8096CVVcpN5sSKr4-qtnQwtepOE4qMUBwH5020w@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
	<500F2B99.2090204@bluehost.com>
	<CAD-FghzHHZtS3sg3F-Ny1XUErr29OtmRn2Rq7GSjhkVctSHC3w@mail.gmail.com>
	<CAGtTZ+bk6HZ8096CVVcpN5sSKr4-qtnQwtepOE4qMUBwH5020w@mail.gmail.com>
Message-ID: <CALncZpQ-Hch0U0uaWEZ37j7C=3Jc8fbwgh+NBM2wi6zcBmuNnQ@mail.gmail.com>

So.. What define if something get into the core or not?

If all the reasons I list before(mainly: let the developers more involved
with the proccess) dosen't count?!?

?????? ??? ?????, 25 ????? 2012, Jesse Friedman ???:

> Shouldn't the WordPress 80/20 Rule apply here? Not everything is built into
> core for a reason. There are thousands of features that *some* users need
> and oddly enough there are thousands of plugins available to support those
> needs.
>
> Jesse
>
> On Wed, Jul 25, 2012 at 12:06 AM, Otto <otto at ottodestruct.com<javascript:;>>
> wrote:
>
> > On Tue, Jul 24, 2012 at 6:11 PM, Bryan Petty <bpetty at bluehost.com<javascript:;>>
> wrote:
> > > Ok... so now you'll admit that the Transients API has high overhead, is
> > > difficult to use, and is in-appropriate for page or fragment caching.
> > > You also admit that the dropins are "hacky as heck".
> > >
> > > However, you'll still tell me that's what I should use when I so much
> as
> > > suggest that WP_Object_Cache could be expanded (in a 100% backwards
> > > compatible way) to support persistent cache backends in core like it
> > > used to, but done the right way this time.
> >
> > No, I tell you that it's appropriate to implement persistent cache
> > backends *for your specific needs*. It shouldn't be in core. It should
> > be done on a per-host, per-server, per-setup basis.
> >
> > There's no universal answers here. Core can't implement persistent
> > caching in a universal way that doesn't have downsides.
> >
> >
> > > How about this...
> > >
> > > What if the Transients API was converted over to a WP_Object_Cache
> > > backend, and used as the default fallback instead of the file backend
> if
> > > none of the accelerators are available (APC/XCache/WinCache)?
> >
> > Implementing the object, or the transients, cache as a file backend is
> > a *proven* loser. It sucks. Royally. On the majority of hosts. Search
> > for the arguments over 5 years ago to find proof.
> >
> > If you want to write it for your particular set of hosting
> > capabilities, then by all means do so. As a plugin. Convince more
> > people that your solution fits the 80/20 rule. Then, you have a shot
> > at core. Fit the majority case.
> >
> > I'm not saying I'm right, or that I have any form of control over it,
> > because I don't. I'm just saying that you need to *prove* that you are
> > right. See, I don't control what goes into core, not by a long shot.
> > I'm just one of the few who knows how it works and who is more than
> > happy to tell you what you need to do. PROVE IT. Then you have a shot.
> > Right now, a whole lot of people whom I've talked to about it on
> > multiple occasions thinks that the evidence is against you. Prove me
> > wrong. Show me that you're right. Stats. Numbers. Code. This sort of
> > yap-yap goes nowhere, it's just me arguing with you. But if you show
> > improvement, if you can show, empirically, that you have the right
> > answer, then everybody will back you.
> >
> > This is open source. You don't get anywhere without code that actually
> > gets the job done, man.
> >
> > -Otto
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> thanks,
>
> *Jesse Friedman*
> 508-507-9673 | jesserfriedman at gmail.com <javascript:;>
> http://jesserfriedman.com | @professor <http://twitter.com/professor>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From elfin at elfden.co.uk  Wed Jul 25 20:43:19 2012
From: elfin at elfden.co.uk (Rich Pedley)
Date: Wed, 25 Jul 2012 21:43:19 +0100
Subject: [wp-hackers] trimming oembed results
In-Reply-To: <CAD-FghzUsw_nyX5G9ydnjsGo+LOSPH+OXPehRird9DM8Y_vrrg@mail.gmail.com>
References: <000001cd6a8e$5848d1c0$08da7540$@lod.com>
	<CAD-FghzUsw_nyX5G9ydnjsGo+LOSPH+OXPehRird9DM8Y_vrrg@mail.gmail.com>
Message-ID: <50105A67.2030006@elfden.co.uk>

On 25/07/2012 18:56, Otto wrote:
> What's your code look like? oembed doesn't add P's and such, but
> wpautop might be adding it later.
>
> -Otto
>
>
> On Wed, Jul 25, 2012 at 12:53 PM, Chris McCoy <chris at lod.com> wrote:
>> Ive created a handler for an oembed, but it seems its adding <p> and <br/>'s
>> anyway to trim this before sending to the apply_filters?

I have come across a few issues with this recently - tracked it down 
to it being from a plugin/theme implementing a different version of 
jQuery.

Rich


From chris at lod.com  Wed Jul 25 20:44:33 2012
From: chris at lod.com (Chris McCoy)
Date: Wed, 25 Jul 2012 16:44:33 -0400
Subject: [wp-hackers] trimming oembed results
In-Reply-To: <50105A67.2030006@elfden.co.uk>
References: <000001cd6a8e$5848d1c0$08da7540$@lod.com>
	<CAD-FghzUsw_nyX5G9ydnjsGo+LOSPH+OXPehRird9DM8Y_vrrg@mail.gmail.com>
	<50105A67.2030006@elfden.co.uk>
Message-ID: <000c01cd6aa6$4c3c5470$e4b4fd50$@lod.com>

Might be it, cause the shortcode itself doesn't show any <br/>, ill try and
disable the other libraries

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Rich Pedley
Sent: Wednesday, July 25, 2012 4:43 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] trimming oembed results

On 25/07/2012 18:56, Otto wrote:
> What's your code look like? oembed doesn't add P's and such, but 
> wpautop might be adding it later.
>
> -Otto
>
>
> On Wed, Jul 25, 2012 at 12:53 PM, Chris McCoy <chris at lod.com> wrote:
>> Ive created a handler for an oembed, but it seems its adding <p> and 
>> <br/>'s anyway to trim this before sending to the apply_filters?

I have come across a few issues with this recently - tracked it down to it
being from a plugin/theme implementing a different version of jQuery.

Rich

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From elfin at elfden.co.uk  Wed Jul 25 20:52:22 2012
From: elfin at elfden.co.uk (Rich Pedley)
Date: Wed, 25 Jul 2012 21:52:22 +0100
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CALncZpQ-Hch0U0uaWEZ37j7C=3Jc8fbwgh+NBM2wi6zcBmuNnQ@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
	<500F2B99.2090204@bluehost.com>
	<CAD-FghzHHZtS3sg3F-Ny1XUErr29OtmRn2Rq7GSjhkVctSHC3w@mail.gmail.com>
	<CAGtTZ+bk6HZ8096CVVcpN5sSKr4-qtnQwtepOE4qMUBwH5020w@mail.gmail.com>
	<CALncZpQ-Hch0U0uaWEZ37j7C=3Jc8fbwgh+NBM2wi6zcBmuNnQ@mail.gmail.com>
Message-ID: <50105C86.9050807@elfden.co.uk>

I'm surprised that this conversation has gone on as long as it has - 
much longer than previous times from what I can recall.

Remember - the people asking for caching to be in the core are people 
that want it for a reason - ie for a site. the majority of people that 
use WordPress not only don't care whether it is there or not, they 
probably never need it. I would estimate that well over 80, if not 90, 
percent of users will never ever need caching.

Plugins, as Otto has repeatedly mentioned are there for a reason - and 
if coded well can do the job just as good as anything added into core. 
Provided the hooks are there for the implementation of a caching 
plugin then there is no issue, and if they aren't - then they can be 
requested to be added!

But what if you don't like the current caching plugins that are 
available? well there as an obvious answer to that - write your own! 
Or adapt what is available - I have written countless additions to 
existing plugins when the need arises.

Rich

From almog.baku at gmail.com  Wed Jul 25 22:40:38 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Thu, 26 Jul 2012 01:40:38 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <50105C86.9050807@elfden.co.uk>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
	<500F2B99.2090204@bluehost.com>
	<CAD-FghzHHZtS3sg3F-Ny1XUErr29OtmRn2Rq7GSjhkVctSHC3w@mail.gmail.com>
	<CAGtTZ+bk6HZ8096CVVcpN5sSKr4-qtnQwtepOE4qMUBwH5020w@mail.gmail.com>
	<CALncZpQ-Hch0U0uaWEZ37j7C=3Jc8fbwgh+NBM2wi6zcBmuNnQ@mail.gmail.com>
	<50105C86.9050807@elfden.co.uk>
Message-ID: <CALncZpSwN5za9=QbfnzQEQz4KkdA8zB3xqmT6ssq7FjpqB6Fxg@mail.gmail.com>

Rich, if the common user dosent know abot caching, it doesnt mean he dont
need it!!

?????? ??? ?????, 25 ????? 2012, Rich Pedley ???:

> I'm surprised that this conversation has gone on as long as it has - much
> longer than previous times from what I can recall.
>
> Remember - the people asking for caching to be in the core are people that
> want it for a reason - ie for a site. the majority of people that use
> WordPress not only don't care whether it is there or not, they probably
> never need it. I would estimate that well over 80, if not 90, percent of
> users will never ever need caching.
>
> Plugins, as Otto has repeatedly mentioned are there for a reason - and if
> coded well can do the job just as good as anything added into core.
> Provided the hooks are there for the implementation of a caching plugin
> then there is no issue, and if they aren't - then they can be requested to
> be added!
>
> But what if you don't like the current caching plugins that are available?
> well there as an obvious answer to that - write your own! Or adapt what is
> available - I have written countless additions to existing plugins when the
> need arises.
>
> Rich
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From mike at newclarity.net  Wed Jul 25 22:47:12 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Wed, 25 Jul 2012 18:47:12 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <50105C86.9050807@elfden.co.uk>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAD-Fghzdbkgw43CuDiemRYt70sKmCyRixUAKnRHDRFqXgUSOWg@mail.gmail.com>
	<500F2B99.2090204@bluehost.com>
	<CAD-FghzHHZtS3sg3F-Ny1XUErr29OtmRn2Rq7GSjhkVctSHC3w@mail.gmail.com>
	<CAGtTZ+bk6HZ8096CVVcpN5sSKr4-qtnQwtepOE4qMUBwH5020w@mail.gmail.com>
	<CALncZpQ-Hch0U0uaWEZ37j7C=3Jc8fbwgh+NBM2wi6zcBmuNnQ@mail.gmail.com>
	<50105C86.9050807@elfden.co.uk>
Message-ID: <90D30B65-9D9E-41A9-83E0-794BCD967382@newclarity.net>

On Jul 25, 2012, at 4:52 PM, Rich Pedley wrote:
> Remember - the people asking for caching to be in the core are people that want it for a reason - ie for a site.

That's not true in all cases.  Some people like me want common caching patterns to be baked into core APIs so we can depend on them and build on top of them.

> Provided the hooks are there for the implementation of a caching plugin then there is no issue, and if they aren't - then they can be requested to be added!

The hooks are not all there.  Dropins are not hooks.

-Mike

From sinan at sinanisler.com  Wed Jul 25 23:42:17 2012
From: sinan at sinanisler.com (Sinan)
Date: Thu, 26 Jul 2012 02:42:17 +0300
Subject: [wp-hackers] Adding New Box (php content) New Post Page
In-Reply-To: <CACzxQMaCHN7_uy+YWaqSp97HrvoBNjAArWguPHGwhfaGEJHwaQ@mail.gmail.com>
References: <CABmkrsHbwnmgVJENDKwc36_15MUYYV=CH_CDW01U9Xf4PFnR2A@mail.gmail.com>
	<CACzxQMaCHN7_uy+YWaqSp97HrvoBNjAArWguPHGwhfaGEJHwaQ@mail.gmail.com>
Message-ID: <CABmkrsHYv4o_uV-SP7Xd7L9-MiH9hn4XEZarTBRDRTSx_ksOyQ@mail.gmail.com>

Thank you Rodolfo

2012/7/22 Rodolfo Buaiz <brasofilo at gmail.com>

> Check here:
> http://codex.wordpress.org/Function_Reference/add_meta_box
>
>
> On Sun, Jul 22, 2012 at 7:25 PM, Sinan <sinan at sinanisler.com> wrote:
>
> > Hello,
> >
> > I want t add new box to New Post Page.
> >
> > As you can see the screenshot for place.
> >
> > How can ? do this and what filter can help me ?
> >
> > Thank you.
> >
> >
> >
> >
> > --
> > Sinan ??LER
> > sinanisler.com <http://www.sinanisler.com>
> > fb.com/sinanisler
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Sinan ??LER
sinanisler.com <http://www.sinanisler.com>
fb.com/sinanisler

From david at wordshell.net  Thu Jul 26 08:08:51 2012
From: david at wordshell.net (David Anderson)
Date: Thu, 26 Jul 2012 11:08:51 +0300
Subject: [wp-hackers] Why no automatic database upgrade?
Message-ID: <5010FB13.9020100@wordshell.net>

Hi,

As some of you know, I develop WordShell, which amongst other things 
allows the user to upgrade 1 or 1 million WordPress instances from the 
command-line in a single command.

It upgrades WordPress by calling WordPress's own internal upgrade 
routines (though it can do it manually if you prefer).

Therefore, like WordPress, on the next visit to the administration 
console (http://example.com/wp-admin) the site administrator might get 
requested by WordPress to do a database update by clicking on the button.

I was asking myself, why don't we make WordShell do this automatically 
and save the user the hassle?

This then leads to the obvious question - why doesn't WordPress itself 
do this automatically and not bother the user? I can save the user a 
click or command - but is there some design reason why this is already 
an extra step? Would I be in danger of optimising out a step that should 
not be optimised?

Reading the code, I can't see an obvious reason why the answer is "yes"; 
WordPress does not make this step optional; you can't log in to the 
admin console until you first do the DB upgrade. So - am I missing 
something?

Many thanks,
David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From wordpress at dd32.id.au  Thu Jul 26 08:21:13 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Thu, 26 Jul 2012 18:21:13 +1000
Subject: [wp-hackers] Why no automatic database upgrade?
In-Reply-To: <5010FB13.9020100@wordshell.net>
References: <5010FB13.9020100@wordshell.net>
Message-ID: <CAL4EHfkLUJDc5e1_=qxN3P6LEpMcPHGOTJv5uV2-TbtjefRYaA@mail.gmail.com>

On 26 July 2012 18:08, David Anderson <david at wordshell.net> wrote:
> This then leads to the obvious question - why doesn't WordPress itself do
> this automatically and not bother the user? I can save the user a click or
> command - but is there some design reason why this is already an extra step?
> Would I be in danger of optimising out a step that should not be optimised?

It is actually done automatically for hte majority of users when they
use the built in Core Upgrader, It's only those who are using SVN or
manually updating who ever see the screen.

There have been plans to skip the screen all together.. it's just a
reasonably low priority change since it doesn't affect most users.
http://core.trac.wordpress.org/ticket/7965

However, In a position where WordPress is being used on the command
line, performing the changes automatically might not be ideal -
Although most changes are fast and are simply adding indexes or
capabilities to roles, these upgrade routines in the past have been
more intensive, and the task being run twice at the same time could
*theoretically* cause problems.. but I honestly don't see that being a
problem any time soon (But it could be).

From wp-hackers at thecodecave.com  Thu Jul 26 14:46:31 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Thu, 26 Jul 2012 10:46:31 -0400
Subject: [wp-hackers] Why no automatic database upgrade?
In-Reply-To: <CAL4EHfkLUJDc5e1_=qxN3P6LEpMcPHGOTJv5uV2-TbtjefRYaA@mail.gmail.com>
References: <5010FB13.9020100@wordshell.net>
	<CAL4EHfkLUJDc5e1_=qxN3P6LEpMcPHGOTJv5uV2-TbtjefRYaA@mail.gmail.com>
Message-ID: <50115847.5000303@thecodecave.com>

I've had upgrades take 8 hour to process - and that was after hacking 
the core to remove a step that would have made it take days.  But this 
is a rarer huge multisite install.  As long as there is a constant that 
can be defined to turn off the auto upgrade, this would be cool.

When I update the installs on my servers, its done by batch script 
iterating the cpanel information.  It then calls the upgrade screens via 
wget.

Brian Layman

On 7/26/2012 4:21 AM, Dion Hulse (dd32) wrote:
> On 26 July 2012 18:08, David Anderson <david at wordshell.net> wrote:
>> This then leads to the obvious question - why doesn't WordPress itself do
>> this automatically and not bother the user? I can save the user a click or
>> command - but is there some design reason why this is already an extra step?
>> Would I be in danger of optimising out a step that should not be optimised?
> It is actually done automatically for hte majority of users when they
> use the built in Core Upgrader, It's only those who are using SVN or
> manually updating who ever see the screen.
>
> There have been plans to skip the screen all together.. it's just a
> reasonably low priority change since it doesn't affect most users.
> http://core.trac.wordpress.org/ticket/7965
>
> However, In a position where WordPress is being used on the command
> line, performing the changes automatically might not be ideal -
> Although most changes are fast and are simply adding indexes or
> capabilities to roles, these upgrade routines in the past have been
> more intensive, and the task being run twice at the same time could
> *theoretically* cause problems.. but I honestly don't see that being a
> problem any time soon (But it could be).
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From david at wordshell.net  Thu Jul 26 15:37:19 2012
From: david at wordshell.net (David Anderson)
Date: Thu, 26 Jul 2012 18:37:19 +0300
Subject: [wp-hackers] Why no automatic database upgrade?
In-Reply-To: <mailman.9.1343304002.15118.wp-hackers@lists.automattic.com>
References: <mailman.9.1343304002.15118.wp-hackers@lists.automattic.com>
Message-ID: <5011642F.4060403@wordshell.net>


On 26/07/12 15:00, wp-hackers-request at lists.automattic.com wrote:
> It is actually done automatically for hte majority of users when they 
> use the built in Core Upgrader, It's only those who are using SVN or 
> manually updating who ever see the screen.
Thanks... I'm a bit puzzled here - something must be malfunctioning. 
Before I started building WordShell I always used the built in Core 
Upgrader; but I've got to see the 'database upgrade required' screen 
quite often. This is across quite a variety of sites and servers. Is 
there any other reason why it might not take place automatically?

David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From dennen at gmail.com  Thu Jul 26 15:42:23 2012
From: dennen at gmail.com (Bill Dennen)
Date: Thu, 26 Jul 2012 11:42:23 -0400
Subject: [wp-hackers] Why no automatic database upgrade?
In-Reply-To: <5011642F.4060403@wordshell.net>
References: <mailman.9.1343304002.15118.wp-hackers@lists.automattic.com>
	<5011642F.4060403@wordshell.net>
Message-ID: <CAAFBVjgT2=AD=Mc8_RVCPON-ScjAGra-0BLNeHp9-TU14Ygc_Q@mail.gmail.com>

> Thanks... I'm a bit puzzled here - something must be malfunctioning. Before
> I started building WordShell I always used the built in Core Upgrader; but
> I've got to see the 'database upgrade required' screen quite often. This is
> across quite a variety of sites and servers. Is there any other reason why
> it might not take place automatically?

I always see the notification on a Multisite installation. So I was
puzzled by the comment that it's automatic.

Are you testing on Multisite?

-Bill

From ipstenu at ipstenu.org  Thu Jul 26 16:11:54 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Thu, 26 Jul 2012 11:11:54 -0500
Subject: [wp-hackers] Why no automatic database upgrade?
In-Reply-To: <CAAFBVjgT2=AD=Mc8_RVCPON-ScjAGra-0BLNeHp9-TU14Ygc_Q@mail.gmail.com>
References: <mailman.9.1343304002.15118.wp-hackers@lists.automattic.com>
	<5011642F.4060403@wordshell.net>
	<CAAFBVjgT2=AD=Mc8_RVCPON-ScjAGra-0BLNeHp9-TU14Ygc_Q@mail.gmail.com>
Message-ID: <5AAE6F3E-AED5-4398-B60F-1E5A8F7045A4@ipstenu.org>

I run multisite on aortic, and only see the upgrade notice once in a blue moon. It really depends on what got updated.

On Jul 26, 2012, at 10:42 AM, Bill Dennen <dennen at gmail.com> wrote:

>> Thanks... I'm a bit puzzled here - something must be malfunctioning. Before
>> I started building WordShell I always used the built in Core Upgrader; but
>> I've got to see the 'database upgrade required' screen quite often. This is
>> across quite a variety of sites and servers. Is there any other reason why
>> it might not take place automatically?
> 
> I always see the notification on a Multisite installation. So I was
> puzzled by the comment that it's automatic.
> 
> Are you testing on Multisite?
> 
> -Bill
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From dmitry at getmoxied.net  Fri Jul 27 01:13:51 2012
From: dmitry at getmoxied.net (Dmitry Tokmakov)
Date: Thu, 26 Jul 2012 21:13:51 -0400
Subject: [wp-hackers] Search results filtering
Message-ID: <62DA997B-5274-47AD-ABB2-66F0CFD0AF6A@getmoxied.net>

Hi all.

I have a search page with the ajax "load more" functionality for search results, and I wonder does anybody know how to filter search results with some certain tag or category:

what i'm trying to do: 

query_posts ('s="search_term"&tag="tag_name"'); but it doesnt return any results? Any thoughts on this? 

Thanks!

Dmitry
Moxie Media Group
getmoxied.net

From wordpress at dd32.id.au  Fri Jul 27 04:22:16 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Fri, 27 Jul 2012 14:22:16 +1000
Subject: [wp-hackers] Why no automatic database upgrade?
In-Reply-To: <5011642F.4060403@wordshell.net>
References: <mailman.9.1343304002.15118.wp-hackers@lists.automattic.com>
	<5011642F.4060403@wordshell.net>
Message-ID: <CAL4EHfmgvYF2uGGWvsWvpC3vm9Qit6-4OGT+Fmy_FA3qK4MpcQ@mail.gmail.com>

On 27 July 2012 01:37, David Anderson <david at wordshell.net> wrote:
>
> On 26/07/12 15:00, wp-hackers-request at lists.automattic.com wrote:
>>
>> It is actually done automatically for hte majority of users when they use
>> the built in Core Upgrader, It's only those who are using SVN or manually
>> updating who ever see the screen.
>
> Thanks... I'm a bit puzzled here - something must be malfunctioning. Before
> I started building WordShell I always used the built in Core Upgrader; but
> I've got to see the 'database upgrade required' screen quite often. This is
> across quite a variety of sites and servers. Is there any other reason why
> it might not take place automatically?

This could point to an issue in the WP_HTTP library, specifically,
that loopback connections from WordPress to WordPress are failing.
Does Cron fire correctly for you? (ie. do scheduled posts post?)

From almog.baku at gmail.com  Fri Jul 27 10:57:56 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Fri, 27 Jul 2012 13:57:56 +0300
Subject: [wp-hackers] Search results filtering
In-Reply-To: <62DA997B-5274-47AD-ABB2-66F0CFD0AF6A@getmoxied.net>
References: <62DA997B-5274-47AD-ABB2-66F0CFD0AF6A@getmoxied.net>
Message-ID: <CALncZpTt6LfU7SLsDzQFSZQP7zGbjF5-wEAwUOKiJCOsP4OP3A@mail.gmail.com>

you are not using the query post as excepted..
see http://codex.wordpress.org/Function_Reference/query_posts

On Fri, Jul 27, 2012 at 4:13 AM, Dmitry Tokmakov <dmitry at getmoxied.net>wrote:

> Hi all.
>
> I have a search page with the ajax "load more" functionality for search
> results, and I wonder does anybody know how to filter search results with
> some certain tag or category:
>
> what i'm trying to do:
>
> query_posts ('s="search_term"&tag="tag_name"'); but it doesnt return any
> results? Any thoughts on this?
>
> Thanks!
>
> Dmitry
> Moxie Media Group
> getmoxied.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jdub at bethesignal.org  Sat Jul 28 06:01:30 2012
From: jdub at bethesignal.org (Jeff Waugh)
Date: Sat, 28 Jul 2012 16:01:30 +1000
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
Message-ID: <CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>

On Wed, Jul 25, 2012 at 4:09 AM, Mike Schinkel <mike at newclarity.net> wrote:

> Page caching could use transients, and pages can be the result of
> composition of fragments.


These really are very separate things.

Page caching is too low level to bother about transients or fragments, and
you're always going to use transients or fragments in the higher level,
application logic context of a plugin or theme. That's where they make
sense.

You want to get in and out of advanced-cache.php as quickly as possible --
if at all. The call tree is tiny: wp-config.php -> wp-settings.php (very
few files loaded, actions taken prior to...) ->
wp-content/advanced-cache.php.

If the advanced-cache implementation in use wants to use the provided
object-cache implementation, rock and roll -- it can load it itself (as
wp-super-cache does).

Themes and plugins can already use transients or the object cache API to
cache fragments, while providing their own cache invalidation logic (or in
the case of transients, timeouts).

A fragment caching API in core would have to consider the many and varied
use cases for fragment caching *and* the many and varied strategies for
cache invalidation.

If you make a kickarse fragment caching API in the form of a plugin, and it
solves lots of problems and excites lots of developers, it may just make it
into core (along with, I would imagine, improvements to widget and theme
APIs to take advantage of it).

But there's no sense arguing hypotheticals without code. :-)

From mike at newclarity.net  Sat Jul 28 07:43:16 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sat, 28 Jul 2012 03:43:16 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
Message-ID: <BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>

On Jul 28, 2012, at 2:01 AM, Jeff Waugh wrote:
>> Page caching could use transients, and pages can be the result of
>> composition of fragments.
> 
> These really are very separate things.

Yes. As was stated...

> Page caching is too low level to bother about transients or fragments, and
> you're always going to use transients or fragments in the higher level,
> application logic context of a plugin or theme. That's where they make
> sense.

I disagree with that, and I don't see any evidence to the contrary.

> You want to get in and out of advanced-cache.php as quickly as possible --
> if at all. The call tree is tiny: wp-config.php -> wp-settings.php (very
> few files loaded, actions taken prior to...) ->
> wp-content/advanced-cache.php.

Agreed, with the operative phrase being "as possible."  As quickly as possible, but no quicker.  Such as when you need to compose a page from a cached page template merged with fragments.

BTW, Transients are but one potential metho of storing fragments. I mentioned it because it is an API that exists that other people have pointed to as a solution even though it actually can't be used in /wp-content/advanced-cache.php.  I'm simply saying "make it work in  /wp-content/advanced-cache.php." 

> If the advanced-cache implementation in use wants to use the provided
> object-cache implementation, rock and roll -- it can load it itself (as
> wp-super-cache does).

I just scanned the code in WP Super Cache and what you said is not true; WP Super Cache does not load the provided object-cache implementation, which is in /wp-includes/cache.php.  

Yes WP Super Cache's /wp-content/advanced-cache.php does call /wp-content/object-cache.php, but the latter is also a dropin so you are proposing to solve the problem I identified with a solution that has the same problematic attributes of the problem identified.   

> Themes and plugins can already use transients or the object cache API to
> cache fragments, while providing their own cache invalidation logic (or in
> the case of transients, timeouts).

Yes but that's irrelevant.  Themes and plugins can't use the existing Transients or object cache API in /wp-content/advanced-cache.php if there is any chance they won't be able to serve the content and thus must continue loading WordPress.  WordPress does a require(' /wp-includes/cache.php') after it calls /wp-content/advanced-cache.php so attempting to load them twice will result in an error. 

> A fragment caching API in core would have to consider the many and varied
> use cases for fragment caching *and* the many and varied strategies for
> cache invalidation.

No it wouldn't.  It would need only provide a useful implementation that covers 20% of the common patterns used 80% of the time, and then be hookable so that it can be extended for the many and varied use-cases for for fragment caching *and* the many and varied strategies for cache invalidation.

BTW, I've heard caching has too many variables but I've yet to see anyone give real world use-cases to demonstrate that there are actually too many methods and too varied of strategies.  It may be the case, but I've not seen any evidence to back up those claims.  Show me how it "can't" be done and I'll likely uncover the underly pattern that would enable it to be done.
 
> If you make a kickarse fragment caching API in the form of a plugin, and it
> solves lots of problems and excites lots of developers, it may just make it
> into core.

Can't write a kickarse fragment caching API in the form of a plugin.  See below as to why.

> But there's no sense arguing hypotheticals without code. :-)

Then why did you decide to argue it hypothetically?  And why the religion on this issue? Why get so charged up to defend core against caching yet ignore the specifics needed to enable code to be written?

I'll repeat a 3rd time the things I previously asked for on this thread  (which nobody has yet acknowledged, btw) so that a kickarse caching API *could* be implemented:

1.) Load the Transients API before advanced-cache.php is called[1]
2.) Enable multiple dropin files per type of dropin and enable hooks before advanced-cache.php[2]
3.) Address this fragment caching ticket[3] 

So can we focus on these issues instead of hypotheticals?

-Mike

[1] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043801.html
[2] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043772.html
[3] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043792.html







From lists at rotorised.com  Sat Jul 28 10:47:10 2012
From: lists at rotorised.com (Ryan McCue)
Date: Sat, 28 Jul 2012 20:47:10 +1000
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
Message-ID: <5013C32E.1030205@rotorised.com>

Mike Schinkel wrote:
> I just scanned the code in WP Super Cache and what you said is not true; WP Super Cache does not load the provided object-cache implementation, which is in /wp-includes/cache.php.  
> 
> Yes WP Super Cache's /wp-content/advanced-cache.php does call /wp-content/object-cache.php, but the latter is also a dropin so you are proposing to solve the problem I identified with a solution that has the same problematic attributes of the problem identified.   

And if there's not a dropin, then there's no need to use the object
cache at all. I'm not sure exactly what the issue with that is.

> I'll repeat a 3rd time the things I previously asked for on this thread  (which nobody has yet acknowledged, btw) so that a kickarse caching API *could* be implemented:
> 
> 1.) Load the Transients API before advanced-cache.php is called[1]
> 2.) Enable multiple dropin files per type of dropin and enable hooks before advanced-cache.php[2]

These are both chicken-and-egg problems. In order to use transients, we
need more of the WP core loaded, which is not possible at this stage.
So, we could then load the core, but that defeats the purpose of having
advanced-cache.php early (namely: to avoid having to load the core).

Ditto for enabling hooks before advanced-cache.php. This is more
lightweight in that it doesn't actually need anything loaded, so this
would be possible. On the other hand, it's still extra overhead that
most caching implementations won't need. (Keep in mind that they're
trying to exit() as soon as possible, so loading more things delays that.)

----

Mike, as the one who wants change, the onus is on you to prove why this
is a good idea, and to provide a patch. It seems that in this case, the
idea is linked rather heavily to the implementation, so an example
implementation of your aforementioned 3 issues would be nice, and would
probably serve to further the discussion (rather than keep it spinning
in circles as it currently appears to be).

-- 
Ryan McCue
<http://ryanmccue.info/>

From jdub at bethesignal.org  Sat Jul 28 11:18:18 2012
From: jdub at bethesignal.org (Jeff Waugh)
Date: Sat, 28 Jul 2012 21:18:18 +1000
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
Message-ID: <CAGAEFz+Y=+Ba2TQD+Bu1xT_1nrF+y0hpZNhLcE0pLNrGULqPDg@mail.gmail.com>

On Sat, Jul 28, 2012 at 5:43 PM, Mike Schinkel <mike at newclarity.net> wrote:

> > Page caching is too low level to bother about transients or fragments,
> and
> > you're always going to use transients or fragments in the higher level,
> > application logic context of a plugin or theme. That's where they make
> > sense.
>
> I disagree with that, and I don't see any evidence to the contrary.
>
> > You want to get in and out of advanced-cache.php as quickly as possible
> --
> > if at all. The call tree is tiny: wp-config.php -> wp-settings.php (very
> > few files loaded, actions taken prior to...) ->
> > wp-content/advanced-cache.php.
>
> Agreed, with the operative phrase being "as possible."  As quickly as
> possible, but no quicker.  Such as when you need to compose a page from a
>  cached page template merged with fragments.
>

I fully understand the use case you're describing, but that's not what
wp-content/advanced-cache.php is for. It is for complete page caching,
similar to what you might implement outside the application with a reverse
proxy cache. Although you take a performance hit for doing it within the
application, it gives you slightly more flexibility -- you can lean on more
of what the application knows. For instance, wp-super-cache can force a
page cache miss in certain circumstances where a reverse proxy cache might
not (due to lack of info or logic).

> If the advanced-cache implementation in use wants to use the provided
> > object-cache implementation, rock and roll -- it can load it itself (as
> > wp-super-cache does).
>
> I just scanned the code in WP Super Cache and what you said is not true;
> WP Super Cache does not load the provided object-cache implementation,
> which is in /wp-includes/cache.php.
>
> Yes WP Super Cache's /wp-content/advanced-cache.php does call
> /wp-content/object-cache.php, but the latter is also a dropin so you are
> proposing to solve the problem I identified with a solution that has the
> same problematic attributes of the problem identified.
>

A terminology issue: wp-includes/cache.php is for the most part an object
cache *interface* (the implementation of which is only relevant within a
single request), while wp-content/object-cache.php is an implementation.
wp-super-cache doesn't need the interface, it needs the implementation. So,
I do mean the user-provided (persistent) object cache implementation.

(Much of the confusion in this discussion is why I have a picture of
turtles in my WordPress performance presentations... "turtles all the way
down".)

> Themes and plugins can already use transients or the object cache API to
> > cache fragments, while providing their own cache invalidation logic (or
> in
> > the case of transients, timeouts).
>
> Yes but that's irrelevant.  Themes and plugins can't use the existing
> Transients or object cache API in /wp-content/advanced-cache.php if there
> is any chance they won't be able to serve the content and thus must
> continue loading WordPress.  WordPress does a require('
> /wp-includes/cache.php') after it calls /wp-content/advanced-cache.php so
> attempting to load them twice will result in an error.
>

Themes and plugins are (almost) entirely irrelevant at the early stage in
which wp-content/advanced-cache.php kicks in -- that's because it's there
for implementing page caching, which cares not for higher level nonsense
like... themes and plugins. :-)

> A fragment caching API in core would have to consider the many and varied
> > use cases for fragment caching *and* the many and varied strategies for
> > cache invalidation.
>
> No it wouldn't.  It would need only provide a useful implementation that
> covers 20% of the common patterns used 80% of the time, and then be
> hookable so that it can be extended for the many and varied use-cases for
> for fragment caching *and* the many and varied strategies for cache
> invalidation.
>

Dude, APIs are HARD. Caching is HARD. Cache invalidation is HARD. What
you've described in the above paragraph is basically what already exists
with the current transients and object caching APIs. You can build a sweet
fragment cache around those, right now!

BTW, I've heard caching has too many variables but I've yet to see anyone
> give real world use-cases to demonstrate that there are actually too many
> methods and too varied of strategies.  It may be the case, but I've not
> seen any evidence to back up those claims.  Show me how it "can't" be done
> and I'll likely uncover the underly pattern that would enable it to be done.
>

Practical use case for you to chew on: I have a widget that I'd like to
fragment cache, because building it takes a fair amount of time on each
request. It displays thumbnails of images from the 10 most popular posts on
the website, as determined by Google Analytics.

Note: Caching the fragment is "easy". Coming up with a sensible cache
invalidation strategy (that isn't "regenerate it again every five
minutes")... not so much.


> Then why did you decide to argue it hypothetically?  And why the religion
> on this issue? Why get so charged up to defend core against caching yet
> ignore the specifics needed to enable code to be written?
>

It's not religion. It's just difficult stuff that is best demonstrated
outside core before it's brought in.


> 1.) Load the Transients API before advanced-cache.php is called[1]
>

Transients are not useful in the context of (mostly application-logic-free)
full page caching. This might suggest a misunderstanding of page caching,
which hopefully I've explained above.


> 2.) Enable multiple dropin files per type of dropin and enable hooks
> before advanced-cache.php[2]
>

Explain why someone would want multiple implementations of page or object
caching, and what kind of logic would be used to choose between them.


> 3.) Address this fragment caching ticket[3]
>

I agree that a fragment caching API would be really cool [1]. But it can be
implemented and demonstrated long before it needs to be proposed for core
or accepted as the divine strategy of the project.

[1] In fact, if the API also allowed you to fetch fragments independently,
it'd be a really helpful way to make ESI easier. That's a pretty hard-core
niche interest, though. :-)

From mike at newclarity.net  Sat Jul 28 12:06:56 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sat, 28 Jul 2012 08:06:56 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <5013C32E.1030205@rotorised.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
	<5013C32E.1030205@rotorised.com>
Message-ID: <2511A967-647C-4B37-9340-C02C7C1C1090@newclarity.net>

On Jul 28, 2012, at 6:47 AM, Ryan McCue <lists at rotorised.com> wrote:
> And if there's not a dropin, then there's no need to use the object
> cache at all. I'm not sure exactly what the issue with that is.

You realize you've just made the argument circular? The proposal was to make dropins use hooks.  Re-read my numerous prior posts on this thread explaining, please.

>  In order to use transients, we
> need more of the WP core loaded, which is not possible at this stage.

It is absolutely possible, with a change in he order of loading.

All the arguments against caching on his thread seem to say "you can and should roll your own and WP already has everything needed built in" But when we point out that we need core support to roll our own we are told "Oh, you shouldn't use built in functionality because it's not appropriate." The logic of the arguments is becoming circular which tells me it's a mostly bias against caching that's driving these discussions.

> So, we could then load the core, but that defeats the purpose of having
> advanced-cache.php early (namely: to avoid having to load the core).

No it doesn't. "Core" is not a single monolithic component, it is many small files and what I'm suggesting would only be loading a couple functions, which is insignificant.

> Mike, as the one who wants change, the onus is on you to prove why this
> is a good idea, and to provide a patch. 


I've been planning to show code, but last week was a bad time to do it for many reasons (too many projects due at once, sick for several days,etc.). I hope to find time this weekend but I do have other code to finish that must come first.

My last post on the topic was a reply otherwise I would have waited until I had code to discuss again.

-Mike

From mike at newclarity.net  Sat Jul 28 13:07:52 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sat, 28 Jul 2012 09:07:52 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAGAEFz+Y=+Ba2TQD+Bu1xT_1nrF+y0hpZNhLcE0pLNrGULqPDg@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
	<CAGAEFz+Y=+Ba2TQD+Bu1xT_1nrF+y0hpZNhLcE0pLNrGULqPDg@mail.gmail.com>
Message-ID: <1C2C745F-8A6C-4AA5-8CAF-099BBAAD7276@newclarity.net>

On Jul 28, 2012, at 7:18 AM, Jeff Waugh wrote:
> I fully understand the use case you're describing, but that's not what
> wp-content/advanced-cache.php is for.

Where is it written on stone that there is an exact purpose for which advanced-cache.php is "for?"  I don't prescribe to the line of thought that something cannot be evolved to be used a certain way simply because someone said that is wasn't "for" that. If you ask 10 people what something is "for" you'll usually get at least 11 answers.

> A terminology issue: wp-includes/cache.php is for the most part an object
> cache *interface* (the implementation of which is only relevant within a
> single request), while wp-content/object-cache.php is an implementation.

Without an /wp-content/object-cache.php file, /wp-includes/cache.php *is* the implementation (WP_Object_Cache() is contained within.) 

I had proposed the need for /wp-includes/cache.php to be available when /wp-content/advanced-cache.php is loaded, it was your inclusion of /wp-content/object-cache.php that confused the terminology.

>> Themes and plugins can already use transients or the object cache API to
>>> cache fragments, while providing their own cache invalidation logic (or
>>> in the case of transients, timeouts).
>> 
>> Yes but that's irrelevant.  Themes and plugins can't use the existing
>> Transients or object cache API in /wp-content/advanced-cache.php if there
>> is any chance they won't be able to serve the content and thus must
>> continue loading WordPress.  WordPress does a require('
>> /wp-includes/cache.php') after it calls /wp-content/advanced-cache.php so
>> attempting to load them twice will result in an error.
> 
> Themes and plugins are (almost) entirely irrelevant at the early stage in
> which wp-content/advanced-cache.php kicks in -- that's because it's there
> for implementing page caching, which cares not for higher level nonsense
> like... themes and plugins. :-)

I agree themes and plugins are irrelevant at this stage, but it was you who mentioned first, not me.  I only mentioned them in reply to you.

> Dude, APIs are HARD. Caching is HARD. Cache invalidation is HARD. What
> you've described in the above paragraph is basically what already exists
> with the current transients and object caching APIs. 

Lots of things in life are hard. Doesn't mean they are not infinitely doable.

> Practical use case for you to chew on: I have a widget that I'd like to
> fragment cache, because building it takes a fair amount of time on each
> request. It displays thumbnails of images from the 10 most popular posts on
> the website, as determined by Google Analytics.
> 
> Note: Caching the fragment is "easy". Coming up with a sensible cache
> invalidation strategy (that isn't "regenerate it again every five
> minutes")... not so much.

What's currently missing in WordPress is a rigorous calculus for defining and evaluating page level criteria. WordPress has something basic for this, the internal query string, but it's never been fleshed out for use-cases other than routing. Development of a caching APIs could help flesh it out. The same thing could be used to specify on which pages a Widget should display, even without caching and there are other use cases we've identified in our shop that we'd like to use in our framework.

We've done some preliminary work on this for our needs, but we need to do more. And it would be even better if several of the people who work on core would get motivated to work on such a bit of infrastructure.

This is exactly the type of thing that is needed for caching; a standard method within WordPress to specific criteria for pages. We can either say: 1.) Caching is too hard, it can't be done, or 2.) If can be done and let's solve it. In general when #2 happens core improves by leaps and bounds, i.e. custom post types. When #1 happens, we get status quo.

> It's not religion. It's just difficult stuff that is best demonstrated
> outside core before it's brought in.

I completely agree with you here. But what I'm saying is that core currently doesn't allow us to fully demonstrate for the reasons already explained.  

I'm not asking for caching in 3.5, or even a caching API in 3.5.  I'm asking that we start going down the long path that might eventually get us there by 4.0 or later. But it won't even be possible to get there without fixing some existing limitations. That's my focus.

> Transients are not useful in the context of (mostly application-logic-free)
> full page caching. This might suggest a misunderstanding of page caching,
> which hopefully I've explained above.

We may have to agree to disagree on this.

> Explain why someone would want multiple implementations of page or object
> caching, and what kind of logic would be used to choose between them.

Here are at least two reasons:

1.)  Imagine different mime types being cached by different plugins.  Sized images which are generated on first use, Content Posts and Pages, Excel Files, etc.  Each has a different plugin that manages caching of the different files types.

2.) Consider using the hypothetical new "Decisions-not-Options Cache(tm)"[1] plugin, and it's setting's page has one control: On or Off.  This is basically what the core team preaches how it should be done[2].  Now imagine the DnO Cache plugin has lots of hooks that allows a plugin developer to make changes to it's behavior using actions and filters.  These hooks *could* be configured in secondary dropins, but only if multiple hook-based dropins were possible. Which currently they are not.  (Yes, the end user could be tasked to perform surgery on /wp-content/advanced-cache.php, but if you advocate that as the better solution I'd have to ask "Really?" and point you to [3] & [4])

> I agree that a fragment caching API would be really cool [1]. But it can be
> implemented and demonstrated...

Realistically, but not without improvements to core.

As I said to Ryan, I'm going to post some code as soon as I get some other projects wrapped. Then we can discuss again.

-Mike

From jdub at bethesignal.org  Sat Jul 28 13:42:58 2012
From: jdub at bethesignal.org (Jeff Waugh)
Date: Sat, 28 Jul 2012 23:42:58 +1000
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <1C2C745F-8A6C-4AA5-8CAF-099BBAAD7276@newclarity.net>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
	<CAGAEFz+Y=+Ba2TQD+Bu1xT_1nrF+y0hpZNhLcE0pLNrGULqPDg@mail.gmail.com>
	<1C2C745F-8A6C-4AA5-8CAF-099BBAAD7276@newclarity.net>
Message-ID: <CAGAEFzLfQs3y_q7rJFKv7G6kjuu7t2_t+POxXK=sEKjGmqFFWA@mail.gmail.com>

On Sat, Jul 28, 2012 at 11:07 PM, Mike Schinkel <mike at newclarity.net> wrote:

> Where is it written on stone that there is an exact purpose for which
> advanced-cache.php is "for?"
>

I invite you to describe a caching-related* use case for which
advanced-cache.php is useful that does not involve page caching.

* I specify caching-related here, only in order to exclude spectacularly
creative and/or incredibly hacky use cases.

> A terminology issue: wp-includes/cache.php is for the most part an object
> > cache *interface* (the implementation of which is only relevant within a
> > single request), while wp-content/object-cache.php is an implementation.
>
> Without an /wp-content/object-cache.php file, /wp-includes/cache.php *is*
> the implementation (WP_Object_Cache() is contained within.)
>

Which you'll see is noted above, with the important caveat: It's only
relevant within a single request.

I invite you to describe a use case for wp-includes/cache.php within the
context of wp-content/advanced-cache.php, noting that it is *not* an
implementation of a persistent object cache. You might have to describe why
using the wp_cache_* functions is preferable to... using variables. Hey, I
like to set a challenge.


> I completely agree with you here. But what I'm saying is that core
> currently doesn't allow us to fully demonstrate for the reasons already
> explained.
>

I'd like you to explain, in technical terms, why you can't build fragment
caching on top of the primitives currently provided by WordPress core. I
don't think this has been "already explained" at all.

Summary:

- advanced-cache.php is, in practice, designed for page caching. You will
only ever want one of those, so a drop-in is fine. It even says so in
wp-settings.php: "For an advanced caching plugin to use. Uses a static
drop-in because you would only want one."

- a persistent object cache implementation will backend the wp_cache_* and
*_transient APIs (which are aggressively used throughout the WordPress code
base), both of which can be used to implement all kinds of caching
strategies at the plugin and theme level (including fragment caching).
There are *possibly* some reasons to consider using multiple persistent
object cache backends, but probably only for layering (request state => APC
=> memcache).

From mike at newclarity.net  Sat Jul 28 21:42:53 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sat, 28 Jul 2012 17:42:53 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAGAEFzLfQs3y_q7rJFKv7G6kjuu7t2_t+POxXK=sEKjGmqFFWA@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
	<CAGAEFz+Y=+Ba2TQD+Bu1xT_1nrF+y0hpZNhLcE0pLNrGULqPDg@mail.gmail.com>
	<1C2C745F-8A6C-4AA5-8CAF-099BBAAD7276@newclarity.net>
	<CAGAEFzLfQs3y_q7rJFKv7G6kjuu7t2_t+POxXK=sEKjGmqFFWA@mail.gmail.com>
Message-ID: <D86EA01C-F998-4DCB-929C-864F5298B4D5@newclarity.net>

On Jul 28, 2012, at 9:42 AM, Jeff Waugh wrote:
> I invite you to describe a caching-related* use case for which
> advanced-cache.php is useful that does not involve page caching.

Please re-read my posts on this thread; all my discussions related to advanced-cache.php have been discussing *page* caching, with 

> Which you'll see is noted above, with the important caveat: It's only
> relevant within a single request.
> 
> I invite you to describe a use case for wp-includes/cache.php within the
> context of wp-content/advanced-cache.php, noting that it is *not* an
> implementation of a persistent object cache. You might have to describe why
> using the wp_cache_* functions is preferable to... using variables. Hey, I
> like to set a challenge.

Again, please re-read my posts on this thread; my only reason for mentioning the persistent object cache related to page caching and fragment substitution is because the object cache is a dependency for Transients, which operates *across* pages.

> I'd like you to explain, in technical terms, why you can't build fragment
> caching on top of the primitives currently provided by WordPress core. I
> don't think this has been "already explained" at all.

It seems like maybe you dove in to debate this topic but failed to read the entire thread so you don't appear to understand the context or at least what I've previously said?  You haven't read the entire thread, right?

The problems are *not* that it *cannot* be done but instead that the core could improved for caching concerns:

1.) Currently you can have only one caching plugin to access advanced-cache so an end-user can't compose caching functionality from multiple plugins. That limitation is one of the reason caching continues to be a "must be custom for each site" endeavor. We should enable multiple plugins could each add a dropin of the same category which requires the order of code loading in /wp-settings.php needs to be changed to support hooks in dropins and for dropins to change slightly.

2.) It's currently not possible to capture fragments generically at the lowest level, so add the hooks to better enable fragment capturing.

3.) With Transients and hooks available in advanced-cache.php we could explore the creation of a simple page caching plugin with fragment substitution, i.e. we could write code.  This potential plugin could potentially be used by with very little configuration and hopefully no requirement to fiddle with the server at a technical level. It wouldn't give the best performance, but perfection isn't always needed. And more importantly it could be an exploration of a potential "core plugin" for caching, one that could establish some basic patterns and one that could support the creation of improved caching APIs.  But without Transients being able to be loading in /wp-settings.php nobody explore that without duplicating the equivalent of Transients.

I do understand caching is hard and APIs are hard, we are not discussing a complete new caching APIs for 3.5. Instead let's explore the impediments to a caching API. Like #1-#3 above.

Or a simpler way to say it is: You don't have to defend core against an abstract concept of caching. There's no urgency here. Abstract concepts will never make it into core. Focus on details, and please be open to others being able to good workable coded solutions you hadn't previously envisioned.

> - advanced-cache.php is, in practice, designed for page caching.

I've not said or implied otherwise.

> You will only ever want one of those, so a drop-in is fine.

Dropins are not fine, only one plugin can effectively control advanced-cache.php.

> It even says so in
> wp-settings.php: "For an advanced caching plugin to use. Uses a static
> drop-in because you would only want one."

Your quoting that in a debate ignores that a human wrote that comment, and humans are known to be short-sighted, unaware of other contexts, and often just plain wrong.  In this case I believe they were just being short-sighted.

> - a persistent object cache implementation will backend the wp_cache_* and
> *_transient APIs (which are aggressively used throughout the WordPress code
> base), both of which can be used to implement all kinds of caching
> strategies at the plugin and theme level (including fragment caching).

Now that statement generates the height of frustration for me. Much of this thread has been me saying we need access to Transients in advanced-cache.php.  Please do me the courtesy of reading this entire thread before your next reply.

-Mike



From jdub at bethesignal.org  Sun Jul 29 00:00:49 2012
From: jdub at bethesignal.org (Jeff Waugh)
Date: Sun, 29 Jul 2012 10:00:49 +1000
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <D86EA01C-F998-4DCB-929C-864F5298B4D5@newclarity.net>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
	<CAGAEFz+Y=+Ba2TQD+Bu1xT_1nrF+y0hpZNhLcE0pLNrGULqPDg@mail.gmail.com>
	<1C2C745F-8A6C-4AA5-8CAF-099BBAAD7276@newclarity.net>
	<CAGAEFzLfQs3y_q7rJFKv7G6kjuu7t2_t+POxXK=sEKjGmqFFWA@mail.gmail.com>
	<D86EA01C-F998-4DCB-929C-864F5298B4D5@newclarity.net>
Message-ID: <CAGAEFzLbdtXLrJnHCmscbcq85Qja9WSaTMq3gd_qAJyDxdg61Q@mail.gmail.com>

On Sun, Jul 29, 2012 at 7:42 AM, Mike Schinkel <mike at newclarity.net> wrote:

> Now that statement generates the height of frustration for me. Much of
> this thread has been me saying we need access to Transients in
> advanced-cache.php.  Please do me the courtesy of reading this entire
> thread before your next reply.


I have read the entire thread. Your replies continue to suggest that you
don't understand what advanced-cache.php is for, or how it's used.

There are two things you'd do in an implementation of advanced-cache.php
(excluding dirty, dirty hacks):

1) Determine whether a request can be fulfilled by your cache*, at which
point you serve content from the cache and die() before the rest of the
WordPress code is loaded and executed. advanced-cache.php is included early
so you can get in and out as fast as possible. Ideally, you wouldn't even
hit PHP or WordPress to serve items out of the cache (cf. wp-super-cache's
"mod_rewrite" method, i.e. writing out files the web server can serve
directly instead).

2) Determine whether the request is cacheable, at which point you set up an
output buffer handler to save the entire page into your cache once the rest
of the WordPress code is loaded and executed.

I hope this makes it obvious why transients (and similar higher level
caching mechanisms) simply aren't relevant when it comes to page caching.
You either want the entire WordPress process to run, giving you a complete
page to cache, or none at all, because you've serviced the request from
your cache.

If you want an advanced-cache.php implementation that allows you to choose
the storage backend, then you can choose wp-super-cache with its
experimental support for storage using a given object-cache.php
implementation (i.e. APC or memcache) or W3TC which can store in files,
APC, memcache, etc.

* A caching mechanism defined entirely by your advanced-cache.php
implementation, which might back on to files (ew!), the database (ew!), a
key/value store (such as APC or memcache), etc.

...

That said, what would change if we *had* to have transients before
advanced-cache.php?

We'd load WPINC/functions.php (or WPINC/option.php, which is loaded at the
top of functions.php anyway) ahead of advanced-cache.php. We can leave
WPINC/compat.php for later, because neither functions.php or option.php
require it in WordPress 3.4.1. Let's stick to option.php for the time being.

https://raw.github.com/gist/28bad92a34f291f411da/1971ae139bb458812c2373d44a87264fbc9fc3f3/wp-settings.php.01.diff

To be tidy, we'd remove the same include from the top of functions.php.

Now we can call get_transient from advanced-cache.php, right? Not so fast:
get_transient calls apply_filters, which is defined in WPINC/plugin.php,
which is loaded a bit later in wp-settings.php. Alrighty, let's load it
earlier:

https://raw.github.com/gist/28bad92a34f291f411da/715e7eb7833fde1296e22dd7ce6d931480c25cc7/wp-settings.php.02.diff

Uh oh, get_transient calls wp_load_alloptions, which calls wp_cache_get,
which is not defined until wp-settings.php calls wp_start_object_cache().
Let's do that early too!

https://gist.github.com/raw/28bad92a34f291f411da/682916187c5e5f06aa0d502824e3db19f98421b8/wp-settings.php.03.diff

By the way, here's my cheesy advanced-cache.php implementation, to make
sure we can at least run get/set_transient (otherwise, all this malarkey is
massively untested):

https://gist.github.com/raw/28bad92a34f291f411da/05b8be30505b228883fe2d3a5ecc164f36f1eca2/advanced-cache.php

So what do we get for our efforts? Note that only two (okay, at least
three) of these functions are tested:

$ grep ^function wp-includes/option.php
function get_option( $option, $default = false ) {
function wp_protect_special_option( $option ) {
function form_option( $option ) {
function wp_load_alloptions() {
function wp_load_core_site_options( $site_id = null ) {
function update_option( $option, $newvalue ) {
function add_option( $option, $value = '', $deprecated = '', $autoload =
'yes' ) {
function delete_option( $option ) {
function delete_transient( $transient ) {
function get_transient( $transient ) {
function set_transient( $transient, $value, $expiration = 0 ) {
function wp_user_settings() {
function get_user_setting( $name, $default = false ) {
function set_user_setting( $name, $value ) {
function delete_user_setting( $names ) {
function get_all_user_settings() {
function wp_set_all_user_settings($all) {
function delete_all_user_settings() {
function get_site_option( $option, $default = false, $use_cache = true ) {
function add_site_option( $option, $value ) {
function delete_site_option( $option ) {
function update_site_option( $option, $value ) {
function delete_site_transient( $transient ) {
function get_site_transient( $transient ) {
function set_site_transient( $transient, $value, $expiration = 0 ) {

Some of those might be useful to caching logic. Maybe.

And what did we spend?

Luckily, the additional files we loaded early did not also load more code
themselves:

https://gist.github.com/raw/28bad92a34f291f411da/ad2f1ea51772fcdcbfe9cb0a08e9f0a97bb0421d/no-further-includes.txt

However, that's at least an additional 2000 lines of code (we only include
one of the cache implementations, one of which is non-persistent and
therefore pretty useless) before we hit advanced-cache.php, which is more
PHP work to be done before advanced-cache.php has an opportunity to spit
out something from its cache and die().

$ wc -l wp-includes/option.php wp-includes/plugin.php wp-includes/cache.php
wp-content/object-cache.php
  1046 wp-includes/option.php
  784 wp-includes/plugin.php
  566 wp-includes/cache.php
  358 wp-content/object-cache.php
 2754 total

By comparison, here's what wp-super-cache loads:

https://gist.github.com/raw/28bad92a34f291f411da/9aca81eaf36c99e51c2f4af26706d9e808acda69/wp-super-cache-includes.txt

Practically nothing from core. All of that code is 100% focused on the task
at hand.

...

So, I guess I have to ask the question again: For what purpose do you think
you're going to use transients in the context of advanced-cache.php?

The correct answer has two parts:

1) To make the decision whether or not you have a cached page, or can serve
it for the current request, transients are unlikely to be useful. Certainly
not any more useful than directly using whatever persistent object cache
implementation you've got to hand (as wp-super-cache does, experimentally).

2) If you haven't serviced the request from the cache, then you're going to
load all of WordPress anyway, so loading transients support early was a
complete waste of time (not to mention the semi-invasive changes to core).

There you go. Evidence. Data. *jazzhands*

From bpetty at bluehost.com  Sun Jul 29 01:16:42 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Sat, 28 Jul 2012 19:16:42 -0600
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAGAEFzLfQs3y_q7rJFKv7G6kjuu7t2_t+POxXK=sEKjGmqFFWA@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
	<CAGAEFz+Y=+Ba2TQD+Bu1xT_1nrF+y0hpZNhLcE0pLNrGULqPDg@mail.gmail.com>
	<1C2C745F-8A6C-4AA5-8CAF-099BBAAD7276@newclarity.net>
	<CAGAEFzLfQs3y_q7rJFKv7G6kjuu7t2_t+POxXK=sEKjGmqFFWA@mail.gmail.com>
Message-ID: <50148EFA.5040909@bluehost.com>

On 07/28/2012 07:42 AM, Jeff Waugh wrote:
> I invite you to describe a caching-related* use case for which
> advanced-cache.php is useful that does not involve page caching.

It doesn't have to be non-page-caching-related. You could have multiple
uniquely different page caching systems that you need to use together.

What if you want to use one of the popular page caching plugins to
handle all your standard pages in the template hierarchy, but you also
need to provide another page caching system that handles pages served
through your own plugins?

One single page caching plugin/dropin can't even come close to
predicting how every plugin installed on your site should be cached, and
there's tons of plugins that provide custom pages that could (and
probably should) be cached.

But, that all falls under the topic of some new API that allows multiple
page caching systems to handle requests, and I really don't care about
that right now. I still feel like there's a deeper issue that needs
resolved first...

>> I completely agree with you here. But what I'm saying is that core
>> currently doesn't allow us to fully demonstrate for the reasons already
>> explained.
> 
> I'd like you to explain, in technical terms, why you can't build fragment
> caching on top of the primitives currently provided by WordPress core. I
> don't think this has been "already explained" at all.

This is where we're going in circles. This has been explained at least 3
times now, but whatever, let's try it again...

It's because fragment caching systems (and full page caching systems)
absolutely require a persistent object cache, otherwise, there would be
no reason to install them because there would be no benefit. The only
thing available in core that does this is by abusing the transient API
to do something it wasn't built for currently, which (as also pointed
out several times now) is fairly inefficient and inappropriate for this.
Again, we're back to plugging in your own object-cache.php (or requiring
the installation of another persistent object cache plugin) to implement
this in a plugin who's primary goal is page caching, not object
caching... all of the page caching plugins out there do this currently.

When every plugin of a fairly generic type (in this case, page caching)
requires the installation of the same plugins (APC/memcache), that gives
off a "smell" like the core WP API is lacking adequate support for
something it should already have. What's worse about this is that
WordPress already has an object cache, but it sucks, so everyone plugs
in a replacement, and the only reason *all* of them do it is because it
isn't persistent. That's something we can fix.

Martin Fowler would have a field day with this.

The rest of this is for everyone (not just Jeff)...

This is a mailing list to discuss possible improvements to *core*
WordPress. Mike and I obviously already know that we can install any
number of plugins and dropins (and write our own) to accomplish what we
need to here, but all we're trying to do is discuss how the current
*core* API could be improved to make this easier, more flexible, less
error prone, more efficient, and require less work on everyone's part
overall (for plugin authors and users).

I am disturbed at how condescending everyone here has been with both of
our comments because I keep reading the same thing over and over again:
"Just write a plugin/dropin." And in doing so, everyone has been
ignoring all of the problems being pointed out, and also ignoring all of
our suggestions for real improvements to *existing* core components.
It's not perfect, far from it in fact.

Neither of us are here for "support". We know what is possible here, and
how to hack the current version of WordPress to do this already.

I would encourage all of you to step back and go through our posts
keeping that in mind. Maybe we could actually get some productive
discussion going.

At least Mike and I have been able to identify a couple of the same
problems with some consensus on possible solutions even though we both
have very different goals in mind.

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com

From jdub at bethesignal.org  Sun Jul 29 02:38:22 2012
From: jdub at bethesignal.org (Jeff Waugh)
Date: Sun, 29 Jul 2012 12:38:22 +1000
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <50148EFA.5040909@bluehost.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
	<CAGAEFz+Y=+Ba2TQD+Bu1xT_1nrF+y0hpZNhLcE0pLNrGULqPDg@mail.gmail.com>
	<1C2C745F-8A6C-4AA5-8CAF-099BBAAD7276@newclarity.net>
	<CAGAEFzLfQs3y_q7rJFKv7G6kjuu7t2_t+POxXK=sEKjGmqFFWA@mail.gmail.com>
	<50148EFA.5040909@bluehost.com>
Message-ID: <CAGAEFz+tLq7H3L4hDfMQSu3Asu6+wBH2gHFnqn6bwa5WkbZsTw@mail.gmail.com>

On Sun, Jul 29, 2012 at 11:16 AM, Bryan Petty <bpetty at bluehost.com> wrote:

> When every plugin of a fairly generic type (in this case, page caching)
> requires the installation of the same plugins (APC/memcache), that gives
> off a "smell" like the core WP API is lacking adequate support for
> something it should already have.
>

Not every page caching plugin needs wp-content/object-cache.php, but it's a
handy way to share code. Particularly if it's as well-written and
widely-trusted as the Memcache and APC drop-ins.

Batcache requires a persistent object cache implementation (:161-166). It
once used memcache directly.

WP Super Cache will load a persistent object cache implementation and
optionally use it (experimental feature according to the admin pages).

W3 Total Cache, being... special... does its own thing, has multiple
backends, etc.

This doesn't seem like a bad state of affairs to me. Surely before you
adopt application-level page caching, you're going to use a persistent
object cache, and you'll configure your system to use it appropriately.
Then, should you choose a page cache designed for key/val style storage,
it'll automagically use the implementation you've chosen. No more
integration to do, benefit of shared code, etc.


> What's worse about this is that WordPress already has an object cache, but
> it sucks, so everyone plugs in a replacement, and the only reason *all* of
> them do it is because it isn't persistent. That's something we can fix.
>

It's not that it sucks -- in fact, it does jolly good work, despite being
restricted to a single request -- it's that many WordPress users won't be
able to use a persistent object cache implementation at all. Those who
*can* use one will need to choose an implementation appropriate to their
deployment. Just one.

Please don't think I'm pooh-poohing the entire discussion -- I'm loosely of
the opinion that it would be nice if WordPress core did more for users when
it comes to caching. But that applies mostly to nicely integrated fragment
caching, rather than many of the things mentioned in this thread.

Walking through the core code, and the common caching-related plugins, only
reaffirms my support for the current approach. It turns out that clever
people have had quite a bit of time and paid attention to make good
decisions about this stuff. :-)

From mike at newclarity.net  Sun Jul 29 04:44:28 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sun, 29 Jul 2012 00:44:28 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAGAEFzLbdtXLrJnHCmscbcq85Qja9WSaTMq3gd_qAJyDxdg61Q@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
	<CAGAEFz+Y=+Ba2TQD+Bu1xT_1nrF+y0hpZNhLcE0pLNrGULqPDg@mail.gmail.com>
	<1C2C745F-8A6C-4AA5-8CAF-099BBAAD7276@newclarity.net>
	<CAGAEFzLfQs3y_q7rJFKv7G6kjuu7t2_t+POxXK=sEKjGmqFFWA@mail.gmail.com>
	<D86EA01C-F998-4DCB-929C-864F5298B4D5@newclarity.net>
	<CAGAEFzLbdtXLrJnHCmscbcq85Qja9WSaTMq3gd_qAJyDxdg61Q@mail.gmail.com>
Message-ID: <8C95D84F-D909-49A9-8E4A-48AFECD44E9C@newclarity.net>

On Jul 28, 2012, at 8:00 PM, Jeff Waugh wrote:
> I have read the entire thread. Your replies continue to suggest that you
> don't understand what advanced-cache.php is for, or how it's used.

Maybe, but it doesn't seem to be the case based on your choice of aspects to debate. And this discussion has become perverted and doesn't resemble how it started. 

It was started by someone who asked for caching in the core[1] to which he received a shit-storm of replies[2,3, 4 & more] that effectively told him he was stupid for asking.  Someone else suggested that a cache API was need and to enhance the use of transients[5]. I latched onto that and called for a focus on a cache API in core vs. caching in the core, per se[6], I made a comment that Transients could *potentially* be used for persistent storage, and I later proposed hookable dropins[8].  Since then, the discussion has devolved significantly to where it is now.

[1] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043701.html
[2] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043703.html
[3] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043738.html
[4] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043729.html
[5] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043707.html
[6] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043720.html
[7] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043801.html
[8] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043772.html

> I hope this makes it obvious why transients (and similar higher level
> caching mechanisms) simply aren't relevant when it comes to page caching.

After my last message and before going to sleep I implemented the code to support hookable dropins and created a trac ticket:

http://core.trac.wordpress.org/ticket/21412

This IMO works extremely well.  It's very lightweight and as far as I can tell would have no nasty side-effects.

I also tried to make Transients work and discovered that, as you say in your reply, they bring in too much baggage.   So part of the minor premise from my posts listed above failed, which is that Transients could be reused for page fragment caching at the point advanced-cache.php is loaded.  I was wrong, but that wasn't the major premise.

But the major premise is that we need a (set of) caching API(s) in core, and changes to enable it.  The hookable dropins ticket is one such change, and the fact that Transients don't work better validates that a purpose built API is needed for caching. I think one of the next steps is deterministic method of identifying fragments which I'll call a "fragment query" to compare it to the query used by WP_Query.

But I don't have time to work on this now.  I have other things I've like to work on in hopes of contributing to 3.5.

> There you go. Evidence. Data. *jazzhands*

> Walking through the core code, and the common caching-related plugins, only
> reaffirms my support for the current approach. It turns out that clever
> people have had quite a bit of time and paid attention to make good
> decisions about this stuff. :-)

One final question.  What's your dog in this hunt?  

Both Bryan and I are advocating for a change, hence our reason to debate on the list. On your side you are effectively saying both of us don't get it.  If we are really wrong then nothing is going to change in WordPress from our discussions.  

So why spend time debating us? Why spend part of your days where you could be doing something else but instead come here and tell us how wrong we are? If you are right, nothing will come of our comments here on the list even if you didn't debate us, right? Does duty call?

-Mike 


From mike at newclarity.net  Sun Jul 29 04:47:53 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sun, 29 Jul 2012 00:47:53 -0400
Subject: [wp-hackers] Hookable Dropins (was Caching as part of the core)
Message-ID: <19C02342-25BD-470D-A6DD-94D268EF5838@newclarity.net>

In case you are interested but haven't been following the debate I wanted to mention that I've added the trac ticket to propose Hookable dropins as I previously mentioned I would[1]. The trac ticket is here:

http://core.trac.wordpress.org/ticket/21412

-Mike
[1] http://lists.automattic.com/pipermail/wp-hackers/2012-July/043772.html


From jdub at bethesignal.org  Sun Jul 29 05:56:46 2012
From: jdub at bethesignal.org (Jeff Waugh)
Date: Sun, 29 Jul 2012 15:56:46 +1000
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <8C95D84F-D909-49A9-8E4A-48AFECD44E9C@newclarity.net>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
	<CAGAEFz+Y=+Ba2TQD+Bu1xT_1nrF+y0hpZNhLcE0pLNrGULqPDg@mail.gmail.com>
	<1C2C745F-8A6C-4AA5-8CAF-099BBAAD7276@newclarity.net>
	<CAGAEFzLfQs3y_q7rJFKv7G6kjuu7t2_t+POxXK=sEKjGmqFFWA@mail.gmail.com>
	<D86EA01C-F998-4DCB-929C-864F5298B4D5@newclarity.net>
	<CAGAEFzLbdtXLrJnHCmscbcq85Qja9WSaTMq3gd_qAJyDxdg61Q@mail.gmail.com>
	<8C95D84F-D909-49A9-8E4A-48AFECD44E9C@newclarity.net>
Message-ID: <CAGAEFzKAyQxXNWzjQCiM=Th=qd3HANiBYTYoSX=h3V7g9C1b1g@mail.gmail.com>

On Sun, Jul 29, 2012 at 2:44 PM, Mike Schinkel <mike at newclarity.net> wrote:

> I also tried to make Transients work and discovered that, as you say in
> your reply, they bring in too much baggage.   So part of the minor premise
> from my posts listed above failed, which is that Transients could be reused
> for page fragment caching at the point advanced-cache.php is loaded.  I was
> wrong, but that wasn't the major premise.
>

Not just because there's too much to load, but because "page caching" and
"fragment caching" are two utterly different things, and you can't suddenly
make them relevant to each other by saying "page fragment caching",
especially not in the context of advanced-cache.php. Ne'er the twain shall
meet, etc.

I've said it before, but I'll say it again, because you keep missing the
point: Fragment caching is useful way up high in the application stack,
with plugins and themes. There is no fragment caching when you're working
at the level of page-or-no-page (i.e. advanced-cache.php). It's just not
relevant or useful. Sure, you could do some dirty tricks to pull apart the
page at the end of your output buffer handler, without any
application-level context besides the raw HTML, but... whaaaaat?


> One final question.  What's your dog in this hunt?


I know a fair bit about WordPress performance, and I don't like it when
someone is wrong on the Internet. Repeatedly. Where others might read it.

http://xkcd.com/386/

From aero.maxx.d at gmail.com  Sun Jul 29 08:10:55 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Sun, 29 Jul 2012 09:10:55 +0100
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
Message-ID: <5014F00F.5020306@gmail.com>

Hello All,

I have had wordpress installed on a local development machine running 
fedora for several years now but for some reason just recently when I go 
to www.domain.dev the url changes to www.domain.dev/wp-admin/install.php

The contents of the page show what I expected it to show, so the content 
is correct just the url changes as above and for the life of me I have 
been unable to debug as to why.

I have tried installing it into a folder /wordpress as per the codex it 
still does it, have tried changing the tables from InnoDB to MyISAM as 
InnoDB is the new default on the mysql server version i'm using.

When I upload the same files to the live site they work fine no url 
changing funny business going on so it is something thats local to that 
machine, but what on earth could be causing this issue any ideas ?

Where is the code in the wordpress files that check and cause this type 
of redirect so i can debug this further and fix whats causing the issue.

Any help would be greatly appreciated, thank you!

Daniel.

From almog.baku at gmail.com  Sun Jul 29 08:14:10 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Sun, 29 Jul 2012 11:14:10 +0300
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <5014F00F.5020306@gmail.com>
References: <5014F00F.5020306@gmail.com>
Message-ID: <CALncZpSFMfGikoXgeTG_ScUd+fnN+GKSA8ye5c430wM9dtA90g@mail.gmail.com>

You may try to check your htaccess files:
/.htaccess
/wp-admin/.htaccess

?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:

> Hello All,
>
> I have had wordpress installed on a local development machine running
> fedora for several years now but for some reason just recently when I go to
> www.domain.dev the url changes to www.domain.dev/wp-admin/**install.php
>
> The contents of the page show what I expected it to show, so the content
> is correct just the url changes as above and for the life of me I have been
> unable to debug as to why.
>
> I have tried installing it into a folder /wordpress as per the codex it
> still does it, have tried changing the tables from InnoDB to MyISAM as
> InnoDB is the new default on the mysql server version i'm using.
>
> When I upload the same files to the live site they work fine no url
> changing funny business going on so it is something thats local to that
> machine, but what on earth could be causing this issue any ideas ?
>
> Where is the code in the wordpress files that check and cause this type of
> redirect so i can debug this further and fix whats causing the issue.
>
> Any help would be greatly appreciated, thank you!
>
> Daniel.
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From aero.maxx.d at gmail.com  Sun Jul 29 08:16:48 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Sun, 29 Jul 2012 09:16:48 +0100
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <CALncZpSFMfGikoXgeTG_ScUd+fnN+GKSA8ye5c430wM9dtA90g@mail.gmail.com>
References: <5014F00F.5020306@gmail.com>
	<CALncZpSFMfGikoXgeTG_ScUd+fnN+GKSA8ye5c430wM9dtA90g@mail.gmail.com>
Message-ID: <5014F170.8000308@gmail.com>

I have done there fine, I cant see anything majorly wrong with them.

I have even deleted the whole database and all the files in the root, 
and copied all files from the zip to the root done the wpconfig again, 
and basically started again from scratch with a fresh install and it 
still does it.

On 29/07/2012 09:14, Almog Baku wrote:
> You may try to check your htaccess files:
> /.htaccess
> /wp-admin/.htaccess
>
> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>
>> Hello All,
>>
>> I have had wordpress installed on a local development machine running
>> fedora for several years now but for some reason just recently when I go to
>> www.domain.dev the url changes to www.domain.dev/wp-admin/**install.php
>>
>> The contents of the page show what I expected it to show, so the content
>> is correct just the url changes as above and for the life of me I have been
>> unable to debug as to why.
>>
>> I have tried installing it into a folder /wordpress as per the codex it
>> still does it, have tried changing the tables from InnoDB to MyISAM as
>> InnoDB is the new default on the mysql server version i'm using.
>>
>> When I upload the same files to the live site they work fine no url
>> changing funny business going on so it is something thats local to that
>> machine, but what on earth could be causing this issue any ideas ?
>>
>> Where is the code in the wordpress files that check and cause this type of
>> redirect so i can debug this further and fix whats causing the issue.
>>
>> Any help would be greatly appreciated, thank you!
>>
>> Daniel.
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From bpetty at bluehost.com  Sun Jul 29 08:19:38 2012
From: bpetty at bluehost.com (Bryan Petty)
Date: Sun, 29 Jul 2012 02:19:38 -0600
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAGAEFz+tLq7H3L4hDfMQSu3Asu6+wBH2gHFnqn6bwa5WkbZsTw@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
	<CAGAEFz+Y=+Ba2TQD+Bu1xT_1nrF+y0hpZNhLcE0pLNrGULqPDg@mail.gmail.com>
	<1C2C745F-8A6C-4AA5-8CAF-099BBAAD7276@newclarity.net>
	<CAGAEFzLfQs3y_q7rJFKv7G6kjuu7t2_t+POxXK=sEKjGmqFFWA@mail.gmail.com>
	<50148EFA.5040909@bluehost.com>
	<CAGAEFz+tLq7H3L4hDfMQSu3Asu6+wBH2gHFnqn6bwa5WkbZsTw@mail.gmai
	l.com>
Message-ID: <5014F21A.5060709@bluehost.com>

On 07/28/2012 08:38 PM, Jeff Waugh wrote:
> On Sun, Jul 29, 2012 at 11:16 AM, Bryan Petty <bpetty at bluehost.com> wrote:
> 
>> When every plugin of a fairly generic type (in this case, page caching)
>> requires the installation of the same plugins (APC/memcache), that gives
>> off a "smell" like the core WP API is lacking adequate support for
>> something it should already have.
>>
> 
> Not every page caching plugin needs wp-content/object-cache.php, but it's a
> handy way to share code. Particularly if it's as well-written and
> widely-trusted as the Memcache and APC drop-ins.
> 
> Batcache requires a persistent object cache implementation (:161-166). It
> once used memcache directly.
> 
> WP Super Cache will load a persistent object cache implementation and
> optionally use it (experimental feature according to the admin pages).
> 
> W3 Total Cache, being... special... does its own thing, has multiple
> backends, etc.
> 
> This doesn't seem like a bad state of affairs to me.

Really? You don't think it's bad that just among the plugins named here,
there's 2 file backends, 2 APC backends, 2 memcache backends, and 3
other backends already?

Let's add a few more and see where the totals are at:
- Fast Full Page Cache (apc, memcache, memcached)
- Tribe Object Cache (apc, memcache, wincache, xcache)
- FlexiCache (memcache, db, file)
- Cachify (apc, db, file)
- WP Widget Cache (file)
- WP Green Cache (file)
And for good measure, the rest of the object cache only plugins:
- Memcached Redux
- WinCache Object Cache Backend
- XCache Object Cache Backend
- WP File Cache
- DB Cache Reloaded (and a forked plugin just as popular)

Totals:
- memcache(d): 7 (or 8 if you count Batcache's old one)
- apc: 5
- file: 7
- db: 4 (or 5 if you count transients)
- wincache: 3
- xcache: 3
- eaccelerator: 1

So I count a grand total of over 30 unique object cache backends just in
the plugins I can find in the directory, and they still only cover
exactly 7 unique storage methods (or 8 if you identify memcache from
memcached).

I wouldn't call that sharing. Batcache is the only page caching plugin
that doesn't include it's own additional backends.

> Surely before you
> adopt application-level page caching, you're going to use a persistent
> object cache, and you'll configure your system to use it appropriately.
> Then, should you choose a page cache designed for key/val style storage,
> it'll automagically use the implementation you've chosen. No more
> integration to do, benefit of shared code, etc.

This is exactly what I'm pushing for. The only difference is that these
persistent cache backends are actually built into WP core, so in
addition to everything you mention here, every admin knows that there's
always one guaranteed way to configure it (and in most cases, they won't
have to because it can be auto-detected and auto-configured for them),
and everyone truly actually shares the same code that implements every
backend (if they want to anyway, they still wouldn't be forced to just
like they aren't now).

-- 
Bryan Petty
WordPress Developer
bpetty at bluehost.com

From danielx386 at gmail.com  Sun Jul 29 08:21:27 2012
From: danielx386 at gmail.com (Daniel Fenn)
Date: Sun, 29 Jul 2012 18:21:27 +1000
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <5014F170.8000308@gmail.com>
References: <5014F00F.5020306@gmail.com>
	<CALncZpSFMfGikoXgeTG_ScUd+fnN+GKSA8ye5c430wM9dtA90g@mail.gmail.com>
	<5014F170.8000308@gmail.com>
Message-ID: <CAJ5Hi2ghyFpszPf_70kFQWrnx-mpiwYewFzM37r457XXbEhUqA@mail.gmail.com>

Is there anything in your wp-config.php file? Also is there any
rewrites rules in your apache configuration file?

On 7/29/12, Aero Maxx <aero.maxx.d at gmail.com> wrote:
> I have done there fine, I cant see anything majorly wrong with them.
>
> I have even deleted the whole database and all the files in the root,
> and copied all files from the zip to the root done the wpconfig again,
> and basically started again from scratch with a fresh install and it
> still does it.
>
> On 29/07/2012 09:14, Almog Baku wrote:
>> You may try to check your htaccess files:
>> /.htaccess
>> /wp-admin/.htaccess
>>
>> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>>
>>> Hello All,
>>>
>>> I have had wordpress installed on a local development machine running
>>> fedora for several years now but for some reason just recently when I go
>>> to
>>> www.domain.dev the url changes to www.domain.dev/wp-admin/**install.php
>>>
>>> The contents of the page show what I expected it to show, so the content
>>> is correct just the url changes as above and for the life of me I have
>>> been
>>> unable to debug as to why.
>>>
>>> I have tried installing it into a folder /wordpress as per the codex it
>>> still does it, have tried changing the tables from InnoDB to MyISAM as
>>> InnoDB is the new default on the mysql server version i'm using.
>>>
>>> When I upload the same files to the live site they work fine no url
>>> changing funny business going on so it is something thats local to that
>>> machine, but what on earth could be causing this issue any ideas ?
>>>
>>> Where is the code in the wordpress files that check and cause this type
>>> of
>>> redirect so i can debug this further and fix whats causing the issue.
>>>
>>> Any help would be greatly appreciated, thank you!
>>>
>>> Daniel.
>>> ______________________________**_________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Regards,
Daniel Fenn

From almog.baku at gmail.com  Sun Jul 29 09:09:16 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Sun, 29 Jul 2012 12:09:16 +0300
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <5014F21A.5060709@bluehost.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
	<CAGAEFz+Y=+Ba2TQD+Bu1xT_1nrF+y0hpZNhLcE0pLNrGULqPDg@mail.gmail.com>
	<1C2C745F-8A6C-4AA5-8CAF-099BBAAD7276@newclarity.net>
	<CAGAEFzLfQs3y_q7rJFKv7G6kjuu7t2_t+POxXK=sEKjGmqFFWA@mail.gmail.com>
	<50148EFA.5040909@bluehost.com>
	<CAGAEFz+tLq7H3L4hDfMQSu3Asu6+wBH2gHFnqn6bwa5WkbZsTw@mail.gmail.com>
	<5014F21A.5060709@bluehost.com>
Message-ID: <CALncZpTTM4nF-JXfP2NrbyPYL-rdR4S+Mx-EjtYPHaU9KJDA0A@mail.gmail.com>

Guys, if you say that we can't force the users to use one method.. We have
to delete the tinyMCE and jQuery.

All long the way there are decisions we should take. As jQuery chosen
against dojo and extjs..
So, its a rediculus argument.

Caching is something WE NEED.
Official API is something WE NEED.
HACKING of the socre is something we NOT need.

?????? ??? ?????, 29 ????? 2012, Bryan Petty ???:

> On 07/28/2012 08:38 PM, Jeff Waugh wrote:
> > On Sun, Jul 29, 2012 at 11:16 AM, Bryan Petty <bpetty at bluehost.com<javascript:;>>
> wrote:
> >
> >> When every plugin of a fairly generic type (in this case, page caching)
> >> requires the installation of the same plugins (APC/memcache), that gives
> >> off a "smell" like the core WP API is lacking adequate support for
> >> something it should already have.
> >>
> >
> > Not every page caching plugin needs wp-content/object-cache.php, but
> it's a
> > handy way to share code. Particularly if it's as well-written and
> > widely-trusted as the Memcache and APC drop-ins.
> >
> > Batcache requires a persistent object cache implementation (:161-166). It
> > once used memcache directly.
> >
> > WP Super Cache will load a persistent object cache implementation and
> > optionally use it (experimental feature according to the admin pages).
> >
> > W3 Total Cache, being... special... does its own thing, has multiple
> > backends, etc.
> >
> > This doesn't seem like a bad state of affairs to me.
>
> Really? You don't think it's bad that just among the plugins named here,
> there's 2 file backends, 2 APC backends, 2 memcache backends, and 3
> other backends already?
>
> Let's add a few more and see where the totals are at:
> - Fast Full Page Cache (apc, memcache, memcached)
> - Tribe Object Cache (apc, memcache, wincache, xcache)
> - FlexiCache (memcache, db, file)
> - Cachify (apc, db, file)
> - WP Widget Cache (file)
> - WP Green Cache (file)
> And for good measure, the rest of the object cache only plugins:
> - Memcached Redux
> - WinCache Object Cache Backend
> - XCache Object Cache Backend
> - WP File Cache
> - DB Cache Reloaded (and a forked plugin just as popular)
>
> Totals:
> - memcache(d): 7 (or 8 if you count Batcache's old one)
> - apc: 5
> - file: 7
> - db: 4 (or 5 if you count transients)
> - wincache: 3
> - xcache: 3
> - eaccelerator: 1
>
> So I count a grand total of over 30 unique object cache backends just in
> the plugins I can find in the directory, and they still only cover
> exactly 7 unique storage methods (or 8 if you identify memcache from
> memcached).
>
> I wouldn't call that sharing. Batcache is the only page caching plugin
> that doesn't include it's own additional backends.
>
> > Surely before you
> > adopt application-level page caching, you're going to use a persistent
> > object cache, and you'll configure your system to use it appropriately.
> > Then, should you choose a page cache designed for key/val style storage,
> > it'll automagically use the implementation you've chosen. No more
> > integration to do, benefit of shared code, etc.
>
> This is exactly what I'm pushing for. The only difference is that these
> persistent cache backends are actually built into WP core, so in
> addition to everything you mention here, every admin knows that there's
> always one guaranteed way to configure it (and in most cases, they won't
> have to because it can be auto-detected and auto-configured for them),
> and everyone truly actually shares the same code that implements every
> backend (if they want to anyway, they still wouldn't be forced to just
> like they aren't now).
>
> --
> Bryan Petty
> WordPress Developer
> bpetty at bluehost.com <javascript:;>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mike at newclarity.net  Sun Jul 29 09:09:24 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sun, 29 Jul 2012 05:09:24 -0400
Subject: [wp-hackers] Caching as part of the core
In-Reply-To: <CAGAEFzKAyQxXNWzjQCiM=Th=qd3HANiBYTYoSX=h3V7g9C1b1g@mail.gmail.com>
References: <CADTfcvZna5AyZk4KO3nFZBReDbzP9LLKeQ72FqOH2V7w2MymhQ@mail.gmail.com>
	<CALVAUkXoWw42Ok1kqF1W_o+qEEzyMkb6x0C0eZ3-d=2absmPvQ@mail.gmail.com>
	<500DFAD9.8030808@bluehost.com>
	<CAL4EHfmiMfxguvZz+MGGohEviaTxDa76tc_QURbYOAeFkOqfTQ@mail.gmail.com>
	<500E4467.20104@bluehost.com>
	<80309AE2-CF75-4160-89F1-93530C2F659E@newclarity.net>
	<CAD-Fghwkc5asjc+OqQyKt4LdMXH1j+Zh7F1FCUm4TfqCGb7w2g@mail.gmail.com>
	<20A2F46B-1916-40D5-B063-DD32476619DC@newclarity.net>
	<CAD-Fghy0pHV-rBeySPVPjy1hqtNf0chTWc=RTdnS+CopQ-2YQQ@mail.gmail.com>
	<EAB0EBDB-570D-4599-8594-D4976612A667@newclarity.net>
	<CAGAEFzK6TF__SoXt3sHegJFjdpnV6=zNZzxz_S9TG_BTVVBPjA@mail.gmail.com>
	<BAA61118-DD9F-4461-AC79-A1B04A1F90F8@newclarity.net>
	<CAGAEFz+Y=+Ba2TQD+Bu1xT_1nrF+y0hpZNhLcE0pLNrGULqPDg@mail.gmail.com>
	<1C2C745F-8A6C-4AA5-8CAF-099BBAAD7276@newclarity.net>
	<CAGAEFzLfQs3y_q7rJFKv7G6kjuu7t2_t+POxXK=sEKjGmqFFWA@mail.gmail.com>
	<D86EA01C-F998-4DCB-929C-864F5298B4D5@newclarity.net>
	<CAGAEFzLbdtXLrJnHCmscbcq85Qja9WSaTMq3gd_qAJyDxdg61Q@mail.gmail.com>
	<8C95D84F-D909-49A9-8E4A-48AFECD44E9C@newclarity.net>
	<CAGAEFzKAyQxXNWzjQCiM=Th=qd3HANiBYTYoSX=h3V7g9C1b1g@mail.gmail.com>
Message-ID: <DBDC21EA-2AE9-49DA-A47A-0B1D0E2FD5E6@newclarity.net>

On Jul 29, 2012, at 1:56 AM, Jeff Waugh wrote:
> I know a fair bit about WordPress performance, and I don't like it when
> someone is wrong on the Internet. Repeatedly. Where others might read it.
> 
> http://xkcd.com/386/

Well, it's nice to that you know better than me. Glad you recognize that you are that guy.

-Mike

From steve at sltaylor.co.uk  Sun Jul 29 15:47:00 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Sun, 29 Jul 2012 16:47:00 +0100
Subject: [wp-hackers] opcode caching + page caching plugin
Message-ID: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>

Hi,

Our server admin has installed APC, mostly for the Drupal sites he
runs. The thing is, most of the WP sites we have there have the Quick
Cache plugin running.

Is it worth having opcode caching as well as page caching? I'm
guessing the only gain is that the admin would be snappier as well as
the front-end. If that's not such a concern, and the sites aren't
known to be especially high-traffic, should we just ask for no APC on
our WP sites?

I've no idea what the ins and outs here are. Any good rules of thumb
would be great!

Thanks,

Steve Taylor

From jdub at bethesignal.org  Sun Jul 29 15:53:21 2012
From: jdub at bethesignal.org (Jeff Waugh)
Date: Mon, 30 Jul 2012 01:53:21 +1000
Subject: [wp-hackers] opcode caching + page caching plugin
In-Reply-To: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
References: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
Message-ID: <CAGAEFz+jhqc6u1hdM0J371h=TgLyahvd2-N-XKUMZXNjEjKYug@mail.gmail.com>

On Mon, Jul 30, 2012 at 1:47 AM, Steve Taylor <steve at sltaylor.co.uk> wrote:

> Is it worth having opcode caching as well as page caching? I'm
> guessing the only gain is that the admin would be snappier as well as
> the front-end. If that's not such a concern, and the sites aren't
> known to be especially high-traffic, should we just ask for no APC on
> our WP sites?
>

Easy answer: You should *always* use opcode caching for any PHP deployment,
otherwise you're just repeating the process of parsing your code every
request. Do make sure you've given enough shared memory to APC to keep all
of your code cached.

From ryan at pixopoint.com  Sun Jul 29 15:55:19 2012
From: ryan at pixopoint.com (Ryan Hellyer)
Date: Sun, 29 Jul 2012 17:55:19 +0200
Subject: [wp-hackers] opcode caching + page caching plugin
In-Reply-To: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
References: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
Message-ID: <CADTfcvYjZwDpGo85wfqKW=gkAUcdNTBSP5e8t7MfmGKUSDfYDw@mail.gmail.com>

Most page caching plugins make use of the APC cache too, so they will
serve the files direct from RAM instead of from disk, which is
significantly faster.

> Is it worth having opcode caching as well as page caching? I'm

From aero.maxx.d at gmail.com  Sun Jul 29 18:54:43 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Sun, 29 Jul 2012 19:54:43 +0100
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <CAJ5Hi2ghyFpszPf_70kFQWrnx-mpiwYewFzM37r457XXbEhUqA@mail.gmail.com>
References: <5014F00F.5020306@gmail.com>
	<CALncZpSFMfGikoXgeTG_ScUd+fnN+GKSA8ye5c430wM9dtA90g@mail.gmail.com>
	<5014F170.8000308@gmail.com>
	<CAJ5Hi2ghyFpszPf_70kFQWrnx-mpiwYewFzM37r457XXbEhUqA@mail.gmail.com>
Message-ID: <4195284037497583850@unknownmsgid>

Nothing in my wp-config.php file the same file works on the live site
with no redirect funny business.

No rewrite rules in my apache config.

On 29 Jul 2012, at 09:21, Daniel Fenn <danielx386 at gmail.com> wrote:

> Is there anything in your wp-config.php file? Also is there any
> rewrites rules in your apache configuration file?
>
> On 7/29/12, Aero Maxx <aero.maxx.d at gmail.com> wrote:
>> I have done there fine, I cant see anything majorly wrong with them.
>>
>> I have even deleted the whole database and all the files in the root,
>> and copied all files from the zip to the root done the wpconfig again,
>> and basically started again from scratch with a fresh install and it
>> still does it.
>>
>> On 29/07/2012 09:14, Almog Baku wrote:
>>> You may try to check your htaccess files:
>>> /.htaccess
>>> /wp-admin/.htaccess
>>>
>>> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>>>
>>>> Hello All,
>>>>
>>>> I have had wordpress installed on a local development machine running
>>>> fedora for several years now but for some reason just recently when I go
>>>> to
>>>> www.domain.dev the url changes to www.domain.dev/wp-admin/**install.php
>>>>
>>>> The contents of the page show what I expected it to show, so the content
>>>> is correct just the url changes as above and for the life of me I have
>>>> been
>>>> unable to debug as to why.
>>>>
>>>> I have tried installing it into a folder /wordpress as per the codex it
>>>> still does it, have tried changing the tables from InnoDB to MyISAM as
>>>> InnoDB is the new default on the mysql server version i'm using.
>>>>
>>>> When I upload the same files to the live site they work fine no url
>>>> changing funny business going on so it is something thats local to that
>>>> machine, but what on earth could be causing this issue any ideas ?
>>>>
>>>> Where is the code in the wordpress files that check and cause this type
>>>> of
>>>> redirect so i can debug this further and fix whats causing the issue.
>>>>
>>>> Any help would be greatly appreciated, thank you!
>>>>
>>>> Daniel.
>>>> ______________________________**_________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
> --
> Regards,
> Daniel Fenn
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From almog.baku at gmail.com  Sun Jul 29 20:11:51 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Sun, 29 Jul 2012 23:11:51 +0300
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <4195284037497583850@unknownmsgid>
References: <5014F00F.5020306@gmail.com>
	<CALncZpSFMfGikoXgeTG_ScUd+fnN+GKSA8ye5c430wM9dtA90g@mail.gmail.com>
	<5014F170.8000308@gmail.com>
	<CAJ5Hi2ghyFpszPf_70kFQWrnx-mpiwYewFzM37r457XXbEhUqA@mail.gmail.com>
	<4195284037497583850@unknownmsgid>
Message-ID: <CALncZpSwiPx8AZ3WymYn02okE8KTNGB-cfFVAzs6B1GaiL-Kig@mail.gmail.com>

Did you try fresh installation?

?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:

> Nothing in my wp-config.php file the same file works on the live site
> with no redirect funny business.
>
> No rewrite rules in my apache config.
>
> On 29 Jul 2012, at 09:21, Daniel Fenn <danielx386 at gmail.com> wrote:
>
> > Is there anything in your wp-config.php file? Also is there any
> > rewrites rules in your apache configuration file?
> >
> > On 7/29/12, Aero Maxx <aero.maxx.d at gmail.com> wrote:
> >> I have done there fine, I cant see anything majorly wrong with them.
> >>
> >> I have even deleted the whole database and all the files in the root,
> >> and copied all files from the zip to the root done the wpconfig again,
> >> and basically started again from scratch with a fresh install and it
> >> still does it.
> >>
> >> On 29/07/2012 09:14, Almog Baku wrote:
> >>> You may try to check your htaccess files:
> >>> /.htaccess
> >>> /wp-admin/.htaccess
> >>>
> >>> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
> >>>
> >>>> Hello All,
> >>>>
> >>>> I have had wordpress installed on a local development machine running
> >>>> fedora for several years now but for some reason just recently when I
> go
> >>>> to
> >>>> www.domain.dev the url changes to
> www.domain.dev/wp-admin/**install.php
> >>>>
> >>>> The contents of the page show what I expected it to show, so the
> content
> >>>> is correct just the url changes as above and for the life of me I have
> >>>> been
> >>>> unable to debug as to why.
> >>>>
> >>>> I have tried installing it into a folder /wordpress as per the codex
> it
> >>>> still does it, have tried changing the tables from InnoDB to MyISAM as
> >>>> InnoDB is the new default on the mysql server version i'm using.
> >>>>
> >>>> When I upload the same files to the live site they work fine no url
> >>>> changing funny business going on so it is something thats local to
> that
> >>>> machine, but what on earth could be causing this issue any ideas ?
> >>>>
> >>>> Where is the code in the wordpress files that check and cause this
> type
> >>>> of
> >>>> redirect so i can debug this further and fix whats causing the issue.
> >>>>
> >>>> Any help would be greatly appreciated, thank you!
> >>>>
> >>>> Daniel.
> >>>> ______________________________**_________________
> >>>> wp-hackers mailing list
> >>>> wp-hackers at lists.automattic.com
> >>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> >>>>
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >
> >
> > --
> > Regards,
> > Daniel Fenn
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/ma<http://lists.automattic.com/mailman/listinfo/wp-hackers>

From mjsafoxy at gmail.com  Sun Jul 29 20:26:23 2012
From: mjsafoxy at gmail.com (Muhammad Ali)
Date: Sun, 29 Jul 2012 21:26:23 +0100
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <CALncZpSwiPx8AZ3WymYn02okE8KTNGB-cfFVAzs6B1GaiL-Kig@mail.gmail.com>
References: <5014F00F.5020306@gmail.com>
	<CALncZpSFMfGikoXgeTG_ScUd+fnN+GKSA8ye5c430wM9dtA90g@mail.gmail.com>
	<5014F170.8000308@gmail.com>
	<CAJ5Hi2ghyFpszPf_70kFQWrnx-mpiwYewFzM37r457XXbEhUqA@mail.gmail.com>
	<4195284037497583850@unknownmsgid>
	<CALncZpSwiPx8AZ3WymYn02okE8KTNGB-cfFVAzs6B1GaiL-Kig@mail.gmail.com>
Message-ID: <CAMGJ0yxwnBx0ttVf1DVm9RSaEHRN=RkQKr0YA7Y58wHBhENc-w@mail.gmail.com>

What about the MySQL connection, are you connecting as root or have you set
up a different user with odd permissions?

On 29 July 2012 21:11, Almog Baku <almog.baku at gmail.com> wrote:

> Did you try fresh installation?
>
> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>
> > Nothing in my wp-config.php file the same file works on the live site
> > with no redirect funny business.
> >
> > No rewrite rules in my apache config.
> >
> > On 29 Jul 2012, at 09:21, Daniel Fenn <danielx386 at gmail.com> wrote:
> >
> > > Is there anything in your wp-config.php file? Also is there any
> > > rewrites rules in your apache configuration file?
> > >
> > > On 7/29/12, Aero Maxx <aero.maxx.d at gmail.com> wrote:
> > >> I have done there fine, I cant see anything majorly wrong with them.
> > >>
> > >> I have even deleted the whole database and all the files in the root,
> > >> and copied all files from the zip to the root done the wpconfig again,
> > >> and basically started again from scratch with a fresh install and it
> > >> still does it.
> > >>
> > >> On 29/07/2012 09:14, Almog Baku wrote:
> > >>> You may try to check your htaccess files:
> > >>> /.htaccess
> > >>> /wp-admin/.htaccess
> > >>>
> > >>> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
> > >>>
> > >>>> Hello All,
> > >>>>
> > >>>> I have had wordpress installed on a local development machine
> running
> > >>>> fedora for several years now but for some reason just recently when
> I
> > go
> > >>>> to
> > >>>> www.domain.dev the url changes to
> > www.domain.dev/wp-admin/**install.php
> > >>>>
> > >>>> The contents of the page show what I expected it to show, so the
> > content
> > >>>> is correct just the url changes as above and for the life of me I
> have
> > >>>> been
> > >>>> unable to debug as to why.
> > >>>>
> > >>>> I have tried installing it into a folder /wordpress as per the codex
> > it
> > >>>> still does it, have tried changing the tables from InnoDB to MyISAM
> as
> > >>>> InnoDB is the new default on the mysql server version i'm using.
> > >>>>
> > >>>> When I upload the same files to the live site they work fine no url
> > >>>> changing funny business going on so it is something thats local to
> > that
> > >>>> machine, but what on earth could be causing this issue any ideas ?
> > >>>>
> > >>>> Where is the code in the wordpress files that check and cause this
> > type
> > >>>> of
> > >>>> redirect so i can debug this further and fix whats causing the
> issue.
> > >>>>
> > >>>> Any help would be greatly appreciated, thank you!
> > >>>>
> > >>>> Daniel.
> > >>>> ______________________________**_________________
> > >>>> wp-hackers mailing list
> > >>>> wp-hackers at lists.automattic.com
> > >>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
> > http://lists.automattic.com/mailman/listinfo/wp-hackers>
> > >>>>
> > >>> _______________________________________________
> > >>> wp-hackers mailing list
> > >>> wp-hackers at lists.automattic.com
> > >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >>
> > >> _______________________________________________
> > >> wp-hackers mailing list
> > >> wp-hackers at lists.automattic.com
> > >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >>
> > >
> > >
> > > --
> > > Regards,
> > > Daniel Fenn
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/ma<
> http://lists.automattic.com/mailman/listinfo/wp-hackers>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From steve at sltaylor.co.uk  Sun Jul 29 20:49:32 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Sun, 29 Jul 2012 21:49:32 +0100
Subject: [wp-hackers] opcode caching + page caching plugin
In-Reply-To: <CAGAEFz+jhqc6u1hdM0J371h=TgLyahvd2-N-XKUMZXNjEjKYug@mail.gmail.com>
References: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
	<CAGAEFz+jhqc6u1hdM0J371h=TgLyahvd2-N-XKUMZXNjEjKYug@mail.gmail.com>
Message-ID: <CAGEuVU2T7zqYOkH0rQqvj6AS3jmczpVn+L9d_JH67wUFeND=+Q@mail.gmail.com>

> Easy answer: You should *always* use opcode caching for any PHP deployment,
> otherwise you're just repeating the process of parsing your code every
> request. Do make sure you've given enough shared memory to APC to keep all
> of your code cached.

I guess I just wondered what use is the opcode caching would be if
you're mostly serving flat cache HTML? OK, you'll speed up that page
cache refresh and admin access. But is that so important unless you
have a very high traffic site?

Page caching leveraging APC is a fair point for using both, but again
I'm just wondering if adding APC as well might be overkill for us.

One of our developers is questioning the fact that we need to manually
run a script every time we update code to refresh the APC cache. If
we're not getting worthwhile gains from APC, is this extra step to
remember worth it?

I feel like there's a lot of "how long is a piece of string" questions
buried in all this. Or is having APC + page caching more of a
no-brainer than I'm making out?

From elrabino at gmail.com  Sun Jul 29 21:01:02 2012
From: elrabino at gmail.com (Daniel Dvorkin)
Date: Sun, 29 Jul 2012 18:01:02 -0300
Subject: [wp-hackers] opcode caching + page caching plugin
In-Reply-To: <CAGEuVU2T7zqYOkH0rQqvj6AS3jmczpVn+L9d_JH67wUFeND=+Q@mail.gmail.com>
References: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
	<CAGAEFz+jhqc6u1hdM0J371h=TgLyahvd2-N-XKUMZXNjEjKYug@mail.gmail.com>
	<CAGEuVU2T7zqYOkH0rQqvj6AS3jmczpVn+L9d_JH67wUFeND=+Q@mail.gmail.com>
Message-ID: <CADN2qFMtFmhtbHd1w6Yj10g7oDNRNODKAMm-QkUrMpHjgRrM-g@mail.gmail.com>

It's not just the opcode. APC gives you an in-memory object cache that's an
order of magnitude faster than disk cache, specially in busy servers. For a
fairly big WordPress single server install (about 10k visits day) we're
using Mark Jaquith's APC object cache backend[1] and batcache[2] and it
works fantastic.



[1]
http://markjaquith.wordpress.com/2010/08/06/apc-object-cache-backend-for-wordpress/

[2]http://wordpress.org/extend/plugins/batcache/

From aero.maxx.d at gmail.com  Sun Jul 29 21:02:57 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Sun, 29 Jul 2012 22:02:57 +0100
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <CALncZpSwiPx8AZ3WymYn02okE8KTNGB-cfFVAzs6B1GaiL-Kig@mail.gmail.com>
References: <5014F00F.5020306@gmail.com>
	<CALncZpSFMfGikoXgeTG_ScUd+fnN+GKSA8ye5c430wM9dtA90g@mail.gmail.com>
	<5014F170.8000308@gmail.com>
	<CAJ5Hi2ghyFpszPf_70kFQWrnx-mpiwYewFzM37r457XXbEhUqA@mail.gmail.com>
	<4195284037497583850@unknownmsgid>
	<CALncZpSwiPx8AZ3WymYn02okE8KTNGB-cfFVAzs6B1GaiL-Kig@mail.gmail.com>
Message-ID: <510404944905500157@unknownmsgid>

Yes tried fresh instal of 3.3.3 the very latest version.

On 29 Jul 2012, at 21:12, Almog Baku <almog.baku at gmail.com> wrote:

> Did you try fresh installation?
>
> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>
>> Nothing in my wp-config.php file the same file works on the live site
>> with no redirect funny business.
>>
>> No rewrite rules in my apache config.
>>
>> On 29 Jul 2012, at 09:21, Daniel Fenn <danielx386 at gmail.com> wrote:
>>
>>> Is there anything in your wp-config.php file? Also is there any
>>> rewrites rules in your apache configuration file?
>>>
>>> On 7/29/12, Aero Maxx <aero.maxx.d at gmail.com> wrote:
>>>> I have done there fine, I cant see anything majorly wrong with them.
>>>>
>>>> I have even deleted the whole database and all the files in the root,
>>>> and copied all files from the zip to the root done the wpconfig again,
>>>> and basically started again from scratch with a fresh install and it
>>>> still does it.
>>>>
>>>> On 29/07/2012 09:14, Almog Baku wrote:
>>>>> You may try to check your htaccess files:
>>>>> /.htaccess
>>>>> /wp-admin/.htaccess
>>>>>
>>>>> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>>>>>
>>>>>> Hello All,
>>>>>>
>>>>>> I have had wordpress installed on a local development machine running
>>>>>> fedora for several years now but for some reason just recently when I
>> go
>>>>>> to
>>>>>> www.domain.dev the url changes to
>> www.domain.dev/wp-admin/**install.php
>>>>>>
>>>>>> The contents of the page show what I expected it to show, so the
>> content
>>>>>> is correct just the url changes as above and for the life of me I have
>>>>>> been
>>>>>> unable to debug as to why.
>>>>>>
>>>>>> I have tried installing it into a folder /wordpress as per the codex
>> it
>>>>>> still does it, have tried changing the tables from InnoDB to MyISAM as
>>>>>> InnoDB is the new default on the mysql server version i'm using.
>>>>>>
>>>>>> When I upload the same files to the live site they work fine no url
>>>>>> changing funny business going on so it is something thats local to
>> that
>>>>>> machine, but what on earth could be causing this issue any ideas ?
>>>>>>
>>>>>> Where is the code in the wordpress files that check and cause this
>> type
>>>>>> of
>>>>>> redirect so i can debug this further and fix whats causing the issue.
>>>>>>
>>>>>> Any help would be greatly appreciated, thank you!
>>>>>>
>>>>>> Daniel.
>>>>>> ______________________________**_________________
>>>>>> wp-hackers mailing list
>>>>>> wp-hackers at lists.automattic.com
>>>>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
>> http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>>>>
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>
>>>
>>> --
>>> Regards,
>>> Daniel Fenn
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/ma<http://lists.automattic.com/mailman/listinfo/wp-hackers>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From danielx386 at gmail.com  Sun Jul 29 21:19:49 2012
From: danielx386 at gmail.com (Daniel Fenn)
Date: Mon, 30 Jul 2012 07:19:49 +1000
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <510404944905500157@unknownmsgid>
References: <5014F00F.5020306@gmail.com>
	<CALncZpSFMfGikoXgeTG_ScUd+fnN+GKSA8ye5c430wM9dtA90g@mail.gmail.com>
	<5014F170.8000308@gmail.com>
	<CAJ5Hi2ghyFpszPf_70kFQWrnx-mpiwYewFzM37r457XXbEhUqA@mail.gmail.com>
	<4195284037497583850@unknownmsgid>
	<CALncZpSwiPx8AZ3WymYn02okE8KTNGB-cfFVAzs6B1GaiL-Kig@mail.gmail.com>
	<510404944905500157@unknownmsgid>
Message-ID: <CAJ5Hi2j6h4vx4bExbPLktoBKAsPkLxqX3R5Thyi-yKouQV1HNg@mail.gmail.com>

Wait is 3.4.1 the latest?

On 7/30/12, Aero Maxx <aero.maxx.d at gmail.com> wrote:
> Yes tried fresh instal of 3.3.3 the very latest version.
>
> On 29 Jul 2012, at 21:12, Almog Baku <almog.baku at gmail.com> wrote:
>
>> Did you try fresh installation?
>>
>> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>>
>>> Nothing in my wp-config.php file the same file works on the live site
>>> with no redirect funny business.
>>>
>>> No rewrite rules in my apache config.
>>>
>>> On 29 Jul 2012, at 09:21, Daniel Fenn <danielx386 at gmail.com> wrote:
>>>
>>>> Is there anything in your wp-config.php file? Also is there any
>>>> rewrites rules in your apache configuration file?
>>>>
>>>> On 7/29/12, Aero Maxx <aero.maxx.d at gmail.com> wrote:
>>>>> I have done there fine, I cant see anything majorly wrong with them.
>>>>>
>>>>> I have even deleted the whole database and all the files in the root,
>>>>> and copied all files from the zip to the root done the wpconfig again,
>>>>> and basically started again from scratch with a fresh install and it
>>>>> still does it.
>>>>>
>>>>> On 29/07/2012 09:14, Almog Baku wrote:
>>>>>> You may try to check your htaccess files:
>>>>>> /.htaccess
>>>>>> /wp-admin/.htaccess
>>>>>>
>>>>>> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>>>>>>
>>>>>>> Hello All,
>>>>>>>
>>>>>>> I have had wordpress installed on a local development machine running
>>>>>>> fedora for several years now but for some reason just recently when I
>>> go
>>>>>>> to
>>>>>>> www.domain.dev the url changes to
>>> www.domain.dev/wp-admin/**install.php
>>>>>>>
>>>>>>> The contents of the page show what I expected it to show, so the
>>> content
>>>>>>> is correct just the url changes as above and for the life of me I
>>>>>>> have
>>>>>>> been
>>>>>>> unable to debug as to why.
>>>>>>>
>>>>>>> I have tried installing it into a folder /wordpress as per the codex
>>> it
>>>>>>> still does it, have tried changing the tables from InnoDB to MyISAM
>>>>>>> as
>>>>>>> InnoDB is the new default on the mysql server version i'm using.
>>>>>>>
>>>>>>> When I upload the same files to the live site they work fine no url
>>>>>>> changing funny business going on so it is something thats local to
>>> that
>>>>>>> machine, but what on earth could be causing this issue any ideas ?
>>>>>>>
>>>>>>> Where is the code in the wordpress files that check and cause this
>>> type
>>>>>>> of
>>>>>>> redirect so i can debug this further and fix whats causing the issue.
>>>>>>>
>>>>>>> Any help would be greatly appreciated, thank you!
>>>>>>>
>>>>>>> Daniel.
>>>>>>> ______________________________**_________________
>>>>>>> wp-hackers mailing list
>>>>>>> wp-hackers at lists.automattic.com
>>>>>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>>>>>
>>>>>> _______________________________________________
>>>>>> wp-hackers mailing list
>>>>>> wp-hackers at lists.automattic.com
>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>>
>>>>
>>>> --
>>>> Regards,
>>>> Daniel Fenn
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/ma<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Regards,
Daniel Fenn

From wordpress at zed1.com  Sun Jul 29 21:40:21 2012
From: wordpress at zed1.com (Mike Little)
Date: Sun, 29 Jul 2012 22:40:21 +0100
Subject: [wp-hackers] opcode caching + page caching plugin
In-Reply-To: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
References: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
Message-ID: <CAMb54M0o+hoJD6s+__c0S6RzHREc6pqNM6G+F=6DAtzfkmN+sg@mail.gmail.com>

On 29 July 2012 16:47, Steve Taylor <steve at sltaylor.co.uk> wrote:

> Hi,
>
> Our server admin has installed APC, mostly for the Drupal sites he
> runs. The thing is, most of the WP sites we have there have the Quick
> Cache plugin running.
>
> Is it worth having opcode caching as well as page caching? I'm
> guessing the only gain is that the admin would be snappier as well as
> the front-end. If that's not such a concern, and the sites aren't
> known to be especially high-traffic, should we just ask for no APC on
> our WP sites?
>
>

As Jeff said "it is always worthwhile using an opcode cache". Here's a
snapshot of the APC stats from a site I run
https://www.evernote.com/shard/s9/sh/7c732905-d62e-42c6-a473-b4e824f655b8/a4d5e81e74a1a731ec415a52f6f9a240
The server has only been up a little under 20 hours and is currently not at
all busy. But the cache hit to miss ratio is already at 18 million to 18
hundred or 100,000:1 Although this is a big fat box (8 cores, 8 Gig of RAM)
that APC opcode cache makes a huge difference during busy times. During
those busy times, I think I saw the ratio hit 10 million to 1! As it
happens a high percentage (>80%) of users are logged in when the site is
busy so a page cache doesn't help as much as I'd like.

Although using a static page cache, most of your pages should be served
without using PHP, you may be surprised at how often the code gets to run
anyway.

Every 404, every request from a logged in user (front end or back). And
more significantly, if your page expiry is set to 1 hour, then your popular
pages will still get refreshed every hour.

Every time someone comments (if it doesn't go into moderation) or
publishes/updates a comment, post or page,  the cache for that post/page
(and a good few more pages -- think archives) gets invalidated.

Also the biggest cache avoiding behaviour on your site is probably the web
crawlers that constantly hit your old pages that weren't cached, but then
get cached, only to expire long before then next hit on them.

As mentioned by others, once you have APC in the mix, you can use it for
other purposes all of which should contribute to reducing the overall load
on your server.

Hope that helps,

Mike
-- 
Mike Little
http://zed1.com/

From aero.maxx.d at gmail.com  Sun Jul 29 21:44:03 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Sun, 29 Jul 2012 22:44:03 +0100
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <CAJ5Hi2j6h4vx4bExbPLktoBKAsPkLxqX3R5Thyi-yKouQV1HNg@mail.gmail.com>
References: <5014F00F.5020306@gmail.com>
	<CALncZpSFMfGikoXgeTG_ScUd+fnN+GKSA8ye5c430wM9dtA90g@mail.gmail.com>
	<5014F170.8000308@gmail.com>
	<CAJ5Hi2ghyFpszPf_70kFQWrnx-mpiwYewFzM37r457XXbEhUqA@mail.gmail.com>
	<4195284037497583850@unknownmsgid>
	<CALncZpSwiPx8AZ3WymYn02okE8KTNGB-cfFVAzs6B1GaiL-Kig@mail.gmail.com>
	<510404944905500157@unknownmsgid>
	<CAJ5Hi2j6h4vx4bExbPLktoBKAsPkLxqX3R5Thyi-yKouQV1HNg@mail.gmail.com>
Message-ID: <5015AEA3.6040401@gmail.com>

It is yes, but tried 3.3.3 to see if it was version specific.

On 29/07/2012 22:19, Daniel Fenn wrote:
> Wait is 3.4.1 the latest?
>
> On 7/30/12, Aero Maxx <aero.maxx.d at gmail.com> wrote:
>> Yes tried fresh instal of 3.3.3 the very latest version.
>>
>> On 29 Jul 2012, at 21:12, Almog Baku <almog.baku at gmail.com> wrote:
>>
>>> Did you try fresh installation?
>>>
>>> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>>>
>>>> Nothing in my wp-config.php file the same file works on the live site
>>>> with no redirect funny business.
>>>>
>>>> No rewrite rules in my apache config.
>>>>
>>>> On 29 Jul 2012, at 09:21, Daniel Fenn <danielx386 at gmail.com> wrote:
>>>>
>>>>> Is there anything in your wp-config.php file? Also is there any
>>>>> rewrites rules in your apache configuration file?
>>>>>
>>>>> On 7/29/12, Aero Maxx <aero.maxx.d at gmail.com> wrote:
>>>>>> I have done there fine, I cant see anything majorly wrong with them.
>>>>>>
>>>>>> I have even deleted the whole database and all the files in the root,
>>>>>> and copied all files from the zip to the root done the wpconfig again,
>>>>>> and basically started again from scratch with a fresh install and it
>>>>>> still does it.
>>>>>>
>>>>>> On 29/07/2012 09:14, Almog Baku wrote:
>>>>>>> You may try to check your htaccess files:
>>>>>>> /.htaccess
>>>>>>> /wp-admin/.htaccess
>>>>>>>
>>>>>>> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>>>>>>>
>>>>>>>> Hello All,
>>>>>>>>
>>>>>>>> I have had wordpress installed on a local development machine running
>>>>>>>> fedora for several years now but for some reason just recently when I
>>>> go
>>>>>>>> to
>>>>>>>> www.domain.dev the url changes to
>>>> www.domain.dev/wp-admin/**install.php
>>>>>>>> The contents of the page show what I expected it to show, so the
>>>> content
>>>>>>>> is correct just the url changes as above and for the life of me I
>>>>>>>> have
>>>>>>>> been
>>>>>>>> unable to debug as to why.
>>>>>>>>
>>>>>>>> I have tried installing it into a folder /wordpress as per the codex
>>>> it
>>>>>>>> still does it, have tried changing the tables from InnoDB to MyISAM
>>>>>>>> as
>>>>>>>> InnoDB is the new default on the mysql server version i'm using.
>>>>>>>>
>>>>>>>> When I upload the same files to the live site they work fine no url
>>>>>>>> changing funny business going on so it is something thats local to
>>>> that
>>>>>>>> machine, but what on earth could be causing this issue any ideas ?
>>>>>>>>
>>>>>>>> Where is the code in the wordpress files that check and cause this
>>>> type
>>>>>>>> of
>>>>>>>> redirect so i can debug this further and fix whats causing the issue.
>>>>>>>>
>>>>>>>> Any help would be greatly appreciated, thank you!
>>>>>>>>
>>>>>>>> Daniel.
>>>>>>>> ______________________________**_________________
>>>>>>>> wp-hackers mailing list
>>>>>>>> wp-hackers at lists.automattic.com
>>>>>>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>>>>> _______________________________________________
>>>>>>> wp-hackers mailing list
>>>>>>> wp-hackers at lists.automattic.com
>>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>> _______________________________________________
>>>>>> wp-hackers mailing list
>>>>>> wp-hackers at lists.automattic.com
>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>>
>>>>>
>>>>> --
>>>>> Regards,
>>>>> Daniel Fenn
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/ma<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>


From aero.maxx.d at gmail.com  Sun Jul 29 21:52:36 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Sun, 29 Jul 2012 22:52:36 +0100
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <CAMGJ0yxwnBx0ttVf1DVm9RSaEHRN=RkQKr0YA7Y58wHBhENc-w@mail.gmail.com>
References: <5014F00F.5020306@gmail.com>
	<CALncZpSFMfGikoXgeTG_ScUd+fnN+GKSA8ye5c430wM9dtA90g@mail.gmail.com>
	<5014F170.8000308@gmail.com>
	<CAJ5Hi2ghyFpszPf_70kFQWrnx-mpiwYewFzM37r457XXbEhUqA@mail.gmail.com>
	<4195284037497583850@unknownmsgid>
	<CALncZpSwiPx8AZ3WymYn02okE8KTNGB-cfFVAzs6B1GaiL-Kig@mail.gmail.com>
	<CAMGJ0yxwnBx0ttVf1DVm9RSaEHRN=RkQKr0YA7Y58wHBhENc-w@mail.gmail.com>
Message-ID: <5015B0A4.8040606@gmail.com>

I'm connecting as root to the database, no obscure users with odd 
permissions.

On 29/07/2012 21:26, Muhammad Ali wrote:
> What about the MySQL connection, are you connecting as root or have you set
> up a different user with odd permissions?
>
> On 29 July 2012 21:11, Almog Baku <almog.baku at gmail.com> wrote:
>
>> Did you try fresh installation?
>>
>> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>>
>>> Nothing in my wp-config.php file the same file works on the live site
>>> with no redirect funny business.
>>>
>>> No rewrite rules in my apache config.
>>>
>>> On 29 Jul 2012, at 09:21, Daniel Fenn <danielx386 at gmail.com> wrote:
>>>
>>>> Is there anything in your wp-config.php file? Also is there any
>>>> rewrites rules in your apache configuration file?
>>>>
>>>> On 7/29/12, Aero Maxx <aero.maxx.d at gmail.com> wrote:
>>>>> I have done there fine, I cant see anything majorly wrong with them.
>>>>>
>>>>> I have even deleted the whole database and all the files in the root,
>>>>> and copied all files from the zip to the root done the wpconfig again,
>>>>> and basically started again from scratch with a fresh install and it
>>>>> still does it.
>>>>>
>>>>> On 29/07/2012 09:14, Almog Baku wrote:
>>>>>> You may try to check your htaccess files:
>>>>>> /.htaccess
>>>>>> /wp-admin/.htaccess
>>>>>>
>>>>>> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>>>>>>
>>>>>>> Hello All,
>>>>>>>
>>>>>>> I have had wordpress installed on a local development machine
>> running
>>>>>>> fedora for several years now but for some reason just recently when
>> I
>>> go
>>>>>>> to
>>>>>>> www.domain.dev the url changes to
>>> www.domain.dev/wp-admin/**install.php
>>>>>>> The contents of the page show what I expected it to show, so the
>>> content
>>>>>>> is correct just the url changes as above and for the life of me I
>> have
>>>>>>> been
>>>>>>> unable to debug as to why.
>>>>>>>
>>>>>>> I have tried installing it into a folder /wordpress as per the codex
>>> it
>>>>>>> still does it, have tried changing the tables from InnoDB to MyISAM
>> as
>>>>>>> InnoDB is the new default on the mysql server version i'm using.
>>>>>>>
>>>>>>> When I upload the same files to the live site they work fine no url
>>>>>>> changing funny business going on so it is something thats local to
>>> that
>>>>>>> machine, but what on earth could be causing this issue any ideas ?
>>>>>>>
>>>>>>> Where is the code in the wordpress files that check and cause this
>>> type
>>>>>>> of
>>>>>>> redirect so i can debug this further and fix whats causing the
>> issue.
>>>>>>> Any help would be greatly appreciated, thank you!
>>>>>>>
>>>>>>> Daniel.
>>>>>>> ______________________________**_________________
>>>>>>> wp-hackers mailing list
>>>>>>> wp-hackers at lists.automattic.com
>>>>>>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>>>>> _______________________________________________
>>>>>> wp-hackers mailing list
>>>>>> wp-hackers at lists.automattic.com
>>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>>
>>>>
>>>> --
>>>> Regards,
>>>> Daniel Fenn
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/ma<
>> http://lists.automattic.com/mailman/listinfo/wp-hackers>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From almog.baku at gmail.com  Sun Jul 29 22:02:15 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Mon, 30 Jul 2012 01:02:15 +0300
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <5015B0A4.8040606@gmail.com>
References: <5014F00F.5020306@gmail.com>
	<CALncZpSFMfGikoXgeTG_ScUd+fnN+GKSA8ye5c430wM9dtA90g@mail.gmail.com>
	<5014F170.8000308@gmail.com>
	<CAJ5Hi2ghyFpszPf_70kFQWrnx-mpiwYewFzM37r457XXbEhUqA@mail.gmail.com>
	<4195284037497583850@unknownmsgid>
	<CALncZpSwiPx8AZ3WymYn02okE8KTNGB-cfFVAzs6B1GaiL-Kig@mail.gmail.com>
	<CAMGJ0yxwnBx0ttVf1DVm9RSaEHRN=RkQKr0YA7Y58wHBhENc-w@mail.gmail.com>
	<5015B0A4.8040606@gmail.com>
Message-ID: <CALncZpRJZUPb1gSQMq6fAwtWptS5zjvuepeFftdCsy22o8hGQQ@mail.gmail.com>

Try to clear caches..
Also reset to default theme, and disable all plugins.

And do you have any link?


?????? ??? ???, 30 ????? 2012, Aero Maxx ???:

> I'm connecting as root to the database, no obscure users with odd
> permissions.
>
> On 29/07/2012 21:26, Muhammad Ali wrote:
>
> What about the MySQL connection, are you connecting as root or have you set
> up a different user with odd permissions?
>
> On 29 July 2012 21:11, Almog Baku <almog.baku at gmail.com> wrote:
>
>  Did you try fresh installation?
>
> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>
>  Nothing in my wp-config.php file the same file works on the live site
> with no redirect funny business.
>
> No rewrite rules in my apache config.
>
> On 29 Jul 2012, at 09:21, Daniel Fenn <danielx386 at gmail.com> wrote:
>
>  Is there anything in your wp-config.php file? Also is there any
> rewrites rules in your apache configuration file?
>
> On 7/29/12, Aero Maxx <aero.maxx.d at gmail.com> wrote:
>
> I have done there fine, I cant see anything majorly wrong with them.
>
> I have even deleted the whole database and all the files in the root,
> and copied all files from the zip to the root done the wpconfig again,
> and basically started again from scratch with a fresh install and it
> still does it.
>
> On 29/07/2012 09:14, Almog Baku wrote:
>
> You may try to check your htaccess files:
> /.htaccess
> /wp-admin/.htaccess
>
> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>
>  Hello All,
>
> I have had wordpress installed on a local development machine
>
> running
>
> fedora for several years now but for some reason just recently when
>
> I
>
> go
>
> to
> www.domain.dev the url changes to
>
> www.domain.dev/wp-admin/****install.php
>
> The contents of the page show what I expected it to show, so the
>
> content
>
> is correct just the url changes as above and for the life of me I
>
> have
>
>

From jdub at bethesignal.org  Sun Jul 29 22:13:06 2012
From: jdub at bethesignal.org (Jeff Waugh)
Date: Mon, 30 Jul 2012 08:13:06 +1000
Subject: [wp-hackers] opcode caching + page caching plugin
In-Reply-To: <CAGEuVU2T7zqYOkH0rQqvj6AS3jmczpVn+L9d_JH67wUFeND=+Q@mail.gmail.com>
References: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
	<CAGAEFz+jhqc6u1hdM0J371h=TgLyahvd2-N-XKUMZXNjEjKYug@mail.gmail.com>
	<CAGEuVU2T7zqYOkH0rQqvj6AS3jmczpVn+L9d_JH67wUFeND=+Q@mail.gmail.com>
Message-ID: <CAGAEFzJR-vpAz8M=RNX99bhnYYc498PtJ+29k_5WVxEPoZLQkQ@mail.gmail.com>

On Mon, Jul 30, 2012 at 6:49 AM, Steve Taylor <steve at sltaylor.co.uk> wrote:

> I guess I just wondered what use is the opcode caching would be if
> you're mostly serving flat cache HTML? OK, you'll speed up that page
> cache refresh and admin access. But is that so important unless you
> have a very high traffic site?
>

Lots of shared hosting blogs get away without an opcode cache because their
hosts haven't figured out how to scale their APC memory allocation along
with the growth of their customer's files. So while lots of smaller blogs
get away without it, I would say that opcode caching is the #1 no-brainer,
easy-as-pie optimisation to make as soon as you have control of your web
server. :-)


> One of our developers is questioning the fact that we need to manually
> run a script every time we update code to refresh the APC cache. If
> we're not getting worthwhile gains from APC, is this extra step to
> remember worth it?
>

The only reason you'd "manually run a script every time you update code" is
if you set apc.stat=0, which is an extra optimisation you probably don't
need to bother with. Stick with the default and let APC do the checking for
you.

I feel like there's a lot of "how long is a piece of string" questions
> buried in all this. Or is having APC + page caching more of a
> no-brainer than I'm making out?


APC opcode caching: No-brainer. Only one thing to worry about: Making sure
there's enough shared memory allocated for your code.

APC object caching: Very nearly a no-brainer. Takes some load off your
database. Might cause occasional surprises*. Just a drop-in away once
you're using APC. Again, only one thing to worry about: Making sure there's
enough shared memory allocated for your opcode cache *and* user cache (how
APC describes its key/val storage).

Page caching: Greater margin for error, but lets you avoid PHP / WordPress
for the most part, if not entirely. Some implementations will even store in
APC, which means you have to make sure there's enough shared memory for...
you get the idea. :-) You get to route around PHP / WordPress for many
requests, but not all. For instance, most page cache implementations will
not serve from the cache if the request is from a logged in user
(regardless of whether they're using the admin section or their user role).

* Such as your blog still working after you've deleted your database. :-)

From kapil.chugh at hotmail.com  Mon Jul 30 05:33:56 2012
From: kapil.chugh at hotmail.com (Kapil Chugh)
Date: Mon, 30 Jul 2012 11:03:56 +0530
Subject: [wp-hackers] WordPress install homepage redirecting to
 /wp-admin/install.php
In-Reply-To: <5014F00F.5020306@gmail.com>
References: <5014F00F.5020306@gmail.com>
Message-ID: <SNT104-W509E3F1D821D8066E6A2AFEFC60@phx.gbl>


Daniel,  make sure you don't have wp-config.php file exist above your installation folder.

I had faced a similar kind of issue. In my case, I was installing WordPress on my local server(/var/www/wp) and one wp-config.php file existed  at /var/www/

And also check for any Symlink.

> Date: Sun, 29 Jul 2012 09:10:55 +0100
> From: aero.maxx.d at gmail.com
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] WordPress install homepage redirecting to	/wp-admin/install.php
> 
> Hello All,
> 
> I have had wordpress installed on a local development machine running 
> fedora for several years now but for some reason just recently when I go 
> to www.domain.dev the url changes to www.domain.dev/wp-admin/install.php
> 
> The contents of the page show what I expected it to show, so the content 
> is correct just the url changes as above and for the life of me I have 
> been unable to debug as to why.
> 
> I have tried installing it into a folder /wordpress as per the codex it 
> still does it, have tried changing the tables from InnoDB to MyISAM as 
> InnoDB is the new default on the mysql server version i'm using.
> 
> When I upload the same files to the live site they work fine no url 
> changing funny business going on so it is something thats local to that 
> machine, but what on earth could be causing this issue any ideas ?
> 
> Where is the code in the wordpress files that check and cause this type 
> of redirect so i can debug this further and fix whats causing the issue.
> 
> Any help would be greatly appreciated, thank you!
> 
> Daniel.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
 		 	   		  

From e at leau.net  Mon Jul 30 10:52:40 2012
From: e at leau.net (Edward de Leau)
Date: Mon, 30 Jul 2012 12:52:40 +0200
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <5014F00F.5020306@gmail.com>
References: <5014F00F.5020306@gmail.com>
Message-ID: <CAEVdKcjtxAdVGYYghx-h6MhfOEsHp0VoRBRrwcEdVwGQoBzqxw@mail.gmail.com>

I am not sure but I think on the wp.org forums the pagination has changed
and contains a bug:

when you are on the second page of a thread the pagination control is on
the right bar and does not respond to anything.

E.g. :
http://wordpress.org/support/topic/plugin-better-wp-security-file-change-notification-sends-2-3-emails/page/2?replies=32

I tried it with firefox and chrome

Then again, i'm a bit tired so maybe its me

From e at leau.net  Mon Jul 30 10:57:08 2012
From: e at leau.net (Edward de Leau)
Date: Mon, 30 Jul 2012 12:57:08 +0200
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <CAEVdKcjtxAdVGYYghx-h6MhfOEsHp0VoRBRrwcEdVwGQoBzqxw@mail.gmail.com>
References: <5014F00F.5020306@gmail.com>
	<CAEVdKcjtxAdVGYYghx-h6MhfOEsHp0VoRBRrwcEdVwGQoBzqxw@mail.gmail.com>
Message-ID: <CAEVdKcjRNstnJWums+2bUyxBtOPKbAbn9Dvq9GMR553G9uJ6WQ@mail.gmail.com>

sorry I replied but not did not change the subject

On Mon, Jul 30, 2012 at 12:52 PM, Edward de Leau <e at leau.net> wrote:

> I am not sure but I think on the wp.org forums the pagination has changed
> and contains a bug:
>
> when you are on the second page of a thread the pagination control is on
> the right bar and does not respond to anything.
>
> E.g. :
> http://wordpress.org/support/topic/plugin-better-wp-security-file-change-notification-sends-2-3-emails/page/2?replies=32
>
> I tried it with firefox and chrome
>
> Then again, i'm a bit tired so maybe its me
>

From e at leau.net  Mon Jul 30 11:08:26 2012
From: e at leau.net (Edward de Leau)
Date: Mon, 30 Jul 2012 13:08:26 +0200
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <CAEVdKcjRNstnJWums+2bUyxBtOPKbAbn9Dvq9GMR553G9uJ6WQ@mail.gmail.com>
References: <5014F00F.5020306@gmail.com>
	<CAEVdKcjtxAdVGYYghx-h6MhfOEsHp0VoRBRrwcEdVwGQoBzqxw@mail.gmail.com>
	<CAEVdKcjRNstnJWums+2bUyxBtOPKbAbn9Dvq9GMR553G9uJ6WQ@mail.gmail.com>
Message-ID: <CAEVdKcjxBjsOEa3RtvWBEiD5+CgJtuGTzxscBWYjsJE-8D-+zA@mail.gmail.com>

and.. it seems to work again

On Mon, Jul 30, 2012 at 12:57 PM, Edward de Leau <e at leau.net> wrote:

> sorry I replied but not did not change the subject
>
>
> On Mon, Jul 30, 2012 at 12:52 PM, Edward de Leau <e at leau.net> wrote:
>
>> I am not sure but I think on the wp.org forums the pagination has
>> changed and contains a bug:
>>
>> when you are on the second page of a thread the pagination control is on
>> the right bar and does not respond to anything.
>>
>> E.g. :
>> http://wordpress.org/support/topic/plugin-better-wp-security-file-change-notification-sends-2-3-emails/page/2?replies=32
>>
>> I tried it with firefox and chrome
>>
>> Then again, i'm a bit tired so maybe its me
>>
>
>

From aero.maxx.d at gmail.com  Mon Jul 30 13:22:42 2012
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Mon, 30 Jul 2012 14:22:42 +0100
Subject: [wp-hackers] WordPress install homepage redirecting to
	/wp-admin/install.php
In-Reply-To: <CALncZpRJZUPb1gSQMq6fAwtWptS5zjvuepeFftdCsy22o8hGQQ@mail.gmail.com>
References: <5014F00F.5020306@gmail.com>
	<CALncZpSFMfGikoXgeTG_ScUd+fnN+GKSA8ye5c430wM9dtA90g@mail.gmail.com>
	<5014F170.8000308@gmail.com>
	<CAJ5Hi2ghyFpszPf_70kFQWrnx-mpiwYewFzM37r457XXbEhUqA@mail.gmail.com>
	<4195284037497583850@unknownmsgid>
	<CALncZpSwiPx8AZ3WymYn02okE8KTNGB-cfFVAzs6B1GaiL-Kig@mail.gmail.com>
	<CAMGJ0yxwnBx0ttVf1DVm9RSaEHRN=RkQKr0YA7Y58wHBhENc-w@mail.gmail.com>
	<5015B0A4.8040606@gmail.com>
	<CALncZpRJZUPb1gSQMq6fAwtWptS5zjvuepeFftdCsy22o8hGQQ@mail.gmail.com>
Message-ID: <50168AA2.5070107@gmail.com>

I cleared the cache and it seems to of fixed the issue.

I don't have a link as its locally hosted in my house.

But thank you all for the suggestions and the help.

On 29/07/2012 23:02, Almog Baku wrote:
> Try to clear caches..
> Also reset to default theme, and disable all plugins.
>
> And do you have any link?
>
>
> ?????? ??? ???, 30 ????? 2012, Aero Maxx ???:
>
>> I'm connecting as root to the database, no obscure users with odd
>> permissions.
>>
>> On 29/07/2012 21:26, Muhammad Ali wrote:
>>
>> What about the MySQL connection, are you connecting as root or have you set
>> up a different user with odd permissions?
>>
>> On 29 July 2012 21:11, Almog Baku <almog.baku at gmail.com> wrote:
>>
>>   Did you try fresh installation?
>>
>> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>>
>>   Nothing in my wp-config.php file the same file works on the live site
>> with no redirect funny business.
>>
>> No rewrite rules in my apache config.
>>
>> On 29 Jul 2012, at 09:21, Daniel Fenn <danielx386 at gmail.com> wrote:
>>
>>   Is there anything in your wp-config.php file? Also is there any
>> rewrites rules in your apache configuration file?
>>
>> On 7/29/12, Aero Maxx <aero.maxx.d at gmail.com> wrote:
>>
>> I have done there fine, I cant see anything majorly wrong with them.
>>
>> I have even deleted the whole database and all the files in the root,
>> and copied all files from the zip to the root done the wpconfig again,
>> and basically started again from scratch with a fresh install and it
>> still does it.
>>
>> On 29/07/2012 09:14, Almog Baku wrote:
>>
>> You may try to check your htaccess files:
>> /.htaccess
>> /wp-admin/.htaccess
>>
>> ?????? ??? ?????, 29 ????? 2012, Aero Maxx ???:
>>
>>   Hello All,
>>
>> I have had wordpress installed on a local development machine
>>
>> running
>>
>> fedora for several years now but for some reason just recently when
>>
>> I
>>
>> go
>>
>> to
>> www.domain.dev the url changes to
>>
>> www.domain.dev/wp-admin/****install.php
>>
>> The contents of the page show what I expected it to show, so the
>>
>> content
>>
>> is correct just the url changes as above and for the life of me I
>>
>> have
>>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wp-hackers at thecodecave.com  Mon Jul 30 15:50:18 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Mon, 30 Jul 2012 11:50:18 -0400
Subject: [wp-hackers] opcode caching + page caching plugin
In-Reply-To: <CAGAEFzJR-vpAz8M=RNX99bhnYYc498PtJ+29k_5WVxEPoZLQkQ@mail.gmail.com>
References: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
	<CAGAEFz+jhqc6u1hdM0J371h=TgLyahvd2-N-XKUMZXNjEjKYug@mail.gmail.com>
	<CAGEuVU2T7zqYOkH0rQqvj6AS3jmczpVn+L9d_JH67wUFeND=+Q@mail.gmail.com>
	<CAGAEFzJR-vpAz8M=RNX99bhnYYc498PtJ+29k_5WVxEPoZLQkQ@mail.gmail.com>
Message-ID: <5016AD3A.5020908@thecodecave.com>

On 7/29/2012 6:13 PM, Jeff Waugh wrote:
> APC opcode caching: No-brainer. Only one thing to worry about: Making 
> sure there's enough shared memory allocated for your code.

Just to re-emphasize this, I've had APC increase load time on systems 
that had a memory tight environment when the server was under load.  The 
only thing I can figure is that there was a lot of swapping going on as 
things fought to stay resident.

So always test your assumptions against your final results.  The numbers 
don't lie.

Also I should go back and revisit that server. It has more memory now... 
Thanks for the reminder!

Brian Layman
http://eHermitsInc.com



From steve at sltaylor.co.uk  Mon Jul 30 20:43:26 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Mon, 30 Jul 2012 21:43:26 +0100
Subject: [wp-hackers] opcode caching + page caching plugin
In-Reply-To: <5016AD3A.5020908@thecodecave.com>
References: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
	<CAGAEFz+jhqc6u1hdM0J371h=TgLyahvd2-N-XKUMZXNjEjKYug@mail.gmail.com>
	<CAGEuVU2T7zqYOkH0rQqvj6AS3jmczpVn+L9d_JH67wUFeND=+Q@mail.gmail.com>
	<CAGAEFzJR-vpAz8M=RNX99bhnYYc498PtJ+29k_5WVxEPoZLQkQ@mail.gmail.com>
	<5016AD3A.5020908@thecodecave.com>
Message-ID: <CAGEuVU1J=1LaoRf+vA=wXgYkwmik0OiwyXis_QGg_apW=RfRpw@mail.gmail.com>

Many thanks for all the info and tips guys, very useful indeed! :)


On 30 July 2012 16:50, Brian Layman <wp-hackers at thecodecave.com> wrote:
> On 7/29/2012 6:13 PM, Jeff Waugh wrote:
>>
>> APC opcode caching: No-brainer. Only one thing to worry about: Making sure
>> there's enough shared memory allocated for your code.
>
>
> Just to re-emphasize this, I've had APC increase load time on systems that
> had a memory tight environment when the server was under load.  The only
> thing I can figure is that there was a lot of swapping going on as things
> fought to stay resident.
>
> So always test your assumptions against your final results.  The numbers
> don't lie.
>
> Also I should go back and revisit that server. It has more memory now...
> Thanks for the reminder!
>
> Brian Layman
> http://eHermitsInc.com
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From almog.baku at gmail.com  Mon Jul 30 21:06:11 2012
From: almog.baku at gmail.com (Almog Baku)
Date: Tue, 31 Jul 2012 00:06:11 +0300
Subject: [wp-hackers] opcode caching + page caching plugin
In-Reply-To: <CAGEuVU1J=1LaoRf+vA=wXgYkwmik0OiwyXis_QGg_apW=RfRpw@mail.gmail.com>
References: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
	<CAGAEFz+jhqc6u1hdM0J371h=TgLyahvd2-N-XKUMZXNjEjKYug@mail.gmail.com>
	<CAGEuVU2T7zqYOkH0rQqvj6AS3jmczpVn+L9d_JH67wUFeND=+Q@mail.gmail.com>
	<CAGAEFzJR-vpAz8M=RNX99bhnYYc498PtJ+29k_5WVxEPoZLQkQ@mail.gmail.com>
	<5016AD3A.5020908@thecodecave.com>
	<CAGEuVU1J=1LaoRf+vA=wXgYkwmik0OiwyXis_QGg_apW=RfRpw@mail.gmail.com>
Message-ID: <CALncZpQ7HSn1O0SJkCcoZFAB-FyP81XdH-1Fkca-dYArW1RjdQ@mail.gmail.com>

Excuse me for the off-topic.. I've just cant ignore it.. Your name is Steve
Taylor? Like the soloist of Aerosmith? :-) :-P

~ Almog

?????? ??? ???, 30 ????? 2012, Steve Taylor ???:

> Many thanks for all the info and tips guys, very useful indeed! :)
>
>
> On 30 July 2012 16:50, Brian Layman <wp-hackers at thecodecave.com<javascript:;>>
> wrote:
> > On 7/29/2012 6:13 PM, Jeff Waugh wrote:
> >>
> >> APC opcode caching: No-brainer. Only one thing to worry about: Making
> sure
> >> there's enough shared memory allocated for your code.
> >
> >
> > Just to re-emphasize this, I've had APC increase load time on systems
> that
> > had a memory tight environment when the server was under load.  The only
> > thing I can figure is that there was a lot of swapping going on as things
> > fought to stay resident.
> >
> > So always test your assumptions against your final results.  The numbers
> > don't lie.
> >
> > Also I should go back and revisit that server. It has more memory now...
> > Thanks for the reminder!
> >
> > Brian Layman
> > http://eHermitsInc.com
> >
> >
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From scott.c.taylor at mac.com  Mon Jul 30 21:11:47 2012
From: scott.c.taylor at mac.com (Scott Taylor)
Date: Mon, 30 Jul 2012 17:11:47 -0400
Subject: [wp-hackers] opcode caching + page caching plugin
In-Reply-To: <CALncZpQ7HSn1O0SJkCcoZFAB-FyP81XdH-1Fkca-dYArW1RjdQ@mail.gmail.com>
References: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
	<CAGAEFz+jhqc6u1hdM0J371h=TgLyahvd2-N-XKUMZXNjEjKYug@mail.gmail.com>
	<CAGEuVU2T7zqYOkH0rQqvj6AS3jmczpVn+L9d_JH67wUFeND=+Q@mail.gmail.com>
	<CAGAEFzJR-vpAz8M=RNX99bhnYYc498PtJ+29k_5WVxEPoZLQkQ@mail.gmail.com>
	<5016AD3A.5020908@thecodecave.com>
	<CAGEuVU1J=1LaoRf+vA=wXgYkwmik0OiwyXis_QGg_apW=RfRpw@mail.gmail.com>
	<CALncZpQ7HSn1O0SJkCcoZFAB-FyP81XdH-1Fkca-dYArW1RjdQ@mail.gmail.com>
Message-ID: <537737FF57B6425CA89E6AA2AB4A43C6@mac.com>

Steven Tyler is the lead singer of Aerosmith

--  
Scott Taylor
Musician / Software Engineer
160 West End Ave #2H
New York, NY 10023


On Monday, July 30, 2012 at 5:06 PM, Almog Baku wrote:

> Excuse me for the off-topic.. I've just cant ignore it.. Your name is Steve
> Taylor? Like the soloist of Aerosmith? :-) :-P
>  
> ~ Almog
>  
> ?????? ??? ???, 30 ????? 2012, Steve Taylor ???:
>  
> > Many thanks for all the info and tips guys, very useful indeed! :)
> >  
> >  
> > On 30 July 2012 16:50, Brian Layman <wp-hackers at thecodecave.com (mailto:wp-hackers at thecodecave.com)<javascript:;>>
> > wrote:
> > > On 7/29/2012 6:13 PM, Jeff Waugh wrote:
> > > >  
> > > > APC opcode caching: No-brainer. Only one thing to worry about: Making
> > sure
> > > > there's enough shared memory allocated for your code.
> > >  
> > >  
> > >  
> > > Just to re-emphasize this, I've had APC increase load time on systems
> > that
> > > had a memory tight environment when the server was under load. The only
> > > thing I can figure is that there was a lot of swapping going on as things
> > > fought to stay resident.
> > >  
> > > So always test your assumptions against your final results. The numbers
> > > don't lie.
> > >  
> > > Also I should go back and revisit that server. It has more memory now...
> > > Thanks for the reminder!
> > >  
> > > Brian Layman
> > > http://eHermitsInc.com
> > >  
> > >  
> > >  
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com) <javascript:;>
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >  
> >  
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com) <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >  
>  
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com)
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>  
>  



From steve at sltaylor.co.uk  Mon Jul 30 21:22:01 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Mon, 30 Jul 2012 22:22:01 +0100
Subject: [wp-hackers] opcode caching + page caching plugin
In-Reply-To: <537737FF57B6425CA89E6AA2AB4A43C6@mac.com>
References: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
	<CAGAEFz+jhqc6u1hdM0J371h=TgLyahvd2-N-XKUMZXNjEjKYug@mail.gmail.com>
	<CAGEuVU2T7zqYOkH0rQqvj6AS3jmczpVn+L9d_JH67wUFeND=+Q@mail.gmail.com>
	<CAGAEFzJR-vpAz8M=RNX99bhnYYc498PtJ+29k_5WVxEPoZLQkQ@mail.gmail.com>
	<5016AD3A.5020908@thecodecave.com>
	<CAGEuVU1J=1LaoRf+vA=wXgYkwmik0OiwyXis_QGg_apW=RfRpw@mail.gmail.com>
	<CALncZpQ7HSn1O0SJkCcoZFAB-FyP81XdH-1Fkca-dYArW1RjdQ@mail.gmail.com>
	<537737FF57B6425CA89E6AA2AB4A43C6@mac.com>
Message-ID: <CAGEuVU03H0NeWXRfXtm6NLLcC843ty_f5X0LN=eYsJ1vOOJKiw@mail.gmail.com>

Thanks Scott, yes, it's a slightly different surname.

I did once get an email through my work site from a besotted Greek
teenage fan who'd fallen in love with Steve Tyler on American Idol.
Very odd! There's a small but obviously-not-Steve-Tyler photo of me in
the sidebar of every page explaining how I build WordPress sites.
Maybe she thought Steve Tyler had a sideline in WP dev going? ;-)


On 30 July 2012 22:11, Scott Taylor <scott.c.taylor at mac.com> wrote:
> Steven Tyler is the lead singer of Aerosmith
>
> --
> Scott Taylor
> Musician / Software Engineer
> 160 West End Ave #2H
> New York, NY 10023
>
>
> On Monday, July 30, 2012 at 5:06 PM, Almog Baku wrote:
>
>> Excuse me for the off-topic.. I've just cant ignore it.. Your name is Steve
>> Taylor? Like the soloist of Aerosmith? :-) :-P
>>
>> ~ Almog
>>
>> ?????? ??? ???, 30 ????? 2012, Steve Taylor ???:
>>
>> > Many thanks for all the info and tips guys, very useful indeed! :)
>> >
>> >
>> > On 30 July 2012 16:50, Brian Layman <wp-hackers at thecodecave.com (mailto:wp-hackers at thecodecave.com)<javascript:;>>
>> > wrote:
>> > > On 7/29/2012 6:13 PM, Jeff Waugh wrote:
>> > > >
>> > > > APC opcode caching: No-brainer. Only one thing to worry about: Making
>> > sure
>> > > > there's enough shared memory allocated for your code.
>> > >
>> > >
>> > >
>> > > Just to re-emphasize this, I've had APC increase load time on systems
>> > that
>> > > had a memory tight environment when the server was under load. The only
>> > > thing I can figure is that there was a lot of swapping going on as things
>> > > fought to stay resident.
>> > >
>> > > So always test your assumptions against your final results. The numbers
>> > > don't lie.
>> > >
>> > > Also I should go back and revisit that server. It has more memory now...
>> > > Thanks for the reminder!
>> > >
>> > > Brian Layman
>> > > http://eHermitsInc.com
>> > >
>> > >
>> > >
>> > > _______________________________________________
>> > > wp-hackers mailing list
>> > > wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com) <javascript:;>
>> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> > >
>> >
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com) <javascript:;>
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com (mailto:wp-hackers at lists.automattic.com)
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp-hackers at thecodecave.com  Mon Jul 30 22:44:31 2012
From: wp-hackers at thecodecave.com (Brian Layman)
Date: Mon, 30 Jul 2012 18:44:31 -0400
Subject: [wp-hackers] opcode caching + page caching plugin
In-Reply-To: <CAGEuVU03H0NeWXRfXtm6NLLcC843ty_f5X0LN=eYsJ1vOOJKiw@mail.gmail.com>
References: <CAGEuVU3FbXxNYFnK3bhj69zkJFe0+9oG7TYTkWWh2Ukxq=Lu6Q@mail.gmail.com>
	<CAGAEFz+jhqc6u1hdM0J371h=TgLyahvd2-N-XKUMZXNjEjKYug@mail.gmail.com>
	<CAGEuVU2T7zqYOkH0rQqvj6AS3jmczpVn+L9d_JH67wUFeND=+Q@mail.gmail.com>
	<CAGAEFzJR-vpAz8M=RNX99bhnYYc498PtJ+29k_5WVxEPoZLQkQ@mail.gmail.com>
	<5016AD3A.5020908@thecodecave.com>
	<CAGEuVU1J=1LaoRf+vA=wXgYkwmik0OiwyXis_QGg_apW=RfRpw@mail.gmail.com>
	<CALncZpQ7HSn1O0SJkCcoZFAB-FyP81XdH-1Fkca-dYArW1RjdQ@mail.gmail.com>
	<537737FF57B6425CA89E6AA2AB4A43C6@mac.com>
	<CAGEuVU03H0NeWXRfXtm6NLLcC843ty_f5X0LN=eYsJ1vOOJKiw@mail.gmail.com>
Message-ID: <50170E4F.8050604@thecodecave.com>

Besides, Steve Taylor is "the GodFather of Christian Rock" ( 
https://twitter.com/theperfectfoil ) and probably my favorite musician.  
He's now a director and producer of movies (most recently Blue Like 
Jazz) and does some song writing for other people like Big Idea with 
their Veggie Tales movies.

Completely different guy, but I do a double take every-single-time Steve 
replies to the forum.  Now that I've finally said something about it, 
maybe it will quit catching my eye!

Brian Layman

On 7/30/2012 5:22 PM, Steve Taylor wrote:
> Thanks Scott, yes, it's a slightly different surname.
>
> I did once get an email through my work site from a besotted Greek
> teenage fan who'd fallen in love with Steve Tyler on American Idol.
> Very odd! There's a small but obviously-not-Steve-Tyler photo of me in
> the sidebar of every page explaining how I build WordPress sites.
> Maybe she thought Steve Tyler had a sideline in WP dev going? ;-)
>
>
>


From will.davis at gmail.com  Tue Jul 31 01:03:31 2012
From: will.davis at gmail.com (William P. Davis)
Date: Mon, 30 Jul 2012 21:03:31 -0400
Subject: [wp-hackers] Possible bug with HTTP API using cookies
Message-ID: <CAJmHdUL4v3A8Vn71CYaU6Lz0Eaqxgx+wR=b-SWwnUZLb8wR6Kw@mail.gmail.com>

I'm using the HTTP api to get cookie information and then pass it through
in another request. The code works fine on two servers but, as luck would
have it, not on my production server. They all have CURL installed.

The code is:

$cookie = wp_remote_retrieve_headers( wp_remote_post( 'http://example.com'
) );
$body = wp_remote_retrieve_body( wp_remote_post( 'http://example.com',
array( 'body' => $args, 'cookies' => array( 'cookie' => $cookie[
'set-cookie' ] ) ) ) );

And the error:
Fatal error: Call to a member function getHeaderValue() on a non-object in
/var/www/bangordailynews.com/htdocs/wp-includes/class-http.php on line 420

I wanted to see if anybody else can replicate this disparity before I
submit a bug report to trac.

Will

From wordpress at dd32.id.au  Tue Jul 31 04:00:59 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Tue, 31 Jul 2012 14:00:59 +1000
Subject: [wp-hackers] Possible bug with HTTP API using cookies
In-Reply-To: <CAJmHdUL4v3A8Vn71CYaU6Lz0Eaqxgx+wR=b-SWwnUZLb8wR6Kw@mail.gmail.com>
References: <CAJmHdUL4v3A8Vn71CYaU6Lz0Eaqxgx+wR=b-SWwnUZLb8wR6Kw@mail.gmail.com>
Message-ID: <CAL4EHfkAxbOEaewyQWEtn0RaYQL965jaehTgGScL1DUoCTrnmQ@mail.gmail.com>

The Cookie field expects you to pass a WP_HTTP_Cookie instance, or
array of instances, not a set-header header.

The best bet is something like this:

$response = wp_remote_post(...);
$response2 = wp_remote_post( ..... 'cookie' => $response['cookies'] ) );

I haven't tested that, but that's the gist of what you should be doing.

On 31 July 2012 11:03, William P. Davis <will.davis at gmail.com> wrote:
> I'm using the HTTP api to get cookie information and then pass it through
> in another request. The code works fine on two servers but, as luck would
> have it, not on my production server. They all have CURL installed.
>
> The code is:
>
> $cookie = wp_remote_retrieve_headers( wp_remote_post( 'http://example.com'
> ) );
> $body = wp_remote_retrieve_body( wp_remote_post( 'http://example.com',
> array( 'body' => $args, 'cookies' => array( 'cookie' => $cookie[
> 'set-cookie' ] ) ) ) );
>
> And the error:
> Fatal error: Call to a member function getHeaderValue() on a non-object in
> /var/www/bangordailynews.com/htdocs/wp-includes/class-http.php on line 420
>
> I wanted to see if anybody else can replicate this disparity before I
> submit a bug report to trac.
>
> Will
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From lists at rotorised.com  Tue Jul 31 04:02:45 2012
From: lists at rotorised.com (Ryan McCue)
Date: Tue, 31 Jul 2012 14:02:45 +1000
Subject: [wp-hackers] Possible bug with HTTP API using cookies
In-Reply-To: <CAL4EHfkAxbOEaewyQWEtn0RaYQL965jaehTgGScL1DUoCTrnmQ@mail.gmail.com>
References: <CAJmHdUL4v3A8Vn71CYaU6Lz0Eaqxgx+wR=b-SWwnUZLb8wR6Kw@mail.gmail.com>
	<CAL4EHfkAxbOEaewyQWEtn0RaYQL965jaehTgGScL1DUoCTrnmQ@mail.gmail.com>
Message-ID: <501758E5.5080602@rotorised.com>

Dion Hulse (dd32) wrote:
> The Cookie field expects you to pass a WP_HTTP_Cookie instance, or
> array of instances, not a set-header header.

Sounds like it should be fixed to do this automatically. Patch anyone? ;)

-- 
Ryan McCue
<http://ryanmccue.info/>

From wordpress at dd32.id.au  Tue Jul 31 04:07:09 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Tue, 31 Jul 2012 14:07:09 +1000
Subject: [wp-hackers] Possible bug with HTTP API using cookies
In-Reply-To: <501758E5.5080602@rotorised.com>
References: <CAJmHdUL4v3A8Vn71CYaU6Lz0Eaqxgx+wR=b-SWwnUZLb8wR6Kw@mail.gmail.com>
	<CAL4EHfkAxbOEaewyQWEtn0RaYQL965jaehTgGScL1DUoCTrnmQ@mail.gmail.com>
	<501758E5.5080602@rotorised.com>
Message-ID: <CAL4EHfkNhRLg7s0e8jvHQsZR3vG8OOKv3rsGgK7dPRrwg9PxMw@mail.gmail.com>

Well... Considering it already creates the Cookie class instances for
you, and gives you a parsed form of them, you shouldn't ever really
need to handle a raw cookie string, infact, I think that was the
original point of the classes.

If you want to send a raw cookie string, send them using the header options..

On 31 July 2012 14:02, Ryan McCue <lists at rotorised.com> wrote:
> Dion Hulse (dd32) wrote:
>> The Cookie field expects you to pass a WP_HTTP_Cookie instance, or
>> array of instances, not a set-header header.
>
> Sounds like it should be fixed to do this automatically. Patch anyone? ;)
>
> --
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From will.davis at gmail.com  Tue Jul 31 13:36:02 2012
From: will.davis at gmail.com (William P. Davis)
Date: Tue, 31 Jul 2012 09:36:02 -0400
Subject: [wp-hackers] Possible bug with HTTP API using cookies
In-Reply-To: <CAL4EHfkNhRLg7s0e8jvHQsZR3vG8OOKv3rsGgK7dPRrwg9PxMw@mail.gmail.com>
References: <CAJmHdUL4v3A8Vn71CYaU6Lz0Eaqxgx+wR=b-SWwnUZLb8wR6Kw@mail.gmail.com>
	<CAL4EHfkAxbOEaewyQWEtn0RaYQL965jaehTgGScL1DUoCTrnmQ@mail.gmail.com>
	<501758E5.5080602@rotorised.com>
	<CAL4EHfkNhRLg7s0e8jvHQsZR3vG8OOKv3rsGgK7dPRrwg9PxMw@mail.gmail.com>
Message-ID: <CAJmHdU+8GCQLHQzP4dpsfq_uf+-f_duStvWhuijF+QykZBirLQ@mail.gmail.com>

I've tried that before. When I pass the full $response[ 'cookies' ] array
to wp_remote_post no cookies are passed at all. When I pass just the
initial object in the $response[ 'cookies' ] array I get Catchable fatal
error: Object of class WP_Http_Cookie could not be converted to string in
/Applications/MAMP/htdocs/304/wp-includes/class-http.php on line 419.

Will

The best bet is something like this:
$response = wp_remote_post(...);
$response2 = wp_remote_post( ..... 'cookie' => $response['cookies'] ) );

From yani.iliev at cspath.com  Tue Jul 31 22:57:04 2012
From: yani.iliev at cspath.com (Yanislav Iliev)
Date: Wed, 1 Aug 2012 01:57:04 +0300
Subject: [wp-hackers] Header image in WordPress plugin repository
Message-ID: <4DE08176-B394-42E4-ADAD-377F2FA396CC@cspath.com>

Hi everyone,

How long does it usually take for a new header image to appear on WordPress plugin repository?
I am talking about the banner-772x250 image located in assets folder.

I guess there is a caching system (varnish) that cached the image. Will converting the image from jpeg to png and thus changing the 
filename force the cache to be emptied?

Thanks!
-Yani

From mike at newclarity.net  Tue Jul 31 23:41:02 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 31 Jul 2012 19:41:02 -0400
Subject: [wp-hackers] Header image in WordPress plugin repository
In-Reply-To: <4DE08176-B394-42E4-ADAD-377F2FA396CC@cspath.com>
References: <4DE08176-B394-42E4-ADAD-377F2FA396CC@cspath.com>
Message-ID: <F77A2019-5B47-48D2-9545-47C19801FD40@newclarity.net>

On Jul 31, 2012, at 6:57 PM, Yanislav Iliev wrote:
> How long does it usually take for a new header image to appear on WordPress plugin repository?
> I am talking about the banner-772x250 image located in assets folder.

Should be pretty quick. 

Did you put into an assets directory on peer with trunk, or inside trunk?  It needs to be outside of your plugin and at same level as trunk, not part of the plugin. I was reminded of this over the weekend when I updated a plugin that someone else on our team wrote.  HTH.

-Mike

From ipstenu at ipstenu.org  Tue Jul 31 23:46:01 2012
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Tue, 31 Jul 2012 18:46:01 -0500
Subject: [wp-hackers] Header image in WordPress plugin repository
In-Reply-To: <F77A2019-5B47-48D2-9545-47C19801FD40@newclarity.net>
References: <4DE08176-B394-42E4-ADAD-377F2FA396CC@cspath.com>
	<F77A2019-5B47-48D2-9545-47C19801FD40@newclarity.net>
Message-ID: <FE6FA79B-4215-4312-AD7C-36440664A7FB@ipstenu.org>

It needs to be in /assets actually

/trunk/
/tags/
/assets/



----
Mika A Epstein (aka Ipstenu)
http://ipstenu.org | http://halfelf.org

On 31 Jul 2012, at 6:41:02PM, Mike Schinkel <mike at newclarity.net> wrote:

> On Jul 31, 2012, at 6:57 PM, Yanislav Iliev wrote:
>> How long does it usually take for a new header image to appear on WordPress plugin repository?
>> I am talking about the banner-772x250 image located in assets folder.
> 
> Should be pretty quick. 
> 
> Did you put into an assets directory on peer with trunk, or inside trunk?  It needs to be outside of your plugin and at same level as trunk, not part of the plugin. I was reminded of this over the weekend when I updated a plugin that someone else on our team wrote.  HTH.
> 
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From yani.iliev at cspath.com  Tue Jul 31 23:50:19 2012
From: yani.iliev at cspath.com (Yanislav Iliev)
Date: Wed, 1 Aug 2012 02:50:19 +0300
Subject: [wp-hackers] Header image in WordPress plugin repository
In-Reply-To: <F77A2019-5B47-48D2-9545-47C19801FD40@newclarity.net>
References: <4DE08176-B394-42E4-ADAD-377F2FA396CC@cspath.com>
	<F77A2019-5B47-48D2-9545-47C19801FD40@newclarity.net>
Message-ID: <4C08B323-B922-4C6D-9BB5-BBF7B3D1390E@cspath.com>


On Aug 1, 2012, at 2:41 AM, Mike Schinkel wrote:

> On Jul 31, 2012, at 6:57 PM, Yanislav Iliev wrote:
>> How long does it usually take for a new header image to appear on WordPress plugin repository?
>> I am talking about the banner-772x250 image located in assets folder.
> 
> Should be pretty quick. 
> 
> Did you put into an assets directory on peer with trunk, or inside trunk?  It needs to be outside of your plugin and at same level as trunk, not part of the plugin. I was reminded of this over the weekend when I updated a plugin that someone else on our team wrote.  HTH.
> 
> -Mike

Thanks Mike!

It's really a strange issue. 
When I access the header image directly: http://s-plugins.wordpress.org/all-in-one-event-calendar/assets/banner-772x250.jpg
it displays the old logo - (thenly) - it cannot be local cache as I've tried it on a fresh EC2 instance (wget url) and on a couple local computers - the result is always the same
The interesting part is that when I checkout the repository: svn co http://s-plugins.wordpress.org/all-in-one-event-calendar/assets/ 
the image in that repository is the new logo?
Very strange :) - the only explanation that I have is that it is some sort of a web cacher like varnish that is caching the logo on s-plugins.wordpress.org:80

My repository structure is:
/
/assets/banner-772x250.jpg
/branches/
/tags/
/trunk/

Thank you for spending your time on this!
-Yani


> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


