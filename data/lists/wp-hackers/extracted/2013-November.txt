From halukkaramete at gmail.com  Mon Nov  4 11:34:08 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Mon, 4 Nov 2013 03:34:08 -0800
Subject: [wp-hackers] from time to time, publish/update becomes disabled.
Message-ID: <CAHERW=2T-ssUvWjxXykOYjrKzS+qqa8GeLQ=DAiPbUfy9FGyHA@mail.gmail.com>

Anybody know what triggers the "disabled" attribute to be enforced to make
the dashboard's PUBLISH / UPDATE button?

This is happening on 3.7 with chrome & firebox when working on my
localhost.


for a weird reason, I keep getting that button getting disabled which is
about %20 to %30 of  the time.

Every time, that happens, I go to the chrome developer tools by right
clicking on the blue publish(or update) button whichever the case may be,
and selecting the "inspect element" option and then locate & physically
remove the 'disabled' attribute by editing the generated HTML. Only and
only then, the button becomes clickable.

The generated code by WordPress is normally this;

<input name="save" type="submit" class="button button-primary button-large"
id="publish" accesskey="p" value="Update">

but from time to time, it becomes

<input name="save" type="submit" class="button button-primary button-large"
id="publish" accesskey="p" value="Update" disabled="">

which is usually after 1 min or so.

I cannot find any trace of any warning/notice/error under the developer
console when this happens.

does anyone know what condition inserts the 'disabled' in there?

From danielx386 at gmail.com  Mon Nov  4 12:25:35 2013
From: danielx386 at gmail.com (Daniel)
Date: Mon, 4 Nov 2013 23:25:35 +1100
Subject: [wp-hackers] from time to time, publish/update becomes disabled.
In-Reply-To: <CAHERW=2T-ssUvWjxXykOYjrKzS+qqa8GeLQ=DAiPbUfy9FGyHA@mail.gmail.com>
References: <CAHERW=2T-ssUvWjxXykOYjrKzS+qqa8GeLQ=DAiPbUfy9FGyHA@mail.gmail.com>
Message-ID: <CAJ5Hi2gD789urpXzpMv1_RcZPmbPWxLt5GsscWg7z0dDZE83BA@mail.gmail.com>

Does it auto save the post or not? That the only thing that I can think of

On 11/4/13, Haluk Karamete <halukkaramete at gmail.com> wrote:
> Anybody know what triggers the "disabled" attribute to be enforced to make
> the dashboard's PUBLISH / UPDATE button?
>
> This is happening on 3.7 with chrome & firebox when working on my
> localhost.
>
>
> for a weird reason, I keep getting that button getting disabled which is
> about %20 to %30 of  the time.
>
> Every time, that happens, I go to the chrome developer tools by right
> clicking on the blue publish(or update) button whichever the case may be,
> and selecting the "inspect element" option and then locate & physically
> remove the 'disabled' attribute by editing the generated HTML. Only and
> only then, the button becomes clickable.
>
> The generated code by WordPress is normally this;
>
> <input name="save" type="submit" class="button button-primary button-large"
> id="publish" accesskey="p" value="Update">
>
> but from time to time, it becomes
>
> <input name="save" type="submit" class="button button-primary button-large"
> id="publish" accesskey="p" value="Update" disabled="">
>
> which is usually after 1 min or so.
>
> I cannot find any trace of any warning/notice/error under the developer
> console when this happens.
>
> does anyone know what condition inserts the 'disabled' in there?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


-- 
Regards,
Daniel Fenn

From dragonfly at dragonflyeye.net  Mon Nov  4 12:28:09 2013
From: dragonfly at dragonflyeye.net (Thomas Belknap)
Date: Mon, 4 Nov 2013 07:28:09 -0500
Subject: [wp-hackers] from time to time, publish/update becomes disabled.
In-Reply-To: <CAJ5Hi2gD789urpXzpMv1_RcZPmbPWxLt5GsscWg7z0dDZE83BA@mail.gmail.com>
References: <CAHERW=2T-ssUvWjxXykOYjrKzS+qqa8GeLQ=DAiPbUfy9FGyHA@mail.gmail.com>
 <CAJ5Hi2gD789urpXzpMv1_RcZPmbPWxLt5GsscWg7z0dDZE83BA@mail.gmail.com>
Message-ID: <CAEamYWR_KGaksaec0yvyu9iB7Zjpoq7_RemE_pttbQLj3wkfxg@mail.gmail.com>

When WordPress autosaves revisions, for the split second it takes to update
the information, the publish button becomes "greyed out." But this
shouldn't happen over extended periods of time. If it does, I'd want to
start looking into plugins that filter on save.


On Mon, Nov 4, 2013 at 7:25 AM, Daniel <danielx386 at gmail.com> wrote:

> Does it auto save the post or not? That the only thing that I can think of
>
> On 11/4/13, Haluk Karamete <halukkaramete at gmail.com> wrote:
> > Anybody know what triggers the "disabled" attribute to be enforced to
> make
> > the dashboard's PUBLISH / UPDATE button?
> >
> > This is happening on 3.7 with chrome & firebox when working on my
> > localhost.
> >
> >
> > for a weird reason, I keep getting that button getting disabled which is
> > about %20 to %30 of  the time.
> >
> > Every time, that happens, I go to the chrome developer tools by right
> > clicking on the blue publish(or update) button whichever the case may be,
> > and selecting the "inspect element" option and then locate & physically
> > remove the 'disabled' attribute by editing the generated HTML. Only and
> > only then, the button becomes clickable.
> >
> > The generated code by WordPress is normally this;
> >
> > <input name="save" type="submit" class="button button-primary
> button-large"
> > id="publish" accesskey="p" value="Update">
> >
> > but from time to time, it becomes
> >
> > <input name="save" type="submit" class="button button-primary
> button-large"
> > id="publish" accesskey="p" value="Update" disabled="">
> >
> > which is usually after 1 min or so.
> >
> > I cannot find any trace of any warning/notice/error under the developer
> > console when this happens.
> >
> > does anyone know what condition inserts the 'disabled' in there?
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> --
> Regards,
> Daniel Fenn
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Tom Belknap
Owner/Editor, DragonFlyEye.Net
Join me:

   - *Inbox:* http://dragonflyeye.net/subscribe
   - *Web*: http://dragonflyeye.net/
   - *Facebook*: https://www.facebook.com/DragonFlyEye.Net
   - *Twitter*: https://twitter.com/dragonflyeye
   - *Google*: https://plus.google.com/u/1/103251482414903117843/posts

From halukkaramete at gmail.com  Mon Nov  4 14:08:40 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Mon, 4 Nov 2013 06:08:40 -0800
Subject: [wp-hackers] from time to time, publish/update becomes disabled.
In-Reply-To: <CAJ5Hi2gD789urpXzpMv1_RcZPmbPWxLt5GsscWg7z0dDZE83BA@mail.gmail.com>
References: <CAHERW=2T-ssUvWjxXykOYjrKzS+qqa8GeLQ=DAiPbUfy9FGyHA@mail.gmail.com>
 <CAJ5Hi2gD789urpXzpMv1_RcZPmbPWxLt5GsscWg7z0dDZE83BA@mail.gmail.com>
Message-ID: <CAHERW=1NS=thgC+S=HoijwY1B_PWyP=9CH7Tr1GhhxVkufVsfA@mail.gmail.com>

>
> Does it auto save the post or not? That the only thing that I can think of


It does auto save Daniel. In fact, before I figured out the
inspect-element-and-then-remove-the-disabled-attr trick, I used the use the
autosaved revisions to recover my keystrokes.
But your comment did stimulate my brain. After your comment, I did realize
that this might have to do with the autosave process.

So this time, I waited for the sucker to go disabled on me again,... while
keeping my eyes on that status line,...  I had to answer my kids again who
thought their dad went weirdo again with that laser focus look at the
screen for a while :) But the wait paid off; I observed that the blue
button goes disabled the moment it auto saves its first revision!

And at that time, the status line gets stuck at "Saving Draft? Last edited
by adminx on November 4, 2013 at 2:29 am"

for the time being, I am gonna extend the autosave frequency to a more
bearable level,
Later, when/if I find out what is it that  causes that behavior, I'll share
with you.

thx


On Mon, Nov 4, 2013 at 4:25 AM, Daniel <danielx386 at gmail.com> wrote:

> Does it auto save the post or not? That the only thing that I can think of
>
> On 11/4/13, Haluk Karamete <halukkaramete at gmail.com> wrote:
> > Anybody know what triggers the "disabled" attribute to be enforced to
> make
> > the dashboard's PUBLISH / UPDATE button?
> >
> > This is happening on 3.7 with chrome & firebox when working on my
> > localhost.
> >
> >
> > for a weird reason, I keep getting that button getting disabled which is
> > about %20 to %30 of  the time.
> >
> > Every time, that happens, I go to the chrome developer tools by right
> > clicking on the blue publish(or update) button whichever the case may be,
> > and selecting the "inspect element" option and then locate & physically
> > remove the 'disabled' attribute by editing the generated HTML. Only and
> > only then, the button becomes clickable.
> >
> > The generated code by WordPress is normally this;
> >
> > <input name="save" type="submit" class="button button-primary
> button-large"
> > id="publish" accesskey="p" value="Update">
> >
> > but from time to time, it becomes
> >
> > <input name="save" type="submit" class="button button-primary
> button-large"
> > id="publish" accesskey="p" value="Update" disabled="">
> >
> > which is usually after 1 min or so.
> >
> > I cannot find any trace of any warning/notice/error under the developer
> > console when this happens.
> >
> > does anyone know what condition inserts the 'disabled' in there?
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> --
> Regards,
> Daniel Fenn
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From greglancaster71 at gmail.com  Tue Nov  5 03:21:58 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Mon, 4 Nov 2013 19:21:58 -0800 (PST)
Subject: [wp-hackers] Handle Image Upload via jQuery .post?
Message-ID: <1383621718848-42717.post@n5.nabble.com>

converting a form to ajax, and I currently have file uploads being handles
like so:

function insert_attachment($file_handler,$post_id,$setthumb='false') {
	if ($_FILES[$file_handler]['error'] !== UPLOAD_ERR_OK){return
__return_false(); }
 	require_once(ABSPATH . "wp-admin" . '/includes/image.php');
	require_once(ABSPATH . "wp-admin" . '/includes/file.php');
	require_once(ABSPATH . "wp-admin" . '/includes/media.php');
$attach_id = media_handle_upload( $file_handler, $post_id );
 
  if ($setthumb) update_post_meta($post_id,'_thumbnail_id',$attach_id);
  return $attach_id;

}

Then in the form, I am using:


	foreach ($_FILES as $file => $array) 
	{
	$newupload = insert_attachment($file,$post_id); 
	}

This returns uploads the image and returns the attachment id for placement
in a db table.  After converting to ajax, this function no longer works.  

Any possible way to run the insert_attachment function on click only, and
then run the ajax post submit?  Or obviously the better solution would be to
handle it all from the action call function.  






--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Handle-Image-Upload-via-jQuery-post-tp42717.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From blair at caseproof.com  Tue Nov  5 03:36:26 2013
From: blair at caseproof.com (Blair Williams)
Date: Mon, 4 Nov 2013 20:36:26 -0700
Subject: [wp-hackers] Handle Image Upload via jQuery .post?
In-Reply-To: <1383621718848-42717.post@n5.nabble.com>
References: <1383621718848-42717.post@n5.nabble.com>
Message-ID: <etPan.527867bd.2ca88611.2468@booyah-2.local>

File uploads aren?t possible with AJAX ? they only work with actual form posts.

If you google around you?ll find that people have all kinds of different techniques around this limitation. One that I remember from years back was a guy who embedded a conventional form within an iFrame on his page ? submitted it and used the js in the parent frame to make it appear dynamic :) ..

But I just stick to standard form posts for the image uploads ? then ajax for everything else.

Blair

From:?BenderisGreat BenderisGreat
Reply:?wp-hackers at lists.automattic.com wp-hackers at lists.automattic.com
Date:?November 4, 2013 at 8:22:06 PM
To:?wp-hackers at lists.automattic.com wp-hackers at lists.automattic.com
Subject:? [wp-hackers] Handle Image Upload via jQuery .post?  
converting a form to ajax, and I currently have file uploads being handles  
like so:  

function insert_attachment($file_handler,$post_id,$setthumb='false') {  
if ($_FILES[$file_handler]['error'] !== UPLOAD_ERR_OK){return  
__return_false(); }  
require_once(ABSPATH . "wp-admin" . '/includes/image.php');  
require_once(ABSPATH . "wp-admin" . '/includes/file.php');  
require_once(ABSPATH . "wp-admin" . '/includes/media.php');  
$attach_id = media_handle_upload( $file_handler, $post_id );  

if ($setthumb) update_post_meta($post_id,'_thumbnail_id',$attach_id);  
return $attach_id;  

}  

Then in the form, I am using:  


foreach ($_FILES as $file => $array)  
{  
$newupload = insert_attachment($file,$post_id);  
}  

This returns uploads the image and returns the attachment id for placement  
in a db table. After converting to ajax, this function no longer works.  

Any possible way to run the insert_attachment function on click only, and  
then run the ajax post submit? Or obviously the better solution would be to  
handle it all from the action call function.  






--  
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Handle-Image-Upload-via-jQuery-post-tp42717.html  
Sent from the Wordpress Hackers mailing list archive at Nabble.com.  
_______________________________________________  
wp-hackers mailing list  
wp-hackers at lists.automattic.com  
http://lists.automattic.com/mailman/listinfo/wp-hackers  

From lukebryan at sharefaith.com  Tue Nov  5 16:36:30 2013
From: lukebryan at sharefaith.com (Luke Bryan)
Date: Tue, 5 Nov 2013 08:36:30 -0800
Subject: [wp-hackers] wp 3.7
Message-ID: <CAFnKAk14hoC3=kf0wonsmraySX8GMLAQ9ZuG7+GxH86LYMg60w@mail.gmail.com>

It looks like many other people are getting this cookies error - See here
for example:
http://wordpress.org/support/topic/cookie-error-when-logging-in?replies=24

Any chance we will see a fix in 3.7.2? or 3.8?

Best regards
Luke

From ipstenu at ipstenu.org  Tue Nov  5 17:23:36 2013
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Tue, 05 Nov 2013 09:23:36 -0800
Subject: [wp-hackers] wp 3.7
In-Reply-To: <CAFnKAk14hoC3=kf0wonsmraySX8GMLAQ9ZuG7+GxH86LYMg60w@mail.gmail.com>
References: <CAFnKAk14hoC3=kf0wonsmraySX8GMLAQ9ZuG7+GxH86LYMg60w@mail.gmail.com>
Message-ID: <52792998.90509@ipstenu.org>

It's not browser specific... I don't get it on MY site, but I do get it 
on someone elses. I was helping debug.

Did you define a cookie path in wp-config?

Luke Bryan wrote:
>
> It looks like many other people are getting this cookies error - See here
> for example:
> http://wordpress.org/support/topic/cookie-error-when-logging-in?replies=24
>
> Any chance we will see a fix in 3.7.2? or 3.8?
>
> Best regards
> Luke
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From greglancaster71 at gmail.com  Tue Nov  5 21:52:12 2013
From: greglancaster71 at gmail.com (Gregory Lancaster)
Date: Tue, 5 Nov 2013 13:52:12 -0800
Subject: [wp-hackers] jQuery x-editable with update_user_meta?
In-Reply-To: <CAPN-N+a94HurEtCcy788oSB-5zsExmJYm-fPxTVd09zrHMB=mg@mail.gmail.com>
References: <1382840574969-42641.post@n5.nabble.com>
 <585A600C-D23D-4A74-A3D3-5D9164ABEB2C@codesymphony.co>
 <1382978900772-42645.post@n5.nabble.com>
 <33F20281-349D-4FC4-AAC1-9D19641A7628@codesymphony.co>
 <CAPN-N+ZxJjPW3Xq2QWFdq6wUXE8VamFrE9pEB3tH7Me-Z0f9Cg@mail.gmail.com>
 <ADDB37FD-167A-4BB6-8526-39E47D49B6C0@codesymphony.co>
 <1382990698993-42649.post@n5.nabble.com>
 <1382995255098-42650.post@n5.nabble.com>
 <B0FE663B-57A0-4293-9599-3336C6DC995F@codesymphony.co>
 <CAPN-N+Z96zrSmEfL+Qmbpc1RBpMtvuqJnzvusK1ETRmNYXqmSA@mail.gmail.com>
 <3BA49FEF-711A-483A-9DC7-E186BBAEBF99@codesymphony.co>
 <CAPN-N+a94HurEtCcy788oSB-5zsExmJYm-fPxTVd09zrHMB=mg@mail.gmail.com>
Message-ID: <CAPN-N+YmUs1so3LFtj-KwPGxM3r6tO9P8K5PDr-V_Oe_obGDWQ@mail.gmail.com>

Hey man - Can I hire you to code this jquery file upload plugin into the
plugin I have so far?  Along with the php print image thing so people can
share an image from their profile?    How much would that run (estimated
obv)?

Here is the plugin:  http://blueimp.github.io/jQuery-File-Upload/


On Mon, Oct 28, 2013 at 3:45 PM, Gregory Lancaster <
greglancaster71 at gmail.com> wrote:

> Yea you're right, realized it right after I posted.  I logged out, which
> fixed the issue.  I have no idea what is causing this.  :-/  Ill post on
> github and maybe someone can target the issue.  Its def odd though, that it
> only works when logged out.  I compared the loaded html side by side with a
> coparison tool and they are nearly identical.
>
>
> On Mon, Oct 28, 2013 at 2:57 PM, J.D. Grimes <jdg at codesymphony.co> wrote:
>
>> That really doesn?t make sense. Is this code you pasted an exact copy of
>> the code in your theme?
>>
>> On Oct 28, 2013, at 5:40 PM, Gregory Lancaster <greglancaster71 at gmail.com>
>> wrote:
>>
>> > Damn that was incredibily useful, thanks man.  I fixed the double
>> headers
>> > but unfortunately this still wont work unless I am logged out.  I found
>> the
>> > culprit though, the same block of code that was an issue previously:
>> >
>> > */
>> > function themeblvd_redirect_admin(){
>> > if ( ! current_user_can( 'edit_posts' ) && (! defined('DOING_AJAX') || !
>> > DOING_AJAX ) ){
>> > wp_redirect( site_url() );
>> > exit;
>> > }
>> > }
>> > add_action( 'admin_init', 'themeblvd_redirect_admin' );
>> >
>> > commenting out that block fixed it.   What do I need to add to this so I
>> > can still block wp-admin access but keep the ajax call working?  Add a
>> > jQuery exception as well?
>> >
>> >
>> > On Mon, Oct 28, 2013 at 2:26 PM, J.D. Grimes <jdg at codesymphony.co>
>> wrote:
>> >
>> >> You could add a debug_print_backtrace() in head.php. That will print
>> the
>> >> stack for each inclusion.
>> >>
>> >> -J.D.
>> >>
>> >> On Oct 28, 2013, at 5:20 PM, BenderisGreat <greglancaster71 at gmail.com>
>> >> wrote:
>> >>
>> >>> I think I see the issue, when I am logged in the head.php gets loaded
>> >> twice.
>> >>> Not sure why exactly though. Is there a way to show all files being
>> >> loaded
>> >>> in sequence as they are fired?
>> >>>
>> >>>
>> >>>
>> >>> --
>> >>> View this message in context:
>> >>
>> http://wordpress-hackers.1065353.n5.nabble.com/jQuery-x-editable-with-update-user-meta-tp42641p42650.html
>> >>> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
>> >>> _______________________________________________
>> >>> wp-hackers mailing list
>> >>> wp-hackers at lists.automattic.com
>> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >>
>> >> _______________________________________________
>> >> wp-hackers mailing list
>> >> wp-hackers at lists.automattic.com
>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >>
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>

From dino at duechiacchiere.it  Wed Nov  6 17:37:44 2013
From: dino at duechiacchiere.it (Dino Termini)
Date: Wed, 06 Nov 2013 12:37:44 -0500
Subject: [wp-hackers] Allow authors to create new users but only as
	Contributors
Message-ID: <527A7E68.80006@duechiacchiere.it>

Hi,

for a project that I'm working on, I need to give Authors the capability 
to create new users. Using the Members plugin, this was just a matter of 
a few clicks.

The tricky part is now to restrict this functionality so that Authors 
can only create Contributors or Subscribers, but not Authors and above.

Also, if a given Author has capability my_custom_enable_something, the 
new user s/he creates should inherit that capability as well.

Can someone point me into the right direction or explain how to 
implement such a thing?

Thank you,
Dino.

From jdg at codesymphony.co  Wed Nov  6 19:26:18 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Wed, 6 Nov 2013 14:26:18 -0500
Subject: [wp-hackers] Allow authors to create new users but only as
	Contributors
In-Reply-To: <527A7E68.80006@duechiacchiere.it>
References: <527A7E68.80006@duechiacchiere.it>
Message-ID: <411716D1-6A97-4E73-A236-061E57231F3A@codesymphony.co>

As per here <http://wordpress.stackexchange.com/a/53685/27757> you can hook into the 'editable_roles' filter, and limit the roles returned based on the roles/caps of the current user.

-J.D.

On Nov 6, 2013, at 12:37 PM, Dino Termini <dino at duechiacchiere.it> wrote:

> Hi,
> 
> for a project that I'm working on, I need to give Authors the capability to create new users. Using the Members plugin, this was just a matter of a few clicks.
> 
> The tricky part is now to restrict this functionality so that Authors can only create Contributors or Subscribers, but not Authors and above.
> 
> Also, if a given Author has capability my_custom_enable_something, the new user s/he creates should inherit that capability as well.
> 
> Can someone point me into the right direction or explain how to implement such a thing?
> 
> Thank you,
> Dino.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From me at jes.se.com  Wed Nov  6 20:22:32 2013
From: me at jes.se.com (Jesse Friedman)
Date: Wed, 6 Nov 2013 15:22:32 -0500
Subject: [wp-hackers] Multisite memory issue
Message-ID: <CAGtTZ+ZxB36m1-4mE0rA0CtSKkDqKH20ExVyF2Jc9=ZRCjOY6g@mail.gmail.com>

I have a rather large multisite network powering close to 500 sites. We
don't get a lot of traffic, maybe 250,000 uniques a month.

Last year we had 100 sites running on a well known WordPress only hosting
company that uses varnish cache.  We've grown by 400 sites in the last 3
months and have immediately experienced major memory problems.

We upgraded our hosting plan and are now running a bare metal box, with
master / slave database replication.  However we are still seeing some
memory issues. It is not as bad as it was, but here are some specs and
symptoms.

Symptoms:

   - White screens (not of death), if you simply refresh the page loads.
   This happens on a site level and occurs about 50 times a day
   - On a network level sites.php or users.php show white screens for users
   that frequent the network. The more sites I visit the more likely I will
   get the white screen. However if I create a brand new super admin user I
   can browse the network admin just fine
   - Probably unrelated, the plugins section is no longer identifying
   plugin upgrade needs. In other words WordPress SEO needs an upgrade now but
   it isn't telling me or giving me the option to auto update
   - The site and user count in the dashboard is way off. Now most of these
   sites were generated by moving them in from another multisite manually
   through the database

PHP Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to
allocate 44484 bytes) in /nas/wp/www/sites/__/wp-content/object-cache.php
on line 196, referer: url of site page

PHP Fatal error: Allowed memory size of 268435456 bytes exhausted (tried to
allocate 317441 bytes) in
/nas/wp/www/sites/__/wp-admin/includes/class-wp-ms-sites-list-table.php on
line 282

PHP Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to
allocate 38780 bytes) in /nas/wp/www/sites/__/wp-content/object-cache.php
on line 196, referer: url of site page


Specs
We have hundreds of in house made themes and 1 in house framework plugin.
Network Activated Plugins:

   - Akismet
   - Blog Copier
   - Breadcrumb NavXT
   - Gravity Forms
   - Jetpack
   - Redirection
   - Simple 301 Redirects
   - WordPress Importer
   - WordPress MU Domain Mapping
   - WordPress SEO
   - WP-Paginate
   - WP Mobile Detect

443 themes
288 users


The hosting provider said it was the shear size of our network that
required us to upgrade the hardware. Now that we are on this super robust
system, they are convinced its a plugin or theme causing a memory problem.

*HELP PLEASE! :*)

   - Has anyone had any luck tracking a memory issue through hundreds of
   sites, using network activated plugins but hundreds of different themes?
   - Right now I feel like the memory issue could be either the size of our
   network or something in our code, but i have no idea how to find the
   problem.
      - I have duplicated the network into a staging environment and we
      have no issues there but there is also no traffic. I believe that I need
      traffic to the network to be able to duplicate the problem
      - I can not turn off any of the plugins without breaking the network
      - I can not turn off any themes without disabling client sites


-- 
thanks

*jesse friedman*
jes.se.com
Book: Web Designers Guide to WordPress -
http://wdgwp.com/onamazon<http://wdgwp.com/onamazon>
Twitter: @professor <http://twitter.com/professor>
Facebook: Like<https://www.facebook.com/pages/Jesse-Friedman/204793299545174>

From simon at wpsites.co.uk  Thu Nov  7 00:23:34 2013
From: simon at wpsites.co.uk (Simon Dunton - WP Sites)
Date: Thu, 7 Nov 2013 00:23:34 +0000
Subject: [wp-hackers] Multisite memory issue
In-Reply-To: <CAGtTZ+ZxB36m1-4mE0rA0CtSKkDqKH20ExVyF2Jc9=ZRCjOY6g@mail.gmail.com>
References: <CAGtTZ+ZxB36m1-4mE0rA0CtSKkDqKH20ExVyF2Jc9=ZRCjOY6g@mail.gmail.com>
Message-ID: <AE059893-08C3-41DC-BBBB-7704E10E6A43@wpsites.co.uk>

Hi Jesse,

In an ideal world your host would install xhprof on your current setup so they/you could log the exact memory usage down to the function level on the infrastructure in question. Alternatively you could mirror your existing configuration as close as possible on a temporary VPS and use xhprof or xdebug to dig deep into your memory usage. Could get a little technical and since your server configuration and traffic levels on this temporary VPS are different to your live setup there is a chance you won't see the memory issue at all. You'd probably need to use something like Apache AB or Siege to generate some requests on your temporary VPS.

There is also New Relic which takes away some of the technicalities of the above approach and presents you with a more friendly, holistic view of your websites performance.

The other more straight forward thing you could try is use something like the plugin performance profiler: http://wordpress.org/plugins/p3-profiler/ which might be able to highlight plugins that take up lots of memory but I've never I've never had much success with this one.

The other thing you could try is Time Stack: https://github.com/joehoyle/Time-Stack/ which is great for profiling chunks of your own code or existing WordPress/plugin functionality once you've worked out how to attach it to existing events.

Sounds like an exciting yet frustrating predicament to be in. Good luck!

Simon

 

On 6 Nov 2013, at 20:22, Jesse Friedman wrote:

> I have a rather large multisite network powering close to 500 sites. We
> don't get a lot of traffic, maybe 250,000 uniques a month.
> 
> Last year we had 100 sites running on a well known WordPress only hosting
> company that uses varnish cache.  We've grown by 400 sites in the last 3
> months and have immediately experienced major memory problems.
> 
> We upgraded our hosting plan and are now running a bare metal box, with
> master / slave database replication.  However we are still seeing some
> memory issues. It is not as bad as it was, but here are some specs and
> symptoms.
> 
> Symptoms:
> 
>   - White screens (not of death), if you simply refresh the page loads.
>   This happens on a site level and occurs about 50 times a day
>   - On a network level sites.php or users.php show white screens for users
>   that frequent the network. The more sites I visit the more likely I will
>   get the white screen. However if I create a brand new super admin user I
>   can browse the network admin just fine
>   - Probably unrelated, the plugins section is no longer identifying
>   plugin upgrade needs. In other words WordPress SEO needs an upgrade now but
>   it isn't telling me or giving me the option to auto update
>   - The site and user count in the dashboard is way off. Now most of these
>   sites were generated by moving them in from another multisite manually
>   through the database
> 
> PHP Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to
> allocate 44484 bytes) in /nas/wp/www/sites/__/wp-content/object-cache.php
> on line 196, referer: url of site page
> 
> PHP Fatal error: Allowed memory size of 268435456 bytes exhausted (tried to
> allocate 317441 bytes) in
> /nas/wp/www/sites/__/wp-admin/includes/class-wp-ms-sites-list-table.php on
> line 282
> 
> PHP Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to
> allocate 38780 bytes) in /nas/wp/www/sites/__/wp-content/object-cache.php
> on line 196, referer: url of site page
> 
> 
> Specs
> We have hundreds of in house made themes and 1 in house framework plugin.
> Network Activated Plugins:
> 
>   - Akismet
>   - Blog Copier
>   - Breadcrumb NavXT
>   - Gravity Forms
>   - Jetpack
>   - Redirection
>   - Simple 301 Redirects
>   - WordPress Importer
>   - WordPress MU Domain Mapping
>   - WordPress SEO
>   - WP-Paginate
>   - WP Mobile Detect
> 
> 443 themes
> 288 users
> 
> 
> The hosting provider said it was the shear size of our network that
> required us to upgrade the hardware. Now that we are on this super robust
> system, they are convinced its a plugin or theme causing a memory problem.
> 
> *HELP PLEASE! :*)
> 
>   - Has anyone had any luck tracking a memory issue through hundreds of
>   sites, using network activated plugins but hundreds of different themes?
>   - Right now I feel like the memory issue could be either the size of our
>   network or something in our code, but i have no idea how to find the
>   problem.
>      - I have duplicated the network into a staging environment and we
>      have no issues there but there is also no traffic. I believe that I need
>      traffic to the network to be able to duplicate the problem
>      - I can not turn off any of the plugins without breaking the network
>      - I can not turn off any themes without disabling client sites
> 
> 
> -- 
> thanks
> 
> *jesse friedman*
> jes.se.com
> Book: Web Designers Guide to WordPress -
> http://wdgwp.com/onamazon<http://wdgwp.com/onamazon>
> Twitter: @professor <http://twitter.com/professor>
> Facebook: Like<https://www.facebook.com/pages/Jesse-Friedman/204793299545174>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From frank at bueltge.de  Thu Nov  7 08:37:23 2013
From: frank at bueltge.de (Frank Bueltge)
Date: Thu, 7 Nov 2013 09:37:23 +0100
Subject: [wp-hackers] Multisite memory issue
In-Reply-To: <CAGtTZ+ZxB36m1-4mE0rA0CtSKkDqKH20ExVyF2Jc9=ZRCjOY6g@mail.gmail.com>
References: <CAGtTZ+ZxB36m1-4mE0rA0CtSKkDqKH20ExVyF2Jc9=ZRCjOY6g@mail.gmail.com>
Message-ID: <CAH9UVvFSaKhOR3_G9s9=RmYKE6Jf8PSBUMXUb7pg5PnXEBE-zA@mail.gmail.com>

Hi Jesse,
I use the plugin Debug Objects to identifier the problem queries. The list
queries from default core, also all other queries and extra all plugins,
there run on the current.
https://github.com/bueltge/Debug-Objects

Kurz und Knapp, von unterwegs.
LG Frank
Am 06.11.2013 21:23 schrieb "Jesse Friedman" <me at jes.se.com>:

> I have a rather large multisite network powering close to 500 sites. We
> don't get a lot of traffic, maybe 250,000 uniques a month.
>
> Last year we had 100 sites running on a well known WordPress only hosting
> company that uses varnish cache.  We've grown by 400 sites in the last 3
> months and have immediately experienced major memory problems.
>
> We upgraded our hosting plan and are now running a bare metal box, with
> master / slave database replication.  However we are still seeing some
> memory issues. It is not as bad as it was, but here are some specs and
> symptoms.
>
> Symptoms:
>
>    - White screens (not of death), if you simply refresh the page loads.
>    This happens on a site level and occurs about 50 times a day
>    - On a network level sites.php or users.php show white screens for users
>    that frequent the network. The more sites I visit the more likely I will
>    get the white screen. However if I create a brand new super admin user I
>    can browse the network admin just fine
>    - Probably unrelated, the plugins section is no longer identifying
>    plugin upgrade needs. In other words WordPress SEO needs an upgrade now
> but
>    it isn't telling me or giving me the option to auto update
>    - The site and user count in the dashboard is way off. Now most of these
>    sites were generated by moving them in from another multisite manually
>    through the database
>
> PHP Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to
> allocate 44484 bytes) in /nas/wp/www/sites/__/wp-content/object-cache.php
> on line 196, referer: url of site page
>
> PHP Fatal error: Allowed memory size of 268435456 bytes exhausted (tried to
> allocate 317441 bytes) in
> /nas/wp/www/sites/__/wp-admin/includes/class-wp-ms-sites-list-table.php on
> line 282
>
> PHP Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to
> allocate 38780 bytes) in /nas/wp/www/sites/__/wp-content/object-cache.php
> on line 196, referer: url of site page
>
>
> Specs
> We have hundreds of in house made themes and 1 in house framework plugin.
> Network Activated Plugins:
>
>    - Akismet
>    - Blog Copier
>    - Breadcrumb NavXT
>    - Gravity Forms
>    - Jetpack
>    - Redirection
>    - Simple 301 Redirects
>    - WordPress Importer
>    - WordPress MU Domain Mapping
>    - WordPress SEO
>    - WP-Paginate
>    - WP Mobile Detect
>
> 443 themes
> 288 users
>
>
> The hosting provider said it was the shear size of our network that
> required us to upgrade the hardware. Now that we are on this super robust
> system, they are convinced its a plugin or theme causing a memory problem.
>
> *HELP PLEASE! :*)
>
>    - Has anyone had any luck tracking a memory issue through hundreds of
>    sites, using network activated plugins but hundreds of different themes?
>    - Right now I feel like the memory issue could be either the size of our
>    network or something in our code, but i have no idea how to find the
>    problem.
>       - I have duplicated the network into a staging environment and we
>       have no issues there but there is also no traffic. I believe that I
> need
>       traffic to the network to be able to duplicate the problem
>       - I can not turn off any of the plugins without breaking the network
>       - I can not turn off any themes without disabling client sites
>
>
> --
> thanks
>
> *jesse friedman*
> jes.se.com
> Book: Web Designers Guide to WordPress -
> http://wdgwp.com/onamazon<http://wdgwp.com/onamazon>
> Twitter: @professor <http://twitter.com/professor>
> Facebook: Like<
> https://www.facebook.com/pages/Jesse-Friedman/204793299545174>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From tcbarrett at gmail.com  Thu Nov  7 15:45:31 2013
From: tcbarrett at gmail.com (Tom Barrett)
Date: Thu, 7 Nov 2013 15:45:31 +0000
Subject: [wp-hackers] Allowing theme to override plugin markup on data
Message-ID: <CAEgmxaa85dUhbJNLvSYeKveEQhNkwiNPAZQ=JW5uZERU=5S97g@mail.gmail.com>

I'm writing a shortcode that is going to produce a list of items (oof!).
It's a custom post type, with some meta. Pretty much a standard loop
scenario.

I'd like the shortcode to produce some basic output, and let the theme
really jazz things up. Ideally I'd have the data available with no markup
(for the theme) and then, if the theme doesn't do anything, let the plugin
apply some simple markup of it's own.

Any recommendations on how to engineer this the best?

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From joshua.sibelman at gmail.com  Thu Nov  7 16:06:14 2013
From: joshua.sibelman at gmail.com (Joshua Sibelman)
Date: Thu, 7 Nov 2013 08:06:14 -0800
Subject: [wp-hackers] Fetching posts by URL
Message-ID: <B5A93535-271E-48B7-8357-C70C730E1165@gmail.com>

Looking for opinions on an approach for building a single page WP site, where WP is used as a CMS, e.g. many CPTs, posts 2 posts, etc.

Ideally I'd be able to have all the links point to their respective posts' permalinks, with JavaScript intercepting the clicks and passing the path to a custom controller for the JSON API plugin. This way spiders can still crawl the site, and I can use progressive enhancement to remove the full page reloads.

What I want to be able to do is the same kind of processing done by WP->parse_request, but that method relies on analyzing the URL visited in the browser.

It seems I could either try to reproduce that method to handle a provided path, or I could try using data attributes in the href tags which the JavaScript could pass to the JSON API as arguments to get the correct resource.

Has anyone else done something like this? Does anyone have an opinion as to which method might be best? I have also considered using get_page_by_path, but we are doing some idiosyncratic things with how some of the data is organized and I'm worried that would be more complicated than either of the above approaches.

Cheers,
Josh

From banago at gmail.com  Thu Nov  7 16:29:19 2013
From: banago at gmail.com (Baki Goxhaj)
Date: Thu, 7 Nov 2013 17:29:19 +0100
Subject: [wp-hackers] php -v
Message-ID: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>

Hi guys,

Are there any plans to upgrade the minimum required version of PHP in WP? I
think we are falling a little behind.

What's the word on that?

Kindly,

Baki Goxhaj
about.me/banago

From abdussamad at abdussamad.com  Thu Nov  7 16:38:07 2013
From: abdussamad at abdussamad.com (Abdussamad Abdurrazzaq)
Date: Thu, 07 Nov 2013 21:38:07 +0500
Subject: [wp-hackers] php -v
In-Reply-To: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
Message-ID: <527BC1EF.6030800@abdussamad.com>

Far too many people are still on 5.2:

http://wordpress.org/about/stats/

On 11/07/2013 09:29 PM, Baki Goxhaj wrote:
> Hi guys,
>
> Are there any plans to upgrade the minimum required version of PHP in WP? I
> think we are falling a little behind.
>
> What's the word on that?
>
> Kindly,
>
> Baki Goxhaj
> about.me/banago
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From banago at gmail.com  Thu Nov  7 16:43:32 2013
From: banago at gmail.com (Baki Goxhaj)
Date: Thu, 7 Nov 2013 17:43:32 +0100
Subject: [wp-hackers] php -v
In-Reply-To: <527BC1EF.6030800@abdussamad.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
Message-ID: <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>

That graph is very outdated. Look here instead:
http://w3techs.com/technologies/details/pl-php/5/all

Because I use a small class on my themes that requires 3.5, I've asked 10+
clients to upgrade PHP to more then 5.2 and the good news is all of them
have done so with no issue at all. It seems people still use 5.2 in many
hosts because that was pre-selected 3-4 years ago when the signed up.

I think WordPress can make a difference in this sphere by requiring at
least 5.3.

Kindly,

Baki Goxhaj
about.me/banago


On Thu, Nov 7, 2013 at 5:38 PM, Abdussamad Abdurrazzaq <
abdussamad at abdussamad.com> wrote:

> Far too many people are still on 5.2:
>
> http://wordpress.org/about/stats/
>
>
> On 11/07/2013 09:29 PM, Baki Goxhaj wrote:
>
>> Hi guys,
>>
>> Are there any plans to upgrade the minimum required version of PHP in WP?
>> I
>> think we are falling a little behind.
>>
>> What's the word on that?
>>
>> Kindly,
>>
>> Baki Goxhaj
>> about.me/banago
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>>  _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From coenjacobs at gmail.com  Thu Nov  7 16:45:20 2013
From: coenjacobs at gmail.com (Coen Jacobs)
Date: Thu, 7 Nov 2013 17:45:20 +0100
Subject: [wp-hackers] php -v
In-Reply-To: <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
Message-ID: <CANa=bdqp5oZNETEVWBMTA0j1U2P83Th9_OjLrrtn0LtXszN6dg@mail.gmail.com>

If you compare those two graphs it might look outdated, it is actually not.
The difference between the two graphs is that the one on wordpress.org is
the PHP version on servers running WordPress. The one you linked to is the
web in general.


On Thu, Nov 7, 2013 at 5:43 PM, Baki Goxhaj <banago at gmail.com> wrote:

> That graph is very outdated. Look here instead:
> http://w3techs.com/technologies/details/pl-php/5/all
>
> Because I use a small class on my themes that requires 3.5, I've asked 10+
> clients to upgrade PHP to more then 5.2 and the good news is all of them
> have done so with no issue at all. It seems people still use 5.2 in many
> hosts because that was pre-selected 3-4 years ago when the signed up.
>
> I think WordPress can make a difference in this sphere by requiring at
> least 5.3.
>
> Kindly,
>
> Baki Goxhaj
> about.me/banago
>
>
> On Thu, Nov 7, 2013 at 5:38 PM, Abdussamad Abdurrazzaq <
> abdussamad at abdussamad.com> wrote:
>
> > Far too many people are still on 5.2:
> >
> > http://wordpress.org/about/stats/
> >
> >
> > On 11/07/2013 09:29 PM, Baki Goxhaj wrote:
> >
> >> Hi guys,
> >>
> >> Are there any plans to upgrade the minimum required version of PHP in
> WP?
> >> I
> >> think we are falling a little behind.
> >>
> >> What's the word on that?
> >>
> >> Kindly,
> >>
> >> Baki Goxhaj
> >> about.me/banago
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >>  _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From abdussamad at abdussamad.com  Thu Nov  7 16:52:54 2013
From: abdussamad at abdussamad.com (Abdussamad Abdurrazzaq)
Date: Thu, 07 Nov 2013 21:52:54 +0500
Subject: [wp-hackers] php -v
In-Reply-To: <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
Message-ID: <527BC566.3080005@abdussamad.com>

Hosts are loath to upgrade. Just look back at how long php 4 was around. 
They don't want the customer support headache that upgrading PHP brings 
them.

On 11/07/2013 09:43 PM, Baki Goxhaj wrote:
> That graph is very outdated. Look here instead:
> http://w3techs.com/technologies/details/pl-php/5/all
>
> Because I use a small class on my themes that requires 3.5, I've asked 10+
> clients to upgrade PHP to more then 5.2 and the good news is all of them
> have done so with no issue at all. It seems people still use 5.2 in many
> hosts because that was pre-selected 3-4 years ago when the signed up.
>
> I think WordPress can make a difference in this sphere by requiring at
> least 5.3.
>
> Kindly,
>
> Baki Goxhaj
> about.me/banago
>
>
> On Thu, Nov 7, 2013 at 5:38 PM, Abdussamad Abdurrazzaq <
> abdussamad at abdussamad.com> wrote:
>
>> Far too many people are still on 5.2:
>>
>> http://wordpress.org/about/stats/
>>
>>
>> On 11/07/2013 09:29 PM, Baki Goxhaj wrote:
>>
>>> Hi guys,
>>>
>>> Are there any plans to upgrade the minimum required version of PHP in WP?
>>> I
>>> think we are falling a little behind.
>>>
>>> What's the word on that?
>>>
>>> Kindly,
>>>
>>> Baki Goxhaj
>>> about.me/banago
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>   _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> .
>

From jbutkus at time.ly  Thu Nov  7 16:53:20 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Thu, 07 Nov 2013 18:53:20 +0200
Subject: [wp-hackers] php -v
In-Reply-To: <CANa=bdqp5oZNETEVWBMTA0j1U2P83Th9_OjLrrtn0LtXszN6dg@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CANa=bdqp5oZNETEVWBMTA0j1U2P83Th9_OjLrrtn0LtXszN6dg@mail.gmail.com>
Message-ID: <527BC580.60003@time.ly>

2013.11.07 18:45, Coen Jacobs ra??:
> If you compare those two graphs it might look outdated, it is actually not.
> The difference between the two graphs is that the one on wordpress.org is
> the PHP version on servers running WordPress. The one you linked to is the
> web in general.
Is it possible that significant number of sites running PHP 5.2 are on 
just a few big hosting providers, who run PHP 5.2 allegedly for 
compatibility reasons, and receiving request from their customers would 
update to more up-to date versions of PHP, which would allow for them to 
save resources (i.e. do to more effective caching in PHP 5.5) and/or 
allow greater developments of the web in general?


-- 
Regards,
Justas Butkus

From jdg at codesymphony.co  Thu Nov  7 17:04:48 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Thu, 7 Nov 2013 12:04:48 -0500
Subject: [wp-hackers] php -v
In-Reply-To: <527BC580.60003@time.ly>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CANa=bdqp5oZNETEVWBMTA0j1U2P83Th9_OjLrrtn0LtXszN6dg@mail.gmail.com>
 <527BC580.60003@time.ly>
Message-ID: <34535877-3358-492E-96B3-F062196AD99A@codesymphony.co>

I?ve often thought that the lead devs should just announce that support for 5.2 will be dropped by a certain date, and see what happens.

On Nov 7, 2013, at 11:53 AM, Justas Butkus <jbutkus at time.ly> wrote:

> 2013.11.07 18:45, Coen Jacobs ra??:
>> If you compare those two graphs it might look outdated, it is actually not.
>> The difference between the two graphs is that the one on wordpress.org is
>> the PHP version on servers running WordPress. The one you linked to is the
>> web in general.
> Is it possible that significant number of sites running PHP 5.2 are on just a few big hosting providers, who run PHP 5.2 allegedly for compatibility reasons, and receiving request from their customers would update to more up-to date versions of PHP, which would allow for them to save resources (i.e. do to more effective caching in PHP 5.5) and/or allow greater developments of the web in general?
> 
> 
> -- 
> Regards,
> Justas Butkus
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From m.sowden at mi-telemetry.com  Thu Nov  7 17:08:12 2013
From: m.sowden at mi-telemetry.com (Matt Sowden)
Date: Thu, 7 Nov 2013 17:08:12 +0000
Subject: [wp-hackers] php -v
In-Reply-To: <34535877-3358-492E-96B3-F062196AD99A@codesymphony.co>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CANa=bdqp5oZNETEVWBMTA0j1U2P83Th9_OjLrrtn0LtXszN6dg@mail.gmail.com>
 <527BC580.60003@time.ly>
 <34535877-3358-492E-96B3-F062196AD99A@codesymphony.co>
Message-ID: <48B1E48729969D4A9A862ECB8F69ED2126A0D791@MIEX2.MI.local>

I don't think it hurts in any way to stay on 5.2 right now honestly, seeing as if you want to upgrade to 5.3 it can be done with no issue, as stated earlier. It'll cause more problems than it will solve, if it even solves any.

Minimum != Required

Best,
Matthew C. Sowden
+MattSowden
@mattsowden

-----Original Message-----
From: wp-hackers [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of J.D. Grimes
Sent: Thursday, November 07, 2013 12:05 PM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] php -v

I?ve often thought that the lead devs should just announce that support for 5.2 will be dropped by a certain date, and see what happens.

On Nov 7, 2013, at 11:53 AM, Justas Butkus <jbutkus at time.ly> wrote:

> 2013.11.07 18:45, Coen Jacobs ra??:
>> If you compare those two graphs it might look outdated, it is actually not.
>> The difference between the two graphs is that the one on 
>> wordpress.org is the PHP version on servers running WordPress. The 
>> one you linked to is the web in general.
> Is it possible that significant number of sites running PHP 5.2 are on just a few big hosting providers, who run PHP 5.2 allegedly for compatibility reasons, and receiving request from their customers would update to more up-to date versions of PHP, which would allow for them to save resources (i.e. do to more effective caching in PHP 5.5) and/or allow greater developments of the web in general?
> 
> 
> --
> Regards,
> Justas Butkus
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From jbutkus at time.ly  Thu Nov  7 17:10:47 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Thu, 07 Nov 2013 19:10:47 +0200
Subject: [wp-hackers] php -v
In-Reply-To: <34535877-3358-492E-96B3-F062196AD99A@codesymphony.co>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CANa=bdqp5oZNETEVWBMTA0j1U2P83Th9_OjLrrtn0LtXszN6dg@mail.gmail.com>
 <527BC580.60003@time.ly>
 <34535877-3358-492E-96B3-F062196AD99A@codesymphony.co>
Message-ID: <527BC997.3050604@time.ly>

2013.11.07 19:04, J.D. Grimes ra??:
> I?ve often thought that the lead devs should just announce that support for 5.2 will be dropped by a certain date, and see what happens.
Optionally using big red box in admin notification area and suggesting 
that next minimum supported version will be PHP 5.5.

Actually, with our plugin (All-in-One Event Calendar) we see a bit 
different numbers (there might be some skew):
     - more than 55% are using WordPress 3.6.1 or earlier;
     - more than 20% are using PHP 5.2.x or earlier.
Sure it says little about WordPress in general, but that's mostly why I 
am interested, whereas WordPress maintainers has some chance to see, if 
there might be few major players in hosting using old versions.

-- 
Justas Butkus

From dailyrants at gmail.com  Thu Nov  7 18:17:17 2013
From: dailyrants at gmail.com (John)
Date: Thu, 7 Nov 2013 13:17:17 -0500
Subject: [wp-hackers] Allowing theme to override plugin markup on data
In-Reply-To: <CAEgmxaa85dUhbJNLvSYeKveEQhNkwiNPAZQ=JW5uZERU=5S97g@mail.gmail.com>
References: <CAEgmxaa85dUhbJNLvSYeKveEQhNkwiNPAZQ=JW5uZERU=5S97g@mail.gmail.com>
Message-ID: <CAPYXUfXp8hWVLxbRv0=4gnjJDZqBOqQ=+CK0qH083=Lhk_kCxg@mail.gmail.com>

I've done this by checking if a template exists in the theme directory,
using locate_template( 'single-post-type.php' ), and if not loading
template parts from the plugin dir and/or filtering the_content. The
assumption being, if the theme isn't handling the custom post type template
stuff, my plugins needed to.

bbPress has a good example of modifying the template stack and loading them
from the plugin dir if they don't exist in the child or parent theme
directories. I think the function is named bbp_locate_template. See also
bbp_get_template_part.


On Thu, Nov 7, 2013 at 10:45 AM, Tom Barrett <tcbarrett at gmail.com> wrote:

> I'm writing a shortcode that is going to produce a list of items (oof!).
> It's a custom post type, with some meta. Pretty much a standard loop
> scenario.
>
> I'd like the shortcode to produce some basic output, and let the theme
> really jazz things up. Ideally I'd have the data available with no markup
> (for the theme) and then, if the theme doesn't do anything, let the plugin
> apply some simple markup of it's own.
>
> Any recommendations on how to engineer this the best?
>
> --
> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> http://twitter.com/tcbarrett
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From johnbillion+wp at gmail.com  Thu Nov  7 18:23:41 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Thu, 7 Nov 2013 18:23:41 +0000
Subject: [wp-hackers] php -v
In-Reply-To: <527BC997.3050604@time.ly>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CANa=bdqp5oZNETEVWBMTA0j1U2P83Th9_OjLrrtn0LtXszN6dg@mail.gmail.com>
 <527BC580.60003@time.ly>
 <34535877-3358-492E-96B3-F062196AD99A@codesymphony.co>
 <527BC997.3050604@time.ly>
Message-ID: <CAOqAKWAQdGrhMJQ3snopfYFoNr1UzMbU=55uUhp0Fn_6gFcHVA@mail.gmail.com>

There has been discussion on this in various places over recent months and
years.

There is little argument in favour of raising the minimum required PHP
version to 5.3 because of the limited increase in features that it provides
over 5.2 (namespacing and closures being the main ones). This is not enough
of a feature set to warrant raising the minimum PHP version (closures would
provide no benefit to WordPress, and I love namespacing but we've survived
this long without it).

Rather than asking "Are there any plans to upgrade the minimum required
version of PHP in WP?", the question should be "If we raise the minimum
required version of PHP, will it give us enough benefit to warrant the
raise?"

So if we're talking about raising the minimum required PHP version, there
has to be a solid case for it. What benefits would we get by moving to PHP
5.3, 5.4 or 5.5? 5.4 gives us traits, but not a lot else besides various
shorthand syntaxes. 5.5 gives us generators and a new password API.

Does this list of features provide enough of a benefit to WordPress to
warrant raising the minimum required version? Are the performance
improvements in these versions enough of a benefit on their own? (They may
well be.)

When we moved from PHP 4 to PHP 5(.2) the benefit was substantial because
of the changes in the object model (visibility, abstract classes, magic
methods, autoloading) and probably other things I've not thought of. The
benefits that 5.3-5.5 provide over these are lesser in comparison.

There was some mention recently of another drive aimed at getting hosts to
update their PHP versions, similar to the GoPHP5 initiative back yonder. I
can't see this happening though.

John

On 7 November 2013 17:10, Justas Butkus <jbutkus at time.ly> wrote:

> 2013.11.07 19:04, J.D. Grimes ra??:
>
>  I?ve often thought that the lead devs should just announce that support
>> for 5.2 will be dropped by a certain date, and see what happens.
>>
> Optionally using big red box in admin notification area and suggesting
> that next minimum supported version will be PHP 5.5.
>
> Actually, with our plugin (All-in-One Event Calendar) we see a bit
> different numbers (there might be some skew):
>     - more than 55% are using WordPress 3.6.1 or earlier;
>     - more than 20% are using PHP 5.2.x or earlier.
> Sure it says little about WordPress in general, but that's mostly why I am
> interested, whereas WordPress maintainers has some chance to see, if there
> might be few major players in hosting using old versions.
>
> --
> Justas Butkus
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From info at toscho.de  Thu Nov  7 18:42:19 2013
From: info at toscho.de (Thomas Scholz)
Date: Thu, 07 Nov 2013 19:42:19 +0100
Subject: [wp-hackers] php -v
In-Reply-To: <CAOqAKWAQdGrhMJQ3snopfYFoNr1UzMbU=55uUhp0Fn_6gFcHVA@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CANa=bdqp5oZNETEVWBMTA0j1U2P83Th9_OjLrrtn0LtXszN6dg@mail.gmail.com>
 <527BC580.60003@time.ly>
 <34535877-3358-492E-96B3-F062196AD99A@codesymphony.co>
 <527BC997.3050604@time.ly>
 <CAOqAKWAQdGrhMJQ3snopfYFoNr1UzMbU=55uUhp0Fn_6gFcHVA@mail.gmail.com>
Message-ID: <op.w56zkto7r6yny2@fqdn.toscho.de>

John Blackbourn,

> There is little argument in favour of raising the minimum required PHP
> version to 5.3 because of the limited increase in features that it  
> provides
> over 5.2 (namespacing and closures being the main ones).

The most important ?features? is that you cannot disable SPL in 5.3  
anymore. With 5.3 we could use real auto-loaders (performance!),  
iterators, default interfaces like Countable and so on.

Even WordPress core would benefit from that: one of the most used  
functions?add_filter()?could rely on spl_object_hash(), and we could  
finally drop the current terrible workaround.

Just extend Browse Happy with a notice about the outdated PHP version for  
the next two major WP versions, and 5.2 will vanish very soon.

The WP stats don?t differentiate between abandoned WP installations (still  
on old WP versions) and those which are kept up to date. The real impact  
of a 5.3 requirement would hit much less users than the simple diagram  
suggests.

The latest required PHP version should always be one still receiving  
security updates by PHP. 5.2 is and will stay insecure. In my opinion, the  
current requirements hurt our users.

Thomas

From nashwan.doaqan at gmail.com  Thu Nov  7 18:48:17 2013
From: nashwan.doaqan at gmail.com (Nashwan Doaqan)
Date: Thu, 7 Nov 2013 21:48:17 +0300
Subject: [wp-hackers] php -v
In-Reply-To: <CAOqAKWAQdGrhMJQ3snopfYFoNr1UzMbU=55uUhp0Fn_6gFcHVA@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CANa=bdqp5oZNETEVWBMTA0j1U2P83Th9_OjLrrtn0LtXszN6dg@mail.gmail.com>
 <527BC580.60003@time.ly>
 <34535877-3358-492E-96B3-F062196AD99A@codesymphony.co>
 <527BC997.3050604@time.ly>
 <CAOqAKWAQdGrhMJQ3snopfYFoNr1UzMbU=55uUhp0Fn_6gFcHVA@mail.gmail.com>
Message-ID: <CAHANiT7KkaFTk6q5se__gXYNGeOp274+fgVTwr==aGv7d3tzQA@mail.gmail.com>

1+, to require PHP 5.3.x as a minimum version.

It make a big difference for us as plugin developers, we will could use all
PHP 5.3 features without worrying about the compatibility problems!

I ask all of my clients to upgrade the PHP version to PHP 5.3 and no one
have a problem with that.. most good hosts have a 'PHP Version Select' in
the cPanel.



On 7 November 2013 21:23, John Blackbourn <johnbillion+wp at gmail.com> wrote:

> There has been discussion on this in various places over recent months and
> years.
>
> There is little argument in favour of raising the minimum required PHP
> version to 5.3 because of the limited increase in features that it provides
> over 5.2 (namespacing and closures being the main ones). This is not enough
> of a feature set to warrant raising the minimum PHP version (closures would
> provide no benefit to WordPress, and I love namespacing but we've survived
> this long without it).
>
> Rather than asking "Are there any plans to upgrade the minimum required
> version of PHP in WP?", the question should be "If we raise the minimum
> required version of PHP, will it give us enough benefit to warrant the
> raise?"
>
> So if we're talking about raising the minimum required PHP version, there
> has to be a solid case for it. What benefits would we get by moving to PHP
> 5.3, 5.4 or 5.5? 5.4 gives us traits, but not a lot else besides various
> shorthand syntaxes. 5.5 gives us generators and a new password API.
>
> Does this list of features provide enough of a benefit to WordPress to
> warrant raising the minimum required version? Are the performance
> improvements in these versions enough of a benefit on their own? (They may
> well be.)
>
> When we moved from PHP 4 to PHP 5(.2) the benefit was substantial because
> of the changes in the object model (visibility, abstract classes, magic
> methods, autoloading) and probably other things I've not thought of. The
> benefits that 5.3-5.5 provide over these are lesser in comparison.
>
> There was some mention recently of another drive aimed at getting hosts to
> update their PHP versions, similar to the GoPHP5 initiative back yonder. I
> can't see this happening though.
>
> John
>
> On 7 November 2013 17:10, Justas Butkus <jbutkus at time.ly> wrote:
>
> > 2013.11.07 19:04, J.D. Grimes ra??:
> >
> >  I?ve often thought that the lead devs should just announce that support
> >> for 5.2 will be dropped by a certain date, and see what happens.
> >>
> > Optionally using big red box in admin notification area and suggesting
> > that next minimum supported version will be PHP 5.5.
> >
> > Actually, with our plugin (All-in-One Event Calendar) we see a bit
> > different numbers (there might be some skew):
> >     - more than 55% are using WordPress 3.6.1 or earlier;
> >     - more than 20% are using PHP 5.2.x or earlier.
> > Sure it says little about WordPress in general, but that's mostly why I
> am
> > interested, whereas WordPress maintainers has some chance to see, if
> there
> > might be few major players in hosting using old versions.
> >
> > --
> > Justas Butkus
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From nashwan.doaqan at gmail.com  Thu Nov  7 19:12:25 2013
From: nashwan.doaqan at gmail.com (Nashwan Doaqan)
Date: Thu, 7 Nov 2013 22:12:25 +0300
Subject: [wp-hackers] php -v
In-Reply-To: <CAHANiT7KkaFTk6q5se__gXYNGeOp274+fgVTwr==aGv7d3tzQA@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CANa=bdqp5oZNETEVWBMTA0j1U2P83Th9_OjLrrtn0LtXszN6dg@mail.gmail.com>
 <527BC580.60003@time.ly>
 <34535877-3358-492E-96B3-F062196AD99A@codesymphony.co>
 <527BC997.3050604@time.ly>
 <CAOqAKWAQdGrhMJQ3snopfYFoNr1UzMbU=55uUhp0Fn_6gFcHVA@mail.gmail.com>
 <CAHANiT7KkaFTk6q5se__gXYNGeOp274+fgVTwr==aGv7d3tzQA@mail.gmail.com>
Message-ID: <CAHANiT4QfcMMLOZ9qM9xqaNhJpkdBuXvYt1SQhRrHkHp4Pe8Og@mail.gmail.com>

In addition of what @Thomas Scholz said, We could use the Improved SPL
features in PHP 5.3 to enhance the WordPress, Right?


On 7 November 2013 21:48, Nashwan Doaqan <nashwan.doaqan at gmail.com> wrote:

> 1+, to require PHP 5.3.x as a minimum version.
>
> It make a big difference for us as plugin developers, we will could use
> all PHP 5.3 features without worrying about the compatibility problems!
>
> I ask all of my clients to upgrade the PHP version to PHP 5.3 and no one
> have a problem with that.. most good hosts have a 'PHP Version Select' in
> the cPanel.
>
>
>
> On 7 November 2013 21:23, John Blackbourn <johnbillion+wp at gmail.com>wrote:
>
>> There has been discussion on this in various places over recent months and
>> years.
>>
>> There is little argument in favour of raising the minimum required PHP
>> version to 5.3 because of the limited increase in features that it
>> provides
>> over 5.2 (namespacing and closures being the main ones). This is not
>> enough
>> of a feature set to warrant raising the minimum PHP version (closures
>> would
>> provide no benefit to WordPress, and I love namespacing but we've survived
>> this long without it).
>>
>> Rather than asking "Are there any plans to upgrade the minimum required
>> version of PHP in WP?", the question should be "If we raise the minimum
>> required version of PHP, will it give us enough benefit to warrant the
>> raise?"
>>
>> So if we're talking about raising the minimum required PHP version, there
>> has to be a solid case for it. What benefits would we get by moving to PHP
>> 5.3, 5.4 or 5.5? 5.4 gives us traits, but not a lot else besides various
>> shorthand syntaxes. 5.5 gives us generators and a new password API.
>>
>> Does this list of features provide enough of a benefit to WordPress to
>> warrant raising the minimum required version? Are the performance
>> improvements in these versions enough of a benefit on their own? (They may
>> well be.)
>>
>> When we moved from PHP 4 to PHP 5(.2) the benefit was substantial because
>> of the changes in the object model (visibility, abstract classes, magic
>> methods, autoloading) and probably other things I've not thought of. The
>> benefits that 5.3-5.5 provide over these are lesser in comparison.
>>
>> There was some mention recently of another drive aimed at getting hosts to
>> update their PHP versions, similar to the GoPHP5 initiative back yonder. I
>> can't see this happening though.
>>
>> John
>>
>> On 7 November 2013 17:10, Justas Butkus <jbutkus at time.ly> wrote:
>>
>> > 2013.11.07 19:04, J.D. Grimes ra??:
>> >
>> >  I?ve often thought that the lead devs should just announce that support
>> >> for 5.2 will be dropped by a certain date, and see what happens.
>> >>
>> > Optionally using big red box in admin notification area and suggesting
>> > that next minimum supported version will be PHP 5.5.
>> >
>> > Actually, with our plugin (All-in-One Event Calendar) we see a bit
>> > different numbers (there might be some skew):
>> >     - more than 55% are using WordPress 3.6.1 or earlier;
>> >     - more than 20% are using PHP 5.2.x or earlier.
>> > Sure it says little about WordPress in general, but that's mostly why I
>> am
>> > interested, whereas WordPress maintainers has some chance to see, if
>> there
>> > might be few major players in hosting using old versions.
>> >
>> > --
>> > Justas Butkus
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>

From h at hyhs.me  Thu Nov  7 19:17:38 2013
From: h at hyhs.me (Helen Hou-Sandi)
Date: Thu, 7 Nov 2013 14:17:38 -0500
Subject: [wp-hackers] php -v
In-Reply-To: <CAHANiT4QfcMMLOZ9qM9xqaNhJpkdBuXvYt1SQhRrHkHp4Pe8Og@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CANa=bdqp5oZNETEVWBMTA0j1U2P83Th9_OjLrrtn0LtXszN6dg@mail.gmail.com>
 <527BC580.60003@time.ly>
 <34535877-3358-492E-96B3-F062196AD99A@codesymphony.co>
 <527BC997.3050604@time.ly>
 <CAOqAKWAQdGrhMJQ3snopfYFoNr1UzMbU=55uUhp0Fn_6gFcHVA@mail.gmail.com>
 <CAHANiT7KkaFTk6q5se__gXYNGeOp274+fgVTwr==aGv7d3tzQA@mail.gmail.com>
 <CAHANiT4QfcMMLOZ9qM9xqaNhJpkdBuXvYt1SQhRrHkHp4Pe8Og@mail.gmail.com>
Message-ID: <CAA0DF=_V+CqqUfWTSxbaLR2SdqerMiFLj2+k55emS+KvB+S3-g@mail.gmail.com>

To suggestions that the admin display a warning - though it sounds nice,
it's unlikely to be anything but unnecessarily scary for a user. It only
helps those who know how to upgrade their PHP version, and those who know
how to do so are rather unlikely to still be on 5.2, or 5.3 even. We can't
put the burden of what a host uses by default for a new site on a user who
didn't make that choice in the first place.

From banago at gmail.com  Thu Nov  7 21:02:13 2013
From: banago at gmail.com (Baki Goxhaj)
Date: Thu, 7 Nov 2013 22:02:13 +0100
Subject: [wp-hackers] php -v
In-Reply-To: <CAA0DF=_V+CqqUfWTSxbaLR2SdqerMiFLj2+k55emS+KvB+S3-g@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CANa=bdqp5oZNETEVWBMTA0j1U2P83Th9_OjLrrtn0LtXszN6dg@mail.gmail.com>
 <527BC580.60003@time.ly>
 <34535877-3358-492E-96B3-F062196AD99A@codesymphony.co>
 <527BC997.3050604@time.ly>
 <CAOqAKWAQdGrhMJQ3snopfYFoNr1UzMbU=55uUhp0Fn_6gFcHVA@mail.gmail.com>
 <CAHANiT7KkaFTk6q5se__gXYNGeOp274+fgVTwr==aGv7d3tzQA@mail.gmail.com>
 <CAHANiT4QfcMMLOZ9qM9xqaNhJpkdBuXvYt1SQhRrHkHp4Pe8Og@mail.gmail.com>
 <CAA0DF=_V+CqqUfWTSxbaLR2SdqerMiFLj2+k55emS+KvB+S3-g@mail.gmail.com>
Message-ID: <CAM_fM0pT2aEjUKzi78X-eCuhVxX-NyMDjV3PCz2d0O036C31=A@mail.gmail.com>

I see some folks don't see the benefits of upgrading to 5.3, but it would
be huge architecture-wise. Thomas Scholz has summarized some of the
benefits above.

WordPress has to keep the pace with the language before it becomes to dull
to work with. The developers are one of the major factors that push
WordPress forward and I would be very vigilant to keep them happy. Staying
with 5.2 for much longer is not going to make them happy for sure.

One model of upgrading the PHP version is the jQuery model. They maintain
two versions, one that supports old browsers and one that is better,
faster, modular for the new browsers. In the case of WordPress, it would be
even more easier. Let's say, WordPress 3.9 will be the last version of
WordPress to support PHP 5.2. On the other hand, WordPress 4.0 would be
5.3. The legacy version can be maintained for a long time and updated with
little features that won't hurt. And the rest of the ecosystem will be
given a superior WordPress version that will make the folks running the old
one want to upgrade. I see this as a very good strategy to make people
upgrade their PHP version.

Thoughts?

Kindly,

Baki Goxhaj
about.me/banago


On Thu, Nov 7, 2013 at 8:17 PM, Helen Hou-Sandi <h at hyhs.me> wrote:

> To suggestions that the admin display a warning - though it sounds nice,
> it's unlikely to be anything but unnecessarily scary for a user. It only
> helps those who know how to upgrade their PHP version, and those who know
> how to do so are rather unlikely to still be on 5.2, or 5.3 even. We can't
> put the burden of what a host uses by default for a new site on a user who
> didn't make that choice in the first place.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mailing at markoheijnen.nl  Thu Nov  7 21:41:42 2013
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Thu, 7 Nov 2013 22:41:42 +0100
Subject: [wp-hackers] php -v
In-Reply-To: <CAM_fM0pT2aEjUKzi78X-eCuhVxX-NyMDjV3PCz2d0O036C31=A@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CANa=bdqp5oZNETEVWBMTA0j1U2P83Th9_OjLrrtn0LtXszN6dg@mail.gmail.com>
 <527BC580.60003@time.ly>
 <34535877-3358-492E-96B3-F062196AD99A@codesymphony.co>
 <527BC997.3050604@time.ly>
 <CAOqAKWAQdGrhMJQ3snopfYFoNr1UzMbU=55uUhp0Fn_6gFcHVA@mail.gmail.com>
 <CAHANiT7KkaFTk6q5se__gXYNGeOp274+fgVTwr==aGv7d3tzQA@mail.gmail.com>
 <CAHANiT4QfcMMLOZ9qM9xqaNhJpkdBuXvYt1SQhRrHkHp4Pe8Og@mail.gmail.com>
 <CAA0DF=_V+CqqUfWTSxbaLR2SdqerMiFLj2+k55emS+KvB+S3-g@mail.gmail.com>
 <CAM_fM0pT2aEjUKzi78X-eCuhVxX-NyMDjV3PCz2d0O036C31=A@mail.gmail.com>
Message-ID: <22A954F4-CE23-4752-97FE-26D17C0EC335@markoheijnen.nl>

If core still can work on 5.2 then that is the requirement. It?s stupid to say that it?s 5.3 when it still can run fine on 5.2.
If you only want to have WordPress doing so because you as a plugin developer using 5.3+ functionality then the issue is on you.

If you think WordPress can gain a lot of PHP 5.3 then create a repo on GitHub and start working on those improvements and see if that works out.
Personally I would hate it when WordPress would use namespaces for example. It?s ugly to look at and make it a bit harder for the average WP developer.

In the end WordPress probably would do something like a legacy version because the upgraded will then not allow you to upgrade to the next version.
We can add features but at least we can do security fixes.

Marko


Op 7 nov. 2013, om 22:02 heeft Baki Goxhaj <banago at gmail.com> het volgende geschreven:

> I see some folks don't see the benefits of upgrading to 5.3, but it would
> be huge architecture-wise. Thomas Scholz has summarized some of the
> benefits above.
> 
> WordPress has to keep the pace with the language before it becomes to dull
> to work with. The developers are one of the major factors that push
> WordPress forward and I would be very vigilant to keep them happy. Staying
> with 5.2 for much longer is not going to make them happy for sure.
> 
> One model of upgrading the PHP version is the jQuery model. They maintain
> two versions, one that supports old browsers and one that is better,
> faster, modular for the new browsers. In the case of WordPress, it would be
> even more easier. Let's say, WordPress 3.9 will be the last version of
> WordPress to support PHP 5.2. On the other hand, WordPress 4.0 would be
> 5.3. The legacy version can be maintained for a long time and updated with
> little features that won't hurt. And the rest of the ecosystem will be
> given a superior WordPress version that will make the folks running the old
> one want to upgrade. I see this as a very good strategy to make people
> upgrade their PHP version.
> 
> Thoughts?
> 
> Kindly,
> 
> Baki Goxhaj
> about.me/banago
> 
> 
> On Thu, Nov 7, 2013 at 8:17 PM, Helen Hou-Sandi <h at hyhs.me> wrote:
> 
>> To suggestions that the admin display a warning - though it sounds nice,
>> it's unlikely to be anything but unnecessarily scary for a user. It only
>> helps those who know how to upgrade their PHP version, and those who know
>> how to do so are rather unlikely to still be on 5.2, or 5.3 even. We can't
>> put the burden of what a host uses by default for a new site on a user who
>> didn't make that choice in the first place.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From wordpress at dd32.id.au  Thu Nov  7 23:39:10 2013
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Fri, 8 Nov 2013 10:39:10 +1100
Subject: [wp-hackers] php -v
In-Reply-To: <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
Message-ID: <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>

FWIW, I did a random sampling of some 3.7.1 API requests, and that too
showed about 50% of users on 5.2.17, which mostly agree's with
http://wordpress.org/about/stats/ (I was really hoping that PHP 5.2 was
more common amongst older versions of WordPress, but that was proved wrong)

A number of larger american hosts defaulted to PHP 5.2 a long time ago and
never forced users to update. A number of them are currently mass-migrating
users to PHP 5.3 so it'll be interesting to see how that changes the tide
in the coming months.



On 8 November 2013 03:43, Baki Goxhaj <banago at gmail.com> wrote:

> That graph is very outdated. Look here instead:
> http://w3techs.com/technologies/details/pl-php/5/all
>
> Because I use a small class on my themes that requires 3.5, I've asked 10+
> clients to upgrade PHP to more then 5.2 and the good news is all of them
> have done so with no issue at all. It seems people still use 5.2 in many
> hosts because that was pre-selected 3-4 years ago when the signed up.
>
> I think WordPress can make a difference in this sphere by requiring at
> least 5.3.
>
> Kindly,
>
> Baki Goxhaj
> about.me/banago
>
>
> On Thu, Nov 7, 2013 at 5:38 PM, Abdussamad Abdurrazzaq <
> abdussamad at abdussamad.com> wrote:
>
> > Far too many people are still on 5.2:
> >
> > http://wordpress.org/about/stats/
> >
> >
> > On 11/07/2013 09:29 PM, Baki Goxhaj wrote:
> >
> >> Hi guys,
> >>
> >> Are there any plans to upgrade the minimum required version of PHP in
> WP?
> >> I
> >> think we are falling a little behind.
> >>
> >> What's the word on that?
> >>
> >> Kindly,
> >>
> >> Baki Goxhaj
> >> about.me/banago
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >>  _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From danielx386 at gmail.com  Thu Nov  7 23:39:51 2013
From: danielx386 at gmail.com (Daniel)
Date: Fri, 8 Nov 2013 10:39:51 +1100
Subject: [wp-hackers] Automatic Theme Updater for Self-Hosted Themes
Message-ID: <CAJ5Hi2hafvZogbmCswEKAhDj817_mTqkKY=hH=mEBTyrX2Sz3A@mail.gmail.com>

Hi guys,

Just a general question, I'm considering putting in
https://github.com/jeremyclark13/automatic-theme-plugin-update to
handle updates for a theme that I can't host on WP.org (it's open
source but the way it work is the show stopper).

I'm just wondering if anyone here use it on a live server and if so
are there any security issues that I should be aware of?

Thank-you,
Daniel


 PS, this is what I'm working on:
https://www.phpbb.com/community/viewtopic.php?f=70&t=2208986 but it
does have a theme that is required to be installed on wordpress in
order for everything to work.

From chris at lod.com  Fri Nov  8 00:19:22 2013
From: chris at lod.com (Chris McCoy)
Date: Thu, 07 Nov 2013 19:19:22 -0500
Subject: [wp-hackers] Automatic Theme Updater for Self-Hosted Themes
In-Reply-To: <CAJ5Hi2hafvZogbmCswEKAhDj817_mTqkKY=hH=mEBTyrX2Sz3A@mail.gmail.com>
Message-ID: <CEA1980B.49F2%chris@lod.com>

i use wp-updates.com which is great, you can signup for an account to get
1 free plugin or theme.

a lot of premium products use this for updates.

just an alternative solution.

On 11/7/2013, 6:39 PM, "Daniel" <danielx386 at gmail.com> wrote:

>Hi guys,
>
>Just a general question, I'm considering putting in
>https://github.com/jeremyclark13/automatic-theme-plugin-update to
>handle updates for a theme that I can't host on WP.org (it's open
>source but the way it work is the show stopper).
>
>I'm just wondering if anyone here use it on a live server and if so
>are there any security issues that I should be aware of?
>
>Thank-you,
>Daniel
>
>
> PS, this is what I'm working on:
>https://www.phpbb.com/community/viewtopic.php?f=70&t=2208986 but it
>does have a theme that is required to be installed on wordpress in
>order for everything to work.
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers



From chris at lod.com  Fri Nov  8 00:24:39 2013
From: chris at lod.com (Chris McCoy)
Date: Thu, 07 Nov 2013 19:24:39 -0500
Subject: [wp-hackers] Automatic Theme Updater for Self-Hosted Themes
In-Reply-To: <CAJ5Hi2hafvZogbmCswEKAhDj817_mTqkKY=hH=mEBTyrX2Sz3A@mail.gmail.com>
Message-ID: <CEA19966.49F6%chris@lod.com>

also if you plan on hosting it on github this will work, i have used this
before.

https://github.com/jkudish/WordPress-GitHub-Plugin-Updater



On 11/7/2013, 6:39 PM, "Daniel" <danielx386 at gmail.com> wrote:

>Hi guys,
>
>Just a general question, I'm considering putting in
>https://github.com/jeremyclark13/automatic-theme-plugin-update to
>handle updates for a theme that I can't host on WP.org (it's open
>source but the way it work is the show stopper).
>
>I'm just wondering if anyone here use it on a live server and if so
>are there any security issues that I should be aware of?
>
>Thank-you,
>Daniel
>
>
> PS, this is what I'm working on:
>https://www.phpbb.com/community/viewtopic.php?f=70&t=2208986 but it
>does have a theme that is required to be installed on wordpress in
>order for everything to work.
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers



From danielx386 at gmail.com  Fri Nov  8 00:45:04 2013
From: danielx386 at gmail.com (Daniel)
Date: Fri, 8 Nov 2013 11:45:04 +1100
Subject: [wp-hackers] Automatic Theme Updater for Self-Hosted Themes
In-Reply-To: <CEA1980B.49F2%chris@lod.com>
References: <CAJ5Hi2hafvZogbmCswEKAhDj817_mTqkKY=hH=mEBTyrX2Sz3A@mail.gmail.com>
 <CEA1980B.49F2%chris@lod.com>
Message-ID: <CAJ5Hi2idaTwH54ZYus_6nkn3Ub0wAFSJ2_MHnkSUeDXJc_Vkkw@mail.gmail.com>

Hi there,

Thank-you for the link, I will check wp-updates out, I was thinking of
doing everything myself so that I don't need to worry about relying on
a external service going down but I won't say no for any ideas that
someone may have :)

GIthub: that won't work as it a theme that I'm working on.

Thank-you :)

Daniel







On Fri, Nov 8, 2013 at 11:19 AM, Chris McCoy <chris at lod.com> wrote:
> i use wp-updates.com which is great, you can signup for an account to get
> 1 free plugin or theme.
>
> a lot of premium products use this for updates.
>
> just an alternative solution.
>
> On 11/7/2013, 6:39 PM, "Daniel" <danielx386 at gmail.com> wrote:
>
>>Hi guys,
>>
>>Just a general question, I'm considering putting in
>>https://github.com/jeremyclark13/automatic-theme-plugin-update to
>>handle updates for a theme that I can't host on WP.org (it's open
>>source but the way it work is the show stopper).
>>
>>I'm just wondering if anyone here use it on a live server and if so
>>are there any security issues that I should be aware of?
>>
>>Thank-you,
>>Daniel
>>
>>
>> PS, this is what I'm working on:
>>https://www.phpbb.com/community/viewtopic.php?f=70&t=2208986 but it
>>does have a theme that is required to be installed on wordpress in
>>order for everything to work.
>>_______________________________________________
>>wp-hackers mailing list
>>wp-hackers at lists.automattic.com
>>http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From dailyrants at gmail.com  Fri Nov  8 01:03:43 2013
From: dailyrants at gmail.com (John)
Date: Thu, 7 Nov 2013 20:03:43 -0500
Subject: [wp-hackers] Automatic Theme Updater for Self-Hosted Themes
In-Reply-To: <CAJ5Hi2hafvZogbmCswEKAhDj817_mTqkKY=hH=mEBTyrX2Sz3A@mail.gmail.com>
References: <CAJ5Hi2hafvZogbmCswEKAhDj817_mTqkKY=hH=mEBTyrX2Sz3A@mail.gmail.com>
Message-ID: <CAPYXUfWfJ2pHGweLKwmJd7O25zvUWj-YCy1m9VSc2hjKie97bQ@mail.gmail.com>

I've used these two successfully.

Themes -
http://w-shadow.com/blog/2011/06/02/automatic-updates-for-commercial-themes/

Plugins -
http://w-shadow.com/blog/2010/09/02/automatic-updates-for-any-plugin/



On Thu, Nov 7, 2013 at 6:39 PM, Daniel <danielx386 at gmail.com> wrote:

> Hi guys,
>
> Just a general question, I'm considering putting in
> https://github.com/jeremyclark13/automatic-theme-plugin-update to
> handle updates for a theme that I can't host on WP.org (it's open
> source but the way it work is the show stopper).
>
> I'm just wondering if anyone here use it on a live server and if so
> are there any security issues that I should be aware of?
>
> Thank-you,
> Daniel
>
>
>  PS, this is what I'm working on:
> https://www.phpbb.com/community/viewtopic.php?f=70&t=2208986 but it
> does have a theme that is required to be installed on wordpress in
> order for everything to work.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dailyrants at gmail.com  Fri Nov  8 01:07:36 2013
From: dailyrants at gmail.com (John)
Date: Thu, 7 Nov 2013 20:07:36 -0500
Subject: [wp-hackers] Fetching posts by URL
In-Reply-To: <B5A93535-271E-48B7-8357-C70C730E1165@gmail.com>
References: <B5A93535-271E-48B7-8357-C70C730E1165@gmail.com>
Message-ID: <CAPYXUfX5j4MT3iqjmj1XiNJ2-ibztnEa970BWbrvQum4+fGbow@mail.gmail.com>

Tareq Hasan has done a proof of concept theme using Backbone.js and the
JSON API plugin by Ryan McCue. Here's the Github repo for it, and there's a
link to his site for more info and a demo.
https://github.com/tareq1988/wp-backbone


On Thu, Nov 7, 2013 at 11:06 AM, Joshua Sibelman
<joshua.sibelman at gmail.com>wrote:

> Looking for opinions on an approach for building a single page WP site,
> where WP is used as a CMS, e.g. many CPTs, posts 2 posts, etc.
>
> Ideally I'd be able to have all the links point to their respective posts'
> permalinks, with JavaScript intercepting the clicks and passing the path to
> a custom controller for the JSON API plugin. This way spiders can still
> crawl the site, and I can use progressive enhancement to remove the full
> page reloads.
>
> What I want to be able to do is the same kind of processing done by
> WP->parse_request, but that method relies on analyzing the URL visited in
> the browser.
>
> It seems I could either try to reproduce that method to handle a provided
> path, or I could try using data attributes in the href tags which the
> JavaScript could pass to the JSON API as arguments to get the correct
> resource.
>
> Has anyone else done something like this? Does anyone have an opinion as
> to which method might be best? I have also considered using
> get_page_by_path, but we are doing some idiosyncratic things with how some
> of the data is organized and I'm worried that would be more complicated
> than either of the above approaches.
>
> Cheers,
> Josh
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From lists at rotorised.com  Fri Nov  8 03:17:22 2013
From: lists at rotorised.com (Ryan McCue)
Date: Fri, 08 Nov 2013 13:17:22 +1000
Subject: [wp-hackers] php -v
In-Reply-To: <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
Message-ID: <527C57C2.9080902@rotorised.com>

Dion Hulse (dd32) wrote:
> FWIW, I did a random sampling of some 3.7.1 API requests, and that too
> showed about 50% of users on 5.2.17, which mostly agree's with
> http://wordpress.org/about/stats/ (I was really hoping that PHP 5.2 was
> more common amongst older versions of WordPress, but that was proved wrong)
> 
> A number of larger american hosts defaulted to PHP 5.2 a long time ago and
> never forced users to update. A number of them are currently mass-migrating
> users to PHP 5.3 so it'll be interesting to see how that changes the tide
> in the coming months.

In addition, there's a bunch of different people working with hosts to
push this forward. I hate to be opaque and not give any details, but
suffice to say that there's a few big hosts pushing forward on this now.

The PHP-FIG (Framework Interoperability Group) is looking at a new
GoPHP5-style initiative, and I'm acting as the (unofficial)
representative for WP there as well.

----

With regards to the arguments that we could rearchitecture WP to be more
modern, etc etc, that's realistically not going to happen due to
backwards compatibility concerns. I doubt we'll be switching out for
autoloaders any time soon (they have performance concerns that need to
be fully concerned, for one), for example. It's also pretty unlikely
that we start rewriting pieces of WP to use 5.3+ features.

Maintaining a separate branch for compatibility is also not a real
option. We tried it before with 2.0, and as Mark Jaquith can attest, it
sucked to manage.

As much as I'd love personally to go and rewrite a heap of WP to fit in,
it's realistically not going to happen.

The (perhaps unofficial) policy that I recall is that we can try out
5.3+ features as a sort of progressive enhancement that's only available
to 5.3+ users as a sort of enticement. As far as I know, we haven't
actually had any issues where 5.3+ would be required for a feature, or
at least that couldn't be done in a 5.2-compatible way, so there's been
no significant push there.

----

This all said, if you want to help make WP better in this regard, get in
and start helping out. I'm trying really hard to make the WP-API project
[1] a model to follow with regards to modern WP features; there's
interfaces *and* reflection! My hope is that some of the WP-API core
will end up merged into WP's core (that is, WP/WP_Query/WP_Post/etc) and
have significant effects outside just the API.

If there's specific areas of WP that you think need modernisation (and I
don't necessarily mean 5.3+ things; we still have PHP4 idioms in
places), do something about it. Mention it here if you think it's a
major issue, and we can start a discussion about it. Even better, create
a proof-of-concept patch!

[1]: https://github.com/WP-API/WP-API

-- 
Ryan McCue
<http://ryanmccue.info/>

From tcbarrett at gmail.com  Fri Nov  8 14:22:38 2013
From: tcbarrett at gmail.com (Tom Barrett)
Date: Fri, 8 Nov 2013 14:22:38 +0000
Subject: [wp-hackers] Allowing theme to override plugin markup on data
In-Reply-To: <CAPYXUfXp8hWVLxbRv0=4gnjJDZqBOqQ=+CK0qH083=Lhk_kCxg@mail.gmail.com>
References: <CAEgmxaa85dUhbJNLvSYeKveEQhNkwiNPAZQ=JW5uZERU=5S97g@mail.gmail.com>
 <CAPYXUfXp8hWVLxbRv0=4gnjJDZqBOqQ=+CK0qH083=Lhk_kCxg@mail.gmail.com>
Message-ID: <CAEgmxaZrO2-JqxBu3Mmucny0UYv3U0_xhwfzgQ+A43qKvm8yGg@mail.gmail.com>

Thanks John

I can see the bbPress does some clever stuff with making their own template
stack.

I think I'll try something with filters and hope that
http://core.trac.wordpress.org/ticket/22355 gets to see the light of day :)


On 7 November 2013 18:17, John <dailyrants at gmail.com> wrote:

> I've done this by checking if a template exists in the theme directory,
> using locate_template( 'single-post-type.php' ), and if not loading
> template parts from the plugin dir and/or filtering the_content. The
> assumption being, if the theme isn't handling the custom post type template
> stuff, my plugins needed to.
>
> bbPress has a good example of modifying the template stack and loading them
> from the plugin dir if they don't exist in the child or parent theme
> directories. I think the function is named bbp_locate_template. See also
> bbp_get_template_part.
>
>
> On Thu, Nov 7, 2013 at 10:45 AM, Tom Barrett <tcbarrett at gmail.com> wrote:
>
> > I'm writing a shortcode that is going to produce a list of items (oof!).
> > It's a custom post type, with some meta. Pretty much a standard loop
> > scenario.
> >
> > I'd like the shortcode to produce some basic output, and let the theme
> > really jazz things up. Ideally I'd have the data available with no markup
> > (for the theme) and then, if the theme doesn't do anything, let the
> plugin
> > apply some simple markup of it's own.
> >
> > Any recommendations on how to engineer this the best?
> >
> > --
> > http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> > http://twitter.com/tcbarrett
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From eric at eam.me  Fri Nov  8 16:36:22 2013
From: eric at eam.me (Eric Mann)
Date: Fri, 8 Nov 2013 08:36:22 -0800
Subject: [wp-hackers] php -v
In-Reply-To: <527C57C2.9080902@rotorised.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
Message-ID: <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>

>
> If core still can work on 5.2 then that is the requirement. It?s stupid to
> say that it?s 5.3 when it still can run fine on 5.2.


You're missing the point. Core can still work on 5.2 *because* 5.2 is the
minimum requirement. It would be "stupid" to put a feature that requires
5.3 into core because it would be rejected out of hand by committers since
it would, you guessed it, make it so that core will not run on the minimum
required version.

So long as 5.2 is the minimum requirement, core will *always* run on at
least 5.2.  We have to raise the requirement before we can start putting
5.3 (or 5.4 or 5.5) code into core.


> FWIW, I did a random sampling of some 3.7.1 API requests, and that too showed
> about 50% of users on 5.2.17


Would be nice if we could update the stats page to make this kind of
information publicly available. Would help us (developers) better target
our code and would go miles in helping to tone down the attitude of this
kind of conversation in the future.

It's also pretty unlikely that we start rewriting pieces of WP to use 5.3+
> features.


Agreed. But the ability to start writing *new* features for WP using 5.3+
code features would be beneficial.  I like our backwards compatibility and
it's one of the reasons WordPress is so powerful. But as we add new
features into core it would be fantastic if we could write them using, say,
namespaces to isolate the new functionality from workarounds/hacks/poor
code already present in themes and plugins that implement said features in
their own way.

The (perhaps unofficial) policy that I recall is that we can try out 5.3+
> features as a sort of progressive enhancement that's only available to 5.3+
> users as a sort of enticement.


This. I really like this idea. Would be fairly easy to expose a
PHP_BLEEDING or similar constant in core and use that as a switch to turn
on/off enhanced (new) features. My hesitation here is the same as Helen
pointed out earlier - most end users have no idea what PHP is, how it
works, what version they're running, or how to upgrade.  By hiding new
features behind a versioned wall, we're introducing a world where WordPress
is advertised to have X feature, but when Jimmy Blogger clicks the
auto-install button on his hosting dashboard, X feature is nowhere to be
found.  He'll blame WordPress, not his host, for the discrepancy.

From otto at ottodestruct.com  Fri Nov  8 16:44:10 2013
From: otto at ottodestruct.com (Otto)
Date: Fri, 8 Nov 2013 10:44:10 -0600
Subject: [wp-hackers] php -v
In-Reply-To: <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
 <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
Message-ID: <CAD-FghwXwWTcjuTD+ZEGuQa_jO+h+x0X-P_E7J-Ky7Rvb8r+Yg@mail.gmail.com>

On Fri, Nov 8, 2013 at 10:36 AM, Eric Mann <eric at eam.me> wrote:

> > FWIW, I did a random sampling of some 3.7.1 API requests, and that too
> showed
> > about 50% of users on 5.2.17
>
> Would be nice if we could update the stats page to make this kind of
> information publicly available. Would help us (developers) better target
> our code and would go miles in helping to tone down the attitude of this
> kind of conversation in the future.


I'm not getting involved in this conversation, other than to say this. ;)

The data used for the graphs on the stats page are built daily, using a
random(ish) sampling of the API requests from the previous day.

What you see on that page is current and up-to-date. It's not counting
every install in the world, or months-old installs, or inactive installs
that nobody is visiting. It's built from just the API requests from the day
before.

-Otto

From banago at gmail.com  Fri Nov  8 16:53:38 2013
From: banago at gmail.com (Baki Goxhaj)
Date: Fri, 8 Nov 2013 17:53:38 +0100
Subject: [wp-hackers] php -v
In-Reply-To: <CAD-FghwXwWTcjuTD+ZEGuQa_jO+h+x0X-P_E7J-Ky7Rvb8r+Yg@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
 <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
 <CAD-FghwXwWTcjuTD+ZEGuQa_jO+h+x0X-P_E7J-Ky7Rvb8r+Yg@mail.gmail.com>
Message-ID: <CAM_fM0p1XDgF3Z-Hv+KjExPbmOxKgzoo4ZVcnT=oSxDj8v+kfA@mail.gmail.com>

Perhaps to close this off for now all I have to say is this:

WordPress won't become that App platform that you can build anything on
which Matt presented as the future of WP in WPSF unless the system makes
use of the new goodness of PHP.

What would be the best route? I don't know. Does WP have to raise the bar?
Yes!

Kindly,

Baki Goxhaj
about.me/banago


On Fri, Nov 8, 2013 at 5:44 PM, Otto <otto at ottodestruct.com> wrote:

> On Fri, Nov 8, 2013 at 10:36 AM, Eric Mann <eric at eam.me> wrote:
>
> > > FWIW, I did a random sampling of some 3.7.1 API requests, and that too
> > showed
> > > about 50% of users on 5.2.17
> >
> > Would be nice if we could update the stats page to make this kind of
> > information publicly available. Would help us (developers) better target
> > our code and would go miles in helping to tone down the attitude of this
> > kind of conversation in the future.
>
>
> I'm not getting involved in this conversation, other than to say this. ;)
>
> The data used for the graphs on the stats page are built daily, using a
> random(ish) sampling of the API requests from the previous day.
>
> What you see on that page is current and up-to-date. It's not counting
> every install in the world, or months-old installs, or inactive installs
> that nobody is visiting. It's built from just the API requests from the day
> before.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From eric at eam.me  Fri Nov  8 17:24:03 2013
From: eric at eam.me (Eric Mann)
Date: Fri, 8 Nov 2013 09:24:03 -0800
Subject: [wp-hackers] php -v
In-Reply-To: <CAD-FghwXwWTcjuTD+ZEGuQa_jO+h+x0X-P_E7J-Ky7Rvb8r+Yg@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
 <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
 <CAD-FghwXwWTcjuTD+ZEGuQa_jO+h+x0X-P_E7J-Ky7Rvb8r+Yg@mail.gmail.com>
Message-ID: <CAEi=p500KWQvhVw2fVOC4Wmo=XxfWdVhnQba-CBgsSTvTikY0A@mail.gmail.com>

>
> What you see on that page is current and up-to-date. It's not counting every
> install in the world, or months-old installs, or inactive installs that
> nobody is visiting. It's built from just the API requests from the day
> before.


Yes, and this is good to know. But when many of us are saying "old
installs" we're referring to the 94.5% of WordPress installs that are less
than the current version.  3.7.1 is out, and the 3.7.X branch only makes up
~5.5% of the version chart.  How many of *those* installations are on older
versions of PHP.

According to those stats, more than a quarter of "active" sites are still
running WordPress 3.0 ... not being able to see juxtapose PHP versions and
WordPress versions makes it nearly impossible for anyone to create any sort
of conclusion based on this stats page, yet it's cited in every single "we
won't raise the minimum version" debate.

From ian at iandunn.name  Fri Nov  8 17:35:17 2013
From: ian at iandunn.name (Ian Dunn)
Date: Fri, 08 Nov 2013 09:35:17 -0800
Subject: [wp-hackers] php -v
In-Reply-To: <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
 <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
Message-ID: <527D20D5.3060700@iandunn.name>

On 11/8/13 8:36 AM, Eric Mann wrote:
> My hesitation here is the same as Helen
> pointed out earlier - most end users have no idea what PHP is, how it
> works, what version they're running, or how to upgrade.  By hiding new
> features behind a versioned wall, we're introducing a world where WordPress
> is advertised to have X feature, but when Jimmy Blogger clicks the
> auto-install button on his hosting dashboard, X feature is nowhere to be
> found.  He'll blame WordPress, not his host, for the discrepancy.

What if instead of hiding the feature, we replaced it with a short 
explanation? So, if they have 5.3+ then the screen for Feature X works 
like normal, but if they don't then the screen will still appear in 
menus, etc, but when the user visits the page they'll see a paragraph 
saying something like, "Your server is running a very old version of 
PHP, and it is not capable of supporting Feature X. Please contact your 
hosting company or administrator and ask them to upgrade your site to 
the latest version of PHP."

That way the user would know that the feature exists, and that their 
hosting company is to blame for why it doesn't work, and that the action 
they need to take is to contact the host.

From wp at andrewnacin.com  Fri Nov  8 17:43:31 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 8 Nov 2013 12:43:31 -0500
Subject: [wp-hackers] php -v
In-Reply-To: <CAM_fM0p1XDgF3Z-Hv+KjExPbmOxKgzoo4ZVcnT=oSxDj8v+kfA@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
 <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
 <CAD-FghwXwWTcjuTD+ZEGuQa_jO+h+x0X-P_E7J-Ky7Rvb8r+Yg@mail.gmail.com>
 <CAM_fM0p1XDgF3Z-Hv+KjExPbmOxKgzoo4ZVcnT=oSxDj8v+kfA@mail.gmail.com>
Message-ID: <CAP29PvgEN3NYPG59-NYjAZXdgmqTfdWrW6p3MHKXJ3QLxP+iBg@mail.gmail.com>

On Fri, Nov 8, 2013 at 11:53 AM, Baki Goxhaj <banago at gmail.com> wrote:

> WordPress won't become that App platform that you can build anything on
> which Matt presented as the future of WP in WPSF unless the system makes
> use of the new goodness of PHP.


Yeah, no. Nothing is preventing *you* from using newer features you enjoy.
But WordPress core will continue with its minimum requirements for some
time. As John Blackbourn summarized, there are some niceties in PHP 5.3,
5.4, and 5.5, but nothing in them provide a benefit that would outweigh
literally abandoning a half (or more) of our userbase on old software,
unable to ever update WordPress again. (FWIW, since I saw this question was
asked: I don't think it's just a few hosting companies keeping most of our
userbase on 5.2.17. Bluehost, which is huge, recently pushed their servers
from 5.2 to 5.4, and the needle barely moved.)

 * short array syntax, ?:, <?=, function array dereferencing, empty()
supporting arbitrary expressions, etc. are syntactical sugar ? they're
nice, but not something to abandon our users for
  * generators, traits, and late static bindings are cool, but their use
cases are fairly limited, you can architect things differently to work
around the lack of them, and they're not something to abandon our users for
 * closures are also cool, but they can largely be replaced by functions
and methods, and they also don't have much of a role in our hooks system
(as a closure attached to a hook can't easily be removed later)
 * namespaces aren't backwards compatible so we won't be able to leverage
them much anyway
 * it's about time PHP 5.5 added finally to try/catch, but we don't
currently use exceptions in WordPress
 * we already use spl_object_hash() when it is available (and it basically
always is, SPL is nearly never disabled)
 * we *could* do SPL autoloading for 5.3+ (and manual includes for 5.2) but
I've tried it and didn't see a performance benefit (happy to be proven
wrong)
 * we already have a solid password hashing mechanism, and we'd likely just
adopt/wrap the 5.5 one at a later point

Would it be "cooler" if we could use 5.3, 5.4, and 5.5 features/syntax/etc?
Absolutely. But 5.2 isn't what PHP 4 was. It's actually pretty decent and
does the job we've asked of it. I think we've been doing this all wrong.
Pushing 5.3+ for the purposes of developer happiness isn't going to get us
anywhere. We had some PHP 5.2-only features (for example, timezone support
and oEmbed XML handling) back when our minimum requirement was PHP 4, but
as Ryan McCue pointed out, I've yet to actually see something of
consequence for which we'd need PHP 5.3+.

If it's not developer happiness, then what is it? I'd argue performance,
stability, and security. We've been leaning on hosting companies and will
continue to do so because it's going to be better for them for these
reasons. Unfortunately, a lot of other software (not named WordPress) break
terribly on 5.3 or 5.4, so the hosts are in a tough spot, as they don't
want to break sites. The rise of WordPress-specific hosts ? and
WordPress-specific hosting plans within larger hosting companies ? actually
improves the chances that hosting companies will move faster, because
WordPress works on all modern versions of PHP without much issue.

Nacin

From wp at andrewnacin.com  Fri Nov  8 17:53:21 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 8 Nov 2013 12:53:21 -0500
Subject: [wp-hackers] php -v
In-Reply-To: <527D20D5.3060700@iandunn.name>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
 <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
 <527D20D5.3060700@iandunn.name>
Message-ID: <CAP29PvgqRUN-+1+UeVvZocYvaOMh+-qArL-yMGckBT5zwkdvCg@mail.gmail.com>

On Fri, Nov 8, 2013 at 12:35 PM, Ian Dunn <ian at iandunn.name> wrote:

> On 11/8/13 8:36 AM, Eric Mann wrote:
>
>> My hesitation here is the same as Helen
>> pointed out earlier - most end users have no idea what PHP is, how it
>> works, what version they're running, or how to upgrade.  By hiding new
>> features behind a versioned wall, we're introducing a world where
>> WordPress
>> is advertised to have X feature, but when Jimmy Blogger clicks the
>> auto-install button on his hosting dashboard, X feature is nowhere to be
>> found.  He'll blame WordPress, not his host, for the discrepancy.
>>
>
> What if instead of hiding the feature, we replaced it with a short
> explanation? So, if they have 5.3+ then the screen for Feature X works like
> normal, but if they don't then the screen will still appear in menus, etc,
> but when the user visits the page they'll see a paragraph saying something
> like, "Your server is running a very old version of PHP, and it is not
> capable of supporting Feature X. Please contact your hosting company or
> administrator and ask them to upgrade your site to the latest version of
> PHP."
>

First: as summarized in my previous post to this thread, I've yet to be
shown anything we'd want to build in 5.3+ only that we couldn't also easily
build for 5.2.

Second: Many of our users have extremely limited knowledge of their setup.
That includes not knowing what PHP is, or not realizing there is a
difference between their domain and their hosting, or not even remembering
who their host is, or being the "administrator" but having no clue about
any of this, including who to contact. It is not fair to them to present
them with a frustrating and highly technical problem and then ask them to
pass the buck to who-knows-who. We owe it to 20 percent of the Internet to
suck it up and absorb our technical debt so users don't have to. Passing on
technical problems to users is the antithesis of what we believe.

Third: But whether they do or not, we do not screw with our users like
this. WordPress is not a protest piece.

Further reading:
 * http://wordpress.org/about/philosophy/
 * http://ma.tt/2007/07/on-php/
 * http://nacin.com/2010/09/29/on-php-redux/

Nacin

From nl at thoughtrefinery.com  Fri Nov  8 17:56:26 2013
From: nl at thoughtrefinery.com (Nicholas Ciske)
Date: Fri, 8 Nov 2013 11:56:26 -0600
Subject: [wp-hackers] php -v
In-Reply-To: <CAP29PvgEN3NYPG59-NYjAZXdgmqTfdWrW6p3MHKXJ3QLxP+iBg@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
 <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
 <CAD-FghwXwWTcjuTD+ZEGuQa_jO+h+x0X-P_E7J-Ky7Rvb8r+Yg@mail.gmail.com>
 <CAM_fM0p1XDgF3Z-Hv+KjExPbmOxKgzoo4ZVcnT=oSxDj8v+kfA@mail.gmail.com>
 <CAP29PvgEN3NYPG59-NYjAZXdgmqTfdWrW6p3MHKXJ3QLxP+iBg@mail.gmail.com>
Message-ID: <4E893746-3692-4FED-A638-7A29048170CD@thoughtrefinery.com>

Case in point -- "developer happiness" is a slippery slope:
http://alexrayu.com/blog/drupal-forked-my-take-it


_________________________
Nick Ciske
http://thoughtrefinery.com/
@nciske	

On Nov 8, 2013, at 11:43 AM, Andrew Nacin wrote:

> If it's not developer happiness, then what is it? I'd argue performance,
> stability, and security.


From gabo.acosta624 at gmail.com  Fri Nov  8 19:17:15 2013
From: gabo.acosta624 at gmail.com (Gabriel Acosta)
Date: Fri, 8 Nov 2013 12:17:15 -0700
Subject: [wp-hackers] php -v
In-Reply-To: <4E893746-3692-4FED-A638-7A29048170CD@thoughtrefinery.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
 <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
 <CAD-FghwXwWTcjuTD+ZEGuQa_jO+h+x0X-P_E7J-Ky7Rvb8r+Yg@mail.gmail.com>
 <CAM_fM0p1XDgF3Z-Hv+KjExPbmOxKgzoo4ZVcnT=oSxDj8v+kfA@mail.gmail.com>
 <CAP29PvgEN3NYPG59-NYjAZXdgmqTfdWrW6p3MHKXJ3QLxP+iBg@mail.gmail.com>
 <4E893746-3692-4FED-A638-7A29048170CD@thoughtrefinery.com>
Message-ID: <CA+69t5=ByYY4To5pxPHoomxea_o5-chotwQNkTA7uQboNX0GJA@mail.gmail.com>

I would love to be part of a Wordpress fully MVC OOP fork (working over a
well stablished framework being a plus), count me in! I'm a professional
developer and I can't stand the current methodology to work with it, I'm
sorry, your ways may be more than valid but are certainly not in harmony to
what is being taught as "Modern Practices", let me repeat myself THERE
MIGHT NOT BE ANYTHING WRONG with your ways, but they're just not the ways
of must modern software projects.

To sum it up, I agree that you might not gain from a performance stand
point, but certainly you're not winning new developers either by staying as
is.


On Fri, Nov 8, 2013 at 10:56 AM, Nicholas Ciske <nl at thoughtrefinery.com>wrote:

> Case in point -- "developer happiness" is a slippery slope:
> http://alexrayu.com/blog/drupal-forked-my-take-it
>
>
> _________________________
> Nick Ciske
> http://thoughtrefinery.com/
> @nciske
>
> On Nov 8, 2013, at 11:43 AM, Andrew Nacin wrote:
>
> > If it's not developer happiness, then what is it? I'd argue performance,
> > stability, and security.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From info at toscho.de  Fri Nov  8 20:04:14 2013
From: info at toscho.de (Thomas Scholz)
Date: Fri, 08 Nov 2013 21:04:14 +0100
Subject: [wp-hackers] php -v
In-Reply-To: <CAP29PvgEN3NYPG59-NYjAZXdgmqTfdWrW6p3MHKXJ3QLxP+iBg@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
 <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
 <CAD-FghwXwWTcjuTD+ZEGuQa_jO+h+x0X-P_E7J-Ky7Rvb8r+Yg@mail.gmail.com>
 <CAM_fM0p1XDgF3Z-Hv+KjExPbmOxKgzoo4ZVcnT=oSxDj8v+kfA@mail.gmail.com>
 <CAP29PvgEN3NYPG59-NYjAZXdgmqTfdWrW6p3MHKXJ3QLxP+iBg@mail.gmail.com>
Message-ID: <op.w58x1cafr6yny2@fqdn.toscho.de>

Andrew Nacin,

> Yeah, no. Nothing is preventing *you* from using newer features you  
> enjoy.

That's not quite true. :)

Basic example: some API providers (Dropbox, Amazon and so on) offer PHP  
classes to access their APIs. Very comfortable, because as a plugin  
developer, you don't have to reinvent the wheel, and these tools are  
usually better tested than a single developer could do. But if they  
require at least PHP 5.3, you cannot use them.
The same applies to almost all existing frameworks and libraries: we  
cannot use that code, because so many users are still on 5.2, and we don't  
want to lose those.

This is not primarily about changes or new features in WP core. But by  
raising the requirements, WP would offer a better environment for plugin  
(and theme) authors. I think the overall code quality would be improved if  
we had not to reinvent everything we need.

This process should not be scary or annoying for the users. Of course. A  
short, nicely written hint would be a good start. Something like: Hey,  
your site would be faster and more secure after an PHP upgrade! _How can I  
do that?_ (helpful link)

Would that hurt anyone? I don't think so.

Thomas

From bryan at ibaku.net  Fri Nov  8 20:24:34 2013
From: bryan at ibaku.net (Bryan Petty)
Date: Fri, 8 Nov 2013 13:24:34 -0700
Subject: [wp-hackers] php -v
In-Reply-To: <op.w58x1cafr6yny2@fqdn.toscho.de>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
 <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
 <CAD-FghwXwWTcjuTD+ZEGuQa_jO+h+x0X-P_E7J-Ky7Rvb8r+Yg@mail.gmail.com>
 <CAM_fM0p1XDgF3Z-Hv+KjExPbmOxKgzoo4ZVcnT=oSxDj8v+kfA@mail.gmail.com>
 <CAP29PvgEN3NYPG59-NYjAZXdgmqTfdWrW6p3MHKXJ3QLxP+iBg@mail.gmail.com>
 <op.w58x1cafr6yny2@fqdn.toscho.de>
Message-ID: <CAKB8V+q7JR=BPnmE0wYTHWJ8iX6eJqwnkxSjBK9RRERaLTBRvw@mail.gmail.com>

On Fri, Nov 8, 2013 at 1:04 PM, Thomas Scholz <info at toscho.de> wrote:
> Basic example: some API providers (Dropbox, Amazon and so on) offer PHP
> classes to access their APIs. Very comfortable, because as a plugin
> developer, you don't have to reinvent the wheel, and these tools are usually
> better tested than a single developer could do. But if they require at least
> PHP 5.3, you cannot use them.
> The same applies to almost all existing frameworks and libraries: we cannot
> use that code, because so many users are still on 5.2, and we don't want to
> lose those.

None of that has anything to do with WordPress still supporting 5.2.
He was right, that doesn't mean you can't require 5.3+ in your plugins
that require those 5.3+ libraries, several plugins on WordPress.org
do.

Regards,
Bryan Petty

From wp at andrewnacin.com  Fri Nov  8 20:29:31 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 8 Nov 2013 15:29:31 -0500
Subject: [wp-hackers] php -v
In-Reply-To: <op.w58x1cafr6yny2@fqdn.toscho.de>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
 <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
 <CAD-FghwXwWTcjuTD+ZEGuQa_jO+h+x0X-P_E7J-Ky7Rvb8r+Yg@mail.gmail.com>
 <CAM_fM0p1XDgF3Z-Hv+KjExPbmOxKgzoo4ZVcnT=oSxDj8v+kfA@mail.gmail.com>
 <CAP29PvgEN3NYPG59-NYjAZXdgmqTfdWrW6p3MHKXJ3QLxP+iBg@mail.gmail.com>
 <op.w58x1cafr6yny2@fqdn.toscho.de>
Message-ID: <CAP29PvizMcwz8n7Hy86ek2Dzb+Me6pCA9-=W_VcWh2sgtkbr9w@mail.gmail.com>

On Fri, Nov 8, 2013 at 3:04 PM, Thomas Scholz <info at toscho.de> wrote:

> But by raising the requirements, WP would offer a better environment for
> plugin (and theme) authors.
>

If by better environment you mean vastly smaller user base. Feel free to
use that PHP 5.3 library, just make sure your plugin doesn't crash a 5.2
site and instead presents "a short, nicely written hint", as you suggest.
You're more than welcome to do that. WordPress will not.

Nacin

From wp at andrewnacin.com  Fri Nov  8 20:30:31 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Fri, 8 Nov 2013 15:30:31 -0500
Subject: [wp-hackers] php -v
In-Reply-To: <CA+69t5=ByYY4To5pxPHoomxea_o5-chotwQNkTA7uQboNX0GJA@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
 <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
 <CAD-FghwXwWTcjuTD+ZEGuQa_jO+h+x0X-P_E7J-Ky7Rvb8r+Yg@mail.gmail.com>
 <CAM_fM0p1XDgF3Z-Hv+KjExPbmOxKgzoo4ZVcnT=oSxDj8v+kfA@mail.gmail.com>
 <CAP29PvgEN3NYPG59-NYjAZXdgmqTfdWrW6p3MHKXJ3QLxP+iBg@mail.gmail.com>
 <4E893746-3692-4FED-A638-7A29048170CD@thoughtrefinery.com>
 <CA+69t5=ByYY4To5pxPHoomxea_o5-chotwQNkTA7uQboNX0GJA@mail.gmail.com>
Message-ID: <CAP29PvhgUu5YL9+EgVVRXqVwr6xYX3d+ZYMFSvDih33nDxDd_w@mail.gmail.com>

On Fri, Nov 8, 2013 at 2:17 PM, Gabriel Acosta <gabo.acosta624 at gmail.com>wrote:

> To sum it up, I agree that you might not gain from a performance stand
> point, but certainly you're not winning new developers either by staying as
> is.


No one is suggesting we're staying as-is. Rather, we've been evolving
fairly rapidly across the board. The argument is simply that PHP 5.2 isn't
slowing is down, and that dropping support for it won't provide any
benefit. PHP 5.2 is plenty modern for what we're aiming to do.

We added WP_Theme in 3.4 and WP_Post in 3.5. Both were used to rewrite
older code, improve performance and caching, and fix some long-standing
bugs. WP_Comment is probably next, along with WP_Term. But beyond cleanup,
they're setting the stage for us to move on exciting new things. For
example, they'll probably be decorated with methods for CRUD and other
operations. There's now a whole roadmap that outlines how we plan to remake
terms (adding meta) and possibly add post relationships ? which wouldn't be
possible without these kinds of major changes:
http://make.wordpress.org/core/2013/07/28/potential-roadmap-for-taxonomy-meta-and-post-relationships/.
Here's a flash talk I gave in August that touches on how we evolve forward
without breaking sites ? which includes PHP version and OOP (or whatever)
just the same: http://vip.wordpress.com/2013/09/27/nacin-wordpress-evolves/.

All I've mentioned here is bringing a little OOP to our objects. This is
just the tip of the iceberg.

Nacin

From lists at rotorised.com  Sat Nov  9 03:05:56 2013
From: lists at rotorised.com (Ryan McCue)
Date: Sat, 09 Nov 2013 13:05:56 +1000
Subject: [wp-hackers] php -v
In-Reply-To: <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
References: <CAM_fM0oT0Kbv+=2n3QmVVGk-5U6hDa2K5VAZEBuSxjyo+4Letw@mail.gmail.com>
 <527BC1EF.6030800@abdussamad.com>
 <CAM_fM0oBpAD4XNhmwSx=kUw=xHHnVgA9-r7BJYR4OGef2-tmug@mail.gmail.com>
 <CAL4EHf=e_yea2sM5JNoQW=AKeJj=a=jjQ03OG_DA_mb3JGh59A@mail.gmail.com>
 <527C57C2.9080902@rotorised.com>
 <CAEi=p530nM0Geb=NtKKoM2xsPDikZaXbTj==gbVz0PxpxLqKrw@mail.gmail.com>
Message-ID: <527DA694.2060606@rotorised.com>

Eric Mann wrote:
> This. I really like this idea. Would be fairly easy to expose a
> PHP_BLEEDING or similar constant in core and use that as a switch to turn
> on/off enhanced (new) features. My hesitation here is the same as Helen
> pointed out earlier - most end users have no idea what PHP is, how it
> works, what version they're running, or how to upgrade.  By hiding new
> features behind a versioned wall, we're introducing a world where WordPress
> is advertised to have X feature, but when Jimmy Blogger clicks the
> auto-install button on his hosting dashboard, X feature is nowhere to be
> found.  He'll blame WordPress, not his host, for the discrepancy.

To be clear, I was thinking more of behind-the-scenes developer-focused
features. Making use of performance enhancements where possible (ala
spl_object_hash()) and the like that still have a fallback, even if that
fallback isn't that great. Maybe even advanced APIs, but that's sort of
on the edge.

Introducing user-focused features that don't work with all WP installs
would be an incredibly bad idea.

-- 
Ryan McCue
<http://ryanmccue.info/>

From greglancaster71 at gmail.com  Mon Nov 11 18:01:36 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Mon, 11 Nov 2013 10:01:36 -0800 (PST)
Subject: [wp-hackers] Like Posts - Store Data in DB, User_Meta or Post_Meta
Message-ID: <1384192896261-42769.post@n5.nabble.com>

What would be the best option for storing which posts a user likes?  They
click a like button, and it can be stored in the post_meta, or the
user_meta, or a sep db table.  It seems to be that storing in the post_meta
would make the most sense, but I wanted to ask before moving ahead.



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Like-Posts-Store-Data-in-DB-User-Meta-or-Post-Meta-tp42769.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From hello at chriscct7.com  Mon Nov 11 18:12:49 2013
From: hello at chriscct7.com (chriscct7)
Date: Mon, 11 Nov 2013 10:12:49 -0800 (PST)
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or Post_Meta
In-Reply-To: <1384192896261-42769.post@n5.nabble.com>
References: <1384192896261-42769.post@n5.nabble.com>
Message-ID: <1384193569969-42770.post@n5.nabble.com>

It depends why you are storing it. If you store it in user_meta, to say make
a feature that lets users find the posts they favorited, you can get all the
posts in a single query to the user_meta, versus querying all posts that
have a meta_key with a meta_value that contains a given user->ID. Now if you
are making a feature where you want to know who favorited a post, store all
the user->Id's in a post_meta. Then for a given post you can query a single
post_meta versus querying all users with a given meta_key with a meta_value
that contains a given post->ID





--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Like-Posts-Store-Data-in-DB-User-Meta-or-Post-Meta-tp42769p42770.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From greglancaster71 at gmail.com  Mon Nov 11 18:14:28 2013
From: greglancaster71 at gmail.com (Gregory Lancaster)
Date: Mon, 11 Nov 2013 10:14:28 -0800
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or Post_Meta
In-Reply-To: <1384193569969-42770.post@n5.nabble.com>
References: <1384192896261-42769.post@n5.nabble.com>
 <1384193569969-42770.post@n5.nabble.com>
Message-ID: <CAPN-N+aS3oZq2BDnpQBSh1Wie7UxQW4tLE7jjjDgEOY9J9OO_A@mail.gmail.com>

The idea was actually to do both.  Show on a single post the number of
people who liked it, and on mouseover list the user IDs of the folks who
did.  Then on their profile page have a "this user liked 6 posts" or
whatever it may be, and have that be clickable to open a new page with the
lists of posts they liked.


On Mon, Nov 11, 2013 at 10:12 AM, chriscct7 <hello at chriscct7.com> wrote:

> It depends why you are storing it. If you store it in user_meta, to say
> make
> a feature that lets users find the posts they favorited, you can get all
> the
> posts in a single query to the user_meta, versus querying all posts that
> have a meta_key with a meta_value that contains a given user->ID. Now if
> you
> are making a feature where you want to know who favorited a post, store all
> the user->Id's in a post_meta. Then for a given post you can query a single
> post_meta versus querying all users with a given meta_key with a meta_value
> that contains a given post->ID
>
>
>
>
>
> --
> View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/Like-Posts-Store-Data-in-DB-User-Meta-or-Post-Meta-tp42769p42770.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From hello at chriscct7.com  Mon Nov 11 18:16:52 2013
From: hello at chriscct7.com (chriscct7)
Date: Mon, 11 Nov 2013 10:16:52 -0800 (PST)
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or Post_Meta
In-Reply-To: <CAPN-N+aS3oZq2BDnpQBSh1Wie7UxQW4tLE7jjjDgEOY9J9OO_A@mail.gmail.com>
References: <1384192896261-42769.post@n5.nabble.com>
 <1384193569969-42770.post@n5.nabble.com>
 <CAPN-N+aS3oZq2BDnpQBSh1Wie7UxQW4tLE7jjjDgEOY9J9OO_A@mail.gmail.com>
Message-ID: <1384193812074-42772.post@n5.nabble.com>

Sounds like the best thing would be to store it in both places. Saves two
potentially expensive query's as your site scales up.

-Chris



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Like-Posts-Store-Data-in-DB-User-Meta-or-Post-Meta-tp42769p42772.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From greglancaster71 at gmail.com  Mon Nov 11 18:18:46 2013
From: greglancaster71 at gmail.com (Gregory Lancaster)
Date: Mon, 11 Nov 2013 10:18:46 -0800
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or Post_Meta
In-Reply-To: <1384193812074-42772.post@n5.nabble.com>
References: <1384192896261-42769.post@n5.nabble.com>
 <1384193569969-42770.post@n5.nabble.com>
 <CAPN-N+aS3oZq2BDnpQBSh1Wie7UxQW4tLE7jjjDgEOY9J9OO_A@mail.gmail.com>
 <1384193812074-42772.post@n5.nabble.com>
Message-ID: <CAPN-N+ZB9UfVNKA=hD8O2P7Ud1Nwqir3cY6rLj4oo1-7z9O2gQ@mail.gmail.com>

Alright that is what I thought might be best, but I often get awesome
suggestions here for simplifying code I wrote so I had to ask.  Thanks


On Mon, Nov 11, 2013 at 10:16 AM, chriscct7 <hello at chriscct7.com> wrote:

> Sounds like the best thing would be to store it in both places. Saves two
> potentially expensive query's as your site scales up.
>
> -Chris
>
>
>
> --
> View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/Like-Posts-Store-Data-in-DB-User-Meta-or-Post-Meta-tp42769p42772.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From andrew.bartel at gmail.com  Mon Nov 11 18:42:13 2013
From: andrew.bartel at gmail.com (Andrew Bartel)
Date: Mon, 11 Nov 2013 10:42:13 -0800
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or Post_Meta
In-Reply-To: <CAPN-N+ZB9UfVNKA=hD8O2P7Ud1Nwqir3cY6rLj4oo1-7z9O2gQ@mail.gmail.com>
References: <1384192896261-42769.post@n5.nabble.com>
 <1384193569969-42770.post@n5.nabble.com>
 <CAPN-N+aS3oZq2BDnpQBSh1Wie7UxQW4tLE7jjjDgEOY9J9OO_A@mail.gmail.com>
 <1384193812074-42772.post@n5.nabble.com>
 <CAPN-N+ZB9UfVNKA=hD8O2P7Ud1Nwqir3cY6rLj4oo1-7z9O2gQ@mail.gmail.com>
Message-ID: <CAJnHr4j6ywgJvkdwU5oExA12ZGXYUGQj+n=VRPxERo+Q2vpg8A@mail.gmail.com>

I have to respectfully disagree with Chris, I wouldn't store it in both,
storing duplicate data in general is a dangerous path to go down.  It might
make sense at this moment, but say you want to add a feature six months
from now where someone can unlike a page from their profile and you only
write code to update the post_meta table, forgetting to update the
user_meta table.  Or maybe you bring another developer on and forget to
document that in the comments of every place that the updates can take
place.

Figure out which one is going to be the more expensive set or queries
(probably retrieving a list of users that have liked a post if you have a
large site) and store it there.  Cache the results for the other one if you
have to.  You shouldn't hit a performance bottleneck for quite a while
though if you use built in WP functions.

-Andrew


On Mon, Nov 11, 2013 at 10:18 AM, Gregory Lancaster <
greglancaster71 at gmail.com> wrote:

> Alright that is what I thought might be best, but I often get awesome
> suggestions here for simplifying code I wrote so I had to ask.  Thanks
>
>
> On Mon, Nov 11, 2013 at 10:16 AM, chriscct7 <hello at chriscct7.com> wrote:
>
> > Sounds like the best thing would be to store it in both places. Saves two
> > potentially expensive query's as your site scales up.
> >
> > -Chris
> >
> >
> >
> > --
> > View this message in context:
> >
> http://wordpress-hackers.1065353.n5.nabble.com/Like-Posts-Store-Data-in-DB-User-Meta-or-Post-Meta-tp42769p42772.html
> > Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Mon Nov 11 18:43:38 2013
From: otto at ottodestruct.com (Otto)
Date: Mon, 11 Nov 2013 12:43:38 -0600
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or Post_Meta
In-Reply-To: <1384193812074-42772.post@n5.nabble.com>
References: <1384192896261-42769.post@n5.nabble.com>
 <1384193569969-42770.post@n5.nabble.com>
 <CAPN-N+aS3oZq2BDnpQBSh1Wie7UxQW4tLE7jjjDgEOY9J9OO_A@mail.gmail.com>
 <1384193812074-42772.post@n5.nabble.com>
Message-ID: <CAD-FghxuPgyOKUtcPp35_AhMfQ=Kcr3ordnht0aab3J0QPe+DA@mail.gmail.com>

We implement plugin favorites on WordPress.org in a similar manner.

The plugin directory is a bbPress installation, so plugin entries are
"topics". When a user favorites a plugin, the ID of that topic is saved to
their usermeta, and the ID of that user is saved to the topicmeta.

The question is one of querying. We want to be able to show a user's
favorite plugins (so, get the usermeta, then get those topics), and we
potentially want to be able to show what users favorited a plugin as well
(so, get the topicmeta, then show those users). While we're not actually
doing the latter at the moment, it's a potential case, so there it is.
Reviews are even more complex, since they integrate three things: users, a
plugin or theme, and a post in the support forums.

The problem you'll run into is one of making sure the data is synced across
the two. What happens when your process craps out after adding the
usermeta, but before adding the postmeta? This isn't a problem on a small
scale, but when you build to large scale, it will happen eventually.

In the long run, I think that we'll end up using a custom table for this,
in order to keep everything in a single location and to be able to query by
either case. Meta isn't a great fit for connecting two entirely disparate
sets of data together with a many-to-many relationship. There really is no
proper many-to-many metaphor in WordPress, as such. You can do it with
taxonomy, but that way lies madness. ;)

-Otto


-Otto


On Mon, Nov 11, 2013 at 12:16 PM, chriscct7 <hello at chriscct7.com> wrote:

> Sounds like the best thing would be to store it in both places. Saves two
> potentially expensive query's as your site scales up.
>
> -Chris
>
>
>
> --
> View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/Like-Posts-Store-Data-in-DB-User-Meta-or-Post-Meta-tp42769p42772.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From greglancaster71 at gmail.com  Mon Nov 11 18:44:55 2013
From: greglancaster71 at gmail.com (Gregory Lancaster)
Date: Mon, 11 Nov 2013 10:44:55 -0800
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or Post_Meta
In-Reply-To: <CAJnHr4j6ywgJvkdwU5oExA12ZGXYUGQj+n=VRPxERo+Q2vpg8A@mail.gmail.com>
References: <1384192896261-42769.post@n5.nabble.com>
 <1384193569969-42770.post@n5.nabble.com>
 <CAPN-N+aS3oZq2BDnpQBSh1Wie7UxQW4tLE7jjjDgEOY9J9OO_A@mail.gmail.com>
 <1384193812074-42772.post@n5.nabble.com>
 <CAPN-N+ZB9UfVNKA=hD8O2P7Ud1Nwqir3cY6rLj4oo1-7z9O2gQ@mail.gmail.com>
 <CAJnHr4j6ywgJvkdwU5oExA12ZGXYUGQj+n=VRPxERo+Q2vpg8A@mail.gmail.com>
Message-ID: <CAPN-N+ZjHKPT0E=L3MpJSCvSL5V6AQR0CHF3w=Edn5R=DnUFvg@mail.gmail.com>

How would I cache the results?  I am still learning php so forgive the
(probably stupid) quesiton.  But I wrote a function the other day, and if I
could cache one DB call and call that in another function that would have
saved me two different sql calls.


On Mon, Nov 11, 2013 at 10:42 AM, Andrew Bartel <andrew.bartel at gmail.com>wrote:

> I have to respectfully disagree with Chris, I wouldn't store it in both,
> storing duplicate data in general is a dangerous path to go down.  It might
> make sense at this moment, but say you want to add a feature six months
> from now where someone can unlike a page from their profile and you only
> write code to update the post_meta table, forgetting to update the
> user_meta table.  Or maybe you bring another developer on and forget to
> document that in the comments of every place that the updates can take
> place.
>
> Figure out which one is going to be the more expensive set or queries
> (probably retrieving a list of users that have liked a post if you have a
> large site) and store it there.  Cache the results for the other one if you
> have to.  You shouldn't hit a performance bottleneck for quite a while
> though if you use built in WP functions.
>
> -Andrew
>
>
> On Mon, Nov 11, 2013 at 10:18 AM, Gregory Lancaster <
> greglancaster71 at gmail.com> wrote:
>
> > Alright that is what I thought might be best, but I often get awesome
> > suggestions here for simplifying code I wrote so I had to ask.  Thanks
> >
> >
> > On Mon, Nov 11, 2013 at 10:16 AM, chriscct7 <hello at chriscct7.com> wrote:
> >
> > > Sounds like the best thing would be to store it in both places. Saves
> two
> > > potentially expensive query's as your site scales up.
> > >
> > > -Chris
> > >
> > >
> > >
> > > --
> > > View this message in context:
> > >
> >
> http://wordpress-hackers.1065353.n5.nabble.com/Like-Posts-Store-Data-in-DB-User-Meta-or-Post-Meta-tp42769p42772.html
> > > Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From greglancaster71 at gmail.com  Mon Nov 11 18:47:15 2013
From: greglancaster71 at gmail.com (Gregory Lancaster)
Date: Mon, 11 Nov 2013 10:47:15 -0800
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or Post_Meta
In-Reply-To: <CAD-FghxuPgyOKUtcPp35_AhMfQ=Kcr3ordnht0aab3J0QPe+DA@mail.gmail.com>
References: <1384192896261-42769.post@n5.nabble.com>
 <1384193569969-42770.post@n5.nabble.com>
 <CAPN-N+aS3oZq2BDnpQBSh1Wie7UxQW4tLE7jjjDgEOY9J9OO_A@mail.gmail.com>
 <1384193812074-42772.post@n5.nabble.com>
 <CAD-FghxuPgyOKUtcPp35_AhMfQ=Kcr3ordnht0aab3J0QPe+DA@mail.gmail.com>
Message-ID: <CAPN-N+Zou2LwZXgchdqz-S_-cE+q+aYLV0pTOtD+Nr=cCx9OTg@mail.gmail.com>

Awesome answer, I was steering away from storing in a custom table because
people tell me OFTEN that I should always try to make use of the built in
wordpress meta fields available.  But this makes sense.


On Mon, Nov 11, 2013 at 10:43 AM, Otto <otto at ottodestruct.com> wrote:

> We implement plugin favorites on WordPress.org in a similar manner.
>
> The plugin directory is a bbPress installation, so plugin entries are
> "topics". When a user favorites a plugin, the ID of that topic is saved to
> their usermeta, and the ID of that user is saved to the topicmeta.
>
> The question is one of querying. We want to be able to show a user's
> favorite plugins (so, get the usermeta, then get those topics), and we
> potentially want to be able to show what users favorited a plugin as well
> (so, get the topicmeta, then show those users). While we're not actually
> doing the latter at the moment, it's a potential case, so there it is.
> Reviews are even more complex, since they integrate three things: users, a
> plugin or theme, and a post in the support forums.
>
> The problem you'll run into is one of making sure the data is synced across
> the two. What happens when your process craps out after adding the
> usermeta, but before adding the postmeta? This isn't a problem on a small
> scale, but when you build to large scale, it will happen eventually.
>
> In the long run, I think that we'll end up using a custom table for this,
> in order to keep everything in a single location and to be able to query by
> either case. Meta isn't a great fit for connecting two entirely disparate
> sets of data together with a many-to-many relationship. There really is no
> proper many-to-many metaphor in WordPress, as such. You can do it with
> taxonomy, but that way lies madness. ;)
>
> -Otto
>
>
> -Otto
>
>
> On Mon, Nov 11, 2013 at 12:16 PM, chriscct7 <hello at chriscct7.com> wrote:
>
> > Sounds like the best thing would be to store it in both places. Saves two
> > potentially expensive query's as your site scales up.
> >
> > -Chris
> >
> >
> >
> > --
> > View this message in context:
> >
> http://wordpress-hackers.1065353.n5.nabble.com/Like-Posts-Store-Data-in-DB-User-Meta-or-Post-Meta-tp42769p42772.html
> > Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From greglancaster71 at gmail.com  Mon Nov 11 18:53:08 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Mon, 11 Nov 2013 10:53:08 -0800 (PST)
Subject: [wp-hackers] wp_enqueue_script was called incorrectly...
Message-ID: <1384195988918-42778.post@n5.nabble.com>

I am trying to enqueue a script, and it's not working out so well for me. 
Here is the code, places after the add_action for the function;

wp_enqueue_script('my_post_like_action', plugins_url().'/js/post-like.js',
array('jquery'), '1.0', true );  
wp_localize_script('my_post_like_action', 'ajax_var', array(  
    'url' => admin_url('admin-ajax.php'),  
    'nonce' => wp_create_nonce('ajax-nonce')  
));  


I am receiving this error:  
 Notice: wp_enqueue_script was called incorrectly. Scripts and styles should
not be registered or enqueued until the wp_enqueue_scripts,
admin_enqueue_scripts, or login_enqueue_scripts hooks. Please see Debugging
in WordPress for more information. (This message was added in version 3.3.)
in /Users/Jared/Documents/Websites/www.local.dev/wp-includes/functions.php
on line 3060



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/wp-enqueue-script-was-called-incorrectly-tp42778.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From greglancaster71 at gmail.com  Mon Nov 11 18:58:16 2013
From: greglancaster71 at gmail.com (Gregory Lancaster)
Date: Mon, 11 Nov 2013 10:58:16 -0800
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or Post_Meta
In-Reply-To: <CAPN-N+Zou2LwZXgchdqz-S_-cE+q+aYLV0pTOtD+Nr=cCx9OTg@mail.gmail.com>
References: <1384192896261-42769.post@n5.nabble.com>
 <1384193569969-42770.post@n5.nabble.com>
 <CAPN-N+aS3oZq2BDnpQBSh1Wie7UxQW4tLE7jjjDgEOY9J9OO_A@mail.gmail.com>
 <1384193812074-42772.post@n5.nabble.com>
 <CAD-FghxuPgyOKUtcPp35_AhMfQ=Kcr3ordnht0aab3J0QPe+DA@mail.gmail.com>
 <CAPN-N+Zou2LwZXgchdqz-S_-cE+q+aYLV0pTOtD+Nr=cCx9OTg@mail.gmail.com>
Message-ID: <CAPN-N+ZOh4aNvErhW_-LfCMvN+xecvcr-ikpUo_ppu21pS6CVw@mail.gmail.com>

So I want to place this into a custom table instead, and if I am to do
that, to minimize the sql load I wont be using arrays.  Rather the better
option would be to create a new row for each like, with one col for the
user_id that liked the post, another col for the post_id that was liked,
and a last col for for if the person who clicked like was logged in or not
to show how many anons or regular visitors liked the post.

That means everytime a post is loaded, a database call will be made to
query the table, grab all user_ids of for that post_id and run them through
a get_userinfo() or something right?   That seems resource intensive.


On Mon, Nov 11, 2013 at 10:47 AM, Gregory Lancaster <
greglancaster71 at gmail.com> wrote:

> Awesome answer, I was steering away from storing in a custom table because
> people tell me OFTEN that I should always try to make use of the built in
> wordpress meta fields available.  But this makes sense.
>
>
> On Mon, Nov 11, 2013 at 10:43 AM, Otto <otto at ottodestruct.com> wrote:
>
>> We implement plugin favorites on WordPress.org in a similar manner.
>>
>> The plugin directory is a bbPress installation, so plugin entries are
>> "topics". When a user favorites a plugin, the ID of that topic is saved to
>> their usermeta, and the ID of that user is saved to the topicmeta.
>>
>> The question is one of querying. We want to be able to show a user's
>> favorite plugins (so, get the usermeta, then get those topics), and we
>> potentially want to be able to show what users favorited a plugin as well
>> (so, get the topicmeta, then show those users). While we're not actually
>> doing the latter at the moment, it's a potential case, so there it is.
>> Reviews are even more complex, since they integrate three things: users, a
>> plugin or theme, and a post in the support forums.
>>
>> The problem you'll run into is one of making sure the data is synced
>> across
>> the two. What happens when your process craps out after adding the
>> usermeta, but before adding the postmeta? This isn't a problem on a small
>> scale, but when you build to large scale, it will happen eventually.
>>
>> In the long run, I think that we'll end up using a custom table for this,
>> in order to keep everything in a single location and to be able to query
>> by
>> either case. Meta isn't a great fit for connecting two entirely disparate
>> sets of data together with a many-to-many relationship. There really is no
>> proper many-to-many metaphor in WordPress, as such. You can do it with
>> taxonomy, but that way lies madness. ;)
>>
>> -Otto
>>
>>
>> -Otto
>>
>>
>> On Mon, Nov 11, 2013 at 12:16 PM, chriscct7 <hello at chriscct7.com> wrote:
>>
>> > Sounds like the best thing would be to store it in both places. Saves
>> two
>> > potentially expensive query's as your site scales up.
>> >
>> > -Chris
>> >
>> >
>> >
>> > --
>> > View this message in context:
>> >
>> http://wordpress-hackers.1065353.n5.nabble.com/Like-Posts-Store-Data-in-DB-User-Meta-or-Post-Meta-tp42769p42772.html
>> > Sent from the Wordpress Hackers mailing list archive at Nabble.com.
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>

From otto at ottodestruct.com  Mon Nov 11 18:59:39 2013
From: otto at ottodestruct.com (Otto)
Date: Mon, 11 Nov 2013 12:59:39 -0600
Subject: [wp-hackers] wp_enqueue_script was called incorrectly...
In-Reply-To: <1384195988918-42778.post@n5.nabble.com>
References: <1384195988918-42778.post@n5.nabble.com>
Message-ID: <CAD-Fghynk42_dQqwj=kgaOrugFzySRcZ14mLdKXjYM-mSfTQBg@mail.gmail.com>

Wrap your call to both of those in a function hooked to wp_enqueue_scripts.
Like this:

function test() {
// your code here
wp_enqueue_script('my_post_like_action', plugins_url().'/js/post-like.js',
array('jquery'), '1.0', true );
wp_localize_script('my_post_like_action', 'ajax_var', array(
    'url' => admin_url('admin-ajax.php'),
    'nonce' => wp_create_nonce('ajax-nonce')
));
// your code above
}
add_action('wp_enqueue_scripts','test');



-Otto


On Mon, Nov 11, 2013 at 12:53 PM, BenderisGreat
<greglancaster71 at gmail.com>wrote:

> I am trying to enqueue a script, and it's not working out so well for me.
> Here is the code, places after the add_action for the function;
>
> wp_enqueue_script('my_post_like_action', plugins_url().'/js/post-like.js',
> array('jquery'), '1.0', true );
> wp_localize_script('my_post_like_action', 'ajax_var', array(
>     'url' => admin_url('admin-ajax.php'),
>     'nonce' => wp_create_nonce('ajax-nonce')
> ));
>
>
> I am receiving this error:
>  Notice: wp_enqueue_script was called incorrectly. Scripts and styles
> should
> not be registered or enqueued until the wp_enqueue_scripts,
> admin_enqueue_scripts, or login_enqueue_scripts hooks. Please see Debugging
> in WordPress for more information. (This message was added in version 3.3.)
> in /Users/Jared/Documents/Websites/www.local.dev/wp-includes/functions.php
> on line 3060
>
>
>
> --
> View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/wp-enqueue-script-was-called-incorrectly-tp42778.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Mon Nov 11 19:08:56 2013
From: otto at ottodestruct.com (Otto)
Date: Mon, 11 Nov 2013 13:08:56 -0600
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or Post_Meta
In-Reply-To: <CAPN-N+ZOh4aNvErhW_-LfCMvN+xecvcr-ikpUo_ppu21pS6CVw@mail.gmail.com>
References: <1384192896261-42769.post@n5.nabble.com>
 <1384193569969-42770.post@n5.nabble.com>
 <CAPN-N+aS3oZq2BDnpQBSh1Wie7UxQW4tLE7jjjDgEOY9J9OO_A@mail.gmail.com>
 <1384193812074-42772.post@n5.nabble.com>
 <CAD-FghxuPgyOKUtcPp35_AhMfQ=Kcr3ordnht0aab3J0QPe+DA@mail.gmail.com>
 <CAPN-N+Zou2LwZXgchdqz-S_-cE+q+aYLV0pTOtD+Nr=cCx9OTg@mail.gmail.com>
 <CAPN-N+ZOh4aNvErhW_-LfCMvN+xecvcr-ikpUo_ppu21pS6CVw@mail.gmail.com>
Message-ID: <CAD-FghwdcPN6z14cBCYKZZSeehXAxko+GuF_J-c1naCK_xNRVQ@mail.gmail.com>

On Mon, Nov 11, 2013 at 12:58 PM, Gregory Lancaster <
greglancaster71 at gmail.com> wrote:

> So I want to place this into a custom table instead, and if I am to do
> that, to minimize the sql load I wont be using arrays.  Rather the better
> option would be to create a new row for each like, with one col for the
> user_id that liked the post, another col for the post_id that was liked,
> and a last col for for if the person who clicked like was logged in or not
> to show how many anons or regular visitors liked the post.
>
> That means everytime a post is loaded, a database call will be made to
> query the table, grab all user_ids of for that post_id and run them through
> a get_userinfo() or something right?   That seems resource intensive.




No more so than using meta, it's just that meta is more hidden from you.

Take the meta case:
- Query posts
- display post
- see that it has meta (pre-loaded for you by a normal WP_Query)
- Call get users to get the users and display them, or whatever

That query posts gets not only the posts, but all meta associated with
those posts. That's two queries, at least. Getting the users is your third
query.

Same case with a custom table:
- Get the posts (we don't care about meta here)
- get the custom table data
- get the users

Again, three queries that directly concern us.

The problem isn't really with the number of SQL queries, it's in making
those queries inexpensive.
- In both cases you get posts. Same deal.
- Getting meta for posts is actually kind of cheap, because it simply gets
all the meta data for all the loaded posts, so it's querying on the
post_id, which is indexed.
- Getting from your custom table is basically identical to that, because
you can put an index the post_id column. However, much less data to sort
through in this case, because it doesn't have all the other meta info
- Then in either case, you get the users. Same deal again.

Meta has a slight advantage in that it uses the WP_Cache system by default.
Lets say you run a WP_Query that gets a whole bunch of posts. The meta for
those is loaded and cached. Later, you run a query that also gets some of
those same posts. Because the meta is already cached, it doesn't go fetch
that data again. Time saved right there.

However, a custom table storing only ID numbers relating to other ID
numbers will be very small by comparison to meta, which has large text
fields in it. MySQL can optimize much better with small tables that connect
numbers to other numbers. Queries on that will be super quick. And if you
really want, you can implement caching using WP_Cache yourself, with
wp_cache_set and wp_cache_get. If it's needed, which it probably won't be
at first.

-Otto

From greglancaster71 at gmail.com  Mon Nov 11 19:43:44 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Mon, 11 Nov 2013 11:43:44 -0800 (PST)
Subject: [wp-hackers] wp_enqueue_script was called incorrectly...
In-Reply-To: <CAD-Fghynk42_dQqwj=kgaOrugFzySRcZ14mLdKXjYM-mSfTQBg@mail.gmail.com>
References: <1384195988918-42778.post@n5.nabble.com>
 <CAD-Fghynk42_dQqwj=kgaOrugFzySRcZ14mLdKXjYM-mSfTQBg@mail.gmail.com>
Message-ID: <1384199024970-42782.post@n5.nabble.com>

Thank you, that did it.  So I have previously used the wp_create_nonce in the
item being targetted. For example, a submit button would have a data-nonce=
"<?php wp_create_nonce  etc...

When using enqueue scripts, should I be creating the nonce there in that
function instead? I am not sure the purpose of that.    Additionally, I am
following this tutorial:

http://wp.tutsplus.com/tutorials/how-to-create-a-simple-post-rating-system-with-wordpress-and-jquery/

And in step one, they create 
and then proceed to use ajax to extrapolate the post ID without every
echoing the post_id in the button data attribute.  How is this done? <#> 



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/wp-enqueue-script-was-called-incorrectly-tp42778p42782.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From halukkaramete at gmail.com  Mon Nov 11 20:12:00 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Mon, 11 Nov 2013 12:12:00 -0800
Subject: [wp-hackers] Is there a way to get the callback function name out
	of a shortcode _programmatically_?
Message-ID: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>

Is there a way to get the callback function name out of a shortcode
_programmatically_?

for example

get_shortcode_callback_for('caption')

would return

"img_caption_shortcode"

From jdg at codesymphony.co  Mon Nov 11 20:21:16 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Mon, 11 Nov 2013 15:21:16 -0500
Subject: [wp-hackers] Is there a way to get the callback function name
	out of a shortcode _programmatically_?
In-Reply-To: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
Message-ID: <980A0BD9-1694-4322-A320-3C05497B7313@codesymphony.co>

Here is a function that does just that:

/**
 * Call a shortcode function by tag name.
 *
 * @author J.D. Grimes
 *
 * @param string $tag     The shortcode whose function to call.
 * @param array  $atts    The attributes to pass to the shortcode function. Optional.
 * @param array  $content The shortcode's content. Default is null (none).
 *
 * @return string|bool False on failure, the result of the shortcode on success.
 */
function do_shortcode_func( $tag, array $atts = array(), $content = null ) {
 
    global $shortcode_tags;
 
    if ( ! isset( $shortcode_tags[ $tag ] ) )
        return false;
 
    return call_user_func( $shortcode_tags[ $tag ], $atts, $content, $tag );
}

-J.D.

On Nov 11, 2013, at 3:12 PM, Haluk Karamete <halukkaramete at gmail.com> wrote:

> Is there a way to get the callback function name out of a shortcode
> _programmatically_?
> 
> for example
> 
> get_shortcode_callback_for('caption')
> 
> would return
> 
> "img_caption_shortcode"
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From nikolov.tmw at gmail.com  Mon Nov 11 20:21:47 2013
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Mon, 11 Nov 2013 22:21:47 +0200
Subject: [wp-hackers] Is there a way to get the callback function name
 out of a shortcode _programmatically_?
In-Reply-To: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
Message-ID: <CAOwx47ec2ma_+JzJSEseBWi6RZWuKQhZphAhdv0Gwgnp9gjHig@mail.gmail.com>

You can access the global $shortcode_tags variable. If you want to wrap it
in a function, it would look something like this:

function get_shortcode_callback_for( $shortcode ) {
    return isset( $GLOBALS['shortcode_tags'][ $shortcode ] ) ?
$GLOBALS['shortcode_tags'][ $shortcode ] : false;
}

This will return the callback for the shortcode tag that you passed, or
false if such shortcode hasn't been registered yet.

Note, that the returned callback can be any type of
callable<http://php.net/manual/en/language.types.callable.php>,
So - you should use is_callable( $callback )<http://us3.php.net/is_callable> in
order to check if the parameter is actually callable.


On Mon, Nov 11, 2013 at 10:12 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> Is there a way to get the callback function name out of a shortcode
> _programmatically_?
>
> for example
>
> get_shortcode_callback_for('caption')
>
> would return
>
> "img_caption_shortcode"
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From paul at codehooligans.com  Mon Nov 11 20:22:40 2013
From: paul at codehooligans.com (Paul Menard)
Date: Mon, 11 Nov 2013 15:22:40 -0500
Subject: [wp-hackers] Is there a way to get the callback function name
 out of a shortcode _programmatically_?
In-Reply-To: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
Message-ID: <CAHTDVP=1iK=11iuoDtE9ZbxjXexBrAXN6kU_5f0mju+yB0kv5w@mail.gmail.com>

There is a global array of the registered shortcode tags $shortcode_tags
not aware of a WP function to query this.


On Mon, Nov 11, 2013 at 3:12 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> Is there a way to get the callback function name out of a shortcode
> _programmatically_?
>
> for example
>
> get_shortcode_callback_for('caption')
>
> would return
>
> "img_caption_shortcode"
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Mon Nov 11 20:26:35 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Mon, 11 Nov 2013 12:26:35 -0800
Subject: [wp-hackers] Is there a way to get the callback function name
 out of a shortcode _programmatically_?
In-Reply-To: <CAOwx47ec2ma_+JzJSEseBWi6RZWuKQhZphAhdv0Gwgnp9gjHig@mail.gmail.com>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
 <CAOwx47ec2ma_+JzJSEseBWi6RZWuKQhZphAhdv0Gwgnp9gjHig@mail.gmail.com>
Message-ID: <CAHERW=2wgBJ05g=+9PNZr0+84BTAb6BZLAx7NdpMKPbZBKCnjw@mail.gmail.com>

Thank you guys...

Nikola, i'm just curious. I'm not sure as to why I should worry about the
"is_callable" matter? Why would an existing shortcode tag work with a not
callable function... see what I mean?


On Mon, Nov 11, 2013 at 12:21 PM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> You can access the global $shortcode_tags variable. If you want to wrap it
> in a function, it would look something like this:
>
> function get_shortcode_callback_for( $shortcode ) {
>     return isset( $GLOBALS['shortcode_tags'][ $shortcode ] ) ?
> $GLOBALS['shortcode_tags'][ $shortcode ] : false;
> }
>
> This will return the callback for the shortcode tag that you passed, or
> false if such shortcode hasn't been registered yet.
>
> Note, that the returned callback can be any type of
> callable<http://php.net/manual/en/language.types.callable.php>,
> So - you should use is_callable( $callback )<
> http://us3.php.net/is_callable> in
> order to check if the parameter is actually callable.
>
>
> On Mon, Nov 11, 2013 at 10:12 PM, Haluk Karamete <halukkaramete at gmail.com
> >wrote:
>
> > Is there a way to get the callback function name out of a shortcode
> > _programmatically_?
> >
> > for example
> >
> > get_shortcode_callback_for('caption')
> >
> > would return
> >
> > "img_caption_shortcode"
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jdg at codesymphony.co  Mon Nov 11 20:30:19 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Mon, 11 Nov 2013 15:30:19 -0500
Subject: [wp-hackers] Is there a way to get the callback function name
	out of a shortcode _programmatically_?
In-Reply-To: <CAHERW=2wgBJ05g=+9PNZr0+84BTAb6BZLAx7NdpMKPbZBKCnjw@mail.gmail.com>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
 <CAOwx47ec2ma_+JzJSEseBWi6RZWuKQhZphAhdv0Gwgnp9gjHig@mail.gmail.com>
 <CAHERW=2wgBJ05g=+9PNZr0+84BTAb6BZLAx7NdpMKPbZBKCnjw@mail.gmail.com>
Message-ID: <E682869C-C85B-41C4-A9AF-1329E9C5382F@codesymphony.co>

I don?t think you need to use is_callable(). add_shortcode() does that check before adding the shortcode to the $shortcode_tags global. Of course it couldn?t hurt.

-J.D.

On Nov 11, 2013, at 3:26 PM, Haluk Karamete <halukkaramete at gmail.com> wrote:

> Thank you guys...
> 
> Nikola, i'm just curious. I'm not sure as to why I should worry about the
> "is_callable" matter? Why would an existing shortcode tag work with a not
> callable function... see what I mean?
> 
> 
> On Mon, Nov 11, 2013 at 12:21 PM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:
> 
>> You can access the global $shortcode_tags variable. If you want to wrap it
>> in a function, it would look something like this:
>> 
>> function get_shortcode_callback_for( $shortcode ) {
>>    return isset( $GLOBALS['shortcode_tags'][ $shortcode ] ) ?
>> $GLOBALS['shortcode_tags'][ $shortcode ] : false;
>> }
>> 
>> This will return the callback for the shortcode tag that you passed, or
>> false if such shortcode hasn't been registered yet.
>> 
>> Note, that the returned callback can be any type of
>> callable<http://php.net/manual/en/language.types.callable.php>,
>> So - you should use is_callable( $callback )<
>> http://us3.php.net/is_callable> in
>> order to check if the parameter is actually callable.
>> 
>> 
>> On Mon, Nov 11, 2013 at 10:12 PM, Haluk Karamete <halukkaramete at gmail.com
>>> wrote:
>> 
>>> Is there a way to get the callback function name out of a shortcode
>>> _programmatically_?
>>> 
>>> for example
>>> 
>>> get_shortcode_callback_for('caption')
>>> 
>>> would return
>>> 
>>> "img_caption_shortcode"
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From nikolov.tmw at gmail.com  Mon Nov 11 20:35:42 2013
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Mon, 11 Nov 2013 22:35:42 +0200
Subject: [wp-hackers] Is there a way to get the callback function name
 out of a shortcode _programmatically_?
In-Reply-To: <CAHERW=2wgBJ05g=+9PNZr0+84BTAb6BZLAx7NdpMKPbZBKCnjw@mail.gmail.com>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
 <CAOwx47ec2ma_+JzJSEseBWi6RZWuKQhZphAhdv0Gwgnp9gjHig@mail.gmail.com>
 <CAHERW=2wgBJ05g=+9PNZr0+84BTAb6BZLAx7NdpMKPbZBKCnjw@mail.gmail.com>
Message-ID: <CAOwx47fhH0xBROWrP759VkRUEE9G_Dk+PHB86SPgzfcuxn9R1Q@mail.gmail.com>

Yeah - usually it shouldn't happen EVER, but you know - it's not a bad
thing to check things.

Oh - I didn't know that add_shortcode() does that check already - so I
guess there's no need to add that extra check :)


On Mon, Nov 11, 2013 at 10:26 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> Thank you guys...
>
> Nikola, i'm just curious. I'm not sure as to why I should worry about the
> "is_callable" matter? Why would an existing shortcode tag work with a not
> callable function... see what I mean?
>
>
> On Mon, Nov 11, 2013 at 12:21 PM, Nikola Nikolov <nikolov.tmw at gmail.com
> >wrote:
>
> > You can access the global $shortcode_tags variable. If you want to wrap
> it
> > in a function, it would look something like this:
> >
> > function get_shortcode_callback_for( $shortcode ) {
> >     return isset( $GLOBALS['shortcode_tags'][ $shortcode ] ) ?
> > $GLOBALS['shortcode_tags'][ $shortcode ] : false;
> > }
> >
> > This will return the callback for the shortcode tag that you passed, or
> > false if such shortcode hasn't been registered yet.
> >
> > Note, that the returned callback can be any type of
> > callable<http://php.net/manual/en/language.types.callable.php>,
> > So - you should use is_callable( $callback )<
> > http://us3.php.net/is_callable> in
> > order to check if the parameter is actually callable.
> >
> >
> > On Mon, Nov 11, 2013 at 10:12 PM, Haluk Karamete <
> halukkaramete at gmail.com
> > >wrote:
> >
> > > Is there a way to get the callback function name out of a shortcode
> > > _programmatically_?
> > >
> > > for example
> > >
> > > get_shortcode_callback_for('caption')
> > >
> > > would return
> > >
> > > "img_caption_shortcode"
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From info at bungeshea.com  Mon Nov 11 21:27:25 2013
From: info at bungeshea.com (Shea Bunge)
Date: Tue, 12 Nov 2013 08:27:25 +1100
Subject: [wp-hackers] Is there a way to get the callback function name
 out of a shortcode _programmatically_?
In-Reply-To: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
Message-ID: <CAJLbkRY12X3Vf50P-rLo0AjbnfsZJVjSLqL4OPR1J-O01P7M8A@mail.gmail.com>

Try this:

/**

 * Retrieve the callback fuction for a shortcode tag
 * @param string $shortcode_tag The shortcode tag to retrieve the callback for
 * @return string|boolean The callback if the shortcode is registered,
false if not
 */function get_shortcode_callback( $shortcode_tag ) {
    global $shortcode_tags;

    if ( isset( $shortcode_tags[ $shortcode_tag ] ) )
        return $shortcode_tags[ $shortcode_tag ];
    else
        return false;
}



On Tue, Nov 12, 2013 at 7:12 AM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> Is there a way to get the callback function name out of a shortcode
> _programmatically_?
>
> for example
>
> get_shortcode_callback_for('caption')
>
> would return
>
> "img_caption_shortcode"
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Regards,

Shea Bunge
http://bungeshea.com

From greglancaster71 at gmail.com  Mon Nov 11 21:47:04 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Mon, 11 Nov 2013 13:47:04 -0800 (PST)
Subject: [wp-hackers] Why is this ajax POST failing?
Message-ID: <1384206423888-42791.post@n5.nabble.com>

*Jquery / JS File:*

jQuery( document ).ready( function( $ ) { 
	$( '#post_like').click( function() { 			
						
	 var like_user_id = $( this ).attr('data-id')
	 var like_post_id = $( this ).attr('data-user')

var data = { 
	'action': 'my_post_like_action', 
	'like_post_id': like_post_id,
	'like_user_id': like_user_id
} 

$.ajax({ 
	type: 'post',
	url: myAjax.ajaxurl, 
	data: 'data',
	success: function ( response ) { 
	if(response.type == "success") {

	alert( 'Success!' ); 
    }
            else {
	alert( 'Fail!' ); 
	
	} 
	}
}); 
  }); 
}); 


*Enqueue Script:*

add_action( 'init', 'my_script_enqueuer' );

function my_script_enqueuer() {
   wp_register_script( "my_post_like_action",
WP_PLUGIN_URL.'/gogonow/js/post_like.js', array('jquery') );
   wp_localize_script( 'my_post_like_action', 'myAjax', array( 'ajaxurl' =>
admin_url( 'admin-ajax.php' )));        

   wp_enqueue_script( 'jquery' );
   wp_enqueue_script( 'my_post_like_action' );

}


*the php function:*

add_action('wp_ajax_my_post_like_action', 'my_post_like_action');
add_action('wp_ajax_nopriv_my_post_like_action', 'my_post_like_action');

function my_post_like_action() {
	
//	if ( ! wp_verify_nonce( $nonce, 'ajax-nonce' ) )  
//        die ( 'Busted!');   

		$post_id = $_POST['like_post_id'];
		$user_id = $_POST['like_user_id'];
		
		$result = update_user_meta($user_id, 'liked_by', $user_id);
		$response = array( 'success' => true ); 
		
	wp_send_json_success($response);
		
}


*the button: *

	<button type=&quot;button&quot; id=&quot;post_like&quot;
data-id=&quot;&lt;?php echo the_ID() ?>"  data-user="<?php echo
get_current_user_id(); ?>" class="btn btn-success">Like This Post</button>    






--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Why-is-this-ajax-POST-failing-tp42791.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From son9ne.junk at gmail.com  Mon Nov 11 21:49:57 2013
From: son9ne.junk at gmail.com (Jeremy Simkins)
Date: Mon, 11 Nov 2013 16:49:57 -0500
Subject: [wp-hackers] Why is this ajax POST failing?
In-Reply-To: <1384206423888-42791.post@n5.nabble.com>
References: <1384206423888-42791.post@n5.nabble.com>
Message-ID: <9C0A27B9-CA19-4A5A-A968-859C3029AC85@gmail.com>

At first glance it looks like you are mixing user and post id when assigning them on click event. 

From andrew.bartel at gmail.com  Mon Nov 11 21:50:36 2013
From: andrew.bartel at gmail.com (Andrew Bartel)
Date: Mon, 11 Nov 2013 13:50:36 -0800
Subject: [wp-hackers] Why is this ajax POST failing?
In-Reply-To: <1384206423888-42791.post@n5.nabble.com>
References: <1384206423888-42791.post@n5.nabble.com>
Message-ID: <CAJnHr4inQLDOmSzFmfQftakMMi2LxAz2XmGLphKJYpfJ-Yw3Mg@mail.gmail.com>

Hook it onto wp_enqueue_scripts instead of init.

You don't need to enqueue jquery, you already have it as a dependency.

Localize after enqueueing.

You're not passing a nonce so you're nonce check will fail.

-Andrew


On Mon, Nov 11, 2013 at 1:47 PM, BenderisGreat <greglancaster71 at gmail.com>wrote:

> *Jquery / JS File:*
>
> jQuery( document ).ready( function( $ ) {
>         $( '#post_like').click( function() {
>
>          var like_user_id = $( this ).attr('data-id')
>          var like_post_id = $( this ).attr('data-user')
>
> var data = {
>         'action': 'my_post_like_action',
>         'like_post_id': like_post_id,
>         'like_user_id': like_user_id
> }
>
> $.ajax({
>         type: 'post',
>         url: myAjax.ajaxurl,
>         data: 'data',
>         success: function ( response ) {
>         if(response.type == "success") {
>
>         alert( 'Success!' );
>     }
>             else {
>         alert( 'Fail!' );
>
>         }
>         }
> });
>   });
> });
>
>
> *Enqueue Script:*
>
> add_action( 'init', 'my_script_enqueuer' );
>
> function my_script_enqueuer() {
>    wp_register_script( "my_post_like_action",
> WP_PLUGIN_URL.'/gogonow/js/post_like.js', array('jquery') );
>    wp_localize_script( 'my_post_like_action', 'myAjax', array( 'ajaxurl' =>
> admin_url( 'admin-ajax.php' )));
>
>    wp_enqueue_script( 'jquery' );
>    wp_enqueue_script( 'my_post_like_action' );
>
> }
>
>
> *the php function:*
>
> add_action('wp_ajax_my_post_like_action', 'my_post_like_action');
> add_action('wp_ajax_nopriv_my_post_like_action', 'my_post_like_action');
>
> function my_post_like_action() {
>
> //      if ( ! wp_verify_nonce( $nonce, 'ajax-nonce' ) )
> //        die ( 'Busted!');
>
>                 $post_id = $_POST['like_post_id'];
>                 $user_id = $_POST['like_user_id'];
>
>                 $result = update_user_meta($user_id, 'liked_by', $user_id);
>                 $response = array( 'success' => true );
>
>         wp_send_json_success($response);
>
> }
>
>
> *the button: *
>
>         <button type=&quot;button&quot; id=&quot;post_like&quot;
> data-id=&quot;&lt;?php echo the_ID() ?>"  data-user="<?php echo
> get_current_user_id(); ?>" class="btn btn-success">Like This Post</button>
>
>
>
>
>
>
> --
> View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/Why-is-this-ajax-POST-failing-tp42791.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jnolte at getmoxied.net  Mon Nov 11 21:56:18 2013
From: jnolte at getmoxied.net (Jeffrey Nolte)
Date: Mon, 11 Nov 2013 16:56:18 -0500
Subject: [wp-hackers] Why is this ajax POST failing?
In-Reply-To: <9C0A27B9-CA19-4A5A-A968-859C3029AC85@gmail.com>
References: <1384206423888-42791.post@n5.nabble.com>
 <9C0A27B9-CA19-4A5A-A968-859C3029AC85@gmail.com>
Message-ID: <7A0638F8-D440-4258-ACB5-09FEC74046D9@getmoxied.net>

Also - data looks like it is being  passed 'data' as a string rather than the data object.

Jeffrey Nolte
Moxie Media Group, Inc.
594 Broadway #305
New York, NY 10012
Office: (646) 820-8540
Skype: jeffrey.nolte



On Nov 11, 2013, at 4:49 PM, Jeremy Simkins <son9ne.junk at gmail.com> wrote:

> At first glance it looks like you are mixing user and post id when assigning them on click event. 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From greglancaster71 at gmail.com  Mon Nov 11 21:59:41 2013
From: greglancaster71 at gmail.com (Gregory Lancaster)
Date: Mon, 11 Nov 2013 13:59:41 -0800
Subject: [wp-hackers] Why is this ajax POST failing?
In-Reply-To: <7A0638F8-D440-4258-ACB5-09FEC74046D9@getmoxied.net>
References: <1384206423888-42791.post@n5.nabble.com>
 <9C0A27B9-CA19-4A5A-A968-859C3029AC85@gmail.com>
 <7A0638F8-D440-4258-ACB5-09FEC74046D9@getmoxied.net>
Message-ID: <CAPN-N+btDH2cqq4jJNoHmSdMtk=QOofvhX=2M8N3rGMNdpgnqA@mail.gmail.com>

Sorry guys I posted my code up before undoing a few things I was trying to
solve the problem.  Turned out it was the mixed ids, and the response was
set to .type rather than just success or fail.    Thank you for the
immediate replies.  While I have you, can someone explain the benefit of
using nonce in the enqueue vs nonce in the field being submitted?


On Mon, Nov 11, 2013 at 1:56 PM, Jeffrey Nolte <jnolte at getmoxied.net> wrote:

> Also - data looks like it is being  passed 'data' as a string rather than
> the data object.
>
> Jeffrey Nolte
> Moxie Media Group, Inc.
> 594 Broadway #305
> New York, NY 10012
> Office: (646) 820-8540
> Skype: jeffrey.nolte
>
>
>
> On Nov 11, 2013, at 4:49 PM, Jeremy Simkins <son9ne.junk at gmail.com> wrote:
>
> > At first glance it looks like you are mixing user and post id when
> assigning them on click event.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From greglancaster71 at gmail.com  Mon Nov 11 23:33:19 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Mon, 11 Nov 2013 15:33:19 -0800 (PST)
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or Post_Meta
In-Reply-To: <CAD-FghwdcPN6z14cBCYKZZSeehXAxko+GuF_J-c1naCK_xNRVQ@mail.gmail.com>
References: <1384192896261-42769.post@n5.nabble.com>
 <1384193569969-42770.post@n5.nabble.com>
 <CAPN-N+aS3oZq2BDnpQBSh1Wie7UxQW4tLE7jjjDgEOY9J9OO_A@mail.gmail.com>
 <1384193812074-42772.post@n5.nabble.com>
 <CAD-FghxuPgyOKUtcPp35_AhMfQ=Kcr3ordnht0aab3J0QPe+DA@mail.gmail.com>
 <CAPN-N+Zou2LwZXgchdqz-S_-cE+q+aYLV0pTOtD+Nr=cCx9OTg@mail.gmail.com>
 <CAPN-N+ZOh4aNvErhW_-LfCMvN+xecvcr-ikpUo_ppu21pS6CVw@mail.gmail.com>
 <CAD-FghwdcPN6z14cBCYKZZSeehXAxko+GuF_J-c1naCK_xNRVQ@mail.gmail.com>
Message-ID: <1384212799584-42796.post@n5.nabble.com>

Would this be the fastest way to check the database?

function alreadyLikedCheck() {
	global $wpdb, $post, $current_user;
      get_currentuserinfo();
	  
	  $user_id = $current_user->ID;
	  $post_id = $post->ID;
	
	$checkLikeTable = $wpdb->get_row( $wpdb->prepare('SELECT * FROM ' .
$wpdb->prefix . 'ams_post_likes' .' WHERE user_id = %d AND post_id = %d',
$user_id, $post_id ));
	if (isset($checkLikeTable)) {
		echo "You Like This Post";
	} else 
	{ echo "<button type='button' id='post_like' data-id='".get_the_ID()."' 
data-nonce='".wp_create_nonce('like_button')."'
data-user='".get_current_user_id()."' class='btn btn-success'>Like This
Post</button>"; }
	
	
}



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Like-Posts-Store-Data-in-DB-User-Meta-or-Post-Meta-tp42769p42796.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From funkatronic at gmail.com  Tue Nov 12 02:30:36 2013
From: funkatronic at gmail.com (Funkatron)
Date: Mon, 11 Nov 2013 20:30:36 -0600
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or         Post_Meta
In-Reply-To: <CA+-Vqo8m+hbmpzBCAzdXMdVhhDL2n+9Z6Et8auCYX-qW_AWZQg@mail.gmail.com>
References: <CA+-Vqo8m+hbmpzBCAzdXMdVhhDL2n+9Z6Et8auCYX-qW_AWZQg@mail.gmail.com>
Message-ID: <CA+-Vqo_dEw1OB8K24RN0A9s4yTtO8+M6=GSHed14Wf8hZ4ykAA@mail.gmail.com>

You could use the Posts 2 Posts plug-in to link posts to users. In fact, I
have a alpha plug-in that does this called Fave-it:
https://github.com/funkedgeek/FaveIt

From lists at rotorised.com  Tue Nov 12 03:02:08 2013
From: lists at rotorised.com (Ryan McCue)
Date: Tue, 12 Nov 2013 13:02:08 +1000
Subject: [wp-hackers] Is there a way to get the callback function name
 out of a shortcode _programmatically_?
In-Reply-To: <980A0BD9-1694-4322-A320-3C05497B7313@codesymphony.co>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
 <980A0BD9-1694-4322-A320-3C05497B7313@codesymphony.co>
Message-ID: <52819A30.3060201@rotorised.com>

J.D. Grimes wrote:
> Here is a function that does just that:

This seems like something we should bring in to core to avoid everyone
using `do_shortcode` and running the full regex parser every time.

I see you proposed http://core.trac.wordpress.org/ticket/25435 but it
got wontfix'd. Anyone else think we should reopen?

-- 
Ryan McCue
<http://ryanmccue.info/>

From greglancaster71 at gmail.com  Tue Nov 12 03:09:46 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Mon, 11 Nov 2013 19:09:46 -0800 (PST)
Subject: [wp-hackers] INSERT IGNORE for $wpdb?
Message-ID: <1384225786056-42799.post@n5.nabble.com>

Anyway to use this with wordpress?



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/INSERT-IGNORE-for-wpdb-tp42799.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From lists at rotorised.com  Tue Nov 12 03:13:17 2013
From: lists at rotorised.com (Ryan McCue)
Date: Tue, 12 Nov 2013 13:13:17 +1000
Subject: [wp-hackers] INSERT IGNORE for $wpdb?
In-Reply-To: <1384225786056-42799.post@n5.nabble.com>
References: <1384225786056-42799.post@n5.nabble.com>
Message-ID: <52819CCD.3050203@rotorised.com>

BenderisGreat wrote:
> Anyway to use this with wordpress?

$wpdb->query('INSERT IGNORE ...');

http://codex.wordpress.org/Class_Reference/wpdb#Run_Any_Query_on_the_Database

http://wordpress.stackexchange.com/questions/96321/wpdb-insert-database-error-duplicate-entry-error-logging

Please make sure you search before posting on the mailing list. Keep in
mind that messages here go out to a lot of people. Questions like these
are probably better asked on WPSE anyway:

http://wordpress.stackexchange.com/

-- 
Ryan McCue
<http://ryanmccue.info/>

From wordpress at web-warlocks.net  Tue Nov 12 05:13:15 2013
From: wordpress at web-warlocks.net (Xavier Faraudo i Gener)
Date: Tue, 12 Nov 2013 06:13:15 +0100
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or Post_Meta
In-Reply-To: <1384192896261-42769.post@n5.nabble.com>
References: <1384192896261-42769.post@n5.nabble.com>
Message-ID: <5281B8EB.5080204@web-warlocks.net>

El 11/11/2013 19:01, BenderisGreat ha escrit:
> What would be the best option for storing which posts a user likes?  They
> click a like button, and it can be stored in the post_meta, or the
> user_meta, or a sep db table.  It seems to be that storing in the post_meta
> would make the most sense, but I wanted to ask before moving ahead.
>

I'd seriously consider using neither of those, but an option. (Pun not 
intended. I mean "I'd seriously consider using the wp_options table and 
API".) At least for starters, until it's clear which kind of queries are 
you going to run (and have a solid API).

Dilemma here would be if the keys for the option should be post ID or 
user ID... But you can always hook at an early stage and add to cache 
the "inverted"/"mirrored" data. F.i., if you have it stored in the form 
user_id => array of post ids (with an option name like 
"posts_liked_by_user_id"), you can add the array of post_id => array of 
liking user_ids to cache. This way, you ensure data integrity much 
better than by storing it in two places, and with no added queries. (And 
you can copy the very option to cache, too, so you can access the data 
consistently with wp_cache_get, instead of having to remember which one 
was by get_option and which one by wp_cache_get.)

So, for instance (I'm not quite sure I've explained myself well), your 
function could be something like:

function already_liked_check() {
	global $post, $current_user;
	if ( ! $post = get_post( $post ) )
		return false; // not a valid post

	$post_ids_liked_by_user = (array) wp_cache_get( $current_user->ID, 
'posts_liked_by_user_id' );

	/* or also
	 * $all_posts_liked_by_user_id = get_option( 'posts_liked_by_user_id' );
	 * $post_ids_liked_by_user = isset( $all_posts_liked_by_user_id[ 
$current_user->ID ] ) ? $all_posts_liked_by_user_id[ $current_user->ID ] 
: array();
	 */

	if ( in_array( $post->ID, $post_ids_liked_by_user ) ) {
		// User likes the post
	} else {
		// User does not like the post
	}
}

Also, juggling with arrays alone you can also pull more-or-less easily 
things like:

?Other posts liked by this user
?Other users who liked this post
?Users who liked this post also liked?
?Users who like similar things to user (checking how many matching like 
posts both have)
?Most liked posts
?Most like-able users

? which makes for a nice basic set of features for a like-post addon.

-- 
Xavier Faraudo i Gener (the WordPress Web Warlock)

From jdg at codesymphony.co  Tue Nov 12 13:28:32 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Tue, 12 Nov 2013 08:28:32 -0500
Subject: [wp-hackers] Is there a way to get the callback function name
	out of a shortcode _programmatically_?
In-Reply-To: <52819A30.3060201@rotorised.com>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
 <980A0BD9-1694-4322-A320-3C05497B7313@codesymphony.co>
 <52819A30.3060201@rotorised.com>
Message-ID: <9D74CCD6-4E0B-424B-8E38-E69CB9F7778F@codesymphony.co>

Yeah, I thought it would reduce bootstrap. Using do_shortcode() is so easy for new devs to do, if we want them to use the better alternative, I think it would be adopted quicker in a wrapper like this. 

On Nov 11, 2013, at 10:02 PM, Ryan McCue <lists at rotorised.com> wrote:

> J.D. Grimes wrote:
>> Here is a function that does just that:
> 
> This seems like something we should bring in to core to avoid everyone
> using `do_shortcode` and running the full regex parser every time.
> 
> I see you proposed http://core.trac.wordpress.org/ticket/25435 but it
> got wontfix'd. Anyone else think we should reopen?
> 
> -- 
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From jdg at codesymphony.co  Tue Nov 12 13:53:14 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Tue, 12 Nov 2013 08:53:14 -0500
Subject: [wp-hackers] Why is this ajax POST failing?
In-Reply-To: <CAPN-N+btDH2cqq4jJNoHmSdMtk=QOofvhX=2M8N3rGMNdpgnqA@mail.gmail.com>
References: <1384206423888-42791.post@n5.nabble.com>
 <9C0A27B9-CA19-4A5A-A968-859C3029AC85@gmail.com>
 <7A0638F8-D440-4258-ACB5-09FEC74046D9@getmoxied.net>
 <CAPN-N+btDH2cqq4jJNoHmSdMtk=QOofvhX=2M8N3rGMNdpgnqA@mail.gmail.com>
Message-ID: <8EE52729-DDAD-41BB-B96D-F91EAD5E98B0@codesymphony.co>

Off the top of my head I can?t really think of any real benefit either way in this case.

On Nov 11, 2013, at 4:59 PM, Gregory Lancaster <greglancaster71 at gmail.com> wrote:

> Sorry guys I posted my code up before undoing a few things I was trying to
> solve the problem.  Turned out it was the mixed ids, and the response was
> set to .type rather than just success or fail.    Thank you for the
> immediate replies.  While I have you, can someone explain the benefit of
> using nonce in the enqueue vs nonce in the field being submitted?
> 
> 
> On Mon, Nov 11, 2013 at 1:56 PM, Jeffrey Nolte <jnolte at getmoxied.net> wrote:
> 
>> Also - data looks like it is being  passed 'data' as a string rather than
>> the data object.
>> 
>> Jeffrey Nolte
>> Moxie Media Group, Inc.
>> 594 Broadway #305
>> New York, NY 10012
>> Office: (646) 820-8540
>> Skype: jeffrey.nolte
>> 
>> 
>> 
>> On Nov 11, 2013, at 4:49 PM, Jeremy Simkins <son9ne.junk at gmail.com> wrote:
>> 
>>> At first glance it looks like you are mixing user and post id when
>> assigning them on click event.
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From jdg at codesymphony.co  Tue Nov 12 17:02:46 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Tue, 12 Nov 2013 12:02:46 -0500
Subject: [wp-hackers] Non-gettexted string detection tools?
In-Reply-To: <423B836D-F9F2-4241-982A-4E18958FF1A9@codesymphony.co>
References: <F1E594E1-910E-451E-B2F5-C09B3F4F6382@codesymphony.co>
 <B71693A0-744D-4D58-8CC8-801002F71B12@markoheijnen.nl>
 <EC97838D-7824-4AB2-9675-CA7F310938AD@codesymphony.co>
 <CAJLbkRZu3FAG0TBFxZtzo9GHiu0qaAgPpFwGs9mzktjKy0AsYQ@mail.gmail.com>
 <CAP29Pvi-m5G1G4z=a1W9=8ZodMQvrYKvWVK8=RXVTsQHedn1XA@mail.gmail.com>
 <CAOwx47c6N8H-GG9xGwt6ZqMARhqXe8DssfVYj2iOD_fZKJZ0WA@mail.gmail.com>
 <423B836D-F9F2-4241-982A-4E18958FF1A9@codesymphony.co>
Message-ID: <1935ED85-ABCC-4054-9204-8D39A4FD69FF@codesymphony.co>

I?ve been working on this in my spare time, and I finally have something to show for it: https://github.com/JDGrimes/wp-l10n-validator

It probably still has some bugs in it and there are still some improvements I?d like to make, but you?re welcome to try it out. I?d be interested in any feedback. 

-J.D.

On Sep 25, 2013, at 10:06 AM, J.D. Grimes <jdg at codesymphony.co> wrote:

> Thank you all for the links!
> 
> I think I'm going to follow Nikola's idea. And I'll be sure to share the results back here when I'm done.
> 
> Thanks,
> 
> J.D.
> 
> On Sep 25, 2013, at 3:21 AM, Nikola Nikolov <nikolov.tmw at gmail.com> wrote:
> 
>> What I feel like you're aiming for is parsing php files and finding any
>> un-translated strings in there.
>> 
>> The plugin that I regularly use in order to edit/create .po/.mo files -
>> http://wordpress.org/plugins/codestyling-localization/ - does something
>> similar, except for it only looks for translated strings. My recommendation
>> would be to take a look at it's code(more specifically the
>> "/includes/class.parser.php" file -
>> http://plugins.svn.wordpress.org/codestyling-localization/trunk/includes/class.parser.php
>> )
>> and try to adjust it to ignore any strings that have already been
>> translated and collect the ones that haven't.
>> 
>> I think that code is a good place to start and you can probably do that
>> with just a simple file in the beginning and then move on to series of
>> files in a plugin/theme.
>> 
>> Good luck with that and I'd like to know when you get it done :)
>> 
>> Nikola
>> 
>> 
>> On Wed, Sep 25, 2013 at 3:32 AM, Andrew Nacin <wp at andrewnacin.com> wrote:
>> 
>>> On Tue, Sep 24, 2013 at 7:30 PM, Shea Bunge <info at bungeshea.com> wrote:
>>> 
>>>> You can try the Pig Latin <http://wordpress.org/plugins/piglatin/>
>>> plugin
>>>> that displays all translatable strings as Pig
>>>> Latin<http://en.wikipedia.org/wiki/Pig_Latin>.
>>>> This way, all untranslated strings stick out.
>>>> 
>>>> Others might laugh, but this is pretty standard practice.
>>> 
>>> Others prefer an encheferizer.
>>> http://en.wikipedia.org/wiki/Swedish_Chef#Computer_translations
>>> 
>>> For something more jarring, try:
>>> 
>>> $empty_string = function() { return ''; };
>>> foreach ( array( 'gettext', 'ngettext' ) as $filter ) {
>>>   add_filter( $filter, $empty_string );
>>>   add_filter( $filter . '_with_context', $empty_string );
>>> }
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From halukkaramete at gmail.com  Tue Nov 12 19:57:19 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Tue, 12 Nov 2013 11:57:19 -0800
Subject: [wp-hackers] is there a way to make sure that a shortcode can be
 used only by certain userroles?
Message-ID: <CAHERW=16Po9-rksBoKnVejhpciFrD-5xM+g9X9HpZfFE_nOQAg@mail.gmail.com>

What I mean by that is that is this...

let's say there is an admin-editors-only shortcode. let's call it "xyx"
shortcode for the sake of an example.

is it possible to have a contributor or author to not to be able to use
that shortcode? they all get stopped with a warning that the post cannot be
saved (or created)  because it contains the "xyx" shortcode!

to cover all the possibilities (such as posting thru email, or thru some
other esoteric ways) , what is the best hook(s) that I need to watch out so
that there are no loop holes left...

I hope it was clear and did not confuse you...
thank you

From highfive at jesserfriedman.com  Tue Nov 12 20:08:17 2013
From: highfive at jesserfriedman.com (Jesse Friedman)
Date: Tue, 12 Nov 2013 15:08:17 -0500
Subject: [wp-hackers] is there a way to make sure that a shortcode can
 be used only by certain userroles?
In-Reply-To: <CAHERW=16Po9-rksBoKnVejhpciFrD-5xM+g9X9HpZfFE_nOQAg@mail.gmail.com>
References: <CAHERW=16Po9-rksBoKnVejhpciFrD-5xM+g9X9HpZfFE_nOQAg@mail.gmail.com>
Message-ID: <CAGtTZ+bf2hWjT4-vuU9__=K1bZDJ5v7msMsj_k2g-gk2tz0uhQ@mail.gmail.com>

You could filter the content when the post is saved and if the user doesn't
have the right permissions, then I strip the shortcode or present a warning.

you could try using
http://codex.wordpress.org/Plugin_API/Filter_Reference/content_save_pre,
then maybe some regex to find the shortcode and strip it out


On Tue, Nov 12, 2013 at 2:57 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> What I mean by that is that is this...
>
> let's say there is an admin-editors-only shortcode. let's call it "xyx"
> shortcode for the sake of an example.
>
> is it possible to have a contributor or author to not to be able to use
> that shortcode? they all get stopped with a warning that the post cannot be
> saved (or created)  because it contains the "xyx" shortcode!
>
> to cover all the possibilities (such as posting thru email, or thru some
> other esoteric ways) , what is the best hook(s) that I need to watch out so
> that there are no loop holes left...
>
> I hope it was clear and did not confuse you...
> thank you
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
thanks

*jesse friedman*
jes.se.com
Book: Web Designers Guide to WordPress -
http://wdgwp.com/onamazon<http://wdgwp.com/onamazon>
Twitter: @professor <http://twitter.com/professor>
Facebook: Like<https://www.facebook.com/pages/Jesse-Friedman/204793299545174>

From nikolov.tmw at gmail.com  Tue Nov 12 21:42:19 2013
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Tue, 12 Nov 2013 23:42:19 +0200
Subject: [wp-hackers] is there a way to make sure that a shortcode can
 be used only by certain userroles?
In-Reply-To: <CAGtTZ+bf2hWjT4-vuU9__=K1bZDJ5v7msMsj_k2g-gk2tz0uhQ@mail.gmail.com>
References: <CAHERW=16Po9-rksBoKnVejhpciFrD-5xM+g9X9HpZfFE_nOQAg@mail.gmail.com>
 <CAGtTZ+bf2hWjT4-vuU9__=K1bZDJ5v7msMsj_k2g-gk2tz0uhQ@mail.gmail.com>
Message-ID: <CAOwx47d-p12bA+jSx05vxrCzPu1tU0j3wHos=mukoAN9Z01AQA@mail.gmail.com>

Since the regex that matches shortcodes is quite complex, I can suggest to
you the following VERY ugly hack :)

function filter_out_protected_shortcode( $content ) {
// Check to see if the current user can or can't do a specific task
// it would probably be different in your case
if ( ! current_user_can( 'edit_others_posts' ) ) {
global $shortcode_tags;
// Back-up the currently registered shortcodes
$_sc_tags = $shortcode_tags;

// Change the shortcode's handler to return an empty string instead of the
actual content
$shortcode_tags = array( 'xyx' => '__return_empty_string' );

// Now, since we overrided the $shortcode_tags variable
// Only the [xyx] shortcode will be parsed - and it will be replaced
// with an empty string :)
$content = do_shortcode( $content );

// Restore the original shortcode handlers
$shortcode_tags = $_sc_tags;
}

return $content;
}
add_filter( 'content_save_pre', 'filter_out_protected_shortcode', 10 );

So what happens here is that we hook to the "content_save_pre" filter as
Jesse suggested.
We then check if the user can use that shortcode. If they can't, we
override the global $shortcode_tags variable to only contain our shortcode
with a callback "__return_empty_string" - which as the name suggests
returns an empty string.
After that, we parse the content and if the shortcode was found there - it
will be replaced with an empty string.

This is not a perfect solution, since if the shortcode was surrounded by
two empty lines(one before and one after), you would get three empty lines.

I haven't tested that code, but it should in theory work.

Also - the chances are that no shortcodes would be parsed for that
request(since that's a request for updating/saving a post) and you can skip
the copying/restoring of the $shortcode_tags variable, but I always prefer
to put things back together the way I found them, than to leave them
messy(debugging something like that is a pain).

Well, that's about it - it's an UGLY hack, but I believe that the core
handling of the shortcodes is better than anything that I would come-up
regex-wise(and I'm generally somewhat decent in writing those).


On Tue, Nov 12, 2013 at 10:08 PM, Jesse Friedman <
highfive at jesserfriedman.com> wrote:

> You could filter the content when the post is saved and if the user doesn't
> have the right permissions, then I strip the shortcode or present a
> warning.
>
> you could try using
> http://codex.wordpress.org/Plugin_API/Filter_Reference/content_save_pre,
> then maybe some regex to find the shortcode and strip it out
>
>
> On Tue, Nov 12, 2013 at 2:57 PM, Haluk Karamete <halukkaramete at gmail.com
> >wrote:
>
> > What I mean by that is that is this...
> >
> > let's say there is an admin-editors-only shortcode. let's call it "xyx"
> > shortcode for the sake of an example.
> >
> > is it possible to have a contributor or author to not to be able to use
> > that shortcode? they all get stopped with a warning that the post cannot
> be
> > saved (or created)  because it contains the "xyx" shortcode!
> >
> > to cover all the possibilities (such as posting thru email, or thru some
> > other esoteric ways) , what is the best hook(s) that I need to watch out
> so
> > that there are no loop holes left...
> >
> > I hope it was clear and did not confuse you...
> > thank you
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> thanks
>
> *jesse friedman*
> jes.se.com
> Book: Web Designers Guide to WordPress -
> http://wdgwp.com/onamazon<http://wdgwp.com/onamazon>
> Twitter: @professor <http://twitter.com/professor>
> Facebook: Like<
> https://www.facebook.com/pages/Jesse-Friedman/204793299545174>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Tue Nov 12 23:37:31 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Tue, 12 Nov 2013 15:37:31 -0800
Subject: [wp-hackers] Is there a way to get the callback function name
 out of a shortcode _programmatically_?
In-Reply-To: <9D74CCD6-4E0B-424B-8E38-E69CB9F7778F@codesymphony.co>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
 <980A0BD9-1694-4322-A320-3C05497B7313@codesymphony.co>
 <52819A30.3060201@rotorised.com>
 <9D74CCD6-4E0B-424B-8E38-E69CB9F7778F@codesymphony.co>
Message-ID: <CAHERW=34uO30zdCnpGfmwxeq3qhi7=UXda+A3e_D50QdTc+dHQ@mail.gmail.com>

Sorry guys to bother you back on this.... In a slightly more complicated
case ( a visual composer shortcode ) where the shortcode data is stored in
an object in the $shortcode_tags array, I'm hitting a brick wall.

The shortcode I'm after is "vc_wp_posts" and I use this one liner to
ATTEMPT to get it   $callback = get_shortcode_callback("vc_wp_posts");

using the function we had yesterday.

function get_shortcode_callback( $shortcode ) {
    return isset( $GLOBALS['shortcode_tags'][ $shortcode ] ) ?
$GLOBALS['shortcode_tags'][ $shortcode ] : false;
}

and it comes back with a FALSE.

I know why but I don't know how to get to piece I need to...

Here is the $shortcode_tags var dump view

shortened for brewity

array (size=74)
  'embed' => string '__return_false' (length=14)
  'wp_caption' => string 'img_caption_shortcode' (length=21)
  'caption' => string 'img_caption_shortcode' (length=21)
  'gallery' => string 'gallery_shortcode' (length=17)
  'audio' => string 'wp_audio_shortcode' (length=18)
  'video' => string 'wp_video_shortcode' (length=18)
  'vc_column_inner' =>
    array (size=2)
      0 =>
        object(WPBakeryShortCode_VC_Column_Inner)[173]
          protected 'predefined_atts' =>
            array (size=3)
              ...
          protected 'shortcode' => string 'vc_column_inner' (length=15)
          protected 'html_template' => null
          protected 'atts' => null
          protected 'settings' =>
            array (size=11)
              ...
          protected 'is_plugin' => boolean true
          protected 'is_theme' => boolean false
      1 => string 'output' (length=6)
  'vc_row' =>
    array (size=2)
      0 =>
        object(WPBakeryShortCode_VC_Row)[174]

etc...

now I am gonna fast forward to the section that deals with the shortcode
I'm after...

and here it is...

'vc_wp_posts' =>
    array (size=2)
      0 =>
        object(WPBakeryShortCode_VC_Wp_Posts)[118]
          protected 'shortcode' => string 'vc_wp_posts' (length=11)
 <------------ this is where the information we are after.
          protected 'html_template' => null
          protected 'atts' => null
          protected 'settings' =>
            array (size=6)
              ...
          protected 'is_plugin' => boolean true
          protected 'is_theme' => boolean false
      1 => string 'output' (length=6)

  'vc_wp_links' =>
    array (size=2)
      0 =>












On Tue, Nov 12, 2013 at 5:28 AM, J.D. Grimes <jdg at codesymphony.co> wrote:

> Yeah, I thought it would reduce bootstrap. Using do_shortcode() is so easy
> for new devs to do, if we want them to use the better alternative, I think
> it would be adopted quicker in a wrapper like this.
>
> On Nov 11, 2013, at 10:02 PM, Ryan McCue <lists at rotorised.com> wrote:
>
> > J.D. Grimes wrote:
> >> Here is a function that does just that:
> >
> > This seems like something we should bring in to core to avoid everyone
> > using `do_shortcode` and running the full regex parser every time.
> >
> > I see you proposed http://core.trac.wordpress.org/ticket/25435 but it
> > got wontfix'd. Anyone else think we should reopen?
> >
> > --
> > Ryan McCue
> > <http://ryanmccue.info/>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From eric.andrew.lewis at gmail.com  Wed Nov 13 00:37:21 2013
From: eric.andrew.lewis at gmail.com (Eric Andrew Lewis)
Date: Tue, 12 Nov 2013 19:37:21 -0500
Subject: [wp-hackers] Call for thoughts on a new Settings/Options/Metadata
	API
Message-ID: <CAMi+fEm58HNWH3+MEz+mARbjNjKjx6=8-rJmV3a6Y-YwgsCMig@mail.gmail.com>

Hey folks,

I've been ruminating on a new Settings/Options/Metadata API and discussing
with other developers; I'd like to open up the floor for response, and
perhaps an on-going weekly discussion/architecture-as-a-plugin project. The
Settings API is a bit of a white
whale<http://core.trac.wordpress.org/ticket/18285>,
so I know this will take a while to produce something core-ready, but hey,
I'm not going anywhere.

Generally, the APIs for "settings/metadata/options/etc" in WordPress have
been divided as far as codebase goes, although largely they serve the same
purpose: outputting form elements, and validating/sanitizing/saving the
data. This includes:

   1. "Settings" proper, settings tied to the WordPress install, operable
   via the Settings API <http://codex.wordpress.org/Settings_API>.
   2. Post meta boxes, which really boils down to
add_meta_box()<http://codex.wordpress.org/Function_Reference/add_meta_box>,
   and the many<https://github.com/jaredatch/Custom-Metaboxes-and-Fields-for-WordPress>
    frameworks <https://github.com/scribu/wp-scb-framework>
built<https://github.com/farinspace/wpalchemy>
    on <http://wordpress.org/plugins/advanced-custom-fields/>
it<http://wordpress.org/plugins/pods/>
   .
   3. Widget settings via the Widgets
API<http://codex.wordpress.org/Widgets_API>
   .
   4. Taxonomy meta data, which isn't in core but there's plugins for this
   as well <http://wordpress.org/plugins/taxonomy-metadata/>.
   5. Theme Customization
API<https://codex.wordpress.org/Theme_Customization_API>
   .

I don't think it would be productive to rewrite APIs for all of these
components. However, considering a structure for something to serve as a
base for all of these components at the same time would be prudent in order
to avoid back-compat pitfalls.

An issue in previous iterations of these APIs has been the object structure
of a setting/metadata/option being intermingled with the the UI components
in some cases. I don't want to jump the gun on implementation, but here is
a gist of  meanderings imagining a new
API<https://gist.github.com/ericandrewlewis/7441441>
.

I would love to hear constructive feedback: what the issues you face as a
developer in the current environment, what you might want from a new API,
etc.

Eric Andrew Lewis
ericandrewlewis.com
610.715.8560

From chip at chipbennett.net  Wed Nov 13 00:43:38 2013
From: chip at chipbennett.net (Chip Bennett)
Date: Tue, 12 Nov 2013 19:43:38 -0500
Subject: [wp-hackers] Call for thoughts on a new
	Settings/Options/Metadata API
In-Reply-To: <CAMi+fEm58HNWH3+MEz+mARbjNjKjx6=8-rJmV3a6Y-YwgsCMig@mail.gmail.com>
References: <CAMi+fEm58HNWH3+MEz+mARbjNjKjx6=8-rJmV3a6Y-YwgsCMig@mail.gmail.com>
Message-ID: <CAPdLKqfCtpeKCR22bLSqkQJEjXhyCYe_beWQ77tdP5pVo9E0rw@mail.gmail.com>

>From the perspective of a Theme developer (and reviewer), I think the
biggest piece missing from that... tapestry(?) are standardized output for
form fields, and correlating standardized sanitization methods. The Theme
Customizer API gets around that for standardized form fields, but not for
standardized sanitization.


On Tue, Nov 12, 2013 at 7:37 PM, Eric Andrew Lewis <
eric.andrew.lewis at gmail.com> wrote:

> Hey folks,
>
> I've been ruminating on a new Settings/Options/Metadata API and discussing
> with other developers; I'd like to open up the floor for response, and
> perhaps an on-going weekly discussion/architecture-as-a-plugin project. The
> Settings API is a bit of a white
> whale<http://core.trac.wordpress.org/ticket/18285>,
> so I know this will take a while to produce something core-ready, but hey,
> I'm not going anywhere.
>
> Generally, the APIs for "settings/metadata/options/etc" in WordPress have
> been divided as far as codebase goes, although largely they serve the same
> purpose: outputting form elements, and validating/sanitizing/saving the
> data. This includes:
>
>    1. "Settings" proper, settings tied to the WordPress install, operable
>    via the Settings API <http://codex.wordpress.org/Settings_API>.
>    2. Post meta boxes, which really boils down to
> add_meta_box()<http://codex.wordpress.org/Function_Reference/add_meta_box
> >,
>    and the many<
> https://github.com/jaredatch/Custom-Metaboxes-and-Fields-for-WordPress>
>     frameworks <https://github.com/scribu/wp-scb-framework>
> built<https://github.com/farinspace/wpalchemy>
>     on <http://wordpress.org/plugins/advanced-custom-fields/>
> it<http://wordpress.org/plugins/pods/>
>    .
>    3. Widget settings via the Widgets
> API<http://codex.wordpress.org/Widgets_API>
>    .
>    4. Taxonomy meta data, which isn't in core but there's plugins for this
>    as well <http://wordpress.org/plugins/taxonomy-metadata/>.
>    5. Theme Customization
> API<https://codex.wordpress.org/Theme_Customization_API>
>    .
>
> I don't think it would be productive to rewrite APIs for all of these
> components. However, considering a structure for something to serve as a
> base for all of these components at the same time would be prudent in order
> to avoid back-compat pitfalls.
>
> An issue in previous iterations of these APIs has been the object structure
> of a setting/metadata/option being intermingled with the the UI components
> in some cases. I don't want to jump the gun on implementation, but here is
> a gist of  meanderings imagining a new
> API<https://gist.github.com/ericandrewlewis/7441441>
> .
>
> I would love to hear constructive feedback: what the issues you face as a
> developer in the current environment, what you might want from a new API,
> etc.
>
> Eric Andrew Lewis
> ericandrewlewis.com
> 610.715.8560
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dragonfly at dragonflyeye.net  Wed Nov 13 00:52:07 2013
From: dragonfly at dragonflyeye.net (Thomas Belknap)
Date: Tue, 12 Nov 2013 19:52:07 -0500
Subject: [wp-hackers] Call for thoughts on a new
	Settings/Options/Metadata API
In-Reply-To: <CAPdLKqfCtpeKCR22bLSqkQJEjXhyCYe_beWQ77tdP5pVo9E0rw@mail.gmail.com>
References: <CAMi+fEm58HNWH3+MEz+mARbjNjKjx6=8-rJmV3a6Y-YwgsCMig@mail.gmail.com>
 <CAPdLKqfCtpeKCR22bLSqkQJEjXhyCYe_beWQ77tdP5pVo9E0rw@mail.gmail.com>
Message-ID: <CAEamYWTQmBGc2ApfFByX9=R=jY9A2EKJFSbY=q=CjuatvQ+NXQ@mail.gmail.com>

Having recently dived into the Settings API I have to say I find the whole
notion of "Settings Sections" pretty convoluted for no real reason I
understand. Settings seem like enough work that they API didn't really
solve any problems it didn't replace.

Not knowing that the Settings API was already built, I started playing
around with something that I called "Easy Inputs," which was basically my
attempt to recreate CakePHP's Form Helper. I'll get lots of howls on this
list for even mentioning the name, I'm sure. But the brave should probably
have a look at the (IMO) well-developed and abstracted form field builders
it has. With a little extra effort, it would be easy to adapt this concept
to WordPress, including automatically adding nonce fields, and have that
vehicle for form creation be use-agnostic: we don't much care if you use it
for a contact page, a template options page or settings for a plugin. Let
the developer define in his call what its used for.

Anyway, my two cents.


On Tue, Nov 12, 2013 at 7:43 PM, Chip Bennett <chip at chipbennett.net> wrote:

> From the perspective of a Theme developer (and reviewer), I think the
> biggest piece missing from that... tapestry(?) are standardized output for
> form fields, and correlating standardized sanitization methods. The Theme
> Customizer API gets around that for standardized form fields, but not for
> standardized sanitization.
>
>
> On Tue, Nov 12, 2013 at 7:37 PM, Eric Andrew Lewis <
> eric.andrew.lewis at gmail.com> wrote:
>
> > Hey folks,
> >
> > I've been ruminating on a new Settings/Options/Metadata API and
> discussing
> > with other developers; I'd like to open up the floor for response, and
> > perhaps an on-going weekly discussion/architecture-as-a-plugin project.
> The
> > Settings API is a bit of a white
> > whale<http://core.trac.wordpress.org/ticket/18285>,
> > so I know this will take a while to produce something core-ready, but
> hey,
> > I'm not going anywhere.
> >
> > Generally, the APIs for "settings/metadata/options/etc" in WordPress have
> > been divided as far as codebase goes, although largely they serve the
> same
> > purpose: outputting form elements, and validating/sanitizing/saving the
> > data. This includes:
> >
> >    1. "Settings" proper, settings tied to the WordPress install, operable
> >    via the Settings API <http://codex.wordpress.org/Settings_API>.
> >    2. Post meta boxes, which really boils down to
> > add_meta_box()<
> http://codex.wordpress.org/Function_Reference/add_meta_box
> > >,
> >    and the many<
> > https://github.com/jaredatch/Custom-Metaboxes-and-Fields-for-WordPress>
> >     frameworks <https://github.com/scribu/wp-scb-framework>
> > built<https://github.com/farinspace/wpalchemy>
> >     on <http://wordpress.org/plugins/advanced-custom-fields/>
> > it<http://wordpress.org/plugins/pods/>
> >    .
> >    3. Widget settings via the Widgets
> > API<http://codex.wordpress.org/Widgets_API>
> >    .
> >    4. Taxonomy meta data, which isn't in core but there's plugins for
> this
> >    as well <http://wordpress.org/plugins/taxonomy-metadata/>.
> >    5. Theme Customization
> > API<https://codex.wordpress.org/Theme_Customization_API>
> >    .
> >
> > I don't think it would be productive to rewrite APIs for all of these
> > components. However, considering a structure for something to serve as a
> > base for all of these components at the same time would be prudent in
> order
> > to avoid back-compat pitfalls.
> >
> > An issue in previous iterations of these APIs has been the object
> structure
> > of a setting/metadata/option being intermingled with the the UI
> components
> > in some cases. I don't want to jump the gun on implementation, but here
> is
> > a gist of  meanderings imagining a new
> > API<https://gist.github.com/ericandrewlewis/7441441>
> > .
> >
> > I would love to hear constructive feedback: what the issues you face as a
> > developer in the current environment, what you might want from a new API,
> > etc.
> >
> > Eric Andrew Lewis
> > ericandrewlewis.com
> > 610.715.8560
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Tom Belknap
Owner/Editor, DragonFlyEye.Net
Join me:

   - *Inbox:* http://dragonflyeye.net/subscribe
   - *Web*: http://dragonflyeye.net/
   - *Facebook*: https://www.facebook.com/DragonFlyEye.Net
   - *Twitter*: https://twitter.com/dragonflyeye
   - *Google*: https://plus.google.com/u/1/103251482414903117843/posts

From johnbillion+wp at gmail.com  Wed Nov 13 01:21:06 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Wed, 13 Nov 2013 01:21:06 +0000
Subject: [wp-hackers] Call for thoughts on a new
	Settings/Options/Metadata API
In-Reply-To: <CAEamYWTQmBGc2ApfFByX9=R=jY9A2EKJFSbY=q=CjuatvQ+NXQ@mail.gmail.com>
References: <CAMi+fEm58HNWH3+MEz+mARbjNjKjx6=8-rJmV3a6Y-YwgsCMig@mail.gmail.com>
 <CAPdLKqfCtpeKCR22bLSqkQJEjXhyCYe_beWQ77tdP5pVo9E0rw@mail.gmail.com>
 <CAEamYWTQmBGc2ApfFByX9=R=jY9A2EKJFSbY=q=CjuatvQ+NXQ@mail.gmail.com>
Message-ID: <CAOqAKWDQGjaCYrQV_OV2hD2x28YXJz=kKyd5jAvAQ2_yB3-oqQ@mail.gmail.com>

As Eric mentioned:

"An issue in previous iterations of these APIs has been the object
structure of a setting/metadata/option being intermingled with the the UI
components in some cases."

To me, this is fundamental. WordPress is no longer just an admin UI that
you only visit in a web browser. WordPress can be accessed via the XML-RPC
API, via the upcoming JSON API, via the command line with WP-CLI or
WordShell, or via any number of third party services using various custom
APIs.

Giving everything in WordPress that is settings-like (post meta, user meta,
settings, theme options, etc) better structure would enable, quite
literally, a next generation of apps to be built on WordPress. If we were
building WordPress from scratch today, this is how all this various
metadata would be structured.

A standard set of form helpers, therefore, becomes just one part of what we
want. Form helpers would be used in the admin area for settings pages, in
post meta boxes, in theme options and the customiser, etc. However, the
underlying structure of each setting or piece of metadata ("this metadata
is an integer", "this option is a colour picker") would mean that other
APIs that interface with WordPress know what data to expect, what data to
return, and how to present each field. The mobile apps would, for example,
know which native input controls to use for each field.

This might sound a bit idealistic (maybe it is) but I think it'd be a
missed opportunity if we ended up with another settings API that didn't
give us this sort of structure.

John


On 13 November 2013 00:52, Thomas Belknap <dragonfly at dragonflyeye.net>wrote:

> Having recently dived into the Settings API I have to say I find the whole
> notion of "Settings Sections" pretty convoluted for no real reason I
> understand. Settings seem like enough work that they API didn't really
> solve any problems it didn't replace.
>
> Not knowing that the Settings API was already built, I started playing
> around with something that I called "Easy Inputs," which was basically my
> attempt to recreate CakePHP's Form Helper. I'll get lots of howls on this
> list for even mentioning the name, I'm sure. But the brave should probably
> have a look at the (IMO) well-developed and abstracted form field builders
> it has. With a little extra effort, it would be easy to adapt this concept
> to WordPress, including automatically adding nonce fields, and have that
> vehicle for form creation be use-agnostic: we don't much care if you use it
> for a contact page, a template options page or settings for a plugin. Let
> the developer define in his call what its used for.
>
> Anyway, my two cents.
>
>
> On Tue, Nov 12, 2013 at 7:43 PM, Chip Bennett <chip at chipbennett.net>
> wrote:
>
> > From the perspective of a Theme developer (and reviewer), I think the
> > biggest piece missing from that... tapestry(?) are standardized output
> for
> > form fields, and correlating standardized sanitization methods. The Theme
> > Customizer API gets around that for standardized form fields, but not for
> > standardized sanitization.
> >
> >
> > On Tue, Nov 12, 2013 at 7:37 PM, Eric Andrew Lewis <
> > eric.andrew.lewis at gmail.com> wrote:
> >
> > > Hey folks,
> > >
> > > I've been ruminating on a new Settings/Options/Metadata API and
> > discussing
> > > with other developers; I'd like to open up the floor for response, and
> > > perhaps an on-going weekly discussion/architecture-as-a-plugin project.
> > The
> > > Settings API is a bit of a white
> > > whale<http://core.trac.wordpress.org/ticket/18285>,
> > > so I know this will take a while to produce something core-ready, but
> > hey,
> > > I'm not going anywhere.
> > >
> > > Generally, the APIs for "settings/metadata/options/etc" in WordPress
> have
> > > been divided as far as codebase goes, although largely they serve the
> > same
> > > purpose: outputting form elements, and validating/sanitizing/saving the
> > > data. This includes:
> > >
> > >    1. "Settings" proper, settings tied to the WordPress install,
> operable
> > >    via the Settings API <http://codex.wordpress.org/Settings_API>.
> > >    2. Post meta boxes, which really boils down to
> > > add_meta_box()<
> > http://codex.wordpress.org/Function_Reference/add_meta_box
> > > >,
> > >    and the many<
> > > https://github.com/jaredatch/Custom-Metaboxes-and-Fields-for-WordPress
> >
> > >     frameworks <https://github.com/scribu/wp-scb-framework>
> > > built<https://github.com/farinspace/wpalchemy>
> > >     on <http://wordpress.org/plugins/advanced-custom-fields/>
> > > it<http://wordpress.org/plugins/pods/>
> > >    .
> > >    3. Widget settings via the Widgets
> > > API<http://codex.wordpress.org/Widgets_API>
> > >    .
> > >    4. Taxonomy meta data, which isn't in core but there's plugins for
> > this
> > >    as well <http://wordpress.org/plugins/taxonomy-metadata/>.
> > >    5. Theme Customization
> > > API<https://codex.wordpress.org/Theme_Customization_API>
> > >    .
> > >
> > > I don't think it would be productive to rewrite APIs for all of these
> > > components. However, considering a structure for something to serve as
> a
> > > base for all of these components at the same time would be prudent in
> > order
> > > to avoid back-compat pitfalls.
> > >
> > > An issue in previous iterations of these APIs has been the object
> > structure
> > > of a setting/metadata/option being intermingled with the the UI
> > components
> > > in some cases. I don't want to jump the gun on implementation, but here
> > is
> > > a gist of  meanderings imagining a new
> > > API<https://gist.github.com/ericandrewlewis/7441441>
> > > .
> > >
> > > I would love to hear constructive feedback: what the issues you face
> as a
> > > developer in the current environment, what you might want from a new
> API,
> > > etc.
> > >
> > > Eric Andrew Lewis
> > > ericandrewlewis.com
> > > 610.715.8560
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Tom Belknap
> Owner/Editor, DragonFlyEye.Net
> Join me:
>
>    - *Inbox:* http://dragonflyeye.net/subscribe
>    - *Web*: http://dragonflyeye.net/
>    - *Facebook*: https://www.facebook.com/DragonFlyEye.Net
>    - *Twitter*: https://twitter.com/dragonflyeye
>    - *Google*: https://plus.google.com/u/1/103251482414903117843/posts
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From nikolov.tmw at gmail.com  Wed Nov 13 06:53:01 2013
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Wed, 13 Nov 2013 08:53:01 +0200
Subject: [wp-hackers] Is there a way to get the callback function name
 out of a shortcode _programmatically_?
In-Reply-To: <CAHERW=34uO30zdCnpGfmwxeq3qhi7=UXda+A3e_D50QdTc+dHQ@mail.gmail.com>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
 <980A0BD9-1694-4322-A320-3C05497B7313@codesymphony.co>
 <52819A30.3060201@rotorised.com>
 <9D74CCD6-4E0B-424B-8E38-E69CB9F7778F@codesymphony.co>
 <CAHERW=34uO30zdCnpGfmwxeq3qhi7=UXda+A3e_D50QdTc+dHQ@mail.gmail.com>
Message-ID: <CAOwx47dY2h-G5xRaTrPCdmONq45VQYQog6Wr2d=4v-DXaN9qXw@mail.gmail.com>

Hm... I wonder if the code I wrote doesn't work. Can you try to get the
callback for gallery? And see if that works.


On Wed, Nov 13, 2013 at 1:37 AM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> Sorry guys to bother you back on this.... In a slightly more complicated
> case ( a visual composer shortcode ) where the shortcode data is stored in
> an object in the $shortcode_tags array, I'm hitting a brick wall.
>
> The shortcode I'm after is "vc_wp_posts" and I use this one liner to
> ATTEMPT to get it   $callback = get_shortcode_callback("vc_wp_posts");
>
> using the function we had yesterday.
>
> function get_shortcode_callback( $shortcode ) {
>     return isset( $GLOBALS['shortcode_tags'][ $shortcode ] ) ?
> $GLOBALS['shortcode_tags'][ $shortcode ] : false;
> }
>
> and it comes back with a FALSE.
>
> I know why but I don't know how to get to piece I need to...
>
> Here is the $shortcode_tags var dump view
>
> shortened for brewity
>
> array (size=74)
>   'embed' => string '__return_false' (length=14)
>   'wp_caption' => string 'img_caption_shortcode' (length=21)
>   'caption' => string 'img_caption_shortcode' (length=21)
>   'gallery' => string 'gallery_shortcode' (length=17)
>   'audio' => string 'wp_audio_shortcode' (length=18)
>   'video' => string 'wp_video_shortcode' (length=18)
>   'vc_column_inner' =>
>     array (size=2)
>       0 =>
>         object(WPBakeryShortCode_VC_Column_Inner)[173]
>           protected 'predefined_atts' =>
>             array (size=3)
>               ...
>           protected 'shortcode' => string 'vc_column_inner' (length=15)
>           protected 'html_template' => null
>           protected 'atts' => null
>           protected 'settings' =>
>             array (size=11)
>               ...
>           protected 'is_plugin' => boolean true
>           protected 'is_theme' => boolean false
>       1 => string 'output' (length=6)
>   'vc_row' =>
>     array (size=2)
>       0 =>
>         object(WPBakeryShortCode_VC_Row)[174]
>
> etc...
>
> now I am gonna fast forward to the section that deals with the shortcode
> I'm after...
>
> and here it is...
>
> 'vc_wp_posts' =>
>     array (size=2)
>       0 =>
>         object(WPBakeryShortCode_VC_Wp_Posts)[118]
>           protected 'shortcode' => string 'vc_wp_posts' (length=11)
>  <------------ this is where the information we are after.
>           protected 'html_template' => null
>           protected 'atts' => null
>           protected 'settings' =>
>             array (size=6)
>               ...
>           protected 'is_plugin' => boolean true
>           protected 'is_theme' => boolean false
>       1 => string 'output' (length=6)
>
>   'vc_wp_links' =>
>     array (size=2)
>       0 =>
>
>
>
>
>
>
>
>
>
>
>
>
> On Tue, Nov 12, 2013 at 5:28 AM, J.D. Grimes <jdg at codesymphony.co> wrote:
>
> > Yeah, I thought it would reduce bootstrap. Using do_shortcode() is so
> easy
> > for new devs to do, if we want them to use the better alternative, I
> think
> > it would be adopted quicker in a wrapper like this.
> >
> > On Nov 11, 2013, at 10:02 PM, Ryan McCue <lists at rotorised.com> wrote:
> >
> > > J.D. Grimes wrote:
> > >> Here is a function that does just that:
> > >
> > > This seems like something we should bring in to core to avoid everyone
> > > using `do_shortcode` and running the full regex parser every time.
> > >
> > > I see you proposed http://core.trac.wordpress.org/ticket/25435 but it
> > > got wontfix'd. Anyone else think we should reopen?
> > >
> > > --
> > > Ryan McCue
> > > <http://ryanmccue.info/>
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From tcbarrett at gmail.com  Wed Nov 13 07:01:36 2013
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 13 Nov 2013 07:01:36 +0000
Subject: [wp-hackers] Call for thoughts on a new
	Settings/Options/Metadata API
In-Reply-To: <CAEamYWTQmBGc2ApfFByX9=R=jY9A2EKJFSbY=q=CjuatvQ+NXQ@mail.gmail.com>
References: <CAMi+fEm58HNWH3+MEz+mARbjNjKjx6=8-rJmV3a6Y-YwgsCMig@mail.gmail.com>
 <CAPdLKqfCtpeKCR22bLSqkQJEjXhyCYe_beWQ77tdP5pVo9E0rw@mail.gmail.com>
 <CAEamYWTQmBGc2ApfFByX9=R=jY9A2EKJFSbY=q=CjuatvQ+NXQ@mail.gmail.com>
Message-ID: <CAEgmxaZRmoq6oSj0f1FUg7NxFJOdiA5Hpo=ELfqPLwvRuUR+SA@mail.gmail.com>

Great name, excellent point.

I find the theme options sections settings callback jiggery really
unintuitive. It looks like something very clever that is over engineered.
Makes my head spin. Please, please consider something else.

Is it just me?

// Sent by Nexus
On 13 Nov 2013 00:52, "Thomas Belknap" <dragonfly at dragonflyeye.net> wrote:

> Having recently dived into the Settings API I have to say I find the whole
> notion of "Settings Sections" pretty convoluted for no real reason I
> understand. Settings seem like enough work that they API didn't really
> solve any problems it didn't replace.
>
> Not knowing that the Settings API was already built, I started playing
> around with something that I called "Easy Inputs," which was basically my
> attempt to recreate CakePHP's Form Helper. I'll get lots of howls on this
> list for even mentioning the name, I'm sure. But the brave should probably
> have a look at the (IMO) well-developed and abstracted form field builders
> it has. With a little extra effort, it would be easy to adapt this concept
> to WordPress, including automatically adding nonce fields, and have that
> vehicle for form creation be use-agnostic: we don't much care if you use it
> for a contact page, a template options page or settings for a plugin. Let
> the developer define in his call what its used for.
>
> Anyway, my two cents.
>
>
> On Tue, Nov 12, 2013 at 7:43 PM, Chip Bennett <chip at chipbennett.net>
> wrote:
>
> > From the perspective of a Theme developer (and reviewer), I think the
> > biggest piece missing from that... tapestry(?) are standardized output
> for
> > form fields, and correlating standardized sanitization methods. The Theme
> > Customizer API gets around that for standardized form fields, but not for
> > standardized sanitization.
> >
> >
> > On Tue, Nov 12, 2013 at 7:37 PM, Eric Andrew Lewis <
> > eric.andrew.lewis at gmail.com> wrote:
> >
> > > Hey folks,
> > >
> > > I've been ruminating on a new Settings/Options/Metadata API and
> > discussing
> > > with other developers; I'd like to open up the floor for response, and
> > > perhaps an on-going weekly discussion/architecture-as-a-plugin project.
> > The
> > > Settings API is a bit of a white
> > > whale<http://core.trac.wordpress.org/ticket/18285>,
> > > so I know this will take a while to produce something core-ready, but
> > hey,
> > > I'm not going anywhere.
> > >
> > > Generally, the APIs for "settings/metadata/options/etc" in WordPress
> have
> > > been divided as far as codebase goes, although largely they serve the
> > same
> > > purpose: outputting form elements, and validating/sanitizing/saving the
> > > data. This includes:
> > >
> > >    1. "Settings" proper, settings tied to the WordPress install,
> operable
> > >    via the Settings API <http://codex.wordpress.org/Settings_API>.
> > >    2. Post meta boxes, which really boils down to
> > > add_meta_box()<
> > http://codex.wordpress.org/Function_Reference/add_meta_box
> > > >,
> > >    and the many<
> > > https://github.com/jaredatch/Custom-Metaboxes-and-Fields-for-WordPress
> >
> > >     frameworks <https://github.com/scribu/wp-scb-framework>
> > > built<https://github.com/farinspace/wpalchemy>
> > >     on <http://wordpress.org/plugins/advanced-custom-fields/>
> > > it<http://wordpress.org/plugins/pods/>
> > >    .
> > >    3. Widget settings via the Widgets
> > > API<http://codex.wordpress.org/Widgets_API>
> > >    .
> > >    4. Taxonomy meta data, which isn't in core but there's plugins for
> > this
> > >    as well <http://wordpress.org/plugins/taxonomy-metadata/>.
> > >    5. Theme Customization
> > > API<https://codex.wordpress.org/Theme_Customization_API>
> > >    .
> > >
> > > I don't think it would be productive to rewrite APIs for all of these
> > > components. However, considering a structure for something to serve as
> a
> > > base for all of these components at the same time would be prudent in
> > order
> > > to avoid back-compat pitfalls.
> > >
> > > An issue in previous iterations of these APIs has been the object
> > structure
> > > of a setting/metadata/option being intermingled with the the UI
> > components
> > > in some cases. I don't want to jump the gun on implementation, but here
> > is
> > > a gist of  meanderings imagining a new
> > > API<https://gist.github.com/ericandrewlewis/7441441>
> > > .
> > >
> > > I would love to hear constructive feedback: what the issues you face
> as a
> > > developer in the current environment, what you might want from a new
> API,
> > > etc.
> > >
> > > Eric Andrew Lewis
> > > ericandrewlewis.com
> > > 610.715.8560
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Tom Belknap
> Owner/Editor, DragonFlyEye.Net
> Join me:
>
>    - *Inbox:* http://dragonflyeye.net/subscribe
>    - *Web*: http://dragonflyeye.net/
>    - *Facebook*: https://www.facebook.com/DragonFlyEye.Net
>    - *Twitter*: https://twitter.com/dragonflyeye
>    - *Google*: https://plus.google.com/u/1/103251482414903117843/posts
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From lists at rotorised.com  Wed Nov 13 13:20:15 2013
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 13 Nov 2013 23:20:15 +1000
Subject: [wp-hackers] Call for thoughts on a new
 Settings/Options/Metadata API
In-Reply-To: <CAMi+fEm58HNWH3+MEz+mARbjNjKjx6=8-rJmV3a6Y-YwgsCMig@mail.gmail.com>
References: <CAMi+fEm58HNWH3+MEz+mARbjNjKjx6=8-rJmV3a6Y-YwgsCMig@mail.gmail.com>
Message-ID: <52837C8F.3050709@rotorised.com>

Eric Andrew Lewis wrote:
> An issue in previous iterations of these APIs has been the object structure
> of a setting/metadata/option being intermingled with the the UI components
> in some cases. I don't want to jump the gun on implementation, but here is
> a gist of  meanderings imagining a new
> API<https://gist.github.com/ericandrewlewis/7441441>

I think that's a good start on structure. I do think we need to avoid
being too verbose though; having used some other systems similar to
this, you can end up very abstract quickly.

Rather than having the 'for' key, and letting settings be attached to
everything, I think we could use subclassing. It's a little weird to
have something attached to both a post *and* as an option without
needing different handling. I'm thinking:

	abstract class WP_Setting {}
	class WP_Setting_Option extends WP_Setting {}
	class WP_Setting_Post_Meta extends WP_Setting {}

But that could end up being confusing.

> I would love to hear constructive feedback: what the issues you face as a
> developer in the current environment, what you might want from a new API,
> etc.

I think something we should look into handling is making nested options
a first-class feature. That is, storing an array/etc into a single
option, rather than spreading it out. It's been recommended for a long
time, but you have to write all of the handling yourself.

On the other hand, if you could do something like...

	$setting = new WP_Setting( array(
		'key' => 'master_option',
		'type' => 'array',
		'children' => array(
			'option1' => new WP_Setting( ... ),
			'option2 => new WP_Setting( ... ),
		),
	) );

...that'd be pretty cool. This could also be implemented via the
settings group API you proposed.

-- 
Ryan McCue
<http://ryanmccue.info/>

From dragonfly at dragonflyeye.net  Wed Nov 13 13:38:47 2013
From: dragonfly at dragonflyeye.net (Thomas Belknap)
Date: Wed, 13 Nov 2013 08:38:47 -0500
Subject: [wp-hackers] Call for thoughts on a new
	Settings/Options/Metadata API
In-Reply-To: <52837C8F.3050709@rotorised.com>
References: <CAMi+fEm58HNWH3+MEz+mARbjNjKjx6=8-rJmV3a6Y-YwgsCMig@mail.gmail.com>
 <52837C8F.3050709@rotorised.com>
Message-ID: <CAEamYWSuw7Cj8Hc8dEVjMooa9GSPeQkez0Gz_cD3ySRbW+_H3w@mail.gmail.com>

What if the form-building API remained more or less agnostic, and a
hook-type vehicle was used to listen for appropriate data?

(in the form):
echo $Form->input('my_setting', array('type' => 'text', 'class' =>
'my_plugin_setting', 'maxlength' => 200));

(on save):
function save_my_setting() {
    if( !empty($_POST['settings_api']['my_setting']) ) :
        $Form->check_nonce($_POST['settings_api']['my_setting_nonce']);
        add_option('my_setting', $_POST['settings_api']['my_setting']);
    endif;
}

The idea here is that we only require the developer to provide the language
that correctly inserts a form element into the form. The API handles
creating a nonce and correctly setting the name field to include the array
that sets all settings_api fields apart from any other data (just for
convenience sake).

If you want to create a "section," feel free to do so in HTML. If you want
to nest form elements together or save them into subelements of the array
for your own purposes, have at it. The API only cares that a limited but
effective set of layout and security needs be met in order to properly save
your data.



On Wed, Nov 13, 2013 at 8:20 AM, Ryan McCue <lists at rotorised.com> wrote:

> Eric Andrew Lewis wrote:
> > An issue in previous iterations of these APIs has been the object
> structure
> > of a setting/metadata/option being intermingled with the the UI
> components
> > in some cases. I don't want to jump the gun on implementation, but here
> is
> > a gist of  meanderings imagining a new
> > API<https://gist.github.com/ericandrewlewis/7441441>
>
> I think that's a good start on structure. I do think we need to avoid
> being too verbose though; having used some other systems similar to
> this, you can end up very abstract quickly.
>
> Rather than having the 'for' key, and letting settings be attached to
> everything, I think we could use subclassing. It's a little weird to
> have something attached to both a post *and* as an option without
> needing different handling. I'm thinking:
>
>         abstract class WP_Setting {}
>         class WP_Setting_Option extends WP_Setting {}
>         class WP_Setting_Post_Meta extends WP_Setting {}
>
> But that could end up being confusing.
>
> > I would love to hear constructive feedback: what the issues you face as a
> > developer in the current environment, what you might want from a new API,
> > etc.
>
> I think something we should look into handling is making nested options
> a first-class feature. That is, storing an array/etc into a single
> option, rather than spreading it out. It's been recommended for a long
> time, but you have to write all of the handling yourself.
>
> On the other hand, if you could do something like...
>
>         $setting = new WP_Setting( array(
>                 'key' => 'master_option',
>                 'type' => 'array',
>                 'children' => array(
>                         'option1' => new WP_Setting( ... ),
>                         'option2 => new WP_Setting( ... ),
>                 ),
>         ) );
>
> ...that'd be pretty cool. This could also be implemented via the
> settings group API you proposed.
>
> --
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Tom Belknap
Owner/Editor, DragonFlyEye.Net
Join me:

   - *Inbox:* http://dragonflyeye.net/subscribe
   - *Web*: http://dragonflyeye.net/
   - *Facebook*: https://www.facebook.com/DragonFlyEye.Net
   - *Twitter*: https://twitter.com/dragonflyeye
   - *Google*: https://plus.google.com/u/1/103251482414903117843/posts

From greglancaster71 at gmail.com  Wed Nov 13 14:34:30 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Wed, 13 Nov 2013 06:34:30 -0800 (PST)
Subject: [wp-hackers] Like Posts - Store Data in DB,
	User_Meta or Post_Meta
In-Reply-To: <CAJnHr4j6ywgJvkdwU5oExA12ZGXYUGQj+n=VRPxERo+Q2vpg8A@mail.gmail.com>
References: <1384192896261-42769.post@n5.nabble.com>
 <1384193569969-42770.post@n5.nabble.com>
 <CAPN-N+aS3oZq2BDnpQBSh1Wie7UxQW4tLE7jjjDgEOY9J9OO_A@mail.gmail.com>
 <1384193812074-42772.post@n5.nabble.com>
 <CAPN-N+ZB9UfVNKA=hD8O2P7Ud1Nwqir3cY6rLj4oo1-7z9O2gQ@mail.gmail.com>
 <CAJnHr4j6ywgJvkdwU5oExA12ZGXYUGQj+n=VRPxERo+Q2vpg8A@mail.gmail.com>
Message-ID: <1384353270104-42817.post@n5.nabble.com>

What Andrew said about duplicate data being dangerous got me thinking, and I
am now wondering if there is an more efficient way to store some
information.  I have an activity feed that updates whenever someone does
something, and it stores the time it occurred, the action_name, the user_id,
and an additional data field I included so I could easily echo out
additional information.

For example, someone likes a post.  That gets stored in the db table
'post_likes' along with the user_id, post_id, and datetime.  At the same
time, an activity_tracker() function updates the table with the user_id,
activity_id, datetime, and and data_field that stores additional information
(for this example, lets say its the post_id).

Then on the page I call the activity_message() function which queries the
activity_tracker() and displays their activity.  The extra data field I
mentioned (post_id) is used to echo out the name of the post a user liked. 

Is there a smarter way to do this?  Maybe a table join to reduce the number
of sql queries, and stop the need to store additional (redundant) data just
so it can be echoed out?  If I don't store duplicate information in the
tables, there is no way for me to associate the post_id that was liked with
the activity_type, user_id and datetime. 



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Like-Posts-Store-Data-in-DB-User-Meta-or-Post-Meta-tp42769p42817.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From halukkaramete at gmail.com  Wed Nov 13 14:43:46 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Wed, 13 Nov 2013 06:43:46 -0800
Subject: [wp-hackers] Is there a way to get the callback function name
 out of a shortcode _programmatically_?
In-Reply-To: <CAOwx47dY2h-G5xRaTrPCdmONq45VQYQog6Wr2d=4v-DXaN9qXw@mail.gmail.com>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
 <980A0BD9-1694-4322-A320-3C05497B7313@codesymphony.co>
 <52819A30.3060201@rotorised.com>
 <9D74CCD6-4E0B-424B-8E38-E69CB9F7778F@codesymphony.co>
 <CAHERW=34uO30zdCnpGfmwxeq3qhi7=UXda+A3e_D50QdTc+dHQ@mail.gmail.com>
 <CAOwx47dY2h-G5xRaTrPCdmONq45VQYQog6Wr2d=4v-DXaN9qXw@mail.gmail.com>
Message-ID: <CAHERW=022fS3pS+3yk8DJ_FJYy0F=24yWSvk9DkFO6ZdwAKnpA@mail.gmail.com>

It does work but only for simple "string" cases such as caption or gallery.

What I mean by simple "string case" is the following ones.
  'embed' => string '__return_false' (length=14)
  'wp_caption' => string 'img_caption_shortcode' (length=21)
  'caption' => string 'img_caption_shortcode' (length=21)
  'gallery' => string 'gallery_shortcode' (length=17)
  'audio' => string 'wp_audio_shortcode' (length=18)
  'video' => string 'wp_video_shortcode' (length=18)

the moment, the string becomes an array. the code stops working.

like this...
  'vc_column_inner' =>

Visual composer is a remarkable tool but the way it handles its shortcode
is different.
At the end of the day, to tell you the truth, their stuff only looks like a
shortcode but deep down in the engine, it could be anything.

I xdebugged thru the whole thing to find out and it turned out that the
visual composer was eventually running the_widget wordpress function for
that shortcode...  ( I pasted the section below for those who are
interested in seeing). But, I'm totally confused in the way they implement
their ( what seems to be) shortcodes.

I always thought that to make a shortcode such as [myshortcode], you follow
a few simple steps such as
add_shortcode('myshortcode','myshortcode_handler') and then you add your
handler function as function myshortcode_handler($atts,$content = null) and
then off you go...

well, with visual composer, i got a "welcome to the hell" situation. :(

I'm trying to get to the bottom of how the information flow from the
shortcode all the way where it ends up as widget.. And the first step for
that is to get to the FIRST FUNCTION that it runs as soon  WP detects a
visual composer shortcode.

And from the global shortcode_tags array, I'm unable to get to it..

I'm very sorry if this sounds like too specific.

Thanks

...
basically, what I see as [vc_wp_posts show_date="1" title="wp title"
number="4" el_class=""]
 in my post editor, ends up running this code

<?php
$output = $title = $number = $show_date = $el_class = '';
extract( shortcode_atts( array(
    'title' => __('Recent Posts'),
    'number' => 5,
    'show_date' => false,
    'el_class' => ''
), $atts ) );
$atts['show_date'] = $show_date;

$el_class = $this->getExtraClass($el_class);

$output = '<div class="vc_wp_posts wpb_content_element'.$el_class.'">';
$type = 'WP_Widget_Recent_Posts';
$args = array();

ob_start();
the_widget( $type, $atts, $args );
$output .= ob_get_clean();

$output .= '</div>' . $this->endBlockComment('vc_wp_posts') . "\n";

echo $output;


which is isolated in vc_wp_posts.php file which gets pulled in from their
class implementation which is in a nut shell goes like this;

/**
 * WPBakery Visual Composer Shortcodes main
 *
 * @package WPBakeryVisualComposer
 *
 */

/*
This is were shortcodes for default content elements are
defined. Each element should have shortcode for frontend
display (on a website).

This will add shortcode that will be used in frontend site
*/

define('VC_SHORTCODE_CUSTOMIZE_PREFIX', 'vc_theme_');
define('VC_SHORTCODE_BEFORE_CUSTOMIZE_PREFIX', 'vc_theme_before_');
define('VC_SHORTCODE_AFTER_CUSTOMIZE_PREFIX', 'vc_theme_after_');
define('VC_SHORTCODE_CUSTOM_CSS_FILTER_TAG', 'vc_shortcodes_css_class');
if (!class_exists('WPBakeryShortCode')) {
    abstract class WPBakeryShortCode extends WPBakeryVisualComposerAbstract
{

        protected $shortcode;
        protected $html_template;

        protected $atts, $settings;


some more blah blah... and then... we get to a section that includes the
vc_wp_posts.php file

        protected function loadTemplate( $atts, $content = null) {
            $output = '';
            if(!$this->html_template) $this->findShortcodeTemplate();
            if($this->html_template) {
                ob_start();
                include ($this->html_template);    // <----- THIS IS WHERE
vc_wp_posts.php GETS PULLED IN.
                $output = ob_get_contents();
                ob_end_clean();
            } else {
                trigger_error(sprintf(__('Wrong template for `%s` shortcode
in class `%s`. Please check your mapping settings for this code. Error',
'js_composer'), $this->shortcode, get_class($this)));
            }

            return $output;
        }

The main puzzle to me, what does this have to do with the basic shortcode
implementation that we all are familiar with.  which looks like this at the
post editor ( [vc_wp_posts show_date="1" title="wp title" number="4"
el_class=""]
 ) and you end up going thru the class implementation I summed up above...
Why this complexity?
Is this a great hack into the shortcode system or is it just a commonly
used traditional technique that I need to learn about.

Thanks..


On Nov 12, 2013 10:53 PM, "Nikola Nikolov" <nikolov.tmw at gmail.com> wrote:

> Hm... I wonder if the code I wrote doesn't work. Can you try to get the
> callback for gallery? And see if that works.
>
>
> On Wed, Nov 13, 2013 at 1:37 AM, Haluk Karamete <halukkaramete at gmail.com
> >wrote:
>
> > Sorry guys to bother you back on this.... In a slightly more complicated
> > case ( a visual composer shortcode ) where the shortcode data is stored
> in
> > an object in the $shortcode_tags array, I'm hitting a brick wall.
> >
> > The shortcode I'm after is "vc_wp_posts" and I use this one liner to
> > ATTEMPT to get it   $callback = get_shortcode_callback("vc_wp_posts");
> >
> > using the function we had yesterday.
> >
> > function get_shortcode_callback( $shortcode ) {
> >     return isset( $GLOBALS['shortcode_tags'][ $shortcode ] ) ?
> > $GLOBALS['shortcode_tags'][ $shortcode ] : false;
> > }
> >
> > and it comes back with a FALSE.
> >
> > I know why but I don't know how to get to piece I need to...
> >
> > Here is the $shortcode_tags var dump view
> >
> > shortened for brewity
> >
> > array (size=74)
> >   'embed' => string '__return_false' (length=14)
> >   'wp_caption' => string 'img_caption_shortcode' (length=21)
> >   'caption' => string 'img_caption_shortcode' (length=21)
> >   'gallery' => string 'gallery_shortcode' (length=17)
> >   'audio' => string 'wp_audio_shortcode' (length=18)
> >   'video' => string 'wp_video_shortcode' (length=18)
> >   'vc_column_inner' =>
> >     array (size=2)
> >       0 =>
> >         object(WPBakeryShortCode_VC_Column_Inner)[173]
> >           protected 'predefined_atts' =>
> >             array (size=3)
> >               ...
> >           protected 'shortcode' => string 'vc_column_inner' (length=15)
> >           protected 'html_template' => null
> >           protected 'atts' => null
> >           protected 'settings' =>
> >             array (size=11)
> >               ...
> >           protected 'is_plugin' => boolean true
> >           protected 'is_theme' => boolean false
> >       1 => string 'output' (length=6)
> >   'vc_row' =>
> >     array (size=2)
> >       0 =>
> >         object(WPBakeryShortCode_VC_Row)[174]
> >
> > etc...
> >
> > now I am gonna fast forward to the section that deals with the shortcode
> > I'm after...
> >
> > and here it is...
> >
> > 'vc_wp_posts' =>
> >     array (size=2)
> >       0 =>
> >         object(WPBakeryShortCode_VC_Wp_Posts)[118]
> >           protected 'shortcode' => string 'vc_wp_posts' (length=11)
> >  <------------ this is where the information we are after.
> >           protected 'html_template' => null
> >           protected 'atts' => null
> >           protected 'settings' =>
> >             array (size=6)
> >               ...
> >           protected 'is_plugin' => boolean true
> >           protected 'is_theme' => boolean false
> >       1 => string 'output' (length=6)
> >
> >   'vc_wp_links' =>
> >     array (size=2)
> >       0 =>
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> > On Tue, Nov 12, 2013 at 5:28 AM, J.D. Grimes <jdg at codesymphony.co>
> wrote:
> >
> > > Yeah, I thought it would reduce bootstrap. Using do_shortcode() is so
> > easy
> > > for new devs to do, if we want them to use the better alternative, I
> > think
> > > it would be adopted quicker in a wrapper like this.
> > >
> > > On Nov 11, 2013, at 10:02 PM, Ryan McCue <lists at rotorised.com> wrote:
> > >
> > > > J.D. Grimes wrote:
> > > >> Here is a function that does just that:
> > > >
> > > > This seems like something we should bring in to core to avoid
> everyone
> > > > using `do_shortcode` and running the full regex parser every time.
> > > >
> > > > I see you proposed http://core.trac.wordpress.org/ticket/25435 but
> it
> > > > got wontfix'd. Anyone else think we should reopen?
> > > >
> > > > --
> > > > Ryan McCue
> > > > <http://ryanmccue.info/>
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dailyrants at gmail.com  Wed Nov 13 14:46:24 2013
From: dailyrants at gmail.com (John)
Date: Wed, 13 Nov 2013 09:46:24 -0500
Subject: [wp-hackers] is there a way to make sure that a shortcode can
 be used only by certain userroles?
In-Reply-To: <CAOwx47d-p12bA+jSx05vxrCzPu1tU0j3wHos=mukoAN9Z01AQA@mail.gmail.com>
References: <CAHERW=16Po9-rksBoKnVejhpciFrD-5xM+g9X9HpZfFE_nOQAg@mail.gmail.com>
 <CAGtTZ+bf2hWjT4-vuU9__=K1bZDJ5v7msMsj_k2g-gk2tz0uhQ@mail.gmail.com>
 <CAOwx47d-p12bA+jSx05vxrCzPu1tU0j3wHos=mukoAN9Z01AQA@mail.gmail.com>
Message-ID: <CAPYXUfW=L7D6W+dmAb2TKEb3zw-0oodAa8pqOpaYSrEaDn51TQ@mail.gmail.com>

has_shortcode was introduced in 3.6.0. You might find that useful here.


On Tue, Nov 12, 2013 at 4:42 PM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> Since the regex that matches shortcodes is quite complex, I can suggest to
> you the following VERY ugly hack :)
>
> function filter_out_protected_shortcode( $content ) {
> // Check to see if the current user can or can't do a specific task
> // it would probably be different in your case
> if ( ! current_user_can( 'edit_others_posts' ) ) {
> global $shortcode_tags;
> // Back-up the currently registered shortcodes
> $_sc_tags = $shortcode_tags;
>
> // Change the shortcode's handler to return an empty string instead of the
> actual content
> $shortcode_tags = array( 'xyx' => '__return_empty_string' );
>
> // Now, since we overrided the $shortcode_tags variable
> // Only the [xyx] shortcode will be parsed - and it will be replaced
> // with an empty string :)
> $content = do_shortcode( $content );
>
> // Restore the original shortcode handlers
> $shortcode_tags = $_sc_tags;
> }
>
> return $content;
> }
> add_filter( 'content_save_pre', 'filter_out_protected_shortcode', 10 );
>
> So what happens here is that we hook to the "content_save_pre" filter as
> Jesse suggested.
> We then check if the user can use that shortcode. If they can't, we
> override the global $shortcode_tags variable to only contain our shortcode
> with a callback "__return_empty_string" - which as the name suggests
> returns an empty string.
> After that, we parse the content and if the shortcode was found there - it
> will be replaced with an empty string.
>
> This is not a perfect solution, since if the shortcode was surrounded by
> two empty lines(one before and one after), you would get three empty lines.
>
> I haven't tested that code, but it should in theory work.
>
> Also - the chances are that no shortcodes would be parsed for that
> request(since that's a request for updating/saving a post) and you can skip
> the copying/restoring of the $shortcode_tags variable, but I always prefer
> to put things back together the way I found them, than to leave them
> messy(debugging something like that is a pain).
>
> Well, that's about it - it's an UGLY hack, but I believe that the core
> handling of the shortcodes is better than anything that I would come-up
> regex-wise(and I'm generally somewhat decent in writing those).
>
>
> On Tue, Nov 12, 2013 at 10:08 PM, Jesse Friedman <
> highfive at jesserfriedman.com> wrote:
>
> > You could filter the content when the post is saved and if the user
> doesn't
> > have the right permissions, then I strip the shortcode or present a
> > warning.
> >
> > you could try using
> > http://codex.wordpress.org/Plugin_API/Filter_Reference/content_save_pre,
> > then maybe some regex to find the shortcode and strip it out
> >
> >
> > On Tue, Nov 12, 2013 at 2:57 PM, Haluk Karamete <halukkaramete at gmail.com
> > >wrote:
> >
> > > What I mean by that is that is this...
> > >
> > > let's say there is an admin-editors-only shortcode. let's call it "xyx"
> > > shortcode for the sake of an example.
> > >
> > > is it possible to have a contributor or author to not to be able to use
> > > that shortcode? they all get stopped with a warning that the post
> cannot
> > be
> > > saved (or created)  because it contains the "xyx" shortcode!
> > >
> > > to cover all the possibilities (such as posting thru email, or thru
> some
> > > other esoteric ways) , what is the best hook(s) that I need to watch
> out
> > so
> > > that there are no loop holes left...
> > >
> > > I hope it was clear and did not confuse you...
> > > thank you
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> >
> > --
> > thanks
> >
> > *jesse friedman*
> > jes.se.com
> > Book: Web Designers Guide to WordPress -
> > http://wdgwp.com/onamazon<http://wdgwp.com/onamazon>
> > Twitter: @professor <http://twitter.com/professor>
> > Facebook: Like<
> > https://www.facebook.com/pages/Jesse-Friedman/204793299545174>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Wed Nov 13 14:53:06 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Wed, 13 Nov 2013 06:53:06 -0800
Subject: [wp-hackers] is there a way to make sure that a shortcode can
 be used only by certain userroles?
In-Reply-To: <CAPYXUfW=L7D6W+dmAb2TKEb3zw-0oodAa8pqOpaYSrEaDn51TQ@mail.gmail.com>
References: <CAHERW=16Po9-rksBoKnVejhpciFrD-5xM+g9X9HpZfFE_nOQAg@mail.gmail.com>
 <CAGtTZ+bf2hWjT4-vuU9__=K1bZDJ5v7msMsj_k2g-gk2tz0uhQ@mail.gmail.com>
 <CAOwx47d-p12bA+jSx05vxrCzPu1tU0j3wHos=mukoAN9Z01AQA@mail.gmail.com>
 <CAPYXUfW=L7D6W+dmAb2TKEb3zw-0oodAa8pqOpaYSrEaDn51TQ@mail.gmail.com>
Message-ID: <CAHERW=0cZfypir94GVXjT77JRqXVH9EnbP3um9eHVum0o=XqcA@mail.gmail.com>

Thank you all. It looks like for 3.6 and up, my arsenal would be

content_save_pre<http://codex.wordpress.org/Plugin_API/Filter_Reference/content_save_pre>
&
 has_shortcode.

Just to make sure... would the above 2 cover all the basis?

What I care the most is the
content_save_pre<http://codex.wordpress.org/Plugin_API/Filter_Reference/content_save_pre>
section.
The key question is;

Are all POSTS & PAGES & CPTS go thru
content_save_pre<http://codex.wordpress.org/Plugin_API/Filter_Reference/content_save_pre>?
Or
better put;

Is there a  way to save a post or page without going thru the
content_save_pre<http://codex.wordpress.org/Plugin_API/Filter_Reference/content_save_pre>
?


On Wed, Nov 13, 2013 at 6:46 AM, John <dailyrants at gmail.com> wrote:

> has_shortcode was introduced in 3.6.0. You might find that useful here.
>
>
> On Tue, Nov 12, 2013 at 4:42 PM, Nikola Nikolov <nikolov.tmw at gmail.com
> >wrote:
>
> > Since the regex that matches shortcodes is quite complex, I can suggest
> to
> > you the following VERY ugly hack :)
> >
> > function filter_out_protected_shortcode( $content ) {
> > // Check to see if the current user can or can't do a specific task
> > // it would probably be different in your case
> > if ( ! current_user_can( 'edit_others_posts' ) ) {
> > global $shortcode_tags;
> > // Back-up the currently registered shortcodes
> > $_sc_tags = $shortcode_tags;
> >
> > // Change the shortcode's handler to return an empty string instead of
> the
> > actual content
> > $shortcode_tags = array( 'xyx' => '__return_empty_string' );
> >
> > // Now, since we overrided the $shortcode_tags variable
> > // Only the [xyx] shortcode will be parsed - and it will be replaced
> > // with an empty string :)
> > $content = do_shortcode( $content );
> >
> > // Restore the original shortcode handlers
> > $shortcode_tags = $_sc_tags;
> > }
> >
> > return $content;
> > }
> > add_filter( 'content_save_pre', 'filter_out_protected_shortcode', 10 );
> >
> > So what happens here is that we hook to the "content_save_pre" filter as
> > Jesse suggested.
> > We then check if the user can use that shortcode. If they can't, we
> > override the global $shortcode_tags variable to only contain our
> shortcode
> > with a callback "__return_empty_string" - which as the name suggests
> > returns an empty string.
> > After that, we parse the content and if the shortcode was found there -
> it
> > will be replaced with an empty string.
> >
> > This is not a perfect solution, since if the shortcode was surrounded by
> > two empty lines(one before and one after), you would get three empty
> lines.
> >
> > I haven't tested that code, but it should in theory work.
> >
> > Also - the chances are that no shortcodes would be parsed for that
> > request(since that's a request for updating/saving a post) and you can
> skip
> > the copying/restoring of the $shortcode_tags variable, but I always
> prefer
> > to put things back together the way I found them, than to leave them
> > messy(debugging something like that is a pain).
> >
> > Well, that's about it - it's an UGLY hack, but I believe that the core
> > handling of the shortcodes is better than anything that I would come-up
> > regex-wise(and I'm generally somewhat decent in writing those).
> >
> >
> > On Tue, Nov 12, 2013 at 10:08 PM, Jesse Friedman <
> > highfive at jesserfriedman.com> wrote:
> >
> > > You could filter the content when the post is saved and if the user
> > doesn't
> > > have the right permissions, then I strip the shortcode or present a
> > > warning.
> > >
> > > you could try using
> > >
> http://codex.wordpress.org/Plugin_API/Filter_Reference/content_save_pre,
> > > then maybe some regex to find the shortcode and strip it out
> > >
> > >
> > > On Tue, Nov 12, 2013 at 2:57 PM, Haluk Karamete <
> halukkaramete at gmail.com
> > > >wrote:
> > >
> > > > What I mean by that is that is this...
> > > >
> > > > let's say there is an admin-editors-only shortcode. let's call it
> "xyx"
> > > > shortcode for the sake of an example.
> > > >
> > > > is it possible to have a contributor or author to not to be able to
> use
> > > > that shortcode? they all get stopped with a warning that the post
> > cannot
> > > be
> > > > saved (or created)  because it contains the "xyx" shortcode!
> > > >
> > > > to cover all the possibilities (such as posting thru email, or thru
> > some
> > > > other esoteric ways) , what is the best hook(s) that I need to watch
> > out
> > > so
> > > > that there are no loop holes left...
> > > >
> > > > I hope it was clear and did not confuse you...
> > > > thank you
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > >
> > >
> > >
> > > --
> > > thanks
> > >
> > > *jesse friedman*
> > > jes.se.com
> > > Book: Web Designers Guide to WordPress -
> > > http://wdgwp.com/onamazon<http://wdgwp.com/onamazon>
> > > Twitter: @professor <http://twitter.com/professor>
> > > Facebook: Like<
> > > https://www.facebook.com/pages/Jesse-Friedman/204793299545174>
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From nikolov.tmw at gmail.com  Wed Nov 13 15:28:30 2013
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Wed, 13 Nov 2013 17:28:30 +0200
Subject: [wp-hackers] Is there a way to get the callback function name
 out of a shortcode _programmatically_?
In-Reply-To: <CAHERW=022fS3pS+3yk8DJ_FJYy0F=24yWSvk9DkFO6ZdwAKnpA@mail.gmail.com>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
 <980A0BD9-1694-4322-A320-3C05497B7313@codesymphony.co>
 <52819A30.3060201@rotorised.com>
 <9D74CCD6-4E0B-424B-8E38-E69CB9F7778F@codesymphony.co>
 <CAHERW=34uO30zdCnpGfmwxeq3qhi7=UXda+A3e_D50QdTc+dHQ@mail.gmail.com>
 <CAOwx47dY2h-G5xRaTrPCdmONq45VQYQog6Wr2d=4v-DXaN9qXw@mail.gmail.com>
 <CAHERW=022fS3pS+3yk8DJ_FJYy0F=24yWSvk9DkFO6ZdwAKnpA@mail.gmail.com>
Message-ID: <CAOwx47enqcsbym1_0SiCMs-KdUp5DS9nd4w1h0QiRFQ86_Eu0Q@mail.gmail.com>

Well - it's up to the developer to figure out how to handle the displaying
of the shortcode they are creating.

What you're seeing has more OOP and template-oriented approach than what
you'd normally have. I don't know if it's better or worse, but I assume it
serves their purpose if they're using it.

For instance they might want to let other plugins or the theme to override
a specific template(or might want to do that in the future) - so having a
uniform way of handling shortcodes(via the main abstract class) can make
this easier(I assume the abstract class might take care of other things -
like registering a UI element for the shortcode for instance).
This also makes it easier for other plugins to add some extra goodness -
when you have an example template to start with(an example class that
extends the main abstract class) and a base class to take care of the extra
load - adding custom shortcodes should be a breeze.

Well - all of that is just a guess of mine on why they could've chosen that
specific path.

I believe that it's worth the time to create your own solution(or borrow
from somewhere) that would take care of everything - adding a button that
lists all available shortcodes, displaying a generator form for each
shortcode, inserting it in the editor, etc. - so when you add shortcode
"xyz" you can just tell the underlying code that this shortcode has 3
parameters(two text fields and one select field) and accepts content, it's
called "Xyz Name" and it's description is "Lorem ipsum...".
Based on that your code would add some UI element that would allow the user
to select the "Xyz Name" shortcode(probably in a pop-up) and populate all
of the fields for it(so enter something in the text fields, select
something from the drop-down and maybe enter some content in the content
textarea). The user then clicks "add shortcode" and the shortcode is
magically inserted into the editor :)

Sure it would take some time to figure out a proper structure, implement it
and make sure it works in different situations, but it would be well worth
the time - your users will most-likely love you for it(let's face it - it's
difficult to remember multiple shortcodes with all of their attributes and
what they do).

Nikola


On Wed, Nov 13, 2013 at 4:43 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> It does work but only for simple "string" cases such as caption or gallery.
>
> What I mean by simple "string case" is the following ones.
>   'embed' => string '__return_false' (length=14)
>   'wp_caption' => string 'img_caption_shortcode' (length=21)
>   'caption' => string 'img_caption_shortcode' (length=21)
>   'gallery' => string 'gallery_shortcode' (length=17)
>   'audio' => string 'wp_audio_shortcode' (length=18)
>   'video' => string 'wp_video_shortcode' (length=18)
>
> the moment, the string becomes an array. the code stops working.
>
> like this...
>   'vc_column_inner' =>
>
> Visual composer is a remarkable tool but the way it handles its shortcode
> is different.
> At the end of the day, to tell you the truth, their stuff only looks like a
> shortcode but deep down in the engine, it could be anything.
>
> I xdebugged thru the whole thing to find out and it turned out that the
> visual composer was eventually running the_widget wordpress function for
> that shortcode...  ( I pasted the section below for those who are
> interested in seeing). But, I'm totally confused in the way they implement
> their ( what seems to be) shortcodes.
>
> I always thought that to make a shortcode such as [myshortcode], you follow
> a few simple steps such as
> add_shortcode('myshortcode','myshortcode_handler') and then you add your
> handler function as function myshortcode_handler($atts,$content = null) and
> then off you go...
>
> well, with visual composer, i got a "welcome to the hell" situation. :(
>
> I'm trying to get to the bottom of how the information flow from the
> shortcode all the way where it ends up as widget.. And the first step for
> that is to get to the FIRST FUNCTION that it runs as soon  WP detects a
> visual composer shortcode.
>
> And from the global shortcode_tags array, I'm unable to get to it..
>
> I'm very sorry if this sounds like too specific.
>
> Thanks
>
> ...
> basically, what I see as [vc_wp_posts show_date="1" title="wp title"
> number="4" el_class=""]
>  in my post editor, ends up running this code
>
> <?php
> $output = $title = $number = $show_date = $el_class = '';
> extract( shortcode_atts( array(
>     'title' => __('Recent Posts'),
>     'number' => 5,
>     'show_date' => false,
>     'el_class' => ''
> ), $atts ) );
> $atts['show_date'] = $show_date;
>
> $el_class = $this->getExtraClass($el_class);
>
> $output = '<div class="vc_wp_posts wpb_content_element'.$el_class.'">';
> $type = 'WP_Widget_Recent_Posts';
> $args = array();
>
> ob_start();
> the_widget( $type, $atts, $args );
> $output .= ob_get_clean();
>
> $output .= '</div>' . $this->endBlockComment('vc_wp_posts') . "\n";
>
> echo $output;
>
>
> which is isolated in vc_wp_posts.php file which gets pulled in from their
> class implementation which is in a nut shell goes like this;
>
> /**
>  * WPBakery Visual Composer Shortcodes main
>  *
>  * @package WPBakeryVisualComposer
>  *
>  */
>
> /*
> This is were shortcodes for default content elements are
> defined. Each element should have shortcode for frontend
> display (on a website).
>
> This will add shortcode that will be used in frontend site
> */
>
> define('VC_SHORTCODE_CUSTOMIZE_PREFIX', 'vc_theme_');
> define('VC_SHORTCODE_BEFORE_CUSTOMIZE_PREFIX', 'vc_theme_before_');
> define('VC_SHORTCODE_AFTER_CUSTOMIZE_PREFIX', 'vc_theme_after_');
> define('VC_SHORTCODE_CUSTOM_CSS_FILTER_TAG', 'vc_shortcodes_css_class');
> if (!class_exists('WPBakeryShortCode')) {
>     abstract class WPBakeryShortCode extends WPBakeryVisualComposerAbstract
> {
>
>         protected $shortcode;
>         protected $html_template;
>
>         protected $atts, $settings;
>
>
> some more blah blah... and then... we get to a section that includes the
> vc_wp_posts.php file
>
>         protected function loadTemplate( $atts, $content = null) {
>             $output = '';
>             if(!$this->html_template) $this->findShortcodeTemplate();
>             if($this->html_template) {
>                 ob_start();
>                 include ($this->html_template);    // <----- THIS IS WHERE
> vc_wp_posts.php GETS PULLED IN.
>                 $output = ob_get_contents();
>                 ob_end_clean();
>             } else {
>                 trigger_error(sprintf(__('Wrong template for `%s` shortcode
> in class `%s`. Please check your mapping settings for this code. Error',
> 'js_composer'), $this->shortcode, get_class($this)));
>             }
>
>             return $output;
>         }
>
> The main puzzle to me, what does this have to do with the basic shortcode
> implementation that we all are familiar with.  which looks like this at the
> post editor ( [vc_wp_posts show_date="1" title="wp title" number="4"
> el_class=""]
>  ) and you end up going thru the class implementation I summed up above...
> Why this complexity?
> Is this a great hack into the shortcode system or is it just a commonly
> used traditional technique that I need to learn about.
>
> Thanks..
>
>
> On Nov 12, 2013 10:53 PM, "Nikola Nikolov" <nikolov.tmw at gmail.com> wrote:
>
> > Hm... I wonder if the code I wrote doesn't work. Can you try to get the
> > callback for gallery? And see if that works.
> >
> >
> > On Wed, Nov 13, 2013 at 1:37 AM, Haluk Karamete <halukkaramete at gmail.com
> > >wrote:
> >
> > > Sorry guys to bother you back on this.... In a slightly more
> complicated
> > > case ( a visual composer shortcode ) where the shortcode data is stored
> > in
> > > an object in the $shortcode_tags array, I'm hitting a brick wall.
> > >
> > > The shortcode I'm after is "vc_wp_posts" and I use this one liner to
> > > ATTEMPT to get it   $callback = get_shortcode_callback("vc_wp_posts");
> > >
> > > using the function we had yesterday.
> > >
> > > function get_shortcode_callback( $shortcode ) {
> > >     return isset( $GLOBALS['shortcode_tags'][ $shortcode ] ) ?
> > > $GLOBALS['shortcode_tags'][ $shortcode ] : false;
> > > }
> > >
> > > and it comes back with a FALSE.
> > >
> > > I know why but I don't know how to get to piece I need to...
> > >
> > > Here is the $shortcode_tags var dump view
> > >
> > > shortened for brewity
> > >
> > > array (size=74)
> > >   'embed' => string '__return_false' (length=14)
> > >   'wp_caption' => string 'img_caption_shortcode' (length=21)
> > >   'caption' => string 'img_caption_shortcode' (length=21)
> > >   'gallery' => string 'gallery_shortcode' (length=17)
> > >   'audio' => string 'wp_audio_shortcode' (length=18)
> > >   'video' => string 'wp_video_shortcode' (length=18)
> > >   'vc_column_inner' =>
> > >     array (size=2)
> > >       0 =>
> > >         object(WPBakeryShortCode_VC_Column_Inner)[173]
> > >           protected 'predefined_atts' =>
> > >             array (size=3)
> > >               ...
> > >           protected 'shortcode' => string 'vc_column_inner' (length=15)
> > >           protected 'html_template' => null
> > >           protected 'atts' => null
> > >           protected 'settings' =>
> > >             array (size=11)
> > >               ...
> > >           protected 'is_plugin' => boolean true
> > >           protected 'is_theme' => boolean false
> > >       1 => string 'output' (length=6)
> > >   'vc_row' =>
> > >     array (size=2)
> > >       0 =>
> > >         object(WPBakeryShortCode_VC_Row)[174]
> > >
> > > etc...
> > >
> > > now I am gonna fast forward to the section that deals with the
> shortcode
> > > I'm after...
> > >
> > > and here it is...
> > >
> > > 'vc_wp_posts' =>
> > >     array (size=2)
> > >       0 =>
> > >         object(WPBakeryShortCode_VC_Wp_Posts)[118]
> > >           protected 'shortcode' => string 'vc_wp_posts' (length=11)
> > >  <------------ this is where the information we are after.
> > >           protected 'html_template' => null
> > >           protected 'atts' => null
> > >           protected 'settings' =>
> > >             array (size=6)
> > >               ...
> > >           protected 'is_plugin' => boolean true
> > >           protected 'is_theme' => boolean false
> > >       1 => string 'output' (length=6)
> > >
> > >   'vc_wp_links' =>
> > >     array (size=2)
> > >       0 =>
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> > > On Tue, Nov 12, 2013 at 5:28 AM, J.D. Grimes <jdg at codesymphony.co>
> > wrote:
> > >
> > > > Yeah, I thought it would reduce bootstrap. Using do_shortcode() is so
> > > easy
> > > > for new devs to do, if we want them to use the better alternative, I
> > > think
> > > > it would be adopted quicker in a wrapper like this.
> > > >
> > > > On Nov 11, 2013, at 10:02 PM, Ryan McCue <lists at rotorised.com>
> wrote:
> > > >
> > > > > J.D. Grimes wrote:
> > > > >> Here is a function that does just that:
> > > > >
> > > > > This seems like something we should bring in to core to avoid
> > everyone
> > > > > using `do_shortcode` and running the full regex parser every time.
> > > > >
> > > > > I see you proposed http://core.trac.wordpress.org/ticket/25435 but
> > it
> > > > > got wontfix'd. Anyone else think we should reopen?
> > > > >
> > > > > --
> > > > > Ryan McCue
> > > > > <http://ryanmccue.info/>
> > > > > _______________________________________________
> > > > > wp-hackers mailing list
> > > > > wp-hackers at lists.automattic.com
> > > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From nikolov.tmw at gmail.com  Wed Nov 13 15:34:27 2013
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Wed, 13 Nov 2013 17:34:27 +0200
Subject: [wp-hackers] is there a way to make sure that a shortcode can
 be used only by certain userroles?
In-Reply-To: <CAHERW=0cZfypir94GVXjT77JRqXVH9EnbP3um9eHVum0o=XqcA@mail.gmail.com>
References: <CAHERW=16Po9-rksBoKnVejhpciFrD-5xM+g9X9HpZfFE_nOQAg@mail.gmail.com>
 <CAGtTZ+bf2hWjT4-vuU9__=K1bZDJ5v7msMsj_k2g-gk2tz0uhQ@mail.gmail.com>
 <CAOwx47d-p12bA+jSx05vxrCzPu1tU0j3wHos=mukoAN9Z01AQA@mail.gmail.com>
 <CAPYXUfW=L7D6W+dmAb2TKEb3zw-0oodAa8pqOpaYSrEaDn51TQ@mail.gmail.com>
 <CAHERW=0cZfypir94GVXjT77JRqXVH9EnbP3um9eHVum0o=XqcA@mail.gmail.com>
Message-ID: <CAOwx47fu0Ahpno7Zhb2c_230Sz19k3MzwYc_pFaEWJ=rYnUJnQ@mail.gmail.com>

There's a way to do that if you're using a custom function that directly
queries the database(I hope no one ever does that for normal content :) ).
If you are using wp_insert_post() or wp_update_post() - then the filter
will be applied to the content.

Are you planning on displaying some kind of a notice when you detect the
presence of the shortcode or are you still going to remove the shortcode?
If you're still going to remove the shortcode, then my suggestion would
save you one regex call(since has_shortcode() is almost the same as
do_shortcode(), except for it doesn't convert the shortcode tags to their
proper content).


On Wed, Nov 13, 2013 at 4:53 PM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> Thank you all. It looks like for 3.6 and up, my arsenal would be
>
> content_save_pre<
> http://codex.wordpress.org/Plugin_API/Filter_Reference/content_save_pre>
> &
>  has_shortcode.
>
> Just to make sure... would the above 2 cover all the basis?
>
> What I care the most is the
> content_save_pre<
> http://codex.wordpress.org/Plugin_API/Filter_Reference/content_save_pre>
> section.
> The key question is;
>
> Are all POSTS & PAGES & CPTS go thru
> content_save_pre<
> http://codex.wordpress.org/Plugin_API/Filter_Reference/content_save_pre>?
> Or
> better put;
>
> Is there a  way to save a post or page without going thru the
> content_save_pre<
> http://codex.wordpress.org/Plugin_API/Filter_Reference/content_save_pre>
> ?
>
>
> On Wed, Nov 13, 2013 at 6:46 AM, John <dailyrants at gmail.com> wrote:
>
> > has_shortcode was introduced in 3.6.0. You might find that useful here.
> >
> >
> > On Tue, Nov 12, 2013 at 4:42 PM, Nikola Nikolov <nikolov.tmw at gmail.com
> > >wrote:
> >
> > > Since the regex that matches shortcodes is quite complex, I can suggest
> > to
> > > you the following VERY ugly hack :)
> > >
> > > function filter_out_protected_shortcode( $content ) {
> > > // Check to see if the current user can or can't do a specific task
> > > // it would probably be different in your case
> > > if ( ! current_user_can( 'edit_others_posts' ) ) {
> > > global $shortcode_tags;
> > > // Back-up the currently registered shortcodes
> > > $_sc_tags = $shortcode_tags;
> > >
> > > // Change the shortcode's handler to return an empty string instead of
> > the
> > > actual content
> > > $shortcode_tags = array( 'xyx' => '__return_empty_string' );
> > >
> > > // Now, since we overrided the $shortcode_tags variable
> > > // Only the [xyx] shortcode will be parsed - and it will be replaced
> > > // with an empty string :)
> > > $content = do_shortcode( $content );
> > >
> > > // Restore the original shortcode handlers
> > > $shortcode_tags = $_sc_tags;
> > > }
> > >
> > > return $content;
> > > }
> > > add_filter( 'content_save_pre', 'filter_out_protected_shortcode', 10 );
> > >
> > > So what happens here is that we hook to the "content_save_pre" filter
> as
> > > Jesse suggested.
> > > We then check if the user can use that shortcode. If they can't, we
> > > override the global $shortcode_tags variable to only contain our
> > shortcode
> > > with a callback "__return_empty_string" - which as the name suggests
> > > returns an empty string.
> > > After that, we parse the content and if the shortcode was found there -
> > it
> > > will be replaced with an empty string.
> > >
> > > This is not a perfect solution, since if the shortcode was surrounded
> by
> > > two empty lines(one before and one after), you would get three empty
> > lines.
> > >
> > > I haven't tested that code, but it should in theory work.
> > >
> > > Also - the chances are that no shortcodes would be parsed for that
> > > request(since that's a request for updating/saving a post) and you can
> > skip
> > > the copying/restoring of the $shortcode_tags variable, but I always
> > prefer
> > > to put things back together the way I found them, than to leave them
> > > messy(debugging something like that is a pain).
> > >
> > > Well, that's about it - it's an UGLY hack, but I believe that the core
> > > handling of the shortcodes is better than anything that I would come-up
> > > regex-wise(and I'm generally somewhat decent in writing those).
> > >
> > >
> > > On Tue, Nov 12, 2013 at 10:08 PM, Jesse Friedman <
> > > highfive at jesserfriedman.com> wrote:
> > >
> > > > You could filter the content when the post is saved and if the user
> > > doesn't
> > > > have the right permissions, then I strip the shortcode or present a
> > > > warning.
> > > >
> > > > you could try using
> > > >
> > http://codex.wordpress.org/Plugin_API/Filter_Reference/content_save_pre,
> > > > then maybe some regex to find the shortcode and strip it out
> > > >
> > > >
> > > > On Tue, Nov 12, 2013 at 2:57 PM, Haluk Karamete <
> > halukkaramete at gmail.com
> > > > >wrote:
> > > >
> > > > > What I mean by that is that is this...
> > > > >
> > > > > let's say there is an admin-editors-only shortcode. let's call it
> > "xyx"
> > > > > shortcode for the sake of an example.
> > > > >
> > > > > is it possible to have a contributor or author to not to be able to
> > use
> > > > > that shortcode? they all get stopped with a warning that the post
> > > cannot
> > > > be
> > > > > saved (or created)  because it contains the "xyx" shortcode!
> > > > >
> > > > > to cover all the possibilities (such as posting thru email, or thru
> > > some
> > > > > other esoteric ways) , what is the best hook(s) that I need to
> watch
> > > out
> > > > so
> > > > > that there are no loop holes left...
> > > > >
> > > > > I hope it was clear and did not confuse you...
> > > > > thank you
> > > > > _______________________________________________
> > > > > wp-hackers mailing list
> > > > > wp-hackers at lists.automattic.com
> > > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > > >
> > > >
> > > >
> > > >
> > > > --
> > > > thanks
> > > >
> > > > *jesse friedman*
> > > > jes.se.com
> > > > Book: Web Designers Guide to WordPress -
> > > > http://wdgwp.com/onamazon<http://wdgwp.com/onamazon>
> > > > Twitter: @professor <http://twitter.com/professor>
> > > > Facebook: Like<
> > > > https://www.facebook.com/pages/Jesse-Friedman/204793299545174>
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jdg at codesymphony.co  Wed Nov 13 15:36:47 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Wed, 13 Nov 2013 10:36:47 -0500
Subject: [wp-hackers] Is there a way to get the callback function name
	out of a shortcode _programmatically_?
In-Reply-To: <CAOwx47enqcsbym1_0SiCMs-KdUp5DS9nd4w1h0QiRFQ86_Eu0Q@mail.gmail.com>
References: <CAHERW=02dbq+H5vGQ_tnbseanm1adRBOA+5y3EYP_gG+yzhPqA@mail.gmail.com>
 <980A0BD9-1694-4322-A320-3C05497B7313@codesymphony.co>
 <52819A30.3060201@rotorised.com>
 <9D74CCD6-4E0B-424B-8E38-E69CB9F7778F@codesymphony.co>
 <CAHERW=34uO30zdCnpGfmwxeq3qhi7=UXda+A3e_D50QdTc+dHQ@mail.gmail.com>
 <CAOwx47dY2h-G5xRaTrPCdmONq45VQYQog6Wr2d=4v-DXaN9qXw@mail.gmail.com>
 <CAHERW=022fS3pS+3yk8DJ_FJYy0F=24yWSvk9DkFO6ZdwAKnpA@mail.gmail.com>
 <CAOwx47enqcsbym1_0SiCMs-KdUp5DS9nd4w1h0QiRFQ86_Eu0Q@mail.gmail.com>
Message-ID: <D3CD60A2-8A7C-41D3-AF93-778F598B784B@codesymphony.co>


On Nov 13, 2013, at 10:28 AM, Nikola Nikolov <nikolov.tmw at gmail.com> wrote:

> I believe that it's worth the time to create your own solution(or borrow
> from somewhere) that would take care of everything - adding a button that
> lists all available shortcodes, displaying a generator form for each
> shortcode, inserting it in the editor, etc. - so when you add shortcode
> "xyz" you can just tell the underlying code that this shortcode has 3
> parameters(two text fields and one select field) and accepts content, it's
> called "Xyz Name" and it's description is "Lorem ipsum...".
> Based on that your code would add some UI element that would allow the user
> to select the "Xyz Name" shortcode(probably in a pop-up) and populate all
> of the fields for it(so enter something in the text fields, select
> something from the drop-down and maybe enter some content in the content
> textarea). The user then clicks "add shortcode" and the shortcode is
> magically inserted into the editor :)
> 
> Sure it would take some time to figure out a proper structure, implement it
> and make sure it works in different situations, but it would be well worth
> the time - your users will most-likely love you for it(let's face it - it's
> difficult to remember multiple shortcodes with all of their attributes and
> what they do).
> 
> Nikola

Here is something along those lines: https://github.com/scottsweb/shortcode-suggest

I?ve been meaning to try it out, but haven?t gotten around to it yet. Sounds great though.

-J.D.

From eric.andrew.lewis at gmail.com  Wed Nov 13 15:47:39 2013
From: eric.andrew.lewis at gmail.com (Eric Andrew Lewis)
Date: Wed, 13 Nov 2013 10:47:39 -0500
Subject: [wp-hackers] Call for thoughts on a new
	Settings/Options/Metadata API
In-Reply-To: <CAEamYWSuw7Cj8Hc8dEVjMooa9GSPeQkez0Gz_cD3ySRbW+_H3w@mail.gmail.com>
References: <CAMi+fEm58HNWH3+MEz+mARbjNjKjx6=8-rJmV3a6Y-YwgsCMig@mail.gmail.com>
 <52837C8F.3050709@rotorised.com>
 <CAEamYWSuw7Cj8Hc8dEVjMooa9GSPeQkez0Gz_cD3ySRbW+_H3w@mail.gmail.com>
Message-ID: <CAMi+fEmTd1yL9Leof-5igK0hAg0ZygVE8+4gsoKLZJGxMY6ejw@mail.gmail.com>

Thanks for the response everyone, and of course keep it coming if you'd
like to add your two cents. I think these points will be a good launchpad
for roadmapping in a dev chat.

Something I'd also like to add to the must-have list is repeating form
fields. For example, a custom post type for Company might include a
repeating field for phone number, to which you could add multiple different
contact numbers to. This is already built-in to some of the post meta
libraries, and brings JS MV* framework support into the discussion.

Eric Andrew Lewis
ericandrewlewis.com
610.715.8560


On Wed, Nov 13, 2013 at 8:38 AM, Thomas Belknap
<dragonfly at dragonflyeye.net>wrote:

> What if the form-building API remained more or less agnostic, and a
> hook-type vehicle was used to listen for appropriate data?
>
> (in the form):
> echo $Form->input('my_setting', array('type' => 'text', 'class' =>
> 'my_plugin_setting', 'maxlength' => 200));
>
> (on save):
> function save_my_setting() {
>     if( !empty($_POST['settings_api']['my_setting']) ) :
>         $Form->check_nonce($_POST['settings_api']['my_setting_nonce']);
>         add_option('my_setting', $_POST['settings_api']['my_setting']);
>     endif;
> }
>
> The idea here is that we only require the developer to provide the language
> that correctly inserts a form element into the form. The API handles
> creating a nonce and correctly setting the name field to include the array
> that sets all settings_api fields apart from any other data (just for
> convenience sake).
>
> If you want to create a "section," feel free to do so in HTML. If you want
> to nest form elements together or save them into subelements of the array
> for your own purposes, have at it. The API only cares that a limited but
> effective set of layout and security needs be met in order to properly save
> your data.
>
>
>
> On Wed, Nov 13, 2013 at 8:20 AM, Ryan McCue <lists at rotorised.com> wrote:
>
> > Eric Andrew Lewis wrote:
> > > An issue in previous iterations of these APIs has been the object
> > structure
> > > of a setting/metadata/option being intermingled with the the UI
> > components
> > > in some cases. I don't want to jump the gun on implementation, but here
> > is
> > > a gist of  meanderings imagining a new
> > > API<https://gist.github.com/ericandrewlewis/7441441>
> >
> > I think that's a good start on structure. I do think we need to avoid
> > being too verbose though; having used some other systems similar to
> > this, you can end up very abstract quickly.
> >
> > Rather than having the 'for' key, and letting settings be attached to
> > everything, I think we could use subclassing. It's a little weird to
> > have something attached to both a post *and* as an option without
> > needing different handling. I'm thinking:
> >
> >         abstract class WP_Setting {}
> >         class WP_Setting_Option extends WP_Setting {}
> >         class WP_Setting_Post_Meta extends WP_Setting {}
> >
> > But that could end up being confusing.
> >
> > > I would love to hear constructive feedback: what the issues you face
> as a
> > > developer in the current environment, what you might want from a new
> API,
> > > etc.
> >
> > I think something we should look into handling is making nested options
> > a first-class feature. That is, storing an array/etc into a single
> > option, rather than spreading it out. It's been recommended for a long
> > time, but you have to write all of the handling yourself.
> >
> > On the other hand, if you could do something like...
> >
> >         $setting = new WP_Setting( array(
> >                 'key' => 'master_option',
> >                 'type' => 'array',
> >                 'children' => array(
> >                         'option1' => new WP_Setting( ... ),
> >                         'option2 => new WP_Setting( ... ),
> >                 ),
> >         ) );
> >
> > ...that'd be pretty cool. This could also be implemented via the
> > settings group API you proposed.
> >
> > --
> > Ryan McCue
> > <http://ryanmccue.info/>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Tom Belknap
> Owner/Editor, DragonFlyEye.Net
> Join me:
>
>    - *Inbox:* http://dragonflyeye.net/subscribe
>    - *Web*: http://dragonflyeye.net/
>    - *Facebook*: https://www.facebook.com/DragonFlyEye.Net
>    - *Twitter*: https://twitter.com/dragonflyeye
>    - *Google*: https://plus.google.com/u/1/103251482414903117843/posts
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From funkatronic at gmail.com  Wed Nov 13 16:33:49 2013
From: funkatronic at gmail.com (Funkatron)
Date: Wed, 13 Nov 2013 10:33:49 -0600
Subject: [wp-hackers] Call for thoughts on a new
	Settings/Options/Metadata API
Message-ID: <CA+-Vqo90RvZBv3h_2wczY4Be8gwSicGqAY=g2tS1rd-5gzQCAQ@mail.gmail.com>

I'm partial to the the OOP approach that the theme customizer uses.  It
creates the fields and automagically binds it to a particular option.
 Especially love the image and color fields it uses.  Would love something
like that for post meta and settings, with the option to create your own
fields if the ones provided in the core aren't adequate.

From nashwan.doaqan at gmail.com  Thu Nov 14 11:11:04 2013
From: nashwan.doaqan at gmail.com (Nashwan Doaqan)
Date: Thu, 14 Nov 2013 14:11:04 +0300
Subject: [wp-hackers] Call for thoughts on a new
	Settings/Options/Metadata API
In-Reply-To: <CA+-Vqo90RvZBv3h_2wczY4Be8gwSicGqAY=g2tS1rd-5gzQCAQ@mail.gmail.com>
References: <CA+-Vqo90RvZBv3h_2wczY4Be8gwSicGqAY=g2tS1rd-5gzQCAQ@mail.gmail.com>
Message-ID: <CAHANiT7R3e3Cvga+8Oy5pdN8E=am9fY_1548VuqG-R+g6FX27w@mail.gmail.com>

1+, Forms Builder API will make our life easier,  This plugin may help you:
https://github.com/nash-ye/Momtaz-Nmwdhj


On 13 November 2013 19:33, Funkatron <funkatronic at gmail.com> wrote:

> I'm partial to the the OOP approach that the theme customizer uses.  It
> creates the fields and automagically binds it to a particular option.
>  Especially love the image and color fields it uses.  Would love something
> like that for post meta and settings, with the option to create your own
> fields if the ones provided in the core aren't adequate.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From eric at eam.me  Thu Nov 14 15:07:45 2013
From: eric at eam.me (Eric Mann)
Date: Thu, 14 Nov 2013 07:07:45 -0800
Subject: [wp-hackers] Plugin Compatibility Stats
Message-ID: <CAEi=p53aV2dJcSp_A7yM3P8ffj=7WQh1=VdTZ4pXKehJ+s_GJw@mail.gmail.com>

Considering the majority of hosts I work with on projects are on PHP 5.3 or
above, I have been consistently (accidentally) committing 5.3 and 5.4 code
to plugins and themes that I release on WordPress.org.  Unfortunately,
listing a higher version of PHP as a requirement isn't an option since most
of my systems' end users aren't tech savvy enough to know what they're on.

But some, when I ask, *do* know their version and I can track things down
quickly.

What I'd like to see is some sort of statistics tracking regarding plugin,
MySQL, and PHP versions for my plugins - similar to the
http://wordpress.org/about/stats/ page for WordPress itself.

I'd also like to see PHP version added to the self-selected compatibility
report on plugin pages.  Having people mark a plugin as "broken" while only
giving plugin and WordPress versions is a bit misleading.  It takes
considerable back-and-forth with a client before I can discover that yes, I
accidentally used ?: or $this::something() in my code and they're on 5.2.

Is this at all possible for WordPress.org?

From otto at ottodestruct.com  Thu Nov 14 16:59:47 2013
From: otto at ottodestruct.com (Otto)
Date: Thu, 14 Nov 2013 10:59:47 -0600
Subject: [wp-hackers] Plugin Compatibility Stats
In-Reply-To: <CAEi=p53aV2dJcSp_A7yM3P8ffj=7WQh1=VdTZ4pXKehJ+s_GJw@mail.gmail.com>
References: <CAEi=p53aV2dJcSp_A7yM3P8ffj=7WQh1=VdTZ4pXKehJ+s_GJw@mail.gmail.com>
Message-ID: <CAD-FghySjeE8Qc_hk1nMUUPM0iqWRFFM4sYL1KjSt9-3z7us5A@mail.gmail.com>

On Thu, Nov 14, 2013 at 9:07 AM, Eric Mann <eric at eam.me> wrote:

> What I'd like to see is some sort of statistics tracking regarding plugin,
> MySQL, and PHP versions for my plugins - similar to the
> http://wordpress.org/about/stats/ page for WordPress itself.


The plugin update check doesn't send that information to the API system.

-Otto

From eric at eam.me  Thu Nov 14 17:01:23 2013
From: eric at eam.me (Eric Mann)
Date: Thu, 14 Nov 2013 09:01:23 -0800
Subject: [wp-hackers] Plugin Compatibility Stats
In-Reply-To: <CAD-FghySjeE8Qc_hk1nMUUPM0iqWRFFM4sYL1KjSt9-3z7us5A@mail.gmail.com>
References: <CAEi=p53aV2dJcSp_A7yM3P8ffj=7WQh1=VdTZ4pXKehJ+s_GJw@mail.gmail.com>
 <CAD-FghySjeE8Qc_hk1nMUUPM0iqWRFFM4sYL1KjSt9-3z7us5A@mail.gmail.com>
Message-ID: <CAEi=p51RkMn=osynShHnY9stgnLY+3EkKy87-cBSzQ3Ws7iD_w@mail.gmail.com>

Perhaps we should update the update check? This would be valuable
information.


On Thu, Nov 14, 2013 at 8:59 AM, Otto <otto at ottodestruct.com> wrote:

> On Thu, Nov 14, 2013 at 9:07 AM, Eric Mann <eric at eam.me> wrote:
>
> > What I'd like to see is some sort of statistics tracking regarding
> plugin,
> > MySQL, and PHP versions for my plugins - similar to the
> > http://wordpress.org/about/stats/ page for WordPress itself.
>
>
> The plugin update check doesn't send that information to the API system.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dc153464a11bcf5aeb18180db28017fb.wp-hackers at planetmike.com  Thu Nov 14 18:39:26 2013
From: dc153464a11bcf5aeb18180db28017fb.wp-hackers at planetmike.com (Michael Clark)
Date: Thu, 14 Nov 2013 13:39:26 -0500
Subject: [wp-hackers] Plugin Compatibility Stats
In-Reply-To: <CAEi=p53aV2dJcSp_A7yM3P8ffj=7WQh1=VdTZ4pXKehJ+s_GJw@mail.gmail.com>
References: <CAEi=p53aV2dJcSp_A7yM3P8ffj=7WQh1=VdTZ4pXKehJ+s_GJw@mail.gmail.com>
Message-ID: <20131114133926533226.4a0f97ee@planetmike.com>

What I did to help troubleshoot was add a small snippet of code to the 
bottom of my plugin's code that reports out the php version, mysql 
version, WordPress version, theme name and version, plugin version 
number, and number of categories. The plugin is 
http://wordpress.org/plugins/ultimate-category-excluder/ . While I 
still get a lot of bug reports without their system details, it is much 
more easy for me to give help when I ask for that info and explain 
where it is. And then I can a bit more easily figure out problems. Mike


On Thu, 14 Nov 2013 07:07:45 -0800, Eric Mann wrote:
> Considering the majority of hosts I work with on projects are on PHP 5.3 or
> above, I have been consistently (accidentally) committing 5.3 and 5.4 code
> to plugins and themes that I release on WordPress.org.  Unfortunately,
> listing a higher version of PHP as a requirement isn't an option since most
> of my systems' end users aren't tech savvy enough to know what they're on.
> 
> But some, when I ask, *do* know their version and I can track things down
> quickly.


-- 

Michael Clark
http://www.PlanetMike.com

Christmas Music 24 Hours a Day, 7 Days a week
http://www.ChristmasMusic247.com

"Injustice anywhere is a threat to justice everywhere."
 - Martin Luther King Jr.

From zamoose at gmail.com  Thu Nov 14 21:07:33 2013
From: zamoose at gmail.com (Doug Stewart)
Date: Thu, 14 Nov 2013 16:07:33 -0500
Subject: [wp-hackers] Plugin Compatibility Stats
In-Reply-To: <20131114133926533226.4a0f97ee@planetmike.com>
References: <CAEi=p53aV2dJcSp_A7yM3P8ffj=7WQh1=VdTZ4pXKehJ+s_GJw@mail.gmail.com>
 <20131114133926533226.4a0f97ee@planetmike.com>
Message-ID: <CANFh3d5KxtCLVfFrTBpe2yBm-BOfqX=VFW8PAq9EDbWLGTQ8Vg@mail.gmail.com>

Did you include a warning about the plugin calling home?


On Thu, Nov 14, 2013 at 1:39 PM, Michael Clark <
dc153464a11bcf5aeb18180db28017fb.wp-hackers at planetmike.com> wrote:

> What I did to help troubleshoot was add a small snippet of code to the
> bottom of my plugin's code that reports out the php version, mysql
> version, WordPress version, theme name and version, plugin version
> number, and number of categories. The plugin is
> http://wordpress.org/plugins/ultimate-category-excluder/ . While I
> still get a lot of bug reports without their system details, it is much
> more easy for me to give help when I ask for that info and explain
> where it is. And then I can a bit more easily figure out problems. Mike
>
>
> On Thu, 14 Nov 2013 07:07:45 -0800, Eric Mann wrote:
> > Considering the majority of hosts I work with on projects are on PHP 5.3
> or
> > above, I have been consistently (accidentally) committing 5.3 and 5.4
> code
> > to plugins and themes that I release on WordPress.org.  Unfortunately,
> > listing a higher version of PHP as a requirement isn't an option since
> most
> > of my systems' end users aren't tech savvy enough to know what they're
> on.
> >
> > But some, when I ask, *do* know their version and I can track things down
> > quickly.
>
>
> --
>
> Michael Clark
> http://www.PlanetMike.com
>
> Christmas Music 24 Hours a Day, 7 Days a week
> http://www.ChristmasMusic247.com
>
> "Injustice anywhere is a threat to justice everywhere."
>  - Martin Luther King Jr.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
-Doug

From abdussamad at abdussamad.com  Thu Nov 14 21:19:57 2013
From: abdussamad at abdussamad.com (Abdussamad Abdurrazzaq)
Date: Fri, 15 Nov 2013 02:19:57 +0500
Subject: [wp-hackers] Plugin Compatibility Stats
In-Reply-To: <CANFh3d5KxtCLVfFrTBpe2yBm-BOfqX=VFW8PAq9EDbWLGTQ8Vg@mail.gmail.com>
References: <CAEi=p53aV2dJcSp_A7yM3P8ffj=7WQh1=VdTZ4pXKehJ+s_GJw@mail.gmail.com>
 <20131114133926533226.4a0f97ee@planetmike.com>
 <CANFh3d5KxtCLVfFrTBpe2yBm-BOfqX=VFW8PAq9EDbWLGTQ8Vg@mail.gmail.com>
Message-ID: <52853E7D.7040109@abdussamad.com>

I think he means it's displayed on an admin page perhaps the plugin's 
options page.

"I ask for that info and explain *where it is*"

You can see it in ksuce_options_page()
http://plugins.svn.wordpress.org/ultimate-category-excluder/trunk/ultimate-category-excluder.php

On 11/15/2013 02:07 AM, Doug Stewart wrote:
> Did you include a warning about the plugin calling home?
>
>
> On Thu, Nov 14, 2013 at 1:39 PM, Michael Clark <
> dc153464a11bcf5aeb18180db28017fb.wp-hackers at planetmike.com> wrote:
>
>> What I did to help troubleshoot was add a small snippet of code to the
>> bottom of my plugin's code that reports out the php version, mysql
>> version, WordPress version, theme name and version, plugin version
>> number, and number of categories. The plugin is
>> http://wordpress.org/plugins/ultimate-category-excluder/ . While I
>> still get a lot of bug reports without their system details, it is much
>> more easy for me to give help when I ask for that info and explain
>> where it is. And then I can a bit more easily figure out problems. Mike
>>
>>
>> On Thu, 14 Nov 2013 07:07:45 -0800, Eric Mann wrote:
>>> Considering the majority of hosts I work with on projects are on PHP 5.3
>> or
>>> above, I have been consistently (accidentally) committing 5.3 and 5.4
>> code
>>> to plugins and themes that I release on WordPress.org.  Unfortunately,
>>> listing a higher version of PHP as a requirement isn't an option since
>> most
>>> of my systems' end users aren't tech savvy enough to know what they're
>> on.
>>>
>>> But some, when I ask, *do* know their version and I can track things down
>>> quickly.
>>
>>
>> --
>>
>> Michael Clark
>> http://www.PlanetMike.com
>>
>> Christmas Music 24 Hours a Day, 7 Days a week
>> http://www.ChristmasMusic247.com
>>
>> "Injustice anywhere is a threat to justice everywhere."
>>   - Martin Luther King Jr.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>

From dc153464a11bcf5aeb18180db28017fb.wp-hackers at planetmike.com  Thu Nov 14 22:30:46 2013
From: dc153464a11bcf5aeb18180db28017fb.wp-hackers at planetmike.com (Michael Clark)
Date: Thu, 14 Nov 2013 17:30:46 -0500
Subject: [wp-hackers] Plugin Compatibility Stats
In-Reply-To: <52853E7D.7040109@abdussamad.com>
References: <CAEi=p53aV2dJcSp_A7yM3P8ffj=7WQh1=VdTZ4pXKehJ+s_GJw@mail.gmail.com>
 <20131114133926533226.4a0f97ee@planetmike.com>
 <CANFh3d5KxtCLVfFrTBpe2yBm-BOfqX=VFW8PAq9EDbWLGTQ8Vg@mail.gmail.com>
 <52853E7D.7040109@abdussamad.com>
Message-ID: <20131114173046832870.06ef1a40@planetmike.com>

Correct, it does not phone home, it just lists the details on the 
bottom of the plugin's settings page. Many many people would email me 
with plugin problems, and trying to figure out what they were running 
was impossible. Telling them to ask their host rarely got a response. 
But now when I can tell them that their version of MySQL has a bug and 
they need to ask their host to upgrade, I'm perceived as helpful. Plus 
I'm not frustrated by them running an old version of WP and trying to 
use my plugin, or some other really odd problem. Mike

On Fri, 15 Nov 2013 02:19:57 +0500, Abdussamad Abdurrazzaq wrote:
> I think he means it's displayed on an admin page perhaps the plugin's 
> options page.
> 
> "I ask for that info and explain *where it is*"
> 
> You can see it in ksuce_options_page()
> 
http://plugins.svn.wordpress.org/ultimate-category-excluder/trunk/ultimate-category-excluder.php
> 
> On 11/15/2013 02:07 AM, Doug Stewart wrote:
>> Did you include a warning about the plugin calling home?
>> 
>> 
>> On Thu, Nov 14, 2013 at 1:39 PM, Michael Clark <
>> dc153464a11bcf5aeb18180db28017fb.wp-hackers at planetmike.com> wrote:
>> 
>>> What I did to help troubleshoot was add a small snippet of code to the
>>> bottom of my plugin's code that reports out the php version, mysql
>>> version, WordPress version, theme name and version, plugin version
>>> number, and number of categories. The plugin is
>>> http://wordpress.org/plugins/ultimate-category-excluder/ . While I
>>> still get a lot of bug reports without their system details, it is much
>>> more easy for me to give help when I ask for that info and explain
>>> where it is. And then I can a bit more easily figure out problems. Mike
>>> 
>>> 
>>> On Thu, 14 Nov 2013 07:07:45 -0800, Eric Mann wrote:
>>>> Considering the majority of hosts I work with on projects are on PHP 5.3
>>> or
>>>> above, I have been consistently (accidentally) committing 5.3 and 5.4
>>> code
>>>> to plugins and themes that I release on WordPress.org.  Unfortunately,
>>>> listing a higher version of PHP as a requirement isn't an option since
>>> most
>>>> of my systems' end users aren't tech savvy enough to know what they're
>>> on.
>>>> 
>>>> But some, when I ask, *do* know their version and I can track things down
>>>> quickly.


From danielx386 at gmail.com  Thu Nov 14 23:12:05 2013
From: danielx386 at gmail.com (Daniel)
Date: Fri, 15 Nov 2013 10:12:05 +1100
Subject: [wp-hackers] Plugin Compatibility Stats
In-Reply-To: <20131114173046832870.06ef1a40@planetmike.com>
References: <CAEi=p53aV2dJcSp_A7yM3P8ffj=7WQh1=VdTZ4pXKehJ+s_GJw@mail.gmail.com>
 <20131114133926533226.4a0f97ee@planetmike.com>
 <CANFh3d5KxtCLVfFrTBpe2yBm-BOfqX=VFW8PAq9EDbWLGTQ8Vg@mail.gmail.com>
 <52853E7D.7040109@abdussamad.com>
 <20131114173046832870.06ef1a40@planetmike.com>
Message-ID: <CAJ5Hi2hn5X4zYozciYKNKMuEV=aayYSeWR2=1Q=6ws5P7iGcdQ@mail.gmail.com>

How can one go about putting that in a theme option page that is using
the api provided by wordpress?
Regards,
Daniel Fenn






On Fri, Nov 15, 2013 at 9:30 AM, Michael Clark
<dc153464a11bcf5aeb18180db28017fb.wp-hackers at planetmike.com> wrote:
> Correct, it does not phone home, it just lists the details on the
> bottom of the plugin's settings page. Many many people would email me
> with plugin problems, and trying to figure out what they were running
> was impossible. Telling them to ask their host rarely got a response.
> But now when I can tell them that their version of MySQL has a bug and
> they need to ask their host to upgrade, I'm perceived as helpful. Plus
> I'm not frustrated by them running an old version of WP and trying to
> use my plugin, or some other really odd problem. Mike
>
> On Fri, 15 Nov 2013 02:19:57 +0500, Abdussamad Abdurrazzaq wrote:
>> I think he means it's displayed on an admin page perhaps the plugin's
>> options page.
>>
>> "I ask for that info and explain *where it is*"
>>
>> You can see it in ksuce_options_page()
>>
> http://plugins.svn.wordpress.org/ultimate-category-excluder/trunk/ultimate-category-excluder.php
>>
>> On 11/15/2013 02:07 AM, Doug Stewart wrote:
>>> Did you include a warning about the plugin calling home?
>>>
>>>
>>> On Thu, Nov 14, 2013 at 1:39 PM, Michael Clark <
>>> dc153464a11bcf5aeb18180db28017fb.wp-hackers at planetmike.com> wrote:
>>>
>>>> What I did to help troubleshoot was add a small snippet of code to the
>>>> bottom of my plugin's code that reports out the php version, mysql
>>>> version, WordPress version, theme name and version, plugin version
>>>> number, and number of categories. The plugin is
>>>> http://wordpress.org/plugins/ultimate-category-excluder/ . While I
>>>> still get a lot of bug reports without their system details, it is much
>>>> more easy for me to give help when I ask for that info and explain
>>>> where it is. And then I can a bit more easily figure out problems. Mike
>>>>
>>>>
>>>> On Thu, 14 Nov 2013 07:07:45 -0800, Eric Mann wrote:
>>>>> Considering the majority of hosts I work with on projects are on PHP 5.3
>>>> or
>>>>> above, I have been consistently (accidentally) committing 5.3 and 5.4
>>>> code
>>>>> to plugins and themes that I release on WordPress.org.  Unfortunately,
>>>>> listing a higher version of PHP as a requirement isn't an option since
>>>> most
>>>>> of my systems' end users aren't tech savvy enough to know what they're
>>>> on.
>>>>>
>>>>> But some, when I ask, *do* know their version and I can track things down
>>>>> quickly.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From chip at chipbennett.net  Thu Nov 14 23:53:41 2013
From: chip at chipbennett.net (Chip Bennett)
Date: Thu, 14 Nov 2013 18:53:41 -0500
Subject: [wp-hackers] Plugin Compatibility Stats
In-Reply-To: <CAJ5Hi2hn5X4zYozciYKNKMuEV=aayYSeWR2=1Q=6ws5P7iGcdQ@mail.gmail.com>
References: <CAEi=p53aV2dJcSp_A7yM3P8ffj=7WQh1=VdTZ4pXKehJ+s_GJw@mail.gmail.com>
 <20131114133926533226.4a0f97ee@planetmike.com>
 <CANFh3d5KxtCLVfFrTBpe2yBm-BOfqX=VFW8PAq9EDbWLGTQ8Vg@mail.gmail.com>
 <52853E7D.7040109@abdussamad.com>
 <20131114173046832870.06ef1a40@planetmike.com>
 <CAJ5Hi2hn5X4zYozciYKNKMuEV=aayYSeWR2=1Q=6ws5P7iGcdQ@mail.gmail.com>
Message-ID: <CAPdLKqcRShAgR4XMdLmqO7cQ8E2wp-venDB-2PLAN09oqqd1Qg@mail.gmail.com>

If you're using do_settings_sections(), the easiest approach would be just
to add an additional settings section, and use the setting description to
output whatever content you want.


On Thu, Nov 14, 2013 at 6:12 PM, Daniel <danielx386 at gmail.com> wrote:

> How can one go about putting that in a theme option page that is using
> the api provided by wordpress?
> Regards,
> Daniel Fenn
>
>
>
>
>
>
> On Fri, Nov 15, 2013 at 9:30 AM, Michael Clark
> <dc153464a11bcf5aeb18180db28017fb.wp-hackers at planetmike.com> wrote:
> > Correct, it does not phone home, it just lists the details on the
> > bottom of the plugin's settings page. Many many people would email me
> > with plugin problems, and trying to figure out what they were running
> > was impossible. Telling them to ask their host rarely got a response.
> > But now when I can tell them that their version of MySQL has a bug and
> > they need to ask their host to upgrade, I'm perceived as helpful. Plus
> > I'm not frustrated by them running an old version of WP and trying to
> > use my plugin, or some other really odd problem. Mike
> >
> > On Fri, 15 Nov 2013 02:19:57 +0500, Abdussamad Abdurrazzaq wrote:
> >> I think he means it's displayed on an admin page perhaps the plugin's
> >> options page.
> >>
> >> "I ask for that info and explain *where it is*"
> >>
> >> You can see it in ksuce_options_page()
> >>
> >
> http://plugins.svn.wordpress.org/ultimate-category-excluder/trunk/ultimate-category-excluder.php
> >>
> >> On 11/15/2013 02:07 AM, Doug Stewart wrote:
> >>> Did you include a warning about the plugin calling home?
> >>>
> >>>
> >>> On Thu, Nov 14, 2013 at 1:39 PM, Michael Clark <
> >>> dc153464a11bcf5aeb18180db28017fb.wp-hackers at planetmike.com> wrote:
> >>>
> >>>> What I did to help troubleshoot was add a small snippet of code to the
> >>>> bottom of my plugin's code that reports out the php version, mysql
> >>>> version, WordPress version, theme name and version, plugin version
> >>>> number, and number of categories. The plugin is
> >>>> http://wordpress.org/plugins/ultimate-category-excluder/ . While I
> >>>> still get a lot of bug reports without their system details, it is
> much
> >>>> more easy for me to give help when I ask for that info and explain
> >>>> where it is. And then I can a bit more easily figure out problems.
> Mike
> >>>>
> >>>>
> >>>> On Thu, 14 Nov 2013 07:07:45 -0800, Eric Mann wrote:
> >>>>> Considering the majority of hosts I work with on projects are on PHP
> 5.3
> >>>> or
> >>>>> above, I have been consistently (accidentally) committing 5.3 and 5.4
> >>>> code
> >>>>> to plugins and themes that I release on WordPress.org.
>  Unfortunately,
> >>>>> listing a higher version of PHP as a requirement isn't an option
> since
> >>>> most
> >>>>> of my systems' end users aren't tech savvy enough to know what
> they're
> >>>> on.
> >>>>>
> >>>>> But some, when I ask, *do* know their version and I can track things
> down
> >>>>> quickly.
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Fri Nov 15 11:59:48 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Fri, 15 Nov 2013 03:59:48 -0800
Subject: [wp-hackers] sessions and wordpress
Message-ID: <CAHERW=18Py=xEYQcgMRvHE08RtAcc9XjzOn4cZOADNZGSirfiw@mail.gmail.com>

Hello,

Are the important consequences of using Sessions in WordPress?
If there are, could someone elaborate the most vital things to in  a few
sentences..

At the top of my head, I am thinking there might be some issues with
Sessions as far as scalability, code performance, multisite, or multiple
servers configurations... Not sure, if these concerns are valid though...

And in general, is avoiding the sessions considered "best-practice" in the
WordPress world?

as always, this question pertains to sites that gets heavy traffic.

From jayarjo at gmail.com  Fri Nov 15 12:36:26 2013
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Fri, 15 Nov 2013 16:36:26 +0400
Subject: [wp-hackers] A tool to check whether the core files were tampered?
Message-ID: <CAM0WtjeQOsp9+ZxigKtJfs18KZsGhH6bKMX3XX4y0rBM+WpKxg@mail.gmail.com>

Hi. Do you guys have a tool to check whether the core files were
tampered? Like a plugin that you install on the WordPress site and it
checks all the core files, plugins and themes (taking into account the
versions) and outputs in a user-friendly way in the backend?

That might be something of immense help to an average dev.

I've found this one: http://wordpress.org/plugins/hashchecker/, but it
seems to be checking only WordPress files. I imagine something doing
similar to plugins and themes. Also this one seems to be abandoned for
a couple of years already.

Davit Barbakadze

From simon.weil at naturalint.com  Fri Nov 15 12:41:09 2013
From: simon.weil at naturalint.com (Simon Weil)
Date: Fri, 15 Nov 2013 14:41:09 +0200
Subject: [wp-hackers] A tool to check whether the core files were
	tampered?
In-Reply-To: <CAM0WtjeQOsp9+ZxigKtJfs18KZsGhH6bKMX3XX4y0rBM+WpKxg@mail.gmail.com>
References: <CAM0WtjeQOsp9+ZxigKtJfs18KZsGhH6bKMX3XX4y0rBM+WpKxg@mail.gmail.com>
Message-ID: <CADxdhedpp_O1j1UcsAD--+2ZkmoNTrLR=J3phkuyN=wdx_myxQ@mail.gmail.com>

try wordfence it's good for core and plugins:
http://wordpress.org/plugins/wordfence/


On Fri, Nov 15, 2013 at 2:36 PM, Davit Barbakadze <jayarjo at gmail.com> wrote:

> Hi. Do you guys have a tool to check whether the core files were
> tampered? Like a plugin that you install on the WordPress site and it
> checks all the core files, plugins and themes (taking into account the
> versions) and outputs in a user-friendly way in the backend?
>
> That might be something of immense help to an average dev.
>
> I've found this one: http://wordpress.org/plugins/hashchecker/, but it
> seems to be checking only WordPress files. I imagine something doing
> similar to plugins and themes. Also this one seems to be abandoned for
> a couple of years already.
>
> Davit Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From contact at stephenharris.info  Fri Nov 15 12:42:36 2013
From: contact at stephenharris.info (Stephen Harris)
Date: Fri, 15 Nov 2013 12:42:36 +0000
Subject: [wp-hackers] A tool to check whether the core files were
	tampered?
In-Reply-To: <CAM0WtjeQOsp9+ZxigKtJfs18KZsGhH6bKMX3XX4y0rBM+WpKxg@mail.gmail.com>
References: <CAM0WtjeQOsp9+ZxigKtJfs18KZsGhH6bKMX3XX4y0rBM+WpKxg@mail.gmail.com>
Message-ID: <528616BC.30209@stephenharris.info>

I use "WordPress File Monitor Plus" ( 
http://wordpress.org/plugins/wordpress-file-monitor-plus/). This 
provides an list of changed files (and optionally gives you email 
alert), and it looks in the plug-in/theme directories too.

But it does a slightly different job than hashchecker - that is, it 
detects changes in the local files rather than comparing local files to 
the released ones. So perhaps it isn't quite what you're after.

Stephen Harris

> Hi. Do you guys have a tool to check whether the core files were
> tampered? Like a plugin that you install on the WordPress site and it
> checks all the core files, plugins and themes (taking into account the
> versions) and outputs in a user-friendly way in the backend?
>
> That might be something of immense help to an average dev.
>
> I've found this one: http://wordpress.org/plugins/hashchecker/, but it
> seems to be checking only WordPress files. I imagine something doing
> similar to plugins and themes. Also this one seems to be abandoned for
> a couple of years already.
>
> Davit Barbakadze
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From jayarjo at gmail.com  Fri Nov 15 13:50:41 2013
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Fri, 15 Nov 2013 17:50:41 +0400
Subject: [wp-hackers] A tool to check whether the core files were
	tampered?
In-Reply-To: <528616BC.30209@stephenharris.info>
References: <CAM0WtjeQOsp9+ZxigKtJfs18KZsGhH6bKMX3XX4y0rBM+WpKxg@mail.gmail.com>
 <528616BC.30209@stephenharris.info>
Message-ID: <CAM0WtjdWTmggROvjW6AVK5WsVSfSRFSo04gL5a8v+w_KBLnRZA@mail.gmail.com>

wordfence seems to be a perfect solution for the task and useful
plugin in general.

Thanks guys and Simon in particular :)
Davit Barbakadze


On Fri, Nov 15, 2013 at 4:42 PM, Stephen Harris
<contact at stephenharris.info> wrote:
> I use "WordPress File Monitor Plus" (
> http://wordpress.org/plugins/wordpress-file-monitor-plus/). This provides an
> list of changed files (and optionally gives you email alert), and it looks
> in the plug-in/theme directories too.
>
> But it does a slightly different job than hashchecker - that is, it detects
> changes in the local files rather than comparing local files to the released
> ones. So perhaps it isn't quite what you're after.
>
> Stephen Harris
>
>> Hi. Do you guys have a tool to check whether the core files were
>> tampered? Like a plugin that you install on the WordPress site and it
>> checks all the core files, plugins and themes (taking into account the
>> versions) and outputs in a user-friendly way in the backend?
>>
>> That might be something of immense help to an average dev.
>>
>> I've found this one: http://wordpress.org/plugins/hashchecker/, but it
>> seems to be checking only WordPress files. I imagine something doing
>> similar to plugins and themes. Also this one seems to be abandoned for
>> a couple of years already.
>>
>> Davit Barbakadze
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From simon.weil at naturalint.com  Fri Nov 15 13:54:37 2013
From: simon.weil at naturalint.com (Simon Weil)
Date: Fri, 15 Nov 2013 15:54:37 +0200
Subject: [wp-hackers] A tool to check whether the core files were
	tampered?
In-Reply-To: <CAM0WtjdWTmggROvjW6AVK5WsVSfSRFSo04gL5a8v+w_KBLnRZA@mail.gmail.com>
References: <CAM0WtjeQOsp9+ZxigKtJfs18KZsGhH6bKMX3XX4y0rBM+WpKxg@mail.gmail.com>
 <528616BC.30209@stephenharris.info>
 <CAM0WtjdWTmggROvjW6AVK5WsVSfSRFSo04gL5a8v+w_KBLnRZA@mail.gmail.com>
Message-ID: <CADxdheetHBoKTmnLh7BKxkF3F2U4s3g_EtchAQYmn_FAnd460w@mail.gmail.com>

Glad to have helped :)
By the way, I use it together with "Better Wordpress Security" that among
many other features also sends me an email for every file change - security
wise it is very useful.


On Fri, Nov 15, 2013 at 3:50 PM, Davit Barbakadze <jayarjo at gmail.com> wrote:

> wordfence seems to be a perfect solution for the task and useful
> plugin in general.
>
> Thanks guys and Simon in particular :)
> Davit Barbakadze
>
>
> On Fri, Nov 15, 2013 at 4:42 PM, Stephen Harris
> <contact at stephenharris.info> wrote:
> > I use "WordPress File Monitor Plus" (
> > http://wordpress.org/plugins/wordpress-file-monitor-plus/). This
> provides an
> > list of changed files (and optionally gives you email alert), and it
> looks
> > in the plug-in/theme directories too.
> >
> > But it does a slightly different job than hashchecker - that is, it
> detects
> > changes in the local files rather than comparing local files to the
> released
> > ones. So perhaps it isn't quite what you're after.
> >
> > Stephen Harris
> >
> >> Hi. Do you guys have a tool to check whether the core files were
> >> tampered? Like a plugin that you install on the WordPress site and it
> >> checks all the core files, plugins and themes (taking into account the
> >> versions) and outputs in a user-friendly way in the backend?
> >>
> >> That might be something of immense help to an average dev.
> >>
> >> I've found this one: http://wordpress.org/plugins/hashchecker/, but it
> >> seems to be checking only WordPress files. I imagine something doing
> >> similar to plugins and themes. Also this one seems to be abandoned for
> >> a couple of years already.
> >>
> >> Davit Barbakadze
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ipstenu at ipstenu.org  Fri Nov 15 15:27:45 2013
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Fri, 15 Nov 2013 07:27:45 -0800
Subject: [wp-hackers] sessions and wordpress
In-Reply-To: <CAHERW=18Py=xEYQcgMRvHE08RtAcc9XjzOn4cZOADNZGSirfiw@mail.gmail.com>
References: <CAHERW=18Py=xEYQcgMRvHE08RtAcc9XjzOn4cZOADNZGSirfiw@mail.gmail.com>
Message-ID: <52863D71.108@ipstenu.org>

PHP Sessions?

You massively screw up anyone with Varnish Caching for one (PHP Sessions 
effectively tells Varnish "No, bro, you don't need to cache, so lemme 
load up like a logged in user!")

Haluk Karamete wrote:
>
> Hello,
>
> Are the important consequences of using Sessions in WordPress?
> If there are, could someone elaborate the most vital things to in a few
> sentences..
>
> At the top of my head, I am thinking there might be some issues with
> Sessions as far as scalability, code performance, multisite, or multiple
> servers configurations... Not sure, if these concerns are valid though...
>
> And in general, is avoiding the sessions considered "best-practice" in the
> WordPress world?
>
> as always, this question pertains to sites that gets heavy traffic.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From noreply+3677101259 at badoo.com  Fri Nov 15 16:17:55 2013
From: noreply+3677101259 at badoo.com (Badoo)
Date: Fri, 15 Nov 2013 16:17:55 +0000
Subject: [wp-hackers] =?utf-8?q?=E2=98=85_Wp_Hackers=2C_Caio_te_mandou_uma?=
	=?utf-8?q?_mensagem?=
Message-ID: <mailman.18.1384532278.2503.wp-hackers@lists.automattic.com>

Responda agora mesmo! Experimente o servi?o de mensagens exclusivas do Badoo.
VER MENSAGEM
http://us1.badoo.com/01197533324/in/9cCBefMYvVU/?lang_id=61&g=57-0-4&m=29&mid=5286493200000000003d00000296b6320160e31501ed


Alguns contatos esperam voc?:


Se os links desta mensagem n?o funcionarem,
copie e cole-os na barra de endere?os de seu navegador.


Divirta-se!
A Equipe Badoo


Este e-mail foi enviado por Badoo Trading Limited (endere?o postal abaixo).
https://us1.badoo.com/impersonation.phtml?lang_id=61&email=wp-hackers%40lists.automattic.com&block_code=8c4a24&m=29&mid=5286493200000000003d00000296b6320160e31501ed&g=0-0-4

Badoo Trading Limited ? uma sociedade limitada registada na Inglaterra e Pa?s de Gales sob o CRN ??7540255 e firma registrada em 131 - 151 Great Titchfield Street, Londres, W1W 5BB.

From noreply+3677101259 at badoo.com  Fri Nov 15 16:17:55 2013
From: noreply+3677101259 at badoo.com (Badoo)
Date: Fri, 15 Nov 2013 16:17:55 +0000
Subject: [wp-hackers] =?utf-8?q?=E2=98=85_Wp_Hackers=2C_Caio_te_mandou_uma?=
	=?utf-8?q?_mensagem?=
Message-ID: <mailman.19.1384532278.2503.wp-hackers@lists.automattic.com>

Responda agora mesmo! Experimente o servi?o de mensagens exclusivas do Badoo.
VER MENSAGEM
http://us1.badoo.com/01197533324/in/9cCBefMYvVU/?lang_id=61&g=57-0-4&m=29&mid=5286493200000000003d00000296b6320167e31700c7


Alguns contatos esperam voc?:


Se os links desta mensagem n?o funcionarem,
copie e cole-os na barra de endere?os de seu navegador.


Divirta-se!
A Equipe Badoo


Este e-mail foi enviado por Badoo Trading Limited (endere?o postal abaixo).
https://us1.badoo.com/impersonation.phtml?lang_id=61&email=wp-hackers%40lists.automattic.com&block_code=8c4a24&m=29&mid=5286493200000000003d00000296b6320167e31700c7&g=0-0-4

Badoo Trading Limited ? uma sociedade limitada registada na Inglaterra e Pa?s de Gales sob o CRN ??7540255 e firma registrada em 131 - 151 Great Titchfield Street, Londres, W1W 5BB.

From halukkaramete at gmail.com  Fri Nov 15 16:22:59 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Fri, 15 Nov 2013 08:22:59 -0800
Subject: [wp-hackers] sessions and wordpress
In-Reply-To: <52863D71.108@ipstenu.org>
References: <CAHERW=18Py=xEYQcgMRvHE08RtAcc9XjzOn4cZOADNZGSirfiw@mail.gmail.com>
 <52863D71.108@ipstenu.org>
Message-ID: <CAHERW=2_phy05J=yVTGhyFAebRzqw_ynfAGRP2tU1zJNk0Hm1Q@mail.gmail.com>

Sure that's a big one Mike.
I'd like to hear more problems with sessions though. I'm just building a
case study on why sessions should be avoided as far as WordPress goes.
On Nov 15, 2013 7:27 AM, "Mika A Epstein" <ipstenu at ipstenu.org> wrote:

> PHP Sessions?
>
> You massively screw up anyone with Varnish Caching for one (PHP Sessions
> effectively tells Varnish "No, bro, you don't need to cache, so lemme load
> up like a logged in user!")
>
> Haluk Karamete wrote:
>
>>
>> Hello,
>>
>> Are the important consequences of using Sessions in WordPress?
>> If there are, could someone elaborate the most vital things to in a few
>> sentences..
>>
>> At the top of my head, I am thinking there might be some issues with
>> Sessions as far as scalability, code performance, multisite, or multiple
>> servers configurations... Not sure, if these concerns are valid though...
>>
>> And in general, is avoiding the sessions considered "best-practice" in the
>> WordPress world?
>>
>> as always, this question pertains to sites that gets heavy traffic.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From david at wordshell.net  Fri Nov 15 16:42:33 2013
From: david at wordshell.net (David Anderson)
Date: Fri, 15 Nov 2013 16:42:33 +0000
Subject: [wp-hackers] A tool to check whether the core files were
	tampered?
In-Reply-To: <mailman.8074.1384532581.2509.wp-hackers@lists.automattic.com>
References: <mailman.8074.1384532581.2509.wp-hackers@lists.automattic.com>
Message-ID: <52864EF9.3000700@wordshell.net>


Hi,

Since I sell a solution in this area, I'm biased...

... but, as a long-time security pro, I'd say that a plugin which offers 
to check that your website hasn't been tampered with fails at the 
conceptual level. Useless. It's only good as long as you're sure that 
the plugin itself is intact. Altering the plugin is trivially easy (e.g. 
1 line to short-circuit the tamper check, and 'return true;'). It's like 
asking your young son "you would tell me if you were lying, wouldn't 
you?". "Yeah dad, sure". "Thanks - I was almost worried for a moment there."

Why would someone who tampers with your website *not* tamper with the 
security check? Basically, you're relying on the hacker being 
incompetent. Wordfence (for example), has had over 1 million downloads. 
Why would someone trying to break into WordPress sites have to be to not 
have "short-circuit WordFence's tamper checks" in his toolkit?

Unless you're happy assuming that hackers will continue ignoring 
WordFence (etc.) so that their hacks can get cleaned up quicker, then 
the only way to verify your files is off-site, i.e. externally. Anything 
(not just a plugin) that you run within the same web-space could itself 
be tampered with. A service which has pristine versions of your plugins, 
and can compare them in a 'clean room' with what's installed. <Advert>I 
do this with my own tool (from the command line: "wordshell all 
--everything --checkmodifications"). It avoids this issue because it 
does not run any code on the webserver for that operation</Advert>. I'm 
sure there must be other functional solutions as well.

Best wishes,
David

On 15/11/13 16:23,Davit Barbakadze wrote:
> Hi. Do you guys have a tool to check whether the core files were
> tampered? Like a plugin that you install on the WordPress site and it
> checks all the core files, plugins and themes (taking into account the
> versions) and outputs in a user-friendly way in the backend?
>
> That might be something of immense help to an average dev.
>
> I've found this one: http://wordpress.org/plugins/hashchecker/, but it
> seems to be checking only WordPress files. I imagine something doing
> similar to plugins and themes. Also this one seems to be abandoned for
> a couple of years already.
>
> Davit Barbakadze

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net



From jbutkus at time.ly  Fri Nov 15 17:04:40 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Fri, 15 Nov 2013 19:04:40 +0200
Subject: [wp-hackers] Incremental rows retrieval
Message-ID: <52865428.70504@time.ly>

Hi all.

Is there a chance, without bypassing `wpdb`, to get resulting records 
from `SELECT` query in an incremental manner, instead of current 
behaviour when `wpdb` pre-fetches them all?

Let's assume I have a query which might result in tens of thousands of rows.
Holding it all in memory (like wpdb currently does when I execute 
`SELECT`) would require a lot of memory.
If I were able to process them incrementally memory consumption may be 
low, as they are fed to external resource and then discarded.

I have considered following alternative: using multiple queries and 
adding `WHERE primary_key > $last_value ORDER BY primary_key ASC` to 
subsequent ones.
It seems to be the best solution given MySQL index optimisation.
The problem here is consistency - if rows has cross dependency there is 
no guarantee that all relates rows will fall into a single interval.

Though - is there a chance to get records in an incremental manner 
without breaking wpdb interfaces?


-- 
Regards,
Justas Butkus

From jdg at codesymphony.co  Fri Nov 15 17:07:27 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Fri, 15 Nov 2013 12:07:27 -0500
Subject: [wp-hackers] A tool to check whether the core files were
	tampered?
In-Reply-To: <52864EF9.3000700@wordshell.net>
References: <mailman.8074.1384532581.2509.wp-hackers@lists.automattic.com>
 <52864EF9.3000700@wordshell.net>
Message-ID: <043D2CC8-A182-4A17-A329-0F2ABEA4243C@codesymphony.co>


On Nov 15, 2013, at 11:42 AM, David Anderson <david at wordshell.net> wrote:

> 
> Hi,
> 
> Since I sell a solution in this area, I'm biased...
> 
> ... but, as a long-time security pro, I'd say that a plugin which offers to check that your website hasn't been tampered with fails at the conceptual level. Useless. It's only good as long as you're sure that the plugin itself is intact. Altering the plugin is trivially easy (e.g. 1 line to short-circuit the tamper check, and 'return true;'). It's like asking your young son "you would tell me if you were lying, wouldn't you?". "Yeah dad, sure". "Thanks - I was almost worried for a moment there."
> 
> Why would someone who tampers with your website *not* tamper with the security check? Basically, you're relying on the hacker being incompetent. Wordfence (for example), has had over 1 million downloads. Why would someone trying to break into WordPress sites have to be to not have "short-circuit WordFence's tamper checks" in his toolkit?
> 
> Unless you're happy assuming that hackers will continue ignoring WordFence (etc.) so that their hacks can get cleaned up quicker, then the only way to verify your files is off-site, i.e. externally. Anything (not just a plugin) that you run within the same web-space could itself be tampered with. A service which has pristine versions of your plugins, and can compare them in a 'clean room' with what's installed. <Advert>I do this with my own tool (from the command line: "wordshell all --everything --checkmodifications"). It avoids this issue because it does not run any code on the webserver for that operation</Advert>. I'm sure there must be other functional solutions as well.
> 
> Best wishes,
> David

Agreed that its usefulness in that regard is limited. But it is more useful in this case, when checking if a site has been previously tampered with before the plugin was installed.



From otto at ottodestruct.com  Fri Nov 15 17:34:53 2013
From: otto at ottodestruct.com (Otto)
Date: Fri, 15 Nov 2013 11:34:53 -0600
Subject: [wp-hackers] sessions and wordpress
In-Reply-To: <CAHERW=2_phy05J=yVTGhyFAebRzqw_ynfAGRP2tU1zJNk0Hm1Q@mail.gmail.com>
References: <CAHERW=18Py=xEYQcgMRvHE08RtAcc9XjzOn4cZOADNZGSirfiw@mail.gmail.com>
 <52863D71.108@ipstenu.org>
 <CAHERW=2_phy05J=yVTGhyFAebRzqw_ynfAGRP2tU1zJNk0Hm1Q@mail.gmail.com>
Message-ID: <CAD-FghyyLdUiz5Okd=XmgR5e3i6Y_EU3RPAcwBv-=hf=qcde-Q@mail.gmail.com>

It's not really a question of WordPress specifically. PHP sessions have
rather poor support on various hosting systems, as I discovered the hard
way. There's also caching issues and so forth.

If you're making code for your own site, where you control the setup and
configuration, then that's one thing. But making code designed to be used
across lots of different sites and configurations and setups is a slightly
different story.

-Otto


On Fri, Nov 15, 2013 at 10:22 AM, Haluk Karamete <halukkaramete at gmail.com>wrote:

> Sure that's a big one Mike.
> I'd like to hear more problems with sessions though. I'm just building a
> case study on why sessions should be avoided as far as WordPress goes.
> On Nov 15, 2013 7:27 AM, "Mika A Epstein" <ipstenu at ipstenu.org> wrote:
>
> > PHP Sessions?
> >
> > You massively screw up anyone with Varnish Caching for one (PHP Sessions
> > effectively tells Varnish "No, bro, you don't need to cache, so lemme
> load
> > up like a logged in user!")
> >
> > Haluk Karamete wrote:
> >
> >>
> >> Hello,
> >>
> >> Are the important consequences of using Sessions in WordPress?
> >> If there are, could someone elaborate the most vital things to in a few
> >> sentences..
> >>
> >> At the top of my head, I am thinking there might be some issues with
> >> Sessions as far as scalability, code performance, multisite, or multiple
> >> servers configurations... Not sure, if these concerns are valid
> though...
> >>
> >> And in general, is avoiding the sessions considered "best-practice" in
> the
> >> WordPress world?
> >>
> >> as always, this question pertains to sites that gets heavy traffic.
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From nikolov.tmw at gmail.com  Fri Nov 15 17:37:53 2013
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Fri, 15 Nov 2013 19:37:53 +0200
Subject: [wp-hackers] sessions and wordpress
In-Reply-To: <CAD-FghyyLdUiz5Okd=XmgR5e3i6Y_EU3RPAcwBv-=hf=qcde-Q@mail.gmail.com>
References: <CAHERW=18Py=xEYQcgMRvHE08RtAcc9XjzOn4cZOADNZGSirfiw@mail.gmail.com>
 <52863D71.108@ipstenu.org>
 <CAHERW=2_phy05J=yVTGhyFAebRzqw_ynfAGRP2tU1zJNk0Hm1Q@mail.gmail.com>
 <CAD-FghyyLdUiz5Okd=XmgR5e3i6Y_EU3RPAcwBv-=hf=qcde-Q@mail.gmail.com>
Message-ID: <CAOwx47ezUHhRBqNPsXMNYKd8RoBaeqnxTAugpkvj90AdWu8wdg@mail.gmail.com>

How would you handle data like a shopping cart?

I'm just curious what other options you have that would be okay to use.
Would you store the session data in the database maybe? I know storing it
in a cookie is not an overly good idea.


On Fri, Nov 15, 2013 at 7:34 PM, Otto <otto at ottodestruct.com> wrote:

> It's not really a question of WordPress specifically. PHP sessions have
> rather poor support on various hosting systems, as I discovered the hard
> way. There's also caching issues and so forth.
>
> If you're making code for your own site, where you control the setup and
> configuration, then that's one thing. But making code designed to be used
> across lots of different sites and configurations and setups is a slightly
> different story.
>
> -Otto
>
>
> On Fri, Nov 15, 2013 at 10:22 AM, Haluk Karamete <halukkaramete at gmail.com
> >wrote:
>
> > Sure that's a big one Mike.
> > I'd like to hear more problems with sessions though. I'm just building a
> > case study on why sessions should be avoided as far as WordPress goes.
> > On Nov 15, 2013 7:27 AM, "Mika A Epstein" <ipstenu at ipstenu.org> wrote:
> >
> > > PHP Sessions?
> > >
> > > You massively screw up anyone with Varnish Caching for one (PHP
> Sessions
> > > effectively tells Varnish "No, bro, you don't need to cache, so lemme
> > load
> > > up like a logged in user!")
> > >
> > > Haluk Karamete wrote:
> > >
> > >>
> > >> Hello,
> > >>
> > >> Are the important consequences of using Sessions in WordPress?
> > >> If there are, could someone elaborate the most vital things to in a
> few
> > >> sentences..
> > >>
> > >> At the top of my head, I am thinking there might be some issues with
> > >> Sessions as far as scalability, code performance, multisite, or
> multiple
> > >> servers configurations... Not sure, if these concerns are valid
> > though...
> > >>
> > >> And in general, is avoiding the sessions considered "best-practice" in
> > the
> > >> WordPress world?
> > >>
> > >> as always, this question pertains to sites that gets heavy traffic.
> > >> _______________________________________________
> > >> wp-hackers mailing list
> > >> wp-hackers at lists.automattic.com
> > >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >>
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From nl at thoughtrefinery.com  Fri Nov 15 17:41:09 2013
From: nl at thoughtrefinery.com (Nicholas Ciske)
Date: Fri, 15 Nov 2013 11:41:09 -0600
Subject: [wp-hackers] sessions and wordpress
In-Reply-To: <CAOwx47ezUHhRBqNPsXMNYKd8RoBaeqnxTAugpkvj90AdWu8wdg@mail.gmail.com>
References: <CAHERW=18Py=xEYQcgMRvHE08RtAcc9XjzOn4cZOADNZGSirfiw@mail.gmail.com>
 <52863D71.108@ipstenu.org>
 <CAHERW=2_phy05J=yVTGhyFAebRzqw_ynfAGRP2tU1zJNk0Hm1Q@mail.gmail.com>
 <CAD-FghyyLdUiz5Okd=XmgR5e3i6Y_EU3RPAcwBv-=hf=qcde-Q@mail.gmail.com>
 <CAOwx47ezUHhRBqNPsXMNYKd8RoBaeqnxTAugpkvj90AdWu8wdg@mail.gmail.com>
Message-ID: <59BC12BB-08ED-426B-9502-C82B4D718594@thoughtrefinery.com>

If you need session-like storage in a plugin:

GitHub: https://github.com/ericmann/wp-session-manager

See Pippins review about his use in Easy Digital Downloads:
http://wordpress.org/support/view/plugin-reviews/wp-session-manager

_________________________
Nick Ciske
http://thoughtrefinery.com/
@nciske	

On Nov 15, 2013, at 11:37 AM, Nikola Nikolov wrote:

> How would you handle data like a shopping cart?
> 
> I'm just curious what other options you have that would be okay to use.
> Would you store the session data in the database maybe? I know storing it
> in a cookie is not an overly good idea.
> 


From hal at burgiss.net  Fri Nov 15 17:52:23 2013
From: hal at burgiss.net (Hal Burgiss)
Date: Fri, 15 Nov 2013 12:52:23 -0500
Subject: [wp-hackers] sessions and wordpress
In-Reply-To: <CAOwx47ezUHhRBqNPsXMNYKd8RoBaeqnxTAugpkvj90AdWu8wdg@mail.gmail.com>
References: <CAHERW=18Py=xEYQcgMRvHE08RtAcc9XjzOn4cZOADNZGSirfiw@mail.gmail.com>
 <52863D71.108@ipstenu.org>
 <CAHERW=2_phy05J=yVTGhyFAebRzqw_ynfAGRP2tU1zJNk0Hm1Q@mail.gmail.com>
 <CAD-FghyyLdUiz5Okd=XmgR5e3i6Y_EU3RPAcwBv-=hf=qcde-Q@mail.gmail.com>
 <CAOwx47ezUHhRBqNPsXMNYKd8RoBaeqnxTAugpkvj90AdWu8wdg@mail.gmail.com>
Message-ID: <CAEizah+WgEYtRDkyJOqXMs2M49jJ7qRhp8PxV1xQKQ75huCs1A@mail.gmail.com>

On Fri, Nov 15, 2013 at 12:37 PM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> How would you handle data like a shopping cart?
>
> I'm just curious what other options you have that would be okay to use.
> Would you store the session data in the database maybe? I know storing it
> in a cookie is not an overly good idea.
>
>
>
You can define the session handler. You can use mysql or memcached for
instance, to handle load balancer type issues.

From ipstenu at ipstenu.org  Fri Nov 15 18:10:49 2013
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Fri, 15 Nov 2013 10:10:49 -0800
Subject: [wp-hackers] A tool to check whether the core files were
	tampered?
In-Reply-To: <043D2CC8-A182-4A17-A329-0F2ABEA4243C@codesymphony.co>
References: <mailman.8074.1384532581.2509.wp-hackers@lists.automattic.com>
 <52864EF9.3000700@wordshell.net>
 <043D2CC8-A182-4A17-A329-0F2ABEA4243C@codesymphony.co>
Message-ID: <528663A9.3090404@ipstenu.org>

Given the nature of most 'tampering' is to add in obfuscated code, I 
just search for that. Or if I even remotely suspect it, delete core and 
plugins, reinstall. it's not like it hurts my data.

It'd be nice if someone made a wp-cli-esque sort of scanner for this, 
though, since in theory if that was baked in, they couldn't mess with 
the scanner unless they had access to edit wp-cli (i.e. SU or root)

J.D. Grimes wrote:
>
> On Nov 15, 2013, at 11:42 AM, David Anderson<david at wordshell.net> wrote:
>
>>
>> Hi,
>>
>> Since I sell a solution in this area, I'm biased...
>>
>> ... but, as a long-time security pro, I'd say that a plugin which 
>> offers to check that your website hasn't been tampered with fails at 
>> the conceptual level. Useless. It's only good as long as you're sure 
>> that the plugin itself is intact. Altering the plugin is trivially 
>> easy (e.g. 1 line to short-circuit the tamper check, and 'return 
>> true;'). It's like asking your young son "you would tell me if you 
>> were lying, wouldn't you?". "Yeah dad, sure". "Thanks - I was almost 
>> worried for a moment there."
>>
>> Why would someone who tampers with your website *not* tamper with the 
>> security check? Basically, you're relying on the hacker being 
>> incompetent. Wordfence (for example), has had over 1 million 
>> downloads. Why would someone trying to break into WordPress sites 
>> have to be to not have "short-circuit WordFence's tamper checks" in 
>> his toolkit?
>>
>> Unless you're happy assuming that hackers will continue ignoring 
>> WordFence (etc.) so that their hacks can get cleaned up quicker, then 
>> the only way to verify your files is off-site, i.e. externally. 
>> Anything (not just a plugin) that you run within the same web-space 
>> could itself be tampered with. A service which has pristine versions 
>> of your plugins, and can compare them in a 'clean room' with what's 
>> installed.<Advert>I do this with my own tool (from the command line: 
>> "wordshell all --everything --checkmodifications"). It avoids this 
>> issue because it does not run any code on the webserver for that 
>> operation</Advert>. I'm sure there must be other functional solutions 
>> as well.
>>
>> Best wishes,
>> David
>
>
> Agreed that its usefulness in that regard is limited. But it is more 
> useful in this case, when checking if a site has been previously 
> tampered with before the plugin was installed.
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From developer at rogerhub.com  Sat Nov 16 04:22:17 2013
From: developer at rogerhub.com (Roger Chen)
Date: Fri, 15 Nov 2013 20:22:17 -0800
Subject: [wp-hackers] A tool to check whether the core files were
	tampered?
In-Reply-To: <528663A9.3090404@ipstenu.org>
References: <mailman.8074.1384532581.2509.wp-hackers@lists.automattic.com>
 <52864EF9.3000700@wordshell.net>
 <043D2CC8-A182-4A17-A329-0F2ABEA4243C@codesymphony.co>
 <528663A9.3090404@ipstenu.org>
Message-ID: <CAEdQCeX6z+D_jArLX+p9rKw2XCwMmEmKVMsF9ZnPyuZx84dMzQ@mail.gmail.com>

If you're concerned that your core files are corrupted or have been
tampered with, you can always just do a find . -type f | xargs md5sum and
compare (diff) it to a fresh copy from wordpress.org. On the other hand,
the only parts of your installation that should differ from a clean install
are your wp-config and wp-content. You should be able to replace all of the
core files without an issue.

Roger


On Fri, Nov 15, 2013 at 10:10 AM, Mika A Epstein <ipstenu at ipstenu.org>wrote:

> Given the nature of most 'tampering' is to add in obfuscated code, I just
> search for that. Or if I even remotely suspect it, delete core and plugins,
> reinstall. it's not like it hurts my data.
>
> It'd be nice if someone made a wp-cli-esque sort of scanner for this,
> though, since in theory if that was baked in, they couldn't mess with the
> scanner unless they had access to edit wp-cli (i.e. SU or root)
>
>
> J.D. Grimes wrote:
>
>>
>> On Nov 15, 2013, at 11:42 AM, David Anderson<david at wordshell.net> wrote:
>>
>>
>>> Hi,
>>>
>>> Since I sell a solution in this area, I'm biased...
>>>
>>> ... but, as a long-time security pro, I'd say that a plugin which offers
>>> to check that your website hasn't been tampered with fails at the
>>> conceptual level. Useless. It's only good as long as you're sure that the
>>> plugin itself is intact. Altering the plugin is trivially easy (e.g. 1 line
>>> to short-circuit the tamper check, and 'return true;'). It's like asking
>>> your young son "you would tell me if you were lying, wouldn't you?". "Yeah
>>> dad, sure". "Thanks - I was almost worried for a moment there."
>>>
>>> Why would someone who tampers with your website *not* tamper with the
>>> security check? Basically, you're relying on the hacker being incompetent.
>>> Wordfence (for example), has had over 1 million downloads. Why would
>>> someone trying to break into WordPress sites have to be to not have
>>> "short-circuit WordFence's tamper checks" in his toolkit?
>>>
>>> Unless you're happy assuming that hackers will continue ignoring
>>> WordFence (etc.) so that their hacks can get cleaned up quicker, then the
>>> only way to verify your files is off-site, i.e. externally. Anything (not
>>> just a plugin) that you run within the same web-space could itself be
>>> tampered with. A service which has pristine versions of your plugins, and
>>> can compare them in a 'clean room' with what's installed.<Advert>I do this
>>> with my own tool (from the command line: "wordshell all --everything
>>> --checkmodifications"). It avoids this issue because it does not run any
>>> code on the webserver for that operation</Advert>. I'm sure there must be
>>> other functional solutions as well.
>>>
>>> Best wishes,
>>> David
>>>
>>
>>
>> Agreed that its usefulness in that regard is limited. But it is more
>> useful in this case, when checking if a site has been previously tampered
>> with before the plugin was installed.
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From aubreypwd at gmail.com  Sat Nov 16 18:39:30 2013
From: aubreypwd at gmail.com (Aubrey Portwood)
Date: Sat, 16 Nov 2013 11:39:30 -0700
Subject: [wp-hackers] Working with develop.svn.wordpress.org
Message-ID: <5287BBE2.8010303@gmail.com>

Is there any reason that my svn would say "At revision 26236" but my 
WordPress Admin would say "WordPress 3.8-alpha-26127-src" 
(https://cloudup.com/cjByV75TqDR)? Because I've found a small CSS issue 
(https://cloudup.com/cb9Bbn1FQIm & https://cloudup.com/cHFrjDKThmT) but 
these numbers being different makes me hesitant to try anything. And 
<helen> on #wordpress-dev said it was fixed in26232 last night but I'm 
rev'd up to26236? I've never contributed to core, and just started 
working on develop.svn, but I'd like to start (feeling noobish).

I also tried looking through things like the handbook, Make/Core, etc 
and have found nothing that shows I should be having this issue.

Is there somewhere more appropriate for this question? Am I crazy?

Brief explanation of my setup:

MAMP
/htdocs/develop.svn.wordpress.org <- svn co develop.svn.wordpress.org/trunk
ln -s /htdocs/develop.svn.wordpress.org/src /htdocs/develop.wordpress.dev
Virtual host for develop.wordpress.dev
+ Confident that my MAMP setup is good

From jdg at codesymphony.co  Sat Nov 16 18:46:27 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Sat, 16 Nov 2013 13:46:27 -0500
Subject: [wp-hackers] Working with develop.svn.wordpress.org
In-Reply-To: <5287BBE2.8010303@gmail.com>
References: <5287BBE2.8010303@gmail.com>
Message-ID: <63D894EF-48D9-4451-B5A1-59892C8C3ECF@codesymphony.co>


On Nov 16, 2013, at 1:39 PM, Aubrey Portwood <aubreypwd at gmail.com> wrote:

> Is there any reason that my svn would say "At revision 26236" but my WordPress Admin would say "WordPress 3.8-alpha-26127-src" (https://cloudup.com/cjByV75TqDR)? 

Yes, I think the footer version is from wp-version.php, which is only updated for each alpha, beta, RC, release, etc.

From sabreuse at gmail.com  Sat Nov 16 18:49:49 2013
From: sabreuse at gmail.com (Amy Hendrix)
Date: Sat, 16 Nov 2013 13:49:49 -0500
Subject: [wp-hackers] Working with develop.svn.wordpress.org
In-Reply-To: <63D894EF-48D9-4451-B5A1-59892C8C3ECF@codesymphony.co>
References: <5287BBE2.8010303@gmail.com>
 <63D894EF-48D9-4451-B5A1-59892C8C3ECF@codesymphony.co>
Message-ID: <CAKnJ9+x4++9bp8cZRzbkFNmkW7PET3K1uCdKdsZBE18kAgQ2rQ@mail.gmail.com>

The footer is upgraded with nightly builds as well, but the general
point is exactly as J.D. says -- go with the version svn is reporting,
and don't worry if the version in the admin footer is a bit behind.

On Sat, Nov 16, 2013 at 1:46 PM, J.D. Grimes <jdg at codesymphony.co> wrote:
>
> On Nov 16, 2013, at 1:39 PM, Aubrey Portwood <aubreypwd at gmail.com> wrote:
>
>> Is there any reason that my svn would say "At revision 26236" but my WordPress Admin would say "WordPress 3.8-alpha-26127-src" (https://cloudup.com/cjByV75TqDR)?
>
> Yes, I think the footer version is from wp-version.php, which is only updated for each alpha, beta, RC, release, etc.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp at andrewnacin.com  Sat Nov 16 18:49:31 2013
From: wp at andrewnacin.com (Andrew Nacin)
Date: Sat, 16 Nov 2013 13:49:31 -0500
Subject: [wp-hackers] Working with develop.svn.wordpress.org
In-Reply-To: <5287BBE2.8010303@gmail.com>
References: <5287BBE2.8010303@gmail.com>
Message-ID: <CAP29PvjePxvvCOAnP1X+ZGFLtLop_rUiOXhAVqV+0c1806XqQA@mail.gmail.com>

"At revision 26236" is the revision you're running. $wp_version is manually
bumped in develop.svn on occasion [1]. It is based on an SVN revision ? but
isn't your SVN revision.

[1] http://core.trac.wordpress.org/browser/trunk/src/wp-includes/version.php


On Sat, Nov 16, 2013 at 1:39 PM, Aubrey Portwood <aubreypwd at gmail.com>wrote:

> Is there any reason that my svn would say "At revision 26236" but my
> WordPress Admin would say "WordPress 3.8-alpha-26127-src" (
> https://cloudup.com/cjByV75TqDR)? Because I've found a small CSS issue (
> https://cloudup.com/cb9Bbn1FQIm & https://cloudup.com/cHFrjDKThmT) but
> these numbers being different makes me hesitant to try anything. And
> <helen> on #wordpress-dev said it was fixed in26232 last night but I'm
> rev'd up to26236? I've never contributed to core, and just started working
> on develop.svn, but I'd like to start (feeling noobish).
>
> I also tried looking through things like the handbook, Make/Core, etc and
> have found nothing that shows I should be having this issue.
>
> Is there somewhere more appropriate for this question? Am I crazy?
>
> Brief explanation of my setup:
>
> MAMP
> /htdocs/develop.svn.wordpress.org <- svn co develop.svn.wordpress.org/
> trunk
> ln -s /htdocs/develop.svn.wordpress.org/src /htdocs/develop.wordpress.dev
> Virtual host for develop.wordpress.dev
> + Confident that my MAMP setup is good
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From sabreuse at gmail.com  Sat Nov 16 19:04:40 2013
From: sabreuse at gmail.com (Amy Hendrix)
Date: Sat, 16 Nov 2013 14:04:40 -0500
Subject: [wp-hackers] Working with develop.svn.wordpress.org
In-Reply-To: <CAP29PvjePxvvCOAnP1X+ZGFLtLop_rUiOXhAVqV+0c1806XqQA@mail.gmail.com>
References: <5287BBE2.8010303@gmail.com>
 <CAP29PvjePxvvCOAnP1X+ZGFLtLop_rUiOXhAVqV+0c1806XqQA@mail.gmail.com>
Message-ID: <CAKnJ9+xC1emNZG4_Z9tLYSmxebsh3gfQpq0HZDBqHr9_xsSuqw@mail.gmail.com>

Or rather, what Nacin said! (And thanks for the clarification)

On Sat, Nov 16, 2013 at 1:49 PM, Andrew Nacin <wp at andrewnacin.com> wrote:
> "At revision 26236" is the revision you're running. $wp_version is manually
> bumped in develop.svn on occasion [1]. It is based on an SVN revision ? but
> isn't your SVN revision.
>
> [1] http://core.trac.wordpress.org/browser/trunk/src/wp-includes/version.php
>
>
> On Sat, Nov 16, 2013 at 1:39 PM, Aubrey Portwood <aubreypwd at gmail.com>wrote:
>
>> Is there any reason that my svn would say "At revision 26236" but my
>> WordPress Admin would say "WordPress 3.8-alpha-26127-src" (
>> https://cloudup.com/cjByV75TqDR)? Because I've found a small CSS issue (
>> https://cloudup.com/cb9Bbn1FQIm & https://cloudup.com/cHFrjDKThmT) but
>> these numbers being different makes me hesitant to try anything. And
>> <helen> on #wordpress-dev said it was fixed in26232 last night but I'm
>> rev'd up to26236? I've never contributed to core, and just started working
>> on develop.svn, but I'd like to start (feeling noobish).
>>
>> I also tried looking through things like the handbook, Make/Core, etc and
>> have found nothing that shows I should be having this issue.
>>
>> Is there somewhere more appropriate for this question? Am I crazy?
>>
>> Brief explanation of my setup:
>>
>> MAMP
>> /htdocs/develop.svn.wordpress.org <- svn co develop.svn.wordpress.org/
>> trunk
>> ln -s /htdocs/develop.svn.wordpress.org/src /htdocs/develop.wordpress.dev
>> Virtual host for develop.wordpress.dev
>> + Confident that my MAMP setup is good
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From gabo.acosta624 at gmail.com  Sat Nov 16 20:29:39 2013
From: gabo.acosta624 at gmail.com (Gabriel Acosta)
Date: Sat, 16 Nov 2013 13:29:39 -0700
Subject: [wp-hackers] A tool to check whether the core files were
	tampered?
In-Reply-To: <CAEdQCeX6z+D_jArLX+p9rKw2XCwMmEmKVMsF9ZnPyuZx84dMzQ@mail.gmail.com>
References: <mailman.8074.1384532581.2509.wp-hackers@lists.automattic.com>
 <52864EF9.3000700@wordshell.net>
 <043D2CC8-A182-4A17-A329-0F2ABEA4243C@codesymphony.co>
 <528663A9.3090404@ipstenu.org>
 <CAEdQCeX6z+D_jArLX+p9rKw2XCwMmEmKVMsF9ZnPyuZx84dMzQ@mail.gmail.com>
Message-ID: <CA+69t5=Vo8CpGH3UOP-iSrQhMwoJY-fNfsJXwSftPkSok0Vdiw@mail.gmail.com>

Just make a git repository on your installation, the you run git status and
can see any changed files.


On Fri, Nov 15, 2013 at 9:22 PM, Roger Chen <developer at rogerhub.com> wrote:

> If you're concerned that your core files are corrupted or have been
> tampered with, you can always just do a find . -type f | xargs md5sum and
> compare (diff) it to a fresh copy from wordpress.org. On the other hand,
> the only parts of your installation that should differ from a clean install
> are your wp-config and wp-content. You should be able to replace all of the
> core files without an issue.
>
> Roger
>
>
> On Fri, Nov 15, 2013 at 10:10 AM, Mika A Epstein <ipstenu at ipstenu.org
> >wrote:
>
> > Given the nature of most 'tampering' is to add in obfuscated code, I just
> > search for that. Or if I even remotely suspect it, delete core and
> plugins,
> > reinstall. it's not like it hurts my data.
> >
> > It'd be nice if someone made a wp-cli-esque sort of scanner for this,
> > though, since in theory if that was baked in, they couldn't mess with the
> > scanner unless they had access to edit wp-cli (i.e. SU or root)
> >
> >
> > J.D. Grimes wrote:
> >
> >>
> >> On Nov 15, 2013, at 11:42 AM, David Anderson<david at wordshell.net>
> wrote:
> >>
> >>
> >>> Hi,
> >>>
> >>> Since I sell a solution in this area, I'm biased...
> >>>
> >>> ... but, as a long-time security pro, I'd say that a plugin which
> offers
> >>> to check that your website hasn't been tampered with fails at the
> >>> conceptual level. Useless. It's only good as long as you're sure that
> the
> >>> plugin itself is intact. Altering the plugin is trivially easy (e.g. 1
> line
> >>> to short-circuit the tamper check, and 'return true;'). It's like
> asking
> >>> your young son "you would tell me if you were lying, wouldn't you?".
> "Yeah
> >>> dad, sure". "Thanks - I was almost worried for a moment there."
> >>>
> >>> Why would someone who tampers with your website *not* tamper with the
> >>> security check? Basically, you're relying on the hacker being
> incompetent.
> >>> Wordfence (for example), has had over 1 million downloads. Why would
> >>> someone trying to break into WordPress sites have to be to not have
> >>> "short-circuit WordFence's tamper checks" in his toolkit?
> >>>
> >>> Unless you're happy assuming that hackers will continue ignoring
> >>> WordFence (etc.) so that their hacks can get cleaned up quicker, then
> the
> >>> only way to verify your files is off-site, i.e. externally. Anything
> (not
> >>> just a plugin) that you run within the same web-space could itself be
> >>> tampered with. A service which has pristine versions of your plugins,
> and
> >>> can compare them in a 'clean room' with what's installed.<Advert>I do
> this
> >>> with my own tool (from the command line: "wordshell all --everything
> >>> --checkmodifications"). It avoids this issue because it does not run
> any
> >>> code on the webserver for that operation</Advert>. I'm sure there must
> be
> >>> other functional solutions as well.
> >>>
> >>> Best wishes,
> >>> David
> >>>
> >>
> >>
> >> Agreed that its usefulness in that regard is limited. But it is more
> >> useful in this case, when checking if a site has been previously
> tampered
> >> with before the plugin was installed.
> >>
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From olivierbaudry.eba at hotmail.fr  Sat Nov 16 22:50:16 2013
From: olivierbaudry.eba at hotmail.fr (Olivier Baudry)
Date: Sat, 16 Nov 2013 23:50:16 +0100
Subject: [wp-hackers] wordpress fully html5 compatible
Message-ID: <BLU0-SMTP546D9BDDDB8091F15BD9E489FA0@phx.gbl>

Dear all

It will be great to have wordpress fully html5 compatible, actually with
files inside theme-compat folder in wp-includes folder seems to make
trouble with header file of theme. It will be better to have doctype
html5 with charset UT8.

From otto at ottodestruct.com  Sat Nov 16 22:53:17 2013
From: otto at ottodestruct.com (Otto)
Date: Sat, 16 Nov 2013 16:53:17 -0600
Subject: [wp-hackers] wordpress fully html5 compatible
In-Reply-To: <BLU0-SMTP546D9BDDDB8091F15BD9E489FA0@phx.gbl>
References: <BLU0-SMTP546D9BDDDB8091F15BD9E489FA0@phx.gbl>
Message-ID: <CAD-FghxJNrZ=eHgL9YtE4A=Gah47e6jcSLaWLiH7GZ4D-w3nCA@mail.gmail.com>

On Sat, Nov 16, 2013 at 4:50 PM, Olivier Baudry <
olivierbaudry.eba at hotmail.fr> wrote:

> It will be great to have wordpress fully html5 compatible, actually with
> files inside theme-compat folder in wp-includes folder seems to make
> trouble with header file of theme. It will be better to have doctype
> html5 with charset UT8.
>

The files in the theme-compat directory are there for backwards
compatibility with older themes only. Newer themes should include their own
header.php files and the like.

As they're meant for backwards compatibility, changing them to use modern
doctypes and HTML5 doesn't make a lot of sense. Only older themes, which
did not use those things, would still be using the theme-compat files.

-Otto

From aubreypwd at gmail.com  Sat Nov 16 23:25:06 2013
From: aubreypwd at gmail.com (Aubrey Portwood)
Date: Sat, 16 Nov 2013 16:25:06 -0700
Subject: [wp-hackers] Working with develop.svn.wordpress.org
In-Reply-To: <CAP29PvjePxvvCOAnP1X+ZGFLtLop_rUiOXhAVqV+0c1806XqQA@mail.gmail.com>
References: <5287BBE2.8010303@gmail.com>
 <CAP29PvjePxvvCOAnP1X+ZGFLtLop_rUiOXhAVqV+0c1806XqQA@mail.gmail.com>
Message-ID: <5287FED2.5030508@gmail.com>

So, being as in-experienced as I am with core, I filed a ticket for this 
http://core.trac.wordpress.org/ticket/26076
> Andrew Nacin <mailto:wp at andrewnacin.com>
> November 16, 2013 at 11:49 AM
> "At revision 26236" is the revision you're running. $wp_version is 
> manually
> bumped in develop.svn on occasion [1]. It is based on an SVN revision 
> --- but
> isn't your SVN revision.
>
> [1] 
> http://core.trac.wordpress.org/browser/trunk/src/wp-includes/version.php
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> Aubrey Portwood <mailto:aubreypwd at gmail.com>
> November 16, 2013 at 11:39 AM
> Is there any reason that my svn would say "At revision 26236" but my 
> WordPress Admin would say "WordPress 3.8-alpha-26127-src" 
> (https://cloudup.com/cjByV75TqDR)? Because I've found a small CSS 
> issue (https://cloudup.com/cb9Bbn1FQIm & 
> https://cloudup.com/cHFrjDKThmT) but these numbers being different 
> makes me hesitant to try anything. And <helen> on #wordpress-dev said 
> it was fixed in26232 last night but I'm rev'd up to26236? I've never 
> contributed to core, and just started working on develop.svn, but I'd 
> like to start (feeling noobish).
>
> I also tried looking through things like the handbook, Make/Core, etc 
> and have found nothing that shows I should be having this issue.
>
> Is there somewhere more appropriate for this question? Am I crazy?
>
> Brief explanation of my setup:
>
> MAMP
> /htdocs/develop.svn.wordpress.org <- svn co 
> develop.svn.wordpress.org/trunk
> ln -s /htdocs/develop.svn.wordpress.org/src /htdocs/develop.wordpress.dev
> Virtual host for develop.wordpress.dev
> + Confident that my MAMP setup is good

From hamlet11 at hotmail.es  Sun Nov 17 00:11:09 2013
From: hamlet11 at hotmail.es (hamlet)
Date: Sun, 17 Nov 2013 01:11:09 +0100
Subject: [wp-hackers] Two loops
Message-ID: <BLU0-SMTP247BB31041F601F212B5145A1E50@phx.gbl>

Hello, I am the following issue:

I am using a custom post type (it has support for comments)
single-myPostType.php

         if ( have_posts() ) {
             while ( have_posts() ) {
                 the_post();

                 get_template_part('content', 'single-myCustomPostType');

                 comments_template('', true);
             }
         }
content-single-myCustomPostType.php

(...)
       $loop = wp_get_the_related(get_the_ID());
       if ($loop->have_posts())
         while ($loop->have_posts()) {
           $loop->the_post();
           get_template_part('content', 'related');
         }
(...)

It is getting comment forms if some related has this options enabled. 
Any idea?

From aero.maxx.d at gmail.com  Sun Nov 17 17:44:16 2013
From: aero.maxx.d at gmail.com (Aero Maxx)
Date: Sun, 17 Nov 2013 17:44:16 +0000
Subject: [wp-hackers] Two loops
In-Reply-To: <BLU0-SMTP247BB31041F601F212B5145A1E50@phx.gbl>
References: <BLU0-SMTP247BB31041F601F212B5145A1E50@phx.gbl>
Message-ID: <52890070.3080601@gmail.com>

On 17/11/2013 00:11, hamlet wrote:
> Hello, I am the following issue:
>
> I am using a custom post type (it has support for comments)
> single-myPostType.php
>
>         if ( have_posts() ) {
>             while ( have_posts() ) {
>                 the_post();
>
>                 get_template_part('content', 'single-myCustomPostType');
>
>                 comments_template('', true);
>             }
>         }
> content-single-myCustomPostType.php
>
> (...)
>       $loop = wp_get_the_related(get_the_ID());
>       if ($loop->have_posts())
>         while ($loop->have_posts()) {
>           $loop->the_post();
>           get_template_part('content', 'related');
>         }
> (...)
>
> It is getting comment forms if some related has this options enabled. 
> Any idea?
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

I'm happy to try and help you, but I read what you wrote 2-3 times and I 
didn't understand what it was you was trying to explain, are you saying 
you have a custom post type, and its showing the post but not the 
comment form, or that its only showing the comment form when it has a 
post that is related to the post being viewed ?

From josh at josheaton.org  Sun Nov 17 20:41:41 2013
From: josh at josheaton.org (Josh Eaton)
Date: Sun, 17 Nov 2013 15:41:41 -0500
Subject: [wp-hackers] Two loops
In-Reply-To: <52890070.3080601@gmail.com>
References: <BLU0-SMTP247BB31041F601F212B5145A1E50@phx.gbl>
 <52890070.3080601@gmail.com>
Message-ID: <CAAV3MXTgPvfXjPT303Be=ua2L7VA+0yxiw04aJW3v+HGfZtX3A@mail.gmail.com>

This question is probably better suited for the support forums or WordPress
Answers http://wordpress.stackexchange.com/

Regardless, you're likely missing a wp_reset_postdata() after the related
loop to reset the $post global.


On Sun, Nov 17, 2013 at 12:44 PM, Aero Maxx <aero.maxx.d at gmail.com> wrote:

> On 17/11/2013 00:11, hamlet wrote:
>
>> Hello, I am the following issue:
>>
>> I am using a custom post type (it has support for comments)
>> single-myPostType.php
>>
>>         if ( have_posts() ) {
>>             while ( have_posts() ) {
>>                 the_post();
>>
>>                 get_template_part('content', 'single-myCustomPostType');
>>
>>                 comments_template('', true);
>>             }
>>         }
>> content-single-myCustomPostType.php
>>
>> (...)
>>       $loop = wp_get_the_related(get_the_ID());
>>       if ($loop->have_posts())
>>         while ($loop->have_posts()) {
>>           $loop->the_post();
>>           get_template_part('content', 'related');
>>         }
>> (...)
>>
>> It is getting comment forms if some related has this options enabled. Any
>> idea?
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> I'm happy to try and help you, but I read what you wrote 2-3 times and I
> didn't understand what it was you was trying to explain, are you saying you
> have a custom post type, and its showing the post but not the comment form,
> or that its only showing the comment form when it has a post that is
> related to the post being viewed ?
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From danielx386 at gmail.com  Sun Nov 17 22:34:54 2013
From: danielx386 at gmail.com (Daniel)
Date: Mon, 18 Nov 2013 09:34:54 +1100
Subject: [wp-hackers] Check to see if there a wordpress user account and
 create one if not outside of wordpress
Message-ID: <CAJ5Hi2g_FvqNaN=z6DzLyffC9xEXg88NaLyENBFiJhSKc4sE8w@mail.gmail.com>

Hi guys,

Just wondering, does anyone know how I can go about checking to see if
there a wordpress account and create one if there isn't?

Script that I got: https://gist.github.com/Danielx64/7519092

There a marker in the file that has "// Somewhere here I want to put a
check to see if there a wp account" What I want to happen there is
that a check get done to see if there is a wordpress account and if
there not, create one.

Does anyone know if it can be done?

PS, I don't need to worry about logging into wordpress as that will
get taken care of by a different script. Also anyone who can help me
out will also get credit in the source code and readme :)

Regards,
Daniel

From alexrayan69 at gmail.com  Sun Nov 17 23:55:40 2013
From: alexrayan69 at gmail.com (Alex Rayan)
Date: Sun, 17 Nov 2013 18:55:40 -0500
Subject: [wp-hackers] Check to see if there a wordpress user account and
 create one if not outside of wordpress
In-Reply-To: <CAJ5Hi2g_FvqNaN=z6DzLyffC9xEXg88NaLyENBFiJhSKc4sE8w@mail.gmail.com>
References: <CAJ5Hi2g_FvqNaN=z6DzLyffC9xEXg88NaLyENBFiJhSKc4sE8w@mail.gmail.com>
Message-ID: <CA+fCkBt8pYCU1+Sf++kbTEEkH4XmA8rbHW3XJS8eOkuuP+MaZg@mail.gmail.com>

Hi Daniel,

I'm sorry I don't have time to go through your whole script, but to check
whether the user exists you can use:
if( !email_exists( $email )) {
}
and to pass email that you would like to check against.
Then if the email is not found in the database, you can create a new user
account as follows:

$args = array(
'user_pass'=>$plain_text_pass,
'user_login'=>$username,
'user_nicename'=>$url_friendly_name,
'user_email'=>$user_email,
'display_name'=>$display_name
);
$user_id = wp_insert_user($args);

You can check a full list of arguments that you can pass here:
http://codex.wordpress.org/Function_Reference/wp_insert_user

Also, it's probably a good idea to check for username_exists before passing
a username in case that one is already taken. Then, you could, for example,
append a number at the end of the username.

On success the function above returns user_id.

Hope it helps.

Best regards,
Alex


On Sun, Nov 17, 2013 at 5:34 PM, Daniel <danielx386 at gmail.com> wrote:

> Hi guys,
>
> Just wondering, does anyone know how I can go about checking to see if
> there a wordpress account and create one if there isn't?
>
> Script that I got: https://gist.github.com/Danielx64/7519092
>
> There a marker in the file that has "// Somewhere here I want to put a
> check to see if there a wp account" What I want to happen there is
> that a check get done to see if there is a wordpress account and if
> there not, create one.
>
> Does anyone know if it can be done?
>
> PS, I don't need to worry about logging into wordpress as that will
> get taken care of by a different script. Also anyone who can help me
> out will also get credit in the source code and readme :)
>
> Regards,
> Daniel
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From danielx386 at gmail.com  Mon Nov 18 00:08:38 2013
From: danielx386 at gmail.com (Daniel)
Date: Mon, 18 Nov 2013 11:08:38 +1100
Subject: [wp-hackers] Check to see if there a wordpress user account and
 create one if not outside of wordpress
In-Reply-To: <CA+fCkBt8pYCU1+Sf++kbTEEkH4XmA8rbHW3XJS8eOkuuP+MaZg@mail.gmail.com>
References: <CAJ5Hi2g_FvqNaN=z6DzLyffC9xEXg88NaLyENBFiJhSKc4sE8w@mail.gmail.com>
 <CA+fCkBt8pYCU1+Sf++kbTEEkH4XmA8rbHW3XJS8eOkuuP+MaZg@mail.gmail.com>
Message-ID: <CAJ5Hi2j5K5s7+rcaDr4aNaagTCq7T_QxOCjrq2FV6kWnAV3uzA@mail.gmail.com>

Hi Alex,

Thank-you for getting back to me,  now I take it that I should be able
to use the script that you provided (I know that it need some editing)
after I done the usual  "include '/../../../wp-load.php';"?

Also what should I do if the password is not in plain text? (I'm not
entirely sure if the "$password" is still alive at that point of the
script, it's going right after someone logged into phpbb, I will need
to check on that)

Having said that I will give it a go and see how I go :)

Thank-you again Alex :)

Regards,
Daniel






On Mon, Nov 18, 2013 at 10:55 AM, Alex Rayan <alexrayan69 at gmail.com> wrote:
> Hi Daniel,
>
> I'm sorry I don't have time to go through your whole script, but to check
> whether the user exists you can use:
> if( !email_exists( $email )) {
> }
> and to pass email that you would like to check against.
> Then if the email is not found in the database, you can create a new user
> account as follows:
>
> $args = array(
> 'user_pass'=>$plain_text_pass,
> 'user_login'=>$username,
> 'user_nicename'=>$url_friendly_name,
> 'user_email'=>$user_email,
> 'display_name'=>$display_name
> );
> $user_id = wp_insert_user($args);
>
> You can check a full list of arguments that you can pass here:
> http://codex.wordpress.org/Function_Reference/wp_insert_user
>
> Also, it's probably a good idea to check for username_exists before passing
> a username in case that one is already taken. Then, you could, for example,
> append a number at the end of the username.
>
> On success the function above returns user_id.
>
> Hope it helps.
>
> Best regards,
> Alex
>
>
> On Sun, Nov 17, 2013 at 5:34 PM, Daniel <danielx386 at gmail.com> wrote:
>
>> Hi guys,
>>
>> Just wondering, does anyone know how I can go about checking to see if
>> there a wordpress account and create one if there isn't?
>>
>> Script that I got: https://gist.github.com/Danielx64/7519092
>>
>> There a marker in the file that has "// Somewhere here I want to put a
>> check to see if there a wp account" What I want to happen there is
>> that a check get done to see if there is a wordpress account and if
>> there not, create one.
>>
>> Does anyone know if it can be done?
>>
>> PS, I don't need to worry about logging into wordpress as that will
>> get taken care of by a different script. Also anyone who can help me
>> out will also get credit in the source code and readme :)
>>
>> Regards,
>> Daniel
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From greglancaster71 at gmail.com  Mon Nov 18 06:21:36 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Sun, 17 Nov 2013 22:21:36 -0800 (PST)
Subject: [wp-hackers] Ajax Button Submission Failing - 50% of the time?
 Comment Voting Plugin Help
Message-ID: <1384755696762-42870.post@n5.nabble.com>

I wrote this code today, and I cant figure why half the time the json
response is a failure.  Its a comment voting plugin, and its my second
plugin I have ever coded.  Could you guys please take a look and if
something stands out as an obvious issue share that with me?  

The idea was to have a reddit.com style voting system.  You can click upvote
or downvote - and if you have already upvoted and click upvote it removed
your vote alrogether.  Same goes for downvote.  The codes record in the
database about 40% of the time from my testing.  The comments I am testing
on ARE threaded, and I thought maybe that played a role but looking at the
comment IDs they all match up so I am unsure what the cause could be.

Here is the entirety of my code:

*CREATE DB CODE: *
function ams_comment_voting_database() 
	{
   	global $wpdb;
  	global $ams_comment_voting;
	$ams_comment_voting = $wpdb->prefix . 'ams_comment_voting';
	
if($wpdb->get_var("show tables like '$ams_comment_voting'") !=
$ams_comment_voting) 
	{

$sql = "CREATE TABLE ". $ams_comment_voting ." (
	id mediumint(9) NOT NULL AUTO_INCREMENT,
	voter_id int(6) NOT NULL,
	comment_id int(6) NOT NULL,
	comment_pid int(6) NOT NULL,
	author_id int(6) NOT NULL,
	vote_value tinyint(1) NOT NULL,
	UNIQUE KEY id (id)
	PRIMARY KEY (voter_id, comment_id) 
);";

require_once(ABSPATH . 'wp-admin/includes/upgrade.php');
	$wpdb->query($sql);
	}
}

register_activation_hook(__FILE__,'ams_comment_voting_database');



* VOTING FUNCTIONS & SCRIPTS *

<?php //comment voting system
add_action( 'wp_enqueue_scripts', 'amc_comment_vote_ajax' );

function amc_comment_vote_ajax() {
   wp_register_script( "amc_comment_vote",
WP_PLUGIN_URL.'/vote_comm/js/amc_comment_vote.js', array('jquery') );
   wp_localize_script( 'amc_comment_vote', 'anotherAjax', array( 'ajaxurl'
=> admin_url( 'admin-ajax.php' )));        

   wp_enqueue_script( 'jquery' );
   wp_enqueue_script( 'amc_comment_vote' );

}


function ams_comment_vote_count($content) {
	global $wpdb, $comment;
	  
	$comment_ID = get_comment_ID();
	$comment = get_comment($comment_ID);
		$cuid = $comment->comment_ID;
	$vote_up = '<button id="upvote" type="button"
data-comment="'.$comment_ID.'"></button>';
	$vote_down = '<button id="downvote" type="button"
data-comment="'.$comment_ID.'" ></button>';

	$count_votes = $wpdb->get_col( $wpdb->prepare ( "SELECT SUM(vote_value)
FROM ".$wpdb->prefix."ams_comment_voting WHERE comment_id = %d",
$comment_ID));
	foreach ($count_votes as $id => $cID) {
		
	if (!$cID) {
	return '<div id="vote_buttons"><div class="votes">0</div> Votes' . $vote_up
. $vote_down . '<br></div>' . $content;
	}

	return '<div id="vote_buttons"><div class="votes">' . $cID . '</div> Votes'
. $vote_up . $vote_down . '<br></div>' . $content;
	}
}
add_action('comment_text', 'ams_comment_vote_count');


add_action('wp_ajax_amc_comment_vote', 'amc_comment_vote');
add_action('wp_ajax_nopriv_amc_comment_vote', 'amc_comment_vote');
function amc_comment_vote() {
	global $wpdb, $comment, $post, $current_user;
      get_currentuserinfo();
	  
	
	$cID = $_POST['commentid'];
	$voter_id = $current_user->ID;
		$grabFromCID = get_comment($cID);

	$author_id = $grabFromCID->user_id;
	$comment_post_id = $grabFromCID->comment_post_ID;
	$vote_replace = '';

	
	$vote_direction = $_POST['direction'];
		$voteValueArray = array(    'upvote' => 1,        
									'downvote' => -1,
									 );
		if( array_key_exists( $vote_direction, $voteValueArray ) ){
		$vote_value = $voteValueArray[ $vote_direction ];
		} else { $vote_value = 0; }
		

	
$alreadyVotedUp = $wpdb->get_row( $wpdb->prepare ( "SELECT * FROM
".$wpdb->prefix."ams_comment_voting WHERE comment_id = %d AND voter_id =
%d", $cID, $voter_id));

if (isset($alreadyVotedUp)) {
	
	$current_value = $alreadyVotedUp->vote_value;
	$replaceVoteValue ='';
	if ($current_value  === 1 && $vote_value === 1) {
		$replaceVoteValue = 0;
	} elseif ($current_value  === 1 && $vote_value === -1) {
		$replaceVoteValue = -1;
	} elseif ($current_value  === -1 && $vote_value === 1) {
		$replaceVoteValue = 1;
	} elseif ($current_value  === -1 && $vote_value === -1) {
		$replaceVoteValue = 0;
	} elseif ($current_value  === 0 && $vote_value === 1) {
		$replaceVoteValue = 1;
	} elseif ($current_value  === 0 && $vote_value === -1) {
		$replaceVoteValue = -1;
	}

} else {
	$replaceVoteValue = NULL;
}



$tableName = $wpdb->prefix . 'ams_comment_voting';
		
$sql = $wpdb->prepare("INSERT INTO $tableName (`voter_id`, `comment_id`,
`comment_pid`, `author_id`, `vote_value`) VALUES (%d, %d, %d, %d, %d) ON
DUPLICATE KEY UPDATE vote_value = %d", $voter_id, $cID, $comment_post_id,
$author_id, $vote_value, $replaceVoteValue);
	
		
		
$wpdb->query($sql);

		
		$response = array( 'success' => true ); 
		wp_send_json_success($response);
		
		die();

}


*THE JQUERY / AJAX SUBMISSION *

jQuery( document ).ready( function( $ ) { 
	$( 'button#upvote, button#downvote').click( function() { 			
	
	 
	 $(this).css('color', 'red');
	 $upVoteButton = $( 'button#upvote' );
	 
	 $clickedButton = $(event.target);
	 var commentid = $(event.target).attr('data-comment');
	 var direction = $(event.target).attr('id')
	
var data = { 
	'action': 'amc_comment_vote', 
	'commentid': commentid,
	'direction': direction
} 

$.ajax({ 
	type: 'post',
	url: anotherAjax.ajaxurl, 
	data: data,
	success: function ( response ) { 
	if ( ! response.success ) { 

	alert( 'FAIL!' ); 
    }
            else {
	alert( 'Success!' ); 
	$clickedButton.parent().siblings('.votes').html(function(i, val) { return
+val+1 });
	} 
	}
}); 
  }); 
  }); 



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Ajax-Button-Submission-Failing-50-of-the-time-Comment-Voting-Plugin-Help-tp42870.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From jbutkus at time.ly  Mon Nov 18 08:04:11 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Mon, 18 Nov 2013 10:04:11 +0200
Subject: [wp-hackers] Incremental rows retrieval
In-Reply-To: <etPan.5287f2f5.6b8b4567.10f@Darla.local>
References: <52865428.70504@time.ly> <etPan.5287f2f5.6b8b4567.10f@Darla.local>
Message-ID: <5289C9FB.6080400@time.ly>

Hello.

It is just an extension over the mentioned `WHERE primary_key > 
$last_value ORDER BY primary_key ASC`. In that case LIMIT will likely be 
used, just with one index, for example `LIMIT 100`, instead of `LIMIT 
$last_count, 100`. The difference is that LIMIT on it's own is not as 
efficient as approach with LIMIT solely (see [1] and [2] bellow for some 
authoritative details). And that doesn't void inconsistency probability, 
as I mentioned.

Thanks for taking time.


-- 
Regards,
Justas Butkus

[1]: 
http://www.mysqlperformanceblog.com/2006/09/01/order-by-limit-performance-optimization/
[2]: 
http://www.percona.com/pdf-canonical-header?path=files/presentations/ppc2009/PPC2009_mysql_pagination.pdf

2013.11.17 00:34, Tyrel Kelsey ra??:
> Is there any reason you can?t use MySQL?s limit described here http://dev.mysql.com/doc/refman/5.0/en/select.html ?


From david at wordshell.net  Mon Nov 18 12:02:30 2013
From: david at wordshell.net (David Anderson)
Date: Mon, 18 Nov 2013 12:02:30 +0000
Subject: [wp-hackers] HipHop?
Message-ID: <528A01D6.2090700@wordshell.net>

Hi,

Does anyone have experience, positive or negative, running WordPress on 
top of the HipHop virtual machine ( 
https://en.wikipedia.org/wiki/HipHop_for_PHP) ?

How well does it go, if you have a fairly arbitrary selection of plugins?

Best wishes,
David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From lists at rotorised.com  Mon Nov 18 12:11:38 2013
From: lists at rotorised.com (Ryan McCue)
Date: Mon, 18 Nov 2013 22:11:38 +1000
Subject: [wp-hackers] HipHop?
In-Reply-To: <528A01D6.2090700@wordshell.net>
References: <528A01D6.2090700@wordshell.net>
Message-ID: <528A03FA.30000@rotorised.com>

David Anderson wrote:
> Does anyone have experience, positive or negative, running WordPress on
> top of the HipHop virtual machine (
> https://en.wikipedia.org/wiki/HipHop_for_PHP) ?
> 
> How well does it go, if you have a fairly arbitrary selection of plugins?

Also: If anyone has had any problems with it, please let me know and
I'll pass your feedback on to the HHVM developers. They're pretty
interested in supporting WP, and I've spoken with them about a few
issues in it.

The main thing you'll see is plugins using the ARRAY_A/OBJECT constants
from wpdb in a case-insensitive manner; HHVM's constants are
case-sensitive. Well-made plugins should always be using the uppercase
variants of these.

-- 
Ryan McCue
<http://ryanmccue.info/>

From martin at lazarov.bg  Mon Nov 18 12:22:40 2013
From: martin at lazarov.bg (Martin Lazarov)
Date: Mon, 18 Nov 2013 14:22:40 +0200
Subject: [wp-hackers] HipHop?
In-Reply-To: <528A03FA.30000@rotorised.com>
References: <528A01D6.2090700@wordshell.net>
	<528A03FA.30000@rotorised.com>
Message-ID: <CAFJ6JWHtF27eLE0pLRM6UuSLN_2OQtnpcou7JEMbB687epn=rg@mail.gmail.com>

You can read interesting facts here (the official page):

http://www.hhvm.com/blog/875/wow-hhvm-is-fast-too-bad-it-doesnt-run-my-code

76% of wordpress code will work with hiphop.

Martin

On Mon, Nov 18, 2013 at 2:11 PM, Ryan McCue <lists at rotorised.com> wrote:
> David Anderson wrote:
>> Does anyone have experience, positive or negative, running WordPress on
>> top of the HipHop virtual machine (
>> https://en.wikipedia.org/wiki/HipHop_for_PHP) ?
>>
>> How well does it go, if you have a fairly arbitrary selection of plugins?
>
> Also: If anyone has had any problems with it, please let me know and
> I'll pass your feedback on to the HHVM developers. They're pretty
> interested in supporting WP, and I've spoken with them about a few
> issues in it.
>
> The main thing you'll see is plugins using the ARRAY_A/OBJECT constants
> from wpdb in a case-insensitive manner; HHVM's constants are
> case-sensitive. Well-made plugins should always be using the uppercase
> variants of these.
>
> --
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From lists at rotorised.com  Mon Nov 18 12:43:17 2013
From: lists at rotorised.com (Ryan McCue)
Date: Mon, 18 Nov 2013 22:43:17 +1000
Subject: [wp-hackers] HipHop?
In-Reply-To: <CAFJ6JWHtF27eLE0pLRM6UuSLN_2OQtnpcou7JEMbB687epn=rg@mail.gmail.com>
References: <528A01D6.2090700@wordshell.net>	<528A03FA.30000@rotorised.com>
 <CAFJ6JWHtF27eLE0pLRM6UuSLN_2OQtnpcou7JEMbB687epn=rg@mail.gmail.com>
Message-ID: <528A0B65.8020207@rotorised.com>

Martin Lazarov wrote:
> You can read interesting facts here (the official page):
> 
> http://www.hhvm.com/blog/875/wow-hhvm-is-fast-too-bad-it-doesnt-run-my-code
> 
> 76% of wordpress code will work with hiphop.

The issue that was causing these failures should be fixed in the latest
versions of HHVM, from what I've been told. (I really wish I could
remember exactly what the error was, but the log appears to have
disappeared.)

-- 
Ryan McCue
<http://ryanmccue.info/>

From martin at lazarov.bg  Mon Nov 18 12:52:25 2013
From: martin at lazarov.bg (Martin Lazarov)
Date: Mon, 18 Nov 2013 14:52:25 +0200
Subject: [wp-hackers] HipHop?
In-Reply-To: <528A0B65.8020207@rotorised.com>
References: <528A01D6.2090700@wordshell.net> <528A03FA.30000@rotorised.com>
 <CAFJ6JWHtF27eLE0pLRM6UuSLN_2OQtnpcou7JEMbB687epn=rg@mail.gmail.com>
 <528A0B65.8020207@rotorised.com>
Message-ID: <CAFJ6JWGYV1y=qKL64_gAhA5Q3E1xxSuiABTyEWri+rg9p2OXRg@mail.gmail.com>

I hope so. Until these fixes are available we can't use
wordpress+hiphop without hacks.

On Mon, Nov 18, 2013 at 2:43 PM, Ryan McCue <lists at rotorised.com> wrote:
> Martin Lazarov wrote:
>> You can read interesting facts here (the official page):
>>
>> http://www.hhvm.com/blog/875/wow-hhvm-is-fast-too-bad-it-doesnt-run-my-code
>>
>> 76% of wordpress code will work with hiphop.
>
> The issue that was causing these failures should be fixed in the latest
> versions of HHVM, from what I've been told. (I really wish I could
> remember exactly what the error was, but the log appears to have
> disappeared.)
>
> --
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From erick at ethitter.com  Mon Nov 18 13:28:45 2013
From: erick at ethitter.com (Erick Hitter)
Date: Mon, 18 Nov 2013 13:28:45 +0000
Subject: [wp-hackers] HipHop?
In-Reply-To: <CAFJ6JWGYV1y=qKL64_gAhA5Q3E1xxSuiABTyEWri+rg9p2OXRg@mail.gmail.com>
References: <528A01D6.2090700@wordshell.net> <528A03FA.30000@rotorised.com>
 <CAFJ6JWHtF27eLE0pLRM6UuSLN_2OQtnpcou7JEMbB687epn=rg@mail.gmail.com>
 <528A0B65.8020207@rotorised.com>
 <CAFJ6JWGYV1y=qKL64_gAhA5Q3E1xxSuiABTyEWri+rg9p2OXRg@mail.gmail.com>
Message-ID: <CADnbRqEcuhRXLPZBD6oWf4oGj8RYcYeiCe7v742ngwYTuH0uBg@mail.gmail.com>

One specific failure is that HHVM doesn't support case-insensitive
constants. At phptek 2013, Sarah
Golemon<http://tek13.phparch.com/speakers/#golemon>mentioned this as a
specific modification they'd made to Core to run WP on
HHVM (the blog at http://www.hhvm.com/blog/ is WP + HHVM).

The $wpdb class makes use of one (
http://core.trac.wordpress.org/browser/trunk/src/wp-includes/wp-db.php?rev=25284#L20).
There may be other cases, but that's the only one I can recall.


Erick


On Mon, Nov 18, 2013 at 12:52 PM, Martin Lazarov <martin at lazarov.bg> wrote:

> I hope so. Until these fixes are available we can't use
> wordpress+hiphop without hacks.
>
> On Mon, Nov 18, 2013 at 2:43 PM, Ryan McCue <lists at rotorised.com> wrote:
> > Martin Lazarov wrote:
> >> You can read interesting facts here (the official page):
> >>
> >>
> http://www.hhvm.com/blog/875/wow-hhvm-is-fast-too-bad-it-doesnt-run-my-code
> >>
> >> 76% of wordpress code will work with hiphop.
> >
> > The issue that was causing these failures should be fixed in the latest
> > versions of HHVM, from what I've been told. (I really wish I could
> > remember exactly what the error was, but the log appears to have
> > disappeared.)
> >
> > --
> > Ryan McCue
> > <http://ryanmccue.info/>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From alexrayan69 at gmail.com  Mon Nov 18 14:52:54 2013
From: alexrayan69 at gmail.com (Alex Rayan)
Date: Mon, 18 Nov 2013 09:52:54 -0500
Subject: [wp-hackers] Check to see if there a wordpress user account and
 create one if not outside of wordpress
In-Reply-To: <CAJ5Hi2j5K5s7+rcaDr4aNaagTCq7T_QxOCjrq2FV6kWnAV3uzA@mail.gmail.com>
References: <CAJ5Hi2g_FvqNaN=z6DzLyffC9xEXg88NaLyENBFiJhSKc4sE8w@mail.gmail.com>
 <CA+fCkBt8pYCU1+Sf++kbTEEkH4XmA8rbHW3XJS8eOkuuP+MaZg@mail.gmail.com>
 <CAJ5Hi2j5K5s7+rcaDr4aNaagTCq7T_QxOCjrq2FV6kWnAV3uzA@mail.gmail.com>
Message-ID: <CA+fCkBu7=V4b47jT-QEwAfbezVush8XttL=mRDQe3ECtLXEuew@mail.gmail.com>

Hi Danial,

Yes, in order to user wordpress core functions you would need to include
wp-load.php or call your script from within a custom wordpress template
page, for example.
If the password is not a plain text, you could generate a random password
and ask a user to update it after. wp_insert_user only accepts a plain text
password since it applies required hashing on it after.

Hope it worked for you. : )

Best regards,
Alex


On Sun, Nov 17, 2013 at 7:08 PM, Daniel <danielx386 at gmail.com> wrote:

> Hi Alex,
>
> Thank-you for getting back to me,  now I take it that I should be able
> to use the script that you provided (I know that it need some editing)
> after I done the usual  "include '/../../../wp-load.php';"?
>
> Also what should I do if the password is not in plain text? (I'm not
> entirely sure if the "$password" is still alive at that point of the
> script, it's going right after someone logged into phpbb, I will need
> to check on that)
>
> Having said that I will give it a go and see how I go :)
>
> Thank-you again Alex :)
>
> Regards,
> Daniel
>
>
>
>
>
>
> On Mon, Nov 18, 2013 at 10:55 AM, Alex Rayan <alexrayan69 at gmail.com>
> wrote:
> > Hi Daniel,
> >
> > I'm sorry I don't have time to go through your whole script, but to check
> > whether the user exists you can use:
> > if( !email_exists( $email )) {
> > }
> > and to pass email that you would like to check against.
> > Then if the email is not found in the database, you can create a new user
> > account as follows:
> >
> > $args = array(
> > 'user_pass'=>$plain_text_pass,
> > 'user_login'=>$username,
> > 'user_nicename'=>$url_friendly_name,
> > 'user_email'=>$user_email,
> > 'display_name'=>$display_name
> > );
> > $user_id = wp_insert_user($args);
> >
> > You can check a full list of arguments that you can pass here:
> > http://codex.wordpress.org/Function_Reference/wp_insert_user
> >
> > Also, it's probably a good idea to check for username_exists before
> passing
> > a username in case that one is already taken. Then, you could, for
> example,
> > append a number at the end of the username.
> >
> > On success the function above returns user_id.
> >
> > Hope it helps.
> >
> > Best regards,
> > Alex
> >
> >
> > On Sun, Nov 17, 2013 at 5:34 PM, Daniel <danielx386 at gmail.com> wrote:
> >
> >> Hi guys,
> >>
> >> Just wondering, does anyone know how I can go about checking to see if
> >> there a wordpress account and create one if there isn't?
> >>
> >> Script that I got: https://gist.github.com/Danielx64/7519092
> >>
> >> There a marker in the file that has "// Somewhere here I want to put a
> >> check to see if there a wp account" What I want to happen there is
> >> that a check get done to see if there is a wordpress account and if
> >> there not, create one.
> >>
> >> Does anyone know if it can be done?
> >>
> >> PS, I don't need to worry about logging into wordpress as that will
> >> get taken care of by a different script. Also anyone who can help me
> >> out will also get credit in the source code and readme :)
> >>
> >> Regards,
> >> Daniel
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From olivierbaudry.eba at hotmail.fr  Mon Nov 18 15:17:31 2013
From: olivierbaudry.eba at hotmail.fr (Olivier Baudry)
Date: Mon, 18 Nov 2013 16:17:31 +0100
Subject: [wp-hackers] Wordpress 3.7.1 and html5 W3C validation
Message-ID: <BLU0-SMTP443613558BC1ED1CA64E32989E40@phx.gbl>

Dear all

It is not possible to have a valid wordpress website with wordpress
html5, indeed, there is a conflict between the first line of code in the
header php theme_compat included in the folder (wp-includes) and themes
that can be developed that it would be well to provide these w3C
compatible files or delete the whole record, and finally assurrer
compatibility and recognition and validation by the W3C in effect

in header. php included in theme_compat folder you have  actually :

<code>
<?php
/**
 * @package WordPress
 * @subpackage Theme_Compat
 * @deprecated 3.0
 *
 * This file is here for Backwards compatibility with old themes and
will be removed in a future version
 *
 */
_deprecated_file( sprintf( __( 'Theme without %1$s' ),
basename(__FILE__) ), '3.0', null, sprintf( __('Please include a %1$s
template in your theme.'), basename(__FILE__) ) );
?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" <?php language_attributes(); ?>>

<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="<?php bloginfo('html_type');
?>; charset=<?php bloginfo('charset'); ?>" />

<title><?php wp_title('&laquo;', true, 'right'); ?> <?php
bloginfo('name'); ?></title>

<link rel="stylesheet" href="<?php bloginfo('stylesheet_url'); ?>"
type="text/css" media="screen" />
<link rel="pingback" href="<?php bloginfo('pingback_url'); ?>" />


</code>


You will notice that the problem of a charset to be utf-8 more languages
attributes that conflict. then have a head tag inside when there are
opening and closing head tags in most wordpress themes does not help.
Hence my question is when that Wordpress has matured to be fully valid
by the W3C html5 css3?
You notice that a code is valid for html5 should be formed so ( see
below right version in green)

<code> ?php
/**
 * @package WordPress
 * @subpackage Theme_Compat fully html5
 * @deprecated 3.0
 *
 * This file is here for Backwards compatibility with old themes and
will be removed in a future version
 *
 */
_deprecated_file( sprintf( __( 'Theme without %1$s' ),
basename(__FILE__) ), '3.0', null, sprintf( __('Please include a %1$s
template in your theme.'), basename(__FILE__) ) );
?>
<!DOCTYPE html>

|
<html>
    <head>
        <meta charset="utf-8" />
  |



<title><?php wp_title('&laquo;', true, 'right'); ?> <?php
bloginfo('name'); ?></title>

<link rel="stylesheet" href="<?php bloginfo('stylesheet_url'); ?>"
type="text/css" media="screen" />
<link rel="pingback" href="<?php bloginfo('pingback_url'); ?>" />


</code>

To conclude, it would be good wordpress leave the choice of many
developers code their header.php file to BE fully W3C valid, the theme
compat doosier poses more problems than it solves. and free the
developer to use xhtml, html5 or other.



From info at toscho.de  Mon Nov 18 21:19:03 2013
From: info at toscho.de (Thomas Scholz)
Date: Mon, 18 Nov 2013 22:19:03 +0100
Subject: [wp-hackers] Wordpress 3.7.1 and html5 W3C validation
In-Reply-To: <BLU0-SMTP443613558BC1ED1CA64E32989E40@phx.gbl>
References: <BLU0-SMTP443613558BC1ED1CA64E32989E40@phx.gbl>
Message-ID: <op.w6rj51vlr6yny2@fqdn.toscho.de>

Olivier Baudry,

> It is not possible to have a valid wordpress website with wordpress
> html5, indeed, there is a conflict between the first line of code in the
> header php theme_compat included in the folder (wp-includes) and themes
> that can be developed that it would be well to provide these w3C
> compatible files or delete the whole record, and finally assurrer
> compatibility and recognition and validation by the W3C in effect

theme-compat is for old, broken themes. You will never use it in a modern  
theme. If you try to use them, you will get a notice.

These files have to stay as they are now for compatibility (hence the  
name). Just ignore the files, write and use regular themes.

Thomas

From webdev at ms-studio.net  Mon Nov 18 21:34:15 2013
From: webdev at ms-studio.net (Manuel Schmalstieg)
Date: Mon, 18 Nov 2013 22:34:15 +0100
Subject: [wp-hackers] On theme switching pains
Message-ID: <CAHBjUcReRokOW8Erb_238Mk24o6z_2Mj5yF7=oqWt+t-dV9Kww@mail.gmail.com>

Hi list,

Doing recently some instruction sessions with WP beginners, I am
wondering if we shouldn't improve the behavior of menus and widgets
when switching themes.

The issue: menus and widgets are systematically lost when switching themes.

What should happen IMHO: as long as the declared menu locations and
widget locations are the same (have the same ID), the settings should
be retained.

The same goes when switching from parent-theme to child-theme.
Currently, the menu connections are lost, which makes no sense to me.

Example:

Use the theme TwentyTwelve, which has a wp_nav_menu location named ?primary?:

register_nav_menu( 'primary', __( 'Primary Menu', 'twentytwelve' ) );

Now, let?s create a menu, and assign it to the available area (Primary Menu).

Then, switch to TwentyThirteen which has the following menu location:

register_nav_menu( 'primary', __( 'Navigation Menu', 'twentythirteen' ) );

Ideal result:
Our menu should still be assigned to the ?primary? location.

Actual result:
No menu is assigned to the ?primary? location. Switching the theme has
broken the connection, which has to be done manually, and is pretty
confusing for beginners (who already have to figure out the nuance
between "a menu automatically generated from my pages" and a custom
menu that may or may not be assigned to the location).

Same goes for widgets. Shouldn't the widget-sidebar relationship be
maintained if the sidebar has the same ID?

If that was the case, themes could use a common ground for naming
those sidebars (main sidebar, footer...) and would be more compatible.
Much like it is the case with post formats.

Curious to hear opinions on this.
Manuel

From danielx386 at gmail.com  Mon Nov 18 23:36:52 2013
From: danielx386 at gmail.com (Daniel)
Date: Tue, 19 Nov 2013 10:36:52 +1100
Subject: [wp-hackers] Check to see if there a wordpress user account and
 create one if not outside of wordpress
In-Reply-To: <CA+fCkBu7=V4b47jT-QEwAfbezVush8XttL=mRDQe3ECtLXEuew@mail.gmail.com>
References: <CAJ5Hi2g_FvqNaN=z6DzLyffC9xEXg88NaLyENBFiJhSKc4sE8w@mail.gmail.com>
 <CA+fCkBt8pYCU1+Sf++kbTEEkH4XmA8rbHW3XJS8eOkuuP+MaZg@mail.gmail.com>
 <CAJ5Hi2j5K5s7+rcaDr4aNaagTCq7T_QxOCjrq2FV6kWnAV3uzA@mail.gmail.com>
 <CA+fCkBu7=V4b47jT-QEwAfbezVush8XttL=mRDQe3ECtLXEuew@mail.gmail.com>
Message-ID: <CAJ5Hi2iVhq-hFA3AhMgscgu3ahME2EM4KjT3pbT9L8dMd-3TUQ@mail.gmail.com>

Hi Alex,

I managed to get 95% of what I'm after going, the other 5% is info
that I'm trying to pull from phpBB and I'm going to ask over there
because it looks like an issue on phpBB and not WordPress side.

Alex please let me know how you want me to credit you (Got a website?)
and I'll do that right away.

Thank-you :)

Daniel






On Tue, Nov 19, 2013 at 1:52 AM, Alex Rayan <alexrayan69 at gmail.com> wrote:
> Hi Danial,
>
> Yes, in order to user wordpress core functions you would need to include
> wp-load.php or call your script from within a custom wordpress template
> page, for example.
> If the password is not a plain text, you could generate a random password
> and ask a user to update it after. wp_insert_user only accepts a plain text
> password since it applies required hashing on it after.
>
> Hope it worked for you. : )
>
> Best regards,
> Alex
>
>
> On Sun, Nov 17, 2013 at 7:08 PM, Daniel <danielx386 at gmail.com> wrote:
>
>> Hi Alex,
>>
>> Thank-you for getting back to me,  now I take it that I should be able
>> to use the script that you provided (I know that it need some editing)
>> after I done the usual  "include '/../../../wp-load.php';"?
>>
>> Also what should I do if the password is not in plain text? (I'm not
>> entirely sure if the "$password" is still alive at that point of the
>> script, it's going right after someone logged into phpbb, I will need
>> to check on that)
>>
>> Having said that I will give it a go and see how I go :)
>>
>> Thank-you again Alex :)
>>
>> Regards,
>> Daniel
>>
>>
>>
>>
>>
>>
>> On Mon, Nov 18, 2013 at 10:55 AM, Alex Rayan <alexrayan69 at gmail.com>
>> wrote:
>> > Hi Daniel,
>> >
>> > I'm sorry I don't have time to go through your whole script, but to check
>> > whether the user exists you can use:
>> > if( !email_exists( $email )) {
>> > }
>> > and to pass email that you would like to check against.
>> > Then if the email is not found in the database, you can create a new user
>> > account as follows:
>> >
>> > $args = array(
>> > 'user_pass'=>$plain_text_pass,
>> > 'user_login'=>$username,
>> > 'user_nicename'=>$url_friendly_name,
>> > 'user_email'=>$user_email,
>> > 'display_name'=>$display_name
>> > );
>> > $user_id = wp_insert_user($args);
>> >
>> > You can check a full list of arguments that you can pass here:
>> > http://codex.wordpress.org/Function_Reference/wp_insert_user
>> >
>> > Also, it's probably a good idea to check for username_exists before
>> passing
>> > a username in case that one is already taken. Then, you could, for
>> example,
>> > append a number at the end of the username.
>> >
>> > On success the function above returns user_id.
>> >
>> > Hope it helps.
>> >
>> > Best regards,
>> > Alex
>> >
>> >
>> > On Sun, Nov 17, 2013 at 5:34 PM, Daniel <danielx386 at gmail.com> wrote:
>> >
>> >> Hi guys,
>> >>
>> >> Just wondering, does anyone know how I can go about checking to see if
>> >> there a wordpress account and create one if there isn't?
>> >>
>> >> Script that I got: https://gist.github.com/Danielx64/7519092
>> >>
>> >> There a marker in the file that has "// Somewhere here I want to put a
>> >> check to see if there a wp account" What I want to happen there is
>> >> that a check get done to see if there is a wordpress account and if
>> >> there not, create one.
>> >>
>> >> Does anyone know if it can be done?
>> >>
>> >> PS, I don't need to worry about logging into wordpress as that will
>> >> get taken care of by a different script. Also anyone who can help me
>> >> out will also get credit in the source code and readme :)
>> >>
>> >> Regards,
>> >> Daniel
>> >> _______________________________________________
>> >> wp-hackers mailing list
>> >> wp-hackers at lists.automattic.com
>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> >>
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From andrew.bartel at gmail.com  Tue Nov 19 05:07:24 2013
From: andrew.bartel at gmail.com (Andrew Bartel)
Date: Mon, 18 Nov 2013 21:07:24 -0800
Subject: [wp-hackers] Ajax Button Submission Failing - 50% of the time?
 Comment Voting Plugin Help
In-Reply-To: <1384755696762-42870.post@n5.nabble.com>
References: <1384755696762-42870.post@n5.nabble.com>
Message-ID: <CAJnHr4gGQShdCMjkqSY_WO48=9h-raPJV_TZ+_ApsL-+oZ5+5A@mail.gmail.com>

Can you put it in a gist or something?  It's hard to debug code from gmail.
 And what specifically is it failing on?  If you just go through clicking
up vote on comments where is it failing versus not failing?  Is it on
comments that are being up voted that have already been up voted/removed?
 How many levels of recursion deep have you tested it?  I promise you're
not hitting some arbitrary 60% point of failure in http requests or packet
drops.

Have you console.log(ged) every step of the way to see where the point of
failure is?  I've never met someone who writes code who doesn't have to go
line by line var dumping, echoing, alerting, console logging, debug
outputting, etc every so often, it's part of the process.  Sometimes you
write hundreds of lines in a day (or more) and it just works, other times
you bang your head against the keyboard for hours on a few lines and feel
like you're getting no where, it's part of the process.

-Andrew


On Sun, Nov 17, 2013 at 10:21 PM, BenderisGreat
<greglancaster71 at gmail.com>wrote:

> I wrote this code today, and I cant figure why half the time the json
> response is a failure.  Its a comment voting plugin, and its my second
> plugin I have ever coded.  Could you guys please take a look and if
> something stands out as an obvious issue share that with me?
>
> The idea was to have a reddit.com style voting system.  You can click
> upvote
> or downvote - and if you have already upvoted and click upvote it removed
> your vote alrogether.  Same goes for downvote.  The codes record in the
> database about 40% of the time from my testing.  The comments I am testing
> on ARE threaded, and I thought maybe that played a role but looking at the
> comment IDs they all match up so I am unsure what the cause could be.
>
> Here is the entirety of my code:
>
> *CREATE DB CODE: *
> function ams_comment_voting_database()
>         {
>         global $wpdb;
>         global $ams_comment_voting;
>         $ams_comment_voting = $wpdb->prefix . 'ams_comment_voting';
>
> if($wpdb->get_var("show tables like '$ams_comment_voting'") !=
> $ams_comment_voting)
>         {
>
> $sql = "CREATE TABLE ". $ams_comment_voting ." (
>         id mediumint(9) NOT NULL AUTO_INCREMENT,
>         voter_id int(6) NOT NULL,
>         comment_id int(6) NOT NULL,
>         comment_pid int(6) NOT NULL,
>         author_id int(6) NOT NULL,
>         vote_value tinyint(1) NOT NULL,
>         UNIQUE KEY id (id)
>         PRIMARY KEY (voter_id, comment_id)
> );";
>
> require_once(ABSPATH . 'wp-admin/includes/upgrade.php');
>         $wpdb->query($sql);
>         }
> }
>
> register_activation_hook(__FILE__,'ams_comment_voting_database');
>
>
>
> * VOTING FUNCTIONS & SCRIPTS *
>
> <?php //comment voting system
> add_action( 'wp_enqueue_scripts', 'amc_comment_vote_ajax' );
>
> function amc_comment_vote_ajax() {
>    wp_register_script( "amc_comment_vote",
> WP_PLUGIN_URL.'/vote_comm/js/amc_comment_vote.js', array('jquery') );
>    wp_localize_script( 'amc_comment_vote', 'anotherAjax', array( 'ajaxurl'
> => admin_url( 'admin-ajax.php' )));
>
>    wp_enqueue_script( 'jquery' );
>    wp_enqueue_script( 'amc_comment_vote' );
>
> }
>
>
> function ams_comment_vote_count($content) {
>         global $wpdb, $comment;
>
>         $comment_ID = get_comment_ID();
>         $comment = get_comment($comment_ID);
>                 $cuid = $comment->comment_ID;
>         $vote_up = '<button id="upvote" type="button"
> data-comment="'.$comment_ID.'"></button>';
>         $vote_down = '<button id="downvote" type="button"
> data-comment="'.$comment_ID.'" ></button>';
>
>         $count_votes = $wpdb->get_col( $wpdb->prepare ( "SELECT
> SUM(vote_value)
> FROM ".$wpdb->prefix."ams_comment_voting WHERE comment_id = %d",
> $comment_ID));
>         foreach ($count_votes as $id => $cID) {
>
>         if (!$cID) {
>         return '<div id="vote_buttons"><div class="votes">0</div> Votes' .
> $vote_up
> . $vote_down . '<br></div>' . $content;
>         }
>
>         return '<div id="vote_buttons"><div class="votes">' . $cID .
> '</div> Votes'
> . $vote_up . $vote_down . '<br></div>' . $content;
>         }
> }
> add_action('comment_text', 'ams_comment_vote_count');
>
>
> add_action('wp_ajax_amc_comment_vote', 'amc_comment_vote');
> add_action('wp_ajax_nopriv_amc_comment_vote', 'amc_comment_vote');
> function amc_comment_vote() {
>         global $wpdb, $comment, $post, $current_user;
>       get_currentuserinfo();
>
>
>         $cID = $_POST['commentid'];
>         $voter_id = $current_user->ID;
>                 $grabFromCID = get_comment($cID);
>
>         $author_id = $grabFromCID->user_id;
>         $comment_post_id = $grabFromCID->comment_post_ID;
>         $vote_replace = '';
>
>
>         $vote_direction = $_POST['direction'];
>                 $voteValueArray = array(    'upvote' => 1,
>
> 'downvote' => -1,
>                                                                          );
>                 if( array_key_exists( $vote_direction, $voteValueArray ) ){
>                 $vote_value = $voteValueArray[ $vote_direction ];
>                 } else { $vote_value = 0; }
>
>
>
> $alreadyVotedUp = $wpdb->get_row( $wpdb->prepare ( "SELECT * FROM
> ".$wpdb->prefix."ams_comment_voting WHERE comment_id = %d AND voter_id =
> %d", $cID, $voter_id));
>
> if (isset($alreadyVotedUp)) {
>
>         $current_value = $alreadyVotedUp->vote_value;
>         $replaceVoteValue ='';
>         if ($current_value  === 1 && $vote_value === 1) {
>                 $replaceVoteValue = 0;
>         } elseif ($current_value  === 1 && $vote_value === -1) {
>                 $replaceVoteValue = -1;
>         } elseif ($current_value  === -1 && $vote_value === 1) {
>                 $replaceVoteValue = 1;
>         } elseif ($current_value  === -1 && $vote_value === -1) {
>                 $replaceVoteValue = 0;
>         } elseif ($current_value  === 0 && $vote_value === 1) {
>                 $replaceVoteValue = 1;
>         } elseif ($current_value  === 0 && $vote_value === -1) {
>                 $replaceVoteValue = -1;
>         }
>
> } else {
>         $replaceVoteValue = NULL;
> }
>
>
>
> $tableName = $wpdb->prefix . 'ams_comment_voting';
>
> $sql = $wpdb->prepare("INSERT INTO $tableName (`voter_id`, `comment_id`,
> `comment_pid`, `author_id`, `vote_value`) VALUES (%d, %d, %d, %d, %d) ON
> DUPLICATE KEY UPDATE vote_value = %d", $voter_id, $cID, $comment_post_id,
> $author_id, $vote_value, $replaceVoteValue);
>
>
>
> $wpdb->query($sql);
>
>
>                 $response = array( 'success' => true );
>                 wp_send_json_success($response);
>
>                 die();
>
> }
>
>
> *THE JQUERY / AJAX SUBMISSION *
>
> jQuery( document ).ready( function( $ ) {
>         $( 'button#upvote, button#downvote').click( function() {
>
>
>          $(this).css('color', 'red');
>          $upVoteButton = $( 'button#upvote' );
>
>          $clickedButton = $(event.target);
>          var commentid = $(event.target).attr('data-comment');
>          var direction = $(event.target).attr('id')
>
> var data = {
>         'action': 'amc_comment_vote',
>         'commentid': commentid,
>         'direction': direction
> }
>
> $.ajax({
>         type: 'post',
>         url: anotherAjax.ajaxurl,
>         data: data,
>         success: function ( response ) {
>         if ( ! response.success ) {
>
>         alert( 'FAIL!' );
>     }
>             else {
>         alert( 'Success!' );
>         $clickedButton.parent().siblings('.votes').html(function(i, val) {
> return
> +val+1 });
>         }
>         }
> });
>   });
>   });
>
>
>
> --
> View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/Ajax-Button-Submission-Failing-50-of-the-time-Comment-Voting-Plugin-Help-tp42870.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From alexrayan69 at gmail.com  Tue Nov 19 14:34:35 2013
From: alexrayan69 at gmail.com (Alex Rayan)
Date: Tue, 19 Nov 2013 09:34:35 -0500
Subject: [wp-hackers] Check to see if there a wordpress user account and
 create one if not outside of wordpress
In-Reply-To: <CAJ5Hi2iVhq-hFA3AhMgscgu3ahME2EM4KjT3pbT9L8dMd-3TUQ@mail.gmail.com>
References: <CAJ5Hi2g_FvqNaN=z6DzLyffC9xEXg88NaLyENBFiJhSKc4sE8w@mail.gmail.com>
 <CA+fCkBt8pYCU1+Sf++kbTEEkH4XmA8rbHW3XJS8eOkuuP+MaZg@mail.gmail.com>
 <CAJ5Hi2j5K5s7+rcaDr4aNaagTCq7T_QxOCjrq2FV6kWnAV3uzA@mail.gmail.com>
 <CA+fCkBu7=V4b47jT-QEwAfbezVush8XttL=mRDQe3ECtLXEuew@mail.gmail.com>
 <CAJ5Hi2iVhq-hFA3AhMgscgu3ahME2EM4KjT3pbT9L8dMd-3TUQ@mail.gmail.com>
Message-ID: <CA+fCkBuU-DGhYH5H6LyC3bonDCSYjFZUq4f_ctQUzVpKvnarMg@mail.gmail.com>

Hi Daniel,

Glad to hear you progressed with your task. No need to credit me. It's an
open community to share knowledge.

Best regards,
Alex


On Mon, Nov 18, 2013 at 6:36 PM, Daniel <danielx386 at gmail.com> wrote:

> Hi Alex,
>
> I managed to get 95% of what I'm after going, the other 5% is info
> that I'm trying to pull from phpBB and I'm going to ask over there
> because it looks like an issue on phpBB and not WordPress side.
>
> Alex please let me know how you want me to credit you (Got a website?)
> and I'll do that right away.
>
> Thank-you :)
>
> Daniel
>
>
>
>
>
>
> On Tue, Nov 19, 2013 at 1:52 AM, Alex Rayan <alexrayan69 at gmail.com> wrote:
> > Hi Danial,
> >
> > Yes, in order to user wordpress core functions you would need to include
> > wp-load.php or call your script from within a custom wordpress template
> > page, for example.
> > If the password is not a plain text, you could generate a random password
> > and ask a user to update it after. wp_insert_user only accepts a plain
> text
> > password since it applies required hashing on it after.
> >
> > Hope it worked for you. : )
> >
> > Best regards,
> > Alex
> >
> >
> > On Sun, Nov 17, 2013 at 7:08 PM, Daniel <danielx386 at gmail.com> wrote:
> >
> >> Hi Alex,
> >>
> >> Thank-you for getting back to me,  now I take it that I should be able
> >> to use the script that you provided (I know that it need some editing)
> >> after I done the usual  "include '/../../../wp-load.php';"?
> >>
> >> Also what should I do if the password is not in plain text? (I'm not
> >> entirely sure if the "$password" is still alive at that point of the
> >> script, it's going right after someone logged into phpbb, I will need
> >> to check on that)
> >>
> >> Having said that I will give it a go and see how I go :)
> >>
> >> Thank-you again Alex :)
> >>
> >> Regards,
> >> Daniel
> >>
> >>
> >>
> >>
> >>
> >>
> >> On Mon, Nov 18, 2013 at 10:55 AM, Alex Rayan <alexrayan69 at gmail.com>
> >> wrote:
> >> > Hi Daniel,
> >> >
> >> > I'm sorry I don't have time to go through your whole script, but to
> check
> >> > whether the user exists you can use:
> >> > if( !email_exists( $email )) {
> >> > }
> >> > and to pass email that you would like to check against.
> >> > Then if the email is not found in the database, you can create a new
> user
> >> > account as follows:
> >> >
> >> > $args = array(
> >> > 'user_pass'=>$plain_text_pass,
> >> > 'user_login'=>$username,
> >> > 'user_nicename'=>$url_friendly_name,
> >> > 'user_email'=>$user_email,
> >> > 'display_name'=>$display_name
> >> > );
> >> > $user_id = wp_insert_user($args);
> >> >
> >> > You can check a full list of arguments that you can pass here:
> >> > http://codex.wordpress.org/Function_Reference/wp_insert_user
> >> >
> >> > Also, it's probably a good idea to check for username_exists before
> >> passing
> >> > a username in case that one is already taken. Then, you could, for
> >> example,
> >> > append a number at the end of the username.
> >> >
> >> > On success the function above returns user_id.
> >> >
> >> > Hope it helps.
> >> >
> >> > Best regards,
> >> > Alex
> >> >
> >> >
> >> > On Sun, Nov 17, 2013 at 5:34 PM, Daniel <danielx386 at gmail.com> wrote:
> >> >
> >> >> Hi guys,
> >> >>
> >> >> Just wondering, does anyone know how I can go about checking to see
> if
> >> >> there a wordpress account and create one if there isn't?
> >> >>
> >> >> Script that I got: https://gist.github.com/Danielx64/7519092
> >> >>
> >> >> There a marker in the file that has "// Somewhere here I want to put
> a
> >> >> check to see if there a wp account" What I want to happen there is
> >> >> that a check get done to see if there is a wordpress account and if
> >> >> there not, create one.
> >> >>
> >> >> Does anyone know if it can be done?
> >> >>
> >> >> PS, I don't need to worry about logging into wordpress as that will
> >> >> get taken care of by a different script. Also anyone who can help me
> >> >> out will also get credit in the source code and readme :)
> >> >>
> >> >> Regards,
> >> >> Daniel
> >> >> _______________________________________________
> >> >> wp-hackers mailing list
> >> >> wp-hackers at lists.automattic.com
> >> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> >>
> >> > _______________________________________________
> >> > wp-hackers mailing list
> >> > wp-hackers at lists.automattic.com
> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jeff at jeffrose.ca  Tue Nov 19 17:35:00 2013
From: jeff at jeffrose.ca (Jeff Rose)
Date: Tue, 19 Nov 2013 09:35:00 -0800
Subject: [wp-hackers] Privacy issues & encryption of data
Message-ID: <CABWVAyXn5JpBfZSnD7PsFJVMs3mYatR-y+zM+++xpYpWp9tCvA@mail.gmail.com>

Through my 9-5 job yesterday, I was informed that beginning next year, the
state of California (maybe others) will require more personally
identifiable information stored in websites to be encrypted.

This includes usernames, email addresses and even first & last names, which
WordPress stores in clear text.

This not only affects sites located in California, but also those who may
have users FROM California.

I'm wondering if anyone has thoughts (not to be taken as legal advice) on
how to handle this in WordPress, or if WordPress core will address this.

-- 
Jeff Rose
------------------
http://www.jeffrose.ca/twitter
http://www.jeffrose.ca/facebook

From otto at ottodestruct.com  Tue Nov 19 17:42:58 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 19 Nov 2013 11:42:58 -0600
Subject: [wp-hackers] Privacy issues & encryption of data
In-Reply-To: <CABWVAyXn5JpBfZSnD7PsFJVMs3mYatR-y+zM+++xpYpWp9tCvA@mail.gmail.com>
References: <CABWVAyXn5JpBfZSnD7PsFJVMs3mYatR-y+zM+++xpYpWp9tCvA@mail.gmail.com>
Message-ID: <CAD-FghyyrB056++AaP_28Pr=BKgG2PP4_jqUKBKtVSZTW1Sxng@mail.gmail.com>

On Tue, Nov 19, 2013 at 11:35 AM, Jeff Rose <jeff at jeffrose.ca> wrote:
> Through my 9-5 job yesterday, I was informed that beginning next year, the
> state of California (maybe others) will require more personally
> identifiable information stored in websites to be encrypted.
>
> This includes usernames, email addresses and even first & last names, which
> WordPress stores in clear text.
>
> This not only affects sites located in California, but also those who may
> have users FROM California.
>
> I'm wondering if anyone has thoughts (not to be taken as legal advice) on
> how to handle this in WordPress, or if WordPress core will address this.


If it's a California law, then it realistically only affects people
living in California. If I don't encrypt, then California cannot do
anything about it because they lack jurisdiction over me.

But I did a quick search and I cannot seem find any such law. There
was a report in July about California possibly passing such a law, but
the articles on it were short on specific details. Certainly, there
are existing laws to protect information such as social security
number, healthcare info, etc, but "name+email" isn't one of those
things covered by existing law I can find.

Obviously, if such a law exists and affects any significant portion of
the userbase, then WordPress will address it appropriately. But we'd
need more information than rumors. Laws are written down, so I should
be able to find it and read it, if it exists at present.

-Otto

From sabreuse at gmail.com  Tue Nov 19 17:56:17 2013
From: sabreuse at gmail.com (Amy Hendrix)
Date: Tue, 19 Nov 2013 12:56:17 -0500
Subject: [wp-hackers] Privacy issues & encryption of data
In-Reply-To: <CAD-FghyyrB056++AaP_28Pr=BKgG2PP4_jqUKBKtVSZTW1Sxng@mail.gmail.com>
References: <CABWVAyXn5JpBfZSnD7PsFJVMs3mYatR-y+zM+++xpYpWp9tCvA@mail.gmail.com>
 <CAD-FghyyrB056++AaP_28Pr=BKgG2PP4_jqUKBKtVSZTW1Sxng@mail.gmail.com>
Message-ID: <CAKnJ9+yRZH2NZORm04P=Gd3+Zy-GboYychSD-nh0xXGkzOz5WQ@mail.gmail.com>

Everything I found refers to this year's update of the California
Online Privacy Protection Act of 2003. It requires that sites that
collect information from customers have clearly posted privacy
policies; the new update covers recent innovations like Do Not Track
settings. Nothing about encryption, or indeed about user data in the
WP sense of "user".

A decent plain-english explanation is here:
http://blogs.lawyers.com/2013/10/california-online-privacy/

The law itself is here: http://oag.ca.gov/privacy/COPPA

On Tue, Nov 19, 2013 at 12:42 PM, Otto <otto at ottodestruct.com> wrote:
> On Tue, Nov 19, 2013 at 11:35 AM, Jeff Rose <jeff at jeffrose.ca> wrote:
>> Through my 9-5 job yesterday, I was informed that beginning next year, the
>> state of California (maybe others) will require more personally
>> identifiable information stored in websites to be encrypted.
>>
>> This includes usernames, email addresses and even first & last names, which
>> WordPress stores in clear text.
>>
>> This not only affects sites located in California, but also those who may
>> have users FROM California.
>>
>> I'm wondering if anyone has thoughts (not to be taken as legal advice) on
>> how to handle this in WordPress, or if WordPress core will address this.
>
>
> If it's a California law, then it realistically only affects people
> living in California. If I don't encrypt, then California cannot do
> anything about it because they lack jurisdiction over me.
>
> But I did a quick search and I cannot seem find any such law. There
> was a report in July about California possibly passing such a law, but
> the articles on it were short on specific details. Certainly, there
> are existing laws to protect information such as social security
> number, healthcare info, etc, but "name+email" isn't one of those
> things covered by existing law I can find.
>
> Obviously, if such a law exists and affects any significant portion of
> the userbase, then WordPress will address it appropriately. But we'd
> need more information than rumors. Laws are written down, so I should
> be able to find it and read it, if it exists at present.
>
> -Otto
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From funkatronic at gmail.com  Wed Nov 20 04:31:23 2013
From: funkatronic at gmail.com (Funkatron)
Date: Tue, 19 Nov 2013 22:31:23 -0600
Subject: [wp-hackers] HHow do you use WordPress's built in spinner?
Message-ID: <CA+-Vqo8gYYqjtVG2jKhSTRPhArHwVnB8HKWbriBtb+RTQOytTQ@mail.gmail.com>

So Wordpress uses a wating spinner to indicate when its doing something,
like when you hit the submit button when you are doing something AJAX-y.  I
was wondering how exactly do you replicate this if a developer wanted to
use it for their plugins?  I can't seem to replicate it.

From jayarjo at gmail.com  Wed Nov 20 11:25:17 2013
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Wed, 20 Nov 2013 15:25:17 +0400
Subject: [wp-hackers] The whole point of using backbone.js for media popup
 seems violated.
Message-ID: <CAM0Wtje0caD80HpJ2ff_snSShkKo25qdUOwtKH-uy_anqAvZrg@mail.gmail.com>

Looking at how media popup is coded today and thinking that it
violates the whole point of using backbone.js in first place. Isn't it
meant to be about structured javascript code and overall readability
and usability of the code?

Davit Barbakadze

From guus at inspiration-for-success.com  Wed Nov 20 16:29:44 2013
From: guus at inspiration-for-success.com (Guus (IFS))
Date: Thu, 21 Nov 2013 00:29:44 +0800
Subject: [wp-hackers] Privacy issues & encryption of data
References: <CABWVAyXn5JpBfZSnD7PsFJVMs3mYatR-y+zM+++xpYpWp9tCvA@mail.gmail.com>
Message-ID: <29B4BBE4A6824A0E8BB6103E01A25FE1@megaheights.net>

Is the world gone crazy, same like this weird Cookie law in The Netherlands?

How can decent websites work without cookies and how annoying for all those 
people having to click something to agree with it.

And make people scared for nothing.

----- Original Message ----- 
From: "Jeff Rose" <jeff at jeffrose.ca>
To: <wp-hackers at lists.automattic.com>
Sent: Wednesday, November 20, 2013 1:35 AM
Subject: [wp-hackers] Privacy issues & encryption of data


> Through my 9-5 job yesterday, I was informed that beginning next year, the
> state of California (maybe others) will require more personally
> identifiable information stored in websites to be encrypted.
>
> This includes usernames, email addresses and even first & last names, 
> which
> WordPress stores in clear text.
>
> This not only affects sites located in California, but also those who may
> have users FROM California.
>
> I'm wondering if anyone has thoughts (not to be taken as legal advice) on
> how to handle this in WordPress, or if WordPress core will address this.
>
> -- 
> Jeff Rose
> ------------------
> http://www.jeffrose.ca/twitter
> http://www.jeffrose.ca/facebook
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 


From halukkaramete at gmail.com  Wed Nov 20 19:51:32 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Wed, 20 Nov 2013 11:51:32 -0800
Subject: [wp-hackers] please recommend a reliable source for brwoser stats
Message-ID: <CAHERW=3vka1rGyZSv3fB1SH5fGyQAF-WLSjT31cZhXNCFhhU7Q@mail.gmail.com>

I'd like to find out about the current browser stats out there, as to which
browser(s) are leading, trending and what are the most common resolutions
out there etc...

I'm getting conflicting results from various resources...
Here are two links
http://www.netmarketshare.com/browser-market-share.aspx?qprid=2&qpcustomd=0
http://www.w3counter.com/globalstats.php?year=2013&month=10

I like to simplicity of the http://www.w3counter.com/globalstats.php but,
are those results are pretty much inline with your resources?


What resource do you usually go to to get your insight?
Does wordpress.com have an overall stats page that sums up the entire
wordpress.com browser stats?

thank you

From david at ernsts.us  Wed Nov 20 20:08:29 2013
From: david at ernsts.us (David Ernst)
Date: Wed, 20 Nov 2013 15:08:29 -0500
Subject: [wp-hackers] please recommend a reliable source for brwoser
	stats
In-Reply-To: <CAHERW=3vka1rGyZSv3fB1SH5fGyQAF-WLSjT31cZhXNCFhhU7Q@mail.gmail.com>
References: <CAHERW=3vka1rGyZSv3fB1SH5fGyQAF-WLSjT31cZhXNCFhhU7Q@mail.gmail.com>
Message-ID: <CANmL2P_40WbJTpOYLX7gNs0FjViJAozEg8PV2AUHCu6SRsBKfw@mail.gmail.com>

Google Analytics can show you browser and resolution stats for *your*
visitors, if you're interested in that information. Much for accurate for
your site's needs than the demographics of visitors to w3counter.org et al.

On Wednesday, November 20, 2013, Haluk Karamete wrote:

> I'd like to find out about the current browser stats out there, as to which
> browser(s) are leading, trending and what are the most common resolutions
> out there etc...
>
> I'm getting conflicting results from various resources...
> Here are two links
> http://www.netmarketshare.com/browser-market-share.aspx?qprid=2&qpcustomd=0
> http://www.w3counter.com/globalstats.php?year=2013&month=10
>
> I like to simplicity of the http://www.w3counter.com/globalstats.php but,
> are those results are pretty much inline with your resources?
>
>
> What resource do you usually go to to get your insight?
> Does wordpress.com have an overall stats page that sums up the entire
> wordpress.com browser stats?
>
> thank you
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com <javascript:;>
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From halukkaramete at gmail.com  Wed Nov 20 20:11:26 2013
From: halukkaramete at gmail.com (Haluk Karamete)
Date: Wed, 20 Nov 2013 12:11:26 -0800
Subject: [wp-hackers] please recommend a reliable source for brwoser
	stats
In-Reply-To: <CANmL2P_40WbJTpOYLX7gNs0FjViJAozEg8PV2AUHCu6SRsBKfw@mail.gmail.com>
References: <CAHERW=3vka1rGyZSv3fB1SH5fGyQAF-WLSjT31cZhXNCFhhU7Q@mail.gmail.com>
 <CANmL2P_40WbJTpOYLX7gNs0FjViJAozEg8PV2AUHCu6SRsBKfw@mail.gmail.com>
Message-ID: <CAHERW=25DOikEVN+7EnRm8FVfpBCU49BNHYdQcF9nkvAk4tt2g@mail.gmail.com>

thx.
I thought about that but that is very directed to my site's traffic.
I was interested in more general worldwide data.




On Wed, Nov 20, 2013 at 12:08 PM, David Ernst <david at ernsts.us> wrote:

> Google Analytics can show you browser and resolution stats for *your*
> visitors, if you're interested in that information. Much for accurate for
> your site's needs than the demographics of visitors to w3counter.org et
> al.
>
> On Wednesday, November 20, 2013, Haluk Karamete wrote:
>
> > I'd like to find out about the current browser stats out there, as to
> which
> > browser(s) are leading, trending and what are the most common resolutions
> > out there etc...
> >
> > I'm getting conflicting results from various resources...
> > Here are two links
> >
> http://www.netmarketshare.com/browser-market-share.aspx?qprid=2&qpcustomd=0
> > http://www.w3counter.com/globalstats.php?year=2013&month=10
> >
> > I like to simplicity of the http://www.w3counter.com/globalstats.phpbut,
> > are those results are pretty much inline with your resources?
> >
> >
> > What resource do you usually go to to get your insight?
> > Does wordpress.com have an overall stats page that sums up the entire
> > wordpress.com browser stats?
> >
> > thank you
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com <javascript:;>
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jeff at jeffrose.ca  Wed Nov 20 22:11:22 2013
From: jeff at jeffrose.ca (Jeff Rose)
Date: Wed, 20 Nov 2013 14:11:22 -0800
Subject: [wp-hackers] Further on security & encryption
Message-ID: <CABWVAyUYxJRWuxdhOAEtfHc46VgEqgDbwB+HAp5fNws8TFqKig@mail.gmail.com>

Hi Otto et al:

Otto, thanks for the reply. I got my source to send me the law they were
referring to and it's here:
http://leginfo.legislature.ca.gov/faces/billNavClient.xhtml?bill_id=201320140SB46

It doesn't, that I could read, do what I said it does in requiring
encryption of usernames.

It's a good read, and does suggest that the state would act on behalf of
it's citizens in the event of a breach of information on any site, any
where.

I'm not a lawyer and don't pretend to be (except as I watch Judge Judy) so
everyone should consult a profession person of the law for interpretation.

-- 
Jeff Rose
------------------
http://www.jeffrose.ca/twitter
http://www.jeffrose.ca/facebook

From greglancaster71 at gmail.com  Thu Nov 21 11:33:17 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Thu, 21 Nov 2013 03:33:17 -0800 (PST)
Subject: [wp-hackers] $wpdb->get_var unable to return negative numbers...
Message-ID: <1385033597526-42895.post@n5.nabble.com>

Is there anyway to return negative values when using get_var?  If not, what
is a good alternative?



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/wpdb-get-var-unable-to-return-negative-numbers-tp42895.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From wordpress at dd32.id.au  Thu Nov 21 13:20:39 2013
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Thu, 21 Nov 2013 23:20:39 +1000
Subject: [wp-hackers] $wpdb->get_var unable to return negative numbers...
In-Reply-To: <1385033597526-42895.post@n5.nabble.com>
References: <1385033597526-42895.post@n5.nabble.com>
Message-ID: <CAL4EHfk1GL3mgBT+iAEBa2krnSK3-Wh0+wRUJ1vD2=+xvV+Hgw@mail.gmail.com>

get_var() can return negitive numbers.

For example:
var_dump( $wpdb->get_var( "SELECT -1 as minus" ) );

or if wanted as an integer rather than a string:
var_dump( (int)$wpdb->get_var( "SELECT -1 as minus" ) );

The SQL query can be returning a field from a database of course, this is
just for simulating the response from MySQL of a negative number.



On 21 November 2013 21:33, BenderisGreat <greglancaster71 at gmail.com> wrote:

> Is there anyway to return negative values when using get_var?  If not, what
> is a good alternative?
>
>
>
> --
> View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/wpdb-get-var-unable-to-return-negative-numbers-tp42895.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From m.sowden at mi-telemetry.com  Thu Nov 21 14:06:31 2013
From: m.sowden at mi-telemetry.com (Matt Sowden)
Date: Thu, 21 Nov 2013 14:06:31 +0000
Subject: [wp-hackers] Privacy issues & encryption of data
In-Reply-To: <29B4BBE4A6824A0E8BB6103E01A25FE1@megaheights.net>
References: <CABWVAyXn5JpBfZSnD7PsFJVMs3mYatR-y+zM+++xpYpWp9tCvA@mail.gmail.com>
 <29B4BBE4A6824A0E8BB6103E01A25FE1@megaheights.net>
Message-ID: <48B1E48729969D4A9A862ECB8F69ED2126A112CD@MIEX2.MI.local>

It's privacy compliance laws that some governments are implementing now. UK has done it as well [1]. A work around for some implementations could be to use a bar at the top of the page on the user's first visit that says "By continuing to use our site you agree to the use of cookies" like some sites have done. There really isn't a good way to get around the benefits it provides.

[1]  http://www.ico.org.uk/for_organisations/privacy_and_electronic_communications/the_guide/cookies

Best,
Matt Sowden
+mattsowden
@mattsowden

-----Original Message-----
From: wp-hackers [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Guus (IFS)
Sent: Wednesday, November 20, 2013 11:30 AM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] Privacy issues & encryption of data

Is the world gone crazy, same like this weird Cookie law in The Netherlands?

How can decent websites work without cookies and how annoying for all those people having to click something to agree with it.

And make people scared for nothing.

----- Original Message -----
From: "Jeff Rose" <jeff at jeffrose.ca>
To: <wp-hackers at lists.automattic.com>
Sent: Wednesday, November 20, 2013 1:35 AM
Subject: [wp-hackers] Privacy issues & encryption of data


> Through my 9-5 job yesterday, I was informed that beginning next year, the
> state of California (maybe others) will require more personally
> identifiable information stored in websites to be encrypted.
>
> This includes usernames, email addresses and even first & last names, 
> which
> WordPress stores in clear text.
>
> This not only affects sites located in California, but also those who may
> have users FROM California.
>
> I'm wondering if anyone has thoughts (not to be taken as legal advice) on
> how to handle this in WordPress, or if WordPress core will address this.
>
> -- 
> Jeff Rose
> ------------------
> http://www.jeffrose.ca/twitter
> http://www.jeffrose.ca/facebook
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From eric.andrew.lewis at gmail.com  Thu Nov 21 17:31:08 2013
From: eric.andrew.lewis at gmail.com (Eric Lewis)
Date: Thu, 21 Nov 2013 12:31:08 -0500
Subject: [wp-hackers] Call for thoughts on a new
	Settings/Options/Metadata API
In-Reply-To: <CAHANiT7R3e3Cvga+8Oy5pdN8E=am9fY_1548VuqG-R+g6FX27w@mail.gmail.com>
References: <CA+-Vqo90RvZBv3h_2wczY4Be8gwSicGqAY=g2tS1rd-5gzQCAQ@mail.gmail.com>
 <CAHANiT7R3e3Cvga+8Oy5pdN8E=am9fY_1548VuqG-R+g6FX27w@mail.gmail.com>
Message-ID: <577E8893-720B-4DF7-A74F-46C3A76711A6@gmail.com>

FYI, a development team is coming together for this feature.

We?ll be meeting in (freenode) IRC chatroom #wordpress-core-plugins Tuesday, November 26th at 2200 UTC (5 PM EST) to start. 

Eric

On Nov 14, 2013, at 6:11 AM, Nashwan Doaqan <nashwan.doaqan at gmail.com> wrote:

> 1+, Forms Builder API will make our life easier,  This plugin may help you:
> https://github.com/nash-ye/Momtaz-Nmwdhj
> 
> 
> On 13 November 2013 19:33, Funkatron <funkatronic at gmail.com> wrote:
> 
>> I'm partial to the the OOP approach that the theme customizer uses.  It
>> creates the fields and automagically binds it to a particular option.
>> Especially love the image and color fields it uses.  Would love something
>> like that for post meta and settings, with the option to create your own
>> fields if the ones provided in the core aren't adequate.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From chandan.devel at gmail.com  Thu Nov 21 20:04:43 2013
From: chandan.devel at gmail.com (Chandan Singh)
Date: Fri, 22 Nov 2013 01:34:43 +0530
Subject: [wp-hackers] Willing to contribute
Message-ID: <CAKGVR3gVwSR=Z0LwGkpDvQY4Y17Yz=0=UDyH7QQQexx9-jCdmg@mail.gmail.com>

Hi,

I am new to this organization and willing to contribute. Please help me get
started.

Thanks,
Chandan Singh

From jdg at codesymphony.co  Thu Nov 21 20:34:10 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Thu, 21 Nov 2013 15:34:10 -0500
Subject: [wp-hackers] Willing to contribute
In-Reply-To: <CAKGVR3gVwSR=Z0LwGkpDvQY4Y17Yz=0=UDyH7QQQexx9-jCdmg@mail.gmail.com>
References: <CAKGVR3gVwSR=Z0LwGkpDvQY4Y17Yz=0=UDyH7QQQexx9-jCdmg@mail.gmail.com>
Message-ID: <7BE2620F-96AF-4BE7-B798-784064ABF099@codesymphony.co>

I would read through the contributor handbook if you haven?t already: http://make.wordpress.org/core/handbook/

-J.D.

On Nov 21, 2013, at 3:04 PM, Chandan Singh <chandan.devel at gmail.com> wrote:

> Hi,
> 
> I am new to this organization and willing to contribute. Please help me get
> started.
> 
> Thanks,
> Chandan Singh
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From ian at iandunn.name  Thu Nov 21 20:49:01 2013
From: ian at iandunn.name (Ian Dunn)
Date: Thu, 21 Nov 2013 12:49:01 -0800
Subject: [wp-hackers] Willing to contribute
In-Reply-To: <7BE2620F-96AF-4BE7-B798-784064ABF099@codesymphony.co>
References: <CAKGVR3gVwSR=Z0LwGkpDvQY4Y17Yz=0=UDyH7QQQexx9-jCdmg@mail.gmail.com>
 <7BE2620F-96AF-4BE7-B798-784064ABF099@codesymphony.co>
Message-ID: <528E71BD.3090803@iandunn.name>

There are also other areas beyond Core that you can help out with, like 
documentation, support, translation and the community websites. Check 
out the http://make.wordpress.org homepage for an introduction to them.

The Codex also has some helpful information at 
http://codex.wordpress.org/Contributing_to_WordPress.


On 11/21/13 12:34 PM, J.D. Grimes wrote:
> I would read through the contributor handbook if you haven?t already: http://make.wordpress.org/core/handbook/
>
> -J.D.
>
> On Nov 21, 2013, at 3:04 PM, Chandan Singh <chandan.devel at gmail.com> wrote:
>
>> Hi,
>>
>> I am new to this organization and willing to contribute. Please help me get
>> started.
>>
>> Thanks,
>> Chandan Singh
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


From jeff at jeffrose.ca  Fri Nov 22 22:43:03 2013
From: jeff at jeffrose.ca (Jeff Rose)
Date: Fri, 22 Nov 2013 14:43:03 -0800
Subject: [wp-hackers] Detect Network Admin in admin_init?
Message-ID: <CABWVAyV7kTLqBi+01P_TD_W+0BoFiLOjsTceY4RyW8rXPf+VRA@mail.gmail.com>

I have a plugin that's doing register_settings on the admin_init hook and
that is apparently running database queries (to populate some options) even
on the Network Admin page where it's not necessary.

Is there any way to detect that we're on a Network page (Network Admin
dashboard etc) during this hook? The $current_screen global doesn't seem to
be set yet and URL hacking seems... hacky.

Any advice is appreciated as always.

-- 
Jeff Rose
------------------
http://www.jeffrose.ca/twitter
http://www.jeffrose.ca/facebook

From info at bungeshea.com  Fri Nov 22 22:46:43 2013
From: info at bungeshea.com (Shea Bunge)
Date: Sat, 23 Nov 2013 09:46:43 +1100
Subject: [wp-hackers] Detect Network Admin in admin_init?
In-Reply-To: <CABWVAyV7kTLqBi+01P_TD_W+0BoFiLOjsTceY4RyW8rXPf+VRA@mail.gmail.com>
References: <CABWVAyV7kTLqBi+01P_TD_W+0BoFiLOjsTceY4RyW8rXPf+VRA@mail.gmail.com>
Message-ID: <CAJLbkRZHJfJdBHYMJr2wX3tq6-aA+W07qYgOqRz36+pUCtEOqw@mail.gmail.com>

Have a look at the is_network_admin() function (
http://queryposts.com/function/is_network_admin/). If the current screen
global is not yet set, it checks the WP_NETWORK_ADMIN constant.


On Sat, Nov 23, 2013 at 9:43 AM, Jeff Rose <jeff at jeffrose.ca> wrote:

> I have a plugin that's doing register_settings on the admin_init hook and
> that is apparently running database queries (to populate some options) even
> on the Network Admin page where it's not necessary.
>
> Is there any way to detect that we're on a Network page (Network Admin
> dashboard etc) during this hook? The $current_screen global doesn't seem to
> be set yet and URL hacking seems... hacky.
>
> Any advice is appreciated as always.
>
> --
> Jeff Rose
> ------------------
> http://www.jeffrose.ca/twitter
> http://www.jeffrose.ca/facebook
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Regards,

Shea Bunge
http://bungeshea.com

From greglancaster71 at gmail.com  Sat Nov 23 11:07:01 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Sat, 23 Nov 2013 03:07:01 -0800 (PST)
Subject: [wp-hackers] Saving Radio Options in Plugin Menu
Message-ID: <1385204821252-42904.post@n5.nabble.com>

Here is the code, when I select an option, nothing saved.  var_dump on
$buttonStyle gives me a boolean false.   Feel like I am missing something
here.  How exactly should the input be saved?  Do I need to validate or
sanitize the input of a radio button?  Seems that I wouldnt need to since
its not really user input.  

	public function ams_choose_comment_buttons_setting() //checkbox input
	{ 
	$buttonStyle = get_option('ams_choose_comment_buttons');
	var_dump($buttonStyle);

	printf(
'<input id="%s" type="radio" name="ams_options[%s]"
value="voteThumbs">voteThumbs', 'ams_choose_comment_buttons', checked(
'voteThumbs' == $buttonStyle ));
printf(
'<input id="%s" type="radio" name="ams_options[%s]"
value="voteTextLinks">voteTextLinks', 'ams_choose_comment_buttons', checked(
'voteTextLinks' == $buttonStyle ));
printf(
'<input id="%s" type="radio" name="ams_options[%s]"
value="voteThumbCount">voteThumbCount', 'ams_choose_comment_buttons',
checked( "voteThumbCount" == $buttonStyle ));
printf(
'<input id="%s" type="radio" name="ams_options[%s]"
value="voteChevrons">voteChevrons', 'ams_choose_comment_buttons', checked(
"voteChevrons" == $buttonStyle ));
printf(
'<input id="%s" type="radio" name="ams_options[%s]"
value="votePlusMinus">votePlusMinus', 'ams_choose_comment_buttons', checked(
"votePlusMinus" == $buttonStyle ));
printf(
'<input id="%s" type="radio" name="ams_options[%s]"
value="voteLikeDislike">voteLikeDislike', 'ams_choose_comment_buttons',
checked( "voteLikeDislike" == $buttonStyle ));
	
	

	}




--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Saving-Radio-Options-in-Plugin-Menu-tp42904.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From otto at ottodestruct.com  Sat Nov 23 11:19:56 2013
From: otto at ottodestruct.com (Otto)
Date: Sat, 23 Nov 2013 05:19:56 -0600
Subject: [wp-hackers] Saving Radio Options in Plugin Menu
In-Reply-To: <1385204821252-42904.post@n5.nabble.com>
References: <1385204821252-42904.post@n5.nabble.com>
Message-ID: <CAD-Fghw4RfR8hV0CkYVvYoRdasXCQtmTTvjx+W=Fbd1+_cit6g@mail.gmail.com>

No matter how you slice it, this is wrong:

 printf(
'<input id="%s" type="radio" name="ams_options[%s]"
value="voteThumbs">voteThumbs', 'ams_choose_comment_buttons', checked(
'voteThumbs' == $buttonStyle ));

You appear to be using the "checked" function to output something that
determines the name, and are also giving all the input boxes the same ID,
which definitely won't work.

Also, yes, they are user input and must be validated/sanitized.


-Otto


On Sat, Nov 23, 2013 at 5:07 AM, BenderisGreat <greglancaster71 at gmail.com>wrote:

> Here is the code, when I select an option, nothing saved.  var_dump on
> $buttonStyle gives me a boolean false.   Feel like I am missing something
> here.  How exactly should the input be saved?  Do I need to validate or
> sanitize the input of a radio button?  Seems that I wouldnt need to since
> its not really user input.
>
>         public function ams_choose_comment_buttons_setting() //checkbox
> input
>         {
>         $buttonStyle = get_option('ams_choose_comment_buttons');
>         var_dump($buttonStyle);
>
>         printf(
> '<input id="%s" type="radio" name="ams_options[%s]"
> value="voteThumbs">voteThumbs', 'ams_choose_comment_buttons', checked(
> 'voteThumbs' == $buttonStyle ));
> printf(
> '<input id="%s" type="radio" name="ams_options[%s]"
> value="voteTextLinks">voteTextLinks', 'ams_choose_comment_buttons',
> checked(
> 'voteTextLinks' == $buttonStyle ));
> printf(
> '<input id="%s" type="radio" name="ams_options[%s]"
> value="voteThumbCount">voteThumbCount', 'ams_choose_comment_buttons',
> checked( "voteThumbCount" == $buttonStyle ));
> printf(
> '<input id="%s" type="radio" name="ams_options[%s]"
> value="voteChevrons">voteChevrons', 'ams_choose_comment_buttons', checked(
> "voteChevrons" == $buttonStyle ));
> printf(
> '<input id="%s" type="radio" name="ams_options[%s]"
> value="votePlusMinus">votePlusMinus', 'ams_choose_comment_buttons',
> checked(
> "votePlusMinus" == $buttonStyle ));
> printf(
> '<input id="%s" type="radio" name="ams_options[%s]"
> value="voteLikeDislike">voteLikeDislike', 'ams_choose_comment_buttons',
> checked( "voteLikeDislike" == $buttonStyle ));
>
>
>
>         }
>
>
>
>
> --
> View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/Saving-Radio-Options-in-Plugin-Menu-tp42904.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From greglancaster71 at gmail.com  Sat Nov 23 11:23:50 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Sat, 23 Nov 2013 03:23:50 -0800 (PST)
Subject: [wp-hackers] Saving Radio Options in Plugin Menu
In-Reply-To: <CAD-Fghw4RfR8hV0CkYVvYoRdasXCQtmTTvjx+W=Fbd1+_cit6g@mail.gmail.com>
References: <1385204821252-42904.post@n5.nabble.com>
 <CAD-Fghw4RfR8hV0CkYVvYoRdasXCQtmTTvjx+W=Fbd1+_cit6g@mail.gmail.com>
Message-ID: <1385205830092-42906.post@n5.nabble.com>

The whole block is wrong? Just for radio buttons or also for checkboxes?  I
asked because that works just fine for a checkbox. 



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Saving-Radio-Options-in-Plugin-Menu-tp42904p42906.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From otto at ottodestruct.com  Sat Nov 23 11:36:43 2013
From: otto at ottodestruct.com (Otto)
Date: Sat, 23 Nov 2013 05:36:43 -0600
Subject: [wp-hackers] Saving Radio Options in Plugin Menu
In-Reply-To: <1385205830092-42906.post@n5.nabble.com>
References: <1385204821252-42904.post@n5.nabble.com>
 <CAD-Fghw4RfR8hV0CkYVvYoRdasXCQtmTTvjx+W=Fbd1+_cit6g@mail.gmail.com>
 <1385205830092-42906.post@n5.nabble.com>
Message-ID: <CAD-FghyTm6rbvjjE+Y5KxxK14h2gumhF+Nuh-YSb8XH=COAeZw@mail.gmail.com>

On Sat, Nov 23, 2013 at 5:23 AM, BenderisGreat <greglancaster71 at gmail.com>wrote:

> The whole block is wrong?


Oh, yes. What is the output from that?

  printf(
'<input id="%s" type="radio" name="ams_options[%s]"
value="voteThumbs">voteThumbs', 'ams_choose_comment_buttons', checked(
'voteThumbs' == $buttonStyle ));


The output from that looks like it would probably be the following:

checked='checked'<input id="ams_choose_comment_buttons" type="radio"
name="ams_options[]" value="voteThumbs">voteThumbs

Which simply doesn't make any sort of rational sense.

This is how you would do that correctly. For one, you wouldn't use a printf
at all:

<input type="radio" name="ams_options[ams_choose_comment_buttons]"
value="voteThumbs"
<?php checked($buttonStyle, 'voteThumbs') ?>>voteThumbs</input>

The important things here are:
- No duplicated ID fields. IDs have to be unique across the whole HTML
document. If you want to give them an ID, that's fine, but they cannot all
be the same.
- The "name" must make sense. Sticking the output of the "checked" field
into it makes no sense.
- The "checked" function makes output on its own, calling it as a parameter
inside a printf makes no sense
- You don't need an == check inside the checked() function call.
- The checked function call needs to be made inside the <input> html,
because it's outputting an attribute

-Otto

From otto at ottodestruct.com  Sat Nov 23 11:46:46 2013
From: otto at ottodestruct.com (Otto)
Date: Sat, 23 Nov 2013 05:46:46 -0600
Subject: [wp-hackers] Saving Radio Options in Plugin Menu
In-Reply-To: <CAD-FghyTm6rbvjjE+Y5KxxK14h2gumhF+Nuh-YSb8XH=COAeZw@mail.gmail.com>
References: <1385204821252-42904.post@n5.nabble.com>
 <CAD-Fghw4RfR8hV0CkYVvYoRdasXCQtmTTvjx+W=Fbd1+_cit6g@mail.gmail.com>
 <1385205830092-42906.post@n5.nabble.com>
 <CAD-FghyTm6rbvjjE+Y5KxxK14h2gumhF+Nuh-YSb8XH=COAeZw@mail.gmail.com>
Message-ID: <CAD-FghyjCFDH-MCUtqgQ0=yOKK_ws24LTtR91+ororF4Skdc0w@mail.gmail.com>

On Sat, Nov 23, 2013 at 5:36 AM, Otto <otto at ottodestruct.com> wrote:

> On Sat, Nov 23, 2013 at 5:23 AM, BenderisGreat <greglancaster71 at gmail.com>wrote:
>
>> The whole block is wrong?
>
>
> This is how you would do that correctly. For one, you wouldn't use a
> printf at all:
>
>
But if you *really* wanted to use a printf, you could do it like this:

printf('<input type="radio" name="ams_options[%s]"
value="voteThumbs"%s>voteThumbs</input>', 'ams_choose_comment_buttons',
checked('voteThumbs', $buttonStyle, false ) );

The third "false" parameter to the checked function suppresses the echo'ing
of the result, then the second %s in the right place in the printf will put
the attribute inside the input html. Also, I added the closing </input> in
there too.

-Otto

From greglancaster71 at gmail.com  Sat Nov 23 11:51:15 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Sat, 23 Nov 2013 03:51:15 -0800 (PST)
Subject: [wp-hackers] Saving Radio Options in Plugin Menu
In-Reply-To: <CAD-FghyTm6rbvjjE+Y5KxxK14h2gumhF+Nuh-YSb8XH=COAeZw@mail.gmail.com>
References: <1385204821252-42904.post@n5.nabble.com>
 <CAD-Fghw4RfR8hV0CkYVvYoRdasXCQtmTTvjx+W=Fbd1+_cit6g@mail.gmail.com>
 <1385205830092-42906.post@n5.nabble.com>
 <CAD-FghyTm6rbvjjE+Y5KxxK14h2gumhF+Nuh-YSb8XH=COAeZw@mail.gmail.com>
Message-ID: <1385207475745-42909.post@n5.nabble.com>

Hmm, I actually asked for help here:

http://stackoverflow.com/questions/18675307/checkbox-wont-stay-checked-on-plugin-settings-page

and that was the top upvoted answer so I tried it and it did save the
result.  It stored 'on' in the array. 

Thank you for clarifying it was wrong. :-/ 

I was trying to follow your tutorial here :
http://ottopress.com/2009/wordpress-settings-api-tutorial/

but I didnt see anything on radio buttons, and was having trouble with the
validation.   I used the code you just helped me with, and it saves properly
but returns:

Notice: Array to string conversion in
/Users/Jared/Documents/Websites/www.local.dev/wp-includes/general-template.php
on line 2343

Now thats what im working on clearing up.  



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Saving-Radio-Options-in-Plugin-Menu-tp42904p42909.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From otto at ottodestruct.com  Sat Nov 23 12:06:55 2013
From: otto at ottodestruct.com (Otto)
Date: Sat, 23 Nov 2013 06:06:55 -0600
Subject: [wp-hackers] Saving Radio Options in Plugin Menu
In-Reply-To: <1385207475745-42909.post@n5.nabble.com>
References: <1385204821252-42904.post@n5.nabble.com>
 <CAD-Fghw4RfR8hV0CkYVvYoRdasXCQtmTTvjx+W=Fbd1+_cit6g@mail.gmail.com>
 <1385205830092-42906.post@n5.nabble.com>
 <CAD-FghyTm6rbvjjE+Y5KxxK14h2gumhF+Nuh-YSb8XH=COAeZw@mail.gmail.com>
 <1385207475745-42909.post@n5.nabble.com>
Message-ID: <CAD-FghzefzzcFeiY0raix3LgwgfO-5DjGjp9Bt9wpB7ec35Q5A@mail.gmail.com>

On Sat, Nov 23, 2013 at 5:51 AM, BenderisGreat <greglancaster71 at gmail.com>wrote:

> Hmm, I actually asked for help here:
>
>
> http://stackoverflow.com/questions/18675307/checkbox-wont-stay-checked-on-plugin-settings-page
>
> and that was the top upvoted answer so I tried it and it did save the
> result.  It stored 'on' in the array.
>
> Thank you for clarifying it was wrong. :-/
>
>
Actually, the answer there is mostly correct. He has the duplicated ID
problem, but by using the numbered printf placeholders to duplicate the
first parameter in the printf, he has the values set correctly. Also, he
uses the checked() method correctly, with the false third parameter.

-Otto

From greglancaster71 at gmail.com  Sat Nov 23 12:13:56 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Sat, 23 Nov 2013 04:13:56 -0800 (PST)
Subject: [wp-hackers] Saving Radio Options in Plugin Menu
In-Reply-To: <CAD-FghzefzzcFeiY0raix3LgwgfO-5DjGjp9Bt9wpB7ec35Q5A@mail.gmail.com>
References: <1385204821252-42904.post@n5.nabble.com>
 <CAD-Fghw4RfR8hV0CkYVvYoRdasXCQtmTTvjx+W=Fbd1+_cit6g@mail.gmail.com>
 <1385205830092-42906.post@n5.nabble.com>
 <CAD-FghyTm6rbvjjE+Y5KxxK14h2gumhF+Nuh-YSb8XH=COAeZw@mail.gmail.com>
 <1385207475745-42909.post@n5.nabble.com>
 <CAD-FghzefzzcFeiY0raix3LgwgfO-5DjGjp9Bt9wpB7ec35Q5A@mail.gmail.com>
Message-ID: <1385208836603-42911.post@n5.nabble.com>

Why does the stackoverflow example I pasted store the checked / radio values
but the one you shared does not?  



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Saving-Radio-Options-in-Plugin-Menu-tp42904p42911.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From greglancaster71 at gmail.com  Sat Nov 23 12:51:21 2013
From: greglancaster71 at gmail.com (BenderisGreat)
Date: Sat, 23 Nov 2013 04:51:21 -0800 (PST)
Subject: [wp-hackers] Saving Radio Options in Plugin Menu
In-Reply-To: <1385208836603-42911.post@n5.nabble.com>
References: <1385204821252-42904.post@n5.nabble.com>
 <CAD-Fghw4RfR8hV0CkYVvYoRdasXCQtmTTvjx+W=Fbd1+_cit6g@mail.gmail.com>
 <1385205830092-42906.post@n5.nabble.com>
 <CAD-FghyTm6rbvjjE+Y5KxxK14h2gumhF+Nuh-YSb8XH=COAeZw@mail.gmail.com>
 <1385207475745-42909.post@n5.nabble.com>
 <CAD-FghzefzzcFeiY0raix3LgwgfO-5DjGjp9Bt9wpB7ec35Q5A@mail.gmail.com>
 <1385208836603-42911.post@n5.nabble.com>
Message-ID: <1385211081267-42912.post@n5.nabble.com>

Why does the stackoverflow example I pasted store the checked / radio values
but the one you shared does not?    (I mean visually, the radio and
checkboxes show they are ticked, while the example you shared does not store
that value visually.  )



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Saving-Radio-Options-in-Plugin-Menu-tp42904p42912.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From otto at ottodestruct.com  Sat Nov 23 13:22:54 2013
From: otto at ottodestruct.com (Otto)
Date: Sat, 23 Nov 2013 07:22:54 -0600
Subject: [wp-hackers] Saving Radio Options in Plugin Menu
In-Reply-To: <1385211081267-42912.post@n5.nabble.com>
References: <1385204821252-42904.post@n5.nabble.com>
 <CAD-Fghw4RfR8hV0CkYVvYoRdasXCQtmTTvjx+W=Fbd1+_cit6g@mail.gmail.com>
 <1385205830092-42906.post@n5.nabble.com>
 <CAD-FghyTm6rbvjjE+Y5KxxK14h2gumhF+Nuh-YSb8XH=COAeZw@mail.gmail.com>
 <1385207475745-42909.post@n5.nabble.com>
 <CAD-FghzefzzcFeiY0raix3LgwgfO-5DjGjp9Bt9wpB7ec35Q5A@mail.gmail.com>
 <1385208836603-42911.post@n5.nabble.com>
 <1385211081267-42912.post@n5.nabble.com>
Message-ID: <CAD-Fghw4c+5LP9t9-Mof0fiHODDhCKyLBigvx4s+czvEFyFX7A@mail.gmail.com>

Probably because get_option('ams_choose_comment_buttons'); is incorrect.

It's extremely difficult to give you complete and fully correct answers
when you're only posting snippets. I can only work with what you post. If
you don't post full code, you don't get full answers.

Also, if you need this much help, use the support forums instead of the
mailing list. The list isn't a support forum.


-Otto


On Sat, Nov 23, 2013 at 6:51 AM, BenderisGreat <greglancaster71 at gmail.com>wrote:

> Why does the stackoverflow example I pasted store the checked / radio
> values
> but the one you shared does not?    (I mean visually, the radio and
> checkboxes show they are ticked, while the example you shared does not
> store
> that value visually.  )
>
>
>
> --
> View this message in context:
> http://wordpress-hackers.1065353.n5.nabble.com/Saving-Radio-Options-in-Plugin-Menu-tp42904p42912.html
> Sent from the Wordpress Hackers mailing list archive at Nabble.com.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From noreply+3677101259 at badoo.com  Sat Nov 23 16:29:59 2013
From: noreply+3677101259 at badoo.com (Badoo)
Date: Sat, 23 Nov 2013 16:29:59 +0000
Subject: [wp-hackers] =?utf-8?q?=E2=98=85_Leiam_suas_mensagens_antes_que_s?=
	=?utf-8?q?ejam_deletadas!?=
Message-ID: <mailman.0.1385224202.20497.wp-hackers@lists.automattic.com>

Leia as mensagens deixadas por Caio antes que sejam deletadas!

Para ler sua mensagem, siga este link:
http://us1.badoo.com/01197533324/in/9cCBefMYvVU/?lang_id=61&g=57-0-4&m=65&mid=5290d80600000000003d000002a1450603961003014b


Se os links desta mensagem n?o funcionarem, copie e cole-os na barra de endere?os do seu browser.


Este email e parte do procedimento de entrega de mensagens enviadas por Caio. Caso tenha recebido este email por engano, apenas ignore. Em breve esta mensagem ser? removida do sistema.


Divirta-se!
A  Equipe Badoo 

Este e-mail foi enviado por Badoo Trading Limited (endere?o postal abaixo).
Badoo, por favor clique aqui para sair: https://us1.badoo.com/impersonation.phtml?lang_id=61&email=wp-hackers%40lists.automattic.com&block_code=8c4a24&m=65&mid=5290d80600000000003d000002a1450603961003014b&g=0-0-4

Badoo Trading Limited ? uma sociedade limitada registada na Inglaterra e Pa?s de Gales sob o CRN ??7540255 e firma registrada em 131 - 151 Great Titchfield Street, Londres, W1W 5BB.

From guus at inspiration-for-success.com  Sat Nov 23 16:39:01 2013
From: guus at inspiration-for-success.com (Guus (IFS))
Date: Sun, 24 Nov 2013 00:39:01 +0800
Subject: [wp-hackers] Privacy issues & encryption of data
References: <CABWVAyXn5JpBfZSnD7PsFJVMs3mYatR-y+zM+++xpYpWp9tCvA@mail.gmail.com>
 <29B4BBE4A6824A0E8BB6103E01A25FE1@megaheights.net>
 <48B1E48729969D4A9A862ECB8F69ED2126A112CD@MIEX2.MI.local>
Message-ID: <6BB3AF4CA31541B790118F1413EE1AC0@megaheights.net>

Yeah, I know what's the background.

But to me it's still something like asking permission from car buyers if 
it's ok if the car has a differential. What's the use of the question. I may 
not want it, but without it the car won't work properly.

----- Original Message ----- 
From: "Matt Sowden" <m.sowden at mi-telemetry.com>
To: <wp-hackers at lists.automattic.com>
Sent: Thursday, November 21, 2013 10:06 PM
Subject: Re: [wp-hackers] Privacy issues & encryption of data


> It's privacy compliance laws that some governments are implementing now. 
> UK has done it as well [1]. A work around for some implementations could 
> be to use a bar at the top of the page on the user's first visit that says 
> "By continuing to use our site you agree to the use of cookies" like some 
> sites have done. There really isn't a good way to get around the benefits 
> it provides.
>
> [1] 
> http://www.ico.org.uk/for_organisations/privacy_and_electronic_communications/the_guide/cookies
>
> Best,
> Matt Sowden
> +mattsowden
> @mattsowden
>
> -----Original Message-----
> From: wp-hackers [mailto:wp-hackers-bounces at lists.automattic.com] On 
> Behalf Of Guus (IFS)
> Sent: Wednesday, November 20, 2013 11:30 AM
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Privacy issues & encryption of data
>
> Is the world gone crazy, same like this weird Cookie law in The 
> Netherlands?
>
> How can decent websites work without cookies and how annoying for all 
> those people having to click something to agree with it.
>
> And make people scared for nothing.
>
> ----- Original Message -----
> From: "Jeff Rose" <jeff at jeffrose.ca>
> To: <wp-hackers at lists.automattic.com>
> Sent: Wednesday, November 20, 2013 1:35 AM
> Subject: [wp-hackers] Privacy issues & encryption of data
>
>
>> Through my 9-5 job yesterday, I was informed that beginning next year, 
>> the
>> state of California (maybe others) will require more personally
>> identifiable information stored in websites to be encrypted.
>>
>> This includes usernames, email addresses and even first & last names,
>> which
>> WordPress stores in clear text.
>>
>> This not only affects sites located in California, but also those who may
>> have users FROM California.
>>
>> I'm wondering if anyone has thoughts (not to be taken as legal advice) on
>> how to handle this in WordPress, or if WordPress core will address this.
>>
>> -- 
>> Jeff Rose
>> ------------------
>> http://www.jeffrose.ca/twitter
>> http://www.jeffrose.ca/facebook
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 


From jeff at jeffrose.ca  Sat Nov 23 19:05:39 2013
From: jeff at jeffrose.ca (Jeff Rose)
Date: Sat, 23 Nov 2013 11:05:39 -0800
Subject: [wp-hackers] Detect Network Admin in admin_init?
Message-ID: <CABWVAyVAFvS=PRr98P74=9am4JncJeG86KKjvbyA-CvmXhscYw@mail.gmail.com>

Thanks Shea, that's the function I was looking for but somehow it wasn't
coming up for me. Works perfectly!


On Sat, Nov 23, 2013 at 4:00 AM, <wp-hackers-request at lists.automattic.com>wrote:

>
>
> Message: 2
> Date: Sat, 23 Nov 2013 09:46:43 +1100
> From: Shea Bunge <info at bungeshea.com>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] Detect Network Admin in admin_init?
> Message-ID:
>         <
> CAJLbkRZHJfJdBHYMJr2wX3tq6-aA+W07qYgOqRz36+pUCtEOqw at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Have a look at the is_network_admin() function (
> http://queryposts.com/function/is_network_admin/). If the current screen
> global is not yet set, it checks the WP_NETWORK_ADMIN constant.
>
>

From frank at bueltge.de  Sat Nov 23 19:45:03 2013
From: frank at bueltge.de (Frank Bueltge)
Date: Sat, 23 Nov 2013 20:45:03 +0100
Subject: [wp-hackers] Detect Network Admin in admin_init?
In-Reply-To: <CABWVAyVAFvS=PRr98P74=9am4JncJeG86KKjvbyA-CvmXhscYw@mail.gmail.com>
References: <CABWVAyVAFvS=PRr98P74=9am4JncJeG86KKjvbyA-CvmXhscYw@mail.gmail.com>
Message-ID: <CAH9UVvFcO4ZFE5nT317VdDr_LzMdO9Ay2w5qwCLeCJs7chdTFw@mail.gmail.com>

small hint.
Use the plugin Debug Objects (http://wordpress.org/plugins/debug-objects/)
to understand and see the right conditionals, see the example screen
http://awesomescreenshot.com/0b9200gt62

Best wishes

On 23 November 2013 20:05, Jeff Rose <jeff at jeffrose.ca> wrote:

> Thanks Shea, that's the function I was looking for but somehow it wasn't
> coming up for me. Works perfectly!
>
>
> On Sat, Nov 23, 2013 at 4:00 AM, <wp-hackers-request at lists.automattic.com
> >wrote:
>
> >
> >
> > Message: 2
> > Date: Sat, 23 Nov 2013 09:46:43 +1100
> > From: Shea Bunge <info at bungeshea.com>
> > To: wp-hackers at lists.automattic.com
> > Subject: Re: [wp-hackers] Detect Network Admin in admin_init?
> > Message-ID:
> >         <
> > CAJLbkRZHJfJdBHYMJr2wX3tq6-aA+W07qYgOqRz36+pUCtEOqw at mail.gmail.com>
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > Have a look at the is_network_admin() function (
> > http://queryposts.com/function/is_network_admin/). If the current screen
> > global is not yet set, it checks the WP_NETWORK_ADMIN constant.
> >
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jayarjo at gmail.com  Sun Nov 24 12:51:57 2013
From: jayarjo at gmail.com (Davit Barbakadze)
Date: Sun, 24 Nov 2013 16:51:57 +0400
Subject: [wp-hackers] Are there any events on media popup,
	that we could hook up onto?
Message-ID: <CAM0WtjeNDZViQqTQixKELzF4-8xmkM-Q19ixOWO_6W6hbqYz_g@mail.gmail.com>

Suppose we would like to run some JavaScript when media popup opens
up. Is there any way we could hook up onto it? onto an event of some
kind, like - open?

Davit Barbakadze

From david at wordshell.net  Mon Nov 25 07:40:21 2013
From: david at wordshell.net (David Anderson)
Date: Mon, 25 Nov 2013 07:40:21 +0000
Subject: [wp-hackers] Tracking memory usage without turning plugins on/off
	one-by-one
Message-ID: <5292FEE5.5000809@wordshell.net>

Hi,

Is there a good, efficient way to track the memory usage of 
plugins/themes in WordPress other than "turn them on/off one by one"? 
Not just final memory usage (after everything's loaded), but peak memory 
usage too?

e.g. Can is there a good way to answer questions like "when the peak 
memory usage during load is hit, which parts of WordPress were the main 
culprits?"

Many thanks,
David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From prodevstudio+wordpress at gmail.com  Mon Nov 25 09:16:46 2013
From: prodevstudio+wordpress at gmail.com (Azizur Rahman)
Date: Mon, 25 Nov 2013 09:16:46 +0000
Subject: [wp-hackers] Tracking memory usage without turning plugins
	on/off one-by-one
In-Reply-To: <5292FEE5.5000809@wordshell.net>
References: <5292FEE5.5000809@wordshell.net>
Message-ID: <CAAYGKatwmFRVjACQkRRjowt6V_X_Y76VWh0btWBU=6afHrwe8Q@mail.gmail.com>

You can use PHP: Xhprof to profile everything and get some useful details.
http://us2.php.net/xhprof

Kind Regards,
Azizur Rahman

----
Do you need cost-effective web hosting solution and Domain name try
http://prodevstudio.com

Missed the last Friday Khutbah, try catchup a Khutbah on-line now at
http://fridaykhutbah.com


On Mon, Nov 25, 2013 at 7:40 AM, David Anderson <david at wordshell.net> wrote:

> Hi,
>
> Is there a good, efficient way to track the memory usage of plugins/themes
> in WordPress other than "turn them on/off one by one"? Not just final
> memory usage (after everything's loaded), but peak memory usage too?
>
> e.g. Can is there a good way to answer questions like "when the peak
> memory usage during load is hit, which parts of WordPress were the main
> culprits?"
>
> Many thanks,
> David
>
> --
> WordShell - WordPress fast from the CLI - www.wordshell.net
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From paul at codehooligans.com  Mon Nov 25 12:00:33 2013
From: paul at codehooligans.com (Paul Menard)
Date: Mon, 25 Nov 2013 07:00:33 -0500
Subject: [wp-hackers] Tracking memory usage without turning plugins
	on/off one-by-one
In-Reply-To: <CAAYGKatwmFRVjACQkRRjowt6V_X_Y76VWh0btWBU=6afHrwe8Q@mail.gmail.com>
References: <5292FEE5.5000809@wordshell.net>
 <CAAYGKatwmFRVjACQkRRjowt6V_X_Y76VWh0btWBU=6afHrwe8Q@mail.gmail.com>
Message-ID: <CAHTDVPnkAJR0bavSog4kFa-hwtPJT++QosTW0kzLL8YYE1B-cA@mail.gmail.com>

Found this the other day. Have not had a chance to try it.

https://github.com/johnbillion/QueryMonitor



On Mon, Nov 25, 2013 at 4:16 AM, Azizur Rahman <
prodevstudio+wordpress at gmail.com> wrote:

> You can use PHP: Xhprof to profile everything and get some useful details.
> http://us2.php.net/xhprof
>
> Kind Regards,
> Azizur Rahman
>
> ----
> Do you need cost-effective web hosting solution and Domain name try
> http://prodevstudio.com
>
> Missed the last Friday Khutbah, try catchup a Khutbah on-line now at
> http://fridaykhutbah.com
>
>
> On Mon, Nov 25, 2013 at 7:40 AM, David Anderson <david at wordshell.net>
> wrote:
>
> > Hi,
> >
> > Is there a good, efficient way to track the memory usage of
> plugins/themes
> > in WordPress other than "turn them on/off one by one"? Not just final
> > memory usage (after everything's loaded), but peak memory usage too?
> >
> > e.g. Can is there a good way to answer questions like "when the peak
> > memory usage during load is hit, which parts of WordPress were the main
> > culprits?"
> >
> > Many thanks,
> > David
> >
> > --
> > WordShell - WordPress fast from the CLI - www.wordshell.net
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From frank at bueltge.de  Mon Nov 25 12:46:26 2013
From: frank at bueltge.de (Frank Bueltge)
Date: Mon, 25 Nov 2013 13:46:26 +0100
Subject: [wp-hackers] Tracking memory usage without turning plugins
	on/off one-by-one
In-Reply-To: <CAHTDVPnkAJR0bavSog4kFa-hwtPJT++QosTW0kzLL8YYE1B-cA@mail.gmail.com>
References: <5292FEE5.5000809@wordshell.net>
 <CAAYGKatwmFRVjACQkRRjowt6V_X_Y76VWh0btWBU=6afHrwe8Q@mail.gmail.com>
 <CAHTDVPnkAJR0bavSog4kFa-hwtPJT++QosTW0kzLL8YYE1B-cA@mail.gmail.com>
Message-ID: <CAH9UVvEDGL+NcPist4coKS+z9auYg+8iFre7RB51FpHM9oJZwg@mail.gmail.com>

Also possible
http://wordpress.org/plugins/debug-objects/

Best
Frank



On 25 November 2013 13:00, Paul Menard <paul at codehooligans.com> wrote:

> Found this the other day. Have not had a chance to try it.
>
> https://github.com/johnbillion/QueryMonitor
>
>
>
> On Mon, Nov 25, 2013 at 4:16 AM, Azizur Rahman <
> prodevstudio+wordpress at gmail.com> wrote:
>
> > You can use PHP: Xhprof to profile everything and get some useful
> details.
> > http://us2.php.net/xhprof
> >
> > Kind Regards,
> > Azizur Rahman
> >
> > ----
> > Do you need cost-effective web hosting solution and Domain name try
> > http://prodevstudio.com
> >
> > Missed the last Friday Khutbah, try catchup a Khutbah on-line now at
> > http://fridaykhutbah.com
> >
> >
> > On Mon, Nov 25, 2013 at 7:40 AM, David Anderson <david at wordshell.net>
> > wrote:
> >
> > > Hi,
> > >
> > > Is there a good, efficient way to track the memory usage of
> > plugins/themes
> > > in WordPress other than "turn them on/off one by one"? Not just final
> > > memory usage (after everything's loaded), but peak memory usage too?
> > >
> > > e.g. Can is there a good way to answer questions like "when the peak
> > > memory usage during load is hit, which parts of WordPress were the main
> > > culprits?"
> > >
> > > Many thanks,
> > > David
> > >
> > > --
> > > WordShell - WordPress fast from the CLI - www.wordshell.net
> > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From johnbillion+wp at gmail.com  Mon Nov 25 12:49:54 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Mon, 25 Nov 2013 12:49:54 +0000
Subject: [wp-hackers] Tracking memory usage without turning plugins
	on/off one-by-one
In-Reply-To: <CAH9UVvEDGL+NcPist4coKS+z9auYg+8iFre7RB51FpHM9oJZwg@mail.gmail.com>
References: <5292FEE5.5000809@wordshell.net>
 <CAAYGKatwmFRVjACQkRRjowt6V_X_Y76VWh0btWBU=6afHrwe8Q@mail.gmail.com>
 <CAHTDVPnkAJR0bavSog4kFa-hwtPJT++QosTW0kzLL8YYE1B-cA@mail.gmail.com>
 <CAH9UVvEDGL+NcPist4coKS+z9auYg+8iFre7RB51FpHM9oJZwg@mail.gmail.com>
Message-ID: <CAOqAKWDdxk9vuC8M1n400uFfqC6cVfnUxAHran143vZVw51ykg@mail.gmail.com>

P3 works well: http://wordpress.org/plugins/p3-profiler/

Also http://wpgear.org/ is a great directory of resources for WP developers.

John


On 25 November 2013 12:46, Frank Bueltge <frank at bueltge.de> wrote:

> Also possible
> http://wordpress.org/plugins/debug-objects/
>
> Best
> Frank
>
>
>
> On 25 November 2013 13:00, Paul Menard <paul at codehooligans.com> wrote:
>
> > Found this the other day. Have not had a chance to try it.
> >
> > https://github.com/johnbillion/QueryMonitor
> >
> >
> >
> > On Mon, Nov 25, 2013 at 4:16 AM, Azizur Rahman <
> > prodevstudio+wordpress at gmail.com> wrote:
> >
> > > You can use PHP: Xhprof to profile everything and get some useful
> > details.
> > > http://us2.php.net/xhprof
> > >
> > > Kind Regards,
> > > Azizur Rahman
> > >
> > > ----
> > > Do you need cost-effective web hosting solution and Domain name try
> > > http://prodevstudio.com
> > >
> > > Missed the last Friday Khutbah, try catchup a Khutbah on-line now at
> > > http://fridaykhutbah.com
> > >
> > >
> > > On Mon, Nov 25, 2013 at 7:40 AM, David Anderson <david at wordshell.net>
> > > wrote:
> > >
> > > > Hi,
> > > >
> > > > Is there a good, efficient way to track the memory usage of
> > > plugins/themes
> > > > in WordPress other than "turn them on/off one by one"? Not just final
> > > > memory usage (after everything's loaded), but peak memory usage too?
> > > >
> > > > e.g. Can is there a good way to answer questions like "when the peak
> > > > memory usage during load is hit, which parts of WordPress were the
> main
> > > > culprits?"
> > > >
> > > > Many thanks,
> > > > David
> > > >
> > > > --
> > > > WordShell - WordPress fast from the CLI - www.wordshell.net
> > > >
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From frank at bueltge.de  Mon Nov 25 12:57:12 2013
From: frank at bueltge.de (Frank Bueltge)
Date: Mon, 25 Nov 2013 13:57:12 +0100
Subject: [wp-hackers] Tracking memory usage without turning plugins
	on/off one-by-one
In-Reply-To: <CAOqAKWDdxk9vuC8M1n400uFfqC6cVfnUxAHran143vZVw51ykg@mail.gmail.com>
References: <5292FEE5.5000809@wordshell.net>
 <CAAYGKatwmFRVjACQkRRjowt6V_X_Y76VWh0btWBU=6afHrwe8Q@mail.gmail.com>
 <CAHTDVPnkAJR0bavSog4kFa-hwtPJT++QosTW0kzLL8YYE1B-cA@mail.gmail.com>
 <CAH9UVvEDGL+NcPist4coKS+z9auYg+8iFre7RB51FpHM9oJZwg@mail.gmail.com>
 <CAOqAKWDdxk9vuC8M1n400uFfqC6cVfnUxAHran143vZVw51ykg@mail.gmail.com>
Message-ID: <CAH9UVvGZuG-zJ7jVDMaj+NYKT3xBuipOd1mcVMX5jdn=a6-9+w@mail.gmail.com>

Debug Objects have not a saving mechanism to track about long time, only
load and check, what load and you see, the current page. see screenshot.
https://www.diigo.com/item/image/1j30r/krdm

Alternative is https://github.com/rmccue/Hopper,
https://bitbucket.org/Rarst/laps
or without WordPress is Webgrind very helpfull -
https://github.com/jokkedk/webgrind

From lukebryan at sharefaith.com  Mon Nov 25 17:58:56 2013
From: lukebryan at sharefaith.com (Luke Bryan)
Date: Mon, 25 Nov 2013 09:58:56 -0800
Subject: [wp-hackers] boxes in mce icons
Message-ID: <CAFnKAk1-YmJ5Y7eieKyewSnxhOvrahPLMudGc5hYoQB7_gwyVg@mail.gmail.com>

Greetings all, I updated 3.8 beta and I notice it is making boxes around my
tinymce editors:
span.mce_justifycenter:before {

   1. content: '\f207';

Is this just for testing right now? What is the purpose of this box?

Best regards,

Luke

From otto at ottodestruct.com  Mon Nov 25 18:20:24 2013
From: otto at ottodestruct.com (Otto)
Date: Mon, 25 Nov 2013 12:20:24 -0600
Subject: [wp-hackers] boxes in mce icons
In-Reply-To: <CAFnKAk1-YmJ5Y7eieKyewSnxhOvrahPLMudGc5hYoQB7_gwyVg@mail.gmail.com>
References: <CAFnKAk1-YmJ5Y7eieKyewSnxhOvrahPLMudGc5hYoQB7_gwyVg@mail.gmail.com>
Message-ID: <CAD-FghzHEwcUCe7pmc+sDT4GYWrDiOdTr_bhhYxWW4eG8XX=LA@mail.gmail.com>

That's not a box, that's the icon in the mce toolbar for the center button.

See http://melchoyce.github.io/dashicons/ - dashicons-editor-aligncenter

-Otto


On Mon, Nov 25, 2013 at 11:58 AM, Luke Bryan <lukebryan at sharefaith.com>
wrote:
>
> Greetings all, I updated 3.8 beta and I notice it is making boxes around
my
> tinymce editors:
> span.mce_justifycenter:before {
>
>    1. content: '\f207';
>
> Is this just for testing right now? What is the purpose of this box?
>
> Best regards,
>
> Luke
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ipstenu at ipstenu.org  Mon Nov 25 18:31:08 2013
From: ipstenu at ipstenu.org (Mika A Epstein)
Date: Mon, 25 Nov 2013 10:31:08 -0800
Subject: [wp-hackers] boxes in mce icons
In-Reply-To: <CAD-FghzHEwcUCe7pmc+sDT4GYWrDiOdTr_bhhYxWW4eG8XX=LA@mail.gmail.com>
References: <CAFnKAk1-YmJ5Y7eieKyewSnxhOvrahPLMudGc5hYoQB7_gwyVg@mail.gmail.com>
 <CAD-FghzHEwcUCe7pmc+sDT4GYWrDiOdTr_bhhYxWW4eG8XX=LA@mail.gmail.com>
Message-ID: <5293976C.3040509@ipstenu.org>

If you're getting a box, kill your cache with fire and set these in 
wp-config if that doesn't work:

define('SCRIPT_DEBUG', true);
define('CONCATENATE_SCRIPTS', false);

Otto wrote:
>
> That's not a box, that's the icon in the mce toolbar for the center 
> button.
>
> See http://melchoyce.github.io/dashicons/ - dashicons-editor-aligncenter
>
> -Otto
>
>
> On Mon, Nov 25, 2013 at 11:58 AM, Luke Bryan<lukebryan at sharefaith.com>
> wrote:
>>
>> Greetings all, I updated 3.8 beta and I notice it is making boxes around
>
> my
>>
>> tinymce editors:
>> span.mce_justifycenter:before {
>>
>> 1. content: '\f207';
>>
>> Is this just for testing right now? What is the purpose of this box?
>>
>> Best regards,
>>
>> Luke
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From dyordan1 at ramapo.edu  Mon Nov 25 18:36:41 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Mon, 25 Nov 2013 13:36:41 -0500
Subject: [wp-hackers] boxes in mce icons
In-Reply-To: <CAD-FghzHEwcUCe7pmc+sDT4GYWrDiOdTr_bhhYxWW4eG8XX=LA@mail.gmail.com>
References: <CAFnKAk1-YmJ5Y7eieKyewSnxhOvrahPLMudGc5hYoQB7_gwyVg@mail.gmail.com>
 <CAD-FghzHEwcUCe7pmc+sDT4GYWrDiOdTr_bhhYxWW4eG8XX=LA@mail.gmail.com>
Message-ID: <4E04B4BE-7AE3-416B-86C6-EA61CA263AEA@ramapo.edu>

Is it possible it's not compatible with Firefox? My Firefox 25.0.1 is showing boxes all over that site :(

~Dobri

On Mon, 25 Nov 2013, at 1:20 PM, Otto wrote:

> That's not a box, that's the icon in the mce toolbar for the center button.
> 
> See http://melchoyce.github.io/dashicons/ - dashicons-editor-aligncenter
> 
> -Otto
> 
> 
> On Mon, Nov 25, 2013 at 11:58 AM, Luke Bryan <lukebryan at sharefaith.com>
> wrote:
>> 
>> Greetings all, I updated 3.8 beta and I notice it is making boxes around
> my
>> tinymce editors:
>> span.mce_justifycenter:before {
>> 
>>   1. content: '\f207';
>> 
>> Is this just for testing right now? What is the purpose of this box?
>> 
>> Best regards,
>> 
>> Luke
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Mon Nov 25 18:51:15 2013
From: otto at ottodestruct.com (Otto)
Date: Mon, 25 Nov 2013 12:51:15 -0600
Subject: [wp-hackers] boxes in mce icons
In-Reply-To: <4E04B4BE-7AE3-416B-86C6-EA61CA263AEA@ramapo.edu>
References: <CAFnKAk1-YmJ5Y7eieKyewSnxhOvrahPLMudGc5hYoQB7_gwyVg@mail.gmail.com>
 <CAD-FghzHEwcUCe7pmc+sDT4GYWrDiOdTr_bhhYxWW4eG8XX=LA@mail.gmail.com>
 <4E04B4BE-7AE3-416B-86C6-EA61CA263AEA@ramapo.edu>
Message-ID: <CAD-FghyA+XJ48A_og1BPuxMi0fK7-MnUHrCn+h+Jn0AV+5b0vg@mail.gmail.com>

What "boxes" are you talking about, exactly? It's hard to understand what
you mean when we don't see it ourselves.

Firefox 25.0.1 on Windows 8 works fine for me with the latest 3.8. I see no
"boxes".


-Otto


On Mon, Nov 25, 2013 at 12:36 PM, Dobri <dyordan1 at ramapo.edu> wrote:

> Is it possible it's not compatible with Firefox? My Firefox 25.0.1 is
> showing boxes all over that site :(
>
> ~Dobri
>
> On Mon, 25 Nov 2013, at 1:20 PM, Otto wrote:
>
> > That's not a box, that's the icon in the mce toolbar for the center
> button.
> >
> > See http://melchoyce.github.io/dashicons/ - dashicons-editor-aligncenter
> >
> > -Otto
> >
> >
> > On Mon, Nov 25, 2013 at 11:58 AM, Luke Bryan <lukebryan at sharefaith.com>
> > wrote:
> >>
> >> Greetings all, I updated 3.8 beta and I notice it is making boxes around
> > my
> >> tinymce editors:
> >> span.mce_justifycenter:before {
> >>
> >>   1. content: '\f207';
> >>
> >> Is this just for testing right now? What is the purpose of this box?
> >>
> >> Best regards,
> >>
> >> Luke
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Mon Nov 25 18:57:48 2013
From: otto at ottodestruct.com (Otto)
Date: Mon, 25 Nov 2013 12:57:48 -0600
Subject: [wp-hackers] boxes in mce icons
In-Reply-To: <CAD-FghyA+XJ48A_og1BPuxMi0fK7-MnUHrCn+h+Jn0AV+5b0vg@mail.gmail.com>
References: <CAFnKAk1-YmJ5Y7eieKyewSnxhOvrahPLMudGc5hYoQB7_gwyVg@mail.gmail.com>
 <CAD-FghzHEwcUCe7pmc+sDT4GYWrDiOdTr_bhhYxWW4eG8XX=LA@mail.gmail.com>
 <4E04B4BE-7AE3-416B-86C6-EA61CA263AEA@ramapo.edu>
 <CAD-FghyA+XJ48A_og1BPuxMi0fK7-MnUHrCn+h+Jn0AV+5b0vg@mail.gmail.com>
Message-ID: <CAD-FghzkDsNPymiG6Qmq77ZOqBchmYeJmp+wAsXyQVis2jM6_A@mail.gmail.com>

Wait, I just figured out you meant on the dashicons demo site. Yes, I see
the same thing, however my local WordPress 3.8 install looks fine and shows
the font properly.

Might be an old version on the demo site. I'll ping Mel about it.

-Otto


On Mon, Nov 25, 2013 at 12:51 PM, Otto <otto at ottodestruct.com> wrote:

> What "boxes" are you talking about, exactly? It's hard to understand what
> you mean when we don't see it ourselves.
>
> Firefox 25.0.1 on Windows 8 works fine for me with the latest 3.8. I see
> no "boxes".
>
>
> -Otto
>
>
> On Mon, Nov 25, 2013 at 12:36 PM, Dobri <dyordan1 at ramapo.edu> wrote:
>
>> Is it possible it's not compatible with Firefox? My Firefox 25.0.1 is
>> showing boxes all over that site :(
>>
>> ~Dobri
>>
>> On Mon, 25 Nov 2013, at 1:20 PM, Otto wrote:
>>
>> > That's not a box, that's the icon in the mce toolbar for the center
>> button.
>> >
>> > See http://melchoyce.github.io/dashicons/ -
>> dashicons-editor-aligncenter
>> >
>> > -Otto
>> >
>> >
>> > On Mon, Nov 25, 2013 at 11:58 AM, Luke Bryan <lukebryan at sharefaith.com>
>> > wrote:
>> >>
>> >> Greetings all, I updated 3.8 beta and I notice it is making boxes
>> around
>> > my
>> >> tinymce editors:
>> >> span.mce_justifycenter:before {
>> >>
>> >>   1. content: '\f207';
>> >>
>> >> Is this just for testing right now? What is the purpose of this box?
>> >>
>> >> Best regards,
>> >>
>> >> Luke
>> >> _______________________________________________
>> >> wp-hackers mailing list
>> >> wp-hackers at lists.automattic.com
>> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>

From dyordan1 at ramapo.edu  Mon Nov 25 18:59:45 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Mon, 25 Nov 2013 13:59:45 -0500
Subject: [wp-hackers] boxes in mce icons
In-Reply-To: <CAD-FghyA+XJ48A_og1BPuxMi0fK7-MnUHrCn+h+Jn0AV+5b0vg@mail.gmail.com>
References: <CAFnKAk1-YmJ5Y7eieKyewSnxhOvrahPLMudGc5hYoQB7_gwyVg@mail.gmail.com>
 <CAD-FghzHEwcUCe7pmc+sDT4GYWrDiOdTr_bhhYxWW4eG8XX=LA@mail.gmail.com>
 <4E04B4BE-7AE3-416B-86C6-EA61CA263AEA@ramapo.edu>
 <CAD-FghyA+XJ48A_og1BPuxMi0fK7-MnUHrCn+h+Jn0AV+5b0vg@mail.gmail.com>
Message-ID: <3D5B59BB-D362-4DB6-8960-AF22B6C48DD1@ramapo.edu>

Sorry, I meant Firefox doesn't recognize the font or something. I checked my Windows 7 and the mac I work on and both don't render the icons on Firefox 25.0.1. Doesn't seem to be a cache issue, I deleted it multiple times in both. I don't know if attachments work on this mailing list but I'll give it a shot.



~Dobri

On Mon, 25 Nov 2013, at 1:51 PM, Otto wrote:

> What "boxes" are you talking about, exactly? It's hard to understand what
> you mean when we don't see it ourselves.
> 
> Firefox 25.0.1 on Windows 8 works fine for me with the latest 3.8. I see no
> "boxes".
> 
> 
> -Otto
> 
> 
> On Mon, Nov 25, 2013 at 12:36 PM, Dobri <dyordan1 at ramapo.edu> wrote:
> 
>> Is it possible it's not compatible with Firefox? My Firefox 25.0.1 is
>> showing boxes all over that site :(
>> 
>> ~Dobri
>> 
>> On Mon, 25 Nov 2013, at 1:20 PM, Otto wrote:
>> 
>>> That's not a box, that's the icon in the mce toolbar for the center
>> button.
>>> 
>>> See http://melchoyce.github.io/dashicons/ - dashicons-editor-aligncenter
>>> 
>>> -Otto
>>> 
>>> 
>>> On Mon, Nov 25, 2013 at 11:58 AM, Luke Bryan <lukebryan at sharefaith.com>
>>> wrote:
>>>> 
>>>> Greetings all, I updated 3.8 beta and I notice it is making boxes around
>>> my
>>>> tinymce editors:
>>>> span.mce_justifycenter:before {
>>>> 
>>>>  1. content: '\f207';
>>>> 
>>>> Is this just for testing right now? What is the purpose of this box?
>>>> 
>>>> Best regards,
>>>> 
>>>> Luke
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From dyordan1 at ramapo.edu  Mon Nov 25 19:01:29 2013
From: dyordan1 at ramapo.edu (Dobri)
Date: Mon, 25 Nov 2013 14:01:29 -0500
Subject: [wp-hackers] boxes in mce icons
In-Reply-To: <1753_1385405989_52939E24_1753_14584_1_3D5B59BB-D362-4DB6-8960-AF22B6C48DD1@ramapo.edu>
References: <CAFnKAk1-YmJ5Y7eieKyewSnxhOvrahPLMudGc5hYoQB7_gwyVg@mail.gmail.com>
 <CAD-FghzHEwcUCe7pmc+sDT4GYWrDiOdTr_bhhYxWW4eG8XX=LA@mail.gmail.com>
 <4E04B4BE-7AE3-416B-86C6-EA61CA263AEA@ramapo.edu>
 <CAD-FghyA+XJ48A_og1BPuxMi0fK7-MnUHrCn+h+Jn0AV+5b0vg@mail.gmail.com>
 <1753_1385405989_52939E24_1753_14584_1_3D5B59BB-D362-4DB6-8960-AF22B6C48DD1@ramapo.edu>
Message-ID: <67AAAF58-C4F0-4386-99D6-0B499A5FC572@ramapo.edu>

Apprantly, they don't.

http://s8.postimg.org/bcxgu6iz9/Screen_Shot_2013_11_25_at_2_00_25_PM.png

~Dobri

On Mon, 25 Nov 2013, at 1:59 PM, Dobri wrote:

> Sorry, I meant Firefox doesn't recognize the font or something. I checked my Windows 7 and the mac I work on and both don't render the icons on Firefox 25.0.1. Doesn't seem to be a cache issue, I deleted it multiple times in both. I don't know if attachments work on this mailing list but I'll give it a shot.
> 
> 
> 
> ~Dobri
> 
> On Mon, 25 Nov 2013, at 1:51 PM, Otto wrote:
> 
>> What "boxes" are you talking about, exactly? It's hard to understand what
>> you mean when we don't see it ourselves.
>> 
>> Firefox 25.0.1 on Windows 8 works fine for me with the latest 3.8. I see no
>> "boxes".
>> 
>> 
>> -Otto
>> 
>> 
>> On Mon, Nov 25, 2013 at 12:36 PM, Dobri <dyordan1 at ramapo.edu> wrote:
>> 
>>> Is it possible it's not compatible with Firefox? My Firefox 25.0.1 is
>>> showing boxes all over that site :(
>>> 
>>> ~Dobri
>>> 
>>> On Mon, 25 Nov 2013, at 1:20 PM, Otto wrote:
>>> 
>>>> That's not a box, that's the icon in the mce toolbar for the center
>>> button.
>>>> 
>>>> See http://melchoyce.github.io/dashicons/ - dashicons-editor-aligncenter
>>>> 
>>>> -Otto
>>>> 
>>>> 
>>>> On Mon, Nov 25, 2013 at 11:58 AM, Luke Bryan <lukebryan at sharefaith.com>
>>>> wrote:
>>>>> 
>>>>> Greetings all, I updated 3.8 beta and I notice it is making boxes around
>>>> my
>>>>> tinymce editors:
>>>>> span.mce_justifycenter:before {
>>>>> 
>>>>> 1. content: '\f207';
>>>>> 
>>>>> Is this just for testing right now? What is the purpose of this box?
>>>>> 
>>>>> Best regards,
>>>>> 
>>>>> Luke
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers at lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers at lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> 
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From otto at ottodestruct.com  Mon Nov 25 19:04:58 2013
From: otto at ottodestruct.com (Otto)
Date: Mon, 25 Nov 2013 13:04:58 -0600
Subject: [wp-hackers] boxes in mce icons
In-Reply-To: <67AAAF58-C4F0-4386-99D6-0B499A5FC572@ramapo.edu>
References: <CAFnKAk1-YmJ5Y7eieKyewSnxhOvrahPLMudGc5hYoQB7_gwyVg@mail.gmail.com>
 <CAD-FghzHEwcUCe7pmc+sDT4GYWrDiOdTr_bhhYxWW4eG8XX=LA@mail.gmail.com>
 <4E04B4BE-7AE3-416B-86C6-EA61CA263AEA@ramapo.edu>
 <CAD-FghyA+XJ48A_og1BPuxMi0fK7-MnUHrCn+h+Jn0AV+5b0vg@mail.gmail.com>
 <1753_1385405989_52939E24_1753_14584_1_3D5B59BB-D362-4DB6-8960-AF22B6C48DD1@ramapo.edu>
 <67AAAF58-C4F0-4386-99D6-0B499A5FC572@ramapo.edu>
Message-ID: <CAD-FghwwUcFfB-V_nA63mS1dx0BbXkN4EAv0z0OyYD_1ZRFgOA@mail.gmail.com>

I pinged Mel. She figured it out and fixed it. It's working now. Hit
"reload".

:)


-Otto


On Mon, Nov 25, 2013 at 1:01 PM, Dobri <dyordan1 at ramapo.edu> wrote:

> Apprantly, they don't.
>
> http://s8.postimg.org/bcxgu6iz9/Screen_Shot_2013_11_25_at_2_00_25_PM.png
>
> ~Dobri
>
> On Mon, 25 Nov 2013, at 1:59 PM, Dobri wrote:
>
> > Sorry, I meant Firefox doesn't recognize the font or something. I
> checked my Windows 7 and the mac I work on and both don't render the icons
> on Firefox 25.0.1. Doesn't seem to be a cache issue, I deleted it multiple
> times in both. I don't know if attachments work on this mailing list but
> I'll give it a shot.
> >
> >
> >
> > ~Dobri
> >
> > On Mon, 25 Nov 2013, at 1:51 PM, Otto wrote:
> >
> >> What "boxes" are you talking about, exactly? It's hard to understand
> what
> >> you mean when we don't see it ourselves.
> >>
> >> Firefox 25.0.1 on Windows 8 works fine for me with the latest 3.8. I
> see no
> >> "boxes".
> >>
> >>
> >> -Otto
> >>
> >>
> >> On Mon, Nov 25, 2013 at 12:36 PM, Dobri <dyordan1 at ramapo.edu> wrote:
> >>
> >>> Is it possible it's not compatible with Firefox? My Firefox 25.0.1 is
> >>> showing boxes all over that site :(
> >>>
> >>> ~Dobri
> >>>
> >>> On Mon, 25 Nov 2013, at 1:20 PM, Otto wrote:
> >>>
> >>>> That's not a box, that's the icon in the mce toolbar for the center
> >>> button.
> >>>>
> >>>> See http://melchoyce.github.io/dashicons/ -
> dashicons-editor-aligncenter
> >>>>
> >>>> -Otto
> >>>>
> >>>>
> >>>> On Mon, Nov 25, 2013 at 11:58 AM, Luke Bryan <
> lukebryan at sharefaith.com>
> >>>> wrote:
> >>>>>
> >>>>> Greetings all, I updated 3.8 beta and I notice it is making boxes
> around
> >>>> my
> >>>>> tinymce editors:
> >>>>> span.mce_justifycenter:before {
> >>>>>
> >>>>> 1. content: '\f207';
> >>>>>
> >>>>> Is this just for testing right now? What is the purpose of this box?
> >>>>>
> >>>>> Best regards,
> >>>>>
> >>>>> Luke
> >>>>> _______________________________________________
> >>>>> wp-hackers mailing list
> >>>>> wp-hackers at lists.automattic.com
> >>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>> _______________________________________________
> >>>> wp-hackers mailing list
> >>>> wp-hackers at lists.automattic.com
> >>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From paul at codehooligans.com  Mon Nov 25 23:56:51 2013
From: paul at codehooligans.com (Paul Menard)
Date: Mon, 25 Nov 2013 18:56:51 -0500
Subject: [wp-hackers] WP toolbar second level flyout menu not working in
	mobile (iOS7 iPhone/iPad)
Message-ID: <2CAEEFA1-8561-4422-AACD-BCAC1454C6A8@codehooligans.com>

Under Multisite both 3.7.1 and 3.8 Beta 1 configurations with no plugins installed and default themes set. When viewing the Dashboard via an iOS 7 device I select 'My Sites' from the WP toolbar. There is not second level flyout option displayed. You see the indicator arrow but there is no way to touch the parent to make the second menu show. 

I've tried searching Trac and see some old items. Both are 11-12 months old. 

http://core.trac.wordpress.org/ticket/23023
http://core.trac.wordpress.org/ticket/22660

Are these still open tracs to be eventually worked and closed? I don't guess there is a possibility these would make it into 3.8

P-




From lukebryan at sharefaith.com  Tue Nov 26 01:06:20 2013
From: lukebryan at sharefaith.com (Luke Bryan)
Date: Mon, 25 Nov 2013 17:06:20 -0800
Subject: [wp-hackers] boxes in mce icons
Message-ID: <CAFnKAk0_FiWCG8Y3chtskp2Pt8FeOORfnxkygcVx=jNX9WpwMQ@mail.gmail.com>

It looks like it's an encoding issue. On wp dashboard it seems ok, though
on another page tips flag is the [ ] box, or [ ] box with number in it, in
Firefox.

On Mon, Nov 25, 2013 at 3:56 PM, <wp-hackers-request at lists.automattic.com>wrote:

> Send wp-hackers mailing list submissions to
>         wp-hackers at lists.automattic.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>         http://lists.automattic.com/mailman/listinfo/wp-hackers
> or, via email, send a message with subject or body 'help' to
>         wp-hackers-request at lists.automattic.com
>
> You can reach the person managing the list at
>         wp-hackers-owner at lists.automattic.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wp-hackers digest..."
>
>
> Today's Topics:
>
>    1. Re: boxes in mce icons (Otto)
>    2. Re: boxes in mce icons (Otto)
>    3. Re: boxes in mce icons (Dobri)
>    4. Re: boxes in mce icons (Dobri)
>    5. Re: boxes in mce icons (Otto)
>    6. WP toolbar second level flyout menu not working in        mobile
>       (iOS7 iPhone/iPad) (Paul Menard)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Mon, 25 Nov 2013 12:51:15 -0600
> From: Otto <otto at ottodestruct.com>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] boxes in mce icons
> Message-ID:
>         <
> CAD-FghyA+XJ48A_og1BPuxMi0fK7-MnUHrCn+h+Jn0AV+5b0vg at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> What "boxes" are you talking about, exactly? It's hard to understand what
> you mean when we don't see it ourselves.
>
> Firefox 25.0.1 on Windows 8 works fine for me with the latest 3.8. I see no
> "boxes".
>
>
> -Otto
>
>
> On Mon, Nov 25, 2013 at 12:36 PM, Dobri <dyordan1 at ramapo.edu> wrote:
>
> > Is it possible it's not compatible with Firefox? My Firefox 25.0.1 is
> > showing boxes all over that site :(
> >
> > ~Dobri
> >
> > On Mon, 25 Nov 2013, at 1:20 PM, Otto wrote:
> >
> > > That's not a box, that's the icon in the mce toolbar for the center
> > button.
> > >
> > > See http://melchoyce.github.io/dashicons/ -
> dashicons-editor-aligncenter
> > >
> > > -Otto
> > >
> > >
> > > On Mon, Nov 25, 2013 at 11:58 AM, Luke Bryan <lukebryan at sharefaith.com
> >
> > > wrote:
> > >>
> > >> Greetings all, I updated 3.8 beta and I notice it is making boxes
> around
> > > my
> > >> tinymce editors:
> > >> span.mce_justifycenter:before {
> > >>
> > >>   1. content: '\f207';
> > >>
> > >> Is this just for testing right now? What is the purpose of this box?
> > >>
> > >> Best regards,
> > >>
> > >> Luke
> > >> _______________________________________________
> > >> wp-hackers mailing list
> > >> wp-hackers at lists.automattic.com
> > >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> ------------------------------
>
> Message: 2
> Date: Mon, 25 Nov 2013 12:57:48 -0600
> From: Otto <otto at ottodestruct.com>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] boxes in mce icons
> Message-ID:
>         <
> CAD-FghzkDsNPymiG6Qmq77ZOqBchmYeJmp+wAsXyQVis2jM6_A at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Wait, I just figured out you meant on the dashicons demo site. Yes, I see
> the same thing, however my local WordPress 3.8 install looks fine and shows
> the font properly.
>
> Might be an old version on the demo site. I'll ping Mel about it.
>
> -Otto
>
>
> On Mon, Nov 25, 2013 at 12:51 PM, Otto <otto at ottodestruct.com> wrote:
>
> > What "boxes" are you talking about, exactly? It's hard to understand what
> > you mean when we don't see it ourselves.
> >
> > Firefox 25.0.1 on Windows 8 works fine for me with the latest 3.8. I see
> > no "boxes".
> >
> >
> > -Otto
> >
> >
> > On Mon, Nov 25, 2013 at 12:36 PM, Dobri <dyordan1 at ramapo.edu> wrote:
> >
> >> Is it possible it's not compatible with Firefox? My Firefox 25.0.1 is
> >> showing boxes all over that site :(
> >>
> >> ~Dobri
> >>
> >> On Mon, 25 Nov 2013, at 1:20 PM, Otto wrote:
> >>
> >> > That's not a box, that's the icon in the mce toolbar for the center
> >> button.
> >> >
> >> > See http://melchoyce.github.io/dashicons/ -
> >> dashicons-editor-aligncenter
> >> >
> >> > -Otto
> >> >
> >> >
> >> > On Mon, Nov 25, 2013 at 11:58 AM, Luke Bryan <
> lukebryan at sharefaith.com>
> >> > wrote:
> >> >>
> >> >> Greetings all, I updated 3.8 beta and I notice it is making boxes
> >> around
> >> > my
> >> >> tinymce editors:
> >> >> span.mce_justifycenter:before {
> >> >>
> >> >>   1. content: '\f207';
> >> >>
> >> >> Is this just for testing right now? What is the purpose of this box?
> >> >>
> >> >> Best regards,
> >> >>
> >> >> Luke
> >> >> _______________________________________________
> >> >> wp-hackers mailing list
> >> >> wp-hackers at lists.automattic.com
> >> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >> > _______________________________________________
> >> > wp-hackers mailing list
> >> > wp-hackers at lists.automattic.com
> >> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >
> >
>
>
> ------------------------------
>
> Message: 3
> Date: Mon, 25 Nov 2013 13:59:45 -0500
> From: Dobri <dyordan1 at ramapo.edu>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] boxes in mce icons
> Message-ID: <3D5B59BB-D362-4DB6-8960-AF22B6C48DD1 at ramapo.edu>
> Content-Type: text/plain;       charset=us-ascii
>
> Sorry, I meant Firefox doesn't recognize the font or something. I checked
> my Windows 7 and the mac I work on and both don't render the icons on
> Firefox 25.0.1. Doesn't seem to be a cache issue, I deleted it multiple
> times in both. I don't know if attachments work on this mailing list but
> I'll give it a shot.
>
>
>
> ~Dobri
>
> On Mon, 25 Nov 2013, at 1:51 PM, Otto wrote:
>
> > What "boxes" are you talking about, exactly? It's hard to understand what
> > you mean when we don't see it ourselves.
> >
> > Firefox 25.0.1 on Windows 8 works fine for me with the latest 3.8. I see
> no
> > "boxes".
> >
> >
> > -Otto
> >
> >
> > On Mon, Nov 25, 2013 at 12:36 PM, Dobri <dyordan1 at ramapo.edu> wrote:
> >
> >> Is it possible it's not compatible with Firefox? My Firefox 25.0.1 is
> >> showing boxes all over that site :(
> >>
> >> ~Dobri
> >>
> >> On Mon, 25 Nov 2013, at 1:20 PM, Otto wrote:
> >>
> >>> That's not a box, that's the icon in the mce toolbar for the center
> >> button.
> >>>
> >>> See http://melchoyce.github.io/dashicons/ -
> dashicons-editor-aligncenter
> >>>
> >>> -Otto
> >>>
> >>>
> >>> On Mon, Nov 25, 2013 at 11:58 AM, Luke Bryan <lukebryan at sharefaith.com
> >
> >>> wrote:
> >>>>
> >>>> Greetings all, I updated 3.8 beta and I notice it is making boxes
> around
> >>> my
> >>>> tinymce editors:
> >>>> span.mce_justifycenter:before {
> >>>>
> >>>>  1. content: '\f207';
> >>>>
> >>>> Is this just for testing right now? What is the purpose of this box?
> >>>>
> >>>> Best regards,
> >>>>
> >>>> Luke
> >>>> _______________________________________________
> >>>> wp-hackers mailing list
> >>>> wp-hackers at lists.automattic.com
> >>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> ------------------------------
>
> Message: 4
> Date: Mon, 25 Nov 2013 14:01:29 -0500
> From: Dobri <dyordan1 at ramapo.edu>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] boxes in mce icons
> Message-ID: <67AAAF58-C4F0-4386-99D6-0B499A5FC572 at ramapo.edu>
> Content-Type: text/plain;       charset=us-ascii
>
> Apprantly, they don't.
>
> http://s8.postimg.org/bcxgu6iz9/Screen_Shot_2013_11_25_at_2_00_25_PM.png
>
> ~Dobri
>
> On Mon, 25 Nov 2013, at 1:59 PM, Dobri wrote:
>
> > Sorry, I meant Firefox doesn't recognize the font or something. I
> checked my Windows 7 and the mac I work on and both don't render the icons
> on Firefox 25.0.1. Doesn't seem to be a cache issue, I deleted it multiple
> times in both. I don't know if attachments work on this mailing list but
> I'll give it a shot.
> >
> >
> >
> > ~Dobri
> >
> > On Mon, 25 Nov 2013, at 1:51 PM, Otto wrote:
> >
> >> What "boxes" are you talking about, exactly? It's hard to understand
> what
> >> you mean when we don't see it ourselves.
> >>
> >> Firefox 25.0.1 on Windows 8 works fine for me with the latest 3.8. I
> see no
> >> "boxes".
> >>
> >>
> >> -Otto
> >>
> >>
> >> On Mon, Nov 25, 2013 at 12:36 PM, Dobri <dyordan1 at ramapo.edu> wrote:
> >>
> >>> Is it possible it's not compatible with Firefox? My Firefox 25.0.1 is
> >>> showing boxes all over that site :(
> >>>
> >>> ~Dobri
> >>>
> >>> On Mon, 25 Nov 2013, at 1:20 PM, Otto wrote:
> >>>
> >>>> That's not a box, that's the icon in the mce toolbar for the center
> >>> button.
> >>>>
> >>>> See http://melchoyce.github.io/dashicons/ -
> dashicons-editor-aligncenter
> >>>>
> >>>> -Otto
> >>>>
> >>>>
> >>>> On Mon, Nov 25, 2013 at 11:58 AM, Luke Bryan <
> lukebryan at sharefaith.com>
> >>>> wrote:
> >>>>>
> >>>>> Greetings all, I updated 3.8 beta and I notice it is making boxes
> around
> >>>> my
> >>>>> tinymce editors:
> >>>>> span.mce_justifycenter:before {
> >>>>>
> >>>>> 1. content: '\f207';
> >>>>>
> >>>>> Is this just for testing right now? What is the purpose of this box?
> >>>>>
> >>>>> Best regards,
> >>>>>
> >>>>> Luke
> >>>>> _______________________________________________
> >>>>> wp-hackers mailing list
> >>>>> wp-hackers at lists.automattic.com
> >>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>> _______________________________________________
> >>>> wp-hackers mailing list
> >>>> wp-hackers at lists.automattic.com
> >>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >>> _______________________________________________
> >>> wp-hackers mailing list
> >>> wp-hackers at lists.automattic.com
> >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>>
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
>
> ------------------------------
>
> Message: 5
> Date: Mon, 25 Nov 2013 13:04:58 -0600
> From: Otto <otto at ottodestruct.com>
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] boxes in mce icons
> Message-ID:
>         <
> CAD-FghwwUcFfB-V_nA63mS1dx0BbXkN4EAv0z0OyYD_1ZRFgOA at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> I pinged Mel. She figured it out and fixed it. It's working now. Hit
> "reload".
>
> :)
>
>
> -Otto
>
>
> On Mon, Nov 25, 2013 at 1:01 PM, Dobri <dyordan1 at ramapo.edu> wrote:
>
> > Apprantly, they don't.
> >
> > http://s8.postimg.org/bcxgu6iz9/Screen_Shot_2013_11_25_at_2_00_25_PM.png
> >
> > ~Dobri
> >
> > On Mon, 25 Nov 2013, at 1:59 PM, Dobri wrote:
> >
> > > Sorry, I meant Firefox doesn't recognize the font or something. I
> > checked my Windows 7 and the mac I work on and both don't render the
> icons
> > on Firefox 25.0.1. Doesn't seem to be a cache issue, I deleted it
> multiple
> > times in both. I don't know if attachments work on this mailing list but
> > I'll give it a shot.
> > >
> > >
> > >
> > > ~Dobri
> > >
> > > On Mon, 25 Nov 2013, at 1:51 PM, Otto wrote:
> > >
> > >> What "boxes" are you talking about, exactly? It's hard to understand
> > what
> > >> you mean when we don't see it ourselves.
> > >>
> > >> Firefox 25.0.1 on Windows 8 works fine for me with the latest 3.8. I
> > see no
> > >> "boxes".
> > >>
> > >>
> > >> -Otto
> > >>
> > >>
> > >> On Mon, Nov 25, 2013 at 12:36 PM, Dobri <dyordan1 at ramapo.edu> wrote:
> > >>
> > >>> Is it possible it's not compatible with Firefox? My Firefox 25.0.1 is
> > >>> showing boxes all over that site :(
> > >>>
> > >>> ~Dobri
> > >>>
> > >>> On Mon, 25 Nov 2013, at 1:20 PM, Otto wrote:
> > >>>
> > >>>> That's not a box, that's the icon in the mce toolbar for the center
> > >>> button.
> > >>>>
> > >>>> See http://melchoyce.github.io/dashicons/ -
> > dashicons-editor-aligncenter
> > >>>>
> > >>>> -Otto
> > >>>>
> > >>>>
> > >>>> On Mon, Nov 25, 2013 at 11:58 AM, Luke Bryan <
> > lukebryan at sharefaith.com>
> > >>>> wrote:
> > >>>>>
> > >>>>> Greetings all, I updated 3.8 beta and I notice it is making boxes
> > around
> > >>>> my
> > >>>>> tinymce editors:
> > >>>>> span.mce_justifycenter:before {
> > >>>>>
> > >>>>> 1. content: '\f207';
> > >>>>>
> > >>>>> Is this just for testing right now? What is the purpose of this
> box?
> > >>>>>
> > >>>>> Best regards,
> > >>>>>
> > >>>>> Luke
> > >>>>> _______________________________________________
> > >>>>> wp-hackers mailing list
> > >>>>> wp-hackers at lists.automattic.com
> > >>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >>>> _______________________________________________
> > >>>> wp-hackers mailing list
> > >>>> wp-hackers at lists.automattic.com
> > >>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >>>
> > >>> _______________________________________________
> > >>> wp-hackers mailing list
> > >>> wp-hackers at lists.automattic.com
> > >>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >>>
> > >> _______________________________________________
> > >> wp-hackers mailing list
> > >> wp-hackers at lists.automattic.com
> > >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> ------------------------------
>
> Message: 6
> Date: Mon, 25 Nov 2013 18:56:51 -0500
> From: Paul Menard <paul at codehooligans.com>
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] WP toolbar second level flyout menu not working
>         in      mobile (iOS7 iPhone/iPad)
> Message-ID: <2CAEEFA1-8561-4422-AACD-BCAC1454C6A8 at codehooligans.com>
> Content-Type: text/plain; charset=us-ascii
>
> Under Multisite both 3.7.1 and 3.8 Beta 1 configurations with no plugins
> installed and default themes set. When viewing the Dashboard via an iOS 7
> device I select 'My Sites' from the WP toolbar. There is not second level
> flyout option displayed. You see the indicator arrow but there is no way to
> touch the parent to make the second menu show.
>
> I've tried searching Trac and see some old items. Both are 11-12 months
> old.
>
> http://core.trac.wordpress.org/ticket/23023
> http://core.trac.wordpress.org/ticket/22660
>
> Are these still open tracs to be eventually worked and closed? I don't
> guess there is a possibility these would make it into 3.8
>
> P-
>
>
>
>
>
> ------------------------------
>
> Subject: Digest Footer
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> ------------------------------
>
> End of wp-hackers Digest, Vol 106, Issue 38
> *******************************************
>

From otto at ottodestruct.com  Tue Nov 26 03:40:32 2013
From: otto at ottodestruct.com (Otto)
Date: Mon, 25 Nov 2013 21:40:32 -0600
Subject: [wp-hackers] boxes in mce icons
In-Reply-To: <CAFnKAk0_FiWCG8Y3chtskp2Pt8FeOORfnxkygcVx=jNX9WpwMQ@mail.gmail.com>
References: <CAFnKAk0_FiWCG8Y3chtskp2Pt8FeOORfnxkygcVx=jNX9WpwMQ@mail.gmail.com>
Message-ID: <CAD-FghwkYc2FXoZ0Gax=36DmHJEqXZQBGDM+fp3GgrHALxjmVg@mail.gmail.com>

On Mon, Nov 25, 2013 at 7:06 PM, Luke Bryan <lukebryan at sharefaith.com>wrote:

> It looks like it's an encoding issue. On wp dashboard it seems ok, though
> on another page tips flag is the [ ] box, or [ ] box with number in it, in
> Firefox.
>


Can you be more specific? I mean, this is something that we can probably
fix, with additional details.

-Otto

From lukebryan at sharefaith.com  Tue Nov 26 17:06:27 2013
From: lukebryan at sharefaith.com (Luke Bryan)
Date: Tue, 26 Nov 2013 09:06:27 -0800
Subject: [wp-hackers] boxes in mce icons
Message-ID: <CAFnKAk0A=Fz2AhsNCKz4jyuriwSRR+DZGO7cBg0fahLmX37KOA@mail.gmail.com>

Looking into the problem more, I found out using Firefox Font inspector,
that the box icons are a special font: Dashicons Regular (remote).
The nonworking one just was Times New Roman.
Is there a guide on correctly enqueueing this font system, to see the icons
correctly on my pages?

Thanks,
Luke

From h at hyhs.me  Tue Nov 26 17:50:28 2013
From: h at hyhs.me (Helen Hou-Sandi)
Date: Tue, 26 Nov 2013 12:50:28 -0500
Subject: [wp-hackers] boxes in mce icons
In-Reply-To: <CAFnKAk0A=Fz2AhsNCKz4jyuriwSRR+DZGO7cBg0fahLmX37KOA@mail.gmail.com>
References: <CAFnKAk0A=Fz2AhsNCKz4jyuriwSRR+DZGO7cBg0fahLmX37KOA@mail.gmail.com>
Message-ID: <CAA0DF=-8m+k8k3zWN6Swvt-z76cK2kwwBrLSDGJwouV8pj8TeQ@mail.gmail.com>

Wait, are you referring to using WP_Editor on the front-end of your site?
Because we fixed this last night:
http://core.trac.wordpress.org/ticket/26236

From hosting at earthbound.com  Tue Nov 26 18:29:53 2013
From: hosting at earthbound.com (Adam Silverstein)
Date: Tue, 26 Nov 2013 12:29:53 -0600
Subject: [wp-hackers] JavaScript events on media popup
Message-ID: <CAHWgyKG6bw4APijY-gR+39zteU5aDwwTDTOxQSQ7GgRxbx+NzA@mail.gmail.com>

Currently WordPress does not offer a specific way to hook into JavaScript
events - this is being considered for a future release -
http://core.trac.wordpress.org/ticket/21170.

for now you will need to bind to specific DOM events, such as the same
event WordPress hooks into to open the media modal when you click on the
insert media button:

$(document.body).on( 'click', '.insert-media', function( event ) {
// Add your functionality here
});


On Mon, Nov 25, 2013 at 6:00 AM, <wp-hackers-request at lists.automattic.com>wrote:

> Send wp-hackers mailing list submissions to
>         wp-hackers at lists.automattic.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>         http://lists.automattic.com/mailman/listinfo/wp-hackers
> or, via email, send a message with subject or body 'help' to
>         wp-hackers-request at lists.automattic.com
>
> You can reach the person managing the list at
>         wp-hackers-owner at lists.automattic.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wp-hackers digest..."
>
>
> Today's Topics:
>
>    1. Are there any events on media popup,      that we could hook up
>       onto? (Davit Barbakadze)
>    2. Tracking memory usage without turning plugins on/off
>       one-by-one (David Anderson)
>    3. Re: Tracking memory usage without turning plugins on/off
>       one-by-one (Azizur Rahman)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 24 Nov 2013 16:51:57 +0400
> From: Davit Barbakadze <jayarjo at gmail.com>
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] Are there any events on media popup,      that we
>         could hook up onto?
> Message-ID:
>         <
> CAM0WtjeNDZViQqTQixKELzF4-8xmkM-Q19ixOWO_6W6hbqYz_g at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Suppose we would like to run some JavaScript when media popup opens
> up. Is there any way we could hook up onto it? onto an event of some
> kind, like - open?
>
> Davit Barbakadze
>
>
> ------------------------------
>
> Message: 2
> Date: Mon, 25 Nov 2013 07:40:21 +0000
> From: David Anderson <david at wordshell.net>
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] Tracking memory usage without turning plugins
>         on/off  one-by-one
> Message-ID: <5292FEE5.5000809 at wordshell.net>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> Hi,
>
> Is there a good, efficient way to track the memory usage of
> plugins/themes in WordPress other than "turn them on/off one by one"?
> Not just final memory usage (after everything's loaded), but peak memory
> usage too?
>
> e.g. Can is there a good way to answer questions like "when the peak
> memory usage during load is hit, which parts of WordPress were the main
> culprits?"
>
> Many thanks,
> David
>
> --
> WordShell - WordPress fast from the CLI - www.wordshell.net
>
>
>
> ------------------------------
>
> Message: 3
> Date: Mon, 25 Nov 2013 09:16:46 +0000
> From: Azizur Rahman <prodevstudio+wordpress at gmail.com>
> To: "wp-hackers at lists.automattic.com"
>         <wp-hackers at lists.automattic.com>
> Subject: Re: [wp-hackers] Tracking memory usage without turning
>         plugins on/off one-by-one
> Message-ID:
>         <CAAYGKatwmFRVjACQkRRjowt6V_X_Y76VWh0btWBU=
> 6afHrwe8Q at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
>
> You can use PHP: Xhprof to profile everything and get some useful details.
> http://us2.php.net/xhprof
>
> Kind Regards,
> Azizur Rahman
>
> ----
> Do you need cost-effective web hosting solution and Domain name try
> http://prodevstudio.com
>
> Missed the last Friday Khutbah, try catchup a Khutbah on-line now at
> http://fridaykhutbah.com
>
>
> On Mon, Nov 25, 2013 at 7:40 AM, David Anderson <david at wordshell.net>
> wrote:
>
> > Hi,
> >
> > Is there a good, efficient way to track the memory usage of
> plugins/themes
> > in WordPress other than "turn them on/off one by one"? Not just final
> > memory usage (after everything's loaded), but peak memory usage too?
> >
> > e.g. Can is there a good way to answer questions like "when the peak
> > memory usage during load is hit, which parts of WordPress were the main
> > culprits?"
> >
> > Many thanks,
> > David
> >
> > --
> > WordShell - WordPress fast from the CLI - www.wordshell.net
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
> ------------------------------
>
> Subject: Digest Footer
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
>
> ------------------------------
>
> End of wp-hackers Digest, Vol 106, Issue 36
> *******************************************
>



-- 
Adam Silverstein
Website Development & Hosting
Earthbound.com * 970.872.4421 * 800.399.4085

From tcbarrett at gmail.com  Tue Nov 26 21:48:36 2013
From: tcbarrett at gmail.com (Tom Barrett)
Date: Tue, 26 Nov 2013 21:48:36 +0000
Subject: [wp-hackers] Best way to allow slug rewrite of CPT via i18n
Message-ID: <CAEgmxaaO50yuv-TzYbCcqox5PjFy=ytoQ4dGeN-v2tOc1jHU2Q@mail.gmail.com>

Hello

What is the best way to allow the of a custom post type to change via
translation.

I'm currently doing this:
   'rewrite'  => array( 'slug' => __( 'glossary', WPG_TEXTDOMAIN ) ),

Is that good?

Thanks!
-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From nl at thoughtrefinery.com  Tue Nov 26 21:52:48 2013
From: nl at thoughtrefinery.com (Nicholas Ciske)
Date: Tue, 26 Nov 2013 15:52:48 -0600
Subject: [wp-hackers] Best way to allow slug rewrite of CPT via i18n
In-Reply-To: <CAEgmxaaO50yuv-TzYbCcqox5PjFy=ytoQ4dGeN-v2tOc1jHU2Q@mail.gmail.com>
References: <CAEgmxaaO50yuv-TzYbCcqox5PjFy=ytoQ4dGeN-v2tOc1jHU2Q@mail.gmail.com>
Message-ID: <FAE2C212-6388-4F8A-ABD0-43F28738A34D@thoughtrefinery.com>


You probably want to run it through sanitize_title before you attempt to use it... lest a wily translator blow up your permalinks ;-)

http://codex.wordpress.org/Function_Reference/sanitize_title
_________________________
Nick Ciske
http://thoughtrefinery.com/
@nciske	

On Nov 26, 2013, at 3:48 PM, Tom Barrett wrote:

> Hello
> 
> What is the best way to allow the of a custom post type to change via
> translation.
> 
> I'm currently doing this:
>   'rewrite'  => array( 'slug' => __( 'glossary', WPG_TEXTDOMAIN ) ),
> 
> Is that good?
> 
> Thanks!
> -- 
> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> http://twitter.com/tcbarrett


From nikolov.tmw at gmail.com  Tue Nov 26 21:59:23 2013
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Tue, 26 Nov 2013 23:59:23 +0200
Subject: [wp-hackers] Best way to allow slug rewrite of CPT via i18n
In-Reply-To: <FAE2C212-6388-4F8A-ABD0-43F28738A34D@thoughtrefinery.com>
References: <CAEgmxaaO50yuv-TzYbCcqox5PjFy=ytoQ4dGeN-v2tOc1jHU2Q@mail.gmail.com>
 <FAE2C212-6388-4F8A-ABD0-43F28738A34D@thoughtrefinery.com>
Message-ID: <CAOwx47e0KfYmeZEHTfewrFrhrVi==SzH3KRD8N7xxkVQTU3ekA@mail.gmail.com>

Just a warning here, consider the following situation:

 - Multilingual site(whichever plugin).
 - Multiple languages, each with it's own translation file(therefore each
one declaring it's own slug for your post type).
 - The user regenerates the permalinks by going to Settings > Permalinks.
Only the permalinks with the currently active language's slug are
regenerated. All translation permalinks are not.
 - You go to the front-end and visit the site in a different language. Your
links now use the correct slug for that language, but they end-up in 404's.

I know that ultimately it's great to be able to have different slugs for
each language, but it's really difficult to do so.

A different approach that I can suggest is to use a plugin option to set
the slug(from a settings page). This way, the slug can still be changed and
if anyone else is trying to create multiple rewrite rules for your
plugin(for each language for instance), they are still able to do so.

While working on my own multilingual plugin, I came across that situation -
I wanted to let the user define a unique slug for each language - in the
end it mostly worked, but with a lot of hacking.

So, my advice is - make the slug dynamic via a plugin option and that's it.


On Tue, Nov 26, 2013 at 11:52 PM, Nicholas Ciske <nl at thoughtrefinery.com>wrote:

>
> You probably want to run it through sanitize_title before you attempt to
> use it... lest a wily translator blow up your permalinks ;-)
>
> http://codex.wordpress.org/Function_Reference/sanitize_title
> _________________________
> Nick Ciske
> http://thoughtrefinery.com/
> @nciske
>
> On Nov 26, 2013, at 3:48 PM, Tom Barrett wrote:
>
> > Hello
> >
> > What is the best way to allow the of a custom post type to change via
> > translation.
> >
> > I'm currently doing this:
> >   'rewrite'  => array( 'slug' => __( 'glossary', WPG_TEXTDOMAIN ) ),
> >
> > Is that good?
> >
> > Thanks!
> > --
> > http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> > http://twitter.com/tcbarrett
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Tue Nov 26 21:59:13 2013
From: otto at ottodestruct.com (Otto)
Date: Tue, 26 Nov 2013 15:59:13 -0600
Subject: [wp-hackers] Best way to allow slug rewrite of CPT via i18n
In-Reply-To: <FAE2C212-6388-4F8A-ABD0-43F28738A34D@thoughtrefinery.com>
References: <CAEgmxaaO50yuv-TzYbCcqox5PjFy=ytoQ4dGeN-v2tOc1jHU2Q@mail.gmail.com>
 <FAE2C212-6388-4F8A-ABD0-43F28738A34D@thoughtrefinery.com>
Message-ID: <CAD-Fghz94aGCbTrCFnJwvwyP+6EiNyrprwp1Q+rCGfaJxHkrvQ@mail.gmail.com>

Three things:

- What Nicholas said about sanitizing it as a title, so that your
urls don't break
- You'll probably want to use _x to define a context for this, to allow it
to be a separate translation for this use of "glossary" from any others you
might have elsewhere
- You can't use a defined constant for the text domain, it needs to be a
plain string

So, like this:

   'rewrite'  => array( 'slug' => sanitize_title( _x( 'glossary', 'rewrite
slug', 'wp-glossary' ) ) ),

-Otto


On Tue, Nov 26, 2013 at 3:52 PM, Nicholas Ciske <nl at thoughtrefinery.com>
wrote:
>
> You probably want to run it through sanitize_title before you attempt to
use it... lest a wily translator blow up your permalinks ;-)
>
> http://codex.wordpress.org/Function_Reference/sanitize_title
> _________________________
> Nick Ciske
> http://thoughtrefinery.com/
> @nciske
>
> On Nov 26, 2013, at 3:48 PM, Tom Barrett wrote:
>
>> Hello
>>
>> What is the best way to allow the of a custom post type to change via
>> translation.
>>
>> I'm currently doing this:
>>   'rewrite'  => array( 'slug' => __( 'glossary', WPG_TEXTDOMAIN ) ),
>>
>> Is that good?
>>
>> Thanks!
>> --
>> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
>> http://twitter.com/tcbarrett
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From jbutkus at time.ly  Wed Nov 27 13:38:12 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Wed, 27 Nov 2013 15:38:12 +0200
Subject: [wp-hackers] Using constants for text domain
Message-ID: <5295F5C4.6040407@time.ly>

Hi all.

In a recent response to "Best way to allow slug rewrite of CPT via i18n" 
by Otto I saw him warning against use of defined constant for the text 
domain.

What is the reasoning behind this, are there any exceptions to this rule?

We are proxying calls to gettext functions (__, _x, ...) family via our 
class, so the result is much like this:
```
class PluginPrefix_Foo {

     public function __( $string ) {
         return __( $string, PLUGINPREFIX_TEXT_DOMAIN );
     }

}
```


-- 
Regards,
Justas Butkus

From jdg at codesymphony.co  Wed Nov 27 13:57:40 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Wed, 27 Nov 2013 08:57:40 -0500
Subject: [wp-hackers] Using constants for text domain
In-Reply-To: <5295F5C4.6040407@time.ly>
References: <5295F5C4.6040407@time.ly>
Message-ID: <91601C33-47BB-4E38-9938-4642016EC7EB@codesymphony.co>

The reason that your setup is a bad idea is because it won?t be possible to generate the POT file automatically with the available programs. Your text domain should always be a string, otherwise the POT generators won?t pick it up properly. The same also goes for the strings being gettexted, which is why, although your system will work, it won?t be easy to generate your POT files automatically. The POT generator won?t recognize your functions as gettext functions, so it won?t pick up those strings either.

-J.D.

On Nov 27, 2013, at 8:38 AM, Justas Butkus <jbutkus at time.ly> wrote:

> Hi all.
> 
> In a recent response to "Best way to allow slug rewrite of CPT via i18n" by Otto I saw him warning against use of defined constant for the text domain.
> 
> What is the reasoning behind this, are there any exceptions to this rule?
> 
> We are proxying calls to gettext functions (__, _x, ...) family via our class, so the result is much like this:
> ```
> class PluginPrefix_Foo {
> 
>    public function __( $string ) {
>        return __( $string, PLUGINPREFIX_TEXT_DOMAIN );
>    }
> 
> }
> ```
> 
> 
> -- 
> Regards,
> Justas Butkus
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From jbutkus at time.ly  Wed Nov 27 14:03:02 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Wed, 27 Nov 2013 16:03:02 +0200
Subject: [wp-hackers] Using constants for text domain
In-Reply-To: <91601C33-47BB-4E38-9938-4642016EC7EB@codesymphony.co>
References: <5295F5C4.6040407@time.ly>
 <91601C33-47BB-4E38-9938-4642016EC7EB@codesymphony.co>
Message-ID: <5295FB96.2040404@time.ly>

Given that we generate the POT files on our own (extending existing 
tools, i.e. MakePOT) - these issues seems to be related only to building 
of the release package, and not running the script itself? Or am I still 
missing something?

While the benefit of that seems the possibility to catch text-domain 
misuse error early. I mean with function call it either fails, if you 
mistype it's name, or returns the correct result, and the process is 
reentrable. Whilst using static text string it may get silently ignored, 
creating new text domains.


-- 
Thanks for the response,
Justas Butkus

2013.11.27 15:57, J.D. Grimes ra??:
> The reason that your setup is a bad idea is because it won?t be possible to generate the POT file automatically with the available programs. Your text domain should always be a string, otherwise the POT generators won?t pick it up properly. The same also goes for the strings being gettexted, which is why, although your system will work, it won?t be easy to generate your POT files automatically. The POT generator won?t recognize your functions as gettext functions, so it won?t pick up those strings either.
>
> -J.D.


From lists at rotorised.com  Wed Nov 27 14:07:16 2013
From: lists at rotorised.com (Ryan McCue)
Date: Thu, 28 Nov 2013 00:07:16 +1000
Subject: [wp-hackers] Using constants for text domain
In-Reply-To: <5295F5C4.6040407@time.ly>
References: <5295F5C4.6040407@time.ly>
Message-ID: <5295FC94.5080208@rotorised.com>

Justas Butkus wrote:
> What is the reasoning behind this, are there any exceptions to this rule?

The reason it's a bad idea is because the static analysis tools used to
generate the POT files won't recognise it automatically.

It's OK if you're writing your own generation scripts, but some people
will parse the code themselves (using POEdit/etc), so you may want to
mention it in your documentation.

-- 
Ryan McCue
<http://ryanmccue.info/>

From eric.andrew.lewis at gmail.com  Wed Nov 27 14:29:21 2013
From: eric.andrew.lewis at gmail.com (Eric Andrew Lewis)
Date: Wed, 27 Nov 2013 09:29:21 -0500
Subject: [wp-hackers] Recommendation for Calendar / Events Solution
Message-ID: <CAMi+fEkAzzbGZLKqq7uNPwjDmNfVmdb3C9e3UKr_CvmP-BjY2w@mail.gmail.com>

A client of mine is using Events+ by WPMU.

I'm worried that, as events and calendars are a (relatively) tough thing to
implement from the developer side, it may not be extensible to cover a
plethora of use cases.

Does anyone have a hard recommendation for a calendar / events plugin that
has a strong backend (without going into specific features)?

Eric Andrew Lewis
ericandrewlewis.com
610.715.8560

From jbutkus at time.ly  Wed Nov 27 14:30:24 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Wed, 27 Nov 2013 16:30:24 +0200
Subject: [wp-hackers] Using constants for text domain
In-Reply-To: <5295FC94.5080208@rotorised.com>
References: <5295F5C4.6040407@time.ly> <5295FC94.5080208@rotorised.com>
Message-ID: <52960200.3030405@time.ly>

Thank you for explaining.

As I said - we are doing this to allow easier modification, if any would 
be needed (despite anything - it's still easier to change one function, 
than all usage places) and catch errors (those who haven't ever made a 
mistake may throw their bits and bytes at me).


-- 
Regards,
Justas Butkus

2013.11.27 16:07, Ryan McCue ra??:
> The reason it's a bad idea is because the static analysis tools used to
> generate the POT files won't recognise it automatically.
>
> It's OK if you're writing your own generation scripts, but some people
> will parse the code themselves (using POEdit/etc), so you may want to
> mention it in your documentation.


From johnbillion+wp at gmail.com  Wed Nov 27 14:48:35 2013
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Wed, 27 Nov 2013 14:48:35 +0000
Subject: [wp-hackers] Recommendation for Calendar / Events Solution
In-Reply-To: <CAMi+fEkAzzbGZLKqq7uNPwjDmNfVmdb3C9e3UKr_CvmP-BjY2w@mail.gmail.com>
References: <CAMi+fEkAzzbGZLKqq7uNPwjDmNfVmdb3C9e3UKr_CvmP-BjY2w@mail.gmail.com>
Message-ID: <CAOqAKWCeiK2+_Ns=o3nUCHhe5EQFLVq9bR8P3P0emraFNo9YwQ@mail.gmail.com>

Event Organiser is a particularly well-featured plugin, and it has a good
API which is well documented. http://wordpress.org/plugins/event-organiser/


On 27 November 2013 14:29, Eric Andrew Lewis <eric.andrew.lewis at gmail.com>wrote:

> A client of mine is using Events+ by WPMU.
>
> I'm worried that, as events and calendars are a (relatively) tough thing to
> implement from the developer side, it may not be extensible to cover a
> plethora of use cases.
>
> Does anyone have a hard recommendation for a calendar / events plugin that
> has a strong backend (without going into specific features)?
>
> Eric Andrew Lewis
> ericandrewlewis.com
> 610.715.8560
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jdg at codesymphony.co  Wed Nov 27 15:34:30 2013
From: jdg at codesymphony.co (J.D. Grimes)
Date: Wed, 27 Nov 2013 10:34:30 -0500
Subject: [wp-hackers] Using constants for text domain
In-Reply-To: <5295FB96.2040404@time.ly>
References: <5295F5C4.6040407@time.ly>
 <91601C33-47BB-4E38-9938-4642016EC7EB@codesymphony.co>
 <5295FB96.2040404@time.ly>
Message-ID: <135C642E-751B-4BC8-A2ED-058DB17EC64B@codesymphony.co>


On Nov 27, 2013, at 9:03 AM, Justas Butkus <jbutkus at time.ly> wrote:

> While the benefit of that seems the possibility to catch text-domain misuse error early. I mean with function call it either fails, if you mistype it's name, or returns the correct result, and the process is reentrable. Whilst using static text string it may get silently ignored, creating new text domains.

I also worry about those mistakes, which is why I created this: https://github.com/JDGrimes/wp-l10n-validator

From jbutkus at time.ly  Wed Nov 27 15:50:49 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Wed, 27 Nov 2013 17:50:49 +0200
Subject: [wp-hackers] Using constants for text domain
In-Reply-To: <135C642E-751B-4BC8-A2ED-058DB17EC64B@codesymphony.co>
References: <5295F5C4.6040407@time.ly>
 <91601C33-47BB-4E38-9938-4642016EC7EB@codesymphony.co>
 <5295FB96.2040404@time.ly>
 <135C642E-751B-4BC8-A2ED-058DB17EC64B@codesymphony.co>
Message-ID: <529614D9.6010702@time.ly>

2013.11.27 17:34, J.D. Grimes ra??:
> I also worry about those mistakes, which is why I created this: https://github.com/JDGrimes/wp-l10n-validator

Seems like this might have found it's place within PHP_CodeSniffer, as 
part of some (or independent) ruleset.

Thank you for sharing.


-- 
Regards,
Justas Butkus

From chris at lod.com  Wed Nov 27 16:54:05 2013
From: chris at lod.com (Chris McCoy)
Date: Wed, 27 Nov 2013 11:54:05 -0500
Subject: [wp-hackers] Recommendation for Calendar / Events Solution
In-Reply-To: <CAMi+fEkAzzbGZLKqq7uNPwjDmNfVmdb3C9e3UKr_CvmP-BjY2w@mail.gmail.com>
References: <CAMi+fEkAzzbGZLKqq7uNPwjDmNfVmdb3C9e3UKr_CvmP-BjY2w@mail.gmail.com>
Message-ID: <CEBB8D73.5246%chris@lod.com>

I like, and recommend events calendar by tri.be to clients

they have a free version and a pro version

http://tri.be/shop/wordpress-events-calendar/


http://tri.be/shop/wordpress-events-calendar-pro/


hope this helps

On 11/27/2013, 9:29 AM, "Eric Andrew Lewis" <eric.andrew.lewis at gmail.com>
wrote:

>A client of mine is using Events+ by WPMU.
>
>I'm worried that, as events and calendars are a (relatively) tough thing
>to
>implement from the developer side, it may not be extensible to cover a
>plethora of use cases.
>
>Does anyone have a hard recommendation for a calendar / events plugin that
>has a strong backend (without going into specific features)?
>
>Eric Andrew Lewis
>ericandrewlewis.com
>610.715.8560
>_______________________________________________
>wp-hackers mailing list
>wp-hackers at lists.automattic.com
>http://lists.automattic.com/mailman/listinfo/wp-hackers



From otto at ottodestruct.com  Wed Nov 27 19:28:38 2013
From: otto at ottodestruct.com (Otto)
Date: Wed, 27 Nov 2013 13:28:38 -0600
Subject: [wp-hackers] Using constants for text domain
In-Reply-To: <5295F5C4.6040407@time.ly>
References: <5295F5C4.6040407@time.ly>
Message-ID: <CAD-Fghx7meD+qy-Rstp10_YCjMmnS71E-VzrmNUEPub0C_0k9Q@mail.gmail.com>

On Wed, Nov 27, 2013 at 7:38 AM, Justas Butkus <jbutkus at time.ly> wrote:
>
> We are proxying calls to gettext functions (__, _x, ...) family via our
> class, so the result is much like this:
> ```
> class PluginPrefix_Foo {
>
>     public function __( $string ) {
>         return __( $string, PLUGINPREFIX_TEXT_DOMAIN );
>     }
>
> }
> ```
>
>
... and that fails on two entirely different levels. ;)

Rather than explain in great detail, I'll refer you to three of my posts:

1.
http://ottopress.com/2012/internationalization-youre-probably-doing-it-wrong/

2. http://ottopress.com/2012/more-internationalization-fun/

3. http://ottopress.com/2013/language-packs-101-prepwork/

The first one will explain why using $string and PLUGINPREFIX_TEXT_DOMAIN
are incorrect.

The second one will make you aware of a few more functions you might not
know about.

The third will tell you how to refactor a bit so that you can properly
support the upcoming Language Pack system in WordPress.

If you have questions, ask. :)

-Otto

From otto at ottodestruct.com  Wed Nov 27 19:46:57 2013
From: otto at ottodestruct.com (Otto)
Date: Wed, 27 Nov 2013 13:46:57 -0600
Subject: [wp-hackers] Using constants for text domain
In-Reply-To: <5295FB96.2040404@time.ly>
References: <5295F5C4.6040407@time.ly>
 <91601C33-47BB-4E38-9938-4642016EC7EB@codesymphony.co>
 <5295FB96.2040404@time.ly>
Message-ID: <CAD-Fghz0RU0j-tNF6hSMsn2HpfQ-ep4NYWOAXjpa1vOTsvekRw@mail.gmail.com>

On Wed, Nov 27, 2013 at 8:03 AM, Justas Butkus <jbutkus at time.ly> wrote:

> Given that we generate the POT files on our own (extending existing tools,
> i.e. MakePOT) - these issues seems to be related only to building of the
> release package, and not running the script itself? Or am I still missing
> something?
>

What you're missing here is that your wrapper system required you to build
a whole extra process to build the POT files yourself instead of using
standard tools that somebody else built.

If you want to manually handle your translations, then that's fine and you
can do it how you please. I'd prefer to not have to handle my own
translations, and to use standardized tools to let me crowdsource them. Or
even better, to offload the whole process to WordPress.org and gain
benefits like speed and smaller filesizes.

Imagine a system where the WordPress.org plugin/theme directory
automatically scans all plugins/themes and builds POT files for you. Then
it uploads them into a GlotPress instance, allowing translators all over
the world to work together to build various language packs for them.
Strings used in one plugin/theme can be quickly translated in a different
one, through suggestions generated by textual similarities. A big database
of all strings used in all plugin/theme code, with translations provided
and approved by the user communities themselves. Automated PO/MO file
generation. Automated updates to users, separate from the plugin/theme. No
more bumping versions just to get updated language packs out there.

For such a grandiose system to actually work, those __() function calls
need to be machine-readable. No PHP variables. No PHP constants. Just plain
strings. C'mon, work with us here.

-Otto

From jbutkus at time.ly  Thu Nov 28 08:16:28 2013
From: jbutkus at time.ly (Justas Butkus)
Date: Thu, 28 Nov 2013 10:16:28 +0200
Subject: [wp-hackers] Using constants for text domain
In-Reply-To: <CAD-Fghx7meD+qy-Rstp10_YCjMmnS71E-VzrmNUEPub0C_0k9Q@mail.gmail.com>
References: <5295F5C4.6040407@time.ly>
 <CAD-Fghx7meD+qy-Rstp10_YCjMmnS71E-VzrmNUEPub0C_0k9Q@mail.gmail.com>
Message-ID: <5296FBDC.6040601@time.ly>

2013.11.27 21:28, Otto ra??:
> ... and that fails on two entirely different levels. ;)
>
> Rather than explain in great detail, I'll refer you to three of my posts:
>
> 1.
> http://ottopress.com/2012/internationalization-youre-probably-doing-it-wrong/
>
> 2. http://ottopress.com/2012/more-internationalization-fun/
>
> 3. http://ottopress.com/2013/language-packs-101-prepwork/
>
> The first one will explain why using $string and PLUGINPREFIX_TEXT_DOMAIN
> are incorrect.
>
> The second one will make you aware of a few more functions you might not
> know about.
>
> The third will tell you how to refactor a bit so that you can properly
> support the upcoming Language Pack system in WordPress.
>
> If you have questions, ask. :)
Hello.

Thank you, Otto, for taking time. I will only respond to this message, 
as I see your other message repeats, in some portions, what you have 
posted previously on your blog.

I believe it's quite obvious that the last entry from your blog makes 
the greatest impression.
We have been employing some internal solution based on GlotPress, 
despite we are not providing translations of our own, except for the 
one, that users contribute, and that takes time to review, adjust, etc. 
for inclusion in some release.

Even if language packs are not yet available and built on WordPress - we 
are very likely to change our build process.
Though as plugin-specific class was introduced for several reasons, it's 
likely to stay in development environment, but as long as we employ 
tools, which operate on AST level, it might be rather trivial to replace 
the calls to our methods to their counterpart methods from WordPress 
stack, modifying and/or amending arguments as needed.

While two first articles are interesting, but I believe anyone working 
in a multinational team is likely to learn fast and early, that grammar 
is not alike across languages. Actually on your second article I am 
missing information about plural forms, which allow virtually infinite 
translation table entries for `_n` family calls, bottom line being that 
WordPress handles it the way it should.

Another thing which keeps me interested for quite long - how well 
translators, who have nil programming experience, handle variable 
swapping - given initial entry is '%d', how likely a translator is to 
change it to '%3$d'. That either tells me, that we have to always put 
full specifier ('I will have %1$d tacos and %2$d buritos'), or turn to 
using non-positional system, like 'I will have {number_tacos} tacos and 
{number_buritos} buritos', which would be later replaced with 
appropriate values, but that might also cause the confusion, when 
translator might decide to change '{number_tacos}' to '{@!#!@_!@#@!}'. 
But this is clearly not the point of this discussion.

One last thing remains on my mind, which is likely to generate some 
heat, which I would like to avoid, but I can't ignore the issue. The 
performance case. Assume we know, that we are going to call `date_i18n` 
some thousand times during a page load. With just three distinct forms 
which all are static and used within a single loop that has no external 
dependency, thus voiding possibility of translation string modification 
in between. Just for the sake of discussion - assume, that we have a way 
to ensure, that no dynamic elements are to be introduced in the final 
string. In that sense it seems kind of logical, to use intermediate 
representation, which generates the resulting string, which might then 
be passed to some simplified date (timestamp) formatter. As I said - 
just for the sake of discussion it would be good if we could assume we 
have really analysed the data, intermediate forms, resulting forms as 
well as resolved date adjustment issues. Also I would prefer to not get 
into the discussion about incremental loading and the likes here. What's 
your view on this issue? As using some cache might shave a full second, 
resulting in generously acceptable, instead of terribly slow. This is 
accidentally last - it's important to us, and we have employed several 
different solutions.

Once again - thank you for your kind responses. And for pointing at the 
planned introduction of language packs - which seems like a really 
awesome addition to WordPress.



-- 
Regards,
Justas Butkus

From tcbarrett at gmail.com  Thu Nov 28 08:47:15 2013
From: tcbarrett at gmail.com (Tom Barrett)
Date: Thu, 28 Nov 2013 08:47:15 +0000
Subject: [wp-hackers] Best way to allow slug rewrite of CPT via i18n
In-Reply-To: <CAD-Fghz94aGCbTrCFnJwvwyP+6EiNyrprwp1Q+rCGfaJxHkrvQ@mail.gmail.com>
References: <CAEgmxaaO50yuv-TzYbCcqox5PjFy=ytoQ4dGeN-v2tOc1jHU2Q@mail.gmail.com>
 <FAE2C212-6388-4F8A-ABD0-43F28738A34D@thoughtrefinery.com>
 <CAD-Fghz94aGCbTrCFnJwvwyP+6EiNyrprwp1Q+rCGfaJxHkrvQ@mail.gmail.com>
Message-ID: <CAEgmxaaOa7q12aGbut_dOLmg6UaDr+Dgbeiu0kGShH=5HbJPcg@mail.gmail.com>

Thank you!

*adds to list updates for next version*

// Sent by Nexus
On 26 Nov 2013 22:00, "Otto" <otto at ottodestruct.com> wrote:

> Three things:
>
> - What Nicholas said about sanitizing it as a title, so that your
> urls don't break
> - You'll probably want to use _x to define a context for this, to allow it
> to be a separate translation for this use of "glossary" from any others you
> might have elsewhere
> - You can't use a defined constant for the text domain, it needs to be a
> plain string
>
> So, like this:
>
>    'rewrite'  => array( 'slug' => sanitize_title( _x( 'glossary', 'rewrite
> slug', 'wp-glossary' ) ) ),
>
> -Otto
>
>
> On Tue, Nov 26, 2013 at 3:52 PM, Nicholas Ciske <nl at thoughtrefinery.com>
> wrote:
> >
> > You probably want to run it through sanitize_title before you attempt to
> use it... lest a wily translator blow up your permalinks ;-)
> >
> > http://codex.wordpress.org/Function_Reference/sanitize_title
> > _________________________
> > Nick Ciske
> > http://thoughtrefinery.com/
> > @nciske
> >
> > On Nov 26, 2013, at 3:48 PM, Tom Barrett wrote:
> >
> >> Hello
> >>
> >> What is the best way to allow the of a custom post type to change via
> >> translation.
> >>
> >> I'm currently doing this:
> >>   'rewrite'  => array( 'slug' => __( 'glossary', WPG_TEXTDOMAIN ) ),
> >>
> >> Is that good?
> >>
> >> Thanks!
> >> --
> >> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> >> http://twitter.com/tcbarrett
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From jpollock412 at gmail.com  Thu Nov 28 20:06:47 2013
From: jpollock412 at gmail.com (Josh Pollock)
Date: Thu, 28 Nov 2013 15:06:47 -0500
Subject: [wp-hackers] HHow do you use WordPress's built in spinner?
In-Reply-To: <CA+-Vqo8gYYqjtVG2jKhSTRPhArHwVnB8HKWbriBtb+RTQOytTQ@mail.gmail.com>
References: <CA+-Vqo8gYYqjtVG2jKhSTRPhArHwVnB8HKWbriBtb+RTQOytTQ@mail.gmail.com>
Message-ID: <CAHVkt5nNwuHzVhSZ7H4YY7w0zn6h_fVgjkhMNyD8LZvrRC64sQ@mail.gmail.com>

This is an old thread, but I have the same question and thought I'd share
my detective work.

Source for the gif is /wp-admin/images/spinner-2x.gif. In the admin
it's in .postbox
.spinner which has its display property set to none. This means you'd be
able to use it very easily, would just need to use a few lines of jQuery to
show and hide it.



On Tue, Nov 19, 2013 at 11:31 PM, Funkatron <funkatronic at gmail.com> wrote:

> So Wordpress uses a wating spinner to indicate when its doing something,
> like when you hit the submit button when you are doing something AJAX-y.  I
> was wondering how exactly do you replicate this if a developer wanted to
> use it for their plugins?  I can't seem to replicate it.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From danielx386 at gmail.com  Fri Nov 29 00:23:43 2013
From: danielx386 at gmail.com (Daniel)
Date: Fri, 29 Nov 2013 11:23:43 +1100
Subject: [wp-hackers] Debugging some strange error
Message-ID: <CAJ5Hi2hh5dgkOMuOzzqZ7_b_=eN9m585vXFpnk=SbLDGbVvG6A@mail.gmail.com>

Hi guys,

Just wondering, how many of you been in a position where you know that
there a bug in your plugin/theme, you know what condition that it will
happen but you are unable to work out why?

Right now I'm debugging a theme that I've picked up from someone else,
that also integrate into phpBB.

The wordpress comment feature will work fine IF:
- User is logged into both wordpress and phpbb (it will happen when a
user logs into phpBB then go to the blog)
- There are matching accounts on both database
- There are no comments with the user ID 0.in the wp_comment table

The issue start when someone makes a comment when they are not logged
in (both wordpress and phpBB). The error that get outputted is

/home/xxx/public_html/wp-content/themes/phpBB/includes/wp_phpbb_bridge_core.php
on line 915: Creating default object from empty value.

Would anyone have any ideas on how I can go about debugging it? Also
please note that most of it wasn't written by me so there may be
something that been missed and I have not been able to pick up on it.

The file in question:
https://github.com/Danielx64/WP-phpbb-bridge/blob/master/phpBB-WordPress-bridge/Bridge-phpBB-WordPress/wordpress/wp-content/themes/phpBB/includes/wp_phpbb_bridge_core.php#L915

As per before, credit will be given for anyone who can help me nut
this one out :)

Regards,
Daniel

From lists at rotorised.com  Fri Nov 29 00:27:11 2013
From: lists at rotorised.com (Ryan McCue)
Date: Fri, 29 Nov 2013 10:27:11 +1000
Subject: [wp-hackers] Debugging some strange error
In-Reply-To: <CAJ5Hi2hh5dgkOMuOzzqZ7_b_=eN9m585vXFpnk=SbLDGbVvG6A@mail.gmail.com>
References: <CAJ5Hi2hh5dgkOMuOzzqZ7_b_=eN9m585vXFpnk=SbLDGbVvG6A@mail.gmail.com>
Message-ID: <5297DF5F.9080208@rotorised.com>

Daniel wrote:
> /home/xxx/public_html/wp-content/themes/phpBB/includes/wp_phpbb_bridge_core.php
> on line 915: Creating default object from empty value.
> 
> Would anyone have any ideas on how I can go about debugging it? Also
> please note that most of it wasn't written by me so there may be
> something that been missed and I have not been able to pick up on it.

At this point in the code, $wp_poster_id is either 0 or falsey
(false/null), *not* an object. You're setting properties on it and
assuming it's an object, which is casting the falsey value to an object
and giving you that notice.

Try: $wp_poster_data = new WP_User;

Also, questions like this are probably better asked on Stack Overflow. :)

-- 
Ryan McCue
<http://ryanmccue.info/>

From danielx386 at gmail.com  Fri Nov 29 00:50:54 2013
From: danielx386 at gmail.com (Daniel)
Date: Fri, 29 Nov 2013 11:50:54 +1100
Subject: [wp-hackers] Debugging some strange error
In-Reply-To: <5297DF5F.9080208@rotorised.com>
References: <CAJ5Hi2hh5dgkOMuOzzqZ7_b_=eN9m585vXFpnk=SbLDGbVvG6A@mail.gmail.com>
 <5297DF5F.9080208@rotorised.com>
Message-ID: <CAJ5Hi2jByTCjmW2KCJv2nidCeYtOpqdoZtURw80R7wG67a8x8A@mail.gmail.com>

Hi Ryan,

Thank-you for letting me know about that, I will give it a try and let
you know how it goes :) I was going to go to Stack Overflow but I
wasn't sure when it the right time to go over there.

Regards,
Daniel






On Fri, Nov 29, 2013 at 11:27 AM, Ryan McCue <lists at rotorised.com> wrote:
> Daniel wrote:
>> /home/xxx/public_html/wp-content/themes/phpBB/includes/wp_phpbb_bridge_core.php
>> on line 915: Creating default object from empty value.
>>
>> Would anyone have any ideas on how I can go about debugging it? Also
>> please note that most of it wasn't written by me so there may be
>> something that been missed and I have not been able to pick up on it.
>
> At this point in the code, $wp_poster_id is either 0 or falsey
> (false/null), *not* an object. You're setting properties on it and
> assuming it's an object, which is casting the falsey value to an object
> and giving you that notice.
>
> Try: $wp_poster_data = new WP_User;
>
> Also, questions like this are probably better asked on Stack Overflow. :)
>
> --
> Ryan McCue
> <http://ryanmccue.info/>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From filippo.pisano at gmail.com  Fri Nov 29 10:49:30 2013
From: filippo.pisano at gmail.com (Filippo Pisano)
Date: Fri, 29 Nov 2013 11:49:30 +0100
Subject: [wp-hackers] Child Themes in OOP flavour
Message-ID: <CABCyq-m3opHgAwvoh-brQf6O_2XsCdR9YbEt2SYoQNCAs5WA6g@mail.gmail.com>

Dear hackers,


I usually work with themes using OOP and classes to keep my code and
namespaces well organized and clean. The only limitation I have found with
this approach regards the use of child themes.
As you know, child themes' functions.php is *always* loaded before the
parent theme's one thus making impossible to create a hierarchical OO class
structrure between child and parent theme.
What I'd like to do is to use MyThemeClass as the parent class for
MyChildThemeClass (extended example: http://pastebin.com/KfufXTKM) and be
able to override parent's methods when needed.

By now the only way to obtain a similar result is through the pluggable
functions mechanism (if(!function_exists etc) which is limited to a non OO
oriented code (horrible prefixed functions).
Looking inside WP code there is no way to override the inclusion order of
template's file:

// Load the functions for the active theme, for both parent and child theme
if applicable.
if ( ! defined( 'WP_INSTALLING' ) || 'wp-activate.php' === $pagenow ) {
if ( TEMPLATEPATH !== STYLESHEETPATH && file_exists( STYLESHEETPATH .
'/functions.php' ) )
 include( STYLESHEETPATH . '/functions.php' );
if ( file_exists( TEMPLATEPATH . '/functions.php' ) )
 include( TEMPLATEPATH . '/functions.php' );
}

So my questions are: am I the only one using OO code with themes? Do you
really think that the pluggable mechanism is better than a stronger
hierarchical structure? Wouldn't it be better if template files inclusion
order was configurable?



F.

From info at toscho.de  Fri Nov 29 11:01:15 2013
From: info at toscho.de (Thomas Scholz)
Date: Fri, 29 Nov 2013 12:01:15 +0100
Subject: [wp-hackers] Child Themes in OOP flavour
In-Reply-To: <CABCyq-m3opHgAwvoh-brQf6O_2XsCdR9YbEt2SYoQNCAs5WA6g@mail.gmail.com>
References: <CABCyq-m3opHgAwvoh-brQf6O_2XsCdR9YbEt2SYoQNCAs5WA6g@mail.gmail.com>
Message-ID: <op.w7a4wdagr6yny2@fqdn.toscho.de>

Hi Filippo,

> As you know, child themes' functions.php is *always* loaded before the
> parent theme's one thus making impossible to create a hierarchical OO  
> class structrure between child and parent theme.
> What I'd like to do is to use MyThemeClass as the parent class for
> MyChildThemeClass (extended example: http://pastebin.com/KfufXTKM) and be
> able to override parent's methods when needed.

Offer a custom action in your parent theme:

# parent

new Parent_Theme;

class Parent_Theme
{
     public function __construct()
     {
         // set up autoloader, basic config etc, then
         do_action( 'parent_theme_loaded', $autoloader, $config, $this );
     }
}


# child

add_action( 'parent_theme_loaded', 'child_theme_init', 10, 3 );

function child_theme_init( $autoloader, $config, $parent )
{
     // load your classes, set up child theme config
}


Thomas

From nikolov.tmw at gmail.com  Fri Nov 29 11:08:25 2013
From: nikolov.tmw at gmail.com (Nikola Nikolov)
Date: Fri, 29 Nov 2013 13:08:25 +0200
Subject: [wp-hackers] Child Themes in OOP flavour
In-Reply-To: <op.w7a4wdagr6yny2@fqdn.toscho.de>
References: <CABCyq-m3opHgAwvoh-brQf6O_2XsCdR9YbEt2SYoQNCAs5WA6g@mail.gmail.com>
 <op.w7a4wdagr6yny2@fqdn.toscho.de>
Message-ID: <CAOwx47eqDJc9uCaOeUonuQh9Z7G=m6iYizDQXe75J6+=A7QjXw@mail.gmail.com>

What Thomas suggested, except for maybe I would hook onto the
'after_setup_theme' hook with priority 0 - the reason for this is that this
way you wouldn't be able to make a mistake - as in let's say that for some
reason you include another vital file(containing a class definition) after
you call your custom action - this way, you can get a fatal error(well
obviously that's something you can't miss, but still).

Anyway - my thinking is that it might be better to do extensions in the
child theme after the theme is completely set-up(this means all code in
child and parent theme's functions.php completes executing.


On Fri, Nov 29, 2013 at 1:01 PM, Thomas Scholz <info at toscho.de> wrote:

> Hi Filippo,
>
>
>  As you know, child themes' functions.php is *always* loaded before the
>> parent theme's one thus making impossible to create a hierarchical OO
>> class structrure between child and parent theme.
>> What I'd like to do is to use MyThemeClass as the parent class for
>> MyChildThemeClass (extended example: http://pastebin.com/KfufXTKM) and be
>> able to override parent's methods when needed.
>>
>
> Offer a custom action in your parent theme:
>
> # parent
>
> new Parent_Theme;
>
> class Parent_Theme
> {
>     public function __construct()
>     {
>         // set up autoloader, basic config etc, then
>         do_action( 'parent_theme_loaded', $autoloader, $config, $this );
>     }
> }
>
>
> # child
>
> add_action( 'parent_theme_loaded', 'child_theme_init', 10, 3 );
>
> function child_theme_init( $autoloader, $config, $parent )
> {
>     // load your classes, set up child theme config
> }
>
>
> Thomas
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From filippo.pisano at gmail.com  Fri Nov 29 11:10:14 2013
From: filippo.pisano at gmail.com (Filippo Pisano)
Date: Fri, 29 Nov 2013 12:10:14 +0100
Subject: [wp-hackers] Child Themes in OOP flavour
In-Reply-To: <CAOwx47eqDJc9uCaOeUonuQh9Z7G=m6iYizDQXe75J6+=A7QjXw@mail.gmail.com>
References: <CABCyq-m3opHgAwvoh-brQf6O_2XsCdR9YbEt2SYoQNCAs5WA6g@mail.gmail.com>
 <op.w7a4wdagr6yny2@fqdn.toscho.de>
 <CAOwx47eqDJc9uCaOeUonuQh9Z7G=m6iYizDQXe75J6+=A7QjXw@mail.gmail.com>
Message-ID: <CABCyq-=mkW6uACXtZmGFPfA-btwrUGpgWpHyOCBLfOujCeoRrA@mail.gmail.com>

Thank you guys,

your solutions are really interesting.
I'll give a try and reorder my code by adding a couple of actions.

Thank you!

Filippo Pisano
cel: 3291821355 / skype: filippopisano


On Fri, Nov 29, 2013 at 12:08 PM, Nikola Nikolov <nikolov.tmw at gmail.com>wrote:

> What Thomas suggested, except for maybe I would hook onto the
> 'after_setup_theme' hook with priority 0 - the reason for this is that this
> way you wouldn't be able to make a mistake - as in let's say that for some
> reason you include another vital file(containing a class definition) after
> you call your custom action - this way, you can get a fatal error(well
> obviously that's something you can't miss, but still).
>
> Anyway - my thinking is that it might be better to do extensions in the
> child theme after the theme is completely set-up(this means all code in
> child and parent theme's functions.php completes executing.
>
>
> On Fri, Nov 29, 2013 at 1:01 PM, Thomas Scholz <info at toscho.de> wrote:
>
> > Hi Filippo,
> >
> >
> >  As you know, child themes' functions.php is *always* loaded before the
> >> parent theme's one thus making impossible to create a hierarchical OO
> >> class structrure between child and parent theme.
> >> What I'd like to do is to use MyThemeClass as the parent class for
> >> MyChildThemeClass (extended example: http://pastebin.com/KfufXTKM) and
> be
> >> able to override parent's methods when needed.
> >>
> >
> > Offer a custom action in your parent theme:
> >
> > # parent
> >
> > new Parent_Theme;
> >
> > class Parent_Theme
> > {
> >     public function __construct()
> >     {
> >         // set up autoloader, basic config etc, then
> >         do_action( 'parent_theme_loaded', $autoloader, $config, $this );
> >     }
> > }
> >
> >
> > # child
> >
> > add_action( 'parent_theme_loaded', 'child_theme_init', 10, 3 );
> >
> > function child_theme_init( $autoloader, $config, $parent )
> > {
> >     // load your classes, set up child theme config
> > }
> >
> >
> > Thomas
> >
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From otto at ottodestruct.com  Fri Nov 29 11:35:26 2013
From: otto at ottodestruct.com (Otto)
Date: Fri, 29 Nov 2013 05:35:26 -0600
Subject: [wp-hackers] Child Themes in OOP flavour
In-Reply-To: <op.w7a4wdagr6yny2@fqdn.toscho.de>
References: <CABCyq-m3opHgAwvoh-brQf6O_2XsCdR9YbEt2SYoQNCAs5WA6g@mail.gmail.com>
 <op.w7a4wdagr6yny2@fqdn.toscho.de>
Message-ID: <CAD-Fghxzs1p64xGaoiN_SgO0rurM63-iOqgutfg6bynnqQcjCQ@mail.gmail.com>

On Fri, Nov 29, 2013 at 5:01 AM, Thomas Scholz <info at toscho.de> wrote:

> Offer a custom action in your parent theme:
>
>
Slightly easier way: Just wrap the child's classes in a function hooked to
after_setup_theme. Then the parent will be loaded and you can extend it as
you like.

-Otto

From david at wordshell.net  Sat Nov 30 17:17:13 2013
From: david at wordshell.net (David Anderson)
Date: Sat, 30 Nov 2013 17:17:13 +0000
Subject: [wp-hackers] Tracking memory usage without turning plugins
	on/off one-by-one
In-Reply-To: <mailman.499.1385404605.20500.wp-hackers@lists.automattic.com>
References: <mailman.499.1385404605.20500.wp-hackers@lists.automattic.com>
Message-ID: <529A1D99.90404@wordshell.net>

On 25/11/13 18:36, various hackers wrote:
> Found this the other day. Have not had a chance to try it.
>
> https://github.com/johnbillion/QueryMonitor
and
> Also possible
> http://wordpress.org/plugins/debug-objects/
and
> P3 works well: http://wordpress.org/plugins/p3-profiler/
>

Hi,

Thanks for the suggestions... I think I should have explained further..

In my original inquiry, I said - " e.g. Can is there a good way to 
answer questions like "when the peak memory usage during load is hit, 
which parts of WordPress were the main culprits?"

I don't see how any of the three suggestions above help with this, other 
than that they display the peak memory usage, and then I can turn my 
plugins on/off one-by-one (which is what I wanted to avoid, since I have 
around 32 of them). Am I missing something?

What I'm hoping to do is be able to correlate memory usage against 
execution flow. Such that I can get a report of what was using the 
memory at the moment that peak memory usage was hit.

The link to XHprof looks much more promising. I see there's a WordPress 
plugin - http://wordpress.org/plugins/wp-xhprof-profiler/ - not updated 
for 12 months, but that's probably recent enough to work.

Best wishes,
David


> -- 
> WordShell - WordPress fast from the CLI - www.wordshell.net

