From scribu at gmail.com  Fri May  1 08:10:21 2009
From: scribu at gmail.com (scribu)
Date: Fri May  1 08:11:24 2009
Subject: [wp-hackers] add_meta_box without checked?
In-Reply-To: <db047a770904301306y147b4508v850dddcabf159e37@mail.gmail.com>
References: <db047a770904301306y147b4508v850dddcabf159e37@mail.gmail.com>
Message-ID: <349fe48b0905010110k342a50b4o963251d9ac257fe5@mail.gmail.com>

You mean you want to add meta boxes that are hidden by default, right?

You could hook into an action after the metaboxes are added and
manually modify the option in wp_options.

-- 
http://scribu.net
From r at schestowitz.com  Fri May  1 09:13:13 2009
From: r at schestowitz.com (Roy Schestowitz)
Date: Fri May  1 08:26:01 2009
Subject: [wp-hackers] WP-Hackers Stats for April 2009
Message-ID: <49FABD29.7010903@schestowitz.com>

  ?  Times are Greenwich Mean Time (GMT) +0:00

  ?  Statistics span a period of one month

  ?  Subject line formatted consistently "WP-Hackers Stats for <MONTH>
<YEAR>"

  ?  Killfile <subject contains "WP-Hackers Stats for "> if uninterested
____________________________________________________________


Stats for wp-hackers
~~~~~~~~~~~~~~~~~~~~
***** People who have written most messages:
+----+-----Author-----------------------------------+--Msg-+-Percent-+
|  1 | scribu gmail.com                             |   31 |  7.29 % |
|  2 | mikeschinkel newclarity.net                  |   29 |  6.82 % |
|  3 | sojweb indiana.edu                           |   26 |  6.12 % |
|  4 | Jesse.Silverstein xerox.com                  |   17 |  4.00 % |
|  5 | otto ottodestruct.com                        |   17 |  4.00 % |
|  6 | simon sweetinteraction.com                   |   13 |  3.06 % |
|  7 | wp-hackers striderweb.com                    |   13 |  3.06 % |
|  8 | yahgrp poplarware.com                        |   12 |  2.82 % |
|  9 | =?UTF-8?Q?Ja=6E_E=72ik_M=6Fs=74=72=C3=B6?= = |   10 |  2.35 % |
| 10 | beau dentedreality.com.au                    |   10 |  2.35 % |
| 11 | fonsekaean gmail.com                         |    8 |  1.88 % |
| 12 | peter.westwood ftwr.co.uk                    |    8 |  1.88 % |
| 13 | regulatethis gmail.com                       |    8 |  1.88 % |
| 14 | casey.bisson gmail.com                       |    7 |  1.65 % |
| 15 | mdmartz sivel.net                            |    6 |  1.41 % |
| 16 | ncrice gmail.com                             |    6 |  1.41 % |
| 17 | bingorabbit gmail.com                        |    6 |  1.41 % |
| 18 | lynne.pope gmail.com                         |    6 |  1.41 % |
| 19 | frank bueltge.de                             |    6 |  1.41 % |
| 20 | public toppa.com                             |    5 |  1.18 % |
| 21 | dan sproutventure.com                        |    5 |  1.18 % |
| 22 | ryan boren.nu                                |    5 |  1.18 % |
| 23 | dougal gunters.org                           |    5 |  1.18 % |
| 24 | shacker birdhouse.org                        |    4 |  0.94 % |
| 25 | elcarpo.blues gmail.com                      |    4 |  0.94 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |  158 | 37.18 % |
+----+----------------------------------------------+------+---------+

***** Best authors, by total size of their messages (w/o quoting):
+----+-----Author-------------------------------------------+-KBytes-+
|  1 | mikeschinkel newclarity.net                          |   57.7 |
|  2 | Jesse.Silverstein xerox.com                          |   31.9 |
|  3 | otto ottodestruct.com                                |   20.6 |
|  4 | sojweb indiana.edu                                   |   16.2 |
|  5 | scribu gmail.com                                     |   12.4 |
|  6 | yahgrp poplarware.com                                |   10.7 |
|  7 | =?UTF-8?Q?Ja=6E_E=72ik_M=6Fs=74=72=C3=B6?= =?UTF-8?Q |   10.4 |
|  8 | simon sweetinteraction.com                           |    8.3 |
|  9 | beau dentedreality.com.au                            |    7.6 |
| 10 | wp-hackers striderweb.com                            |    7.2 |
| 11 | regulatethis gmail.com                               |    6.3 |
| 12 | public toppa.com                                     |    5.4 |
| 13 | barry barrycarlyon.co.uk                             |    5.4 |
| 14 | dougal gunters.org                                   |    5.1 |
| 15 | shane bugssite.org                                   |    4.9 |
| 16 | peter.westwood ftwr.co.uk                            |    4.9 |
| 17 | bnabble says.mu                                      |    4.8 |
| 18 | casey.bisson gmail.com                               |    4.6 |
| 19 | bunnylists gmail.com                                 |    4.5 |
| 20 | fonsekaean gmail.com                                 |    4.4 |
| 21 | gaarai gaarai.com                                    |    4.3 |
| 22 | robin.niemeyer gmx.net                               |    4.3 |
| 23 | mdmartz sivel.net                                    |    4.2 |
| 24 | ncrice gmail.com                                     |    4.1 |
| 25 | lynne.pope gmail.com                                 |    3.8 |
+----+------------------------------------------------------+--------+

***** Best authors, by average size of their message (w/o quoting):
+----+-----Author--------------------------------------------+-bytes-+
|  1 | phil2k gmail.com                                      |  3582 |
|  2 | ankitasdeveloper gmail.com                            |  2450 |
|  3 | muthu.work gmail.com                                  |  2447 |
|  4 | ahuja.ankit gmail.com                                 |  2186 |
|  5 | mikeschinkel newclarity.net                           |  2035 |
|  6 | jer simianuprising.com                                |  1930 |
|  7 | Jesse.Silverstein xerox.com                           |  1921 |
|  8 | barry barrycarlyon.co.uk                              |  1842 |
|  9 | nametologinwith gmail.com                             |  1700 |
| 10 | shane bugssite.org                                    |  1677 |
| 11 | bnabble says.mu                                       |  1637 |
| 12 | raul.peixoto gmail.com                                |  1609 |
| 13 | robin.niemeyer gmx.net                                |  1455 |
| 14 | dylan.k.kuhn gmail.com                                |  1414 |
| 15 | maillist wangstedt.net                                |  1327 |
| 16 | daryl.koopersmith gmail.com                           |  1285 |
| 17 | daya meyshan.com                                      |  1252 |
| 18 | otto ottodestruct.com                                 |  1241 |
| 19 | bunnylists gmail.com                                  |  1145 |
| 20 | jaredbangs gmail.com                                  |  1121 |
| 21 | god.dreams gmail.com                                  |  1121 |
| 22 | public toppa.com                                      |  1116 |
| 23 | gaarai gaarai.com                                     |  1108 |
| 24 | =?UTF-8?Q?Ja=6E_E=72ik_M=6Fs=74=72=C3=B6?= =?UTF-8?Q? |  1066 |
| 25 | mailapera gmail.com                                   |  1055 |
+----+-------------------------------------------------------+-------+

***** Table showing the most successful subjects:
+----+----Subject-----------------------------------+--Msg-+-Percent-+
|  1 | [wp-hackers] Any way to bypass $wp->query_po |   41 |  9.65 % |
|  2 | [wp-hackers] 24-hour has-patch marathon TODA |   27 |  6.35 % |
|  3 | [wp-hackers] peculiar problem on setting GMT |   26 |  6.12 % |
|  4 | [wp-hackers] repeating fields in usermeta?   |   13 |  3.06 % |
|  5 | [wp-hackers] Newbie Q - can't get get_childr |   12 |  2.82 % |
|  6 | [wp-hackers] Template revisioning system for |   11 |  2.59 % |
|  7 | [wp-hackers] Admin Panel Plugins/Themes Edit |    8 |  1.88 % |
|  8 | [wp-hackers] Addition to template-loader.php |    8 |  1.88 % |
|  9 | [wp-hackers] Newbie Q - accessing different  |    8 |  1.88 % |
| 10 | [wp-hackers] 'same category name'-issue      |    8 |  1.88 % |
| 11 | [wp-hackers] Avoiding Side-effects in Filter |    7 |  1.65 % |
| 12 | [wp-hackers] Comment Moderation UI limited f |    7 |  1.65 % |
| 13 | [wp-hackers] wpmu / adding users/sites/any o |    6 |  1.41 % |
| 14 | [wp-hackers] limit characters                |    6 |  1.41 % |
| 15 | Can Trac message the list? Was Re: [wp-hacke |    6 |  1.41 % |
| 16 | [wp-hackers] Akismet stats                   |    6 |  1.41 % |
| 17 | [wp-hackers] Setting up a WP Query with a se |    6 |  1.41 % |
| 18 | [wp-hackers] Plugin to sign up for activity? |    6 |  1.41 % |
| 19 | [wp-hackers] programmatically activate widge |    6 |  1.41 % |
| 20 | [wp-hackers] loading css only on page where  |    6 |  1.41 % |
| 21 | [wp-hackers] ob_start - good or bad?         |    6 |  1.41 % |
| 22 | [wp-hackers] Multiple category boxes / tabs  |    6 |  1.41 % |
| 23 | [wp-hackers] Which WordPress plugins should  |    5 |  1.18 % |
| 24 | [wp-hackers] Edit Template Tags with Plugin  |    5 |  1.18 % |
| 25 | [wp-hackers] basic bilingual plugin: need he |    5 |  1.18 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |  174 | 40.94 % |
+----+----------------------------------------------+------+---------+

***** Most used email clients:
+----+----Mailer------------------------------------+--Msg-+-Percent-+
|  1 | Google Mail/Other                            |  232 | 54.59 % |
|  2 | Apple Mail (2.930.3)                         |   69 | 16.24 % |
|  3 | Zimbra 5.0.13_GA_2791.RHEL5_64               |   20 |  4.71 % |
|  4 | Thunderbird 2.0.0.21 (Windows/20090302)      |   20 |  4.71 % |
|  5 | Thunderbird 2.0.0.12 (Windows/20080213)      |   12 |  2.82 % |
|  6 | Mailsmith 2.2                                |   10 |  2.35 % |
|  7 | Zimbra 5.0.13_GA_2791.RHEL5_64 (Yahoo! Zimbr |    9 |  2.12 % |
|  8 | Thunderbird 2.0.0.21 (X11/20090318)          |    8 |  1.88 % |
|  9 | Mozilla/5.x                                  |    8 |  1.88 % |
| 10 | slrn/0.9.9p1 (Linux)                         |    3 |  0.71 % |
| 11 | Thunderbird 2.0.0.12 (X11/20080227)          |    3 |  0.71 % |
| 12 | iPhone Mail (5H11)                           |    3 |  0.71 % |
| 13 | Thunderbird 2.0.0.19 (X11/20090105)          |    3 |  0.71 % |
| 14 | Microsoft Windows Mail 6.0.6000.16386        |    2 |  0.47 % |
| 15 | G2/1.0                                       |    2 |  0.47 % |
| 16 | Thunderbird 2.0.0.16 (Windows/20080708)      |    2 |  0.47 % |
| 17 | Apple Mail (2.929.2)                         |    2 |  0.47 % |
| 18 | Microsoft-Entourage/11.4.0.080122            |    2 |  0.47 % |
| 19 | RoundCube Webmail/0.2.1                      |    2 |  0.47 % |
| 20 | Lotus Notes Release 7.0                      |    2 |  0.47 % |
| 21 | Evolution 2.26.1                             |    2 |  0.47 % |
| 22 | Microsoft Office Outlook 11                  |    1 |  0.24 % |
| 23 | YahooMailClassic/5.2.15 YahooMailWebService/ |    1 |  0.24 % |
| 24 | Postbox 1.0b10 (Windows/2009032714)          |    1 |  0.24 % |
| 25 | Postbox 1.0b10 (Macintosh/2009032714)        |    1 |  0.24 % |
+----+----------------------------------------------+------+---------+
|    | other                                        |    5 |  1.18 % |
+----+----------------------------------------------+------+---------+

***** Table of maximal quoting:
+----+-----Author------------------------------------------+-Percent-+
|  1 | chris clwill.com                                    | 87.67 % |
|  2 | elcarpo.blues gmail.com                             | 85.28 % |
|  3 | whyisjake gmail.com                                 | 85.20 % |
|  4 | vpjayasiri gmail.com                                | 84.88 % |
|  5 | dylankkuhn gmail.com                                | 83.31 % |
|  6 | esvidy gmail.com                                    | 81.60 % |
|  7 | abelcheung gmail.com                                | 79.71 % |
|  8 | liste srpski.biz                                    | 77.77 % |
|  9 | jared pacific22.com                                 | 77.61 % |
| 10 | xitongzou gmail.com                                 | 74.63 % |
| 11 | TurnerJD cofc.edu                                   | 72.84 % |
| 12 | sojweb indiana.edu                                  | 69.74 % |
| 13 | alan verselogic.net                                 | 69.70 % |
| 14 | eduardo ethymos.com.br                              | 69.36 % |
| 15 | johnbillion+wp gmail.com                            | 67.39 % |
| 16 | daya meyshan.com                                    | 66.82 % |
| 17 | ncrice gmail.com                                    | 65.73 % |
| 18 | fonsekaean gmail.com                                | 64.81 % |
| 19 | jess funroe.net                                     | 64.18 % |
| 20 | bingorabbit gmail.com                               | 63.86 % |
| 21 | jaredbangs gmail.com                                | 61.33 % |
| 22 | aaron xavisys.com                                   | 60.98 % |
| 23 | regulatethis gmail.com                              | 59.87 % |
| 24 | aaron.jorbin gmail.com                              | 58.25 % |
| 25 | barry automattic.com                                | 57.60 % |
+----+-----------------------------------------------------+---------+
|    | average                                             | 43.04 % |
+----+-----------------------------------------------------+---------+

***** Graph showing number of messages written during hours of day:

100% -------------------------------#----------------- - 29
 90% ---------------------#-#-------#-#--------------- msgs
 80% -------------------#-#-#-#-#---#-#-#-#-----------
 70% -------------------#-#-#-#-#-#-#-#-#-#-#-#-------
 60% ---------------#-#-#-#-#-#-#-#-#-#-#-#-#-#-------
 50% ---------------#-#-#-#-#-#-#-#-#-#-#-#-#-#---#-#-
 40% -#-------------#-#-#-#-#-#-#-#-#-#-#-#-#-#---#-#-
 30% -#-#-----------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
 20% -#-#-----------#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
 10% -#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
      * * * * * * * * * * * * * * * * * * * * * * * *
hour  0         5           11          17          23


***** Graph showing number of messages written during days of month:

100% ---------------------#----------------------------------------- - 37
 90% ---------------------#---------#------------------------------- msgs
 80% ---------------#-----#---------#-------------------------------
 70% -----------#---#-----#---------#-------------------------------
 60% -----------#---#-#---#---------#-------------------------------
 50% ---#-----#-#---#-#-#-#---------#-------------------------------
 40% -#-#-----#-#---#-#-#-#-#---#---#-------#-----------------------
 30% -#-#-#---#-#-#-#-#-#-#-#---#---#-------#-------------#---#-----
 20% -#-#-#---#-#-#-#-#-#-#-#---#---#-#-#---#-#-#---------#---#-#---
 10% -#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#---#-#-#-#-------#-#-#-#---
      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 day  1         6           12          18          24            31


***** Graph showing number of messages written during days of week:

100% -------------#--------------- - 95
 90% -------------#--------------- msgs
 80% ---------#---#---------------
 70% ---------#---#---------------
 60% -#-------#---#---------------
 50% -#---#---#---#-------#-------
 40% -#---#---#---#---#---#---#---
 30% -#---#---#---#---#---#---#---
 20% -#---#---#---#---#---#---#---
 10% -#---#---#---#---#---#---#---
      *   *   *   *   *   *   *
     Mon Tue Wed Thu Fri Sat Sun


***** Maximal quoting:
      Author     : chris clwill.com
      Subject    : [wp-hackers] 24-hour has-patch marathon TODAY
      Date       : Thu, 16 Apr 2009 17:16:44 -0700
      Quote ratio: 93.83% / 3729 bytes

***** Longest message:
      Author     : mikeschinkel newclarity.net
      Subject    : [wp-hackers] Any way to bypass $wp->query_posts()?
      Date       : Wed, 8 Apr 2009 19:23:20 -0500 (CDT)
      Size       : 10116 bytes

***** Most successful subject:
      Subject    : [wp-hackers] Any way to bypass $wp->query_posts()?
      No. of msgs: 41
      Total size : 85508 bytes

***** Final summary:
      Total number of messages:             425
      Total number of different authors:    111
      Total number of different subjects:   117
      Total size of messages (w/o headers): 667311 bytes
      Average size of a message:            1570 bytes

***** Generated by MailListStat v1.3, (C) 2001-2003 <marki (at) nexin.sk>
***** See http://freshmeat.net/projects/mls for details...

DISCLAIMER: Stats automatically produced. Remember that stats are often
meaningless and deceiving.
From yahgrp at poplarware.com  Fri May  1 15:08:19 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Fri May  1 15:06:47 2009
Subject: [wp-hackers] Is WP back end supposed to work without JavaScript?
Message-ID: <49FB1063.5040509@poplarware.com>

I'm working on a patch for a couple of tag-related bugs today. But 
before I started, I thought I would make sure I fully understood how 
the current edit screens worked. Specifically, the tag and category 
sections on the full Edit Post screen (as opposed to the Quick Edit 
screen).

Just to see what would happen, I turned of JavaScript in my browser. I 
was shocked:
   - You cannot see what tags are already on the post, if you edit an 
existing post.
   - If you type in a tag where it says "add a new tag", the "add" 
button does nothing, and if you then save the post, the tags you typed 
don't get added.
   - All of which means that there is no way, with JS disabled, to see 
or modify the tags on the post in any way, as far as I can tell.
   - Also, the "most recent" tab of the Categories section doesn't 
show when you click the tab, with JavaScript disabled. That's fairly 
minor, because you do have a list of all the categories available.
   - The Upload/Insert media section is totally gone without JavaScript.

So my question to the list is: Is the back end of WP supposed to work 
with JavaScript disabled? In other words, is this lack of 
functionality without JavaScript a bug, or was it done on purpose? I 
thought that standard web practice was to have things degrade nicely 
without JavaScript. I also thought that maybe some visually disabled 
users couldn't use JS-enabled browsers, but maybe that notion is 
hopelessly out of date? I also believe that in the past, the WP back 
end would work without JavaScript, but if you cannot do tags and 
media, I wouldn't say it works now. I'm not sure how long it's been 
like that...

Any insight appreciated.... It will affect what I do for this patch 
I'm working on, obviously.

Thanks,
     Jennifer

-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com
Drupal, WordPress, and custom Web programming

From yahgrp at poplarware.com  Fri May  1 15:32:30 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Fri May  1 15:32:15 2009
Subject: [wp-hackers] Accessibility of WP back end (was: Is WP back end
 supposed to work without JavaScript?)
In-Reply-To: <49FB1063.5040509@poplarware.com>
References: <49FB1063.5040509@poplarware.com>
Message-ID: <49FB160E.1060905@poplarware.com>

Not being an expert, I did a little research on the web about 
Accessibility (for people with disabilities) and JavaScript. There's 
an excellent (if somewhat long) series of articles here:
    http://www.webaim.org/techniques/javascript/
and a summary here:
    http://www.webaim.org/techniques/javascript/summary.php

There are two guidelines for accessibility -- two sets of standards:
    1) WCAG - international W3C guidelines - requires functionality 
and content of web pages to be accessible if JS is disabled.
    2) Section 508 - (US law) - requires that if JS is used, it is 
accessible to assistive technologies, and that the web page not 
require the use of a specific input device such as a mouse (so all 
content and functionality needs to be accessible using a keyboard 
without resorting to the mouse).

Neither of those guidelines works at all with the Edit Post page in 
the WP back end. Try using the tab key to navigate around the page 
sometime -- quite illuminating! You definitely cannot get to all of 
the functionality, it's in some random order, and there is no visual 
cue (such as a:active CSS) to show you what link you are over when 
you're on the left sidebar. With JS turned off, as I mentioned in my 
previous note, you can't do Tags or Media at all.

So what are WP's official Accessibility standards for the back end, if 
any?

    --Jennifer


-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com
Drupal, WordPress, and custom Web programming

From if.website at gmail.com  Fri May  1 15:34:05 2009
From: if.website at gmail.com (Austin Matzko)
Date: Fri May  1 15:34:19 2009
Subject: [wp-hackers] Is WP back end supposed to work without JavaScript?
In-Reply-To: <49FB1063.5040509@poplarware.com>
References: <49FB1063.5040509@poplarware.com>
Message-ID: <674b4a3b0905010834m5edcbb35l8485c8520dc037e5@mail.gmail.com>

On Fri, May 1, 2009 at 10:08 AM, Jennifer Hodgdon <yahgrp@poplarware.com> wrote:
> So my question to the list is: Is the back end of WP supposed to work with
> JavaScript disabled? In other words, is this lack of functionality without
> JavaScript a bug, or was it done on purpose? I thought that standard web practice was to have things degrade nicely without JavaScript.

I would say if WordPress requires JavaScript to accomplish a certain
task, then it's a bug.

* The WP requirements page says nothing about having a
JavaScript-enabled client [1].
* From the first paragraph, the WP features page trumpets its W3C
standards-compliance [2].  By failing to gracefully degrade in older
clients, WP violates the W3C "Web Content Accessibility Guidelines"
[3].
* WP hurts its potential market share by excluding those who must
follow accessibility guidelines for their site.

[1] http://wordpress.org/about/requirements/
[2] http://wordpress.org/about/features/
[3] http://www.w3.org/TR/1999/WAI-WEBCONTENT-19990505/#gl-new-technologies
From yahgrp at poplarware.com  Fri May  1 16:11:20 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Fri May  1 16:09:56 2009
Subject: [wp-hackers] Is WP back end supposed to work without JavaScript?
In-Reply-To: <674b4a3b0905010834m5edcbb35l8485c8520dc037e5@mail.gmail.com>
References: <49FB1063.5040509@poplarware.com>
	<674b4a3b0905010834m5edcbb35l8485c8520dc037e5@mail.gmail.com>
Message-ID: <49FB1F28.8030109@poplarware.com>

Well, I would agree with you on all counts. The WP back end is clearly 
in violation of the WCAG... But what should we do about it?

The first thing to do would probably be WP Powers that Be to commit to 
making WP's back end WCAG compatible, or at least to agree that if it 
isn't, it's a serious bug. The next step would be to identify the 
actual WCAG violations, which would probably require an expert on 
accessibility (rather than someone like me making guesses) doing an 
assessment.

Then of course, to fix the issues, which we can all participate in and 
is probably doable. For instance, the separate "Media" page allows you 
to upload a file and edit the caption, etc., all without use of 
JavaScript (it's klunky and you cannot attach it to a post, but as a 
proof of concept, it's there).

     --Jennifer

Austin Matzko wrote:
> I would say if WordPress requires JavaScript to accomplish a certain
> task, then it's a bug.
> 
> * The WP requirements page says nothing about having a
> JavaScript-enabled client [1].
> * From the first paragraph, the WP features page trumpets its W3C
> standards-compliance [2].  By failing to gracefully degrade in older
> clients, WP violates the W3C "Web Content Accessibility Guidelines"
> [3].
> * WP hurts its potential market share by excluding those who must
> follow accessibility guidelines for their site.
> 
> [1] http://wordpress.org/about/requirements/
> [2] http://wordpress.org/about/features/
> [3] http://www.w3.org/TR/1999/WAI-WEBCONTENT-19990505/#gl-new-technologies


-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com
Drupal, WordPress, and custom Web programming

From johnbillion+wp at gmail.com  Fri May  1 16:20:09 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri May  1 16:20:24 2009
Subject: [wp-hackers] add_meta_box without checked?
In-Reply-To: <349fe48b0905010110k342a50b4o963251d9ac257fe5@mail.gmail.com>
References: <db047a770904301306y147b4508v850dddcabf159e37@mail.gmail.com>
	<349fe48b0905010110k342a50b4o963251d9ac257fe5@mail.gmail.com>
Message-ID: <1fa535a70905010920l72b6c461qf501b1467d2841f5@mail.gmail.com>

The 'slug' box on the post writing screen is not shown by default.
Maybe you could look at how that box is added?

HTH
John

2009/5/1 scribu <scribu@gmail.com>:
> You mean you want to add meta boxes that are hidden by default, right?
>
> You could hook into an action after the metaboxes are added and
> manually modify the option in wp_options.
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ryan at boren.nu  Fri May  1 17:31:22 2009
From: ryan at boren.nu (Ryan Boren)
Date: Fri May  1 17:31:34 2009
Subject: [wp-hackers] Is WP back end supposed to work without JavaScript?
In-Reply-To: <49FB1F28.8030109@poplarware.com>
References: <49FB1063.5040509@poplarware.com>
	<674b4a3b0905010834m5edcbb35l8485c8520dc037e5@mail.gmail.com>
	<49FB1F28.8030109@poplarware.com>
Message-ID: <c8f37c930905011031l781cffd1gbc46966ec652da2e@mail.gmail.com>

On Fri, May 1, 2009 at 9:11 AM, Jennifer Hodgdon <yahgrp@poplarware.com> wrote:
> The first thing to do would probably be WP Powers that Be to commit to
> making WP's back end WCAG compatible, or at least to agree that if it isn't,
> it's a serious bug.

It's a serious bug.
From jer at simianuprising.com  Fri May  1 18:04:04 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Fri May  1 18:04:25 2009
Subject: [wp-hackers] Accessibility of WP back end (was: Is WP back end 
	supposed to work without JavaScript?)
In-Reply-To: <49FB160E.1060905@poplarware.com>
References: <49FB1063.5040509@poplarware.com> <49FB160E.1060905@poplarware.com>
Message-ID: <e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com>

FWIW we have a blind author on our site and he does fine with WP and
his screen reader. I'm sure there are some readers that can't handle
it as well but his success implies that WP is at least good enough
that someone can work it out.

Interesting fact: he *prefers* tinymce. Apparently it's more
accessible to his screen reader than the code view. (I know a lot of
people like it these days, but that still seems counter-intuitive to
me :P )


-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org
From yahgrp at poplarware.com  Fri May  1 18:26:00 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Fri May  1 18:24:36 2009
Subject: [wp-hackers] Accessibility of WP back end
In-Reply-To: <e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com>
References: <49FB1063.5040509@poplarware.com> <49FB160E.1060905@poplarware.com>
	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com>
Message-ID: <49FB3EB8.2030203@poplarware.com>

That is good to know. Jeremy: I have read that some of the dynamic 
update things could be difficult for (blind) screen reader users. How 
does your blind author like the Tags section, when he adds a tag and 
it appears? Can he use the X buttons to delete the tags?

In any case, blindness is not the only issue. From the introduction to 
the WCAG guidelines (http://www.w3.org/TR/1999/WAI-WEBCONTENT-19990505/):

     * They may not be able to see, hear, move, or may not be able to 
process some types of information easily or at all.
     * They may have difficulty reading or comprehending text.
     * They may not have or be able to use a keyboard or mouse.
     * They may have a text-only screen, a small screen, or a slow 
Internet connection.
     * They may not speak or understand fluently the language in which 
the document is written.
     * They may be in a situation where their eyes, ears, or hands are 
busy or interfered with (e.g., driving to work, working in a loud 
environment, etc.).
     * They may have an early version of a browser, a different 
browser entirely, a voice browser, or a different operating system.

    --Jennifer

ps: I filed a bug on the JS issues.
    http://core.trac.wordpress.org/ticket/9698


Jeremy Clarke wrote:
> FWIW we have a blind author on our site and he does fine with WP and
> his screen reader. I'm sure there are some readers that can't handle
> it as well but his success implies that WP is at least good enough
> that someone can work it out.
> 
> Interesting fact: he *prefers* tinymce. Apparently it's more
> accessible to his screen reader than the code view. (I know a lot of
> people like it these days, but that still seems counter-intuitive to
> me :P )

-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com
Drupal, WordPress, and custom Web programming

From jer at simianuprising.com  Fri May  1 18:43:31 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Fri May  1 18:43:42 2009
Subject: [wp-hackers] Accessibility of WP back end
In-Reply-To: <49FB3EB8.2030203@poplarware.com>
References: <49FB1063.5040509@poplarware.com> <49FB160E.1060905@poplarware.com>
	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com>
	<49FB3EB8.2030203@poplarware.com>
Message-ID: <e1202cb10905011143od64bff3ub8e6d85ac49aca7c@mail.gmail.com>

On Fri, May 1, 2009 at 2:26 PM, Jennifer Hodgdon <yahgrp@poplarware.com> wrote:
> That is good to know. Jeremy: I have read that some of the dynamic update
> things could be difficult for (blind) screen reader users. How does your
> blind author like the Tags section, when he adds a tag and it appears? Can
> he use the X buttons to delete the tags?

Actually we don't use tags and I have the tags UI completely hidden
through CSS because the users were tagging things anyway and filling
up the DB, so I can't speak to that, given its newness it could be a
point of failure.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org
From frank at bueltge.de  Fri May  1 18:45:05 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Fri May  1 18:45:36 2009
Subject: [wp-hackers] add_meta_box without checked?
In-Reply-To: <1fa535a70905010920l72b6c461qf501b1467d2841f5@mail.gmail.com>
References: <db047a770904301306y147b4508v850dddcabf159e37@mail.gmail.com> 
	<349fe48b0905010110k342a50b4o963251d9ac257fe5@mail.gmail.com> 
	<1fa535a70905010920l72b6c461qf501b1467d2841f5@mail.gmail.com>
Message-ID: <db047a770905011145mb7175b9j323d2b9c97af112c@mail.gmail.com>

Thanks scribu and John,
i will see for this possibilities and hope, this works fine.

Best regards
Frank
From frank at bueltge.de  Fri May  1 20:18:43 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Fri May  1 20:19:09 2009
Subject: [wp-hackers] add_meta_box without checked?
In-Reply-To: <db047a770905011145mb7175b9j323d2b9c97af112c@mail.gmail.com>
References: <db047a770904301306y147b4508v850dddcabf159e37@mail.gmail.com> 
	<349fe48b0905010110k342a50b4o963251d9ac257fe5@mail.gmail.com> 
	<1fa535a70905010920l72b6c461qf501b1467d2841f5@mail.gmail.com> 
	<db047a770905011145mb7175b9j323d2b9c97af112c@mail.gmail.com>
Message-ID: <db047a770905011318n362aaa10x398b0c31e6f6e6b3@mail.gmail.com>

@John and scribu:
i have no found a other solution as set the user_meta_dat for this. I have
write a small function to write the usermeta on activate the plugin. Please
-waht do you think about this?

register_activation_hook( __FILE__, array(&$this, 'install') );
        function install() {
            global $wpdb;

            $wp_users = $wpdb->get_results(

$wpdb->prepare(

                "SELECT ID

                 FROM   $wpdb->users

                 ORDER  BY ID"

                )
                                                                );

            $hidden_page = array();
            $hidden_post = array();
            $hidden_page = get_hidden_meta_boxes('page');
            $hidden_post = get_hidden_meta_boxes('post');
            array_push( $hidden_page, 'mygermancityfacts' );
            array_push( $hidden_post, 'mygermancityfacts' );
            foreach ( $wp_users as $user ) {
                $userID = (int) $user->ID;
                update_usermeta( $userID, 'metaboxhidden_page', $hidden_page
);
                update_usermeta( $userID, 'metaboxhidden_post', $hidden_post
);
            }
        }
From johnbillion+wp at gmail.com  Fri May  1 21:44:57 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Fri May  1 21:45:13 2009
Subject: [wp-hackers] add_meta_box without checked?
In-Reply-To: <db047a770905011318n362aaa10x398b0c31e6f6e6b3@mail.gmail.com>
References: <db047a770904301306y147b4508v850dddcabf159e37@mail.gmail.com>
	<349fe48b0905010110k342a50b4o963251d9ac257fe5@mail.gmail.com>
	<1fa535a70905010920l72b6c461qf501b1467d2841f5@mail.gmail.com>
	<db047a770905011145mb7175b9j323d2b9c97af112c@mail.gmail.com>
	<db047a770905011318n362aaa10x398b0c31e6f6e6b3@mail.gmail.com>
Message-ID: <1fa535a70905011444t4fa62543p76cdfa8834fe1b62@mail.gmail.com>

Looks good Frank. You could also use get_users_of_blog() instead of
your SQL query.

John.

2009/5/1 Frank Bueltge <frank@bueltge.de>:
> @John and scribu:
> i have no found a other solution as set the user_meta_dat for this. I have
> write a small function to write the usermeta on activate the plugin. Please
> -waht do you think about this?
>
> register_activation_hook( __FILE__, array(&$this, 'install') );
> ? ? ? ?function install() {
> ? ? ? ? ? ?global $wpdb;
>
> ? ? ? ? ? ?$wp_users = $wpdb->get_results(
>
> $wpdb->prepare(
>
> ? ? ? ? ? ? ? ?"SELECT ID
>
> ? ? ? ? ? ? ? ? FROM ? $wpdb->users
>
> ? ? ? ? ? ? ? ? ORDER ?BY ID"
>
> ? ? ? ? ? ? ? ?)
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?);
>
> ? ? ? ? ? ?$hidden_page = array();
> ? ? ? ? ? ?$hidden_post = array();
> ? ? ? ? ? ?$hidden_page = get_hidden_meta_boxes('page');
> ? ? ? ? ? ?$hidden_post = get_hidden_meta_boxes('post');
> ? ? ? ? ? ?array_push( $hidden_page, 'mygermancityfacts' );
> ? ? ? ? ? ?array_push( $hidden_post, 'mygermancityfacts' );
> ? ? ? ? ? ?foreach ( $wp_users as $user ) {
> ? ? ? ? ? ? ? ?$userID = (int) $user->ID;
> ? ? ? ? ? ? ? ?update_usermeta( $userID, 'metaboxhidden_page', $hidden_page
> );
> ? ? ? ? ? ? ? ?update_usermeta( $userID, 'metaboxhidden_post', $hidden_post
> );
> ? ? ? ? ? ?}
> ? ? ? ?}
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From frank at bueltge.de  Fri May  1 22:11:36 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Fri May  1 22:12:07 2009
Subject: [wp-hackers] add_meta_box without checked?
In-Reply-To: <1fa535a70905011444t4fa62543p76cdfa8834fe1b62@mail.gmail.com>
References: <db047a770904301306y147b4508v850dddcabf159e37@mail.gmail.com> 
	<349fe48b0905010110k342a50b4o963251d9ac257fe5@mail.gmail.com> 
	<1fa535a70905010920l72b6c461qf501b1467d2841f5@mail.gmail.com> 
	<db047a770905011145mb7175b9j323d2b9c97af112c@mail.gmail.com> 
	<db047a770905011318n362aaa10x398b0c31e6f6e6b3@mail.gmail.com> 
	<1fa535a70905011444t4fa62543p76cdfa8834fe1b62@mail.gmail.com>
Message-ID: <db047a770905011511j418d29f8yc1b87046bcce6995@mail.gmail.com>

Thanks John,
I think get_users_of_blog() is little bid bogger, more datas and my sql is
faster for this. I will only the ID.

Thanks a lot for your time and help!

Best regards
Frank

__
Das Buch: WordPress - Weblogs einrichten und administrieren, Open Source
Press
 ISBN 978-3-937514-33-8
 http://wordpress-buch.bueltge.de/das-buch/

http://bueltge.de : frank@bueltge.de
http://wpengineer.com : frank@wpengineer.com
__
Frank B?ltge
Tel:    +49 3691 212951
Mobil:  +49 170 5322053
E-Mail: f.bueltge@inpsyde.com

Inpsyde GmbH
Mutzer Heide 3
51467 Bergisch Gladbach

Steuernr: 204/5756/0999 Steueridentnr.: DE263849534
Gesch?ftsf?hrender Gesellschafter: H. Roh? HRB 65224 Amtsgericht K?ln

http://inpsyde.com
http://pressthis.de


On Fri, May 1, 2009 at 11:44 PM, John Blackbourn
<johnbillion+wp@gmail.com<johnbillion%2Bwp@gmail.com>
> wrote:

> Looks good Frank. You could also use get_users_of_blog() instead of
> your SQL query.
>
> John.
>
> 2009/5/1 Frank Bueltge <frank@bueltge.de>:
> > @John and scribu:
> > i have no found a other solution as set the user_meta_dat for this. I
> have
> > write a small function to write the usermeta on activate the plugin.
> Please
> > -waht do you think about this?
> >
> > register_activation_hook( __FILE__, array(&$this, 'install') );
> >        function install() {
> >            global $wpdb;
> >
> >            $wp_users = $wpdb->get_results(
> >
> > $wpdb->prepare(
> >
> >                "SELECT ID
> >
> >                 FROM   $wpdb->users
> >
> >                 ORDER  BY ID"
> >
> >                )
> >                                                                );
> >
> >            $hidden_page = array();
> >            $hidden_post = array();
> >            $hidden_page = get_hidden_meta_boxes('page');
> >            $hidden_post = get_hidden_meta_boxes('post');
> >            array_push( $hidden_page, 'mygermancityfacts' );
> >            array_push( $hidden_post, 'mygermancityfacts' );
> >            foreach ( $wp_users as $user ) {
> >                $userID = (int) $user->ID;
> >                update_usermeta( $userID, 'metaboxhidden_page',
> $hidden_page
> > );
> >                update_usermeta( $userID, 'metaboxhidden_post',
> $hidden_post
> > );
> >            }
> >        }
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers@lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From lynne.pope at gmail.com  Sat May  2 01:31:24 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Sat May  2 01:31:59 2009
Subject: [wp-hackers] Accessibility of WP back end (was: Is WP back end 
	supposed to work without JavaScript?)
In-Reply-To: <e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com>
References: <49FB1063.5040509@poplarware.com>
	<49FB160E.1060905@poplarware.com> 
	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com>
Message-ID: <427667db0905011831s7e97ca27q71f51717a2571bcf@mail.gmail.com>

2009/5/2 Jeremy Clarke <jer@simianuprising.com>

> FWIW we have a blind author on our site and he does fine with WP and
> his screen reader. I'm sure there are some readers that can't handle
> it as well but his success implies that WP is at least good enough
> that someone can work it out.
>
> Interesting fact: he *prefers* tinymce. Apparently it's more
> accessible to his screen reader than the code view. (I know a lot of
> people like it these days, but that still seems counter-intuitive to
> me :P )
>

Could your blind user set up and manage his own WP though? Prior to
WordPress 2.7, disabled users who use assistive devices were able to install
& run their own sites. <2.7 was not accessible, but was more accessible than
2.7+.

During the survey on the new 2.7 UI this was mentioned by several people and
was loudly shouted down by those who loved the look of the UI. It was also
raised on wp-testers. It's not just the JavaScript/AJAX that makes the UI
unusable by many though (this also catches those people behind corporate
firewalls that block JavaScript) as the whole admin interface falls way
short of meeting WCAG.

Lynne
From wp at xentek.net  Sat May  2 02:05:19 2009
From: wp at xentek.net (Eric Marden)
Date: Sat May  2 02:05:36 2009
Subject: [wp-hackers] Accessibility of WP back end (was: Is WP back end
	supposed to work without JavaScript?)
In-Reply-To: <427667db0905011831s7e97ca27q71f51717a2571bcf@mail.gmail.com>
References: <49FB1063.5040509@poplarware.com> <49FB160E.1060905@poplarware.com>
	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com>
	<427667db0905011831s7e97ca27q71f51717a2571bcf@mail.gmail.com>
Message-ID: <9A28FE44-C311-48E7-B41C-9E7D0FDB2E8C@xentek.net>

> It's not just the JavaScript/AJAX that makes the UI
> unusable by many though (this also catches those people behind  
> corporate
> firewalls that block JavaScript) as the whole admin interface falls  
> way
> short of meeting WCAG.

Can you explain how a firewall can block a client technology?

+1 for accessibility though.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/





On May 1, 2009, at 9:31 PM, Lynne Pope wrote:

> 2009/5/2 Jeremy Clarke <jer@simianuprising.com>
>
>> FWIW we have a blind author on our site and he does fine with WP and
>> his screen reader. I'm sure there are some readers that can't handle
>> it as well but his success implies that WP is at least good enough
>> that someone can work it out.
>>
>> Interesting fact: he *prefers* tinymce. Apparently it's more
>> accessible to his screen reader than the code view. (I know a lot of
>> people like it these days, but that still seems counter-intuitive to
>> me :P )
>>
>
> Could your blind user set up and manage his own WP though? Prior to
> WordPress 2.7, disabled users who use assistive devices were able to  
> install
> & run their own sites. <2.7 was not accessible, but was more  
> accessible than
> 2.7+.
>
> During the survey on the new 2.7 UI this was mentioned by several  
> people and
> was loudly shouted down by those who loved the look of the UI. It  
> was also
> raised on wp-testers. It's not just the JavaScript/AJAX that makes  
> the UI
> unusable by many though (this also catches those people behind  
> corporate
> firewalls that block JavaScript) as the whole admin interface falls  
> way
> short of meeting WCAG.
>
> Lynne
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ryan at boren.nu  Sat May  2 03:11:51 2009
From: ryan at boren.nu (Ryan Boren)
Date: Sat May  2 03:12:08 2009
Subject: [wp-hackers] Accessibility of WP back end (was: Is WP back end 
	supposed to work without JavaScript?)
In-Reply-To: <49FB160E.1060905@poplarware.com>
References: <49FB1063.5040509@poplarware.com> <49FB160E.1060905@poplarware.com>
Message-ID: <c8f37c930905012011h46cc4fedm6c7ce5178398e465@mail.gmail.com>

On Fri, May 1, 2009 at 8:32 AM, Jennifer Hodgdon <yahgrp@poplarware.com> wrote:
> There are two guidelines for accessibility -- two sets of standards:
> ? 1) WCAG - international W3C guidelines - requires functionality and
> content of web pages to be accessible if JS is disabled.
> ? 2) Section 508 - (US law) - requires that if JS is used, it is accessible
> to assistive technologies, and that the web page not require the use of a
> specific input device such as a mouse (so all content and functionality
> needs to be accessible using a keyboard without resorting to the mouse).
>
> ...
>
> So what are WP's official Accessibility standards for the back end, if any?

A lot of work goes into meeting those (getting the new widgets admin
to work without JS was no fun), but we're still way short.  Patches
and specific recommendations welcome.  For example, I'd love someone
to help with #9445 because I've added enough labels and fieldsets for
a lifetime.  http://core.trac.wordpress.org/ticket/9445
From lynne.pope at gmail.com  Sat May  2 05:14:00 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Sat May  2 05:14:25 2009
Subject: [wp-hackers] Accessibility of WP back end (was: Is WP back end 
	supposed to work without JavaScript?)
In-Reply-To: <9A28FE44-C311-48E7-B41C-9E7D0FDB2E8C@xentek.net>
References: <49FB1063.5040509@poplarware.com>
	<49FB160E.1060905@poplarware.com> 
	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com> 
	<427667db0905011831s7e97ca27q71f51717a2571bcf@mail.gmail.com> 
	<9A28FE44-C311-48E7-B41C-9E7D0FDB2E8C@xentek.net>
Message-ID: <427667db0905012214h754791cdv9ce4105d6fbbd830@mail.gmail.com>

2009/5/2 Eric Marden <wp@xentek.net>

>  It's not just the JavaScript/AJAX that makes the UI
>> unusable by many though (this also catches those people behind corporate
>> firewalls that block JavaScript) as the whole admin interface falls way
>> short of meeting WCAG.
>>
>
> Can you explain how a firewall can block a client technology?
>
> +1 for accessibility though.


Yep, sure can. This is becoming increasingly common in corporate
environments and I've recently been seeing it in school/university
environments. Firewalls and proxy servers are getting configured to strip
out JavaScript before the pages get sent to the client machine. So, even
though the client browser may have JavaScript enabled, the script has
already been removed and is unable to be accessed.

This is not a new problem. It's also not just an issue for JavaScript as
some firewalls and proxies are over-cautious with their settings and block
far more scripting than they need to. However, it becomes really problematic
for WordPress where js is used for core functionality and not just for
progressive enhancement.

Lynne
From lynne.pope at gmail.com  Sat May  2 05:35:35 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Sat May  2 05:35:59 2009
Subject: [wp-hackers] Accessibility of WP back end (was: Is WP back end 
	supposed to work without JavaScript?)
In-Reply-To: <427667db0905012214h754791cdv9ce4105d6fbbd830@mail.gmail.com>
References: <49FB1063.5040509@poplarware.com>
	<49FB160E.1060905@poplarware.com> 
	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com> 
	<427667db0905011831s7e97ca27q71f51717a2571bcf@mail.gmail.com> 
	<9A28FE44-C311-48E7-B41C-9E7D0FDB2E8C@xentek.net>
	<427667db0905012214h754791cdv9ce4105d6fbbd830@mail.gmail.com>
Message-ID: <427667db0905012235s4ec09ed0t52d976572fcadbe6@mail.gmail.com>

Just a note - in both the tracker and comments made here, people seem to be
focusing more on S.508 compliance.
That is all well and good, but misses the fact that S.508 is a US government
guideline, which is an amendment to the US Workforce Rehabilitation Act,
1973. Section 508 does not apply to private sector web sites or to public
sites which are not U.S. Federal agency sites.

S.508 covers *some* of the requirements for an accessible SITE, but if we
are looking at WordPress accessibility the guidelines we should be looking
at are the Authoring Tool Accessibility Guidelines:
http://www.w3.org/TR/ATAG10/

ATAG provides the information needed for WordPress to be an accessible
authoring tool. WordPress itself cannot make a site accessible - that is up
to a combination of both the theme and the user, as long as the underlying
code meets the ATAG guidelines.

Lynne
From elflop at googlemail.com  Sat May  2 08:26:25 2009
From: elflop at googlemail.com (Rich Pedley)
Date: Sat May  2 08:26:41 2009
Subject: [wp-hackers] Accessibility of WP back end (was: Is WP back end 
	supposed to work without JavaScript?)
In-Reply-To: <427667db0905012235s4ec09ed0t52d976572fcadbe6@mail.gmail.com>
References: <49FB1063.5040509@poplarware.com> <49FB160E.1060905@poplarware.com>
	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com>
	<427667db0905011831s7e97ca27q71f51717a2571bcf@mail.gmail.com>
	<9A28FE44-C311-48E7-B41C-9E7D0FDB2E8C@xentek.net>
	<427667db0905012214h754791cdv9ce4105d6fbbd830@mail.gmail.com>
	<427667db0905012235s4ec09ed0t52d976572fcadbe6@mail.gmail.com>
Message-ID: <c6c45a350905020126q149758dsef2b340549064785@mail.gmail.com>

Making the back end of WordPress accessible is something I'd certainly
be interested in helping with, and I know a few other people that
would be as well.

I've looked at the page referenced to from trac
http://www.wac.ohio-state.edu/tutorials/forms/hiding-labels.htm
and that page is out of date - I'm sure Jaws now honours display:none
for a start. Moving labels off screen via the 'off-left' technique
appears to be the best solution.

You also have to be aware that a lot of screen readers have a 'form'
mode. In which they won't read anything out except for form tags -
legends labels etc. So any additional text should not appear within
the form unless associated with form markup. But adding in labels is
only a portion of what needs doing, I'd be arguing that the scope= in
tables is not the best solution and that headers and ids should be
used (but I'll admit to not being upto dat on what screenreaders can
cope with best). I'd also be suggesting that using tables to layout
forms isn't good...

IF Automattic decide they want the back end to be accessible, firstly
all javascript should be turned off, and the interface tested to be
working. Then add the javascript back in as an enhancement - that
alone will help. (and yes I know these days that some of the screen
readers can cope with javascript).


Rich

-- 
my mind is on a permanent tangent
http://cms.elfden.co.uk/
From ryan at boren.nu  Sat May  2 18:14:41 2009
From: ryan at boren.nu (Ryan Boren)
Date: Sat May  2 18:14:59 2009
Subject: [wp-hackers] Accessibility of WP back end (was: Is WP back end 
	supposed to work without JavaScript?)
In-Reply-To: <c6c45a350905020126q149758dsef2b340549064785@mail.gmail.com>
References: <49FB1063.5040509@poplarware.com> <49FB160E.1060905@poplarware.com>
	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com>
	<427667db0905011831s7e97ca27q71f51717a2571bcf@mail.gmail.com>
	<9A28FE44-C311-48E7-B41C-9E7D0FDB2E8C@xentek.net>
	<427667db0905012214h754791cdv9ce4105d6fbbd830@mail.gmail.com>
	<427667db0905012235s4ec09ed0t52d976572fcadbe6@mail.gmail.com>
	<c6c45a350905020126q149758dsef2b340549064785@mail.gmail.com>
Message-ID: <c8f37c930905021114w4cd75b4jfe09096b4dceabcd@mail.gmail.com>

On Sat, May 2, 2009 at 1:26 AM, Rich Pedley <elflop@googlemail.com> wrote:
> Making the back end of WordPress accessible is something I'd certainly
> be interested in helping with, and I know a few other people that
> would be as well.
>
> I've looked at the page referenced to from trac
> http://www.wac.ohio-state.edu/tutorials/forms/hiding-labels.htm
> and that page is out of date - I'm sure Jaws now honours display:none
> for a start. Moving labels off screen via the 'off-left' technique
> appears to be the best solution.

We had several people running JAWS against 2.7 before release and all
was well. Alas, I don't have it to test with.  Could someone who
actually uses it let us know how it's handling labels.  Ignoring
hidden labels would seem to make little sense.  They exist solely for
the benefit screen readers.

Ryan
From dougal at gunters.org  Sat May  2 21:23:20 2009
From: dougal at gunters.org (Dougal Campbell)
Date: Sat May  2 21:55:11 2009
Subject: [wp-hackers] Accessibility of WP back end
In-Reply-To: <9A28FE44-C311-48E7-B41C-9E7D0FDB2E8C@xentek.net>
References: <49FB1063.5040509@poplarware.com>
	<49FB160E.1060905@poplarware.com>	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com>	<427667db0905011831s7e97ca27q71f51717a2571bcf@mail.gmail.com>
	<9A28FE44-C311-48E7-B41C-9E7D0FDB2E8C@xentek.net>
Message-ID: <49FCB9C8.2090003@gunters.org>

Eric Marden wrote:
> Can you explain how a firewall can block a client technology?

Many firewalls have the capability to do that. You can just block any 
HTTP requests that end with '.js', for one thing, or block responses 
with a Content-type of text/javascript or application/javascript (and 
other techniques). But organizations that want to do that will more 
likely have their users running thin clients or lock down the desktop OS 
security settings so that javascript is disabled in the browser, block 
the users from changing the settings.

-- 
Dougal Campbell <dougal@gunters.org>
http://dougal.gunters.org/
http://twitter.com/dougal
http://twitual.com/
From lynne.pope at gmail.com  Sun May  3 01:14:34 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Sun May  3 01:15:04 2009
Subject: [wp-hackers] Accessibility of WP back end (was: Is WP back end 
	supposed to work without JavaScript?)
In-Reply-To: <c8f37c930905021114w4cd75b4jfe09096b4dceabcd@mail.gmail.com>
References: <49FB1063.5040509@poplarware.com>
	<49FB160E.1060905@poplarware.com> 
	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com> 
	<427667db0905011831s7e97ca27q71f51717a2571bcf@mail.gmail.com> 
	<9A28FE44-C311-48E7-B41C-9E7D0FDB2E8C@xentek.net>
	<427667db0905012214h754791cdv9ce4105d6fbbd830@mail.gmail.com> 
	<427667db0905012235s4ec09ed0t52d976572fcadbe6@mail.gmail.com> 
	<c6c45a350905020126q149758dsef2b340549064785@mail.gmail.com> 
	<c8f37c930905021114w4cd75b4jfe09096b4dceabcd@mail.gmail.com>
Message-ID: <427667db0905021814m7b8a79e0yf24b6e74184c92f7@mail.gmail.com>

2009/5/3 Ryan Boren <ryan@boren.nu>

> On Sat, May 2, 2009 at 1:26 AM, Rich Pedley <elflop@googlemail.com> wrote:
> > Making the back end of WordPress accessible is something I'd certainly
> > be interested in helping with, and I know a few other people that
> > would be as well.
> >
> > I've looked at the page referenced to from trac
> > http://www.wac.ohio-state.edu/tutorials/forms/hiding-labels.htm
> > and that page is out of date - I'm sure Jaws now honours display:none
> > for a start. Moving labels off screen via the 'off-left' technique
> > appears to be the best solution.
>
> We had several people running JAWS against 2.7 before release and all
> was well. Alas, I don't have it to test with.  Could someone who
> actually uses it let us know how it's handling labels.  Ignoring
> hidden labels would seem to make little sense.  They exist solely for
> the benefit screen readers.



JAWS has honoured the "display:none" for several years now, making anything
hidden by "display:none" hidden from JAWS as well. It also honours
"visibility:hidden".

Lynne
From lynne.pope at gmail.com  Sun May  3 01:25:37 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Sun May  3 01:26:03 2009
Subject: [wp-hackers] Accessibility of WP back end
In-Reply-To: <49FB3EB8.2030203@poplarware.com>
References: <49FB1063.5040509@poplarware.com>
	<49FB160E.1060905@poplarware.com> 
	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com> 
	<49FB3EB8.2030203@poplarware.com>
Message-ID: <427667db0905021825p519e176av427ab4c37b3f5988@mail.gmail.com>

2009/5/2 Jennifer Hodgdon <yahgrp@poplarware.com>

> That is good to know. Jeremy: I have read that some of the dynamic update
> things could be difficult for (blind) screen reader users. How does your
> blind author like the Tags section, when he adds a tag and it appears? Can
> he use the X buttons to delete the tags?
>
> In any case, blindness is not the only issue. From the introduction to the
> WCAG guidelines (http://www.w3.org/TR/1999/WAI-WEBCONTENT-19990505/):


Note: WCAG 2.0 is the current version. It can be found here:
http://www.w3.org/TR/WCAG20/
It contains some significant changes from WCAG 1.0 and also addresses some
issues where WCAG 1.0 was not worded correctly (which meant it was being
misinterpreted).

Lynne
From lynne.pope at gmail.com  Sun May  3 08:02:15 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Sun May  3 08:02:42 2009
Subject: [wp-hackers] Request for new mailing list wp-accessibility
Message-ID: <427667db0905030102i653393e0k4a79d2b66700ce68@mail.gmail.com>

This is a request for a new mailing list please.

To date, anyone raising accessibility issues and proposing fixes is doing so
either on wp-hackers, wp-testers, on the forums or in responses to surveys.
Accessibility is an aspect of WP development that would benefit from an
informal "working group" and having its own mailing list would enable those
of us who know ATAG, WCAG and the other accessibility guidelines well, and
how to implement them, to bring forward issues and reach agreement on the
most appropriate fixes.

There are a number of people outside of wp-hackers who are interested in
seeing WordPress become accessible and having a mailing list may encourage
these people to contribute.

Getting all accessibility issues into one place would be a great step
forward on its own. Too much inaccurate advice is being given elsewhere,
including on the tracker, and this creates the risk that the core team can
end up wasting time on code that they think will aid accessibility, but
which does not - thereby compounding the problems.

I hope you will view this request favourably and set up a new
wp-accessibility mailing list.
Apologies if this is not the right place to ask - I couldn't see where else
I should direct this request.

Lynne
From elflop at googlemail.com  Sun May  3 08:13:54 2009
From: elflop at googlemail.com (Rich Pedley)
Date: Sun May  3 08:14:09 2009
Subject: [wp-hackers] Accessibility of WP back end (was: Is WP back end 
	supposed to work without JavaScript?)
In-Reply-To: <c8f37c930905021114w4cd75b4jfe09096b4dceabcd@mail.gmail.com>
References: <49FB1063.5040509@poplarware.com> <49FB160E.1060905@poplarware.com>
	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com>
	<427667db0905011831s7e97ca27q71f51717a2571bcf@mail.gmail.com>
	<9A28FE44-C311-48E7-B41C-9E7D0FDB2E8C@xentek.net>
	<427667db0905012214h754791cdv9ce4105d6fbbd830@mail.gmail.com>
	<427667db0905012235s4ec09ed0t52d976572fcadbe6@mail.gmail.com>
	<c6c45a350905020126q149758dsef2b340549064785@mail.gmail.com>
	<c8f37c930905021114w4cd75b4jfe09096b4dceabcd@mail.gmail.com>
Message-ID: <c6c45a350905030113j74345d2ej152d35a992e438cf@mail.gmail.com>

2009/5/2 Ryan Boren <ryan@boren.nu>:

> We had several people running JAWS against 2.7 before release and all
> was well. Alas, I don't have it to test with. ?Could someone who
> actually uses it let us know how it's handling labels. ?Ignoring
> hidden labels would seem to make little sense. ?They exist solely for
> the benefit screen readers.

yes but display:none has been used for other things, not just labels.

Whilst on the subject of accessibility, it should be noted that by
default WP produces some things which can be considered inaccessible.
One prime example is the 'Read more' link text. In WCAG 1 it stated
that link text should be unique. the Read More link specifically can
appear several times on a page, but link to different pages. I know it
can be customised, but if you want WP to be considered accessible out
of the box, then that would need changing.
( I can't say for certainty what appear in WCAG 2, I'm not fully upto
speed with it).

oh and
http://accessites.org/site/2008/11/wordpress-and-accessibility/
is a good read.

Rich

-- 
my mind is on a permanent tangent
http://cms.elfden.co.uk/
From wp-hackers at striderweb.com  Sun May  3 12:27:19 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sun May  3 12:27:43 2009
Subject: [wp-hackers] Accessibility of WP back end (was: Is WP back end
	supposed to work without JavaScript?)
In-Reply-To: <c6c45a350905030113j74345d2ej152d35a992e438cf@mail.gmail.com>
References: <49FB1063.5040509@poplarware.com> <49FB160E.1060905@poplarware.com>
	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com>
	<427667db0905011831s7e97ca27q71f51717a2571bcf@mail.gmail.com>
	<9A28FE44-C311-48E7-B41C-9E7D0FDB2E8C@xentek.net>
	<427667db0905012214h754791cdv9ce4105d6fbbd830@mail.gmail.com>
	<427667db0905012235s4ec09ed0t52d976572fcadbe6@mail.gmail.com>
	<c6c45a350905020126q149758dsef2b340549064785@mail.gmail.com>
	<c8f37c930905021114w4cd75b4jfe09096b4dceabcd@mail.gmail.com>
	<c6c45a350905030113j74345d2ej152d35a992e438cf@mail.gmail.com>
Message-ID: <914FD95E-54AC-4AC6-A74C-A22CE02DC805@striderweb.com>

FYI --

I don't know how accurate it is, but there is a Firefox plugin called  
"Fangs" that is designed to take a page and turn it into text  
approximating what a user of JAWS hears.

http://www.standards-schmandards.com/projects/fangs/

Stephen


-- 
Stephen Rider
http://striderweb.com/




From alan at verselogic.net  Sun May  3 12:43:10 2009
From: alan at verselogic.net (Alan Castonguay)
Date: Sun May  3 12:43:32 2009
Subject: [wp-hackers] add_meta_box without checked?
In-Reply-To: <db047a770905011511j418d29f8yc1b87046bcce6995@mail.gmail.com>
References: <db047a770904301306y147b4508v850dddcabf159e37@mail.gmail.com>
	<349fe48b0905010110k342a50b4o963251d9ac257fe5@mail.gmail.com>
	<1fa535a70905010920l72b6c461qf501b1467d2841f5@mail.gmail.com>
	<db047a770905011145mb7175b9j323d2b9c97af112c@mail.gmail.com>
	<db047a770905011318n362aaa10x398b0c31e6f6e6b3@mail.gmail.com>
	<1fa535a70905011444t4fa62543p76cdfa8834fe1b62@mail.gmail.com>
	<db047a770905011511j418d29f8yc1b87046bcce6995@mail.gmail.com>
Message-ID: <E4F9127D-3B28-4A7C-BF3E-55E6616C9269@verselogic.net>

Frank,

This SQL will only run on activation of the plugin. The speed of this  
SQL is not nearly as important as manageability.

However, get_hidden_meta_boxes() uses get_user_option() which is based  
on the current user, so this is actually going to blow away everyone  
else's preferences with respect to hidden boxes.

Why don't you filter on get_user_option_meta-box-hidden_page and  
get_user_option_meta-box-hidden_post?


Alan J Castonguay


-------------- next part --------------


On May 1, 2009, at 6:11 PM, Frank Bueltge wrote:

> Thanks John,
> I think get_users_of_blog() is little bid bogger, more datas and my  
> sql is
> faster for this. I will only the ID.
>
> Thanks a lot for your time and help!
>
> Best regards
> Frank
>
> __
> Das Buch: WordPress - Weblogs einrichten und administrieren, Open  
> Source
> Press
> ISBN 978-3-937514-33-8
> http://wordpress-buch.bueltge.de/das-buch/
>
> http://bueltge.de : frank@bueltge.de
> http://wpengineer.com : frank@wpengineer.com
> __
> Frank B?ltge
> Tel:    +49 3691 212951
> Mobil:  +49 170 5322053
> E-Mail: f.bueltge@inpsyde.com
>
> Inpsyde GmbH
> Mutzer Heide 3
> 51467 Bergisch Gladbach
>
> Steuernr: 204/5756/0999 Steueridentnr.: DE263849534
> Gesch?ftsf?hrender Gesellschafter: H. Roh? HRB 65224 Amtsgericht K?ln
>
> http://inpsyde.com
> http://pressthis.de
>
>
> On Fri, May 1, 2009 at 11:44 PM, John Blackbourn
> <johnbillion+wp@gmail.com<johnbillion%2Bwp@gmail.com>
>> wrote:
>
>> Looks good Frank. You could also use get_users_of_blog() instead of
>> your SQL query.
>>
>> John.
>>
>> 2009/5/1 Frank Bueltge <frank@bueltge.de>:
>>> @John and scribu:
>>> i have no found a other solution as set the user_meta_dat for  
>>> this. I
>> have
>>> write a small function to write the usermeta on activate the plugin.
>> Please
>>> -waht do you think about this?
>>>
>>> register_activation_hook( __FILE__, array(&$this, 'install') );
>>>       function install() {
>>>           global $wpdb;
>>>
>>>           $wp_users = $wpdb->get_results(
>>>
>>> $wpdb->prepare(
>>>
>>>               "SELECT ID
>>>
>>>                FROM   $wpdb->users
>>>
>>>                ORDER  BY ID"
>>>
>>>               )
>>>                                                               );
>>>
>>>           $hidden_page = array();
>>>           $hidden_post = array();
>>>           $hidden_page = get_hidden_meta_boxes('page');
>>>           $hidden_post = get_hidden_meta_boxes('post');
>>>           array_push( $hidden_page, 'mygermancityfacts' );
>>>           array_push( $hidden_post, 'mygermancityfacts' );
>>>           foreach ( $wp_users as $user ) {
>>>               $userID = (int) $user->ID;
>>>               update_usermeta( $userID, 'metaboxhidden_page',
>> $hidden_page
>>> );
>>>               update_usermeta( $userID, 'metaboxhidden_post',
>> $hidden_post
>>> );
>>>           }
>>>       }
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From dragonfly at dragonflyeye.net  Sun May  3 13:08:26 2009
From: dragonfly at dragonflyeye.net (Thomas Belknap)
Date: Sun May  3 13:08:37 2009
Subject: [wp-hackers] wp_add_post_tags Return Value
Message-ID: <77b239a00905030608j20ef6c8x3e4a3adf19643a45@mail.gmail.com>

Can anyone tell me why wp_add_post_tags() only returns either null or
false?  Seems like it would be helpful for the function to return true if it
worked.  It's very hard to test around it when the function consistently
returns negative values. . .
From alan at verselogic.net  Sun May  3 13:22:55 2009
From: alan at verselogic.net (Alan Castonguay)
Date: Sun May  3 13:23:20 2009
Subject: [wp-hackers] wp_add_post_tags Return Value
In-Reply-To: <77b239a00905030608j20ef6c8x3e4a3adf19643a45@mail.gmail.com>
References: <77b239a00905030608j20ef6c8x3e4a3adf19643a45@mail.gmail.com>
Message-ID: <D5B5A051-91B9-4826-A313-A574634F4257@verselogic.net>

wp_add_post_tags() returns false for invalid post_id, and null for  
success, because that's what wp_set_post_terms() does.

This calls wp_set_object_terms() which returns either WP_Error or a  
term_info array (termid, termtaxonomyid) on error, or an array of  
other ids on success? I'm afraid I don't quite understand this function.

Alan J Castonguay


-------------- next part --------------


On May 3, 2009, at 9:08 AM, Thomas Belknap wrote:

> Can anyone tell me why wp_add_post_tags() only returns either null or
> false?  Seems like it would be helpful for the function to return  
> true if it
> worked.  It's very hard to test around it when the function  
> consistently
> returns negative values. . .
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From lynne.pope at gmail.com  Sun May  3 13:35:46 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Sun May  3 13:36:14 2009
Subject: [wp-hackers] Accessibility of WP back end (was: Is WP back end 
	supposed to work without JavaScript?)
In-Reply-To: <914FD95E-54AC-4AC6-A74C-A22CE02DC805@striderweb.com>
References: <49FB1063.5040509@poplarware.com>
	<e1202cb10905011104j7a85e933m1c1297d40d7ab90f@mail.gmail.com> 
	<427667db0905011831s7e97ca27q71f51717a2571bcf@mail.gmail.com> 
	<9A28FE44-C311-48E7-B41C-9E7D0FDB2E8C@xentek.net>
	<427667db0905012214h754791cdv9ce4105d6fbbd830@mail.gmail.com> 
	<427667db0905012235s4ec09ed0t52d976572fcadbe6@mail.gmail.com> 
	<c6c45a350905020126q149758dsef2b340549064785@mail.gmail.com> 
	<c8f37c930905021114w4cd75b4jfe09096b4dceabcd@mail.gmail.com> 
	<c6c45a350905030113j74345d2ej152d35a992e438cf@mail.gmail.com> 
	<914FD95E-54AC-4AC6-A74C-A22CE02DC805@striderweb.com>
Message-ID: <427667db0905030635y2157d07bk48e8393426ad940b@mail.gmail.com>

2009/5/4 Stephen Rider <wp-hackers@striderweb.com>

> FYI --
>
> I don't know how accurate it is, but there is a Firefox plugin called
> "Fangs" that is designed to take a page and turn it into text approximating
> what a user of JAWS hears.


Fangs is useful as a very basic, unsophisticated reading tool but does not
emulate JAWS or EYES. It is however useful for getting an idea of how a page
reads. Fire Vox is another Firefox addon - this does a better job but,
again, does not emulate JAWS. Both Fangs and Fire Vox are useful aids to
theme designers and site owners who do not have much experience with
accessibility but who want to get an indication as to how accessible their
sites may be.

Its also worth noting that even though you can download a trial of JAWS this
is not likely to help determine the level of accessibility. JAWS (and EYES)
are really complicated to use and, JAWS especially, takes a lot of time and
training to learn. Then to add to the mix, the results from testing with
JAWS are further influenced by which browser is being used to access the
web, and the level of experience the user has with both JAWS and the
browser.
Add to this the fact that people use different versions of assistive devices
and different versions of browsers, and the whole testing thing becomes very
complex.

However, this is why W3C has its web accessibility initiative (WAI) and if
WordPress can meet ATAG in the administration area, and WCAG 2 requirements
in the frontend, it will achieve a high level of accessibility (and beat
competing blogging platforms hands down).

Lynne
From yahgrp at poplarware.com  Sun May  3 14:32:58 2009
From: yahgrp at poplarware.com (Jennifer Hodgdon)
Date: Sun May  3 14:31:26 2009
Subject: [wp-hackers] Request for new mailing list wp-accessibility
In-Reply-To: <427667db0905030102i653393e0k4a79d2b66700ce68@mail.gmail.com>
References: <427667db0905030102i653393e0k4a79d2b66700ce68@mail.gmail.com>
Message-ID: <49FDAB1A.305@poplarware.com>

+1 on the idea of a wp-accessibility list.

What a great thought, to connect people who know a lot about 
accessibility, ATAG, WCAG, etc. and could identify the issues (but not 
necessarily fix them), with other people who care and have the 
time/knowledge to patch WP but not the accessibility domain knowledge 
to know what should be done (such as myself).

Regards,
    Jennifer

ps: If Automattic declines to start a new list, we could also get one 
going easily on Google Groups. And if we did that, we could still list 
it on the Mailing Lists page of the Codex (it's a Wiki). Just a thought.

Lynne Pope wrote:
> This is a request for a new mailing list please.
> 
> To date, anyone raising accessibility issues and proposing fixes is doing so
> either on wp-hackers, wp-testers, on the forums or in responses to surveys.
> Accessibility is an aspect of WP development that would benefit from an
> informal "working group" and having its own mailing list would enable those
> of us who know ATAG, WCAG and the other accessibility guidelines well, and
> how to implement them, to bring forward issues and reach agreement on the
> most appropriate fixes.

-- 
Jennifer Hodgdon * Poplar ProductivityWare
www.poplarware.com
Drupal, WordPress, and custom Web programming

From elflop at googlemail.com  Sun May  3 16:09:09 2009
From: elflop at googlemail.com (Rich Pedley)
Date: Sun May  3 16:09:25 2009
Subject: [wp-hackers] Request for new mailing list wp-accessibility
In-Reply-To: <49FDAB1A.305@poplarware.com>
References: <427667db0905030102i653393e0k4a79d2b66700ce68@mail.gmail.com>
	<49FDAB1A.305@poplarware.com>
Message-ID: <c6c45a350905030909y45b06928sa881a735738c9cc4@mail.gmail.com>

Well I had suggested it elsewhere, so count me in. I can probably
cajole 4 or 5 WP/accessibility people as well.
-- 
my mind is on a permanent tangent
http://cms.elfden.co.uk/
From peter.westwood at ftwr.co.uk  Sun May  3 16:26:52 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sun May  3 16:27:08 2009
Subject: [wp-hackers] Storing IP's in the DB
In-Reply-To: <49F9B296.3020800@gunters.org>
References: <ae81acd10904300649m1a16708cy2e43d0998053445b@mail.gmail.com>
	<49F9B296.3020800@gunters.org>
Message-ID: <68569038-9432-4DF7-82F4-C2DAEEB61CF6@ftwr.co.uk>


On 30 Apr 2009, at 15:15, Dougal Campbell wrote:

> Ozh wrote:
>> Hey peeps
>>
>> I've read that it's better & faster to store IP as integers instead  
>> of
>> strings, and then using INET_ATON / INET_NTOA functions to convert
>> (the argument being that MySQL is faster with numbers than with
>> strings)
>>
>> Any reason why WP is not doing this?
>>
>
> The only place that Core stores IP numbers is for comments, right?  
> Do we ever do any indexing by IP number? Even if so, it's not a very  
> common operation. It's probably mostly a case of "If it ain't broke,  
> don't fix it." There's just not much to gain by changing that,  
> except for the rare case of sites that spend a lot of time reviewing  
> zillions of spam comments and grouping/sorting them by IP.
>

And we also need to be forward compatible for IPv6 if we go down this  
route.

I'm not sure I see of a end-user benefit in converting the addresses  
to integers

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From peter.westwood at ftwr.co.uk  Sun May  3 16:40:15 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sun May  3 16:40:32 2009
Subject: [wp-hackers] 24-hour has-patch marathon TODAY
In-Reply-To: <1fa535a70904300725j2a711f84n7031a6f6a7579219@mail.gmail.com>
References: <e05a63ba0904161527y37e1c42bw5f506521f732c00a@mail.gmail.com>
	<C60D074D.2E6B2%chris@clwill.com>
	<df41a9470904292008x37013bere947bd9d2dd0f267@mail.gmail.com>
	<349fe48b0904292318v1863b067g2ba672d7c7260b23@mail.gmail.com>
	<1223777C-BC3A-4027-97FA-5EB00D08C040@striderweb.com>
	<49F9B249.9080309@poplarware.com>
	<1fa535a70904300725j2a711f84n7031a6f6a7579219@mail.gmail.com>
Message-ID: <FB50C7CB-9272-4307-9075-76F28DAB4EAE@ftwr.co.uk>


On 30 Apr 2009, at 15:25, John Blackbourn wrote:

> How about "simple-patch" in addition to "has-patch" ?
>
> 2009/4/30 Jennifer Hodgdon <yahgrp@poplarware.com>
>>>>
>>>> Perhaps we should start tagging simple patches with the tag  
>>>> "simple"
>>>> or "quick" in the hope that it will be reviewed faster?
>>>>
>>>> Of course this defacto standard would need some publicity to be  
>>>> helpful.
>>>
>>> LOL.  Better go with "simple".  "Quick" would be used by anyone  
>>> who wants their patch committed NOW.
>>
>> "Quick" can also refer to the "quick edit" functionality in WP, so  
>> it might not be a useful tag search term. So I'm definitely +1 on  
>> making "simple" an official keyword.
>>
>> From a practical perspective, you would need to add the new keyword  
>> to
>>   http://codex.wordpress.org/Reporting_Bugs#Trac_Keywords
>> and also it would be useful to make a query that looks for "has- 
>> patch" with "simple" at
>>  http://core.trac.wordpress.org/report
>> to make it useful. Anyone can edit the Codex, but I believe a Trac  
>> admin needs to add the new query.
>>
>> Or better yet, maybe add "has-patch" + "simple" to the {9} Commit  
>> Candidates query on the Reports page?


Adding extra keywords really isn't going to help the workload! -  I  
get enough mail from the wp-trac mailing list as it is.


Reading back through this thread (I was on Holiday when the patch  
marathon occurred) I have the following comments:

What it really needs it people to understand that patch review takes  
time.

Time to read the code, time to understand what the problem is meant to  
be, etc.

If you want your patch to be accepted quickly then the following would  
be helpful.

Describe the issue clearly, if the issue is related to plugin/theme  
code you can't get to work then give us an example which shows the  
issue.
Follow the coding standards.
Champion your patch - contact the dev team in IRC.
Keep your patch up to date.

Now, I'm off to review and commit some patches

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From frank at bueltge.de  Sun May  3 16:40:16 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Sun May  3 16:40:46 2009
Subject: [wp-hackers] add_meta_box without checked?
In-Reply-To: <E4F9127D-3B28-4A7C-BF3E-55E6616C9269@verselogic.net>
References: <db047a770904301306y147b4508v850dddcabf159e37@mail.gmail.com> 
	<349fe48b0905010110k342a50b4o963251d9ac257fe5@mail.gmail.com> 
	<1fa535a70905010920l72b6c461qf501b1467d2841f5@mail.gmail.com> 
	<db047a770905011145mb7175b9j323d2b9c97af112c@mail.gmail.com> 
	<db047a770905011318n362aaa10x398b0c31e6f6e6b3@mail.gmail.com> 
	<1fa535a70905011444t4fa62543p76cdfa8834fe1b62@mail.gmail.com> 
	<db047a770905011511j418d29f8yc1b87046bcce6995@mail.gmail.com> 
	<E4F9127D-3B28-4A7C-BF3E-55E6616C9269@verselogic.net>
Message-ID: <db047a770905030940r2deebd89l23e04c72413b86af@mail.gmail.com>

Hello Alan,

yes, you have right, also i will set the useroptions on install of the
plugin, it is realy god to use the WP function.
The filter ist a nice idea, i will see for this possibility. Thanks for this
advice.

Bets regards.
Frank
From ozh at planetozh.com  Mon May  4 15:09:58 2009
From: ozh at planetozh.com (Ozh)
Date: Mon May  4 15:10:53 2009
Subject: [wp-hackers] register_setting tip
In-Reply-To: <c8f37c930810210952m658fcf8bv669c72ece116cfec@mail.gmail.com>
Message-ID: <OF55BD3F2C.A6B5F0CA-ONC12575AC.0052ACE9-C12575AC.00535001@notes.edfgdf.fr>

Peeps,

I'm pretty sure this has been answered already and I'll probably commit 
sepukku when I get the answer, but I can't recall it.

With, on init :
register_setting('ozh-options', 'ozh-1', 'intval');
register_setting('ozh-options', 'ozh-2', 'intval');

And then on the admin form:
<?php settings_fields('ozh-options'); ?>
<input type="text" value="<?php echo get_option('ozh-1'); ?>" 
name="ozh-1"/>
<input type="text" value="<?php echo get_option('ozh-2'); ?>" 
name="ozh-2"/>

You end up with one DB entry for each option.

What's the trick again to store everything in one entry, using the new 
register_setting API ?

Ozh

From ncrice at gmail.com  Mon May  4 21:42:37 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Mon May  4 21:43:14 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
Message-ID: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>

I was wondering if there are any WP_Query hackers out there who might be
able to help me achieve what I'm looking to achieve here.

I have a site which has a section on the homepage that pulls the latest post
from each of 6 different categories.  As of now, I'm running 6 separate
instances of WP_Query to get the latest post from each of the 6 categories.

I would very much like to reduce this down to only a single query, if
possible.

Is there any combination of parameters I can pass to "new WP_Query" in order
to get it to return the latest post from each of the 6 categories.

If so, that would be awesome.

Thanks!
Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice
From mikeschinkel at newclarity.net  Mon May  4 22:03:26 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon May  4 22:04:25 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl43H3Y6523b879f4b5dfc8fd9c37,
	mikeschinkel@newclarity.net, 75FB23A8-4FFC-4872-9B38>

You are probably going to need to use "posts_where" and "posts_join"  
hooks.  Definitely not ideal, but since WP_Query() unfortunately  
doesn't handle that level of complexity, that's what you'll need.  Are  
you familiar with how to build that query in SQL?

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/




On May 4, 2009, at 5:42 PM, Nathan Rice wrote:

> I was wondering if there are any WP_Query hackers out there who  
> might be
> able to help me achieve what I'm looking to achieve here.
>
> I have a site which has a section on the homepage that pulls the  
> latest post
> from each of 6 different categories.  As of now, I'm running 6  
> separate
> instances of WP_Query to get the latest post from each of the 6  
> categories.
>
> I would very much like to reduce this down to only a single query, if
> possible.
>
> Is there any combination of parameters I can pass to "new WP_Query"  
> in order
> to get it to return the latest post from each of the 6 categories.
>
> If so, that would be awesome.
>
> Thanks!
> Nathan
>
> My Website
> http://www.nathanrice.net/
>
> My Twitter
> http://twitter.com/nathanrice
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From paul at codehooligans.com  Mon May  4 22:08:11 2009
From: paul at codehooligans.com (Paul)
Date: Mon May  4 22:08:28 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
Message-ID: <7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>

Nathan,

Are you handling the display of the posts from the 6 categories in  
groups? Meaning are you:

1. Query for 6 posts in category 'A'. Display loop of items.
2. Query for 6 posts in category 'B'. Display loop of items.
3. Query for 6 posts in category 'C'. Display loop of items.
etc.

Or is it more like Query post from category A,B,C,D,E,F. Display loop  
of items.

I'm not sure why you are using 6 different WP_Query instances.


Paul


On May 4, 2009, at 4:42 PM, Nathan Rice wrote:

> I was wondering if there are any WP_Query hackers out there who  
> might be
> able to help me achieve what I'm looking to achieve here.
>
> I have a site which has a section on the homepage that pulls the  
> latest post
> from each of 6 different categories.  As of now, I'm running 6  
> separate
> instances of WP_Query to get the latest post from each of the 6  
> categories.
>
> I would very much like to reduce this down to only a single query, if
> possible.
>
> Is there any combination of parameters I can pass to "new WP_Query"  
> in order
> to get it to return the latest post from each of the 6 categories.
>
> If so, that would be awesome.
>
> Thanks!
> Nathan
>
> My Website
> http://www.nathanrice.net/
>
> My Twitter
> http://twitter.com/nathanrice
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at newclarity.net  Mon May  4 22:17:35 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon May  4 22:20:06 2009
Subject: [wp-hackers] register_setting tip
In-Reply-To: <OF55BD3F2C.A6B5F0CA-ONC12575AC.0052ACE9-C12575AC.00535001@notes.edfgdf.fr>
References: <OF55BD3F2C.A6B5F0CA-ONC12575AC.0052ACE9-C12575AC.00535001@notes.edfgdf.fr>
Message-ID: <EMEWEMEW2_DELIMl43HHa685af1f415a5c47ad95030,
	mikeschinkel@newclarity.net, 6A20043D-1036-4C94-B0CD>

Ozh,

Is the trick to create a sanitize function that would do the  
management of the setting for you, maybe?

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/




On May 4, 2009, at 11:09 AM, Ozh wrote:

> Peeps,
>
> I'm pretty sure this has been answered already and I'll probably  
> commit
> sepukku when I get the answer, but I can't recall it.
>
> With, on init :
> register_setting('ozh-options', 'ozh-1', 'intval');
> register_setting('ozh-options', 'ozh-2', 'intval');
>
> And then on the admin form:
> <?php settings_fields('ozh-options'); ?>
> <input type="text" value="<?php echo get_option('ozh-1'); ?>"
> name="ozh-1"/>
> <input type="text" value="<?php echo get_option('ozh-2'); ?>"
> name="ozh-2"/>
>
> You end up with one DB entry for each option.
>
> What's the trick again to store everything in one entry, using the new
> register_setting API ?
>
> Ozh
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at newclarity.net  Mon May  4 22:24:55 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon May  4 22:28:28 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
	<7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>
Message-ID: <EMEWEMEW2_DELIMl43HOv09d6caa134a219fb4943f0,
	mikeschinkel@newclarity.net, 4F8229B7-BCD6-455F-8096>

My guess is he wants the latest posts from each category individually,  
not just the latest posts from a list of categories. That's a very  
different SQL statement.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/




On May 4, 2009, at 6:08 PM, Paul wrote:

> Nathan,
>
> Are you handling the display of the posts from the 6 categories in  
> groups? Meaning are you:
>
> 1. Query for 6 posts in category 'A'. Display loop of items.
> 2. Query for 6 posts in category 'B'. Display loop of items.
> 3. Query for 6 posts in category 'C'. Display loop of items.
> etc.
>
> Or is it more like Query post from category A,B,C,D,E,F. Display  
> loop of items.
>
> I'm not sure why you are using 6 different WP_Query instances.
>
>
> Paul
>
>
> On May 4, 2009, at 4:42 PM, Nathan Rice wrote:
>
>> I was wondering if there are any WP_Query hackers out there who  
>> might be
>> able to help me achieve what I'm looking to achieve here.
>>
>> I have a site which has a section on the homepage that pulls the  
>> latest post
>> from each of 6 different categories.  As of now, I'm running 6  
>> separate
>> instances of WP_Query to get the latest post from each of the 6  
>> categories.
>>
>> I would very much like to reduce this down to only a single query, if
>> possible.
>>
>> Is there any combination of parameters I can pass to "new WP_Query"  
>> in order
>> to get it to return the latest post from each of the 6 categories.
>>
>> If so, that would be awesome.
>>
>> Thanks!
>> Nathan
>>
>> My Website
>> http://www.nathanrice.net/
>>
>> My Twitter
>> http://twitter.com/nathanrice
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From paul at codehooligans.com  Mon May  4 22:36:28 2009
From: paul at codehooligans.com (Paul)
Date: Mon May  4 22:36:45 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <EMEWEMEW2_DELIMl43HOv09d6caa134a219fb4943f0,
	mikeschinkel@newclarity.net, 4F8229B7-BCD6-455F-8096>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
	<7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>
	<EMEWEMEW2_DELIMl43HOv09d6caa134a219fb4943f0,
	mikeschinkel@newclarity.net, 4F8229B7-BCD6-455F-8096>
Message-ID: <A109DE34-B1E2-4E1B-A1CB-11C972E2DF9B@codehooligans.com>

Yeah started thinking that after sending the email. After a reread my  
guess is getting the latest one post from each of the 6 categories  
regardless of post_date is not something that can be done via a single  
SQL query itself. But if someone comes up with an idea I hope they  
post it to share with others.

P-



On May 4, 2009, at 5:24 PM, Mike Schinkel wrote:

> My guess is he wants the latest posts from each category  
> individually, not just the latest posts from a list of categories.  
> That's a very different SQL statement.
>
> -Mike Schinkel
> WordPress Custom Plugins
> http://mikeschinkel.com/custom-wordpress-plugins/
>
>
>
>
> On May 4, 2009, at 6:08 PM, Paul wrote:
>
>> Nathan,
>>
>> Are you handling the display of the posts from the 6 categories in  
>> groups? Meaning are you:
>>
>> 1. Query for 6 posts in category 'A'. Display loop of items.
>> 2. Query for 6 posts in category 'B'. Display loop of items.
>> 3. Query for 6 posts in category 'C'. Display loop of items.
>> etc.
>>
>> Or is it more like Query post from category A,B,C,D,E,F. Display  
>> loop of items.
>>
>> I'm not sure why you are using 6 different WP_Query instances.
>>
>>
>> Paul
>>
>>
>> On May 4, 2009, at 4:42 PM, Nathan Rice wrote:
>>
>>> I was wondering if there are any WP_Query hackers out there who  
>>> might be
>>> able to help me achieve what I'm looking to achieve here.
>>>
>>> I have a site which has a section on the homepage that pulls the  
>>> latest post
>>> from each of 6 different categories.  As of now, I'm running 6  
>>> separate
>>> instances of WP_Query to get the latest post from each of the 6  
>>> categories.
>>>
>>> I would very much like to reduce this down to only a single query,  
>>> if
>>> possible.
>>>
>>> Is there any combination of parameters I can pass to "new  
>>> WP_Query" in order
>>> to get it to return the latest post from each of the 6 categories.
>>>
>>> If so, that would be awesome.
>>>
>>> Thanks!
>>> Nathan
>>>
>>> My Website
>>> http://www.nathanrice.net/
>>>
>>> My Twitter
>>> http://twitter.com/nathanrice
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at newclarity.net  Mon May  4 22:51:44 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Mon May  4 22:52:49 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <A109DE34-B1E2-4E1B-A1CB-11C972E2DF9B@codehooligans.com>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
	<7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>
	<EMEWEMEW2_DELIMl43HOv09d6caa134a219fb4943f0,
	mikeschinkel@newclarity.net, 4F8229B7-BCD6-455F-8096>
	<A109DE34-B1E2-4E1B-A1CB-11C972E2DF9B@codehooligans.com>
Message-ID: <EMEWEMEW2_DELIMl43Hpkbb6d11e05a4e1ae73ef5eb,
	mikeschinkel@newclarity.net, 2A27BFA6-38E5-4562-859A>

It can be done with a single SQL query but it requires complex joins,  
not something that WP_Query() can handle currently.

-Mike Schinkel
WordPress Custom Plugins
http://mikeschinkel.com/custom-wordpress-plugins/


On May 4, 2009, at 6:36 PM, Paul wrote:

> Yeah started thinking that after sending the email. After a reread  
> my guess is getting the latest one post from each of the 6  
> categories regardless of post_date is not something that can be done  
> via a single SQL query itself. But if someone comes up with an idea  
> I hope they post it to share with others.
>
> P-
>
>
>
> On May 4, 2009, at 5:24 PM, Mike Schinkel wrote:
>
>> My guess is he wants the latest posts from each category  
>> individually, not just the latest posts from a list of categories.  
>> That's a very different SQL statement.
>>
>> -Mike Schinkel
>> WordPress Custom Plugins
>> http://mikeschinkel.com/custom-wordpress-plugins/
>>
>>
>>
>>
>> On May 4, 2009, at 6:08 PM, Paul wrote:
>>
>>> Nathan,
>>>
>>> Are you handling the display of the posts from the 6 categories in  
>>> groups? Meaning are you:
>>>
>>> 1. Query for 6 posts in category 'A'. Display loop of items.
>>> 2. Query for 6 posts in category 'B'. Display loop of items.
>>> 3. Query for 6 posts in category 'C'. Display loop of items.
>>> etc.
>>>
>>> Or is it more like Query post from category A,B,C,D,E,F. Display  
>>> loop of items.
>>>
>>> I'm not sure why you are using 6 different WP_Query instances.
>>>
>>>
>>> Paul
>>>
>>>
>>> On May 4, 2009, at 4:42 PM, Nathan Rice wrote:
>>>
>>>> I was wondering if there are any WP_Query hackers out there who  
>>>> might be
>>>> able to help me achieve what I'm looking to achieve here.
>>>>
>>>> I have a site which has a section on the homepage that pulls the  
>>>> latest post
>>>> from each of 6 different categories.  As of now, I'm running 6  
>>>> separate
>>>> instances of WP_Query to get the latest post from each of the 6  
>>>> categories.
>>>>
>>>> I would very much like to reduce this down to only a single  
>>>> query, if
>>>> possible.
>>>>
>>>> Is there any combination of parameters I can pass to "new  
>>>> WP_Query" in order
>>>> to get it to return the latest post from each of the 6 categories.
>>>>
>>>> If so, that would be awesome.
>>>>
>>>> Thanks!
>>>> Nathan
>>>>
>>>> My Website
>>>> http://www.nathanrice.net/
>>>>
>>>> My Twitter
>>>> http://twitter.com/nathanrice
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From jer at simianuprising.com  Mon May  4 23:05:35 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon May  4 23:05:49 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <-8883832353182351671@unknownmsgid>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
	<7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>
	<A109DE34-B1E2-4E1B-A1CB-11C972E2DF9B@codehooligans.com>
	<-8883832353182351671@unknownmsgid>
Message-ID: <e1202cb10905041605p22b49b64h51da17b12b8c3210@mail.gmail.com>

Yeah, the SQL to accomplish this would be so complicated and prone to
breaking that you're probably better off working out an
intricately-complex caching system and using normal queries instead.

Also: If its just the front page of your site then as long as you have
wp-supercache or something like that running you probably won't be hit
too hard because that page will almost always be cached for visitors.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org
From speedboxer at gmail.com  Mon May  4 23:27:46 2009
From: speedboxer at gmail.com (Matt Freedman)
Date: Mon May  4 23:28:26 2009
Subject: [wp-hackers] register_setting tip
In-Reply-To: <OF55BD3F2C.A6B5F0CA-ONC12575AC.0052ACE9-C12575AC.00535001@notes.edfgdf.fr>
References: <c8f37c930810210952m658fcf8bv669c72ece116cfec@mail.gmail.com> 
	<OF55BD3F2C.A6B5F0CA-ONC12575AC.0052ACE9-C12575AC.00535001@notes.edfgdf.fr>
Message-ID: <b88434820905041627y83b1748md9c42e417dc040a2@mail.gmail.com>

IIRC, name all the fields you want to be in one option
"ozh[something]", then just register the option as "ozh".

On Mon, May 4, 2009 at 8:09 AM, Ozh <ozh@planetozh.com> wrote:
> Peeps,
>
> I'm pretty sure this has been answered already and I'll probably commit
> sepukku when I get the answer, but I can't recall it.
>
> With, on init :
> register_setting('ozh-options', 'ozh-1', 'intval');
> register_setting('ozh-options', 'ozh-2', 'intval');
>
> And then on the admin form:
> <?php settings_fields('ozh-options'); ?>
> <input type="text" value="<?php echo get_option('ozh-1'); ?>"
> name="ozh-1"/>
> <input type="text" value="<?php echo get_option('ozh-2'); ?>"
> name="ozh-2"/>
>
> You end up with one DB entry for each option.
>
> What's the trick again to store everything in one entry, using the new
> register_setting API ?
>
> Ozh
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Matt Freedman
Blog: http://mattsblog.ca/
Twitter: http://twitter.com/mattfreedman
From ncrice at gmail.com  Tue May  5 00:43:03 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Tue May  5 00:43:18 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <e1202cb10905041605p22b49b64h51da17b12b8c3210@mail.gmail.com>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
	<7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>
	<A109DE34-B1E2-4E1B-A1CB-11C972E2DF9B@codehooligans.com>
	<-8883832353182351671@unknownmsgid>
	<e1202cb10905041605p22b49b64h51da17b12b8c3210@mail.gmail.com>
Message-ID: <862d087f0905041743m6cd95a2cw7f4cc541f9dbdf1e@mail.gmail.com>

Thanks guys ... I'm basically hearing that there's no way for WP_Query to do
this without some sort of custom SQL query.

That's fine ... I just wanted to be sure that there wasn't a way that I was
overlooking.

wp-super-cache helps a lot, and there aren't a lot of issues, but the site
is a pretty large one and I want to make sure it can stand up as it grows.

If anybody has any other advice, I'd be happy to take it into consideration.

Thanks!
Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Mon, May 4, 2009 at 7:05 PM, Jeremy Clarke <jer@simianuprising.com>wrote:

> Yeah, the SQL to accomplish this would be so complicated and prone to
> breaking that you're probably better off working out an
> intricately-complex caching system and using normal queries instead.
>
> Also: If its just the front page of your site then as long as you have
> wp-supercache or something like that running you probably won't be hit
> too hard because that page will almost always be cached for visitors.
>
> --
> Jeremy Clarke
> Code and Design | globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From paul at codehooligans.com  Tue May  5 01:09:01 2009
From: paul at codehooligans.com (Paul)
Date: Tue May  5 01:09:24 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <e1202cb10905041605p22b49b64h51da17b12b8c3210@mail.gmail.com>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
	<7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>
	<A109DE34-B1E2-4E1B-A1CB-11C972E2DF9B@codehooligans.com>
	<-8883832353182351671@unknownmsgid>
	<e1202cb10905041605p22b49b64h51da17b12b8c3210@mail.gmail.com>
Message-ID: <E8811F28-3B2B-4D16-AE00-8790D978C62D@codehooligans.com>

Yeah. Not *that* complicated.

Nathan if you are still looking for something I have something for  
you. I can't figure out how to do this via WP_Query directly. I've not  
really used WP_Query that much for custom query only for filtering  
categories, tags, etc. I found it easier to build the query then call   
wpdb->get_results() function directly. This will return the result set  
(array). From there I can 'fake' the WP_Query object.

I'm hesitant to just paste the code here. So I've added the file to my  
site for download as a text file.
http://www.codehooligans.com/packages/page_test.txt

There is a leadin function for you to use. You can paste the function  
itself into your theme's functions.php file.


The lead-in function:

get_single_cat_items();

Take a number of arguments in traditional WP style:

get_single_cat_items('cats=9,157,8&return=wpquery&cache- 
key=single_cats');

The above will query the posts for categories 9, 157 and 8.
The 'return' parameter is used to tell the function to return a  
reference to a WP_Query object (default) or the raw posts array.
The 'cache-key' if set will use the old wp_cache_get(); function to  
prevent requery.

The SQL involved is not really that complicated but does require  
subqueries, one for each category. So you need to make sure your MySQL  
is up to 4.1 (or better 5.x). Below is the SQL for the three  
categories 9,157,8. As you can see it's alot but repeats the same  
basic SQL for each category

SELECT * FROM wp_posts WHERE ID = (
		SELECT wp_posts.ID
		FROM wp_posts
			INNER JOIN wp_term_relationships ON ( wp_posts.ID =  
wp_term_relationships.object_id )
			INNER JOIN wp_term_taxonomy ON  
( wp_term_relationships.term_taxonomy_id =  
wp_term_taxonomy.term_taxonomy_id )
		WHERE 1 =1
			AND wp_term_taxonomy.taxonomy =  'category'
			AND wp_term_taxonomy.term_id IN ('9')
			AND wp_posts.post_type =  'post'
			AND (wp_posts.post_status =  'publish' OR wp_posts.post_status =   
'private')
		ORDER BY wp_posts.post_date DESC
		LIMIT 1
	)
	OR ID = (
		SELECT wp_posts.ID
		FROM wp_posts
			INNER JOIN wp_term_relationships ON ( wp_posts.ID =  
wp_term_relationships.object_id )
			INNER JOIN wp_term_taxonomy ON  
( wp_term_relationships.term_taxonomy_id =  
wp_term_taxonomy.term_taxonomy_id )
		WHERE 1 =1
			AND wp_term_taxonomy.taxonomy =  'category'
			AND wp_term_taxonomy.term_id IN ('157')
			AND wp_posts.post_type =  'post'
			AND (wp_posts.post_status =  'publish' OR wp_posts.post_status =   
'private')
		ORDER BY wp_posts.post_date DESC
		LIMIT 1
	)
	OR ID = (
		SELECT wp_posts.ID
		FROM wp_posts
			INNER JOIN wp_term_relationships ON ( wp_posts.ID =  
wp_term_relationships.object_id )
			INNER JOIN wp_term_taxonomy ON  
( wp_term_relationships.term_taxonomy_id =  
wp_term_taxonomy.term_taxonomy_id )
		WHERE 1 =1
			AND wp_term_taxonomy.taxonomy =  'category'
			AND wp_term_taxonomy.term_id IN ('8')
			AND wp_posts.post_type =  'post'
			AND (wp_posts.post_status =  'publish' OR wp_posts.post_status =   
'private')
		ORDER BY wp_posts.post_date DESC
		LIMIT 1
	)




On May 4, 2009, at 6:05 PM, Jeremy Clarke wrote:

> Yeah, the SQL to accomplish this would be so complicated and prone to
> breaking that you're probably better off working out an
> intricately-complex caching system and using normal queries instead.
>
> Also: If its just the front page of your site then as long as you have
> wp-supercache or something like that running you probably won't be hit
> too hard because that page will almost always be cached for visitors.
>
> -- 
> Jeremy Clarke
> Code and Design | globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ncrice at gmail.com  Tue May  5 02:15:13 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Tue May  5 02:15:32 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <E8811F28-3B2B-4D16-AE00-8790D978C62D@codehooligans.com>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
	<7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>
	<A109DE34-B1E2-4E1B-A1CB-11C972E2DF9B@codehooligans.com>
	<-8883832353182351671@unknownmsgid>
	<e1202cb10905041605p22b49b64h51da17b12b8c3210@mail.gmail.com>
	<E8811F28-3B2B-4D16-AE00-8790D978C62D@codehooligans.com>
Message-ID: <862d087f0905041915h525c24d6n5eda4c4e9c1f7334@mail.gmail.com>

Paul,
Would this be more, or less, expensive of a process than the 6 separate
WP_Query objects? That might sound like a stupid question, but I'm a
complete noob when it comes to SQL processes.

This particular site has had trouble in the past with database overload
(before wp_super_cache), so I want to be sure that I'm using the least
taxing method available.

Then again, if wp-super-cache is taking care of reducing queries, then this
may all be unnecessary.  I just need to make sure I'm doing everything I can
do to make it better.

At the very least, this points out a limitation in the WP_Query object
parameters.

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Mon, May 4, 2009 at 9:09 PM, Paul <paul@codehooligans.com> wrote:

> Yeah. Not *that* complicated.
>
> Nathan if you are still looking for something I have something for you. I
> can't figure out how to do this via WP_Query directly. I've not really used
> WP_Query that much for custom query only for filtering categories, tags,
> etc. I found it easier to build the query then call  wpdb->get_results()
> function directly. This will return the result set (array). From there I can
> 'fake' the WP_Query object.
>
> I'm hesitant to just paste the code here. So I've added the file to my site
> for download as a text file.
> http://www.codehooligans.com/packages/page_test.txt
>
> There is a leadin function for you to use. You can paste the function
> itself into your theme's functions.php file.
>
>
> The lead-in function:
>
> get_single_cat_items();
>
> Take a number of arguments in traditional WP style:
>
> get_single_cat_items('cats=9,157,8&return=wpquery&cache-key=single_cats');
>
> The above will query the posts for categories 9, 157 and 8.
> The 'return' parameter is used to tell the function to return a reference
> to a WP_Query object (default) or the raw posts array.
> The 'cache-key' if set will use the old wp_cache_get(); function to prevent
> requery.
>
> The SQL involved is not really that complicated but does require
> subqueries, one for each category. So you need to make sure your MySQL is up
> to 4.1 (or better 5.x). Below is the SQL for the three categories 9,157,8.
> As you can see it's alot but repeats the same basic SQL for each category
>
> SELECT * FROM wp_posts WHERE ID = (
>                SELECT wp_posts.ID
>                FROM wp_posts
>                        INNER JOIN wp_term_relationships ON ( wp_posts.ID =
> wp_term_relationships.object_id )
>                        INNER JOIN wp_term_taxonomy ON (
> wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id )
>                WHERE 1 =1
>                        AND wp_term_taxonomy.taxonomy =  'category'
>                        AND wp_term_taxonomy.term_id IN ('9')
>                        AND wp_posts.post_type =  'post'
>                        AND (wp_posts.post_status =  'publish' OR
> wp_posts.post_status =  'private')
>                ORDER BY wp_posts.post_date DESC
>                LIMIT 1
>        )
>        OR ID = (
>                SELECT wp_posts.ID
>                FROM wp_posts
>                        INNER JOIN wp_term_relationships ON ( wp_posts.ID =
> wp_term_relationships.object_id )
>                        INNER JOIN wp_term_taxonomy ON (
> wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id )
>                WHERE 1 =1
>                        AND wp_term_taxonomy.taxonomy =  'category'
>                        AND wp_term_taxonomy.term_id IN ('157')
>                        AND wp_posts.post_type =  'post'
>                        AND (wp_posts.post_status =  'publish' OR
> wp_posts.post_status =  'private')
>                ORDER BY wp_posts.post_date DESC
>                LIMIT 1
>        )
>        OR ID = (
>                SELECT wp_posts.ID
>                FROM wp_posts
>                        INNER JOIN wp_term_relationships ON ( wp_posts.ID =
> wp_term_relationships.object_id )
>                        INNER JOIN wp_term_taxonomy ON (
> wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id )
>                WHERE 1 =1
>                        AND wp_term_taxonomy.taxonomy =  'category'
>                        AND wp_term_taxonomy.term_id IN ('8')
>                        AND wp_posts.post_type =  'post'
>                        AND (wp_posts.post_status =  'publish' OR
> wp_posts.post_status =  'private')
>                ORDER BY wp_posts.post_date DESC
>                LIMIT 1
>        )
>
>
>
>
>
> On May 4, 2009, at 6:05 PM, Jeremy Clarke wrote:
>
>  Yeah, the SQL to accomplish this would be so complicated and prone to
>> breaking that you're probably better off working out an
>> intricately-complex caching system and using normal queries instead.
>>
>> Also: If its just the front page of your site then as long as you have
>> wp-supercache or something like that running you probably won't be hit
>> too hard because that page will almost always be cached for visitors.
>>
>> --
>> Jeremy Clarke
>> Code and Design | globalvoicesonline.org
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From if.website at gmail.com  Tue May  5 02:42:39 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue May  5 02:42:51 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <E8811F28-3B2B-4D16-AE00-8790D978C62D@codehooligans.com>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
	<7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>
	<A109DE34-B1E2-4E1B-A1CB-11C972E2DF9B@codehooligans.com>
	<-8883832353182351671@unknownmsgid>
	<e1202cb10905041605p22b49b64h51da17b12b8c3210@mail.gmail.com>
	<E8811F28-3B2B-4D16-AE00-8790D978C62D@codehooligans.com>
Message-ID: <674b4a3b0905041942r46b9cf55v6c9d67823f89f1af@mail.gmail.com>

On Mon, May 4, 2009 at 4:42 PM, Nathan Rice <ncrice@gmail.com> wrote:
> I have a site which has a section on the homepage that pulls the latest post
> from each of 6 different categories.  As of now, I'm running 6 separate
> instances of WP_Query to get the latest post from each of the 6 categories.

On Mon, May 4, 2009 at 7:43 PM, Nathan Rice <ncrice@gmail.com> wrote:
> Thanks guys ... I'm basically hearing that there's no way for WP_Query to do
> this without some sort of custom SQL query.

I would do something like this, where 1-6 are the category ids:

$post_ids = array(0);
foreach( array(1, 2, 3, 4, 5, 6) as $cat_id ) {
        if ( $posts = get_posts(array('cat' => $cat_id, 'showposts' => 1)) ) {
                $first = array_shift($posts);
                $post_ids[] = $first->ID;
        }
}
query_posts(array('post__in' => $post_ids));

This has the advantage of using the WordPress API, so you can remain
agnostic about future database schema changes and take advantage of
the built-in caching. You can also use the regular Loop following this
code.


On Mon, May 4, 2009 at 8:09 PM, Paul <paul@codehooligans.com> wrote:
> The SQL involved is not really that complicated but does require subqueries,
> one for each category. So you need to make sure your MySQL is up to 4.1 (or
> better 5.x). Below is the SQL for the three categories 9,157,8. As you can
> see it's alot but repeats the same basic SQL for each category
>
> SELECT * FROM wp_posts WHERE ID = (
> ? ? ? ? ? ? ? ?SELECT wp_posts.ID
> ? ? ? ? ? ? ? ?FROM wp_posts
> ? ? ? ? ? ? ? ? ? ? ? ?INNER JOIN wp_term_relationships ON ( wp_posts.ID =
> wp_term_relationships.object_id )
> ? ? ? ? ? ? ? ? ? ? ? ?INNER JOIN wp_term_taxonomy ON (
> wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id )
> ? ? ? ? ? ? ? ?WHERE 1 =1
> ? ? ? ? ? ? ? ? ? ? ? ?AND wp_term_taxonomy.taxonomy = ?'category'
> ? ? ? ? ? ? ? ? ? ? ? ?AND wp_term_taxonomy.term_id IN ('9')
> ? ? ? ? ? ? ? ? ? ? ? ?AND wp_posts.post_type = ?'post'
> ? ? ? ? ? ? ? ? ? ? ? ?AND (wp_posts.post_status = ?'publish' OR
> wp_posts.post_status = ?'private')
> ? ? ? ? ? ? ? ?ORDER BY wp_posts.post_date DESC
> ? ? ? ? ? ? ? ?LIMIT 1

I would recommend against approaches like this one.  For one thing,
this subquery is more or less the same query as done by the main
WordPress query that would run if you used the WordPress API instead
(including the "WHERE 1 =1" that serves no purpose here).  So there's
no MySQL-level advantage, and there's a slight disadvantage (as Paul
points out) in that subqueries aren't supported by  MySQL 4.0,
WordPress's minimum required version.

But unlike using the WordPress API, a direct MySQL query like this has
several disadvantages.
 * It might not be cached in a manner consistent with the rest of WordPress.
 * It's vulnerable to future database changes.
 * It's more likely to contain inadvertent missteps.  For example, see
this line:

> AND (wp_posts.post_status =  'publish' OR wp_posts.post_status =  'private')

Whoops!  Now we could be displaying private posts in that category.
From paul at codehooligans.com  Tue May  5 03:26:45 2009
From: paul at codehooligans.com (Paul)
Date: Tue May  5 03:27:34 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <862d087f0905041915h525c24d6n5eda4c4e9c1f7334@mail.gmail.com>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
	<7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>
	<A109DE34-B1E2-4E1B-A1CB-11C972E2DF9B@codehooligans.com>
	<-8883832353182351671@unknownmsgid>
	<e1202cb10905041605p22b49b64h51da17b12b8c3210@mail.gmail.com>
	<E8811F28-3B2B-4D16-AE00-8790D978C62D@codehooligans.com>
	<862d087f0905041915h525c24d6n5eda4c4e9c1f7334@mail.gmail.com>
Message-ID: <6CEFA1E9-5E88-46B5-8459-B63BFF7D9CBD@codehooligans.com>


On May 4, 2009, at 9:15 PM, Nathan Rice wrote:

> Paul,
> Would this be more, or less, expensive of a process than the 6  
> separate
> WP_Query objects? That might sound like a stupid question, but I'm a
> complete noob when it comes to SQL processes.

Not stupid at all. In my opinion (and surely mine alone) its better to  
use the single query with sub-queries as I've demonstrated over using  
PHP (and WordPress) to manage multiple queries. Every time you create  
an instance of the WP_Query object you will be using memory.  The  
question is from a performance stand point does the multiple WP_Query  
runs provide less memory use than the one SQL query. Answer, hard to  
advise. There are so many variables like how well MySQL is tuned. How  
much memory is on the server to prevent paging, etc. I'm sure there  
are many other more knowledgeable users on this list.

The example I provided was really just a test for myself to see if I  
could put together the actual query in a single SQL statement. As  
others have mentioned this is particularly trouble prone since you are  
using direct SQL which is severely frowned upon as it has the  
potential to break if the schema is ever changed as we for WP 2.3.

>
> This particular site has had trouble in the past with database  
> overload
> (before wp_super_cache), so I want to be sure that I'm using the least
> taxing method available.
>
> Then again, if wp-super-cache is taking care of reducing queries,  
> then this
> may all be unnecessary.  I just need to make sure I'm doing  
> everything I can
> do to make it better.
>

Agreed.


> At the very least, this points out a limitation in the WP_Query object
> parameters.

I'm not sure this is a correct statement. Sure, WP_Query does not  
provide the flexibly needed for this specific needs. I do think  
WP_Query is somewhat state of the art in it's design. It's just that  
the author(s) did not anticipate your needs when creating it. If you  
think about how WP is mostly used it's more for getting a list of  
items based on time sorting. In your case you want only one post from  
each category which break its model.

>
> My Website
> http://www.nathanrice.net/
>
> My Twitter
> http://twitter.com/nathanrice
>
>
> On Mon, May 4, 2009 at 9:09 PM, Paul <paul@codehooligans.com> wrote:
>
>> Yeah. Not *that* complicated.
>>
>> Nathan if you are still looking for something I have something for  
>> you. I
>> can't figure out how to do this via WP_Query directly. I've not  
>> really used
>> WP_Query that much for custom query only for filtering categories,  
>> tags,
>> etc. I found it easier to build the query then call  wpdb- 
>> >get_results()
>> function directly. This will return the result set (array). From  
>> there I can
>> 'fake' the WP_Query object.
>>
>> I'm hesitant to just paste the code here. So I've added the file to  
>> my site
>> for download as a text file.
>> http://www.codehooligans.com/packages/page_test.txt
>>
>> There is a leadin function for you to use. You can paste the function
>> itself into your theme's functions.php file.
>>
>>
>> The lead-in function:
>>
>> get_single_cat_items();
>>
>> Take a number of arguments in traditional WP style:
>>
>> get_single_cat_items('cats=9,157,8&return=wpquery&cache- 
>> key=single_cats');
>>
>> The above will query the posts for categories 9, 157 and 8.
>> The 'return' parameter is used to tell the function to return a  
>> reference
>> to a WP_Query object (default) or the raw posts array.
>> The 'cache-key' if set will use the old wp_cache_get(); function to  
>> prevent
>> requery.
>>
>> The SQL involved is not really that complicated but does require
>> subqueries, one for each category. So you need to make sure your  
>> MySQL is up
>> to 4.1 (or better 5.x). Below is the SQL for the three categories  
>> 9,157,8.
>> As you can see it's alot but repeats the same basic SQL for each  
>> category
>>
>> SELECT * FROM wp_posts WHERE ID = (
>>               SELECT wp_posts.ID
>>               FROM wp_posts
>>                       INNER JOIN wp_term_relationships ON  
>> ( wp_posts.ID =
>> wp_term_relationships.object_id )
>>                       INNER JOIN wp_term_taxonomy ON (
>> wp_term_relationships.term_taxonomy_id =  
>> wp_term_taxonomy.term_taxonomy_id )
>>               WHERE 1 =1
>>                       AND wp_term_taxonomy.taxonomy =  'category'
>>                       AND wp_term_taxonomy.term_id IN ('9')
>>                       AND wp_posts.post_type =  'post'
>>                       AND (wp_posts.post_status =  'publish' OR
>> wp_posts.post_status =  'private')
>>               ORDER BY wp_posts.post_date DESC
>>               LIMIT 1
>>       )
>>       OR ID = (
>>               SELECT wp_posts.ID
>>               FROM wp_posts
>>                       INNER JOIN wp_term_relationships ON  
>> ( wp_posts.ID =
>> wp_term_relationships.object_id )
>>                       INNER JOIN wp_term_taxonomy ON (
>> wp_term_relationships.term_taxonomy_id =  
>> wp_term_taxonomy.term_taxonomy_id )
>>               WHERE 1 =1
>>                       AND wp_term_taxonomy.taxonomy =  'category'
>>                       AND wp_term_taxonomy.term_id IN ('157')
>>                       AND wp_posts.post_type =  'post'
>>                       AND (wp_posts.post_status =  'publish' OR
>> wp_posts.post_status =  'private')
>>               ORDER BY wp_posts.post_date DESC
>>               LIMIT 1
>>       )
>>       OR ID = (
>>               SELECT wp_posts.ID
>>               FROM wp_posts
>>                       INNER JOIN wp_term_relationships ON  
>> ( wp_posts.ID =
>> wp_term_relationships.object_id )
>>                       INNER JOIN wp_term_taxonomy ON (
>> wp_term_relationships.term_taxonomy_id =  
>> wp_term_taxonomy.term_taxonomy_id )
>>               WHERE 1 =1
>>                       AND wp_term_taxonomy.taxonomy =  'category'
>>                       AND wp_term_taxonomy.term_id IN ('8')
>>                       AND wp_posts.post_type =  'post'
>>                       AND (wp_posts.post_status =  'publish' OR
>> wp_posts.post_status =  'private')
>>               ORDER BY wp_posts.post_date DESC
>>               LIMIT 1
>>       )
>>
>>
>>
>>
>>
>> On May 4, 2009, at 6:05 PM, Jeremy Clarke wrote:
>>
>> Yeah, the SQL to accomplish this would be so complicated and prone to
>>> breaking that you're probably better off working out an
>>> intricately-complex caching system and using normal queries instead.
>>>
>>> Also: If its just the front page of your site then as long as you  
>>> have
>>> wp-supercache or something like that running you probably won't be  
>>> hit
>>> too hard because that page will almost always be cached for  
>>> visitors.
>>>
>>> --
>>> Jeremy Clarke
>>> Code and Design | globalvoicesonline.org
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mikeschinkel at newclarity.net  Tue May  5 04:29:15 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue May  5 04:31:45 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <11086152.17801241497486392.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl43NYQd08ec32b4f0ec798b930e2,
	mikeschinkel@newclarity.net, 32566472.17821241497752852.J>


> At the very least, this points out a limitation in the WP_Query object
> parameters.

I'm not sure this is a correct statement. Sure, WP_Query does not  
provide the flexibly needed for this specific needs. I do think  
WP_Query is somewhat state of the art in it's design. It's just that  
the author(s) did not anticipate your needs when creating it. If you  
think about how WP is mostly used it's more for getting a list of  
items based on time sorting. In your case you want only one post from  
each category which break its model.

From: "Paul" <paul@codehooligans.com> wrote:
> Sure, WP_Query does not provide the flexibly needed 
> for this specific needs. I do think WP_Query is somewhat 
> state of the art in it's design. It's just that  
> the author(s) did not anticipate your needs when creating it. 

Paul, I think this does point out a limitation of the WP_Query object. WP_Query is a great example of an ad-hoc attempt to isolate and simplify usage of a language that has had many orders of magnitude more engineering time devoted to it's design than that which isolates it. You can see such attempts all over computing, most developers do it, and I know myself I've created many a straw house attempting to simply other things most notably when I tried to create an ActiveX object for use in ASP programming to abstract generation on an HTML table. 

Another great example of this approach is wiki-language that tries to simplify HTML. Has anyone tried to do anything advanced on Wikipedia? I daresay that what replaced it was far worse that what it was replacing and it's a shame we don't all just try to promote learning of HTML.

So WP_Query() is by definition limited in it's ability to model SQL with fidelity and unfortunately, always probably will be. It does have benefits in that it abstracts the SQL queries so that the data models can change (slightly) but it will never be able to do everything that SQL can do (unless it was modeled to be as thin a layer on SQL as possible thus reducing it's ability to shield against changes.)

> If you think about how WP is mostly used it's more for getting 
> a list of items based on time sorting. In your case you want 
> only one post from each category which break its model.

I don't think that is a valid defense of WP_Query(). There is no alternate in the WordPress API for doing things more complex which results in people complaining about not using the WordPress API (even though it's not properly suited for the use-case), which is all a vicious circle.

What's the broader solution?

1.) Nathan should just hack the SQL for his specific site and put code in place to fallback when a new version of WP is installed.
2.) The WordPress team should either rearchitect WP_Query() or add another function that can handle these really complex use-cases.

I'd be happy to help with #2 is this were a forum for dialog on improving the core but my past experience is that it is not so I won't bother and I'll just hack SQL code when I need it.

Nathan, if you need help with SQL that's at least one thing I'm really good with. Contact me offline and I can help.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From ncrice at gmail.com  Tue May  5 04:35:04 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Tue May  5 04:35:15 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <674b4a3b0905041942r46b9cf55v6c9d67823f89f1af@mail.gmail.com>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
	<7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>
	<A109DE34-B1E2-4E1B-A1CB-11C972E2DF9B@codehooligans.com>
	<-8883832353182351671@unknownmsgid>
	<e1202cb10905041605p22b49b64h51da17b12b8c3210@mail.gmail.com>
	<E8811F28-3B2B-4D16-AE00-8790D978C62D@codehooligans.com>
	<674b4a3b0905041942r46b9cf55v6c9d67823f89f1af@mail.gmail.com>
Message-ID: <862d087f0905042135j1ab616fald1cf008ac5beb932@mail.gmail.com>

On Mon, May 4, 2009 at 10:42 PM, Austin Matzko <if.website@gmail.com> wrote:


> I would do something like this, where 1-6 are the category ids:
>
> $post_ids = array(0);
> foreach( array(1, 2, 3, 4, 5, 6) as $cat_id ) {
>        if ( $posts = get_posts(array('cat' => $cat_id, 'showposts' => 1)) )
> {
>                $first = array_shift($posts);
>                $post_ids[] = $first->ID;
>        }
> }
> query_posts(array('post__in' => $post_ids));
>
> This has the advantage of using the WordPress API, so you can remain
> agnostic about future database schema changes and take advantage of
> the built-in caching. You can also use the regular Loop following this
> code.
>
>
This is another potentially dumb question, but is the get_posts() function
any less taxing on the database than the WP_Query class?  If it is less
taxing, then you absolutely found and answer that I think may work for me!

But, after looking at the source of that function, it looks like it
establishes it's own new WP_Query object:

$get_posts = new WP_Query;
return $get_posts->query($r);

That would mean I'd be using WP_Query 6 times, PLUS the final loop query.
Seems even less efficient than what I have now.

Am I wrong? If so, again, blame it on my complete lack of knowledge of SQL,
and feel free to correct me. I'm nothing if not teachable.

Nathan
From mikeschinkel at newclarity.net  Tue May  5 04:37:45 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue May  5 04:46:10 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <862d087f0905041915h525c24d6n5eda4c4e9c1f7334@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl43Nbj6fb175eb4b7e7dfc3b4423,
	mikeschinkel@newclarity.net, 19465939.17841241498263558.J>

Nathan:

What version of MySQL is your site running on?  If v5.0 or better you can use a correlated subquery which doesn't require the duplication of code that Paul's (otherwise good) example required:

http://dev.mysql.com/doc/refman/5.0/en/correlated-subqueries.html


-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From ncrice at gmail.com  Tue May  5 04:46:39 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Tue May  5 04:49:09 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <9109180664988622411@unknownmsgid>
References: <11086152.17801241497486392.JavaMail.DELL-1405$@Dell-1405>
	<9109180664988622411@unknownmsgid>
Message-ID: <862d087f0905042146h734a2900p4c2c31d2f0857e30@mail.gmail.com>

On Tue, May 5, 2009 at 12:29 AM, Mike Schinkel
<mikeschinkel@newclarity.net>wrote:

>
> I'm not sure this is a correct statement. Sure, WP_Query does not
> provide the flexibly needed for this specific needs. I do think
> WP_Query is somewhat state of the art in it's design. It's just that
> the author(s) did not anticipate your needs when creating it. If you
> think about how WP is mostly used it's more for getting a list of
> items based on time sorting. In your case you want only one post from
> each category which break its model.
>

Don't get me wrong. I'm not blaming anyone for not anticipating my specific
use-case. That would be stupid. I'm just saying that this could be an
opportunity for the WP_Query class to get better.  The site I'm maintaining
is a new-style site that has a content heavy homepage. It relies heavily on
categories to pull content, and it would be nice if the WP_Query class would
allow me to pull latest story(ies) from multiple categories with as few
queries as possible. From what I hear, the WordPress bottleneck is always
the database, so I want certainly don't want to aggravate that by being
inefficient.


>
>
> So WP_Query() is by definition limited in it's ability to model SQL with
> fidelity and unfortunately, always probably will be. It does have benefits
> in that it abstracts the SQL queries so that the data models can change
> (slightly) but it will never be able to do everything that SQL can do
> (unless it was modeled to be as thin a layer on SQL as possible thus
> reducing it's ability to shield against changes.)


I'm definitely glad WordPress provides functions and classes that pull data
from the database. PHP + SQL is not something I'm interested in learning at
the moment, despite the fact that I'm sure it would be good for me.

But I do see your point. Compensating for the uneducated can place
limitations on things, that's for sure.


>
>  1.) Nathan should just hack the SQL for his specific site and put code in
> place to fallback when a new version of WP is installed.
> 2.) The WordPress team should either rearchitect WP_Query() or add another
> function that can handle these really complex use-cases.
>
> I'd be happy to help with #2 is this were a forum for dialog on improving
> the core but my past experience is that it is not so I won't bother and I'll
> just hack SQL code when I need it.


>From what I can tell, not much NEW functionality has been added to the class
in a while.  It would be nice to get new features and parameters that would
address these specific use cases, especially considering the prevalence of
WordPress being used to run large news sites.  There CAN'T be any weak
points when traffic surges. Performance is a HUGE deal.


> Nathan, if you need help with SQL that's at least one thing I'm really good
> with. Contact me offline and I can help.


I appreciate that.  For now, I'm going leave it as-is and hope that
wp-super-cache keeps us above water. If it doesn't, you'll definitely be
hearing from me :-)

Nathan
From mikeschinkel at newclarity.net  Tue May  5 04:57:37 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue May  5 04:58:06 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <13110985.17861241498835302.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl43Nvbe60fc6497136f9d9f0f1d7,
	mikeschinkel@newclarity.net, 16465331.17881241499455700.J>

While I am often the critique of premature optimization I think Nathan is probably warranted in using SQL in this case.

"Austin Matzko" <if.website@gmail.com> wrote:
I would do something like this, where 1-6 are the category ids:
> 
> $post_ids = array(0);
> foreach( array(1, 2, 3, 4, 5, 6) as $cat_id ) {
>         if ( $posts = get_posts(array('cat' => $cat_id, 'showposts' => 1)) ) {
>                 $first = array_shift($posts);
>                 $post_ids[] = $first->ID;
>         }
> }
> query_posts(array('post__in' => $post_ids));

How is that better?  It's 14 SQL queries instead of Nathan's 12 or instead of Paul's 2 (2x queries because SQL_CALC_FOUND_ROWS is called first for each query.)

> This has the advantage of using the WordPress API, so you can 
> remain agnostic about future database schema changes 

Sometimes the medicine can be worse than the ailment, no? If his site is too slow it's better to use direct SQL to resolve the issues.

> and take advantage of the built-in caching. 

Can you clarify this?  I might be missing something.

> I would recommend against approaches like this one.  For one 
> thing, this subquery is more or less the same query as done 
> by the main WordPress query that would run if you used the 
> WordPress API instead 

How is that really a problem?

> (including the "WHERE 1 =1" that serves 
> no purpose here).  

Agreed but I don't think Paul intended to present optimized code, instead just a proof of concept.

> So there's no MySQL-level advantage, and 
> there's a slight disadvantage (as Paul points out) in that 
> subqueries aren't supported by  MySQL 4.0, WordPress's minimum 
> required version.

Which is only an issue if not just for Nathan's site. 

Besides, if for a plugin many plugins require v5.0, what's really wrong with a plugin requiring v4.1? He could code in a slow way for MySQL v4.0 and do it the fast way for v4.1; version issue solved.

> But unlike using the WordPress API, a direct MySQL query like 
> this has several disadvantages.
> * It might not be cached in a manner consistent with the rest of 
> WordPress.

Can you clarify this with examples?  I might be missing something.
 
> * It's vulnerable to future database changes.

Nathan can write code to anticipate this and fall back in case of an issue.

>  * It's more likely to contain inadvertent missteps.  For 
> example, see this line:

I don't see this as valid criticism; you can just as easily call get_posts() incorrectly; both the WPDB scheme and the get_posts() calling interface are filled with idiosyncrasies.


-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From mikeschinkel at newclarity.net  Tue May  5 05:07:58 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue May  5 05:08:19 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <28135828.17901241499512742.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl4407wb46fa4b97264fed1d6ff2c,
	mikeschinkel@newclarity.net, 13369404.17921241500070656.J>

"Nathan Rice" <ncrice@gmail.com> wrote:
> Don't get me wrong. I'm not blaming anyone for not anticipating my 
> specific use-case. That would be stupid. I'm just saying that this 
> could be an opportunity for the WP_Query class to get better.

Agreed 100%.

> The site I'm maintaining is a new-style site that has a content heavy 
> homepage. It relies heavily on categories to pull content, and it 
> would be nice if the WP_Query class would allow me to pull latest 
> story(ies) from multiple categories with as few queries as possible. 
> From what I hear, the WordPress bottleneck is always the database, 
> so I want certainly don't want to aggravate that by being
> inefficient.

I agree with that, see the type of site you mention as a trend, think that WordPress doesn't currently handle that well, and ideally would like to see it handle it better. 

> I'm definitely glad WordPress provides functions and classes that 
> pull data from the database. PHP + SQL is not something I'm 
> interested in learning at the moment, despite the fact that I'm sure 
> it would be good for me.

I was mostly waxing philisophical on that and do see value in the functions. But I also see their limits and understand they are not panaceas.

That said, my guess is you'd be better off in your own work if you did take some time to learn SQL.  It's really not that hard. (But I do know that sometimes we don't have the mental bandwidth to deal with too much learning; I suffer from that frequently.)


> From what I can tell, not much NEW functionality has been added to 
> the class in a while.  

Not to be contrary to myself, but on the flip side that means it's more likely to be robust.

> It would be nice to get new features and parameters that would
> address these specific use cases, especially considering the 
> prevalence of WordPress being used to run large news sites.  

Agreed. One thing that concerns me about WordPress (and moreso about Drupal, which is one reason I left Drupal) is the number of queries run for each page load. Not sure how to resolve that in the general case, though. 

> There CAN'T be any weak points when traffic surges. 
> Performance is a HUGE deal.

Agreed, even when there are valid reasons for performance issues, people running the sites don't care. IOW, make it work or else! :-)

> I appreciate that.  For now, I'm going leave it as-is and hope 
> that wp-super-cache keeps us above water. If it doesn't, you'll 
> definitely be hearing from me :-)

Feel free to ask. :)


-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From paul at codehooligans.com  Tue May  5 05:13:19 2009
From: paul at codehooligans.com (Paul)
Date: Tue May  5 05:13:35 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <674b4a3b0905041942r46b9cf55v6c9d67823f89f1af@mail.gmail.com>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
	<7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>
	<A109DE34-B1E2-4E1B-A1CB-11C972E2DF9B@codehooligans.com>
	<-8883832353182351671@unknownmsgid>
	<e1202cb10905041605p22b49b64h51da17b12b8c3210@mail.gmail.com>
	<E8811F28-3B2B-4D16-AE00-8790D978C62D@codehooligans.com>
	<674b4a3b0905041942r46b9cf55v6c9d67823f89f1af@mail.gmail.com>
Message-ID: <B2966601-F76C-4D8B-B47A-581BB485DA99@codehooligans.com>

One final comment on this in defense of my SQL query before heading to  
bed.

Austin, You are correct to point out the various issues with the SQL  
code I provided as an example. But these sections were gathered from  
the exact SQL code used by WP_Query itself when viewing an archive for  
a given single category on my own laptop. Try it yourself. In the head  
of your template before the loop code add:

	echo "wp_query<pre>"; print_r($wp_query); echo "</pre>";


You will the same basic SQL code with the 'WHERE 1=1' and the "AND  
(wp_posts.post_status =  'publish' OR wp_posts.post_status =   
'private')" statements. These private posts are automatically filtered  
out when using the WP_Query loop code based on the user status. This  
is why I chose to return the WP_Query reference as a 'default'.

I'm out.

P-


On May 4, 2009, at 9:42 PM, Austin Matzko wrote:

> On Mon, May 4, 2009 at 4:42 PM, Nathan Rice <ncrice@gmail.com> wrote:
>> I have a site which has a section on the homepage that pulls the  
>> latest post
>> from each of 6 different categories.  As of now, I'm running 6  
>> separate
>> instances of WP_Query to get the latest post from each of the 6  
>> categories.
>
> On Mon, May 4, 2009 at 7:43 PM, Nathan Rice <ncrice@gmail.com> wrote:
>> Thanks guys ... I'm basically hearing that there's no way for  
>> WP_Query to do
>> this without some sort of custom SQL query.
>
> I would do something like this, where 1-6 are the category ids:
>
> $post_ids = array(0);
> foreach( array(1, 2, 3, 4, 5, 6) as $cat_id ) {
>        if ( $posts = get_posts(array('cat' => $cat_id, 'showposts'  
> => 1)) ) {
>                $first = array_shift($posts);
>                $post_ids[] = $first->ID;
>        }
> }
> query_posts(array('post__in' => $post_ids));
>
> This has the advantage of using the WordPress API, so you can remain
> agnostic about future database schema changes and take advantage of
> the built-in caching. You can also use the regular Loop following this
> code.
>
>
> On Mon, May 4, 2009 at 8:09 PM, Paul <paul@codehooligans.com> wrote:
>> The SQL involved is not really that complicated but does require  
>> subqueries,
>> one for each category. So you need to make sure your MySQL is up to  
>> 4.1 (or
>> better 5.x). Below is the SQL for the three categories 9,157,8. As  
>> you can
>> see it's alot but repeats the same basic SQL for each category
>>
>> SELECT * FROM wp_posts WHERE ID = (
>>                SELECT wp_posts.ID
>>                FROM wp_posts
>>                        INNER JOIN wp_term_relationships ON  
>> ( wp_posts.ID =
>> wp_term_relationships.object_id )
>>                        INNER JOIN wp_term_taxonomy ON (
>> wp_term_relationships.term_taxonomy_id =  
>> wp_term_taxonomy.term_taxonomy_id )
>>                WHERE 1 =1
>>                        AND wp_term_taxonomy.taxonomy =  'category'
>>                        AND wp_term_taxonomy.term_id IN ('9')
>>                        AND wp_posts.post_type =  'post'
>>                        AND (wp_posts.post_status =  'publish' OR
>> wp_posts.post_status =  'private')
>>                ORDER BY wp_posts.post_date DESC
>>                LIMIT 1
>
> I would recommend against approaches like this one.  For one thing,
> this subquery is more or less the same query as done by the main
> WordPress query that would run if you used the WordPress API instead
> (including the "WHERE 1 =1" that serves no purpose here).  So there's
> no MySQL-level advantage, and there's a slight disadvantage (as Paul
> points out) in that subqueries aren't supported by  MySQL 4.0,
> WordPress's minimum required version.
>
> But unlike using the WordPress API, a direct MySQL query like this has
> several disadvantages.
> * It might not be cached in a manner consistent with the rest of  
> WordPress.
> * It's vulnerable to future database changes.
> * It's more likely to contain inadvertent missteps.  For example, see
> this line:
>
>> AND (wp_posts.post_status =  'publish' OR wp_posts.post_status =   
>> 'private')
>
> Whoops!  Now we could be displaying private posts in that category.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From if.website at gmail.com  Tue May  5 06:26:37 2009
From: if.website at gmail.com (Austin Matzko)
Date: Tue May  5 06:26:48 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <1084809243563214268@unknownmsgid>
References: <13110985.17861241498835302.JavaMail.DELL-1405$@Dell-1405>
	<1084809243563214268@unknownmsgid>
Message-ID: <674b4a3b0905042326u299614c3j9776f6d9e8953722@mail.gmail.com>

On Mon, May 4, 2009 at 11:57 PM, Mike Schinkel
<mikeschinkel@newclarity.net> wrote:
> "Austin Matzko" <if.website@gmail.com> wrote:
> I would do something like this, where 1-6 are the category ids:
>>
>> $post_ids = array(0);
>> foreach( array(1, 2, 3, 4, 5, 6) as $cat_id ) {
>> ? ? ? ? if ( $posts = get_posts(array('cat' => $cat_id, 'showposts' => 1)) ) {
>> ? ? ? ? ? ? ? ? $first = array_shift($posts);
>> ? ? ? ? ? ? ? ? $post_ids[] = $first->ID;
>> ? ? ? ? }
>> }
>> query_posts(array('post__in' => $post_ids));
>
> How is that better? ?It's 14 SQL queries instead of Nathan's 12 or instead of Paul's 2 (2x queries because SQL_CALC_FOUND_ROWS is called first for each query.)

First, what I suggested has no advantage over what Nathan's already
doing, except a trivial one: it lets you use the regular Loop.  I am
arguing against using MySQL directly, not suggesting that my way is
better than what he's already doing.

Second, if Nathan weren't using WP-Super-Cache I might agree with you.
 But since he is, I think using the WordPress API is going to be less
system-intensive.  Most WordPress performance problems occur at the
database level.  By using the WordPress API and caching, he can
dramatically reduce the total number of database queries and therefore
overall system load.

> Sometimes the medicine can be worse than the ailment, no? If his site is too slow it's better to use direct SQL to resolve the issues.

Reducing the role of the database is usually the best medicine for WP
performance ills.

>> and take advantage of the built-in caching.
>
> Can you clarify this? ?I might be missing something.

When you query posts using the WordPress API, your caching system
(such as WP-Super-Cache) gets each post's data in a standard way that
it can use beyond the immediate query.

>> I would recommend against approaches like this one. ?For one
>> thing, this subquery is more or less the same query as done
>> by the main WordPress query that would run if you used the
>> WordPress API instead
>
> How is that really a problem?

My point in those lines is that the example direct query is not an
*advantage.*  I mentioned the problems after that.

> Besides, if for a plugin many plugins require v5.0, what's really wrong with a plugin requiring v4.1? He could code in a slow way for MySQL v4.0 and do it the fast way for v4.1; version issue solved.

That assumes two things I doubt: that subqueries in general perform
significantly better and that any such queries are better than cached
WordPress API calls.

>> But unlike using the WordPress API, a direct MySQL query like
>> this has several disadvantages.
>> * It might not be cached in a manner consistent with the rest of
>> WordPress.
>
> Can you clarify this with examples? ?I might be missing something.

WP_Query caches each queried post's data, so it's available when
requested elsewhere.  In contrast, caching a direct query's results
with an arbitrary key (as in Paul's example) will not cache the
individual posts in a manner that WP can use. So it means that WP will
have to make more queries to get that data.

>> * It's vulnerable to future database changes.
>
> Nathan can write code to anticipate this and fall back in case of an issue.

I don't know how that's possible using the direct database queries in
this thread.  For example, in WordPress 2.2 we could use query_posts,
WP_Query, and get_posts, but there were no terms or taxonomies tables,
so direct queries like this would have failed completely.  Even more
recently things like the post_status and post_type field values have
changed.  The API changes less.

But to be clear, I'm not saying never directly query the database;
just don't do it when you don't need to.

>> ?* It's more likely to contain inadvertent missteps. ?For
>> example, see this line:
>
> I don't see this as valid criticism; you can just as easily call get_posts() incorrectly; both the WPDB scheme and the get_posts() calling interface are filled with idiosyncrasies.

The difference is that get_posts() takes care of the defaults.  In my
example, I passed two arguments to get_posts(): the category id and
the number of results I wanted.  To make a similar MySQL query
directly, in addition to those I would have to specify post date,
order, type, status, term taxonomy, and probably something else I'm
not thinking of.  That means more opportunities to mess up something.
From glenn at glennansley.com  Tue May  5 06:27:48 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Tue May  5 06:28:03 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <B2966601-F76C-4D8B-B47A-581BB485DA99@codehooligans.com>
References: <862d087f0905041442r2a78d783y9accdedcb43bcc8@mail.gmail.com>
	<7CCA189C-94A5-490A-913D-5356C833E577@codehooligans.com>
	<A109DE34-B1E2-4E1B-A1CB-11C972E2DF9B@codehooligans.com>
	<-8883832353182351671@unknownmsgid>
	<e1202cb10905041605p22b49b64h51da17b12b8c3210@mail.gmail.com>
	<E8811F28-3B2B-4D16-AE00-8790D978C62D@codehooligans.com>
	<674b4a3b0905041942r46b9cf55v6c9d67823f89f1af@mail.gmail.com>
	<B2966601-F76C-4D8B-B47A-581BB485DA99@codehooligans.com>
Message-ID: <3283f0830905042327m3bbc1579ib2e44aac05adefeb@mail.gmail.com>

I'm working with the loop found in index.php of the kubrick (default) theme.

1) Place the following code directly above <?php if (have_posts()) : ?>

<?php $featured_cats = array(1,2,3,4,5,6); ?>

2) Place the following code directly below <?php if (have_posts()) :
?> and above <?php while (have_posts()) : the_post(); ?>

<?php while (have_posts()) : the_post(); ?>
    <?php
        foreach ( $featured_cats as $key => $cat ){
            if ( in_category( $cat , $post->ID ) && !isset($features[$cat]) ){
                $features[$cat] = $post;
            }
        }
    ?>
<?php endwhile; ?>

<?php if( $features[1] ) { echo "<h2>".$features[1]->post_title."</h2>"; } ?>

<?php if( $features[2] ) { echo "<h2>".$features[2]->post_title."</h2>"; } ?>

3) There is no step three.

All I did was run the while loop through one more time than normal,
populating an array with the first post found for each of your
featured categories.
Once the loop runs through once, you have your array and you can spit
out the data wherever you want.

If normal WP Loop logic is 1) Query DB 2) Do the loop and spit out the posts,
My altered one says 1) Query the DB 2) Do the loop and grab your
featured posts. 3) Do the loop again and spit out your normal posts.
Again, a rewind_posts() might be in order at step 2.5.

Hope that helps (or at least points in you the right direction).

Glenn Ansley
http://fullthrottledevelopment.com

Your default loop should still run fine. I didn't have to on my local
install, but there is a possibility that you'll have to rewind the
loop if it isn't working correctly.

On Tue, May 5, 2009 at 1:13 AM, Paul <paul@codehooligans.com> wrote:
> One final comment on this in defense of my SQL query before heading to bed.
>
> Austin, You are correct to point out the various issues with the SQL code I
> provided as an example. But these sections were gathered from the exact SQL
> code used by WP_Query itself when viewing an archive for a given single
> category on my own laptop. Try it yourself. In the head of your template
> before the loop code add:
>
> ? ? ? ?echo "wp_query<pre>"; print_r($wp_query); echo "</pre>";
>
>
> You will the same basic SQL code with the 'WHERE 1=1' and the "AND
> (wp_posts.post_status = ?'publish' OR wp_posts.post_status = ?'private')"
> statements. These private posts are automatically filtered out when using
> the WP_Query loop code based on the user status. This is why I chose to
> return the WP_Query reference as a 'default'.
>
> I'm out.
>
> P-
>
>
> On May 4, 2009, at 9:42 PM, Austin Matzko wrote:
>
>> On Mon, May 4, 2009 at 4:42 PM, Nathan Rice <ncrice@gmail.com> wrote:
>>>
>>> I have a site which has a section on the homepage that pulls the latest
>>> post
>>> from each of 6 different categories. ?As of now, I'm running 6 separate
>>> instances of WP_Query to get the latest post from each of the 6
>>> categories.
>>
>> On Mon, May 4, 2009 at 7:43 PM, Nathan Rice <ncrice@gmail.com> wrote:
>>>
>>> Thanks guys ... I'm basically hearing that there's no way for WP_Query to
>>> do
>>> this without some sort of custom SQL query.
>>
>> I would do something like this, where 1-6 are the category ids:
>>
>> $post_ids = array(0);
>> foreach( array(1, 2, 3, 4, 5, 6) as $cat_id ) {
>> ? ? ? if ( $posts = get_posts(array('cat' => $cat_id, 'showposts' => 1)) )
>> {
>> ? ? ? ? ? ? ? $first = array_shift($posts);
>> ? ? ? ? ? ? ? $post_ids[] = $first->ID;
>> ? ? ? }
>> }
>> query_posts(array('post__in' => $post_ids));
>>
>> This has the advantage of using the WordPress API, so you can remain
>> agnostic about future database schema changes and take advantage of
>> the built-in caching. You can also use the regular Loop following this
>> code.
>>
>>
>> On Mon, May 4, 2009 at 8:09 PM, Paul <paul@codehooligans.com> wrote:
>>>
>>> The SQL involved is not really that complicated but does require
>>> subqueries,
>>> one for each category. So you need to make sure your MySQL is up to 4.1
>>> (or
>>> better 5.x). Below is the SQL for the three categories 9,157,8. As you
>>> can
>>> see it's alot but repeats the same basic SQL for each category
>>>
>>> SELECT * FROM wp_posts WHERE ID = (
>>> ? ? ? ? ? ? ? SELECT wp_posts.ID
>>> ? ? ? ? ? ? ? FROM wp_posts
>>> ? ? ? ? ? ? ? ? ? ? ? INNER JOIN wp_term_relationships ON ( wp_posts.ID =
>>> wp_term_relationships.object_id )
>>> ? ? ? ? ? ? ? ? ? ? ? INNER JOIN wp_term_taxonomy ON (
>>> wp_term_relationships.term_taxonomy_id =
>>> wp_term_taxonomy.term_taxonomy_id )
>>> ? ? ? ? ? ? ? WHERE 1 =1
>>> ? ? ? ? ? ? ? ? ? ? ? AND wp_term_taxonomy.taxonomy = ?'category'
>>> ? ? ? ? ? ? ? ? ? ? ? AND wp_term_taxonomy.term_id IN ('9')
>>> ? ? ? ? ? ? ? ? ? ? ? AND wp_posts.post_type = ?'post'
>>> ? ? ? ? ? ? ? ? ? ? ? AND (wp_posts.post_status = ?'publish' OR
>>> wp_posts.post_status = ?'private')
>>> ? ? ? ? ? ? ? ORDER BY wp_posts.post_date DESC
>>> ? ? ? ? ? ? ? LIMIT 1
>>
>> I would recommend against approaches like this one. ?For one thing,
>> this subquery is more or less the same query as done by the main
>> WordPress query that would run if you used the WordPress API instead
>> (including the "WHERE 1 =1" that serves no purpose here). ?So there's
>> no MySQL-level advantage, and there's a slight disadvantage (as Paul
>> points out) in that subqueries aren't supported by ?MySQL 4.0,
>> WordPress's minimum required version.
>>
>> But unlike using the WordPress API, a direct MySQL query like this has
>> several disadvantages.
>> * It might not be cached in a manner consistent with the rest of
>> WordPress.
>> * It's vulnerable to future database changes.
>> * It's more likely to contain inadvertent missteps. ?For example, see
>> this line:
>>
>>> AND (wp_posts.post_status = ?'publish' OR wp_posts.post_status =
>>> ?'private')
>>
>> Whoops! ?Now we could be displaying private posts in that category.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mikeschinkel at newclarity.net  Tue May  5 07:15:45 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue May  5 07:16:18 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <3283f0830905042327m3bbc1579ib2e44aac05adefeb@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl442Fj78a709713b2c0a7de14c7d,
	mikeschinkel@newclarity.net, 6270024.17981241507742033.J>

While that approach (probably) does produce the desired output, it generates 2 additional queries per category PER post inspected (though I'm not sure that it works generally.) For it to work correctly in all cases you'd have to loop through every post in the DB and then run in_category() for each post which itself generates two SQL queries per call. Performance wise it's much, much worse than Nathan started with.  Try running it on a site with 10,000 posts and you'll see what I mean.

The thing is, ignoring wp-super-cache, you just can't get around doing a proper SQL query if you want reasonable performance.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "Glenn Ansley" <glenn@glennansley.com>
To: wp-hackers@lists.automattic.com
Sent: Tuesday, May 5, 2009 2:27:48 AM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Pull Latest Post from Each of 6 Categories

I'm working with the loop found in index.php of the kubrick (default) theme.

1) Place the following code directly above <?php if (have_posts()) : ?>

<?php $featured_cats = array(1,2,3,4,5,6); ?>

2) Place the following code directly below <?php if (have_posts()) :
?> and above <?php while (have_posts()) : the_post(); ?>

<?php while (have_posts()) : the_post(); ?>
    <?php
        foreach ( $featured_cats as $key => $cat ){
            if ( in_category( $cat , $post->ID ) && !isset($features[$cat]) ){
                $features[$cat] = $post;
            }
        }
    ?>
<?php endwhile; ?>

<?php if( $features[1] ) { echo "<h2>".$features[1]->post_title."</h2>"; } ?>

<?php if( $features[2] ) { echo "<h2>".$features[2]->post_title."</h2>"; } ?>

3) There is no step three.

All I did was run the while loop through one more time than normal,
populating an array with the first post found for each of your
featured categories.
Once the loop runs through once, you have your array and you can spit
out the data wherever you want.

If normal WP Loop logic is 1) Query DB 2) Do the loop and spit out the posts,
My altered one says 1) Query the DB 2) Do the loop and grab your
featured posts. 3) Do the loop again and spit out your normal posts.
Again, a rewind_posts() might be in order at step 2.5.

Hope that helps (or at least points in you the right direction).

Glenn Ansley
http://fullthrottledevelopment.com

Your default loop should still run fine. I didn't have to on my local
install, but there is a possibility that you'll have to rewind the
loop if it isn't working correctly.

On Tue, May 5, 2009 at 1:13 AM, Paul <paul@codehooligans.com> wrote:
> One final comment on this in defense of my SQL query before heading to bed.
>
> Austin, You are correct to point out the various issues with the SQL code I
> provided as an example. But these sections were gathered from the exact SQL
> code used by WP_Query itself when viewing an archive for a given single
> category on my own laptop. Try it yourself. In the head of your template
> before the loop code add:
>
> ? ? ? ?echo "wp_query<pre>"; print_r($wp_query); echo "</pre>";
>
>
> You will the same basic SQL code with the 'WHERE 1=1' and the "AND
> (wp_posts.post_status = ?'publish' OR wp_posts.post_status = ?'private')"
> statements. These private posts are automatically filtered out when using
> the WP_Query loop code based on the user status. This is why I chose to
> return the WP_Query reference as a 'default'.
>
> I'm out.
>
> P-
>
>
> On May 4, 2009, at 9:42 PM, Austin Matzko wrote:
>
>> On Mon, May 4, 2009 at 4:42 PM, Nathan Rice <ncrice@gmail.com> wrote:
>>>
>>> I have a site which has a section on the homepage that pulls the latest
>>> post
>>> from each of 6 different categories. ?As of now, I'm running 6 separate
>>> instances of WP_Query to get the latest post from each of the 6
>>> categories.
>>
>> On Mon, May 4, 2009 at 7:43 PM, Nathan Rice <ncrice@gmail.com> wrote:
>>>
>>> Thanks guys ... I'm basically hearing that there's no way for WP_Query to
>>> do
>>> this without some sort of custom SQL query.
>>
>> I would do something like this, where 1-6 are the category ids:
>>
>> $post_ids = array(0);
>> foreach( array(1, 2, 3, 4, 5, 6) as $cat_id ) {
>> ? ? ? if ( $posts = get_posts(array('cat' => $cat_id, 'showposts' => 1)) )
>> {
>> ? ? ? ? ? ? ? $first = array_shift($posts);
>> ? ? ? ? ? ? ? $post_ids[] = $first->ID;
>> ? ? ? }
>> }
>> query_posts(array('post__in' => $post_ids));
>>
>> This has the advantage of using the WordPress API, so you can remain
>> agnostic about future database schema changes and take advantage of
>> the built-in caching. You can also use the regular Loop following this
>> code.
>>
>>
>> On Mon, May 4, 2009 at 8:09 PM, Paul <paul@codehooligans.com> wrote:
>>>
>>> The SQL involved is not really that complicated but does require
>>> subqueries,
>>> one for each category. So you need to make sure your MySQL is up to 4.1
>>> (or
>>> better 5.x). Below is the SQL for the three categories 9,157,8. As you
>>> can
>>> see it's alot but repeats the same basic SQL for each category
>>>
>>> SELECT * FROM wp_posts WHERE ID = (
>>> ? ? ? ? ? ? ? SELECT wp_posts.ID
>>> ? ? ? ? ? ? ? FROM wp_posts
>>> ? ? ? ? ? ? ? ? ? ? ? INNER JOIN wp_term_relationships ON ( wp_posts.ID =
>>> wp_term_relationships.object_id )
>>> ? ? ? ? ? ? ? ? ? ? ? INNER JOIN wp_term_taxonomy ON (
>>> wp_term_relationships.term_taxonomy_id =
>>> wp_term_taxonomy.term_taxonomy_id )
>>> ? ? ? ? ? ? ? WHERE 1 =1
>>> ? ? ? ? ? ? ? ? ? ? ? AND wp_term_taxonomy.taxonomy = ?'category'
>>> ? ? ? ? ? ? ? ? ? ? ? AND wp_term_taxonomy.term_id IN ('9')
>>> ? ? ? ? ? ? ? ? ? ? ? AND wp_posts.post_type = ?'post'
>>> ? ? ? ? ? ? ? ? ? ? ? AND (wp_posts.post_status = ?'publish' OR
>>> wp_posts.post_status = ?'private')
>>> ? ? ? ? ? ? ? ORDER BY wp_posts.post_date DESC
>>> ? ? ? ? ? ? ? LIMIT 1
>>
>> I would recommend against approaches like this one. ?For one thing,
>> this subquery is more or less the same query as done by the main
>> WordPress query that would run if you used the WordPress API instead
>> (including the "WHERE 1 =1" that serves no purpose here). ?So there's
>> no MySQL-level advantage, and there's a slight disadvantage (as Paul
>> points out) in that subqueries aren't supported by ?MySQL 4.0,
>> WordPress's minimum required version.
>>
>> But unlike using the WordPress API, a direct MySQL query like this has
>> several disadvantages.
>> * It might not be cached in a manner consistent with the rest of
>> WordPress.
>> * It's vulnerable to future database changes.
>> * It's more likely to contain inadvertent missteps. ?For example, see
>> this line:
>>
>>> AND (wp_posts.post_status = ?'publish' OR wp_posts.post_status =
>>> ?'private')
>>
>> Whoops! ?Now we could be displaying private posts in that category.
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From mikeschinkel at newclarity.net  Tue May  5 07:40:25 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue May  5 07:41:17 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <18126065.18001241507804553.JavaMail.DELL-1405$@Dell-1405>
Message-ID: <EMEWEMEW2_DELIMl442eQa202f977bddff0c98d2a2c,
	mikeschinkel@newclarity.net, 17836257.18021241509220553.J>

"Austin Matzko" <if.website@gmail.com> wrote:
> First, what I suggested has no advantage over what Nathan's 
> already doing, except a trivial one: it lets you use the 
> regular Loop.  

Acknowledged.

> I am arguing against using MySQL directly, not suggesting 
> that my way is better than what he's already doing.

Fair point. OTOH I'm challenging the conventional wisdom that it is always best to use the WordPress API. In most cases I agree that use of the WordPress API is best, especially in plugins hosted on Extend but I'm not convinced that it always makes more sense to use the WPAPI instead of hardcoding SQL.

> Second, if Nathan weren't using WP-Super-Cache I might agree 
> with you. But since he is, I think using the WordPress API is 
> going to be less system-intensive.  Most WordPress performance 
> problems occur at the database level.  By using the WordPress 
> API and caching, he can dramatically reduce the total number 
> of database queries and thereforemoverall system load.

This I won't debate and generally agree. OTOH I do feel that caching is often used as a bandaid for poor design so I don't think caching alone should be used as sole rationale for coding sites that performing poorly.  Minimally it makes it much more painful to develop and debug a site when performance issues are solely resolved with caching. 

> Reducing the role of the database is usually the best 
> medicine for WP performance ills.

Seems we agree there in concept if not in execution.

> When you query posts using the WordPress API, your caching 
> system (such as WP-Super-Cache) gets each post's data in a 
> standard way that it can use beyond the immediate query.
> 
> WP_Query caches each queried post's data, so it's available 
> when requested elsewhere.  In contrast, caching a direct 
> query's results with an arbitrary key (as in Paul's example) 
> will not cache the individual posts in a manner that WP can 
> use. So it means that WP will have to make more queries to 
> get that data.

So doesn't caching still work when using posts_where and posts_join hooks?  I'm asking because I don't know for sure.  If yes, that that justification for not modifying SQL goes away.

> That assumes two things I doubt: that subqueries in general 
> perform significantly better and that any such queries are 
> better than cached WordPress API calls.

This is where we diverge; I'd rather start with a more peformant site before I have to rely on caching which itself has issues and thus is not a panacea.

>> Nathan can write code to anticipate this and fall back in case of an issue.
> I don't know how that's possible using the direct database 
> queries in this thread.  

Nathan (or any developer) could store the current version of WordPress into meta and then test it before running the query. If the version has been updated since first stored into meta then run the slower query and send a one-time email to the admin with a notice. If the version is the same that is in meta run the faster one. Also give an admin console option to allow the admin to choose to use the faster one again if they want.

That general pattern can allow for the use of performant SQL w/o concern for potential breakage when WP is updated in the future. Yes, it will run slower but that's what it would have done anyway if you didn't use the performant SQL.

> But to be clear, I'm not saying never directly query the 
> database; just don't do it when you don't need to.

We agree here, we just disagree whether this use-case presents a "need" or not. :-)

> The difference is that get_posts() takes care of the defaults.  
> In my example, I passed two arguments to get_posts(): the 
> category id and the number of results I wanted.  To make a 
> similar MySQL query directly, in addition to those I would 
> have to specify post date, order, type, status, term taxonomy, 
> and probably something else I'm not thinking of.  That means 
> more opportunities to mess up something.

Fair point. For me being more familar with SQL and less familar with get_posts() (having made many mistakes with it) I'd take my chances with SQL. OTOH, Nathan with his admitted lack of SQL knowledge might well be better off with get_posts().

ALL THIS SAID, maybe there is a good argument to be made for improving get_posts(), or providing an alternate, such that we can handle more complex SQL using the WordPress API?  I would propose some things here but having been bitten several times when trying to help with the core I don't think it's something I'm likely to take the lead on although if others are making an earnest effort I will certainly offer to help.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From peter.westwood at ftwr.co.uk  Tue May  5 08:05:03 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Tue May  5 08:05:20 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <EMEWEMEW2_DELIMl442eQa202f977bddff0c98d2a2c,
	mikeschinkel@newclarity.net, 17836257.18021241509220553.J>
References: <EMEWEMEW2_DELIMl442eQa202f977bddff0c98d2a2c,
	mikeschinkel@newclarity.net, 17836257.18021241509220553.J>
Message-ID: <E1F3B03D-69CD-4B37-B5F9-DF3E5581228A@ftwr.co.uk>


On 5 May 2009, at 08:40, Mike Schinkel wrote:

> "Austin Matzko" <if.website@gmail.com> wrote:
>>
>> I am arguing against using MySQL directly, not suggesting
>> that my way is better than what he's already doing.
>
> Fair point. OTOH I'm challenging the conventional wisdom that it is  
> always best to use the WordPress API. In most cases I agree that use  
> of the WordPress API is best, especially in plugins hosted on Extend  
> but I'm not convinced that it always makes more sense to use the  
> WPAPI instead of hardcoding SQL.
>

The reason we recommend avoiding direct SQL is to reduce the worry of  
forward-compatibility for your theme or plugin.

We always try and keep the API backward compatible, we may not keep  
the same db structure.

With respect to the problem at hand:

"Show the latest post from 6 different categories on the front page"

I would recommend either the current approach,

i.e. six WP_Query using loops which query for the required posts  
individually.

If this is too slow then move the heavy work into something which  
happens on admin pages, by this I mean something like the following:

Keep an option in the db which contains an array containing the six  
post ids you want to display and update this option when a new post is  
written in one of the categories.

Then you can as far as I remember do a single WP_Query loop with the  
post_ids specified using 'post__in' and keep to always using the API.

This moves any heavy code to the backend where it will run when  
required.

Calling a hefty SQL query with subqueries or hairy JOINs is no going  
to be performant.

Cheers

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From mikeschinkel at newclarity.net  Tue May  5 08:21:31 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue May  5 08:22:04 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <E1F3B03D-69CD-4B37-B5F9-DF3E5581228A@ftwr.co.uk>
Message-ID: <EMEWEMEW2_DELIMl443LWf75a33c259651b96311922,
	mikeschinkel@newclarity.net, 31719706.18081241511686334.J>

"Peter Westwood" <peter.westwood@ftwr.co.uk> wrote:
> The reason we recommend avoiding direct SQL is to reduce the 
> worry of  forward-compatibility for your theme or plugin.

With respect, I do understand your reasons and do believe that 95% of the time it is probably the right approach. But as with any guidelines there are times when it makes sense to bypass them, and that was my point.

> Keep an option in the db which contains an array 
> containing the six post ids you want to display 
> and update this option when a new post is written 
> in one of the categories.
>
> Then you can as far as I remember do a single 
> WP_Query loop with the post_ids specified using 
> 'post__in' and keep to always using the API.
> This moves any heavy code to the backend where 
> it will run when required.

IF the query to find the most recent posts in each category is moved to a scheduled task or done on post update then I agree that would probably be one of the best solutions discussed albeit does require understanding how to implement the hooks which can be less than trivial (though not terribly hard.) 

> Calling a hefty SQL query with subqueries or hairy JOINs 
> is no going to be performant.

Point of note, with the proper indexes the overhead of most subqueries and multi-join queries is minimal, especially as compared to 6 standard queries. Put another way, doing something in SQL will (almost) ALWAYS be much faster than doing it in PHP.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From ozh at planetozh.com  Tue May  5 08:47:00 2009
From: ozh at planetozh.com (Ozh)
Date: Tue May  5 08:47:20 2009
Subject: [wp-hackers] register_setting tip
In-Reply-To: <b88434820905041627y83b1748md9c42e417dc040a2@mail.gmail.com>
Message-ID: <OFA6960EF7.08D147FE-ONC12575AD.002FE373-C12575AD.00304017@notes.edfgdf.fr>

wp-hackers-bounces@lists.automattic.com a ?crit sur 05/05/2009 01:27:46 :
> IIRC, name all the fields you want to be in one option
> "ozh[something]", then just register the option as "ozh".

Meh. For some reason I just *can't* remember that "stuff[something]" is a 
valid HTML field name.

Thanks, that was it :)

From mikeschinkel at newclarity.net  Tue May  5 08:09:01 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue May  5 09:05:17 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <862d087f0905041915h525c24d6n5eda4c4e9c1f7334@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl443923efa976706f70ee2125ff1,
	mikeschinkel@newclarity.net, 20764750.18061241510938610.J>

Nathan:

Sorry, I think I was having a brain fart.  I think this is the SQL you would need, assuming that you can depend on larger post IDs being the more frequent route, and assuming you'd go the SQL route:

SELECT wp_terms.term_id, wp_terms.name AS term_name, wp_posts.* 
FROM wp_posts 
INNER JOIN (
SELECT wp_term_taxonomy.term_id, MAX(wp_posts.ID) AS post_id
FROM wp_posts
INNER JOIN wp_term_relationships ON ( wp_posts.ID = wp_term_relationships.object_id )
INNER JOIN wp_term_taxonomy ON ( wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id )
WHERE wp_term_taxonomy.taxonomy = 'category' AND wp_posts.post_type = 'post' AND (wp_posts.post_status =  'publish' OR wp_posts.post_status =  'private')
GROUP BY wp_term_taxonomy.term_id) AS post_category ON post_category.post_id=wp_posts.ID
INNER JOIN wp_terms ON wp_terms.term_id=post_category.term_id

HTH.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "Nathan Rice" <ncrice@gmail.com>
To: wp-hackers@lists.automattic.com
Sent: Monday, May 4, 2009 10:15:13 PM GMT -05:00 US/Canada Eastern
Subject: Re: [wp-hackers] Pull Latest Post from Each of 6 Categories

Paul,
Would this be more, or less, expensive of a process than the 6 separate
WP_Query objects? That might sound like a stupid question, but I'm a
complete noob when it comes to SQL processes.

This particular site has had trouble in the past with database overload
(before wp_super_cache), so I want to be sure that I'm using the least
taxing method available.

Then again, if wp-super-cache is taking care of reducing queries, then this
may all be unnecessary.  I just need to make sure I'm doing everything I can
do to make it better.

At the very least, this points out a limitation in the WP_Query object
parameters.

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Mon, May 4, 2009 at 9:09 PM, Paul <paul@codehooligans.com> wrote:

> Yeah. Not *that* complicated.
>
> Nathan if you are still looking for something I have something for you. I
> can't figure out how to do this via WP_Query directly. I've not really used
> WP_Query that much for custom query only for filtering categories, tags,
> etc. I found it easier to build the query then call  wpdb->get_results()
> function directly. This will return the result set (array). From there I can
> 'fake' the WP_Query object.
>
> I'm hesitant to just paste the code here. So I've added the file to my site
> for download as a text file.
> http://www.codehooligans.com/packages/page_test.txt
>
> There is a leadin function for you to use. You can paste the function
> itself into your theme's functions.php file.
>
>
> The lead-in function:
>
> get_single_cat_items();
>
> Take a number of arguments in traditional WP style:
>
> get_single_cat_items('cats=9,157,8&return=wpquery&cache-key=single_cats');
>
> The above will query the posts for categories 9, 157 and 8.
> The 'return' parameter is used to tell the function to return a reference
> to a WP_Query object (default) or the raw posts array.
> The 'cache-key' if set will use the old wp_cache_get(); function to prevent
> requery.
>
> The SQL involved is not really that complicated but does require
> subqueries, one for each category. So you need to make sure your MySQL is up
> to 4.1 (or better 5.x). Below is the SQL for the three categories 9,157,8.
> As you can see it's alot but repeats the same basic SQL for each category
>
> SELECT * FROM wp_posts WHERE ID = (
>                SELECT wp_posts.ID
>                FROM wp_posts
>                        INNER JOIN wp_term_relationships ON ( wp_posts.ID =
> wp_term_relationships.object_id )
>                        INNER JOIN wp_term_taxonomy ON (
> wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id )
>                WHERE 1 =1
>                        AND wp_term_taxonomy.taxonomy =  'category'
>                        AND wp_term_taxonomy.term_id IN ('9')
>                        AND wp_posts.post_type =  'post'
>                        AND (wp_posts.post_status =  'publish' OR
> wp_posts.post_status =  'private')
>                ORDER BY wp_posts.post_date DESC
>                LIMIT 1
>        )
>        OR ID = (
>                SELECT wp_posts.ID
>                FROM wp_posts
>                        INNER JOIN wp_term_relationships ON ( wp_posts.ID =
> wp_term_relationships.object_id )
>                        INNER JOIN wp_term_taxonomy ON (
> wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id )
>                WHERE 1 =1
>                        AND wp_term_taxonomy.taxonomy =  'category'
>                        AND wp_term_taxonomy.term_id IN ('157')
>                        AND wp_posts.post_type =  'post'
>                        AND (wp_posts.post_status =  'publish' OR
> wp_posts.post_status =  'private')
>                ORDER BY wp_posts.post_date DESC
>                LIMIT 1
>        )
>        OR ID = (
>                SELECT wp_posts.ID
>                FROM wp_posts
>                        INNER JOIN wp_term_relationships ON ( wp_posts.ID =
> wp_term_relationships.object_id )
>                        INNER JOIN wp_term_taxonomy ON (
> wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id )
>                WHERE 1 =1
>                        AND wp_term_taxonomy.taxonomy =  'category'
>                        AND wp_term_taxonomy.term_id IN ('8')
>                        AND wp_posts.post_type =  'post'
>                        AND (wp_posts.post_status =  'publish' OR
> wp_posts.post_status =  'private')
>                ORDER BY wp_posts.post_date DESC
>                LIMIT 1
>        )
>
>
>
>
>
> On May 4, 2009, at 6:05 PM, Jeremy Clarke wrote:
>
>  Yeah, the SQL to accomplish this would be so complicated and prone to
>> breaking that you're probably better off working out an
>> intricately-complex caching system and using normal queries instead.
>>
>> Also: If its just the front page of your site then as long as you have
>> wp-supercache or something like that running you probably won't be hit
>> too hard because that page will almost always be cached for visitors.
>>
>> --
>> Jeremy Clarke
>> Code and Design | globalvoicesonline.org
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From poster at communitymodder.com  Tue May  5 01:25:01 2009
From: poster at communitymodder.com (modder)
Date: Tue May  5 13:36:45 2009
Subject: [wp-hackers] Pull Latest Post from Each of 6 Categories
In-Reply-To: <EMEWEMEW2_DELIMl4407wb46fa4b97264fed1d6ff2c,
	mikeschinkel@newclarity.net, 13369404.17921241500070656.J>
References: <EMEWEMEW2_DELIMl4407wb46fa4b97264fed1d6ff2c,
	mikeschinkel@newclarity.net, 13369404.17921241500070656.J>
Message-ID: <49FF956C.7050808@communitymodder.com>

If you would only want to do this in one instance then it would probably 
make sense to just use the direct sql method then adjust it as wordpress 
upgrades. I really think that the concerns about upgrading are 
unfounded. Aside from the fact that the database schema does not change 
very often, an existing query can easily be adjusted to factor in schema 
changes at the point you decide to upgrade. However, this is only 
practical on a single site. I would definitely not suggest this for a 
plugin developer.

One option would be to simply extend the WP_Query class to factor in the 
flexibility you require. That way you can use your new custom class in 
your special case without breaking anything. This method would be most 
usefully if you require the same sort of functionality all over your 
site. It would still be good however to keep note of changes to the 
WP_Query class.
From malaiac at gmail.com  Wed May  6 08:15:31 2009
From: malaiac at gmail.com (Malaiac)
Date: Wed May  6 08:16:04 2009
Subject: [wp-hackers] 2.8 Changes in meta boxes ?
Message-ID: <59e7f3130905060115t84e5b6bk995b6038aaea0392@mail.gmail.com>

Was there any changes in meta boxes management in 2.8 ?I am testing a plugin
(zeList), and the side boxes do not appear anymore (in fact, there is no
"side" column anymore) on the edit-link-form.php .... the plugin uses a
custom link-add + edit-link-form files, based on the original ones.

Malaiac
From malaiac at gmail.com  Wed May  6 08:52:13 2009
From: malaiac at gmail.com (Malaiac)
Date: Wed May  6 09:15:14 2009
Subject: [wp-hackers] Re: 2.8 Changes in meta boxes ?
In-Reply-To: <59e7f3130905060115t84e5b6bk995b6038aaea0392@mail.gmail.com>
References: <59e7f3130905060115t84e5b6bk995b6038aaea0392@mail.gmail.com>
Message-ID: <59e7f3130905060152p34c92756m8ed9ef7cab2f49d0@mail.gmail.com>

It seems there are still bugs on screen options / meta boxes management...
is it trac-ked somewhere ? (all plugins deactivated, svn install of 2.8
bleeding edge, the wp-admin/post.php?action=edit&post=1 does not show side
bar.

Malaiac

2009/5/6 Malaiac <malaiac@gmail.com>

> Was there any changes in meta boxes management in 2.8 ?I am testing a
> plugin (zeList), and the side boxes do not appear anymore (in fact, there is
> no "side" column anymore) on the edit-link-form.php .... the plugin uses a
> custom link-add + edit-link-form files, based on the original ones.
>
> Malaiac
>
From admin at laptoptips.ca  Wed May  6 09:28:50 2009
From: admin at laptoptips.ca (Andrew Ozz)
Date: Wed May  6 09:29:18 2009
Subject: [wp-hackers] Re: 2.8 Changes in meta boxes ?
In-Reply-To: <59e7f3130905060152p34c92756m8ed9ef7cab2f49d0@mail.gmail.com>
References: <59e7f3130905060115t84e5b6bk995b6038aaea0392@mail.gmail.com>
	<59e7f3130905060152p34c92756m8ed9ef7cab2f49d0@mail.gmail.com>
Message-ID: <4A015852.4000308@laptoptips.ca>

Malaiac wrote:
> It seems there are still bugs on screen options / meta boxes management...
> is it trac-ked somewhere ? (all plugins deactivated, svn install of 2.8
> bleeding edge, the wp-admin/post.php?action=edit&post=1 does not show side
> bar.

You mean it doesn't switch from one to two columns and back when you 
change the screen options? Does it change on the dashboard?
From malaiac at gmail.com  Wed May  6 10:09:30 2009
From: malaiac at gmail.com (Malaiac)
Date: Wed May  6 10:10:37 2009
Subject: [wp-hackers] Re: 2.8 Changes in meta boxes ?
In-Reply-To: <4A015852.4000308@laptoptips.ca>
References: <59e7f3130905060115t84e5b6bk995b6038aaea0392@mail.gmail.com> 
	<59e7f3130905060152p34c92756m8ed9ef7cab2f49d0@mail.gmail.com> 
	<4A015852.4000308@laptoptips.ca>
Message-ID: <59e7f3130905060309u42ca82b6u14e9fae1f4fff7@mail.gmail.com>

2009/5/6 Andrew Ozz <admin@laptoptips.ca>

> You mean it doesn't switch from one to two columns and back when you change
> the screen options? Does it change on the dashboard?
>

ok, I was doubtful about my own bug report, since 2.8 is freezed and the bug
seemed obvious... a svn refresh solved the problem.

Still got a problem : the meta boxes (that were added perfectly right in
2.7, on the side column) doesn't appear at startup, I have to swtich from 1
to 2 columns, check their display box in screen options, rearrange them into
the side column, and then I'm ok.
Ok for one edit, since I have to do it all again the next time I'm on the
page.... :(

Besides, I have to switch the admin url
from wp-admin/admin.php?page=zelist/admin/link.php
to wp-admin/admin.php?page=zelist/admin/link.php&noheader=1
in order to have the meta boxes loaded before the screen_meta is called

Is there a way to force them to appear on every proper page ?
They are added with
add_meta_box('linkcategorydiv', __('Categories'),
'link_categories_meta_box', 'link', 'side', 'core');
add_meta_box('tagsdiv', __('Tags'), 'link_tags_meta_box', 'link', 'side',
'core'); (yes tags for links, why not ? :) )
etc.

 Malaiac
From admin at laptoptips.ca  Wed May  6 18:05:47 2009
From: admin at laptoptips.ca (Andrew Ozz)
Date: Wed May  6 18:06:46 2009
Subject: [wp-hackers] Re: 2.8 Changes in meta boxes ?
In-Reply-To: <59e7f3130905060309u42ca82b6u14e9fae1f4fff7@mail.gmail.com>
References: <59e7f3130905060115t84e5b6bk995b6038aaea0392@mail.gmail.com>
	<59e7f3130905060152p34c92756m8ed9ef7cab2f49d0@mail.gmail.com>
	<4A015852.4000308@laptoptips.ca>
	<59e7f3130905060309u42ca82b6u14e9fae1f4fff7@mail.gmail.com>
Message-ID: <4A01D17B.3010904@laptoptips.ca>

Malaiac wrote:
> Besides, I have to switch the admin url
> from wp-admin/admin.php?page=zelist/admin/link.php
> to wp-admin/admin.php?page=zelist/admin/link.php&noheader=1
> in order to have the meta boxes loaded before the screen_meta is called
> 
> Is there a way to force them to appear on every proper page ?
> They are added with
> add_meta_box('linkcategorydiv', __('Categories'),
> 'link_categories_meta_box', 'link', 'side', 'core');
> add_meta_box('tagsdiv', __('Tags'), 'link_tags_meta_box', 'link', 'side',
> 'core'); (yes tags for links, why not ? :) )
> etc.

So you're adding them on a custom plugin page 
(admin.php?page=zelist/admin/link.php), not on the wp-admin/link.php. 
The user prefs for column, open/closed and hidden for each metabox are 
stored according to the page they are on. Think you have to init them 
with the proper page as the 4th argument in add_meta_box().

Perhaps have a look at meta_box_prefs() and screen_meta() in 
wp-admin/includes/template.php.
From somani.mayur at gmail.com  Thu May  7 05:43:11 2009
From: somani.mayur at gmail.com (Mayur Somani)
Date: Thu May  7 05:47:29 2009
Subject: [wp-hackers] sitemap issues
Message-ID: <a51040f00905062243v77bbc9ddy3363ad650e28bee9@mail.gmail.com>

Hi

I know that this may not be an appropriate place to ask this question. But i
couldn't find the answer anywhere else.

I have created a static site with wordpress in a subdirectory,

http://www.whateversite.com

http://www.whateversite.com/blog/

How can I create a sitemap that include every page from static site as well
as from wordpress blog?

Thanks
From lynne.pope at gmail.com  Thu May  7 07:27:24 2009
From: lynne.pope at gmail.com (Lynne Pope)
Date: Thu May  7 07:27:59 2009
Subject: [wp-hackers] sitemap issues
In-Reply-To: <a51040f00905062243v77bbc9ddy3363ad650e28bee9@mail.gmail.com>
References: <a51040f00905062243v77bbc9ddy3363ad650e28bee9@mail.gmail.com>
Message-ID: <427667db0905070027r3d0d5236m495ff2e2c0d26626@mail.gmail.com>

2009/5/7 Mayur Somani <somani.mayur@gmail.com>

> Hi
>
> I know that this may not be an appropriate place to ask this question. But
> i
> couldn't find the answer anywhere else.
>
> I have created a static site with wordpress in a subdirectory,
>
> http://www.whateversite.com
>
> http://www.whateversite.com/blog/
>
> How can I create a sitemap that include every page from static site as well
> as from wordpress blog?


This is really a question for the support forums:
http://wordpress.org/support/

You can search for sitemap plugins here:
http://wordpress.org/extend/plugins/

For your static site, you may find something that works for you with this
search:
http://www.google.com/#hl=en&q=google+sitemap+generator&aq=0&oq=Google+sitemap&fp=0_TDBcSQxa0
From somani.mayur at gmail.com  Thu May  7 08:08:15 2009
From: somani.mayur at gmail.com (Mayur Somani)
Date: Thu May  7 08:08:50 2009
Subject: [wp-hackers] sitemap issues
In-Reply-To: <427667db0905070027r3d0d5236m495ff2e2c0d26626@mail.gmail.com>
References: <a51040f00905062243v77bbc9ddy3363ad650e28bee9@mail.gmail.com> 
	<427667db0905070027r3d0d5236m495ff2e2c0d26626@mail.gmail.com>
Message-ID: <a51040f00905070108i5a876824o638a47ed1c511f96@mail.gmail.com>

Yes, I am aware of all these plugins but all of these plugins work only for
wordpress part of the site.

The google sitemap generator plugin does allows to add external pages, but
if the number of static pages is large, this solution is not practical.

I did asked the q at support forums, and I am still waiting for reply after
two days.

I am very good at google hacking but didn't find any good solution to the
issue.

This is the reason I posted it here.

Any ideas?

On Thu, May 7, 2009 at 12:57 PM, Lynne Pope <lynne.pope@gmail.com> wrote:

> 2009/5/7 Mayur Somani <somani.mayur@gmail.com>
>
> > Hi
> >
> > I know that this may not be an appropriate place to ask this question.
> But
> > i
> > couldn't find the answer anywhere else.
> >
> > I have created a static site with wordpress in a subdirectory,
> >
> > http://www.whateversite.com
> >
> > http://www.whateversite.com/blog/
> >
> > How can I create a sitemap that include every page from static site as
> well
> > as from wordpress blog?
>
>
> This is really a question for the support forums:
> http://wordpress.org/support/
>
> You can search for sitemap plugins here:
> http://wordpress.org/extend/plugins/
>
> For your static site, you may find something that works for you with this
> search:
>
> http://www.google.com/#hl=en&q=google+sitemap+generator&aq=0&oq=Google+sitemap&fp=0_TDBcSQxa0
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From simon at sweetinteraction.com  Thu May  7 08:11:16 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Thu May  7 08:11:48 2009
Subject: [wp-hackers] sitemap issues
In-Reply-To: <a51040f00905070108i5a876824o638a47ed1c511f96@mail.gmail.com>
References: <a51040f00905062243v77bbc9ddy3363ad650e28bee9@mail.gmail.com> 
	<427667db0905070027r3d0d5236m495ff2e2c0d26626@mail.gmail.com> 
	<a51040f00905070108i5a876824o638a47ed1c511f96@mail.gmail.com>
Message-ID: <77c8b7bf0905070111n51291825hec0e4fdb5baf29cd@mail.gmail.com>

On Thu, May 7, 2009 at 9:08 AM, Mayur Somani <somani.mayur@gmail.com> wrote:
>
> Yes, I am aware of all these plugins but all of these plugins work only for
> wordpress part of the site.
>
> The google sitemap generator plugin does allows to add external pages, but
> if the number of static pages is large, this solution is not practical.
>
<snip>
>
> I am very good at google hacking but didn't find any good solution to the
> issue.
>

A plugin could be written which allowed you to add the static pages
manually, and which auto-generated the WP pages... however I am not
aware of one existing at the moment. You'd need to understand WP and
be able to code PHP to do this though, so it may not be an convenient
solution for you. Alternatively, as Lynne suggested, your solution may
be (gasp) outside of WordPress.

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT
From somani.mayur at gmail.com  Thu May  7 08:17:48 2009
From: somani.mayur at gmail.com (Mayur Somani)
Date: Thu May  7 08:18:23 2009
Subject: [wp-hackers] sitemap issues
In-Reply-To: <77c8b7bf0905070111n51291825hec0e4fdb5baf29cd@mail.gmail.com>
References: <a51040f00905062243v77bbc9ddy3363ad650e28bee9@mail.gmail.com> 
	<427667db0905070027r3d0d5236m495ff2e2c0d26626@mail.gmail.com> 
	<a51040f00905070108i5a876824o638a47ed1c511f96@mail.gmail.com> 
	<77c8b7bf0905070111n51291825hec0e4fdb5baf29cd@mail.gmail.com>
Message-ID: <a51040f00905070117t281179bds98629ab2e262d7ae@mail.gmail.com>

As I said, one such plugin already exists, that is, google sitemap
generator. However adding each page manually is not practical since the
number of pages in static part of site is too large.

There are some third party sitemap generators, but I am not sure whether
they'll crawl the wordpress part of the site as well. I am half way through
their documentation.

Still, it would be great if any such solution existed for wordpress :(

On Thu, May 7, 2009 at 1:41 PM, Simon Wheatley
<simon@sweetinteraction.com>wrote:

> On Thu, May 7, 2009 at 9:08 AM, Mayur Somani <somani.mayur@gmail.com>
> wrote:
> >
> > Yes, I am aware of all these plugins but all of these plugins work only
> for
> > wordpress part of the site.
> >
> > The google sitemap generator plugin does allows to add external pages,
> but
> > if the number of static pages is large, this solution is not practical.
> >
> <snip>
> >
> > I am very good at google hacking but didn't find any good solution to the
> > issue.
> >
>
> A plugin could be written which allowed you to add the static pages
> manually, and which auto-generated the WP pages... however I am not
> aware of one existing at the moment. You'd need to understand WP and
> be able to code PHP to do this though, so it may not be an convenient
> solution for you. Alternatively, as Lynne suggested, your solution may
> be (gasp) outside of WordPress.
>
> S
>
>
> ---
> Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> Registered office: 7 Malton Av, Manchester, M21 8AT
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From sebastien at hoosta.com  Thu May  7 14:51:31 2009
From: sebastien at hoosta.com (=?ISO-8859-1?Q?S=E9bastien_Giglio?=)
Date: Thu May  7 14:51:51 2009
Subject: [wp-hackers] sitemap issues
In-Reply-To: <a51040f00905070117t281179bds98629ab2e262d7ae@mail.gmail.com>
References: <a51040f00905062243v77bbc9ddy3363ad650e28bee9@mail.gmail.com>
	<427667db0905070027r3d0d5236m495ff2e2c0d26626@mail.gmail.com>
	<a51040f00905070108i5a876824o638a47ed1c511f96@mail.gmail.com>
	<77c8b7bf0905070111n51291825hec0e4fdb5baf29cd@mail.gmail.com>
	<a51040f00905070117t281179bds98629ab2e262d7ae@mail.gmail.com>
Message-ID: <C584B7D2-DF51-4CB0-8C5D-11E31F68EC0C@hoosta.com>

Well, maybe you could modify the Google Sitemap Generator plugin to  
automatically generate a sitemap with all your static pages ?

I think it's a good solution if you don't want to start your own  
plugin from nothing.

Le 7 mai 09 ? 10:17, Mayur Somani a ?crit :

> As I said, one such plugin already exists, that is, google sitemap
> generator. However adding each page manually is not practical since  
> the
> number of pages in static part of site is too large.
>
> There are some third party sitemap generators, but I am not sure  
> whether
> they'll crawl the wordpress part of the site as well. I am half way  
> through
> their documentation.
>
> Still, it would be great if any such solution existed for wordpress :(
>
> On Thu, May 7, 2009 at 1:41 PM, Simon Wheatley
> <simon@sweetinteraction.com>wrote:
>
>> On Thu, May 7, 2009 at 9:08 AM, Mayur Somani <somani.mayur@gmail.com>
>> wrote:
>>>
>>> Yes, I am aware of all these plugins but all of these plugins work  
>>> only
>> for
>>> wordpress part of the site.
>>>
>>> The google sitemap generator plugin does allows to add external  
>>> pages,
>> but
>>> if the number of static pages is large, this solution is not  
>>> practical.
>>>
>> <snip>
>>>
>>> I am very good at google hacking but didn't find any good solution  
>>> to the
>>> issue.
>>>
>>
>> A plugin could be written which allowed you to add the static pages
>> manually, and which auto-generated the WP pages... however I am not
>> aware of one existing at the moment. You'd need to understand WP and
>> be able to code PHP to do this though, so it may not be an convenient
>> solution for you. Alternatively, as Lynne suggested, your solution  
>> may
>> be (gasp) outside of WordPress.
>>
>> S
>>
>>
>> ---
>> Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
>> Registered office: 7 Malton Av, Manchester, M21 8AT
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>


From hal at burgiss.net  Thu May  7 22:28:55 2009
From: hal at burgiss.net (Hal Burgiss)
Date: Thu May  7 22:29:15 2009
Subject: [wp-hackers] sitemap issues
In-Reply-To: <C584B7D2-DF51-4CB0-8C5D-11E31F68EC0C@hoosta.com>
References: <a51040f00905062243v77bbc9ddy3363ad650e28bee9@mail.gmail.com>
	<427667db0905070027r3d0d5236m495ff2e2c0d26626@mail.gmail.com>
	<a51040f00905070108i5a876824o638a47ed1c511f96@mail.gmail.com>
	<77c8b7bf0905070111n51291825hec0e4fdb5baf29cd@mail.gmail.com>
	<a51040f00905070117t281179bds98629ab2e262d7ae@mail.gmail.com>
	<C584B7D2-DF51-4CB0-8C5D-11E31F68EC0C@hoosta.com>
Message-ID: <20090507222855.GA22368@honey.burgiss.net>

On Thu, May 07, 2009 at 04:51:31PM +0200, S?bastien Giglio wrote:
> Well, maybe you could modify the Google Sitemap Generator plugin to  
> automatically generate a sitemap with all your static pages ?
> 
> I think it's a good solution if you don't want to start your own  
> plugin from nothing.

[...]

As a possible Plan B, Google has some kind of *nix  system daemon that
builds sitemaps from Apache log files. I have not tried it. FWIW.

-- 
Hal
From ncrice at gmail.com  Fri May  8 18:46:58 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Fri May  8 18:49:30 2009
Subject: [wp-hackers] Hook in the quick edit screen?
Message-ID: <862d087f0905081146k6e2c3ab8h65682f56b1ff72c2@mail.gmail.com>

Is there an action hook in the quick post edit code that I could use to add
a new form element to?  We can add meta-boxes to the edit post screen, but
it would be nice if we could also add things to the quick edit form as well.

Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice
From beau at dentedreality.com.au  Fri May  8 20:07:37 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Fri May  8 20:07:48 2009
Subject: [wp-hackers] Hook in the quick edit screen?
In-Reply-To: <862d087f0905081146k6e2c3ab8h65682f56b1ff72c2@mail.gmail.com>
References: <862d087f0905081146k6e2c3ab8h65682f56b1ff72c2@mail.gmail.com>
Message-ID: <902424490905081307k7a2758fjfd728f83267d4dd6@mail.gmail.com>

> Is there an action hook in the quick post edit code that I could use to add
> a new form element to? ?We can add meta-boxes to the edit post screen, but
> it would be nice if we could also add things to the quick edit form as well.

According to wp-admin/includes/dashboard.php::wp_dashboard_quick_press(),
there are no filters directly on that output.

That function is called by wp_add_dashboard_widget() which uses
add_meta_box(). It doesn't look like there are any filters on either
of those functions either, so it probably makes sense to figure out
where the best place for some filtering is and have that implemented.
From markjaquith at gmail.com  Sat May  9 08:36:21 2009
From: markjaquith at gmail.com (Mark Jaquith)
Date: Sat May  9 08:36:55 2009
Subject: [wp-hackers] wp_specialchars() vs attribute_escape() ( now
	esc_attr() ) and quote entity-encoding
Message-ID: <2979bd660905090136j580182f9pfdfa963aec544823@mail.gmail.com>

WordPress 2.8 is getting a shortening, consolidation, and
"i18n-chaining" upgrade for its security escaping functions.

Here are some old/new pairs:

echo attribute_escape( __('Translated String') );
esc_attr_e(' Translated String' );

attribute_escape( __('Translated String' ) );
esc_attr__( 'Translated String' );

attribute_escape( $user_string );
esc_attr( $user_string );

js_escape( "dynamic $js" );
esc_js( "dynamic $js" );

The naming convention is esc_FORMAT[optional i18n suffix](). It's
shorter, predictable, and it cuts down on parenthesis nesting! Next on
my list was one-parameter wp_specialchars(), which will become
esc_html(), esc_html_e() and esc_html__().

It occurred to me that a lot of people do this:

<input value="<?php echo wp_specialchars( $xss ); ?>" />

Which is WRONG (and unfortunately common in plugins) and an XSS
exploit opportunity. See, attribute_escape() (now esc_attr())
additionally entity-encodes quotes, to prevent XSS attacks from
"breaking out" of the attribute. That's the only real difference
between attribute_escape( $xss ) and wp_specialchars( $xss ). While it
is dangerous to use wp_specialchars( $xss ) instead of
attribute_escape( $xss ), the opposite is not true. There is no harm,
that I can think of, in entity-encoding quotes in an HTML context.

Can you think of any? If not, this presents us with an opportunity to
make esc_html() and esc_attr() functionally equivalent and to have
wp_specialchars( $xss ) calls go through esc_html(), which would
encode quotes, and thus anyone who used the above code would get a
free security upgrade to their plugin/theme. Can you think of any
reason this wouldn't work? C'mon, go ahead and rain on my parade.

Notes:

Backward compat with the old functions is maintained. As for my
proposed handling of esc_html() and wp_specialchars(), calls to
wp_specialchars() with default values for the rarely-used additional
params would be honored, like before. It's only single-parameter calls
to wp_specialchars() that would get the esc_html()/quote-encoding
treatment.

-- 
Mark Jaquith
? http://markjaquith.com/
? http://coveredwebservices.com/
From malaiac at gmail.com  Sat May  9 14:28:22 2009
From: malaiac at gmail.com (Malaiac)
Date: Sat May  9 14:28:59 2009
Subject: [wp-hackers] gettext with a $locale parameter
Message-ID: <59e7f3130905090728r26283a55g22106a008827cbd7@mail.gmail.com>

I'm working on extending the IXR server (to be used as an API for my plugin).
On the WP install standing as the API server, the locale is english.
The client may be in a different locale, and I'd like to write several
.mo/.po files to answer the API calls with the proper messages.

Small exemple :
if(!plugin_key_exists($args['key']))
return new IXR_Error(-1, __('Please send a valid API key','myplugin'));

The message will be in english, whatever mo/po files I put in myplugin
directory.

How should I call gettext to have stg like :
if(!plugin_key_exists($args['key']))
return new IXR_Error(-1, __get_message___('Please send a valid API
key','myplugin',$args['locale']));
?

Thanks,
Malaiac
From ryan at pixopoint.com  Sun May 10 06:01:32 2009
From: ryan at pixopoint.com (Ryan Hellyer)
Date: Sun May 10 06:01:46 2009
Subject: [wp-hackers] Re: wp-hackers Digest, Vol 51, Issue 60
In-Reply-To: <20090427120043.9569A642D@comox.textdrive.com>
References: <20090427120043.9569A642D@comox.textdrive.com>
Message-ID: <3d9d0f060905092301l4439f878sa81d3d1a56ba14f5@mail.gmail.com>

Hi,
After my first submission to the WP Hackers mailing list I stopped
receiving any more emails.

So I went to http://lists.automattic.com/mailman/options/wp-hackers
and tried to login, but keep the error "wp-hackers roster
authentication failed." when I try to use the 'Visit Subscribers List'
and an "Error: Authentication failed." error when I try to use the
'Unsubscribe or edit options'.

Any ideas on what is wrong and how I should fix it?

thanks,
Ryan







Date: Mon, 27 Apr 2009 18:30:04 +1200
From: Ryan Hellyer <ryan@pixopoint.com>
Subject: [wp-hackers] Re: Question about some annoyances I have
       (Arthur Pemberton)
To: wp-hackers@lists.automattic.com

I assume the main reason absolute URLs are used is to prevent (or at
least reduce) splogging problems. Sites which use relative URLs are
much more easily copied without any evidence of the original site. By
using absolute URLs, most splogs end up with a whole stack of links
pointing back to the original site, this makes it much easier for
visitors and (more importantly) Google etc. to see that your site is
the original. Of course if a splogger knows what they're doing,
they'll be able to replace all of those URLs dynamically, but this is
generally not the case.

cheers,
Ryan
From wp at xentek.net  Sun May 10 06:47:28 2009
From: wp at xentek.net (Eric Marden)
Date: Sun May 10 07:25:33 2009
Subject: [wp-hackers] Re: wp-hackers Digest, Vol 51, Issue 60
In-Reply-To: <3d9d0f060905092301l4439f878sa81d3d1a56ba14f5@mail.gmail.com>
References: <20090427120043.9569A642D@comox.textdrive.com>
	<3d9d0f060905092301l4439f878sa81d3d1a56ba14f5@mail.gmail.com>
Message-ID: <0EFEC4CC-CC87-4D77-9BCD-8344144B52E9@xentek.net>

> Any ideas on what is wrong and how I should fix it?

Your post came through, so maybe try some of the email commands.

I think wp-hackers-help@lists.automattic.com will give you a list of  
all of them, but at a minimum try sending a blank email to wp-hackers-unsubscribe@lists.automattic.com 
  and see what happens.


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/
From hayeshais at gmail.com  Sun May 10 14:51:18 2009
From: hayeshais at gmail.com (Hayesha Somarathne)
Date: Sun May 10 14:53:33 2009
Subject: [wp-hackers] Getting 'Private' appended to page heading on pages
	set to Private
Message-ID: <6a74c4e20905100751q76c2bd45n65b4c1c025585a27@mail.gmail.com>

Hi all,

I'm a new to Wordpress and hoping to get your guidance for some issues I
encounter recently while working with wordpress 2.5.

1. Wanted to create some pages "Private" and when viewing those pages, their
page heading is displayed having the* Private:* tag appended at the
beginning.  How can I get rid of that.

2. How can I manually set the Page order by passing the default setting of
alphabetically ordered - On the Write >> Page or Manage >> Pagse: the Page
Order section tells to give a number but I'm bit confused what to give
because I gave 1 -5( based on the order I want the pages to be displayed but
the default order didn't changed)

Any help on above matters are highly appreciated.

Thank you.
-- 
???? ??????? (Hayesha Somarathne)
http://sahana.lk
http://thoughtsandideas.wordpress.com
From glenn at glennansley.com  Sun May 10 19:18:47 2009
From: glenn at glennansley.com (Glenn Ansley)
Date: Sun May 10 19:19:26 2009
Subject: [wp-hackers] Getting 'Private' appended to page heading on pages 
	set to Private
In-Reply-To: <6a74c4e20905100751q76c2bd45n65b4c1c025585a27@mail.gmail.com>
References: <6a74c4e20905100751q76c2bd45n65b4c1c025585a27@mail.gmail.com>
Message-ID: <3283f0830905101218p276b974ete2b10b2ce6e9b1a4@mail.gmail.com>

Hi,

1) I wrote a quick plugin for you to accomplish this (although you
could just paste the guts of the file in your theme's functions.php
file if you wanted). You can find it here: http://tinyurl.com/ppm9gv

2) You probably just have to adjust the way your theme is printing the
pages. ie : <?php wp_list_pages('sort_column=menu_order'); ?>
according to http://codex.wordpress.org/wp_list_pages

Hope that helps,
Glenn Ansley
http://fullthrottledevelopment.com
http://twitter.com/full_throttle

On Sun, May 10, 2009 at 10:51 AM, Hayesha Somarathne
<hayeshais@gmail.com> wrote:
> Hi all,
>
> I'm a new to Wordpress and hoping to get your guidance for some issues I
> encounter recently while working with wordpress 2.5.
>
> 1. Wanted to create some pages "Private" and when viewing those pages, their
> page heading is displayed having the* Private:* tag appended at the
> beginning. ?How can I get rid of that.
>
> 2. How can I manually set the Page order by passing the default setting of
> alphabetically ordered - On the Write >> Page or Manage >> Pagse: the Page
> Order section tells to give a number but I'm bit confused what to give
> because I gave 1 -5( based on the order I want the pages to be displayed but
> the default order didn't changed)
>
> Any help on above matters are highly appreciated.
>
> Thank you.
> --
> ???? ??????? (Hayesha Somarathne)
> http://sahana.lk
> http://thoughtsandideas.wordpress.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From scompt at scompt.com  Mon May 11 02:15:16 2009
From: scompt at scompt.com (Edward Dale)
Date: Mon May 11 02:15:28 2009
Subject: [wp-hackers] User-tagged posts
Message-ID: <1fe4fa230905101915t58187b09m50a18ec1d1d28d0a@mail.gmail.com>

Hello all,

I've been asked by a client to implement a system where users can tag
posts with their own tags.  Every user will have their own set of tags
and they're only going to be tagging posts that they've already marked
as 'favorites', which adds a record in a favorites table
(wp_favorites) linking wp_users and wp_posts.

It seems like it'd be nice to somehow integrate this into the existing
taxonomy tables.  Would it be abusing the system to create a taxonomy
for each user (eg, user-<userid>)?

Adding a field to wp_favorites for the tags would be the easiest
solution, but would be super-inefficient to search.  I could also add
a couple tables and start to build my own taxonomy system.

Does anyone have any suggestions for the best way to go about this?
There's an existing plugin that looks it does this and took the last
approach, but I wanted to see what opinions here were before I started
down any path.

Cheers,
Edward
From hayeshais at gmail.com  Mon May 11 03:21:46 2009
From: hayeshais at gmail.com (Hayesha Somarathne)
Date: Mon May 11 03:58:51 2009
Subject: [wp-hackers] Getting 'Private' appended to page heading on pages 
	set to Private
In-Reply-To: <3283f0830905101218p276b974ete2b10b2ce6e9b1a4@mail.gmail.com>
References: <6a74c4e20905100751q76c2bd45n65b4c1c025585a27@mail.gmail.com> 
	<3283f0830905101218p276b974ete2b10b2ce6e9b1a4@mail.gmail.com>
Message-ID: <6a74c4e20905102021u71ba56cfvc10e6de46108fc65@mail.gmail.com>

Hi Glenn,

>
> 1) I wrote a quick plugin for you to accomplish this (although you
> could just paste the guts of the file in your theme's functions.php
> file if you wanted). You can find it here: http://tinyurl.com/ppm9gv
>
> 2) You probably just have to adjust the way your theme is printing the
> pages. ie : <?php wp_list_pages('sort_column=menu_order'); ?>
> according to http://codex.wordpress.org/wp_list_pages
>
Thank you for the valuable resources.

Cheers
-- 
???? ??????? (Hayesha Somarathne)
http://sahana.lk
http://thoughtsandideas.wordpress.com
From mike_walsh at mindspring.com  Mon May 11 10:15:05 2009
From: mike_walsh at mindspring.com (Mike Walsh)
Date: Mon May 11 10:15:27 2009
Subject: [wp-hackers] Help with wpdb Class Errors
Message-ID: <004c01c9d221$5b3f2b30$11bd8190$@com>

In the plugin I am working on I am using WP's wpdb database class to access
custom tables.  From time to time, I run into a problem where creating a new
instance of a wpdb class fails and I am at a loss as to why.

 

This code fragment checks to see if creating a new instance works and if
not, dumps an error.

 

            $this->wpstdb = new wpdb(WPST_DB_USERNAME,

                WPST_DB_PASSWORD, WPST_DB_NAME, WPST_DB_HOSTNAME) ;

 

            if ($this->wpstdb->dbh == false)

                print($this->wpstdb->error->errors[500][0]) ;

 

This is the error I get:

 

Error establishing a database connection

 

This either means that the username and password information in your
wp-config.php file is incorrect or we can't contact the database server at
localhost. This could mean your host's database server is down.

 

    * Are you sure you have the correct username and password?

    * Are you sure that you have typed the correct hostname?

    * Are you sure that the database server is running?

 

If you're unsure what these terms mean you should probably contact your
host. If you still need help you can always visit the WordPress Support
Forums.

 

 

The code always uses the same constants to connect to the database, they
come directly from wp-config.php.

 

Anyone have any suggestions on how to track this down?

 

Thanks,

 

Mike

--

Mike Walsh - mike_walsh@mindspring.com

 

From scribu at gmail.com  Mon May 11 12:39:17 2009
From: scribu at gmail.com (scribu)
Date: Mon May 11 12:39:34 2009
Subject: [wp-hackers] Help with wpdb Class Errors
In-Reply-To: <004c01c9d221$5b3f2b30$11bd8190$@com>
References: <004c01c9d221$5b3f2b30$11bd8190$@com>
Message-ID: <349fe48b0905110539t2cf9e055if6eec5722da7e821@mail.gmail.com>

Why would you need another instance of WPDB (which also implies another db
connection)?

You can just add your custom table to the existing wpdb instance:

$wpdb->custom_table = $wpdb->prefix . 'custom_table';


-- 
http://scribu.net
From chris at clwill.com  Mon May 11 13:29:35 2009
From: chris at clwill.com (Chris Williams)
Date: Mon May 11 13:30:26 2009
Subject: [wp-hackers] Help with wpdb Class Errors
In-Reply-To: <004c01c9d221$5b3f2b30$11bd8190$@com>
Message-ID: <C62D764F.30235%chris@clwill.com>

You could be running into the connection limit on the server, and/or a
per-session connection limit.  As scribu notes, there is no reason to
want/need another instance.


> From: Mike Walsh <mike_walsh@mindspring.com>
> Subject: [wp-hackers] Help with wpdb Class Errors
> 
> In the plugin I am working on I am using WP's wpdb database class to access
> custom tables.  From time to time, I run into a problem where creating a new
> instance of a wpdb class fails and I am at a loss as to why.
>
<snip>
> 
> Anyone have any suggestions on how to track this down?

From ncrice at gmail.com  Mon May 11 15:57:02 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Mon May 11 15:57:26 2009
Subject: [wp-hackers] Functions that Fire during "crunching"
Message-ID: <862d087f0905110857t446dd31id0b7e1dd489972bb@mail.gmail.com>

Hey guys,
I was doing a little research over the weekend and became interested in what
exactly happens when the Flash Uploader does its "crunching" thing? What
exactly is happening to the image?

I know that the 3 standard image sizes are being produced, and the
attachment data is being generated and stored, but I'm looking for something
a little more specific.  Is there a list of functions that are being fired?
Is there a particular file where all this is happening? If so, where?

Any pointers you guys have would be much appreciated.  I'm really trying to
wrap my head around the whole image/file upload system.

Thanks!
Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice
From kaspars at konstruktors.com  Mon May 11 19:04:36 2009
From: kaspars at konstruktors.com (Kaspars Dambis)
Date: Mon May 11 19:05:10 2009
Subject: [wp-hackers] Functions that Fire during "crunching"
In-Reply-To: <862d087f0905110857t446dd31id0b7e1dd489972bb@mail.gmail.com>
References: <862d087f0905110857t446dd31id0b7e1dd489972bb@mail.gmail.com>
Message-ID: <50c7a8d00905111204h1a4f99f1v2ac118c2b9dd2025@mail.gmail.com>

>
> Is there a list of functions that are being fired?

Is there a particular file where all this is happening? If so, where?


Nathan, I would start by looking at http://lab.yukei.net/wp-trunk*
/wp-includes/js/swfupload/handlers.dev.js*.source.html
which calls http://lab.yukei.net/wp-trunk*/wp-admin/async-upload.php*
.source.html

where $id = *media_handle_upload*('async-upload', $_REQUEST['post_id']);

in http://lab.yukei.net/wp-trunk/nav.html?wp-admin*/includes/media.php*
.source.html#l171

starts the upload procedure.

Regards,
Kaspars
From malaiac at gmail.com  Mon May 11 19:48:42 2009
From: malaiac at gmail.com (Malaiac)
Date: Mon May 11 19:49:45 2009
Subject: upload of web image Was Re: [wp-hackers] Functions that Fire during 
	"crunching"
Message-ID: <59e7f3130905111248x647257bfn8ae3c29b89dc9c88@mail.gmail.com>

Speaking about Flash uploader, what is the logic of :
1. image on my computer > upload on the site
2. image on the web > stay on the web
(behind the obvious 1 needing to be uploaded)

Is there a way to force upload for images on the web, and force
thumbnail generation ?
From mikeschinkel at newclarity.net  Tue May 12 02:58:03 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Tue May 12 03:00:45 2009
Subject: [wp-hackers] Functions that Fire during "crunching"
In-Reply-To: <862d087f0905110857t446dd31id0b7e1dd489972bb@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl4ALw42cf6e424341e30824efbce,
	mikeschinkel@newclarity.net, 731962.661242097040165.J>

"Nathan Rice" <ncrice@gmail.com> wrote:
> Any pointers you guys have would be much appreciated.  I'm really 
>trying to wrap my head around the whole image/file upload system.

Yes, having "hooks" that allow us to put files where we want them and/or create the sizes and crops we want would be great. Not sure, maybe they are already there?

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins
From wp-hackers at striderweb.com  Tue May 12 15:43:12 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Tue May 12 15:43:45 2009
Subject: [wp-hackers] 2.8 plugins page
Message-ID: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>

Hi all --

I wanted to discuss the changes to the Plugins page for WP 2.8.

* First, I definitely prefer to have all plugins on one long page  
rather than splitting them every 20 plugins.  It's just a lot more  
clicking around to find what I want now.  Plus, with one long page, I  
can (in Firefox) just type the plugin name and jump right to it -- not  
so if the plugin I want is on the next page....

* Second, why are we now only showing the Action links on mouseover?   
This one in particular looks like change for change's sake.  ***How  
does this improve usability??***

I think this was a mistake especially as more and more plugin authors  
are putting in links to the Settings page in the Action links.  (A  
trend I myself have championed, responding to the frequent complaint  
that it was hard to figure out where a plugin's configuration was  
located in the menus.)

(One more point about this one -- changing the number of columns in  
the Plugins list messes up any existing plugins that were using the  
"after row" hook.  If there's strong reason to do it, so be it -- but  
don't do it on a whim!)

Please reconsider the mouseover Action links.  Just make them visible.

* Third -- I am... ambivalent... about re-combining the active and  
inactive plugins.  No personal preference, except I don't like the  
indecisiveness -- they were together, then we separated them, and now  
we're combining them again.  If we're bouncing back and forth it  
sounds as though we don't have a strong reason for either, so maybe  
just leave it alone?

Overall, I guess I'm against arbitrary interface changes without  
strong reason for the change.  I'm not talking minor stuff like CSS  
colors, but structural changes.  With a system like WordPress that so  
strongly encourages customization via plugin, we should be very  
careful not to keep stirring things around and undermining those same  
plugins on a whim.

Of course it's a case of where to draw the line -- you don't want to  
eliminate any changes or the program will stagnate, but when making a  
change, we must ask "What is the reason for this?" -- and if the  
answer is "I just like it better", tread carefully.  Compatibility is  
important.

Sincerely,

-- 
Stephen Rider
http://striderweb.com/
From jer at simianuprising.com  Tue May 12 15:55:42 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Tue May 12 15:55:54 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
Message-ID: <e1202cb10905120855s1e737c7at13a3e7cd32e60cd4@mail.gmail.com>

On Tue, May 12, 2009 at 11:43 AM, Stephen Rider
<wp-hackers@striderweb.com> wrote:
> * Second, why are we now only showing the Action links on mouseover? ?This
> one in particular looks like change for change's sake. ?***How does this
> improve usability??***

+1 for avoiding links appearing on mouseover in all situations but
especially new ones. It always annoys me on the edit posts list.

-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org
From mikeschinkel at newclarity.net  Tue May 12 17:13:14 2009
From: mikeschinkel at newclarity.net (mikeschinkel@newclarity.net)
Date: Tue May 12 17:14:20 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
Message-ID: <EMEWEMEW2_DELIMl4BCDG2d4e73f0c77a4a670a2e7a,
	mikeschinkel@newclarity.net, 85195376-5184-4747-8248>

+1 on all counts.

-Mike Schinkel
Sent from my iPhone

On May 12, 2009, at 11:47 AM, Stephen Rider <wp- 
hackers@striderweb.com> wrote:

> Hi all --
>
> I wanted to discuss the changes to the Plugins page for WP 2.8.
>
> * First, I definitely prefer to have all plugins on one long page  
> rather than splitting them every 20 plugins.  It's just a lot more  
> clicking around to find what I want now.  Plus, with one long page,  
> I can (in Firefox) just type the plugin name and jump right to it --  
> not so if the plugin I want is on the next page....
>
> * Second, why are we now only showing the Action links on  
> mouseover?  This one in particular looks like change for change's  
> sake.  ***How does this improve usability??***
>
> I think this was a mistake especially as more and more plugin  
> authors are putting in links to the Settings page in the Action  
> links.  (A trend I myself have championed, responding to the  
> frequent complaint that it was hard to figure out where a plugin's  
> configuration was located in the menus.)
>
> (One more point about this one -- changing the number of columns in  
> the Plugins list messes up any existing plugins that were using the  
> "after row" hook.  If there's strong reason to do it, so be it --  
> but don't do it on a whim!)
>
> Please reconsider the mouseover Action links.  Just make them visible.
>
> * Third -- I am... ambivalent... about re-combining the active and  
> inactive plugins.  No personal preference, except I don't like the  
> indecisiveness -- they were together, then we separated them, and  
> now we're combining them again.  If we're bouncing back and forth it  
> sounds as though we don't have a strong reason for either, so maybe  
> just leave it alone?
>
> Overall, I guess I'm against arbitrary interface changes without  
> strong reason for the change.  I'm not talking minor stuff like CSS  
> colors, but structural changes.  With a system like WordPress that  
> so strongly encourages customization via plugin, we should be very  
> careful not to keep stirring things around and undermining those  
> same plugins on a whim.
>
> Of course it's a case of where to draw the line -- you don't want to  
> eliminate any changes or the program will stagnate, but when making  
> a change, we must ask "What is the reason for this?" -- and if the  
> answer is "I just like it better", tread carefully.  Compatibility  
> is important.
>
> Sincerely,
>
> -- 
> Stephen Rider
> http://striderweb.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From bryanharley at gmail.com  Tue May 12 17:17:31 2009
From: bryanharley at gmail.com (Bryan Harley)
Date: Tue May 12 17:17:45 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <7421220181690864188@unknownmsgid>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
	<7421220181690864188@unknownmsgid>
Message-ID: <58410e2e0905121017r5e4b699eod5400bd48654c5fd@mail.gmail.com>

Agreed, I hate the fact that the active and inactive plugins are
grouped together again.  I know it was done for the sake of interface
consistency.  But it just degrades usability on the plugins page
(specifically).

On Tue, May 12, 2009 at 10:13 AM,  <mikeschinkel@newclarity.net> wrote:
> +1 on all counts.
>
> -Mike Schinkel
> Sent from my iPhone
>
> On May 12, 2009, at 11:47 AM, Stephen Rider <wp-hackers@striderweb.com>
> wrote:
>
>> Hi all --
>>
>> I wanted to discuss the changes to the Plugins page for WP 2.8.
>>
>> * First, I definitely prefer to have all plugins on one long page rather
>> than splitting them every 20 plugins. ?It's just a lot more clicking around
>> to find what I want now. ?Plus, with one long page, I can (in Firefox) just
>> type the plugin name and jump right to it -- not so if the plugin I want is
>> on the next page....
>>
>> * Second, why are we now only showing the Action links on mouseover? ?This
>> one in particular looks like change for change's sake. ?***How does this
>> improve usability??***
>>
>> I think this was a mistake especially as more and more plugin authors are
>> putting in links to the Settings page in the Action links. ?(A trend I
>> myself have championed, responding to the frequent complaint that it was
>> hard to figure out where a plugin's configuration was located in the menus.)
>>
>> (One more point about this one -- changing the number of columns in the
>> Plugins list messes up any existing plugins that were using the "after row"
>> hook. ?If there's strong reason to do it, so be it -- but don't do it on a
>> whim!)
>>
>> Please reconsider the mouseover Action links. ?Just make them visible.
>>
>> * Third -- I am... ambivalent... about re-combining the active and
>> inactive plugins. ?No personal preference, except I don't like the
>> indecisiveness -- they were together, then we separated them, and now we're
>> combining them again. ?If we're bouncing back and forth it sounds as though
>> we don't have a strong reason for either, so maybe just leave it alone?
>>
>> Overall, I guess I'm against arbitrary interface changes without strong
>> reason for the change. ?I'm not talking minor stuff like CSS colors, but
>> structural changes. ?With a system like WordPress that so strongly
>> encourages customization via plugin, we should be very careful not to keep
>> stirring things around and undermining those same plugins on a whim.
>>
>> Of course it's a case of where to draw the line -- you don't want to
>> eliminate any changes or the program will stagnate, but when making a
>> change, we must ask "What is the reason for this?" -- and if the answer is
>> "I just like it better", tread carefully. ?Compatibility is important.
>>
>> Sincerely,
>>
>> --
>> Stephen Rider
>> http://striderweb.com/
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From joost at yoast.com  Tue May 12 17:19:08 2009
From: joost at yoast.com (Joost de Valk)
Date: Tue May 12 17:19:25 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <EMEWEMEW2_DELIMl4BCDG2d4e73f0c77a4a670a2e7a,
	mikeschinkel@newclarity.net, 85195376-5184-4747-8248>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
	<EMEWEMEW2_DELIMl4BCDG2d4e73f0c77a4a670a2e7a,
	mikeschinkel@newclarity.net, 85195376-5184-4747-8248>
Message-ID: <4A09AF8C.3060502@yoast.com>

Same here, +1 on all, right there with you Stephen.

mikeschinkel@newclarity.net wrote:
> +1 on all counts.
>
> -Mike Schinkel
> Sent from my iPhone
>
> On May 12, 2009, at 11:47 AM, Stephen Rider 
> <wp-hackers@striderweb.com> wrote:
>
>> Hi all --
>>
>> I wanted to discuss the changes to the Plugins page for WP 2.8.
>>
>> * First, I definitely prefer to have all plugins on one long page 
>> rather than splitting them every 20 plugins.  It's just a lot more 
>> clicking around to find what I want now.  Plus, with one long page, I 
>> can (in Firefox) just type the plugin name and jump right to it -- 
>> not so if the plugin I want is on the next page....
>>
>> * Second, why are we now only showing the Action links on mouseover?  
>> This one in particular looks like change for change's sake.  ***How 
>> does this improve usability??***
>>
>> I think this was a mistake especially as more and more plugin authors 
>> are putting in links to the Settings page in the Action links.  (A 
>> trend I myself have championed, responding to the frequent complaint 
>> that it was hard to figure out where a plugin's configuration was 
>> located in the menus.)
>>
>> (One more point about this one -- changing the number of columns in 
>> the Plugins list messes up any existing plugins that were using the 
>> "after row" hook.  If there's strong reason to do it, so be it -- but 
>> don't do it on a whim!)
>>
>> Please reconsider the mouseover Action links.  Just make them visible.
>>
>> * Third -- I am... ambivalent... about re-combining the active and 
>> inactive plugins.  No personal preference, except I don't like the 
>> indecisiveness -- they were together, then we separated them, and now 
>> we're combining them again.  If we're bouncing back and forth it 
>> sounds as though we don't have a strong reason for either, so maybe 
>> just leave it alone?
>>
>> Overall, I guess I'm against arbitrary interface changes without 
>> strong reason for the change.  I'm not talking minor stuff like CSS 
>> colors, but structural changes.  With a system like WordPress that so 
>> strongly encourages customization via plugin, we should be very 
>> careful not to keep stirring things around and undermining those same 
>> plugins on a whim.
>>
>> Of course it's a case of where to draw the line -- you don't want to 
>> eliminate any changes or the program will stagnate, but when making a 
>> change, we must ask "What is the reason for this?" -- and if the 
>> answer is "I just like it better", tread carefully.  Compatibility is 
>> important.
>>
>> Sincerely,
>>
>> -- 
>> Stephen Rider
>> http://striderweb.com/
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

-- 
me *Joost de Valk*
Online Marketing, WordPress, SEO & Social Media Strategy
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost@orangevalley.nl <mailto:joost@orangevalley.nl> - 
joost@yoast.com <mailto:joost@yoast.com>
T: +316-24-555-808 | @yoast <http://twitter.com/yoast> on Twitter
From les at lcb.me.uk  Tue May 12 18:00:46 2009
From: les at lcb.me.uk (Les Bessant)
Date: Tue May 12 18:35:15 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
Message-ID: <2BC15C56-5016-4B7C-91B3-0771FCAD5DE1@lcb.me.uk>

Good points...

Agreed on one page rather than split every 20 plugins

Links that appear on mouseover only strike me as a really bad idea -  
the interface needs to be intuitive, and when I saw that, I thought  
something was broken...

I see that inactive plugins now appear below active ones, but without  
the clear separation we have in 2.7. Personally, I though the split of  
active / recently active / inactive was a significant step forwards,  
and it would be a shame to lose it.

--
Les Bessant les@lcb.me.uk
Losing it[1] - http://losingit.me.uk
My flickr pictures - http://flickr.com/photos/lesbessant/




On 12 May 2009, at 16:43, Stephen Rider wrote:

> Hi all --
>
> I wanted to discuss the changes to the Plugins page for WP 2.8.
>
> * First, I definitely prefer to have all plugins on one long page  
> rather than splitting them every 20 plugins.  It's just a lot more  
> clicking around to find what I want now.  Plus, with one long page,  
> I can (in Firefox) just type the plugin name and jump right to it --  
> not so if the plugin I want is on the next page....
>
> * Second, why are we now only showing the Action links on  
> mouseover?  This one in particular looks like change for change's  
> sake.  ***How does this improve usability??***
>
> I think this was a mistake especially as more and more plugin  
> authors are putting in links to the Settings page in the Action  
> links.  (A trend I myself have championed, responding to the  
> frequent complaint that it was hard to figure out where a plugin's  
> configuration was located in the menus.)
>
> (One more point about this one -- changing the number of columns in  
> the Plugins list messes up any existing plugins that were using the  
> "after row" hook.  If there's strong reason to do it, so be it --  
> but don't do it on a whim!)
>
> Please reconsider the mouseover Action links.  Just make them visible.
>
> * Third -- I am... ambivalent... about re-combining the active and  
> inactive plugins.  No personal preference, except I don't like the  
> indecisiveness -- they were together, then we separated them, and  
> now we're combining them again.  If we're bouncing back and forth it  
> sounds as though we don't have a strong reason for either, so maybe  
> just leave it alone?
>
> Overall, I guess I'm against arbitrary interface changes without  
> strong reason for the change.  I'm not talking minor stuff like CSS  
> colors, but structural changes.  With a system like WordPress that  
> so strongly encourages customization via plugin, we should be very  
> careful not to keep stirring things around and undermining those  
> same plugins on a whim.
>
> Of course it's a case of where to draw the line -- you don't want to  
> eliminate any changes or the program will stagnate, but when making  
> a change, we must ask "What is the reason for this?" -- and if the  
> answer is "I just like it better", tread carefully.  Compatibility  
> is important.
>
> Sincerely,
>
> -- 
> Stephen Rider
> http://striderweb.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ncrice at gmail.com  Tue May 12 18:38:54 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Tue May 12 18:39:12 2009
Subject: [wp-hackers] Functions that Fire during "crunching"
In-Reply-To: <7420982856631847026@unknownmsgid>
References: <862d087f0905110857t446dd31id0b7e1dd489972bb@mail.gmail.com>
	<7420982856631847026@unknownmsgid>
Message-ID: <862d087f0905121138q5610aa80yfe409172f8f27889@mail.gmail.com>

So, I can see that the media_handle_upload function actually handles
uploading the file, and creating the post info for the upload, but what I
don't see are the set of actions that create the "medium" and "thumbnail"
versions of the image.

Does anyone have any pointers there?

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Mon, May 11, 2009 at 10:58 PM, Mike Schinkel <mikeschinkel@newclarity.net
> wrote:

> "Nathan Rice" <ncrice@gmail.com> wrote:
> > Any pointers you guys have would be much appreciated.  I'm really
> >trying to wrap my head around the whole image/file upload system.
>
> Yes, having "hooks" that allow us to put files where we want them and/or
> create the sizes and crops we want would be great. Not sure, maybe they are
> already there?
>
> -Mike Schinkel
> Custom Wordpress Plugins
> http://mikeschinkel.com/custom-wordpress-plugins
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ncrice at gmail.com  Tue May 12 19:07:49 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Tue May 12 19:08:16 2009
Subject: [wp-hackers] Functions that Fire during "crunching"
In-Reply-To: <862d087f0905121138q5610aa80yfe409172f8f27889@mail.gmail.com>
References: <862d087f0905110857t446dd31id0b7e1dd489972bb@mail.gmail.com>
	<7420982856631847026@unknownmsgid>
	<862d087f0905121138q5610aa80yfe409172f8f27889@mail.gmail.com>
Message-ID: <862d087f0905121207i4ef6fd61p1d942a13eb1ea274@mail.gmail.com>

Nevermind ... it seems that the wp_generate_attachment_metadata() function
actually calls the image_make_intermediate_size() function which will
created the necessary "medium" and "thumbnail" images.

Looks like if you can figure out the necessary parameters that need to be
passed to these functions, uploading files and registering them in the media
library should be pretty easy.

Thanks!

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Tue, May 12, 2009 at 2:38 PM, Nathan Rice <ncrice@gmail.com> wrote:

> So, I can see that the media_handle_upload function actually handles
> uploading the file, and creating the post info for the upload, but what I
> don't see are the set of actions that create the "medium" and "thumbnail"
> versions of the image.
>
> Does anyone have any pointers there?
>
> My Website
> http://www.nathanrice.net/
>
> My Twitter
> http://twitter.com/nathanrice
>
>
> On Mon, May 11, 2009 at 10:58 PM, Mike Schinkel <
> mikeschinkel@newclarity.net> wrote:
>
>> "Nathan Rice" <ncrice@gmail.com> wrote:
>> > Any pointers you guys have would be much appreciated.  I'm really
>> >trying to wrap my head around the whole image/file upload system.
>>
>> Yes, having "hooks" that allow us to put files where we want them and/or
>> create the sizes and crops we want would be great. Not sure, maybe they are
>> already there?
>>
>> -Mike Schinkel
>> Custom Wordpress Plugins
>> http://mikeschinkel.com/custom-wordpress-plugins
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
From ryan at boren.nu  Tue May 12 20:21:10 2009
From: ryan at boren.nu (Ryan Boren)
Date: Tue May 12 20:21:21 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <2BC15C56-5016-4B7C-91B3-0771FCAD5DE1@lcb.me.uk>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
	<2BC15C56-5016-4B7C-91B3-0771FCAD5DE1@lcb.me.uk>
Message-ID: <c8f37c930905121321l71a29267jfdaba18f79906ad9@mail.gmail.com>

On Tue, May 12, 2009 at 11:00 AM, Les Bessant <les@lcb.me.uk> wrote:
> Good points...
>
> Agreed on one page rather than split every 20 plugins

You can go to screen options and set the paging to a big number.
From scribu at gmail.com  Tue May 12 20:49:41 2009
From: scribu at gmail.com (scribu)
Date: Tue May 12 20:50:20 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <c8f37c930905121321l71a29267jfdaba18f79906ad9@mail.gmail.com>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
	<2BC15C56-5016-4B7C-91B3-0771FCAD5DE1@lcb.me.uk>
	<c8f37c930905121321l71a29267jfdaba18f79906ad9@mail.gmail.com>
Message-ID: <349fe48b0905121349o27398b99pfe22b97c6682828e@mail.gmail.com>

+1 on all plugins on a single page. IMHO, the only step forward in the 2.8
version was putting action links under the plugin name.

-- 
http://scribu.net
From niladam at gmail.com  Tue May 12 20:50:51 2009
From: niladam at gmail.com (madalin)
Date: Tue May 12 20:51:44 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <c8f37c930905121321l71a29267jfdaba18f79906ad9@mail.gmail.com>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
	<2BC15C56-5016-4B7C-91B3-0771FCAD5DE1@lcb.me.uk>
	<c8f37c930905121321l71a29267jfdaba18f79906ad9@mail.gmail.com>
Message-ID: <df809b110905121350o60777308x6ff9e94df2be8711@mail.gmail.com>

+1 on all points Stephen stated.

However, the recently inactive plugins could be shown as hidden, with
a link to toggle showing them on/off.

On Tue, May 12, 2009 at 11:21 PM, Ryan Boren <ryan@boren.nu> wrote:
> On Tue, May 12, 2009 at 11:00 AM, Les Bessant <les@lcb.me.uk> wrote:
>> Good points...
>>
>> Agreed on one page rather than split every 20 plugins
>
> You can go to screen options and set the paging to a big number.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Cu drag,
madalin
http://madalin.eu
http://lyrics.notme.org
http://www.tg-jiu.ro
http://www.radioomega.ro
From kikizas at gmail.com  Tue May 12 20:54:24 2009
From: kikizas at gmail.com (Demetris)
Date: Tue May 12 20:54:46 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <c8f37c930905121321l71a29267jfdaba18f79906ad9@mail.gmail.com>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
	<2BC15C56-5016-4B7C-91B3-0771FCAD5DE1@lcb.me.uk>
	<c8f37c930905121321l71a29267jfdaba18f79906ad9@mail.gmail.com>
Message-ID: <9f34a3610905121354l3d5eb879td6289a8576e5247@mail.gmail.com>

On Tue, May 12, 2009 at 11:21 PM, Ryan Boren <ryan@boren.nu> wrote:
> On Tue, May 12, 2009 at 11:00 AM, Les Bessant <les@lcb.me.uk> wrote:
>> Good points...
>>
>> Agreed on one page rather than split every 20 plugins
>
> You can go to screen options and set the paging to a big number.

Invalid answer! :-p

People ask for options in the admin area or for extra settings (e.g.,
to disable wptexturize) and they get rejected:  We don?t need more
options!

And now we have a new option that?s not needed at all (the plugins
page is not like the themes page) and that most people will have to
change its default value to be able to manage their plugins.  I think
it should go.

About the other two points Stephen raises, my two cents:

Mouseover for actions.  I?m neutral.

Alphabetical ordering.  This seemed weird to me at first, but I got
used to it quickly and I liked it.  Now Ryan split it again into
active and inactive, and I?m not sure if I like it. I think
alphabetical ordering makes sense now that there are alternative views
by plugin state, since, as I see it, it complements the views by
state.

[All] shows all plugins in alphabetical order.  Then you can click
[Active] to view the active ones, [Update available] for the ones that
need attention, etc.

Cheers,
Demetris
From justmichaelh at gmail.com  Tue May 12 20:55:57 2009
From: justmichaelh at gmail.com (Michael E. Hancock)
Date: Tue May 12 20:56:01 2009
Subject: [wp-hackers] 2.8 plugins page
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
Message-ID: <326b01c9d344$0e3aef30$6601a8c0@dell8600>


From: "Stephen Rider" <wp-hackers@striderweb.com>
> * First, I definitely prefer to have all plugins on one long page rather 
> than splitting them every 20 plugins.

WIth the Screen Options you can change the number of plugins per page


> * Third -- I am... ambivalent... about re-combining the active and 
> inactive plugins.

There is the Inactive and Active filters there to segregate the two.


MichaelH

From scribu at gmail.com  Tue May 12 22:03:58 2009
From: scribu at gmail.com (scribu)
Date: Tue May 12 22:04:13 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <326b01c9d344$0e3aef30$6601a8c0@dell8600>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
	<326b01c9d344$0e3aef30$6601a8c0@dell8600>
Message-ID: <349fe48b0905121503t68913dc9r2abf6beb89ff15fb@mail.gmail.com>

Regarding the plugin order on the All page, I think it makes the most sense
to list them alphabetically. This way you can find a plugin quicker, since
it will be in the same place, no matter it's status.

Then, if you want to see only active plugins, for example, you can use the
new filters.


-- 
http://scribu.net
From scribu at gmail.com  Tue May 12 22:11:34 2009
From: scribu at gmail.com (scribu)
Date: Tue May 12 22:11:49 2009
Subject: [wp-hackers] User-tagged posts
In-Reply-To: <1fe4fa230905101915t58187b09m50a18ec1d1d28d0a@mail.gmail.com>
References: <1fe4fa230905101915t58187b09m50a18ec1d1d28d0a@mail.gmail.com>
Message-ID: <349fe48b0905121511s68fde347g52470455e15eeeed@mail.gmail.com>

I'm thinking of doing something similar on a site. I also have a favourites
table with just 2 columns.

Could you post a link to the plugin you mentioned? The only one in this
field that I know of is Custom Taxonomies.

-- 
http://scribu.net
From ozh at planetozh.com  Tue May 12 22:22:59 2009
From: ozh at planetozh.com (Ozh)
Date: Tue May 12 22:23:15 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <349fe48b0905121503t68913dc9r2abf6beb89ff15fb@mail.gmail.com>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
	<326b01c9d344$0e3aef30$6601a8c0@dell8600>
	<349fe48b0905121503t68913dc9r2abf6beb89ff15fb@mail.gmail.com>
Message-ID: <ae81acd10905121522p35b00441i935567189e055e53@mail.gmail.com>

I actually like the new plugins page. Not to brag or anything, but it
works exactly like my "Better Plugin Page" plugin, and I like it when
WP kills my plugin because the features are integrated into core. I
just don't like the paging stuff and will totally set it to 999. This
said, most people probably don't run that much plugins.

While I do get why people are uncertain about the mouseover actions,
it certainly unclutter the interface. Plus, people are probably more
used to mouseover actions now (comments editing etc...).

My 1 cent.

-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News
From scompt at scompt.com  Tue May 12 22:48:31 2009
From: scompt at scompt.com (Edward Dale)
Date: Tue May 12 22:48:43 2009
Subject: [wp-hackers] User-tagged posts
In-Reply-To: <349fe48b0905121511s68fde347g52470455e15eeeed@mail.gmail.com>
References: <1fe4fa230905101915t58187b09m50a18ec1d1d28d0a@mail.gmail.com>
	<349fe48b0905121511s68fde347g52470455e15eeeed@mail.gmail.com>
Message-ID: <1fe4fa230905121548w7f5a3f51re189c36c7a82d06e@mail.gmail.com>

On Tue, May 12, 2009 at 6:11 PM, scribu <scribu@gmail.com> wrote:
> Could you post a link to the plugin you mentioned? The only one in this
> field that I know of is Custom Taxonomies.

Sorry, I intended to do that.  The plugin is called WP_Folksonomy.

http://wordpress.org/extend/plugins/wp-folksonomy/

Edward
From jer at simianuprising.com  Tue May 12 23:51:29 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Tue May 12 23:51:41 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <ae81acd10905121522p35b00441i935567189e055e53@mail.gmail.com>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
	<326b01c9d344$0e3aef30$6601a8c0@dell8600>
	<349fe48b0905121503t68913dc9r2abf6beb89ff15fb@mail.gmail.com>
	<ae81acd10905121522p35b00441i935567189e055e53@mail.gmail.com>
Message-ID: <e1202cb10905121651t14562428m72b64f8c9582fc6@mail.gmail.com>

Most of what I think has already been said, but I'd like to +1 for NOT
paging the comments list by default.

IMHO if you have enough plugins that you need it (say >50 plugins)
you're making bad decisions and WP should if not mandatorily then
implicitly recommend against such behavior. "Oh, you're plugins page
is loading slowly eh? Could it be you have COMLETELY LOST CONTROL?" I
don't want to tell people how to run their sites, but its' totally an
edge case and it doesn't take THAT much imagination to think of this
as a problem that could and should be solved by a plugin rather than
core.

As a reference I am someone who would theoretically be in need of the
paging on the categories screen (>300 categories in a complex
hierarchy), but at the end of the day it ALMOST ALWAYS just gets in my
way. It messes up the category hierarchy and makes it hard to find
parents+children and in the end it takes longer to find the category
than to just wait for the on giant page to load slowly.

Back to the plugins page, I think if anything the option should be
there but opposite to how it is now. Show all plugins by default and
if someone actually needs them paged let them manually choose to do
so. For bonus points just count their total plugins, and if its
greater than whatever number (20? 40?) show a message saying "Is this
page slow for you? You have a lot of plugins so you might want to turn
on paging" with a button that changes the setting.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org
From jer at simianuprising.com  Tue May 12 23:53:54 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Tue May 12 23:54:06 2009
Subject: [wp-hackers] Functions that Fire during "crunching"
In-Reply-To: <862d087f0905121207i4ef6fd61p1d942a13eb1ea274@mail.gmail.com>
References: <862d087f0905110857t446dd31id0b7e1dd489972bb@mail.gmail.com>
	<7420982856631847026@unknownmsgid>
	<862d087f0905121138q5610aa80yfe409172f8f27889@mail.gmail.com>
	<862d087f0905121207i4ef6fd61p1d942a13eb1ea274@mail.gmail.com>
Message-ID: <e1202cb10905121653j3a302598p1de560d7296a4a1b@mail.gmail.com>

Looks like you're on the right track. As a potentially simpler idea
(depending on what you're going for) you could also just hook into the
get_option() filter and filter for the 3 settings that control the
sizes of the thumbnail and medium size.

-- 
Jeremy Clarke
Code and Design | globalvoicesonline.org
From wp-hackers at striderweb.com  Wed May 13 02:32:36 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed May 13 02:33:05 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <e1202cb10905121651t14562428m72b64f8c9582fc6@mail.gmail.com>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
	<326b01c9d344$0e3aef30$6601a8c0@dell8600>
	<349fe48b0905121503t68913dc9r2abf6beb89ff15fb@mail.gmail.com>
	<ae81acd10905121522p35b00441i935567189e055e53@mail.gmail.com>
	<e1202cb10905121651t14562428m72b64f8c9582fc6@mail.gmail.com>
Message-ID: <E4C8F9FD-7292-49D4-8DFB-0717D4A07A36@striderweb.com>

Good idea. :)

On May 12, 2009, at 6:51 PM, Jeremy Clarke wrote:

> Back to the plugins page, I think if anything the option should be
> there but opposite to how it is now. Show all plugins by default and
> if someone actually needs them paged let them manually choose to do
> so.

From scribu at gmail.com  Wed May 13 09:17:47 2009
From: scribu at gmail.com (scribu)
Date: Wed May 13 09:18:01 2009
Subject: [wp-hackers] User-tagged posts
In-Reply-To: <1fe4fa230905121548w7f5a3f51re189c36c7a82d06e@mail.gmail.com>
References: <1fe4fa230905101915t58187b09m50a18ec1d1d28d0a@mail.gmail.com>
	<349fe48b0905121511s68fde347g52470455e15eeeed@mail.gmail.com>
	<1fe4fa230905121548w7f5a3f51re189c36c7a82d06e@mail.gmail.com>
Message-ID: <349fe48b0905130217i5b6ee981y43f3795a1f6c33ea@mail.gmail.com>

Thank you.

It looks promising.

-- 
http://scribu.net
From jer at simianuprising.com  Wed May 13 16:18:19 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed May 13 16:18:38 2009
Subject: [wp-hackers] Help with wpdb Class Errors
In-Reply-To: <C62D764F.30235%chris@clwill.com>
References: <004c01c9d221$5b3f2b30$11bd8190$@com>
	<C62D764F.30235%chris@clwill.com>
Message-ID: <e1202cb10905130918u27e78bden54d725c1720a1a4b@mail.gmail.com>

The only reason you'd need it is if you were using a whole other
database, rather than a new table in your normal WP database.

Interesting problem though, as I've been working on some code that
will have multiple sites sharing one separate database. It's easy
enough to make a new $wpdb that connects to the secondary db, but I'm
worried about just the kinds of problems you're having.

Anyone know how likely that behavior is to adversely affect
performance? Does the extra mysql connection take up a lot of
resources on the db server, or is it just that Mike's wasn't
configured properly? Any suggestions on how to optimize for this
setup, or at least what MySQL settings might need to be changed to
avoid errors like the one above? (I guess whatever the 'max
connections' setting is for mysql would be a good start).

-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org
From simon at sweetinteraction.com  Wed May 13 18:08:07 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Wed May 13 18:08:40 2009
Subject: [wp-hackers] Sticky posts turning up in my custom WP Queries
Message-ID: <77c8b7bf0905131108k469be998i5093501742cc0f5b@mail.gmail.com>

Now maybe this is my comeuppance for using custom WP_Queries in recent
projects, but I've just hit an issue with sticky posts showing up on
loops outside the homepage. I create a custom WP_Query manually, for
example:

$args = array(
	'post_type' => $post_type,
	'what_to_show' => 'posts',
	'post_status' => 'publish',
	'posts_per_page' => $num_posts,
	'orderby' => 'modified',
	'order' => 'DESC',
	's' => $search_string,
);

$my_query = new WP_Query( $args );

Unfortunate thing 1: it seems that this query gets interpreted as
is_home = true, this is because of this line in WP_Query:

if ( !( $this->is_singular || $this->is_archive || $this->is_search ||
$this->is_feed || $this->is_trackback || $this->is_404 ||
$this->is_admin || $this->is_comments_popup ) )

Unfortunate thing 2: the fact that the Query is now interpreted as
is_home means that the conditional IF around putting sticky posts in
now evaluates to true, this is that conditional:

if ( $this->is_home && $page <= 1 && !empty($sticky_posts) &&
!$q['caller_get_posts'] ) {

All these things seem perfectly logical in and of themselves, but in
combination they conspire to trip me up when I create custom
WP_Queries for my custom loops on various templates.

Initially I thought to call for a new filter on $sticky_posts in
WP_Query, around line 2303... but I now wonder if the conditional
evaluating whether is_home should be true is at fault and maybe this
needs something extra, or maybe a filter on is_home.

Thoughts?

Thanks in advance.

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT
From wp at xentek.net  Wed May 13 18:13:30 2009
From: wp at xentek.net (Eric Marden)
Date: Wed May 13 18:13:53 2009
Subject: [wp-hackers] TEMPLATEPATH in child themes
Message-ID: <C1740656-929C-4F27-B5A0-B7BE26B8CA36@xentek.net>

Not sure if this is a bug or not, but I noticed that the constant  
TEMPLATEPATH points to the Parent Theme even when you have a Child  
Theme activated. Is this required for the Child Theme's missing files  
to default to the Parent Theme's files, or just a bug in that  
TEMPLATEPATH doesn't get updated with the child theme's path.

Its causing me a problem, which I can work around with a symlink, but  
was wondering if this is the expected behavior. Is there another  
CONSTANT that would point to the child theme properly?


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/





From ncrice at gmail.com  Wed May 13 18:18:45 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Wed May 13 18:18:59 2009
Subject: [wp-hackers] TEMPLATEPATH in child themes
In-Reply-To: <C1740656-929C-4F27-B5A0-B7BE26B8CA36@xentek.net>
References: <C1740656-929C-4F27-B5A0-B7BE26B8CA36@xentek.net>
Message-ID: <862d087f0905131118o8568b2arf5d8a25b81020f79@mail.gmail.com>

STYLESHEETPATH is what you want to use.

TEMPLATEPATH points to the parent theme path because the parent theme is
considered the "template" in the child theme style.css file.  It makes
sense.

Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Wed, May 13, 2009 at 2:13 PM, Eric Marden <wp@xentek.net> wrote:

> Not sure if this is a bug or not, but I noticed that the constant
> TEMPLATEPATH points to the Parent Theme even when you have a Child Theme
> activated. Is this required for the Child Theme's missing files to default
> to the Parent Theme's files, or just a bug in that TEMPLATEPATH doesn't get
> updated with the child theme's path.
>
> Its causing me a problem, which I can work around with a symlink, but was
> wondering if this is the expected behavior. Is there another CONSTANT that
> would point to the child theme properly?
>
>
> - Eric Marden
> __________________________________
> http://xentek.net/code/wordpress/
>
>
>
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From ncrice at gmail.com  Wed May 13 18:20:31 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Wed May 13 18:20:59 2009
Subject: [wp-hackers] TEMPLATEPATH in child themes
In-Reply-To: <862d087f0905131118o8568b2arf5d8a25b81020f79@mail.gmail.com>
References: <C1740656-929C-4F27-B5A0-B7BE26B8CA36@xentek.net>
	<862d087f0905131118o8568b2arf5d8a25b81020f79@mail.gmail.com>
Message-ID: <862d087f0905131120p120db818k3f84dd7e5d34642b@mail.gmail.com>

Also, the same principle applies when trying to get the URL of the template
or child theme directory.

bloginfo('stylesheet_directory');
bloginfo('template_directory');

Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Wed, May 13, 2009 at 2:18 PM, Nathan Rice <ncrice@gmail.com> wrote:

> STYLESHEETPATH is what you want to use.
>
> TEMPLATEPATH points to the parent theme path because the parent theme is
> considered the "template" in the child theme style.css file.  It makes
> sense.
>
> Nathan
>
> My Website
> http://www.nathanrice.net/
>
> My Twitter
> http://twitter.com/nathanrice
>
>
>
> On Wed, May 13, 2009 at 2:13 PM, Eric Marden <wp@xentek.net> wrote:
>
>> Not sure if this is a bug or not, but I noticed that the constant
>> TEMPLATEPATH points to the Parent Theme even when you have a Child Theme
>> activated. Is this required for the Child Theme's missing files to default
>> to the Parent Theme's files, or just a bug in that TEMPLATEPATH doesn't get
>> updated with the child theme's path.
>>
>> Its causing me a problem, which I can work around with a symlink, but was
>> wondering if this is the expected behavior. Is there another CONSTANT that
>> would point to the child theme properly?
>>
>>
>> - Eric Marden
>> __________________________________
>> http://xentek.net/code/wordpress/
>>
>>
>>
>>
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
From ncrice at gmail.com  Wed May 13 18:24:16 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Wed May 13 18:24:30 2009
Subject: [wp-hackers] Sticky posts turning up in my custom WP Queries
In-Reply-To: <77c8b7bf0905131108k469be998i5093501742cc0f5b@mail.gmail.com>
References: <77c8b7bf0905131108k469be998i5093501742cc0f5b@mail.gmail.com>
Message-ID: <862d087f0905131124l57d991fds14374f79704b1764@mail.gmail.com>

Excluding stickies from a query is pretty easy ...
http://www.nathanrice.net/blog/definitive-sticky-posts-guide-for-wordpress-27/
(scroll down to the "a custom loop to ignore stick posts" section)

Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Wed, May 13, 2009 at 2:08 PM, Simon Wheatley
<simon@sweetinteraction.com>wrote:

> Now maybe this is my comeuppance for using custom WP_Queries in recent
> projects, but I've just hit an issue with sticky posts showing up on
> loops outside the homepage. I create a custom WP_Query manually, for
> example:
>
> $args = array(
>        'post_type' => $post_type,
>        'what_to_show' => 'posts',
>        'post_status' => 'publish',
>        'posts_per_page' => $num_posts,
>        'orderby' => 'modified',
>        'order' => 'DESC',
>        's' => $search_string,
> );
>
> $my_query = new WP_Query( $args );
>
> Unfortunate thing 1: it seems that this query gets interpreted as
> is_home = true, this is because of this line in WP_Query:
>
> if ( !( $this->is_singular || $this->is_archive || $this->is_search ||
> $this->is_feed || $this->is_trackback || $this->is_404 ||
> $this->is_admin || $this->is_comments_popup ) )
>
> Unfortunate thing 2: the fact that the Query is now interpreted as
> is_home means that the conditional IF around putting sticky posts in
> now evaluates to true, this is that conditional:
>
> if ( $this->is_home && $page <= 1 && !empty($sticky_posts) &&
> !$q['caller_get_posts'] ) {
>
> All these things seem perfectly logical in and of themselves, but in
> combination they conspire to trip me up when I create custom
> WP_Queries for my custom loops on various templates.
>
> Initially I thought to call for a new filter on $sticky_posts in
> WP_Query, around line 2303... but I now wonder if the conditional
> evaluating whether is_home should be true is at fault and maybe this
> needs something extra, or maybe a filter on is_home.
>
> Thoughts?
>
> Thanks in advance.
>
> S
>
>
> ---
> Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
> Registered office: 7 Malton Av, Manchester, M21 8AT
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From if.website at gmail.com  Wed May 13 18:36:13 2009
From: if.website at gmail.com (Austin Matzko)
Date: Wed May 13 18:36:24 2009
Subject: [wp-hackers] Sticky posts turning up in my custom WP Queries
In-Reply-To: <77c8b7bf0905131108k469be998i5093501742cc0f5b@mail.gmail.com>
References: <77c8b7bf0905131108k469be998i5093501742cc0f5b@mail.gmail.com>
Message-ID: <674b4a3b0905131136o397b82d2tf0b1d4cb118ac4d4@mail.gmail.com>

On Wed, May 13, 2009 at 1:08 PM, Simon Wheatley
<simon@sweetinteraction.com> wrote:
> $args = array(
> ? ? ? ?'post_type' => $post_type,
> ? ? ? ?'what_to_show' => 'posts',
> ? ? ? ?'post_status' => 'publish',
> ? ? ? ?'posts_per_page' => $num_posts,
> ? ? ? ?'orderby' => 'modified',
> ? ? ? ?'order' => 'DESC',
> ? ? ? ?'s' => $search_string,
> );
>
> $my_query = new WP_Query( $args );
>
> Unfortunate thing 1: it seems that this query gets interpreted as
> is_home = true, this is because of this line in WP_Query:
>
> if ( !( $this->is_singular || $this->is_archive || $this->is_search ||
> $this->is_feed || $this->is_trackback || $this->is_404 ||
> $this->is_admin || $this->is_comments_popup ) )

So, what's in your $search_string variable?  That should make
$this->is_search true.
From simon at sweetinteraction.com  Wed May 13 18:37:23 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Wed May 13 18:38:18 2009
Subject: [wp-hackers] Sticky posts turning up in my custom WP Queries
In-Reply-To: <862d087f0905131124l57d991fds14374f79704b1764@mail.gmail.com>
References: <77c8b7bf0905131108k469be998i5093501742cc0f5b@mail.gmail.com> 
	<862d087f0905131124l57d991fds14374f79704b1764@mail.gmail.com>
Message-ID: <77c8b7bf0905131137m551763a3ie07bbcc47a3b7f7d@mail.gmail.com>

On Wed, May 13, 2009 at 7:24 PM, Nathan Rice <ncrice@gmail.com> wrote:
>
> Excluding stickies from a query is pretty easy ...
> http://www.nathanrice.net/blog/definitive-sticky-posts-guide-for-wordpress-27/
> (scroll down to the "a custom loop to ignore stick posts" section)
>

Thanks Nathan, that worked a treat... given that I'm using raw
WP_Query I've passed 'caller_get_posts' in the $args array. Just
trying to work out any downside to this (and also what my apparently
imaginary arg of 'what_to_show' actually does... if anything).

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT
From simon at sweetinteraction.com  Wed May 13 18:38:56 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Wed May 13 18:40:13 2009
Subject: [wp-hackers] Sticky posts turning up in my custom WP Queries
In-Reply-To: <674b4a3b0905131136o397b82d2tf0b1d4cb118ac4d4@mail.gmail.com>
References: <77c8b7bf0905131108k469be998i5093501742cc0f5b@mail.gmail.com> 
	<674b4a3b0905131136o397b82d2tf0b1d4cb118ac4d4@mail.gmail.com>
Message-ID: <77c8b7bf0905131138t38f980f3k2925bac67feca949@mail.gmail.com>

On Wed, May 13, 2009 at 7:36 PM, Austin Matzko <if.website@gmail.com> wrote:
>
> So, what's in your $search_string variable? ?That should make
> $this->is_search true.
>

Ah. Caught out... in simplifying the code for posting to this list I
neglected to realise that that arg isn't added in this case, sorry for
the confusion. :\

S



---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT
From wp at xentek.net  Wed May 13 20:28:15 2009
From: wp at xentek.net (Eric Marden)
Date: Wed May 13 20:28:33 2009
Subject: [wp-hackers] TEMPLATEPATH in child themes
In-Reply-To: <862d087f0905131120p120db818k3f84dd7e5d34642b@mail.gmail.com>
References: <C1740656-929C-4F27-B5A0-B7BE26B8CA36@xentek.net>
	<862d087f0905131118o8568b2arf5d8a25b81020f79@mail.gmail.com>
	<862d087f0905131120p120db818k3f84dd7e5d34642b@mail.gmail.com>
Message-ID: <75B47E72-136A-4438-8B8D-FD06CDE70EDB@xentek.net>

>> TEMPLATEPATH points to the parent theme path because the parent  
>> theme is
>> considered the "template" in the child theme style.css file.  It  
>> makes
>> sense.


Yeah it does make sense.

However, I had a plugin that was testing TEMPLATEPATH for the  
existence of a folder in my theme, which I naturally wanted to store  
in my child theme (so that my parent theme remained 'clean' and free  
of customizations). I just added a symlink to point to the 'real'  
location in my child theme's folder and it worked out, so crisis  
averted.

Just wanted to raise it on the list for more insight.

Thanks,


- Eric Marden
__________________________________
http://xentek.net/code/wordpress/




From dan at sproutventure.com  Wed May 13 22:52:35 2009
From: dan at sproutventure.com (Daniel Cameron)
Date: Wed May 13 22:53:05 2009
Subject: [wp-hackers] TEMPLATEPATH in child themes
In-Reply-To: <862d087f0905131120p120db818k3f84dd7e5d34642b@mail.gmail.com>
References: <C1740656-929C-4F27-B5A0-B7BE26B8CA36@xentek.net> 
	<862d087f0905131118o8568b2arf5d8a25b81020f79@mail.gmail.com> 
	<862d087f0905131120p120db818k3f84dd7e5d34642b@mail.gmail.com>
Message-ID: <505c639e0905131552h67666e5btd8147558039effa0@mail.gmail.com>

>
> Also, the same principle applies when trying to get the URL of the template
> or child theme directory.
>
> bloginfo('stylesheet_directory');
> bloginfo('template_directory');
>

I believe stylesheet_directory was depracted, at least that would explains
why I'm running into an issue were it's not working on my current project. I
ended up using this instead:

dirname( get_bloginfo('stylesheet_url') )
From johnbillion+wp at gmail.com  Wed May 13 22:47:02 2009
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Wed May 13 23:12:16 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <E4C8F9FD-7292-49D4-8DFB-0717D4A07A36@striderweb.com>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
	<326b01c9d344$0e3aef30$6601a8c0@dell8600>
	<349fe48b0905121503t68913dc9r2abf6beb89ff15fb@mail.gmail.com>
	<ae81acd10905121522p35b00441i935567189e055e53@mail.gmail.com>
	<e1202cb10905121651t14562428m72b64f8c9582fc6@mail.gmail.com>
	<E4C8F9FD-7292-49D4-8DFB-0717D4A07A36@striderweb.com>
Message-ID: <1fa535a70905131547m26036ec9m81d8ee8769a23af8@mail.gmail.com>

+1 on that very good idea from Jeremy.

2009/5/13 Stephen Rider <wp-hackers@striderweb.com>:
> Good idea. :)
>
> On May 12, 2009, at 6:51 PM, Jeremy Clarke wrote:
>
>> Back to the plugins page, I think if anything the option should be
>> there but opposite to how it is now. Show all plugins by default and
>> if someone actually needs them paged let them manually choose to do
>> so.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From aesqe at skyphe.org  Wed May 13 23:59:18 2009
From: aesqe at skyphe.org (aesqe)
Date: Wed May 13 23:59:58 2009
Subject: [wp-hackers] update_option problem
In-Reply-To: <1fa535a70905131547m26036ec9m81d8ee8769a23af8@mail.gmail.com>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>	<326b01c9d344$0e3aef30$6601a8c0@dell8600>	<349fe48b0905121503t68913dc9r2abf6beb89ff15fb@mail.gmail.com>	<ae81acd10905121522p35b00441i935567189e055e53@mail.gmail.com>	<e1202cb10905121651t14562428m72b64f8c9582fc6@mail.gmail.com>	<E4C8F9FD-7292-49D4-8DFB-0717D4A07A36@striderweb.com>
	<1fa535a70905131547m26036ec9m81d8ee8769a23af8@mail.gmail.com>
Message-ID: <4A0B5ED6.3030109@skyphe.org>

Hi all :)

I've been trying to figure out why the following doesn't work:

<?php
/*
Plugin Name: permalink check
Plugin URI: ...
Description: ...
Author: ...
Version: 1.0
Author URI: ...
*/

function permalinkage()
{
	global $wp_rewrite;
	echo $wp_rewrite->get_category_permastruct();
}
add_action('update_option_permalink_structure', 'permalinkage');
?>

Permalink structure gets updated, but get_category_permastruct() returns 
previous value each time.

Is this related to option caching, maybe?

Any ideas would be greatly appreciated.

Thanks!

-- 
-._______________KAWAII!_______________.-
Skyphe.org : It'll all make sense one day
http://skyphe.org .:. http://breedart.org
From mpwalsh8 at gmail.com  Thu May 14 00:39:04 2009
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Thu May 14 00:39:18 2009
Subject: [wp-hackers] Help with wpdb Class Errors
In-Reply-To: <C62D764F.30235%chris@clwill.com>
References: <004c01c9d221$5b3f2b30$11bd8190$@com>
	<C62D764F.30235%chris@clwill.com>
Message-ID: <bd35beb50905131739j306aa36cl1118e0c4899ed011@mail.gmail.com>

After reading the replies to my question I did some digging around and
indeed I was exceeding the number of connections allowed in my
development area (100).  I didn't think my code was creating this many
connections but obviously it was.

I had originally started using another instance of wpdb because I
didn't want to potentially interfere with somthing WordPress was
doing.  This was a concern I had when I first started working with
WordPress and hadn't ever changed because it worked.  It wasn't until
it stopped working and I read the replies here that I realized that
what I was doing was unnecessary.

It was fairly trivial to change my plugin code to use the existing
wpdb connection instance and after playing with it for a day or so, I
am ready to declare success.

Thanks for the tips, reusing the existing connection hadn't even
occured to me until it was suggested here.

Mike

On Mon, May 11, 2009 at 9:29 AM, Chris Williams <chris@clwill.com> wrote:
> You could be running into the connection limit on the server, and/or a
> per-session connection limit. ?As scribu notes, there is no reason to
> want/need another instance.
>
>
>> From: Mike Walsh <mike_walsh@mindspring.com>
>> Subject: [wp-hackers] Help with wpdb Class Errors
>>
>> In the plugin I am working on I am using WP's wpdb database class to access
>> custom tables. ?From time to time, I run into a problem where creating a new
>> instance of a wpdb class fails and I am at a loss as to why.
>>
> <snip>
>>
>> Anyone have any suggestions on how to track this down?
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mikeschinkel at newclarity.net  Thu May 14 03:08:26 2009
From: mikeschinkel at newclarity.net (Mike Schinkel)
Date: Thu May 14 03:09:00 2009
Subject: [wp-hackers] update_option problem
In-Reply-To: <4A0B5ED6.3030109@skyphe.org>
Message-ID: <EMEWEMEW2_DELIMl4CM8Scf1820ec6c9ad3a3e3c9e4,
	mikeschinkel@newclarity.net, 5726015.1081242270502832.J>

Where is your code actually updating the permalink structure? 
Have you called $wp_rewrite->flush_rules()?  If not that might be your problem.
Also, I'm not familiar with 'update_option_permalink_structure' 
Finally, you typically want to update rewrite rules on an plugin activation:
   
   http://funcdoc.wordpress.com/2008/01/08/writing-plugins-activation-and-deactivation/

HTH.

-Mike Schinkel
Custom Wordpress Plugins
http://mikeschinkel.com/custom-wordpress-plugins

----- Original Message -----
From: "aesqe" <aesqe@skyphe.org>
To: wp-hackers@lists.automattic.com
Sent: Wednesday, May 13, 2009 7:59:18 PM GMT -05:00 US/Canada Eastern
Subject: [wp-hackers] update_option problem

Hi all :)

I've been trying to figure out why the following doesn't work:

<?php
/*
Plugin Name: permalink check
Plugin URI: ...
Description: ...
Author: ...
Version: 1.0
Author URI: ...
*/

function permalinkage()
{
	global $wp_rewrite;
	echo $wp_rewrite->get_category_permastruct();
}
add_action('update_option_permalink_structure', 'permalinkage');
?>

Permalink structure gets updated, but get_category_permastruct() returns 
previous value each time.

Is this related to option caching, maybe?

Any ideas would be greatly appreciated.

Thanks!

-- 
-._______________KAWAII!_______________.-
Skyphe.org : It'll all make sense one day
http://skyphe.org .:. http://breedart.org
_______________________________________________
wp-hackers mailing list
wp-hackers@lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers
From peter.westwood at ftwr.co.uk  Thu May 14 06:39:35 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Thu May 14 06:39:58 2009
Subject: [wp-hackers] update_option problem
In-Reply-To: <4A0B5ED6.3030109@skyphe.org>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>	<326b01c9d344$0e3aef30$6601a8c0@dell8600>	<349fe48b0905121503t68913dc9r2abf6beb89ff15fb@mail.gmail.com>	<ae81acd10905121522p35b00441i935567189e055e53@mail.gmail.com>	<e1202cb10905121651t14562428m72b64f8c9582fc6@mail.gmail.com>	<E4C8F9FD-7292-49D4-8DFB-0717D4A07A36@striderweb.com>
	<1fa535a70905131547m26036ec9m81d8ee8769a23af8@mail.gmail.com>
	<4A0B5ED6.3030109@skyphe.org>
Message-ID: <807E63FE-9296-43F3-9FD1-3A597127FCE1@ftwr.co.uk>


On 14 May 2009, at 00:59, aesqe wrote:

> Hi all :)
>
> I've been trying to figure out why the following doesn't work:
>
> <?php
> /*
> Plugin Name: permalink check
> Plugin URI: ...
> Description: ...
> Author: ...
> Version: 1.0
> Author URI: ...
> */
>
> function permalinkage()
> {
> 	global $wp_rewrite;
> 	echo $wp_rewrite->get_category_permastruct();
> }
> add_action('update_option_permalink_structure', 'permalinkage');
> ?>
>
> Permalink structure gets updated, but get_category_permastruct()  
> returns previous value each time.
>
> Is this related to option caching, maybe?
>

No.

The reason here is that your are asking for the information before it  
has been updated.

The process goes as follows in WP_Rewrite:

	function set_permalink_structure($permalink_structure) {
		if ($permalink_structure != $this->permalink_structure) {
			update_option('permalink_structure', $permalink_structure);
			$this->init();
		}
	}

The WP_Rewrite::init function is what reconfigures the rewrite engine  
with the new permalink structure and so until that has been called you  
will get the old configuration from the $wp_rewrite object.

At the moment there is not a hook that I can see that will let you act  
on this option change after it has been completed.

 From WordPress 2.8 you will be able to use the new  
'permalink_structure_changed' action which I have added to  
set_permalink_structure in [11325].

Cheers

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From technocraze at gmail.com  Thu May 14 09:15:00 2009
From: technocraze at gmail.com (technocraze)
Date: Thu May 14 09:15:08 2009
Subject: [wp-hackers] Is it possible to cache wp_query object?
Message-ID: <4A0BE114.2090209@gmail.com>

Hi,

I was working on caching the posts permanently until it is updated or 
deleted and to use that cache for serving the requests.  In wordpress, 
whenever a page is requested, the wp_query() is called, and hence even 
caching of individual posts would not be useful.

I had an idea of caching the wp_query and wp objects , and using the 
init hook, restore it from cache for the subsequent requests.  I wanted 
to have your views on it, whether its feasible, or is there any other 
dependencies.  When i looked further, i find that the function wp() 
initialises ( $wp->init() ) the user details, which is different for 
each request.  Other than that, is there any other dynamic data stored 
in these two objects?

Regards,
senthil
From malaiac at gmail.com  Thu May 14 12:24:02 2009
From: malaiac at gmail.com (Malaiac)
Date: Thu May 14 12:24:48 2009
Subject: [wp-hackers] duplicate slug ? for two differents taxonomies
Message-ID: <59e7f3130905140524r662e5645g1b5670a452c65e0c@mail.gmail.com>

http://svn.automattic.com/wordpress/trunk/wp-includes/taxonomy.php
function wp_update_term
around lines 1601
	// Check for duplicate slug
	$id = $wpdb->get_var( $wpdb->prepare( "SELECT term_id FROM
$wpdb->terms WHERE slug = %s", $slug ) );

Is there a logic to it ?
I understand  two terms of the same taxonomy must not share the same slug
but what I have a tag 'foo' and a category 'foo' ... shouldn't they be
able to share the same slug ?

NB : It works when you create the tag foo then the category foo
But if you create tag 'foo' and category 'bar' , you cannot set the
category back to 'foo' (terms id will be different)

Malaiac
From aesqe at skyphe.org  Thu May 14 13:10:49 2009
From: aesqe at skyphe.org (aesqe)
Date: Thu May 14 13:11:33 2009
Subject: [wp-hackers] update_option problem
In-Reply-To: <807E63FE-9296-43F3-9FD1-3A597127FCE1@ftwr.co.uk>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>	<326b01c9d344$0e3aef30$6601a8c0@dell8600>	<349fe48b0905121503t68913dc9r2abf6beb89ff15fb@mail.gmail.com>	<ae81acd10905121522p35b00441i935567189e055e53@mail.gmail.com>	<e1202cb10905121651t14562428m72b64f8c9582fc6@mail.gmail.com>	<E4C8F9FD-7292-49D4-8DFB-0717D4A07A36@striderweb.com>	<1fa535a70905131547m26036ec9m81d8ee8769a23af8@mail.gmail.com>	<4A0B5ED6.3030109@skyphe.org>
	<807E63FE-9296-43F3-9FD1-3A597127FCE1@ftwr.co.uk>
Message-ID: <4A0C1859.9080103@skyphe.org>

@Mike:
It's for my Decategorizer plugin, sorry I didn't explain any further 
what it was for. $wp_rewrite->flush_rules() doesn't do the trick, but it 
seems that $wp_rewrite->init() does.

@westi:
Thanks for the explanation, and also thank you very much for the addition :)


On 14.5.2009 8:39, Peter Westwood wrote:
>
> On 14 May 2009, at 00:59, aesqe wrote:
>
>> Hi all :)
>>
>> I've been trying to figure out why the following doesn't work:
>>
>> <?php
>> /*
>> Plugin Name: permalink check
>> Plugin URI: ...
>> Description: ...
>> Author: ...
>> Version: 1.0
>> Author URI: ...
>> */
>>
>> function permalinkage()
>> {
>> global $wp_rewrite;
>> echo $wp_rewrite->get_category_permastruct();
>> }
>> add_action('update_option_permalink_structure', 'permalinkage');
>> ?>
>>
>> Permalink structure gets updated, but get_category_permastruct()
>> returns previous value each time.
>>
>> Is this related to option caching, maybe?
>>
>
> No.
>
> The reason here is that your are asking for the information before it
> has been updated.
>
> The process goes as follows in WP_Rewrite:
>
> function set_permalink_structure($permalink_structure) {
> if ($permalink_structure != $this->permalink_structure) {
> update_option('permalink_structure', $permalink_structure);
> $this->init();
> }
> }
>
> The WP_Rewrite::init function is what reconfigures the rewrite engine
> with the new permalink structure and so until that has been called you
> will get the old configuration from the $wp_rewrite object.
>
> At the moment there is not a hook that I can see that will let you act
> on this option change after it has been completed.
>
>  From WordPress 2.8 you will be able to use the new
> 'permalink_structure_changed' action which I have added to
> set_permalink_structure in [11325].
>
> Cheers
>
> westi
>
>
> ------------------------------------------------------------------------
>
>
> No virus found in this incoming message.
> Checked by AVG - www.avg.com
> Version: 8.5.325 / Virus Database: 270.12.27/2112 - Release Date: 05/13/09 07:04:00
>

-- 
-._______________KAWAII!_______________.-
Skyphe.org : It'll all make sense one day
http://skyphe.org .:. http://breedart.org
From bryanharley at gmail.com  Thu May 14 16:29:34 2009
From: bryanharley at gmail.com (Bryan Harley)
Date: Thu May 14 16:29:46 2009
Subject: [wp-hackers] has_shortcode?
Message-ID: <58410e2e0905140929s87926c7w9f221ac655f1696@mail.gmail.com>

Anyone have any idea how to do a has_shortcode conditional tag?  Even possible?
From aaron at xavisys.com  Thu May 14 18:11:16 2009
From: aaron at xavisys.com (Aaron D. Campbell)
Date: Thu May 14 18:11:40 2009
Subject: [wp-hackers] wp_specialchars() vs attribute_escape() (
	now	esc_attr() ) and quote entity-encoding
In-Reply-To: <2979bd660905090136j580182f9pfdfa963aec544823@mail.gmail.com>
References: <2979bd660905090136j580182f9pfdfa963aec544823@mail.gmail.com>
Message-ID: <4A0C5EC4.7070201@xavisys.com>

I recently put up a WordPress based site for Harvard Law, and they are 
REALLY strict about XSS (they have an IBM scanning tool that they use 
regularly to detect this stuff).  Heavy usage of attribute_escape helped 
a LOT.  I can't think of any reason not to enforce the additional level 
of security (for now at least...but I'll continue to think on it).  I 
actually think it's a great idea.

Mark Jaquith wrote:
> WordPress 2.8 is getting a shortening, consolidation, and
> "i18n-chaining" upgrade for its security escaping functions.
>
> Here are some old/new pairs:
>
> echo attribute_escape( __('Translated String') );
> esc_attr_e(' Translated String' );
>
> attribute_escape( __('Translated String' ) );
> esc_attr__( 'Translated String' );
>
> attribute_escape( $user_string );
> esc_attr( $user_string );
>
> js_escape( "dynamic $js" );
> esc_js( "dynamic $js" );
>
> The naming convention is esc_FORMAT[optional i18n suffix](). It's
> shorter, predictable, and it cuts down on parenthesis nesting! Next on
> my list was one-parameter wp_specialchars(), which will become
> esc_html(), esc_html_e() and esc_html__().
>
> It occurred to me that a lot of people do this:
>
> <input value="<?php echo wp_specialchars( $xss ); ?>" />
>
> Which is WRONG (and unfortunately common in plugins) and an XSS
> exploit opportunity. See, attribute_escape() (now esc_attr())
> additionally entity-encodes quotes, to prevent XSS attacks from
> "breaking out" of the attribute. That's the only real difference
> between attribute_escape( $xss ) and wp_specialchars( $xss ). While it
> is dangerous to use wp_specialchars( $xss ) instead of
> attribute_escape( $xss ), the opposite is not true. There is no harm,
> that I can think of, in entity-encoding quotes in an HTML context.
>
> Can you think of any? If not, this presents us with an opportunity to
> make esc_html() and esc_attr() functionally equivalent and to have
> wp_specialchars( $xss ) calls go through esc_html(), which would
> encode quotes, and thus anyone who used the above code would get a
> free security upgrade to their plugin/theme. Can you think of any
> reason this wouldn't work? C'mon, go ahead and rain on my parade.
>
> Notes:
>
> Backward compat with the old functions is maintained. As for my
> proposed handling of esc_html() and wp_specialchars(), calls to
> wp_specialchars() with default values for the rarely-used additional
> params would be honored, like before. It's only single-parameter calls
> to wp_specialchars() that would get the esc_html()/quote-encoding
> treatment.
>   

From bryanharley at gmail.com  Sat May 16 00:46:18 2009
From: bryanharley at gmail.com (Bryan Harley)
Date: Sat May 16 00:46:28 2009
Subject: [wp-hackers] Hide admin page?
Message-ID: <58410e2e0905151746o79674909laa0cb7abd133a38c@mail.gmail.com>

I want to hide certain pages in the admin menu that I won't use for a
client's site.  For example, hide "Posts."

How can I accomplish this?
From bryanharley at gmail.com  Sat May 16 00:55:27 2009
From: bryanharley at gmail.com (Bryan Harley)
Date: Sat May 16 00:56:01 2009
Subject: [wp-hackers] Re: Hide admin page?
In-Reply-To: <58410e2e0905151746o79674909laa0cb7abd133a38c@mail.gmail.com>
References: <58410e2e0905151746o79674909laa0cb7abd133a38c@mail.gmail.com>
Message-ID: <58410e2e0905151755q26c7f46dp896676c3950a03dd@mail.gmail.com>

 Figured it out!

edit wp-admin.css

#menu-posts,#menu-media,#menu-links,#menu-comments{display:none;}

On Fri, May 15, 2009 at 5:46 PM, Bryan Harley <bryanharley@gmail.com> wrote:
> I want to hide certain pages in the admin menu that I won't use for a
> client's site. ?For example, hide "Posts."
>
> How can I accomplish this?
>
From frank at bueltge.de  Sat May 16 04:27:34 2009
From: frank at bueltge.de (Frank Bueltge)
Date: Sat May 16 04:27:53 2009
Subject: [wp-hackers] Hide admin page?
In-Reply-To: <58410e2e0905151755q26c7f46dp896676c3950a03dd@mail.gmail.com>
References: <58410e2e0905151746o79674909laa0cb7abd133a38c@mail.gmail.com>
	<58410e2e0905151755q26c7f46dp896676c3950a03dd@mail.gmail.com>
Message-ID: <db047a770905152127o2807a769t2a958c66d13d0943@mail.gmail.com>

Or use the plugin Adminimize. This was write for this work.
Best regards

On Saturday, May 16, 2009, Bryan Harley <bryanharley@gmail.com> wrote:
> ?Figured it out!
>
> edit wp-admin.css
>
> #menu-posts,#menu-media,#menu-links,#menu-comments{display:none;}
>
> On Fri, May 15, 2009 at 5:46 PM, Bryan Harley <bryanharley@gmail.com> wrote:
>> I want to hide certain pages in the admin menu that I won't use for a
>> client's site. ?For example, hide "Posts."
>>
>> How can I accomplish this?
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

-- 
Liebe Gr?sse
Frank

__
Das Buch: WordPress - Weblogs einrichten und administrieren, Open Source Press
  ISBN 978-3-937514-33-8
  http://wordpress-buch.bueltge.de/das-buch/

http://bueltge.de : frank@bueltge.de
http://wpengineer.com : frank@wpengineer.com
__
Frank B?ltge
Tel:    +49 3691 212951
Mobil:  +49 170 5322053
E-Mail: f.bueltge@inpsyde.com

Inpsyde GmbH
Mutzer Heide 3
51467 Bergisch Gladbach

Steuernr: 204/5756/0999 Steueridentnr.: DE263849534
Gesch?ftsf?hrender Gesellschafter: H. Roh? HRB 65224 Amtsgericht K?ln

http://inpsyde.com
http://pressthis.de
From scribu at gmail.com  Sat May 16 18:49:02 2009
From: scribu at gmail.com (scribu)
Date: Sat May 16 18:49:15 2009
Subject: [wp-hackers] User-tagged posts
In-Reply-To: <349fe48b0905130217i5b6ee981y43f3795a1f6c33ea@mail.gmail.com>
References: <1fe4fa230905101915t58187b09m50a18ec1d1d28d0a@mail.gmail.com>
	<349fe48b0905121511s68fde347g52470455e15eeeed@mail.gmail.com>
	<1fe4fa230905121548w7f5a3f51re189c36c7a82d06e@mail.gmail.com>
	<349fe48b0905130217i5b6ee981y43f3795a1f6c33ea@mail.gmail.com>
Message-ID: <349fe48b0905161149p24b84dbfr39cad44b031c2e60@mail.gmail.com>

How about adding another column `user_id` to wp_terms? This is how
bbPress does it.

On 5/13/09, scribu <scribu@gmail.com> wrote:
> Thank you.
>
> It looks promising.
>
> --
> http://scribu.net
>


-- 
http://scribu.net
From malaiac at gmail.com  Sat May 16 19:00:31 2009
From: malaiac at gmail.com (Malaiac)
Date: Sat May 16 19:01:01 2009
Subject: [wp-hackers] User-tagged posts
In-Reply-To: <349fe48b0905161149p24b84dbfr39cad44b031c2e60@mail.gmail.com>
References: <1fe4fa230905101915t58187b09m50a18ec1d1d28d0a@mail.gmail.com> 
	<349fe48b0905121511s68fde347g52470455e15eeeed@mail.gmail.com> 
	<1fe4fa230905121548w7f5a3f51re189c36c7a82d06e@mail.gmail.com> 
	<349fe48b0905130217i5b6ee981y43f3795a1f6c33ea@mail.gmail.com> 
	<349fe48b0905161149p24b84dbfr39cad44b031c2e60@mail.gmail.com>
Message-ID: <59e7f3130905161200v27451c0ewf5fe8ded81763091@mail.gmail.com>

2009/5/16 scribu <scribu@gmail.com>:
> How about adding another column `user_id` to wp_terms? This is how
> bbPress does it.

Another way would be to create a new taxonomy link_user_tag, with the
properties of link_tag
From mikeschinkel at newclarity.net  Sat May 16 19:04:48 2009
From: mikeschinkel at newclarity.net (mikeschinkel@newclarity.net)
Date: Sat May 16 19:05:07 2009
Subject: [wp-hackers] User-tagged posts
In-Reply-To: <59e7f3130905161200v27451c0ewf5fe8ded81763091@mail.gmail.com>
References: <1fe4fa230905101915t58187b09m50a18ec1d1d28d0a@mail.gmail.com>
	<349fe48b0905121511s68fde347g52470455e15eeeed@mail.gmail.com>
	<1fe4fa230905121548w7f5a3f51re189c36c7a82d06e@mail.gmail.com>
	<349fe48b0905130217i5b6ee981y43f3795a1f6c33ea@mail.gmail.com>
	<349fe48b0905161149p24b84dbfr39cad44b031c2e60@mail.gmail.com>
	<59e7f3130905161200v27451c0ewf5fe8ded81763091@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl4FE4nce70b8f9b2f200504d1f82,
	mikeschinkel@newclarity.net, 9245DFA3-C0AE-484E-A024>

Wouldn't those two different options handle two different use-cases?

Sent from my iPhone

On May 16, 2009, at 3:01 PM, Malaiac <malaiac@gmail.com> wrote:

> 2009/5/16 scribu <scribu@gmail.com>:
>> How about adding another column `user_id` to wp_terms? This is how
>> bbPress does it.
>
> Another way would be to create a new taxonomy link_user_tag, with the
> properties of link_tag
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From beau at dentedreality.com.au  Sat May 16 19:35:26 2009
From: beau at dentedreality.com.au (Beau Lebens)
Date: Sat May 16 19:35:43 2009
Subject: [wp-hackers] Hide admin page?
In-Reply-To: <db047a770905152127o2807a769t2a958c66d13d0943@mail.gmail.com>
References: <58410e2e0905151746o79674909laa0cb7abd133a38c@mail.gmail.com>
	<58410e2e0905151755q26c7f46dp896676c3950a03dd@mail.gmail.com>
	<db047a770905152127o2807a769t2a958c66d13d0943@mail.gmail.com>
Message-ID: <902424490905161235v3e0577e7paec93ee3fbb8a848@mail.gmail.com>

On Fri, May 15, 2009 at 9:27 PM, Frank Bueltge <frank@bueltge.de> wrote:
> Or use the plugin Adminimize. This was write for this work.
> Best regards
>
> On Saturday, May 16, 2009, Bryan Harley <bryanharley@gmail.com> wrote:
>> ?Figured it out!
>>
>> edit wp-admin.css
>>
>> #menu-posts,#menu-media,#menu-links,#menu-comments{display:none;}

You'd be much better off using a plugin of some sort (whether it
actually controls the menu items, or just throws that CSS into the
page). If you edit wp-admin.css then next time you update WP to the
latest version you'll need to remember to do it again (and again, and
again...)
From peter.westwood at ftwr.co.uk  Sat May 16 22:03:07 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Sat May 16 22:04:06 2009
Subject: [wp-hackers] Hide admin page?
In-Reply-To: <902424490905161235v3e0577e7paec93ee3fbb8a848@mail.gmail.com>
References: <58410e2e0905151746o79674909laa0cb7abd133a38c@mail.gmail.com>
	<58410e2e0905151755q26c7f46dp896676c3950a03dd@mail.gmail.com>
	<db047a770905152127o2807a769t2a958c66d13d0943@mail.gmail.com>
	<902424490905161235v3e0577e7paec93ee3fbb8a848@mail.gmail.com>
Message-ID: <C1C72FA3-6A27-41C3-BD17-6CED45DAA0B9@ftwr.co.uk>

And of course, by editing the css, you leave all the menu items active  
if someone knows the URL.

westi
--
Peter Westwood
http://peter.westwood.name

On 16 May 2009, at 20:35, Beau Lebens <beau@dentedreality.com.au> wrote:

> On Fri, May 15, 2009 at 9:27 PM, Frank Bueltge <frank@bueltge.de>  
> wrote:
>> Or use the plugin Adminimize. This was write for this work.
>> Best regards
>>
>> On Saturday, May 16, 2009, Bryan Harley <bryanharley@gmail.com>  
>> wrote:
>>>  Figured it out!
>>>
>>> edit wp-admin.css
>>>
>>> #menu-posts,#menu-media,#menu-links,#menu-comments{display:none;}
>
> You'd be much better off using a plugin of some sort (whether it
> actually controls the menu items, or just throws that CSS into the
> page). If you edit wp-admin.css then next time you update WP to the
> latest version you'll need to remember to do it again (and again, and
> again...)
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From niladam at gmail.com  Sat May 16 22:36:51 2009
From: niladam at gmail.com (madalin)
Date: Sat May 16 22:37:06 2009
Subject: [wp-hackers] Display page only to admin..
Message-ID: <df809b110905161536s1f69579fw2d9c27404b53537b@mail.gmail.com>

Is there anyway i could show a specific page only if the visitor is an admin ?

If yes, how.

I've tried almost everything but i can't seem to find anything like it.

Thanks.

-- 
Regards,
madalin
http://madalin.eu
From dan at sproutventure.com  Sun May 17 06:06:54 2009
From: dan at sproutventure.com (Daniel Cameron)
Date: Sun May 17 06:07:27 2009
Subject: [wp-hackers] Display page only to admin..
In-Reply-To: <df809b110905161536s1f69579fw2d9c27404b53537b@mail.gmail.com>
References: <df809b110905161536s1f69579fw2d9c27404b53537b@mail.gmail.com>
Message-ID: <505c639e0905162306h42ed916cs6b02f2cc211bd5ff@mail.gmail.com>

>
> Is there anyway i could show a specific page only if the visitor is an
> admin ?


Would a "private" page work?



-- 


// Dan Cameron
Principal
SproutVenture // grow your business
http://sproutventure.com
(805) 288-2232
GTalk: dan@sproutventure.com
From listswphackers at mist.org.uk  Sun May 17 07:50:56 2009
From: listswphackers at mist.org.uk (mrmist)
Date: Sun May 17 07:52:23 2009
Subject: [wp-hackers] Display page only to admin..
In-Reply-To: <505c639e0905162306h42ed916cs6b02f2cc211bd5ff@mail.gmail.com>
References: <df809b110905161536s1f69579fw2d9c27404b53537b@mail.gmail.com>
	<505c639e0905162306h42ed916cs6b02f2cc211bd5ff@mail.gmail.com>
Message-ID: <KfbY1xCgH8DKFwqk@dsl-217-155-35-239.zen.co.uk>

In message 
<505c639e0905162306h42ed916cs6b02f2cc211bd5ff@mail.gmail.com>, Daniel 
Cameron <dan@sproutventure.com> writes
>>
>> Is there anyway i could show a specific page only if the visitor is an
>> admin ?
>
>
>Would a "private" page work?
>

Should do.  Otherwise you are looking at templating the page and 
checking for admin capabilities in the template (though that would only 
stop people seeing the actual page, not anything that relates to the 
page such as recent comments, etc.)
-- 
mrmist
From niladam at gmail.com  Sun May 17 08:10:29 2009
From: niladam at gmail.com (madalin)
Date: Sun May 17 08:10:44 2009
Subject: [wp-hackers] Display page only to admin..
In-Reply-To: <KfbY1xCgH8DKFwqk@dsl-217-155-35-239.zen.co.uk>
References: <df809b110905161536s1f69579fw2d9c27404b53537b@mail.gmail.com>
	<505c639e0905162306h42ed916cs6b02f2cc211bd5ff@mail.gmail.com>
	<KfbY1xCgH8DKFwqk@dsl-217-155-35-239.zen.co.uk>
Message-ID: <df809b110905170110k610df15eq5e03724edb87efbc@mail.gmail.com>

Thanks or your replies guys, but i decided to go with role-manager and
took use of:

if ( current_user_can('edit_plugins') ) {
// my content
}

Hope this helps anyone :)

On Sun, May 17, 2009 at 10:50 AM, mrmist <listswphackers@mist.org.uk> wrote:
> In message <505c639e0905162306h42ed916cs6b02f2cc211bd5ff@mail.gmail.com>,
> Daniel Cameron <dan@sproutventure.com> writes
>>>
>>> Is there anyway i could show a specific page only if the visitor is an
>>> admin ?
>>
>>
>> Would a "private" page work?
>>
>
> Should do. ?Otherwise you are looking at templating the page and checking
> for admin capabilities in the template (though that would only stop people
> seeing the actual page, not anything that relates to the page such as recent
> comments, etc.)
> --
> mrmist
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Cu drag,
madalin
http://madalin.eu
http://lyrics.notme.org
http://www.tg-jiu.ro
http://www.radioomega.ro
From scribu at gmail.com  Sun May 17 10:11:55 2009
From: scribu at gmail.com (scribu)
Date: Sun May 17 10:12:10 2009
Subject: [wp-hackers] Hide admin page?
In-Reply-To: <C1C72FA3-6A27-41C3-BD17-6CED45DAA0B9@ftwr.co.uk>
References: <58410e2e0905151746o79674909laa0cb7abd133a38c@mail.gmail.com>
	<58410e2e0905151755q26c7f46dp896676c3950a03dd@mail.gmail.com>
	<db047a770905152127o2807a769t2a958c66d13d0943@mail.gmail.com>
	<902424490905161235v3e0577e7paec93ee3fbb8a848@mail.gmail.com>
	<C1C72FA3-6A27-41C3-BD17-6CED45DAA0B9@ftwr.co.uk>
Message-ID: <349fe48b0905170311m1e29d0c1w1c51d99db658115f@mail.gmail.com>

You could use the _amin_menu action and unset the corresponding array key.

On Sun, May 17, 2009 at 1:03 AM, Peter Westwood
<peter.westwood@ftwr.co.uk>wrote:

> And of course, by editing the css, you leave all the menu items active if
> someone knows the URL.
>
> westi
>

-- 
http://scribu.net
From scribu at gmail.com  Sun May 17 10:12:33 2009
From: scribu at gmail.com (scribu)
Date: Sun May 17 10:13:06 2009
Subject: [wp-hackers] Hide admin page?
In-Reply-To: <349fe48b0905170311m1e29d0c1w1c51d99db658115f@mail.gmail.com>
References: <58410e2e0905151746o79674909laa0cb7abd133a38c@mail.gmail.com>
	<58410e2e0905151755q26c7f46dp896676c3950a03dd@mail.gmail.com>
	<db047a770905152127o2807a769t2a958c66d13d0943@mail.gmail.com>
	<902424490905161235v3e0577e7paec93ee3fbb8a848@mail.gmail.com>
	<C1C72FA3-6A27-41C3-BD17-6CED45DAA0B9@ftwr.co.uk>
	<349fe48b0905170311m1e29d0c1w1c51d99db658115f@mail.gmail.com>
Message-ID: <349fe48b0905170312x716fa26fo1aac19bc5a86abf6@mail.gmail.com>

That's "_admin_menu".


-- 
http://scribu.net
From scribu at gmail.com  Sun May 17 11:16:57 2009
From: scribu at gmail.com (scribu)
Date: Sun May 17 11:17:11 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <1fa535a70905131547m26036ec9m81d8ee8769a23af8@mail.gmail.com>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>
	<326b01c9d344$0e3aef30$6601a8c0@dell8600>
	<349fe48b0905121503t68913dc9r2abf6beb89ff15fb@mail.gmail.com>
	<ae81acd10905121522p35b00441i935567189e055e53@mail.gmail.com>
	<e1202cb10905121651t14562428m72b64f8c9582fc6@mail.gmail.com>
	<E4C8F9FD-7292-49D4-8DFB-0717D4A07A36@striderweb.com>
	<1fa535a70905131547m26036ec9m81d8ee8769a23af8@mail.gmail.com>
Message-ID: <349fe48b0905170416v5d927a4evb3068130cd088c85@mail.gmail.com>

I just saw the plugins page with all the action links visible and it looks
awful. If users can moderate comments using hidden links, I'm sure they can
also handle plugins.

-- 
http://scribu.net
From kparsell-wp at kpdesign.net  Sun May 17 11:48:33 2009
From: kparsell-wp at kpdesign.net (Kim Parsell)
Date: Sun May 17 11:49:05 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <349fe48b0905170416v5d927a4evb3068130cd088c85@mail.gmail.com>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>	<326b01c9d344$0e3aef30$6601a8c0@dell8600>	<349fe48b0905121503t68913dc9r2abf6beb89ff15fb@mail.gmail.com>	<ae81acd10905121522p35b00441i935567189e055e53@mail.gmail.com>	<e1202cb10905121651t14562428m72b64f8c9582fc6@mail.gmail.com>	<E4C8F9FD-7292-49D4-8DFB-0717D4A07A36@striderweb.com>	<1fa535a70905131547m26036ec9m81d8ee8769a23af8@mail.gmail.com>
	<349fe48b0905170416v5d927a4evb3068130cd088c85@mail.gmail.com>
Message-ID: <4A0FF991.3050502@kpdesign.net>

I've looked at the plugins page from the latest nightly build, and I 
like the visible action links; however, I feel they would look better if 
they were moved to the line where the version number and author name are 
now (under the description), and move the version number and author name 
to the spot where the action links are, putting each one on a separate 
line, i.e.:

    Plugin Name

    Version: 1.0
    By: Author Name

Just my 3 cents worth.

Kim

------------------------------

scribu wrote:
> I just saw the plugins page with all the action links visible and it looks
> awful. If users can moderate comments using hidden links, I'm sure they can
> also handle plugins.
>   
From wp-hackers at striderweb.com  Sun May 17 18:18:55 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sun May 17 18:19:16 2009
Subject: [wp-hackers] 2.8 plugins page
In-Reply-To: <4A0FF991.3050502@kpdesign.net>
References: <D83AB69C-1DF8-4997-B9FA-78FCA76BD309@striderweb.com>	<326b01c9d344$0e3aef30$6601a8c0@dell8600>	<349fe48b0905121503t68913dc9r2abf6beb89ff15fb@mail.gmail.com>	<ae81acd10905121522p35b00441i935567189e055e53@mail.gmail.com>	<e1202cb10905121651t14562428m72b64f8c9582fc6@mail.gmail.com>	<E4C8F9FD-7292-49D4-8DFB-0717D4A07A36@striderweb.com>	<1fa535a70905131547m26036ec9m81d8ee8769a23af8@mail.gmail.com>
	<349fe48b0905170416v5d927a4evb3068130cd088c85@mail.gmail.com>
	<4A0FF991.3050502@kpdesign.net>
Message-ID: <8A730DD1-D5D2-4D84-BA9C-79C70FD9F2CD@striderweb.com>

Kim's idea ain't half bad. ;)

OR... Why not just put them *back* in a separate column?  What was  
wrong with that?

On May 17, 2009, at 6:48 AM, Kim Parsell wrote:

> I've looked at the plugins page from the latest nightly build, and I  
> like the visible action links; however, I feel they would look  
> better if they were moved to the line where the version number and  
> author name are now (under the description), and move the version  
> number and author name to the spot where the action links are,  
> putting each one on a separate line, i.e.:
>
>   Plugin Name
>
>   Version: 1.0
>   By: Author Name
>
> scribu wrote:
>> I just saw the plugins page with all the action links visible and  
>> it looks
>> awful. If users can moderate comments using hidden links, I'm sure  
>> they can
>> also handle plugins.

From jcanals at alkivia.com  Sun May 17 20:21:21 2009
From: jcanals at alkivia.com (Jordi Canals)
Date: Sun May 17 20:48:57 2009
Subject: [wp-hackers] Display page only to admin..
In-Reply-To: <df809b110905170110k610df15eq5e03724edb87efbc@mail.gmail.com>
References: <df809b110905161536s1f69579fw2d9c27404b53537b@mail.gmail.com>
	<505c639e0905162306h42ed916cs6b02f2cc211bd5ff@mail.gmail.com>
	<KfbY1xCgH8DKFwqk@dsl-217-155-35-239.zen.co.uk>
	<df809b110905170110k610df15eq5e03724edb87efbc@mail.gmail.com>
Message-ID: <394db23a0905171321v907449ay1a6d4248974f4f6c@mail.gmail.com>

2009/5/17 madalin <niladam@gmail.com>:
> Thanks or your replies guys, but i decided to go with role-manager and
> took use of:
>
> if ( current_user_can('edit_plugins') ) {
> // my content
> }
>
> Hope this helps anyone :)
>

If you're checking for admin, I would better

if ( current_user_can('administrator') ) {
do_stuff();
}

Remember you can also ask for roles with current_user_can()
-- 
Jordi Canals [Txanny]
http://alkivia.org
From jer at simianuprising.com  Mon May 18 17:24:54 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon May 18 17:25:14 2009
Subject: [wp-hackers] Display page only to admin..
In-Reply-To: <394db23a0905171321v907449ay1a6d4248974f4f6c@mail.gmail.com>
References: <df809b110905161536s1f69579fw2d9c27404b53537b@mail.gmail.com>
	<505c639e0905162306h42ed916cs6b02f2cc211bd5ff@mail.gmail.com>
	<KfbY1xCgH8DKFwqk@dsl-217-155-35-239.zen.co.uk>
	<df809b110905170110k610df15eq5e03724edb87efbc@mail.gmail.com>
	<394db23a0905171321v907449ay1a6d4248974f4f6c@mail.gmail.com>
Message-ID: <e1202cb10905181024v7ee36158xc0a9e0c9ad555b71@mail.gmail.com>

On Sun, May 17, 2009 at 4:21 PM, Jordi Canals <jcanals@alkivia.com> wrote:
> If you're checking for admin, I would better
>
> if ( current_user_can('administrator') ) {
> do_stuff();
> }

Unless you are creating special roles specifically and want to check
them (like maybe "Business Owner" or something nonstandard) it is
pretty much always better to check for a capability instead of a role.
For example if there was a new role created called "Site Manager" that
had everything an Admin had but was separate for some other reason
(one missing capability maybe, or because you are using roles for
organizational/managerial reasons) then your check for 'administrator'
would fail.

Checking instead for a capability you think someone should have is far
less likely to cause problems, and gives you much more accuracy. It's
also the official way the system was built to work. WP Roles are
labels and defaults that simplify the system but not its intended
endpoint, as implied by the grammatical failure of the sentence "If
the current user can Administrator".

Also Madalin: You don't need the Role Manager plugin to use
current_user_can(), it's already available in WP, you only need it if
you want to change the default capabilities each role/user has or to
create new roles.


-- 
Jeremy Clarke | http://simianuprising.com
Code and Design | http://globalvoicesonline.org
From zamoose at gmail.com  Mon May 18 19:13:01 2009
From: zamoose at gmail.com (zamoose@gmail.com)
Date: Mon May 18 19:13:14 2009
Subject: [wp-hackers] SixApart releases WordPress plugins
Message-ID: <0016e644de683641bd046a3495e5@google.com>

http://www.sixapart.com/wordpress/

...Thoughts? Implications, if any, for the WordPress community?

(My quick take: TP Anti-Spam will find a niche similar to other anti-spam  
solutions but will fail to make a dent in Akismet, similar to other  
anti-spam solutions. *grin* TP Connect and Six Apart Media will be adopted  
by the same number of WP users as OAuth, OpenID and non-AdSense ad networks  
[read: not many]).

-Doug
http://literalbarrage.org/blog/
From peter.westwood at ftwr.co.uk  Mon May 18 20:25:51 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Mon May 18 20:26:08 2009
Subject: [wp-hackers] SixApart releases WordPress plugins
In-Reply-To: <0016e644de683641bd046a3495e5@google.com>
References: <0016e644de683641bd046a3495e5@google.com>
Message-ID: <7105A02B-8110-40A9-91A4-5A81D227FF28@ftwr.co.uk>


On 18 May 2009, at 20:13, zamoose@gmail.com wrote:

> http://www.sixapart.com/wordpress/
>
> ...Thoughts? Implications, if any, for the WordPress community?
>
> (My quick take: TP Anti-Spam will find a niche similar to other anti- 
> spam solutions but will fail to make a dent in Akismet, similar to  
> other anti-spam solutions. *grin* TP Connect and Six Apart Media  
> will be adopted by the same number of WP users as OAuth, OpenID and  
> non-AdSense ad networks [read: not many]).
>

Not much news IMHO

For a start the fact that TypePad AS plugin for WordPress has been  
available for ages.

Would be good to see these plugins in the wordpress.org svn repo though.

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From leksa at kapucino.org  Mon May 18 22:19:23 2009
From: leksa at kapucino.org (Fakhrizal Lukman)
Date: Mon May 18 22:19:36 2009
Subject: [wp-hackers] SixApart releases WordPress plugins
In-Reply-To: <7105A02B-8110-40A9-91A4-5A81D227FF28@ftwr.co.uk>
References: <0016e644de683641bd046a3495e5@google.com>
	<7105A02B-8110-40A9-91A4-5A81D227FF28@ftwr.co.uk>
Message-ID: <819e10580905181519p57e830e1v15860c8ad0a9cab0@mail.gmail.com>

On Tue, May 19, 2009 at 3:25 AM, Peter Westwood
<peter.westwood@ftwr.co.uk>wrote:

>
> On 18 May 2009, at 20:13, zamoose@gmail.com wrote:
>
>  http://www.sixapart.com/wordpress/
>>
>> ...Thoughts? Implications, if any, for the WordPress community?
>>
>> (My quick take: TP Anti-Spam will find a niche similar to other anti-spam
>> solutions but will fail to make a dent in Akismet, similar to other
>> anti-spam solutions. *grin* TP Connect and Six Apart Media will be adopted
>> by the same number of WP users as OAuth, OpenID and non-AdSense ad networks
>> [read: not many]).
>>
>>
> Not much news IMHO
>
> For a start the fact that TypePad AS plugin for WordPress has been
> available for ages.
>
> Would be good to see these plugins in the wordpress.org svn repo though.
>
> westi


And me ,.
I like the TypePad Connect pluggin. Looks its powerfull than single FB
connect (sorry for sociable who make good FB connect before ) ..


Tested it, and great!


-- 
Dont run, if you can jump...

http://www.kapucino.org
From simon at sweetinteraction.com  Mon May 18 22:49:40 2009
From: simon at sweetinteraction.com (Simon Wheatley)
Date: Mon May 18 22:50:22 2009
Subject: [wp-hackers] Display page only to admin..
In-Reply-To: <e1202cb10905181024v7ee36158xc0a9e0c9ad555b71@mail.gmail.com>
References: <df809b110905161536s1f69579fw2d9c27404b53537b@mail.gmail.com> 
	<505c639e0905162306h42ed916cs6b02f2cc211bd5ff@mail.gmail.com> 
	<KfbY1xCgH8DKFwqk@dsl-217-155-35-239.zen.co.uk>
	<df809b110905170110k610df15eq5e03724edb87efbc@mail.gmail.com> 
	<394db23a0905171321v907449ay1a6d4248974f4f6c@mail.gmail.com> 
	<e1202cb10905181024v7ee36158xc0a9e0c9ad555b71@mail.gmail.com>
Message-ID: <77c8b7bf0905181549n1772b2bfg6397746ed29139ff@mail.gmail.com>

On Mon, May 18, 2009 at 6:24 PM, Jeremy Clarke <jer@simianuprising.com> wrote:
>
> Also Madalin: You don't need the Role Manager plugin to use
> current_user_can(), it's already available in WP, you only need it if
> you want to change the default capabilities each role/user has or to
> create new roles.
>

It's also pretty cool that you can make your role/capability changes
with Role Manager and then uninstall the plugin... then there's less
to go wrong if someone starts fiddling with settings and accidentally
revokes everyone's capabilities.

S


---
Sweet Interaction Ltd is Registered in England/Wales, no. 6610741
Registered office: 7 Malton Av, Manchester, M21 8AT
From bryanharley at gmail.com  Tue May 19 00:35:23 2009
From: bryanharley at gmail.com (Bryan Harley)
Date: Tue May 19 00:35:43 2009
Subject: [wp-hackers] SixApart releases WordPress plugins
In-Reply-To: <819e10580905181519p57e830e1v15860c8ad0a9cab0@mail.gmail.com>
References: <0016e644de683641bd046a3495e5@google.com>
	<7105A02B-8110-40A9-91A4-5A81D227FF28@ftwr.co.uk>
	<819e10580905181519p57e830e1v15860c8ad0a9cab0@mail.gmail.com>
Message-ID: <58410e2e0905181735v3ba08e05wb8da53d027508da0@mail.gmail.com>

TypePad Connect would be cool, but if only you could sign-in to
Google/Facebook/etc FROM my blog.  But instead you have to open a new
window to TypePad's web site and use Google/Facebook/etc to register
for a TypePad Account.

Not very convenient (and possibly confusing) for my visitors.


On Mon, May 18, 2009 at 3:19 PM, Fakhrizal Lukman <leksa@kapucino.org> wrote:
> On Tue, May 19, 2009 at 3:25 AM, Peter Westwood
> <peter.westwood@ftwr.co.uk>wrote:
>
>>
>> On 18 May 2009, at 20:13, zamoose@gmail.com wrote:
>>
>> ?http://www.sixapart.com/wordpress/
>>>
>>> ...Thoughts? Implications, if any, for the WordPress community?
>>>
>>> (My quick take: TP Anti-Spam will find a niche similar to other anti-spam
>>> solutions but will fail to make a dent in Akismet, similar to other
>>> anti-spam solutions. *grin* TP Connect and Six Apart Media will be adopted
>>> by the same number of WP users as OAuth, OpenID and non-AdSense ad networks
>>> [read: not many]).
>>>
>>>
>> Not much news IMHO
>>
>> For a start the fact that TypePad AS plugin for WordPress has been
>> available for ages.
>>
>> Would be good to see these plugins in the wordpress.org svn repo though.
>>
>> westi
>
>
> And me ,.
> I like the TypePad Connect pluggin. Looks its powerfull than single FB
> connect (sorry for sociable who make good FB connect before ) ..
>
>
> Tested it, and great!
>
>
> --
> Dont run, if you can jump...
>
> http://www.kapucino.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From jer at simianuprising.com  Tue May 19 16:56:55 2009
From: jer at simianuprising.com (Jeremy Clarke)
Date: Tue May 19 16:57:25 2009
Subject: [wp-hackers] Hide admin page?
In-Reply-To: <58410e2e0905151746o79674909laa0cb7abd133a38c@mail.gmail.com>
References: <58410e2e0905151746o79674909laa0cb7abd133a38c@mail.gmail.com>
Message-ID: <e1202cb10905190956x15003972rbc8452d19d6fe680@mail.gmail.com>

On Fri, May 15, 2009 at 8:46 PM, Bryan Harley <bryanharley@gmail.com> wrote:
> I want to hide certain pages in the admin menu that I won't use for a
> client's site. ?For example, hide "Posts."
>
> How can I accomplish this?

Several good ideas already. Just for the sake of argument here are two more:

1 - If you add a file called admin.css to the active theme then it
will be included in all admin pages. So if you're confident the site
will have the same theme consistently installed (likely since it
doesn't show posts!) you can add the CSS there. 10000% better than
editing a core file (!!!) and easier than plugin code.

2 - If you want to remove the ability to edit posts entirely you could
install the Role Manager plugin and remove the post-related
capabilities from all the roles, thus making the links actually not
show up rather than just being hidden. It would also let you/admins
(any role you decide) still see the links in case you need to do some
diagnostics or whatever, while hiding it from the mass of users (who
you don't want to confuse).

--
Jeremy Clarke | http://simianuprising.com
Code and Design | globalvoicesonline.org
From niladam at gmail.com  Tue May 19 17:02:21 2009
From: niladam at gmail.com (madalin)
Date: Tue May 19 17:03:18 2009
Subject: [wp-hackers] Hide admin page?
In-Reply-To: <e1202cb10905190956x15003972rbc8452d19d6fe680@mail.gmail.com>
References: <58410e2e0905151746o79674909laa0cb7abd133a38c@mail.gmail.com>
	<e1202cb10905190956x15003972rbc8452d19d6fe680@mail.gmail.com>
Message-ID: <df809b110905191002u2506cac6x33cd6a07ffb0f920@mail.gmail.com>

Thanks everyone for their replies!

On Tue, May 19, 2009 at 7:56 PM, Jeremy Clarke <jer@simianuprising.com> wrote:
> On Fri, May 15, 2009 at 8:46 PM, Bryan Harley <bryanharley@gmail.com> wrote:
>> I want to hide certain pages in the admin menu that I won't use for a
>> client's site. ?For example, hide "Posts."
>>
>> How can I accomplish this?
>
> Several good ideas already. Just for the sake of argument here are two more:
>
> 1 - If you add a file called admin.css to the active theme then it
> will be included in all admin pages. So if you're confident the site
> will have the same theme consistently installed (likely since it
> doesn't show posts!) you can add the CSS there. 10000% better than
> editing a core file (!!!) and easier than plugin code.
>
> 2 - If you want to remove the ability to edit posts entirely you could
> install the Role Manager plugin and remove the post-related
> capabilities from all the roles, thus making the links actually not
> show up rather than just being hidden. It would also let you/admins
> (any role you decide) still see the links in case you need to do some
> diagnostics or whatever, while hiding it from the mass of users (who
> you don't want to confuse).
>
> --
> Jeremy Clarke | http://simianuprising.com
> Code and Design | globalvoicesonline.org
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Cu drag,
madalin
http://madalin.eu
http://lyrics.notme.org
http://www.tg-jiu.ro
http://www.radioomega.ro
From malaiac at gmail.com  Wed May 20 20:31:38 2009
From: malaiac at gmail.com (Malaiac)
Date: Wed May 20 20:32:14 2009
Subject: [wp-hackers] strange bug / typo in wp source
Message-ID: <59e7f3130905201331n4cc5c6d9t22b290478883c3cf@mail.gmail.com>

/wp-includes/compat.php
line 102-110

in the svn http://svn.automattic.com/wordpress/trunk/wp-includes/compat.php
if ( !function_exists( 'htmlspecialchars_decode' ) ) {
	// Added in PHP 5.1.0
	// Error checks from PEAR::PHP_Compat
	function htmlspecialchars_decode( $string, $quote_style = ENT_COMPAT )
	{
		if ( !is_scalar( $string ) ) {


in two recently downloaded files from  http://fr.wordpress.org/
if ( !function_exists( 'htmlspecialchars_decode' ) ) {
	// Added in PHP 5.1.0
	// Error checks from PEAR::PHP_Compat
	function htmlspecialchars_decode( $str, $quote_style = ENT_COMPAT )
// <<< $str instead of $string
	{
		if ( !is_scalar( $string ) ) { // obvious error
From peter.westwood at ftwr.co.uk  Wed May 20 21:13:20 2009
From: peter.westwood at ftwr.co.uk (Peter Westwood)
Date: Wed May 20 21:13:38 2009
Subject: [wp-hackers] strange bug / typo in wp source
In-Reply-To: <59e7f3130905201331n4cc5c6d9t22b290478883c3cf@mail.gmail.com>
References: <59e7f3130905201331n4cc5c6d9t22b290478883c3cf@mail.gmail.com>
Message-ID: <4817B478-9B71-42FE-A055-131EF13C9242@ftwr.co.uk>


On 20 May 2009, at 21:31, Malaiac wrote:

> /wp-includes/compat.php
> line 102-110
>
> in the svn http://svn.automattic.com/wordpress/trunk/wp-includes/compat.php
> if ( !function_exists( 'htmlspecialchars_decode' ) ) {
> 	// Added in PHP 5.1.0
> 	// Error checks from PEAR::PHP_Compat
> 	function htmlspecialchars_decode( $string, $quote_style =  
> ENT_COMPAT )
> 	{
> 		if ( !is_scalar( $string ) ) {
>
>
> in two recently downloaded files from  http://fr.wordpress.org/
> if ( !function_exists( 'htmlspecialchars_decode' ) ) {
> 	// Added in PHP 5.1.0
> 	// Error checks from PEAR::PHP_Compat
> 	function htmlspecialchars_decode( $str, $quote_style = ENT_COMPAT )
> // <<< $str instead of $string
> 	{
> 		if ( !is_scalar( $string ) ) { // obvious error

This is because of #9090, that compat function was not correct in  
2.7.1 but has been fixed in trunk the fr download for 2.7.1 has the  
2.7.1 code in it.

http://svn.automattic.com/wordpress/tags/2.7.1/wp-includes/compat.php
https://core.trac.wordpress.org/ticket/9090

westi
-- 
Peter Westwood
http://blog.ftwr.co.uk | http://westi.wordpress.com
C53C F8FC 8796 8508 88D6 C950 54F4 5DCD A834 01C5

From lists at mostrom.pp.se  Sun May 24 09:23:24 2009
From: lists at mostrom.pp.se (=?UTF-8?Q?Ja=6E_E=72ik_M=6Fs=74=72=C3=B6?= =?UTF-8?Q?m?=)
Date: Sun May 24 09:23:42 2009
Subject: [wp-hackers] Using XMLRPC
Message-ID: <r279Ps-1057i-1EBDBD711186463DB2FF99C843668791@Infinitum.local>

Hi,

I'm trying to create a python script that create posts using 
XMLRPC, and it works ... mostly. As long as I don't try to set 
dateCreated I get a post created in WP but as soon as I set the 
date nothing happens. The most frustrating part is that I get an 
OK answer from WP with a new post id so it seem to work ... but 
apparently it doesn't.

So I must be doing something wrong.

My question is: how can I see what WP does when it receives the 
post? how can I see what goes wrong? I looked at the server logs 
but they don't indicate that something is wrong?

                         jem
-- 
Jan Erik Mostr?m, http://mostrom.eu

From kushaldas at gmail.com  Sun May 24 09:33:21 2009
From: kushaldas at gmail.com (Kushal Das)
Date: Sun May 24 09:33:37 2009
Subject: [wp-hackers] Using XMLRPC
In-Reply-To: <r279Ps-1057i-1EBDBD711186463DB2FF99C843668791@Infinitum.local>
References: <r279Ps-1057i-1EBDBD711186463DB2FF99C843668791@Infinitum.local>
Message-ID: <b399909d0905240233x63378291s3de50c753aaa22b1@mail.gmail.com>

On Sun, May 24, 2009 at 2:53 PM, Jan Erik Mostr?m <lists@mostrom.pp.se> wrote:
> Hi,
>
> I'm trying to create a python script that create posts using XMLRPC, and it
> works ... mostly. As long as I don't try to set dateCreated I get a post
> created in WP but as soon as I set the date nothing happens. The most
> frustrating part is that I get an OK answer from WP with a new post id so it
> seem to work ... but apparently it doesn't.
>
> So I must be doing something wrong.
>
> My question is: how can I see what WP does when it receives the post? how
> can I see what goes wrong? I looked at the server logs but they don't
> indicate that something is wrong?
>
Though I never tried datecreated, but you can just try to debug from xmlrpc.php.

Kushal
-- 
http://fedoraproject.org
http://kushaldas.in
From lists at mostrom.pp.se  Sun May 24 09:34:35 2009
From: lists at mostrom.pp.se (=?UTF-8?Q?Ja=6E_E=72ik_M=6Fs=74=72=C3=B6?= =?UTF-8?Q?m?=)
Date: Sun May 24 09:34:53 2009
Subject: [wp-hackers] Using XMLRPC
In-Reply-To: <b399909d0905240233x63378291s3de50c753aaa22b1@mail.gmail.com>
Message-ID: <r279Ps-1057i-6B281F25394A464B95C47AC79EFF9380@Infinitum.local>

On 09-05-24 at 11.33, Kushal Das <kushaldas@gmail.com> wrote:

>Though I never tried datecreated, but you can just try to debug 
>from xmlrpc.php.

How do you mean?
-- 
Jan Erik Mostr?m, http://mostrom.eu

From scribu at gmail.com  Sun May 24 10:41:52 2009
From: scribu at gmail.com (scribu)
Date: Sun May 24 10:43:03 2009
Subject: [wp-hackers] Using XMLRPC
In-Reply-To: <r279Ps-1057i-6B281F25394A464B95C47AC79EFF9380@Infinitum.local>
References: <b399909d0905240233x63378291s3de50c753aaa22b1@mail.gmail.com>
	<r279Ps-1057i-6B281F25394A464B95C47AC79EFF9380@Infinitum.local>
Message-ID: <349fe48b0905240341of3a918ena197412b98ff2aed@mail.gmail.com>

On Sun, May 24, 2009 at 12:34 PM, Jan Erik Mostr?m <lists@mostrom.pp.se>wrote:

> On 09-05-24 at 11.33, Kushal Das <kushaldas@gmail.com> wrote:
>
>  Though I never tried datecreated, but you can just try to debug from
>> xmlrpc.php.
>>
>
> How do you mean?


You find the relevant function in xmlrpc.php and modify it: save the data it
receives and the data it returns in an option, using add_option() or
something similar that will help you see what's going on.

-- 
http://scribu.net
From lists at mostrom.pp.se  Sun May 24 11:54:37 2009
From: lists at mostrom.pp.se (=?UTF-8?Q?Ja=6E_E=72ik_M=6Fs=74=72=C3=B6?= =?UTF-8?Q?m?=)
Date: Sun May 24 11:54:55 2009
Subject: [wp-hackers] Using XMLRPC
In-Reply-To: <r279Ps-1057i-1EBDBD711186463DB2FF99C843668791@Infinitum.local>
Message-ID: <r279Ps-1057i-E50A8668F23E4FA999D078A81BA3AC51@Infinitum.local>

OK, forget about it all. I'm so stupid that it's a shame ... and 
it took me 8 hours of debugging to realize that everything has 
been working perfectly all the time.

                         jem
-- 
Jan Erik Mostr?m, http://mostrom.eu

From kushaldas at gmail.com  Sun May 24 13:03:05 2009
From: kushaldas at gmail.com (Kushal Das)
Date: Sun May 24 13:03:26 2009
Subject: [wp-hackers] Using XMLRPC
In-Reply-To: <r279Ps-1057i-E50A8668F23E4FA999D078A81BA3AC51@Infinitum.local>
References: <r279Ps-1057i-1EBDBD711186463DB2FF99C843668791@Infinitum.local>
	<r279Ps-1057i-E50A8668F23E4FA999D078A81BA3AC51@Infinitum.local>
Message-ID: <b399909d0905240603l43e7394ai50a0efebde7d7c86@mail.gmail.com>

On Sun, May 24, 2009 at 5:24 PM, Jan Erik Mostr?m <lists@mostrom.pp.se> wrote:
> OK, forget about it all. I'm so stupid that it's a shame ... and it took me
> 8 hours of debugging to realize that everything has been working perfectly
> all the time.
You forgot to publish the post ?

Kushal
-- 
http://fedoraproject.org
http://kushaldas.in
From lists at mostrom.pp.se  Sun May 24 14:00:14 2009
From: lists at mostrom.pp.se (=?utf-8?Q?Jan_Erik_Mostr=C3=B6m?=)
Date: Sun May 24 14:00:48 2009
Subject: [wp-hackers] Using XMLRPC
In-Reply-To: <b399909d0905240603l43e7394ai50a0efebde7d7c86@mail.gmail.com>
References: <r279Ps-1057i-1EBDBD711186463DB2FF99C843668791@Infinitum.local>
	<r279Ps-1057i-E50A8668F23E4FA999D078A81BA3AC51@Infinitum.local>
	<b399909d0905240603l43e7394ai50a0efebde7d7c86@mail.gmail.com>
Message-ID: <D290AFA1-DBE7-4D50-81B3-4885AD3F4B74@mostrom.pp.se>

No, not even that! First thing I checked. I was setting a date would  
be easy to identify 2005-06-07 12:34:56 and only checked the beginning  
of the post listing in WP ... need I say more. It's kind of  
embarrassing ...

-- 
Jan Erik Mostr?m

24 maj 2009 kl. 15.03 skrev Kushal Das <kushaldas@gmail.com>:

> On Sun, May 24, 2009 at 5:24 PM, Jan Erik Mostr?m <lists@mostrom.pp. 
> se> wrote:
>> OK, forget about it all. I'm so stupid that it's a shame ... and it  
>> took me
>> 8 hours of debugging to realize that everything has been working  
>> perfectly
>> all the time.
> You forgot to publish the post ?
>
> Kushal
> -- 
> http://fedoraproject.org
> http://kushaldas.in
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From kushaldas at gmail.com  Sun May 24 14:03:50 2009
From: kushaldas at gmail.com (Kushal Das)
Date: Sun May 24 14:04:59 2009
Subject: [wp-hackers] Using XMLRPC
In-Reply-To: <D290AFA1-DBE7-4D50-81B3-4885AD3F4B74@mostrom.pp.se>
References: <r279Ps-1057i-1EBDBD711186463DB2FF99C843668791@Infinitum.local>
	<r279Ps-1057i-E50A8668F23E4FA999D078A81BA3AC51@Infinitum.local>
	<b399909d0905240603l43e7394ai50a0efebde7d7c86@mail.gmail.com>
	<D290AFA1-DBE7-4D50-81B3-4885AD3F4B74@mostrom.pp.se>
Message-ID: <b399909d0905240703ubfd8515ldef703fc0187da81@mail.gmail.com>

On Sun, May 24, 2009 at 7:30 PM, Jan Erik Mostr?m <lists@mostrom.pp.se> wrote:
> No, not even that! First thing I checked. I was setting a date would be easy
> to identify 2005-06-07 12:34:56 and only checked the beginning of the post
> listing in WP ... need I say more. It's kind of embarrassing ...
>
Btw, are you writing a python wordpress library ? or a client ?

Kushal
-- 
http://fedoraproject.org
http://kushaldas.in
From lists at mostrom.pp.se  Sun May 24 16:47:44 2009
From: lists at mostrom.pp.se (=?UTF-8?Q?Ja=6E_E=72ik_M=6Fs=74=72=C3=B6?= =?UTF-8?Q?m?=)
Date: Sun May 24 16:48:02 2009
Subject: [wp-hackers] Using XMLRPC
In-Reply-To: <b399909d0905240703ubfd8515ldef703fc0187da81@mail.gmail.com>
Message-ID: <r279Ps-1057i-C22527039A9D49D28A68ADE1150210A2@Infinitum.local>

On 09-05-24 at 16.03, Kushal Das <kushaldas@gmail.com> wrote:

>Btw, are you writing a python wordpress library ? or a client ?

Just a short script that makes it easier for me to create posts 
from picture I upload to flickr (I want to some custom markup to 
get a lightbox effect, get tags, title and caption from flickr 
etc). I use a library that a few years old and didn't work so 
I've been trying to debug it.


                             jem
-- 
Jan Erik Mostr?m, http://mostrom.eu

From brian at nerdlife.net  Mon May 25 02:56:07 2009
From: brian at nerdlife.net (Brian Krausz)
Date: Mon May 25 02:56:41 2009
Subject: [wp-hackers] Modifying Quick Edit
Message-ID: <63a3a6ce0905241956i20d31db0o6c697130ca6c28ed@mail.gmail.com>

Hey guys,

I'm trying to add a field to the post & page quick edit pages, and I have
everything working fine except for one thing:

As far as I can tell, I have to use some custom JS to fill my inline edit
fields since there's no hook into the hidden divs that store post data.  I
can do this by hooking into a.editinline without a problem, but when the
post is saved and the row rebuild from AJAX, there's no way for me to know
when to add my event hook back to the new quickedit link (At least not until
jQuery is upgraded to 1.3 and I can use .live()).

The hack I'm using right now is to watch for the save button to be clicked
and then re-add the link at 1, 2, and 3 seconds, but that's really ugly and
I'd like to do something better.  Any ideas/hooks I'm missing?

Thanks,
Brian

P.S.-I'm on 2.7.1
From ncrice at gmail.com  Mon May 25 05:52:12 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Mon May 25 05:52:26 2009
Subject: [wp-hackers] Formatting applied to Shortcode content
Message-ID: <862d087f0905242252x6f8d084bwb8bc5e2f628c8359@mail.gmail.com>

Despite the fact that it's not supposed to, for some reason, WordPress is
applying wpautop() and wptexturize() to the content of my shortcodes.

[shortcode]
Some text "with some quotes" plus a line break
2 line breaks after this line.

'and a last line with single quotes'
[/shortcode]

I'm getting both curly quotes, and </p><p>/<br /> tags added to the content
on the front end.

This is the function I'm using to parse the shortcode content (very simple):

function gsh_shortcode($atts, $content=null) {
$output = '<pre>'.$content.'</pre>';
return $output;
}

As you can see, I'm not applying the functions myself.

Does anyone have any idea what's going on here? Am I missing some filter
that I need to add/remove?

Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice
From scribu at gmail.com  Mon May 25 12:54:53 2009
From: scribu at gmail.com (scribu)
Date: Mon May 25 12:55:10 2009
Subject: [wp-hackers] Modifying Quick Edit
In-Reply-To: <63a3a6ce0905241956i20d31db0o6c697130ca6c28ed@mail.gmail.com>
References: <63a3a6ce0905241956i20d31db0o6c697130ca6c28ed@mail.gmail.com>
Message-ID: <349fe48b0905250554p75c18616gbd30ba6051b592b2@mail.gmail.com>

WP 2.8 uses jQuery 1.3, so if you don't find a solution for 2.7.1 you can
just wait a little while until 2.8 is stable.


-- 
http://scribu.net
From tonyscott100 at yahoo.co.uk  Mon May 25 13:20:21 2009
From: tonyscott100 at yahoo.co.uk (Tony Scott)
Date: Mon May 25 13:48:33 2009
Subject: [wp-hackers] WordCamp UK 2009 tickets
In-Reply-To: <4A1A5482.8010706@instinct.co.nz>
References: <c8f37c930904141004y3aefbca5m6ef29d3ded51437c@mail.gmail.com>
	<C8EC2088-8777-4AED-A652-9AF6952C9996@instinct.co.nz>
	<EF1DAED7-05E1-4C2D-94D3-12C6F688FAA4@gmail.com>
	<49E6C3DB.1080903@instinct.co.nz>
	<349fe48b0904152355y1526fb59v24069e4dcda9996c@mail.gmail.com>
	<49F0EEF5.3030709@instinct.co.nz>
	<349fe48b0904231621h708d3856tb9793cdb81c52abc@mail.gmail.com>
	<4A1A5482.8010706@instinct.co.nz>
Message-ID: <536401.9328.qm@web24503.mail.ird.yahoo.com>


A note for those intending to be at this year's WordCamp UK on 18-19 July 2009.

There's now only 1 week left to get WordCamp UK 2009 tickets at ?10 discount.

http://wordcampuk2009.eventbrite.com/

From midday (GMT+1) on Monday 1 June 2009 the ticket price will increase from ?25 to ?35.

 Tony


----
Tony Scott
http://tonyscott.org.uk | http://twitter.com/tonys
http://wordcamp.org.uk | http://hackspace.org.uk


      
From maillist at wangstedt.net  Tue May 26 20:00:55 2009
From: maillist at wangstedt.net (=?ISO-8859-1?Q?Karl_W=E5ngstedt?=)
Date: Tue May 26 20:01:17 2009
Subject: [wp-hackers] apply_filters()
Message-ID: <118513E7-0C69-48DA-AD2F-DD9D3DD8101D@wangstedt.net>

Hi all

I'm trying to make a function in my parent theme fiterable (is that a  
correct description?) by apply_filters on the return value.

But now it seems like I can only add_filter() to the result if it gets  
echoed from the function. Now I'd like to just return the result for  
use in PHP, but then the add_filter() isn't applied.

Is it so, or am I doing something wrong?

This is what my functions look like (a bit stripped):
// In the parent theme
function KEW_short_excerpt($text = '', $max_length = 100, $preserve =  
'<p>', $replace = '', $replacement = ''){
	// The function

	echo apply_filters('_short_excerpt',$text);
	//return apply_filters('_short_excerpt',$text);
}

// In the child theme
function KEW_add_cat_name_to_short_excerpt($text=''){
	global $post;
	
	$categories = get_the_category($post->ID);
	$name = $categories[0]->cat_name;
		$text = preg_replace('/<p>/','<p><span class="run-in">??? '.$name.'</ 
span>&nbsp;',$text); // KEW_short_excerpt
		
	return $text;

}
add_filter('_short_excerpt','KEW_add_cat_name_to_short_excerpt');

It's the two last rows in the parent theme function that I toggle  
between. The filter gets applied when I use echo, but not if I use  
return.



Thank you
Karl W?ngstedt
----------------------------------
         W?ngstedt  nova
        www.wangstedt.net

Karl W?ngstedt       0278-61 12 33
Stenhuggarv?gen 3g   070-578 13 04
821 41  BOLLN?S
----------------------------------
Det h?r brevet skickades med en Macintosh fr?n Apple.
Garanterat virusfri med Mac OS X.
From joost at yoast.com  Tue May 26 21:44:52 2009
From: joost at yoast.com (Joost de Valk)
Date: Tue May 26 21:45:11 2009
Subject: [wp-hackers] template checks
Message-ID: <4A1C62D4.7060608@yoast.com>

Hey,

I've just added this:

// Check for wp_footer
$templates = array();
$templates[] = "footer.php";
$file = file_get_contents(locate_template($templates));
preg_match('/.*(wp_footer\(\);).*/',$file,$matches);
if (!$matches[1]) {
     echo "<div id=\"message\" 
class=\"error\"><p><strong>Warning</strong> wp_footer(); not found in 
your footer.php file,  this might mean this plugin will not 
work!</p></div>\n";
}

to my Google Analytics plugin, after the gazillionth complaint from 
somebody that their theme didn't have a wp_footer call. Is it an idea to 
add a check like this for both wp_footer and wp_head into WordPress 
core, or give people some other way to validate these things are right 
before they start complaining to plugin authors?

I know this could break on themes with no footer.php file, any hints to 
more subtle checks are appreciated :)

Best,
Joost


-- 
*Joost de Valk*
Online Marketing, WordPress, SEO & Social Media Strategy
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost@orangevalley.nl <mailto:joost@orangevalley.nl> - 
joost@yoast.com <mailto:joost@yoast.com>
T: +316-24-555-808 | @yoast <http://twitter.com/yoast> on Twitter
From ozh at planetozh.com  Tue May 26 22:45:55 2009
From: ozh at planetozh.com (Ozh)
Date: Tue May 26 22:46:10 2009
Subject: [wp-hackers] template checks
In-Reply-To: <4A1C62D4.7060608@yoast.com>
References: <4A1C62D4.7060608@yoast.com>
Message-ID: <ae81acd10905261545o7e3523e6s17907e6270d08abc@mail.gmail.com>

A couple months (years?) ago I was after something similar on this
list. The consensus was that there's no foolproof way to make sure the
hook is called (and after all a theme author might deliberately omit
it)

On Tue, May 26, 2009 at 11:44 PM, Joost de Valk <joost@yoast.com> wrote:
>
> I know this could break on themes with no footer.php file, any hints to more
> subtle checks are appreciated :)
>

-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News
From casey.bisson at gmail.com  Wed May 27 01:20:29 2009
From: casey.bisson at gmail.com (Casey Bisson)
Date: Wed May 27 01:21:01 2009
Subject: [wp-hackers] when comments aren't enough...a generic user-response
	mechanism?
Message-ID: <B7F03C0B-F28B-4DA4-802C-70046A9FDEAF@gmail.com>


User tagging, post ranking, reporting offensive content, and crowd- 
sourced copy edits are just a few of a number of user-responses to  
blog content that don't quite fit WordPress' comment model.

There are a few plugins in this space; I use Lester Chan's WP Post  
Ratings, and I'm one of the few that uses Matt's Community Tags  
plugin, but those and others suffer from having to invent their own  
input, moderation, and storage mechanisms. Comparing that landscape to  
plugins related to extending the type of data that can be input with  
posts makes one wonder if the comment system could be extended in ways  
similar to posts to accommodate more types of user input.

Leveraging comments to allow the input, moderation, and storage of a  
larger variety of user responses rather than just comments requires  
just a few changes to WP's behavior.

At the time a comment is submitted, the preprocess_comment hook allows  
plugins to capture non-comment input and associate it with the  
$comment array that is passed through the system. The only problem is  
that user responses that don't include comment text are rejected by wp- 
comments-post.php before the preprocess_comment hook can act.

Storage of the additional data could follow the post meta model, or an  
additional field could be added to the comment table into which any  
extra elements of the $comments array are serialized.

Moderation of these non-comment user responses could leverage the  
current comment moderation tools with addition of hooks (similar to  
those now available on the plugins page) that would add features to  
each row of the display based on the data in that row. A hook would be  
needed to allow plugins to display a textual representation of the  
input ("suggested a tag: stuff" or "rated the post 5 stars" or "marked  
comment #123 as offensive") Approving, deleting, and spamming actions  
are probably appropriate to a majority of audience responses, but  
plugins should be able to set their own actions.

Thoughts?

--Casey

http://maisonbisson.com/
http://about.scriblio.net/
From lists at rotorised.com  Wed May 27 06:58:39 2009
From: lists at rotorised.com (Ryan McCue)
Date: Wed May 27 06:59:01 2009
Subject: [wp-hackers] template checks
In-Reply-To: <ae81acd10905261545o7e3523e6s17907e6270d08abc@mail.gmail.com>
References: <4A1C62D4.7060608@yoast.com>
	<ae81acd10905261545o7e3523e6s17907e6270d08abc@mail.gmail.com>
Message-ID: <4A1CE49F.70301@rotorised.com>

On 27/05/2009 8:45 AM, Ozh wrote:
> A couple months (years?) ago I was after something similar on this
> list. The consensus was that there's no foolproof way to make sure the
> hook is called (and after all a theme author might deliberately omit
> it)

Well, there's one foolproof way: add a logging handler to wp_footer and 
run WP. This could be emulated by a script for the WP Themes repository, 
which could be a good idea.

-- 
Ryan McCue
<http://cubegames.net/>

From joost at yoast.com  Wed May 27 07:12:15 2009
From: joost at yoast.com (Joost de Valk)
Date: Wed May 27 07:12:32 2009
Subject: [wp-hackers] template checks
In-Reply-To: <4A1CE49F.70301@rotorised.com>
References: <4A1C62D4.7060608@yoast.com>	<ae81acd10905261545o7e3523e6s17907e6270d08abc@mail.gmail.com>
	<4A1CE49F.70301@rotorised.com>
Message-ID: <4A1CE7CF.20207@yoast.com>

True. Let me code something for that that you can at least drop into a 
plugin.

Ryan McCue wrote:
> On 27/05/2009 8:45 AM, Ozh wrote:
>> A couple months (years?) ago I was after something similar on this
>> list. The consensus was that there's no foolproof way to make sure the
>> hook is called (and after all a theme author might deliberately omit
>> it) 
>
> Well, there's one foolproof way: add a logging handler to wp_footer 
> and run WP. This could be emulated by a script for the WP Themes 
> repository, which could be a good idea. 

-- 
*Joost de Valk*
Online Marketing, WordPress, SEO & Social Media Strategy
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost@orangevalley.nl <mailto:joost@orangevalley.nl> - 
joost@yoast.com <mailto:joost@yoast.com>
T: +316-24-555-808 | @yoast <http://twitter.com/yoast> on Twitter
From scribu at gmail.com  Wed May 27 11:56:55 2009
From: scribu at gmail.com (scribu)
Date: Wed May 27 11:57:10 2009
Subject: [wp-hackers] when comments aren't enough...a generic 
	user-response mechanism?
In-Reply-To: <B7F03C0B-F28B-4DA4-802C-70046A9FDEAF@gmail.com>
References: <B7F03C0B-F28B-4DA4-802C-70046A9FDEAF@gmail.com>
Message-ID: <349fe48b0905270456j65bcd5bav539cd92547b52f5e@mail.gmail.com>

I like the ideea of making WordPress easier to extend in this
direction, but I don't think that using the wp_comments table is
always the best option - I'm thinking of community tagging when I say
that.

-- 
http://scribu.net
From joseph at josephscott.org  Wed May 27 13:36:18 2009
From: joseph at josephscott.org (Joseph Scott)
Date: Wed May 27 13:36:47 2009
Subject: [wp-hackers] template checks
In-Reply-To: <4A1CE49F.70301@rotorised.com>
References: <4A1C62D4.7060608@yoast.com>
	<ae81acd10905261545o7e3523e6s17907e6270d08abc@mail.gmail.com>
	<4A1CE49F.70301@rotorised.com>
Message-ID: <159300EF-922B-4C9F-9268-DFD6321A15C9@josephscott.org>


On May 27, 2009, at 12:58 AM, Ryan McCue wrote:

> On 27/05/2009 8:45 AM, Ozh wrote:
>> A couple months (years?) ago I was after something similar on this
>> list. The consensus was that there's no foolproof way to make sure  
>> the
>> hook is called (and after all a theme author might deliberately omit
>> it)
>
> Well, there's one foolproof way: add a logging handler to wp_footer  
> and run WP. This could be emulated by a script for the WP Themes  
> repository, which could be a good idea.



We did add checks for wp_head() and wp_footer() to the theme  
directory.  If you've found a theme in there that doesn't have those  
(perhaps from before the check was added) please send the names of the  
themes to themes@wordpress.org and we'll ask the theme authors to fix  
them.

--
Joseph Scott
joseph@josephscott.org
http://josephscott.org/




From wp-hackers at striderweb.com  Wed May 27 21:12:45 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed May 27 21:13:01 2009
Subject: [wp-hackers] plugins-loaded timing?
Message-ID: <2410AA9C-B643-4AE8-AF44-B24E7662E859@striderweb.com>

Hi all --

Is there a particular reasoning why the "plugins-loaded" action  
doesn't fire just after the plugins are loaded?  After plugins load, a  
few things happen before the actual action happens.  Specifically....

*** excerpt from wp-settings.php ***
require (ABSPATH . WPINC . '/pluggable.php');

/*
  * In most cases the default internal encoding is latin1, which is of  
no use,
  * since we want to use the mb_ functions for utf-8 strings
  */
if (function_exists('mb_internal_encoding')) {
	if (!@mb_internal_encoding(get_option('blog_charset')))
		mb_internal_encoding('UTF-8');
}


if ( defined('WP_CACHE') && function_exists('wp_cache_postload') )
	wp_cache_postload();

do_action('plugins_loaded');
*** end excerpt ***

I ask because I have (more than once) had functions I would like to  
run immediately after plugins load, and this throws a potential  
spanner in the works (especially the fact that the hook fires after  
pluggable.php has been loaded).

-- 
Stephen Rider
http://striderweb.com/




From wp-hackers at striderweb.com  Wed May 27 21:31:37 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Wed May 27 21:33:51 2009
Subject: [wp-hackers] template checks
In-Reply-To: <ae81acd10905261545o7e3523e6s17907e6270d08abc@mail.gmail.com>
References: <4A1C62D4.7060608@yoast.com>
	<ae81acd10905261545o7e3523e6s17907e6270d08abc@mail.gmail.com>
Message-ID: <34F94B65-D4A8-4A19-84B5-2CD4C3B1EADC@striderweb.com>

RE theme authors deliberately omitting it --

Maybe have some way for theme authors to *explicitly* omit header/ 
footer -- thus you could check for either wp_footer OR the omission  
statement.  If neither is there, give the warning.

stoopid example:  wp_footer('omit')

Since it's probably fairly rare for a theme to deliberately leave it  
out, I think this would work nicely -- give the warning while allowing  
an out for themers who really don't want it.

-- 
Stephen Rider
http://striderweb.com/


On May 26, 2009, at 5:45 PM, Ozh wrote:

> A couple months (years?) ago I was after something similar on this
> list. The consensus was that there's no foolproof way to make sure the
> hook is called (and after all a theme author might deliberately omit
> it)
>
> On Tue, May 26, 2009 at 11:44 PM, Joost de Valk <joost@yoast.com>  
> wrote:
>>
>> I know this could break on themes with no footer.php file, any  
>> hints to more
>> subtle checks are appreciated :)


From ncrice at gmail.com  Wed May 27 21:48:18 2009
From: ncrice at gmail.com (Nathan Rice)
Date: Wed May 27 21:48:36 2009
Subject: [wp-hackers] template checks
In-Reply-To: <34F94B65-D4A8-4A19-84B5-2CD4C3B1EADC@striderweb.com>
References: <4A1C62D4.7060608@yoast.com>
	<ae81acd10905261545o7e3523e6s17907e6270d08abc@mail.gmail.com>
	<34F94B65-D4A8-4A19-84B5-2CD4C3B1EADC@striderweb.com>
Message-ID: <862d087f0905271448g445ecd7bs97029edbadc31e4@mail.gmail.com>

Also, theme frameworks that abstract template functions might not have the
wp_footer() hook in the footer.php file, even though it may be present
elsewhere.

Nathan

My Website
http://www.nathanrice.net/

My Twitter
http://twitter.com/nathanrice


On Wed, May 27, 2009 at 5:31 PM, Stephen Rider <wp-hackers@striderweb.com>wrote:

> RE theme authors deliberately omitting it --
>
> Maybe have some way for theme authors to *explicitly* omit header/footer --
> thus you could check for either wp_footer OR the omission statement.  If
> neither is there, give the warning.
>
> stoopid example:  wp_footer('omit')
>
> Since it's probably fairly rare for a theme to deliberately leave it out, I
> think this would work nicely -- give the warning while allowing an out for
> themers who really don't want it.
>
> --
> Stephen Rider
> http://striderweb.com/
>
>
> On May 26, 2009, at 5:45 PM, Ozh wrote:
>
>  A couple months (years?) ago I was after something similar on this
>> list. The consensus was that there's no foolproof way to make sure the
>> hook is called (and after all a theme author might deliberately omit
>> it)
>>
>> On Tue, May 26, 2009 at 11:44 PM, Joost de Valk <joost@yoast.com> wrote:
>>
>>>
>>> I know this could break on themes with no footer.php file, any hints to
>>> more
>>> subtle checks are appreciated :)
>>>
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From repost_08 at yahoo.com  Thu May 28 00:18:32 2009
From: repost_08 at yahoo.com (RePost)
Date: Thu May 28 00:18:55 2009
Subject: [wp-hackers] Calendar generating bad links to pages
Message-ID: <4A1DD858.4050209@yahoo.com>

I've found through checking my Google Webmaster stats that the WordPress 
(2.7.1) calendar is attempting to create links to pages as well as blog 
entries, resulting in 404 errors.

For example, WP shows that I generated my "About" page on 11-24-08 and 
my "Contact" pages on 11-26-08. The November calendar is treating those 
pages like blog entries and attempting to link to them.

To test these links, see the calendar at the bottom of the middle column:
http://bit.ly/n0en4

How do I correct this error?

Thanks.


From alan at verselogic.net  Thu May 28 00:21:16 2009
From: alan at verselogic.net (Alan Castonguay)
Date: Thu May 28 00:21:31 2009
Subject: [wp-hackers] apply_filters()
In-Reply-To: <118513E7-0C69-48DA-AD2F-DD9D3DD8101D@wangstedt.net>
References: <118513E7-0C69-48DA-AD2F-DD9D3DD8101D@wangstedt.net>
Message-ID: <8F175243-8DAC-4DE9-A22E-09D9C51B8AE6@verselogic.net>

Karl,

This might depend on how you were calling KEW_short_excerpt(); were  
you actually echoing the result? Try tracing through the following.

http://blog.verselogic.net/?karl=1


         function KEW_short_excerpt($text = '', $max_length = 100,  
$preserve = '<p>', $replace = '', $replacement = ''){
                 // The function
                 echo "Before filter: $text\n";
                 $c = apply_filters('_short_excerpt',$text);
                 echo "After filter: $c\n";
                 return $c;
         }

         function KEW_add_cat_name_to_short_excerpt($text=''){
                 echo "Filter called with ($text)\n";
                 $text = preg_replace('/cat/','DOG',$text);
                 echo "Filter returning ($text)\n";
                 return $text;
         }
         echo "<pre>Calling KEW_short_excerpt('The lazy cat sleeps.') 
\n";
         $a = KEW_short_excerpt('The lazy cat sleeps.');
         echo " - returned ($a)\n\n";
         echo "Adding filter.\n";
          
add_filter('_short_excerpt','KEW_add_cat_name_to_short_excerpt');
         echo "Calling KEW_short_excerpt('The lazy cat sleeps.')\n";
         $b = KEW_short_excerpt('The lazy cat sleeps.');
         echo " - returned ($b)\n";
         echo "</pre>";


Alan J Castonguay



On May 26, 2009, at 4:00 PM, Karl W?ngstedt wrote:

> Hi all
>
> I'm trying to make a function in my parent theme fiterable (is that  
> a correct description?) by apply_filters on the return value.
>
> But now it seems like I can only add_filter() to the result if it  
> gets echoed from the function. Now I'd like to just return the  
> result for use in PHP, but then the add_filter() isn't applied.
>
> Is it so, or am I doing something wrong?
>
> This is what my functions look like (a bit stripped):
> // In the parent theme
> function KEW_short_excerpt($text = '', $max_length = 100, $preserve  
> = '<p>', $replace = '', $replacement = ''){
> 	// The function
>
> 	echo apply_filters('_short_excerpt',$text);
> 	//return apply_filters('_short_excerpt',$text);
> }
>
> // In the child theme
> function KEW_add_cat_name_to_short_excerpt($text=''){
> 	global $post;
> 	
> 	$categories = get_the_category($post->ID);
> 	$name = $categories[0]->cat_name;
> 		$text = preg_replace('/<p>/','<p><span class="run-in">??? '. 
> $name.'</span>&nbsp;',$text); // KEW_short_excerpt
> 		
> 	return $text;
>
> }
> add_filter('_short_excerpt','KEW_add_cat_name_to_short_excerpt');
>
> It's the two last rows in the parent theme function that I toggle  
> between. The filter gets applied when I use echo, but not if I use  
> return.
>
>
>
> Thank you
> Karl W?ngstedt
> ----------------------------------
>        W?ngstedt  nova
>       www.wangstedt.net
>
> Karl W?ngstedt       0278-61 12 33
> Stenhuggarv?gen 3g   070-578 13 04
> 821 41  BOLLN?S
> ----------------------------------
> Det h?r brevet skickades med en Macintosh fr?n Apple.
> Garanterat virusfri med Mac OS X.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From alan at verselogic.net  Thu May 28 00:40:12 2009
From: alan at verselogic.net (Alan Castonguay)
Date: Thu May 28 00:40:29 2009
Subject: [wp-hackers] Calendar generating bad links to pages
In-Reply-To: <4A1DD858.4050209@yahoo.com>
References: <4A1DD858.4050209@yahoo.com>
Message-ID: <33D7C320-4804-4B8A-A2A1-11895E1BB7F9@verselogic.net>

2.7.1's calendar is generated in http://core.trac.wordpress.org/browser/tags/2.7.1/wp-includes/general-template.php 
  but as far as I see all the SQL is guarded with
    AND post_type = 'post' AND post_status = 'publish'

It might be caused by a plugin filtering the sql, or replacing the  
calendar wholesale. I don't see this behavior on 2.8-bleeding-edge

Alan J Castonguay



On May 27, 2009, at 8:18 PM, RePost wrote:

> I've found through checking my Google Webmaster stats that the  
> WordPress (2.7.1) calendar is attempting to create links to pages as  
> well as blog entries, resulting in 404 errors.
>
> For example, WP shows that I generated my "About" page on 11-24-08  
> and my "Contact" pages on 11-26-08. The November calendar is  
> treating those pages like blog entries and attempting to link to them.
>
> To test these links, see the calendar at the bottom of the middle  
> column:
> http://bit.ly/n0en4
>
> How do I correct this error?
>
> Thanks.
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From repost_08 at yahoo.com  Thu May 28 02:03:30 2009
From: repost_08 at yahoo.com (RePost)
Date: Thu May 28 02:03:57 2009
Subject: [wp-hackers] Calendar generating bad links to pages
In-Reply-To: <33D7C320-4804-4B8A-A2A1-11895E1BB7F9@verselogic.net>
References: <4A1DD858.4050209@yahoo.com>
	<33D7C320-4804-4B8A-A2A1-11895E1BB7F9@verselogic.net>
Message-ID: <4A1DF0F2.60407@yahoo.com>

Alan Castonguay wrote:
> 2.7.1's calendar is generated in 
> http://core.trac.wordpress.org/browser/tags/2.7.1/wp-includes/general-template.php but 
> as far as I see all the SQL is guarded with
>    AND post_type = 'post' AND post_status = 'publish'
>
> It might be caused by a plugin filtering the sql, or replacing the 
> calendar wholesale. I don't see this behavior on 2.8-bleeding-edge
>
> Alan J Castonguay
>
>
>
> On May 27, 2009, at 8:18 PM, RePost wrote:
>
>> I've found through checking my Google Webmaster stats that the 
>> WordPress (2.7.1) calendar is attempting to create links to pages as 
>> well as blog entries, resulting in 404 errors.
>>
>> For example, WP shows that I generated my "About" page on 11-24-08 
>> and my "Contact" pages on 11-26-08. The November calendar is treating 
>> those pages like blog entries and attempting to link to them.
>>
>> To test these links, see the calendar at the bottom of the middle 
>> column:
>> http://bit.ly/n0en4
>>

Alan, I am using the mw-calendar plugin, detailed here:
http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.html

The script is here:
http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.phpf

Does this provide any clues?

From kaspars at konstruktors.com  Thu May 28 09:56:08 2009
From: kaspars at konstruktors.com (Kaspars Dambis)
Date: Thu May 28 09:56:42 2009
Subject: [wp-hackers] Modifying Quick Edit
In-Reply-To: <63a3a6ce0905241956i20d31db0o6c697130ca6c28ed@mail.gmail.com>
References: <63a3a6ce0905241956i20d31db0o6c697130ca6c28ed@mail.gmail.com>
Message-ID: <50c7a8d00905280256j1672b4d7t599ad75b309ef0b8@mail.gmail.com>

Brian, have a look at this:
http://konstruktors.com/blog/wordpress/1162-quick-reply-templates-plugin-and-wordpress-2-8/

It works with 2.8.

Kaspars

On Mon, May 25, 2009 at 5:56 AM, Brian Krausz <brian@nerdlife.net> wrote:

> Hey guys,
>
> I'm trying to add a field to the post & page quick edit pages, and I have
> everything working fine except for one thing:
>
> As far as I can tell, I have to use some custom JS to fill my inline edit
> fields since there's no hook into the hidden divs that store post data.  I
> can do this by hooking into a.editinline without a problem, but when the
> post is saved and the row rebuild from AJAX, there's no way for me to know
> when to add my event hook back to the new quickedit link (At least not
> until
> jQuery is upgraded to 1.3 and I can use .live()).
>
> The hack I'm using right now is to watch for the save button to be clicked
> and then re-add the link at 1, 2, and 3 seconds, but that's really ugly and
> I'd like to do something better.  Any ideas/hooks I'm missing?
>
> Thanks,
> Brian
>
> P.S.-I'm on 2.7.1
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From mark.cunningham at gmail.com  Thu May 28 10:55:34 2009
From: mark.cunningham at gmail.com (Mark Cunningham)
Date: Thu May 28 10:55:51 2009
Subject: [wp-hackers] How do you get jQuery tabs working in Wordpress 2.8?
Message-ID: <ee3949160905280355g61b853f9x4d8df4e4c06b0564@mail.gmail.com>

I've been doing some testing of my plugin on Wordpress 2.8 beta 2. I
am using the Wordpress built-in jQuery and jQuery tabs to generate
tabbed interface to my plugins options. But on the upgrade to 2.8, the
tabs no longer work any more. I've checked documentation for jQuery
tabs, and I don't appear to be doing anything wrong. Has anyone else
got jQuery tabs working on Wordpress 2.8?

Thanks
Mark
-- 
http://thedeadone.net
http://lostheroesrpg.com
http://irishgamingwiki.com
From gaarai at gaarai.com  Thu May 28 12:12:17 2009
From: gaarai at gaarai.com (Gaarai)
Date: Thu May 28 12:12:42 2009
Subject: [wp-hackers] How do you get jQuery tabs working in Wordpress 2.8?
In-Reply-To: <ee3949160905280355g61b853f9x4d8df4e4c06b0564@mail.gmail.com>
References: <ee3949160905280355g61b853f9x4d8df4e4c06b0564@mail.gmail.com>
Message-ID: <4A1E7FA1.3080400@gaarai.com>

I haven't run into your specific problem, but I believe that I know the 
cause. 2.8 has split the scripts into two groups: those that are added 
in the header and those that are added in the footer. jquery-ui-tabs is 
one of the many scripts that now loads in the footer. View the source, 
scroll to the bottom, and you'll see what I am talking about.

If you have any js code that relies on scripts that are loaded in the 
footer, you need to ensure that you wrap that code and tell it to not 
run until the document has fully loaded. This is easily done by wrapping 
the code in a jQuery(document).ready function. For example:

    jQuery(document).ready( function() {
        // Code that relies on scripts loaded in the footer.
    } );

One problem that I've already come across while doing this is that 
wrapping functions in that segment of code causes those functions to not 
be accessible to other js code that originates from outside that ready 
function. The solution I've created to work around this is to use an 
initializing function and use the ready function inside it. For example:

    function init_my_script() {
        jQuery(document).ready( function() {
            create_ui_tabs();
            update_my_links();
            // etc
        } );
    }

    function create_ui_tabs() {
        // Do stuff
    }

    function update_my_links() {
        // Do stuff
    }

    init_my_script();
      

This way you make your code run after all the scripts are loaded while 
also allowing the key functions to be accessible from other code.

If you want to find out which scripts are loaded in the footer, check 
out the wp-includes/script-loader.php file of the latest trunk. There is 
a comment above the wp_default_scripts function that indicates which 
ones are loaded in the footer. You'll find that most of the scripts are 
now loaded in the footer. So, I recommend creating all future js code 
(and updating old js code) to have init functions with contents wrapped 
in the ready function. If you don't do this, you'll find a great amount 
of your js causing fatal errors and crashing the js execution.

I hope that this helps you out Mark.

Chris Jean
http://gaarai.com/
http://wp-roadmap.com/



Mark Cunningham wrote:
> I've been doing some testing of my plugin on Wordpress 2.8 beta 2. I
> am using the Wordpress built-in jQuery and jQuery tabs to generate
> tabbed interface to my plugins options. But on the upgrade to 2.8, the
> tabs no longer work any more. I've checked documentation for jQuery
> tabs, and I don't appear to be doing anything wrong. Has anyone else
> got jQuery tabs working on Wordpress 2.8?
>
> Thanks
> Mark
>   
From mark.cunningham at gmail.com  Thu May 28 13:24:12 2009
From: mark.cunningham at gmail.com (Mark Cunningham)
Date: Thu May 28 13:24:27 2009
Subject: [wp-hackers] How do you get jQuery tabs working in Wordpress 2.8?
In-Reply-To: <4A1E7FA1.3080400@gaarai.com>
References: <ee3949160905280355g61b853f9x4d8df4e4c06b0564@mail.gmail.com>
	<4A1E7FA1.3080400@gaarai.com>
Message-ID: <ee3949160905280624l7b9a7628nfe870a51e398d6b6@mail.gmail.com>

Hi Gaarai,

Thanks for taking the time to reply.

> If you have any js code that relies on scripts that are loaded in the
> footer, you need to ensure that you wrap that code and tell it to not run
> until the document has fully loaded. This is easily done by wrapping the
> code in a jQuery(document).ready function. For example:
>
>   jQuery(document).ready( function() {
>       // Code that relies on scripts loaded in the footer.
>   } );

I was unaware of the change to have the scripts loaded in the footer,
but luckily I was already implementing my initialisation this way.

> One problem that I've already come across while doing this is that wrapping
> functions in that segment of code causes those functions to not be
> accessible to other js code that originates from outside that ready
> function. The solution I've created to work around this is to use an
> initializing function and use the ready function inside it. For example:

I tried this and it has made no difference. I'm not sure if that's the
source of the problem.

Thanks
Mark

2009/5/28 Gaarai <gaarai@gaarai.com>:
> I haven't run into your specific problem, but I believe that I know the
> cause. 2.8 has split the scripts into two groups: those that are added in
> the header and those that are added in the footer. jquery-ui-tabs is one of
> the many scripts that now loads in the footer. View the source, scroll to
> the bottom, and you'll see what I am talking about.
>
> If you have any js code that relies on scripts that are loaded in the
> footer, you need to ensure that you wrap that code and tell it to not run
> until the document has fully loaded. This is easily done by wrapping the
> code in a jQuery(document).ready function. For example:
>
> ? jQuery(document).ready( function() {
> ? ? ? // Code that relies on scripts loaded in the footer.
> ? } );
>
> One problem that I've already come across while doing this is that wrapping
> functions in that segment of code causes those functions to not be
> accessible to other js code that originates from outside that ready
> function. The solution I've created to work around this is to use an
> initializing function and use the ready function inside it. For example:
>
> ? function init_my_script() {
> ? ? ? jQuery(document).ready( function() {
> ? ? ? ? ? create_ui_tabs();
> ? ? ? ? ? update_my_links();
> ? ? ? ? ? // etc
> ? ? ? } );
> ? }
>
> ? function create_ui_tabs() {
> ? ? ? // Do stuff
> ? }
>
> ? function update_my_links() {
> ? ? ? // Do stuff
> ? }
>
> ? init_my_script();
>
> This way you make your code run after all the scripts are loaded while also
> allowing the key functions to be accessible from other code.
>
> If you want to find out which scripts are loaded in the footer, check out
> the wp-includes/script-loader.php file of the latest trunk. There is a
> comment above the wp_default_scripts function that indicates which ones are
> loaded in the footer. You'll find that most of the scripts are now loaded in
> the footer. So, I recommend creating all future js code (and updating old js
> code) to have init functions with contents wrapped in the ready function. If
> you don't do this, you'll find a great amount of your js causing fatal
> errors and crashing the js execution.
>
> I hope that this helps you out Mark.
>
> Chris Jean
> http://gaarai.com/
> http://wp-roadmap.com/
>
>
>
> Mark Cunningham wrote:
>>
>> I've been doing some testing of my plugin on Wordpress 2.8 beta 2. I
>> am using the Wordpress built-in jQuery and jQuery tabs to generate
>> tabbed interface to my plugins options. But on the upgrade to 2.8, the
>> tabs no longer work any more. I've checked documentation for jQuery
>> tabs, and I don't appear to be doing anything wrong. Has anyone else
>> got jQuery tabs working on Wordpress 2.8?
>>
>> Thanks
>> Mark
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://thedeadone.net
http://lostheroesrpg.com
http://irishgamingwiki.com
From alex.cologne at googlemail.com  Thu May 28 15:11:03 2009
From: alex.cologne at googlemail.com (Alex Rabe)
Date: Thu May 28 15:11:16 2009
Subject: [wp-hackers] Re: How do you get jQuery tabs working in Wordpress
	2.8?
In-Reply-To: <ee3949160905280624l7b9a7628nfe870a51e398d6b6@mail.gmail.com>
References: <ee3949160905280355g61b853f9x4d8df4e4c06b0564@mail.gmail.com> 
	<4A1E7FA1.3080400@gaarai.com>
	<ee3949160905280624l7b9a7628nfe870a51e398d6b6@mail.gmail.com>
Message-ID: <3f8be764-e19b-4f8d-8423-823a251523ae@37g2000yqp.googlegroups.com>

I had a problem with this init :

jQuery('#slider > ul').tabs({ fxFade: true, fxSpeed: 'fast' });

with Jquery UI 1.7 , (which is part of WP 2.8, I need to change it in
this way :

jQuery('#slider').tabs({ fxFade: true, fxSpeed: 'fast' });

Alex


On 28 Mai, 15:24, Mark Cunningham <mark.cunning...@gmail.com> wrote:
> Hi Gaarai,
>
> Thanks for taking the time to reply.
>
> > If you have any js code that relies on scripts that are loaded in the
> > footer, you need to ensure that you wrap that code and tell it to not run
> > until the document has fully loaded. This is easily done by wrapping the
> > code in a jQuery(document).ready function. For example:
>
> > ? jQuery(document).ready( function() {
> > ? ? ? // Code that relies on scripts loaded in the footer.
> > ? } );
>
> I was unaware of the change to have the scripts loaded in the footer,
> but luckily I was already implementing my initialisation this way.
>
> > One problem that I've already come across while doing this is that wrapping
> > functions in that segment of code causes those functions to not be
> > accessible to other js code that originates from outside that ready
> > function. The solution I've created to work around this is to use an
> > initializing function and use the ready function inside it. For example:
>
> I tried this and it has made no difference. I'm not sure if that's the
> source of the problem.
>
> Thanks
> Mark
>
> 2009/5/28 Gaarai <gaa...@gaarai.com>:
>
>
>
>
>
> > I haven't run into your specific problem, but I believe that I know the
> > cause. 2.8 has split the scripts into two groups: those that are added in
> > the header and those that are added in the footer. jquery-ui-tabs is one of
> > the many scripts that now loads in the footer. View the source, scroll to
> > the bottom, and you'll see what I am talking about.
>
> > If you have any js code that relies on scripts that are loaded in the
> > footer, you need to ensure that you wrap that code and tell it to not run
> > until the document has fully loaded. This is easily done by wrapping the
> > code in a jQuery(document).ready function. For example:
>
> > ? jQuery(document).ready( function() {
> > ? ? ? // Code that relies on scripts loaded in the footer.
> > ? } );
>
> > One problem that I've already come across while doing this is that wrapping
> > functions in that segment of code causes those functions to not be
> > accessible to other js code that originates from outside that ready
> > function. The solution I've created to work around this is to use an
> > initializing function and use the ready function inside it. For example:
>
> > ? function init_my_script() {
> > ? ? ? jQuery(document).ready( function() {
> > ? ? ? ? ? create_ui_tabs();
> > ? ? ? ? ? update_my_links();
> > ? ? ? ? ? // etc
> > ? ? ? } );
> > ? }
>
> > ? function create_ui_tabs() {
> > ? ? ? // Do stuff
> > ? }
>
> > ? function update_my_links() {
> > ? ? ? // Do stuff
> > ? }
>
> > ? init_my_script();
>
> > This way you make your code run after all the scripts are loaded while also
> > allowing the key functions to be accessible from other code.
>
> > If you want to find out which scripts are loaded in the footer, check out
> > the wp-includes/script-loader.php file of the latest trunk. There is a
> > comment above the wp_default_scripts function that indicates which ones are
> > loaded in the footer. You'll find that most of the scripts are now loaded in
> > the footer. So, I recommend creating all future js code (and updating old js
> > code) to have init functions with contents wrapped in the ready function. If
> > you don't do this, you'll find a great amount of your js causing fatal
> > errors and crashing the js execution.
>
> > I hope that this helps you out Mark.
>
> > Chris Jean
> >http://gaarai.com/
> >http://wp-roadmap.com/
>
> > Mark Cunningham wrote:
>
> >> I've been doing some testing of my plugin on Wordpress 2.8 beta 2. I
> >> am using the Wordpress built-in jQuery and jQuery tabs to generate
> >> tabbed interface to my plugins options. But on the upgrade to 2.8, the
> >> tabs no longer work any more. I've checked documentation for jQuery
> >> tabs, and I don't appear to be doing anything wrong. Has anyone else
> >> got jQuery tabs working on Wordpress 2.8?
>
> >> Thanks
> >> Mark
>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hack...@lists.automattic.com
> >http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> --http://thedeadone.nethttp://lostheroesrpg.comhttp://irishgamingwiki.com
> _______________________________________________
> wp-hackers mailing list
> wp-hack...@lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers- Zitierten Text ausblenden -
>
> - Zitierten Text anzeigen -
From mark.cunningham at gmail.com  Thu May 28 15:14:15 2009
From: mark.cunningham at gmail.com (Mark Cunningham)
Date: Thu May 28 15:14:30 2009
Subject: [wp-hackers] Re: How do you get jQuery tabs working in Wordpress 
	2.8?
In-Reply-To: <3f8be764-e19b-4f8d-8423-823a251523ae@37g2000yqp.googlegroups.com>
References: <ee3949160905280355g61b853f9x4d8df4e4c06b0564@mail.gmail.com>
	<4A1E7FA1.3080400@gaarai.com>
	<ee3949160905280624l7b9a7628nfe870a51e398d6b6@mail.gmail.com>
	<3f8be764-e19b-4f8d-8423-823a251523ae@37g2000yqp.googlegroups.com>
Message-ID: <ee3949160905280814k36629d12nf136a2bc4a3e4bd3@mail.gmail.com>

Hi Alex,

> with Jquery UI 1.7 , (which is part of WP 2.8, I need to change it in
> this way :
>
> jQuery('#slider').tabs({ fxFade: true, fxSpeed: 'fast' });

Ah! That was it. Thanks everyone for you're help.

Mark

2009/5/28 Alex Rabe <alex.cologne@googlemail.com>:
> I had a problem with this init :
>
> jQuery('#slider > ul').tabs({ fxFade: true, fxSpeed: 'fast' });
>
> with Jquery UI 1.7 , (which is part of WP 2.8, I need to change it in
> this way :
>
> jQuery('#slider').tabs({ fxFade: true, fxSpeed: 'fast' });
>
> Alex
>
>
> On 28 Mai, 15:24, Mark Cunningham <mark.cunning...@gmail.com> wrote:
>> Hi Gaarai,
>>
>> Thanks for taking the time to reply.
>>
>> > If you have any js code that relies on scripts that are loaded in the
>> > footer, you need to ensure that you wrap that code and tell it to not run
>> > until the document has fully loaded. This is easily done by wrapping the
>> > code in a jQuery(document).ready function. For example:
>>
>> > ? jQuery(document).ready( function() {
>> > ? ? ? // Code that relies on scripts loaded in the footer.
>> > ? } );
>>
>> I was unaware of the change to have the scripts loaded in the footer,
>> but luckily I was already implementing my initialisation this way.
>>
>> > One problem that I've already come across while doing this is that wrapping
>> > functions in that segment of code causes those functions to not be
>> > accessible to other js code that originates from outside that ready
>> > function. The solution I've created to work around this is to use an
>> > initializing function and use the ready function inside it. For example:
>>
>> I tried this and it has made no difference. I'm not sure if that's the
>> source of the problem.
>>
>> Thanks
>> Mark
>>
>> 2009/5/28 Gaarai <gaa...@gaarai.com>:
>>
>>
>>
>>
>>
>> > I haven't run into your specific problem, but I believe that I know the
>> > cause. 2.8 has split the scripts into two groups: those that are added in
>> > the header and those that are added in the footer. jquery-ui-tabs is one of
>> > the many scripts that now loads in the footer. View the source, scroll to
>> > the bottom, and you'll see what I am talking about.
>>
>> > If you have any js code that relies on scripts that are loaded in the
>> > footer, you need to ensure that you wrap that code and tell it to not run
>> > until the document has fully loaded. This is easily done by wrapping the
>> > code in a jQuery(document).ready function. For example:
>>
>> > ? jQuery(document).ready( function() {
>> > ? ? ? // Code that relies on scripts loaded in the footer.
>> > ? } );
>>
>> > One problem that I've already come across while doing this is that wrapping
>> > functions in that segment of code causes those functions to not be
>> > accessible to other js code that originates from outside that ready
>> > function. The solution I've created to work around this is to use an
>> > initializing function and use the ready function inside it. For example:
>>
>> > ? function init_my_script() {
>> > ? ? ? jQuery(document).ready( function() {
>> > ? ? ? ? ? create_ui_tabs();
>> > ? ? ? ? ? update_my_links();
>> > ? ? ? ? ? // etc
>> > ? ? ? } );
>> > ? }
>>
>> > ? function create_ui_tabs() {
>> > ? ? ? // Do stuff
>> > ? }
>>
>> > ? function update_my_links() {
>> > ? ? ? // Do stuff
>> > ? }
>>
>> > ? init_my_script();
>>
>> > This way you make your code run after all the scripts are loaded while also
>> > allowing the key functions to be accessible from other code.
>>
>> > If you want to find out which scripts are loaded in the footer, check out
>> > the wp-includes/script-loader.php file of the latest trunk. There is a
>> > comment above the wp_default_scripts function that indicates which ones are
>> > loaded in the footer. You'll find that most of the scripts are now loaded in
>> > the footer. So, I recommend creating all future js code (and updating old js
>> > code) to have init functions with contents wrapped in the ready function. If
>> > you don't do this, you'll find a great amount of your js causing fatal
>> > errors and crashing the js execution.
>>
>> > I hope that this helps you out Mark.
>>
>> > Chris Jean
>> >http://gaarai.com/
>> >http://wp-roadmap.com/
>>
>> > Mark Cunningham wrote:
>>
>> >> I've been doing some testing of my plugin on Wordpress 2.8 beta 2. I
>> >> am using the Wordpress built-in jQuery and jQuery tabs to generate
>> >> tabbed interface to my plugins options. But on the upgrade to 2.8, the
>> >> tabs no longer work any more. I've checked documentation for jQuery
>> >> tabs, and I don't appear to be doing anything wrong. Has anyone else
>> >> got jQuery tabs working on Wordpress 2.8?
>>
>> >> Thanks
>> >> Mark
>>
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hack...@lists.automattic.com
>> >http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>> --http://thedeadone.nethttp://lostheroesrpg.comhttp://irishgamingwiki.com
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hack...@lists.automattic.comhttp://lists.automattic.com/mailman/listinfo/wp-hackers- Zitierten Text ausblenden -
>>
>> - Zitierten Text anzeigen -
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://thedeadone.net
http://lostheroesrpg.com
http://irishgamingwiki.com
From casey.bisson at gmail.com  Thu May 28 15:09:59 2009
From: casey.bisson at gmail.com (Casey Bisson)
Date: Thu May 28 21:13:45 2009
Subject: [wp-hackers] when comments aren't enough...a generic
	user-response mechanism?
In-Reply-To: <349fe48b0905270456j65bcd5bav539cd92547b52f5e@mail.gmail.com>
References: <B7F03C0B-F28B-4DA4-802C-70046A9FDEAF@gmail.com>
	<349fe48b0905270456j65bcd5bav539cd92547b52f5e@mail.gmail.com>
Message-ID: <5218A735-C3F7-45F5-B9B2-A6083ED9B3FA@gmail.com>


On May 27, 2009, at 7:56 AM, scribu wrote:

> I like the ideea of making WordPress easier to extend in this
> direction, but I don't think that using the wp_comments table is
> always the best option - I'm thinking of community tagging when I say
> that.


Community tagging is a huge part of what I have in mind[1]. My focus  
is on establishing a common workflow and API that leverages what  
already works about comments (the comment moderation process,  
especially).

Though I suggested a column could be added to the wp_comments table, I  
much prefer creating a comments meta table that would related to  
wp_comments the same way wp_postmeta relates to wp_posts. wp_comments  
already stores the identity of the person submitting a comment, why  
not leverage that and the functions that depend on it for other user  
responses?

Taking the example of a user submitted tag, I imagine a plugin would  
intercept the input around the time of the preprocess_comment hook.  
The plugin would detect the presence of a tag and add another action  
for after the comment is stored in the database and a comment_ID is  
created. At that point, the plugin would save the tag(s) to the  
wp_commentmeta table, and the row in the wp_comments table may have an  
empty comment_content field. The meta_key for the data might be  
something like 'my_plug_user_tags' and the meta_value could be a  
serialized array of the tags and associated taxonomies submitted by  
the user.

If approved, the plugin could add the tag to the appropriate taxonomy  
for that post, or the plugin might instead only to add the tag to the  
post after some number of users have suggested the same tag.

The same workflow could also work for data that doesn't fit WP's  
taxonomy model. Users could also submit geographic locations via a map  
UI. The plugin that uses that data would have to manage a table to  
index the spatial data on its own, but the process for user input and  
moderation would be identical.

This process already sort of works for situations where the user  
response includes some text in the comment field; I can find a few  
examples of people adding additional fields to the comment form. The  
biggest challenge, aside from needing to put some content into the  
comment text field, is that the comment moderation tools inside WP  
aren't quite extensible enough to manage the input.


[1]: User tagging is one thing, I also need to allow users to  
(optionally) specify a taxonomy for the tag. The link below shows a  
photo archive where we'd like to allow users to suggest names, places,  
or other more specific data than simple tags (which would also be  
welcome):
http://archives.colby-sawyer.edu/browse/


--Casey

http://maisonbisson.com/
http://about.scriblio.net/


From alan at verselogic.net  Fri May 29 01:56:36 2009
From: alan at verselogic.net (Alan Castonguay)
Date: Fri May 29 01:56:51 2009
Subject: [wp-hackers] Calendar generating bad links to pages
In-Reply-To: <4A1DF0F2.60407@yahoo.com>
References: <4A1DD858.4050209@yahoo.com>
	<33D7C320-4804-4B8A-A2A1-11895E1BB7F9@verselogic.net>
	<4A1DF0F2.60407@yahoo.com>
Message-ID: <BB4C87B8-9DBD-4FCF-9B14-9D221DAA694B@verselogic.net>

Yes. That plugin does -not- filter to only post_type='post', and  
displays calendar entries for days with anything in the posts table  
with a post_status of Published. By default that's posts & pages. You  
could ask Eric to fix that.

Alan J Castonguay


On May 27, 2009, at 10:03 PM, RePost wrote:

> Alan Castonguay wrote:
>> 2.7.1's calendar is generated in http://core.trac.wordpress.org/browser/tags/2.7.1/wp-includes/general-template.php 
>>  but as far as I see all the SQL is guarded with
>>   AND post_type = 'post' AND post_status = 'publish'
>>
>> It might be caused by a plugin filtering the sql, or replacing the  
>> calendar wholesale. I don't see this behavior on 2.8-bleeding-edge
>>
>> Alan J Castonguay
>>
>>
>>
>> On May 27, 2009, at 8:18 PM, RePost wrote:
>>
>>> I've found through checking my Google Webmaster stats that the  
>>> WordPress (2.7.1) calendar is attempting to create links to pages  
>>> as well as blog entries, resulting in 404 errors.
>>>
>>> For example, WP shows that I generated my "About" page on 11-24-08  
>>> and my "Contact" pages on 11-26-08. The November calendar is  
>>> treating those pages like blog entries and attempting to link to  
>>> them.
>>>
>>> To test these links, see the calendar at the bottom of the middle  
>>> column:
>>> http://bit.ly/n0en4
>>>
>
> Alan, I am using the mw-calendar plugin, detailed here:
> http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.html
>
> The script is here:
> http://meyerweb.com/eric/tools/wordpress/mw_get_calendar.phpf
>
> Does this provide any clues?
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From ab006 at chebucto.ns.ca  Sat May 30 01:41:16 2009
From: ab006 at chebucto.ns.ca (Bernard D. Tremblay)
Date: Sat May 30 01:41:27 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
Message-ID: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>

*Yes, this is probably the wrong list. But I couldn't think of a better place.*

I was surprised to see this in the Personal Server section of DreamHost's
(always humorous) newsletter:

====
And, if you want to use WordPress MU (Multi-User edition), we're going
to have to ask you do it on DreamHost PS .. it's just a CRAZY resource
hog and it looks like the most common thing people use it for is shady
search engine shenanigans anyway!
====

I happen to have installed MU on DreamHost. I haven't been asked to remove it,
but it's very idle ... little more than a place-holder at the moment ... and
I'm not going to rouse sleeping dogs by inquiring ... but in any case this
isn't positive ink.

ben


-- 
  |---------------                                  ---------------|
  |  Confusion is a kinky form of enlightenment, clarity in drag.  |
  |  Uncertainty is certainty that has stepped on a banana peel.   |
  |  Negativity is brilliance competing with itself.               |
  |------------------------                 Sherab Chodzin Kohn ---|
From fhelmschrott at gmail.com  Sun May 31 07:18:59 2009
From: fhelmschrott at gmail.com (Frank Helmschrott)
Date: Sun May 31 07:19:13 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>
Message-ID: <360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com>

How senseless. I can't imagine how WPMU itself could use so much more
resources than WP. Of course it uses more when you run 1000 blogs with
it, but i thinkg that wouldn't be easier with 1000 installations of WP
:-)

2009/5/30 Bernard D. Tremblay <ab006@chebucto.ns.ca>:
> *Yes, this is probably the wrong list. But I couldn't think of a better place.*
>
> I was surprised to see this in the Personal Server section of DreamHost's
> (always humorous) newsletter:
>
> ====
> And, if you want to use WordPress MU (Multi-User edition), we're going
> to have to ask you do it on DreamHost PS .. it's just a CRAZY resource
> hog and it looks like the most common thing people use it for is shady
> search engine shenanigans anyway!
> ====
>
> I happen to have installed MU on DreamHost. I haven't been asked to remove it,
> but it's very idle ... little more than a place-holder at the moment ... and
> I'm not going to rouse sleeping dogs by inquiring ... but in any case this
> isn't positive ink.
>
> ben
>
>
> --
> ?|--------------- ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?---------------|
> ?| ?Confusion is a kinky form of enlightenment, clarity in drag. ?|
> ?| ?Uncertainty is certainty that has stepped on a banana peel. ? |
> ?| ?Negativity is brilliance competing with itself. ? ? ? ? ? ? ? |
> ?|------------------------ ? ? ? ? ? ? ? ? Sherab Chodzin Kohn ---|
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Frank
From joost at yoast.com  Sun May 31 07:33:34 2009
From: joost at yoast.com (Joost de Valk)
Date: Sun May 31 07:34:23 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>
	<360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com>
Message-ID: <82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>

Well if you use it to "auto generate" massive amounts of "content",  
it's obviously a resource hog.

I guess this "trusted" partner of WordPress (they're listed on the  
wp.org hosting page) would rather blame their partners product than  
their own spam control team. With friends like that, who needs enemies?


On 31 mei 2009, at 09:18, Frank Helmschrott <fhelmschrott@gmail.com>  
wrote:

> How senseless. I can't imagine how WPMU itself could use so much more
> resources than WP. Of course it uses more when you run 1000 blogs with
> it, but i thinkg that wouldn't be easier with 1000 installations of WP
> :-)
>
> 2009/5/30 Bernard D. Tremblay <ab006@chebucto.ns.ca>:
>> *Yes, this is probably the wrong list. But I couldn't think of a  
>> better place.*
>>
>> I was surprised to see this in the Personal Server section of  
>> DreamHost's
>> (always humorous) newsletter:
>>
>> ====
>> And, if you want to use WordPress MU (Multi-User edition), we're  
>> going
>> to have to ask you do it on DreamHost PS .. it's just a CRAZY  
>> resource
>> hog and it looks like the most common thing people use it for is  
>> shady
>> search engine shenanigans anyway!
>> ====
>>
>> I happen to have installed MU on DreamHost. I haven't been asked to  
>> remove it,
>> but it's very idle ... little more than a place-holder at the  
>> moment ... and
>> I'm not going to rouse sleeping dogs by inquiring ... but in any  
>> case this
>> isn't positive ink.
>>
>> ben
>>
>>
>> --
>>  |---------------                                  ---------------|
>>  |  Confusion is a kinky form of enlightenment, clarity in drag.  |
>>  |  Uncertainty is certainty that has stepped on a banana peel.   |
>>  |  Negativity is brilliance competing with itself.               |
>>  |------------------------                 Sherab Chodzin Kohn ---|
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> -- 
> Frank
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From fhelmschrott at gmail.com  Sun May 31 07:47:05 2009
From: fhelmschrott at gmail.com (Frank Helmschrott)
Date: Sun May 31 07:47:16 2009
Subject: [wp-hackers] Troubling with jQuery (UI/Slider) and/or
	wp_enqueue_script()
Message-ID: <360919220905310047j1b822751ueb44317381cec02f@mail.gmail.com>

Hi,

i'm dealing with my first completely self written plugin for 2 days
now (hooray).

After i found everything quite simple i've already spent some hours
now fiddling around to get the jQuery UI Sliders running on my plugins
option page. I'm trying to completely do this via wp_enqueue_script
and without adding some manual <script src...> stuff - i think that's
the way it should work.

Here's the method that enqueues the important stuff:

			function register_admin_scripts()
			{
				wp_enqueue_script('jquery-ui-slider',
$this->plugin_url.'js/ui.slider.js',array('jquery','jquery-ui-core'),'1.7.1');
				wp_enqueue_script('men-at-work',
$this->plugin_url.'men-at-work.js',
array('jquery','farbtastic'),'1.0');
			}

it get's called via init action which basically works.

That's what the output source looks like:

<script type='text/javascript'
src='http://.../wp-admin/load-scripts.php?c=1&amp;load=jquery,jquery-ui-core,farbtastic,utils&amp;ver=fbed8cd2dbd177766385eb010c7aaea1'></script>
<script type='text/javascript'
src='http://.../wp-content/plugins/men-at-work/js/ui.slider.js?ver=1.7.1'></script>
<script type='text/javascript'
src='http://.../wp-content/plugins/men-at-work/men-at-work.js?ver=1.0'></script>

jQuery basically works, Farbtastic color picker works. What doesn't
work is the slider. I get the following error through firebug:

F is undefined
http://.../wp-admin/load-scripts.php?c=1&load=jquery,jquery-ui-core,farbtastic,utils&ver=fbed8cd2dbd177766385eb010c7aaea1
Line 12

Line12 is the basic jQuery stuff.

Two questions:

- Does anybody now where this error may come from? I guess the loading
order should be ok

the second is a more basic one:

- Why do jquery-ui-slider and my script not get loaded via the
load-scripts.php? Is there any way to get that working (not really a
matter in this case but could be a performance win on the public
pages).

Thanks for helping!

-- 
Frank
From lists at freshpacific.co.nz  Sun May 31 07:53:30 2009
From: lists at freshpacific.co.nz (Anthony Cole)
Date: Sun May 31 07:54:49 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>
	<360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com>
	<82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>
Message-ID: <CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz>

Not to mention that DreamHost used to always give out a year of free  
hosting at WordCamp SF (not sure if it's still on as I haven't gone in  
two years).

I've never liked them, and this just solidifies that point. You can't  
run a business like that and expect to keep good customers. It's  
either a really good marketing gimmick to get stupid people to move  
onto their more expensive products (and raise profit margins) or the  
absolute stupidity of whoever is running DreamHost.

I wonder what they're going to do now that MU and core are merging. In  
theory, any WordPress install would have to be put on a VPS.

-ac

On 31/05/2009, at 7:33 PM, Joost de Valk wrote:

> Well if you use it to "auto generate" massive amounts of "content",  
> it's obviously a resource hog.
>
> I guess this "trusted" partner of WordPress (they're listed on the  
> wp.org hosting page) would rather blame their partners product than  
> their own spam control team. With friends like that, who needs  
> enemies?
>
>
> On 31 mei 2009, at 09:18, Frank Helmschrott <fhelmschrott@gmail.com>  
> wrote:
>
>> How senseless. I can't imagine how WPMU itself could use so much more
>> resources than WP. Of course it uses more when you run 1000 blogs  
>> with
>> it, but i thinkg that wouldn't be easier with 1000 installations of  
>> WP
>> :-)
>>
>> 2009/5/30 Bernard D. Tremblay <ab006@chebucto.ns.ca>:
>>> *Yes, this is probably the wrong list. But I couldn't think of a  
>>> better place.*
>>>
>>> I was surprised to see this in the Personal Server section of  
>>> DreamHost's
>>> (always humorous) newsletter:
>>>
>>> ====
>>> And, if you want to use WordPress MU (Multi-User edition), we're  
>>> going
>>> to have to ask you do it on DreamHost PS .. it's just a CRAZY  
>>> resource
>>> hog and it looks like the most common thing people use it for is  
>>> shady
>>> search engine shenanigans anyway!
>>> ====
>>>
>>> I happen to have installed MU on DreamHost. I haven't been asked  
>>> to remove it,
>>> but it's very idle ... little more than a place-holder at the  
>>> moment ... and
>>> I'm not going to rouse sleeping dogs by inquiring ... but in any  
>>> case this
>>> isn't positive ink.
>>>
>>> ben
>>>
>>>
>>> --
>>> |---------------                                  ---------------|
>>> |  Confusion is a kinky form of enlightenment, clarity in drag.  |
>>> |  Uncertainty is certainty that has stepped on a banana peel.   |
>>> |  Negativity is brilliance competing with itself.               |
>>> |------------------------                 Sherab Chodzin Kohn ---|
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>>
>>
>> -- 
>> Frank
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From geniosity at gmail.com  Sun May 31 12:32:45 2009
From: geniosity at gmail.com (James)
Date: Sun May 31 12:33:31 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca> 
	<360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com> 
	<82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>
	<CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz>
Message-ID: <513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com>

Any chance you could point to more info regarding MU and core merging? This
sounds cool but it's the first I've heard of it...

On Sun, May 31, 2009 at 9:53 AM, Anthony Cole <lists@freshpacific.co.nz>wrote:

> Not to mention that DreamHost used to always give out a year of free
> hosting at WordCamp SF (not sure if it's still on as I haven't gone in two
> years).
>
> I've never liked them, and this just solidifies that point. You can't run a
> business like that and expect to keep good customers. It's either a really
> good marketing gimmick to get stupid people to move onto their more
> expensive products (and raise profit margins) or the absolute stupidity of
> whoever is running DreamHost.
>
> I wonder what they're going to do now that MU and core are merging. In
> theory, any WordPress install would have to be put on a VPS.
>
> -ac
>
>
> On 31/05/2009, at 7:33 PM, Joost de Valk wrote:
>
>  Well if you use it to "auto generate" massive amounts of "content", it's
>> obviously a resource hog.
>>
>> I guess this "trusted" partner of WordPress (they're listed on the wp.orghosting page) would rather blame their partners product than their own spam
>> control team. With friends like that, who needs enemies?
>>
>>
>> On 31 mei 2009, at 09:18, Frank Helmschrott <fhelmschrott@gmail.com>
>> wrote:
>>
>>  How senseless. I can't imagine how WPMU itself could use so much more
>>> resources than WP. Of course it uses more when you run 1000 blogs with
>>> it, but i thinkg that wouldn't be easier with 1000 installations of WP
>>> :-)
>>>
>>> 2009/5/30 Bernard D. Tremblay <ab006@chebucto.ns.ca>:
>>>
>>>> *Yes, this is probably the wrong list. But I couldn't think of a better
>>>> place.*
>>>>
>>>> I was surprised to see this in the Personal Server section of
>>>> DreamHost's
>>>> (always humorous) newsletter:
>>>>
>>>> ====
>>>> And, if you want to use WordPress MU (Multi-User edition), we're going
>>>> to have to ask you do it on DreamHost PS .. it's just a CRAZY resource
>>>> hog and it looks like the most common thing people use it for is shady
>>>> search engine shenanigans anyway!
>>>> ====
>>>>
>>>> I happen to have installed MU on DreamHost. I haven't been asked to
>>>> remove it,
>>>> but it's very idle ... little more than a place-holder at the moment ...
>>>> and
>>>> I'm not going to rouse sleeping dogs by inquiring ... but in any case
>>>> this
>>>> isn't positive ink.
>>>>
>>>> ben
>>>>
>>>>
>>>> --
>>>> |---------------                                  ---------------|
>>>> |  Confusion is a kinky form of enlightenment, clarity in drag.  |
>>>> |  Uncertainty is certainty that has stepped on a banana peel.   |
>>>> |  Negativity is brilliance competing with itself.               |
>>>> |------------------------                 Sherab Chodzin Kohn ---|
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>>
>>>>
>>>
>>>
>>> --
>>> Frank
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
<http://www.geniosity.co.za/>
From fhelmschrott at gmail.com  Sun May 31 12:38:44 2009
From: fhelmschrott at gmail.com (Frank Helmschrott)
Date: Sun May 31 12:43:33 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>
	<360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com>
	<82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>
	<CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz>
	<513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com>
Message-ID: <4A016EBC-E660-46B0-BEA7-8E8ED1957F37@gmail.com>

> Any chance you could point to more info regarding MU and core  
> merging? This
> sounds cool but it's the first I've heard of it...


Look at google and twitter - it's an emerging topic today ;-)

http://technosailor.com/2009/05/30/wordcamp-sf-announcement-wordpress-and-wordpress-mu-to-merge/
http://www.geekword.net/wordpress-and-wordpress-mu-are-merging/

Matt talked about it at WordCamp SF.

Best,
Frank


From geniosity at gmail.com  Sun May 31 12:52:40 2009
From: geniosity at gmail.com (James)
Date: Sun May 31 12:53:15 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <4A016EBC-E660-46B0-BEA7-8E8ED1957F37@gmail.com>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca> 
	<360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com> 
	<82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>
	<CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz> 
	<513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com> 
	<4A016EBC-E660-46B0-BEA7-8E8ED1957F37@gmail.com>
Message-ID: <513d59820905310552m46a49fb8s82d873ff730a3261@mail.gmail.com>

Wow, thanks. All this happening while I sit here installing WPMU!
Thanks for the links.

On Sun, May 31, 2009 at 2:38 PM, Frank Helmschrott
<fhelmschrott@gmail.com>wrote:

> Any chance you could point to more info regarding MU and core merging? This
>> sounds cool but it's the first I've heard of it...
>>
>
>
> Look at google and twitter - it's an emerging topic today ;-)
>
>
> http://technosailor.com/2009/05/30/wordcamp-sf-announcement-wordpress-and-wordpress-mu-to-merge/
> http://www.geekword.net/wordpress-and-wordpress-mu-are-merging/
>
> Matt talked about it at WordCamp SF.
>
> Best,
>
> Frank
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
<http://www.geniosity.co.za/>
From niladam at gmail.com  Sun May 31 13:55:06 2009
From: niladam at gmail.com (madalin)
Date: Sun May 31 13:55:21 2009
Subject: [wp-hackers] permalinks ?
Message-ID: <df809b110905310655y3a9c28c2xc07bb32f417af494@mail.gmail.com>

Hello,

I successfully installed a redirection plugin
(http://scott.yang.id.au/code/permalink-redirect/) and got the
redirection to work. I recently moved a site from /blog to the root
directory. The redirections from the OLD permalink structure works
flawlessly to the NEW permalink structure. The old was:
/%year%/%monthnum%/%day%/%postname%/ and the new is /%postname%/

However, if i create a new page and try to view it i get a 404 and i'm
not really sure what's wrong. What should i do ?

P.S: In the /blog directory i placed a .htaccess with the following lines:

Options +FollowSymLinks
RewriteEngine on
RewriteRule (.*) http://steamykitchen.com/$1 [R=301,L]


Thanks!

-- 
Regards,
madalin
http://madalin.eu
From scribu at gmail.com  Sun May 31 14:56:19 2009
From: scribu at gmail.com (scribu)
Date: Sun May 31 14:56:35 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <513d59820905310552m46a49fb8s82d873ff730a3261@mail.gmail.com>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>
	<360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com>
	<82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>
	<CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz>
	<513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com>
	<4A016EBC-E660-46B0-BEA7-8E8ED1957F37@gmail.com>
	<513d59820905310552m46a49fb8s82d873ff730a3261@mail.gmail.com>
Message-ID: <349fe48b0905310756h1f2a30ddqc1c75a53491e85fd@mail.gmail.com>

I saw a do_action('muplugins_loaded') hook and didn't know what was up with
that. So yeah, thanks for the links.


-- 
http://scribu.net
From wp-hackers at striderweb.com  Sun May 31 15:05:01 2009
From: wp-hackers at striderweb.com (Stephen Rider)
Date: Sun May 31 15:05:26 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <349fe48b0905310756h1f2a30ddqc1c75a53491e85fd@mail.gmail.com>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>
	<360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com>
	<82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>
	<CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz>
	<513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com>
	<4A016EBC-E660-46B0-BEA7-8E8ED1957F37@gmail.com>
	<513d59820905310552m46a49fb8s82d873ff730a3261@mail.gmail.com>
	<349fe48b0905310756h1f2a30ddqc1c75a53491e85fd@mail.gmail.com>
Message-ID: <D7EEB93C-B237-4CA6-A2F3-74C010D590C8@striderweb.com>

Yeah, I caught that too.  Regular WP now loads MU plugins.

Which was really handy when I wanted to figure out a way to load some  
hooks *before* regular plugins loaded.  "mu-plugins" folder to the  
rescue! :)

On May 31, 2009, at 9:56 AM, scribu wrote:

> I saw a do_action('muplugins_loaded') hook and didn't know what was  
> up with
> that. So yeah, thanks for the links.

From bunnylists at gmail.com  Sun May 31 15:18:13 2009
From: bunnylists at gmail.com (Stephanie Booth)
Date: Sun May 31 15:18:47 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <D7EEB93C-B237-4CA6-A2F3-74C010D590C8@striderweb.com>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca> 
	<360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com> 
	<82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>
	<CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz> 
	<513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com> 
	<4A016EBC-E660-46B0-BEA7-8E8ED1957F37@gmail.com>
	<513d59820905310552m46a49fb8s82d873ff730a3261@mail.gmail.com> 
	<349fe48b0905310756h1f2a30ddqc1c75a53491e85fd@mail.gmail.com> 
	<D7EEB93C-B237-4CA6-A2F3-74C010D590C8@striderweb.com>
Message-ID: <5cdeb9b20905310818j2e6e6947yc610a6ffb8b49bfd@mail.gmail.com>

Not completely related to MU, but I was told by DH at some point that
I should move from shared to dedicated hosting for my blog
climbtothestars.org, because it was being too greedy in ressources
(about 2000 visitors a day at its peak, but multiple plugins). They
actually renamed tables in my database a couple of times because of
this.

Old history, but I like to point to it to remind people that DH's "WP
friendliness" has limits which can easily be reached.

Cheers

Steph
--
Espace Coworking Lausanne: http://eclau.ch
Subscribe to my newsletter: http://groups.google.com/group/sbooth
web: http://stephanie-booth.com | blog: http://climbtothestars.org
skype: steph-booth | cell: +41 78 625 44 74 | twitter: stephtara |
AIM: Gummywabbit
geotag: Lausanne, CH (GMT+1) | For the rest... Google me!




On Sun, May 31, 2009 at 5:05 PM, Stephen Rider
<wp-hackers@striderweb.com> wrote:
> Yeah, I caught that too. ?Regular WP now loads MU plugins.
>
> Which was really handy when I wanted to figure out a way to load some hooks
> *before* regular plugins loaded. ?"mu-plugins" folder to the rescue! :)
>
> On May 31, 2009, at 9:56 AM, scribu wrote:
>
>> I saw a do_action('muplugins_loaded') hook and didn't know what was up
>> with
>> that. So yeah, thanks for the links.
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
From niladam at gmail.com  Sun May 31 15:20:05 2009
From: niladam at gmail.com (madalin)
Date: Sun May 31 15:20:19 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <5cdeb9b20905310818j2e6e6947yc610a6ffb8b49bfd@mail.gmail.com>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>
	<360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com>
	<82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>
	<CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz>
	<513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com>
	<4A016EBC-E660-46B0-BEA7-8E8ED1957F37@gmail.com>
	<513d59820905310552m46a49fb8s82d873ff730a3261@mail.gmail.com>
	<349fe48b0905310756h1f2a30ddqc1c75a53491e85fd@mail.gmail.com>
	<D7EEB93C-B237-4CA6-A2F3-74C010D590C8@striderweb.com>
	<5cdeb9b20905310818j2e6e6947yc610a6ffb8b49bfd@mail.gmail.com>
Message-ID: <df809b110905310820u2369cb1eyeca981fb8806e665@mail.gmail.com>

Dreamhost sucks. Been there, done that, got the shirt to prove it.



On Sun, May 31, 2009 at 6:18 PM, Stephanie Booth <bunnylists@gmail.com> wrote:
> Not completely related to MU, but I was told by DH at some point that
> I should move from shared to dedicated hosting for my blog
> climbtothestars.org, because it was being too greedy in ressources
> (about 2000 visitors a day at its peak, but multiple plugins). They
> actually renamed tables in my database a couple of times because of
> this.
>
> Old history, but I like to point to it to remind people that DH's "WP
> friendliness" has limits which can easily be reached.
>
> Cheers
>
> Steph
> --
> Espace Coworking Lausanne: http://eclau.ch
> Subscribe to my newsletter: http://groups.google.com/group/sbooth
> web: http://stephanie-booth.com | blog: http://climbtothestars.org
> skype: steph-booth | cell: +41 78 625 44 74 | twitter: stephtara |
> AIM: Gummywabbit
> geotag: Lausanne, CH (GMT+1) | For the rest... Google me!
>
>
>
>
> On Sun, May 31, 2009 at 5:05 PM, Stephen Rider
> <wp-hackers@striderweb.com> wrote:
>> Yeah, I caught that too. ?Regular WP now loads MU plugins.
>>
>> Which was really handy when I wanted to figure out a way to load some hooks
>> *before* regular plugins loaded. ?"mu-plugins" folder to the rescue! :)
>>
>> On May 31, 2009, at 9:56 AM, scribu wrote:
>>
>>> I saw a do_action('muplugins_loaded') hook and didn't know what was up
>>> with
>>> that. So yeah, thanks for the links.
>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Cu drag,
madalin
http://madalin.eu
From scribu at gmail.com  Sun May 31 15:53:54 2009
From: scribu at gmail.com (scribu)
Date: Sun May 31 15:54:11 2009
Subject: [wp-hackers] permalinks ?
In-Reply-To: <df809b110905310655y3a9c28c2xc07bb32f417af494@mail.gmail.com>
References: <df809b110905310655y3a9c28c2xc07bb32f417af494@mail.gmail.com>
Message-ID: <349fe48b0905310853l12ce5ce7r2f4c9ce97f6350e9@mail.gmail.com>

Maybe it's the rewrite base:

RewriteRule . /index.php [L]

-- 
http://scribu.net
From niladam at gmail.com  Sun May 31 15:57:05 2009
From: niladam at gmail.com (madalin)
Date: Sun May 31 15:57:23 2009
Subject: [wp-hackers] permalinks ?
In-Reply-To: <349fe48b0905310853l12ce5ce7r2f4c9ce97f6350e9@mail.gmail.com>
References: <df809b110905310655y3a9c28c2xc07bb32f417af494@mail.gmail.com>
	<349fe48b0905310853l12ce5ce7r2f4c9ce97f6350e9@mail.gmail.com>
Message-ID: <df809b110905310857q425cf269x10bd9db2364e3f17@mail.gmail.com>

The rule is there and it's working as it should as far as i can tell...

On Sun, May 31, 2009 at 6:53 PM, scribu <scribu@gmail.com> wrote:
> Maybe it's the rewrite base:
>
> RewriteRule . /index.php [L]
>
> --
> http://scribu.net
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Cu drag,
madalin
http://madalin.eu
From mikeschinkel at newclarity.net  Sun May 31 18:47:01 2009
From: mikeschinkel at newclarity.net (mikeschinkel@newclarity.net)
Date: Sun May 31 18:54:22 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <df809b110905310820u2369cb1eyeca981fb8806e665@mail.gmail.com>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>
	<360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com>
	<82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>
	<CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz>
	<513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com>
	<4A016EBC-E660-46B0-BEA7-8E8ED1957F37@gmail.com>
	<513d59820905310552m46a49fb8s82d873ff730a3261@mail.gmail.com>
	<349fe48b0905310756h1f2a30ddqc1c75a53491e85fd@mail.gmail.com>
	<D7EEB93C-B237-4CA6-A2F3-74C010D590C8@striderweb.com>
	<5cdeb9b20905310818j2e6e6947yc610a6ffb8b49bfd@mail.gmail.com>
	<df809b110905310820u2369cb1eyeca981fb8806e665@mail.gmail.com>
Message-ID: <EMEWEMEW2_DELIMl4UDl2fd709f00908a8e67f3e5bb,
	mikeschinkel@newclarity.net, 3D2FA971-1A39-4E9C-9D0D>

As an alternate to DreamHost I've been on asmallorange.com for years  
and they are great. @timdorr on Twitter runs it. FWIW.

-Mike

On May 31, 2009, at 11:20 AM, madalin <niladam@gmail.com> wrote:

> Dreamhost sucks. Been there, done that, got the shirt to prove it.
>
>
>
> On Sun, May 31, 2009 at 6:18 PM, Stephanie Booth  
> <bunnylists@gmail.com> wrote:
>> Not completely related to MU, but I was told by DH at some point that
>> I should move from shared to dedicated hosting for my blog
>> climbtothestars.org, because it was being too greedy in ressources
>> (about 2000 visitors a day at its peak, but multiple plugins). They
>> actually renamed tables in my database a couple of times because of
>> this.
>>
>> Old history, but I like to point to it to remind people that DH's "WP
>> friendliness" has limits which can easily be reached.
>>
>> Cheers
>>
>> Steph
>> --
>> Espace Coworking Lausanne: http://eclau.ch
>> Subscribe to my newsletter: http://groups.google.com/group/sbooth
>> web: http://stephanie-booth.com | blog: http://climbtothestars.org
>> skype: steph-booth | cell: +41 78 625 44 74 | twitter: stephtara |
>> AIM: Gummywabbit
>> geotag: Lausanne, CH (GMT+1) | For the rest... Google me!
>>
>>
>>
>>
>> On Sun, May 31, 2009 at 5:05 PM, Stephen Rider
>> <wp-hackers@striderweb.com> wrote:
>>> Yeah, I caught that too.  Regular WP now loads MU plugins.
>>>
>>> Which was really handy when I wanted to figure out a way to load  
>>> some hooks
>>> *before* regular plugins loaded.  "mu-plugins" folder to the  
>>> rescue! :)
>>>
>>> On May 31, 2009, at 9:56 AM, scribu wrote:
>>>
>>>> I saw a do_action('muplugins_loaded') hook and didn't know what  
>>>> was up
>>>> with
>>>> that. So yeah, thanks for the links.
>>>
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> -- 
> Cu drag,
> madalin
> http://madalin.eu
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
From joost at yoast.com  Sun May 31 18:59:18 2009
From: joost at yoast.com (Joost de Valk)
Date: Sun May 31 19:01:39 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <EMEWEMEW2_DELIMl4UDl2fd709f00908a8e67f3e5bb,
	mikeschinkel@newclarity.net, 3D2FA971-1A39-4E9C-9D0D>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>	<360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com>	<82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>	<CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz>	<513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com>	<4A016EBC-E660-46B0-BEA7-8E8ED1957F37@gmail.com>	<513d59820905310552m46a49fb8s82d873ff730a3261@mail.gmail.com>	<349fe48b0905310756h1f2a30ddqc1c75a53491e85fd@mail.gmail.com>	<D7EEB93C-B237-4CA6-A2F3-74C010D590C8@striderweb.com>	<5cdeb9b20905310818j2e6e6947yc610a6ffb8b49bfd@mail.gmail.com>	<df809b110905310820u2369cb1eyeca981fb8806e665@mail.gmail.com>
	<EMEWEMEW2_DELIMl4UDl2fd709f00908a8e67f3e5bb,
	mikeschinkel@newclarity.net, 3D2FA971-1A39-4E9C-9D0D>
Message-ID: <4A22D386.5030205@yoast.com>

Same goes for WestHost, neither of them seem to be on the recommended 
hosting pages for WordPress though. Guess Automattic needs the affiliate 
income? :)

Best,
Joost

mikeschinkel@newclarity.net wrote:
> As an alternate to DreamHost I've been on asmallorange.com for years 
> and they are great. @timdorr on Twitter runs it. FWIW.
>
> -Mike
>
> On May 31, 2009, at 11:20 AM, madalin <niladam@gmail.com> wrote:
>
>> Dreamhost sucks. Been there, done that, got the shirt to prove it.
>>
>>
>>
>> On Sun, May 31, 2009 at 6:18 PM, Stephanie Booth 
>> <bunnylists@gmail.com> wrote:
>>> Not completely related to MU, but I was told by DH at some point that
>>> I should move from shared to dedicated hosting for my blog
>>> climbtothestars.org, because it was being too greedy in ressources
>>> (about 2000 visitors a day at its peak, but multiple plugins). They
>>> actually renamed tables in my database a couple of times because of
>>> this.
>>>
>>> Old history, but I like to point to it to remind people that DH's "WP
>>> friendliness" has limits which can easily be reached.
>>>
>>> Cheers
>>>
>>> Steph
>>> -- 
>>> Espace Coworking Lausanne: http://eclau.ch
>>> Subscribe to my newsletter: http://groups.google.com/group/sbooth
>>> web: http://stephanie-booth.com | blog: http://climbtothestars.org
>>> skype: steph-booth | cell: +41 78 625 44 74 | twitter: stephtara |
>>> AIM: Gummywabbit
>>> geotag: Lausanne, CH (GMT+1) | For the rest... Google me!
>>>
>>>
>>>
>>>
>>> On Sun, May 31, 2009 at 5:05 PM, Stephen Rider
>>> <wp-hackers@striderweb.com> wrote:
>>>> Yeah, I caught that too.  Regular WP now loads MU plugins.
>>>>
>>>> Which was really handy when I wanted to figure out a way to load 
>>>> some hooks
>>>> *before* regular plugins loaded.  "mu-plugins" folder to the 
>>>> rescue! :)
>>>>
>>>> On May 31, 2009, at 9:56 AM, scribu wrote:
>>>>
>>>>> I saw a do_action('muplugins_loaded') hook and didn't know what 
>>>>> was up
>>>>> with
>>>>> that. So yeah, thanks for the links. 
>>>>
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers 
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers 
>>
>>
>>
>> -- 
>> Cu drag,
>> madalin
>> http://madalin.eu
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 

-- 
*Joost de Valk*
SEO & Web Development (Magento & WordPress)
OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
E: joost@orangevalley.nl <mailto:joost@orangevalley.nl> - 
joost@yoast.com <mailto:joost@yoast.com>
T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
W: http://yoast.com/
From ozh at planetozh.com  Sun May 31 19:13:51 2009
From: ozh at planetozh.com (Ozh)
Date: Sun May 31 19:14:09 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <4A22D386.5030205@yoast.com>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>
	<CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz>
	<513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com>
	<4A016EBC-E660-46B0-BEA7-8E8ED1957F37@gmail.com>
	<513d59820905310552m46a49fb8s82d873ff730a3261@mail.gmail.com>
	<349fe48b0905310756h1f2a30ddqc1c75a53491e85fd@mail.gmail.com>
	<D7EEB93C-B237-4CA6-A2F3-74C010D590C8@striderweb.com>
	<5cdeb9b20905310818j2e6e6947yc610a6ffb8b49bfd@mail.gmail.com>
	<df809b110905310820u2369cb1eyeca981fb8806e665@mail.gmail.com>
	<4A22D386.5030205@yoast.com>
Message-ID: <ae81acd10905311213x2be11c85hb29cb83cb62fa7f6@mail.gmail.com>

</stopdiscussionabouthostingthxplz:)>



-- 
http://planetOzh.com ~ Blog and WordPress Stuff
http://FrenchFragFactory.net ~ Daily Quake News
From joelfisher at gmail.com  Sun May 31 19:52:56 2009
From: joelfisher at gmail.com (Joel Fisher)
Date: Sun May 31 19:53:22 2009
Subject: [wp-hackers] WPMU gets b*tch-slapped on DreamHost
In-Reply-To: <4A22D386.5030205@yoast.com>
References: <20090529194116.dwkq7lmk4kwgsss0@webmail.chebucto.ns.ca>
	<360919220905310018y234d9fe3jf4872588ffc2a3e@mail.gmail.com>
	<82F872EC-146F-4D7E-8F16-2D43F5236C9C@yoast.com>
	<CD6684AA-6F21-4D54-8864-0A1C7F4B793A@freshpacific.co.nz>
	<513d59820905310532v21e6de5ctcc3eca73bc3f489f@mail.gmail.com>
	<4A016EBC-E660-46B0-BEA7-8E8ED1957F37@gmail.com>
	<513d59820905310552m46a49fb8s82d873ff730a3261@mail.gmail.com>
	<349fe48b0905310756h1f2a30ddqc1c75a53491e85fd@mail.gmail.com>
	<D7EEB93C-B237-4CA6-A2F3-74C010D590C8@striderweb.com>
	<5cdeb9b20905310818j2e6e6947yc610a6ffb8b49bfd@mail.gmail.com>
	<df809b110905310820u2369cb1eyeca981fb8806e665@mail.gmail.com>
	<EMEWEMEW2_DELIMl4UDl2fd709f00908a8e67f3e5bb,
	mikeschinkel@newclarity.net,
	3D2FA971-1A39-4E9C-9D0D> <4A22D386.5030205@yoast.com>
Message-ID: <588C9305-248B-4953-AD80-433F18F1E7F3@gmail.com>

I am a hostgator fan.
Recommend it highly!

Sent from my iPhone

On May 31, 2009, at 2:59 PM, Joost de Valk <joost@yoast.com> wrote:

> Same goes for WestHost, neither of them seem to be on the  
> recommended hosting pages for WordPress though. Guess Automattic  
> needs the affiliate income? :)
>
> Best,
> Joost
>
> mikeschinkel@newclarity.net wrote:
>> As an alternate to DreamHost I've been on asmallorange.com for  
>> years and they are great. @timdorr on Twitter runs it. FWIW.
>>
>> -Mike
>>
>> On May 31, 2009, at 11:20 AM, madalin <niladam@gmail.com> wrote:
>>
>>> Dreamhost sucks. Been there, done that, got the shirt to prove it.
>>>
>>>
>>>
>>> On Sun, May 31, 2009 at 6:18 PM, Stephanie Booth <bunnylists@gmail.com 
>>> > wrote:
>>>> Not completely related to MU, but I was told by DH at some point  
>>>> that
>>>> I should move from shared to dedicated hosting for my blog
>>>> climbtothestars.org, because it was being too greedy in ressources
>>>> (about 2000 visitors a day at its peak, but multiple plugins). They
>>>> actually renamed tables in my database a couple of times because of
>>>> this.
>>>>
>>>> Old history, but I like to point to it to remind people that DH's  
>>>> "WP
>>>> friendliness" has limits which can easily be reached.
>>>>
>>>> Cheers
>>>>
>>>> Steph
>>>> -- 
>>>> Espace Coworking Lausanne: http://eclau.ch
>>>> Subscribe to my newsletter: http://groups.google.com/group/sbooth
>>>> web: http://stephanie-booth.com | blog: http://climbtothestars.org
>>>> skype: steph-booth | cell: +41 78 625 44 74 | twitter: stephtara |
>>>> AIM: Gummywabbit
>>>> geotag: Lausanne, CH (GMT+1) | For the rest... Google me!
>>>>
>>>>
>>>>
>>>>
>>>> On Sun, May 31, 2009 at 5:05 PM, Stephen Rider
>>>> <wp-hackers@striderweb.com> wrote:
>>>>> Yeah, I caught that too.  Regular WP now loads MU plugins.
>>>>>
>>>>> Which was really handy when I wanted to figure out a way to load  
>>>>> some hooks
>>>>> *before* regular plugins loaded.  "mu-plugins" folder to the  
>>>>> rescue! :)
>>>>>
>>>>> On May 31, 2009, at 9:56 AM, scribu wrote:
>>>>>
>>>>>> I saw a do_action('muplugins_loaded') hook and didn't know what  
>>>>>> was up
>>>>>> with
>>>>>> that. So yeah, thanks for the links.
>>>>>
>>>>> _______________________________________________
>>>>> wp-hackers mailing list
>>>>> wp-hackers@lists.automattic.com
>>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>> _______________________________________________
>>>> wp-hackers mailing list
>>>> wp-hackers@lists.automattic.com
>>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>>
>>>
>>> -- 
>>> Cu drag,
>>> madalin
>>> http://madalin.eu
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers@lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers@lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> -- 
> *Joost de Valk*
> SEO & Web Development (Magento & WordPress)
> OrangeValley <http://www.orangevalley.nl> & Yoast <http://yoast.com>
> E: joost@orangevalley.nl <mailto:joost@orangevalley.nl> - joost@yoast.com 
>  <mailto:joost@yoast.com>
> T: +31624555808 | @yoast <http://twitter.com/yoast> on Twitter
> W: http://yoast.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers@lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
