From dmitry at getmoxied.net  Mon Oct  1 19:23:23 2012
From: dmitry at getmoxied.net (Dmitry Tokmakov)
Date: Tue, 2 Oct 2012 03:23:23 +0800
Subject: [wp-hackers] previous and next post_link
Message-ID: <74B58F86-A81F-4608-A144-A5422CEDC212@getmoxied.net>

Hi all.

I'm using previous_post_link and next_post_link within custom post type in custom single template.

I have about hundred posts listed and ordered by date. When I'm trying to navigate to the next or prev post with links generated by those functions I get skip a lot of posts and just after 5 clicks I reach the end or beginning. 

Note: it works just fine for regular post type. 

Thank you in advance! 

Dmitry 
Moxie Media Group 

From mpw at taquiri.de  Tue Oct  2 13:53:10 2012
From: mpw at taquiri.de (=?ISO-8859-1?Q?=22Matthias_P=2E_W=FCrfl=22?=)
Date: Tue, 02 Oct 2012 15:53:10 +0200
Subject: [wp-hackers] Changing page permalink structure
In-Reply-To: <CA+vutv5ay7=+OWsz1ycNL0POriwcqwC9AH1QZt8GunnGG9crFg@mail.gmail.com>
References: <CA+vutv5ay7=+OWsz1ycNL0POriwcqwC9AH1QZt8GunnGG9crFg@mail.gmail.com>
Message-ID: <506AF1C6.1050801@taquiri.de>

From: Bryan Petty <bryan at ibaku.net>
Subject: Re: [wp-hackers] Changing page permalink structure
To: wp-hackers at lists.automattic.com

> This is interesting because while pages have the "permalinks" feature,
> and it would normally work as designed without any problems, it is
> partially broken with the decision to use parent page slugs in the URL
> for this reason.

Why not simply keep track of the changes of the URL? Save the old URL to 
a table and search this before giving a 404. Then send 301 instead of 404.

Storing only happens when changes to the URL are made. This does'nt 
happen often.
URLs are just small pieces of data - this won't fill your hdd
Querying this data only happens if an old URL is accessed

Gr??e, Matthias

From bryan at ibaku.net  Tue Oct  2 14:43:11 2012
From: bryan at ibaku.net (Bryan Petty)
Date: Tue, 2 Oct 2012 08:43:11 -0600
Subject: [wp-hackers] Changing page permalink structure
In-Reply-To: <506AF1C6.1050801@taquiri.de>
References: <CA+vutv5ay7=+OWsz1ycNL0POriwcqwC9AH1QZt8GunnGG9crFg@mail.gmail.com>
	<506AF1C6.1050801@taquiri.de>
Message-ID: <CAKB8V+qek5DrdtDjbrb1vR6KHjPud=Vp5MS2JQTJL=U9CKMTOw@mail.gmail.com>

On Tue, Oct 2, 2012 at 7:53 AM, "Matthias P. W?rfl" <mpw at taquiri.de> wrote:
> Why not simply keep track of the changes of the URL? Save the old URL to a
> table and search this before giving a 404. Then send 301 instead of 404.

Actually, I've looked into this more now, and realized that the latest
version of WordPress does actually redirect appropriately to the new
page structure when re-parenting happens. Also, I did already know
that when slugs change, the old one is still saved, and still works
(and redirects appropriately as well).

In fact, as long as the last slug in the URL is the current or an
older slug for a page, it doesn't matter what you specify as the
parent slugs, WordPress will automatically redirect appropriately,
even if those parent page slugs never existed.

So all of this should work perfectly fine already for what Benjamin
Lupu wants to do.

Regards,
Bryan Petty

From benjamin.lupu at gmail.com  Tue Oct  2 15:46:51 2012
From: benjamin.lupu at gmail.com (Benjamin Lupu)
Date: Tue, 2 Oct 2012 17:46:51 +0200
Subject: [wp-hackers] Changing page permalink structure
In-Reply-To: <CAKB8V+qek5DrdtDjbrb1vR6KHjPud=Vp5MS2JQTJL=U9CKMTOw@mail.gmail.com>
References: <CA+vutv5ay7=+OWsz1ycNL0POriwcqwC9AH1QZt8GunnGG9crFg@mail.gmail.com>
	<506AF1C6.1050801@taquiri.de>
	<CAKB8V+qek5DrdtDjbrb1vR6KHjPud=Vp5MS2JQTJL=U9CKMTOw@mail.gmail.com>
Message-ID: <CA+vutv6ar=m1a9Fj69DY5ahkLLLEa8pOOgMSU-9V5Z4ai4Y+Aw@mail.gmail.com>

Hi Bryan. We did tests on the 3.4.2 and we didn't have the behaviors you're
describing.

- If I have the following URL :
http://mydomain.com/page-slug-1/page-slug-2/page-slug-3/
- If I change /page-slug-3/ to /page-slug-ZZZ/ in the Edit Panel, I get a
404
- If I turn the URL into http://mydomain.com/page-slug-3/, a 301 redirect
is done to http://mydomain.com/page-slug-1/page-slug-2/page-slug-3/(redirect
is based on the page slug). It also works if you have the
following URL :  http://mydomain.com/page-slug-1/page-slug-3/
- So we can say that reparenting is covered unless one of the slugs has
changed.
- If you change any slug (parents or the page itself) you get a 404

Do you find the same results ?

@Matthias : danke :-) We did that but for load reasons we finally decided
to use the ID trick (see below) which relies only on WP hooks. However,
there is one case where we're going to use this solution : when a page is
deleted, we'll have a plugin asking for a target for the 301 redirect.

---

Thx both of you. I believe maybe my mast email to the list didn't make it,
so I repost it here :

Just to let you know that we're still working on this page issue. We have
now a prototype using regular Wordpress hooks and doing the following :

   - First I can add more regarding the current page permalink behavior :
   if you suppress all the parent page slugs from the URL (keeping only the
   final page slug), Wordpress does a 301 redirection to the whole permalink.
   It's the same if you suppress only one parent page slug. However, if you
   modify a parent page slug or the final page slug, you'll have a 404 error.
   - It drove us to try the same solution we have applied for posts :
   introduce the post/page id into the permalink so that even the slug
   changes, a 301 redirection is done based on the id
   - We've managed to have a prototype working based on regular hooks.
   Basically, what it does is to add /[page id]/ at the end of the permalink.
   Based on this id and even the whole URL changes, the plugin manages to
   build the correct 301 redirection to the new permalink. So far tests are
   good.

We've planned to release a beta version of a page manager with this feature
in the next few weeks.

2012/10/2 Bryan Petty <bryan at ibaku.net>

> On Tue, Oct 2, 2012 at 7:53 AM, "Matthias P. W?rfl" <mpw at taquiri.de>
> wrote:
> > Why not simply keep track of the changes of the URL? Save the old URL to
> a
> > table and search this before giving a 404. Then send 301 instead of 404.
>
> Actually, I've looked into this more now, and realized that the latest
> version of WordPress does actually redirect appropriately to the new
> page structure when re-parenting happens. Also, I did already know
> that when slugs change, the old one is still saved, and still works
> (and redirects appropriately as well).
>
> In fact, as long as the last slug in the URL is the current or an
> older slug for a page, it doesn't matter what you specify as the
> parent slugs, WordPress will automatically redirect appropriately,
> even if those parent page slugs never existed.
>
> So all of this should work perfectly fine already for what Benjamin
> Lupu wants to do.
>
> Regards,
> Bryan Petty
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Benjamin Lupu
Email: benjamin.lupu at gmail.com

From bryan at ibaku.net  Tue Oct  2 17:30:41 2012
From: bryan at ibaku.net (Bryan Petty)
Date: Tue, 2 Oct 2012 11:30:41 -0600
Subject: [wp-hackers] Changing page permalink structure
In-Reply-To: <CA+vutv6ar=m1a9Fj69DY5ahkLLLEa8pOOgMSU-9V5Z4ai4Y+Aw@mail.gmail.com>
References: <CA+vutv5ay7=+OWsz1ycNL0POriwcqwC9AH1QZt8GunnGG9crFg@mail.gmail.com>
	<506AF1C6.1050801@taquiri.de>
	<CAKB8V+qek5DrdtDjbrb1vR6KHjPud=Vp5MS2JQTJL=U9CKMTOw@mail.gmail.com>
	<CA+vutv6ar=m1a9Fj69DY5ahkLLLEa8pOOgMSU-9V5Z4ai4Y+Aw@mail.gmail.com>
Message-ID: <CAKB8V+pw1Dem+EzZR-LrUcmAfq1_qwPYH-tj3aLeZtqkSby+Fw@mail.gmail.com>

I must have been confused with posts rather than pages by accident for
my last tests. For posts, having tested this in 3.4.2 and 3.5-beta-1,
any change in any slug regardless of any intermediate slug structure
does work in every case. Even old final post slugs with completely
arbitrary intermediate structures are redirected to the correct post.
This doesn't always work for pages though, so maybe this is a bug that
can be fixed in WordPress.

On Tue, Oct 2, 2012 at 9:46 AM, Benjamin Lupu <benjamin.lupu at gmail.com> wrote:
> - If I have the following URL :
> http://mydomain.com/page-slug-1/page-slug-2/page-slug-3/
> - If I change /page-slug-3/ to /page-slug-ZZZ/ in the Edit Panel, I get a
> 404

This is true, I also get a 404 in this case. This is where I think
there might actually be a bug with pages since this works with posts.

> - If I turn the URL into http://mydomain.com/page-slug-3/, a 301 redirect
> is done to http://mydomain.com/page-slug-1/page-slug-2/page-slug-3/(redirect
> is based on the page slug). It also works if you have the
> following URL :  http://mydomain.com/page-slug-1/page-slug-3/
> - So we can say that reparenting is covered unless one of the slugs has
> changed.
> - If you change any slug (parents or the page itself) you get a 404

However, this is not what I see with either 3.4.2 or 3.5-beta-1. As
long as the final page slug remains unchanged, I can change any of the
parent page slugs, and the old URL will be redirected to the correct
page with the updated parent page slugs. I suspect this is just
because WordPress only looks at the final slug, not because it's
correctly tracking the parent page slugs, otherwise the case above
would probably work.

Regards,
Bryan Petty

From otto at ottodestruct.com  Tue Oct  2 22:25:01 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 2 Oct 2012 17:25:01 -0500
Subject: [wp-hackers] Changing page permalink structure
In-Reply-To: <CAKB8V+pw1Dem+EzZR-LrUcmAfq1_qwPYH-tj3aLeZtqkSby+Fw@mail.gmail.com>
References: <CA+vutv5ay7=+OWsz1ycNL0POriwcqwC9AH1QZt8GunnGG9crFg@mail.gmail.com>
	<506AF1C6.1050801@taquiri.de>
	<CAKB8V+qek5DrdtDjbrb1vR6KHjPud=Vp5MS2JQTJL=U9CKMTOw@mail.gmail.com>
	<CA+vutv6ar=m1a9Fj69DY5ahkLLLEa8pOOgMSU-9V5Z4ai4Y+Aw@mail.gmail.com>
	<CAKB8V+pw1Dem+EzZR-LrUcmAfq1_qwPYH-tj3aLeZtqkSby+Fw@mail.gmail.com>
Message-ID: <CAD-Fghz994+3xp9WXrvC9=WyciJwP92by7Ljo2W4x9g1ZnZNNA@mail.gmail.com>

On Tue, Oct 2, 2012 at 12:30 PM, Bryan Petty <bryan at ibaku.net> wrote:
>> - If I turn the URL into http://mydomain.com/page-slug-3/, a 301 redirect
>> is done to http://mydomain.com/page-slug-1/page-slug-2/page-slug-3/(redirect
>> is based on the page slug). It also works if you have the
>> following URL :  http://mydomain.com/page-slug-1/page-slug-3/
>> - So we can say that reparenting is covered unless one of the slugs has
>> changed.
>> - If you change any slug (parents or the page itself) you get a 404
>
> However, this is not what I see with either 3.4.2 or 3.5-beta-1. As
> long as the final page slug remains unchanged, I can change any of the
> parent page slugs, and the old URL will be redirected to the correct
> page with the updated parent page slugs. I suspect this is just
> because WordPress only looks at the final slug, not because it's
> correctly tracking the parent page slugs, otherwise the case above
> would probably work.

You will probably get different results depending on what your Custom
Permalink Structure is set to. If you're not using a numeric field at
the beginning of the Custom Permalink string, then Pages get handled
differently. For example, using %postname% alone would probably cause
the redirect to fail, because now the WP core code is checking for
complete URL paths for pages, to differentiate Pages from Posts. With
a numeric there, that code would not happen, and then the fall-through
to the 404 guesser might catch your page instead.

Test with the Month-Name structure and the Postname structure and see
if there is a difference.

-Otto

From azeemuddin at bizcoresolutions.com  Wed Oct  3 06:42:21 2012
From: azeemuddin at bizcoresolutions.com (Azeem Uddin)
Date: Wed, 3 Oct 2012 11:42:21 +0500
Subject: [wp-hackers] Hello
Message-ID: <CAAHFA5x=i0YYK3_+2gJKJh0TtWQqYCkKJew+=RMrB1-wqqVtkw@mail.gmail.com>

Hi Wp hackers,

I am new wordpress developer.

Thanks

From azeemuddin at bizcoresolutions.com  Wed Oct  3 07:00:35 2012
From: azeemuddin at bizcoresolutions.com (Azeem Uddin)
Date: Wed, 3 Oct 2012 12:00:35 +0500
Subject: [wp-hackers] Request
Message-ID: <CAAHFA5yXYatP-yPzi_2_JMOf5Nk7=J0iWZgYB-qpUJDo5K1MdA@mail.gmail.com>

HI Hackers,

I am developing same application like wp hacker and I want to know the
logic behind these application.
Could you please let me know how you guys done this.

Thanks,

From azeemuddinku at yahoo.com  Wed Oct  3 07:08:38 2012
From: azeemuddinku at yahoo.com (azeemuddin)
Date: Wed, 3 Oct 2012 00:08:38 -0700 (PDT)
Subject: [wp-hackers] Settings API -- Translation issues
In-Reply-To: <CADqS_awEgNT0_cPSujLWjQO4MY5d9Hydw9gWmKX61h_ZRyyngQ@mail.gmail.com>
References: <CADqS_axgQyFSatuy2owdkyUEKF2DvHGqQXxApTTAUe+NOtazXA@mail.gmail.com>
	<CAD-Fghy5p0f=f-M18gVVcM+Bgm7T1d5YwGSrujwn9nFgOroJMw@mail.gmail.com>
	<CADqS_awEgNT0_cPSujLWjQO4MY5d9Hydw9gWmKX61h_ZRyyngQ@mail.gmail.com>
Message-ID: <1349248118324-39805.post@n5.nabble.com>

Thats great.



--
View this message in context: http://wordpress-hackers.1065353.n5.nabble.com/Settings-API-Translation-issues-tp39790p39805.html
Sent from the Wordpress Hackers mailing list archive at Nabble.com.

From tcbarrett at gmail.com  Wed Oct  3 10:00:43 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 3 Oct 2012 11:00:43 +0100
Subject: [wp-hackers] Adding non English character ranges
Message-ID: <CAEgmxaYyso0g2WM4i-mTRXn-0qeSF8ERzdQoTfSyGDHLPiUQKQ@mail.gmail.com>

I have an A to Z list. It's a simple range('a','z') to loop through and
match against the first letter of post_title.

This doesn't work for non English characters (e.g. Scandinavian ?/ae, ?/oe,
?/aa). What's the best way of handling this?

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From lists at rotorised.com  Wed Oct  3 10:03:53 2012
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 03 Oct 2012 20:03:53 +1000
Subject: [wp-hackers] Adding non English character ranges
In-Reply-To: <CAEgmxaYyso0g2WM4i-mTRXn-0qeSF8ERzdQoTfSyGDHLPiUQKQ@mail.gmail.com>
References: <CAEgmxaYyso0g2WM4i-mTRXn-0qeSF8ERzdQoTfSyGDHLPiUQKQ@mail.gmail.com>
Message-ID: <506C0D89.90205@rotorised.com>

Tom Barrett wrote:
> I have an A to Z list. It's a simple range('a','z') to loop through and
> match against the first letter of post_title.
> 
> This doesn't work for non English characters (e.g. Scandinavian ?/ae, ?/oe,
> ?/aa). What's the best way of handling this?
> 

Depends on what you're trying to do, but remove_accents() (see
wp-includes/formatting.php, ~L607) will convert these into their
Romanised form or nearest approximation where possible.

-- 
Ryan McCue
<http://ryanmccue.info/>

From benjamin.lupu at gmail.com  Wed Oct  3 10:08:37 2012
From: benjamin.lupu at gmail.com (Benjamin Lupu)
Date: Wed, 3 Oct 2012 12:08:37 +0200
Subject: [wp-hackers] Changing page permalink structure
In-Reply-To: <CAKB8V+pw1Dem+EzZR-LrUcmAfq1_qwPYH-tj3aLeZtqkSby+Fw@mail.gmail.com>
References: <CA+vutv5ay7=+OWsz1ycNL0POriwcqwC9AH1QZt8GunnGG9crFg@mail.gmail.com>
	<506AF1C6.1050801@taquiri.de>
	<CAKB8V+qek5DrdtDjbrb1vR6KHjPud=Vp5MS2JQTJL=U9CKMTOw@mail.gmail.com>
	<CA+vutv6ar=m1a9Fj69DY5ahkLLLEa8pOOgMSU-9V5Z4ai4Y+Aw@mail.gmail.com>
	<CAKB8V+pw1Dem+EzZR-LrUcmAfq1_qwPYH-tj3aLeZtqkSby+Fw@mail.gmail.com>
Message-ID: <CA+vutv5AByvAtsxB5EJ+4HbdX3K0WFWt5PHo_Td5_j-WHNOvaQ@mail.gmail.com>

:-)

Well, for pages (when permalinks have been activated), you may delete any
slug from the URL (except the last one of course), redirect will occur. But
if you change any slug, you'll get a 404. This is why we've introduced the
page id in page permalinks. Id won't change and is used as a base for
redirects. Works nicely (bit need some tests) and only with regular hooks !

Thx for answers.

2012/10/2 Bryan Petty <bryan at ibaku.net>

> I must have been confused with posts rather than pages by accident for
> my last tests. For posts, having tested this in 3.4.2 and 3.5-beta-1,
> any change in any slug regardless of any intermediate slug structure
> does work in every case. Even old final post slugs with completely
> arbitrary intermediate structures are redirected to the correct post.
> This doesn't always work for pages though, so maybe this is a bug that
> can be fixed in WordPress.
>
> On Tue, Oct 2, 2012 at 9:46 AM, Benjamin Lupu <benjamin.lupu at gmail.com>
> wrote:
> > - If I have the following URL :
> > http://mydomain.com/page-slug-1/page-slug-2/page-slug-3/
> > - If I change /page-slug-3/ to /page-slug-ZZZ/ in the Edit Panel, I get a
> > 404
>
> This is true, I also get a 404 in this case. This is where I think
> there might actually be a bug with pages since this works with posts.
>
> > - If I turn the URL into http://mydomain.com/page-slug-3/, a 301
> redirect
> > is done to
> http://mydomain.com/page-slug-1/page-slug-2/page-slug-3/(redirect
> > is based on the page slug). It also works if you have the
> > following URL :  http://mydomain.com/page-slug-1/page-slug-3/
> > - So we can say that reparenting is covered unless one of the slugs has
> > changed.
> > - If you change any slug (parents or the page itself) you get a 404
>
> However, this is not what I see with either 3.4.2 or 3.5-beta-1. As
> long as the final page slug remains unchanged, I can change any of the
> parent page slugs, and the old URL will be redirected to the correct
> page with the updated parent page slugs. I suspect this is just
> because WordPress only looks at the final slug, not because it's
> correctly tracking the parent page slugs, otherwise the case above
> would probably work.
>
> Regards,
> Bryan Petty
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Benjamin Lupu
Email: benjamin.lupu at gmail.com

From tcbarrett at gmail.com  Wed Oct  3 10:21:57 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Wed, 3 Oct 2012 11:21:57 +0100
Subject: [wp-hackers] Adding non English character ranges
In-Reply-To: <506C0D89.90205@rotorised.com>
References: <CAEgmxaYyso0g2WM4i-mTRXn-0qeSF8ERzdQoTfSyGDHLPiUQKQ@mail.gmail.com>
	<506C0D89.90205@rotorised.com>
Message-ID: <CAEgmxaaMUFcjOsF7RExNtVG_5GS03O1qbRh=Mr_bSFTZ+KZRLA@mail.gmail.com>

On 3 October 2012 11:03, Ryan McCue <lists at rotorised.com> wrote:

> Tom Barrett wrote:
> > I have an A to Z list. It's a simple range('a','z') to loop through and
> > match against the first letter of post_title.
> >
> > This doesn't work for non English characters (e.g. Scandinavian ?/ae,
> ?/oe,
> > ?/aa). What's the best way of handling this?
> >
>
> Depends on what you're trying to do, but remove_accents() (see
> wp-includes/formatting.php, ~L607) will convert these into their
> Romanised form or nearest approximation where possible.


It is for plugin functionality. I would like the user to be able to specify
the alpha range, and be able to match against them. Ideally, this would
mean not matching ? against o. Leave it as it's own unique character and
coming after z in the alphabet.

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From lists at rotorised.com  Wed Oct  3 12:59:10 2012
From: lists at rotorised.com (Ryan McCue)
Date: Wed, 03 Oct 2012 22:59:10 +1000
Subject: [wp-hackers] Adding non English character ranges
In-Reply-To: <CAEgmxaaMUFcjOsF7RExNtVG_5GS03O1qbRh=Mr_bSFTZ+KZRLA@mail.gmail.com>
References: <CAEgmxaYyso0g2WM4i-mTRXn-0qeSF8ERzdQoTfSyGDHLPiUQKQ@mail.gmail.com>
	<506C0D89.90205@rotorised.com>
	<CAEgmxaaMUFcjOsF7RExNtVG_5GS03O1qbRh=Mr_bSFTZ+KZRLA@mail.gmail.com>
Message-ID: <506C369E.6040301@rotorised.com>

Tom Barrett wrote:
> It is for plugin functionality. I would like the user to be able to specify
> the alpha range, and be able to match against them. Ideally, this would
> mean not matching ? against o. Leave it as it's own unique character and
> coming after z in the alphabet.

Ah, in that case, specifying a range depends entirely on how you want to
handle it. Simply having a string isn't enough to be able to order, you
need language-specific context. For example, ? is treated as if it were
oe in German, while in Swedish, it's at the end of the alphabet.

Your best shot is to use the Unicode collation algorithm. You'll need
the intl PHP extension for that:

http://stackoverflow.com/questions/5056586/uca-natural-sorting

(If this seems more complicated than it should be, it's because it is.
Localisation/internationalisation is hard.)

-- 
Ryan McCue
<http://ryanmccue.info/>

From jeff.lambert at jvhm.com  Wed Oct  3 21:31:59 2012
From: jeff.lambert at jvhm.com (Jeff Lambert)
Date: Wed, 03 Oct 2012 14:31:59 -0700
Subject: [wp-hackers] TwentyTen Divs Mix Up on NextPage usage
In-Reply-To: <CAP29Pvix8OmTrYC0eU1HbKHbRUS0Wi+r2BnZM5Ak_eZd71j6nw@mail.gmail.com>
Message-ID: <CC91FCDF.37AA1%jeff.lambert@jvhm.com>

Thanks Andrew, I've done that.

http://core.trac.wordpress.org/ticket/22091

Cheers,

Jeff

On 9/27/12 8:52 PM, "Andrew Nacin" <wp at andrewnacin.com> wrote:

> Seems like a bug. Care to submit a bug report?
> http://core.trac.wordpress.org/
> On Sep 23, 2012 10:44 PM, "Jeff Lambert" <jeff.lambert at jvhm.com> wrote:
> 
>> Hello,
>> 
>> I'm trying to troubleshoot TwentyTen, actually a derivative theme based on
>> some of the TwentyTen files.  Both have similar issues.  Essentially, when
>> the <!--nextpage--> tag is used the first page of the post has it's DIVs
>> mixed up.  Subsequent pages are fine and resemble those of a single page
>> post.  Here's the difference in the DIV hierarchy:
>> 
>> *Page 1
>> *
>> wrapper
>>     header
>>     main
>>         container
>>             content
>>             primary
>>             secondary
>>         footer
>> 
>> 
>> *Page 2...n*
>> 
>> wrapper
>>     header
>>     main
>>         container
>>             content
>>         primary
>>         secondary
>>     footer
>> 
>> Has anyone seen this and/or worked through this?
>> 
>> Cheers,
>> 
>> Jeff
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



From kuldeepdhaka9 at gmail.com  Thu Oct  4 13:29:39 2012
From: kuldeepdhaka9 at gmail.com (kuldeep dhaka)
Date: Thu, 4 Oct 2012 18:59:39 +0530
Subject: [wp-hackers] wordpress widget api extension
Message-ID: <CANPwNKVOZrDd4ZoLJacJWqx0oFZAkioY4_Gh_WV_kCn7=9+atw@mail.gmail.com>

hello,
this is my first mail. :)
i have extended the wordpress widget api.
*
summary of API extension:*
when we create new sidebar widgets, we have to decide the values we have to
save in database to act upon while showing the widget at frontend.
but at designing, coding and taking input at backend is very fuzzy because
the update function is hard to use with the form function.

i have modified the update & form function so programmer just only define
the definition of the inputs taken. and rest the routine library do it work.

as widget backend form didn't supported multi direction array, i also
modified the name and id generator functions. to make them support.

if a programmer dont want to use the routine library he can write his own
function thereby maintaining backward compatibility with previous widgets.
if no definition is provided its show usual behaviors as before.

i made the update in the ABSPATH/wordpress-inlude/widgets.php , file is
attached

example plugin( twitterX ) is also attached[ this is the plugin which at
last made me think how to write such a routine , earlier i got the idea].

*Note:
*i have written the code for better readability , so efficiency could be at
stake.
i have mentioned my name at places where i made the updates, to help better
reading.

-- 
*Kuldeep Singh Dhaka*
*SaKul* Web Developer
kuldeepdhaka9 at gmail.com
Programmer, Open Source, Web Developer, Entrepreneur, Animal Lover,
Student, Blogger, Reverse Engineer, Embedded System.

From dianakac at gmail.com  Fri Oct  5 00:54:56 2012
From: dianakac at gmail.com (Diana K. C)
Date: Thu, 4 Oct 2012 21:54:56 -0300
Subject: [wp-hackers] Bulding a full search form?
Message-ID: <000e01cda294$0ba49f50$2200a8c0@TITA>

Hi there,

?'m having some spare time to get to know about searching content in WP, I 
found some weak plugins, tips etc still anything helped at all.

In single meta_key I manage to search it this way:

Add this functions/plugin:

    global $wp;
    $wp->add_query_var('meta_key');
    $wp->add_query_var('meta_value');
    $wp->add_query_var('meta_compare');

And form would be:

<form action="<?php echo home_url(); ?>/" method="get" id="searchform">
      <input class="input" name="s" type="text" id="keywords" value="" >

            <select name="meta_value" id="img_post_country" >
            <option value="" selected="selected">Select pet gender</option>
            <option <?php if(isset($action_edit_image)){ ?> 
selected="selected" <?php } ?> value="<?php _e('Male','wp_pet');?>"><?php 
_e('Male','wp_pet');?></option>
            <option value="<?php _e('Female','wp_pet');?>"><?php 
_e('Female','wp_pet');?></option>
            </select>

     <input type="hidden" name="post_type" value="pet" />

             <input type="submit" name="search" value="<?php 
_e('Search','cosmotheme') ?>">
     </form>

There's no way to search more than a meta_key with this, it would be nice if 
I could set the meta_key name in the input name instead of "meta_value", 
then I could use more than one meta_key. I tried but doesn't work :(


 I found this also 
http://wordpress.stackexchange.com/questions/38361/advanced-search-form-with-filters-for-custom-taxonomies-and-custom-fields

Beside the fact I'm lacking knowledge on post data e sessions, is this a 
sort of a hack?

Thanx!


From lists at alexking.org  Fri Oct  5 13:09:40 2012
From: lists at alexking.org (Alex King)
Date: Fri, 5 Oct 2012 07:09:40 -0600
Subject: [wp-hackers] Bulding a full search form?
In-Reply-To: <000e01cda294$0ba49f50$2200a8c0@TITA>
References: <000e01cda294$0ba49f50$2200a8c0@TITA>
Message-ID: <00F61BA3-9C8C-431B-B737-659D805332BB@alexking.org>

I'd recommend setting "pet gender" as a custom taxonomy instead of as post meta. Performance would be much better querying by the taxonomy term than by meta value (non-indexed column).

Setting the default options as taxonomy terms can be done manually and to present a taxonomy as a set of fields in the post edit form, you can do a little jQuery hacking.

https://gist.github.com/3723819

Cheers,
--Alex

http://alexking.org | http://crowdfavorite.com




On Oct 4, 2012, at 6:54 PM, Diana K. C <dianakac at gmail.com> wrote:

> Hi there,
> 
> ?'m having some spare time to get to know about searching content in WP, I found some weak plugins, tips etc still anything helped at all.
> 
> In single meta_key I manage to search it this way:
> 
> Add this functions/plugin:
> 
>   global $wp;
>   $wp->add_query_var('meta_key');
>   $wp->add_query_var('meta_value');
>   $wp->add_query_var('meta_compare');
> 
> And form would be:
> 
> <form action="<?php echo home_url(); ?>/" method="get" id="searchform">
>     <input class="input" name="s" type="text" id="keywords" value="" >
> 
>           <select name="meta_value" id="img_post_country" >
>           <option value="" selected="selected">Select pet gender</option>
>           <option <?php if(isset($action_edit_image)){ ?> selected="selected" <?php } ?> value="<?php _e('Male','wp_pet');?>"><?php _e('Male','wp_pet');?></option>
>           <option value="<?php _e('Female','wp_pet');?>"><?php _e('Female','wp_pet');?></option>
>           </select>
> 
>    <input type="hidden" name="post_type" value="pet" />
> 
>            <input type="submit" name="search" value="<?php _e('Search','cosmotheme') ?>">
>    </form>
> 
> There's no way to search more than a meta_key with this, it would be nice if I could set the meta_key name in the input name instead of "meta_value", then I could use more than one meta_key. I tried but doesn't work :(
> 
> 
> I found this also http://wordpress.stackexchange.com/questions/38361/advanced-search-form-with-filters-for-custom-taxonomies-and-custom-fields
> 
> Beside the fact I'm lacking knowledge on post data e sessions, is this a sort of a hack?
> 
> Thanx!


From wpmidia at gmail.com  Fri Oct  5 17:25:31 2012
From: wpmidia at gmail.com (wpmidia lab)
Date: Fri, 5 Oct 2012 14:25:31 -0300
Subject: [wp-hackers] WordPress persistent connections
Message-ID: <CADqS_azpdLt1meuMjsqhX2rfL=vg3Ybeo2FnoFr4rNNswaPkyQ@mail.gmail.com>

We are having problems using the WordPress in a site with a lot of hits.

The staff that manages the server reports that the WordPress open multiple
connections and not closing.

Now, I need to resolve this, but I don't know how to find where this
problem occurs.

Where this problem happens and how to resolve this issue of persistent
connection?


Thanks in advance!

-- 
*M?riam de Paula *
*Twitter:* @miriamdepaula

*desenvolvimento web*
http://wpmidia.com.br
twitter: @wpmidia

*WordPress Brasil no Facebook:*
http://www.facebook.com/groups/wordpress.brasil

*OpenCart Brasil no Facebook:*
http://www.facebook.com/groups/opencart.brasil/

*Hospedagem de Qualidade ? na HostGator<http://www.hostgator.com.br/6133-4.html>
*

From ljunior2005 at gmail.com  Fri Oct  5 17:33:11 2012
From: ljunior2005 at gmail.com (Leo Baiano)
Date: Fri, 5 Oct 2012 14:33:11 -0300
Subject: [wp-hackers] WordPress persistent connections
In-Reply-To: <CADqS_azpdLt1meuMjsqhX2rfL=vg3Ybeo2FnoFr4rNNswaPkyQ@mail.gmail.com>
References: <CADqS_azpdLt1meuMjsqhX2rfL=vg3Ybeo2FnoFr4rNNswaPkyQ@mail.gmail.com>
Message-ID: <CAL1O-KWB=7pE3VMt_4X7tkAyR2cEqTuKuqZLAfA5GREVcvXXLQ@mail.gmail.com>

Have you tried to change the wp-db.php to use mysql_pconnect instead of
mysql_connect? should solve the pconnect since it prevents it from being
opened when a connection already exists.

2012/10/5 wpmidia lab <wpmidia at gmail.com>

> We are having problems using the WordPress in a site with a lot of hits.
>
> The staff that manages the server reports that the WordPress open multiple
> connections and not closing.
>
> Now, I need to resolve this, but I don't know how to find where this
> problem occurs.
>
> Where this problem happens and how to resolve this issue of persistent
> connection?
>
>
> Thanks in advance!
>
> --
> *M?riam de Paula *
> *Twitter:* @miriamdepaula
>
> *desenvolvimento web*
> http://wpmidia.com.br
> twitter: @wpmidia
>
> *WordPress Brasil no Facebook:*
> http://www.facebook.com/groups/wordpress.brasil
>
> *OpenCart Brasil no Facebook:*
> http://www.facebook.com/groups/opencart.brasil/
>
> *Hospedagem de Qualidade ? na HostGator<
> http://www.hostgator.com.br/6133-4.html>
> *
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Amplexos,

Leo Baiano
http://www.leobaiano.com
http://www.blog.ljunior.com
http://www.mcelebridades.com
http://www.twitter.com/leobaiano

From wpmidia at gmail.com  Fri Oct  5 17:41:21 2012
From: wpmidia at gmail.com (wpmidia lab)
Date: Fri, 5 Oct 2012 14:41:21 -0300
Subject: [wp-hackers] WordPress persistent connections
In-Reply-To: <CAL1O-KWB=7pE3VMt_4X7tkAyR2cEqTuKuqZLAfA5GREVcvXXLQ@mail.gmail.com>
References: <CADqS_azpdLt1meuMjsqhX2rfL=vg3Ybeo2FnoFr4rNNswaPkyQ@mail.gmail.com>
	<CAL1O-KWB=7pE3VMt_4X7tkAyR2cEqTuKuqZLAfA5GREVcvXXLQ@mail.gmail.com>
Message-ID: <CADqS_awjBTtjOH=WT4R1YJDUD+fqkMAuLp1ZX+MB6RE8DmNMJA@mail.gmail.com>

Hi L?o!

The problem is that there are multiple connections not closed on the
server, you know?
I think using mysql_pconnect, will only worsen. I checked the file
wp-db.php WordPress and not using mysql_pconnect.




2012/10/5 Leo Baiano <ljunior2005 at gmail.com>

> Have you tried to change the wp-db.php to use mysql_pconnect instead of
> mysql_connect? should solve the pconnect since it prevents it from being
> opened when a connection already exists.
>
> 2012/10/5 wpmidia lab <wpmidia at gmail.com>
>
> > We are having problems using the WordPress in a site with a lot of hits.
> >
> > The staff that manages the server reports that the WordPress open
> multiple
> > connections and not closing.
> >
> > Now, I need to resolve this, but I don't know how to find where this
> > problem occurs.
> >
> > Where this problem happens and how to resolve this issue of persistent
> > connection?
> >
> >
> > Thanks in advance!
> >
> > --
> > *M?riam de Paula *
> > *Twitter:* @miriamdepaula
> >
> > *desenvolvimento web*
> > http://wpmidia.com.br
> > twitter: @wpmidia
> >
> > *WordPress Brasil no Facebook:*
> > http://www.facebook.com/groups/wordpress.brasil
> >
> > *OpenCart Brasil no Facebook:*
> > http://www.facebook.com/groups/opencart.brasil/
> >
> > *Hospedagem de Qualidade ? na HostGator<
> > http://www.hostgator.com.br/6133-4.html>
> > *
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> Amplexos,
>
> Leo Baiano
> http://www.leobaiano.com
> http://www.blog.ljunior.com
> http://www.mcelebridades.com
> http://www.twitter.com/leobaiano
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
*M?riam de Paula *
*Twitter:* @miriamdepaula

*desenvolvimento web*
http://wpmidia.com.br
twitter: @wpmidia

*WordPress Brasil no Facebook:*
http://www.facebook.com/groups/wordpress.brasil

*OpenCart Brasil no Facebook:*
http://www.facebook.com/groups/opencart.brasil/

*Hospedagem de Qualidade ? na HostGator<http://www.hostgator.com.br/6133-4.html>
*

From dianakac at gmail.com  Fri Oct  5 18:52:38 2012
From: dianakac at gmail.com (Diana K. C)
Date: Fri, 5 Oct 2012 15:52:38 -0300
Subject: [wp-hackers] Bulding a full search form?
References: <000e01cda294$0ba49f50$2200a8c0@TITA>
	<00F61BA3-9C8C-431B-B737-659D805332BB@alexking.org>
Message-ID: <004501cda32a$98dce620$2200a8c0@TITA>

Thanks Alex, I'm concerned about performance indeed.

I thought that itens such gender only can have 2 values ever, so this data 
should be stored as post meta? Is not bad to create various taxonomies 
then?!


----- Original Message ----- 
From: "Alex King" <lists at alexking.org>
To: <wp-hackers at lists.automattic.com>
Sent: Friday, October 05, 2012 10:09 AM
Subject: Re: [wp-hackers] Bulding a full search form?


I'd recommend setting "pet gender" as a custom taxonomy instead of as post 
meta. Performance would be much better querying by the taxonomy term than by 
meta value (non-indexed column).

Setting the default options as taxonomy terms can be done manually and to 
present a taxonomy as a set of fields in the post edit form, you can do a 
little jQuery hacking.

https://gist.github.com/3723819

Cheers,
--Alex

http://alexking.org | http://crowdfavorite.com




On Oct 4, 2012, at 6:54 PM, Diana K. C <dianakac at gmail.com> wrote:

> Hi there,
>
> ?'m having some spare time to get to know about searching content in WP, I 
> found some weak plugins, tips etc still anything helped at all.
>
> In single meta_key I manage to search it this way:
>
> Add this functions/plugin:
>
>   global $wp;
>   $wp->add_query_var('meta_key');
>   $wp->add_query_var('meta_value');
>   $wp->add_query_var('meta_compare');
>
> And form would be:
>
> <form action="<?php echo home_url(); ?>/" method="get" id="searchform">
>     <input class="input" name="s" type="text" id="keywords" value="" >
>
>           <select name="meta_value" id="img_post_country" >
>           <option value="" selected="selected">Select pet gender</option>
>           <option <?php if(isset($action_edit_image)){ ?> 
> selected="selected" <?php } ?> value="<?php _e('Male','wp_pet');?>"><?php 
> _e('Male','wp_pet');?></option>
>           <option value="<?php _e('Female','wp_pet');?>"><?php 
> _e('Female','wp_pet');?></option>
>           </select>
>
>    <input type="hidden" name="post_type" value="pet" />
>
>            <input type="submit" name="search" value="<?php 
> _e('Search','cosmotheme') ?>">
>    </form>
>
> There's no way to search more than a meta_key with this, it would be nice 
> if I could set the meta_key name in the input name instead of 
> "meta_value", then I could use more than one meta_key. I tried but doesn't 
> work :(
>
>
> I found this also 
> http://wordpress.stackexchange.com/questions/38361/advanced-search-form-with-filters-for-custom-taxonomies-and-custom-fields
>
> Beside the fact I'm lacking knowledge on post data e sessions, is this a 
> sort of a hack?
>
> Thanx!

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers 


From chason at gmail.com  Fri Oct  5 19:42:27 2012
From: chason at gmail.com (Chason Chaffin)
Date: Fri, 5 Oct 2012 12:42:27 -0700
Subject: [wp-hackers] WordPress persistent connections
In-Reply-To: <CADqS_awjBTtjOH=WT4R1YJDUD+fqkMAuLp1ZX+MB6RE8DmNMJA@mail.gmail.com>
References: <CADqS_azpdLt1meuMjsqhX2rfL=vg3Ybeo2FnoFr4rNNswaPkyQ@mail.gmail.com>
	<CAL1O-KWB=7pE3VMt_4X7tkAyR2cEqTuKuqZLAfA5GREVcvXXLQ@mail.gmail.com>
	<CADqS_awjBTtjOH=WT4R1YJDUD+fqkMAuLp1ZX+MB6RE8DmNMJA@mail.gmail.com>
Message-ID: <CAGw2N3V=JcsPzxFZ_cu0+LJ2hkHfpYQKVmruwwaLE-VVF=7ERA@mail.gmail.com>

Do you know if this happens on a fresh WordPress installation? In my
experience, these issues usually have to do with a theme or a plugin
installed on the system.

On Fri, Oct 5, 2012 at 10:41 AM, wpmidia lab <wpmidia at gmail.com> wrote:

> Hi L?o!
>
> The problem is that there are multiple connections not closed on the
> server, you know?
> I think using mysql_pconnect, will only worsen. I checked the file
> wp-db.php WordPress and not using mysql_pconnect.
>
>
>
>
> 2012/10/5 Leo Baiano <ljunior2005 at gmail.com>
>
> > Have you tried to change the wp-db.php to use mysql_pconnect instead of
> > mysql_connect? should solve the pconnect since it prevents it from being
> > opened when a connection already exists.
> >
> > 2012/10/5 wpmidia lab <wpmidia at gmail.com>
> >
> > > We are having problems using the WordPress in a site with a lot of
> hits.
> > >
> > > The staff that manages the server reports that the WordPress open
> > multiple
> > > connections and not closing.
> > >
> > > Now, I need to resolve this, but I don't know how to find where this
> > > problem occurs.
> > >
> > > Where this problem happens and how to resolve this issue of persistent
> > > connection?
> > >
> > >
> > > Thanks in advance!
> > >
> > > --
> > > *M?riam de Paula *
> > > *Twitter:* @miriamdepaula
> > >
> > > *desenvolvimento web*
> > > http://wpmidia.com.br
> > > twitter: @wpmidia
> > >
> > > *WordPress Brasil no Facebook:*
> > > http://www.facebook.com/groups/wordpress.brasil
> > >
> > > *OpenCart Brasil no Facebook:*
> > > http://www.facebook.com/groups/opencart.brasil/
> > >
> > > *Hospedagem de Qualidade ? na HostGator<
> > > http://www.hostgator.com.br/6133-4.html>
> > > *
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> >
> > --
> > Amplexos,
> >
> > Leo Baiano
> > http://www.leobaiano.com
> > http://www.blog.ljunior.com
> > http://www.mcelebridades.com
> > http://www.twitter.com/leobaiano
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
>
>
>
> --
> *M?riam de Paula *
> *Twitter:* @miriamdepaula
>
> *desenvolvimento web*
> http://wpmidia.com.br
> twitter: @wpmidia
>
> *WordPress Brasil no Facebook:*
> http://www.facebook.com/groups/wordpress.brasil
>
> *OpenCart Brasil no Facebook:*
> http://www.facebook.com/groups/opencart.brasil/
>
> *Hospedagem de Qualidade ? na HostGator<
> http://www.hostgator.com.br/6133-4.html>
> *
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From ljunior2005 at gmail.com  Fri Oct  5 19:47:44 2012
From: ljunior2005 at gmail.com (Leo Baiano)
Date: Fri, 5 Oct 2012 16:47:44 -0300
Subject: [wp-hackers] WordPress persistent connections
In-Reply-To: <CAGw2N3V=JcsPzxFZ_cu0+LJ2hkHfpYQKVmruwwaLE-VVF=7ERA@mail.gmail.com>
References: <CADqS_azpdLt1meuMjsqhX2rfL=vg3Ybeo2FnoFr4rNNswaPkyQ@mail.gmail.com>
	<CAL1O-KWB=7pE3VMt_4X7tkAyR2cEqTuKuqZLAfA5GREVcvXXLQ@mail.gmail.com>
	<CADqS_awjBTtjOH=WT4R1YJDUD+fqkMAuLp1ZX+MB6RE8DmNMJA@mail.gmail.com>
	<CAGw2N3V=JcsPzxFZ_cu0+LJ2hkHfpYQKVmruwwaLE-VVF=7ERA@mail.gmail.com>
Message-ID: <CAL1O-KUjkcwQ210=-fQk8c+mN-EnLtVqckbpadBy-XTtuP9bVA@mail.gmail.com>

Drika,

If the problem is that it has many open connections using mysql_pconnect
will not worsen the pconnect persists the connection, it does not close,
however, also does not allow more than one connection is open before
connecting it checks if there is already a connection open and if so he
grabs the link and it did not open another connection as with mysql_connect.

I figured that the wp-db.php pconnect was without the standard WP is the
mysql_connect if I'm not mistaken, I actually suggested that to change
pconnect.

2012/10/5 Chason Chaffin <chason at gmail.com>

> Do you know if this happens on a fresh WordPress installation? In my
> experience, these issues usually have to do with a theme or a plugin
> installed on the system.
>
> On Fri, Oct 5, 2012 at 10:41 AM, wpmidia lab <wpmidia at gmail.com> wrote:
>
> > Hi L?o!
> >
> > The problem is that there are multiple connections not closed on the
> > server, you know?
> > I think using mysql_pconnect, will only worsen. I checked the file
> > wp-db.php WordPress and not using mysql_pconnect.
> >
> >
> >
> >
> > 2012/10/5 Leo Baiano <ljunior2005 at gmail.com>
> >
> > > Have you tried to change the wp-db.php to use mysql_pconnect instead of
> > > mysql_connect? should solve the pconnect since it prevents it from
> being
> > > opened when a connection already exists.
> > >
> > > 2012/10/5 wpmidia lab <wpmidia at gmail.com>
> > >
> > > > We are having problems using the WordPress in a site with a lot of
> > hits.
> > > >
> > > > The staff that manages the server reports that the WordPress open
> > > multiple
> > > > connections and not closing.
> > > >
> > > > Now, I need to resolve this, but I don't know how to find where this
> > > > problem occurs.
> > > >
> > > > Where this problem happens and how to resolve this issue of
> persistent
> > > > connection?
> > > >
> > > >
> > > > Thanks in advance!
> > > >
> > > > --
> > > > *M?riam de Paula *
> > > > *Twitter:* @miriamdepaula
> > > >
> > > > *desenvolvimento web*
> > > > http://wpmidia.com.br
> > > > twitter: @wpmidia
> > > >
> > > > *WordPress Brasil no Facebook:*
> > > > http://www.facebook.com/groups/wordpress.brasil
> > > >
> > > > *OpenCart Brasil no Facebook:*
> > > > http://www.facebook.com/groups/opencart.brasil/
> > > >
> > > > *Hospedagem de Qualidade ? na HostGator<
> > > > http://www.hostgator.com.br/6133-4.html>
> > > > *
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > >
> > >
> > >
> > > --
> > > Amplexos,
> > >
> > > Leo Baiano
> > > http://www.leobaiano.com
> > > http://www.blog.ljunior.com
> > > http://www.mcelebridades.com
> > > http://www.twitter.com/leobaiano
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> >
> > --
> > *M?riam de Paula *
> > *Twitter:* @miriamdepaula
> >
> > *desenvolvimento web*
> > http://wpmidia.com.br
> > twitter: @wpmidia
> >
> > *WordPress Brasil no Facebook:*
> > http://www.facebook.com/groups/wordpress.brasil
> >
> > *OpenCart Brasil no Facebook:*
> > http://www.facebook.com/groups/opencart.brasil/
> >
> > *Hospedagem de Qualidade ? na HostGator<
> > http://www.hostgator.com.br/6133-4.html>
> > *
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Amplexos,

Leo Baiano
http://www.leobaiano.com
http://www.blog.ljunior.com
http://www.mcelebridades.com
http://www.twitter.com/leobaiano

From wpmidia at gmail.com  Fri Oct  5 19:54:22 2012
From: wpmidia at gmail.com (wpmidia lab)
Date: Fri, 5 Oct 2012 16:54:22 -0300
Subject: [wp-hackers] WordPress persistent connections
In-Reply-To: <CAGw2N3V=JcsPzxFZ_cu0+LJ2hkHfpYQKVmruwwaLE-VVF=7ERA@mail.gmail.com>
References: <CADqS_azpdLt1meuMjsqhX2rfL=vg3Ybeo2FnoFr4rNNswaPkyQ@mail.gmail.com>
	<CAL1O-KWB=7pE3VMt_4X7tkAyR2cEqTuKuqZLAfA5GREVcvXXLQ@mail.gmail.com>
	<CADqS_awjBTtjOH=WT4R1YJDUD+fqkMAuLp1ZX+MB6RE8DmNMJA@mail.gmail.com>
	<CAGw2N3V=JcsPzxFZ_cu0+LJ2hkHfpYQKVmruwwaLE-VVF=7ERA@mail.gmail.com>
Message-ID: <CADqS_axG0jW3iWqfdhi7v=nxAT0y-vaqG9AGx9-kOyvXZ8HLGA@mail.gmail.com>

I don't know exactly.
I only know that the site Multisite activated and has 5 active plugins (w3
total cache, wp-swfobject, remove slug blog, meta box and members).

=)

2012/10/5 Chason Chaffin <chason at gmail.com>

> Do you know if this happens on a fresh WordPress installation? In my
> experience, these issues usually have to do with a theme or a plugin
> installed on the system.
>
> On Fri, Oct 5, 2012 at 10:41 AM, wpmidia lab <wpmidia at gmail.com> wrote:
>
> > Hi L?o!
> >
> > The problem is that there are multiple connections not closed on the
> > server, you know?
> > I think using mysql_pconnect, will only worsen. I checked the file
> > wp-db.php WordPress and not using mysql_pconnect.
> >
> >
> >
> >
> > 2012/10/5 Leo Baiano <ljunior2005 at gmail.com>
> >
> > > Have you tried to change the wp-db.php to use mysql_pconnect instead of
> > > mysql_connect? should solve the pconnect since it prevents it from
> being
> > > opened when a connection already exists.
> > >
> > > 2012/10/5 wpmidia lab <wpmidia at gmail.com>
> > >
> > > > We are having problems using the WordPress in a site with a lot of
> > hits.
> > > >
> > > > The staff that manages the server reports that the WordPress open
> > > multiple
> > > > connections and not closing.
> > > >
> > > > Now, I need to resolve this, but I don't know how to find where this
> > > > problem occurs.
> > > >
> > > > Where this problem happens and how to resolve this issue of
> persistent
> > > > connection?
> > > >
> > > >
> > > > Thanks in advance!
> > > >
> > > > --
> > > > *M?riam de Paula *
> > > > *Twitter:* @miriamdepaula
> > > >
> > > > *desenvolvimento web*
> > > > http://wpmidia.com.br
> > > > twitter: @wpmidia
> > > >
> > > > *WordPress Brasil no Facebook:*
> > > > http://www.facebook.com/groups/wordpress.brasil
> > > >
> > > > *OpenCart Brasil no Facebook:*
> > > > http://www.facebook.com/groups/opencart.brasil/
> > > >
> > > > *Hospedagem de Qualidade ? na HostGator<
> > > > http://www.hostgator.com.br/6133-4.html>
> > > > *
> > > > _______________________________________________
> > > > wp-hackers mailing list
> > > > wp-hackers at lists.automattic.com
> > > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > > >
> > >
> > >
> > >
> > > --
> > > Amplexos,
> > >
> > > Leo Baiano
> > > http://www.leobaiano.com
> > > http://www.blog.ljunior.com
> > > http://www.mcelebridades.com
> > > http://www.twitter.com/leobaiano
> > > _______________________________________________
> > > wp-hackers mailing list
> > > wp-hackers at lists.automattic.com
> > > http://lists.automattic.com/mailman/listinfo/wp-hackers
> > >
> >
> >
> >
> > --
> > *M?riam de Paula *
> > *Twitter:* @miriamdepaula
> >
> > *desenvolvimento web*
> > http://wpmidia.com.br
> > twitter: @wpmidia
> >
> > *WordPress Brasil no Facebook:*
> > http://www.facebook.com/groups/wordpress.brasil
> >
> > *OpenCart Brasil no Facebook:*
> > http://www.facebook.com/groups/opencart.brasil/
> >
> > *Hospedagem de Qualidade ? na HostGator<
> > http://www.hostgator.com.br/6133-4.html>
> > *
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
*M?riam de Paula *
*Twitter:* @miriamdepaula

*desenvolvimento web*
http://wpmidia.com.br
twitter: @wpmidia

*WordPress Brasil no Facebook:*
http://www.facebook.com/groups/wordpress.brasil

*OpenCart Brasil no Facebook:*
http://www.facebook.com/groups/opencart.brasil/

*Hospedagem de Qualidade ? na HostGator<http://www.hostgator.com.br/6133-4.html>
*

From moraleida at gmail.com  Fri Oct  5 20:39:18 2012
From: moraleida at gmail.com (Ricardo Moraleida)
Date: Fri, 5 Oct 2012 17:39:18 -0300
Subject: [wp-hackers] Getting context inside the add_attachment hook
Message-ID: <CAF_HY=pVjww5NipCr+L4qa+JYCkn90KONQJsQ-hyKTgpjoMc-w@mail.gmail.com>

Hey,

is there a way to find out from which page the media_uploader was called
inside the add_attachment hook (i.e right after each upload completes) ?

I've tried passing GET values to media-upload.php and using
is_page('pagename'), but still no dice.

The case use is that I'd like to invert the process of creating posts for a
custom post type. Instead of creating a post and uploading an image,
uploading images/files would create a post and attach themselves to it
automatically. It's doable inside add_attachment, but i need to constrain
this to happen only to a specific post type.

thanks!

Ricardo Moraleida

From banago at gmail.com  Fri Oct  5 20:42:19 2012
From: banago at gmail.com (Baki Goxhaj)
Date: Fri, 5 Oct 2012 22:42:19 +0200
Subject: [wp-hackers] Hello
In-Reply-To: <CAAHFA5x=i0YYK3_+2gJKJh0TtWQqYCkKJew+=RMrB1-wqqVtkw@mail.gmail.com>
References: <CAAHFA5x=i0YYK3_+2gJKJh0TtWQqYCkKJew+=RMrB1-wqqVtkw@mail.gmail.com>
Message-ID: <CAM_fM0o5Bi9K7YqeXWWSVSev56YjQGWrueXDYzBZdZasu3EeBg@mail.gmail.com>

Welcome Azeem!

Kindly,

Baki Goxhaj
www.wplancer.com | proverbhunter.com | www.banago.info<http://proverbhunter.com>


On Wed, Oct 3, 2012 at 8:42 AM, Azeem Uddin <azeemuddin at bizcoresolutions.com
> wrote:

> Hi Wp hackers,
>
> I am new wordpress developer.
>
> Thanks
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From andycharrington at gmail.com  Fri Oct  5 21:04:19 2012
From: andycharrington at gmail.com (Andy Charrington-Wilden)
Date: Fri, 5 Oct 2012 22:04:19 +0100
Subject: [wp-hackers] Hello
In-Reply-To: <CAM_fM0o5Bi9K7YqeXWWSVSev56YjQGWrueXDYzBZdZasu3EeBg@mail.gmail.com>
References: <CAAHFA5x=i0YYK3_+2gJKJh0TtWQqYCkKJew+=RMrB1-wqqVtkw@mail.gmail.com>
	<CAM_fM0o5Bi9K7YqeXWWSVSev56YjQGWrueXDYzBZdZasu3EeBg@mail.gmail.com>
Message-ID: <72D2C523-ABAC-4072-BCD6-78933039E5E7@gmail.com>

Hi Azeem!

What are you working on? Anything fun?

:-)

On 5 Oct 2012, at 21:42, Baki Goxhaj wrote:

> Welcome Azeem!
> 
> Kindly,
> 
> Baki Goxhaj
> www.wplancer.com | proverbhunter.com | www.banago.info<http://proverbhunter.com>
> 
> 
> On Wed, Oct 3, 2012 at 8:42 AM, Azeem Uddin <azeemuddin at bizcoresolutions.com
>> wrote:
> 
>> Hi Wp hackers,
>> 
>> I am new wordpress developer.
>> 
>> Thanks
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From chloe.desoutter+wphackers at gmail.com  Fri Oct  5 21:27:41 2012
From: chloe.desoutter+wphackers at gmail.com (=?ISO-8859-1?Q?Chlo=E9_Desoutter?=)
Date: Fri, 5 Oct 2012 23:27:41 +0200
Subject: [wp-hackers] [Patch] Propagating password change in an action
Message-ID: <CAH9U35np3PwG=UJFUWazA-KQw+4fsYVwKioV_jTRNR08Uz_hmA@mail.gmail.com>

Hi folks,

I'm new on this list, my name is Chlo? Desoutter, I work as a freelance
contractor to provide my customers with great WordPress-based solutions.

I'm currently working on using WordPress as an "accounts manager" for a
bigger back-end. This implies updating profile infos, password, and stuff
and reporting that to the big backend in real time.

I've hit a difficulty when it comes to updating the password, as the
profile_update hook does not allow me to get the new plaintext password.

So I've come up with a patch in wp_update_user()
chloe at ayodhya:~/opidev$ diff -uprN wordpress/wp-includes/user.php
web/wp-includes/user.php
--- wordpress/wp-includes/user.php      2012-04-27 17:57:51.000000000 +0200
+++ web/wp-includes/user.php    2012-10-04 17:36:12.382154680 +0200
@@ -1427,6 +1427,8 @@ function wp_update_user($userdata) {
        $current_user = wp_get_current_user();
        if ( $current_user->ID == $ID ) {
                if ( isset($plaintext_pass) ) {
+      // call password_updated to reflect that change elsewhere if needed
+      do_action('password_updated', $ID, $plaintext_pass);
                        wp_clear_auth_cookie();
                        wp_set_auth_cookie($ID);
                }

pastebin: http://pastebin.com/FZfuLbxC

It's used quite simply:
add_action('password_updated', 'my_password_updated', 1, 2);

function my_password_update($id, $newpass)
{
file_put_contents("/tmp/log", "Password for user #${id} is now $newpass");
}

I've found no other way to retrieve that non-hashed password (I usually
hate touching the core, but this time, there's no choice)

Would be nice if that came up into the main source tree.

Any feedback on that?

Hope this helps

Yours

From moraleida at gmail.com  Fri Oct  5 21:59:02 2012
From: moraleida at gmail.com (Ricardo Moraleida)
Date: Fri, 5 Oct 2012 18:59:02 -0300
Subject: [wp-hackers] Getting context inside the add_attachment hook
In-Reply-To: <CAF_HY=pVjww5NipCr+L4qa+JYCkn90KONQJsQ-hyKTgpjoMc-w@mail.gmail.com>
References: <CAF_HY=pVjww5NipCr+L4qa+JYCkn90KONQJsQ-hyKTgpjoMc-w@mail.gmail.com>
Message-ID: <CAF_HY=rDtkUDt=cFpyxddTTUEv3QMv9T1jZx0phG=XtXVLTuTA@mail.gmail.com>

I've managed to work around it in a dirty way, passing a fake post_id to
media-upload.php, which in turn gets passed to async_upload.php and can
then be retrieved from the add_attachment hook.

If anyone knows of a cleaner way to do this, please share.

thanks!


Ricardo Moraleida



2012/10/5 Ricardo Moraleida <moraleida at gmail.com>

> Hey,
>
> is there a way to find out from which page the media_uploader was called
> inside the add_attachment hook (i.e right after each upload completes) ?
>
> I've tried passing GET values to media-upload.php and using
> is_page('pagename'), but still no dice.
>
> The case use is that I'd like to invert the process of creating posts for
> a custom post type. Instead of creating a post and uploading an image,
> uploading images/files would create a post and attach themselves to it
> automatically. It's doable inside add_attachment, but i need to constrain
> this to happen only to a specific post type.
>
> thanks!
>
> Ricardo Moraleida
>
>

From lists at rotorised.com  Sat Oct  6 01:16:53 2012
From: lists at rotorised.com (Ryan McCue)
Date: Sat, 06 Oct 2012 11:16:53 +1000
Subject: [wp-hackers] [Patch] Propagating password change in an action
In-Reply-To: <CAH9U35np3PwG=UJFUWazA-KQw+4fsYVwKioV_jTRNR08Uz_hmA@mail.gmail.com>
References: <CAH9U35np3PwG=UJFUWazA-KQw+4fsYVwKioV_jTRNR08Uz_hmA@mail.gmail.com>
Message-ID: <506F8685.3020706@rotorised.com>

Chlo? Desoutter wrote:
> I've hit a difficulty when it comes to updating the password, as the
> profile_update hook does not allow me to get the new plaintext password.

Hi Chlo?,

For bugs and feature requests, you should file a ticket on Trac:
http://core.trac.wordpress.org/

Once you've filed a ticket, you can attach a patch (such as the one
here) and it'll be considered for addition to core in the future. These
tickets also allow for better discussion than here on the mailing list.

> --- wordpress/wp-includes/user.php      2012-04-27 17:57:51.000000000 +0200
> +++ web/wp-includes/user.php    2012-10-04 17:36:12.382154680 +0200
> @@ -1427,6 +1427,8 @@ function wp_update_user($userdata) {
>         $current_user = wp_get_current_user();
>         if ( $current_user->ID == $ID ) {
>                 if ( isset($plaintext_pass) ) {
> +      // call password_updated to reflect that change elsewhere if needed
> +      do_action('password_updated', $ID, $plaintext_pass);
>                         wp_clear_auth_cookie();
>                         wp_set_auth_cookie($ID);
>                 }


From kuldeepdhaka9 at gmail.com  Sat Oct  6 03:25:45 2012
From: kuldeepdhaka9 at gmail.com (kuldeep dhaka)
Date: Sat, 6 Oct 2012 08:55:45 +0530
Subject: [wp-hackers] wordpress widget API
Message-ID: <CANPwNKWzuSaLaaoosg7bfaSGq8tSNhz1-KE4TeA2d4ZMW7PTEw@mail.gmail.com>

hello,
this is my first mail. :)
i have extended the wordpress widget api.
*
summary of API extension:*
when we create new sidebar widgets, we have to decide the values we have to
save in database to act upon while showing the widget at frontend.
but at designing, coding and taking input at back end is very fuzzy because
managing back end is very hard kind of thing.

i have modified the update & form function so programmer just only define
the definition of the inputs taken. and rest the routine library do it work.

as widget back end form didn't supported multi direction array [html form],
i also modified the name and id generator functions. to make them support.

if a programmer dont want to use the routine library he can write his own
function thereby maintaining backward compatibility with previous widgets.
if no definition is provided its show usual behaviors as before.

i made the update in the ABSPATH/wordpress-inlude/
widgets.php , file is attached

example plugin( twitterX ) is also attached[ this is the plugin which at
last made me think how to write such a routine , earlier i got the idea].

*Note:
*i have written the code for better readability , so efficiency could be at
stake.
i have mentioned my name at places where i made the updates, to help better
reading.

[this is a re-mail'ed bcos no one replied]

-- 
*Kuldeep Singh Dhaka*
*SaKul* Web Developer
+91-8791676237
skype: kuldeep.dhaka
kuldeepdhaka9 at gmail.com
Programmer, Open Source, Web Developer, Entrepreneur, Animal Lover,
Student, Blogger, Reverse Engineer, Embedded System.

From lists at alexking.org  Sat Oct  6 13:22:08 2012
From: lists at alexking.org (Alex King)
Date: Sat, 6 Oct 2012 07:22:08 -0600
Subject: [wp-hackers] Bulding a full search form?
In-Reply-To: <004501cda32a$98dce620$2200a8c0@TITA>
References: <000e01cda294$0ba49f50$2200a8c0@TITA>
	<00F61BA3-9C8C-431B-B737-659D805332BB@alexking.org>
	<004501cda32a$98dce620$2200a8c0@TITA>
Message-ID: <CAMfcb5eMUwQyShxCDcrhvr7ggNSaHU8aBWUyen_ChRBFz_Kt5Q@mail.gmail.com>

Why would it be bad to create custom taxonomies?

On Friday, October 5, 2012, Diana K. C wrote:

> Thanks Alex, I'm concerned about performance indeed.
>
> I thought that itens such gender only can have 2 values ever, so this data
> should be stored as post meta? Is not bad to create various taxonomies
> then?!
>
>
> ----- Original Message ----- From: "Alex King" <lists at alexking.org>
> To: <wp-hackers at lists.automattic.com>
> Sent: Friday, October 05, 2012 10:09 AM
> Subject: Re: [wp-hackers] Bulding a full search form?
>
>
> I'd recommend setting "pet gender" as a custom taxonomy instead of as post
> meta. Performance would be much better querying by the taxonomy term than
> by meta value (non-indexed column).
>
> Setting the default options as taxonomy terms can be done manually and to
> present a taxonomy as a set of fields in the post edit form, you can do a
> little jQuery hacking.
>
> https://gist.github.com/**3723819 <https://gist.github.com/3723819>
>
> Cheers,
> --Alex
>
> http://alexking.org | http://crowdfavorite.com
>
>
>
>
> On Oct 4, 2012, at 6:54 PM, Diana K. C <dianakac at gmail.com> wrote:
>
>  Hi there,
>>
>> ?'m having some spare time to get to know about searching content in WP,
>> I found some weak plugins, tips etc still anything helped at all.
>>
>> In single meta_key I manage to search it this way:
>>
>> Add this functions/plugin:
>>
>>   global $wp;
>>   $wp->add_query_var('meta_key')**;
>>   $wp->add_query_var('meta_**value');
>>   $wp->add_query_var('meta_**compare');
>>
>> And form would be:
>>
>> <form action="<?php echo home_url(); ?>/" method="get" id="searchform">
>>     <input class="input" name="s" type="text" id="keywords" value="" >
>>
>>           <select name="meta_value" id="img_post_country" >
>>           <option value="" selected="selected">Select pet gender</option>
>>           <option <?php if(isset($action_edit_image)){ ?>
>> selected="selected" <?php } ?> value="<?php _e('Male','wp_pet');?>"><?php
>> _e('Male','wp_pet');?></**option>
>>           <option value="<?php _e('Female','wp_pet');?>"><?**php
>> _e('Female','wp_pet');?></**option>
>>           </select>
>>
>>    <input type="hidden" name="post_type" value="pet" />
>>
>>            <input type="submit" name="search" value="<?php
>> _e('Search','cosmotheme') ?>">
>>    </form>
>>
>> There's no way to search more than a meta_key with this, it would be nice
>> if I could set the meta_key name in the input name instead of "meta_value",
>> then I could use more than one meta_key. I tried but doesn't work :(
>>
>>
>> I found this also http://wordpress.**stackexchange.com/questions/**
>> 38361/advanced-search-form-**with-filters-for-custom-**
>> taxonomies-and-custom-fields<http://wordpress.stackexchange.com/questions/38361/advanced-search-form-with-filters-for-custom-taxonomies-and-custom-fields>
>>
>> Beside the fact I'm lacking knowledge on post data e sessions, is this a
>> sort of a hack?
>>
>> Thanx!
>>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>

From mail at scribu.net  Sat Oct  6 14:49:17 2012
From: mail at scribu.net (scribu)
Date: Sat, 6 Oct 2012 17:49:17 +0300
Subject: [wp-hackers] wordpress widget API
In-Reply-To: <CANPwNKWzuSaLaaoosg7bfaSGq8tSNhz1-KE4TeA2d4ZMW7PTEw@mail.gmail.com>
References: <CANPwNKWzuSaLaaoosg7bfaSGq8tSNhz1-KE4TeA2d4ZMW7PTEw@mail.gmail.com>
Message-ID: <CABzSYNP13+wgJcwt_Ck2pJs=L=o7e=+SUJg=urNhyw00Xk4_vQ@mail.gmail.com>

On Sat, Oct 6, 2012 at 6:25 AM, kuldeep dhaka <kuldeepdhaka9 at gmail.com>wrote:

> i made the update in the ABSPATH/wordpress-inlude/
> widgets.php , file is attached
>
> example plugin( twitterX ) is also attached[ this is the plugin which at
> last made me think how to write such a routine , earlier i got the idea].
>

Hello,

Attachments sent to this mailing list get stripped. The best way to share
your contributions would be to open a ticket on trac[1] (you can use the
same login as in the support forums[3]) and attach your changes in the form
of a patch[2].

[1] http://core.trac.wordpress.org/
[2] http://core.trac.wordpress.org/wiki#HowtoSubmitPatches
[3] http://wordpress.org/support/

-- 
http://scribu.net

From dianakac at gmail.com  Sat Oct  6 18:45:23 2012
From: dianakac at gmail.com (Diana K. C)
Date: Sat, 6 Oct 2012 15:45:23 -0300
Subject: [wp-hackers] Bulding a full search form?
References: <000e01cda294$0ba49f50$2200a8c0@TITA><00F61BA3-9C8C-431B-B737-659D805332BB@alexking.org><004501cda32a$98dce620$2200a8c0@TITA>
	<CAMfcb5eMUwQyShxCDcrhvr7ggNSaHU8aBWUyen_ChRBFz_Kt5Q@mail.gmail.com>
Message-ID: <003701cda3f2$c0e18270$2200a8c0@TITA>

Because some taxonomies will store only 2 itens such gender?!

Ok to auto populate and filter but thought metadata would be faster, now I'm 
confused :S

----- Original Message ----- 
From: "Alex King" <lists at alexking.org>
To: <wp-hackers at lists.automattic.com>
Sent: Saturday, October 06, 2012 10:22 AM
Subject: Re: [wp-hackers] Bulding a full search form?


Why would it be bad to create custom taxonomies?

On Friday, October 5, 2012, Diana K. C wrote:

> Thanks Alex, I'm concerned about performance indeed.
>
> I thought that itens such gender only can have 2 values ever, so this data
> should be stored as post meta? Is not bad to create various taxonomies
> then?!
>
>
> ----- Original Message ----- From: "Alex King" <lists at alexking.org>
> To: <wp-hackers at lists.automattic.com>
> Sent: Friday, October 05, 2012 10:09 AM
> Subject: Re: [wp-hackers] Bulding a full search form?
>
>
> I'd recommend setting "pet gender" as a custom taxonomy instead of as post
> meta. Performance would be much better querying by the taxonomy term than
> by meta value (non-indexed column).
>
> Setting the default options as taxonomy terms can be done manually and to
> present a taxonomy as a set of fields in the post edit form, you can do a
> little jQuery hacking.
>
> https://gist.github.com/**3723819 <https://gist.github.com/3723819>
>
> Cheers,
> --Alex
>
> http://alexking.org | http://crowdfavorite.com
>
>
>
>
> On Oct 4, 2012, at 6:54 PM, Diana K. C <dianakac at gmail.com> wrote:
>
>  Hi there,
>>
>> ?'m having some spare time to get to know about searching content in WP,
>> I found some weak plugins, tips etc still anything helped at all.
>>
>> In single meta_key I manage to search it this way:
>>
>> Add this functions/plugin:
>>
>>   global $wp;
>>   $wp->add_query_var('meta_key')**;
>>   $wp->add_query_var('meta_**value');
>>   $wp->add_query_var('meta_**compare');
>>
>> And form would be:
>>
>> <form action="<?php echo home_url(); ?>/" method="get" id="searchform">
>>     <input class="input" name="s" type="text" id="keywords" value="" >
>>
>>           <select name="meta_value" id="img_post_country" >
>>           <option value="" selected="selected">Select pet gender</option>
>>           <option <?php if(isset($action_edit_image)){ ?>
>> selected="selected" <?php } ?> value="<?php _e('Male','wp_pet');?>"><?php
>> _e('Male','wp_pet');?></**option>
>>           <option value="<?php _e('Female','wp_pet');?>"><?**php
>> _e('Female','wp_pet');?></**option>
>>           </select>
>>
>>    <input type="hidden" name="post_type" value="pet" />
>>
>>            <input type="submit" name="search" value="<?php
>> _e('Search','cosmotheme') ?>">
>>    </form>
>>
>> There's no way to search more than a meta_key with this, it would be nice
>> if I could set the meta_key name in the input name instead of 
>> "meta_value",
>> then I could use more than one meta_key. I tried but doesn't work :(
>>
>>
>> I found this also http://wordpress.**stackexchange.com/questions/**
>> 38361/advanced-search-form-**with-filters-for-custom-**
>> taxonomies-and-custom-fields<http://wordpress.stackexchange.com/questions/38361/advanced-search-form-with-filters-for-custom-taxonomies-and-custom-fields>
>>
>> Beside the fact I'm lacking knowledge on post data e sessions, is this a
>> sort of a hack?
>>
>> Thanx!
>>
>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
> ______________________________**_________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers 


From joshua.sibelman at gmail.com  Sat Oct  6 19:32:20 2012
From: joshua.sibelman at gmail.com (Joshua Sibelman)
Date: Sat, 6 Oct 2012 12:32:20 -0700
Subject: [wp-hackers] Bulding a full search form?
In-Reply-To: <003701cda3f2$c0e18270$2200a8c0@TITA>
References: <000e01cda294$0ba49f50$2200a8c0@TITA><00F61BA3-9C8C-431B-B737-659D805332BB@alexking.org><004501cda32a$98dce620$2200a8c0@TITA>
	<CAMfcb5eMUwQyShxCDcrhvr7ggNSaHU8aBWUyen_ChRBFz_Kt5Q@mail.gmail.com>
	<003701cda3f2$c0e18270$2200a8c0@TITA>
Message-ID: <1047CA0B-5AAB-41B5-B5DA-328DFA91D935@gmail.com>

It doesn't matter if the taxonomy only has two possible values. Database queries will still be faster against the indexed columns of the taxonomy tables vs. the non-indexed postmeta values.



On Oct 6, 2012, at 11:45 AM, "Diana K. C" <dianakac at gmail.com> wrote:

> Because some taxonomies will store only 2 itens such gender?!
> 
> Ok to auto populate and filter but thought metadata would be faster, now I'm confused :S
> 
> ----- Original Message ----- From: "Alex King" <lists at alexking.org>
> To: <wp-hackers at lists.automattic.com>
> Sent: Saturday, October 06, 2012 10:22 AM
> Subject: Re: [wp-hackers] Bulding a full search form?
> 
> 
> Why would it be bad to create custom taxonomies?
> 
> On Friday, October 5, 2012, Diana K. C wrote:
> 
>> Thanks Alex, I'm concerned about performance indeed.
>> 
>> I thought that itens such gender only can have 2 values ever, so this data
>> should be stored as post meta? Is not bad to create various taxonomies
>> then?!
>> 
>> 
>> ----- Original Message ----- From: "Alex King" <lists at alexking.org>
>> To: <wp-hackers at lists.automattic.com>
>> Sent: Friday, October 05, 2012 10:09 AM
>> Subject: Re: [wp-hackers] Bulding a full search form?
>> 
>> 
>> I'd recommend setting "pet gender" as a custom taxonomy instead of as post
>> meta. Performance would be much better querying by the taxonomy term than
>> by meta value (non-indexed column).
>> 
>> Setting the default options as taxonomy terms can be done manually and to
>> present a taxonomy as a set of fields in the post edit form, you can do a
>> little jQuery hacking.
>> 
>> https://gist.github.com/**3723819 <https://gist.github.com/3723819>
>> 
>> Cheers,
>> --Alex
>> 
>> http://alexking.org | http://crowdfavorite.com
>> 
>> 
>> 
>> 
>> On Oct 4, 2012, at 6:54 PM, Diana K. C <dianakac at gmail.com> wrote:
>> 
>> Hi there,
>>> 
>>> ?'m having some spare time to get to know about searching content in WP,
>>> I found some weak plugins, tips etc still anything helped at all.
>>> 
>>> In single meta_key I manage to search it this way:
>>> 
>>> Add this functions/plugin:
>>> 
>>>  global $wp;
>>>  $wp->add_query_var('meta_key')**;
>>>  $wp->add_query_var('meta_**value');
>>>  $wp->add_query_var('meta_**compare');
>>> 
>>> And form would be:
>>> 
>>> <form action="<?php echo home_url(); ?>/" method="get" id="searchform">
>>>    <input class="input" name="s" type="text" id="keywords" value="" >
>>> 
>>>          <select name="meta_value" id="img_post_country" >
>>>          <option value="" selected="selected">Select pet gender</option>
>>>          <option <?php if(isset($action_edit_image)){ ?>
>>> selected="selected" <?php } ?> value="<?php _e('Male','wp_pet');?>"><?php
>>> _e('Male','wp_pet');?></**option>
>>>          <option value="<?php _e('Female','wp_pet');?>"><?**php
>>> _e('Female','wp_pet');?></**option>
>>>          </select>
>>> 
>>>   <input type="hidden" name="post_type" value="pet" />
>>> 
>>>           <input type="submit" name="search" value="<?php
>>> _e('Search','cosmotheme') ?>">
>>>   </form>
>>> 
>>> There's no way to search more than a meta_key with this, it would be nice
>>> if I could set the meta_key name in the input name instead of "meta_value",
>>> then I could use more than one meta_key. I tried but doesn't work :(
>>> 
>>> 
>>> I found this also http://wordpress.**stackexchange.com/questions/**
>>> 38361/advanced-search-form-**with-filters-for-custom-**
>>> taxonomies-and-custom-fields<http://wordpress.stackexchange.com/questions/38361/advanced-search-form-with-filters-for-custom-taxonomies-and-custom-fields>
>>> 
>>> Beside the fact I'm lacking knowledge on post data e sessions, is this a
>>> sort of a hack?
>>> 
>>> Thanx!
>>> 
>> 
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From goldenapplesdesign at gmail.com  Sat Oct  6 20:00:05 2012
From: goldenapplesdesign at gmail.com (Nathaniel Taintor)
Date: Sat, 6 Oct 2012 13:00:05 -0700
Subject: [wp-hackers] [Patch] Propagating password change in an action
In-Reply-To: <CAH9U35np3PwG=UJFUWazA-KQw+4fsYVwKioV_jTRNR08Uz_hmA@mail.gmail.com>
References: <CAH9U35np3PwG=UJFUWazA-KQw+4fsYVwKioV_jTRNR08Uz_hmA@mail.gmail.com>
Message-ID: <CAH+NfoAMrkaCbxi7uuphFTzu453PVdRaA7+LZjVqgLeB+F8KFw@mail.gmail.com>

I'm going to guess that the potential for evil this patch would introduce,
if it were in core, outweighs any possible usefulness.

I, for one, would not want plugins to be able to access user's plaintext
passwords.

If you're running a system where you need to access plaintext passwords,
you probably will have to either hack the core functions or override the
login page to provide your own password reset function. But... there must
be a better way of doing whatever you're trying to do?


Nathaniel Taintor, Designer/Developer
*Golden Apples Design*
http://goldenapplesdesign.com

@GoldenApples | 717.434.3226
goldenapplesdesign at gmail.com



On Fri, Oct 5, 2012 at 2:27 PM, Chlo? Desoutter <
chloe.desoutter+wphackers at gmail.com> wrote:

> Hi folks,
>
> I'm new on this list, my name is Chlo? Desoutter, I work as a freelance
> contractor to provide my customers with great WordPress-based solutions.
>
> I'm currently working on using WordPress as an "accounts manager" for a
> bigger back-end. This implies updating profile infos, password, and stuff
> and reporting that to the big backend in real time.
>
> I've hit a difficulty when it comes to updating the password, as the
> profile_update hook does not allow me to get the new plaintext password.
>
> So I've come up with a patch in wp_update_user()
> chloe at ayodhya:~/opidev$ diff -uprN wordpress/wp-includes/user.php
> web/wp-includes/user.php
> --- wordpress/wp-includes/user.php      2012-04-27 17:57:51.000000000 +0200
> +++ web/wp-includes/user.php    2012-10-04 17:36:12.382154680 +0200
> @@ -1427,6 +1427,8 @@ function wp_update_user($userdata) {
>         $current_user = wp_get_current_user();
>         if ( $current_user->ID == $ID ) {
>                 if ( isset($plaintext_pass) ) {
> +      // call password_updated to reflect that change elsewhere if needed
> +      do_action('password_updated', $ID, $plaintext_pass);
>                         wp_clear_auth_cookie();
>                         wp_set_auth_cookie($ID);
>                 }
>
> pastebin: http://pastebin.com/FZfuLbxC
>
> It's used quite simply:
> add_action('password_updated', 'my_password_updated', 1, 2);
>
> function my_password_update($id, $newpass)
> {
> file_put_contents("/tmp/log", "Password for user #${id} is now $newpass");
> }
>
> I've found no other way to retrieve that non-hashed password (I usually
> hate touching the core, but this time, there's no choice)
>
> Would be nice if that came up into the main source tree.
>
> Any feedback on that?
>
> Hope this helps
>
> Yours
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From dianakac at gmail.com  Sat Oct  6 20:07:35 2012
From: dianakac at gmail.com (Diana K. C)
Date: Sat, 6 Oct 2012 17:07:35 -0300
Subject: [wp-hackers] Bulding a full search form?
References: <000e01cda294$0ba49f50$2200a8c0@TITA><00F61BA3-9C8C-431B-B737-659D805332BB@alexking.org><004501cda32a$98dce620$2200a8c0@TITA><CAMfcb5eMUwQyShxCDcrhvr7ggNSaHU8aBWUyen_ChRBFz_Kt5Q@mail.gmail.com><003701cda3f2$c0e18270$2200a8c0@TITA>
	<1047CA0B-5AAB-41B5-B5DA-328DFA91D935@gmail.com>
Message-ID: <006701cda3fe$3c8dd080$2200a8c0@TITA>

Oh I see!

Thanks everybody, I will consider the taxonomies!

----- Original Message ----- 
From: "Joshua Sibelman" <joshua.sibelman at gmail.com>
To: <wp-hackers at lists.automattic.com>
Sent: Saturday, October 06, 2012 4:32 PM
Subject: Re: [wp-hackers] Bulding a full search form?


It doesn't matter if the taxonomy only has two possible values. Database 
queries will still be faster against the indexed columns of the taxonomy 
tables vs. the non-indexed postmeta values.



On Oct 6, 2012, at 11:45 AM, "Diana K. C" <dianakac at gmail.com> wrote:

> Because some taxonomies will store only 2 itens such gender?!
>
> Ok to auto populate and filter but thought metadata would be faster, now 
> I'm confused :S
>
> ----- Original Message ----- From: "Alex King" <lists at alexking.org>
> To: <wp-hackers at lists.automattic.com>
> Sent: Saturday, October 06, 2012 10:22 AM
> Subject: Re: [wp-hackers] Bulding a full search form?
>
>
> Why would it be bad to create custom taxonomies?
>
> On Friday, October 5, 2012, Diana K. C wrote:
>
>> Thanks Alex, I'm concerned about performance indeed.
>>
>> I thought that itens such gender only can have 2 values ever, so this 
>> data
>> should be stored as post meta? Is not bad to create various taxonomies
>> then?!
>>
>>
>> ----- Original Message ----- From: "Alex King" <lists at alexking.org>
>> To: <wp-hackers at lists.automattic.com>
>> Sent: Friday, October 05, 2012 10:09 AM
>> Subject: Re: [wp-hackers] Bulding a full search form?
>>
>>
>> I'd recommend setting "pet gender" as a custom taxonomy instead of as 
>> post
>> meta. Performance would be much better querying by the taxonomy term than
>> by meta value (non-indexed column).
>>
>> Setting the default options as taxonomy terms can be done manually and to
>> present a taxonomy as a set of fields in the post edit form, you can do a
>> little jQuery hacking.
>>
>> https://gist.github.com/**3723819 <https://gist.github.com/3723819>
>>
>> Cheers,
>> --Alex
>>
>> http://alexking.org | http://crowdfavorite.com
>>
>>
>>
>>
>> On Oct 4, 2012, at 6:54 PM, Diana K. C <dianakac at gmail.com> wrote:
>>
>> Hi there,
>>>
>>> ?'m having some spare time to get to know about searching content in WP,
>>> I found some weak plugins, tips etc still anything helped at all.
>>>
>>> In single meta_key I manage to search it this way:
>>>
>>> Add this functions/plugin:
>>>
>>>  global $wp;
>>>  $wp->add_query_var('meta_key')**;
>>>  $wp->add_query_var('meta_**value');
>>>  $wp->add_query_var('meta_**compare');
>>>
>>> And form would be:
>>>
>>> <form action="<?php echo home_url(); ?>/" method="get" id="searchform">
>>>    <input class="input" name="s" type="text" id="keywords" value="" >
>>>
>>>          <select name="meta_value" id="img_post_country" >
>>>          <option value="" selected="selected">Select pet gender</option>
>>>          <option <?php if(isset($action_edit_image)){ ?>
>>> selected="selected" <?php } ?> value="<?php 
>>> _e('Male','wp_pet');?>"><?php
>>> _e('Male','wp_pet');?></**option>
>>>          <option value="<?php _e('Female','wp_pet');?>"><?**php
>>> _e('Female','wp_pet');?></**option>
>>>          </select>
>>>
>>>   <input type="hidden" name="post_type" value="pet" />
>>>
>>>           <input type="submit" name="search" value="<?php
>>> _e('Search','cosmotheme') ?>">
>>>   </form>
>>>
>>> There's no way to search more than a meta_key with this, it would be 
>>> nice
>>> if I could set the meta_key name in the input name instead of 
>>> "meta_value",
>>> then I could use more than one meta_key. I tried but doesn't work :(
>>>
>>>
>>> I found this also http://wordpress.**stackexchange.com/questions/**
>>> 38361/advanced-search-form-**with-filters-for-custom-**
>>> taxonomies-and-custom-fields<http://wordpress.stackexchange.com/questions/38361/advanced-search-form-with-filters-for-custom-taxonomies-and-custom-fields>
>>>
>>> Beside the fact I'm lacking knowledge on post data e sessions, is this a
>>> sort of a hack?
>>>
>>> Thanx!
>>>
>>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>> ______________________________**_________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/**mailman/listinfo/wp-hackers<http://lists.automattic.com/mailman/listinfo/wp-hackers>
>>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers 


From rob at bigfish.co.uk  Sat Oct  6 20:47:05 2012
From: rob at bigfish.co.uk (Rob Miller)
Date: Sat, 6 Oct 2012 21:47:05 +0100
Subject: [wp-hackers] [Patch] Propagating password change in an action
In-Reply-To: <CAH+NfoAMrkaCbxi7uuphFTzu453PVdRaA7+LZjVqgLeB+F8KFw@mail.gmail.com>
References: <CAH9U35np3PwG=UJFUWazA-KQw+4fsYVwKioV_jTRNR08Uz_hmA@mail.gmail.com>
	<CAH+NfoAMrkaCbxi7uuphFTzu453PVdRaA7+LZjVqgLeB+F8KFw@mail.gmail.com>
Message-ID: <178B8D63-677E-495C-94EA-B0A78F9C33F0@bigfish.co.uk>

On 6 Oct 2012, at 21:00, Nathaniel Taintor <goldenapplesdesign at gmail.com> wrote:

> I'm going to guess that the potential for evil this patch would introduce,
> if it were in core, outweighs any possible usefulness.
> 
> I, for one, would not want plugins to be able to access user's plaintext
> passwords.

This argument is a bit silly ? any plugin could access a user's plaintext password even now and has always been able to, by hooking into `wp_login` and then examining the POST variables.

You're installing a plugin ? inexorably and by its very nature, it's going to have the power to do things like that.


--

Rob Miller
Head of Digital

big fish?
11 Chelsea Wharf
15 Lots Road
London
SW10 0QJ
 
Office number: +44 (0)20 7795 0075
Direct number: +44 (0)20 7376 6799

www.bigfish.co.uk


From burobjorn at gmail.com  Mon Oct  8 13:30:41 2012
From: burobjorn at gmail.com (BjornW)
Date: Mon, 08 Oct 2012 15:30:41 +0200
Subject: [wp-hackers] Feedback on Trac #22128: Adding upload mimetype in
 Multisite does not work if mimetype is not already defined
Message-ID: <5072D581.3050009@gmail.com>

Hi,

We'd love to get some feedback on this trac ticket:

"We would like to add 3gp to the list of file types to be uploaded in
the sites of our network install.

We've tried to add 3gp to the Network Settings->Upload File Types
setting for this. However after having saved the setting we were still
not able to upload 3gp. It seems the user setting is being overruled by
the list of global settings."

See for more info:
http://core.trac.wordpress.org/ticket/22128

Thanks!

grtz
BjornW

From steve at sltaylor.co.uk  Tue Oct  9 12:31:52 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Tue, 9 Oct 2012 13:31:52 +0100
Subject: [wp-hackers] 3.5 and attachment_fields_to_edit (custom fields for
	media)
Message-ID: <CAGEuVU3OvLHQBWgw_h7b8JtEP7nvQQGtywvgWgqatT7X_fRizA@mail.gmail.com>

Hi,

A plugin of mine
(http://wordpress.org/extend/plugins/developers-custom-fields/)
involves adding custom fields to media attachments via the
attachment_fields_to_edit hook. It looks like this method is broken in
the current beta of 3.5 due to moving media editing to post.php.

Has anyone worked with this / posted about it? I've looked through the
Trac ticket (http://core.trac.wordpress.org/ticket/21391) and there
don't seem to be any hints for devs whose stuff this breaks.

I'm ploughing into it now, just wondered if anyone else was ahead of
me! I'm guessing the new approach will be even easier to hook into
(using standard meta boxes) - but does legacy support just involve
leaving attachment_fields_to_edit stuff in place?

Cheers,

Steve Taylor

From mailing at markoheijnen.nl  Tue Oct  9 13:05:33 2012
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Tue, 9 Oct 2012 15:05:33 +0200
Subject: [wp-hackers] 3.5 and attachment_fields_to_edit (custom fields
	for media)
In-Reply-To: <CAGEuVU3OvLHQBWgw_h7b8JtEP7nvQQGtywvgWgqatT7X_fRizA@mail.gmail.com>
References: <CAGEuVU3OvLHQBWgw_h7b8JtEP7nvQQGtywvgWgqatT7X_fRizA@mail.gmail.com>
Message-ID: <EBF7D859-08C1-4BE2-8A75-0D4AE56238EA@markoheijnen.nl>

Hey Steve,

The best way would be asking at that ticket. Or even better put it on the agenda tomorrow when the blog post is get added on http://make.wordpress.org/core/.

I would say your plugin will not be needed anymore. If you want to add support it seems better for you to add legacy support to your plugin to be sure everything still works.

Marko


Op 9 okt. 2012, om 14:31 heeft Steve Taylor <steve at sltaylor.co.uk> het volgende geschreven:

> Hi,
> 
> A plugin of mine
> (http://wordpress.org/extend/plugins/developers-custom-fields/)
> involves adding custom fields to media attachments via the
> attachment_fields_to_edit hook. It looks like this method is broken in
> the current beta of 3.5 due to moving media editing to post.php.
> 
> Has anyone worked with this / posted about it? I've looked through the
> Trac ticket (http://core.trac.wordpress.org/ticket/21391) and there
> don't seem to be any hints for devs whose stuff this breaks.
> 
> I'm ploughing into it now, just wondered if anyone else was ahead of
> me! I'm guessing the new approach will be even easier to hook into
> (using standard meta boxes) - but does legacy support just involve
> leaving attachment_fields_to_edit stuff in place?
> 
> Cheers,
> 
> Steve Taylor
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From steve at sltaylor.co.uk  Tue Oct  9 13:35:25 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Tue, 9 Oct 2012 14:35:25 +0100
Subject: [wp-hackers] 3.5 and attachment_fields_to_edit (custom fields
	for media)
In-Reply-To: <EBF7D859-08C1-4BE2-8A75-0D4AE56238EA@markoheijnen.nl>
References: <CAGEuVU3OvLHQBWgw_h7b8JtEP7nvQQGtywvgWgqatT7X_fRizA@mail.gmail.com>
	<EBF7D859-08C1-4BE2-8A75-0D4AE56238EA@markoheijnen.nl>
Message-ID: <CAGEuVU3YQVMZ_24z264HuxD-_As6M32o_DVJ1a32rGjxU1PujQ@mail.gmail.com>

Thanks.

Not sure what makes you say the plugin won't be needed. Is 3.5 adding
a new API for custom fields? Support for Google maps, date/time
pickers, media selection in custom fields? It'd be great if the plugin
is made redundant by core features, but I don't see anything like a
significant chunk of the plugin's features in 3.5.


On 9 October 2012 14:05, Marko Heijnen <mailing at markoheijnen.nl> wrote:
> Hey Steve,
>
> The best way would be asking at that ticket. Or even better put it on the agenda tomorrow when the blog post is get added on http://make.wordpress.org/core/.
>
> I would say your plugin will not be needed anymore. If you want to add support it seems better for you to add legacy support to your plugin to be sure everything still works.
>
> Marko
>
>
> Op 9 okt. 2012, om 14:31 heeft Steve Taylor <steve at sltaylor.co.uk> het volgende geschreven:
>
>> Hi,
>>
>> A plugin of mine
>> (http://wordpress.org/extend/plugins/developers-custom-fields/)
>> involves adding custom fields to media attachments via the
>> attachment_fields_to_edit hook. It looks like this method is broken in
>> the current beta of 3.5 due to moving media editing to post.php.
>>
>> Has anyone worked with this / posted about it? I've looked through the
>> Trac ticket (http://core.trac.wordpress.org/ticket/21391) and there
>> don't seem to be any hints for devs whose stuff this breaks.
>>
>> I'm ploughing into it now, just wondered if anyone else was ahead of
>> me! I'm guessing the new approach will be even easier to hook into
>> (using standard meta boxes) - but does legacy support just involve
>> leaving attachment_fields_to_edit stuff in place?
>>
>> Cheers,
>>
>> Steve Taylor
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mailing at markoheijnen.nl  Tue Oct  9 13:46:22 2012
From: mailing at markoheijnen.nl (Marko Heijnen)
Date: Tue, 9 Oct 2012 15:46:22 +0200
Subject: [wp-hackers] 3.5 and attachment_fields_to_edit (custom fields
	for media)
In-Reply-To: <CAGEuVU3YQVMZ_24z264HuxD-_As6M32o_DVJ1a32rGjxU1PujQ@mail.gmail.com>
References: <CAGEuVU3OvLHQBWgw_h7b8JtEP7nvQQGtywvgWgqatT7X_fRizA@mail.gmail.com>
	<EBF7D859-08C1-4BE2-8A75-0D4AE56238EA@markoheijnen.nl>
	<CAGEuVU3YQVMZ_24z264HuxD-_As6M32o_DVJ1a32rGjxU1PujQ@mail.gmail.com>
Message-ID: <F0802392-B267-479D-9A6C-990E18A2E30C@markoheijnen.nl>

Ah I see it know. Wasn't really clear at first impression.
I guess some of those features will never be in core maybe some should but then more in an improved settings API you can also use in a metabox.

Op 9 okt. 2012, om 15:35 heeft Steve Taylor <steve at sltaylor.co.uk> het volgende geschreven:

> Thanks.
> 
> Not sure what makes you say the plugin won't be needed. Is 3.5 adding
> a new API for custom fields? Support for Google maps, date/time
> pickers, media selection in custom fields? It'd be great if the plugin
> is made redundant by core features, but I don't see anything like a
> significant chunk of the plugin's features in 3.5.
> 
> 
> On 9 October 2012 14:05, Marko Heijnen <mailing at markoheijnen.nl> wrote:
>> Hey Steve,
>> 
>> The best way would be asking at that ticket. Or even better put it on the agenda tomorrow when the blog post is get added on http://make.wordpress.org/core/.
>> 
>> I would say your plugin will not be needed anymore. If you want to add support it seems better for you to add legacy support to your plugin to be sure everything still works.
>> 
>> Marko
>> 
>> 
>> Op 9 okt. 2012, om 14:31 heeft Steve Taylor <steve at sltaylor.co.uk> het volgende geschreven:
>> 
>>> Hi,
>>> 
>>> A plugin of mine
>>> (http://wordpress.org/extend/plugins/developers-custom-fields/)
>>> involves adding custom fields to media attachments via the
>>> attachment_fields_to_edit hook. It looks like this method is broken in
>>> the current beta of 3.5 due to moving media editing to post.php.
>>> 
>>> Has anyone worked with this / posted about it? I've looked through the
>>> Trac ticket (http://core.trac.wordpress.org/ticket/21391) and there
>>> don't seem to be any hints for devs whose stuff this breaks.
>>> 
>>> I'm ploughing into it now, just wondered if anyone else was ahead of
>>> me! I'm guessing the new approach will be even easier to hook into
>>> (using standard meta boxes) - but does legacy support just involve
>>> leaving attachment_fields_to_edit stuff in place?
>>> 
>>> Cheers,
>>> 
>>> Steve Taylor
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From moraleida at gmail.com  Tue Oct  9 17:19:46 2012
From: moraleida at gmail.com (Ricardo Moraleida)
Date: Tue, 9 Oct 2012 14:19:46 -0300
Subject: [wp-hackers] wp_update_post and post_status - possible bug?
Message-ID: <CAF_HY=qOsTjzM=mwE2vy5d5cZaNzOx+ZzD6bbAdvn22p6Jbp4w@mail.gmail.com>

Hi there,

i'm in doubt if this is a bug and I should open a trac ticket for it, or it
is just a case of me doing things the wrong way.

Basically, i'm trying to alter the post_status via wp_update_post() based
on a datepicker value that the user will choose. Seemed trivial at first,
but i'm getting sketchy results from it - future-dated posts being
published and past-dated posts remaining scheduled. Note that applying
the same values to wp_insert_post() work as expected.

I found this while finishing a project where users would be able to publish
posts from the front-end. Started telling the story here:
http://wordpress.stackexchange.com/q/67451/7890

Being stuck in that, i decided to move to a fresh installation with a blank
theme for testing purposes. The code being tested is this:
https://gist.github.com/3860049

Test results so far are as follows:

1) Include post with yesterday's date:
    $operation = 'include';
    $post_date = strtotime( "yesterday" );

    Code response (from gist line 52): "publish include"
*    Result: Post published with the correct date.*

2) Edit published post and change date from yesterday to today:
    $operation = 'edit';
    $post_date = strtotime( "now" );

    Code response: "publish edit"
    *Result: Post published with today's date*

3) Edit published post and change date from today to next week
    $operation = 'edit';
    $post_date = strtotime( "+1 week" );

    Code response: "future edit"
    *Result: Post remains published with a date 1 week from today (remains
visible to users on twenty eleven)*

4) Include new post scheduled for next week
    $operation = 'include';
    $post_date = strtotime( "+1 week" );

    Code response: "future include"
    *Result: Post is correctly scheduled for a 1 week from today*

5) Edit back a scheduled post to being published yesterday
    $operation = 'edit';
    $post_date = strtotime( "yesterday" );

    Code response: "publish edit"
    *Result: Post is scheduled with yesterday's date (remains invisible to
users on twenty eleven)*

This was first noted on 3.4.2 and the later tests were on 3.5-beta1-22133

Any ideas?

Ricardo Moraleida

From otto at ottodestruct.com  Tue Oct  9 17:39:26 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 9 Oct 2012 12:39:26 -0500
Subject: [wp-hackers] wp_update_post and post_status - possible bug?
In-Reply-To: <CAF_HY=qOsTjzM=mwE2vy5d5cZaNzOx+ZzD6bbAdvn22p6Jbp4w@mail.gmail.com>
References: <CAF_HY=qOsTjzM=mwE2vy5d5cZaNzOx+ZzD6bbAdvn22p6Jbp4w@mail.gmail.com>
Message-ID: <CAD-FghxFOEhFmXLggz_oKSOm5XB=gkKku00-X+8FzwmJ2KBynw@mail.gmail.com>

Well, first, you're trying to create a post but not setting
post_date_gmt. Weird things happen when you don't set post_date_gmt.
Here's an easy way to do it:

$post_date_gmt = get_gmt_from_date($post_date);

Secondly, you don't need to decide future or publish for the
post_status. The wp_insert_post code will do that for you. Just set it
to 'publish'. And make sure you have post_date_gmt set correctly.

Might help. Not sure.

-Otto


On Tue, Oct 9, 2012 at 12:19 PM, Ricardo Moraleida <moraleida at gmail.com> wrote:
> Hi there,
>
> i'm in doubt if this is a bug and I should open a trac ticket for it, or it
> is just a case of me doing things the wrong way.
>
> Basically, i'm trying to alter the post_status via wp_update_post() based
> on a datepicker value that the user will choose. Seemed trivial at first,
> but i'm getting sketchy results from it - future-dated posts being
> published and past-dated posts remaining scheduled. Note that applying
> the same values to wp_insert_post() work as expected.
>
> I found this while finishing a project where users would be able to publish
> posts from the front-end. Started telling the story here:
> http://wordpress.stackexchange.com/q/67451/7890
>
> Being stuck in that, i decided to move to a fresh installation with a blank
> theme for testing purposes. The code being tested is this:
> https://gist.github.com/3860049
>
> Test results so far are as follows:
>
> 1) Include post with yesterday's date:
>     $operation = 'include';
>     $post_date = strtotime( "yesterday" );
>
>     Code response (from gist line 52): "publish include"
> *    Result: Post published with the correct date.*
>
> 2) Edit published post and change date from yesterday to today:
>     $operation = 'edit';
>     $post_date = strtotime( "now" );
>
>     Code response: "publish edit"
>     *Result: Post published with today's date*
>
> 3) Edit published post and change date from today to next week
>     $operation = 'edit';
>     $post_date = strtotime( "+1 week" );
>
>     Code response: "future edit"
>     *Result: Post remains published with a date 1 week from today (remains
> visible to users on twenty eleven)*
>
> 4) Include new post scheduled for next week
>     $operation = 'include';
>     $post_date = strtotime( "+1 week" );
>
>     Code response: "future include"
>     *Result: Post is correctly scheduled for a 1 week from today*
>
> 5) Edit back a scheduled post to being published yesterday
>     $operation = 'edit';
>     $post_date = strtotime( "yesterday" );
>
>     Code response: "publish edit"
>     *Result: Post is scheduled with yesterday's date (remains invisible to
> users on twenty eleven)*
>
> This was first noted on 3.4.2 and the later tests were on 3.5-beta1-22133
>
> Any ideas?
>
> Ricardo Moraleida
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mickyhulse.lists at gmail.com  Tue Oct  9 18:14:29 2012
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Tue, 9 Oct 2012 11:14:29 -0700
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
Message-ID: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>

Hey all,

In order to fix this cron error:

<http://core.trac.wordpress.org/ticket/11831>

...the IS guy at my work opted to enable ALTERNATE_WP_CRON (I was
kinda hoping he would have tweaked the server vs. patch with the
alternate cron setting).

The above ticket and the below post seemed to give us the most
information about the alternate cron:

<http://wordpress.org/support/topic/scheduled-posts-still-not-working-in-282#post-1175405>

I have my concerns about using the alternate cron... Specifically,
paragraph got me worried:

"This alternate method uses a redirection approach, which makes the
users browser get a redirect when the cron needs to run, so that they
come back to the site immediately while cron continues to run in the
connection they just dropped. This method is a bit iffy sometimes,
which is why it's not the default."

I guess my question is this: On a medium traffic site (let's say ~1.5
million page views a month) could the alternate cron redirection cause
problems for the front end user? What about SEO?

I just don't like the thought of redirects happening for users for the
sake of a cron that may or may not need to run. Am I being irrational?

I'm wondering if I should just disable ALTERNATE_WP_CRON and turn off
WP_DEBUG (i.e. out of site, out of mind).

Thanks!
Micky

From moraleida at gmail.com  Tue Oct  9 18:16:43 2012
From: moraleida at gmail.com (Ricardo Moraleida)
Date: Tue, 9 Oct 2012 15:16:43 -0300
Subject: [wp-hackers] wp_update_post and post_status - possible bug?
In-Reply-To: <CAD-FghxFOEhFmXLggz_oKSOm5XB=gkKku00-X+8FzwmJ2KBynw@mail.gmail.com>
References: <CAF_HY=qOsTjzM=mwE2vy5d5cZaNzOx+ZzD6bbAdvn22p6Jbp4w@mail.gmail.com>
	<CAD-FghxFOEhFmXLggz_oKSOm5XB=gkKku00-X+8FzwmJ2KBynw@mail.gmail.com>
Message-ID: <CAF_HY=rDRceANqZTEV4Ku4Ep0=2ZUBh7uGPkPCs8eZrKtNtNzg@mail.gmail.com>

Hi, Otto,

thanks for the reply, i was trying to use the less info I could to pass
into the insert/update functions, but I didn't know abou the caveats of
post_date_gmt.

just ran the tests again using:

$newpostdata['post_status'] = 'publish';
$newpostdata['post_date'] = date( 'Y-m-d H:i:s', $post_date );
$newpostdata['post_date_gmt'] = get_gmt_from_date($post_date);

Test results changed a bit, but they're still sketchy:

Test #3 still rendered a published (visible) post with next week's date
(should be scheduled)
Test #4 now rendered a published (visible) post with next week's
date (should be scheduled - was ok before)
Test #5 now rendered a published post with yesterdays date (correct)

Because of Test #4 i ran the tests again, specifying 'future' when needed
and got the exact same results. Then I took out post_date_gmt and ranTest
#4 again, this time rendering the correct results.

And I remain puzzled.

Ricardo Moraleida



2012/10/9 Otto <otto at ottodestruct.com>

> Well, first, you're trying to create a post but not setting
> post_date_gmt. Weird things happen when you don't set post_date_gmt.
> Here's an easy way to do it:
>
> $post_date_gmt = get_gmt_from_date($post_date);
>
> Secondly, you don't need to decide future or publish for the
> post_status. The wp_insert_post code will do that for you. Just set it
> to 'publish'. And make sure you have post_date_gmt set correctly.
>
> Might help. Not sure.
>
> -Otto
>
>
> On Tue, Oct 9, 2012 at 12:19 PM, Ricardo Moraleida <moraleida at gmail.com>
> wrote:
> > Hi there,
> >
> > i'm in doubt if this is a bug and I should open a trac ticket for it, or
> it
> > is just a case of me doing things the wrong way.
> >
> > Basically, i'm trying to alter the post_status via wp_update_post() based
> > on a datepicker value that the user will choose. Seemed trivial at first,
> > but i'm getting sketchy results from it - future-dated posts being
> > published and past-dated posts remaining scheduled. Note that applying
> > the same values to wp_insert_post() work as expected.
> >
> > I found this while finishing a project where users would be able to
> publish
> > posts from the front-end. Started telling the story here:
> > http://wordpress.stackexchange.com/q/67451/7890
> >
> > Being stuck in that, i decided to move to a fresh installation with a
> blank
> > theme for testing purposes. The code being tested is this:
> > https://gist.github.com/3860049
> >
> > Test results so far are as follows:
> >
> > 1) Include post with yesterday's date:
> >     $operation = 'include';
> >     $post_date = strtotime( "yesterday" );
> >
> >     Code response (from gist line 52): "publish include"
> > *    Result: Post published with the correct date.*
> >
> > 2) Edit published post and change date from yesterday to today:
> >     $operation = 'edit';
> >     $post_date = strtotime( "now" );
> >
> >     Code response: "publish edit"
> >     *Result: Post published with today's date*
> >
> > 3) Edit published post and change date from today to next week
> >     $operation = 'edit';
> >     $post_date = strtotime( "+1 week" );
> >
> >     Code response: "future edit"
> >     *Result: Post remains published with a date 1 week from today
> (remains
> > visible to users on twenty eleven)*
> >
> > 4) Include new post scheduled for next week
> >     $operation = 'include';
> >     $post_date = strtotime( "+1 week" );
> >
> >     Code response: "future include"
> >     *Result: Post is correctly scheduled for a 1 week from today*
> >
> > 5) Edit back a scheduled post to being published yesterday
> >     $operation = 'edit';
> >     $post_date = strtotime( "yesterday" );
> >
> >     Code response: "publish edit"
> >     *Result: Post is scheduled with yesterday's date (remains invisible
> to
> > users on twenty eleven)*
> >
> > This was first noted on 3.4.2 and the later tests were on 3.5-beta1-22133
> >
> > Any ideas?
> >
> > Ricardo Moraleida
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From moraleida at gmail.com  Tue Oct  9 18:20:52 2012
From: moraleida at gmail.com (Ricardo Moraleida)
Date: Tue, 9 Oct 2012 15:20:52 -0300
Subject: [wp-hackers] wp_update_post and post_status - possible bug?
In-Reply-To: <CAF_HY=rDRceANqZTEV4Ku4Ep0=2ZUBh7uGPkPCs8eZrKtNtNzg@mail.gmail.com>
References: <CAF_HY=qOsTjzM=mwE2vy5d5cZaNzOx+ZzD6bbAdvn22p6Jbp4w@mail.gmail.com>
	<CAD-FghxFOEhFmXLggz_oKSOm5XB=gkKku00-X+8FzwmJ2KBynw@mail.gmail.com>
	<CAF_HY=rDRceANqZTEV4Ku4Ep0=2ZUBh7uGPkPCs8eZrKtNtNzg@mail.gmail.com>
Message-ID: <CAF_HY=odQ0NWPJyBzCBLh2t-6k7g8pZCfmANQxaxk7Q7MuNExw@mail.gmail.com>

Another bit of info.

When a test gives me a published post with a future date, if I just click
on Quick Edit and Update, it then becomes correctly scheduled.

Ricardo Moraleida



2012/10/9 Ricardo Moraleida <moraleida at gmail.com>

> Hi, Otto,
>
> thanks for the reply, i was trying to use the less info I could to pass
> into the insert/update functions, but I didn't know abou the caveats of
> post_date_gmt.
>
> just ran the tests again using:
>
> $newpostdata['post_status'] = 'publish';
> $newpostdata['post_date'] = date( 'Y-m-d H:i:s', $post_date );
> $newpostdata['post_date_gmt'] = get_gmt_from_date($post_date);
>
> Test results changed a bit, but they're still sketchy:
>
> Test #3 still rendered a published (visible) post with next week's date
> (should be scheduled)
> Test #4 now rendered a published (visible) post with next week's
> date (should be scheduled - was ok before)
> Test #5 now rendered a published post with yesterdays date (correct)
>
> Because of Test #4 i ran the tests again, specifying 'future' when needed
> and got the exact same results. Then I took out post_date_gmt and ranTest
> #4 again, this time rendering the correct results.
>
> And I remain puzzled.
>
> Ricardo Moraleida
>
>
>
>
> 2012/10/9 Otto <otto at ottodestruct.com>
>
>> Well, first, you're trying to create a post but not setting
>> post_date_gmt. Weird things happen when you don't set post_date_gmt.
>> Here's an easy way to do it:
>>
>> $post_date_gmt = get_gmt_from_date($post_date);
>>
>> Secondly, you don't need to decide future or publish for the
>> post_status. The wp_insert_post code will do that for you. Just set it
>> to 'publish'. And make sure you have post_date_gmt set correctly.
>>
>> Might help. Not sure.
>>
>> -Otto
>>
>>
>> On Tue, Oct 9, 2012 at 12:19 PM, Ricardo Moraleida <moraleida at gmail.com>
>> wrote:
>> > Hi there,
>> >
>> > i'm in doubt if this is a bug and I should open a trac ticket for it,
>> or it
>> > is just a case of me doing things the wrong way.
>> >
>> > Basically, i'm trying to alter the post_status via wp_update_post()
>> based
>> > on a datepicker value that the user will choose. Seemed trivial at
>> first,
>> > but i'm getting sketchy results from it - future-dated posts being
>> > published and past-dated posts remaining scheduled. Note that applying
>> > the same values to wp_insert_post() work as expected.
>> >
>> > I found this while finishing a project where users would be able to
>> publish
>> > posts from the front-end. Started telling the story here:
>> > http://wordpress.stackexchange.com/q/67451/7890
>> >
>> > Being stuck in that, i decided to move to a fresh installation with a
>> blank
>> > theme for testing purposes. The code being tested is this:
>> > https://gist.github.com/3860049
>> >
>> > Test results so far are as follows:
>> >
>> > 1) Include post with yesterday's date:
>> >     $operation = 'include';
>> >     $post_date = strtotime( "yesterday" );
>> >
>> >     Code response (from gist line 52): "publish include"
>> > *    Result: Post published with the correct date.*
>> >
>> > 2) Edit published post and change date from yesterday to today:
>> >     $operation = 'edit';
>> >     $post_date = strtotime( "now" );
>> >
>> >     Code response: "publish edit"
>> >     *Result: Post published with today's date*
>> >
>> > 3) Edit published post and change date from today to next week
>> >     $operation = 'edit';
>> >     $post_date = strtotime( "+1 week" );
>> >
>> >     Code response: "future edit"
>> >     *Result: Post remains published with a date 1 week from today
>> (remains
>> > visible to users on twenty eleven)*
>> >
>> > 4) Include new post scheduled for next week
>> >     $operation = 'include';
>> >     $post_date = strtotime( "+1 week" );
>> >
>> >     Code response: "future include"
>> >     *Result: Post is correctly scheduled for a 1 week from today*
>> >
>> > 5) Edit back a scheduled post to being published yesterday
>> >     $operation = 'edit';
>> >     $post_date = strtotime( "yesterday" );
>> >
>> >     Code response: "publish edit"
>> >     *Result: Post is scheduled with yesterday's date (remains invisible
>> to
>> > users on twenty eleven)*
>> >
>> > This was first noted on 3.4.2 and the later tests were on
>> 3.5-beta1-22133
>> >
>> > Any ideas?
>> >
>> > Ricardo Moraleida
>> > _______________________________________________
>> > wp-hackers mailing list
>> > wp-hackers at lists.automattic.com
>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>

From otto at ottodestruct.com  Tue Oct  9 18:35:37 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 9 Oct 2012 13:35:37 -0500
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
Message-ID: <CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>

The ALTERNATE_WP_CRON mechanism works like this:

- User visits the site.
- Cron determines that it needs to run and ALTERNATE_WP_CRON is enabled.
- User gets a redirect to the same page that they're seeing right now,
but with an added doing_wp_cron=... parameter added to the URL.
- User goes to the new address and gets the page. Completely
transparent redirect.
- Meanwhile, the original process that sent the redirect goes off and
does the wp-cron stuff instead, in the background.

So, user won't notice a thing. The redirect is smart, and only happens
when there's actual jobs to be run. It doesn't redirect 1-in-20 or
something like that, or on-the-hour.. it only redirects when there's a
job that needs to get done. No jobs = no redirects.

There is an extremely thin chance that the doing_wp_cron could show up
in the link for a search engine bot, however, WordPress includes the
canonical link in the meta data by default to prevent that additional
query variable from being an issue in search results. No SEO impact.

-Otto


On Tue, Oct 9, 2012 at 1:14 PM, Micky Hulse <mickyhulse.lists at gmail.com> wrote:
> Hey all,
>
> In order to fix this cron error:
>
> <http://core.trac.wordpress.org/ticket/11831>
>
> ...the IS guy at my work opted to enable ALTERNATE_WP_CRON (I was
> kinda hoping he would have tweaked the server vs. patch with the
> alternate cron setting).
>
> The above ticket and the below post seemed to give us the most
> information about the alternate cron:
>
> <http://wordpress.org/support/topic/scheduled-posts-still-not-working-in-282#post-1175405>
>
> I have my concerns about using the alternate cron... Specifically,
> paragraph got me worried:
>
> "This alternate method uses a redirection approach, which makes the
> users browser get a redirect when the cron needs to run, so that they
> come back to the site immediately while cron continues to run in the
> connection they just dropped. This method is a bit iffy sometimes,
> which is why it's not the default."
>
> I guess my question is this: On a medium traffic site (let's say ~1.5
> million page views a month) could the alternate cron redirection cause
> problems for the front end user? What about SEO?
>
> I just don't like the thought of redirects happening for users for the
> sake of a cron that may or may not need to run. Am I being irrational?
>
> I'm wondering if I should just disable ALTERNATE_WP_CRON and turn off
> WP_DEBUG (i.e. out of site, out of mind).
>
> Thanks!
> Micky
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mickyhulse.lists at gmail.com  Tue Oct  9 18:44:38 2012
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Tue, 9 Oct 2012 11:44:38 -0700
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
Message-ID: <CALri7Mk6dnsBJQxxgjT9kuPCPHkX1r72xj1rPr=FG0YSou=c4g@mail.gmail.com>

Otto... You rock! Thank you for the clarification and pro help. Much
appreciated.

On Tue, Oct 9, 2012 at 11:35 AM, Otto <otto at ottodestruct.com> wrote:
> So, user won't notice a thing. The redirect is smart, and only happens
> when there's actual jobs to be run. It doesn't redirect 1-in-20 or
> something like that, or on-the-hour.. it only redirects when there's a
> job that needs to get done. No jobs = no redirects.

Sounds good to me. I don't have any WP crons scheduled that I'm aware
of... We aren't using many plugins, so I don't think there's a problem
there.

The strange thing was, it seemed like we were getting that warning on
almost every other page refresh (I mostly remember seeing it on the
backend) before turning on the alternate setting.

Anyway, I feel much much better about using the alternate cron. Thanks
so much for you help!

Have a nice day!

Cheers,
Micky

-- 
http://hulse.me

From mike at newclarity.net  Tue Oct  9 18:59:38 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 9 Oct 2012 14:59:38 -0400
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
Message-ID: <28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>

Downside is that the doing_wp_cron= param show up in the browser and users bookmark them, email them, share them, etc.  not to mention they are confusing and ugly. 

Better option IMO is to have server admin set up a real cron task and have it call /wp-cron.php.

-Mike

Sent from my iPad

On Oct 9, 2012, at 2:35 PM, Otto <otto at ottodestruct.com> wrote:

> The ALTERNATE_WP_CRON mechanism works like this:
> 
> - User visits the site.
> - Cron determines that it needs to run and ALTERNATE_WP_CRON is enabled.
> - User gets a redirect to the same page that they're seeing right now,
> but with an added doing_wp_cron=... parameter added to the URL.
> - User goes to the new address and gets the page. Completely
> transparent redirect.
> - Meanwhile, the original process that sent the redirect goes off and
> does the wp-cron stuff instead, in the background.
> 
> So, user won't notice a thing. The redirect is smart, and only happens
> when there's actual jobs to be run. It doesn't redirect 1-in-20 or
> something like that, or on-the-hour.. it only redirects when there's a
> job that needs to get done. No jobs = no redirects.
> 
> There is an extremely thin chance that the doing_wp_cron could show up
> in the link for a search engine bot, however, WordPress includes the
> canonical link in the meta data by default to prevent that additional
> query variable from being an issue in search results. No SEO impact.
> 
> -Otto
> 
> 
> On Tue, Oct 9, 2012 at 1:14 PM, Micky Hulse <mickyhulse.lists at gmail.com> wrote:
>> Hey all,
>> 
>> In order to fix this cron error:
>> 
>> <http://core.trac.wordpress.org/ticket/11831>
>> 
>> ...the IS guy at my work opted to enable ALTERNATE_WP_CRON (I was
>> kinda hoping he would have tweaked the server vs. patch with the
>> alternate cron setting).
>> 
>> The above ticket and the below post seemed to give us the most
>> information about the alternate cron:
>> 
>> <http://wordpress.org/support/topic/scheduled-posts-still-not-working-in-282#post-1175405>
>> 
>> I have my concerns about using the alternate cron... Specifically,
>> paragraph got me worried:
>> 
>> "This alternate method uses a redirection approach, which makes the
>> users browser get a redirect when the cron needs to run, so that they
>> come back to the site immediately while cron continues to run in the
>> connection they just dropped. This method is a bit iffy sometimes,
>> which is why it's not the default."
>> 
>> I guess my question is this: On a medium traffic site (let's say ~1.5
>> million page views a month) could the alternate cron redirection cause
>> problems for the front end user? What about SEO?
>> 
>> I just don't like the thought of redirects happening for users for the
>> sake of a cron that may or may not need to run. Am I being irrational?
>> 
>> I'm wondering if I should just disable ALTERNATE_WP_CRON and turn off
>> WP_DEBUG (i.e. out of site, out of mind).
>> 
>> Thanks!
>> Micky
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From otto at ottodestruct.com  Tue Oct  9 19:04:55 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 9 Oct 2012 14:04:55 -0500
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
Message-ID: <CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>

On Tue, Oct 9, 2012 at 1:59 PM, Mike Schinkel <mike at newclarity.net> wrote:
> Downside is that the doing_wp_cron= param show up in the browser and users bookmark them, email them, share them, etc.  not to mention they are confusing and ugly.
>
> Better option IMO is to have server admin set up a real cron task and have it call /wp-cron.php.
>
> -Mike

Ideally, those would not show up very often. If you had a very large
number of cron jobs running on the system, then they'd be likely to
get them more often, but realistically the only ways core sets up a
cron job that a user could see would be Future Posting and the
twice-daily version update checks. Crons are also used for pingbacks,
but those happen at the same time as the post, so the very next admin
hit after a post is likely to trigger them instead of a user process.

And even when the link does get saved or shared, it doesn't really
affect anything. The flag is ignored for everything that isn't cron
related.

The best option is to make it so that your server is capable of making
http hits back to itself. If you're blocking loopback, then that's
really not a valid security measure to begin with.

-Otto

From mickyhulse.lists at gmail.com  Tue Oct  9 19:07:52 2012
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Tue, 9 Oct 2012 12:07:52 -0700
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
Message-ID: <CALri7M=kFyv7Bh+KRcaQgM+v9DmEw0Uo7AJ40TfUXD5iFL8Cjw@mail.gmail.com>

Hi Mike! Thanks for the reply, I really appreciate the help! :)

On Tue, Oct 9, 2012 at 11:59 AM, Mike Schinkel <mike at newclarity.net> wrote:
> Better option IMO is to have server admin set up a real cron task and have it call /wp-cron.php.

Ahhh, yah, that's a good tip. I'd agree with your sentiment about the
URL being less than optimal with the query string (that is, if it
shows.)

I don't think we have any WP crons setup at the moment... Off the top
of my head, I'm not sure where I'd look to see if there's any setup.

So, just to clarify, your suggestion would be to turn off the
ALTERNATE_WP_CRON setting, ignore the warning messages (which would be
hidden if debug is turned off) and use a real cron task to call
wp-cron.php on a set interval (that is, if we have cron jobs to run)?

Thanks!
M

-- 
http://hulse.me

From mickyhulse.lists at gmail.com  Tue Oct  9 19:17:21 2012
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Tue, 9 Oct 2012 12:17:21 -0700
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
Message-ID: <CALri7MkjwsqwQnCF57GcvRiFGmX1xvo-dOzYoq7H1uAwQ7+46A@mail.gmail.com>

Thanks for the additional info Otto, I really appreciate it.

On Tue, Oct 9, 2012 at 12:04 PM, Otto <otto at ottodestruct.com> wrote:
> The best option is to make it so that your server is capable of making
> http hits back to itself. If you're blocking loopback, then that's
> really not a valid security measure to begin with.

Unfortunately, we are blocking loopback. When I mentioned *not*
blocking loopbacks, our IT guy had some concerns about tweaking the
server for the sake of WP (or something to that effect).

So, to summarize the solutions:

* I could just roll with the ALTERNATE_WP_CRON setting and let the
URIs do their thing (if/when the cron needs to run, which shouldn't be
too often).
* Disable ALTERNATE_WP_CRON, turn off debug (for the production
server) and setup a standard cron task and have it call wp-cron on a
set interval.

I think for now we'll go with the former solution... Based on Otto's
reply, I don't even think we have any WP cron jobs that would affect a
front end user... But if things do get wonky (i.e. lots of URIs with
doing_wp_cron= query string, then we'll consider switching to the
latter solution.)

Now that I understand how things work, for our site, I have a feeling
that ALTERNATE_WP_CRON won't be a problem.

On the other hand, if I were to make the final decision about our
server setup, I'd just allow loopbacks!!!! I guess our network/IS guys
are just super security strict.

Thanks so much folks!

Cheers,
Micky

-- 
http://hulse.me

From mike at newclarity.net  Tue Oct  9 19:18:12 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 9 Oct 2012 15:18:12 -0400
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
Message-ID: <53734A36-17EE-4EB2-B731-22139026C462@newclarity.net>

> Ideally, those would not show up very often.

My preference would be it never shows up.  

The URL is a public interface so I like it to stay clean.  It's an okay workaround for end-user bloggers w/o a technical staff ALTERNATE_WP_CRON doesn't seem a proper solution for anyone who has a server admin or has server admin skills and especially not for a high traffic site. IMO of course.

So what if a post goes viral on Twitter?  Some of the links will have doing_wp_cron= and some may not, for example.

> And even when the link does get saved or shared, it doesn't really
> affect anything. The flag is ignored for everything that isn't cron
> related.

According to RFC 2616 3.2.3 URI Comparison[1]:

"When comparing two URIs to decide if they match or not, a client SHOULD use a case-sensitive octet-by-octet comparison of the entire URIs (with exceptions that don't matter in this case.)"

So any search engine or bookmarking service following the spec will see the URL with and the URL without as two different URLs.

> The best option is to make it so that your server is capable of making
> http hits back to itself.

Yes. That, or set up a real cron task.

-Mike

[1] http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.2.3


From mike at newclarity.net  Tue Oct  9 19:19:40 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 9 Oct 2012 15:19:40 -0400
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <CALri7M=kFyv7Bh+KRcaQgM+v9DmEw0Uo7AJ40TfUXD5iFL8Cjw@mail.gmail.com>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CALri7M=kFyv7Bh+KRcaQgM+v9DmEw0Uo7AJ40TfUXD5iFL8Cjw@mail.gmail.com>
Message-ID: <1B2500CD-13B1-488A-AE6B-4E2E10DCE974@newclarity.net>

On Oct 9, 2012, at 3:07 PM, Micky Hulse <mickyhulse.lists at gmail.com> wrote:
> Off the top of my head, I'm not sure where I'd look to see if there's any setup.

There are several plugins for that.  Here's one:

http://wordpress.org/extend/plugins/wp-cron-control/

-Mike

From otto at ottodestruct.com  Tue Oct  9 19:20:55 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 9 Oct 2012 14:20:55 -0500
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <53734A36-17EE-4EB2-B731-22139026C462@newclarity.net>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
	<53734A36-17EE-4EB2-B731-22139026C462@newclarity.net>
Message-ID: <CAD-Fghz7rLjQ3QfbNqwv4cdBPJK+af8dAaKEkoEmp46rncvVjA@mail.gmail.com>

On Tue, Oct 9, 2012 at 2:18 PM, Mike Schinkel <mike at newclarity.net> wrote:
> According to RFC 2616 3.2.3 URI Comparison[1]:
>
> "When comparing two URIs to decide if they match or not, a client SHOULD use a case-sensitive octet-by-octet comparison of the entire URIs (with exceptions that don't matter in this case.)"
>
> So any search engine or bookmarking service following the spec will see the URL with and the URL without as two different URLs.

It's called rel=canonical and it solves that problem for search
engines and bookmarking services that support it. Which is most of
them.

http://support.google.com/webmasters/bin/answer.py?hl=en&answer=139394

-Otto

From mike at newclarity.net  Tue Oct  9 19:32:47 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 9 Oct 2012 15:32:47 -0400
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <CAD-Fghz7rLjQ3QfbNqwv4cdBPJK+af8dAaKEkoEmp46rncvVjA@mail.gmail.com>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
	<53734A36-17EE-4EB2-B731-22139026C462@newclarity.net>
	<CAD-Fghz7rLjQ3QfbNqwv4cdBPJK+af8dAaKEkoEmp46rncvVjA@mail.gmail.com>
Message-ID: <0EE1324F-7A19-4224-BDC8-EF8698F6E34A@newclarity.net>

On Oct 9, 2012, at 3:20 PM, Otto <otto at ottodestruct.com> wrote:
> It's called rel=canonical and it solves that problem for search
> engines and bookmarking services that support it. Which is most of
> them.
> 
> http://support.google.com/webmasters/bin/answer.py?hl=en&answer=139394

Unfortunately not every bookmarking and sharing service pays attention to rel=canonical because its more work they may not have done.  And it doesn't fix the ugly. =)

-Mike

From mickyhulse.lists at gmail.com  Tue Oct  9 21:18:37 2012
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Tue, 9 Oct 2012 14:18:37 -0700
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <1B2500CD-13B1-488A-AE6B-4E2E10DCE974@newclarity.net>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CALri7M=kFyv7Bh+KRcaQgM+v9DmEw0Uo7AJ40TfUXD5iFL8Cjw@mail.gmail.com>
	<1B2500CD-13B1-488A-AE6B-4E2E10DCE974@newclarity.net>
Message-ID: <CALri7MmoQotoLqmJMiXhwLY2AKyZvu+y58H_EpHBbFRRGSeAVQ@mail.gmail.com>

On Tue, Oct 9, 2012 at 12:19 PM, Mike Schinkel <mike at newclarity.net> wrote:
> There are several plugins for that.  Here's one:
> http://wordpress.org/extend/plugins/wp-cron-control/

Awesome, thanks! I'll check it out. :)

-- 
http://hulse.me

From lists at lobaugh.net  Tue Oct  9 21:52:27 2012
From: lists at lobaugh.net (Ben Lobaugh)
Date: Tue, 09 Oct 2012 14:52:27 -0700
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <0EE1324F-7A19-4224-BDC8-EF8698F6E34A@newclarity.net>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
	<53734A36-17EE-4EB2-B731-22139026C462@newclarity.net>
	<CAD-Fghz7rLjQ3QfbNqwv4cdBPJK+af8dAaKEkoEmp46rncvVjA@mail.gmail.com>
	<0EE1324F-7A19-4224-BDC8-EF8698F6E34A@newclarity.net>
Message-ID: <50749C9B.30509@lobaugh.net>

Mike do you have a better way to do it? The understanding here is that 
this is an alternative workaround for when you do not have access to 
system cron and in situations when the standard wp-cron method does not 
work. Sure, there is a very slight likelihood that you could see an ugly 
URL, but in situations where all of the above are true it should be 
acceptable.

If you have another idea a patch to "fix" the behavior would be welcome

P.S. If you are forced to use the work around you could setup one of the 
dozens of free ping services to hit your site in an attempt to counter 
the bad behavior

On 10/9/12 12:32 PM, Mike Schinkel wrote:
> On Oct 9, 2012, at 3:20 PM, Otto <otto at ottodestruct.com> wrote:
>> It's called rel=canonical and it solves that problem for search
>> engines and bookmarking services that support it. Which is most of
>> them.
>>
>> http://support.google.com/webmasters/bin/answer.py?hl=en&answer=139394
> Unfortunately not every bookmarking and sharing service pays attention to rel=canonical because its more work they may not have done.  And it doesn't fix the ugly. =)
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mickyhulse.lists at gmail.com  Tue Oct  9 21:57:30 2012
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Tue, 9 Oct 2012 14:57:30 -0700
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <50749C9B.30509@lobaugh.net>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
	<53734A36-17EE-4EB2-B731-22139026C462@newclarity.net>
	<CAD-Fghz7rLjQ3QfbNqwv4cdBPJK+af8dAaKEkoEmp46rncvVjA@mail.gmail.com>
	<0EE1324F-7A19-4224-BDC8-EF8698F6E34A@newclarity.net>
	<50749C9B.30509@lobaugh.net>
Message-ID: <CALri7MkLmmQjmNUgrqp9xVFvCRMF3xMgm03sJyt3hAsWeBLBpA@mail.gmail.com>

Hi Ben!

On Tue, Oct 9, 2012 at 2:52 PM, Ben Lobaugh <lists at lobaugh.net> wrote:
> P.S. If you are forced to use the work around you could setup one of the
> dozens of free ping services to hit your site in an attempt to counter the
> bad behavior

Interesting... I hate to sound like a dunce, but could you elaborate
just a bit further? :)

Thanks!!!

-- 
http://hulse.me

From lox.dev at knc.nc  Tue Oct  9 22:04:33 2012
From: lox.dev at knc.nc (Lox)
Date: Wed, 10 Oct 2012 09:04:33 +1100
Subject: [wp-hackers] Adding filtering options to the users WP_List_Table
Message-ID: <CA+sFoLqPDV39agZir5JpdvmyNJtRfcvTQbfXFGHqeizx9GZ-rA@mail.gmail.com>

Hello,

I have looked all around and couldn't find a way to add select boxes with
filtering options to the users list table.

I want to add a select box of cities. Filtering the users list is not an
issue for me but adding that select box is ....

Regards.

-- 
Lox
lox.dev at knc.nc

From wordpress at dd32.id.au  Tue Oct  9 23:25:39 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Tue, 9 Oct 2012 19:25:39 -0400
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <CALri7MkLmmQjmNUgrqp9xVFvCRMF3xMgm03sJyt3hAsWeBLBpA@mail.gmail.com>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
	<53734A36-17EE-4EB2-B731-22139026C462@newclarity.net>
	<CAD-Fghz7rLjQ3QfbNqwv4cdBPJK+af8dAaKEkoEmp46rncvVjA@mail.gmail.com>
	<0EE1324F-7A19-4224-BDC8-EF8698F6E34A@newclarity.net>
	<50749C9B.30509@lobaugh.net>
	<CALri7MkLmmQjmNUgrqp9xVFvCRMF3xMgm03sJyt3hAsWeBLBpA@mail.gmail.com>
Message-ID: <CAL4EHfnU7acnQTiFF_=bO46tyqBUT_o9wb5h1V+q+=Y8+2BQBg@mail.gmail.com>

For the very specific case of the following error:

Warning: fopen(http://localhost/wp/wp-cron.php?doing_wp_cron)
[function.fopen]: failed to open stream: HTTP request failed!

One option to fix it, is to disable the faulty HTTP transport which
isn't doing it's job on the server (usually it's caused by a bad
configuration, but some linux distro PHP builds are known to cause it
as well) by adding the following in a mu-plugin (or the theme
functions.php I guess)

add_filter( 'use_streams_transport', '__return_false' );

It has the downside that it may stop ALL outgoing requests if the
server doesn't support cURL and fsockopen also doesn't work - but
usually at least one of these is available on the server..
I usually suggest hitting the Plugin install page, if you can search
for a plugin after adding the above, all your problems should
hopefully disappear.. if you can't browse plugins, you'll have to
remove the above line of code and curse at the server again..

On 9 October 2012 17:57, Micky Hulse <mickyhulse.lists at gmail.com> wrote:
>
> Hi Ben!
>
> On Tue, Oct 9, 2012 at 2:52 PM, Ben Lobaugh <lists at lobaugh.net> wrote:
> > P.S. If you are forced to use the work around you could setup one of the
> > dozens of free ping services to hit your site in an attempt to counter the
> > bad behavior
>
> Interesting... I hate to sound like a dunce, but could you elaborate
> just a bit further? :)
>
> Thanks!!!
>
> --
> http://hulse.me
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mike at newclarity.net  Tue Oct  9 23:39:37 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Tue, 9 Oct 2012 19:39:37 -0400
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <50749C9B.30509@lobaugh.net>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
	<53734A36-17EE-4EB2-B731-22139026C462@newclarity.net>
	<CAD-Fghz7rLjQ3QfbNqwv4cdBPJK+af8dAaKEkoEmp46rncvVjA@mail.gmail.com>
	<0EE1324F-7A19-4224-BDC8-EF8698F6E34A@newclarity.net>
	<50749C9B.30509@lobaugh.net>
Message-ID: <9449C4B7-8A18-42F5-A3EB-E78B4EBFBE10@newclarity.net>

On Oct 9, 2012, at 5:52 PM, Ben Lobaugh <lists at lobaugh.net> wrote:
> Mike do you have a better way to do it? The understanding here is that this is an alternative workaround for when you do not have access to system cron and in situations when the standard wp-cron method does not work. Sure, there is a very slight likelihood that you could see an ugly URL, but in situations where all of the above are true it should be acceptable.

The better ways are to open the loopback as Otto mentioned or to set up a cron via the server.

> If you have another idea a patch to "fix" the behavior would be welcome

It's possible instead of inspecting $_GET['doing_wp_cron'] when ALTERNATE_WP_CRON is true we could inspect get_option('last_cron') to see if it's been less than 60 seconds and if not ignore cron but I haven't tested the theory to see if it would actually work.  And since there are acceptable workarounds and I don't have the bandwidth to try it right now I'll leave as an exercise to the reader to validate the theory. :)

-Mike




From dianakac at gmail.com  Wed Oct 10 02:38:34 2012
From: dianakac at gmail.com (Diana K. C)
Date: Tue, 9 Oct 2012 23:38:34 -0300
Subject: [wp-hackers] Hide pages from panels
Message-ID: <005901cda690$59f65630$2200a8c0@TITA>

Hi there,

I just converted/migrated a lot of pages and posts, now is getting hard to browse pages in panel. I would like to hide pages from a specific month, in panels such Pages and Parent Page dropdown as well, is there some way to do this?

I found a code some time ago but needed to informe page IDs and wasn't hidding the pages in Parent Page dropdown.

Thanks a lot!

From abdussamad at abdussamad.com  Wed Oct 10 08:05:19 2012
From: abdussamad at abdussamad.com (Abdussamad Abdurrazzaq)
Date: Wed, 10 Oct 2012 13:05:19 +0500
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <CALri7MkLmmQjmNUgrqp9xVFvCRMF3xMgm03sJyt3hAsWeBLBpA@mail.gmail.com>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
	<53734A36-17EE-4EB2-B731-22139026C462@newclarity.net>
	<CAD-Fghz7rLjQ3QfbNqwv4cdBPJK+af8dAaKEkoEmp46rncvVjA@mail.gmail.com>
	<0EE1324F-7A19-4224-BDC8-EF8698F6E34A@newclarity.net>
	<50749C9B.30509@lobaugh.net>
	<CALri7MkLmmQjmNUgrqp9xVFvCRMF3xMgm03sJyt3hAsWeBLBpA@mail.gmail.com>
Message-ID: <50752C3F.9040106@abdussamad.com>

I think Ben is talking about sites like:

https://www.google.com/search?q=web+cron&ie=utf-8&oe=utf-8

Sign up and set them to fetch /wp-cron.php periodically.

But may I ask why you can't just setup a server side cron job? That 
would be ideal in this situation.

On 10/10/2012 02:57 AM, Micky Hulse wrote:
> Hi Ben!
>
> On Tue, Oct 9, 2012 at 2:52 PM, Ben Lobaugh <lists at lobaugh.net> wrote:
>> P.S. If you are forced to use the work around you could setup one of the
>> dozens of free ping services to hit your site in an attempt to counter the
>> bad behavior
> Interesting... I hate to sound like a dunce, but could you elaborate
> just a bit further? :)
>
> Thanks!!!
>



From wordpress at zed1.com  Wed Oct 10 08:37:00 2012
From: wordpress at zed1.com (Mike Little)
Date: Wed, 10 Oct 2012 09:37:00 +0100
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <005901cda690$59f65630$2200a8c0@TITA>
References: <005901cda690$59f65630$2200a8c0@TITA>
Message-ID: <CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>

On 10 October 2012 03:38, Diana K. C <dianakac at gmail.com> wrote:

> Hi there,
>
> I just converted/migrated a lot of pages and posts, now is getting hard to
> browse pages in panel. I would like to hide pages from a specific month, in
> panels such Pages and Parent Page dropdown as well, is there some way to do
> this?
>
> I found a code some time ago but needed to informe page IDs and wasn't
> hidding the pages in Parent Page dropdown.
>
> Thanks a lot!
>


Whilst not addressing your exact requirements, you should look at CMS Tree
Page View (http://wordpress.org/extend/plugins/cms-tree-page-view/) as an
alternative way to manage pages.

It has a more usable interface than WordPress' own, including a folding
tree structure, search, drag 'n' drop positioning (page order and
parent-child), and links to all main features: edit, view, and add new
(directly in the place you want to add it)


Mike
-- 
Mike Little
http://zed1.com/

From mickyhulse.lists at gmail.com  Wed Oct 10 17:12:39 2012
From: mickyhulse.lists at gmail.com (Micky Hulse)
Date: Wed, 10 Oct 2012 10:12:39 -0700
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <50752C3F.9040106@abdussamad.com>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
	<53734A36-17EE-4EB2-B731-22139026C462@newclarity.net>
	<CAD-Fghz7rLjQ3QfbNqwv4cdBPJK+af8dAaKEkoEmp46rncvVjA@mail.gmail.com>
	<0EE1324F-7A19-4224-BDC8-EF8698F6E34A@newclarity.net>
	<50749C9B.30509@lobaugh.net>
	<CALri7MkLmmQjmNUgrqp9xVFvCRMF3xMgm03sJyt3hAsWeBLBpA@mail.gmail.com>
	<50752C3F.9040106@abdussamad.com>
Message-ID: <CALri7MkEe+rcu7+PYrjnAOha4xPh3KxnpaCnGe9B5PcLwco4Zw@mail.gmail.com>

Hi!

On Wed, Oct 10, 2012 at 1:05 AM, Abdussamad Abdurrazzaq
<abdussamad at abdussamad.com> wrote:
> I think Ben is talking about sites like:
> https://www.google.com/search?q=web+cron&ie=utf-8&oe=utf-8
> Sign up and set them to fetch /wp-cron.php periodically.

Ahhh, I see! I haven't used one of those services before. Thanks for
shedding light Abdussamad. :)

(This has been a great thread to read. Thanks to everyone for all the
info and advice.)

Cheers,
M

-- 
http://hulse.me

From moraleida at gmail.com  Wed Oct 10 17:23:17 2012
From: moraleida at gmail.com (Ricardo Moraleida)
Date: Wed, 10 Oct 2012 14:23:17 -0300
Subject: [wp-hackers] wp_update_post and post_status - possible bug?
In-Reply-To: <CAF_HY=odQ0NWPJyBzCBLh2t-6k7g8pZCfmANQxaxk7Q7MuNExw@mail.gmail.com>
References: <CAF_HY=qOsTjzM=mwE2vy5d5cZaNzOx+ZzD6bbAdvn22p6Jbp4w@mail.gmail.com>
	<CAD-FghxFOEhFmXLggz_oKSOm5XB=gkKku00-X+8FzwmJ2KBynw@mail.gmail.com>
	<CAF_HY=rDRceANqZTEV4Ku4Ep0=2ZUBh7uGPkPCs8eZrKtNtNzg@mail.gmail.com>
	<CAF_HY=odQ0NWPJyBzCBLh2t-6k7g8pZCfmANQxaxk7Q7MuNExw@mail.gmail.com>
Message-ID: <CAF_HY=oCrepT3oVjiuA-fT33V0d9Ec70C-NWd37V9TqVNq8tFA@mail.gmail.com>

Ok, problem solved.

Actually Otto was right as the problem was the lack of post_date_gmt in the
first place.

My second tests were having problems because i was passing a timestamp
to get_gmt_from_date() so i solved it by passing: $newpostdata['post_date_gmt']
= gmdate( 'Y-m-d H:i:s', $post_date );

case closed, bug not found, thank you!

Ricardo Moraleida



2012/10/9 Ricardo Moraleida <moraleida at gmail.com>

> Another bit of info.
>
> When a test gives me a published post with a future date, if I just click
> on Quick Edit and Update, it then becomes correctly scheduled.
>
> Ricardo Moraleida
>
>
>
>
> 2012/10/9 Ricardo Moraleida <moraleida at gmail.com>
>
>> Hi, Otto,
>>
>> thanks for the reply, i was trying to use the less info I could to pass
>> into the insert/update functions, but I didn't know abou the caveats of
>> post_date_gmt.
>>
>> just ran the tests again using:
>>
>> $newpostdata['post_status'] = 'publish';
>> $newpostdata['post_date'] = date( 'Y-m-d H:i:s', $post_date );
>> $newpostdata['post_date_gmt'] = get_gmt_from_date($post_date);
>>
>> Test results changed a bit, but they're still sketchy:
>>
>> Test #3 still rendered a published (visible) post with next week's date
>> (should be scheduled)
>> Test #4 now rendered a published (visible) post with next week's
>> date (should be scheduled - was ok before)
>> Test #5 now rendered a published post with yesterdays date (correct)
>>
>> Because of Test #4 i ran the tests again, specifying 'future' when needed
>> and got the exact same results. Then I took out post_date_gmt and ranTest
>> #4 again, this time rendering the correct results.
>>
>> And I remain puzzled.
>>
>> Ricardo Moraleida
>>
>>
>>
>>
>> 2012/10/9 Otto <otto at ottodestruct.com>
>>
>>> Well, first, you're trying to create a post but not setting
>>> post_date_gmt. Weird things happen when you don't set post_date_gmt.
>>> Here's an easy way to do it:
>>>
>>> $post_date_gmt = get_gmt_from_date($post_date);
>>>
>>> Secondly, you don't need to decide future or publish for the
>>> post_status. The wp_insert_post code will do that for you. Just set it
>>> to 'publish'. And make sure you have post_date_gmt set correctly.
>>>
>>> Might help. Not sure.
>>>
>>> -Otto
>>>
>>>
>>> On Tue, Oct 9, 2012 at 12:19 PM, Ricardo Moraleida <moraleida at gmail.com>
>>> wrote:
>>> > Hi there,
>>> >
>>> > i'm in doubt if this is a bug and I should open a trac ticket for it,
>>> or it
>>> > is just a case of me doing things the wrong way.
>>> >
>>> > Basically, i'm trying to alter the post_status via wp_update_post()
>>> based
>>> > on a datepicker value that the user will choose. Seemed trivial at
>>> first,
>>> > but i'm getting sketchy results from it - future-dated posts being
>>> > published and past-dated posts remaining scheduled. Note that applying
>>> > the same values to wp_insert_post() work as expected.
>>> >
>>> > I found this while finishing a project where users would be able to
>>> publish
>>> > posts from the front-end. Started telling the story here:
>>> > http://wordpress.stackexchange.com/q/67451/7890
>>> >
>>> > Being stuck in that, i decided to move to a fresh installation with a
>>> blank
>>> > theme for testing purposes. The code being tested is this:
>>> > https://gist.github.com/3860049
>>> >
>>> > Test results so far are as follows:
>>> >
>>> > 1) Include post with yesterday's date:
>>> >     $operation = 'include';
>>> >     $post_date = strtotime( "yesterday" );
>>> >
>>> >     Code response (from gist line 52): "publish include"
>>> > *    Result: Post published with the correct date.*
>>> >
>>> > 2) Edit published post and change date from yesterday to today:
>>> >     $operation = 'edit';
>>> >     $post_date = strtotime( "now" );
>>> >
>>> >     Code response: "publish edit"
>>> >     *Result: Post published with today's date*
>>> >
>>> > 3) Edit published post and change date from today to next week
>>> >     $operation = 'edit';
>>> >     $post_date = strtotime( "+1 week" );
>>> >
>>> >     Code response: "future edit"
>>> >     *Result: Post remains published with a date 1 week from today
>>> (remains
>>> > visible to users on twenty eleven)*
>>> >
>>> > 4) Include new post scheduled for next week
>>> >     $operation = 'include';
>>> >     $post_date = strtotime( "+1 week" );
>>> >
>>> >     Code response: "future include"
>>> >     *Result: Post is correctly scheduled for a 1 week from today*
>>> >
>>> > 5) Edit back a scheduled post to being published yesterday
>>> >     $operation = 'edit';
>>> >     $post_date = strtotime( "yesterday" );
>>> >
>>> >     Code response: "publish edit"
>>> >     *Result: Post is scheduled with yesterday's date (remains
>>> invisible to
>>> > users on twenty eleven)*
>>> >
>>> > This was first noted on 3.4.2 and the later tests were on
>>> 3.5-beta1-22133
>>> >
>>> > Any ideas?
>>> >
>>> > Ricardo Moraleida
>>> > _______________________________________________
>>> > wp-hackers mailing list
>>> > wp-hackers at lists.automattic.com
>>> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>>
>>
>>
>

From jer at simianuprising.com  Wed Oct 10 17:56:30 2012
From: jer at simianuprising.com (Jeremy Clarke)
Date: Wed, 10 Oct 2012 13:56:30 -0400
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <005901cda690$59f65630$2200a8c0@TITA>
References: <005901cda690$59f65630$2200a8c0@TITA>
Message-ID: <CAAHgzDN0LrHG3P19szjHmNEb3Qk=gY9HL4_oynkSG1TjPkZnNA@mail.gmail.com>

On Tue, Oct 9, 2012 at 10:38 PM, Diana K. C <dianakac at gmail.com> wrote:

>
> I just converted/migrated a lot of pages and posts, now is getting hard to
> browse pages in panel. I would like to hide pages from a specific month, in
> panels such Pages and Parent Page dropdown as well, is there some way to do
> this?
>
>
You might want to consider using a custom post type for your content rather
than pages. The UI of pages ultimately assumes somewhere between 1 and 20
pages ? for things like 'about' and 'contact' ? beyond that it starts to
fall apart and those pulldowns get super overloaded.

Back in the day using pages was the easiest way to get logical permalinks
but now CPTs can do the job just as well. Once you are thinking of pages in
terms of "months" you are probably better off using a new kind of posts (or
even normal posts in a particular category).

-- 
Jeremy Clarke ? jeremyclarke.org
Code and Design ? globalvoicesonline.org

From dianakac at gmail.com  Wed Oct 10 18:39:29 2012
From: dianakac at gmail.com (Diana K. C)
Date: Wed, 10 Oct 2012 15:39:29 -0300
Subject: [wp-hackers] Hide pages from panels
References: <005901cda690$59f65630$2200a8c0@TITA>
	<CAAHgzDN0LrHG3P19szjHmNEb3Qk=gY9HL4_oynkSG1TjPkZnNA@mail.gmail.com>
Message-ID: <003a01cda716$9686d3f0$2200a8c0@TITA>

I want hide pages from an specific date range not sort them.


----- Original Message ----- 
From: "Jeremy Clarke" <jer at simianuprising.com>
To: <wp-hackers at lists.automattic.com>
Sent: Wednesday, October 10, 2012 2:56 PM
Subject: Re: [wp-hackers] Hide pages from panels


On Tue, Oct 9, 2012 at 10:38 PM, Diana K. C <dianakac at gmail.com> wrote:

>
> I just converted/migrated a lot of pages and posts, now is getting hard to
> browse pages in panel. I would like to hide pages from a specific month, 
> in
> panels such Pages and Parent Page dropdown as well, is there some way to 
> do
> this?
>
>
You might want to consider using a custom post type for your content rather
than pages. The UI of pages ultimately assumes somewhere between 1 and 20
pages ? for things like 'about' and 'contact' ? beyond that it starts to
fall apart and those pulldowns get super overloaded.

Back in the day using pages was the easiest way to get logical permalinks
but now CPTs can do the job just as well. Once you are thinking of pages in
terms of "months" you are probably better off using a new kind of posts (or
even normal posts in a particular category).

-- 
Jeremy Clarke ? jeremyclarke.org
Code and Design ? globalvoicesonline.org
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers 


From dianakac at gmail.com  Wed Oct 10 19:03:58 2012
From: dianakac at gmail.com (Diana K. C)
Date: Wed, 10 Oct 2012 16:03:58 -0300
Subject: [wp-hackers] Hide pages from panels
References: <005901cda690$59f65630$2200a8c0@TITA>
	<CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>
Message-ID: <005701cda71a$02791390$2200a8c0@TITA>

Hi Mike,

I like this plugin, but I need to hide pages in panels, those are indeed 
static pages that would never change again, sort of a historic content.

I have this code, but as I said, I need to pass IDs and also doesn't hide 
them in dropdown :(

add_action( 'pre_get_posts' ,'hide_pages_87ff65f5f' );function 
hide_pages_87ff65f5f( $query ) {    if( !is_admin() )        return $query; 
global $currentpage;  $pages = array('2389','2605','2640','2970','2626'); 
if( 'edit.php' == $currentpage && ( get_query_var('post_type') && 'page' == 
get_query_var('post_type') ) )    $query->set( 'post__not_in', $pages ); 
return $query;}


----- Original Message ----- 
From: "Mike Little" <wordpress at zed1.com>
To: <wp-hackers at lists.automattic.com>
Sent: Wednesday, October 10, 2012 5:37 AM
Subject: Re: [wp-hackers] Hide pages from panels


> On 10 October 2012 03:38, Diana K. C <dianakac at gmail.com> wrote:
>
>> Hi there,
>>
>> I just converted/migrated a lot of pages and posts, now is getting hard 
>> to
>> browse pages in panel. I would like to hide pages from a specific month, 
>> in
>> panels such Pages and Parent Page dropdown as well, is there some way to 
>> do
>> this?
>>
>> I found a code some time ago but needed to informe page IDs and wasn't
>> hidding the pages in Parent Page dropdown.
>>
>> Thanks a lot!
>>
>
>
> Whilst not addressing your exact requirements, you should look at CMS Tree
> Page View (http://wordpress.org/extend/plugins/cms-tree-page-view/) as an
> alternative way to manage pages.
>
> It has a more usable interface than WordPress' own, including a folding
> tree structure, search, drag 'n' drop positioning (page order and
> parent-child), and links to all main features: edit, view, and add new
> (directly in the place you want to add it)
>
>
> Mike
> -- 
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 


From wordpress at zed1.com  Thu Oct 11 08:59:24 2012
From: wordpress at zed1.com (Mike Little)
Date: Thu, 11 Oct 2012 09:59:24 +0100
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <005701cda71a$02791390$2200a8c0@TITA>
References: <005901cda690$59f65630$2200a8c0@TITA>
	<CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>
	<005701cda71a$02791390$2200a8c0@TITA>
Message-ID: <CAMb54M2Euf4B8K5Pki=4PvPgrYvKx5dAsuE=aTx6rE_FXmppaQ@mail.gmail.com>

On 10 October 2012 20:03, Diana K. C <dianakac at gmail.com> wrote:

> Hi Mike,
>
> I like this plugin, but I need to hide pages in panels, those are indeed
> static pages that would never change again, sort of a historic content.
>
> I have this code, but as I said, I need to pass IDs and also doesn't hide
> them in dropdown :(
>
> add_action( 'pre_get_posts' ,'hide_pages_87ff65f5f' );function
> hide_pages_87ff65f5f( $query ) {    if( !is_admin() )        return $query;
> global $currentpage;  $pages = array('2389','2605','2640','**2970','2626');
> if( 'edit.php' == $currentpage && ( get_query_var('post_type') && 'page' ==
> get_query_var('post_type') ) )    $query->set( 'post__not_in', $pages );
> return $query;}
>
>
I'm not clear which 'panels' you mean.

Another thing to consider, the code you pasted looks like it will hide
those pages from almost everywhere in the admin screens; how will you ever
get to them to edit them (even if rarely)?

It sounds like you need to specify:
* exactly which 'panels' you want these pages hidden from,
* exactly which drop down lists you want them hidden from
* how you want to specify those pages (all pages created in a certain
month, before a certain date, children of a specific page?),
* and how you will be able to get at them to edit or manage the hidden ones.

And then get someone to write some custom code for you.



Mike
-- 
Mike Little
http://zed1.com/

From mpwalsh8 at gmail.com  Fri Oct 12 13:50:37 2012
From: mpwalsh8 at gmail.com (Mike Walsh)
Date: Fri, 12 Oct 2012 09:50:37 -0400
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>
References: <005901cda690$59f65630$2200a8c0@TITA>
	<CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>
Message-ID: <CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com>

I wish the WordPress menu manager used the model employed by CMS Tree View
(which is a fantastic plugin).  WordPress Menus get pretty unwieldy pretty
quickly because they don't have the ability to expand and collapse menu
hierarchy.

On Wed, Oct 10, 2012 at 4:37 AM, Mike Little <wordpress at zed1.com> wrote:

> On 10 October 2012 03:38, Diana K. C <dianakac at gmail.com> wrote:
>
> > Hi there,
> >
> > I just converted/migrated a lot of pages and posts, now is getting hard
> to
> > browse pages in panel. I would like to hide pages from a specific month,
> in
> > panels such Pages and Parent Page dropdown as well, is there some way to
> do
> > this?
> >
> > I found a code some time ago but needed to informe page IDs and wasn't
> > hidding the pages in Parent Page dropdown.
> >
> > Thanks a lot!
> >
>
>
> Whilst not addressing your exact requirements, you should look at CMS Tree
> Page View (http://wordpress.org/extend/plugins/cms-tree-page-view/) as an
> alternative way to manage pages.
>
> It has a more usable interface than WordPress' own, including a folding
> tree structure, search, drag 'n' drop positioning (page order and
> parent-child), and links to all main features: edit, view, and add new
> (directly in the place you want to add it)
>
>
> Mike
> --
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
Mike Walsh - mpwalsh8 at gmail.com

From tcbarrett at gmail.com  Fri Oct 12 16:01:46 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Fri, 12 Oct 2012 17:01:46 +0100
Subject: [wp-hackers] How do I remove rewrite rules?
Message-ID: <CAEgmxaY=-39j611MtbSJfrbR9a8+PATSC6MnnDLHvcOBSSS2SQ@mail.gmail.com>

Specifically, I would like to remove attachment rewrite rules and replace
them with a leading slug (e.g. /media/).

My Google-fu has abandoned me - all I can find is related to flushing and
apache rewrite. I want to delete the rule.

My main reason for this is slug collisions with media items. Especially
that they take precedence over pages.

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From dianakac at gmail.com  Fri Oct 12 20:23:00 2012
From: dianakac at gmail.com (Diana K. C)
Date: Fri, 12 Oct 2012 17:23:00 -0300
Subject: [wp-hackers] Hide pages from panels
References: <005901cda690$59f65630$2200a8c0@TITA><CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>
	<CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com>
Message-ID: <019e01cda8b7$61da9950$2200a8c0@TITA>

Indeed, that would help to keep things tidy and sortable.

I don't think pages should be 10 or 20, huge WP sites keep thousand pages, 
posts, post types, everything.


----- Original Message ----- 
From: "Mike Walsh" <mpwalsh8 at gmail.com>
To: <wp-hackers at lists.automattic.com>
Sent: Friday, October 12, 2012 10:50 AM
Subject: Re: [wp-hackers] Hide pages from panels


>I wish the WordPress menu manager used the model employed by CMS Tree View
> (which is a fantastic plugin).  WordPress Menus get pretty unwieldy pretty
> quickly because they don't have the ability to expand and collapse menu
> hierarchy.
>
> On Wed, Oct 10, 2012 at 4:37 AM, Mike Little <wordpress at zed1.com> wrote:
>
>> On 10 October 2012 03:38, Diana K. C <dianakac at gmail.com> wrote:
>>
>> > Hi there,
>> >
>> > I just converted/migrated a lot of pages and posts, now is getting hard
>> to
>> > browse pages in panel. I would like to hide pages from a specific 
>> > month,
>> in
>> > panels such Pages and Parent Page dropdown as well, is there some way 
>> > to
>> do
>> > this?
>> >
>> > I found a code some time ago but needed to informe page IDs and wasn't
>> > hidding the pages in Parent Page dropdown.
>> >
>> > Thanks a lot!
>> >
>>
>>
>> Whilst not addressing your exact requirements, you should look at CMS 
>> Tree
>> Page View (http://wordpress.org/extend/plugins/cms-tree-page-view/) as an
>> alternative way to manage pages.
>>
>> It has a more usable interface than WordPress' own, including a folding
>> tree structure, search, drag 'n' drop positioning (page order and
>> parent-child), and links to all main features: edit, view, and add new
>> (directly in the place you want to add it)
>>
>>
>> Mike
>> --
>> Mike Little
>> http://zed1.com/
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>>
>
>
>
> -- 
> Mike Walsh - mpwalsh8 at gmail.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers 


From mike at newclarity.net  Fri Oct 12 20:31:01 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 12 Oct 2012 16:31:01 -0400
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <019e01cda8b7$61da9950$2200a8c0@TITA>
References: <005901cda690$59f65630$2200a8c0@TITA><CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>
	<CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com>
	<019e01cda8b7$61da9950$2200a8c0@TITA>
Message-ID: <4BE8469D-3295-4322-90BE-EC86692AE32B@newclarity.net>

On Oct 12, 2012, at 4:23 PM, "Diana K. C" <dianakac at gmail.com> wrote:
> I don't think pages should be 10 or 20, huge WP sites keep thousand pages, posts, post types, everything.

If a site has thousands of "Pages" (vs. custom post types) chances are 99% likely they are doing it wrong.

-Mike

From chris at lod.com  Fri Oct 12 20:47:00 2012
From: chris at lod.com (Chris McCoy)
Date: Fri, 12 Oct 2012 16:47:00 -0400
Subject: [wp-hackers] How do I remove rewrite rules?
In-Reply-To: <CAEgmxaY=-39j611MtbSJfrbR9a8+PATSC6MnnDLHvcOBSSS2SQ@mail.gmail.com>
References: <CAEgmxaY=-39j611MtbSJfrbR9a8+PATSC6MnnDLHvcOBSSS2SQ@mail.gmail.com>
Message-ID: <003601cda8ba$ba4c04e0$2ee40ea0$@lod.com>

Ive added my own attachment rewrite before (/picture/), but I never ended up
removing the default one.

Would be curious on this one as well

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Tom Barrett
Sent: Friday, October 12, 2012 12:02 PM
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] How do I remove rewrite rules?

Specifically, I would like to remove attachment rewrite rules and replace
them with a leading slug (e.g. /media/).

My Google-fu has abandoned me - all I can find is related to flushing and
apache rewrite. I want to delete the rule.

My main reason for this is slug collisions with media items. Especially that
they take precedence over pages.

--
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett _______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From wordpress at zed1.com  Fri Oct 12 20:52:58 2012
From: wordpress at zed1.com (Mike Little)
Date: Fri, 12 Oct 2012 21:52:58 +0100
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <4BE8469D-3295-4322-90BE-EC86692AE32B@newclarity.net>
References: <005901cda690$59f65630$2200a8c0@TITA>
	<CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>
	<CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com>
	<019e01cda8b7$61da9950$2200a8c0@TITA>
	<4BE8469D-3295-4322-90BE-EC86692AE32B@newclarity.net>
Message-ID: <CAMb54M3zmbDWcmYwy4BW-TmeJzNAYBdwc3_s3UFYg+Mpbc+g_A@mail.gmail.com>

On 12 October 2012 21:31, Mike Schinkel <mike at newclarity.net> wrote:

> On Oct 12, 2012, at 4:23 PM, "Diana K. C" <dianakac at gmail.com> wrote:
> > I don't think pages should be 10 or 20, huge WP sites keep thousand
> pages, posts, post types, everything.
>
> If a site has thousands of "Pages" (vs. custom post types) chances are 99%
> likely they are doing it wrong.
>
>
My! That's a grand sweeping statement. I wonder if there is any basis in
fact.

A few years ago I worked on a site with, at the time, 2100 pages in a
hierarchy 7 levels deep: that site was (and still is) doing it exactly
right. The site is an on-line manual whose architecture reflects the TOC of
the paper version. Last I heard, it was heading for more than 4000 pages.


Mike
-- 
Mike Little
http://zed1.com/

From mike at newclarity.net  Fri Oct 12 21:11:00 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 12 Oct 2012 17:11:00 -0400
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <CAMb54M3zmbDWcmYwy4BW-TmeJzNAYBdwc3_s3UFYg+Mpbc+g_A@mail.gmail.com>
References: <005901cda690$59f65630$2200a8c0@TITA>
	<CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>
	<CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com>
	<019e01cda8b7$61da9950$2200a8c0@TITA>
	<4BE8469D-3295-4322-90BE-EC86692AE32B@newclarity.net>
	<CAMb54M3zmbDWcmYwy4BW-TmeJzNAYBdwc3_s3UFYg+Mpbc+g_A@mail.gmail.com>
Message-ID: <6B18EDB6-68C1-406C-908B-2A0EF2DE74AF@newclarity.net>

On Oct 12, 2012, at 4:52 PM, Mike Little <wordpress at zed1.com> wrote:
> On 12 October 2012 21:31, Mike Schinkel <mike at newclarity.net> wrote:
> 
>> On Oct 12, 2012, at 4:23 PM, "Diana K. C" <dianakac at gmail.com> wrote:
>>> I don't think pages should be 10 or 20, huge WP sites keep thousand
>> pages, posts, post types, everything.
>> 
>> If a site has thousands of "Pages" (vs. custom post types) chances are 99%
>> likely they are doing it wrong.
>> 
>> 
> My! That's a grand sweeping statement. I wonder if there is any basis in
> fact.
> 
> A few years ago I worked on a site with, at the time, 2100 pages in a
> hierarchy 7 levels deep: that site was (and still is) doing it exactly
> right. The site is an on-line manual whose architecture reflects the TOC of
> the paper version. Last I heard, it was heading for more than 4000 pages.

My argument is that chance are very high that most of those pages should be custom post types.  

But like I said, there's always the 1% that are not doing it wrong, maybe this is one of them.

-Mike

From benjamin.lupu at gmail.com  Fri Oct 12 21:14:59 2012
From: benjamin.lupu at gmail.com (Benjamin.lupu@gmail.com)
Date: Fri, 12 Oct 2012 23:14:59 +0200
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <CAMb54M3zmbDWcmYwy4BW-TmeJzNAYBdwc3_s3UFYg+Mpbc+g_A@mail.gmail.com>
References: <005901cda690$59f65630$2200a8c0@TITA>
	<CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>
	<CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com>
	<019e01cda8b7$61da9950$2200a8c0@TITA>
	<4BE8469D-3295-4322-90BE-EC86692AE32B@newclarity.net>
	<CAMb54M3zmbDWcmYwy4BW-TmeJzNAYBdwc3_s3UFYg+Mpbc+g_A@mail.gmail.com>
Message-ID: <F5CA8DE9-D07E-4B43-8429-ACEC7E091EDA@gmail.com>

Agreed. Pages are a great tool for many sites and some of mine have actually thousands of pages. However the native Wordpress page UI is not done for that. So we have to use a specific panel to ease the page management.



Le 12 oct. 2012 ? 22:52, Mike Little <wordpress at zed1.com> a ?crit :

> On 12 October 2012 21:31, Mike Schinkel <mike at newclarity.net> wrote:
> 
>> On Oct 12, 2012, at 4:23 PM, "Diana K. C" <dianakac at gmail.com> wrote:
>>> I don't think pages should be 10 or 20, huge WP sites keep thousand
>> pages, posts, post types, everything.
>> 
>> If a site has thousands of "Pages" (vs. custom post types) chances are 99%
>> likely they are doing it wrong.
>> 
>> 
> My! That's a grand sweeping statement. I wonder if there is any basis in
> fact.
> 
> A few years ago I worked on a site with, at the time, 2100 pages in a
> hierarchy 7 levels deep: that site was (and still is) doing it exactly
> right. The site is an on-line manual whose architecture reflects the TOC of
> the paper version. Last I heard, it was heading for more than 4000 pages.
> 
> 
> Mike
> -- 
> Mike Little
> http://zed1.com/
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From dianakac at gmail.com  Fri Oct 12 21:41:31 2012
From: dianakac at gmail.com (Diana K. C)
Date: Fri, 12 Oct 2012 18:41:31 -0300
Subject: [wp-hackers] Hide pages from panels
References: <005901cda690$59f65630$2200a8c0@TITA><CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com><CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com><019e01cda8b7$61da9950$2200a8c0@TITA><4BE8469D-3295-4322-90BE-EC86692AE32B@newclarity.net><CAMb54M3zmbDWcmYwy4BW-TmeJzNAYBdwc3_s3UFYg+Mpbc+g_A@mail.gmail.com>
	<F5CA8DE9-D07E-4B43-8429-ACEC7E091EDA@gmail.com>
Message-ID: <01b501cda8c2$5a121a30$2200a8c0@TITA>

That's true, is not a problems a lot of pages or post types, but how to 
handle a lot of content. Thousand post types with page features such 
hierarchy are equally hard to manage.

I could create a post type and just update the pages into them but the 
problem is there same way...


----- Original Message ----- 
From: "Benjamin.lupu at gmail.com" <benjamin.lupu at gmail.com>
To: <wp-hackers at lists.automattic.com>
Cc: <wp-hackers at lists.automattic.com>
Sent: Friday, October 12, 2012 6:14 PM
Subject: Re: [wp-hackers] Hide pages from panels


> Agreed. Pages are a great tool for many sites and some of mine have 
> actually thousands of pages. However the native Wordpress page UI is not 
> done for that. So we have to use a specific panel to ease the page 
> management.
>
>
>
> Le 12 oct. 2012 ? 22:52, Mike Little <wordpress at zed1.com> a ?crit :
>
>> On 12 October 2012 21:31, Mike Schinkel <mike at newclarity.net> wrote:
>>
>>> On Oct 12, 2012, at 4:23 PM, "Diana K. C" <dianakac at gmail.com> wrote:
>>>> I don't think pages should be 10 or 20, huge WP sites keep thousand
>>> pages, posts, post types, everything.
>>>
>>> If a site has thousands of "Pages" (vs. custom post types) chances are 
>>> 99%
>>> likely they are doing it wrong.
>>>
>>>
>> My! That's a grand sweeping statement. I wonder if there is any basis in
>> fact.
>>
>> A few years ago I worked on a site with, at the time, 2100 pages in a
>> hierarchy 7 levels deep: that site was (and still is) doing it exactly
>> right. The site is an on-line manual whose architecture reflects the TOC 
>> of
>> the paper version. Last I heard, it was heading for more than 4000 pages.
>>
>>
>> Mike
>> -- 
>> Mike Little
>> http://zed1.com/
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 


From mike at newclarity.net  Fri Oct 12 21:41:57 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 12 Oct 2012 17:41:57 -0400
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <01b501cda8c2$5a121a30$2200a8c0@TITA>
References: <005901cda690$59f65630$2200a8c0@TITA><CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com><CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com><019e01cda8b7$61da9950$2200a8c0@TITA><4BE8469D-3295-4322-90BE-EC86692AE32B@newclarity.net><CAMb54M3zmbDWcmYwy4BW-TmeJzNAYBdwc3_s3UFYg+Mpbc+g_A@mail.gmail.com>
	<F5CA8DE9-D07E-4B43-8429-ACEC7E091EDA@gmail.com>
	<01b501cda8c2$5a121a30$2200a8c0@TITA>
Message-ID: <3ED74BAA-F011-49B6-8D9F-D3E2AC63E7A3@newclarity.net>

On Oct 12, 2012, at 5:41 PM, "Diana K. C" <dianakac at gmail.com> wrote:

> That's true, is not a problems a lot of pages or post types, but how to handle a lot of content. Thousand post types with page features such hierarchy are equally hard to manage.
> 
> I could create a post type and just update the pages into them but the problem is there same way...

Good point.  What (you are saying) is needed is a much better admin UI for managing sites with a large number of posts that represent content to be maintained and not just prior Posts in the archive.  Agreed.

-Mike

From benjamin.lupu at gmail.com  Fri Oct 12 21:49:52 2012
From: benjamin.lupu at gmail.com (Benjamin.lupu@gmail.com)
Date: Fri, 12 Oct 2012 23:49:52 +0200
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <01b501cda8c2$5a121a30$2200a8c0@TITA>
References: <005901cda690$59f65630$2200a8c0@TITA>
	<CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>
	<CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com>
	<019e01cda8b7$61da9950$2200a8c0@TITA>
	<4BE8469D-3295-4322-90BE-EC86692AE32B@newclarity.net>
	<CAMb54M3zmbDWcmYwy4BW-TmeJzNAYBdwc3_s3UFYg+Mpbc+g_A@mail.gmail.com>
	<F5CA8DE9-D07E-4B43-8429-ACEC7E091EDA@gmail.com>
	<01b501cda8c2$5a121a30$2200a8c0@TITA>
Message-ID: <8DF3EBD7-AB6C-43AA-9DAD-1723072649DA@gmail.com>

We have tried to address this issue by building an easier UI which replaces the native one and aims to be really easier. It's actually in a beta test stage and we hope to have our first site running it by the end of the year. (sorry if it's a bit off topic. It's also a way to say you're not alone with this problem :-))

Le 12 oct. 2012 ? 23:41, "Diana K. C" <dianakac at gmail.com> a ?crit :

> That's true, is not a problems a lot of pages or post types, but how to handle a lot of content. Thousand post types with page features such hierarchy are equally hard to manage.
> 
> I could create a post type and just update the pages into them but the problem is there same way...
> 
> 
> ----- Original Message ----- From: "Benjamin.lupu at gmail.com" <benjamin.lupu at gmail.com>
> To: <wp-hackers at lists.automattic.com>
> Cc: <wp-hackers at lists.automattic.com>
> Sent: Friday, October 12, 2012 6:14 PM
> Subject: Re: [wp-hackers] Hide pages from panels
> 
> 
>> Agreed. Pages are a great tool for many sites and some of mine have actually thousands of pages. However the native Wordpress page UI is not done for that. So we have to use a specific panel to ease the page management.
>> 
>> 
>> 
>> Le 12 oct. 2012 ? 22:52, Mike Little <wordpress at zed1.com> a ?crit :
>> 
>>> On 12 October 2012 21:31, Mike Schinkel <mike at newclarity.net> wrote:
>>> 
>>>> On Oct 12, 2012, at 4:23 PM, "Diana K. C" <dianakac at gmail.com> wrote:
>>>>> I don't think pages should be 10 or 20, huge WP sites keep thousand
>>>> pages, posts, post types, everything.
>>>> 
>>>> If a site has thousands of "Pages" (vs. custom post types) chances are 99%
>>>> likely they are doing it wrong.
>>>> 
>>>> 
>>> My! That's a grand sweeping statement. I wonder if there is any basis in
>>> fact.
>>> 
>>> A few years ago I worked on a site with, at the time, 2100 pages in a
>>> hierarchy 7 levels deep: that site was (and still is) doing it exactly
>>> right. The site is an on-line manual whose architecture reflects the TOC of
>>> the paper version. Last I heard, it was heading for more than 4000 pages.
>>> 
>>> 
>>> Mike
>>> -- 
>>> Mike Little
>>> http://zed1.com/
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mike at newclarity.net  Fri Oct 12 21:50:42 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Fri, 12 Oct 2012 17:50:42 -0400
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <8DF3EBD7-AB6C-43AA-9DAD-1723072649DA@gmail.com>
References: <005901cda690$59f65630$2200a8c0@TITA>
	<CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>
	<CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com>
	<019e01cda8b7$61da9950$2200a8c0@TITA>
	<4BE8469D-3295-4322-90BE-EC86692AE32B@newclarity.net>
	<CAMb54M3zmbDWcmYwy4BW-TmeJzNAYBdwc3_s3UFYg+Mpbc+g_A@mail.gmail.com>
	<F5CA8DE9-D07E-4B43-8429-ACEC7E091EDA@gmail.com>
	<01b501cda8c2$5a121a30$2200a8c0@TITA>
	<8DF3EBD7-AB6C-43AA-9DAD-1723072649DA@gmail.com>
Message-ID: <3682CBE1-31E1-42DD-84E7-38635997F513@newclarity.net>

On Oct 12, 2012, at 5:49 PM, "Benjamin.lupu at gmail.com" <benjamin.lupu at gmail.com> wrote:
> We have tried to address this issue by building an easier UI which replaces the native one and aims to be really easier. It's actually in a beta test stage and we hope to have our first site running it by the end of the year. (sorry if it's a bit off topic. It's also a way to say you're not alone with this problem :-))

Are you going to publish that UI as a plugin in the repo?

-Mike

From benjamin.lupu at gmail.com  Fri Oct 12 21:54:06 2012
From: benjamin.lupu at gmail.com (Benjamin.lupu@gmail.com)
Date: Fri, 12 Oct 2012 23:54:06 +0200
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <3682CBE1-31E1-42DD-84E7-38635997F513@newclarity.net>
References: <005901cda690$59f65630$2200a8c0@TITA>
	<CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>
	<CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com>
	<019e01cda8b7$61da9950$2200a8c0@TITA>
	<4BE8469D-3295-4322-90BE-EC86692AE32B@newclarity.net>
	<CAMb54M3zmbDWcmYwy4BW-TmeJzNAYBdwc3_s3UFYg+Mpbc+g_A@mail.gmail.com>
	<F5CA8DE9-D07E-4B43-8429-ACEC7E091EDA@gmail.com>
	<01b501cda8c2$5a121a30$2200a8c0@TITA>
	<8DF3EBD7-AB6C-43AA-9DAD-1723072649DA@gmail.com>
	<3682CBE1-31E1-42DD-84E7-38635997F513@newclarity.net>
Message-ID: <3AE33389-948C-42C0-BBEC-E8A617D6DC11@gmail.com>

Yes. First as a beta version. We're currently finalizing the translations (we're french). 

Le 12 oct. 2012 ? 23:50, Mike Schinkel <mike at newclarity.net> a ?crit :

> On Oct 12, 2012, at 5:49 PM, "Benjamin.lupu at gmail.com" <benjamin.lupu at gmail.com> wrote:
>> We have tried to address this issue by building an easier UI which replaces the native one and aims to be really easier. It's actually in a beta test stage and we hope to have our first site running it by the end of the year. (sorry if it's a bit off topic. It's also a way to say you're not alone with this problem :-))
> 
> Are you going to publish that UI as a plugin in the repo?
> 
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From dianakac at gmail.com  Sat Oct 13 01:03:25 2012
From: dianakac at gmail.com (Diana K. C)
Date: Fri, 12 Oct 2012 22:03:25 -0300
Subject: [wp-hackers] Hide pages from panels
References: <005901cda690$59f65630$2200a8c0@TITA><CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com><CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com><019e01cda8b7$61da9950$2200a8c0@TITA><4BE8469D-3295-4322-90BE-EC86692AE32B@newclarity.net><CAMb54M3zmbDWcmYwy4BW-TmeJzNAYBdwc3_s3UFYg+Mpbc+g_A@mail.gmail.com><F5CA8DE9-D07E-4B43-8429-ACEC7E091EDA@gmail.com><01b501cda8c2$5a121a30$2200a8c0@TITA><8DF3EBD7-AB6C-43AA-9DAD-1723072649DA@gmail.com><3682CBE1-31E1-42DD-84E7-38635997F513@newclarity.net>
	<3AE33389-948C-42C0-BBEC-E8A617D6DC11@gmail.com>
Message-ID: <01de01cda8de$8e49f4f0$2200a8c0@TITA>

That's very promising! I'm looking forward.

----- Original Message ----- 
From: "Benjamin.lupu at gmail.com" <benjamin.lupu at gmail.com>
To: <wp-hackers at lists.automattic.com>
Cc: <wp-hackers at lists.automattic.com>
Sent: Friday, October 12, 2012 6:54 PM
Subject: Re: [wp-hackers] Hide pages from panels


> Yes. First as a beta version. We're currently finalizing the translations 
> (we're french).
>
> Le 12 oct. 2012 ? 23:50, Mike Schinkel <mike at newclarity.net> a ?crit :
>
>> On Oct 12, 2012, at 5:49 PM, "Benjamin.lupu at gmail.com" 
>> <benjamin.lupu at gmail.com> wrote:
>>> We have tried to address this issue by building an easier UI which 
>>> replaces the native one and aims to be really easier. It's actually in a 
>>> beta test stage and we hope to have our first site running it by the end 
>>> of the year. (sorry if it's a bit off topic. It's also a way to say 
>>> you're not alone with this problem :-))
>>
>> Are you going to publish that UI as a plugin in the repo?
>>
>> -Mike
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 


From nichesecure at ameritech.net  Sat Oct 13 01:43:29 2012
From: nichesecure at ameritech.net (Eddie Gilbert)
Date: Fri, 12 Oct 2012 21:43:29 -0400
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com>
References: <005901cda690$59f65630$2200a8c0@TITA>
	<CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com>
	<CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com>
Message-ID: <1B383D41-02A2-4B5A-B816-61275518CB9F@ameritech.net>

Unsubscribe deceased 

Sent from my iPhone

On Oct 12, 2012, at 9:50 AM, Mike Walsh <mpwalsh8 at gmail.com> wrote:

> I wish the WordPress menu manager used the model employed by CMS Tree View
> (which is a fantastic plugin).  WordPress Menus get pretty unwieldy pretty
> quickly because they don't have the ability to expand and collapse menu
> hierarchy.
> 
> On Wed, Oct 10, 2012 at 4:37 AM, Mike Little <wordpress at zed1.com> wrote:
> 
>> On 10 October 2012 03:38, Diana K. C <dianakac at gmail.com> wrote:
>> 
>>> Hi there,
>>> 
>>> I just converted/migrated a lot of pages and posts, now is getting hard
>> to
>>> browse pages in panel. I would like to hide pages from a specific month,
>> in
>>> panels such Pages and Parent Page dropdown as well, is there some way to
>> do
>>> this?
>>> 
>>> I found a code some time ago but needed to informe page IDs and wasn't
>>> hidding the pages in Parent Page dropdown.
>>> 
>>> Thanks a lot!
>>> 
>> 
>> 
>> Whilst not addressing your exact requirements, you should look at CMS Tree
>> Page View (http://wordpress.org/extend/plugins/cms-tree-page-view/) as an
>> alternative way to manage pages.
>> 
>> It has a more usable interface than WordPress' own, including a folding
>> tree structure, search, drag 'n' drop positioning (page order and
>> parent-child), and links to all main features: edit, view, and add new
>> (directly in the place you want to add it)
>> 
>> 
>> Mike
>> --
>> Mike Little
>> http://zed1.com/
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> 
> 
> 
> -- 
> Mike Walsh - mpwalsh8 at gmail.com
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From paul at codehooligans.com  Sat Oct 13 03:09:07 2012
From: paul at codehooligans.com (Paul Menard)
Date: Fri, 12 Oct 2012 22:09:07 -0500
Subject: [wp-hackers] Hide pages from panels
In-Reply-To: <01de01cda8de$8e49f4f0$2200a8c0@TITA>
References: <005901cda690$59f65630$2200a8c0@TITA><CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com><CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com><019e01cda8b7$61da9950$2200a8c0@TITA><4BE8469D-3295-4322-90BE-EC86692AE32B@newclarity.net><CAMb54M3zmbDWcmYwy4BW-TmeJzNAYBdwc3_s3UFYg+Mpbc+g_A@mail.gmail.com><F5CA8DE9-D07E-4B43-8429-ACEC7E091EDA@gmail.com><01b501cda8c2$5a121a30$2200a8c0@TITA><8DF3EBD7-AB6C-43AA-9DAD-1723072649DA@gmail.com><3682CBE1-31E1-42DD-84E7-38635997F513@newclarity.net>
	<3AE33389-948C-42C0-BBEC-E8A617D6DC11@gmail.com>
	<01de01cda8de$8e49f4f0$2200a8c0@TITA>
Message-ID: <84C51A9E-9541-4BB8-BC9D-5A70773A9BAD@codehooligans.com>

FWIW, I wrote a little plugin about 2 years ago to override the Pages output. Check out Pages-Children http://wordpress.org/extend/plugins/pages-children/

The plugin was originally written when I was working on a very large site which had hundreds of pages and many may levels in the hierarchy. Got tired of trying to find the right page to edit I wrote Pages-Children. The plugin will basically output only a level of hierarchy at a time. So for example the top-level pages are shown. Those pages with children have a new hover link showing the children. When drilling down the hierarchy there is an added breadcrumb that lets you go up the chain as needed. 

One thing I like about this solution over tree views is you are not loading all the levels you don't need. Even if the tree view nodes are loaded via ajax. You still get a bunch of information indented on the screen you may not need. 

After I write the original release I expanded the logic to include any hierarchical post type as well as hierarchical taxonomies. 

Paul


On Oct 12, 2012, at 8:03 PM, "Diana K. C" <dianakac at gmail.com> wrote:

> That's very promising! I'm looking forward.
> 
> ----- Original Message ----- From: "Benjamin.lupu at gmail.com" <benjamin.lupu at gmail.com>
> To: <wp-hackers at lists.automattic.com>
> Cc: <wp-hackers at lists.automattic.com>
> Sent: Friday, October 12, 2012 6:54 PM
> Subject: Re: [wp-hackers] Hide pages from panels
> 
> 
>> Yes. First as a beta version. We're currently finalizing the translations (we're french).
>> 
>> Le 12 oct. 2012 ? 23:50, Mike Schinkel <mike at newclarity.net> a ?crit :
>> 
>>> On Oct 12, 2012, at 5:49 PM, "Benjamin.lupu at gmail.com" <benjamin.lupu at gmail.com> wrote:
>>>> We have tried to address this issue by building an easier UI which replaces the native one and aims to be really easier. It's actually in a beta test stage and we hope to have our first site running it by the end of the year. (sorry if it's a bit off topic. It's also a way to say you're not alone with this problem :-))
>>> 
>>> Are you going to publish that UI as a plugin in the repo?
>>> 
>>> -Mike
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From dianakac at gmail.com  Sat Oct 13 03:39:58 2012
From: dianakac at gmail.com (Diana K. C)
Date: Sat, 13 Oct 2012 00:39:58 -0300
Subject: [wp-hackers] Hide pages from panels
References: <005901cda690$59f65630$2200a8c0@TITA><CAMb54M33Xr3U5q3d3FF63gBJOsdWdaq6Lg4gMvMXb-pT4D0GOg@mail.gmail.com><CAMg3evEVrk_rRARG5UYbEi9LstNeYqxAAyT9Dwta6E5WnwqSWQ@mail.gmail.com><019e01cda8b7$61da9950$2200a8c0@TITA><4BE8469D-3295-4322-90BE-EC86692AE32B@newclarity.net><CAMb54M3zmbDWcmYwy4BW-TmeJzNAYBdwc3_s3UFYg+Mpbc+g_A@mail.gmail.com><F5CA8DE9-D07E-4B43-8429-ACEC7E091EDA@gmail.com><01b501cda8c2$5a121a30$2200a8c0@TITA><8DF3EBD7-AB6C-43AA-9DAD-1723072649DA@gmail.com><3682CBE1-31E1-42DD-84E7-38635997F513@newclarity.net><3AE33389-948C-42C0-BBEC-E8A617D6DC11@gmail.com><01de01cda8de$8e49f4f0$2200a8c0@TITA>
	<84C51A9E-9541-4BB8-BC9D-5A70773A9BAD@codehooligans.com>
Message-ID: <022401cda8f4$6d096030$2200a8c0@TITA>

I will try this! Thanks!



----- Original Message ----- 
From: "Paul Menard" <paul at codehooligans.com>
To: <wp-hackers at lists.automattic.com>
Sent: Saturday, October 13, 2012 12:09 AM
Subject: Re: [wp-hackers] Hide pages from panels


FWIW, I wrote a little plugin about 2 years ago to override the Pages 
output. Check out Pages-Children 
http://wordpress.org/extend/plugins/pages-children/

The plugin was originally written when I was working on a very large site 
which had hundreds of pages and many may levels in the hierarchy. Got tired 
of trying to find the right page to edit I wrote Pages-Children. The plugin 
will basically output only a level of hierarchy at a time. So for example 
the top-level pages are shown. Those pages with children have a new hover 
link showing the children. When drilling down the hierarchy there is an 
added breadcrumb that lets you go up the chain as needed.

One thing I like about this solution over tree views is you are not loading 
all the levels you don't need. Even if the tree view nodes are loaded via 
ajax. You still get a bunch of information indented on the screen you may 
not need.

After I write the original release I expanded the logic to include any 
hierarchical post type as well as hierarchical taxonomies.

Paul


On Oct 12, 2012, at 8:03 PM, "Diana K. C" <dianakac at gmail.com> wrote:

> That's very promising! I'm looking forward.
>
> ----- Original Message ----- From: "Benjamin.lupu at gmail.com" 
> <benjamin.lupu at gmail.com>
> To: <wp-hackers at lists.automattic.com>
> Cc: <wp-hackers at lists.automattic.com>
> Sent: Friday, October 12, 2012 6:54 PM
> Subject: Re: [wp-hackers] Hide pages from panels
>
>
>> Yes. First as a beta version. We're currently finalizing the translations 
>> (we're french).
>>
>> Le 12 oct. 2012 ? 23:50, Mike Schinkel <mike at newclarity.net> a ?crit :
>>
>>> On Oct 12, 2012, at 5:49 PM, "Benjamin.lupu at gmail.com" 
>>> <benjamin.lupu at gmail.com> wrote:
>>>> We have tried to address this issue by building an easier UI which 
>>>> replaces the native one and aims to be really easier. It's actually in 
>>>> a beta test stage and we hope to have our first site running it by the 
>>>> end of the year. (sorry if it's a bit off topic. It's also a way to say 
>>>> you're not alone with this problem :-))
>>>
>>> Are you going to publish that UI as a plugin in the repo?
>>>
>>> -Mike
>>> _______________________________________________
>>> wp-hackers mailing list
>>> wp-hackers at lists.automattic.com
>>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers 


From abdussamad at abdussamad.com  Sat Oct 13 05:33:25 2012
From: abdussamad at abdussamad.com (Abdussamad Abdurrazzaq)
Date: Sat, 13 Oct 2012 10:33:25 +0500
Subject: [wp-hackers] How do I remove rewrite rules?
In-Reply-To: <CAEgmxaY=-39j611MtbSJfrbR9a8+PATSC6MnnDLHvcOBSSS2SQ@mail.gmail.com>
References: <CAEgmxaY=-39j611MtbSJfrbR9a8+PATSC6MnnDLHvcOBSSS2SQ@mail.gmail.com>
Message-ID: <5078FD25.7020605@abdussamad.com>

You'll need to plug into an action called  "generate_rewrite_rules". The 
call back function will take one argument $wp_rewrite which is the 
rewrite object. $wp_rewrite->rules will allow you to get/set the current 
rules.

On 10/12/2012 09:01 PM, Tom Barrett wrote:
> Specifically, I would like to remove attachment rewrite rules and replace
> them with a leading slug (e.g. /media/).
>
> My Google-fu has abandoned me - all I can find is related to flushing and
> apache rewrite. I want to delete the rule.
>
> My main reason for this is slug collisions with media items. Especially
> that they take precedence over pages.
>



From chris at lod.com  Sat Oct 13 15:28:14 2012
From: chris at lod.com (Chris McCoy)
Date: Sat, 13 Oct 2012 11:28:14 -0400
Subject: [wp-hackers] How do I remove rewrite rules?
In-Reply-To: <5078FD25.7020605@abdussamad.com>
References: <CAEgmxaY=-39j611MtbSJfrbR9a8+PATSC6MnnDLHvcOBSSS2SQ@mail.gmail.com>
	<5078FD25.7020605@abdussamad.com>
Message-ID: <002701cda957$5cb0c530$16124f90$@lod.com>

Yes we already do this, we want to remove a default rule

-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Abdussamad
Abdurrazzaq
Sent: Saturday, October 13, 2012 1:33 AM
To: wp-hackers at lists.automattic.com
Subject: Re: [wp-hackers] How do I remove rewrite rules?

You'll need to plug into an action called  "generate_rewrite_rules". The
call back function will take one argument $wp_rewrite which is the rewrite
object. $wp_rewrite->rules will allow you to get/set the current rules.

On 10/12/2012 09:01 PM, Tom Barrett wrote:
> Specifically, I would like to remove attachment rewrite rules and 
> replace them with a leading slug (e.g. /media/).
>
> My Google-fu has abandoned me - all I can find is related to flushing 
> and apache rewrite. I want to delete the rule.
>
> My main reason for this is slug collisions with media items. 
> Especially that they take precedence over pages.
>


_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers


From abdussamad at abdussamad.com  Sat Oct 13 16:06:26 2012
From: abdussamad at abdussamad.com (Abdussamad Abdurrazzaq)
Date: Sat, 13 Oct 2012 21:06:26 +0500
Subject: [wp-hackers] How do I remove rewrite rules?
In-Reply-To: <002701cda957$5cb0c530$16124f90$@lod.com>
References: <CAEgmxaY=-39j611MtbSJfrbR9a8+PATSC6MnnDLHvcOBSSS2SQ@mail.gmail.com>
	<5078FD25.7020605@abdussamad.com>
	<002701cda957$5cb0c530$16124f90$@lod.com>
Message-ID: <50799182.5030202@abdussamad.com>

What's the problem then? Use the array_splice function to remove the 
rules you don't want.

On 10/13/2012 08:28 PM, Chris McCoy wrote:
> Yes we already do this, we want to remove a default rule
>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Abdussamad
> Abdurrazzaq
> Sent: Saturday, October 13, 2012 1:33 AM
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] How do I remove rewrite rules?
>
> You'll need to plug into an action called  "generate_rewrite_rules". The
> call back function will take one argument $wp_rewrite which is the rewrite
> object. $wp_rewrite->rules will allow you to get/set the current rules.
>
> On 10/12/2012 09:01 PM, Tom Barrett wrote:
>> Specifically, I would like to remove attachment rewrite rules and
>> replace them with a leading slug (e.g. /media/).
>>
>> My Google-fu has abandoned me - all I can find is related to flushing
>> and apache rewrite. I want to delete the rule.
>>
>> My main reason for this is slug collisions with media items.
>> Especially that they take precedence over pages.
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



From abdussamad at abdussamad.com  Sat Oct 13 16:19:52 2012
From: abdussamad at abdussamad.com (Abdussamad Abdurrazzaq)
Date: Sat, 13 Oct 2012 21:19:52 +0500
Subject: [wp-hackers] How do I remove rewrite rules?
In-Reply-To: <002701cda957$5cb0c530$16124f90$@lod.com>
References: <CAEgmxaY=-39j611MtbSJfrbR9a8+PATSC6MnnDLHvcOBSSS2SQ@mail.gmail.com>
	<5078FD25.7020605@abdussamad.com>
	<002701cda957$5cb0c530$16124f90$@lod.com>
Message-ID: <507994A8.9040900@abdussamad.com>

Try the plugin code below:

<?php
/*
Plugin NAme: REwrite Rule remover
*/

class rewrite_rule_remove {
        function __construct() {
         register_activation_hook( __FILE__, array( $this, 'install' ) );
           add_action( 'generate_rewrite_rules', array( $this, 'remover' 
) );
        }

     public function install() {
           flush_rewrite_rules();
     }

     public function remover( $wp_rewrite ){
           unset( $wp_rewrite->rules [ 
'[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/?$' ] );
     }
}

new rewrite_rule_remove();
?>

Unset is needed instead of array_splice because its an associative array.

On 10/13/2012 08:28 PM, Chris McCoy wrote:
> Yes we already do this, we want to remove a default rule
>
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of Abdussamad
> Abdurrazzaq
> Sent: Saturday, October 13, 2012 1:33 AM
> To: wp-hackers at lists.automattic.com
> Subject: Re: [wp-hackers] How do I remove rewrite rules?
>
> You'll need to plug into an action called  "generate_rewrite_rules". The
> call back function will take one argument $wp_rewrite which is the rewrite
> object. $wp_rewrite->rules will allow you to get/set the current rules.
>
> On 10/12/2012 09:01 PM, Tom Barrett wrote:
>> Specifically, I would like to remove attachment rewrite rules and
>> replace them with a leading slug (e.g. /media/).
>>
>> My Google-fu has abandoned me - all I can find is related to flushing
>> and apache rewrite. I want to delete the rule.
>>
>> My main reason for this is slug collisions with media items.
>> Especially that they take precedence over pages.
>>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



From chris at lod.com  Sun Oct 14 03:44:32 2012
From: chris at lod.com (Chris McCoy)
Date: Sat, 13 Oct 2012 23:44:32 -0400
Subject: [wp-hackers] easy way to change upload directory
Message-ID: <000001cda9be$38bb6ce0$aa3246a0$@lod.com>

I noticed with wp 3.5 it doesn't allow you to pick your upload directory
anymore if you want something out of the wp-content/uploads

What would be the best way to set this, I came across an undefined constant
UPLOADS which seems to work, also the upload_dir filter.

Difference between the two is one is just a constant other I would need a
plugin or code added to functions.php

These the only two ways?



From wordpress at dd32.id.au  Sun Oct 14 05:53:20 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Sun, 14 Oct 2012 16:53:20 +1100
Subject: [wp-hackers] easy way to change upload directory
In-Reply-To: <000001cda9be$38bb6ce0$aa3246a0$@lod.com>
References: <000001cda9be$38bb6ce0$aa3246a0$@lod.com>
Message-ID: <CAL4EHfmdFW3t-7Qse+A2ftqVPkEH3WQEXX_=KVSoocdZppG6uA@mail.gmail.com>

Using the define is supported and probably the best way If you want it
hard coded. The filter will also work fine.
I'm not sure, but you might also have the upload_path and
upload_url_path via wp-admin/options.php, but I'd avoid that route, as
the constant will work right for the job.

See http://core.trac.wordpress.org/ticket/21720 for where it was removed.


On 14 October 2012 14:44, Chris McCoy <chris at lod.com> wrote:
> I noticed with wp 3.5 it doesn't allow you to pick your upload directory
> anymore if you want something out of the wp-content/uploads
>
> What would be the best way to set this, I came across an undefined constant
> UPLOADS which seems to work, also the upload_dir filter.
>
> Difference between the two is one is just a constant other I would need a
> plugin or code added to functions.php
>
> These the only two ways?
>
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From wp at andrewnacin.com  Sun Oct 14 16:39:36 2012
From: wp at andrewnacin.com (Andrew Nacin)
Date: Sun, 14 Oct 2012 12:39:36 -0400
Subject: [wp-hackers] 3.5 and attachment_fields_to_edit (custom fields
	for media)
In-Reply-To: <CAGEuVU3OvLHQBWgw_h7b8JtEP7nvQQGtywvgWgqatT7X_fRizA@mail.gmail.com>
References: <CAGEuVU3OvLHQBWgw_h7b8JtEP7nvQQGtywvgWgqatT7X_fRizA@mail.gmail.com>
Message-ID: <CAP29Pvh-PHpO7njPPdTGUUrRuLXeyuNF5mXeStR6jTqC2dtcqQ@mail.gmail.com>

On Tue, Oct 9, 2012 at 8:31 AM, Steve Taylor <steve at sltaylor.co.uk> wrote:

> Hi,
>
> A plugin of mine
> (http://wordpress.org/extend/plugins/developers-custom-fields/)
> involves adding custom fields to media attachments via the
> attachment_fields_to_edit hook. It looks like this method is broken in
> the current beta of 3.5 due to moving media editing to post.php.
>
> Has anyone worked with this / posted about it? I've looked through the
> Trac ticket (http://core.trac.wordpress.org/ticket/21391) and there
> don't seem to be any hints for devs whose stuff this breaks.
>
> I'm ploughing into it now, just wondered if anyone else was ahead of
> me! I'm guessing the new approach will be even easier to hook into
> (using standard meta boxes) - but does legacy support just involve
> leaving attachment_fields_to_edit stuff in place?


Two things:

 - Your plugin will probably become a lot simpler if it is updated to use
the newer post type UI/API.

 -  We are still doing backwards compatibility sweeps. We will continue to
support attachment_fields_to_edit in a backwards compatible, deprecated
fashion, it just doesn't yet. Thanks for the reminder on this hook in
particular.

Nacin

From steve at sltaylor.co.uk  Sun Oct 14 23:13:40 2012
From: steve at sltaylor.co.uk (Steve Taylor)
Date: Mon, 15 Oct 2012 00:13:40 +0100
Subject: [wp-hackers] 3.5 and attachment_fields_to_edit (custom fields
	for media)
In-Reply-To: <CAP29Pvh-PHpO7njPPdTGUUrRuLXeyuNF5mXeStR6jTqC2dtcqQ@mail.gmail.com>
References: <CAGEuVU3OvLHQBWgw_h7b8JtEP7nvQQGtywvgWgqatT7X_fRizA@mail.gmail.com>
	<CAP29Pvh-PHpO7njPPdTGUUrRuLXeyuNF5mXeStR6jTqC2dtcqQ@mail.gmail.com>
Message-ID: <CAGEuVU2EDn_vZNqrV3iw5W0BGKOxyh+cQmAoAv9jgViMUsZB7A@mail.gmail.com>

Hi, thanks for the response.

I've updated the plugin (on GitHub, not yet wordpress.org) to work
with the new API. Yes, much easier :-)  Just a few tweaks and the code
I've got in place for post screen meta boxes works fine for 3.5
attachments.

I left my old code in for backwards compatibility. I'm checking on the
actual WP version, not on the existence of a hook. Maybe not always
the best way around, but I guess this means now I don't have to worry
about when you re-implement attachment_fields_to_edit for your
backwards compatibility...

Steve


On 14 October 2012 17:39, Andrew Nacin <wp at andrewnacin.com> wrote:
> On Tue, Oct 9, 2012 at 8:31 AM, Steve Taylor <steve at sltaylor.co.uk> wrote:
>
>> Hi,
>>
>> A plugin of mine
>> (http://wordpress.org/extend/plugins/developers-custom-fields/)
>> involves adding custom fields to media attachments via the
>> attachment_fields_to_edit hook. It looks like this method is broken in
>> the current beta of 3.5 due to moving media editing to post.php.
>>
>> Has anyone worked with this / posted about it? I've looked through the
>> Trac ticket (http://core.trac.wordpress.org/ticket/21391) and there
>> don't seem to be any hints for devs whose stuff this breaks.
>>
>> I'm ploughing into it now, just wondered if anyone else was ahead of
>> me! I'm guessing the new approach will be even easier to hook into
>> (using standard meta boxes) - but does legacy support just involve
>> leaving attachment_fields_to_edit stuff in place?
>
>
> Two things:
>
>  - Your plugin will probably become a lot simpler if it is updated to use
> the newer post type UI/API.
>
>  -  We are still doing backwards compatibility sweeps. We will continue to
> support attachment_fields_to_edit in a backwards compatible, deprecated
> fashion, it just doesn't yet. Thanks for the reminder on this hook in
> particular.
>
> Nacin
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From dkryzaniak at gmail.com  Mon Oct 15 16:00:59 2012
From: dkryzaniak at gmail.com (David Kryzaniak)
Date: Mon, 15 Oct 2012 11:00:59 -0500
Subject: [wp-hackers] Force Theme Customizer to Reload iFrame
Message-ID: <CAMHQuYgNEY+OAQQhxfGhwLHCkhAap7zkxjea5YR73JiQyiwYQQ@mail.gmail.com>

Hey all!

I'm working on a few menus in the Theme Customizer admin area. I need to
refresh once a button (A tag) is pressed. The button is in the right column
and not on the page, if it makes a difference. Is there a javascript
function I can call to force a refresh without saving? If I type in a text
area, the page auto refreshes just fine.

 Is there somewhere in the codex that has the un-minified js for the theme
customizer?

Thanks for the help!
-Dave

From bryan at ibaku.net  Mon Oct 15 17:25:50 2012
From: bryan at ibaku.net (Bryan Petty)
Date: Mon, 15 Oct 2012 11:25:50 -0600
Subject: [wp-hackers] Force Theme Customizer to Reload iFrame
In-Reply-To: <CAMHQuYgNEY+OAQQhxfGhwLHCkhAap7zkxjea5YR73JiQyiwYQQ@mail.gmail.com>
References: <CAMHQuYgNEY+OAQQhxfGhwLHCkhAap7zkxjea5YR73JiQyiwYQQ@mail.gmail.com>
Message-ID: <CAKB8V+opUE9d2PogmZvzYZdZk=Vqk6D558a5RC+iLhYEA2-oNw@mail.gmail.com>

On Mon, Oct 15, 2012 at 10:00 AM, David Kryzaniak <dkryzaniak at gmail.com> wrote:
>  Is there somewhere in the codex that has the un-minified js for the theme
> customizer?

Add the following lines to your wp-config.php in order to use the
original non-minified JS:

define('SCRIPT_DEBUG', true);
define('CONCATENATE_SCRIPTS', false);
define('COMPRESS_SCRIPTS', false);
define('COMPRESS_CSS', false);
define('ENFORCE_GZIP', false);

Mostly just the first one is important, but the others can be handy
for debug too.

More info here: http://codex.wordpress.org/Debugging_in_WordPress

Regards,
Bryan Petty

From sabreuse at gmail.com  Mon Oct 15 17:41:41 2012
From: sabreuse at gmail.com (Amy Hendrix)
Date: Mon, 15 Oct 2012 13:41:41 -0400
Subject: [wp-hackers] Force Theme Customizer to Reload iFrame
In-Reply-To: <CAMHQuYgNEY+OAQQhxfGhwLHCkhAap7zkxjea5YR73JiQyiwYQQ@mail.gmail.com>
References: <CAMHQuYgNEY+OAQQhxfGhwLHCkhAap7zkxjea5YR73JiQyiwYQQ@mail.gmail.com>
Message-ID: <CAKnJ9+xZV+Upd8Jx-yWR-iTh18gS3JT-KnvsB-QcPBWfhVEurQ@mail.gmail.com>

To force an auto-refresh, you'll need to set the 'transport' arg to
'postMessage' in your add_setting() call. You then need to write a bit
of js to handle your particular case. You can find more details at:

http://codex.wordpress.org/Theme_Customization_API#Part_3:_Configure_Live_Preview_.28Optional.29

http://ottopress.com/2012/how-to-leverage-the-theme-customizer-in-your-own-themes/
(scroll down to the end for the "Enter postMessage" section)

On Mon, Oct 15, 2012 at 12:00 PM, David Kryzaniak <dkryzaniak at gmail.com> wrote:
> Hey all!
>
> I'm working on a few menus in the Theme Customizer admin area. I need to
> refresh once a button (A tag) is pressed. The button is in the right column
> and not on the page, if it makes a difference. Is there a javascript
> function I can call to force a refresh without saving? If I type in a text
> area, the page auto refreshes just fine.
>
>  Is there somewhere in the codex that has the un-minified js for the theme
> customizer?
>
> Thanks for the help!
> -Dave
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From frank at bueltge.de  Tue Oct 16 08:56:34 2012
From: frank at bueltge.de (Frank Bueltge)
Date: Tue, 16 Oct 2012 10:56:34 +0200
Subject: [wp-hackers] Force Theme Customizer to Reload iFrame
In-Reply-To: <CAKnJ9+xZV+Upd8Jx-yWR-iTh18gS3JT-KnvsB-QcPBWfhVEurQ@mail.gmail.com>
References: <CAMHQuYgNEY+OAQQhxfGhwLHCkhAap7zkxjea5YR73JiQyiwYQQ@mail.gmail.com>
	<CAKnJ9+xZV+Upd8Jx-yWR-iTh18gS3JT-KnvsB-QcPBWfhVEurQ@mail.gmail.com>
Message-ID: <CAH9UVvENy+5YoVV3q_NJGRvS33GEDfBBfaaL9NeCK2NN9F9fPQ@mail.gmail.com>

You can find also a small example for WP Title and Description on this theme.
See the dev version od script for read the source:
https://github.com/bueltge/Documentation/blob/master/js/theme-customizer.dev.js

The include can you find in the customizer file:
https://github.com/bueltge/Documentation/blob/master/inc/theme-customize.php
Line: 40
add_action( 'customize_preview_init', array( $this, 'customize_preview_js' ) );

Best regards

On Mon, Oct 15, 2012 at 7:41 PM, Amy Hendrix <sabreuse at gmail.com> wrote:
> To force an auto-refresh, you'll need to set the 'transport' arg to
> 'postMessage' in your add_setting() call. You then need to write a bit
> of js to handle your particular case. You can find more details at:
>
> http://codex.wordpress.org/Theme_Customization_API#Part_3:_Configure_Live_Preview_.28Optional.29
>
> http://ottopress.com/2012/how-to-leverage-the-theme-customizer-in-your-own-themes/
> (scroll down to the end for the "Enter postMessage" section)
>
> On Mon, Oct 15, 2012 at 12:00 PM, David Kryzaniak <dkryzaniak at gmail.com> wrote:
>> Hey all!
>>
>> I'm working on a few menus in the Theme Customizer admin area. I need to
>> refresh once a button (A tag) is pressed. The button is in the right column
>> and not on the page, if it makes a difference. Is there a javascript
>> function I can call to force a refresh without saving? If I type in a text
>> area, the page auto refreshes just fine.
>>
>>  Is there somewhere in the codex that has the un-minified js for the theme
>> customizer?
>>
>> Thanks for the help!
>> -Dave
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From mpw at taquiri.de  Tue Oct 16 11:04:30 2012
From: mpw at taquiri.de (=?ISO-8859-15?Q?=22Matthias_P=2E_W=FCrfl=22?=)
Date: Tue, 16 Oct 2012 13:04:30 +0200
Subject: [wp-hackers] cheap 404 serving
Message-ID: <507D3F3E.4000708@taquiri.de>

hi.

404s are expensive. There are several circumstances where a lot of 
avoidable 404-errors must be generated by wordpress:

- bots trying to find security flaws
- disappeared static files (images)
- ...

All the rewrite-rules i can find send every request that cannot be 
served as static content to wordpress. It would be cheaper to check the 
request if handeling by wordpress makes sense at all before wordpress is 
bootstrapped.

- URL ends on ".html" or "/"
- Accept-header contatins "text/html"
- ... (more?)

I serve static content with Nginx, i cache the results of 
fastcgi-requests, so i'm kinda prepared for accidential DOS-attacks (cat 
sitting on [F5] key) in these cases, but these 404 errors are still 
unsolved.

Are there any ready-to-use recipes to serve 404 errors cheaper? For 
Nginx? :-)

Matthias


From lists at rotorised.com  Tue Oct 16 11:18:36 2012
From: lists at rotorised.com (Ryan McCue)
Date: Tue, 16 Oct 2012 21:18:36 +1000
Subject: [wp-hackers] cheap 404 serving
In-Reply-To: <507D3F3E.4000708@taquiri.de>
References: <507D3F3E.4000708@taquiri.de>
Message-ID: <507D428C.2050400@rotorised.com>

"Matthias P. W?rfl" wrote:
> All the rewrite-rules i can find send every request that cannot be
> served as static content to wordpress. It would be cheaper to check the
> request if handeling by wordpress makes sense at all before wordpress is
> bootstrapped.
> 
> - URL ends on ".html" or "/"

Both of these can be used by WordPress (especially ending with a
trailing slash, which most sites use). If you don't use them in your
site, it should be fairly trivial to not send that to WP.

> - Accept-header contatins "text/html"

All pages requested from WP (with the exception of RSS/Atom feeds and
XML-RPC) will have "Accept: text/html, ...", otherwise the server would
have no idea what to send back. I think you may be misunderstanding what
this header does.

> Are there any ready-to-use recipes to serve 404 errors cheaper? For
> Nginx? :-)

Alright, so as far as I can tell, this breaks down into a few places:

Anything starting with "wp-admin/", "wp-content/" or "wp-includes/" can
be ignored, since WP rewrite rules should never touch those.

Something like this should fix that (for nginx):

	location ~* ^(/wp-includes|/wp-content|/wp-admin) {
		try_files $uri $uri/ =404;
	}

(Assuming you're not using the 404 handler for WordPress; please don't
do that.)

If there's interest in this, I'll write up a longer version with all the
rules I'd put in a site's file for nginx.

-- 
Ryan McCue
<http://ryanmccue.info/>

From mpw at taquiri.de  Tue Oct 16 13:27:31 2012
From: mpw at taquiri.de (=?ISO-8859-1?Q?=22Matthias_P=2E_W=FCrfl=22?=)
Date: Tue, 16 Oct 2012 15:27:31 +0200
Subject: [wp-hackers] cheap 404 serving
In-Reply-To: <507D428C.2050400@rotorised.com>
References: <507D3F3E.4000708@taquiri.de> <507D428C.2050400@rotorised.com>
Message-ID: <507D60C3.5040601@taquiri.de>

Hi Ryan!

I'm not sure if you're misunderstanding me or i'm misunderstanding 
you... :-)

Am 16.10.2012 13:18, schrieb Ryan McCue:
> "Matthias P. W?rfl" wrote:
>> All the rewrite-rules i can find send every request that cannot be
>> served as static content to wordpress. It would be cheaper to check the
>> request if handeling by wordpress makes sense at all before wordpress is
>> bootstrapped.
>>
>> - URL ends on ".html" or "/"
> Both of these can be used by WordPress (especially ending with a
> trailing slash, which most sites use). If you don't use them in your
> site, it should be fairly trivial to not send that to WP.

I meant conditions that show that this file should be served by 
Wordpress. These URIs ending "/" or ".html" should be served by 
Wordpress. Others (".jpg") should not be served by Wordpress even if the 
file doesn't exist.

>> - Accept-header contatins "text/html"
> All pages requested from WP (with the exception of RSS/Atom feeds and
> XML-RPC) will have "Accept: text/html, ...", otherwise the server would
> have no idea what to send back. I think you may be misunderstanding what
> this header does.

Headers don't *do*, they just *tell* what the client expects. If the 
Accept-header is "image/jpeg" i know theres no sense in sending this 
request to WP (correct me if I'm wrong).

>> Are there any ready-to-use recipes to serve 404 errors cheaper? For
>> Nginx? :-)
> Alright, so as far as I can tell, this breaks down into a few places:
>
> Anything starting with "wp-admin/", "wp-content/" or "wp-includes/" can
> be ignored, since WP rewrite rules should never touch those.
>
> Something like this should fix that (for nginx):
>
> 	location ~* ^(/wp-includes|/wp-content|/wp-admin) {
> 		try_files $uri $uri/ =404;
> 	}
>
> (Assuming you're not using the 404 handler for WordPress; please don't
> do that.)

I don't understand that. How can that catch all the requests to 
/favicon.ico, /robots.txt, /phpmyadmin and /othernonexistant.file? 
Where's php in here at all?

My current configuration is:

     location /acv/ {

         try_files $uri /acv/index.php?q=$uri;
         index index.php;

         location ~ ^/acv/(wp/wp-cron.php)/ {
             allow 127.0.0.1;
             deny all;
         }
         location ~ ^/acv/.*(\.txt|\.log|\.tpl|pkg.rev|readme.html)$ {
             deny all;
         }

         location = /acv/wp/wp-admin/ {
            rewrite $uri index.php;
         }
     }
     location ~ \.php$ {
         try_files $uri =404;
         include /etc/nginx/fastcgi_params;
     }

A request to a static file takes 20ms, a request to Wordpress takes 
400ms (if not cached). So far so good, but: a request to a non-existing 
"foo.gif" that is requested by the html produced by wordpress takes 
400ms as well. When i change the configuration to:


     location /acv/ {
         # EDIT: Standard: Do not send to wordpress
         try_files $uri =404;
         index index.php;

         [...] # untouched

         # EDIT: Added: send to WP if URL ends with "/".
         location ~/acv/.*/$ {
             try_files $uri /acv/index.php?q=$uri;
         }
     }

Then the missing "foo.gif" takes 1ms instead of 400ms. Imagine a gallery 
site where all images disappear for some reasons: the server will crash 
with the first configuration while it will stay online (and wait for 
some rsync to add the missing pictures again) and happyly serve all the 404.

So my question is: How can i send as much 404s without wordpress without 
having "false negatives".

- Matthias







From lists at rotorised.com  Tue Oct 16 13:47:01 2012
From: lists at rotorised.com (Ryan McCue)
Date: Tue, 16 Oct 2012 23:47:01 +1000
Subject: [wp-hackers] cheap 404 serving
In-Reply-To: <507D60C3.5040601@taquiri.de>
References: <507D3F3E.4000708@taquiri.de> <507D428C.2050400@rotorised.com>
	<507D60C3.5040601@taquiri.de>
Message-ID: <507D6555.90403@rotorised.com>

"Matthias P. W?rfl" wrote:
> I meant conditions that show that this file should be served by
> Wordpress. These URIs ending "/" or ".html" should be served by
> Wordpress. Others (".jpg") should not be served by Wordpress even if the
> file doesn't exist.

Ah, I appear to have read that backwards, apologies!

".jpg" could theoretically be handled by WP (I think some attachment
pages might have URLs which look like /2012/10/16/abc.jpg/ from memory),
so unless you know for sure, you can't rely on this.

> Headers don't *do*, they just *tell* what the client expects. If the
> Accept-header is "image/jpeg" i know theres no sense in sending this
> request to WP (correct me if I'm wrong).

Not always; sometimes, WordPress might want to be the one to serve up
things like this. Especially in plugins where there might be dynamic
image generation or similar. Ditto for Javascript and CSS.

> 
>>> Are there any ready-to-use recipes to serve 404 errors cheaper? For
>>> Nginx? :-)
>> Alright, so as far as I can tell, this breaks down into a few places:
>>
>> Anything starting with "wp-admin/", "wp-content/" or "wp-includes/" can
>> be ignored, since WP rewrite rules should never touch those.
>>
>> Something like this should fix that (for nginx):
>>
>>     location ~* ^(/wp-includes|/wp-content|/wp-admin) {
>>         try_files $uri $uri/ =404;
>>     }
>>
>> (Assuming you're not using the 404 handler for WordPress; please don't
>> do that.)
> 
> I don't understand that. How can that catch all the requests to
> /favicon.ico, /robots.txt, /phpmyadmin and /othernonexistant.file?
> Where's php in here at all?

So, WordPress could theoretically have a page called "/phpmyadmin/", so
you don't want to stop that from going to WP. The idea of using WP as
the default handler is that nginx doesn't know whether WP can serve a
page ahead of time, so it passes all unknown URLs in.

What that rule says is: I know that nothing which starts with
wp-includes, wp-content or wp-admin is going to be used in WordPress'
rewrite rules internally, so don't bother.

> My current configuration is:
> 
>     location /acv/ {
> 
>         try_files $uri /acv/index.php?q=$uri;

You might want to change this to check $uri/ as well if you're ever
doing directory listing.

>         location = /acv/wp/wp-admin/ {
>            rewrite $uri index.php;
>         }

Shouldn't that be handled by your `index index.php` line? If not, adding
$uri/ to your try_files should handle it.

> Then the missing "foo.gif" takes 1ms instead of 400ms. Imagine a gallery
> site where all images disappear for some reasons: the server will crash
> with the first configuration while it will stay online (and wait for
> some rsync to add the missing pictures again) and happyly serve all the
> 404.
> 
> So my question is: How can i send as much 404s without wordpress without
> having "false negatives".

As I mentioned before, you can't really know if WordPress (or a plugin)
is going to try and handle a URL before you actually ask it to. If
you're 100% in control of your server (including content, plugins, etc)
and you can guarantee that it's not going to ever have any need to touch
URLs like that, then you can just do:

	location ~* \.(gif|jpeg|jpg|png)$ {
		try_files $uri =404;
	}

That'll tell nginx to only try serving that file and then give up.

----

Another option is to make sure all your URLs are prefixed with something
(e.g. posts begin with /blog/, pages begin with /other/), then you can
just make WordPress serve up if the URL starts with those. Be /very/
careful using this though.

-- 
Ryan McCue
<http://ryanmccue.info/>

From otto at ottodestruct.com  Tue Oct 16 15:12:53 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 16 Oct 2012 10:12:53 -0500
Subject: [wp-hackers] cheap 404 serving
In-Reply-To: <507D60C3.5040601@taquiri.de>
References: <507D3F3E.4000708@taquiri.de> <507D428C.2050400@rotorised.com>
	<507D60C3.5040601@taquiri.de>
Message-ID: <CAD-FghxwonePCBkRZ1XpBH=bNGS=wVBggvE3PngMJgG4W5C43A@mail.gmail.com>

On Tue, Oct 16, 2012 at 8:27 AM, "Matthias P. W?rfl" <mpw at taquiri.de> wrote:
> I meant conditions that show that this file should be served by Wordpress.
> These URIs ending "/" or ".html" should be served by Wordpress. Others
> (".jpg") should not be served by Wordpress even if the file doesn't exist.

Many sites do, and you cannot predict that in advance. WordPress is
perfectly capable of serving content outside of text/html, and many
plugins make it do so for special cases.


> Headers don't *do*, they just *tell* what the client expects. If the
> Accept-header is "image/jpeg" i know theres no sense in sending this request
> to WP (correct me if I'm wrong).

Consider yourself corrected. I've made a plugin that does exactly this
for special circumstances
(http://wordpress.org/extend/plugins/dynamic-image-resizer/) and I've
seen plugins that do other forms of dynamic image handling and serving
from within WordPress as well.

Obviously, serving an image dynamically is not the preferred solution
for speed in all cases, but sometimes speed is not the end-all and
be-all of website management.


> I don't understand that. How can that catch all the requests to
> /favicon.ico, /robots.txt, /phpmyadmin and /othernonexistant.file? Where's
> php in here at all?

Why would it be in there?

Here's my nginx rules:

if (!-e $request_filename) {
  rewrite ^/files/(.*)$ /wp-includes/ms-files.php?file=$1 last;
  rewrite ^.*$ /index.php last;
}

That's the working set for a multisite setup. Note that in my case,
404's *are* being served by WordPress, as well as many other things,
including some images, some XML files, RSS feeds, and a load of other
stuff that doesn't fall into text/html.


> A request to a static file takes 20ms, a request to Wordpress takes 400ms
> (if not cached). So far so good, but: a request to a non-existing "foo.gif"
> that is requested by the html produced by wordpress takes 400ms as well.

If you're getting a lot of 404 errors, then I'd suggest solving the
underlying problem instead. Why are there so many invalid requests to
your site? You mention "a gallery site where all images disappear for
some reasons"... To me, that suggests "broken site" and whether the
thing crashes or not after that is irrelevant, those images should not
have disappeared, for any reason.


-Otto

From lists at alexking.org  Tue Oct 16 17:51:46 2012
From: lists at alexking.org (Alex King)
Date: Tue, 16 Oct 2012 11:51:46 -0600
Subject: [wp-hackers] cheap 404 serving
In-Reply-To: <CAD-FghxwonePCBkRZ1XpBH=bNGS=wVBggvE3PngMJgG4W5C43A@mail.gmail.com>
References: <507D3F3E.4000708@taquiri.de> <507D428C.2050400@rotorised.com>
	<507D60C3.5040601@taquiri.de>
	<CAD-FghxwonePCBkRZ1XpBH=bNGS=wVBggvE3PngMJgG4W5C43A@mail.gmail.com>
Message-ID: <4E484340-3051-4570-B453-EE8C2BCDE8AB@alexking.org>

Some may find this plugin useful:

http://wordpress.org/extend/plugins/exclude-file-type-requests/

Contributions/extensions/enhanvements are very welcome:

https://github.com/crowdfavorite/wp-exclude-file-type-requests

Cheers,
--Alex

http://alexking.org | http://crowdfavorite.com



From mike at etchsoftware.com  Wed Oct 17 15:24:56 2012
From: mike at etchsoftware.com (Mike Bijon)
Date: Wed, 17 Oct 2012 08:24:56 -0700
Subject: [wp-hackers] cheap 404 serving
In-Reply-To: <CABwjQByz4Y_mca0h2gq2ZyGC8D_eAjDBxynhMcuZX4-eCq_gwA@mail.gmail.com>
References: <CABwjQByKoGWb2Xt59UpsOsEDdvBh7FJw_dHwb811abkqb9p48Q@mail.gmail.com>
	<CABwjQByz4Y_mca0h2gq2ZyGC8D_eAjDBxynhMcuZX4-eCq_gwA@mail.gmail.com>
Message-ID: <CABwjQBzcQzHq5k_+Yp2pyDi9JsDQtKdfBUrSJRY3OXUcV8t8oA@mail.gmail.com>

Hi Matthias,
You're right about this approach working, but it falls into the
smaller-audience side of the "80/20 rule" for WordPress inclusion.
Basically a feature like this might cause more errors on shared hosting
than it solves for admins who understand why Alex's plugin exists.

If you're looking to scale at this level it might be worth reading
everything on Barry's blog, starting with,
http://barry.wordpress.com/2007/11/01/static-hostname-hashing-in-pound/.

This is relevant to your suggestion because nginx (replaced Pound years
ago) and Varnish accomplish the same thing as Alex's plugin but in a more
fault tolerant way. In short, they forward requests to hit the WordPress
lookup logic once, which allows the processes and plugins that Otto
describes to work, then cache it to avoid the slower lookup that you point
out.

...if you know your site well then Alex/Crowd Favorite's plugin could still
help speed the first request, but so could extra nginx config.

From mpw at taquiri.de  Thu Oct 18 14:08:16 2012
From: mpw at taquiri.de (=?ISO-8859-1?Q?=22Matthias_P=2E_W=FCrfl=22?=)
Date: Thu, 18 Oct 2012 16:08:16 +0200
Subject: [wp-hackers] cheap 404 serving
In-Reply-To: <CABwjQBzcQzHq5k_+Yp2pyDi9JsDQtKdfBUrSJRY3OXUcV8t8oA@mail.gmail.com>
References: <CABwjQByKoGWb2Xt59UpsOsEDdvBh7FJw_dHwb811abkqb9p48Q@mail.gmail.com>
	<CABwjQByz4Y_mca0h2gq2ZyGC8D_eAjDBxynhMcuZX4-eCq_gwA@mail.gmail.com>
	<CABwjQBzcQzHq5k_+Yp2pyDi9JsDQtKdfBUrSJRY3OXUcV8t8oA@mail.gmail.com>
Message-ID: <50800D50.9080102@taquiri.de>

Am 17.10.2012 17:24, schrieb Mike Bijon:

> If you're looking to scale at this level it might be worth reading
> everything on Barry's blog, starting with,
> http://barry.wordpress.com/2007/11/01/static-hostname-hashing-in-pound/.

My Problem is not caching of existent content. I talked about requests 
that end in a 404.

> This is relevant to your suggestion because nginx (replaced Pound years
> ago) and Varnish accomplish the same thing as Alex's plugin but in a more
> fault tolerant way.

Wordpress sends pragma:no-cache on 404. Whoever/whatever is caching this 
makes a mistake.

I had a quick look at the Sourcecode of Alex' Plugin and i think it does 
nothing for me. It just writes some Apache-Webserver-Configuration, 
which works if:

- you use Apache (bad idea imho)
- let Apache parse .htaccess-Files (bad idea imho)
- allow Wordpress to write .htaccess-File (bad idea imho)

It's nice that Wordpress is so easy to use for newbies, but that wall 
you hit when you go point-and-click sometimes sucks.

For me my problem is solved: requests to my wp_upload_dir()['basedir'] 
are not served by php/wordpress. Cacheable requests are cached. Other 
404-errors: I hope there won't be much.

- Matthias

From nicola.peluchetti at gmail.com  Thu Oct 18 20:20:59 2012
From: nicola.peluchetti at gmail.com (Nicola Peluchetti)
Date: Thu, 18 Oct 2012 22:20:59 +0200
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <CAL4EHfnU7acnQTiFF_=bO46tyqBUT_o9wb5h1V+q+=Y8+2BQBg@mail.gmail.com>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
	<53734A36-17EE-4EB2-B731-22139026C462@newclarity.net>
	<CAD-Fghz7rLjQ3QfbNqwv4cdBPJK+af8dAaKEkoEmp46rncvVjA@mail.gmail.com>
	<0EE1324F-7A19-4224-BDC8-EF8698F6E34A@newclarity.net>
	<50749C9B.30509@lobaugh.net>
	<CALri7MkLmmQjmNUgrqp9xVFvCRMF3xMgm03sJyt3hAsWeBLBpA@mail.gmail.com>
	<CAL4EHfnU7acnQTiFF_=bO46tyqBUT_o9wb5h1V+q+=Y8+2BQBg@mail.gmail.com>
Message-ID: <CAJ7gacp5fw5hDUpDo6i_Vmo86RF78bUdvbSi7D9q8j2=CgyoxQ@mail.gmail.com>

> For the very specific case of the following error:
>
> Warning: fopen(http://localhost/wp/wp-cron.php?doing_wp_cron)
> [function.fopen]: failed to open stream: HTTP request failed!
>
> One option to fix it, is to disable the faulty HTTP transport which
> isn't doing it's job on the server (usually it's caused by a bad
> configuration, but some linux distro PHP builds are known to cause it
> as well) by adding the following in a mu-plugin (or the theme
> functions.php I guess)
>
> add_filter( 'use_streams_transport', '__return_false' );
>
> It has the downside that it may stop ALL outgoing requests if the
> server doesn't support cURL and fsockopen also doesn't work - but
> usually at least one of these is available on the server..
> I usually suggest hitting the Plugin install page, if you can search
> for a plugin after adding the above, all your problems should
> hopefully disappear.. if you can't browse plugins, you'll have to
> remove the above line of code and curse at the server again..
>
>
>
This specific error happens ( if i'm not right correct me ) on every CRON
run when cUrl is disabled. This is because the class WP_Http_Streams
doesn't support a timeout of 0.01 seconds, which is what's used by the
standard CRON.
So if there is no cUrl installed all CRON jobs are destined to fail (
silently, as Wordpress silence all errors ). For this reason i wrote a note
on this trac
http://core.trac.wordpress.org/ticket/18738?cversion=0&cnum_hist=9 hoping
they put transports in the right order.
I'm a developer of a widespread plugin and i need crons to be working for
the correct behaviour of the plugin, would you see a lot of risk in
disabling streams if no cUrl is present ( cUrl is the first transport and
it works with a 0.01 timeout ).

From gcorne at bu.edu  Thu Oct 18 20:26:50 2012
From: gcorne at bu.edu (Cornelius, Gregory)
Date: Thu, 18 Oct 2012 20:26:50 +0000
Subject: [wp-hackers] Using NFS for the media library in a large MultiSite
	installation
Message-ID: <CCA5A5E6.62EA6%gcorne@bu.edu>

Fellow WP/Linux experts,

I am working on a project to redo the hosting infrastructure for our
WordPress MultiSite CMS. As part of the project, we are changing the file
system that we are using to store media library content from AFS to NFSv3.
We have around 1 TB of data.

To help the systems staff, I am trying to get a sense of how other people
handle file servers and permissions? In the existing production
environment that uses AFS as the file system backing the media library, we
have relied on the ACLs provided by the file system to give a group of
staff members access via sFTP to the media library content. And, of
course, the web servers also have RW access. We are trying to come up with
a similar solution that uses NFSv3 instead. Is anyone using POSIX Default
ACLs?

We already have a solution in place so that media requests do not go
through ms-files.php so my concerns are mostly around adding media,
moving, and copying via scripts, sFTP, and WordPress.

The application servers and files servers will be running CentOS 5 in a
VMWare environment. We are considering:

1. Creating a group wpstatic that includes the Apache user and all staff.
Set the mode for the media library directory to 2775 and set umask to 002
for both Apache and the staff users. The problem with this is that the
setgid bit can easily be stomped on.

2. Use a POSIX Default ACL that gives Apache and the staff RW access to
the media library portion of the file system.

3. Use SSH key pairs and have the staff connect to the sFTP service using
the same account as the web server runs under when working in the media
library portion of the file system.

The vast majority of the interactions will occur via Apache (through
WordPress), and there are about 25 staff members.

What do folks prefer? Are there any particular pitfalls that people have
run into with NFS that I should work to avoid?

Thanks,
Gregory

---
Gregory Cornelius
Senior Solutions Architect
Information Services & Technology
Boston University
617.358.6499


From zamoose at gmail.com  Thu Oct 18 20:51:40 2012
From: zamoose at gmail.com (Doug Stewart)
Date: Thu, 18 Oct 2012 16:51:40 -0400
Subject: [wp-hackers] Using NFS for the media library in a large
	MultiSite installation
In-Reply-To: <CCA5A5E6.62EA6%gcorne@bu.edu>
References: <CCA5A5E6.62EA6%gcorne@bu.edu>
Message-ID: <CANFh3d6e1BF7YRacZ94f-WqpG-U5LSaeq3hACV=6__7boM_Jdg@mail.gmail.com>

Gregory:
Can you flesh out the use case for interacting with the media outside
of WordPress? Is this a download-only sort of thing, or are they
contributing content via methods other than straight WP?

On Thu, Oct 18, 2012 at 4:26 PM, Cornelius, Gregory <gcorne at bu.edu> wrote:
> Fellow WP/Linux experts,
>
> I am working on a project to redo the hosting infrastructure for our
> WordPress MultiSite CMS. As part of the project, we are changing the file
> system that we are using to store media library content from AFS to NFSv3.
> We have around 1 TB of data.
>
> To help the systems staff, I am trying to get a sense of how other people
> handle file servers and permissions? In the existing production
> environment that uses AFS as the file system backing the media library, we
> have relied on the ACLs provided by the file system to give a group of
> staff members access via sFTP to the media library content. And, of
> course, the web servers also have RW access. We are trying to come up with
> a similar solution that uses NFSv3 instead. Is anyone using POSIX Default
> ACLs?
>
> We already have a solution in place so that media requests do not go
> through ms-files.php so my concerns are mostly around adding media,
> moving, and copying via scripts, sFTP, and WordPress.
>
> The application servers and files servers will be running CentOS 5 in a
> VMWare environment. We are considering:
>
> 1. Creating a group wpstatic that includes the Apache user and all staff.
> Set the mode for the media library directory to 2775 and set umask to 002
> for both Apache and the staff users. The problem with this is that the
> setgid bit can easily be stomped on.
>
> 2. Use a POSIX Default ACL that gives Apache and the staff RW access to
> the media library portion of the file system.
>
> 3. Use SSH key pairs and have the staff connect to the sFTP service using
> the same account as the web server runs under when working in the media
> library portion of the file system.
>
> The vast majority of the interactions will occur via Apache (through
> WordPress), and there are about 25 staff members.
>
> What do folks prefer? Are there any particular pitfalls that people have
> run into with NFS that I should work to avoid?
>
> Thanks,
> Gregory
>
> ---
> Gregory Cornelius
> Senior Solutions Architect
> Information Services & Technology
> Boston University
> 617.358.6499
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



-- 
-Doug

From dianakac at gmail.com  Thu Oct 18 21:07:11 2012
From: dianakac at gmail.com (Diana K. C)
Date: Thu, 18 Oct 2012 18:07:11 -0300
Subject: [wp-hackers] Event/Calendar lists - a presentation concern
Message-ID: <004c01cdad74$8c56e910$2200a8c0@TITA>

I have some dull event lists and still can't figure out how to better present it. I know there are some nice plugins but I don't need all those features, I just want present the schedules in some tidy way. 

These are annual 3 day events, and some occur at same time but in different places, within the day.Most plugins seems to consider events are one only within a day, but I have just 3 days/year with lots of simultaneous events.

Google Calendar seems fine, but I heard of some bad things about losing all data etc

Someone could show me examples on how to present this?!

From helen.y.hou at gmail.com  Thu Oct 18 21:18:17 2012
From: helen.y.hou at gmail.com (Helen Hou-Sandi)
Date: Thu, 18 Oct 2012 17:18:17 -0400
Subject: [wp-hackers] Event/Calendar lists - a presentation concern
In-Reply-To: <004c01cdad74$8c56e910$2200a8c0@TITA>
References: <004c01cdad74$8c56e910$2200a8c0@TITA>
Message-ID: <CAA0DF=88da-RPLFHAjc92m_++SEo6VwY8=7L5T98HCgVTfghHQ@mail.gmail.com>

I'm not sure this list is the best place to ask such a question - it seems
very design-oriented (the presentation of the information) and not
particularly like something many on a wp-hackers list would have involved
thoughts about. Not sure what a better venue to suggest is, though. Since
it's not even necessarily about WordPress, perhaps somewhere that is more
generally about design/presentation?

--
Helen Hou-Sandi

From wordpress at dd32.id.au  Fri Oct 19 05:45:25 2012
From: wordpress at dd32.id.au (Dion Hulse (dd32))
Date: Fri, 19 Oct 2012 16:45:25 +1100
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <CAJ7gacp5fw5hDUpDo6i_Vmo86RF78bUdvbSi7D9q8j2=CgyoxQ@mail.gmail.com>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
	<53734A36-17EE-4EB2-B731-22139026C462@newclarity.net>
	<CAD-Fghz7rLjQ3QfbNqwv4cdBPJK+af8dAaKEkoEmp46rncvVjA@mail.gmail.com>
	<0EE1324F-7A19-4224-BDC8-EF8698F6E34A@newclarity.net>
	<50749C9B.30509@lobaugh.net>
	<CALri7MkLmmQjmNUgrqp9xVFvCRMF3xMgm03sJyt3hAsWeBLBpA@mail.gmail.com>
	<CAL4EHfnU7acnQTiFF_=bO46tyqBUT_o9wb5h1V+q+=Y8+2BQBg@mail.gmail.com>
	<CAJ7gacp5fw5hDUpDo6i_Vmo86RF78bUdvbSi7D9q8j2=CgyoxQ@mail.gmail.com>
Message-ID: <CAL4EHf=6h_gRANS4Gft871Rc5JdgMA2Pfdo1X5LiC63gnv_vqQ@mail.gmail.com>

On 19 October 2012 07:20, Nicola Peluchetti <nicola.peluchetti at gmail.com> wrote:
> This specific error happens ( if i'm not right correct me ) on every CRON
> run when cUrl is disabled. This is because the class WP_Http_Streams
> doesn't support a timeout of 0.01 seconds, which is what's used by the
> standard CRON.

It''s not a bug that affects every instance of the class, It's very
specific to a version of PHP included with a linux distro (and when
curl is disabled/not installed), and also certain Mac localhost
installs - in both cases, it's due to timeouts in the DNS lookups
IIRC, which doesn't apply to most installs of PHP.
If thats the case, 0.01s or 10.00s will generally fail on the affected
hosts (Feel free to test that out for me to confirm..)

I would love for someone to step forward and actually fix the problem
instead of the options of just building a wall around the problem and
hoping it never raises it's head again.

From gcorne at bu.edu  Fri Oct 19 12:46:10 2012
From: gcorne at bu.edu (Cornelius, Gregory)
Date: Fri, 19 Oct 2012 12:46:10 +0000
Subject: [wp-hackers] Using NFS for the media library in a
	large	MultiSite installation
In-Reply-To: <CANFh3d6e1BF7YRacZ94f-WqpG-U5LSaeq3hACV=6__7boM_Jdg@mail.gmail.com>
References: <CCA5A5E6.62EA6%gcorne@bu.edu>
	<CANFh3d6e1BF7YRacZ94f-WqpG-U5LSaeq3hACV=6__7boM_Jdg@mail.gmail.com>
Message-ID: <01B48AF5-FCD6-4CB2-A54A-5060978F29EC@bu.edu>

> Can you flesh out the use case for interacting with the media outside
> of WordPress? Is this a download-only sort of thing, or are they
> contributing content via methods other than straight WP?

The staff that manage the installation, develop themes, develop plugins, etc? need to manage site-specific static files (add, modify, delete) that aren't able to be managed via the web browser. As the service has matured and continues to mature, the need to access these files via sFTP will continue to diminish, but for the time being it needs to be supported. The site-specific files need to be publicly accessible.  Some examples include:

- Updating the branding graphics. For DIY sites we have a tool that generates the various graphics, but for higher profile sites the designers prefer the anti-aliasing that Photoshop does better than ImageMagick or GD

- Updating XML flat files that are usually used for flash interactive pieces.

- Investigation of problems with media

- Scripted imports

- Other one-off solutions

Thanks for your help.

Gregory

From zamoose at gmail.com  Fri Oct 19 19:48:07 2012
From: zamoose at gmail.com (Doug Stewart)
Date: Fri, 19 Oct 2012 15:48:07 -0400
Subject: [wp-hackers] Using NFS for the media library in a large
	MultiSite installation
In-Reply-To: <01B48AF5-FCD6-4CB2-A54A-5060978F29EC@bu.edu>
References: <CCA5A5E6.62EA6%gcorne@bu.edu>
	<CANFh3d6e1BF7YRacZ94f-WqpG-U5LSaeq3hACV=6__7boM_Jdg@mail.gmail.com>
	<01B48AF5-FCD6-4CB2-A54A-5060978F29EC@bu.edu>
Message-ID: <CANFh3d5HY-9uKQ26eK42MVGa3x4cSuOAEFuak-rsOx2HcLKTVA@mail.gmail.com>

Off-the-wall suggestion: have you considered using a DVCS-backed
workflow? Have a separate revision control server using git, hg, etc.
You could simply cron a pull-update cycle and do updates at scheduled
times, or you could go the automated workflow/continuous integration
(Jenkins, etc.) route.


On Fri, Oct 19, 2012 at 8:46 AM, Cornelius, Gregory <gcorne at bu.edu> wrote:
>> Can you flesh out the use case for interacting with the media outside
>> of WordPress? Is this a download-only sort of thing, or are they
>> contributing content via methods other than straight WP?
>
> The staff that manage the installation, develop themes, develop plugins, etc? need to manage site-specific static files (add, modify, delete) that aren't able to be managed via the web browser. As the service has matured and continues to mature, the need to access these files via sFTP will continue to diminish, but for the time being it needs to be supported. The site-specific files need to be publicly accessible.  Some examples include:
>
> - Updating the branding graphics. For DIY sites we have a tool that generates the various graphics, but for higher profile sites the designers prefer the anti-aliasing that Photoshop does better than ImageMagick or GD
>
> - Updating XML flat files that are usually used for flash interactive pieces.
>
> - Investigation of problems with media
>
> - Scripted imports
>
> - Other one-off solutions
>
> Thanks for your help.
>
> Gregory
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers



-- 
-Doug

From adamlaz at gmail.com  Sun Oct 21 04:58:16 2012
From: adamlaz at gmail.com (adam)
Date: Sun, 21 Oct 2012 04:58:16 +0000 (UTC)
Subject: [wp-hackers] GSoC 2011
References: <AANLkTinHzsk6B=eYq8GBmgOjNP82b9mg_njoTsw3G8uk@mail.gmail.com>
	<AANLkTik8o-EJhjCG=ehxQvF-zmrWLpP1XASCHe-82WfU@mail.gmail.com>
Message-ID: <loom.20121021T065629-668@post.gmane.org>

Hey. This looks interesting. Did anything ever happen with this?

-A


From bryan at ibaku.net  Sun Oct 21 07:59:29 2012
From: bryan at ibaku.net (Bryan Petty)
Date: Sun, 21 Oct 2012 01:59:29 -0600
Subject: [wp-hackers] GSoC 2011
In-Reply-To: <loom.20121021T065629-668@post.gmane.org>
References: <AANLkTinHzsk6B=eYq8GBmgOjNP82b9mg_njoTsw3G8uk@mail.gmail.com>
	<AANLkTik8o-EJhjCG=ehxQvF-zmrWLpP1XASCHe-82WfU@mail.gmail.com>
	<loom.20121021T065629-668@post.gmane.org>
Message-ID: <CAKB8V+rvqvhqpAJ_jmfgRxO16URLH7XwPXCosFBn_tLscLfhvw@mail.gmail.com>

On Sat, Oct 20, 2012 at 10:58 PM, adam <adamlaz at gmail.com> wrote:
> Hey. This looks interesting. Did anything ever happen with this?

WordPress wasn't accepted into the program this year. Maybe next year.

Regards,
Bryan Petty

From nicola.peluchetti at gmail.com  Mon Oct 22 23:30:32 2012
From: nicola.peluchetti at gmail.com (Nicola Peluchetti)
Date: Tue, 23 Oct 2012 01:30:32 +0200
Subject: [wp-hackers] ALTERNATE_WP_CRON... Is it worth it?
In-Reply-To: <CAL4EHf=6h_gRANS4Gft871Rc5JdgMA2Pfdo1X5LiC63gnv_vqQ@mail.gmail.com>
References: <CALri7Mn300wvAa=F_S01OgD-Gce2+JOaTzh6pROPvL0gEyUv6A@mail.gmail.com>
	<CAD-Fghy9tbA5gki-d49O_YYUB77a+F_FXN6ACSPpZZWhk1odDw@mail.gmail.com>
	<28A14406-88AA-4B11-84F2-9AD6A2806B9B@newclarity.net>
	<CAD-Fghze_Ww6upudwZSJHU8MrAXBLQ8t93E0VytjhCRMGmQXmQ@mail.gmail.com>
	<53734A36-17EE-4EB2-B731-22139026C462@newclarity.net>
	<CAD-Fghz7rLjQ3QfbNqwv4cdBPJK+af8dAaKEkoEmp46rncvVjA@mail.gmail.com>
	<0EE1324F-7A19-4224-BDC8-EF8698F6E34A@newclarity.net>
	<50749C9B.30509@lobaugh.net>
	<CALri7MkLmmQjmNUgrqp9xVFvCRMF3xMgm03sJyt3hAsWeBLBpA@mail.gmail.com>
	<CAL4EHfnU7acnQTiFF_=bO46tyqBUT_o9wb5h1V+q+=Y8+2BQBg@mail.gmail.com>
	<CAJ7gacp5fw5hDUpDo6i_Vmo86RF78bUdvbSi7D9q8j2=CgyoxQ@mail.gmail.com>
	<CAL4EHf=6h_gRANS4Gft871Rc5JdgMA2Pfdo1X5LiC63gnv_vqQ@mail.gmail.com>
Message-ID: <CAJ7gacoa1Co08J2cFL3zO+j7y7-+pjYOhUZFeTOdw4zjajsKDQ@mail.gmail.com>

I tested it on various machine, i always get this error. the problem is in
the timout of the cron call which can't be handled by fopen() ( which is
the default transport id cUrl is disabled ). Read

http://core.trac.wordpress.org/ticket/18738<http://core.trac.wordpress.org/ticket/18738?cversion=0&cnum_hist=9>

http://core.trac.wordpress.org/ticket/8923

I experience this error even if the function call which is run by the cron
is empty. I probably will solve this by disabling the transport, as  i can
see no other way to do this, and this means that if cUrl is disabled, the
CRON will not run at all.

*Nicola Peluchetti*
Twitter: @nik_peluchetti <https://twitter.com/#!/nik_peluchetti>
Facebook: nicola.peluchetti <https://www.facebook.com/nicola.peluchetti>
Stackoverflow: Stackoverflow<http://stackoverflow.com/users/397861/nicola-peluchetti>
Mobile: +39 339 7507235



On Fri, Oct 19, 2012 at 7:45 AM, Dion Hulse (dd32) <wordpress at dd32.id.au>wrote:

> On 19 October 2012 07:20, Nicola Peluchetti <nicola.peluchetti at gmail.com>
> wrote:
> > This specific error happens ( if i'm not right correct me ) on every CRON
> > run when cUrl is disabled. This is because the class WP_Http_Streams
> > doesn't support a timeout of 0.01 seconds, which is what's used by the
> > standard CRON.
>
> It''s not a bug that affects every instance of the class, It's very
> specific to a version of PHP included with a linux distro (and when
> curl is disabled/not installed), and also certain Mac localhost
> installs - in both cases, it's due to timeouts in the DNS lookups
> IIRC, which doesn't apply to most installs of PHP.
> If thats the case, 0.01s or 10.00s will generally fail on the affected
> hosts (Feel free to test that out for me to confirm..)
>
> I would love for someone to step forward and actually fix the problem
> instead of the options of just building a wall around the problem and
> hoping it never raises it's head again.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From tcbarrett at gmail.com  Tue Oct 23 06:08:33 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Tue, 23 Oct 2012 07:08:33 +0100
Subject: [wp-hackers] Trying to add i18n
Message-ID: <CAEgmxaazN-1X6c7KSwxOZThGLDac0O+f1-iQwnABZ6pYcfFtRw@mail.gmail.com>

I'm trying to add language support to my plugin.

What I have done:

1. This is how I add my text domain.

add_action( 'init', 'tcb_wpg_localisation' );
function tcb_wpg_localisation() {
  load_plugin_textdomain( 'wp-glossary', false, plugin_dir_path(__FILE__) .
'/lang/' );
}

2. I used the wp.org 'Generate POT file' to create a .pot file - and put it
in /lang/

3. Installed http://wordpress.org/extend/plugins/codestyling-localization/ to
test and create .po and .mo files - translating 2 of the items.

4. Editing wp-config.php to change my language.

The problem:

I'm not seeing the translated text. Here are two code snippets:
1. the_content filter: $content .= '<div class="glossary-references"><h4>'
. __('Reference:', 'wp-glossary') . ' ' . $title . '</h4></div>';
2. CPT slug: 'rewrite' => array('slug' => __('glossary', 'wp-glossary')),


What have I missed?

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From otto at ottodestruct.com  Tue Oct 23 06:31:10 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 23 Oct 2012 01:31:10 -0500
Subject: [wp-hackers] Trying to add i18n
In-Reply-To: <CAEgmxaazN-1X6c7KSwxOZThGLDac0O+f1-iQwnABZ6pYcfFtRw@mail.gmail.com>
References: <CAEgmxaazN-1X6c7KSwxOZThGLDac0O+f1-iQwnABZ6pYcfFtRw@mail.gmail.com>
Message-ID: <CAD-FghyC3hj2=Fa_U9FoLrenWKG-h3uhpJoWDtU02rZdEAmyrg@mail.gmail.com>

Two things:
1. You should use the plugins_loaded hook, not "init", although init
will work fine for many cases.

2. Using plugin_dir_path(__FILE__) is probably wrong.
plugin_dir_path() gets the path to the plugin directory in an absolute
form. The third parameter to that function call is a relative path to
the plugin directory only.

If you examine the codex, it shows this method:
http://codex.wordpress.org/Function_Reference/load_plugin_textdomain

load_plugin_textdomain( 'my-plugin', false, dirname( plugin_basename(
__FILE__ ) ) );

-Otto


On Tue, Oct 23, 2012 at 1:08 AM, Tom Barrett <tcbarrett at gmail.com> wrote:
> I'm trying to add language support to my plugin.
>
> What I have done:
>
> 1. This is how I add my text domain.
>
> add_action( 'init', 'tcb_wpg_localisation' );
> function tcb_wpg_localisation() {
>   load_plugin_textdomain( 'wp-glossary', false, plugin_dir_path(__FILE__) .
> '/lang/' );
> }
>
> 2. I used the wp.org 'Generate POT file' to create a .pot file - and put it
> in /lang/
>
> 3. Installed http://wordpress.org/extend/plugins/codestyling-localization/ to
> test and create .po and .mo files - translating 2 of the items.
>
> 4. Editing wp-config.php to change my language.
>
> The problem:
>
> I'm not seeing the translated text. Here are two code snippets:
> 1. the_content filter: $content .= '<div class="glossary-references"><h4>'
> . __('Reference:', 'wp-glossary') . ' ' . $title . '</h4></div>';
> 2. CPT slug: 'rewrite' => array('slug' => __('glossary', 'wp-glossary')),
>
>
> What have I missed?
>
> --
> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> http://twitter.com/tcbarrett
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From info at a5d.org  Tue Oct 23 09:23:42 2012
From: info at a5d.org (A5D)
Date: Tue, 23 Oct 2012 10:23:42 +0100
Subject: [wp-hackers] list users by (dynamic) meta value
Message-ID: <2447E9E5-C359-41DA-B783-F4EF9E331247@a5d.org>

My head hurts.

I'm trying to work out how to list users by dynamic meta value.
The meta value can be anything.

Example:
If I am on page for directors I list the directors, If I'm on the page for actors they get listed.
I can do this by hard coding the meta value in but then I have to manually create a ton of pages - which kind of defeats the whole point.

What I have so far:
<?php
$args = array(
'role' => 'author' ,
'meta_key' => 'team',
'meta_value' => 'Director', <~ THIS NEEDS TO BE DYNAMIC
'order' => 'ASC',
'number' => 25,
);
$authors = get_users($args);
    foreach($authors as $author){
        $author_info = get_userdata($author->ID);
        ?>
        DO THE STUFF
        <?php } ?>

Meta values are added in the users profile.
I suppose i'm missing 2 bits - the dynamic meta value content and where to pull that from - page title perhaps?

I appreciate any direction/ advice/ lumps of code/ slaps for bad coding etc.

TIA

Lee

From Gavin.Pearce at 3seven9.com  Tue Oct 23 10:16:02 2012
From: Gavin.Pearce at 3seven9.com (Gavin Pearce)
Date: Tue, 23 Oct 2012 11:16:02 +0100
Subject: [wp-hackers] list users by (dynamic) meta value
In-Reply-To: <2447E9E5-C359-41DA-B783-F4EF9E331247@a5d.org>
References: <2447E9E5-C359-41DA-B783-F4EF9E331247@a5d.org>
Message-ID: <CD47955B7E065D48AB5CF226C2ED75C05990FF@tbs-sbs01.TBS.local>

Hey Lee,

Sorry - didn't follow 100%, perhaps it's me!

Just to summarise, you have the following 'pages' setup in WordPress?

Actors
Directors
Agents 
Etc

On each page, you want to list all users that have a meta value that
matches the above?

You could use the page name (essentially slug/URL), though this seems a
bit `dirty`.

Personally I'd do the following:

- Create a custom field on each *page*, called 'display-team' or
something similar (but different so as not to confuse yourself!).

- On each WP page, run the query as follows:

$args = array(
			'role' => 'author' ,
			'meta_key' => 'team',
			'meta_value' => get_post_meta(get_the_ID(),
'display-team', true), <~ THIS NEEDS TO BE DYNAMIC 'order' => 'ASC',
'number' => 25, 
		); 
		
$authors = get_users($args);

foreach($authors as $author){
	// Do stuff
}

Note: If you're outside of the main WP loop for the page, you might need
to get post ID of the page in a different way.

So in essence:
- Create custom field on page (easily done in admin area, check Screen
Options top right if you can't see it)
- Enter same key on every page - enter value as required by which team
you want to display
- Update the query to that (requiring only one page template / sidebar)
- Thank the WordPress Gods

G


-----Original Message-----
From: wp-hackers-bounces at lists.automattic.com
[mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of A5D
Sent: 23 October 2012 10:24
To: wp-hackers at lists.automattic.com
Subject: [wp-hackers] list users by (dynamic) meta value

My head hurts.

I'm trying to work out how to list users by dynamic meta value.
The meta value can be anything.

Example:
If I am on page for directors I list the directors, If I'm on the page
for actors they get listed.
I can do this by hard coding the meta value in but then I have to
manually create a ton of pages - which kind of defeats the whole point.

What I have so far:
<?php
$args = array(
'role' => 'author' ,
'meta_key' => 'team',
'meta_value' => 'Director', <~ THIS NEEDS TO BE DYNAMIC 'order' =>
'ASC', 'number' => 25, ); $authors = get_users($args);
    foreach($authors as $author){
        $author_info = get_userdata($author->ID);
        ?>
        DO THE STUFF
        <?php } ?>

Meta values are added in the users profile.
I suppose i'm missing 2 bits - the dynamic meta value content and where
to pull that from - page title perhaps?

I appreciate any direction/ advice/ lumps of code/ slaps for bad coding
etc.

TIA

Lee
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From info at a5d.org  Tue Oct 23 10:38:11 2012
From: info at a5d.org (A5D)
Date: Tue, 23 Oct 2012 11:38:11 +0100
Subject: [wp-hackers] list users by (dynamic) meta value
In-Reply-To: <CD47955B7E065D48AB5CF226C2ED75C05990FF@tbs-sbs01.TBS.local>
References: <2447E9E5-C359-41DA-B783-F4EF9E331247@a5d.org>
	<CD47955B7E065D48AB5CF226C2ED75C05990FF@tbs-sbs01.TBS.local>
Message-ID: <4811400D-83A9-4FD0-8D63-AC73687F6983@a5d.org>

Hey Gavin,

I'm presuming my cockney accent didn't come over so I'll try to explain clearer.
;)

No, I don't have a load of pages created, that's what I'm trying to avoid.
I could manually create the pages and run the query on each, individually, but then nothing will be dynamic (changes to meta_value will happen often and more pages will be required).

What I am trying to do is use one template, with a custom query, that loads a list of users based on the contents of the meta_value field.

So, I have:
Users profile with a custom meta_field:

<?php
$args = array(
'role' => 'author' ,
'meta_key' => 'team',
'meta_value' => 'CONTENTS OF THIS FIELD DICTATE THE LIST OF USERS PRESENTED',
'order' => 'ASC',
'number' => 25,
);
$authors = get_users($args);
   foreach($authors as $author){
       $author_info = get_userdata($author->ID);
       ?>
       DO THE STUFF
       <?php } ?>

If the meta_value = Directors then a list of directors is presented etc.


Lee


On 23 Oct 2012, at 11:16, Gavin Pearce wrote:

> Hey Lee,
> 
> Sorry - didn't follow 100%, perhaps it's me!
> 
> Just to summarise, you have the following 'pages' setup in WordPress?
> 
> Actors
> Directors
> Agents 
> Etc
> 
> On each page, you want to list all users that have a meta value that
> matches the above?
> 
> You could use the page name (essentially slug/URL), though this seems a
> bit `dirty`.
> 
> Personally I'd do the following:
> 
> - Create a custom field on each *page*, called 'display-team' or
> something similar (but different so as not to confuse yourself!).
> 
> - On each WP page, run the query as follows:
> 
> $args = array(
> 			'role' => 'author' ,
> 			'meta_key' => 'team',
> 			'meta_value' => get_post_meta(get_the_ID(),
> 'display-team', true), <~ THIS NEEDS TO BE DYNAMIC 'order' => 'ASC',
> 'number' => 25, 
> 		); 
> 		
> $authors = get_users($args);
> 
> foreach($authors as $author){
> 	// Do stuff
> }
> 
> Note: If you're outside of the main WP loop for the page, you might need
> to get post ID of the page in a different way.
> 
> So in essence:
> - Create custom field on page (easily done in admin area, check Screen
> Options top right if you can't see it)
> - Enter same key on every page - enter value as required by which team
> you want to display
> - Update the query to that (requiring only one page template / sidebar)
> - Thank the WordPress Gods
> 
> G
> 
> 
> -----Original Message-----
> From: wp-hackers-bounces at lists.automattic.com
> [mailto:wp-hackers-bounces at lists.automattic.com] On Behalf Of A5D
> Sent: 23 October 2012 10:24
> To: wp-hackers at lists.automattic.com
> Subject: [wp-hackers] list users by (dynamic) meta value
> 
> My head hurts.
> 
> I'm trying to work out how to list users by dynamic meta value.
> The meta value can be anything.
> 
> Example:
> If I am on page for directors I list the directors, If I'm on the page
> for actors they get listed.
> I can do this by hard coding the meta value in but then I have to
> manually create a ton of pages - which kind of defeats the whole point.
> 
> What I have so far:
> <?php
> $args = array(
> 'role' => 'author' ,
> 'meta_key' => 'team',
> 'meta_value' => 'Director', <~ THIS NEEDS TO BE DYNAMIC 'order' =>
> 'ASC', 'number' => 25, ); $authors = get_users($args);
>    foreach($authors as $author){
>        $author_info = get_userdata($author->ID);
>        ?>
>        DO THE STUFF
>        <?php } ?>
> 
> Meta values are added in the users profile.
> I suppose i'm missing 2 bits - the dynamic meta value content and where
> to pull that from - page title perhaps?
> 
> I appreciate any direction/ advice/ lumps of code/ slaps for bad coding
> etc.
> 
> TIA
> 
> Lee
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From johnbillion+wp at gmail.com  Tue Oct 23 10:44:52 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Tue, 23 Oct 2012 11:44:52 +0100
Subject: [wp-hackers] list users by (dynamic) meta value
In-Reply-To: <4811400D-83A9-4FD0-8D63-AC73687F6983@a5d.org>
References: <2447E9E5-C359-41DA-B783-F4EF9E331247@a5d.org>
	<CD47955B7E065D48AB5CF226C2ED75C05990FF@tbs-sbs01.TBS.local>
	<4811400D-83A9-4FD0-8D63-AC73687F6983@a5d.org>
Message-ID: <CAOqAKWBdGi4LL4idVJOz8ykXALjqPQzO0xU+0UbK9_ke=vb2qA@mail.gmail.com>

On 23 October 2012 11:38, A5D <info at a5d.org> wrote:
> Hey Gavin,
>
> I'm presuming my cockney accent didn't come over so I'll try to explain clearer.
> ;)
>
> No, I don't have a load of pages created, that's what I'm trying to avoid.
> I could manually create the pages and run the query on each, individually, but then nothing will be dynamic (changes to meta_value will happen often and more pages will be required).
>
> What I am trying to do is use one template, with a custom query, that loads a list of users based on the contents of the meta_value field.
>
> So, I have:
> Users profile with a custom meta_field:
>
> <?php
> $args = array(
> 'role' => 'author' ,
> 'meta_key' => 'team',
> 'meta_value' => 'CONTENTS OF THIS FIELD DICTATE THE LIST OF USERS PRESENTED',
> 'order' => 'ASC',
> 'number' => 25,
> );
> $authors = get_users($args);
>    foreach($authors as $author){
>        $author_info = get_userdata($author->ID);
>        ?>
>        DO THE STUFF
>        <?php } ?>
>
> If the meta_value = Directors then a list of directors is presented etc.

Just use a variable from the query parameter, eg.
example.com/page?show_me=directors

Then:

$args = array(
'role' => 'author' ,
'meta_key' => 'team',
'meta_value' => stripslashes( $_GET['show_me'] ),
'order' => 'ASC',
'number' => 25,
);

If you want to order the users by the value of the meta value, then
set the 'orderby' argument to 'meta_value'. Eg:

$args = array(
'role' => 'author' ,
'meta_key' => 'team',
'meta_value' => stripslashes( $_GET['show_me'] ),
'orderby' => 'meta_value',
'order' => 'ASC',
'number' => 25,
);

If you wanted to get fancier with some pretty URLs you could add a
rewrite rule using add_rewrite_rule() [1] and use the 'query_vars'
filter to give you something like example.com/page/directors, and then
use get_query_var('show_me') instead of $_GET['show_me']. Shouldn't be
too difficult.

John

[1] http://codex.wordpress.org/Rewrite_API/add_rewrite_rule

From info at a5d.org  Tue Oct 23 10:51:25 2012
From: info at a5d.org (A5D)
Date: Tue, 23 Oct 2012 11:51:25 +0100
Subject: [wp-hackers] list users by (dynamic) meta value
In-Reply-To: <CAOqAKWBdGi4LL4idVJOz8ykXALjqPQzO0xU+0UbK9_ke=vb2qA@mail.gmail.com>
References: <2447E9E5-C359-41DA-B783-F4EF9E331247@a5d.org>
	<CD47955B7E065D48AB5CF226C2ED75C05990FF@tbs-sbs01.TBS.local>
	<4811400D-83A9-4FD0-8D63-AC73687F6983@a5d.org>
	<CAOqAKWBdGi4LL4idVJOz8ykXALjqPQzO0xU+0UbK9_ke=vb2qA@mail.gmail.com>
Message-ID: <C4044C54-1256-496E-93BC-F9FC9609D75F@a5d.org>

And we have a winner!

Not too concerned about pretty URLs for now, just need it to work, which it does, perfectly.

Much appreciated John.


Lee


On 23 Oct 2012, at 11:44, John Blackbourn wrote:

> Just use a variable from the query parameter, eg.
> example.com/page?show_me=directors
> 
> 'meta_value' => stripslashes( $_GET['show_me'] ),
> 


From Gavin.Pearce at 3seven9.com  Tue Oct 23 11:18:45 2012
From: Gavin.Pearce at 3seven9.com (Gavin Pearce)
Date: Tue, 23 Oct 2012 12:18:45 +0100
Subject: [wp-hackers] list users by (dynamic) meta value
In-Reply-To: <4811400D-83A9-4FD0-8D63-AC73687F6983@a5d.org>
References: <2447E9E5-C359-41DA-B783-F4EF9E331247@a5d.org><CD47955B7E065D48AB5CF226C2ED75C05990FF@tbs-sbs01.TBS.local>
	<4811400D-83A9-4FD0-8D63-AC73687F6983@a5d.org>
Message-ID: <CD47955B7E065D48AB5CF226C2ED75C059910D@tbs-sbs01.TBS.local>


-> What I am trying to do is use one template, with a custom query, that
loads a list of users based on the contents of the meta_value field.

Ah sorry, makes more sense. I made the assumption you had separate WP
pages, but wanted only one template.

John's answer should help you perfectly then.  :)

G

From tcbarrett at gmail.com  Tue Oct 23 16:10:56 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Tue, 23 Oct 2012 17:10:56 +0100
Subject: [wp-hackers] Trying to add i18n
In-Reply-To: <CAD-FghyC3hj2=Fa_U9FoLrenWKG-h3uhpJoWDtU02rZdEAmyrg@mail.gmail.com>
References: <CAEgmxaazN-1X6c7KSwxOZThGLDac0O+f1-iQwnABZ6pYcfFtRw@mail.gmail.com>
	<CAD-FghyC3hj2=Fa_U9FoLrenWKG-h3uhpJoWDtU02rZdEAmyrg@mail.gmail.com>
Message-ID: <CAEgmxaZz7mfosJ4GTW6OHU_X7QOsAVz3fCc-=no=2FrSnw-new@mail.gmail.com>

I should RTFM. Thanks Otto. Works perfectly.

add_action( 'plugins_loaded', 'tcb_wpg_localisation' );
function tcb_wpg_localisation() {
  load_plugin_textdomain( 'wp-glossary', false, dirname( plugin_basename(
__FILE__ ) ) . '/lang/' );
}


On 23 October 2012 07:31, Otto <otto at ottodestruct.com> wrote:

> Two things:
> 1. You should use the plugins_loaded hook, not "init", although init
> will work fine for many cases.
>
> 2. Using plugin_dir_path(__FILE__) is probably wrong.
> plugin_dir_path() gets the path to the plugin directory in an absolute
> form. The third parameter to that function call is a relative path to
> the plugin directory only.
>
> If you examine the codex, it shows this method:
> http://codex.wordpress.org/Function_Reference/load_plugin_textdomain
>
> load_plugin_textdomain( 'my-plugin', false, dirname( plugin_basename(
> __FILE__ ) ) );
>
> -Otto
>
>
> On Tue, Oct 23, 2012 at 1:08 AM, Tom Barrett <tcbarrett at gmail.com> wrote:
> > I'm trying to add language support to my plugin.
> >
> > What I have done:
> >
> > 1. This is how I add my text domain.
> >
> > add_action( 'init', 'tcb_wpg_localisation' );
> > function tcb_wpg_localisation() {
> >   load_plugin_textdomain( 'wp-glossary', false,
> plugin_dir_path(__FILE__) .
> > '/lang/' );
> > }
> >
> > 2. I used the wp.org 'Generate POT file' to create a .pot file - and
> put it
> > in /lang/
> >
> > 3. Installed
> http://wordpress.org/extend/plugins/codestyling-localization/ to
> > test and create .po and .mo files - translating 2 of the items.
> >
> > 4. Editing wp-config.php to change my language.
> >
> > The problem:
> >
> > I'm not seeing the translated text. Here are two code snippets:
> > 1. the_content filter: $content .= '<div
> class="glossary-references"><h4>'
> > . __('Reference:', 'wp-glossary') . ' ' . $title . '</h4></div>';
> > 2. CPT slug: 'rewrite' => array('slug' => __('glossary', 'wp-glossary')),
> >
> >
> > What have I missed?
> >
> > --
> > http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> > http://twitter.com/tcbarrett
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From dmitry at getmoxied.net  Wed Oct 24 13:28:13 2012
From: dmitry at getmoxied.net (Dmitry Tokmakov)
Date: Wed, 24 Oct 2012 06:28:13 -0700
Subject: [wp-hackers] 404 page on single page (in all browsers except
	firefox)
Message-ID: <CAF099D4-69AB-4070-8BFB-8A47F2FACF12@getmoxied.net>

Hi All.

I'm having a 404 when viewing single post. Getting that error at all browsers except firefox (this is strange).
I'm running NGINX server configuration.

I wonder if someone familiar with issue like that.

Thank you in advance! 

Dmitry
Moxie Media Group

From nicola.peluchetti at gmail.com  Thu Oct 25 11:50:28 2012
From: nicola.peluchetti at gmail.com (Nicola Peluchetti)
Date: Thu, 25 Oct 2012 13:50:28 +0200
Subject: [wp-hackers] Cron
In-Reply-To: <CAOqAKWBLtX-uocogQrgmJ7QSiKC2esNoTR_JgZnxWtw+7ssP+Q@mail.gmail.com>
References: <28AD5B53-6577-4C93-AF82-27334EA1C095@getmoxied.net>
	<000c01cd9e68$019e9590$04dbc0b0$@lod.com>
	<CAJnHr4jDwRkGB2EwRAtmo3vNbqgj+7HJe14CHsEyJYN8niyVmA@mail.gmail.com>
	<CAGbA+abqJLMwn0jqJrJPYNaX=0ETCFw1J27YKOHsZMQy8WcJBQ@mail.gmail.com>
	<CAOqAKWBLtX-uocogQrgmJ7QSiKC2esNoTR_JgZnxWtw+7ssP+Q@mail.gmail.com>
Message-ID: <CAJ7gacqYtsnekhhqNrq-J8x37h_JedP0X1OXiEmpD8-dJKQj+Q@mail.gmail.com>

If you don't have cUrl installed it's likely your CRON isn't working as the
second transport in order ( fopen ) usually fails.

*Nicola Peluchetti*
Twitter: @nik_peluchetti <https://twitter.com/#!/nik_peluchetti>
Facebook: nicola.peluchetti <https://www.facebook.com/nicola.peluchetti>
Stackoverflow: Stackoverflow<http://stackoverflow.com/users/397861/nicola-peluchetti>
Mobile: +39 339 7507235



On Sat, Sep 29, 2012 at 9:36 PM, John Blackbourn
<johnbillion+wp at gmail.com>wrote:

> On 29 September 2012 20:14, William Satterwhite <whsatterwhite at gmail.com>
> wrote:
> > You could also try Scott Clark's "Crony" for managing cron jobs within
> > WordPress.
> >
> > http://wordpress.org/extend/plugins/crony/
>
> There's also Crontrol, which will tell you if WP-Cron on your site
> isn't working: http://wordpress.org/extend/plugins/wp-crontrol/
>
> John
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From david at wordshell.net  Thu Oct 25 12:09:57 2012
From: david at wordshell.net (David Anderson)
Date: Thu, 25 Oct 2012 15:09:57 +0300
Subject: [wp-hackers] 404 page on single page (in all browsers
	except	firefox)
In-Reply-To: <mailman.9.1351166402.4559.wp-hackers@lists.automattic.com>
References: <mailman.9.1351166402.4559.wp-hackers@lists.automattic.com>
Message-ID: <50892C15.7040105@wordshell.net>


On 25/10/12 15:00, wp-hackers-request at lists.automattic.com wrote:
>     1. 404 page on single page (in all browsers except	firefox)
>        (Dmitry Tokmakov)
> I'm having a 404 when viewing single post. Getting that error at all browsers except firefox (this is strange).
Disable your plugins and re-enable one-by-one and you might get it. I 
had this (though in all browsers) caused by a plugin that was 
incompatible with PHP 5.3 (Advanced Category Excluder).

David

>
>
> -- 
> WordShell - WordPress fast from the CLI - www.wordshell.net

From david at wordshell.net  Fri Oct 26 10:36:41 2012
From: david at wordshell.net (David Anderson)
Date: Fri, 26 Oct 2012 13:36:41 +0300
Subject: [wp-hackers] Implications of failure to change 'unique' keys and
	salts
Message-ID: <508A67B9.4030102@wordshell.net>

I've been handed a hacked site to investigate. Unfortunately the client 
deleted the hacked version and had no logs, so I'm just looking for 
probable cause rather than doing forensics on the hacked site.

The client had not changed any of the 'Authentication Unique Keys and 
Salts' in wp-config.php

I read 
http://codeseekah.com/2012/04/09/why-wordpress-authentication-unique-keys-and-salts-are-important/, 
and that seems to say that if the keys/salts are known, then you can 
forge an authentication cookie at will - you don't need any 
man-in-the-middle access to observe any existing session to do so. Can 
anyone confirm if that is right?

If that is right, then it seems to me that WordPress should refuse to 
run if the 'default' entry for any key is still "put your unique phrase 
here". I did an audit of my web hosting customers, and found two others 
who had this too. So across the Internet there must be tens of thousands 
at least. But is it right?

Thanks,
David

-- 
WordShell - WordPress fast from the CLI - www.wordshell.net


From chris at lod.com  Fri Oct 26 12:14:12 2012
From: chris at lod.com (chris)
Date: Fri, 26 Oct 2012 08:14:12 -0400
Subject: [wp-hackers] the_content for shortcode and custom field
Message-ID: <000501cdb373$68ef8130$3ace8390$@lod.com>

Im using a plugin that doesn't use the traditional shortcode, so I cant run
do_shortcode on the custom field.

Uses something like $pattern="/\[s3mediastream\]([^\/]*)\[\/s3\]/"; on
the_content.

Anyway I can use the shortcode in a custom field and run a filter on the
field so it applies the non traditional shortcode?




From abdussamad at abdussamad.com  Fri Oct 26 15:30:33 2012
From: abdussamad at abdussamad.com (Abdussamad Abdurrazzaq)
Date: Fri, 26 Oct 2012 20:30:33 +0500
Subject: [wp-hackers] Implications of failure to change 'unique' keys
 and salts
In-Reply-To: <508A67B9.4030102@wordshell.net>
References: <508A67B9.4030102@wordshell.net>
Message-ID: <508AAC99.9030203@abdussamad.com>

According to the site you linked to you can brute force login if you try 
continuously for a week. So not exactly "at will".

On 10/26/2012 03:36 PM, David Anderson wrote:
> I've been handed a hacked site to investigate. Unfortunately the 
> client deleted the hacked version and had no logs, so I'm just looking 
> for probable cause rather than doing forensics on the hacked site.
>
> The client had not changed any of the 'Authentication Unique Keys and 
> Salts' in wp-config.php
>
> I read 
> http://codeseekah.com/2012/04/09/why-wordpress-authentication-unique-keys-and-salts-are-important/, 
> and that seems to say that if the keys/salts are known, then you can 
> forge an authentication cookie at will - you don't need any 
> man-in-the-middle access to observe any existing session to do so. Can 
> anyone confirm if that is right?
>
> If that is right, then it seems to me that WordPress should refuse to 
> run if the 'default' entry for any key is still "put your unique 
> phrase here". I did an audit of my web hosting customers, and found 
> two others who had this too. So across the Internet there must be tens 
> of thousands at least. But is it right?
>
> Thanks,
> David
>



From Gavin.Pearce at 3seven9.com  Fri Oct 26 15:34:57 2012
From: Gavin.Pearce at 3seven9.com (Gavin Pearce)
Date: Fri, 26 Oct 2012 16:34:57 +0100
Subject: [wp-hackers] Implications of failure to change 'unique' keys
	and salts
In-Reply-To: <508AAC99.9030203@abdussamad.com>
References: <508A67B9.4030102@wordshell.net> <508AAC99.9030203@abdussamad.com>
Message-ID: <CD47955B7E065D48AB5CF226C2ED75C0599205@tbs-sbs01.TBS.local>

> According to the site you linked to you can brute force login if you
try continuously for a week. So not exactly "at will".

Just to clarify on that specific point: The '1 week' figure was based on
30 requests a second. Would be relatively trivial for someone with a
little more computing `bandwidth` to increase this figure to a more
substantial rate. 

G

From abdussamad at abdussamad.com  Fri Oct 26 15:38:31 2012
From: abdussamad at abdussamad.com (Abdussamad Abdurrazzaq)
Date: Fri, 26 Oct 2012 20:38:31 +0500
Subject: [wp-hackers] Implications of failure to change 'unique' keys
 and salts
In-Reply-To: <CD47955B7E065D48AB5CF226C2ED75C0599205@tbs-sbs01.TBS.local>
References: <508A67B9.4030102@wordshell.net> <508AAC99.9030203@abdussamad.com>
	<CD47955B7E065D48AB5CF226C2ED75C0599205@tbs-sbs01.TBS.local>
Message-ID: <508AAE77.9080401@abdussamad.com>

The target web server would also have to respond equally fast for that 
to work.

On 10/26/2012 08:34 PM, Gavin Pearce wrote:
>> According to the site you linked to you can brute force login if you
> try continuously for a week. So not exactly "at will".
>
> Just to clarify on that specific point: The '1 week' figure was based on
> 30 requests a second. Would be relatively trivial for someone with a
> little more computing `bandwidth` to increase this figure to a more
> substantial rate.
>
> G
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>



From andrew.bartel at gmail.com  Fri Oct 26 18:14:47 2012
From: andrew.bartel at gmail.com (Andrew Bartel)
Date: Fri, 26 Oct 2012 11:14:47 -0700
Subject: [wp-hackers] Change the who in wp_dropdown_users
Message-ID: <CAJnHr4jHYrTuviXtB84iJ2VhmAUcBMT0Ppmnv11igDyEwb+xhA@mail.gmail.com>

Hi guys,

I'm trying to add a user to the authors dropdown in the posts quick edit
area when logged in as an editor (so you normally see only
editors/authors).  Using the filter 'wp_dropdown_users' I'm trying to
rewrite the dropdown for that screen only.  I've got it working using a
$_SERVER['request_uri'] check, but that seems like it's definitely not best
practices.  What should I be doing to check that it is the posts landing
page?  Or am I going about this the wrong way?

Thanks,

Andrew

From dwain.maralack at gmail.com  Fri Oct 26 18:53:38 2012
From: dwain.maralack at gmail.com (Dwain Maralack)
Date: Fri, 26 Oct 2012 20:53:38 +0200
Subject: [wp-hackers] the_content for shortcode and custom field
In-Reply-To: <000501cdb373$68ef8130$3ace8390$@lod.com>
References: <000501cdb373$68ef8130$3ace8390$@lod.com>
Message-ID: <5019995601938039685@unknownmsgid>

Hi Chris

You'll need to extract each post's custom fields and run your code  against
it.

See the link bellow for info on how to get the values:

http://codex.wordpress.org/Function_Reference/get_post_custom_values

You'll have to use the exact code the plugin uses to check if the short
code is in the custom field value by using a regular expresion.

$pattern="/\[s3mediastream\]([^\/]*)\[\/s3\]/";


The alternative would be to update the plugin function.

Regards
Dwain

On 26 Oct 2012, at 2:14 PM, chris <chris at lod.com> wrote:

Im using a plugin that doesn't use the traditional shortcode, so I cant run
do_shortcode on the custom field.

Uses something like $pattern="/\[s3mediastream\]([^\/]*)\[\/s3\]/"; on
the_content.

Anyway I can use the shortcode in a custom field and run a filter on the
field so it applies the non traditional shortcode?



_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From kwight at kwight.ca  Sat Oct 27 20:05:18 2012
From: kwight at kwight.ca (Kirk Wight)
Date: Sat, 27 Oct 2012 16:05:18 -0400
Subject: [wp-hackers] pluggable functions
Message-ID: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>

Does anyone know the reasoning behind Core moving way from the use of
pluggable functions (the only remaining ones are all deprecated)?

In particular, I'm curious about pluggable functions that are on hooks, as
I'm starting to see more and more themes in the repo that make everything
in functions.php pluggable, whether on a hook or not. Just wondering if
there's any risk or downside.

From andrew.bartel at gmail.com  Sat Oct 27 20:20:02 2012
From: andrew.bartel at gmail.com (Andrew Bartel)
Date: Sat, 27 Oct 2012 13:20:02 -0700
Subject: [wp-hackers] pluggable functions
In-Reply-To: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
Message-ID: <CAJnHr4j5=f1Qhyu0Gg8NEFL+J7YUnTH8PPtsH4W7p5CL5L338Q@mail.gmail.com>

So that two plugins don't both try to override a function and conflict, for
example, wp_mail().

-Andrew


On Sat, Oct 27, 2012 at 1:05 PM, Kirk Wight <kwight at kwight.ca> wrote:

> Does anyone know the reasoning behind Core moving way from the use of
> pluggable functions (the only remaining ones are all deprecated)?
>
> In particular, I'm curious about pluggable functions that are on hooks, as
> I'm starting to see more and more themes in the repo that make everything
> in functions.php pluggable, whether on a hook or not. Just wondering if
> there's any risk or downside.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From kwight at kwight.ca  Sat Oct 27 20:56:10 2012
From: kwight at kwight.ca (Kirk Wight)
Date: Sat, 27 Oct 2012 16:56:10 -0400
Subject: [wp-hackers] pluggable functions
In-Reply-To: <CAJnHr4j5=f1Qhyu0Gg8NEFL+J7YUnTH8PPtsH4W7p5CL5L338Q@mail.gmail.com>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
	<CAJnHr4j5=f1Qhyu0Gg8NEFL+J7YUnTH8PPtsH4W7p5CL5L338Q@mail.gmail.com>
Message-ID: <CAFQFuXMdW=BVGvPKET2fT5-mdfQmYGCX6bq-NMBmrfNnMPnueA@mail.gmail.com>

Ah, so hooks are considered preferable because they can use priorities?

(BTW, I mentioned earlier that all pluggable functions are deprecated. So
not true.)

On 27 October 2012 16:20, Andrew Bartel <andrew.bartel at gmail.com> wrote:

> So that two plugins don't both try to override a function and conflict, for
> example, wp_mail().
>
> -Andrew
>
>
> On Sat, Oct 27, 2012 at 1:05 PM, Kirk Wight <kwight at kwight.ca> wrote:
>
> > Does anyone know the reasoning behind Core moving way from the use of
> > pluggable functions (the only remaining ones are all deprecated)?
> >
> > In particular, I'm curious about pluggable functions that are on hooks,
> as
> > I'm starting to see more and more themes in the repo that make everything
> > in functions.php pluggable, whether on a hook or not. Just wondering if
> > there's any risk or downside.
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> >
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From pbaylies at gmail.com  Sat Oct 27 20:57:43 2012
From: pbaylies at gmail.com (peter baylies)
Date: Sat, 27 Oct 2012 16:57:43 -0400
Subject: [wp-hackers] pluggable functions
In-Reply-To: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
Message-ID: <CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>

This doesn't necessarily apply as much to core or to themes, but I find
pluggable functions to be very useful in plugin development, where you
might have a situation where your plugin gets forked, or different versions
or variants of the same plugin might end up getting installed on a site --
at the least, using pluggable functions means that this doesn't end up
breaking everything as soon as there's a naming conflict.

Cheers,

 -- Peter Baylies
Semper Fi Web Design


On Sat, Oct 27, 2012 at 4:05 PM, Kirk Wight <kwight at kwight.ca> wrote:

> Does anyone know the reasoning behind Core moving way from the use of
> pluggable functions (the only remaining ones are all deprecated)?
>
> In particular, I'm curious about pluggable functions that are on hooks, as
> I'm starting to see more and more themes in the repo that make everything
> in functions.php pluggable, whether on a hook or not. Just wondering if
> there's any risk or downside.
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mike at newclarity.net  Sat Oct 27 21:05:42 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sat, 27 Oct 2012 17:05:42 -0400
Subject: [wp-hackers] pluggable functions
In-Reply-To: <CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
	<CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>
Message-ID: <2F2317AC-60D5-4F29-8D32-C94DEF7AF5B4@newclarity.net>

On Oct 27, 2012, at 4:57 PM, peter baylies <pbaylies at gmail.com> wrote:
> This doesn't necessarily apply as much to core or to themes, but I find
> pluggable functions to be very useful in plugin development, where you
> might have a situation where your plugin gets forked, or different versions
> or variants of the same plugin might end up getting installed on a site --
> at the least, using pluggable functions means that this doesn't end up
> breaking everything as soon as there's a naming conflict.

Any chance you could provide a concrete example of what you are describing?  I'm having a hard time envisioning this. 

Thanks in advance.

-Mike

From pbaylies at semperfiwebdesign.com  Sat Oct 27 21:48:34 2012
From: pbaylies at semperfiwebdesign.com (peter baylies)
Date: Sat, 27 Oct 2012 17:48:34 -0400
Subject: [wp-hackers] pluggable functions
In-Reply-To: <2F2317AC-60D5-4F29-8D32-C94DEF7AF5B4@newclarity.net>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
	<CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>
	<2F2317AC-60D5-4F29-8D32-C94DEF7AF5B4@newclarity.net>
Message-ID: <CAKkHmjXyyci11YipfKfutnYEdPLKrC22To=iNpkLqYSBfivQMA@mail.gmail.com>

Mike,

Say you have a free and a pro version of the same plugin, and they share a
lot of code; and then someone upgrades to the pro version from the free
version, without first deactivating the free version. Or, similar scenario;
say someone else forks your plugin without changing all the function names
/ prefixes, and someone tries to install both your plugin and the forked
plugin.

Cheers,

 -- Peter

On Sat, Oct 27, 2012 at 5:05 PM, Mike Schinkel <mike at newclarity.net> wrote:

> On Oct 27, 2012, at 4:57 PM, peter baylies <pbaylies at gmail.com> wrote:
> > This doesn't necessarily apply as much to core or to themes, but I find
> > pluggable functions to be very useful in plugin development, where you
> > might have a situation where your plugin gets forked, or different
> versions
> > or variants of the same plugin might end up getting installed on a site
> --
> > at the least, using pluggable functions means that this doesn't end up
> > breaking everything as soon as there's a naming conflict.
>
> Any chance you could provide a concrete example of what you are
> describing?  I'm having a hard time envisioning this.
>
> Thanks in advance.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mike at newclarity.net  Sat Oct 27 22:13:19 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sat, 27 Oct 2012 18:13:19 -0400
Subject: [wp-hackers] pluggable functions
In-Reply-To: <CAKkHmjXyyci11YipfKfutnYEdPLKrC22To=iNpkLqYSBfivQMA@mail.gmail.com>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
	<CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>
	<2F2317AC-60D5-4F29-8D32-C94DEF7AF5B4@newclarity.net>
	<CAKkHmjXyyci11YipfKfutnYEdPLKrC22To=iNpkLqYSBfivQMA@mail.gmail.com>
Message-ID: <04EF3F5D-781D-454A-BE54-566F180A549C@newclarity.net>

Hi Peter,

Thanks for answering.

On Oct 27, 2012, at 5:48 PM, peter baylies <pbaylies at semperfiwebdesign.com> wrote:
> Say you have a free and a pro version of the same plugin, and they share a
> lot of code; and then someone upgrades to the pro version from the free
> version, without first deactivating the free version.

So are you just defining a "pluggable" here as  a different named file of functions and/or classes that you can swap out for your require()?

> say someone else forks your plugin without changing all the function names
> / prefixes, and someone tries to install both your plugin and the forked
> plugin.

Still not seeing this unless you are saying the pluggable loads one or the other but not both. I guess I need code example to fully understand.

-Mike


From ryan.frankel at gmail.com  Sun Oct 28 05:25:29 2012
From: ryan.frankel at gmail.com (Ryan Frankel)
Date: Sun, 28 Oct 2012 01:25:29 -0400
Subject: [wp-hackers] Fetch Feed
Message-ID: <CAOwP8kx=-Db5pniAbOn9WO+uHoJkXwWCozDFu3=DCdkdB1i6nA@mail.gmail.com>

I have a quick question about fetch_feed();

1. If I use fetch_feed() multiple times on a page does it cache the results
separately?  I assume it does.
2. Since fetch_feed caches the results is there any way to tell if an
'item' is new? For example, something like...

`
foreach ( $rss_items as $item ) {
  if( $item->is_new() )
    echo "I'm new!";
}
`

I understand that this probably isn't the case due to how SimplePie
functions.  Also, I know I could store the IDs (or whatever) in a file,
cache, or cookie but I figured I would check.  If it isn't the case I would
be interested in anyone's ideas on usable simple solutions for this.

PS: This isn't something critical or something that needs to scale.  It
just has to be maintainable in that I never have to maintain it =).  All
that is at stake here is a weekend project.

-- 
----------------------------------------
Ryan S. Frankel

From lists at lobaugh.net  Mon Oct 29 00:24:25 2012
From: lists at lobaugh.net (Ben Lobaugh)
Date: Sun, 28 Oct 2012 17:24:25 -0700
Subject: [wp-hackers] pluggable functions
In-Reply-To: <04EF3F5D-781D-454A-BE54-566F180A549C@newclarity.net>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
	<CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>
	<2F2317AC-60D5-4F29-8D32-C94DEF7AF5B4@newclarity.net>
	<CAKkHmjXyyci11YipfKfutnYEdPLKrC22To=iNpkLqYSBfivQMA@mail.gmail.com>
	<04EF3F5D-781D-454A-BE54-566F180A549C@newclarity.net>
Message-ID: <508DCCB9.9060202@lobaugh.net>

Peter,

I am with Mike here. I do not understand your reasoning. The main issue 
behind pluggable functions is that they can only be redefined once. You 
say you could have a free/pro version, that is in itself not even a good 
example. You could have a plugin order load conflict. If free loads 
before pro then that function will take precedence over the pro version.

Or back to the wp_mail() example, I have a couple plugins I use for 
clients that overload wp_mail(), however I cannot have all of those 
plugins running at the same time. Only one wp_mail() can run at a time, 
so the other plugins miss out and only the plugin that loaded first gets 
to control wp_mail().

That is the reasoning behind using hooks instead of pluggable functions. 
They just do not make sense in a plugin based architecture.

As far as the themes you are seeing making things "pluggable" this is 
not truly the case I think. If you look closer what you will probably 
notice is that all the themes by that author use the same function 
names. They are more likely trying to prevent fatal errors from blowing 
up the site if somehow the code from another theme gets fired off.

Cheers,
Ben

On 10/27/12 3:13 PM, Mike Schinkel wrote:
> Hi Peter,
>
> Thanks for answering.
>
> On Oct 27, 2012, at 5:48 PM, peter baylies <pbaylies at semperfiwebdesign.com> wrote:
>> Say you have a free and a pro version of the same plugin, and they share a
>> lot of code; and then someone upgrades to the pro version from the free
>> version, without first deactivating the free version.
> So are you just defining a "pluggable" here as  a different named file of functions and/or classes that you can swap out for your require()?
>
>> say someone else forks your plugin without changing all the function names
>> / prefixes, and someone tries to install both your plugin and the forked
>> plugin.
> Still not seeing this unless you are saying the pluggable loads one or the other but not both. I guess I need code example to fully understand.
>
> -Mike
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mike at newclarity.net  Mon Oct 29 01:27:48 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sun, 28 Oct 2012 21:27:48 -0400
Subject: [wp-hackers] pluggable functions
In-Reply-To: <508DCCB9.9060202@lobaugh.net>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
	<CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>
	<2F2317AC-60D5-4F29-8D32-C94DEF7AF5B4@newclarity.net>
	<CAKkHmjXyyci11YipfKfutnYEdPLKrC22To=iNpkLqYSBfivQMA@mail.gmail.com>
	<04EF3F5D-781D-454A-BE54-566F180A549C@newclarity.net>
	<508DCCB9.9060202@lobaugh.net>
Message-ID: <2E189F37-8B7F-4D8B-A59D-1956C848ACD3@newclarity.net>

Hi Ben,

On Oct 28, 2012, at 8:24 PM, Ben Lobaugh <lists at lobaugh.net> wrote:
> I am with Mike here. I do not understand your reasoning. The main issue behind pluggable functions is that they can only be redefined once. You say you could have a free/pro version, that is in itself not even a good example. You could have a plugin order load conflict. If free loads before pro then that function will take precedence over the pro version.
> 
> Or back to the wp_mail() example, I have a couple plugins I use for clients that overload wp_mail(), however I cannot have all of those plugins running at the same time. Only one wp_mail() can run at a time, so the other plugins miss out and only the plugin that loaded first gets to control wp_mail().

Veering slightly off-topic, your comments address something I'm struggling with right now.  I see a way to resolve the issues I'm having but it would require WordPress to embrace a new concept in core and knowing how hard it is to get new concepts considered I haven't proposed it on trac. But in a nutshell I think WordPress needs to support the concept of "code libraries" and it needs a library loader.

In the past people have been presented plugins as the solution for when you need shared code, but plugins don't work for this because they exist in user-space and there is an entire series of issues that derive from that.  For plugins to be viable we'd need dependency management of plugins for plugins and themes, auto-downloading and activation for plugins, and the ability to hide plugins from users. Most (all?) of those topics have come up in the past but each time they've died on the vine, probably for very good reasons.

OTOH there's still a need. We need the ability in a plugin or a theme to say:

 "I need library named "ABCD" and I need at least version X.Y.Z. I have a copy in my source and here is the filepath and here is the version number of the library I have, but don't load mine if another plugin is using the library, load their newer version instead."

Additionally we also need to be able to say:

"I need library named "EFGH" and I need exactly version X.Y.Z. I have a copy in my source and here is the filepath of the library I have, but if some other plugin needs a different incompatible version let me know so that I can tell the user I cannot load."

One issue this could partially address is the issue with themes defining custom post types.  If we had this a theme could include a library that defines the custom post type that theme vendors are more apt to available said libraries available on GitHub. Then if someone changes themes they could use a new theme that also uses the same library, add the library support on their own, and/or use a general purpose plugin to load that library for them. 

This could also encourage the community to build and share libraries of higher-level APIs that are not ready or appropriate for core but for which cannot be successfully adopted if packaged as a plugin (plugins that only add an API have just not proven successful; look at how few plugins there are that require other API-only plugins, especially across multiple developers.)

It would take very little added code to WordPress core to support this, but a lot of others would have to agree we need this including core team members to get into core.  Any takers on this idea?  I'll be happy to write up on trac if there's interest from anyone on the core team.

-Mike

From pbaylies at semperfiwebdesign.com  Mon Oct 29 02:03:47 2012
From: pbaylies at semperfiwebdesign.com (peter baylies)
Date: Sun, 28 Oct 2012 22:03:47 -0400
Subject: [wp-hackers] pluggable functions
In-Reply-To: <2E189F37-8B7F-4D8B-A59D-1956C848ACD3@newclarity.net>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
	<CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>
	<2F2317AC-60D5-4F29-8D32-C94DEF7AF5B4@newclarity.net>
	<CAKkHmjXyyci11YipfKfutnYEdPLKrC22To=iNpkLqYSBfivQMA@mail.gmail.com>
	<04EF3F5D-781D-454A-BE54-566F180A549C@newclarity.net>
	<508DCCB9.9060202@lobaugh.net>
	<2E189F37-8B7F-4D8B-A59D-1956C848ACD3@newclarity.net>
Message-ID: <CAKkHmjUphoMwyqwrpxuRj-ZqtA9t2_0zThoBVHoDktmqq=EqNg@mail.gmail.com>

Hi Ben and Mike,

Ben, one basic point I'm making here is that in the case of a plugin order
load conflict, a pluggable function will fail gracefully, whereas a
non-pluggable function will crash and burn. And conflicts can be detected,
and the user can be warned by a nicely formatted warning in a box instead
of by a white screen and/or a PHP error.

Mike, it's pretty easy to do version checking, of plugins or otherwise. As
far as just the logic of it, wp_enqueue_script() handles this pretty well
for Javascript / includes for the client, versions and dependencies. For
themes, add_theme_support() works well for managing specific named
features. What kind of support would you want here for plugins? Maybe a way
to designate in the plugin headers that a plugin implements some feature,
and a way for other plugins to say that they depend on or provide some
level of support for that feature?

Cheers,

 -- Peter

On Sun, Oct 28, 2012 at 9:27 PM, Mike Schinkel <mike at newclarity.net> wrote:

> Hi Ben,
>
> On Oct 28, 2012, at 8:24 PM, Ben Lobaugh <lists at lobaugh.net> wrote:
> > I am with Mike here. I do not understand your reasoning. The main issue
> behind pluggable functions is that they can only be redefined once. You say
> you could have a free/pro version, that is in itself not even a good
> example. You could have a plugin order load conflict. If free loads before
> pro then that function will take precedence over the pro version.
> >
> > Or back to the wp_mail() example, I have a couple plugins I use for
> clients that overload wp_mail(), however I cannot have all of those plugins
> running at the same time. Only one wp_mail() can run at a time, so the
> other plugins miss out and only the plugin that loaded first gets to
> control wp_mail().
>
> Veering slightly off-topic, your comments address something I'm struggling
> with right now.  I see a way to resolve the issues I'm having but it would
> require WordPress to embrace a new concept in core and knowing how hard it
> is to get new concepts considered I haven't proposed it on trac. But in a
> nutshell I think WordPress needs to support the concept of "code libraries"
> and it needs a library loader.
>
> In the past people have been presented plugins as the solution for when
> you need shared code, but plugins don't work for this because they exist in
> user-space and there is an entire series of issues that derive from that.
>  For plugins to be viable we'd need dependency management of plugins for
> plugins and themes, auto-downloading and activation for plugins, and the
> ability to hide plugins from users. Most (all?) of those topics have come
> up in the past but each time they've died on the vine, probably for very
> good reasons.
>
> OTOH there's still a need. We need the ability in a plugin or a theme to
> say:
>
>  "I need library named "ABCD" and I need at least version X.Y.Z. I have a
> copy in my source and here is the filepath and here is the version number
> of the library I have, but don't load mine if another plugin is using the
> library, load their newer version instead."
>
> Additionally we also need to be able to say:
>
> "I need library named "EFGH" and I need exactly version X.Y.Z. I have a
> copy in my source and here is the filepath of the library I have, but if
> some other plugin needs a different incompatible version let me know so
> that I can tell the user I cannot load."
>
> One issue this could partially address is the issue with themes defining
> custom post types.  If we had this a theme could include a library that
> defines the custom post type that theme vendors are more apt to available
> said libraries available on GitHub. Then if someone changes themes they
> could use a new theme that also uses the same library, add the library
> support on their own, and/or use a general purpose plugin to load that
> library for them.
>
> This could also encourage the community to build and share libraries of
> higher-level APIs that are not ready or appropriate for core but for which
> cannot be successfully adopted if packaged as a plugin (plugins that only
> add an API have just not proven successful; look at how few plugins there
> are that require other API-only plugins, especially across multiple
> developers.)
>
> It would take very little added code to WordPress core to support this,
> but a lot of others would have to agree we need this including core team
> members to get into core.  Any takers on this idea?  I'll be happy to write
> up on trac if there's interest from anyone on the core team.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From mike at newclarity.net  Mon Oct 29 02:35:45 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sun, 28 Oct 2012 22:35:45 -0400
Subject: [wp-hackers] pluggable functions
In-Reply-To: <CAKkHmjUphoMwyqwrpxuRj-ZqtA9t2_0zThoBVHoDktmqq=EqNg@mail.gmail.com>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
	<CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>
	<2F2317AC-60D5-4F29-8D32-C94DEF7AF5B4@newclarity.net>
	<CAKkHmjXyyci11YipfKfutnYEdPLKrC22To=iNpkLqYSBfivQMA@mail.gmail.com>
	<04EF3F5D-781D-454A-BE54-566F180A549C@newclarity.net>
	<508DCCB9.9060202@lobaugh.net>
	<2E189F37-8B7F-4D8B-A59D-1956C848ACD3@newclarity.net>
	<CAKkHmjUphoMwyqwrpxuRj-ZqtA9t2_0zThoBVHoDktmqq=EqNg@mail.gmail.com>
Message-ID: <82AEB76B-91D6-4F64-92BD-8D622A5E821F@newclarity.net>

On Oct 28, 2012, at 10:03 PM, peter baylies <pbaylies at semperfiwebdesign.com> wrote:
> Mike, it's pretty easy to do version checking, of plugins or otherwise.

I'm not talking about libraries only used by one plugin/theme developer, I'm talking about PHP libraries (explicitly not plugins) that are designed to be shared by other plugins and themes, and even PHP libraries that are not specific to WordPress.  

For example, let's say I want to use one of the PHP libraries from GitHub[1] in my plugin.  How can I be sure that I can include it compatibly with other plugins?  There is currently no standard best practice for this so there is no way multiple developers can safely include it without potentially conflicting with other plugins that load it. The upshot is that few plugins or themes can readily build on shared code developed and maintained by others besides code that is shipped with core.

> As far as just the logic of it, wp_enqueue_script() handles this pretty well
> for Javascript / includes for the client, versions and dependencies.

wp_enqueue_script() is for files linked externally via HTTP. That's orthogonal to the loading of PHP libraries.

> For themes, add_theme_support() works well for managing specific named
> features.

add_theme_support() doesn't provide any method to negotiate multiple versions of the same external library. Yes, if only one developer includes includes their own libraries across multiple themes and/or plugins they developer they can manage it, but no developer can know how other arbitrary developers are managing the inclusion of the same library so there is no way for them to do it in a "best practices" compatible way.

> What kind of support would you want here for plugins?

Not sure how to explain it differently than repeating these two scenarios:


We need the ability in a plugin or a theme to say:

"I need library named "ABCD" and I need at least version X.Y.Z. I have a
copy in my source and here is the filepath and here is the version number
of the library I have, but don't load mine if another plugin is using the
library, load their newer version instead."

Additionally we also need to be able to say:

"I need library named "EFGH" and I need exactly version X.Y.Z. I have a
copy in my source and here is the filepath of the library I have, but if
some other plugin needs a different incompatible version let me know so
that I can tell the user I cannot load."


> Maybe a way to designate in the plugin headers that a plugin implements
> some feature, and a way for other plugins to say that they depend on or
> provide some level of support for that feature?

That's going back to the idea that plugins are a solution which, based on experience in the community I doubt they can be. Adding in the mechanisms that plugins would require has been suggested numerous times on this list and on trac in the past and too many people were against them for a variety of reasons. 

Besides plugins are very heavy what was is really just the need to ensure a potentially shared PHP library located in more than one plugin is not require()d more than once, and that the latest version is loaded and/or that a conflict can be gracefully identified.

-Mike

[1] https://github.com/languages/PHP

> For themes, add_theme_support() works well for managing specific named
> features. What kind of support would you want here for plugins? Maybe a way
> to designate in the plugin headers that a plugin implements some feature,
> and a way for other plugins to say that they depend on or provide some
> level of support for that feature?
> 
> Cheers,
> 
> -- Peter
> 
> On Sun, Oct 28, 2012 at 9:27 PM, Mike Schinkel <mike at newclarity.net> wrote:
> 
>> Hi Ben,
>> 
>> On Oct 28, 2012, at 8:24 PM, Ben Lobaugh <lists at lobaugh.net> wrote:
>>> I am with Mike here. I do not understand your reasoning. The main issue
>> behind pluggable functions is that they can only be redefined once. You say
>> you could have a free/pro version, that is in itself not even a good
>> example. You could have a plugin order load conflict. If free loads before
>> pro then that function will take precedence over the pro version.
>>> 
>>> Or back to the wp_mail() example, I have a couple plugins I use for
>> clients that overload wp_mail(), however I cannot have all of those plugins
>> running at the same time. Only one wp_mail() can run at a time, so the
>> other plugins miss out and only the plugin that loaded first gets to
>> control wp_mail().
>> 
>> Veering slightly off-topic, your comments address something I'm struggling
>> with right now.  I see a way to resolve the issues I'm having but it would
>> require WordPress to embrace a new concept in core and knowing how hard it
>> is to get new concepts considered I haven't proposed it on trac. But in a
>> nutshell I think WordPress needs to support the concept of "code libraries"
>> and it needs a library loader.
>> 
>> In the past people have been presented plugins as the solution for when
>> you need shared code, but plugins don't work for this because they exist in
>> user-space and there is an entire series of issues that derive from that.
>> For plugins to be viable we'd need dependency management of plugins for
>> plugins and themes, auto-downloading and activation for plugins, and the
>> ability to hide plugins from users. Most (all?) of those topics have come
>> up in the past but each time they've died on the vine, probably for very
>> good reasons.
>> 
>> OTOH there's still a need. We need the ability in a plugin or a theme to
>> say:
>> 
>> "I need library named "ABCD" and I need at least version X.Y.Z. I have a
>> copy in my source and here is the filepath and here is the version number
>> of the library I have, but don't load mine if another plugin is using the
>> library, load their newer version instead."
>> 
>> Additionally we also need to be able to say:
>> 
>> "I need library named "EFGH" and I need exactly version X.Y.Z. I have a
>> copy in my source and here is the filepath of the library I have, but if
>> some other plugin needs a different incompatible version let me know so
>> that I can tell the user I cannot load."
>> 
>> One issue this could partially address is the issue with themes defining
>> custom post types.  If we had this a theme could include a library that
>> defines the custom post type that theme vendors are more apt to available
>> said libraries available on GitHub. Then if someone changes themes they
>> could use a new theme that also uses the same library, add the library
>> support on their own, and/or use a general purpose plugin to load that
>> library for them.
>> 
>> This could also encourage the community to build and share libraries of
>> higher-level APIs that are not ready or appropriate for core but for which
>> cannot be successfully adopted if packaged as a plugin (plugins that only
>> add an API have just not proven successful; look at how few plugins there
>> are that require other API-only plugins, especially across multiple
>> developers.)
>> 
>> It would take very little added code to WordPress core to support this,
>> but a lot of others would have to agree we need this including core team
>> members to get into core.  Any takers on this idea?  I'll be happy to write
>> up on trac if there's interest from anyone on the core team.
>> 
>> -Mike
>> _______________________________________________
>> wp-hackers mailing list
>> wp-hackers at lists.automattic.com
>> http://lists.automattic.com/mailman/listinfo/wp-hackers
>> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From elrabino at gmail.com  Mon Oct 29 03:04:04 2012
From: elrabino at gmail.com (Daniel Dvorkin)
Date: Mon, 29 Oct 2012 00:04:04 -0300
Subject: [wp-hackers] pluggable functions
In-Reply-To: <82AEB76B-91D6-4F64-92BD-8D622A5E821F@newclarity.net>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
	<CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>
	<2F2317AC-60D5-4F29-8D32-C94DEF7AF5B4@newclarity.net>
	<CAKkHmjXyyci11YipfKfutnYEdPLKrC22To=iNpkLqYSBfivQMA@mail.gmail.com>
	<04EF3F5D-781D-454A-BE54-566F180A549C@newclarity.net>
	<508DCCB9.9060202@lobaugh.net>
	<2E189F37-8B7F-4D8B-A59D-1956C848ACD3@newclarity.net>
	<CAKkHmjUphoMwyqwrpxuRj-ZqtA9t2_0zThoBVHoDktmqq=EqNg@mail.gmail.com>
	<82AEB76B-91D6-4F64-92BD-8D622A5E821F@newclarity.net>
Message-ID: <CADN2qFMQ1Mg_mqmwrmc7oSq7N-8z9-_yQv9xE6NJ0a0W1phU-Q@mail.gmail.com>

I've been wondering about this for a while. WP_Dependencies (the class
extended by WP_Scripts and WP_Styles) seems well suited to handle some sort
of library load in the same way we can register, unregister
and prioritise scripts and styles.



---------------------
Daniel Dvorkin
M?vil: +54 (0261) 15-315-2244
Skype: mzaweb
http://mzaweb.com




On Sun, Oct 28, 2012 at 11:35 PM, Mike Schinkel <mike at newclarity.net> wrote:

> On Oct 28, 2012, at 10:03 PM, peter baylies <
> pbaylies at semperfiwebdesign.com> wrote:
> > Mike, it's pretty easy to do version checking, of plugins or otherwise.
>
> I'm not talking about libraries only used by one plugin/theme developer,
> I'm talking about PHP libraries (explicitly not plugins) that are designed
> to be shared by other plugins and themes, and even PHP libraries that are
> not specific to WordPress.
>
> For example, let's say I want to use one of the PHP libraries from
> GitHub[1] in my plugin.  How can I be sure that I can include it compatibly
> with other plugins?  There is currently no standard best practice for this
> so there is no way multiple developers can safely include it without
> potentially conflicting with other plugins that load it. The upshot is that
> few plugins or themes can readily build on shared code developed and
> maintained by others besides code that is shipped with core.
>
> > As far as just the logic of it, wp_enqueue_script() handles this pretty
> well
> > for Javascript / includes for the client, versions and dependencies.
>
> wp_enqueue_script() is for files linked externally via HTTP. That's
> orthogonal to the loading of PHP libraries.
>
> > For themes, add_theme_support() works well for managing specific named
> > features.
>
> add_theme_support() doesn't provide any method to negotiate multiple
> versions of the same external library. Yes, if only one developer includes
> includes their own libraries across multiple themes and/or plugins they
> developer they can manage it, but no developer can know how other arbitrary
> developers are managing the inclusion of the same library so there is no
> way for them to do it in a "best practices" compatible way.
>
> > What kind of support would you want here for plugins?
>
> Not sure how to explain it differently than repeating these two scenarios:
>
>
> We need the ability in a plugin or a theme to say:
>
> "I need library named "ABCD" and I need at least version X.Y.Z. I have a
> copy in my source and here is the filepath and here is the version number
> of the library I have, but don't load mine if another plugin is using the
> library, load their newer version instead."
>
> Additionally we also need to be able to say:
>
> "I need library named "EFGH" and I need exactly version X.Y.Z. I have a
> copy in my source and here is the filepath of the library I have, but if
> some other plugin needs a different incompatible version let me know so
> that I can tell the user I cannot load."
>
>
> > Maybe a way to designate in the plugin headers that a plugin implements
> > some feature, and a way for other plugins to say that they depend on or
> > provide some level of support for that feature?
>
> That's going back to the idea that plugins are a solution which, based on
> experience in the community I doubt they can be. Adding in the mechanisms
> that plugins would require has been suggested numerous times on this list
> and on trac in the past and too many people were against them for a variety
> of reasons.
>
> Besides plugins are very heavy what was is really just the need to ensure
> a potentially shared PHP library located in more than one plugin is not
> require()d more than once, and that the latest version is loaded and/or
> that a conflict can be gracefully identified.
>
> -Mike
>
> [1] https://github.com/languages/PHP
>
> > For themes, add_theme_support() works well for managing specific named
> > features. What kind of support would you want here for plugins? Maybe a
> way
> > to designate in the plugin headers that a plugin implements some feature,
> > and a way for other plugins to say that they depend on or provide some
> > level of support for that feature?
> >
> > Cheers,
> >
> > -- Peter
> >
> > On Sun, Oct 28, 2012 at 9:27 PM, Mike Schinkel <mike at newclarity.net>
> wrote:
> >
> >> Hi Ben,
> >>
> >> On Oct 28, 2012, at 8:24 PM, Ben Lobaugh <lists at lobaugh.net> wrote:
> >>> I am with Mike here. I do not understand your reasoning. The main issue
> >> behind pluggable functions is that they can only be redefined once. You
> say
> >> you could have a free/pro version, that is in itself not even a good
> >> example. You could have a plugin order load conflict. If free loads
> before
> >> pro then that function will take precedence over the pro version.
> >>>
> >>> Or back to the wp_mail() example, I have a couple plugins I use for
> >> clients that overload wp_mail(), however I cannot have all of those
> plugins
> >> running at the same time. Only one wp_mail() can run at a time, so the
> >> other plugins miss out and only the plugin that loaded first gets to
> >> control wp_mail().
> >>
> >> Veering slightly off-topic, your comments address something I'm
> struggling
> >> with right now.  I see a way to resolve the issues I'm having but it
> would
> >> require WordPress to embrace a new concept in core and knowing how hard
> it
> >> is to get new concepts considered I haven't proposed it on trac. But in
> a
> >> nutshell I think WordPress needs to support the concept of "code
> libraries"
> >> and it needs a library loader.
> >>
> >> In the past people have been presented plugins as the solution for when
> >> you need shared code, but plugins don't work for this because they
> exist in
> >> user-space and there is an entire series of issues that derive from
> that.
> >> For plugins to be viable we'd need dependency management of plugins for
> >> plugins and themes, auto-downloading and activation for plugins, and the
> >> ability to hide plugins from users. Most (all?) of those topics have
> come
> >> up in the past but each time they've died on the vine, probably for very
> >> good reasons.
> >>
> >> OTOH there's still a need. We need the ability in a plugin or a theme to
> >> say:
> >>
> >> "I need library named "ABCD" and I need at least version X.Y.Z. I have a
> >> copy in my source and here is the filepath and here is the version
> number
> >> of the library I have, but don't load mine if another plugin is using
> the
> >> library, load their newer version instead."
> >>
> >> Additionally we also need to be able to say:
> >>
> >> "I need library named "EFGH" and I need exactly version X.Y.Z. I have a
> >> copy in my source and here is the filepath of the library I have, but if
> >> some other plugin needs a different incompatible version let me know so
> >> that I can tell the user I cannot load."
> >>
> >> One issue this could partially address is the issue with themes defining
> >> custom post types.  If we had this a theme could include a library that
> >> defines the custom post type that theme vendors are more apt to
> available
> >> said libraries available on GitHub. Then if someone changes themes they
> >> could use a new theme that also uses the same library, add the library
> >> support on their own, and/or use a general purpose plugin to load that
> >> library for them.
> >>
> >> This could also encourage the community to build and share libraries of
> >> higher-level APIs that are not ready or appropriate for core but for
> which
> >> cannot be successfully adopted if packaged as a plugin (plugins that
> only
> >> add an API have just not proven successful; look at how few plugins
> there
> >> are that require other API-only plugins, especially across multiple
> >> developers.)
> >>
> >> It would take very little added code to WordPress core to support this,
> >> but a lot of others would have to agree we need this including core team
> >> members to get into core.  Any takers on this idea?  I'll be happy to
> write
> >> up on trac if there's interest from anyone on the core team.
> >>
> >> -Mike
> >> _______________________________________________
> >> wp-hackers mailing list
> >> wp-hackers at lists.automattic.com
> >> http://lists.automattic.com/mailman/listinfo/wp-hackers
> >>
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From lists at rotorised.com  Mon Oct 29 03:06:11 2012
From: lists at rotorised.com (Ryan McCue)
Date: Sun, 28 Oct 2012 23:06:11 -0400
Subject: [wp-hackers] Fetch Feed
In-Reply-To: <CAOwP8kx=-Db5pniAbOn9WO+uHoJkXwWCozDFu3=DCdkdB1i6nA@mail.gmail.com>
References: <CAOwP8kx=-Db5pniAbOn9WO+uHoJkXwWCozDFu3=DCdkdB1i6nA@mail.gmail.com>
Message-ID: <508DF2A3.6040005@rotorised.com>

Ryan Frankel wrote:
> 1. If I use fetch_feed() multiple times on a page does it cache the results
> separately?  I assume it does.

It caches it based (mainly) on the URL, so if the URL of the feed is 
different, then they will be cached separately; if they're the same feed 
loaded twice, it should load it from the cache. If possible, avoid doing 
this, because it means that SimplePie has to be run twice to parse the 
data (the data is cached at a low-level, only a step or two higher than 
the raw XML).
> 2. Since fetch_feed caches the results is there any way to tell if an
> 'item' is new? For example, something like...
>
There's a tutorial on how to do this natively with SimplePie: 
http://simplepie.org/wiki/tutorial/how_to_display_previous_feed_items_like_google_reader

Your best bet is to adjust that tutorial and adapt it to WordPress using 
options instead.

-- 
Ryan McCue
<http://ryanmccue.info/>


From ryan.frankel at gmail.com  Mon Oct 29 03:15:47 2012
From: ryan.frankel at gmail.com (Ryan Frankel)
Date: Sun, 28 Oct 2012 23:15:47 -0400
Subject: [wp-hackers] Fetch Feed
In-Reply-To: <508DF2A3.6040005@rotorised.com>
References: <CAOwP8kx=-Db5pniAbOn9WO+uHoJkXwWCozDFu3=DCdkdB1i6nA@mail.gmail.com>
	<508DF2A3.6040005@rotorised.com>
Message-ID: <572E0BFC-E21F-456D-89CB-F1E86ABACFDE@gmail.com>

1. Thanks for the info.
2. Good point.

Ryan

On Oct 28, 2012, at 11:06 PM, Ryan McCue wrote:

> Ryan Frankel wrote:
>> 1. If I use fetch_feed() multiple times on a page does it cache the results
>> separately?  I assume it does.
> 
> It caches it based (mainly) on the URL, so if the URL of the feed is different, then they will be cached separately; if they're the same feed loaded twice, it should load it from the cache. If possible, avoid doing this, because it means that SimplePie has to be run twice to parse the data (the data is cached at a low-level, only a step or two higher than the raw XML).
>> 2. Since fetch_feed caches the results is there any way to tell if an
>> 'item' is new? For example, something like...
>> 
> There's a tutorial on how to do this natively with SimplePie: http://simplepie.org/wiki/tutorial/how_to_display_previous_feed_items_like_google_reader
> 
> Your best bet is to adjust that tutorial and adapt it to WordPress using options instead.
> 
> -- 
> Ryan McCue
> <http://ryanmccue.info/>
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mike at newclarity.net  Mon Oct 29 03:21:36 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Sun, 28 Oct 2012 23:21:36 -0400
Subject: [wp-hackers] pluggable functions
In-Reply-To: <CADN2qFMQ1Mg_mqmwrmc7oSq7N-8z9-_yQv9xE6NJ0a0W1phU-Q@mail.gmail.com>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
	<CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>
	<2F2317AC-60D5-4F29-8D32-C94DEF7AF5B4@newclarity.net>
	<CAKkHmjXyyci11YipfKfutnYEdPLKrC22To=iNpkLqYSBfivQMA@mail.gmail.com>
	<04EF3F5D-781D-454A-BE54-566F180A549C@newclarity.net>
	<508DCCB9.9060202@lobaugh.net>
	<2E189F37-8B7F-4D8B-A59D-1956C848ACD3@newclarity.net>
	<CAKkHmjUphoMwyqwrpxuRj-ZqtA9t2_0zThoBVHoDktmqq=EqNg@mail.gmail.com>
	<82AEB76B-91D6-4F64-92BD-8D622A5E821F@newclarity.net>
	<CADN2qFMQ1Mg_mqmwrmc7oSq7N-8z9-_yQv9xE6NJ0a0W1phU-Q@mail.gmail.com>
Message-ID: <51B39795-1FDE-412E-8718-44F8C861CD1C@newclarity.net>

On Oct 28, 2012, at 11:04 PM, Daniel Dvorkin <elrabino at gmail.com> wrote:
> I've been wondering about this for a while. WP_Dependencies (the class
> extended by WP_Scripts and WP_Styles) seems well suited to handle some sort
> of library load in the same way we can register, unregister
> and prioritise scripts and styles.

Yes, it does look like WP_Dependencies would be a good base for dependency management.  That is, however, a large scope and I'd fear a larger scope would be beyond consideration.  

WP_Dependencies helps manage the tree of dependencies; the smaller scoped need would be to collect up a list of latest needed libraries and load the latest one of each or fire an action to notify a plugin that its library load request can't be fulfilled so it can notify the admin user and avoid using the library.

-Mike

From lists at lobaugh.net  Mon Oct 29 05:17:51 2012
From: lists at lobaugh.net (Ben Lobaugh)
Date: Sun, 28 Oct 2012 22:17:51 -0700
Subject: [wp-hackers] auto-loading plugin deps ( prev: pluggable
 functions )
In-Reply-To: <51B39795-1FDE-412E-8718-44F8C861CD1C@newclarity.net>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
	<CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>
	<2F2317AC-60D5-4F29-8D32-C94DEF7AF5B4@newclarity.net>
	<CAKkHmjXyyci11YipfKfutnYEdPLKrC22To=iNpkLqYSBfivQMA@mail.gmail.com>
	<04EF3F5D-781D-454A-BE54-566F180A549C@newclarity.net>
	<508DCCB9.9060202@lobaugh.net>
	<2E189F37-8B7F-4D8B-A59D-1956C848ACD3@newclarity.net>
	<CAKkHmjUphoMwyqwrpxuRj-ZqtA9t2_0zThoBVHoDktmqq=EqNg@mail.gmail.com>
	<82AEB76B-91D6-4F64-92BD-8D622A5E821F@newclarity.net>
	<CADN2qFMQ1Mg_mqmwrmc7oSq7N-8z9-_yQv9xE6NJ0a0W1phU-Q@mail.gmail.com>
	<51B39795-1FDE-412E-8718-44F8C861CD1C@newclarity.net>
Message-ID: <508E117F.9010706@lobaugh.net>

Hey Mike,

I think it would be great to see something similar to the enqueue 
scripts that you can pass required dependencies to, probably the slug of 
the plugin from the repo. If it does not exist then WP will disable the 
plugin and/or prompt you to install the dependency to enable the plugin.

I have written a few library plugins as well and I can sympathize with 
the dependency management and load order of plugins. It is tricky with 
the current way WP works, but I do not think it would be too difficult 
to add something of that sort to the system. Check and see if anything 
like that exists on Trac, if not would you be interested in exploring a 
solution to patch core to do that with me?

Cheers,
Ben

On 10/28/12 8:21 PM, Mike Schinkel wrote:
> On Oct 28, 2012, at 11:04 PM, Daniel Dvorkin <elrabino at gmail.com> wrote:
>> I've been wondering about this for a while. WP_Dependencies (the class
>> extended by WP_Scripts and WP_Styles) seems well suited to handle some sort
>> of library load in the same way we can register, unregister
>> and prioritise scripts and styles.
> Yes, it does look like WP_Dependencies would be a good base for dependency management.  That is, however, a large scope and I'd fear a larger scope would be beyond consideration.
>
> WP_Dependencies helps manage the tree of dependencies; the smaller scoped need would be to collect up a list of latest needed libraries and load the latest one of each or fire an action to notify a plugin that its library load request can't be fulfilled so it can notify the admin user and avoid using the library.
>
> -Mike
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From mike at newclarity.net  Mon Oct 29 06:38:30 2012
From: mike at newclarity.net (Mike Schinkel)
Date: Mon, 29 Oct 2012 02:38:30 -0400
Subject: [wp-hackers] auto-loading plugin deps ( prev: pluggable
	functions )
In-Reply-To: <508E117F.9010706@lobaugh.net>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
	<CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>
	<2F2317AC-60D5-4F29-8D32-C94DEF7AF5B4@newclarity.net>
	<CAKkHmjXyyci11YipfKfutnYEdPLKrC22To=iNpkLqYSBfivQMA@mail.gmail.com>
	<04EF3F5D-781D-454A-BE54-566F180A549C@newclarity.net>
	<508DCCB9.9060202@lobaugh.net>
	<2E189F37-8B7F-4D8B-A59D-1956C848ACD3@newclarity.net>
	<CAKkHmjUphoMwyqwrpxuRj-ZqtA9t2_0zThoBVHoDktmqq=EqNg@mail.gmail.com>
	<82AEB76B-91D6-4F64-92BD-8D622A5E821F@newclarity.net>
	<CADN2qFMQ1Mg_mqmwrmc7oSq7N-8z9-_yQv9xE6NJ0a0W1phU-Q@mail.gmail.com>
	<51B39795-1FDE-412E-8718-44F8C861CD1C@newclarity.net>
	<508E117F.9010706@lobaugh.net>
Message-ID: <413E4C91-4720-4CD8-8F47-C78862E17E89@newclarity.net>

Hi Ben,

Thanks for the follow up.

On Oct 29, 2012, at 1:17 AM, Ben Lobaugh <lists at lobaugh.net> wrote:
> I think it would be great to see something similar to the enqueue scripts that you can pass required dependencies to, probably the slug of the plugin from the repo. If it does not exist then WP will disable the plugin and/or prompt you to install the dependency to enable the plugin.
> 
> I have written a few library plugins as well and I can sympathize with the dependency management and load order of plugins. It is tricky with the current way WP works, but I do not think it would be too difficult to add something of that sort to the system. 


For clarity I was explicitly proposing simple PHP libraries and not wanting to open the can of worms that would be plugin dependency management.  After considering the problem for a long time I think the reason this has not gotten addressed yet for plugins is that plugins are for users not for developers. Developers need something lower level, i.e. ability to just safely "require()" a PHP library.  

There's really no need for tree-based dependency management and no need for all the complexity or overhead of making sure plugins are auto-downloaded, safely activated and then loaded in the correct order.  All that's needed is the ability to signal to WordPress that we need a bit of PHP code that someone else developed, named and versioned and that please WordPress only require() one of them.

> Check and see if anything like that exists on Trac,

My memory is that there's been several discussions about parts of this on trac or here on wp-hackers over the years.  I'm not particularly good at finding them though so I'll leave that to others to find.

> if not would you be interested in exploring a solution to patch core to do that with me?

I was proposing to offer a strawman patch if anyone of the core team would be open to considering it.  Otherwise it would rather be a waste of effort, I think.

-Mike


From jihan735 at hotmail.com  Mon Oct 29 12:59:06 2012
From: jihan735 at hotmail.com (jihan amrani)
Date: Mon, 29 Oct 2012 12:59:06 +0000
Subject: [wp-hackers] wp-hackers Digest, Vol 93, Issue 36
In-Reply-To: <mailman.9.1351512001.16041.wp-hackers@lists.automattic.com>
References: <mailman.9.1351512001.16041.wp-hackers@lists.automattic.com>
Message-ID: <BAY002-W166340D02E762D1782E3FD79A630@phx.gbl>

hello dear can you fix me back my password for this email
ama_zone at hotmail.fr
thanks a lot

> From: wp-hackers-request at lists.automattic.com
> Subject: wp-hackers Digest, Vol 93, Issue 36
> To: wp-hackers at lists.automattic.com
> Date: Mon, 29 Oct 2012 12:00:01 +0000
> 
> Send wp-hackers mailing list submissions to
> 	wp-hackers at lists.automattic.com
> 
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://lists.automattic.com/mailman/listinfo/wp-hackers
> or, via email, send a message with subject or body 'help' to
> 	wp-hackers-request at lists.automattic.com
> 
> You can reach the person managing the list at
> 	wp-hackers-owner at lists.automattic.com
> 
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of wp-hackers digest..."
> 
> 
> Today's Topics:
> 
>    1. Re: Fetch Feed (Ryan McCue)
>    2. Re: Fetch Feed (Ryan Frankel)
>    3. Re: pluggable functions (Mike Schinkel)
>    4. Re: auto-loading plugin deps ( prev: pluggable functions )
>       (Ben Lobaugh)
>    5. Re: auto-loading plugin deps ( prev: pluggable	functions )
>       (Mike Schinkel)
> 
> 
> ----------------------------------------------------------------------
> 
> Message: 1
> Date: Sun, 28 Oct 2012 23:06:11 -0400
> From: Ryan McCue <lists at rotorised.com>
> Subject: Re: [wp-hackers] Fetch Feed
> To: wp-hackers at lists.automattic.com
> Message-ID: <508DF2A3.6040005 at rotorised.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> 
> Ryan Frankel wrote:
> > 1. If I use fetch_feed() multiple times on a page does it cache the results
> > separately?  I assume it does.
> 
> It caches it based (mainly) on the URL, so if the URL of the feed is 
> different, then they will be cached separately; if they're the same feed 
> loaded twice, it should load it from the cache. If possible, avoid doing 
> this, because it means that SimplePie has to be run twice to parse the 
> data (the data is cached at a low-level, only a step or two higher than 
> the raw XML).
> > 2. Since fetch_feed caches the results is there any way to tell if an
> > 'item' is new? For example, something like...
> >
> There's a tutorial on how to do this natively with SimplePie: 
> http://simplepie.org/wiki/tutorial/how_to_display_previous_feed_items_like_google_reader
> 
> Your best bet is to adjust that tutorial and adapt it to WordPress using 
> options instead.
> 
> -- 
> Ryan McCue
> <http://ryanmccue.info/>
> 
> 
> 
> ------------------------------
> 
> Message: 2
> Date: Sun, 28 Oct 2012 23:15:47 -0400
> From: Ryan Frankel <ryan.frankel at gmail.com>
> Subject: Re: [wp-hackers] Fetch Feed
> To: wp-hackers at lists.automattic.com
> Message-ID: <572E0BFC-E21F-456D-89CB-F1E86ABACFDE at gmail.com>
> Content-Type: text/plain; charset=us-ascii
> 
> 1. Thanks for the info.
> 2. Good point.
> 
> Ryan
> 
> On Oct 28, 2012, at 11:06 PM, Ryan McCue wrote:
> 
> > Ryan Frankel wrote:
> >> 1. If I use fetch_feed() multiple times on a page does it cache the results
> >> separately?  I assume it does.
> > 
> > It caches it based (mainly) on the URL, so if the URL of the feed is different, then they will be cached separately; if they're the same feed loaded twice, it should load it from the cache. If possible, avoid doing this, because it means that SimplePie has to be run twice to parse the data (the data is cached at a low-level, only a step or two higher than the raw XML).
> >> 2. Since fetch_feed caches the results is there any way to tell if an
> >> 'item' is new? For example, something like...
> >> 
> > There's a tutorial on how to do this natively with SimplePie: http://simplepie.org/wiki/tutorial/how_to_display_previous_feed_items_like_google_reader
> > 
> > Your best bet is to adjust that tutorial and adapt it to WordPress using options instead.
> > 
> > -- 
> > Ryan McCue
> > <http://ryanmccue.info/>
> > 
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 
> 
> ------------------------------
> 
> Message: 3
> Date: Sun, 28 Oct 2012 23:21:36 -0400
> From: Mike Schinkel <mike at newclarity.net>
> Subject: Re: [wp-hackers] pluggable functions
> To: wp-hackers at lists.automattic.com
> Message-ID: <51B39795-1FDE-412E-8718-44F8C861CD1C at newclarity.net>
> Content-Type: text/plain;	charset=iso-8859-1
> 
> On Oct 28, 2012, at 11:04 PM, Daniel Dvorkin <elrabino at gmail.com> wrote:
> > I've been wondering about this for a while. WP_Dependencies (the class
> > extended by WP_Scripts and WP_Styles) seems well suited to handle some sort
> > of library load in the same way we can register, unregister
> > and prioritise scripts and styles.
> 
> Yes, it does look like WP_Dependencies would be a good base for dependency management.  That is, however, a large scope and I'd fear a larger scope would be beyond consideration.  
> 
> WP_Dependencies helps manage the tree of dependencies; the smaller scoped need would be to collect up a list of latest needed libraries and load the latest one of each or fire an action to notify a plugin that its library load request can't be fulfilled so it can notify the admin user and avoid using the library.
> 
> -Mike
> 
> ------------------------------
> 
> Message: 4
> Date: Sun, 28 Oct 2012 22:17:51 -0700
> From: Ben Lobaugh <lists at lobaugh.net>
> Subject: Re: [wp-hackers] auto-loading plugin deps ( prev: pluggable
> 	functions )
> To: wp-hackers at lists.automattic.com
> Message-ID: <508E117F.9010706 at lobaugh.net>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> 
> Hey Mike,
> 
> I think it would be great to see something similar to the enqueue 
> scripts that you can pass required dependencies to, probably the slug of 
> the plugin from the repo. If it does not exist then WP will disable the 
> plugin and/or prompt you to install the dependency to enable the plugin.
> 
> I have written a few library plugins as well and I can sympathize with 
> the dependency management and load order of plugins. It is tricky with 
> the current way WP works, but I do not think it would be too difficult 
> to add something of that sort to the system. Check and see if anything 
> like that exists on Trac, if not would you be interested in exploring a 
> solution to patch core to do that with me?
> 
> Cheers,
> Ben
> 
> On 10/28/12 8:21 PM, Mike Schinkel wrote:
> > On Oct 28, 2012, at 11:04 PM, Daniel Dvorkin <elrabino at gmail.com> wrote:
> >> I've been wondering about this for a while. WP_Dependencies (the class
> >> extended by WP_Scripts and WP_Styles) seems well suited to handle some sort
> >> of library load in the same way we can register, unregister
> >> and prioritise scripts and styles.
> > Yes, it does look like WP_Dependencies would be a good base for dependency management.  That is, however, a large scope and I'd fear a larger scope would be beyond consideration.
> >
> > WP_Dependencies helps manage the tree of dependencies; the smaller scoped need would be to collect up a list of latest needed libraries and load the latest one of each or fire an action to notify a plugin that its library load request can't be fulfilled so it can notify the admin user and avoid using the library.
> >
> > -Mike
> > _______________________________________________
> > wp-hackers mailing list
> > wp-hackers at lists.automattic.com
> > http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 
> 
> ------------------------------
> 
> Message: 5
> Date: Mon, 29 Oct 2012 02:38:30 -0400
> From: Mike Schinkel <mike at newclarity.net>
> Subject: Re: [wp-hackers] auto-loading plugin deps ( prev: pluggable
> 	functions )
> To: wp-hackers at lists.automattic.com
> Message-ID: <413E4C91-4720-4CD8-8F47-C78862E17E89 at newclarity.net>
> Content-Type: text/plain;	charset=us-ascii
> 
> Hi Ben,
> 
> Thanks for the follow up.
> 
> On Oct 29, 2012, at 1:17 AM, Ben Lobaugh <lists at lobaugh.net> wrote:
> > I think it would be great to see something similar to the enqueue scripts that you can pass required dependencies to, probably the slug of the plugin from the repo. If it does not exist then WP will disable the plugin and/or prompt you to install the dependency to enable the plugin.
> > 
> > I have written a few library plugins as well and I can sympathize with the dependency management and load order of plugins. It is tricky with the current way WP works, but I do not think it would be too difficult to add something of that sort to the system. 
> 
> 
> For clarity I was explicitly proposing simple PHP libraries and not wanting to open the can of worms that would be plugin dependency management.  After considering the problem for a long time I think the reason this has not gotten addressed yet for plugins is that plugins are for users not for developers. Developers need something lower level, i.e. ability to just safely "require()" a PHP library.  
> 
> There's really no need for tree-based dependency management and no need for all the complexity or overhead of making sure plugins are auto-downloaded, safely activated and then loaded in the correct order.  All that's needed is the ability to signal to WordPress that we need a bit of PHP code that someone else developed, named and versioned and that please WordPress only require() one of them.
> 
> > Check and see if anything like that exists on Trac,
> 
> My memory is that there's been several discussions about parts of this on trac or here on wp-hackers over the years.  I'm not particularly good at finding them though so I'll leave that to others to find.
> 
> > if not would you be interested in exploring a solution to patch core to do that with me?
> 
> I was proposing to offer a strawman patch if anyone of the core team would be open to considering it.  Otherwise it would rather be a waste of effort, I think.
> 
> -Mike
> 
> 
> 
> ------------------------------
> 
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
> 
> 
> End of wp-hackers Digest, Vol 93, Issue 36
> ******************************************
 		 	   		  

From dusan.dzurdzic at gmail.com  Mon Oct 29 19:17:56 2012
From: dusan.dzurdzic at gmail.com (Dusan Dzurdzic)
Date: Mon, 29 Oct 2012 20:17:56 +0100
Subject: [wp-hackers] WP_Query loop generates a lot of mySQL queries
Message-ID: <508ED664.6050804@gmail.com>

Hello friends,

I would like to start a discussion regarding wp_query() loops, both for 
single loop on a page, or for multiples wp_query() loops on the same page.

I'm creating a template with a few pages. On index page I'm retrieving 
posts from a few different custom post types, with a few wp_query() 
loops. On the other page, eg domain.com/somepage I'm using one loop to 
retrieve certain posts. On that page, I'm producing around 5 mySQL 
queries per returned post (posts_per_page=1), for 5 posts 
(posts_per_page=5) I'm getting around 30 mySQL queries.
On the index page, domain.com, for 4 columns multiple with 5 
posts_per_page, I got around 130 mySQL queries.  Obviously I'm not 
getting an array with posts information.

Is there any way to merge them, or something similar. Maybe another 
approach..   I have pasted my code on pastie, for easy lookup: 
http://pastie.org/5130894 .

I saw few more peoples on wordpress.org/support and 
wordpress.stackexchange.com troubling exact problem, but there were no 
any answer, so I'm writing to You (wp-hackers lists on automattic).

Thanks

Dusan Dzurdzic

From otto at ottodestruct.com  Mon Oct 29 20:38:46 2012
From: otto at ottodestruct.com (Otto)
Date: Mon, 29 Oct 2012 15:38:46 -0500
Subject: [wp-hackers] WP_Query loop generates a lot of mySQL queries
In-Reply-To: <508ED664.6050804@gmail.com>
References: <508ED664.6050804@gmail.com>
Message-ID: <CAD-FghxY=OyzYBDfJtS0882Ya8iPpy=JbVH-RCS7DFfv+dW3oA@mail.gmail.com>

Turn off the meta and term caching, since you're not using them in
that Loop. Set 'update_post_meta_cache' and 'update_post_term_cache'
to false in your WP_Query's.

-Otto


On Mon, Oct 29, 2012 at 2:17 PM, Dusan Dzurdzic
<dusan.dzurdzic at gmail.com> wrote:
> Hello friends,
>
> I would like to start a discussion regarding wp_query() loops, both for
> single loop on a page, or for multiples wp_query() loops on the same page.
>
> I'm creating a template with a few pages. On index page I'm retrieving posts
> from a few different custom post types, with a few wp_query() loops. On the
> other page, eg domain.com/somepage I'm using one loop to retrieve certain
> posts. On that page, I'm producing around 5 mySQL queries per returned post
> (posts_per_page=1), for 5 posts (posts_per_page=5) I'm getting around 30
> mySQL queries.
> On the index page, domain.com, for 4 columns multiple with 5 posts_per_page,
> I got around 130 mySQL queries.  Obviously I'm not getting an array with
> posts information.
>
> Is there any way to merge them, or something similar. Maybe another
> approach..   I have pasted my code on pastie, for easy lookup:
> http://pastie.org/5130894 .
>
> I saw few more peoples on wordpress.org/support and
> wordpress.stackexchange.com troubling exact problem, but there were no any
> answer, so I'm writing to You (wp-hackers lists on automattic).
>
> Thanks
>
> Dusan Dzurdzic
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers

From johnbillion+wp at gmail.com  Mon Oct 29 21:08:07 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Mon, 29 Oct 2012 21:08:07 +0000
Subject: [wp-hackers] WP_Query loop generates a lot of mySQL queries
In-Reply-To: <CAD-FghxY=OyzYBDfJtS0882Ya8iPpy=JbVH-RCS7DFfv+dW3oA@mail.gmail.com>
References: <508ED664.6050804@gmail.com>
	<CAD-FghxY=OyzYBDfJtS0882Ya8iPpy=JbVH-RCS7DFfv+dW3oA@mail.gmail.com>
Message-ID: <CAOqAKWAfsmt7QmcY9htYvg+MnAGcDbOCEQ22T_KM3DCA-keevA@mail.gmail.com>

On 29 October 2012 20:38, Otto <otto at ottodestruct.com> wrote:
> Turn off the meta and term caching, since you're not using them in
> that Loop. Set 'update_post_meta_cache' and 'update_post_term_cache'
> to false in your WP_Query's.

I wonder if core could lazy-load the meta cache or term cache the
first time a meta or term function is called within a loop?

From joshua.sibelman at gmail.com  Mon Oct 29 21:30:46 2012
From: joshua.sibelman at gmail.com (Josh)
Date: Mon, 29 Oct 2012 14:30:46 -0700
Subject: [wp-hackers] WP_Query vs. get_posts
Message-ID: <1D2D5F6DA3734ED981BB5B955B3D61E8@gmail.com>

I have a general question about which of these is most ideal for use in shortcodes.

I currently use Posts 2 Posts a lot in tandem with shortcodes to display connected data for a post. In the shortcodes I have traditionally used get_posts to retrieve the connected data, but reading the Posts 2 Posts documentation I see that there's a way to interact with a WP_Query object to more efficiently grab all the connected posts. 

This raises a question in my mind generally regarding the relative efficiency of get_posts vs. WP_Query. Looking at the amount of data in the WP_Query object, it's starting to look to me like that's generally a superior way to retrieve post data than get_posts. 

Do any of you have a particular preference for one over the other, and if so why?

Thanks,
Josh


-- 
Josh
Sent with Sparrow (http://www.sparrowmailapp.com/?sig)


From jer at simianuprising.com  Mon Oct 29 22:03:32 2012
From: jer at simianuprising.com (Jeremy Clarke)
Date: Mon, 29 Oct 2012 18:03:32 -0400
Subject: [wp-hackers] WP_Query vs. get_posts
In-Reply-To: <1D2D5F6DA3734ED981BB5B955B3D61E8@gmail.com>
References: <1D2D5F6DA3734ED981BB5B955B3D61E8@gmail.com>
Message-ID: <CAAHgzDMpi-wygcOHP10OLcuzKueVFc6cGXBZBaWZjtFZQ4wzdQ@mail.gmail.com>

I've never found get_posts to be useful for anything other than avoiding
having to deal with an object (i.e. if someone doesn't know how to use
objects at all, in which case they should take this opportunity to learn ;)

WP_Query is way more powerful and get_posts still does all the work to set
up a WP_Query object before passing you back an array of posts, so there's
no meaningful performance hit.

IMHO get_posts belongs in the useless heap with query_posts(), though it's
not nearly as bad because at least it doesn't stomp on the global query
variables.


-- 
Jeremy Clarke ? jeremyclarke.org
Code and Design ? globalvoicesonline.org

From otto at ottodestruct.com  Tue Oct 30 14:29:42 2012
From: otto at ottodestruct.com (Otto)
Date: Tue, 30 Oct 2012 09:29:42 -0500
Subject: [wp-hackers] WP_Query loop generates a lot of mySQL queries
In-Reply-To: <CAOqAKWAfsmt7QmcY9htYvg+MnAGcDbOCEQ22T_KM3DCA-keevA@mail.gmail.com>
References: <508ED664.6050804@gmail.com>
	<CAD-FghxY=OyzYBDfJtS0882Ya8iPpy=JbVH-RCS7DFfv+dW3oA@mail.gmail.com>
	<CAOqAKWAfsmt7QmcY9htYvg+MnAGcDbOCEQ22T_KM3DCA-keevA@mail.gmail.com>
Message-ID: <CAD-FghydFLURP-NNm-OAybEeYwHXJcr6LSbyoN6D0BYCWh+c2w@mail.gmail.com>

On Mon, Oct 29, 2012 at 4:08 PM, John Blackbourn
<johnbillion+wp at gmail.com> wrote:
> On 29 October 2012 20:38, Otto <otto at ottodestruct.com> wrote:
>> Turn off the meta and term caching, since you're not using them in
>> that Loop. Set 'update_post_meta_cache' and 'update_post_term_cache'
>> to false in your WP_Query's.
>
> I wonder if core could lazy-load the meta cache or term cache the
> first time a meta or term function is called within a loop?

Sure, but it probably would not add a lot of benefit, since almost
every Loop uses terms and/or meta in some way. It's only small custom
loops like this that don't use those.

-Otto

From tom at thejenkinsweb.com  Tue Oct 30 16:29:25 2012
From: tom at thejenkinsweb.com (Tom Jenkins)
Date: Tue, 30 Oct 2012 11:29:25 -0500
Subject: [wp-hackers] register_post_type not completing with capability_type
	set to custom value
Message-ID: <CAKGi00LeVL1i92oxWa_J-47PgCD8Pbkgjo2Z4y7BK4ParOUMAw@mail.gmail.com>

I have the following code to register a custom post type and taxonomy:

            $pcats = array(
                'labels'            => array(
                    'name'          => 'Parts Categories',
                    'singular_name' => 'Parts Category',
                ),
                'show_tagcloud'     => FALSE,
                'hierarchical'      => TRUE,
                'show_in_nav_menus' => FALSE
            );
            register_taxonomy( 'parts-category', 'adc_pfinder', $pcats );

            $labels = array(
                'name'               => 'Parts',
                'singular_name'      => 'Part',
                'add_new_item'       => 'Add New Part',
                'edit_item'          => 'Edit Part',
                'new_item'           => 'New Part',
                'view_item'          => 'View Part',
                'search_items'       => 'Search Parts',
                'not_found'          => 'No parts found',
                'not_found_in_trash' => 'No parts found in Trash',
            );

            $taxonomies   = array( 'parts-category' );
            $supports     = array( 'title', 'editor', 'thumbnail',
'revisions' );

            $post_type_args = array(
                'labels'               => $labels,
                'description'          => 'Parts available for sale by ADS
Members.',
                'public'               => TRUE,
                'exclude_from_search'  => TRUE,
                'publicly_queryable'   => true,
                'show_ui'              => TRUE,
                'show_in_menu'         => TRUE,
                'show_in_nav_menus'    => true,
                'menu_position'        => 25,
                'menu_icon'            => plugins_url(
'/images/parts_spriteslice.png', ASDSPF_PLUGIN_FILE ),
                'capability_type'      => 'adspart',
                'map_meta_cap'         => TRUE,
                'hierarchical'         => FALSE,
                'supports'             => $supports,
                'register_meta_box_cb' => array( &$this, 'meta_boxes' ),
                'taxonomies'           => $taxonomies,
                'has_archive'          => true,
                'rewrite'              => array( 'slug'       => 'part',
                                                 'with_front' => FALSE ),
                'query_var'            => TRUE
            );

            register_post_type( 'adc_pfinder', $post_type_args );


The capability_type is where the failure is occurring. If I change the
capability_type to post the post type shows up and everything works. Trying
to use another value prevents it from working. I need the capability_type
set so I can set user roles around it. Can anyone spot what's wrong here?
I've been banging my head against the wall on this one.

Thanks,

Tom

From johnbillion+wp at gmail.com  Tue Oct 30 16:46:10 2012
From: johnbillion+wp at gmail.com (John Blackbourn)
Date: Tue, 30 Oct 2012 16:46:10 +0000
Subject: [wp-hackers] register_post_type not completing with
 capability_type set to custom value
In-Reply-To: <CAKGi00LeVL1i92oxWa_J-47PgCD8Pbkgjo2Z4y7BK4ParOUMAw@mail.gmail.com>
References: <CAKGi00LeVL1i92oxWa_J-47PgCD8Pbkgjo2Z4y7BK4ParOUMAw@mail.gmail.com>
Message-ID: <CAOqAKWBikaz3_tscRph_8JgGRfqXqj1OqdfympEUUjpxRSPa8w@mail.gmail.com>

On 30 October 2012 16:29, Tom Jenkins <tom at thejenkinsweb.com> wrote:
> I have the following code to register a custom post type and taxonomy:
>
>             $pcats = array(
>                 'labels'            => array(
>                     'name'          => 'Parts Categories',
>                     'singular_name' => 'Parts Category',
>                 ),
>                 'show_tagcloud'     => FALSE,
>                 'hierarchical'      => TRUE,
>                 'show_in_nav_menus' => FALSE
>             );
>             register_taxonomy( 'parts-category', 'adc_pfinder', $pcats );
>
>             $labels = array(
>                 'name'               => 'Parts',
>                 'singular_name'      => 'Part',
>                 'add_new_item'       => 'Add New Part',
>                 'edit_item'          => 'Edit Part',
>                 'new_item'           => 'New Part',
>                 'view_item'          => 'View Part',
>                 'search_items'       => 'Search Parts',
>                 'not_found'          => 'No parts found',
>                 'not_found_in_trash' => 'No parts found in Trash',
>             );
>
>             $taxonomies   = array( 'parts-category' );
>             $supports     = array( 'title', 'editor', 'thumbnail',
> 'revisions' );
>
>             $post_type_args = array(
>                 'labels'               => $labels,
>                 'description'          => 'Parts available for sale by ADS
> Members.',
>                 'public'               => TRUE,
>                 'exclude_from_search'  => TRUE,
>                 'publicly_queryable'   => true,
>                 'show_ui'              => TRUE,
>                 'show_in_menu'         => TRUE,
>                 'show_in_nav_menus'    => true,
>                 'menu_position'        => 25,
>                 'menu_icon'            => plugins_url(
> '/images/parts_spriteslice.png', ASDSPF_PLUGIN_FILE ),
>                 'capability_type'      => 'adspart',
>                 'map_meta_cap'         => TRUE,
>                 'hierarchical'         => FALSE,
>                 'supports'             => $supports,
>                 'register_meta_box_cb' => array( &$this, 'meta_boxes' ),
>                 'taxonomies'           => $taxonomies,
>                 'has_archive'          => true,
>                 'rewrite'              => array( 'slug'       => 'part',
>                                                  'with_front' => FALSE ),
>                 'query_var'            => TRUE
>             );
>
>             register_post_type( 'adc_pfinder', $post_type_args );
>
>
> The capability_type is where the failure is occurring. If I change the
> capability_type to post the post type shows up and everything works. Trying
> to use another value prevents it from working. I need the capability_type
> set so I can set user roles around it. Can anyone spot what's wrong here?
> I've been banging my head against the wall on this one.

Does your own user account have the capability of 'edit_adpart' etc so
the admin menu shows up for you? If not, then you won't see anything.

John

From lists at lobaugh.net  Tue Oct 30 16:54:57 2012
From: lists at lobaugh.net (Ben Lobaugh)
Date: Tue, 30 Oct 2012 09:54:57 -0700
Subject: [wp-hackers] auto-loading plugin deps ( prev: pluggable
 functions )
In-Reply-To: <413E4C91-4720-4CD8-8F47-C78862E17E89@newclarity.net>
References: <CAFQFuXOd7UB=tqVgkFcGSxcjPAppF3rCakRoxXEiQSYBWAOt8w@mail.gmail.com>
	<CAKkHmjXxkbv5kKyMudQEK+NgWVyZ2LD-tBBqU=c_Gm1U4M9FqA@mail.gmail.com>
	<2F2317AC-60D5-4F29-8D32-C94DEF7AF5B4@newclarity.net>
	<CAKkHmjXyyci11YipfKfutnYEdPLKrC22To=iNpkLqYSBfivQMA@mail.gmail.com>
	<04EF3F5D-781D-454A-BE54-566F180A549C@newclarity.net>
	<508DCCB9.9060202@lobaugh.net>
	<2E189F37-8B7F-4D8B-A59D-1956C848ACD3@newclarity.net>
	<CAKkHmjUphoMwyqwrpxuRj-ZqtA9t2_0zThoBVHoDktmqq=EqNg@mail.gmail.com>
	<82AEB76B-91D6-4F64-92BD-8D622A5E821F@newclarity.net>
	<CADN2qFMQ1Mg_mqmwrmc7oSq7N-8z9-_yQv9xE6NJ0a0W1phU-Q@mail.gmail.com>
	<51B39795-1FDE-412E-8718-44F8C861CD1C@newclarity.net>
	<508E117F.9010706@lobaugh.net>
	<413E4C91-4720-4CD8-8F47-C78862E17E89@newclarity.net>
Message-ID: <50900661.3070007@lobaugh.net>

Mike,

Merry Christmas!

http://core.trac.wordpress.org/ticket/22316

You can use that to load libs as plugins



On 10/28/12 11:38 PM, Mike Schinkel wrote:
> Hi Ben,
>
> Thanks for the follow up.
>
> On Oct 29, 2012, at 1:17 AM, Ben Lobaugh <lists at lobaugh.net> wrote:
>> I think it would be great to see something similar to the enqueue scripts that you can pass required dependencies to, probably the slug of the plugin from the repo. If it does not exist then WP will disable the plugin and/or prompt you to install the dependency to enable the plugin.
>>
>> I have written a few library plugins as well and I can sympathize with the dependency management and load order of plugins. It is tricky with the current way WP works, but I do not think it would be too difficult to add something of that sort to the system.
>
> For clarity I was explicitly proposing simple PHP libraries and not wanting to open the can of worms that would be plugin dependency management.  After considering the problem for a long time I think the reason this has not gotten addressed yet for plugins is that plugins are for users not for developers. Developers need something lower level, i.e. ability to just safely "require()" a PHP library.
>
> There's really no need for tree-based dependency management and no need for all the complexity or overhead of making sure plugins are auto-downloaded, safely activated and then loaded in the correct order.  All that's needed is the ability to signal to WordPress that we need a bit of PHP code that someone else developed, named and versioned and that please WordPress only require() one of them.
>
>> Check and see if anything like that exists on Trac,
> My memory is that there's been several discussions about parts of this on trac or here on wp-hackers over the years.  I'm not particularly good at finding them though so I'll leave that to others to find.
>
>> if not would you be interested in exploring a solution to patch core to do that with me?
> I was proposing to offer a strawman patch if anyone of the core team would be open to considering it.  Otherwise it would rather be a waste of effort, I think.
>
> -Mike
>
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers


From tcbarrett at gmail.com  Tue Oct 30 16:55:49 2012
From: tcbarrett at gmail.com (Tom Barrett)
Date: Tue, 30 Oct 2012 16:55:49 +0000
Subject: [wp-hackers] register_post_type not completing with
 capability_type set to custom value
In-Reply-To: <CAKGi00LeVL1i92oxWa_J-47PgCD8Pbkgjo2Z4y7BK4ParOUMAw@mail.gmail.com>
References: <CAKGi00LeVL1i92oxWa_J-47PgCD8Pbkgjo2Z4y7BK4ParOUMAw@mail.gmail.com>
Message-ID: <CAEgmxaaSRzFs0_vaquVLfJcSV2s8LDDKxy41LSHkFoOCJUzb1g@mail.gmail.com>

I have something like this in my dev for adding caps to users as I update
and change things:

$cpt_caps = array( 'edit_post', 'read_post', 'delete_post', 'edit_posts',
'edit_others_posts', 'publish_posts', 'read_private_posts' );
$admin    = &get_role( 'administrator' );
$mycpts   = array( 'adc_pfinder' );
foreach( $mycpts as $cptslug ) :
  $cpt  = get_post_type_object( $cptslug );
  foreach( $cpt_caps as $cap ) :
    $admin->add_cap( $cpt->cap->$cap );
  endforeach;
endforeach;

(off the top of my head, may contain syntax errors)

-- 
http://www.tcbarrett.com | http://gplus.to/tcbarrett |
http://twitter.com/tcbarrett

From tom at thejenkinsweb.com  Tue Oct 30 19:34:05 2012
From: tom at thejenkinsweb.com (Tom Jenkins)
Date: Tue, 30 Oct 2012 14:34:05 -0500
Subject: [wp-hackers] register_post_type not completing with
 capability_type set to custom value
In-Reply-To: <CAEgmxaaSRzFs0_vaquVLfJcSV2s8LDDKxy41LSHkFoOCJUzb1g@mail.gmail.com>
References: <CAKGi00LeVL1i92oxWa_J-47PgCD8Pbkgjo2Z4y7BK4ParOUMAw@mail.gmail.com>
	<CAEgmxaaSRzFs0_vaquVLfJcSV2s8LDDKxy41LSHkFoOCJUzb1g@mail.gmail.com>
Message-ID: <CAKGi00K8hW9iHLJV+ErhjWQcQ-TGwDS8rF_jMR9OvqUoRp6vaw@mail.gmail.com>

This is one of those "duh" moments, Thanks John and Tom, that was the issue.

Tom



On Tue, Oct 30, 2012 at 11:55 AM, Tom Barrett <tcbarrett at gmail.com> wrote:

> I have something like this in my dev for adding caps to users as I update
> and change things:
>
> $cpt_caps = array( 'edit_post', 'read_post', 'delete_post', 'edit_posts',
> 'edit_others_posts', 'publish_posts', 'read_private_posts' );
> $admin    = &get_role( 'administrator' );
> $mycpts   = array( 'adc_pfinder' );
> foreach( $mycpts as $cptslug ) :
>   $cpt  = get_post_type_object( $cptslug );
>   foreach( $cpt_caps as $cap ) :
>     $admin->add_cap( $cpt->cap->$cap );
>   endforeach;
> endforeach;
>
> (off the top of my head, may contain syntax errors)
>
> --
> http://www.tcbarrett.com | http://gplus.to/tcbarrett |
> http://twitter.com/tcbarrett
> _______________________________________________
> wp-hackers mailing list
> wp-hackers at lists.automattic.com
> http://lists.automattic.com/mailman/listinfo/wp-hackers
>

From will.davis at gmail.com  Tue Oct 30 20:02:14 2012
From: will.davis at gmail.com (William P. Davis)
Date: Tue, 30 Oct 2012 20:02:14 +0000
Subject: [wp-hackers] [WordPress Trac] #15705: I can't login to admin.
In-Reply-To: <065.b86b4a739540e01fd18fc3b6ead65971@wordpress.org>
References: <050.8d71d3f704255a09b70059c06f3486d5@wordpress.org>
	<065.b86b4a739540e01fd18fc3b6ead65971@wordpress.org>
Message-ID: <940430812-1351627335-cardhu_decombobulator_blackberry.rim.net-227545211-@b25.c4.bise6.blackberry>

Guys, bugs like this obviously wouldn't happen if we would just switch to Git. 
Sent from my BlackBerry

-----Original Message-----
From: "WordPress Trac" <noreply at wordpress.org>
Date: Tue, 30 Oct 2012 19:54:05 
Reply-To: wp-hackers at lists.automattic.com
Cc: <wp-trac at lists.automattic.com>
Subject: Re: [WordPress Trac] #15705: I can't login to admin.

#15705: I can't login to admin.
-------------------------------------------+-----------------------
 Reporter:  ljmonet                        |       Owner:
     Type:  defect (bug)                   |      Status:  reopened
 Priority:  highest omg bbq                |   Milestone:
Component:  Trash                          |     Version:  3.1
 Severity:  blocker                        |  Resolution:
 Keywords:  has-patch nacin-unlikes close  |
-------------------------------------------+-----------------------
Changes (by markoheijnen):

 * keywords:  has-patch => has-patch nacin-unlikes close


-- 
Ticket URL: <http://core.trac.wordpress.org/ticket/15705#comment:31>
WordPress Trac <http://core.trac.wordpress.org/>
WordPress blogging software

From bogus@does.not.exist.com  Wed Oct 24 21:06:28 2012
From: bogus@does.not.exist.com ()
Date: Wed, 24 Oct 2012 21:06:28 -0000
Subject: No subject
Message-ID: <mailman.9.1361042034.1474.wp-hackers@lists.automattic.com>

something, while =91API=92 plugins just define a list of methods. Child plu=
gins
of =91parent=92 plugins would extend existing features, or build new ones u=
sing
the information managed by the =91parent=92. Taking WP SlimStat (analytics
plugin) as an example, it is a =91parent=92 plugin that offers a bunch of
features out of the box. Its =91children=92 could extend it by adding heatm=
aps,
or daily reports via email, or ways to export the data. They would use
the =91infrastructure=92 and the API available to do that.

Children plugin of =91API=92 plugins, on the other side, would CREATE new
functionality based on a common core: Twitter plugins (oauth) are just one
example, where the oauth part comes with the API, so that plugin devs don=
=92t
have to reinvent the wheel every time.

Some users contacted me off-list to offer support and give me feedback on
this topic. There=92s one phrase from one of the many tickets on Trac on th=
e
subject that I=92d like to quote here:

Dependencies help encourage devs to collaborate on common APIs that they
can all use for their own modules. ... Can you image how much repeated
code/effort has gone into the bajillion Twitter plugins currently in the
directory?

This is something that WordPress devs should really keep in mind: the
platform is great ALSO because thousands of plugin developers have decided
to actively contribute to the project by releasing their code, and by
donating their time and skills for a greater cause. Creating an environment
that encourages these people to collaborate and share portions of their
code can only benefit WordPress even more.

No doubt that all the efforts in improving revisions, post formats, UI etc,
that you guys are pouring into the development of 3.6 is priceless, but
plugin devs would like to get some love too, you know (at least from the
sense I get reading stuff around).

I understand that the implementation of dependencies would open a huge can
of worms ( http://core.trac.wordpress.org/ticket/22316 ), but we could
start working on a simple cosmetic change in the Plugins admin panel, where
plugins that declare their dependence on another plugin are grouped
together, and maybe listed under a =91collapsed=92 box or a separate
sub-tab =91add-ons=92 (next to all, active, inactive, drop-ins) or somethin=
g
like that.

This could be a good starting point, and make =91non-techies=92 happy, by
keeping the admin clean and not scaring people away with long flat lists of
plugins. To me (maybe because I=92m a techie) it looks more confusing the w=
ay
plugins are managed now.

Ciao,
Dino.


 *From:* Otto <otto at ottodestruct.com>
*Sent:* February 16, 2013 12:18 PM
*To:* wp-hackers at lists.automattic.com
*Subject:* Re: [wp-hackers] Child plugins (add-ons)

On Sat, Feb 16, 2013 at 11:03 AM, Kevinjohn Gallagher
<kevinjohngallagher at hotmail.com> wrote:
> Child plugins are absolutely the way forward.

I tried this idea, once upon a time. Everybody hated it. Users found
it confusing and difficult to manage. Many complained about having
many plugins instead of just one. Things like that. It's a good idea,
and I personally like it, but hey, I'm a techie and so are you.
Non-technical users hate it. Switching to an all-in-one approach with
checkboxes to turn parts on and off basically ended those support
messages.

-Otto
_______________________________________________
wp-hackers mailing list
wp-hackers at lists.automattic.com
http://lists.automattic.com/mailman/listinfo/wp-hackers

From bogus@does.not.exist.com  Wed Oct 24 21:06:28 2012
From: bogus@does.not.exist.com ()
Date: Wed, 24 Oct 2012 21:06:28 -0000
Subject: No subject
Message-ID: <mailman.13.1365547928.1474.wp-hackers@lists.automattic.com>

wp_get_attachment_image_src( ... get the custom option for the
attachment_id here ... )

The above solution should work, but I was wondering if anyone could
suggest a better solution?

Part of me was wondering if I could include a "blog image" check box
for image uploads. All one would have to do is check the box and it
would be the "featured" image for the entire blog.

Just curious if anyone has any suggestions for a better, more
streamlined, solution? Have you done something similar? If so, what
route did you take?

Thank you!

Cheers,
Micky

From bogus@does.not.exist.com  Wed Oct 24 21:06:28 2012
From: bogus@does.not.exist.com ()
Date: Wed, 24 Oct 2012 21:06:28 -0000
Subject: No subject
Message-ID: <mailman.14.1365769496.1474.wp-hackers@lists.automattic.com>

> Based on these discussions, and while it pains me I must reverse my earlier endorsement. I think it would be a mistake for WordPress and it's community if this were project were accepted for GSOC.  There are too many decisions that should be considered by more than a small number of eyes to allow a 2 month window to "bake in" it's architecture. 

The idea of the GSoC project is to go from what we have now (i.e.
nothing) to something usable. Core integration will have further
considerations for sure; see Bryan's reply for further on this.

> P.S. Ryan: Please do not feel that I am attacking you in any way.

This isn't my first rodeo. :)

-- 
Ryan McCue
<http://ryanmccue.info/>

